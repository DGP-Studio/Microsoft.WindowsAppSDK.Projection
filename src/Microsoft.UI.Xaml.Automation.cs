//------------------------------------------------------------------------------
// <auto-generated>
//     This file was generated by cswinrt.exe version 2.2.0.241111.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Diagnostics;
using System.Diagnostics.CodeAnalysis;
using System.Linq.Expressions;
using System.Reflection;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;
using WinRT;
using WinRT.Interop;


#pragma warning disable 0169 // warning CS0169: The field '...' is never used
#pragma warning disable 0649 // warning CS0169: Field '...' is never assigned to
#pragma warning disable CA2207, CA1063, CA1033, CA1001, CA2213

namespace Microsoft.UI.Xaml.Automation
{
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")]
    [global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Automation.AnnotationPatternIdentifiers))]
    [global::ABI.Microsoft.UI.Xaml.Automation.AnnotationPatternIdentifiersRcwFactory]
    [global::WinRT.ProjectedRuntimeClass(typeof(IAnnotationPatternIdentifiers))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    public sealed class AnnotationPatternIdentifiers : global::System.Runtime.InteropServices.ICustomQueryInterface, IWinRTObject, IEquatable<AnnotationPatternIdentifiers>
    {
        private IntPtr ThisPtr => _inner == null ? (((IWinRTObject)this).NativeObject).ThisPtr : _inner.ThisPtr;

        private readonly IObjectReference _inner = null;



        private IObjectReference _objRef_global__Microsoft_UI_Xaml_Automation_IAnnotationPatternIdentifiers => _inner;


        public static I As<I>() => ActivationFactory.Get("Microsoft.UI.Xaml.Automation.AnnotationPatternIdentifiers").AsInterface<I>();

        private static volatile IObjectReference ___objRef_global__Microsoft_UI_Xaml_Automation_IAnnotationPatternIdentifiersStatics;
        private static IObjectReference _objRef_global__Microsoft_UI_Xaml_Automation_IAnnotationPatternIdentifiersStatics
        {
            get
            { 
                var factory = ___objRef_global__Microsoft_UI_Xaml_Automation_IAnnotationPatternIdentifiersStatics;
                if (factory != null && factory.IsInCurrentContext)
                {
                    return factory;
                }
                else
                {
                    return ___objRef_global__Microsoft_UI_Xaml_Automation_IAnnotationPatternIdentifiersStatics = ActivationFactory.Get("Microsoft.UI.Xaml.Automation.AnnotationPatternIdentifiers", global::ABI.Microsoft.UI.Xaml.Automation.IAnnotationPatternIdentifiersStaticsMethods.IID);
                }
            }
        }

        public static AutomationProperty AnnotationTypeIdProperty => global::ABI.Microsoft.UI.Xaml.Automation.IAnnotationPatternIdentifiersStaticsMethods.get_AnnotationTypeIdProperty(_objRef_global__Microsoft_UI_Xaml_Automation_IAnnotationPatternIdentifiersStatics);

        public static AutomationProperty AnnotationTypeNameProperty => global::ABI.Microsoft.UI.Xaml.Automation.IAnnotationPatternIdentifiersStaticsMethods.get_AnnotationTypeNameProperty(_objRef_global__Microsoft_UI_Xaml_Automation_IAnnotationPatternIdentifiersStatics);

        public static AutomationProperty AuthorProperty => global::ABI.Microsoft.UI.Xaml.Automation.IAnnotationPatternIdentifiersStaticsMethods.get_AuthorProperty(_objRef_global__Microsoft_UI_Xaml_Automation_IAnnotationPatternIdentifiersStatics);

        public static AutomationProperty DateTimeProperty => global::ABI.Microsoft.UI.Xaml.Automation.IAnnotationPatternIdentifiersStaticsMethods.get_DateTimeProperty(_objRef_global__Microsoft_UI_Xaml_Automation_IAnnotationPatternIdentifiersStatics);

        public static AutomationProperty TargetProperty => global::ABI.Microsoft.UI.Xaml.Automation.IAnnotationPatternIdentifiersStaticsMethods.get_TargetProperty(_objRef_global__Microsoft_UI_Xaml_Automation_IAnnotationPatternIdentifiersStatics);

        public static AnnotationPatternIdentifiers FromAbi(IntPtr thisPtr)
        {
            if (thisPtr == IntPtr.Zero) return null;
            return MarshalInspectable<AnnotationPatternIdentifiers>.FromAbi(thisPtr);
        }

        internal AnnotationPatternIdentifiers(IObjectReference objRef)
        {
            _inner = objRef.As(global::ABI.Microsoft.UI.Xaml.Automation.IAnnotationPatternIdentifiersMethods.IID);

        }


        public static bool operator ==(AnnotationPatternIdentifiers x, AnnotationPatternIdentifiers y) => (x?.ThisPtr ?? IntPtr.Zero) == (y?.ThisPtr ?? IntPtr.Zero);
        public static bool operator !=(AnnotationPatternIdentifiers x, AnnotationPatternIdentifiers y) => !(x == y);
        public bool Equals(AnnotationPatternIdentifiers other) => this == other;
        public override bool Equals(object obj) => obj is AnnotationPatternIdentifiers that && this == that;
        public override int GetHashCode() => ThisPtr.GetHashCode();


        bool IWinRTObject.HasUnwrappableNativeObject => true;
        IObjectReference IWinRTObject.NativeObject => _inner;
        private volatile global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> _queryInterfaceCache;
        private global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> MakeQueryInterfaceCache()
        {
            global::System.Threading.Interlocked.CompareExchange(ref _queryInterfaceCache, new global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference>(), null); 
            return _queryInterfaceCache;
        }
        global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> IWinRTObject.QueryInterfaceCache => _queryInterfaceCache ?? MakeQueryInterfaceCache();
        private volatile global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> _additionalTypeData;
        private global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> MakeAdditionalTypeData()
        {
            global::System.Threading.Interlocked.CompareExchange(ref _additionalTypeData, new global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object>(), null); 
            return _additionalTypeData;
        }
        global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> IWinRTObject.AdditionalTypeData => _additionalTypeData ?? MakeAdditionalTypeData();

        private struct InterfaceTag<I>{};


        private bool IsOverridableInterface(Guid iid) => false;

        global::System.Runtime.InteropServices.CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(ref Guid iid, out IntPtr ppv)
        {
            ppv = IntPtr.Zero;
            if (IsOverridableInterface(iid) || global::WinRT.Interop.IID.IID_IInspectable == iid)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
            }

            if (((IWinRTObject)this).NativeObject.TryAs(iid, out ppv) >= 0)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.Handled;
            }

            return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
        }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")][global::WinRT.WinRTExposedType(typeof(global::WinRT.EnumTypeDetails<AnnotationType>))][global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    public enum AnnotationType : int
    {
        Unknown = unchecked((int)0xea60),
        SpellingError = unchecked((int)0xea61),
        GrammarError = unchecked((int)0xea62),
        Comment = unchecked((int)0xea63),
        FormulaError = unchecked((int)0xea64),
        TrackChanges = unchecked((int)0xea65),
        Header = unchecked((int)0xea66),
        Footer = unchecked((int)0xea67),
        Highlighted = unchecked((int)0xea68),
        Endnote = unchecked((int)0xea69),
        Footnote = unchecked((int)0xea6a),
        InsertionChange = unchecked((int)0xea6b),
        DeletionChange = unchecked((int)0xea6c),
        MoveChange = unchecked((int)0xea6d),
        FormatChange = unchecked((int)0xea6e),
        UnsyncedChange = unchecked((int)0xea6f),
        EditingLockedChange = unchecked((int)0xea70),
        ExternalChange = unchecked((int)0xea71),
        ConflictingChange = unchecked((int)0xea72),
        Author = unchecked((int)0xea73),
        AdvancedProofingIssue = unchecked((int)0xea74),
        DataValidationError = unchecked((int)0xea75),
        CircularReferenceError = unchecked((int)0xea76),
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")][global::WinRT.WinRTExposedType(typeof(global::WinRT.EnumTypeDetails<AutomationActiveEnd>))][global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    public enum AutomationActiveEnd : int
    {
        None = unchecked((int)0),
        Start = unchecked((int)0x1),
        End = unchecked((int)0x2),
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")][global::WinRT.WinRTExposedType(typeof(global::WinRT.EnumTypeDetails<AutomationAnimationStyle>))][global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    public enum AutomationAnimationStyle : int
    {
        None = unchecked((int)0),
        LasVegasLights = unchecked((int)0x1),
        BlinkingBackground = unchecked((int)0x2),
        SparkleText = unchecked((int)0x3),
        MarchingBlackAnts = unchecked((int)0x4),
        MarchingRedAnts = unchecked((int)0x5),
        Shimmer = unchecked((int)0x6),
        Other = unchecked((int)0x7),
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")]
    [global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Automation.AutomationAnnotation))]
    [global::ABI.Microsoft.UI.Xaml.Automation.AutomationAnnotationRcwFactory]
    [global::WinRT.ProjectedRuntimeClass(typeof(IAutomationAnnotation))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    public sealed class AutomationAnnotation : global::Microsoft.UI.Xaml.DependencyObject, global::System.Runtime.InteropServices.ICustomQueryInterface, IWinRTObject, IEquatable<AutomationAnnotation>
    {
        private IntPtr ThisPtr => _inner == null ? (((IWinRTObject)this).NativeObject).ThisPtr : _inner.ThisPtr;

        private readonly IObjectReference _inner = null;



        private IObjectReference _objRef_global__Microsoft_UI_Xaml_Automation_IAutomationAnnotation => _inner;


        private static volatile IObjectReference ___objRef_global__Microsoft_UI_Xaml_Automation_AutomationAnnotation;
        private static IObjectReference _objRef_global__Microsoft_UI_Xaml_Automation_AutomationAnnotation
        {
            get
            { 
                var factory = ___objRef_global__Microsoft_UI_Xaml_Automation_AutomationAnnotation;
                if (factory != null && factory.IsInCurrentContext)
                {
                    return factory;
                }
                else
                {
                    return ___objRef_global__Microsoft_UI_Xaml_Automation_AutomationAnnotation = ActivationFactory.Get("Microsoft.UI.Xaml.Automation.AutomationAnnotation");
                }
            }
        }

        public AutomationAnnotation() :base(global::WinRT.DerivedComposed.Instance)
        {
            _inner = global::ABI.WinRT.Interop.IActivationFactoryMethods.ActivateInstanceUnsafe(_objRef_global__Microsoft_UI_Xaml_Automation_AutomationAnnotation, global::ABI.Microsoft.UI.Xaml.Automation.IAutomationAnnotationMethods.IID);
            ComWrappersSupport.RegisterObjectForInterface(this, ThisPtr);
            ComWrappersHelper.Init(_inner, false);

        }

        private static class _IAutomationAnnotationFactoryMethods
        {
            public static unsafe IntPtr CreateInstance(IObjectReference _obj, AnnotationType type)
            {
                var ThisPtr = _obj.ThisPtr;

                IntPtr __retval = default;
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, AnnotationType, IntPtr*, int>**)ThisPtr)[6](ThisPtr, type, &__retval));
                global::System.GC.KeepAlive(_obj);
                return __retval;
            }

            public static unsafe IntPtr CreateWithElementParameter(IObjectReference _obj, AnnotationType type, global::Microsoft.UI.Xaml.UIElement element)
            {
                var ThisPtr = _obj.ThisPtr;

                ObjectReferenceValue __element = default;
                IntPtr __retval = default;
                try
                {
                    __element = global::ABI.Microsoft.UI.Xaml.UIElement.CreateMarshaler2(element);
                    global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, AnnotationType, IntPtr, IntPtr*, int>**)ThisPtr)[7](ThisPtr, type, MarshalInspectable<object>.GetAbi(__element), &__retval));
                    global::System.GC.KeepAlive(_obj);
                    return __retval;
                }
                finally
                {
                    MarshalInspectable<object>.DisposeMarshaler(__element);
                }
            }
        }

        private static volatile IObjectReference ___objRef_global__Microsoft_UI_Xaml_Automation_IAutomationAnnotationFactory;
        private static IObjectReference _objRef_global__Microsoft_UI_Xaml_Automation_IAutomationAnnotationFactory
        {
            get
            { 
                var factory = ___objRef_global__Microsoft_UI_Xaml_Automation_IAutomationAnnotationFactory;
                if (factory != null && factory.IsInCurrentContext)
                {
                    return factory;
                }
                else
                {
                    return ___objRef_global__Microsoft_UI_Xaml_Automation_IAutomationAnnotationFactory = ActivationFactory.Get("Microsoft.UI.Xaml.Automation.AutomationAnnotation", global::ABI.Microsoft.UI.Xaml.Automation.IAutomationAnnotationFactoryMethods.IID);
                }
            }
        }

        public AutomationAnnotation(AnnotationType type) :base(global::WinRT.DerivedComposed.Instance)
        { 
        IntPtr ptr = (_IAutomationAnnotationFactoryMethods.CreateInstance(_objRef_global__Microsoft_UI_Xaml_Automation_IAutomationAnnotationFactory, type)); 
        try 
        { 
        _inner = ComWrappersSupport.GetObjectReferenceForInterface(ptr, global::ABI.Microsoft.UI.Xaml.Automation.IAutomationAnnotationMethods.IID, false); 

        } 
        finally 
        { 
        MarshalInspectable<object>.DisposeAbi(ptr); 
        }

        ComWrappersSupport.RegisterObjectForInterface(this, ThisPtr);
        ComWrappersHelper.Init(_inner, false);
        }

        public AutomationAnnotation(AnnotationType type, global::Microsoft.UI.Xaml.UIElement element) :base(global::WinRT.DerivedComposed.Instance)
        { 
        IntPtr ptr = (_IAutomationAnnotationFactoryMethods.CreateWithElementParameter(_objRef_global__Microsoft_UI_Xaml_Automation_IAutomationAnnotationFactory, type, element)); 
        try 
        { 
        _inner = ComWrappersSupport.GetObjectReferenceForInterface(ptr, global::ABI.Microsoft.UI.Xaml.Automation.IAutomationAnnotationMethods.IID, false); 

        } 
        finally 
        { 
        MarshalInspectable<object>.DisposeAbi(ptr); 
        }

        ComWrappersSupport.RegisterObjectForInterface(this, ThisPtr);
        ComWrappersHelper.Init(_inner, false);
        }

        public static I As<I>() => ActivationFactory.Get("Microsoft.UI.Xaml.Automation.AutomationAnnotation").AsInterface<I>();

        private static volatile IObjectReference ___objRef_global__Microsoft_UI_Xaml_Automation_IAutomationAnnotationStatics;
        private static IObjectReference _objRef_global__Microsoft_UI_Xaml_Automation_IAutomationAnnotationStatics
        {
            get
            { 
                var factory = ___objRef_global__Microsoft_UI_Xaml_Automation_IAutomationAnnotationStatics;
                if (factory != null && factory.IsInCurrentContext)
                {
                    return factory;
                }
                else
                {
                    return ___objRef_global__Microsoft_UI_Xaml_Automation_IAutomationAnnotationStatics = ActivationFactory.Get("Microsoft.UI.Xaml.Automation.AutomationAnnotation", global::ABI.Microsoft.UI.Xaml.Automation.IAutomationAnnotationStaticsMethods.IID);
                }
            }
        }

        public static global::Microsoft.UI.Xaml.DependencyProperty ElementProperty => global::ABI.Microsoft.UI.Xaml.Automation.IAutomationAnnotationStaticsMethods.get_ElementProperty(_objRef_global__Microsoft_UI_Xaml_Automation_IAutomationAnnotationStatics);

        public static global::Microsoft.UI.Xaml.DependencyProperty TypeProperty => global::ABI.Microsoft.UI.Xaml.Automation.IAutomationAnnotationStaticsMethods.get_TypeProperty(_objRef_global__Microsoft_UI_Xaml_Automation_IAutomationAnnotationStatics);

        public static new AutomationAnnotation FromAbi(IntPtr thisPtr)
        {
            if (thisPtr == IntPtr.Zero) return null;
            return MarshalInspectable<AutomationAnnotation>.FromAbi(thisPtr);
        }

        internal AutomationAnnotation(IObjectReference objRef)
            : base(global::WinRT.DerivedComposed.Instance)

        {
            _inner = objRef.As(global::ABI.Microsoft.UI.Xaml.Automation.IAutomationAnnotationMethods.IID);

        }


        public static bool operator ==(AutomationAnnotation x, AutomationAnnotation y) => (x?.ThisPtr ?? IntPtr.Zero) == (y?.ThisPtr ?? IntPtr.Zero);
        public static bool operator !=(AutomationAnnotation x, AutomationAnnotation y) => !(x == y);
        public bool Equals(AutomationAnnotation other) => this == other;
        public override bool Equals(object obj) => obj is AutomationAnnotation that && this == that;
        public override int GetHashCode() => ThisPtr.GetHashCode();


        bool IWinRTObject.HasUnwrappableNativeObject => true;
        IObjectReference IWinRTObject.NativeObject => _inner;

        private struct InterfaceTag<I>{};


        public global::Microsoft.UI.Xaml.UIElement Element
        {
            get => global::ABI.Microsoft.UI.Xaml.Automation.IAutomationAnnotationMethods.get_Element(_objRef_global__Microsoft_UI_Xaml_Automation_IAutomationAnnotation);
            set => global::ABI.Microsoft.UI.Xaml.Automation.IAutomationAnnotationMethods.set_Element(_objRef_global__Microsoft_UI_Xaml_Automation_IAutomationAnnotation, value);
        }

        public AnnotationType Type
        {
            get => global::ABI.Microsoft.UI.Xaml.Automation.IAutomationAnnotationMethods.get_Type(_objRef_global__Microsoft_UI_Xaml_Automation_IAutomationAnnotation);
            set => global::ABI.Microsoft.UI.Xaml.Automation.IAutomationAnnotationMethods.set_Type(_objRef_global__Microsoft_UI_Xaml_Automation_IAutomationAnnotation, value);
        }

        protected override bool IsOverridableInterface(Guid iid) => base.IsOverridableInterface(iid);

        global::System.Runtime.InteropServices.CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(ref Guid iid, out IntPtr ppv)
        {
            ppv = IntPtr.Zero;
            if (IsOverridableInterface(iid) || global::WinRT.Interop.IID.IID_IInspectable == iid)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
            }

            if (((IWinRTObject)this).NativeObject.TryAs(iid, out ppv) >= 0)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.Handled;
            }

            return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
        }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")][global::WinRT.WinRTExposedType(typeof(global::WinRT.EnumTypeDetails<AutomationBulletStyle>))][global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    public enum AutomationBulletStyle : int
    {
        None = unchecked((int)0),
        HollowRoundBullet = unchecked((int)0x1),
        FilledRoundBullet = unchecked((int)0x2),
        HollowSquareBullet = unchecked((int)0x3),
        FilledSquareBullet = unchecked((int)0x4),
        DashBullet = unchecked((int)0x5),
        Other = unchecked((int)0x6),
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")][global::WinRT.WinRTExposedType(typeof(global::WinRT.EnumTypeDetails<AutomationCaretBidiMode>))][global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    public enum AutomationCaretBidiMode : int
    {
        LTR = unchecked((int)0),
        RTL = unchecked((int)0x1),
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")][global::WinRT.WinRTExposedType(typeof(global::WinRT.EnumTypeDetails<AutomationCaretPosition>))][global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    public enum AutomationCaretPosition : int
    {
        Unknown = unchecked((int)0),
        EndOfLine = unchecked((int)0x1),
        BeginningOfLine = unchecked((int)0x2),
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")]
    [global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Automation.AutomationElementIdentifiers))]
    [global::ABI.Microsoft.UI.Xaml.Automation.AutomationElementIdentifiersRcwFactory]
    [global::WinRT.ProjectedRuntimeClass(typeof(IAutomationElementIdentifiers))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    public sealed class AutomationElementIdentifiers : global::System.Runtime.InteropServices.ICustomQueryInterface, IWinRTObject, IEquatable<AutomationElementIdentifiers>
    {
        private IntPtr ThisPtr => _inner == null ? (((IWinRTObject)this).NativeObject).ThisPtr : _inner.ThisPtr;

        private readonly IObjectReference _inner = null;



        private IObjectReference _objRef_global__Microsoft_UI_Xaml_Automation_IAutomationElementIdentifiers => _inner;


        public static I As<I>() => ActivationFactory.Get("Microsoft.UI.Xaml.Automation.AutomationElementIdentifiers").AsInterface<I>();

        private static volatile IObjectReference ___objRef_global__Microsoft_UI_Xaml_Automation_IAutomationElementIdentifiersStatics;
        private static IObjectReference _objRef_global__Microsoft_UI_Xaml_Automation_IAutomationElementIdentifiersStatics
        {
            get
            { 
                var factory = ___objRef_global__Microsoft_UI_Xaml_Automation_IAutomationElementIdentifiersStatics;
                if (factory != null && factory.IsInCurrentContext)
                {
                    return factory;
                }
                else
                {
                    return ___objRef_global__Microsoft_UI_Xaml_Automation_IAutomationElementIdentifiersStatics = ActivationFactory.Get("Microsoft.UI.Xaml.Automation.AutomationElementIdentifiers", global::ABI.Microsoft.UI.Xaml.Automation.IAutomationElementIdentifiersStaticsMethods.IID);
                }
            }
        }

        public static AutomationProperty AcceleratorKeyProperty => global::ABI.Microsoft.UI.Xaml.Automation.IAutomationElementIdentifiersStaticsMethods.get_AcceleratorKeyProperty(_objRef_global__Microsoft_UI_Xaml_Automation_IAutomationElementIdentifiersStatics);

        public static AutomationProperty AccessKeyProperty => global::ABI.Microsoft.UI.Xaml.Automation.IAutomationElementIdentifiersStaticsMethods.get_AccessKeyProperty(_objRef_global__Microsoft_UI_Xaml_Automation_IAutomationElementIdentifiersStatics);

        public static AutomationProperty AnnotationsProperty => global::ABI.Microsoft.UI.Xaml.Automation.IAutomationElementIdentifiersStaticsMethods.get_AnnotationsProperty(_objRef_global__Microsoft_UI_Xaml_Automation_IAutomationElementIdentifiersStatics);

        public static AutomationProperty AutomationIdProperty => global::ABI.Microsoft.UI.Xaml.Automation.IAutomationElementIdentifiersStaticsMethods.get_AutomationIdProperty(_objRef_global__Microsoft_UI_Xaml_Automation_IAutomationElementIdentifiersStatics);

        public static AutomationProperty BoundingRectangleProperty => global::ABI.Microsoft.UI.Xaml.Automation.IAutomationElementIdentifiersStaticsMethods.get_BoundingRectangleProperty(_objRef_global__Microsoft_UI_Xaml_Automation_IAutomationElementIdentifiersStatics);

        public static AutomationProperty ClassNameProperty => global::ABI.Microsoft.UI.Xaml.Automation.IAutomationElementIdentifiersStaticsMethods.get_ClassNameProperty(_objRef_global__Microsoft_UI_Xaml_Automation_IAutomationElementIdentifiersStatics);

        public static AutomationProperty ClickablePointProperty => global::ABI.Microsoft.UI.Xaml.Automation.IAutomationElementIdentifiersStaticsMethods.get_ClickablePointProperty(_objRef_global__Microsoft_UI_Xaml_Automation_IAutomationElementIdentifiersStatics);

        public static AutomationProperty ControlTypeProperty => global::ABI.Microsoft.UI.Xaml.Automation.IAutomationElementIdentifiersStaticsMethods.get_ControlTypeProperty(_objRef_global__Microsoft_UI_Xaml_Automation_IAutomationElementIdentifiersStatics);

        public static AutomationProperty ControlledPeersProperty => global::ABI.Microsoft.UI.Xaml.Automation.IAutomationElementIdentifiersStaticsMethods.get_ControlledPeersProperty(_objRef_global__Microsoft_UI_Xaml_Automation_IAutomationElementIdentifiersStatics);

        public static AutomationProperty CultureProperty => global::ABI.Microsoft.UI.Xaml.Automation.IAutomationElementIdentifiersStaticsMethods.get_CultureProperty(_objRef_global__Microsoft_UI_Xaml_Automation_IAutomationElementIdentifiersStatics);

        public static AutomationProperty DescribedByProperty => global::ABI.Microsoft.UI.Xaml.Automation.IAutomationElementIdentifiersStaticsMethods.get_DescribedByProperty(_objRef_global__Microsoft_UI_Xaml_Automation_IAutomationElementIdentifiersStatics);

        public static AutomationProperty FlowsFromProperty => global::ABI.Microsoft.UI.Xaml.Automation.IAutomationElementIdentifiersStaticsMethods.get_FlowsFromProperty(_objRef_global__Microsoft_UI_Xaml_Automation_IAutomationElementIdentifiersStatics);

        public static AutomationProperty FlowsToProperty => global::ABI.Microsoft.UI.Xaml.Automation.IAutomationElementIdentifiersStaticsMethods.get_FlowsToProperty(_objRef_global__Microsoft_UI_Xaml_Automation_IAutomationElementIdentifiersStatics);

        public static AutomationProperty FullDescriptionProperty => global::ABI.Microsoft.UI.Xaml.Automation.IAutomationElementIdentifiersStaticsMethods.get_FullDescriptionProperty(_objRef_global__Microsoft_UI_Xaml_Automation_IAutomationElementIdentifiersStatics);

        public static AutomationProperty HasKeyboardFocusProperty => global::ABI.Microsoft.UI.Xaml.Automation.IAutomationElementIdentifiersStaticsMethods.get_HasKeyboardFocusProperty(_objRef_global__Microsoft_UI_Xaml_Automation_IAutomationElementIdentifiersStatics);

        public static AutomationProperty HeadingLevelProperty => global::ABI.Microsoft.UI.Xaml.Automation.IAutomationElementIdentifiersStaticsMethods.get_HeadingLevelProperty(_objRef_global__Microsoft_UI_Xaml_Automation_IAutomationElementIdentifiersStatics);

        public static AutomationProperty HelpTextProperty => global::ABI.Microsoft.UI.Xaml.Automation.IAutomationElementIdentifiersStaticsMethods.get_HelpTextProperty(_objRef_global__Microsoft_UI_Xaml_Automation_IAutomationElementIdentifiersStatics);

        public static AutomationProperty IsContentElementProperty => global::ABI.Microsoft.UI.Xaml.Automation.IAutomationElementIdentifiersStaticsMethods.get_IsContentElementProperty(_objRef_global__Microsoft_UI_Xaml_Automation_IAutomationElementIdentifiersStatics);

        public static AutomationProperty IsControlElementProperty => global::ABI.Microsoft.UI.Xaml.Automation.IAutomationElementIdentifiersStaticsMethods.get_IsControlElementProperty(_objRef_global__Microsoft_UI_Xaml_Automation_IAutomationElementIdentifiersStatics);

        public static AutomationProperty IsDataValidForFormProperty => global::ABI.Microsoft.UI.Xaml.Automation.IAutomationElementIdentifiersStaticsMethods.get_IsDataValidForFormProperty(_objRef_global__Microsoft_UI_Xaml_Automation_IAutomationElementIdentifiersStatics);

        public static AutomationProperty IsDialogProperty => global::ABI.Microsoft.UI.Xaml.Automation.IAutomationElementIdentifiersStaticsMethods.get_IsDialogProperty(_objRef_global__Microsoft_UI_Xaml_Automation_IAutomationElementIdentifiersStatics);

        public static AutomationProperty IsEnabledProperty => global::ABI.Microsoft.UI.Xaml.Automation.IAutomationElementIdentifiersStaticsMethods.get_IsEnabledProperty(_objRef_global__Microsoft_UI_Xaml_Automation_IAutomationElementIdentifiersStatics);

        public static AutomationProperty IsKeyboardFocusableProperty => global::ABI.Microsoft.UI.Xaml.Automation.IAutomationElementIdentifiersStaticsMethods.get_IsKeyboardFocusableProperty(_objRef_global__Microsoft_UI_Xaml_Automation_IAutomationElementIdentifiersStatics);

        public static AutomationProperty IsOffscreenProperty => global::ABI.Microsoft.UI.Xaml.Automation.IAutomationElementIdentifiersStaticsMethods.get_IsOffscreenProperty(_objRef_global__Microsoft_UI_Xaml_Automation_IAutomationElementIdentifiersStatics);

        public static AutomationProperty IsPasswordProperty => global::ABI.Microsoft.UI.Xaml.Automation.IAutomationElementIdentifiersStaticsMethods.get_IsPasswordProperty(_objRef_global__Microsoft_UI_Xaml_Automation_IAutomationElementIdentifiersStatics);

        public static AutomationProperty IsPeripheralProperty => global::ABI.Microsoft.UI.Xaml.Automation.IAutomationElementIdentifiersStaticsMethods.get_IsPeripheralProperty(_objRef_global__Microsoft_UI_Xaml_Automation_IAutomationElementIdentifiersStatics);

        public static AutomationProperty IsRequiredForFormProperty => global::ABI.Microsoft.UI.Xaml.Automation.IAutomationElementIdentifiersStaticsMethods.get_IsRequiredForFormProperty(_objRef_global__Microsoft_UI_Xaml_Automation_IAutomationElementIdentifiersStatics);

        public static AutomationProperty ItemStatusProperty => global::ABI.Microsoft.UI.Xaml.Automation.IAutomationElementIdentifiersStaticsMethods.get_ItemStatusProperty(_objRef_global__Microsoft_UI_Xaml_Automation_IAutomationElementIdentifiersStatics);

        public static AutomationProperty ItemTypeProperty => global::ABI.Microsoft.UI.Xaml.Automation.IAutomationElementIdentifiersStaticsMethods.get_ItemTypeProperty(_objRef_global__Microsoft_UI_Xaml_Automation_IAutomationElementIdentifiersStatics);

        public static AutomationProperty LabeledByProperty => global::ABI.Microsoft.UI.Xaml.Automation.IAutomationElementIdentifiersStaticsMethods.get_LabeledByProperty(_objRef_global__Microsoft_UI_Xaml_Automation_IAutomationElementIdentifiersStatics);

        public static AutomationProperty LandmarkTypeProperty => global::ABI.Microsoft.UI.Xaml.Automation.IAutomationElementIdentifiersStaticsMethods.get_LandmarkTypeProperty(_objRef_global__Microsoft_UI_Xaml_Automation_IAutomationElementIdentifiersStatics);

        public static AutomationProperty LevelProperty => global::ABI.Microsoft.UI.Xaml.Automation.IAutomationElementIdentifiersStaticsMethods.get_LevelProperty(_objRef_global__Microsoft_UI_Xaml_Automation_IAutomationElementIdentifiersStatics);

        public static AutomationProperty LiveSettingProperty => global::ABI.Microsoft.UI.Xaml.Automation.IAutomationElementIdentifiersStaticsMethods.get_LiveSettingProperty(_objRef_global__Microsoft_UI_Xaml_Automation_IAutomationElementIdentifiersStatics);

        public static AutomationProperty LocalizedControlTypeProperty => global::ABI.Microsoft.UI.Xaml.Automation.IAutomationElementIdentifiersStaticsMethods.get_LocalizedControlTypeProperty(_objRef_global__Microsoft_UI_Xaml_Automation_IAutomationElementIdentifiersStatics);

        public static AutomationProperty LocalizedLandmarkTypeProperty => global::ABI.Microsoft.UI.Xaml.Automation.IAutomationElementIdentifiersStaticsMethods.get_LocalizedLandmarkTypeProperty(_objRef_global__Microsoft_UI_Xaml_Automation_IAutomationElementIdentifiersStatics);

        public static AutomationProperty NameProperty => global::ABI.Microsoft.UI.Xaml.Automation.IAutomationElementIdentifiersStaticsMethods.get_NameProperty(_objRef_global__Microsoft_UI_Xaml_Automation_IAutomationElementIdentifiersStatics);

        public static AutomationProperty OrientationProperty => global::ABI.Microsoft.UI.Xaml.Automation.IAutomationElementIdentifiersStaticsMethods.get_OrientationProperty(_objRef_global__Microsoft_UI_Xaml_Automation_IAutomationElementIdentifiersStatics);

        public static AutomationProperty PositionInSetProperty => global::ABI.Microsoft.UI.Xaml.Automation.IAutomationElementIdentifiersStaticsMethods.get_PositionInSetProperty(_objRef_global__Microsoft_UI_Xaml_Automation_IAutomationElementIdentifiersStatics);

        public static AutomationProperty SizeOfSetProperty => global::ABI.Microsoft.UI.Xaml.Automation.IAutomationElementIdentifiersStaticsMethods.get_SizeOfSetProperty(_objRef_global__Microsoft_UI_Xaml_Automation_IAutomationElementIdentifiersStatics);

        public static AutomationElementIdentifiers FromAbi(IntPtr thisPtr)
        {
            if (thisPtr == IntPtr.Zero) return null;
            return MarshalInspectable<AutomationElementIdentifiers>.FromAbi(thisPtr);
        }

        internal AutomationElementIdentifiers(IObjectReference objRef)
        {
            _inner = objRef.As(global::ABI.Microsoft.UI.Xaml.Automation.IAutomationElementIdentifiersMethods.IID);

        }


        public static bool operator ==(AutomationElementIdentifiers x, AutomationElementIdentifiers y) => (x?.ThisPtr ?? IntPtr.Zero) == (y?.ThisPtr ?? IntPtr.Zero);
        public static bool operator !=(AutomationElementIdentifiers x, AutomationElementIdentifiers y) => !(x == y);
        public bool Equals(AutomationElementIdentifiers other) => this == other;
        public override bool Equals(object obj) => obj is AutomationElementIdentifiers that && this == that;
        public override int GetHashCode() => ThisPtr.GetHashCode();


        bool IWinRTObject.HasUnwrappableNativeObject => true;
        IObjectReference IWinRTObject.NativeObject => _inner;
        private volatile global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> _queryInterfaceCache;
        private global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> MakeQueryInterfaceCache()
        {
            global::System.Threading.Interlocked.CompareExchange(ref _queryInterfaceCache, new global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference>(), null); 
            return _queryInterfaceCache;
        }
        global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> IWinRTObject.QueryInterfaceCache => _queryInterfaceCache ?? MakeQueryInterfaceCache();
        private volatile global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> _additionalTypeData;
        private global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> MakeAdditionalTypeData()
        {
            global::System.Threading.Interlocked.CompareExchange(ref _additionalTypeData, new global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object>(), null); 
            return _additionalTypeData;
        }
        global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> IWinRTObject.AdditionalTypeData => _additionalTypeData ?? MakeAdditionalTypeData();

        private struct InterfaceTag<I>{};


        private bool IsOverridableInterface(Guid iid) => false;

        global::System.Runtime.InteropServices.CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(ref Guid iid, out IntPtr ppv)
        {
            ppv = IntPtr.Zero;
            if (IsOverridableInterface(iid) || global::WinRT.Interop.IID.IID_IInspectable == iid)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
            }

            if (((IWinRTObject)this).NativeObject.TryAs(iid, out ppv) >= 0)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.Handled;
            }

            return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
        }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")][global::WinRT.WinRTExposedType(typeof(global::WinRT.EnumTypeDetails<AutomationFlowDirections>))][global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    public enum AutomationFlowDirections : int
    {
        Default = unchecked((int)0),
        RightToLeft = unchecked((int)0x1),
        BottomToTop = unchecked((int)0x2),
        Vertical = unchecked((int)0x3),
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")][global::WinRT.WinRTExposedType(typeof(global::WinRT.EnumTypeDetails<AutomationOutlineStyles>))][global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    public enum AutomationOutlineStyles : int
    {
        None = unchecked((int)0),
        Outline = unchecked((int)0x1),
        Shadow = unchecked((int)0x2),
        Engraved = unchecked((int)0x3),
        Embossed = unchecked((int)0x4),
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")]
    [global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Automation.AutomationProperties))]
    [global::ABI.Microsoft.UI.Xaml.Automation.AutomationPropertiesRcwFactory]
    [global::WinRT.ProjectedRuntimeClass(typeof(IAutomationProperties))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    public sealed class AutomationProperties : global::System.Runtime.InteropServices.ICustomQueryInterface, IWinRTObject, IEquatable<AutomationProperties>
    {
        private IntPtr ThisPtr => _inner == null ? (((IWinRTObject)this).NativeObject).ThisPtr : _inner.ThisPtr;

        private readonly IObjectReference _inner = null;



        private IObjectReference _objRef_global__Microsoft_UI_Xaml_Automation_IAutomationProperties => _inner;


        public static I As<I>() => ActivationFactory.Get("Microsoft.UI.Xaml.Automation.AutomationProperties").AsInterface<I>();

        private static volatile IObjectReference ___objRef_global__Microsoft_UI_Xaml_Automation_IAutomationPropertiesStatics;
        private static IObjectReference _objRef_global__Microsoft_UI_Xaml_Automation_IAutomationPropertiesStatics
        {
            get
            { 
                var factory = ___objRef_global__Microsoft_UI_Xaml_Automation_IAutomationPropertiesStatics;
                if (factory != null && factory.IsInCurrentContext)
                {
                    return factory;
                }
                else
                {
                    return ___objRef_global__Microsoft_UI_Xaml_Automation_IAutomationPropertiesStatics = ActivationFactory.Get("Microsoft.UI.Xaml.Automation.AutomationProperties", global::ABI.Microsoft.UI.Xaml.Automation.IAutomationPropertiesStaticsMethods.IID);
                }
            }
        }

        public static string GetAcceleratorKey(global::Microsoft.UI.Xaml.DependencyObject element) => global::ABI.Microsoft.UI.Xaml.Automation.IAutomationPropertiesStaticsMethods.GetAcceleratorKey(_objRef_global__Microsoft_UI_Xaml_Automation_IAutomationPropertiesStatics, element);

        public static void SetAcceleratorKey(global::Microsoft.UI.Xaml.DependencyObject element, string value) => global::ABI.Microsoft.UI.Xaml.Automation.IAutomationPropertiesStaticsMethods.SetAcceleratorKey(_objRef_global__Microsoft_UI_Xaml_Automation_IAutomationPropertiesStatics, element, value);

        public static string GetAccessKey(global::Microsoft.UI.Xaml.DependencyObject element) => global::ABI.Microsoft.UI.Xaml.Automation.IAutomationPropertiesStaticsMethods.GetAccessKey(_objRef_global__Microsoft_UI_Xaml_Automation_IAutomationPropertiesStatics, element);

        public static void SetAccessKey(global::Microsoft.UI.Xaml.DependencyObject element, string value) => global::ABI.Microsoft.UI.Xaml.Automation.IAutomationPropertiesStaticsMethods.SetAccessKey(_objRef_global__Microsoft_UI_Xaml_Automation_IAutomationPropertiesStatics, element, value);

        public static string GetAutomationId(global::Microsoft.UI.Xaml.DependencyObject element) => global::ABI.Microsoft.UI.Xaml.Automation.IAutomationPropertiesStaticsMethods.GetAutomationId(_objRef_global__Microsoft_UI_Xaml_Automation_IAutomationPropertiesStatics, element);

        public static void SetAutomationId(global::Microsoft.UI.Xaml.DependencyObject element, string value) => global::ABI.Microsoft.UI.Xaml.Automation.IAutomationPropertiesStaticsMethods.SetAutomationId(_objRef_global__Microsoft_UI_Xaml_Automation_IAutomationPropertiesStatics, element, value);

        public static string GetHelpText(global::Microsoft.UI.Xaml.DependencyObject element) => global::ABI.Microsoft.UI.Xaml.Automation.IAutomationPropertiesStaticsMethods.GetHelpText(_objRef_global__Microsoft_UI_Xaml_Automation_IAutomationPropertiesStatics, element);

        public static void SetHelpText(global::Microsoft.UI.Xaml.DependencyObject element, string value) => global::ABI.Microsoft.UI.Xaml.Automation.IAutomationPropertiesStaticsMethods.SetHelpText(_objRef_global__Microsoft_UI_Xaml_Automation_IAutomationPropertiesStatics, element, value);

        public static bool GetIsRequiredForForm(global::Microsoft.UI.Xaml.DependencyObject element) => global::ABI.Microsoft.UI.Xaml.Automation.IAutomationPropertiesStaticsMethods.GetIsRequiredForForm(_objRef_global__Microsoft_UI_Xaml_Automation_IAutomationPropertiesStatics, element);

        public static void SetIsRequiredForForm(global::Microsoft.UI.Xaml.DependencyObject element, bool value) => global::ABI.Microsoft.UI.Xaml.Automation.IAutomationPropertiesStaticsMethods.SetIsRequiredForForm(_objRef_global__Microsoft_UI_Xaml_Automation_IAutomationPropertiesStatics, element, value);

        public static string GetItemStatus(global::Microsoft.UI.Xaml.DependencyObject element) => global::ABI.Microsoft.UI.Xaml.Automation.IAutomationPropertiesStaticsMethods.GetItemStatus(_objRef_global__Microsoft_UI_Xaml_Automation_IAutomationPropertiesStatics, element);

        public static void SetItemStatus(global::Microsoft.UI.Xaml.DependencyObject element, string value) => global::ABI.Microsoft.UI.Xaml.Automation.IAutomationPropertiesStaticsMethods.SetItemStatus(_objRef_global__Microsoft_UI_Xaml_Automation_IAutomationPropertiesStatics, element, value);

        public static string GetItemType(global::Microsoft.UI.Xaml.DependencyObject element) => global::ABI.Microsoft.UI.Xaml.Automation.IAutomationPropertiesStaticsMethods.GetItemType(_objRef_global__Microsoft_UI_Xaml_Automation_IAutomationPropertiesStatics, element);

        public static void SetItemType(global::Microsoft.UI.Xaml.DependencyObject element, string value) => global::ABI.Microsoft.UI.Xaml.Automation.IAutomationPropertiesStaticsMethods.SetItemType(_objRef_global__Microsoft_UI_Xaml_Automation_IAutomationPropertiesStatics, element, value);

        public static global::Microsoft.UI.Xaml.UIElement GetLabeledBy(global::Microsoft.UI.Xaml.DependencyObject element) => global::ABI.Microsoft.UI.Xaml.Automation.IAutomationPropertiesStaticsMethods.GetLabeledBy(_objRef_global__Microsoft_UI_Xaml_Automation_IAutomationPropertiesStatics, element);

        public static void SetLabeledBy(global::Microsoft.UI.Xaml.DependencyObject element, global::Microsoft.UI.Xaml.UIElement value) => global::ABI.Microsoft.UI.Xaml.Automation.IAutomationPropertiesStaticsMethods.SetLabeledBy(_objRef_global__Microsoft_UI_Xaml_Automation_IAutomationPropertiesStatics, element, value);

        public static string GetName(global::Microsoft.UI.Xaml.DependencyObject element) => global::ABI.Microsoft.UI.Xaml.Automation.IAutomationPropertiesStaticsMethods.GetName(_objRef_global__Microsoft_UI_Xaml_Automation_IAutomationPropertiesStatics, element);

        public static void SetName(global::Microsoft.UI.Xaml.DependencyObject element, string value) => global::ABI.Microsoft.UI.Xaml.Automation.IAutomationPropertiesStaticsMethods.SetName(_objRef_global__Microsoft_UI_Xaml_Automation_IAutomationPropertiesStatics, element, value);

        public static global::Microsoft.UI.Xaml.Automation.Peers.AutomationLiveSetting GetLiveSetting(global::Microsoft.UI.Xaml.DependencyObject element) => global::ABI.Microsoft.UI.Xaml.Automation.IAutomationPropertiesStaticsMethods.GetLiveSetting(_objRef_global__Microsoft_UI_Xaml_Automation_IAutomationPropertiesStatics, element);

        public static void SetLiveSetting(global::Microsoft.UI.Xaml.DependencyObject element, global::Microsoft.UI.Xaml.Automation.Peers.AutomationLiveSetting value) => global::ABI.Microsoft.UI.Xaml.Automation.IAutomationPropertiesStaticsMethods.SetLiveSetting(_objRef_global__Microsoft_UI_Xaml_Automation_IAutomationPropertiesStatics, element, value);

        public static global::Microsoft.UI.Xaml.Automation.Peers.AccessibilityView GetAccessibilityView(global::Microsoft.UI.Xaml.DependencyObject element) => global::ABI.Microsoft.UI.Xaml.Automation.IAutomationPropertiesStaticsMethods.GetAccessibilityView(_objRef_global__Microsoft_UI_Xaml_Automation_IAutomationPropertiesStatics, element);

        public static void SetAccessibilityView(global::Microsoft.UI.Xaml.DependencyObject element, global::Microsoft.UI.Xaml.Automation.Peers.AccessibilityView value) => global::ABI.Microsoft.UI.Xaml.Automation.IAutomationPropertiesStaticsMethods.SetAccessibilityView(_objRef_global__Microsoft_UI_Xaml_Automation_IAutomationPropertiesStatics, element, value);

        public static global::System.Collections.Generic.IList<global::Microsoft.UI.Xaml.UIElement> GetControlledPeers(global::Microsoft.UI.Xaml.DependencyObject element) => global::ABI.Microsoft.UI.Xaml.Automation.IAutomationPropertiesStaticsMethods.GetControlledPeers(_objRef_global__Microsoft_UI_Xaml_Automation_IAutomationPropertiesStatics, element);

        public static int GetPositionInSet(global::Microsoft.UI.Xaml.DependencyObject element) => global::ABI.Microsoft.UI.Xaml.Automation.IAutomationPropertiesStaticsMethods.GetPositionInSet(_objRef_global__Microsoft_UI_Xaml_Automation_IAutomationPropertiesStatics, element);

        public static void SetPositionInSet(global::Microsoft.UI.Xaml.DependencyObject element, int value) => global::ABI.Microsoft.UI.Xaml.Automation.IAutomationPropertiesStaticsMethods.SetPositionInSet(_objRef_global__Microsoft_UI_Xaml_Automation_IAutomationPropertiesStatics, element, value);

        public static int GetSizeOfSet(global::Microsoft.UI.Xaml.DependencyObject element) => global::ABI.Microsoft.UI.Xaml.Automation.IAutomationPropertiesStaticsMethods.GetSizeOfSet(_objRef_global__Microsoft_UI_Xaml_Automation_IAutomationPropertiesStatics, element);

        public static void SetSizeOfSet(global::Microsoft.UI.Xaml.DependencyObject element, int value) => global::ABI.Microsoft.UI.Xaml.Automation.IAutomationPropertiesStaticsMethods.SetSizeOfSet(_objRef_global__Microsoft_UI_Xaml_Automation_IAutomationPropertiesStatics, element, value);

        public static int GetLevel(global::Microsoft.UI.Xaml.DependencyObject element) => global::ABI.Microsoft.UI.Xaml.Automation.IAutomationPropertiesStaticsMethods.GetLevel(_objRef_global__Microsoft_UI_Xaml_Automation_IAutomationPropertiesStatics, element);

        public static void SetLevel(global::Microsoft.UI.Xaml.DependencyObject element, int value) => global::ABI.Microsoft.UI.Xaml.Automation.IAutomationPropertiesStaticsMethods.SetLevel(_objRef_global__Microsoft_UI_Xaml_Automation_IAutomationPropertiesStatics, element, value);

        public static global::System.Collections.Generic.IList<AutomationAnnotation> GetAnnotations(global::Microsoft.UI.Xaml.DependencyObject element) => global::ABI.Microsoft.UI.Xaml.Automation.IAutomationPropertiesStaticsMethods.GetAnnotations(_objRef_global__Microsoft_UI_Xaml_Automation_IAutomationPropertiesStatics, element);

        public static global::Microsoft.UI.Xaml.Automation.Peers.AutomationLandmarkType GetLandmarkType(global::Microsoft.UI.Xaml.DependencyObject element) => global::ABI.Microsoft.UI.Xaml.Automation.IAutomationPropertiesStaticsMethods.GetLandmarkType(_objRef_global__Microsoft_UI_Xaml_Automation_IAutomationPropertiesStatics, element);

        public static void SetLandmarkType(global::Microsoft.UI.Xaml.DependencyObject element, global::Microsoft.UI.Xaml.Automation.Peers.AutomationLandmarkType value) => global::ABI.Microsoft.UI.Xaml.Automation.IAutomationPropertiesStaticsMethods.SetLandmarkType(_objRef_global__Microsoft_UI_Xaml_Automation_IAutomationPropertiesStatics, element, value);

        public static string GetLocalizedLandmarkType(global::Microsoft.UI.Xaml.DependencyObject element) => global::ABI.Microsoft.UI.Xaml.Automation.IAutomationPropertiesStaticsMethods.GetLocalizedLandmarkType(_objRef_global__Microsoft_UI_Xaml_Automation_IAutomationPropertiesStatics, element);

        public static void SetLocalizedLandmarkType(global::Microsoft.UI.Xaml.DependencyObject element, string value) => global::ABI.Microsoft.UI.Xaml.Automation.IAutomationPropertiesStaticsMethods.SetLocalizedLandmarkType(_objRef_global__Microsoft_UI_Xaml_Automation_IAutomationPropertiesStatics, element, value);

        public static bool GetIsPeripheral(global::Microsoft.UI.Xaml.DependencyObject element) => global::ABI.Microsoft.UI.Xaml.Automation.IAutomationPropertiesStaticsMethods.GetIsPeripheral(_objRef_global__Microsoft_UI_Xaml_Automation_IAutomationPropertiesStatics, element);

        public static void SetIsPeripheral(global::Microsoft.UI.Xaml.DependencyObject element, bool value) => global::ABI.Microsoft.UI.Xaml.Automation.IAutomationPropertiesStaticsMethods.SetIsPeripheral(_objRef_global__Microsoft_UI_Xaml_Automation_IAutomationPropertiesStatics, element, value);

        public static bool GetIsDataValidForForm(global::Microsoft.UI.Xaml.DependencyObject element) => global::ABI.Microsoft.UI.Xaml.Automation.IAutomationPropertiesStaticsMethods.GetIsDataValidForForm(_objRef_global__Microsoft_UI_Xaml_Automation_IAutomationPropertiesStatics, element);

        public static void SetIsDataValidForForm(global::Microsoft.UI.Xaml.DependencyObject element, bool value) => global::ABI.Microsoft.UI.Xaml.Automation.IAutomationPropertiesStaticsMethods.SetIsDataValidForForm(_objRef_global__Microsoft_UI_Xaml_Automation_IAutomationPropertiesStatics, element, value);

        public static string GetFullDescription(global::Microsoft.UI.Xaml.DependencyObject element) => global::ABI.Microsoft.UI.Xaml.Automation.IAutomationPropertiesStaticsMethods.GetFullDescription(_objRef_global__Microsoft_UI_Xaml_Automation_IAutomationPropertiesStatics, element);

        public static void SetFullDescription(global::Microsoft.UI.Xaml.DependencyObject element, string value) => global::ABI.Microsoft.UI.Xaml.Automation.IAutomationPropertiesStaticsMethods.SetFullDescription(_objRef_global__Microsoft_UI_Xaml_Automation_IAutomationPropertiesStatics, element, value);

        public static string GetLocalizedControlType(global::Microsoft.UI.Xaml.DependencyObject element) => global::ABI.Microsoft.UI.Xaml.Automation.IAutomationPropertiesStaticsMethods.GetLocalizedControlType(_objRef_global__Microsoft_UI_Xaml_Automation_IAutomationPropertiesStatics, element);

        public static void SetLocalizedControlType(global::Microsoft.UI.Xaml.DependencyObject element, string value) => global::ABI.Microsoft.UI.Xaml.Automation.IAutomationPropertiesStaticsMethods.SetLocalizedControlType(_objRef_global__Microsoft_UI_Xaml_Automation_IAutomationPropertiesStatics, element, value);

        public static global::System.Collections.Generic.IList<global::Microsoft.UI.Xaml.DependencyObject> GetDescribedBy(global::Microsoft.UI.Xaml.DependencyObject element) => global::ABI.Microsoft.UI.Xaml.Automation.IAutomationPropertiesStaticsMethods.GetDescribedBy(_objRef_global__Microsoft_UI_Xaml_Automation_IAutomationPropertiesStatics, element);

        public static global::System.Collections.Generic.IList<global::Microsoft.UI.Xaml.DependencyObject> GetFlowsTo(global::Microsoft.UI.Xaml.DependencyObject element) => global::ABI.Microsoft.UI.Xaml.Automation.IAutomationPropertiesStaticsMethods.GetFlowsTo(_objRef_global__Microsoft_UI_Xaml_Automation_IAutomationPropertiesStatics, element);

        public static global::System.Collections.Generic.IList<global::Microsoft.UI.Xaml.DependencyObject> GetFlowsFrom(global::Microsoft.UI.Xaml.DependencyObject element) => global::ABI.Microsoft.UI.Xaml.Automation.IAutomationPropertiesStaticsMethods.GetFlowsFrom(_objRef_global__Microsoft_UI_Xaml_Automation_IAutomationPropertiesStatics, element);

        public static int GetCulture(global::Microsoft.UI.Xaml.DependencyObject element) => global::ABI.Microsoft.UI.Xaml.Automation.IAutomationPropertiesStaticsMethods.GetCulture(_objRef_global__Microsoft_UI_Xaml_Automation_IAutomationPropertiesStatics, element);

        public static void SetCulture(global::Microsoft.UI.Xaml.DependencyObject element, int value) => global::ABI.Microsoft.UI.Xaml.Automation.IAutomationPropertiesStaticsMethods.SetCulture(_objRef_global__Microsoft_UI_Xaml_Automation_IAutomationPropertiesStatics, element, value);

        public static global::Microsoft.UI.Xaml.Automation.Peers.AutomationHeadingLevel GetHeadingLevel(global::Microsoft.UI.Xaml.DependencyObject element) => global::ABI.Microsoft.UI.Xaml.Automation.IAutomationPropertiesStaticsMethods.GetHeadingLevel(_objRef_global__Microsoft_UI_Xaml_Automation_IAutomationPropertiesStatics, element);

        public static void SetHeadingLevel(global::Microsoft.UI.Xaml.DependencyObject element, global::Microsoft.UI.Xaml.Automation.Peers.AutomationHeadingLevel value) => global::ABI.Microsoft.UI.Xaml.Automation.IAutomationPropertiesStaticsMethods.SetHeadingLevel(_objRef_global__Microsoft_UI_Xaml_Automation_IAutomationPropertiesStatics, element, value);

        public static bool GetIsDialog(global::Microsoft.UI.Xaml.DependencyObject element) => global::ABI.Microsoft.UI.Xaml.Automation.IAutomationPropertiesStaticsMethods.GetIsDialog(_objRef_global__Microsoft_UI_Xaml_Automation_IAutomationPropertiesStatics, element);

        public static void SetIsDialog(global::Microsoft.UI.Xaml.DependencyObject element, bool value) => global::ABI.Microsoft.UI.Xaml.Automation.IAutomationPropertiesStaticsMethods.SetIsDialog(_objRef_global__Microsoft_UI_Xaml_Automation_IAutomationPropertiesStatics, element, value);

        private static volatile IObjectReference ___objRef_global__Microsoft_UI_Xaml_Automation_IAutomationPropertiesStatics2;
        private static IObjectReference _objRef_global__Microsoft_UI_Xaml_Automation_IAutomationPropertiesStatics2
        {
            get
            { 
                var factory = ___objRef_global__Microsoft_UI_Xaml_Automation_IAutomationPropertiesStatics2;
                if (factory != null && factory.IsInCurrentContext)
                {
                    return factory;
                }
                else
                {
                    return ___objRef_global__Microsoft_UI_Xaml_Automation_IAutomationPropertiesStatics2 = ActivationFactory.Get("Microsoft.UI.Xaml.Automation.AutomationProperties", global::ABI.Microsoft.UI.Xaml.Automation.IAutomationPropertiesStatics2Methods.IID);
                }
            }
        }

        public static global::Microsoft.UI.Xaml.Automation.Peers.AutomationControlType GetAutomationControlType(global::Microsoft.UI.Xaml.UIElement element) => global::ABI.Microsoft.UI.Xaml.Automation.IAutomationPropertiesStatics2Methods.GetAutomationControlType(_objRef_global__Microsoft_UI_Xaml_Automation_IAutomationPropertiesStatics2, element);

        public static void SetAutomationControlType(global::Microsoft.UI.Xaml.UIElement element, global::Microsoft.UI.Xaml.Automation.Peers.AutomationControlType value) => global::ABI.Microsoft.UI.Xaml.Automation.IAutomationPropertiesStatics2Methods.SetAutomationControlType(_objRef_global__Microsoft_UI_Xaml_Automation_IAutomationPropertiesStatics2, element, value);

        public static global::Microsoft.UI.Xaml.DependencyProperty AcceleratorKeyProperty => global::ABI.Microsoft.UI.Xaml.Automation.IAutomationPropertiesStaticsMethods.get_AcceleratorKeyProperty(_objRef_global__Microsoft_UI_Xaml_Automation_IAutomationPropertiesStatics);

        public static global::Microsoft.UI.Xaml.DependencyProperty AccessKeyProperty => global::ABI.Microsoft.UI.Xaml.Automation.IAutomationPropertiesStaticsMethods.get_AccessKeyProperty(_objRef_global__Microsoft_UI_Xaml_Automation_IAutomationPropertiesStatics);

        public static global::Microsoft.UI.Xaml.DependencyProperty AccessibilityViewProperty => global::ABI.Microsoft.UI.Xaml.Automation.IAutomationPropertiesStaticsMethods.get_AccessibilityViewProperty(_objRef_global__Microsoft_UI_Xaml_Automation_IAutomationPropertiesStatics);

        public static global::Microsoft.UI.Xaml.DependencyProperty AnnotationsProperty => global::ABI.Microsoft.UI.Xaml.Automation.IAutomationPropertiesStaticsMethods.get_AnnotationsProperty(_objRef_global__Microsoft_UI_Xaml_Automation_IAutomationPropertiesStatics);

        public static global::Microsoft.UI.Xaml.DependencyProperty AutomationControlTypeProperty => global::ABI.Microsoft.UI.Xaml.Automation.IAutomationPropertiesStatics2Methods.get_AutomationControlTypeProperty(_objRef_global__Microsoft_UI_Xaml_Automation_IAutomationPropertiesStatics2);

        public static global::Microsoft.UI.Xaml.DependencyProperty AutomationIdProperty => global::ABI.Microsoft.UI.Xaml.Automation.IAutomationPropertiesStaticsMethods.get_AutomationIdProperty(_objRef_global__Microsoft_UI_Xaml_Automation_IAutomationPropertiesStatics);

        public static global::Microsoft.UI.Xaml.DependencyProperty ControlledPeersProperty => global::ABI.Microsoft.UI.Xaml.Automation.IAutomationPropertiesStaticsMethods.get_ControlledPeersProperty(_objRef_global__Microsoft_UI_Xaml_Automation_IAutomationPropertiesStatics);

        public static global::Microsoft.UI.Xaml.DependencyProperty CultureProperty => global::ABI.Microsoft.UI.Xaml.Automation.IAutomationPropertiesStaticsMethods.get_CultureProperty(_objRef_global__Microsoft_UI_Xaml_Automation_IAutomationPropertiesStatics);

        public static global::Microsoft.UI.Xaml.DependencyProperty DescribedByProperty => global::ABI.Microsoft.UI.Xaml.Automation.IAutomationPropertiesStaticsMethods.get_DescribedByProperty(_objRef_global__Microsoft_UI_Xaml_Automation_IAutomationPropertiesStatics);

        public static global::Microsoft.UI.Xaml.DependencyProperty FlowsFromProperty => global::ABI.Microsoft.UI.Xaml.Automation.IAutomationPropertiesStaticsMethods.get_FlowsFromProperty(_objRef_global__Microsoft_UI_Xaml_Automation_IAutomationPropertiesStatics);

        public static global::Microsoft.UI.Xaml.DependencyProperty FlowsToProperty => global::ABI.Microsoft.UI.Xaml.Automation.IAutomationPropertiesStaticsMethods.get_FlowsToProperty(_objRef_global__Microsoft_UI_Xaml_Automation_IAutomationPropertiesStatics);

        public static global::Microsoft.UI.Xaml.DependencyProperty FullDescriptionProperty => global::ABI.Microsoft.UI.Xaml.Automation.IAutomationPropertiesStaticsMethods.get_FullDescriptionProperty(_objRef_global__Microsoft_UI_Xaml_Automation_IAutomationPropertiesStatics);

        public static global::Microsoft.UI.Xaml.DependencyProperty HeadingLevelProperty => global::ABI.Microsoft.UI.Xaml.Automation.IAutomationPropertiesStaticsMethods.get_HeadingLevelProperty(_objRef_global__Microsoft_UI_Xaml_Automation_IAutomationPropertiesStatics);

        public static global::Microsoft.UI.Xaml.DependencyProperty HelpTextProperty => global::ABI.Microsoft.UI.Xaml.Automation.IAutomationPropertiesStaticsMethods.get_HelpTextProperty(_objRef_global__Microsoft_UI_Xaml_Automation_IAutomationPropertiesStatics);

        public static global::Microsoft.UI.Xaml.DependencyProperty IsDataValidForFormProperty => global::ABI.Microsoft.UI.Xaml.Automation.IAutomationPropertiesStaticsMethods.get_IsDataValidForFormProperty(_objRef_global__Microsoft_UI_Xaml_Automation_IAutomationPropertiesStatics);

        public static global::Microsoft.UI.Xaml.DependencyProperty IsDialogProperty => global::ABI.Microsoft.UI.Xaml.Automation.IAutomationPropertiesStaticsMethods.get_IsDialogProperty(_objRef_global__Microsoft_UI_Xaml_Automation_IAutomationPropertiesStatics);

        public static global::Microsoft.UI.Xaml.DependencyProperty IsPeripheralProperty => global::ABI.Microsoft.UI.Xaml.Automation.IAutomationPropertiesStaticsMethods.get_IsPeripheralProperty(_objRef_global__Microsoft_UI_Xaml_Automation_IAutomationPropertiesStatics);

        public static global::Microsoft.UI.Xaml.DependencyProperty IsRequiredForFormProperty => global::ABI.Microsoft.UI.Xaml.Automation.IAutomationPropertiesStaticsMethods.get_IsRequiredForFormProperty(_objRef_global__Microsoft_UI_Xaml_Automation_IAutomationPropertiesStatics);

        public static global::Microsoft.UI.Xaml.DependencyProperty ItemStatusProperty => global::ABI.Microsoft.UI.Xaml.Automation.IAutomationPropertiesStaticsMethods.get_ItemStatusProperty(_objRef_global__Microsoft_UI_Xaml_Automation_IAutomationPropertiesStatics);

        public static global::Microsoft.UI.Xaml.DependencyProperty ItemTypeProperty => global::ABI.Microsoft.UI.Xaml.Automation.IAutomationPropertiesStaticsMethods.get_ItemTypeProperty(_objRef_global__Microsoft_UI_Xaml_Automation_IAutomationPropertiesStatics);

        public static global::Microsoft.UI.Xaml.DependencyProperty LabeledByProperty => global::ABI.Microsoft.UI.Xaml.Automation.IAutomationPropertiesStaticsMethods.get_LabeledByProperty(_objRef_global__Microsoft_UI_Xaml_Automation_IAutomationPropertiesStatics);

        public static global::Microsoft.UI.Xaml.DependencyProperty LandmarkTypeProperty => global::ABI.Microsoft.UI.Xaml.Automation.IAutomationPropertiesStaticsMethods.get_LandmarkTypeProperty(_objRef_global__Microsoft_UI_Xaml_Automation_IAutomationPropertiesStatics);

        public static global::Microsoft.UI.Xaml.DependencyProperty LevelProperty => global::ABI.Microsoft.UI.Xaml.Automation.IAutomationPropertiesStaticsMethods.get_LevelProperty(_objRef_global__Microsoft_UI_Xaml_Automation_IAutomationPropertiesStatics);

        public static global::Microsoft.UI.Xaml.DependencyProperty LiveSettingProperty => global::ABI.Microsoft.UI.Xaml.Automation.IAutomationPropertiesStaticsMethods.get_LiveSettingProperty(_objRef_global__Microsoft_UI_Xaml_Automation_IAutomationPropertiesStatics);

        public static global::Microsoft.UI.Xaml.DependencyProperty LocalizedControlTypeProperty => global::ABI.Microsoft.UI.Xaml.Automation.IAutomationPropertiesStaticsMethods.get_LocalizedControlTypeProperty(_objRef_global__Microsoft_UI_Xaml_Automation_IAutomationPropertiesStatics);

        public static global::Microsoft.UI.Xaml.DependencyProperty LocalizedLandmarkTypeProperty => global::ABI.Microsoft.UI.Xaml.Automation.IAutomationPropertiesStaticsMethods.get_LocalizedLandmarkTypeProperty(_objRef_global__Microsoft_UI_Xaml_Automation_IAutomationPropertiesStatics);

        public static global::Microsoft.UI.Xaml.DependencyProperty NameProperty => global::ABI.Microsoft.UI.Xaml.Automation.IAutomationPropertiesStaticsMethods.get_NameProperty(_objRef_global__Microsoft_UI_Xaml_Automation_IAutomationPropertiesStatics);

        public static global::Microsoft.UI.Xaml.DependencyProperty PositionInSetProperty => global::ABI.Microsoft.UI.Xaml.Automation.IAutomationPropertiesStaticsMethods.get_PositionInSetProperty(_objRef_global__Microsoft_UI_Xaml_Automation_IAutomationPropertiesStatics);

        public static global::Microsoft.UI.Xaml.DependencyProperty SizeOfSetProperty => global::ABI.Microsoft.UI.Xaml.Automation.IAutomationPropertiesStaticsMethods.get_SizeOfSetProperty(_objRef_global__Microsoft_UI_Xaml_Automation_IAutomationPropertiesStatics);

        public static AutomationProperties FromAbi(IntPtr thisPtr)
        {
            if (thisPtr == IntPtr.Zero) return null;
            return MarshalInspectable<AutomationProperties>.FromAbi(thisPtr);
        }

        internal AutomationProperties(IObjectReference objRef)
        {
            _inner = objRef.As(global::ABI.Microsoft.UI.Xaml.Automation.IAutomationPropertiesMethods.IID);

        }


        public static bool operator ==(AutomationProperties x, AutomationProperties y) => (x?.ThisPtr ?? IntPtr.Zero) == (y?.ThisPtr ?? IntPtr.Zero);
        public static bool operator !=(AutomationProperties x, AutomationProperties y) => !(x == y);
        public bool Equals(AutomationProperties other) => this == other;
        public override bool Equals(object obj) => obj is AutomationProperties that && this == that;
        public override int GetHashCode() => ThisPtr.GetHashCode();


        bool IWinRTObject.HasUnwrappableNativeObject => true;
        IObjectReference IWinRTObject.NativeObject => _inner;
        private volatile global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> _queryInterfaceCache;
        private global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> MakeQueryInterfaceCache()
        {
            global::System.Threading.Interlocked.CompareExchange(ref _queryInterfaceCache, new global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference>(), null); 
            return _queryInterfaceCache;
        }
        global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> IWinRTObject.QueryInterfaceCache => _queryInterfaceCache ?? MakeQueryInterfaceCache();
        private volatile global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> _additionalTypeData;
        private global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> MakeAdditionalTypeData()
        {
            global::System.Threading.Interlocked.CompareExchange(ref _additionalTypeData, new global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object>(), null); 
            return _additionalTypeData;
        }
        global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> IWinRTObject.AdditionalTypeData => _additionalTypeData ?? MakeAdditionalTypeData();

        private struct InterfaceTag<I>{};


        private bool IsOverridableInterface(Guid iid) => false;

        global::System.Runtime.InteropServices.CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(ref Guid iid, out IntPtr ppv)
        {
            ppv = IntPtr.Zero;
            if (IsOverridableInterface(iid) || global::WinRT.Interop.IID.IID_IInspectable == iid)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
            }

            if (((IWinRTObject)this).NativeObject.TryAs(iid, out ppv) >= 0)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.Handled;
            }

            return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
        }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")]
    [global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Automation.AutomationProperty))]
    [global::ABI.Microsoft.UI.Xaml.Automation.AutomationPropertyRcwFactory]
    [global::WinRT.ProjectedRuntimeClass(typeof(IAutomationProperty))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    public sealed class AutomationProperty : global::System.Runtime.InteropServices.ICustomQueryInterface, IWinRTObject, IEquatable<AutomationProperty>
    {
        private IntPtr ThisPtr => _inner == null ? (((IWinRTObject)this).NativeObject).ThisPtr : _inner.ThisPtr;

        private readonly IObjectReference _inner = null;



        private IObjectReference _objRef_global__Microsoft_UI_Xaml_Automation_IAutomationProperty => _inner;


        public static AutomationProperty FromAbi(IntPtr thisPtr)
        {
            if (thisPtr == IntPtr.Zero) return null;
            return MarshalInspectable<AutomationProperty>.FromAbi(thisPtr);
        }

        internal AutomationProperty(IObjectReference objRef)
        {
            _inner = objRef.As(global::ABI.Microsoft.UI.Xaml.Automation.IAutomationPropertyMethods.IID);

        }


        public static bool operator ==(AutomationProperty x, AutomationProperty y) => (x?.ThisPtr ?? IntPtr.Zero) == (y?.ThisPtr ?? IntPtr.Zero);
        public static bool operator !=(AutomationProperty x, AutomationProperty y) => !(x == y);
        public bool Equals(AutomationProperty other) => this == other;
        public override bool Equals(object obj) => obj is AutomationProperty that && this == that;
        public override int GetHashCode() => ThisPtr.GetHashCode();


        bool IWinRTObject.HasUnwrappableNativeObject => true;
        IObjectReference IWinRTObject.NativeObject => _inner;
        private volatile global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> _queryInterfaceCache;
        private global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> MakeQueryInterfaceCache()
        {
            global::System.Threading.Interlocked.CompareExchange(ref _queryInterfaceCache, new global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference>(), null); 
            return _queryInterfaceCache;
        }
        global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> IWinRTObject.QueryInterfaceCache => _queryInterfaceCache ?? MakeQueryInterfaceCache();
        private volatile global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> _additionalTypeData;
        private global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> MakeAdditionalTypeData()
        {
            global::System.Threading.Interlocked.CompareExchange(ref _additionalTypeData, new global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object>(), null); 
            return _additionalTypeData;
        }
        global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> IWinRTObject.AdditionalTypeData => _additionalTypeData ?? MakeAdditionalTypeData();

        private struct InterfaceTag<I>{};


        private bool IsOverridableInterface(Guid iid) => false;

        global::System.Runtime.InteropServices.CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(ref Guid iid, out IntPtr ppv)
        {
            ppv = IntPtr.Zero;
            if (IsOverridableInterface(iid) || global::WinRT.Interop.IID.IID_IInspectable == iid)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
            }

            if (((IWinRTObject)this).NativeObject.TryAs(iid, out ppv) >= 0)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.Handled;
            }

            return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
        }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")][global::WinRT.WinRTExposedType(typeof(global::WinRT.EnumTypeDetails<AutomationStyleId>))][global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    public enum AutomationStyleId : int
    {
        Heading1 = unchecked((int)0x11171),
        Heading2 = unchecked((int)0x11172),
        Heading3 = unchecked((int)0x11173),
        Heading4 = unchecked((int)0x11174),
        Heading5 = unchecked((int)0x11175),
        Heading6 = unchecked((int)0x11176),
        Heading7 = unchecked((int)0x11177),
        Heading8 = unchecked((int)0x11178),
        Heading9 = unchecked((int)0x11179),
        Title = unchecked((int)0x1117a),
        Subtitle = unchecked((int)0x1117b),
        Normal = unchecked((int)0x1117c),
        Emphasis = unchecked((int)0x1117d),
        Quote = unchecked((int)0x1117e),
        BulletedList = unchecked((int)0x1117f),
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")][global::WinRT.WinRTExposedType(typeof(global::WinRT.EnumTypeDetails<AutomationTextDecorationLineStyle>))][global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    public enum AutomationTextDecorationLineStyle : int
    {
        None = unchecked((int)0),
        Single = unchecked((int)0x1),
        WordsOnly = unchecked((int)0x2),
        Double = unchecked((int)0x3),
        Dot = unchecked((int)0x4),
        Dash = unchecked((int)0x5),
        DashDot = unchecked((int)0x6),
        DashDotDot = unchecked((int)0x7),
        Wavy = unchecked((int)0x8),
        ThickSingle = unchecked((int)0x9),
        DoubleWavy = unchecked((int)0xa),
        ThickWavy = unchecked((int)0xb),
        LongDash = unchecked((int)0xc),
        ThickDash = unchecked((int)0xd),
        ThickDashDot = unchecked((int)0xe),
        ThickDashDotDot = unchecked((int)0xf),
        ThickDot = unchecked((int)0x10),
        ThickLongDash = unchecked((int)0x11),
        Other = unchecked((int)0x12),
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")][global::WinRT.WinRTExposedType(typeof(global::WinRT.EnumTypeDetails<AutomationTextEditChangeType>))][global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    public enum AutomationTextEditChangeType : int
    {
        None = unchecked((int)0),
        AutoCorrect = unchecked((int)0x1),
        Composition = unchecked((int)0x2),
        CompositionFinalized = unchecked((int)0x3),
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")]
    [global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Automation.DockPatternIdentifiers))]
    [global::ABI.Microsoft.UI.Xaml.Automation.DockPatternIdentifiersRcwFactory]
    [global::WinRT.ProjectedRuntimeClass(typeof(IDockPatternIdentifiers))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    public sealed class DockPatternIdentifiers : global::System.Runtime.InteropServices.ICustomQueryInterface, IWinRTObject, IEquatable<DockPatternIdentifiers>
    {
        private IntPtr ThisPtr => _inner == null ? (((IWinRTObject)this).NativeObject).ThisPtr : _inner.ThisPtr;

        private readonly IObjectReference _inner = null;



        private IObjectReference _objRef_global__Microsoft_UI_Xaml_Automation_IDockPatternIdentifiers => _inner;


        public static I As<I>() => ActivationFactory.Get("Microsoft.UI.Xaml.Automation.DockPatternIdentifiers").AsInterface<I>();

        private static volatile IObjectReference ___objRef_global__Microsoft_UI_Xaml_Automation_IDockPatternIdentifiersStatics;
        private static IObjectReference _objRef_global__Microsoft_UI_Xaml_Automation_IDockPatternIdentifiersStatics
        {
            get
            { 
                var factory = ___objRef_global__Microsoft_UI_Xaml_Automation_IDockPatternIdentifiersStatics;
                if (factory != null && factory.IsInCurrentContext)
                {
                    return factory;
                }
                else
                {
                    return ___objRef_global__Microsoft_UI_Xaml_Automation_IDockPatternIdentifiersStatics = ActivationFactory.Get("Microsoft.UI.Xaml.Automation.DockPatternIdentifiers", global::ABI.Microsoft.UI.Xaml.Automation.IDockPatternIdentifiersStaticsMethods.IID);
                }
            }
        }

        public static AutomationProperty DockPositionProperty => global::ABI.Microsoft.UI.Xaml.Automation.IDockPatternIdentifiersStaticsMethods.get_DockPositionProperty(_objRef_global__Microsoft_UI_Xaml_Automation_IDockPatternIdentifiersStatics);

        public static DockPatternIdentifiers FromAbi(IntPtr thisPtr)
        {
            if (thisPtr == IntPtr.Zero) return null;
            return MarshalInspectable<DockPatternIdentifiers>.FromAbi(thisPtr);
        }

        internal DockPatternIdentifiers(IObjectReference objRef)
        {
            _inner = objRef.As(global::ABI.Microsoft.UI.Xaml.Automation.IDockPatternIdentifiersMethods.IID);

        }


        public static bool operator ==(DockPatternIdentifiers x, DockPatternIdentifiers y) => (x?.ThisPtr ?? IntPtr.Zero) == (y?.ThisPtr ?? IntPtr.Zero);
        public static bool operator !=(DockPatternIdentifiers x, DockPatternIdentifiers y) => !(x == y);
        public bool Equals(DockPatternIdentifiers other) => this == other;
        public override bool Equals(object obj) => obj is DockPatternIdentifiers that && this == that;
        public override int GetHashCode() => ThisPtr.GetHashCode();


        bool IWinRTObject.HasUnwrappableNativeObject => true;
        IObjectReference IWinRTObject.NativeObject => _inner;
        private volatile global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> _queryInterfaceCache;
        private global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> MakeQueryInterfaceCache()
        {
            global::System.Threading.Interlocked.CompareExchange(ref _queryInterfaceCache, new global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference>(), null); 
            return _queryInterfaceCache;
        }
        global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> IWinRTObject.QueryInterfaceCache => _queryInterfaceCache ?? MakeQueryInterfaceCache();
        private volatile global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> _additionalTypeData;
        private global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> MakeAdditionalTypeData()
        {
            global::System.Threading.Interlocked.CompareExchange(ref _additionalTypeData, new global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object>(), null); 
            return _additionalTypeData;
        }
        global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> IWinRTObject.AdditionalTypeData => _additionalTypeData ?? MakeAdditionalTypeData();

        private struct InterfaceTag<I>{};


        private bool IsOverridableInterface(Guid iid) => false;

        global::System.Runtime.InteropServices.CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(ref Guid iid, out IntPtr ppv)
        {
            ppv = IntPtr.Zero;
            if (IsOverridableInterface(iid) || global::WinRT.Interop.IID.IID_IInspectable == iid)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
            }

            if (((IWinRTObject)this).NativeObject.TryAs(iid, out ppv) >= 0)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.Handled;
            }

            return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
        }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")][global::WinRT.WinRTExposedType(typeof(global::WinRT.EnumTypeDetails<DockPosition>))][global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    public enum DockPosition : int
    {
        Top = unchecked((int)0),
        Left = unchecked((int)0x1),
        Bottom = unchecked((int)0x2),
        Right = unchecked((int)0x3),
        Fill = unchecked((int)0x4),
        None = unchecked((int)0x5),
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")]
    [global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Automation.DragPatternIdentifiers))]
    [global::ABI.Microsoft.UI.Xaml.Automation.DragPatternIdentifiersRcwFactory]
    [global::WinRT.ProjectedRuntimeClass(typeof(IDragPatternIdentifiers))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    public sealed class DragPatternIdentifiers : global::System.Runtime.InteropServices.ICustomQueryInterface, IWinRTObject, IEquatable<DragPatternIdentifiers>
    {
        private IntPtr ThisPtr => _inner == null ? (((IWinRTObject)this).NativeObject).ThisPtr : _inner.ThisPtr;

        private readonly IObjectReference _inner = null;



        private IObjectReference _objRef_global__Microsoft_UI_Xaml_Automation_IDragPatternIdentifiers => _inner;


        public static I As<I>() => ActivationFactory.Get("Microsoft.UI.Xaml.Automation.DragPatternIdentifiers").AsInterface<I>();

        private static volatile IObjectReference ___objRef_global__Microsoft_UI_Xaml_Automation_IDragPatternIdentifiersStatics;
        private static IObjectReference _objRef_global__Microsoft_UI_Xaml_Automation_IDragPatternIdentifiersStatics
        {
            get
            { 
                var factory = ___objRef_global__Microsoft_UI_Xaml_Automation_IDragPatternIdentifiersStatics;
                if (factory != null && factory.IsInCurrentContext)
                {
                    return factory;
                }
                else
                {
                    return ___objRef_global__Microsoft_UI_Xaml_Automation_IDragPatternIdentifiersStatics = ActivationFactory.Get("Microsoft.UI.Xaml.Automation.DragPatternIdentifiers", global::ABI.Microsoft.UI.Xaml.Automation.IDragPatternIdentifiersStaticsMethods.IID);
                }
            }
        }

        public static AutomationProperty DropEffectProperty => global::ABI.Microsoft.UI.Xaml.Automation.IDragPatternIdentifiersStaticsMethods.get_DropEffectProperty(_objRef_global__Microsoft_UI_Xaml_Automation_IDragPatternIdentifiersStatics);

        public static AutomationProperty DropEffectsProperty => global::ABI.Microsoft.UI.Xaml.Automation.IDragPatternIdentifiersStaticsMethods.get_DropEffectsProperty(_objRef_global__Microsoft_UI_Xaml_Automation_IDragPatternIdentifiersStatics);

        public static AutomationProperty GrabbedItemsProperty => global::ABI.Microsoft.UI.Xaml.Automation.IDragPatternIdentifiersStaticsMethods.get_GrabbedItemsProperty(_objRef_global__Microsoft_UI_Xaml_Automation_IDragPatternIdentifiersStatics);

        public static AutomationProperty IsGrabbedProperty => global::ABI.Microsoft.UI.Xaml.Automation.IDragPatternIdentifiersStaticsMethods.get_IsGrabbedProperty(_objRef_global__Microsoft_UI_Xaml_Automation_IDragPatternIdentifiersStatics);

        public static DragPatternIdentifiers FromAbi(IntPtr thisPtr)
        {
            if (thisPtr == IntPtr.Zero) return null;
            return MarshalInspectable<DragPatternIdentifiers>.FromAbi(thisPtr);
        }

        internal DragPatternIdentifiers(IObjectReference objRef)
        {
            _inner = objRef.As(global::ABI.Microsoft.UI.Xaml.Automation.IDragPatternIdentifiersMethods.IID);

        }


        public static bool operator ==(DragPatternIdentifiers x, DragPatternIdentifiers y) => (x?.ThisPtr ?? IntPtr.Zero) == (y?.ThisPtr ?? IntPtr.Zero);
        public static bool operator !=(DragPatternIdentifiers x, DragPatternIdentifiers y) => !(x == y);
        public bool Equals(DragPatternIdentifiers other) => this == other;
        public override bool Equals(object obj) => obj is DragPatternIdentifiers that && this == that;
        public override int GetHashCode() => ThisPtr.GetHashCode();


        bool IWinRTObject.HasUnwrappableNativeObject => true;
        IObjectReference IWinRTObject.NativeObject => _inner;
        private volatile global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> _queryInterfaceCache;
        private global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> MakeQueryInterfaceCache()
        {
            global::System.Threading.Interlocked.CompareExchange(ref _queryInterfaceCache, new global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference>(), null); 
            return _queryInterfaceCache;
        }
        global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> IWinRTObject.QueryInterfaceCache => _queryInterfaceCache ?? MakeQueryInterfaceCache();
        private volatile global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> _additionalTypeData;
        private global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> MakeAdditionalTypeData()
        {
            global::System.Threading.Interlocked.CompareExchange(ref _additionalTypeData, new global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object>(), null); 
            return _additionalTypeData;
        }
        global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> IWinRTObject.AdditionalTypeData => _additionalTypeData ?? MakeAdditionalTypeData();

        private struct InterfaceTag<I>{};


        private bool IsOverridableInterface(Guid iid) => false;

        global::System.Runtime.InteropServices.CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(ref Guid iid, out IntPtr ppv)
        {
            ppv = IntPtr.Zero;
            if (IsOverridableInterface(iid) || global::WinRT.Interop.IID.IID_IInspectable == iid)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
            }

            if (((IWinRTObject)this).NativeObject.TryAs(iid, out ppv) >= 0)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.Handled;
            }

            return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
        }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")]
    [global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Automation.DropTargetPatternIdentifiers))]
    [global::ABI.Microsoft.UI.Xaml.Automation.DropTargetPatternIdentifiersRcwFactory]
    [global::WinRT.ProjectedRuntimeClass(typeof(IDropTargetPatternIdentifiers))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    public sealed class DropTargetPatternIdentifiers : global::System.Runtime.InteropServices.ICustomQueryInterface, IWinRTObject, IEquatable<DropTargetPatternIdentifiers>
    {
        private IntPtr ThisPtr => _inner == null ? (((IWinRTObject)this).NativeObject).ThisPtr : _inner.ThisPtr;

        private readonly IObjectReference _inner = null;



        private IObjectReference _objRef_global__Microsoft_UI_Xaml_Automation_IDropTargetPatternIdentifiers => _inner;


        public static I As<I>() => ActivationFactory.Get("Microsoft.UI.Xaml.Automation.DropTargetPatternIdentifiers").AsInterface<I>();

        private static volatile IObjectReference ___objRef_global__Microsoft_UI_Xaml_Automation_IDropTargetPatternIdentifiersStatics;
        private static IObjectReference _objRef_global__Microsoft_UI_Xaml_Automation_IDropTargetPatternIdentifiersStatics
        {
            get
            { 
                var factory = ___objRef_global__Microsoft_UI_Xaml_Automation_IDropTargetPatternIdentifiersStatics;
                if (factory != null && factory.IsInCurrentContext)
                {
                    return factory;
                }
                else
                {
                    return ___objRef_global__Microsoft_UI_Xaml_Automation_IDropTargetPatternIdentifiersStatics = ActivationFactory.Get("Microsoft.UI.Xaml.Automation.DropTargetPatternIdentifiers", global::ABI.Microsoft.UI.Xaml.Automation.IDropTargetPatternIdentifiersStaticsMethods.IID);
                }
            }
        }

        public static AutomationProperty DropTargetEffectProperty => global::ABI.Microsoft.UI.Xaml.Automation.IDropTargetPatternIdentifiersStaticsMethods.get_DropTargetEffectProperty(_objRef_global__Microsoft_UI_Xaml_Automation_IDropTargetPatternIdentifiersStatics);

        public static AutomationProperty DropTargetEffectsProperty => global::ABI.Microsoft.UI.Xaml.Automation.IDropTargetPatternIdentifiersStaticsMethods.get_DropTargetEffectsProperty(_objRef_global__Microsoft_UI_Xaml_Automation_IDropTargetPatternIdentifiersStatics);

        public static DropTargetPatternIdentifiers FromAbi(IntPtr thisPtr)
        {
            if (thisPtr == IntPtr.Zero) return null;
            return MarshalInspectable<DropTargetPatternIdentifiers>.FromAbi(thisPtr);
        }

        internal DropTargetPatternIdentifiers(IObjectReference objRef)
        {
            _inner = objRef.As(global::ABI.Microsoft.UI.Xaml.Automation.IDropTargetPatternIdentifiersMethods.IID);

        }


        public static bool operator ==(DropTargetPatternIdentifiers x, DropTargetPatternIdentifiers y) => (x?.ThisPtr ?? IntPtr.Zero) == (y?.ThisPtr ?? IntPtr.Zero);
        public static bool operator !=(DropTargetPatternIdentifiers x, DropTargetPatternIdentifiers y) => !(x == y);
        public bool Equals(DropTargetPatternIdentifiers other) => this == other;
        public override bool Equals(object obj) => obj is DropTargetPatternIdentifiers that && this == that;
        public override int GetHashCode() => ThisPtr.GetHashCode();


        bool IWinRTObject.HasUnwrappableNativeObject => true;
        IObjectReference IWinRTObject.NativeObject => _inner;
        private volatile global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> _queryInterfaceCache;
        private global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> MakeQueryInterfaceCache()
        {
            global::System.Threading.Interlocked.CompareExchange(ref _queryInterfaceCache, new global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference>(), null); 
            return _queryInterfaceCache;
        }
        global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> IWinRTObject.QueryInterfaceCache => _queryInterfaceCache ?? MakeQueryInterfaceCache();
        private volatile global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> _additionalTypeData;
        private global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> MakeAdditionalTypeData()
        {
            global::System.Threading.Interlocked.CompareExchange(ref _additionalTypeData, new global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object>(), null); 
            return _additionalTypeData;
        }
        global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> IWinRTObject.AdditionalTypeData => _additionalTypeData ?? MakeAdditionalTypeData();

        private struct InterfaceTag<I>{};


        private bool IsOverridableInterface(Guid iid) => false;

        global::System.Runtime.InteropServices.CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(ref Guid iid, out IntPtr ppv)
        {
            ppv = IntPtr.Zero;
            if (IsOverridableInterface(iid) || global::WinRT.Interop.IID.IID_IInspectable == iid)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
            }

            if (((IWinRTObject)this).NativeObject.TryAs(iid, out ppv) >= 0)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.Handled;
            }

            return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
        }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")]
    [global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Automation.ExpandCollapsePatternIdentifiers))]
    [global::ABI.Microsoft.UI.Xaml.Automation.ExpandCollapsePatternIdentifiersRcwFactory]
    [global::WinRT.ProjectedRuntimeClass(typeof(IExpandCollapsePatternIdentifiers))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    public sealed class ExpandCollapsePatternIdentifiers : global::System.Runtime.InteropServices.ICustomQueryInterface, IWinRTObject, IEquatable<ExpandCollapsePatternIdentifiers>
    {
        private IntPtr ThisPtr => _inner == null ? (((IWinRTObject)this).NativeObject).ThisPtr : _inner.ThisPtr;

        private readonly IObjectReference _inner = null;



        private IObjectReference _objRef_global__Microsoft_UI_Xaml_Automation_IExpandCollapsePatternIdentifiers => _inner;


        public static I As<I>() => ActivationFactory.Get("Microsoft.UI.Xaml.Automation.ExpandCollapsePatternIdentifiers").AsInterface<I>();

        private static volatile IObjectReference ___objRef_global__Microsoft_UI_Xaml_Automation_IExpandCollapsePatternIdentifiersStatics;
        private static IObjectReference _objRef_global__Microsoft_UI_Xaml_Automation_IExpandCollapsePatternIdentifiersStatics
        {
            get
            { 
                var factory = ___objRef_global__Microsoft_UI_Xaml_Automation_IExpandCollapsePatternIdentifiersStatics;
                if (factory != null && factory.IsInCurrentContext)
                {
                    return factory;
                }
                else
                {
                    return ___objRef_global__Microsoft_UI_Xaml_Automation_IExpandCollapsePatternIdentifiersStatics = ActivationFactory.Get("Microsoft.UI.Xaml.Automation.ExpandCollapsePatternIdentifiers", global::ABI.Microsoft.UI.Xaml.Automation.IExpandCollapsePatternIdentifiersStaticsMethods.IID);
                }
            }
        }

        public static AutomationProperty ExpandCollapseStateProperty => global::ABI.Microsoft.UI.Xaml.Automation.IExpandCollapsePatternIdentifiersStaticsMethods.get_ExpandCollapseStateProperty(_objRef_global__Microsoft_UI_Xaml_Automation_IExpandCollapsePatternIdentifiersStatics);

        public static ExpandCollapsePatternIdentifiers FromAbi(IntPtr thisPtr)
        {
            if (thisPtr == IntPtr.Zero) return null;
            return MarshalInspectable<ExpandCollapsePatternIdentifiers>.FromAbi(thisPtr);
        }

        internal ExpandCollapsePatternIdentifiers(IObjectReference objRef)
        {
            _inner = objRef.As(global::ABI.Microsoft.UI.Xaml.Automation.IExpandCollapsePatternIdentifiersMethods.IID);

        }


        public static bool operator ==(ExpandCollapsePatternIdentifiers x, ExpandCollapsePatternIdentifiers y) => (x?.ThisPtr ?? IntPtr.Zero) == (y?.ThisPtr ?? IntPtr.Zero);
        public static bool operator !=(ExpandCollapsePatternIdentifiers x, ExpandCollapsePatternIdentifiers y) => !(x == y);
        public bool Equals(ExpandCollapsePatternIdentifiers other) => this == other;
        public override bool Equals(object obj) => obj is ExpandCollapsePatternIdentifiers that && this == that;
        public override int GetHashCode() => ThisPtr.GetHashCode();


        bool IWinRTObject.HasUnwrappableNativeObject => true;
        IObjectReference IWinRTObject.NativeObject => _inner;
        private volatile global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> _queryInterfaceCache;
        private global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> MakeQueryInterfaceCache()
        {
            global::System.Threading.Interlocked.CompareExchange(ref _queryInterfaceCache, new global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference>(), null); 
            return _queryInterfaceCache;
        }
        global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> IWinRTObject.QueryInterfaceCache => _queryInterfaceCache ?? MakeQueryInterfaceCache();
        private volatile global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> _additionalTypeData;
        private global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> MakeAdditionalTypeData()
        {
            global::System.Threading.Interlocked.CompareExchange(ref _additionalTypeData, new global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object>(), null); 
            return _additionalTypeData;
        }
        global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> IWinRTObject.AdditionalTypeData => _additionalTypeData ?? MakeAdditionalTypeData();

        private struct InterfaceTag<I>{};


        private bool IsOverridableInterface(Guid iid) => false;

        global::System.Runtime.InteropServices.CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(ref Guid iid, out IntPtr ppv)
        {
            ppv = IntPtr.Zero;
            if (IsOverridableInterface(iid) || global::WinRT.Interop.IID.IID_IInspectable == iid)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
            }

            if (((IWinRTObject)this).NativeObject.TryAs(iid, out ppv) >= 0)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.Handled;
            }

            return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
        }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")][global::WinRT.WinRTExposedType(typeof(global::WinRT.EnumTypeDetails<ExpandCollapseState>))][global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    public enum ExpandCollapseState : int
    {
        Collapsed = unchecked((int)0),
        Expanded = unchecked((int)0x1),
        PartiallyExpanded = unchecked((int)0x2),
        LeafNode = unchecked((int)0x3),
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")]
    [global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Automation.GridItemPatternIdentifiers))]
    [global::ABI.Microsoft.UI.Xaml.Automation.GridItemPatternIdentifiersRcwFactory]
    [global::WinRT.ProjectedRuntimeClass(typeof(IGridItemPatternIdentifiers))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    public sealed class GridItemPatternIdentifiers : global::System.Runtime.InteropServices.ICustomQueryInterface, IWinRTObject, IEquatable<GridItemPatternIdentifiers>
    {
        private IntPtr ThisPtr => _inner == null ? (((IWinRTObject)this).NativeObject).ThisPtr : _inner.ThisPtr;

        private readonly IObjectReference _inner = null;



        private IObjectReference _objRef_global__Microsoft_UI_Xaml_Automation_IGridItemPatternIdentifiers => _inner;


        public static I As<I>() => ActivationFactory.Get("Microsoft.UI.Xaml.Automation.GridItemPatternIdentifiers").AsInterface<I>();

        private static volatile IObjectReference ___objRef_global__Microsoft_UI_Xaml_Automation_IGridItemPatternIdentifiersStatics;
        private static IObjectReference _objRef_global__Microsoft_UI_Xaml_Automation_IGridItemPatternIdentifiersStatics
        {
            get
            { 
                var factory = ___objRef_global__Microsoft_UI_Xaml_Automation_IGridItemPatternIdentifiersStatics;
                if (factory != null && factory.IsInCurrentContext)
                {
                    return factory;
                }
                else
                {
                    return ___objRef_global__Microsoft_UI_Xaml_Automation_IGridItemPatternIdentifiersStatics = ActivationFactory.Get("Microsoft.UI.Xaml.Automation.GridItemPatternIdentifiers", global::ABI.Microsoft.UI.Xaml.Automation.IGridItemPatternIdentifiersStaticsMethods.IID);
                }
            }
        }

        public static AutomationProperty ColumnProperty => global::ABI.Microsoft.UI.Xaml.Automation.IGridItemPatternIdentifiersStaticsMethods.get_ColumnProperty(_objRef_global__Microsoft_UI_Xaml_Automation_IGridItemPatternIdentifiersStatics);

        public static AutomationProperty ColumnSpanProperty => global::ABI.Microsoft.UI.Xaml.Automation.IGridItemPatternIdentifiersStaticsMethods.get_ColumnSpanProperty(_objRef_global__Microsoft_UI_Xaml_Automation_IGridItemPatternIdentifiersStatics);

        public static AutomationProperty ContainingGridProperty => global::ABI.Microsoft.UI.Xaml.Automation.IGridItemPatternIdentifiersStaticsMethods.get_ContainingGridProperty(_objRef_global__Microsoft_UI_Xaml_Automation_IGridItemPatternIdentifiersStatics);

        public static AutomationProperty RowProperty => global::ABI.Microsoft.UI.Xaml.Automation.IGridItemPatternIdentifiersStaticsMethods.get_RowProperty(_objRef_global__Microsoft_UI_Xaml_Automation_IGridItemPatternIdentifiersStatics);

        public static AutomationProperty RowSpanProperty => global::ABI.Microsoft.UI.Xaml.Automation.IGridItemPatternIdentifiersStaticsMethods.get_RowSpanProperty(_objRef_global__Microsoft_UI_Xaml_Automation_IGridItemPatternIdentifiersStatics);

        public static GridItemPatternIdentifiers FromAbi(IntPtr thisPtr)
        {
            if (thisPtr == IntPtr.Zero) return null;
            return MarshalInspectable<GridItemPatternIdentifiers>.FromAbi(thisPtr);
        }

        internal GridItemPatternIdentifiers(IObjectReference objRef)
        {
            _inner = objRef.As(global::ABI.Microsoft.UI.Xaml.Automation.IGridItemPatternIdentifiersMethods.IID);

        }


        public static bool operator ==(GridItemPatternIdentifiers x, GridItemPatternIdentifiers y) => (x?.ThisPtr ?? IntPtr.Zero) == (y?.ThisPtr ?? IntPtr.Zero);
        public static bool operator !=(GridItemPatternIdentifiers x, GridItemPatternIdentifiers y) => !(x == y);
        public bool Equals(GridItemPatternIdentifiers other) => this == other;
        public override bool Equals(object obj) => obj is GridItemPatternIdentifiers that && this == that;
        public override int GetHashCode() => ThisPtr.GetHashCode();


        bool IWinRTObject.HasUnwrappableNativeObject => true;
        IObjectReference IWinRTObject.NativeObject => _inner;
        private volatile global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> _queryInterfaceCache;
        private global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> MakeQueryInterfaceCache()
        {
            global::System.Threading.Interlocked.CompareExchange(ref _queryInterfaceCache, new global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference>(), null); 
            return _queryInterfaceCache;
        }
        global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> IWinRTObject.QueryInterfaceCache => _queryInterfaceCache ?? MakeQueryInterfaceCache();
        private volatile global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> _additionalTypeData;
        private global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> MakeAdditionalTypeData()
        {
            global::System.Threading.Interlocked.CompareExchange(ref _additionalTypeData, new global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object>(), null); 
            return _additionalTypeData;
        }
        global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> IWinRTObject.AdditionalTypeData => _additionalTypeData ?? MakeAdditionalTypeData();

        private struct InterfaceTag<I>{};


        private bool IsOverridableInterface(Guid iid) => false;

        global::System.Runtime.InteropServices.CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(ref Guid iid, out IntPtr ppv)
        {
            ppv = IntPtr.Zero;
            if (IsOverridableInterface(iid) || global::WinRT.Interop.IID.IID_IInspectable == iid)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
            }

            if (((IWinRTObject)this).NativeObject.TryAs(iid, out ppv) >= 0)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.Handled;
            }

            return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
        }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")]
    [global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Automation.GridPatternIdentifiers))]
    [global::ABI.Microsoft.UI.Xaml.Automation.GridPatternIdentifiersRcwFactory]
    [global::WinRT.ProjectedRuntimeClass(typeof(IGridPatternIdentifiers))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    public sealed class GridPatternIdentifiers : global::System.Runtime.InteropServices.ICustomQueryInterface, IWinRTObject, IEquatable<GridPatternIdentifiers>
    {
        private IntPtr ThisPtr => _inner == null ? (((IWinRTObject)this).NativeObject).ThisPtr : _inner.ThisPtr;

        private readonly IObjectReference _inner = null;



        private IObjectReference _objRef_global__Microsoft_UI_Xaml_Automation_IGridPatternIdentifiers => _inner;


        public static I As<I>() => ActivationFactory.Get("Microsoft.UI.Xaml.Automation.GridPatternIdentifiers").AsInterface<I>();

        private static volatile IObjectReference ___objRef_global__Microsoft_UI_Xaml_Automation_IGridPatternIdentifiersStatics;
        private static IObjectReference _objRef_global__Microsoft_UI_Xaml_Automation_IGridPatternIdentifiersStatics
        {
            get
            { 
                var factory = ___objRef_global__Microsoft_UI_Xaml_Automation_IGridPatternIdentifiersStatics;
                if (factory != null && factory.IsInCurrentContext)
                {
                    return factory;
                }
                else
                {
                    return ___objRef_global__Microsoft_UI_Xaml_Automation_IGridPatternIdentifiersStatics = ActivationFactory.Get("Microsoft.UI.Xaml.Automation.GridPatternIdentifiers", global::ABI.Microsoft.UI.Xaml.Automation.IGridPatternIdentifiersStaticsMethods.IID);
                }
            }
        }

        public static AutomationProperty ColumnCountProperty => global::ABI.Microsoft.UI.Xaml.Automation.IGridPatternIdentifiersStaticsMethods.get_ColumnCountProperty(_objRef_global__Microsoft_UI_Xaml_Automation_IGridPatternIdentifiersStatics);

        public static AutomationProperty RowCountProperty => global::ABI.Microsoft.UI.Xaml.Automation.IGridPatternIdentifiersStaticsMethods.get_RowCountProperty(_objRef_global__Microsoft_UI_Xaml_Automation_IGridPatternIdentifiersStatics);

        public static GridPatternIdentifiers FromAbi(IntPtr thisPtr)
        {
            if (thisPtr == IntPtr.Zero) return null;
            return MarshalInspectable<GridPatternIdentifiers>.FromAbi(thisPtr);
        }

        internal GridPatternIdentifiers(IObjectReference objRef)
        {
            _inner = objRef.As(global::ABI.Microsoft.UI.Xaml.Automation.IGridPatternIdentifiersMethods.IID);

        }


        public static bool operator ==(GridPatternIdentifiers x, GridPatternIdentifiers y) => (x?.ThisPtr ?? IntPtr.Zero) == (y?.ThisPtr ?? IntPtr.Zero);
        public static bool operator !=(GridPatternIdentifiers x, GridPatternIdentifiers y) => !(x == y);
        public bool Equals(GridPatternIdentifiers other) => this == other;
        public override bool Equals(object obj) => obj is GridPatternIdentifiers that && this == that;
        public override int GetHashCode() => ThisPtr.GetHashCode();


        bool IWinRTObject.HasUnwrappableNativeObject => true;
        IObjectReference IWinRTObject.NativeObject => _inner;
        private volatile global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> _queryInterfaceCache;
        private global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> MakeQueryInterfaceCache()
        {
            global::System.Threading.Interlocked.CompareExchange(ref _queryInterfaceCache, new global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference>(), null); 
            return _queryInterfaceCache;
        }
        global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> IWinRTObject.QueryInterfaceCache => _queryInterfaceCache ?? MakeQueryInterfaceCache();
        private volatile global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> _additionalTypeData;
        private global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> MakeAdditionalTypeData()
        {
            global::System.Threading.Interlocked.CompareExchange(ref _additionalTypeData, new global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object>(), null); 
            return _additionalTypeData;
        }
        global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> IWinRTObject.AdditionalTypeData => _additionalTypeData ?? MakeAdditionalTypeData();

        private struct InterfaceTag<I>{};


        private bool IsOverridableInterface(Guid iid) => false;

        global::System.Runtime.InteropServices.CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(ref Guid iid, out IntPtr ppv)
        {
            ppv = IntPtr.Zero;
            if (IsOverridableInterface(iid) || global::WinRT.Interop.IID.IID_IInspectable == iid)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
            }

            if (((IWinRTObject)this).NativeObject.TryAs(iid, out ppv) >= 0)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.Handled;
            }

            return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
        }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")][Guid("92D76915-0CD3-59CD-8AE0-C9004628BA1E")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Automation.IAnnotationPatternIdentifiers))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    internal interface IAnnotationPatternIdentifiers
    {
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")][Guid("20A136E2-4A47-5DE5-9E1E-ECFC6D92F52A")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Automation.IAnnotationPatternIdentifiersStatics))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    internal interface IAnnotationPatternIdentifiersStatics
    {
        AutomationProperty AnnotationTypeIdProperty { get; }
        AutomationProperty AnnotationTypeNameProperty { get; }
        AutomationProperty AuthorProperty { get; }
        AutomationProperty DateTimeProperty { get; }
        AutomationProperty TargetProperty { get; }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")][Guid("C2CC46AD-1414-5F1B-808A-89E5D53D82FE")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Automation.IAutomationAnnotation))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    internal interface IAutomationAnnotation
    {
        global::Microsoft.UI.Xaml.UIElement Element { get; set; }
        AnnotationType Type { get; set; }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")][Guid("95F82773-EAC5-572E-87DE-24D9514B9A89")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Automation.IAutomationAnnotationFactory))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    internal interface IAutomationAnnotationFactory
    {
        AutomationAnnotation CreateInstance(AnnotationType type);
        AutomationAnnotation CreateWithElementParameter(AnnotationType type, global::Microsoft.UI.Xaml.UIElement element);
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")][Guid("C5ABDC1E-FC26-5444-A8B3-59B2C0A95578")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Automation.IAutomationAnnotationStatics))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    internal interface IAutomationAnnotationStatics
    {
        global::Microsoft.UI.Xaml.DependencyProperty ElementProperty { get; }
        global::Microsoft.UI.Xaml.DependencyProperty TypeProperty { get; }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")][Guid("2FB51A33-B0CF-5A4C-9ED3-267ECA7AEEFC")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Automation.IAutomationElementIdentifiers))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    internal interface IAutomationElementIdentifiers
    {
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")][Guid("72AF6B8C-3E12-5E7A-A2EC-26DC193F9DF9")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Automation.IAutomationElementIdentifiersStatics))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    internal interface IAutomationElementIdentifiersStatics
    {
        AutomationProperty AcceleratorKeyProperty { get; }
        AutomationProperty AccessKeyProperty { get; }
        AutomationProperty AnnotationsProperty { get; }
        AutomationProperty AutomationIdProperty { get; }
        AutomationProperty BoundingRectangleProperty { get; }
        AutomationProperty ClassNameProperty { get; }
        AutomationProperty ClickablePointProperty { get; }
        AutomationProperty ControlTypeProperty { get; }
        AutomationProperty ControlledPeersProperty { get; }
        AutomationProperty CultureProperty { get; }
        AutomationProperty DescribedByProperty { get; }
        AutomationProperty FlowsFromProperty { get; }
        AutomationProperty FlowsToProperty { get; }
        AutomationProperty FullDescriptionProperty { get; }
        AutomationProperty HasKeyboardFocusProperty { get; }
        AutomationProperty HeadingLevelProperty { get; }
        AutomationProperty HelpTextProperty { get; }
        AutomationProperty IsContentElementProperty { get; }
        AutomationProperty IsControlElementProperty { get; }
        AutomationProperty IsDataValidForFormProperty { get; }
        AutomationProperty IsDialogProperty { get; }
        AutomationProperty IsEnabledProperty { get; }
        AutomationProperty IsKeyboardFocusableProperty { get; }
        AutomationProperty IsOffscreenProperty { get; }
        AutomationProperty IsPasswordProperty { get; }
        AutomationProperty IsPeripheralProperty { get; }
        AutomationProperty IsRequiredForFormProperty { get; }
        AutomationProperty ItemStatusProperty { get; }
        AutomationProperty ItemTypeProperty { get; }
        AutomationProperty LabeledByProperty { get; }
        AutomationProperty LandmarkTypeProperty { get; }
        AutomationProperty LevelProperty { get; }
        AutomationProperty LiveSettingProperty { get; }
        AutomationProperty LocalizedControlTypeProperty { get; }
        AutomationProperty LocalizedLandmarkTypeProperty { get; }
        AutomationProperty NameProperty { get; }
        AutomationProperty OrientationProperty { get; }
        AutomationProperty PositionInSetProperty { get; }
        AutomationProperty SizeOfSetProperty { get; }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")][Guid("525C6A71-DD8A-52A0-977B-DB1B02F8E896")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Automation.IAutomationProperties))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    internal interface IAutomationProperties
    {
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")][Guid("B1E3E0F3-112F-5966-87DC-7862D4AD50E5")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Automation.IAutomationPropertiesStatics))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    internal interface IAutomationPropertiesStatics
    {
        string GetAcceleratorKey(global::Microsoft.UI.Xaml.DependencyObject element);
        void SetAcceleratorKey(global::Microsoft.UI.Xaml.DependencyObject element, string value);
        string GetAccessKey(global::Microsoft.UI.Xaml.DependencyObject element);
        void SetAccessKey(global::Microsoft.UI.Xaml.DependencyObject element, string value);
        string GetAutomationId(global::Microsoft.UI.Xaml.DependencyObject element);
        void SetAutomationId(global::Microsoft.UI.Xaml.DependencyObject element, string value);
        string GetHelpText(global::Microsoft.UI.Xaml.DependencyObject element);
        void SetHelpText(global::Microsoft.UI.Xaml.DependencyObject element, string value);
        bool GetIsRequiredForForm(global::Microsoft.UI.Xaml.DependencyObject element);
        void SetIsRequiredForForm(global::Microsoft.UI.Xaml.DependencyObject element, bool value);
        string GetItemStatus(global::Microsoft.UI.Xaml.DependencyObject element);
        void SetItemStatus(global::Microsoft.UI.Xaml.DependencyObject element, string value);
        string GetItemType(global::Microsoft.UI.Xaml.DependencyObject element);
        void SetItemType(global::Microsoft.UI.Xaml.DependencyObject element, string value);
        global::Microsoft.UI.Xaml.UIElement GetLabeledBy(global::Microsoft.UI.Xaml.DependencyObject element);
        void SetLabeledBy(global::Microsoft.UI.Xaml.DependencyObject element, global::Microsoft.UI.Xaml.UIElement value);
        string GetName(global::Microsoft.UI.Xaml.DependencyObject element);
        void SetName(global::Microsoft.UI.Xaml.DependencyObject element, string value);
        global::Microsoft.UI.Xaml.Automation.Peers.AutomationLiveSetting GetLiveSetting(global::Microsoft.UI.Xaml.DependencyObject element);
        void SetLiveSetting(global::Microsoft.UI.Xaml.DependencyObject element, global::Microsoft.UI.Xaml.Automation.Peers.AutomationLiveSetting value);
        global::Microsoft.UI.Xaml.Automation.Peers.AccessibilityView GetAccessibilityView(global::Microsoft.UI.Xaml.DependencyObject element);
        void SetAccessibilityView(global::Microsoft.UI.Xaml.DependencyObject element, global::Microsoft.UI.Xaml.Automation.Peers.AccessibilityView value);
        global::System.Collections.Generic.IList<global::Microsoft.UI.Xaml.UIElement> GetControlledPeers(global::Microsoft.UI.Xaml.DependencyObject element);
        int GetPositionInSet(global::Microsoft.UI.Xaml.DependencyObject element);
        void SetPositionInSet(global::Microsoft.UI.Xaml.DependencyObject element, int value);
        int GetSizeOfSet(global::Microsoft.UI.Xaml.DependencyObject element);
        void SetSizeOfSet(global::Microsoft.UI.Xaml.DependencyObject element, int value);
        int GetLevel(global::Microsoft.UI.Xaml.DependencyObject element);
        void SetLevel(global::Microsoft.UI.Xaml.DependencyObject element, int value);
        global::System.Collections.Generic.IList<AutomationAnnotation> GetAnnotations(global::Microsoft.UI.Xaml.DependencyObject element);
        global::Microsoft.UI.Xaml.Automation.Peers.AutomationLandmarkType GetLandmarkType(global::Microsoft.UI.Xaml.DependencyObject element);
        void SetLandmarkType(global::Microsoft.UI.Xaml.DependencyObject element, global::Microsoft.UI.Xaml.Automation.Peers.AutomationLandmarkType value);
        string GetLocalizedLandmarkType(global::Microsoft.UI.Xaml.DependencyObject element);
        void SetLocalizedLandmarkType(global::Microsoft.UI.Xaml.DependencyObject element, string value);
        bool GetIsPeripheral(global::Microsoft.UI.Xaml.DependencyObject element);
        void SetIsPeripheral(global::Microsoft.UI.Xaml.DependencyObject element, bool value);
        bool GetIsDataValidForForm(global::Microsoft.UI.Xaml.DependencyObject element);
        void SetIsDataValidForForm(global::Microsoft.UI.Xaml.DependencyObject element, bool value);
        string GetFullDescription(global::Microsoft.UI.Xaml.DependencyObject element);
        void SetFullDescription(global::Microsoft.UI.Xaml.DependencyObject element, string value);
        string GetLocalizedControlType(global::Microsoft.UI.Xaml.DependencyObject element);
        void SetLocalizedControlType(global::Microsoft.UI.Xaml.DependencyObject element, string value);
        global::System.Collections.Generic.IList<global::Microsoft.UI.Xaml.DependencyObject> GetDescribedBy(global::Microsoft.UI.Xaml.DependencyObject element);
        global::System.Collections.Generic.IList<global::Microsoft.UI.Xaml.DependencyObject> GetFlowsTo(global::Microsoft.UI.Xaml.DependencyObject element);
        global::System.Collections.Generic.IList<global::Microsoft.UI.Xaml.DependencyObject> GetFlowsFrom(global::Microsoft.UI.Xaml.DependencyObject element);
        int GetCulture(global::Microsoft.UI.Xaml.DependencyObject element);
        void SetCulture(global::Microsoft.UI.Xaml.DependencyObject element, int value);
        global::Microsoft.UI.Xaml.Automation.Peers.AutomationHeadingLevel GetHeadingLevel(global::Microsoft.UI.Xaml.DependencyObject element);
        void SetHeadingLevel(global::Microsoft.UI.Xaml.DependencyObject element, global::Microsoft.UI.Xaml.Automation.Peers.AutomationHeadingLevel value);
        bool GetIsDialog(global::Microsoft.UI.Xaml.DependencyObject element);
        void SetIsDialog(global::Microsoft.UI.Xaml.DependencyObject element, bool value);
        global::Microsoft.UI.Xaml.DependencyProperty AcceleratorKeyProperty { get; }
        global::Microsoft.UI.Xaml.DependencyProperty AccessKeyProperty { get; }
        global::Microsoft.UI.Xaml.DependencyProperty AccessibilityViewProperty { get; }
        global::Microsoft.UI.Xaml.DependencyProperty AnnotationsProperty { get; }
        global::Microsoft.UI.Xaml.DependencyProperty AutomationIdProperty { get; }
        global::Microsoft.UI.Xaml.DependencyProperty ControlledPeersProperty { get; }
        global::Microsoft.UI.Xaml.DependencyProperty CultureProperty { get; }
        global::Microsoft.UI.Xaml.DependencyProperty DescribedByProperty { get; }
        global::Microsoft.UI.Xaml.DependencyProperty FlowsFromProperty { get; }
        global::Microsoft.UI.Xaml.DependencyProperty FlowsToProperty { get; }
        global::Microsoft.UI.Xaml.DependencyProperty FullDescriptionProperty { get; }
        global::Microsoft.UI.Xaml.DependencyProperty HeadingLevelProperty { get; }
        global::Microsoft.UI.Xaml.DependencyProperty HelpTextProperty { get; }
        global::Microsoft.UI.Xaml.DependencyProperty IsDataValidForFormProperty { get; }
        global::Microsoft.UI.Xaml.DependencyProperty IsDialogProperty { get; }
        global::Microsoft.UI.Xaml.DependencyProperty IsPeripheralProperty { get; }
        global::Microsoft.UI.Xaml.DependencyProperty IsRequiredForFormProperty { get; }
        global::Microsoft.UI.Xaml.DependencyProperty ItemStatusProperty { get; }
        global::Microsoft.UI.Xaml.DependencyProperty ItemTypeProperty { get; }
        global::Microsoft.UI.Xaml.DependencyProperty LabeledByProperty { get; }
        global::Microsoft.UI.Xaml.DependencyProperty LandmarkTypeProperty { get; }
        global::Microsoft.UI.Xaml.DependencyProperty LevelProperty { get; }
        global::Microsoft.UI.Xaml.DependencyProperty LiveSettingProperty { get; }
        global::Microsoft.UI.Xaml.DependencyProperty LocalizedControlTypeProperty { get; }
        global::Microsoft.UI.Xaml.DependencyProperty LocalizedLandmarkTypeProperty { get; }
        global::Microsoft.UI.Xaml.DependencyProperty NameProperty { get; }
        global::Microsoft.UI.Xaml.DependencyProperty PositionInSetProperty { get; }
        global::Microsoft.UI.Xaml.DependencyProperty SizeOfSetProperty { get; }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")][Guid("D933A3ED-E90A-5DF0-853D-CAD17A0B9EC8")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Automation.IAutomationPropertiesStatics2))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 196608u)]
    internal interface IAutomationPropertiesStatics2
    {
        global::Microsoft.UI.Xaml.Automation.Peers.AutomationControlType GetAutomationControlType(global::Microsoft.UI.Xaml.UIElement element);
        void SetAutomationControlType(global::Microsoft.UI.Xaml.UIElement element, global::Microsoft.UI.Xaml.Automation.Peers.AutomationControlType value);
        global::Microsoft.UI.Xaml.DependencyProperty AutomationControlTypeProperty { get; }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")][Guid("5CA6B2C8-FF86-5A41-AA18-6948FAE592CF")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Automation.IAutomationProperty))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    internal interface IAutomationProperty
    {
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")][Guid("75574F99-D145-547E-972B-7D879F93C03E")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Automation.IDockPatternIdentifiers))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    internal interface IDockPatternIdentifiers
    {
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")][Guid("02D5A72C-F49D-53A9-B9FB-AF2719D16CCF")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Automation.IDockPatternIdentifiersStatics))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    internal interface IDockPatternIdentifiersStatics
    {
        AutomationProperty DockPositionProperty { get; }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")][Guid("AA2FDFD5-FB45-5D2B-8D92-A8E7B07061C2")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Automation.IDragPatternIdentifiers))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    internal interface IDragPatternIdentifiers
    {
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")][Guid("482EEE70-0BFC-5552-9E7D-8DFFC526B2F7")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Automation.IDragPatternIdentifiersStatics))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    internal interface IDragPatternIdentifiersStatics
    {
        AutomationProperty DropEffectProperty { get; }
        AutomationProperty DropEffectsProperty { get; }
        AutomationProperty GrabbedItemsProperty { get; }
        AutomationProperty IsGrabbedProperty { get; }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")][Guid("133E8FF3-1DDD-5CBB-B908-1484D7C04DA7")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Automation.IDropTargetPatternIdentifiers))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    internal interface IDropTargetPatternIdentifiers
    {
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")][Guid("6DA6F0BD-B942-5283-BE35-501AE87F88C7")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Automation.IDropTargetPatternIdentifiersStatics))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    internal interface IDropTargetPatternIdentifiersStatics
    {
        AutomationProperty DropTargetEffectProperty { get; }
        AutomationProperty DropTargetEffectsProperty { get; }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")][Guid("CEC15D9F-8630-569A-86A0-524BBEA618FF")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Automation.IExpandCollapsePatternIdentifiers))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    internal interface IExpandCollapsePatternIdentifiers
    {
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")][Guid("283101F4-C40C-55BF-A23B-D62B73B6AA35")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Automation.IExpandCollapsePatternIdentifiersStatics))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    internal interface IExpandCollapsePatternIdentifiersStatics
    {
        AutomationProperty ExpandCollapseStateProperty { get; }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")][Guid("93609087-1114-557D-B17B-F801E41CEBBB")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Automation.IGridItemPatternIdentifiers))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    internal interface IGridItemPatternIdentifiers
    {
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")][Guid("8072BC18-87D0-5A02-A0A1-F9AEC968C0E7")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Automation.IGridItemPatternIdentifiersStatics))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    internal interface IGridItemPatternIdentifiersStatics
    {
        AutomationProperty ColumnProperty { get; }
        AutomationProperty ColumnSpanProperty { get; }
        AutomationProperty ContainingGridProperty { get; }
        AutomationProperty RowProperty { get; }
        AutomationProperty RowSpanProperty { get; }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")][Guid("E5E1E250-C37C-54A2-8C61-1D9CCD3BB39C")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Automation.IGridPatternIdentifiers))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    internal interface IGridPatternIdentifiers
    {
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")][Guid("E861604C-101F-5A6D-A308-3714F510F744")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Automation.IGridPatternIdentifiersStatics))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    internal interface IGridPatternIdentifiersStatics
    {
        AutomationProperty ColumnCountProperty { get; }
        AutomationProperty RowCountProperty { get; }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")][Guid("70E4C847-2B82-5ECF-B808-E9D453C1FE53")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Automation.IMultipleViewPatternIdentifiers))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    internal interface IMultipleViewPatternIdentifiers
    {
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")][Guid("AC71DAEF-D094-5C90-94AF-1FA474AB45FE")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Automation.IMultipleViewPatternIdentifiersStatics))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    internal interface IMultipleViewPatternIdentifiersStatics
    {
        AutomationProperty CurrentViewProperty { get; }
        AutomationProperty SupportedViewsProperty { get; }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")][Guid("C114DB37-6A75-5EF1-A542-D3B13F92CBFE")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Automation.IRangeValuePatternIdentifiers))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    internal interface IRangeValuePatternIdentifiers
    {
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")][Guid("0AAA9AD7-F9B8-52A1-BC96-2A97FE389ED0")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Automation.IRangeValuePatternIdentifiersStatics))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    internal interface IRangeValuePatternIdentifiersStatics
    {
        AutomationProperty IsReadOnlyProperty { get; }
        AutomationProperty LargeChangeProperty { get; }
        AutomationProperty MaximumProperty { get; }
        AutomationProperty MinimumProperty { get; }
        AutomationProperty SmallChangeProperty { get; }
        AutomationProperty ValueProperty { get; }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")][Guid("04F1A4B8-EDC7-55F2-96DF-A9C7E809372E")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Automation.IScrollPatternIdentifiers))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    internal interface IScrollPatternIdentifiers
    {
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")][Guid("0F94F2F0-E0D2-5A24-B415-8D1506CE47AA")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Automation.IScrollPatternIdentifiersStatics))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    internal interface IScrollPatternIdentifiersStatics
    {
        AutomationProperty HorizontalScrollPercentProperty { get; }
        AutomationProperty HorizontalViewSizeProperty { get; }
        AutomationProperty HorizontallyScrollableProperty { get; }
        double NoScroll { get; }
        AutomationProperty VerticalScrollPercentProperty { get; }
        AutomationProperty VerticalViewSizeProperty { get; }
        AutomationProperty VerticallyScrollableProperty { get; }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")][Guid("CE3A549D-A2CB-594D-A2A4-44778C09CCA5")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Automation.ISelectionItemPatternIdentifiers))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    internal interface ISelectionItemPatternIdentifiers
    {
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")][Guid("2B8EAD7C-4E03-5B84-9E34-8B7384CBD862")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Automation.ISelectionItemPatternIdentifiersStatics))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    internal interface ISelectionItemPatternIdentifiersStatics
    {
        AutomationProperty IsSelectedProperty { get; }
        AutomationProperty SelectionContainerProperty { get; }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")][Guid("401743D2-1FBA-5D05-B89F-631676453237")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Automation.ISelectionPatternIdentifiers))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    internal interface ISelectionPatternIdentifiers
    {
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")][Guid("F3ED111B-B20A-5E5E-A232-07F607FD5C07")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Automation.ISelectionPatternIdentifiersStatics))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    internal interface ISelectionPatternIdentifiersStatics
    {
        AutomationProperty CanSelectMultipleProperty { get; }
        AutomationProperty IsSelectionRequiredProperty { get; }
        AutomationProperty SelectionProperty { get; }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")][Guid("DCA2EC46-8564-5C9C-BA90-2C08455F697B")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Automation.ISpreadsheetItemPatternIdentifiers))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    internal interface ISpreadsheetItemPatternIdentifiers
    {
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")][Guid("7EB10F80-8D3A-59AD-A2B9-05D8CECF18DB")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Automation.ISpreadsheetItemPatternIdentifiersStatics))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    internal interface ISpreadsheetItemPatternIdentifiersStatics
    {
        AutomationProperty FormulaProperty { get; }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")][Guid("13AECA5E-B496-5DF5-AEA5-330E1F0490EB")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Automation.IStylesPatternIdentifiers))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    internal interface IStylesPatternIdentifiers
    {
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")][Guid("B232287A-BC4C-581E-A33C-3D6AEE10D04B")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Automation.IStylesPatternIdentifiersStatics))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    internal interface IStylesPatternIdentifiersStatics
    {
        AutomationProperty ExtendedPropertiesProperty { get; }
        AutomationProperty FillColorProperty { get; }
        AutomationProperty FillPatternColorProperty { get; }
        AutomationProperty FillPatternStyleProperty { get; }
        AutomationProperty ShapeProperty { get; }
        AutomationProperty StyleIdProperty { get; }
        AutomationProperty StyleNameProperty { get; }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")][Guid("B4DE5D03-A5B4-5CA1-8715-16C8C6A10FCC")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Automation.ITableItemPatternIdentifiers))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    internal interface ITableItemPatternIdentifiers
    {
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")][Guid("81D24BD7-66FB-53EF-9B32-D00F9C240A14")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Automation.ITableItemPatternIdentifiersStatics))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    internal interface ITableItemPatternIdentifiersStatics
    {
        AutomationProperty ColumnHeaderItemsProperty { get; }
        AutomationProperty RowHeaderItemsProperty { get; }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")][Guid("3D7F9C0B-FF8F-50FA-BC01-2CC3C2E06E2C")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Automation.ITablePatternIdentifiers))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    internal interface ITablePatternIdentifiers
    {
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")][Guid("3660935E-BCBB-5848-8E9A-264854F7A19A")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Automation.ITablePatternIdentifiersStatics))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    internal interface ITablePatternIdentifiersStatics
    {
        AutomationProperty ColumnHeadersProperty { get; }
        AutomationProperty RowHeadersProperty { get; }
        AutomationProperty RowOrColumnMajorProperty { get; }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")][Guid("A0D2DF4C-BA59-51D9-9C01-034D7941C280")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Automation.ITogglePatternIdentifiers))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    internal interface ITogglePatternIdentifiers
    {
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")][Guid("862920B5-DCB3-5691-A456-C2F15C476DFB")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Automation.ITogglePatternIdentifiersStatics))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    internal interface ITogglePatternIdentifiersStatics
    {
        AutomationProperty ToggleStateProperty { get; }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")][Guid("6EF7595C-DB8C-51B0-878B-34B7EF12F4DA")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Automation.ITransformPattern2Identifiers))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    internal interface ITransformPattern2Identifiers
    {
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")][Guid("D9876FF5-89ED-5333-8111-AD25A28BEE8B")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Automation.ITransformPattern2IdentifiersStatics))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    internal interface ITransformPattern2IdentifiersStatics
    {
        AutomationProperty CanZoomProperty { get; }
        AutomationProperty MaxZoomProperty { get; }
        AutomationProperty MinZoomProperty { get; }
        AutomationProperty ZoomLevelProperty { get; }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")][Guid("2348187B-C50F-5A0E-BC05-305AC71B3B6B")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Automation.ITransformPatternIdentifiers))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    internal interface ITransformPatternIdentifiers
    {
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")][Guid("CB7D84E4-5429-5188-8AA0-5F96558A8790")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Automation.ITransformPatternIdentifiersStatics))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    internal interface ITransformPatternIdentifiersStatics
    {
        AutomationProperty CanMoveProperty { get; }
        AutomationProperty CanResizeProperty { get; }
        AutomationProperty CanRotateProperty { get; }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")][Guid("FB493395-FB97-59D5-9323-4651CE964B55")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Automation.IValuePatternIdentifiers))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    internal interface IValuePatternIdentifiers
    {
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")][Guid("2019FAF5-CE64-59A7-BC13-0677C3146724")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Automation.IValuePatternIdentifiersStatics))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    internal interface IValuePatternIdentifiersStatics
    {
        AutomationProperty IsReadOnlyProperty { get; }
        AutomationProperty ValueProperty { get; }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")][Guid("BEC579E1-91BE-5D8F-AACA-6AD8839872D2")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Automation.IWindowPatternIdentifiers))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    internal interface IWindowPatternIdentifiers
    {
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")][Guid("06762744-D3D7-5441-B879-373681D47F64")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Automation.IWindowPatternIdentifiersStatics))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    internal interface IWindowPatternIdentifiersStatics
    {
        AutomationProperty CanMaximizeProperty { get; }
        AutomationProperty CanMinimizeProperty { get; }
        AutomationProperty IsModalProperty { get; }
        AutomationProperty IsTopmostProperty { get; }
        AutomationProperty WindowInteractionStateProperty { get; }
        AutomationProperty WindowVisualStateProperty { get; }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")]
    [global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Automation.MultipleViewPatternIdentifiers))]
    [global::ABI.Microsoft.UI.Xaml.Automation.MultipleViewPatternIdentifiersRcwFactory]
    [global::WinRT.ProjectedRuntimeClass(typeof(IMultipleViewPatternIdentifiers))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    public sealed class MultipleViewPatternIdentifiers : global::System.Runtime.InteropServices.ICustomQueryInterface, IWinRTObject, IEquatable<MultipleViewPatternIdentifiers>
    {
        private IntPtr ThisPtr => _inner == null ? (((IWinRTObject)this).NativeObject).ThisPtr : _inner.ThisPtr;

        private readonly IObjectReference _inner = null;



        private IObjectReference _objRef_global__Microsoft_UI_Xaml_Automation_IMultipleViewPatternIdentifiers => _inner;


        public static I As<I>() => ActivationFactory.Get("Microsoft.UI.Xaml.Automation.MultipleViewPatternIdentifiers").AsInterface<I>();

        private static volatile IObjectReference ___objRef_global__Microsoft_UI_Xaml_Automation_IMultipleViewPatternIdentifiersStatics;
        private static IObjectReference _objRef_global__Microsoft_UI_Xaml_Automation_IMultipleViewPatternIdentifiersStatics
        {
            get
            { 
                var factory = ___objRef_global__Microsoft_UI_Xaml_Automation_IMultipleViewPatternIdentifiersStatics;
                if (factory != null && factory.IsInCurrentContext)
                {
                    return factory;
                }
                else
                {
                    return ___objRef_global__Microsoft_UI_Xaml_Automation_IMultipleViewPatternIdentifiersStatics = ActivationFactory.Get("Microsoft.UI.Xaml.Automation.MultipleViewPatternIdentifiers", global::ABI.Microsoft.UI.Xaml.Automation.IMultipleViewPatternIdentifiersStaticsMethods.IID);
                }
            }
        }

        public static AutomationProperty CurrentViewProperty => global::ABI.Microsoft.UI.Xaml.Automation.IMultipleViewPatternIdentifiersStaticsMethods.get_CurrentViewProperty(_objRef_global__Microsoft_UI_Xaml_Automation_IMultipleViewPatternIdentifiersStatics);

        public static AutomationProperty SupportedViewsProperty => global::ABI.Microsoft.UI.Xaml.Automation.IMultipleViewPatternIdentifiersStaticsMethods.get_SupportedViewsProperty(_objRef_global__Microsoft_UI_Xaml_Automation_IMultipleViewPatternIdentifiersStatics);

        public static MultipleViewPatternIdentifiers FromAbi(IntPtr thisPtr)
        {
            if (thisPtr == IntPtr.Zero) return null;
            return MarshalInspectable<MultipleViewPatternIdentifiers>.FromAbi(thisPtr);
        }

        internal MultipleViewPatternIdentifiers(IObjectReference objRef)
        {
            _inner = objRef.As(global::ABI.Microsoft.UI.Xaml.Automation.IMultipleViewPatternIdentifiersMethods.IID);

        }


        public static bool operator ==(MultipleViewPatternIdentifiers x, MultipleViewPatternIdentifiers y) => (x?.ThisPtr ?? IntPtr.Zero) == (y?.ThisPtr ?? IntPtr.Zero);
        public static bool operator !=(MultipleViewPatternIdentifiers x, MultipleViewPatternIdentifiers y) => !(x == y);
        public bool Equals(MultipleViewPatternIdentifiers other) => this == other;
        public override bool Equals(object obj) => obj is MultipleViewPatternIdentifiers that && this == that;
        public override int GetHashCode() => ThisPtr.GetHashCode();


        bool IWinRTObject.HasUnwrappableNativeObject => true;
        IObjectReference IWinRTObject.NativeObject => _inner;
        private volatile global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> _queryInterfaceCache;
        private global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> MakeQueryInterfaceCache()
        {
            global::System.Threading.Interlocked.CompareExchange(ref _queryInterfaceCache, new global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference>(), null); 
            return _queryInterfaceCache;
        }
        global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> IWinRTObject.QueryInterfaceCache => _queryInterfaceCache ?? MakeQueryInterfaceCache();
        private volatile global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> _additionalTypeData;
        private global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> MakeAdditionalTypeData()
        {
            global::System.Threading.Interlocked.CompareExchange(ref _additionalTypeData, new global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object>(), null); 
            return _additionalTypeData;
        }
        global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> IWinRTObject.AdditionalTypeData => _additionalTypeData ?? MakeAdditionalTypeData();

        private struct InterfaceTag<I>{};


        private bool IsOverridableInterface(Guid iid) => false;

        global::System.Runtime.InteropServices.CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(ref Guid iid, out IntPtr ppv)
        {
            ppv = IntPtr.Zero;
            if (IsOverridableInterface(iid) || global::WinRT.Interop.IID.IID_IInspectable == iid)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
            }

            if (((IWinRTObject)this).NativeObject.TryAs(iid, out ppv) >= 0)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.Handled;
            }

            return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
        }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")]
    [global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Automation.RangeValuePatternIdentifiers))]
    [global::ABI.Microsoft.UI.Xaml.Automation.RangeValuePatternIdentifiersRcwFactory]
    [global::WinRT.ProjectedRuntimeClass(typeof(IRangeValuePatternIdentifiers))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    public sealed class RangeValuePatternIdentifiers : global::System.Runtime.InteropServices.ICustomQueryInterface, IWinRTObject, IEquatable<RangeValuePatternIdentifiers>
    {
        private IntPtr ThisPtr => _inner == null ? (((IWinRTObject)this).NativeObject).ThisPtr : _inner.ThisPtr;

        private readonly IObjectReference _inner = null;



        private IObjectReference _objRef_global__Microsoft_UI_Xaml_Automation_IRangeValuePatternIdentifiers => _inner;


        public static I As<I>() => ActivationFactory.Get("Microsoft.UI.Xaml.Automation.RangeValuePatternIdentifiers").AsInterface<I>();

        private static volatile IObjectReference ___objRef_global__Microsoft_UI_Xaml_Automation_IRangeValuePatternIdentifiersStatics;
        private static IObjectReference _objRef_global__Microsoft_UI_Xaml_Automation_IRangeValuePatternIdentifiersStatics
        {
            get
            { 
                var factory = ___objRef_global__Microsoft_UI_Xaml_Automation_IRangeValuePatternIdentifiersStatics;
                if (factory != null && factory.IsInCurrentContext)
                {
                    return factory;
                }
                else
                {
                    return ___objRef_global__Microsoft_UI_Xaml_Automation_IRangeValuePatternIdentifiersStatics = ActivationFactory.Get("Microsoft.UI.Xaml.Automation.RangeValuePatternIdentifiers", global::ABI.Microsoft.UI.Xaml.Automation.IRangeValuePatternIdentifiersStaticsMethods.IID);
                }
            }
        }

        public static AutomationProperty IsReadOnlyProperty => global::ABI.Microsoft.UI.Xaml.Automation.IRangeValuePatternIdentifiersStaticsMethods.get_IsReadOnlyProperty(_objRef_global__Microsoft_UI_Xaml_Automation_IRangeValuePatternIdentifiersStatics);

        public static AutomationProperty LargeChangeProperty => global::ABI.Microsoft.UI.Xaml.Automation.IRangeValuePatternIdentifiersStaticsMethods.get_LargeChangeProperty(_objRef_global__Microsoft_UI_Xaml_Automation_IRangeValuePatternIdentifiersStatics);

        public static AutomationProperty MaximumProperty => global::ABI.Microsoft.UI.Xaml.Automation.IRangeValuePatternIdentifiersStaticsMethods.get_MaximumProperty(_objRef_global__Microsoft_UI_Xaml_Automation_IRangeValuePatternIdentifiersStatics);

        public static AutomationProperty MinimumProperty => global::ABI.Microsoft.UI.Xaml.Automation.IRangeValuePatternIdentifiersStaticsMethods.get_MinimumProperty(_objRef_global__Microsoft_UI_Xaml_Automation_IRangeValuePatternIdentifiersStatics);

        public static AutomationProperty SmallChangeProperty => global::ABI.Microsoft.UI.Xaml.Automation.IRangeValuePatternIdentifiersStaticsMethods.get_SmallChangeProperty(_objRef_global__Microsoft_UI_Xaml_Automation_IRangeValuePatternIdentifiersStatics);

        public static AutomationProperty ValueProperty => global::ABI.Microsoft.UI.Xaml.Automation.IRangeValuePatternIdentifiersStaticsMethods.get_ValueProperty(_objRef_global__Microsoft_UI_Xaml_Automation_IRangeValuePatternIdentifiersStatics);

        public static RangeValuePatternIdentifiers FromAbi(IntPtr thisPtr)
        {
            if (thisPtr == IntPtr.Zero) return null;
            return MarshalInspectable<RangeValuePatternIdentifiers>.FromAbi(thisPtr);
        }

        internal RangeValuePatternIdentifiers(IObjectReference objRef)
        {
            _inner = objRef.As(global::ABI.Microsoft.UI.Xaml.Automation.IRangeValuePatternIdentifiersMethods.IID);

        }


        public static bool operator ==(RangeValuePatternIdentifiers x, RangeValuePatternIdentifiers y) => (x?.ThisPtr ?? IntPtr.Zero) == (y?.ThisPtr ?? IntPtr.Zero);
        public static bool operator !=(RangeValuePatternIdentifiers x, RangeValuePatternIdentifiers y) => !(x == y);
        public bool Equals(RangeValuePatternIdentifiers other) => this == other;
        public override bool Equals(object obj) => obj is RangeValuePatternIdentifiers that && this == that;
        public override int GetHashCode() => ThisPtr.GetHashCode();


        bool IWinRTObject.HasUnwrappableNativeObject => true;
        IObjectReference IWinRTObject.NativeObject => _inner;
        private volatile global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> _queryInterfaceCache;
        private global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> MakeQueryInterfaceCache()
        {
            global::System.Threading.Interlocked.CompareExchange(ref _queryInterfaceCache, new global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference>(), null); 
            return _queryInterfaceCache;
        }
        global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> IWinRTObject.QueryInterfaceCache => _queryInterfaceCache ?? MakeQueryInterfaceCache();
        private volatile global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> _additionalTypeData;
        private global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> MakeAdditionalTypeData()
        {
            global::System.Threading.Interlocked.CompareExchange(ref _additionalTypeData, new global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object>(), null); 
            return _additionalTypeData;
        }
        global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> IWinRTObject.AdditionalTypeData => _additionalTypeData ?? MakeAdditionalTypeData();

        private struct InterfaceTag<I>{};


        private bool IsOverridableInterface(Guid iid) => false;

        global::System.Runtime.InteropServices.CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(ref Guid iid, out IntPtr ppv)
        {
            ppv = IntPtr.Zero;
            if (IsOverridableInterface(iid) || global::WinRT.Interop.IID.IID_IInspectable == iid)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
            }

            if (((IWinRTObject)this).NativeObject.TryAs(iid, out ppv) >= 0)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.Handled;
            }

            return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
        }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")][global::WinRT.WinRTExposedType(typeof(global::WinRT.EnumTypeDetails<RowOrColumnMajor>))][global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    public enum RowOrColumnMajor : int
    {
        RowMajor = unchecked((int)0),
        ColumnMajor = unchecked((int)0x1),
        Indeterminate = unchecked((int)0x2),
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")][global::WinRT.WinRTExposedType(typeof(global::WinRT.EnumTypeDetails<ScrollAmount>))][global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    public enum ScrollAmount : int
    {
        LargeDecrement = unchecked((int)0),
        SmallDecrement = unchecked((int)0x1),
        NoAmount = unchecked((int)0x2),
        LargeIncrement = unchecked((int)0x3),
        SmallIncrement = unchecked((int)0x4),
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")]
    [global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Automation.ScrollPatternIdentifiers))]
    [global::ABI.Microsoft.UI.Xaml.Automation.ScrollPatternIdentifiersRcwFactory]
    [global::WinRT.ProjectedRuntimeClass(typeof(IScrollPatternIdentifiers))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    public sealed class ScrollPatternIdentifiers : global::System.Runtime.InteropServices.ICustomQueryInterface, IWinRTObject, IEquatable<ScrollPatternIdentifiers>
    {
        private IntPtr ThisPtr => _inner == null ? (((IWinRTObject)this).NativeObject).ThisPtr : _inner.ThisPtr;

        private readonly IObjectReference _inner = null;



        private IObjectReference _objRef_global__Microsoft_UI_Xaml_Automation_IScrollPatternIdentifiers => _inner;


        public static I As<I>() => ActivationFactory.Get("Microsoft.UI.Xaml.Automation.ScrollPatternIdentifiers").AsInterface<I>();

        private static volatile IObjectReference ___objRef_global__Microsoft_UI_Xaml_Automation_IScrollPatternIdentifiersStatics;
        private static IObjectReference _objRef_global__Microsoft_UI_Xaml_Automation_IScrollPatternIdentifiersStatics
        {
            get
            { 
                var factory = ___objRef_global__Microsoft_UI_Xaml_Automation_IScrollPatternIdentifiersStatics;
                if (factory != null && factory.IsInCurrentContext)
                {
                    return factory;
                }
                else
                {
                    return ___objRef_global__Microsoft_UI_Xaml_Automation_IScrollPatternIdentifiersStatics = ActivationFactory.Get("Microsoft.UI.Xaml.Automation.ScrollPatternIdentifiers", global::ABI.Microsoft.UI.Xaml.Automation.IScrollPatternIdentifiersStaticsMethods.IID);
                }
            }
        }

        public static AutomationProperty HorizontalScrollPercentProperty => global::ABI.Microsoft.UI.Xaml.Automation.IScrollPatternIdentifiersStaticsMethods.get_HorizontalScrollPercentProperty(_objRef_global__Microsoft_UI_Xaml_Automation_IScrollPatternIdentifiersStatics);

        public static AutomationProperty HorizontalViewSizeProperty => global::ABI.Microsoft.UI.Xaml.Automation.IScrollPatternIdentifiersStaticsMethods.get_HorizontalViewSizeProperty(_objRef_global__Microsoft_UI_Xaml_Automation_IScrollPatternIdentifiersStatics);

        public static AutomationProperty HorizontallyScrollableProperty => global::ABI.Microsoft.UI.Xaml.Automation.IScrollPatternIdentifiersStaticsMethods.get_HorizontallyScrollableProperty(_objRef_global__Microsoft_UI_Xaml_Automation_IScrollPatternIdentifiersStatics);

        public static double NoScroll => global::ABI.Microsoft.UI.Xaml.Automation.IScrollPatternIdentifiersStaticsMethods.get_NoScroll(_objRef_global__Microsoft_UI_Xaml_Automation_IScrollPatternIdentifiersStatics);

        public static AutomationProperty VerticalScrollPercentProperty => global::ABI.Microsoft.UI.Xaml.Automation.IScrollPatternIdentifiersStaticsMethods.get_VerticalScrollPercentProperty(_objRef_global__Microsoft_UI_Xaml_Automation_IScrollPatternIdentifiersStatics);

        public static AutomationProperty VerticalViewSizeProperty => global::ABI.Microsoft.UI.Xaml.Automation.IScrollPatternIdentifiersStaticsMethods.get_VerticalViewSizeProperty(_objRef_global__Microsoft_UI_Xaml_Automation_IScrollPatternIdentifiersStatics);

        public static AutomationProperty VerticallyScrollableProperty => global::ABI.Microsoft.UI.Xaml.Automation.IScrollPatternIdentifiersStaticsMethods.get_VerticallyScrollableProperty(_objRef_global__Microsoft_UI_Xaml_Automation_IScrollPatternIdentifiersStatics);

        public static ScrollPatternIdentifiers FromAbi(IntPtr thisPtr)
        {
            if (thisPtr == IntPtr.Zero) return null;
            return MarshalInspectable<ScrollPatternIdentifiers>.FromAbi(thisPtr);
        }

        internal ScrollPatternIdentifiers(IObjectReference objRef)
        {
            _inner = objRef.As(global::ABI.Microsoft.UI.Xaml.Automation.IScrollPatternIdentifiersMethods.IID);

        }


        public static bool operator ==(ScrollPatternIdentifiers x, ScrollPatternIdentifiers y) => (x?.ThisPtr ?? IntPtr.Zero) == (y?.ThisPtr ?? IntPtr.Zero);
        public static bool operator !=(ScrollPatternIdentifiers x, ScrollPatternIdentifiers y) => !(x == y);
        public bool Equals(ScrollPatternIdentifiers other) => this == other;
        public override bool Equals(object obj) => obj is ScrollPatternIdentifiers that && this == that;
        public override int GetHashCode() => ThisPtr.GetHashCode();


        bool IWinRTObject.HasUnwrappableNativeObject => true;
        IObjectReference IWinRTObject.NativeObject => _inner;
        private volatile global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> _queryInterfaceCache;
        private global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> MakeQueryInterfaceCache()
        {
            global::System.Threading.Interlocked.CompareExchange(ref _queryInterfaceCache, new global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference>(), null); 
            return _queryInterfaceCache;
        }
        global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> IWinRTObject.QueryInterfaceCache => _queryInterfaceCache ?? MakeQueryInterfaceCache();
        private volatile global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> _additionalTypeData;
        private global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> MakeAdditionalTypeData()
        {
            global::System.Threading.Interlocked.CompareExchange(ref _additionalTypeData, new global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object>(), null); 
            return _additionalTypeData;
        }
        global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> IWinRTObject.AdditionalTypeData => _additionalTypeData ?? MakeAdditionalTypeData();

        private struct InterfaceTag<I>{};


        private bool IsOverridableInterface(Guid iid) => false;

        global::System.Runtime.InteropServices.CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(ref Guid iid, out IntPtr ppv)
        {
            ppv = IntPtr.Zero;
            if (IsOverridableInterface(iid) || global::WinRT.Interop.IID.IID_IInspectable == iid)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
            }

            if (((IWinRTObject)this).NativeObject.TryAs(iid, out ppv) >= 0)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.Handled;
            }

            return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
        }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")]
    [global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Automation.SelectionItemPatternIdentifiers))]
    [global::ABI.Microsoft.UI.Xaml.Automation.SelectionItemPatternIdentifiersRcwFactory]
    [global::WinRT.ProjectedRuntimeClass(typeof(ISelectionItemPatternIdentifiers))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    public sealed class SelectionItemPatternIdentifiers : global::System.Runtime.InteropServices.ICustomQueryInterface, IWinRTObject, IEquatable<SelectionItemPatternIdentifiers>
    {
        private IntPtr ThisPtr => _inner == null ? (((IWinRTObject)this).NativeObject).ThisPtr : _inner.ThisPtr;

        private readonly IObjectReference _inner = null;



        private IObjectReference _objRef_global__Microsoft_UI_Xaml_Automation_ISelectionItemPatternIdentifiers => _inner;


        public static I As<I>() => ActivationFactory.Get("Microsoft.UI.Xaml.Automation.SelectionItemPatternIdentifiers").AsInterface<I>();

        private static volatile IObjectReference ___objRef_global__Microsoft_UI_Xaml_Automation_ISelectionItemPatternIdentifiersStatics;
        private static IObjectReference _objRef_global__Microsoft_UI_Xaml_Automation_ISelectionItemPatternIdentifiersStatics
        {
            get
            { 
                var factory = ___objRef_global__Microsoft_UI_Xaml_Automation_ISelectionItemPatternIdentifiersStatics;
                if (factory != null && factory.IsInCurrentContext)
                {
                    return factory;
                }
                else
                {
                    return ___objRef_global__Microsoft_UI_Xaml_Automation_ISelectionItemPatternIdentifiersStatics = ActivationFactory.Get("Microsoft.UI.Xaml.Automation.SelectionItemPatternIdentifiers", global::ABI.Microsoft.UI.Xaml.Automation.ISelectionItemPatternIdentifiersStaticsMethods.IID);
                }
            }
        }

        public static AutomationProperty IsSelectedProperty => global::ABI.Microsoft.UI.Xaml.Automation.ISelectionItemPatternIdentifiersStaticsMethods.get_IsSelectedProperty(_objRef_global__Microsoft_UI_Xaml_Automation_ISelectionItemPatternIdentifiersStatics);

        public static AutomationProperty SelectionContainerProperty => global::ABI.Microsoft.UI.Xaml.Automation.ISelectionItemPatternIdentifiersStaticsMethods.get_SelectionContainerProperty(_objRef_global__Microsoft_UI_Xaml_Automation_ISelectionItemPatternIdentifiersStatics);

        public static SelectionItemPatternIdentifiers FromAbi(IntPtr thisPtr)
        {
            if (thisPtr == IntPtr.Zero) return null;
            return MarshalInspectable<SelectionItemPatternIdentifiers>.FromAbi(thisPtr);
        }

        internal SelectionItemPatternIdentifiers(IObjectReference objRef)
        {
            _inner = objRef.As(global::ABI.Microsoft.UI.Xaml.Automation.ISelectionItemPatternIdentifiersMethods.IID);

        }


        public static bool operator ==(SelectionItemPatternIdentifiers x, SelectionItemPatternIdentifiers y) => (x?.ThisPtr ?? IntPtr.Zero) == (y?.ThisPtr ?? IntPtr.Zero);
        public static bool operator !=(SelectionItemPatternIdentifiers x, SelectionItemPatternIdentifiers y) => !(x == y);
        public bool Equals(SelectionItemPatternIdentifiers other) => this == other;
        public override bool Equals(object obj) => obj is SelectionItemPatternIdentifiers that && this == that;
        public override int GetHashCode() => ThisPtr.GetHashCode();


        bool IWinRTObject.HasUnwrappableNativeObject => true;
        IObjectReference IWinRTObject.NativeObject => _inner;
        private volatile global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> _queryInterfaceCache;
        private global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> MakeQueryInterfaceCache()
        {
            global::System.Threading.Interlocked.CompareExchange(ref _queryInterfaceCache, new global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference>(), null); 
            return _queryInterfaceCache;
        }
        global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> IWinRTObject.QueryInterfaceCache => _queryInterfaceCache ?? MakeQueryInterfaceCache();
        private volatile global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> _additionalTypeData;
        private global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> MakeAdditionalTypeData()
        {
            global::System.Threading.Interlocked.CompareExchange(ref _additionalTypeData, new global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object>(), null); 
            return _additionalTypeData;
        }
        global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> IWinRTObject.AdditionalTypeData => _additionalTypeData ?? MakeAdditionalTypeData();

        private struct InterfaceTag<I>{};


        private bool IsOverridableInterface(Guid iid) => false;

        global::System.Runtime.InteropServices.CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(ref Guid iid, out IntPtr ppv)
        {
            ppv = IntPtr.Zero;
            if (IsOverridableInterface(iid) || global::WinRT.Interop.IID.IID_IInspectable == iid)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
            }

            if (((IWinRTObject)this).NativeObject.TryAs(iid, out ppv) >= 0)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.Handled;
            }

            return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
        }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")]
    [global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Automation.SelectionPatternIdentifiers))]
    [global::ABI.Microsoft.UI.Xaml.Automation.SelectionPatternIdentifiersRcwFactory]
    [global::WinRT.ProjectedRuntimeClass(typeof(ISelectionPatternIdentifiers))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    public sealed class SelectionPatternIdentifiers : global::System.Runtime.InteropServices.ICustomQueryInterface, IWinRTObject, IEquatable<SelectionPatternIdentifiers>
    {
        private IntPtr ThisPtr => _inner == null ? (((IWinRTObject)this).NativeObject).ThisPtr : _inner.ThisPtr;

        private readonly IObjectReference _inner = null;



        private IObjectReference _objRef_global__Microsoft_UI_Xaml_Automation_ISelectionPatternIdentifiers => _inner;


        public static I As<I>() => ActivationFactory.Get("Microsoft.UI.Xaml.Automation.SelectionPatternIdentifiers").AsInterface<I>();

        private static volatile IObjectReference ___objRef_global__Microsoft_UI_Xaml_Automation_ISelectionPatternIdentifiersStatics;
        private static IObjectReference _objRef_global__Microsoft_UI_Xaml_Automation_ISelectionPatternIdentifiersStatics
        {
            get
            { 
                var factory = ___objRef_global__Microsoft_UI_Xaml_Automation_ISelectionPatternIdentifiersStatics;
                if (factory != null && factory.IsInCurrentContext)
                {
                    return factory;
                }
                else
                {
                    return ___objRef_global__Microsoft_UI_Xaml_Automation_ISelectionPatternIdentifiersStatics = ActivationFactory.Get("Microsoft.UI.Xaml.Automation.SelectionPatternIdentifiers", global::ABI.Microsoft.UI.Xaml.Automation.ISelectionPatternIdentifiersStaticsMethods.IID);
                }
            }
        }

        public static AutomationProperty CanSelectMultipleProperty => global::ABI.Microsoft.UI.Xaml.Automation.ISelectionPatternIdentifiersStaticsMethods.get_CanSelectMultipleProperty(_objRef_global__Microsoft_UI_Xaml_Automation_ISelectionPatternIdentifiersStatics);

        public static AutomationProperty IsSelectionRequiredProperty => global::ABI.Microsoft.UI.Xaml.Automation.ISelectionPatternIdentifiersStaticsMethods.get_IsSelectionRequiredProperty(_objRef_global__Microsoft_UI_Xaml_Automation_ISelectionPatternIdentifiersStatics);

        public static AutomationProperty SelectionProperty => global::ABI.Microsoft.UI.Xaml.Automation.ISelectionPatternIdentifiersStaticsMethods.get_SelectionProperty(_objRef_global__Microsoft_UI_Xaml_Automation_ISelectionPatternIdentifiersStatics);

        public static SelectionPatternIdentifiers FromAbi(IntPtr thisPtr)
        {
            if (thisPtr == IntPtr.Zero) return null;
            return MarshalInspectable<SelectionPatternIdentifiers>.FromAbi(thisPtr);
        }

        internal SelectionPatternIdentifiers(IObjectReference objRef)
        {
            _inner = objRef.As(global::ABI.Microsoft.UI.Xaml.Automation.ISelectionPatternIdentifiersMethods.IID);

        }


        public static bool operator ==(SelectionPatternIdentifiers x, SelectionPatternIdentifiers y) => (x?.ThisPtr ?? IntPtr.Zero) == (y?.ThisPtr ?? IntPtr.Zero);
        public static bool operator !=(SelectionPatternIdentifiers x, SelectionPatternIdentifiers y) => !(x == y);
        public bool Equals(SelectionPatternIdentifiers other) => this == other;
        public override bool Equals(object obj) => obj is SelectionPatternIdentifiers that && this == that;
        public override int GetHashCode() => ThisPtr.GetHashCode();


        bool IWinRTObject.HasUnwrappableNativeObject => true;
        IObjectReference IWinRTObject.NativeObject => _inner;
        private volatile global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> _queryInterfaceCache;
        private global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> MakeQueryInterfaceCache()
        {
            global::System.Threading.Interlocked.CompareExchange(ref _queryInterfaceCache, new global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference>(), null); 
            return _queryInterfaceCache;
        }
        global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> IWinRTObject.QueryInterfaceCache => _queryInterfaceCache ?? MakeQueryInterfaceCache();
        private volatile global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> _additionalTypeData;
        private global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> MakeAdditionalTypeData()
        {
            global::System.Threading.Interlocked.CompareExchange(ref _additionalTypeData, new global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object>(), null); 
            return _additionalTypeData;
        }
        global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> IWinRTObject.AdditionalTypeData => _additionalTypeData ?? MakeAdditionalTypeData();

        private struct InterfaceTag<I>{};


        private bool IsOverridableInterface(Guid iid) => false;

        global::System.Runtime.InteropServices.CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(ref Guid iid, out IntPtr ppv)
        {
            ppv = IntPtr.Zero;
            if (IsOverridableInterface(iid) || global::WinRT.Interop.IID.IID_IInspectable == iid)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
            }

            if (((IWinRTObject)this).NativeObject.TryAs(iid, out ppv) >= 0)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.Handled;
            }

            return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
        }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")]
    [global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Automation.SpreadsheetItemPatternIdentifiers))]
    [global::ABI.Microsoft.UI.Xaml.Automation.SpreadsheetItemPatternIdentifiersRcwFactory]
    [global::WinRT.ProjectedRuntimeClass(typeof(ISpreadsheetItemPatternIdentifiers))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    public sealed class SpreadsheetItemPatternIdentifiers : global::System.Runtime.InteropServices.ICustomQueryInterface, IWinRTObject, IEquatable<SpreadsheetItemPatternIdentifiers>
    {
        private IntPtr ThisPtr => _inner == null ? (((IWinRTObject)this).NativeObject).ThisPtr : _inner.ThisPtr;

        private readonly IObjectReference _inner = null;



        private IObjectReference _objRef_global__Microsoft_UI_Xaml_Automation_ISpreadsheetItemPatternIdentifiers => _inner;


        public static I As<I>() => ActivationFactory.Get("Microsoft.UI.Xaml.Automation.SpreadsheetItemPatternIdentifiers").AsInterface<I>();

        private static volatile IObjectReference ___objRef_global__Microsoft_UI_Xaml_Automation_ISpreadsheetItemPatternIdentifiersStatics;
        private static IObjectReference _objRef_global__Microsoft_UI_Xaml_Automation_ISpreadsheetItemPatternIdentifiersStatics
        {
            get
            { 
                var factory = ___objRef_global__Microsoft_UI_Xaml_Automation_ISpreadsheetItemPatternIdentifiersStatics;
                if (factory != null && factory.IsInCurrentContext)
                {
                    return factory;
                }
                else
                {
                    return ___objRef_global__Microsoft_UI_Xaml_Automation_ISpreadsheetItemPatternIdentifiersStatics = ActivationFactory.Get("Microsoft.UI.Xaml.Automation.SpreadsheetItemPatternIdentifiers", global::ABI.Microsoft.UI.Xaml.Automation.ISpreadsheetItemPatternIdentifiersStaticsMethods.IID);
                }
            }
        }

        public static AutomationProperty FormulaProperty => global::ABI.Microsoft.UI.Xaml.Automation.ISpreadsheetItemPatternIdentifiersStaticsMethods.get_FormulaProperty(_objRef_global__Microsoft_UI_Xaml_Automation_ISpreadsheetItemPatternIdentifiersStatics);

        public static SpreadsheetItemPatternIdentifiers FromAbi(IntPtr thisPtr)
        {
            if (thisPtr == IntPtr.Zero) return null;
            return MarshalInspectable<SpreadsheetItemPatternIdentifiers>.FromAbi(thisPtr);
        }

        internal SpreadsheetItemPatternIdentifiers(IObjectReference objRef)
        {
            _inner = objRef.As(global::ABI.Microsoft.UI.Xaml.Automation.ISpreadsheetItemPatternIdentifiersMethods.IID);

        }


        public static bool operator ==(SpreadsheetItemPatternIdentifiers x, SpreadsheetItemPatternIdentifiers y) => (x?.ThisPtr ?? IntPtr.Zero) == (y?.ThisPtr ?? IntPtr.Zero);
        public static bool operator !=(SpreadsheetItemPatternIdentifiers x, SpreadsheetItemPatternIdentifiers y) => !(x == y);
        public bool Equals(SpreadsheetItemPatternIdentifiers other) => this == other;
        public override bool Equals(object obj) => obj is SpreadsheetItemPatternIdentifiers that && this == that;
        public override int GetHashCode() => ThisPtr.GetHashCode();


        bool IWinRTObject.HasUnwrappableNativeObject => true;
        IObjectReference IWinRTObject.NativeObject => _inner;
        private volatile global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> _queryInterfaceCache;
        private global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> MakeQueryInterfaceCache()
        {
            global::System.Threading.Interlocked.CompareExchange(ref _queryInterfaceCache, new global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference>(), null); 
            return _queryInterfaceCache;
        }
        global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> IWinRTObject.QueryInterfaceCache => _queryInterfaceCache ?? MakeQueryInterfaceCache();
        private volatile global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> _additionalTypeData;
        private global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> MakeAdditionalTypeData()
        {
            global::System.Threading.Interlocked.CompareExchange(ref _additionalTypeData, new global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object>(), null); 
            return _additionalTypeData;
        }
        global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> IWinRTObject.AdditionalTypeData => _additionalTypeData ?? MakeAdditionalTypeData();

        private struct InterfaceTag<I>{};


        private bool IsOverridableInterface(Guid iid) => false;

        global::System.Runtime.InteropServices.CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(ref Guid iid, out IntPtr ppv)
        {
            ppv = IntPtr.Zero;
            if (IsOverridableInterface(iid) || global::WinRT.Interop.IID.IID_IInspectable == iid)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
            }

            if (((IWinRTObject)this).NativeObject.TryAs(iid, out ppv) >= 0)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.Handled;
            }

            return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
        }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")]
    [global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Automation.StylesPatternIdentifiers))]
    [global::ABI.Microsoft.UI.Xaml.Automation.StylesPatternIdentifiersRcwFactory]
    [global::WinRT.ProjectedRuntimeClass(typeof(IStylesPatternIdentifiers))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    public sealed class StylesPatternIdentifiers : global::System.Runtime.InteropServices.ICustomQueryInterface, IWinRTObject, IEquatable<StylesPatternIdentifiers>
    {
        private IntPtr ThisPtr => _inner == null ? (((IWinRTObject)this).NativeObject).ThisPtr : _inner.ThisPtr;

        private readonly IObjectReference _inner = null;



        private IObjectReference _objRef_global__Microsoft_UI_Xaml_Automation_IStylesPatternIdentifiers => _inner;


        public static I As<I>() => ActivationFactory.Get("Microsoft.UI.Xaml.Automation.StylesPatternIdentifiers").AsInterface<I>();

        private static volatile IObjectReference ___objRef_global__Microsoft_UI_Xaml_Automation_IStylesPatternIdentifiersStatics;
        private static IObjectReference _objRef_global__Microsoft_UI_Xaml_Automation_IStylesPatternIdentifiersStatics
        {
            get
            { 
                var factory = ___objRef_global__Microsoft_UI_Xaml_Automation_IStylesPatternIdentifiersStatics;
                if (factory != null && factory.IsInCurrentContext)
                {
                    return factory;
                }
                else
                {
                    return ___objRef_global__Microsoft_UI_Xaml_Automation_IStylesPatternIdentifiersStatics = ActivationFactory.Get("Microsoft.UI.Xaml.Automation.StylesPatternIdentifiers", global::ABI.Microsoft.UI.Xaml.Automation.IStylesPatternIdentifiersStaticsMethods.IID);
                }
            }
        }

        public static AutomationProperty ExtendedPropertiesProperty => global::ABI.Microsoft.UI.Xaml.Automation.IStylesPatternIdentifiersStaticsMethods.get_ExtendedPropertiesProperty(_objRef_global__Microsoft_UI_Xaml_Automation_IStylesPatternIdentifiersStatics);

        public static AutomationProperty FillColorProperty => global::ABI.Microsoft.UI.Xaml.Automation.IStylesPatternIdentifiersStaticsMethods.get_FillColorProperty(_objRef_global__Microsoft_UI_Xaml_Automation_IStylesPatternIdentifiersStatics);

        public static AutomationProperty FillPatternColorProperty => global::ABI.Microsoft.UI.Xaml.Automation.IStylesPatternIdentifiersStaticsMethods.get_FillPatternColorProperty(_objRef_global__Microsoft_UI_Xaml_Automation_IStylesPatternIdentifiersStatics);

        public static AutomationProperty FillPatternStyleProperty => global::ABI.Microsoft.UI.Xaml.Automation.IStylesPatternIdentifiersStaticsMethods.get_FillPatternStyleProperty(_objRef_global__Microsoft_UI_Xaml_Automation_IStylesPatternIdentifiersStatics);

        public static AutomationProperty ShapeProperty => global::ABI.Microsoft.UI.Xaml.Automation.IStylesPatternIdentifiersStaticsMethods.get_ShapeProperty(_objRef_global__Microsoft_UI_Xaml_Automation_IStylesPatternIdentifiersStatics);

        public static AutomationProperty StyleIdProperty => global::ABI.Microsoft.UI.Xaml.Automation.IStylesPatternIdentifiersStaticsMethods.get_StyleIdProperty(_objRef_global__Microsoft_UI_Xaml_Automation_IStylesPatternIdentifiersStatics);

        public static AutomationProperty StyleNameProperty => global::ABI.Microsoft.UI.Xaml.Automation.IStylesPatternIdentifiersStaticsMethods.get_StyleNameProperty(_objRef_global__Microsoft_UI_Xaml_Automation_IStylesPatternIdentifiersStatics);

        public static StylesPatternIdentifiers FromAbi(IntPtr thisPtr)
        {
            if (thisPtr == IntPtr.Zero) return null;
            return MarshalInspectable<StylesPatternIdentifiers>.FromAbi(thisPtr);
        }

        internal StylesPatternIdentifiers(IObjectReference objRef)
        {
            _inner = objRef.As(global::ABI.Microsoft.UI.Xaml.Automation.IStylesPatternIdentifiersMethods.IID);

        }


        public static bool operator ==(StylesPatternIdentifiers x, StylesPatternIdentifiers y) => (x?.ThisPtr ?? IntPtr.Zero) == (y?.ThisPtr ?? IntPtr.Zero);
        public static bool operator !=(StylesPatternIdentifiers x, StylesPatternIdentifiers y) => !(x == y);
        public bool Equals(StylesPatternIdentifiers other) => this == other;
        public override bool Equals(object obj) => obj is StylesPatternIdentifiers that && this == that;
        public override int GetHashCode() => ThisPtr.GetHashCode();


        bool IWinRTObject.HasUnwrappableNativeObject => true;
        IObjectReference IWinRTObject.NativeObject => _inner;
        private volatile global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> _queryInterfaceCache;
        private global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> MakeQueryInterfaceCache()
        {
            global::System.Threading.Interlocked.CompareExchange(ref _queryInterfaceCache, new global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference>(), null); 
            return _queryInterfaceCache;
        }
        global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> IWinRTObject.QueryInterfaceCache => _queryInterfaceCache ?? MakeQueryInterfaceCache();
        private volatile global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> _additionalTypeData;
        private global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> MakeAdditionalTypeData()
        {
            global::System.Threading.Interlocked.CompareExchange(ref _additionalTypeData, new global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object>(), null); 
            return _additionalTypeData;
        }
        global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> IWinRTObject.AdditionalTypeData => _additionalTypeData ?? MakeAdditionalTypeData();

        private struct InterfaceTag<I>{};


        private bool IsOverridableInterface(Guid iid) => false;

        global::System.Runtime.InteropServices.CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(ref Guid iid, out IntPtr ppv)
        {
            ppv = IntPtr.Zero;
            if (IsOverridableInterface(iid) || global::WinRT.Interop.IID.IID_IInspectable == iid)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
            }

            if (((IWinRTObject)this).NativeObject.TryAs(iid, out ppv) >= 0)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.Handled;
            }

            return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
        }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")][global::WinRT.WinRTExposedType(typeof(global::WinRT.EnumTypeDetails<SupportedTextSelection>))][global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    public enum SupportedTextSelection : int
    {
        None = unchecked((int)0),
        Single = unchecked((int)0x1),
        Multiple = unchecked((int)0x2),
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")][global::WinRT.WinRTExposedType(typeof(global::WinRT.EnumTypeDetails<SynchronizedInputType>))][global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    public enum SynchronizedInputType : int
    {
        KeyUp = unchecked((int)0x1),
        KeyDown = unchecked((int)0x2),
        LeftMouseUp = unchecked((int)0x4),
        LeftMouseDown = unchecked((int)0x8),
        RightMouseUp = unchecked((int)0x10),
        RightMouseDown = unchecked((int)0x20),
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")]
    [global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Automation.TableItemPatternIdentifiers))]
    [global::ABI.Microsoft.UI.Xaml.Automation.TableItemPatternIdentifiersRcwFactory]
    [global::WinRT.ProjectedRuntimeClass(typeof(ITableItemPatternIdentifiers))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    public sealed class TableItemPatternIdentifiers : global::System.Runtime.InteropServices.ICustomQueryInterface, IWinRTObject, IEquatable<TableItemPatternIdentifiers>
    {
        private IntPtr ThisPtr => _inner == null ? (((IWinRTObject)this).NativeObject).ThisPtr : _inner.ThisPtr;

        private readonly IObjectReference _inner = null;



        private IObjectReference _objRef_global__Microsoft_UI_Xaml_Automation_ITableItemPatternIdentifiers => _inner;


        public static I As<I>() => ActivationFactory.Get("Microsoft.UI.Xaml.Automation.TableItemPatternIdentifiers").AsInterface<I>();

        private static volatile IObjectReference ___objRef_global__Microsoft_UI_Xaml_Automation_ITableItemPatternIdentifiersStatics;
        private static IObjectReference _objRef_global__Microsoft_UI_Xaml_Automation_ITableItemPatternIdentifiersStatics
        {
            get
            { 
                var factory = ___objRef_global__Microsoft_UI_Xaml_Automation_ITableItemPatternIdentifiersStatics;
                if (factory != null && factory.IsInCurrentContext)
                {
                    return factory;
                }
                else
                {
                    return ___objRef_global__Microsoft_UI_Xaml_Automation_ITableItemPatternIdentifiersStatics = ActivationFactory.Get("Microsoft.UI.Xaml.Automation.TableItemPatternIdentifiers", global::ABI.Microsoft.UI.Xaml.Automation.ITableItemPatternIdentifiersStaticsMethods.IID);
                }
            }
        }

        public static AutomationProperty ColumnHeaderItemsProperty => global::ABI.Microsoft.UI.Xaml.Automation.ITableItemPatternIdentifiersStaticsMethods.get_ColumnHeaderItemsProperty(_objRef_global__Microsoft_UI_Xaml_Automation_ITableItemPatternIdentifiersStatics);

        public static AutomationProperty RowHeaderItemsProperty => global::ABI.Microsoft.UI.Xaml.Automation.ITableItemPatternIdentifiersStaticsMethods.get_RowHeaderItemsProperty(_objRef_global__Microsoft_UI_Xaml_Automation_ITableItemPatternIdentifiersStatics);

        public static TableItemPatternIdentifiers FromAbi(IntPtr thisPtr)
        {
            if (thisPtr == IntPtr.Zero) return null;
            return MarshalInspectable<TableItemPatternIdentifiers>.FromAbi(thisPtr);
        }

        internal TableItemPatternIdentifiers(IObjectReference objRef)
        {
            _inner = objRef.As(global::ABI.Microsoft.UI.Xaml.Automation.ITableItemPatternIdentifiersMethods.IID);

        }


        public static bool operator ==(TableItemPatternIdentifiers x, TableItemPatternIdentifiers y) => (x?.ThisPtr ?? IntPtr.Zero) == (y?.ThisPtr ?? IntPtr.Zero);
        public static bool operator !=(TableItemPatternIdentifiers x, TableItemPatternIdentifiers y) => !(x == y);
        public bool Equals(TableItemPatternIdentifiers other) => this == other;
        public override bool Equals(object obj) => obj is TableItemPatternIdentifiers that && this == that;
        public override int GetHashCode() => ThisPtr.GetHashCode();


        bool IWinRTObject.HasUnwrappableNativeObject => true;
        IObjectReference IWinRTObject.NativeObject => _inner;
        private volatile global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> _queryInterfaceCache;
        private global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> MakeQueryInterfaceCache()
        {
            global::System.Threading.Interlocked.CompareExchange(ref _queryInterfaceCache, new global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference>(), null); 
            return _queryInterfaceCache;
        }
        global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> IWinRTObject.QueryInterfaceCache => _queryInterfaceCache ?? MakeQueryInterfaceCache();
        private volatile global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> _additionalTypeData;
        private global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> MakeAdditionalTypeData()
        {
            global::System.Threading.Interlocked.CompareExchange(ref _additionalTypeData, new global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object>(), null); 
            return _additionalTypeData;
        }
        global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> IWinRTObject.AdditionalTypeData => _additionalTypeData ?? MakeAdditionalTypeData();

        private struct InterfaceTag<I>{};


        private bool IsOverridableInterface(Guid iid) => false;

        global::System.Runtime.InteropServices.CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(ref Guid iid, out IntPtr ppv)
        {
            ppv = IntPtr.Zero;
            if (IsOverridableInterface(iid) || global::WinRT.Interop.IID.IID_IInspectable == iid)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
            }

            if (((IWinRTObject)this).NativeObject.TryAs(iid, out ppv) >= 0)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.Handled;
            }

            return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
        }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")]
    [global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Automation.TablePatternIdentifiers))]
    [global::ABI.Microsoft.UI.Xaml.Automation.TablePatternIdentifiersRcwFactory]
    [global::WinRT.ProjectedRuntimeClass(typeof(ITablePatternIdentifiers))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    public sealed class TablePatternIdentifiers : global::System.Runtime.InteropServices.ICustomQueryInterface, IWinRTObject, IEquatable<TablePatternIdentifiers>
    {
        private IntPtr ThisPtr => _inner == null ? (((IWinRTObject)this).NativeObject).ThisPtr : _inner.ThisPtr;

        private readonly IObjectReference _inner = null;



        private IObjectReference _objRef_global__Microsoft_UI_Xaml_Automation_ITablePatternIdentifiers => _inner;


        public static I As<I>() => ActivationFactory.Get("Microsoft.UI.Xaml.Automation.TablePatternIdentifiers").AsInterface<I>();

        private static volatile IObjectReference ___objRef_global__Microsoft_UI_Xaml_Automation_ITablePatternIdentifiersStatics;
        private static IObjectReference _objRef_global__Microsoft_UI_Xaml_Automation_ITablePatternIdentifiersStatics
        {
            get
            { 
                var factory = ___objRef_global__Microsoft_UI_Xaml_Automation_ITablePatternIdentifiersStatics;
                if (factory != null && factory.IsInCurrentContext)
                {
                    return factory;
                }
                else
                {
                    return ___objRef_global__Microsoft_UI_Xaml_Automation_ITablePatternIdentifiersStatics = ActivationFactory.Get("Microsoft.UI.Xaml.Automation.TablePatternIdentifiers", global::ABI.Microsoft.UI.Xaml.Automation.ITablePatternIdentifiersStaticsMethods.IID);
                }
            }
        }

        public static AutomationProperty ColumnHeadersProperty => global::ABI.Microsoft.UI.Xaml.Automation.ITablePatternIdentifiersStaticsMethods.get_ColumnHeadersProperty(_objRef_global__Microsoft_UI_Xaml_Automation_ITablePatternIdentifiersStatics);

        public static AutomationProperty RowHeadersProperty => global::ABI.Microsoft.UI.Xaml.Automation.ITablePatternIdentifiersStaticsMethods.get_RowHeadersProperty(_objRef_global__Microsoft_UI_Xaml_Automation_ITablePatternIdentifiersStatics);

        public static AutomationProperty RowOrColumnMajorProperty => global::ABI.Microsoft.UI.Xaml.Automation.ITablePatternIdentifiersStaticsMethods.get_RowOrColumnMajorProperty(_objRef_global__Microsoft_UI_Xaml_Automation_ITablePatternIdentifiersStatics);

        public static TablePatternIdentifiers FromAbi(IntPtr thisPtr)
        {
            if (thisPtr == IntPtr.Zero) return null;
            return MarshalInspectable<TablePatternIdentifiers>.FromAbi(thisPtr);
        }

        internal TablePatternIdentifiers(IObjectReference objRef)
        {
            _inner = objRef.As(global::ABI.Microsoft.UI.Xaml.Automation.ITablePatternIdentifiersMethods.IID);

        }


        public static bool operator ==(TablePatternIdentifiers x, TablePatternIdentifiers y) => (x?.ThisPtr ?? IntPtr.Zero) == (y?.ThisPtr ?? IntPtr.Zero);
        public static bool operator !=(TablePatternIdentifiers x, TablePatternIdentifiers y) => !(x == y);
        public bool Equals(TablePatternIdentifiers other) => this == other;
        public override bool Equals(object obj) => obj is TablePatternIdentifiers that && this == that;
        public override int GetHashCode() => ThisPtr.GetHashCode();


        bool IWinRTObject.HasUnwrappableNativeObject => true;
        IObjectReference IWinRTObject.NativeObject => _inner;
        private volatile global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> _queryInterfaceCache;
        private global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> MakeQueryInterfaceCache()
        {
            global::System.Threading.Interlocked.CompareExchange(ref _queryInterfaceCache, new global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference>(), null); 
            return _queryInterfaceCache;
        }
        global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> IWinRTObject.QueryInterfaceCache => _queryInterfaceCache ?? MakeQueryInterfaceCache();
        private volatile global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> _additionalTypeData;
        private global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> MakeAdditionalTypeData()
        {
            global::System.Threading.Interlocked.CompareExchange(ref _additionalTypeData, new global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object>(), null); 
            return _additionalTypeData;
        }
        global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> IWinRTObject.AdditionalTypeData => _additionalTypeData ?? MakeAdditionalTypeData();

        private struct InterfaceTag<I>{};


        private bool IsOverridableInterface(Guid iid) => false;

        global::System.Runtime.InteropServices.CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(ref Guid iid, out IntPtr ppv)
        {
            ppv = IntPtr.Zero;
            if (IsOverridableInterface(iid) || global::WinRT.Interop.IID.IID_IInspectable == iid)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
            }

            if (((IWinRTObject)this).NativeObject.TryAs(iid, out ppv) >= 0)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.Handled;
            }

            return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
        }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")]
    [global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Automation.TogglePatternIdentifiers))]
    [global::ABI.Microsoft.UI.Xaml.Automation.TogglePatternIdentifiersRcwFactory]
    [global::WinRT.ProjectedRuntimeClass(typeof(ITogglePatternIdentifiers))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    public sealed class TogglePatternIdentifiers : global::System.Runtime.InteropServices.ICustomQueryInterface, IWinRTObject, IEquatable<TogglePatternIdentifiers>
    {
        private IntPtr ThisPtr => _inner == null ? (((IWinRTObject)this).NativeObject).ThisPtr : _inner.ThisPtr;

        private readonly IObjectReference _inner = null;



        private IObjectReference _objRef_global__Microsoft_UI_Xaml_Automation_ITogglePatternIdentifiers => _inner;


        public static I As<I>() => ActivationFactory.Get("Microsoft.UI.Xaml.Automation.TogglePatternIdentifiers").AsInterface<I>();

        private static volatile IObjectReference ___objRef_global__Microsoft_UI_Xaml_Automation_ITogglePatternIdentifiersStatics;
        private static IObjectReference _objRef_global__Microsoft_UI_Xaml_Automation_ITogglePatternIdentifiersStatics
        {
            get
            { 
                var factory = ___objRef_global__Microsoft_UI_Xaml_Automation_ITogglePatternIdentifiersStatics;
                if (factory != null && factory.IsInCurrentContext)
                {
                    return factory;
                }
                else
                {
                    return ___objRef_global__Microsoft_UI_Xaml_Automation_ITogglePatternIdentifiersStatics = ActivationFactory.Get("Microsoft.UI.Xaml.Automation.TogglePatternIdentifiers", global::ABI.Microsoft.UI.Xaml.Automation.ITogglePatternIdentifiersStaticsMethods.IID);
                }
            }
        }

        public static AutomationProperty ToggleStateProperty => global::ABI.Microsoft.UI.Xaml.Automation.ITogglePatternIdentifiersStaticsMethods.get_ToggleStateProperty(_objRef_global__Microsoft_UI_Xaml_Automation_ITogglePatternIdentifiersStatics);

        public static TogglePatternIdentifiers FromAbi(IntPtr thisPtr)
        {
            if (thisPtr == IntPtr.Zero) return null;
            return MarshalInspectable<TogglePatternIdentifiers>.FromAbi(thisPtr);
        }

        internal TogglePatternIdentifiers(IObjectReference objRef)
        {
            _inner = objRef.As(global::ABI.Microsoft.UI.Xaml.Automation.ITogglePatternIdentifiersMethods.IID);

        }


        public static bool operator ==(TogglePatternIdentifiers x, TogglePatternIdentifiers y) => (x?.ThisPtr ?? IntPtr.Zero) == (y?.ThisPtr ?? IntPtr.Zero);
        public static bool operator !=(TogglePatternIdentifiers x, TogglePatternIdentifiers y) => !(x == y);
        public bool Equals(TogglePatternIdentifiers other) => this == other;
        public override bool Equals(object obj) => obj is TogglePatternIdentifiers that && this == that;
        public override int GetHashCode() => ThisPtr.GetHashCode();


        bool IWinRTObject.HasUnwrappableNativeObject => true;
        IObjectReference IWinRTObject.NativeObject => _inner;
        private volatile global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> _queryInterfaceCache;
        private global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> MakeQueryInterfaceCache()
        {
            global::System.Threading.Interlocked.CompareExchange(ref _queryInterfaceCache, new global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference>(), null); 
            return _queryInterfaceCache;
        }
        global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> IWinRTObject.QueryInterfaceCache => _queryInterfaceCache ?? MakeQueryInterfaceCache();
        private volatile global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> _additionalTypeData;
        private global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> MakeAdditionalTypeData()
        {
            global::System.Threading.Interlocked.CompareExchange(ref _additionalTypeData, new global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object>(), null); 
            return _additionalTypeData;
        }
        global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> IWinRTObject.AdditionalTypeData => _additionalTypeData ?? MakeAdditionalTypeData();

        private struct InterfaceTag<I>{};


        private bool IsOverridableInterface(Guid iid) => false;

        global::System.Runtime.InteropServices.CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(ref Guid iid, out IntPtr ppv)
        {
            ppv = IntPtr.Zero;
            if (IsOverridableInterface(iid) || global::WinRT.Interop.IID.IID_IInspectable == iid)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
            }

            if (((IWinRTObject)this).NativeObject.TryAs(iid, out ppv) >= 0)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.Handled;
            }

            return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
        }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")][global::WinRT.WinRTExposedType(typeof(global::WinRT.EnumTypeDetails<ToggleState>))][global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    public enum ToggleState : int
    {
        Off = unchecked((int)0),
        On = unchecked((int)0x1),
        Indeterminate = unchecked((int)0x2),
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")]
    [global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Automation.TransformPattern2Identifiers))]
    [global::ABI.Microsoft.UI.Xaml.Automation.TransformPattern2IdentifiersRcwFactory]
    [global::WinRT.ProjectedRuntimeClass(typeof(ITransformPattern2Identifiers))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    public sealed class TransformPattern2Identifiers : global::System.Runtime.InteropServices.ICustomQueryInterface, IWinRTObject, IEquatable<TransformPattern2Identifiers>
    {
        private IntPtr ThisPtr => _inner == null ? (((IWinRTObject)this).NativeObject).ThisPtr : _inner.ThisPtr;

        private readonly IObjectReference _inner = null;



        private IObjectReference _objRef_global__Microsoft_UI_Xaml_Automation_ITransformPattern2Identifiers => _inner;


        public static I As<I>() => ActivationFactory.Get("Microsoft.UI.Xaml.Automation.TransformPattern2Identifiers").AsInterface<I>();

        private static volatile IObjectReference ___objRef_global__Microsoft_UI_Xaml_Automation_ITransformPattern2IdentifiersStatics;
        private static IObjectReference _objRef_global__Microsoft_UI_Xaml_Automation_ITransformPattern2IdentifiersStatics
        {
            get
            { 
                var factory = ___objRef_global__Microsoft_UI_Xaml_Automation_ITransformPattern2IdentifiersStatics;
                if (factory != null && factory.IsInCurrentContext)
                {
                    return factory;
                }
                else
                {
                    return ___objRef_global__Microsoft_UI_Xaml_Automation_ITransformPattern2IdentifiersStatics = ActivationFactory.Get("Microsoft.UI.Xaml.Automation.TransformPattern2Identifiers", global::ABI.Microsoft.UI.Xaml.Automation.ITransformPattern2IdentifiersStaticsMethods.IID);
                }
            }
        }

        public static AutomationProperty CanZoomProperty => global::ABI.Microsoft.UI.Xaml.Automation.ITransformPattern2IdentifiersStaticsMethods.get_CanZoomProperty(_objRef_global__Microsoft_UI_Xaml_Automation_ITransformPattern2IdentifiersStatics);

        public static AutomationProperty MaxZoomProperty => global::ABI.Microsoft.UI.Xaml.Automation.ITransformPattern2IdentifiersStaticsMethods.get_MaxZoomProperty(_objRef_global__Microsoft_UI_Xaml_Automation_ITransformPattern2IdentifiersStatics);

        public static AutomationProperty MinZoomProperty => global::ABI.Microsoft.UI.Xaml.Automation.ITransformPattern2IdentifiersStaticsMethods.get_MinZoomProperty(_objRef_global__Microsoft_UI_Xaml_Automation_ITransformPattern2IdentifiersStatics);

        public static AutomationProperty ZoomLevelProperty => global::ABI.Microsoft.UI.Xaml.Automation.ITransformPattern2IdentifiersStaticsMethods.get_ZoomLevelProperty(_objRef_global__Microsoft_UI_Xaml_Automation_ITransformPattern2IdentifiersStatics);

        public static TransformPattern2Identifiers FromAbi(IntPtr thisPtr)
        {
            if (thisPtr == IntPtr.Zero) return null;
            return MarshalInspectable<TransformPattern2Identifiers>.FromAbi(thisPtr);
        }

        internal TransformPattern2Identifiers(IObjectReference objRef)
        {
            _inner = objRef.As(global::ABI.Microsoft.UI.Xaml.Automation.ITransformPattern2IdentifiersMethods.IID);

        }


        public static bool operator ==(TransformPattern2Identifiers x, TransformPattern2Identifiers y) => (x?.ThisPtr ?? IntPtr.Zero) == (y?.ThisPtr ?? IntPtr.Zero);
        public static bool operator !=(TransformPattern2Identifiers x, TransformPattern2Identifiers y) => !(x == y);
        public bool Equals(TransformPattern2Identifiers other) => this == other;
        public override bool Equals(object obj) => obj is TransformPattern2Identifiers that && this == that;
        public override int GetHashCode() => ThisPtr.GetHashCode();


        bool IWinRTObject.HasUnwrappableNativeObject => true;
        IObjectReference IWinRTObject.NativeObject => _inner;
        private volatile global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> _queryInterfaceCache;
        private global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> MakeQueryInterfaceCache()
        {
            global::System.Threading.Interlocked.CompareExchange(ref _queryInterfaceCache, new global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference>(), null); 
            return _queryInterfaceCache;
        }
        global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> IWinRTObject.QueryInterfaceCache => _queryInterfaceCache ?? MakeQueryInterfaceCache();
        private volatile global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> _additionalTypeData;
        private global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> MakeAdditionalTypeData()
        {
            global::System.Threading.Interlocked.CompareExchange(ref _additionalTypeData, new global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object>(), null); 
            return _additionalTypeData;
        }
        global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> IWinRTObject.AdditionalTypeData => _additionalTypeData ?? MakeAdditionalTypeData();

        private struct InterfaceTag<I>{};


        private bool IsOverridableInterface(Guid iid) => false;

        global::System.Runtime.InteropServices.CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(ref Guid iid, out IntPtr ppv)
        {
            ppv = IntPtr.Zero;
            if (IsOverridableInterface(iid) || global::WinRT.Interop.IID.IID_IInspectable == iid)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
            }

            if (((IWinRTObject)this).NativeObject.TryAs(iid, out ppv) >= 0)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.Handled;
            }

            return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
        }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")]
    [global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Automation.TransformPatternIdentifiers))]
    [global::ABI.Microsoft.UI.Xaml.Automation.TransformPatternIdentifiersRcwFactory]
    [global::WinRT.ProjectedRuntimeClass(typeof(ITransformPatternIdentifiers))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    public sealed class TransformPatternIdentifiers : global::System.Runtime.InteropServices.ICustomQueryInterface, IWinRTObject, IEquatable<TransformPatternIdentifiers>
    {
        private IntPtr ThisPtr => _inner == null ? (((IWinRTObject)this).NativeObject).ThisPtr : _inner.ThisPtr;

        private readonly IObjectReference _inner = null;



        private IObjectReference _objRef_global__Microsoft_UI_Xaml_Automation_ITransformPatternIdentifiers => _inner;


        public static I As<I>() => ActivationFactory.Get("Microsoft.UI.Xaml.Automation.TransformPatternIdentifiers").AsInterface<I>();

        private static volatile IObjectReference ___objRef_global__Microsoft_UI_Xaml_Automation_ITransformPatternIdentifiersStatics;
        private static IObjectReference _objRef_global__Microsoft_UI_Xaml_Automation_ITransformPatternIdentifiersStatics
        {
            get
            { 
                var factory = ___objRef_global__Microsoft_UI_Xaml_Automation_ITransformPatternIdentifiersStatics;
                if (factory != null && factory.IsInCurrentContext)
                {
                    return factory;
                }
                else
                {
                    return ___objRef_global__Microsoft_UI_Xaml_Automation_ITransformPatternIdentifiersStatics = ActivationFactory.Get("Microsoft.UI.Xaml.Automation.TransformPatternIdentifiers", global::ABI.Microsoft.UI.Xaml.Automation.ITransformPatternIdentifiersStaticsMethods.IID);
                }
            }
        }

        public static AutomationProperty CanMoveProperty => global::ABI.Microsoft.UI.Xaml.Automation.ITransformPatternIdentifiersStaticsMethods.get_CanMoveProperty(_objRef_global__Microsoft_UI_Xaml_Automation_ITransformPatternIdentifiersStatics);

        public static AutomationProperty CanResizeProperty => global::ABI.Microsoft.UI.Xaml.Automation.ITransformPatternIdentifiersStaticsMethods.get_CanResizeProperty(_objRef_global__Microsoft_UI_Xaml_Automation_ITransformPatternIdentifiersStatics);

        public static AutomationProperty CanRotateProperty => global::ABI.Microsoft.UI.Xaml.Automation.ITransformPatternIdentifiersStaticsMethods.get_CanRotateProperty(_objRef_global__Microsoft_UI_Xaml_Automation_ITransformPatternIdentifiersStatics);

        public static TransformPatternIdentifiers FromAbi(IntPtr thisPtr)
        {
            if (thisPtr == IntPtr.Zero) return null;
            return MarshalInspectable<TransformPatternIdentifiers>.FromAbi(thisPtr);
        }

        internal TransformPatternIdentifiers(IObjectReference objRef)
        {
            _inner = objRef.As(global::ABI.Microsoft.UI.Xaml.Automation.ITransformPatternIdentifiersMethods.IID);

        }


        public static bool operator ==(TransformPatternIdentifiers x, TransformPatternIdentifiers y) => (x?.ThisPtr ?? IntPtr.Zero) == (y?.ThisPtr ?? IntPtr.Zero);
        public static bool operator !=(TransformPatternIdentifiers x, TransformPatternIdentifiers y) => !(x == y);
        public bool Equals(TransformPatternIdentifiers other) => this == other;
        public override bool Equals(object obj) => obj is TransformPatternIdentifiers that && this == that;
        public override int GetHashCode() => ThisPtr.GetHashCode();


        bool IWinRTObject.HasUnwrappableNativeObject => true;
        IObjectReference IWinRTObject.NativeObject => _inner;
        private volatile global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> _queryInterfaceCache;
        private global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> MakeQueryInterfaceCache()
        {
            global::System.Threading.Interlocked.CompareExchange(ref _queryInterfaceCache, new global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference>(), null); 
            return _queryInterfaceCache;
        }
        global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> IWinRTObject.QueryInterfaceCache => _queryInterfaceCache ?? MakeQueryInterfaceCache();
        private volatile global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> _additionalTypeData;
        private global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> MakeAdditionalTypeData()
        {
            global::System.Threading.Interlocked.CompareExchange(ref _additionalTypeData, new global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object>(), null); 
            return _additionalTypeData;
        }
        global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> IWinRTObject.AdditionalTypeData => _additionalTypeData ?? MakeAdditionalTypeData();

        private struct InterfaceTag<I>{};


        private bool IsOverridableInterface(Guid iid) => false;

        global::System.Runtime.InteropServices.CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(ref Guid iid, out IntPtr ppv)
        {
            ppv = IntPtr.Zero;
            if (IsOverridableInterface(iid) || global::WinRT.Interop.IID.IID_IInspectable == iid)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
            }

            if (((IWinRTObject)this).NativeObject.TryAs(iid, out ppv) >= 0)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.Handled;
            }

            return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
        }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")]
    [global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Automation.ValuePatternIdentifiers))]
    [global::ABI.Microsoft.UI.Xaml.Automation.ValuePatternIdentifiersRcwFactory]
    [global::WinRT.ProjectedRuntimeClass(typeof(IValuePatternIdentifiers))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    public sealed class ValuePatternIdentifiers : global::System.Runtime.InteropServices.ICustomQueryInterface, IWinRTObject, IEquatable<ValuePatternIdentifiers>
    {
        private IntPtr ThisPtr => _inner == null ? (((IWinRTObject)this).NativeObject).ThisPtr : _inner.ThisPtr;

        private readonly IObjectReference _inner = null;



        private IObjectReference _objRef_global__Microsoft_UI_Xaml_Automation_IValuePatternIdentifiers => _inner;


        public static I As<I>() => ActivationFactory.Get("Microsoft.UI.Xaml.Automation.ValuePatternIdentifiers").AsInterface<I>();

        private static volatile IObjectReference ___objRef_global__Microsoft_UI_Xaml_Automation_IValuePatternIdentifiersStatics;
        private static IObjectReference _objRef_global__Microsoft_UI_Xaml_Automation_IValuePatternIdentifiersStatics
        {
            get
            { 
                var factory = ___objRef_global__Microsoft_UI_Xaml_Automation_IValuePatternIdentifiersStatics;
                if (factory != null && factory.IsInCurrentContext)
                {
                    return factory;
                }
                else
                {
                    return ___objRef_global__Microsoft_UI_Xaml_Automation_IValuePatternIdentifiersStatics = ActivationFactory.Get("Microsoft.UI.Xaml.Automation.ValuePatternIdentifiers", global::ABI.Microsoft.UI.Xaml.Automation.IValuePatternIdentifiersStaticsMethods.IID);
                }
            }
        }

        public static AutomationProperty IsReadOnlyProperty => global::ABI.Microsoft.UI.Xaml.Automation.IValuePatternIdentifiersStaticsMethods.get_IsReadOnlyProperty(_objRef_global__Microsoft_UI_Xaml_Automation_IValuePatternIdentifiersStatics);

        public static AutomationProperty ValueProperty => global::ABI.Microsoft.UI.Xaml.Automation.IValuePatternIdentifiersStaticsMethods.get_ValueProperty(_objRef_global__Microsoft_UI_Xaml_Automation_IValuePatternIdentifiersStatics);

        public static ValuePatternIdentifiers FromAbi(IntPtr thisPtr)
        {
            if (thisPtr == IntPtr.Zero) return null;
            return MarshalInspectable<ValuePatternIdentifiers>.FromAbi(thisPtr);
        }

        internal ValuePatternIdentifiers(IObjectReference objRef)
        {
            _inner = objRef.As(global::ABI.Microsoft.UI.Xaml.Automation.IValuePatternIdentifiersMethods.IID);

        }


        public static bool operator ==(ValuePatternIdentifiers x, ValuePatternIdentifiers y) => (x?.ThisPtr ?? IntPtr.Zero) == (y?.ThisPtr ?? IntPtr.Zero);
        public static bool operator !=(ValuePatternIdentifiers x, ValuePatternIdentifiers y) => !(x == y);
        public bool Equals(ValuePatternIdentifiers other) => this == other;
        public override bool Equals(object obj) => obj is ValuePatternIdentifiers that && this == that;
        public override int GetHashCode() => ThisPtr.GetHashCode();


        bool IWinRTObject.HasUnwrappableNativeObject => true;
        IObjectReference IWinRTObject.NativeObject => _inner;
        private volatile global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> _queryInterfaceCache;
        private global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> MakeQueryInterfaceCache()
        {
            global::System.Threading.Interlocked.CompareExchange(ref _queryInterfaceCache, new global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference>(), null); 
            return _queryInterfaceCache;
        }
        global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> IWinRTObject.QueryInterfaceCache => _queryInterfaceCache ?? MakeQueryInterfaceCache();
        private volatile global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> _additionalTypeData;
        private global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> MakeAdditionalTypeData()
        {
            global::System.Threading.Interlocked.CompareExchange(ref _additionalTypeData, new global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object>(), null); 
            return _additionalTypeData;
        }
        global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> IWinRTObject.AdditionalTypeData => _additionalTypeData ?? MakeAdditionalTypeData();

        private struct InterfaceTag<I>{};


        private bool IsOverridableInterface(Guid iid) => false;

        global::System.Runtime.InteropServices.CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(ref Guid iid, out IntPtr ppv)
        {
            ppv = IntPtr.Zero;
            if (IsOverridableInterface(iid) || global::WinRT.Interop.IID.IID_IInspectable == iid)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
            }

            if (((IWinRTObject)this).NativeObject.TryAs(iid, out ppv) >= 0)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.Handled;
            }

            return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
        }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")][global::WinRT.WinRTExposedType(typeof(global::WinRT.EnumTypeDetails<WindowInteractionState>))][global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    public enum WindowInteractionState : int
    {
        Running = unchecked((int)0),
        Closing = unchecked((int)0x1),
        ReadyForUserInteraction = unchecked((int)0x2),
        BlockedByModalWindow = unchecked((int)0x3),
        NotResponding = unchecked((int)0x4),
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")]
    [global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Automation.WindowPatternIdentifiers))]
    [global::ABI.Microsoft.UI.Xaml.Automation.WindowPatternIdentifiersRcwFactory]
    [global::WinRT.ProjectedRuntimeClass(typeof(IWindowPatternIdentifiers))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    public sealed class WindowPatternIdentifiers : global::System.Runtime.InteropServices.ICustomQueryInterface, IWinRTObject, IEquatable<WindowPatternIdentifiers>
    {
        private IntPtr ThisPtr => _inner == null ? (((IWinRTObject)this).NativeObject).ThisPtr : _inner.ThisPtr;

        private readonly IObjectReference _inner = null;



        private IObjectReference _objRef_global__Microsoft_UI_Xaml_Automation_IWindowPatternIdentifiers => _inner;


        public static I As<I>() => ActivationFactory.Get("Microsoft.UI.Xaml.Automation.WindowPatternIdentifiers").AsInterface<I>();

        private static volatile IObjectReference ___objRef_global__Microsoft_UI_Xaml_Automation_IWindowPatternIdentifiersStatics;
        private static IObjectReference _objRef_global__Microsoft_UI_Xaml_Automation_IWindowPatternIdentifiersStatics
        {
            get
            { 
                var factory = ___objRef_global__Microsoft_UI_Xaml_Automation_IWindowPatternIdentifiersStatics;
                if (factory != null && factory.IsInCurrentContext)
                {
                    return factory;
                }
                else
                {
                    return ___objRef_global__Microsoft_UI_Xaml_Automation_IWindowPatternIdentifiersStatics = ActivationFactory.Get("Microsoft.UI.Xaml.Automation.WindowPatternIdentifiers", global::ABI.Microsoft.UI.Xaml.Automation.IWindowPatternIdentifiersStaticsMethods.IID);
                }
            }
        }

        public static AutomationProperty CanMaximizeProperty => global::ABI.Microsoft.UI.Xaml.Automation.IWindowPatternIdentifiersStaticsMethods.get_CanMaximizeProperty(_objRef_global__Microsoft_UI_Xaml_Automation_IWindowPatternIdentifiersStatics);

        public static AutomationProperty CanMinimizeProperty => global::ABI.Microsoft.UI.Xaml.Automation.IWindowPatternIdentifiersStaticsMethods.get_CanMinimizeProperty(_objRef_global__Microsoft_UI_Xaml_Automation_IWindowPatternIdentifiersStatics);

        public static AutomationProperty IsModalProperty => global::ABI.Microsoft.UI.Xaml.Automation.IWindowPatternIdentifiersStaticsMethods.get_IsModalProperty(_objRef_global__Microsoft_UI_Xaml_Automation_IWindowPatternIdentifiersStatics);

        public static AutomationProperty IsTopmostProperty => global::ABI.Microsoft.UI.Xaml.Automation.IWindowPatternIdentifiersStaticsMethods.get_IsTopmostProperty(_objRef_global__Microsoft_UI_Xaml_Automation_IWindowPatternIdentifiersStatics);

        public static AutomationProperty WindowInteractionStateProperty => global::ABI.Microsoft.UI.Xaml.Automation.IWindowPatternIdentifiersStaticsMethods.get_WindowInteractionStateProperty(_objRef_global__Microsoft_UI_Xaml_Automation_IWindowPatternIdentifiersStatics);

        public static AutomationProperty WindowVisualStateProperty => global::ABI.Microsoft.UI.Xaml.Automation.IWindowPatternIdentifiersStaticsMethods.get_WindowVisualStateProperty(_objRef_global__Microsoft_UI_Xaml_Automation_IWindowPatternIdentifiersStatics);

        public static WindowPatternIdentifiers FromAbi(IntPtr thisPtr)
        {
            if (thisPtr == IntPtr.Zero) return null;
            return MarshalInspectable<WindowPatternIdentifiers>.FromAbi(thisPtr);
        }

        internal WindowPatternIdentifiers(IObjectReference objRef)
        {
            _inner = objRef.As(global::ABI.Microsoft.UI.Xaml.Automation.IWindowPatternIdentifiersMethods.IID);

        }


        public static bool operator ==(WindowPatternIdentifiers x, WindowPatternIdentifiers y) => (x?.ThisPtr ?? IntPtr.Zero) == (y?.ThisPtr ?? IntPtr.Zero);
        public static bool operator !=(WindowPatternIdentifiers x, WindowPatternIdentifiers y) => !(x == y);
        public bool Equals(WindowPatternIdentifiers other) => this == other;
        public override bool Equals(object obj) => obj is WindowPatternIdentifiers that && this == that;
        public override int GetHashCode() => ThisPtr.GetHashCode();


        bool IWinRTObject.HasUnwrappableNativeObject => true;
        IObjectReference IWinRTObject.NativeObject => _inner;
        private volatile global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> _queryInterfaceCache;
        private global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> MakeQueryInterfaceCache()
        {
            global::System.Threading.Interlocked.CompareExchange(ref _queryInterfaceCache, new global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference>(), null); 
            return _queryInterfaceCache;
        }
        global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> IWinRTObject.QueryInterfaceCache => _queryInterfaceCache ?? MakeQueryInterfaceCache();
        private volatile global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> _additionalTypeData;
        private global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> MakeAdditionalTypeData()
        {
            global::System.Threading.Interlocked.CompareExchange(ref _additionalTypeData, new global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object>(), null); 
            return _additionalTypeData;
        }
        global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> IWinRTObject.AdditionalTypeData => _additionalTypeData ?? MakeAdditionalTypeData();

        private struct InterfaceTag<I>{};


        private bool IsOverridableInterface(Guid iid) => false;

        global::System.Runtime.InteropServices.CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(ref Guid iid, out IntPtr ppv)
        {
            ppv = IntPtr.Zero;
            if (IsOverridableInterface(iid) || global::WinRT.Interop.IID.IID_IInspectable == iid)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
            }

            if (((IWinRTObject)this).NativeObject.TryAs(iid, out ppv) >= 0)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.Handled;
            }

            return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
        }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")][global::WinRT.WinRTExposedType(typeof(global::WinRT.EnumTypeDetails<WindowVisualState>))][global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    public enum WindowVisualState : int
    {
        Normal = unchecked((int)0),
        Maximized = unchecked((int)0x1),
        Minimized = unchecked((int)0x2),
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")][global::WinRT.WinRTExposedType(typeof(global::WinRT.EnumTypeDetails<ZoomUnit>))][global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    public enum ZoomUnit : int
    {
        NoAmount = unchecked((int)0),
        LargeDecrement = unchecked((int)0x1),
        SmallDecrement = unchecked((int)0x2),
        LargeIncrement = unchecked((int)0x3),
        SmallIncrement = unchecked((int)0x4),
    }
}

#pragma warning disable CA1416
namespace ABI.Microsoft.UI.Xaml.Automation
{
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    public struct AnnotationPatternIdentifiers
    {

        public static IObjectReference CreateMarshaler(global::Microsoft.UI.Xaml.Automation.AnnotationPatternIdentifiers obj) => obj is null ? null : MarshalInspectable<global::Microsoft.UI.Xaml.Automation.AnnotationPatternIdentifiers>.CreateMarshaler<IUnknownVftbl>(obj, global::ABI.Microsoft.UI.Xaml.Automation.IAnnotationPatternIdentifiersMethods.IID);
        public static ObjectReferenceValue CreateMarshaler2(global::Microsoft.UI.Xaml.Automation.AnnotationPatternIdentifiers obj) => MarshalInspectable<object>.CreateMarshaler2(obj, global::ABI.Microsoft.UI.Xaml.Automation.IAnnotationPatternIdentifiersMethods.IID);
        public static IntPtr GetAbi(IObjectReference value) => value is null ? IntPtr.Zero : MarshalInterfaceHelper<object>.GetAbi(value);
        public static global::Microsoft.UI.Xaml.Automation.AnnotationPatternIdentifiers FromAbi(IntPtr thisPtr) => global::Microsoft.UI.Xaml.Automation.AnnotationPatternIdentifiers.FromAbi(thisPtr);
        public static IntPtr FromManaged(global::Microsoft.UI.Xaml.Automation.AnnotationPatternIdentifiers obj) => obj is null ? IntPtr.Zero : CreateMarshaler2(obj).Detach();
        public static unsafe MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.AnnotationPatternIdentifiers>.MarshalerArray CreateMarshalerArray(global::Microsoft.UI.Xaml.Automation.AnnotationPatternIdentifiers[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.AnnotationPatternIdentifiers>.CreateMarshalerArray2(array, (o) => CreateMarshaler2(o));
        public static (int length, IntPtr data) GetAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.AnnotationPatternIdentifiers>.GetAbiArray(box);
        public static unsafe global::Microsoft.UI.Xaml.Automation.AnnotationPatternIdentifiers[] FromAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.AnnotationPatternIdentifiers>.FromAbiArray(box, FromAbi);
        public static void CopyAbiArray(global::Microsoft.UI.Xaml.Automation.AnnotationPatternIdentifiers[] array, object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.AnnotationPatternIdentifiers>.CopyAbiArray(array, box, FromAbi);
        public static (int length, IntPtr data) FromManagedArray(global::Microsoft.UI.Xaml.Automation.AnnotationPatternIdentifiers[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.AnnotationPatternIdentifiers>.FromManagedArray(array, (o) => FromManaged(o));
        public static void DisposeMarshaler(IObjectReference value) => MarshalInspectable<object>.DisposeMarshaler(value);
        public static void DisposeMarshalerArray(MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.AnnotationPatternIdentifiers>.MarshalerArray array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.AnnotationPatternIdentifiers>.DisposeMarshalerArray(array);
        public static void DisposeAbi(IntPtr abi) => MarshalInspectable<object>.DisposeAbi(abi);
        public static unsafe void DisposeAbiArray(object box) => MarshalInspectable<object>.DisposeAbiArray(box);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    internal sealed class AnnotationPatternIdentifiersRcwFactoryAttribute : global::WinRT.WinRTImplementationTypeRcwFactoryAttribute
    {
        public override object CreateInstance(global::WinRT.IInspectable inspectable)
            => new global::Microsoft.UI.Xaml.Automation.AnnotationPatternIdentifiers(inspectable.ObjRef);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    public struct AutomationAnnotation
    {

        public static IObjectReference CreateMarshaler(global::Microsoft.UI.Xaml.Automation.AutomationAnnotation obj) => obj is null ? null : MarshalInspectable<global::Microsoft.UI.Xaml.Automation.AutomationAnnotation>.CreateMarshaler<IUnknownVftbl>(obj, global::ABI.Microsoft.UI.Xaml.Automation.IAutomationAnnotationMethods.IID);
        public static ObjectReferenceValue CreateMarshaler2(global::Microsoft.UI.Xaml.Automation.AutomationAnnotation obj) => MarshalInspectable<object>.CreateMarshaler2(obj, global::ABI.Microsoft.UI.Xaml.Automation.IAutomationAnnotationMethods.IID);
        public static IntPtr GetAbi(IObjectReference value) => value is null ? IntPtr.Zero : MarshalInterfaceHelper<object>.GetAbi(value);
        public static global::Microsoft.UI.Xaml.Automation.AutomationAnnotation FromAbi(IntPtr thisPtr) => global::Microsoft.UI.Xaml.Automation.AutomationAnnotation.FromAbi(thisPtr);
        public static IntPtr FromManaged(global::Microsoft.UI.Xaml.Automation.AutomationAnnotation obj) => obj is null ? IntPtr.Zero : CreateMarshaler2(obj).Detach();
        public static unsafe MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.AutomationAnnotation>.MarshalerArray CreateMarshalerArray(global::Microsoft.UI.Xaml.Automation.AutomationAnnotation[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.AutomationAnnotation>.CreateMarshalerArray2(array, (o) => CreateMarshaler2(o));
        public static (int length, IntPtr data) GetAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.AutomationAnnotation>.GetAbiArray(box);
        public static unsafe global::Microsoft.UI.Xaml.Automation.AutomationAnnotation[] FromAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.AutomationAnnotation>.FromAbiArray(box, FromAbi);
        public static void CopyAbiArray(global::Microsoft.UI.Xaml.Automation.AutomationAnnotation[] array, object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.AutomationAnnotation>.CopyAbiArray(array, box, FromAbi);
        public static (int length, IntPtr data) FromManagedArray(global::Microsoft.UI.Xaml.Automation.AutomationAnnotation[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.AutomationAnnotation>.FromManagedArray(array, (o) => FromManaged(o));
        public static void DisposeMarshaler(IObjectReference value) => MarshalInspectable<object>.DisposeMarshaler(value);
        public static void DisposeMarshalerArray(MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.AutomationAnnotation>.MarshalerArray array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.AutomationAnnotation>.DisposeMarshalerArray(array);
        public static void DisposeAbi(IntPtr abi) => MarshalInspectable<object>.DisposeAbi(abi);
        public static unsafe void DisposeAbiArray(object box) => MarshalInspectable<object>.DisposeAbiArray(box);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    internal sealed class AutomationAnnotationRcwFactoryAttribute : global::WinRT.WinRTImplementationTypeRcwFactoryAttribute
    {
        public override object CreateInstance(global::WinRT.IInspectable inspectable)
            => new global::Microsoft.UI.Xaml.Automation.AutomationAnnotation(inspectable.ObjRef);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    public struct AutomationElementIdentifiers
    {

        public static IObjectReference CreateMarshaler(global::Microsoft.UI.Xaml.Automation.AutomationElementIdentifiers obj) => obj is null ? null : MarshalInspectable<global::Microsoft.UI.Xaml.Automation.AutomationElementIdentifiers>.CreateMarshaler<IUnknownVftbl>(obj, global::ABI.Microsoft.UI.Xaml.Automation.IAutomationElementIdentifiersMethods.IID);
        public static ObjectReferenceValue CreateMarshaler2(global::Microsoft.UI.Xaml.Automation.AutomationElementIdentifiers obj) => MarshalInspectable<object>.CreateMarshaler2(obj, global::ABI.Microsoft.UI.Xaml.Automation.IAutomationElementIdentifiersMethods.IID);
        public static IntPtr GetAbi(IObjectReference value) => value is null ? IntPtr.Zero : MarshalInterfaceHelper<object>.GetAbi(value);
        public static global::Microsoft.UI.Xaml.Automation.AutomationElementIdentifiers FromAbi(IntPtr thisPtr) => global::Microsoft.UI.Xaml.Automation.AutomationElementIdentifiers.FromAbi(thisPtr);
        public static IntPtr FromManaged(global::Microsoft.UI.Xaml.Automation.AutomationElementIdentifiers obj) => obj is null ? IntPtr.Zero : CreateMarshaler2(obj).Detach();
        public static unsafe MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.AutomationElementIdentifiers>.MarshalerArray CreateMarshalerArray(global::Microsoft.UI.Xaml.Automation.AutomationElementIdentifiers[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.AutomationElementIdentifiers>.CreateMarshalerArray2(array, (o) => CreateMarshaler2(o));
        public static (int length, IntPtr data) GetAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.AutomationElementIdentifiers>.GetAbiArray(box);
        public static unsafe global::Microsoft.UI.Xaml.Automation.AutomationElementIdentifiers[] FromAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.AutomationElementIdentifiers>.FromAbiArray(box, FromAbi);
        public static void CopyAbiArray(global::Microsoft.UI.Xaml.Automation.AutomationElementIdentifiers[] array, object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.AutomationElementIdentifiers>.CopyAbiArray(array, box, FromAbi);
        public static (int length, IntPtr data) FromManagedArray(global::Microsoft.UI.Xaml.Automation.AutomationElementIdentifiers[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.AutomationElementIdentifiers>.FromManagedArray(array, (o) => FromManaged(o));
        public static void DisposeMarshaler(IObjectReference value) => MarshalInspectable<object>.DisposeMarshaler(value);
        public static void DisposeMarshalerArray(MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.AutomationElementIdentifiers>.MarshalerArray array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.AutomationElementIdentifiers>.DisposeMarshalerArray(array);
        public static void DisposeAbi(IntPtr abi) => MarshalInspectable<object>.DisposeAbi(abi);
        public static unsafe void DisposeAbiArray(object box) => MarshalInspectable<object>.DisposeAbiArray(box);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    internal sealed class AutomationElementIdentifiersRcwFactoryAttribute : global::WinRT.WinRTImplementationTypeRcwFactoryAttribute
    {
        public override object CreateInstance(global::WinRT.IInspectable inspectable)
            => new global::Microsoft.UI.Xaml.Automation.AutomationElementIdentifiers(inspectable.ObjRef);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    public struct AutomationProperties
    {

        public static IObjectReference CreateMarshaler(global::Microsoft.UI.Xaml.Automation.AutomationProperties obj) => obj is null ? null : MarshalInspectable<global::Microsoft.UI.Xaml.Automation.AutomationProperties>.CreateMarshaler<IUnknownVftbl>(obj, global::ABI.Microsoft.UI.Xaml.Automation.IAutomationPropertiesMethods.IID);
        public static ObjectReferenceValue CreateMarshaler2(global::Microsoft.UI.Xaml.Automation.AutomationProperties obj) => MarshalInspectable<object>.CreateMarshaler2(obj, global::ABI.Microsoft.UI.Xaml.Automation.IAutomationPropertiesMethods.IID);
        public static IntPtr GetAbi(IObjectReference value) => value is null ? IntPtr.Zero : MarshalInterfaceHelper<object>.GetAbi(value);
        public static global::Microsoft.UI.Xaml.Automation.AutomationProperties FromAbi(IntPtr thisPtr) => global::Microsoft.UI.Xaml.Automation.AutomationProperties.FromAbi(thisPtr);
        public static IntPtr FromManaged(global::Microsoft.UI.Xaml.Automation.AutomationProperties obj) => obj is null ? IntPtr.Zero : CreateMarshaler2(obj).Detach();
        public static unsafe MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.AutomationProperties>.MarshalerArray CreateMarshalerArray(global::Microsoft.UI.Xaml.Automation.AutomationProperties[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.AutomationProperties>.CreateMarshalerArray2(array, (o) => CreateMarshaler2(o));
        public static (int length, IntPtr data) GetAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.AutomationProperties>.GetAbiArray(box);
        public static unsafe global::Microsoft.UI.Xaml.Automation.AutomationProperties[] FromAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.AutomationProperties>.FromAbiArray(box, FromAbi);
        public static void CopyAbiArray(global::Microsoft.UI.Xaml.Automation.AutomationProperties[] array, object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.AutomationProperties>.CopyAbiArray(array, box, FromAbi);
        public static (int length, IntPtr data) FromManagedArray(global::Microsoft.UI.Xaml.Automation.AutomationProperties[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.AutomationProperties>.FromManagedArray(array, (o) => FromManaged(o));
        public static void DisposeMarshaler(IObjectReference value) => MarshalInspectable<object>.DisposeMarshaler(value);
        public static void DisposeMarshalerArray(MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.AutomationProperties>.MarshalerArray array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.AutomationProperties>.DisposeMarshalerArray(array);
        public static void DisposeAbi(IntPtr abi) => MarshalInspectable<object>.DisposeAbi(abi);
        public static unsafe void DisposeAbiArray(object box) => MarshalInspectable<object>.DisposeAbiArray(box);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    internal sealed class AutomationPropertiesRcwFactoryAttribute : global::WinRT.WinRTImplementationTypeRcwFactoryAttribute
    {
        public override object CreateInstance(global::WinRT.IInspectable inspectable)
            => new global::Microsoft.UI.Xaml.Automation.AutomationProperties(inspectable.ObjRef);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    public struct AutomationProperty
    {

        public static IObjectReference CreateMarshaler(global::Microsoft.UI.Xaml.Automation.AutomationProperty obj) => obj is null ? null : MarshalInspectable<global::Microsoft.UI.Xaml.Automation.AutomationProperty>.CreateMarshaler<IUnknownVftbl>(obj, global::ABI.Microsoft.UI.Xaml.Automation.IAutomationPropertyMethods.IID);
        public static ObjectReferenceValue CreateMarshaler2(global::Microsoft.UI.Xaml.Automation.AutomationProperty obj) => MarshalInspectable<object>.CreateMarshaler2(obj, global::ABI.Microsoft.UI.Xaml.Automation.IAutomationPropertyMethods.IID);
        public static IntPtr GetAbi(IObjectReference value) => value is null ? IntPtr.Zero : MarshalInterfaceHelper<object>.GetAbi(value);
        public static global::Microsoft.UI.Xaml.Automation.AutomationProperty FromAbi(IntPtr thisPtr) => global::Microsoft.UI.Xaml.Automation.AutomationProperty.FromAbi(thisPtr);
        public static IntPtr FromManaged(global::Microsoft.UI.Xaml.Automation.AutomationProperty obj) => obj is null ? IntPtr.Zero : CreateMarshaler2(obj).Detach();
        public static unsafe MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.AutomationProperty>.MarshalerArray CreateMarshalerArray(global::Microsoft.UI.Xaml.Automation.AutomationProperty[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.AutomationProperty>.CreateMarshalerArray2(array, (o) => CreateMarshaler2(o));
        public static (int length, IntPtr data) GetAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.AutomationProperty>.GetAbiArray(box);
        public static unsafe global::Microsoft.UI.Xaml.Automation.AutomationProperty[] FromAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.AutomationProperty>.FromAbiArray(box, FromAbi);
        public static void CopyAbiArray(global::Microsoft.UI.Xaml.Automation.AutomationProperty[] array, object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.AutomationProperty>.CopyAbiArray(array, box, FromAbi);
        public static (int length, IntPtr data) FromManagedArray(global::Microsoft.UI.Xaml.Automation.AutomationProperty[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.AutomationProperty>.FromManagedArray(array, (o) => FromManaged(o));
        public static void DisposeMarshaler(IObjectReference value) => MarshalInspectable<object>.DisposeMarshaler(value);
        public static void DisposeMarshalerArray(MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.AutomationProperty>.MarshalerArray array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.AutomationProperty>.DisposeMarshalerArray(array);
        public static void DisposeAbi(IntPtr abi) => MarshalInspectable<object>.DisposeAbi(abi);
        public static unsafe void DisposeAbiArray(object box) => MarshalInspectable<object>.DisposeAbiArray(box);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    internal sealed class AutomationPropertyRcwFactoryAttribute : global::WinRT.WinRTImplementationTypeRcwFactoryAttribute
    {
        public override object CreateInstance(global::WinRT.IInspectable inspectable)
            => new global::Microsoft.UI.Xaml.Automation.AutomationProperty(inspectable.ObjRef);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    public struct DockPatternIdentifiers
    {

        public static IObjectReference CreateMarshaler(global::Microsoft.UI.Xaml.Automation.DockPatternIdentifiers obj) => obj is null ? null : MarshalInspectable<global::Microsoft.UI.Xaml.Automation.DockPatternIdentifiers>.CreateMarshaler<IUnknownVftbl>(obj, global::ABI.Microsoft.UI.Xaml.Automation.IDockPatternIdentifiersMethods.IID);
        public static ObjectReferenceValue CreateMarshaler2(global::Microsoft.UI.Xaml.Automation.DockPatternIdentifiers obj) => MarshalInspectable<object>.CreateMarshaler2(obj, global::ABI.Microsoft.UI.Xaml.Automation.IDockPatternIdentifiersMethods.IID);
        public static IntPtr GetAbi(IObjectReference value) => value is null ? IntPtr.Zero : MarshalInterfaceHelper<object>.GetAbi(value);
        public static global::Microsoft.UI.Xaml.Automation.DockPatternIdentifiers FromAbi(IntPtr thisPtr) => global::Microsoft.UI.Xaml.Automation.DockPatternIdentifiers.FromAbi(thisPtr);
        public static IntPtr FromManaged(global::Microsoft.UI.Xaml.Automation.DockPatternIdentifiers obj) => obj is null ? IntPtr.Zero : CreateMarshaler2(obj).Detach();
        public static unsafe MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.DockPatternIdentifiers>.MarshalerArray CreateMarshalerArray(global::Microsoft.UI.Xaml.Automation.DockPatternIdentifiers[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.DockPatternIdentifiers>.CreateMarshalerArray2(array, (o) => CreateMarshaler2(o));
        public static (int length, IntPtr data) GetAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.DockPatternIdentifiers>.GetAbiArray(box);
        public static unsafe global::Microsoft.UI.Xaml.Automation.DockPatternIdentifiers[] FromAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.DockPatternIdentifiers>.FromAbiArray(box, FromAbi);
        public static void CopyAbiArray(global::Microsoft.UI.Xaml.Automation.DockPatternIdentifiers[] array, object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.DockPatternIdentifiers>.CopyAbiArray(array, box, FromAbi);
        public static (int length, IntPtr data) FromManagedArray(global::Microsoft.UI.Xaml.Automation.DockPatternIdentifiers[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.DockPatternIdentifiers>.FromManagedArray(array, (o) => FromManaged(o));
        public static void DisposeMarshaler(IObjectReference value) => MarshalInspectable<object>.DisposeMarshaler(value);
        public static void DisposeMarshalerArray(MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.DockPatternIdentifiers>.MarshalerArray array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.DockPatternIdentifiers>.DisposeMarshalerArray(array);
        public static void DisposeAbi(IntPtr abi) => MarshalInspectable<object>.DisposeAbi(abi);
        public static unsafe void DisposeAbiArray(object box) => MarshalInspectable<object>.DisposeAbiArray(box);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    internal sealed class DockPatternIdentifiersRcwFactoryAttribute : global::WinRT.WinRTImplementationTypeRcwFactoryAttribute
    {
        public override object CreateInstance(global::WinRT.IInspectable inspectable)
            => new global::Microsoft.UI.Xaml.Automation.DockPatternIdentifiers(inspectable.ObjRef);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    public struct DragPatternIdentifiers
    {

        public static IObjectReference CreateMarshaler(global::Microsoft.UI.Xaml.Automation.DragPatternIdentifiers obj) => obj is null ? null : MarshalInspectable<global::Microsoft.UI.Xaml.Automation.DragPatternIdentifiers>.CreateMarshaler<IUnknownVftbl>(obj, global::ABI.Microsoft.UI.Xaml.Automation.IDragPatternIdentifiersMethods.IID);
        public static ObjectReferenceValue CreateMarshaler2(global::Microsoft.UI.Xaml.Automation.DragPatternIdentifiers obj) => MarshalInspectable<object>.CreateMarshaler2(obj, global::ABI.Microsoft.UI.Xaml.Automation.IDragPatternIdentifiersMethods.IID);
        public static IntPtr GetAbi(IObjectReference value) => value is null ? IntPtr.Zero : MarshalInterfaceHelper<object>.GetAbi(value);
        public static global::Microsoft.UI.Xaml.Automation.DragPatternIdentifiers FromAbi(IntPtr thisPtr) => global::Microsoft.UI.Xaml.Automation.DragPatternIdentifiers.FromAbi(thisPtr);
        public static IntPtr FromManaged(global::Microsoft.UI.Xaml.Automation.DragPatternIdentifiers obj) => obj is null ? IntPtr.Zero : CreateMarshaler2(obj).Detach();
        public static unsafe MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.DragPatternIdentifiers>.MarshalerArray CreateMarshalerArray(global::Microsoft.UI.Xaml.Automation.DragPatternIdentifiers[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.DragPatternIdentifiers>.CreateMarshalerArray2(array, (o) => CreateMarshaler2(o));
        public static (int length, IntPtr data) GetAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.DragPatternIdentifiers>.GetAbiArray(box);
        public static unsafe global::Microsoft.UI.Xaml.Automation.DragPatternIdentifiers[] FromAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.DragPatternIdentifiers>.FromAbiArray(box, FromAbi);
        public static void CopyAbiArray(global::Microsoft.UI.Xaml.Automation.DragPatternIdentifiers[] array, object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.DragPatternIdentifiers>.CopyAbiArray(array, box, FromAbi);
        public static (int length, IntPtr data) FromManagedArray(global::Microsoft.UI.Xaml.Automation.DragPatternIdentifiers[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.DragPatternIdentifiers>.FromManagedArray(array, (o) => FromManaged(o));
        public static void DisposeMarshaler(IObjectReference value) => MarshalInspectable<object>.DisposeMarshaler(value);
        public static void DisposeMarshalerArray(MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.DragPatternIdentifiers>.MarshalerArray array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.DragPatternIdentifiers>.DisposeMarshalerArray(array);
        public static void DisposeAbi(IntPtr abi) => MarshalInspectable<object>.DisposeAbi(abi);
        public static unsafe void DisposeAbiArray(object box) => MarshalInspectable<object>.DisposeAbiArray(box);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    internal sealed class DragPatternIdentifiersRcwFactoryAttribute : global::WinRT.WinRTImplementationTypeRcwFactoryAttribute
    {
        public override object CreateInstance(global::WinRT.IInspectable inspectable)
            => new global::Microsoft.UI.Xaml.Automation.DragPatternIdentifiers(inspectable.ObjRef);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    public struct DropTargetPatternIdentifiers
    {

        public static IObjectReference CreateMarshaler(global::Microsoft.UI.Xaml.Automation.DropTargetPatternIdentifiers obj) => obj is null ? null : MarshalInspectable<global::Microsoft.UI.Xaml.Automation.DropTargetPatternIdentifiers>.CreateMarshaler<IUnknownVftbl>(obj, global::ABI.Microsoft.UI.Xaml.Automation.IDropTargetPatternIdentifiersMethods.IID);
        public static ObjectReferenceValue CreateMarshaler2(global::Microsoft.UI.Xaml.Automation.DropTargetPatternIdentifiers obj) => MarshalInspectable<object>.CreateMarshaler2(obj, global::ABI.Microsoft.UI.Xaml.Automation.IDropTargetPatternIdentifiersMethods.IID);
        public static IntPtr GetAbi(IObjectReference value) => value is null ? IntPtr.Zero : MarshalInterfaceHelper<object>.GetAbi(value);
        public static global::Microsoft.UI.Xaml.Automation.DropTargetPatternIdentifiers FromAbi(IntPtr thisPtr) => global::Microsoft.UI.Xaml.Automation.DropTargetPatternIdentifiers.FromAbi(thisPtr);
        public static IntPtr FromManaged(global::Microsoft.UI.Xaml.Automation.DropTargetPatternIdentifiers obj) => obj is null ? IntPtr.Zero : CreateMarshaler2(obj).Detach();
        public static unsafe MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.DropTargetPatternIdentifiers>.MarshalerArray CreateMarshalerArray(global::Microsoft.UI.Xaml.Automation.DropTargetPatternIdentifiers[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.DropTargetPatternIdentifiers>.CreateMarshalerArray2(array, (o) => CreateMarshaler2(o));
        public static (int length, IntPtr data) GetAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.DropTargetPatternIdentifiers>.GetAbiArray(box);
        public static unsafe global::Microsoft.UI.Xaml.Automation.DropTargetPatternIdentifiers[] FromAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.DropTargetPatternIdentifiers>.FromAbiArray(box, FromAbi);
        public static void CopyAbiArray(global::Microsoft.UI.Xaml.Automation.DropTargetPatternIdentifiers[] array, object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.DropTargetPatternIdentifiers>.CopyAbiArray(array, box, FromAbi);
        public static (int length, IntPtr data) FromManagedArray(global::Microsoft.UI.Xaml.Automation.DropTargetPatternIdentifiers[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.DropTargetPatternIdentifiers>.FromManagedArray(array, (o) => FromManaged(o));
        public static void DisposeMarshaler(IObjectReference value) => MarshalInspectable<object>.DisposeMarshaler(value);
        public static void DisposeMarshalerArray(MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.DropTargetPatternIdentifiers>.MarshalerArray array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.DropTargetPatternIdentifiers>.DisposeMarshalerArray(array);
        public static void DisposeAbi(IntPtr abi) => MarshalInspectable<object>.DisposeAbi(abi);
        public static unsafe void DisposeAbiArray(object box) => MarshalInspectable<object>.DisposeAbiArray(box);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    internal sealed class DropTargetPatternIdentifiersRcwFactoryAttribute : global::WinRT.WinRTImplementationTypeRcwFactoryAttribute
    {
        public override object CreateInstance(global::WinRT.IInspectable inspectable)
            => new global::Microsoft.UI.Xaml.Automation.DropTargetPatternIdentifiers(inspectable.ObjRef);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    public struct ExpandCollapsePatternIdentifiers
    {

        public static IObjectReference CreateMarshaler(global::Microsoft.UI.Xaml.Automation.ExpandCollapsePatternIdentifiers obj) => obj is null ? null : MarshalInspectable<global::Microsoft.UI.Xaml.Automation.ExpandCollapsePatternIdentifiers>.CreateMarshaler<IUnknownVftbl>(obj, global::ABI.Microsoft.UI.Xaml.Automation.IExpandCollapsePatternIdentifiersMethods.IID);
        public static ObjectReferenceValue CreateMarshaler2(global::Microsoft.UI.Xaml.Automation.ExpandCollapsePatternIdentifiers obj) => MarshalInspectable<object>.CreateMarshaler2(obj, global::ABI.Microsoft.UI.Xaml.Automation.IExpandCollapsePatternIdentifiersMethods.IID);
        public static IntPtr GetAbi(IObjectReference value) => value is null ? IntPtr.Zero : MarshalInterfaceHelper<object>.GetAbi(value);
        public static global::Microsoft.UI.Xaml.Automation.ExpandCollapsePatternIdentifiers FromAbi(IntPtr thisPtr) => global::Microsoft.UI.Xaml.Automation.ExpandCollapsePatternIdentifiers.FromAbi(thisPtr);
        public static IntPtr FromManaged(global::Microsoft.UI.Xaml.Automation.ExpandCollapsePatternIdentifiers obj) => obj is null ? IntPtr.Zero : CreateMarshaler2(obj).Detach();
        public static unsafe MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.ExpandCollapsePatternIdentifiers>.MarshalerArray CreateMarshalerArray(global::Microsoft.UI.Xaml.Automation.ExpandCollapsePatternIdentifiers[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.ExpandCollapsePatternIdentifiers>.CreateMarshalerArray2(array, (o) => CreateMarshaler2(o));
        public static (int length, IntPtr data) GetAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.ExpandCollapsePatternIdentifiers>.GetAbiArray(box);
        public static unsafe global::Microsoft.UI.Xaml.Automation.ExpandCollapsePatternIdentifiers[] FromAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.ExpandCollapsePatternIdentifiers>.FromAbiArray(box, FromAbi);
        public static void CopyAbiArray(global::Microsoft.UI.Xaml.Automation.ExpandCollapsePatternIdentifiers[] array, object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.ExpandCollapsePatternIdentifiers>.CopyAbiArray(array, box, FromAbi);
        public static (int length, IntPtr data) FromManagedArray(global::Microsoft.UI.Xaml.Automation.ExpandCollapsePatternIdentifiers[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.ExpandCollapsePatternIdentifiers>.FromManagedArray(array, (o) => FromManaged(o));
        public static void DisposeMarshaler(IObjectReference value) => MarshalInspectable<object>.DisposeMarshaler(value);
        public static void DisposeMarshalerArray(MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.ExpandCollapsePatternIdentifiers>.MarshalerArray array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.ExpandCollapsePatternIdentifiers>.DisposeMarshalerArray(array);
        public static void DisposeAbi(IntPtr abi) => MarshalInspectable<object>.DisposeAbi(abi);
        public static unsafe void DisposeAbiArray(object box) => MarshalInspectable<object>.DisposeAbiArray(box);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    internal sealed class ExpandCollapsePatternIdentifiersRcwFactoryAttribute : global::WinRT.WinRTImplementationTypeRcwFactoryAttribute
    {
        public override object CreateInstance(global::WinRT.IInspectable inspectable)
            => new global::Microsoft.UI.Xaml.Automation.ExpandCollapsePatternIdentifiers(inspectable.ObjRef);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    public struct GridItemPatternIdentifiers
    {

        public static IObjectReference CreateMarshaler(global::Microsoft.UI.Xaml.Automation.GridItemPatternIdentifiers obj) => obj is null ? null : MarshalInspectable<global::Microsoft.UI.Xaml.Automation.GridItemPatternIdentifiers>.CreateMarshaler<IUnknownVftbl>(obj, global::ABI.Microsoft.UI.Xaml.Automation.IGridItemPatternIdentifiersMethods.IID);
        public static ObjectReferenceValue CreateMarshaler2(global::Microsoft.UI.Xaml.Automation.GridItemPatternIdentifiers obj) => MarshalInspectable<object>.CreateMarshaler2(obj, global::ABI.Microsoft.UI.Xaml.Automation.IGridItemPatternIdentifiersMethods.IID);
        public static IntPtr GetAbi(IObjectReference value) => value is null ? IntPtr.Zero : MarshalInterfaceHelper<object>.GetAbi(value);
        public static global::Microsoft.UI.Xaml.Automation.GridItemPatternIdentifiers FromAbi(IntPtr thisPtr) => global::Microsoft.UI.Xaml.Automation.GridItemPatternIdentifiers.FromAbi(thisPtr);
        public static IntPtr FromManaged(global::Microsoft.UI.Xaml.Automation.GridItemPatternIdentifiers obj) => obj is null ? IntPtr.Zero : CreateMarshaler2(obj).Detach();
        public static unsafe MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.GridItemPatternIdentifiers>.MarshalerArray CreateMarshalerArray(global::Microsoft.UI.Xaml.Automation.GridItemPatternIdentifiers[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.GridItemPatternIdentifiers>.CreateMarshalerArray2(array, (o) => CreateMarshaler2(o));
        public static (int length, IntPtr data) GetAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.GridItemPatternIdentifiers>.GetAbiArray(box);
        public static unsafe global::Microsoft.UI.Xaml.Automation.GridItemPatternIdentifiers[] FromAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.GridItemPatternIdentifiers>.FromAbiArray(box, FromAbi);
        public static void CopyAbiArray(global::Microsoft.UI.Xaml.Automation.GridItemPatternIdentifiers[] array, object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.GridItemPatternIdentifiers>.CopyAbiArray(array, box, FromAbi);
        public static (int length, IntPtr data) FromManagedArray(global::Microsoft.UI.Xaml.Automation.GridItemPatternIdentifiers[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.GridItemPatternIdentifiers>.FromManagedArray(array, (o) => FromManaged(o));
        public static void DisposeMarshaler(IObjectReference value) => MarshalInspectable<object>.DisposeMarshaler(value);
        public static void DisposeMarshalerArray(MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.GridItemPatternIdentifiers>.MarshalerArray array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.GridItemPatternIdentifiers>.DisposeMarshalerArray(array);
        public static void DisposeAbi(IntPtr abi) => MarshalInspectable<object>.DisposeAbi(abi);
        public static unsafe void DisposeAbiArray(object box) => MarshalInspectable<object>.DisposeAbiArray(box);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    internal sealed class GridItemPatternIdentifiersRcwFactoryAttribute : global::WinRT.WinRTImplementationTypeRcwFactoryAttribute
    {
        public override object CreateInstance(global::WinRT.IInspectable inspectable)
            => new global::Microsoft.UI.Xaml.Automation.GridItemPatternIdentifiers(inspectable.ObjRef);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    public struct GridPatternIdentifiers
    {

        public static IObjectReference CreateMarshaler(global::Microsoft.UI.Xaml.Automation.GridPatternIdentifiers obj) => obj is null ? null : MarshalInspectable<global::Microsoft.UI.Xaml.Automation.GridPatternIdentifiers>.CreateMarshaler<IUnknownVftbl>(obj, global::ABI.Microsoft.UI.Xaml.Automation.IGridPatternIdentifiersMethods.IID);
        public static ObjectReferenceValue CreateMarshaler2(global::Microsoft.UI.Xaml.Automation.GridPatternIdentifiers obj) => MarshalInspectable<object>.CreateMarshaler2(obj, global::ABI.Microsoft.UI.Xaml.Automation.IGridPatternIdentifiersMethods.IID);
        public static IntPtr GetAbi(IObjectReference value) => value is null ? IntPtr.Zero : MarshalInterfaceHelper<object>.GetAbi(value);
        public static global::Microsoft.UI.Xaml.Automation.GridPatternIdentifiers FromAbi(IntPtr thisPtr) => global::Microsoft.UI.Xaml.Automation.GridPatternIdentifiers.FromAbi(thisPtr);
        public static IntPtr FromManaged(global::Microsoft.UI.Xaml.Automation.GridPatternIdentifiers obj) => obj is null ? IntPtr.Zero : CreateMarshaler2(obj).Detach();
        public static unsafe MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.GridPatternIdentifiers>.MarshalerArray CreateMarshalerArray(global::Microsoft.UI.Xaml.Automation.GridPatternIdentifiers[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.GridPatternIdentifiers>.CreateMarshalerArray2(array, (o) => CreateMarshaler2(o));
        public static (int length, IntPtr data) GetAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.GridPatternIdentifiers>.GetAbiArray(box);
        public static unsafe global::Microsoft.UI.Xaml.Automation.GridPatternIdentifiers[] FromAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.GridPatternIdentifiers>.FromAbiArray(box, FromAbi);
        public static void CopyAbiArray(global::Microsoft.UI.Xaml.Automation.GridPatternIdentifiers[] array, object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.GridPatternIdentifiers>.CopyAbiArray(array, box, FromAbi);
        public static (int length, IntPtr data) FromManagedArray(global::Microsoft.UI.Xaml.Automation.GridPatternIdentifiers[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.GridPatternIdentifiers>.FromManagedArray(array, (o) => FromManaged(o));
        public static void DisposeMarshaler(IObjectReference value) => MarshalInspectable<object>.DisposeMarshaler(value);
        public static void DisposeMarshalerArray(MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.GridPatternIdentifiers>.MarshalerArray array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.GridPatternIdentifiers>.DisposeMarshalerArray(array);
        public static void DisposeAbi(IntPtr abi) => MarshalInspectable<object>.DisposeAbi(abi);
        public static unsafe void DisposeAbiArray(object box) => MarshalInspectable<object>.DisposeAbiArray(box);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    internal sealed class GridPatternIdentifiersRcwFactoryAttribute : global::WinRT.WinRTImplementationTypeRcwFactoryAttribute
    {
        public override object CreateInstance(global::WinRT.IInspectable inspectable)
            => new global::Microsoft.UI.Xaml.Automation.GridPatternIdentifiers(inspectable.ObjRef);
    }
    internal static class IAnnotationPatternIdentifiersMethods
    {



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0x15, 0x69, 0xD7, 0x92, 0xD3, 0xC, 0xCD, 0x59, 0x8A, 0xE0, 0xC9, 0x0, 0x46, 0x28, 0xBA, 0x1E };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("92D76915-0CD3-59CD-8AE0-C9004628BA1E")]
    internal interface IAnnotationPatternIdentifiers : global::Microsoft.UI.Xaml.Automation.IAnnotationPatternIdentifiers
    {
    }
    internal static class IAnnotationPatternIdentifiersStaticsMethods
    {

        internal static unsafe global::Microsoft.UI.Xaml.Automation.AutomationProperty get_AnnotationTypeIdProperty(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[6](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Xaml.Automation.AutomationProperty.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.UI.Xaml.Automation.AutomationProperty.DisposeAbi(__retval);
            }
        }

        internal static unsafe global::Microsoft.UI.Xaml.Automation.AutomationProperty get_AnnotationTypeNameProperty(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[7](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Xaml.Automation.AutomationProperty.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.UI.Xaml.Automation.AutomationProperty.DisposeAbi(__retval);
            }
        }

        internal static unsafe global::Microsoft.UI.Xaml.Automation.AutomationProperty get_AuthorProperty(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[8](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Xaml.Automation.AutomationProperty.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.UI.Xaml.Automation.AutomationProperty.DisposeAbi(__retval);
            }
        }

        internal static unsafe global::Microsoft.UI.Xaml.Automation.AutomationProperty get_DateTimeProperty(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[9](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Xaml.Automation.AutomationProperty.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.UI.Xaml.Automation.AutomationProperty.DisposeAbi(__retval);
            }
        }

        internal static unsafe global::Microsoft.UI.Xaml.Automation.AutomationProperty get_TargetProperty(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[10](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Xaml.Automation.AutomationProperty.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.UI.Xaml.Automation.AutomationProperty.DisposeAbi(__retval);
            }
        }



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0xE2, 0x36, 0xA1, 0x20, 0x47, 0x4A, 0xE5, 0x5D, 0x9E, 0x1E, 0xEC, 0xFC, 0x6D, 0x92, 0xF5, 0x2A };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("20A136E2-4A47-5DE5-9E1E-ECFC6D92F52A")]
    internal interface IAnnotationPatternIdentifiersStatics : global::Microsoft.UI.Xaml.Automation.IAnnotationPatternIdentifiersStatics
    {
    }
    internal static class IAutomationAnnotationMethods
    {

        internal static unsafe global::Microsoft.UI.Xaml.UIElement get_Element(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[8](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Xaml.UIElement.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.UI.Xaml.UIElement.DisposeAbi(__retval);
            }
        }
        internal static unsafe void set_Element(IObjectReference _obj, global::Microsoft.UI.Xaml.UIElement value)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __value = default;
            try
            {
                __value = global::ABI.Microsoft.UI.Xaml.UIElement.CreateMarshaler2(value);
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, int>**)ThisPtr)[9](ThisPtr, MarshalInspectable<object>.GetAbi(__value)));
                global::System.GC.KeepAlive(_obj);
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__value);
            }
        }

        internal static unsafe global::Microsoft.UI.Xaml.Automation.AnnotationType get_Type(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::Microsoft.UI.Xaml.Automation.AnnotationType __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::Microsoft.UI.Xaml.Automation.AnnotationType*, int>**)ThisPtr)[6](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }
        internal static unsafe void set_Type(IObjectReference _obj, global::Microsoft.UI.Xaml.Automation.AnnotationType value)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::Microsoft.UI.Xaml.Automation.AnnotationType, int>**)ThisPtr)[7](ThisPtr, value));
            global::System.GC.KeepAlive(_obj);
        }



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0xAD, 0x46, 0xCC, 0xC2, 0x14, 0x14, 0x1B, 0x5F, 0x80, 0x8A, 0x89, 0xE5, 0xD5, 0x3D, 0x82, 0xFE };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("C2CC46AD-1414-5F1B-808A-89E5D53D82FE")]
    internal interface IAutomationAnnotation : global::Microsoft.UI.Xaml.Automation.IAutomationAnnotation
    {
    }
    internal static class IAutomationAnnotationFactoryMethods
    {


        internal static unsafe global::Microsoft.UI.Xaml.Automation.AutomationAnnotation CreateInstance(IObjectReference _obj, global::Microsoft.UI.Xaml.Automation.AnnotationType type)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::Microsoft.UI.Xaml.Automation.AnnotationType, IntPtr*, int>**)ThisPtr)[6](ThisPtr, type, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Xaml.Automation.AutomationAnnotation.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.UI.Xaml.Automation.AutomationAnnotation.DisposeAbi(__retval);
            }
        }

        internal static unsafe global::Microsoft.UI.Xaml.Automation.AutomationAnnotation CreateWithElementParameter(IObjectReference _obj, global::Microsoft.UI.Xaml.Automation.AnnotationType type, global::Microsoft.UI.Xaml.UIElement element)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __element = default;
            IntPtr __retval = default;
            try
            {
                __element = global::ABI.Microsoft.UI.Xaml.UIElement.CreateMarshaler2(element);
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::Microsoft.UI.Xaml.Automation.AnnotationType, IntPtr, IntPtr*, int>**)ThisPtr)[7](ThisPtr, type, MarshalInspectable<object>.GetAbi(__element), &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Xaml.Automation.AutomationAnnotation.FromAbi(__retval);
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__element);
                global::ABI.Microsoft.UI.Xaml.Automation.AutomationAnnotation.DisposeAbi(__retval);
            }
        }


        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0x73, 0x27, 0xF8, 0x95, 0xC5, 0xEA, 0x2E, 0x57, 0x87, 0xDE, 0x24, 0xD9, 0x51, 0x4B, 0x9A, 0x89 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("95F82773-EAC5-572E-87DE-24D9514B9A89")]
    internal interface IAutomationAnnotationFactory : global::Microsoft.UI.Xaml.Automation.IAutomationAnnotationFactory
    {
    }
    internal static class IAutomationAnnotationStaticsMethods
    {

        internal static unsafe global::Microsoft.UI.Xaml.DependencyProperty get_ElementProperty(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[7](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Xaml.DependencyProperty.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.UI.Xaml.DependencyProperty.DisposeAbi(__retval);
            }
        }

        internal static unsafe global::Microsoft.UI.Xaml.DependencyProperty get_TypeProperty(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[6](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Xaml.DependencyProperty.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.UI.Xaml.DependencyProperty.DisposeAbi(__retval);
            }
        }



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0x1E, 0xDC, 0xAB, 0xC5, 0x26, 0xFC, 0x44, 0x54, 0xA8, 0xB3, 0x59, 0xB2, 0xC0, 0xA9, 0x55, 0x78 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("C5ABDC1E-FC26-5444-A8B3-59B2C0A95578")]
    internal interface IAutomationAnnotationStatics : global::Microsoft.UI.Xaml.Automation.IAutomationAnnotationStatics
    {
    }
    internal static class IAutomationElementIdentifiersMethods
    {



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0x33, 0x1A, 0xB5, 0x2F, 0xCF, 0xB0, 0x4C, 0x5A, 0x9E, 0xD3, 0x26, 0x7E, 0xCA, 0x7A, 0xEE, 0xFC };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("2FB51A33-B0CF-5A4C-9ED3-267ECA7AEEFC")]
    internal interface IAutomationElementIdentifiers : global::Microsoft.UI.Xaml.Automation.IAutomationElementIdentifiers
    {
    }
    internal static class IAutomationElementIdentifiersStaticsMethods
    {

        internal static unsafe global::Microsoft.UI.Xaml.Automation.AutomationProperty get_AcceleratorKeyProperty(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[6](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Xaml.Automation.AutomationProperty.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.UI.Xaml.Automation.AutomationProperty.DisposeAbi(__retval);
            }
        }

        internal static unsafe global::Microsoft.UI.Xaml.Automation.AutomationProperty get_AccessKeyProperty(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[7](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Xaml.Automation.AutomationProperty.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.UI.Xaml.Automation.AutomationProperty.DisposeAbi(__retval);
            }
        }

        internal static unsafe global::Microsoft.UI.Xaml.Automation.AutomationProperty get_AnnotationsProperty(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[33](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Xaml.Automation.AutomationProperty.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.UI.Xaml.Automation.AutomationProperty.DisposeAbi(__retval);
            }
        }

        internal static unsafe global::Microsoft.UI.Xaml.Automation.AutomationProperty get_AutomationIdProperty(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[8](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Xaml.Automation.AutomationProperty.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.UI.Xaml.Automation.AutomationProperty.DisposeAbi(__retval);
            }
        }

        internal static unsafe global::Microsoft.UI.Xaml.Automation.AutomationProperty get_BoundingRectangleProperty(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[9](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Xaml.Automation.AutomationProperty.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.UI.Xaml.Automation.AutomationProperty.DisposeAbi(__retval);
            }
        }

        internal static unsafe global::Microsoft.UI.Xaml.Automation.AutomationProperty get_ClassNameProperty(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[10](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Xaml.Automation.AutomationProperty.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.UI.Xaml.Automation.AutomationProperty.DisposeAbi(__retval);
            }
        }

        internal static unsafe global::Microsoft.UI.Xaml.Automation.AutomationProperty get_ClickablePointProperty(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[11](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Xaml.Automation.AutomationProperty.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.UI.Xaml.Automation.AutomationProperty.DisposeAbi(__retval);
            }
        }

        internal static unsafe global::Microsoft.UI.Xaml.Automation.AutomationProperty get_ControlTypeProperty(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[12](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Xaml.Automation.AutomationProperty.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.UI.Xaml.Automation.AutomationProperty.DisposeAbi(__retval);
            }
        }

        internal static unsafe global::Microsoft.UI.Xaml.Automation.AutomationProperty get_ControlledPeersProperty(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[29](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Xaml.Automation.AutomationProperty.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.UI.Xaml.Automation.AutomationProperty.DisposeAbi(__retval);
            }
        }

        internal static unsafe global::Microsoft.UI.Xaml.Automation.AutomationProperty get_CultureProperty(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[42](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Xaml.Automation.AutomationProperty.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.UI.Xaml.Automation.AutomationProperty.DisposeAbi(__retval);
            }
        }

        internal static unsafe global::Microsoft.UI.Xaml.Automation.AutomationProperty get_DescribedByProperty(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[39](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Xaml.Automation.AutomationProperty.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.UI.Xaml.Automation.AutomationProperty.DisposeAbi(__retval);
            }
        }

        internal static unsafe global::Microsoft.UI.Xaml.Automation.AutomationProperty get_FlowsFromProperty(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[41](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Xaml.Automation.AutomationProperty.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.UI.Xaml.Automation.AutomationProperty.DisposeAbi(__retval);
            }
        }

        internal static unsafe global::Microsoft.UI.Xaml.Automation.AutomationProperty get_FlowsToProperty(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[40](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Xaml.Automation.AutomationProperty.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.UI.Xaml.Automation.AutomationProperty.DisposeAbi(__retval);
            }
        }

        internal static unsafe global::Microsoft.UI.Xaml.Automation.AutomationProperty get_FullDescriptionProperty(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[38](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Xaml.Automation.AutomationProperty.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.UI.Xaml.Automation.AutomationProperty.DisposeAbi(__retval);
            }
        }

        internal static unsafe global::Microsoft.UI.Xaml.Automation.AutomationProperty get_HasKeyboardFocusProperty(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[13](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Xaml.Automation.AutomationProperty.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.UI.Xaml.Automation.AutomationProperty.DisposeAbi(__retval);
            }
        }

        internal static unsafe global::Microsoft.UI.Xaml.Automation.AutomationProperty get_HeadingLevelProperty(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[43](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Xaml.Automation.AutomationProperty.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.UI.Xaml.Automation.AutomationProperty.DisposeAbi(__retval);
            }
        }

        internal static unsafe global::Microsoft.UI.Xaml.Automation.AutomationProperty get_HelpTextProperty(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[14](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Xaml.Automation.AutomationProperty.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.UI.Xaml.Automation.AutomationProperty.DisposeAbi(__retval);
            }
        }

        internal static unsafe global::Microsoft.UI.Xaml.Automation.AutomationProperty get_IsContentElementProperty(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[15](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Xaml.Automation.AutomationProperty.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.UI.Xaml.Automation.AutomationProperty.DisposeAbi(__retval);
            }
        }

        internal static unsafe global::Microsoft.UI.Xaml.Automation.AutomationProperty get_IsControlElementProperty(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[16](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Xaml.Automation.AutomationProperty.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.UI.Xaml.Automation.AutomationProperty.DisposeAbi(__retval);
            }
        }

        internal static unsafe global::Microsoft.UI.Xaml.Automation.AutomationProperty get_IsDataValidForFormProperty(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[37](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Xaml.Automation.AutomationProperty.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.UI.Xaml.Automation.AutomationProperty.DisposeAbi(__retval);
            }
        }

        internal static unsafe global::Microsoft.UI.Xaml.Automation.AutomationProperty get_IsDialogProperty(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[44](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Xaml.Automation.AutomationProperty.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.UI.Xaml.Automation.AutomationProperty.DisposeAbi(__retval);
            }
        }

        internal static unsafe global::Microsoft.UI.Xaml.Automation.AutomationProperty get_IsEnabledProperty(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[17](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Xaml.Automation.AutomationProperty.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.UI.Xaml.Automation.AutomationProperty.DisposeAbi(__retval);
            }
        }

        internal static unsafe global::Microsoft.UI.Xaml.Automation.AutomationProperty get_IsKeyboardFocusableProperty(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[18](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Xaml.Automation.AutomationProperty.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.UI.Xaml.Automation.AutomationProperty.DisposeAbi(__retval);
            }
        }

        internal static unsafe global::Microsoft.UI.Xaml.Automation.AutomationProperty get_IsOffscreenProperty(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[19](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Xaml.Automation.AutomationProperty.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.UI.Xaml.Automation.AutomationProperty.DisposeAbi(__retval);
            }
        }

        internal static unsafe global::Microsoft.UI.Xaml.Automation.AutomationProperty get_IsPasswordProperty(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[20](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Xaml.Automation.AutomationProperty.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.UI.Xaml.Automation.AutomationProperty.DisposeAbi(__retval);
            }
        }

        internal static unsafe global::Microsoft.UI.Xaml.Automation.AutomationProperty get_IsPeripheralProperty(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[36](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Xaml.Automation.AutomationProperty.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.UI.Xaml.Automation.AutomationProperty.DisposeAbi(__retval);
            }
        }

        internal static unsafe global::Microsoft.UI.Xaml.Automation.AutomationProperty get_IsRequiredForFormProperty(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[21](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Xaml.Automation.AutomationProperty.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.UI.Xaml.Automation.AutomationProperty.DisposeAbi(__retval);
            }
        }

        internal static unsafe global::Microsoft.UI.Xaml.Automation.AutomationProperty get_ItemStatusProperty(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[22](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Xaml.Automation.AutomationProperty.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.UI.Xaml.Automation.AutomationProperty.DisposeAbi(__retval);
            }
        }

        internal static unsafe global::Microsoft.UI.Xaml.Automation.AutomationProperty get_ItemTypeProperty(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[23](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Xaml.Automation.AutomationProperty.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.UI.Xaml.Automation.AutomationProperty.DisposeAbi(__retval);
            }
        }

        internal static unsafe global::Microsoft.UI.Xaml.Automation.AutomationProperty get_LabeledByProperty(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[24](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Xaml.Automation.AutomationProperty.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.UI.Xaml.Automation.AutomationProperty.DisposeAbi(__retval);
            }
        }

        internal static unsafe global::Microsoft.UI.Xaml.Automation.AutomationProperty get_LandmarkTypeProperty(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[34](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Xaml.Automation.AutomationProperty.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.UI.Xaml.Automation.AutomationProperty.DisposeAbi(__retval);
            }
        }

        internal static unsafe global::Microsoft.UI.Xaml.Automation.AutomationProperty get_LevelProperty(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[32](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Xaml.Automation.AutomationProperty.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.UI.Xaml.Automation.AutomationProperty.DisposeAbi(__retval);
            }
        }

        internal static unsafe global::Microsoft.UI.Xaml.Automation.AutomationProperty get_LiveSettingProperty(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[28](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Xaml.Automation.AutomationProperty.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.UI.Xaml.Automation.AutomationProperty.DisposeAbi(__retval);
            }
        }

        internal static unsafe global::Microsoft.UI.Xaml.Automation.AutomationProperty get_LocalizedControlTypeProperty(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[25](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Xaml.Automation.AutomationProperty.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.UI.Xaml.Automation.AutomationProperty.DisposeAbi(__retval);
            }
        }

        internal static unsafe global::Microsoft.UI.Xaml.Automation.AutomationProperty get_LocalizedLandmarkTypeProperty(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[35](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Xaml.Automation.AutomationProperty.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.UI.Xaml.Automation.AutomationProperty.DisposeAbi(__retval);
            }
        }

        internal static unsafe global::Microsoft.UI.Xaml.Automation.AutomationProperty get_NameProperty(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[26](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Xaml.Automation.AutomationProperty.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.UI.Xaml.Automation.AutomationProperty.DisposeAbi(__retval);
            }
        }

        internal static unsafe global::Microsoft.UI.Xaml.Automation.AutomationProperty get_OrientationProperty(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[27](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Xaml.Automation.AutomationProperty.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.UI.Xaml.Automation.AutomationProperty.DisposeAbi(__retval);
            }
        }

        internal static unsafe global::Microsoft.UI.Xaml.Automation.AutomationProperty get_PositionInSetProperty(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[30](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Xaml.Automation.AutomationProperty.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.UI.Xaml.Automation.AutomationProperty.DisposeAbi(__retval);
            }
        }

        internal static unsafe global::Microsoft.UI.Xaml.Automation.AutomationProperty get_SizeOfSetProperty(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[31](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Xaml.Automation.AutomationProperty.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.UI.Xaml.Automation.AutomationProperty.DisposeAbi(__retval);
            }
        }



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0x8C, 0x6B, 0xAF, 0x72, 0x12, 0x3E, 0x7A, 0x5E, 0xA2, 0xEC, 0x26, 0xDC, 0x19, 0x3F, 0x9D, 0xF9 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("72AF6B8C-3E12-5E7A-A2EC-26DC193F9DF9")]
    internal interface IAutomationElementIdentifiersStatics : global::Microsoft.UI.Xaml.Automation.IAutomationElementIdentifiersStatics
    {
    }
    internal static class IAutomationPropertiesMethods
    {



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0x71, 0x6A, 0x5C, 0x52, 0x8A, 0xDD, 0xA0, 0x52, 0x97, 0x7B, 0xDB, 0x1B, 0x2, 0xF8, 0xE8, 0x96 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("525C6A71-DD8A-52A0-977B-DB1B02F8E896")]
    internal interface IAutomationProperties : global::Microsoft.UI.Xaml.Automation.IAutomationProperties
    {
    }
    internal static class IAutomationPropertiesStaticsMethods
    {


        internal static unsafe string GetAcceleratorKey(IObjectReference _obj, global::Microsoft.UI.Xaml.DependencyObject element)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __element = default;
            IntPtr __retval = default;
            try
            {
                __element = global::ABI.Microsoft.UI.Xaml.DependencyObject.CreateMarshaler2(element);
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, IntPtr*, int>**)ThisPtr)[7](ThisPtr, MarshalInspectable<object>.GetAbi(__element), &__retval));
                global::System.GC.KeepAlive(_obj);
                return MarshalString.FromAbi(__retval);
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__element);
                MarshalString.DisposeAbi(__retval);
            }
        }

        internal static unsafe void SetAcceleratorKey(IObjectReference _obj, global::Microsoft.UI.Xaml.DependencyObject element, string value)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __element = default;
            try
            {
                __element = global::ABI.Microsoft.UI.Xaml.DependencyObject.CreateMarshaler2(element);
                MarshalString.Pinnable __value = new(value);
                fixed(void* ___value = __value)
                {
                    global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, IntPtr, int>**)ThisPtr)[8](ThisPtr, MarshalInspectable<object>.GetAbi(__element), MarshalString.GetAbi(ref __value)));
                    global::System.GC.KeepAlive(_obj);
                }
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__element);
            }
        }

        internal static unsafe string GetAccessKey(IObjectReference _obj, global::Microsoft.UI.Xaml.DependencyObject element)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __element = default;
            IntPtr __retval = default;
            try
            {
                __element = global::ABI.Microsoft.UI.Xaml.DependencyObject.CreateMarshaler2(element);
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, IntPtr*, int>**)ThisPtr)[10](ThisPtr, MarshalInspectable<object>.GetAbi(__element), &__retval));
                global::System.GC.KeepAlive(_obj);
                return MarshalString.FromAbi(__retval);
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__element);
                MarshalString.DisposeAbi(__retval);
            }
        }

        internal static unsafe void SetAccessKey(IObjectReference _obj, global::Microsoft.UI.Xaml.DependencyObject element, string value)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __element = default;
            try
            {
                __element = global::ABI.Microsoft.UI.Xaml.DependencyObject.CreateMarshaler2(element);
                MarshalString.Pinnable __value = new(value);
                fixed(void* ___value = __value)
                {
                    global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, IntPtr, int>**)ThisPtr)[11](ThisPtr, MarshalInspectable<object>.GetAbi(__element), MarshalString.GetAbi(ref __value)));
                    global::System.GC.KeepAlive(_obj);
                }
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__element);
            }
        }

        internal static unsafe string GetAutomationId(IObjectReference _obj, global::Microsoft.UI.Xaml.DependencyObject element)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __element = default;
            IntPtr __retval = default;
            try
            {
                __element = global::ABI.Microsoft.UI.Xaml.DependencyObject.CreateMarshaler2(element);
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, IntPtr*, int>**)ThisPtr)[13](ThisPtr, MarshalInspectable<object>.GetAbi(__element), &__retval));
                global::System.GC.KeepAlive(_obj);
                return MarshalString.FromAbi(__retval);
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__element);
                MarshalString.DisposeAbi(__retval);
            }
        }

        internal static unsafe void SetAutomationId(IObjectReference _obj, global::Microsoft.UI.Xaml.DependencyObject element, string value)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __element = default;
            try
            {
                __element = global::ABI.Microsoft.UI.Xaml.DependencyObject.CreateMarshaler2(element);
                MarshalString.Pinnable __value = new(value);
                fixed(void* ___value = __value)
                {
                    global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, IntPtr, int>**)ThisPtr)[14](ThisPtr, MarshalInspectable<object>.GetAbi(__element), MarshalString.GetAbi(ref __value)));
                    global::System.GC.KeepAlive(_obj);
                }
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__element);
            }
        }

        internal static unsafe string GetHelpText(IObjectReference _obj, global::Microsoft.UI.Xaml.DependencyObject element)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __element = default;
            IntPtr __retval = default;
            try
            {
                __element = global::ABI.Microsoft.UI.Xaml.DependencyObject.CreateMarshaler2(element);
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, IntPtr*, int>**)ThisPtr)[16](ThisPtr, MarshalInspectable<object>.GetAbi(__element), &__retval));
                global::System.GC.KeepAlive(_obj);
                return MarshalString.FromAbi(__retval);
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__element);
                MarshalString.DisposeAbi(__retval);
            }
        }

        internal static unsafe void SetHelpText(IObjectReference _obj, global::Microsoft.UI.Xaml.DependencyObject element, string value)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __element = default;
            try
            {
                __element = global::ABI.Microsoft.UI.Xaml.DependencyObject.CreateMarshaler2(element);
                MarshalString.Pinnable __value = new(value);
                fixed(void* ___value = __value)
                {
                    global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, IntPtr, int>**)ThisPtr)[17](ThisPtr, MarshalInspectable<object>.GetAbi(__element), MarshalString.GetAbi(ref __value)));
                    global::System.GC.KeepAlive(_obj);
                }
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__element);
            }
        }

        internal static unsafe bool GetIsRequiredForForm(IObjectReference _obj, global::Microsoft.UI.Xaml.DependencyObject element)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __element = default;
            byte __retval = default;
            try
            {
                __element = global::ABI.Microsoft.UI.Xaml.DependencyObject.CreateMarshaler2(element);
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, byte*, int>**)ThisPtr)[19](ThisPtr, MarshalInspectable<object>.GetAbi(__element), &__retval));
                global::System.GC.KeepAlive(_obj);
                return __retval != 0;
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__element);
            }
        }

        internal static unsafe void SetIsRequiredForForm(IObjectReference _obj, global::Microsoft.UI.Xaml.DependencyObject element, bool value)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __element = default;
            try
            {
                __element = global::ABI.Microsoft.UI.Xaml.DependencyObject.CreateMarshaler2(element);
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, byte, int>**)ThisPtr)[20](ThisPtr, MarshalInspectable<object>.GetAbi(__element), (byte)(value ? 1 : 0)));
                global::System.GC.KeepAlive(_obj);
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__element);
            }
        }

        internal static unsafe string GetItemStatus(IObjectReference _obj, global::Microsoft.UI.Xaml.DependencyObject element)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __element = default;
            IntPtr __retval = default;
            try
            {
                __element = global::ABI.Microsoft.UI.Xaml.DependencyObject.CreateMarshaler2(element);
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, IntPtr*, int>**)ThisPtr)[22](ThisPtr, MarshalInspectable<object>.GetAbi(__element), &__retval));
                global::System.GC.KeepAlive(_obj);
                return MarshalString.FromAbi(__retval);
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__element);
                MarshalString.DisposeAbi(__retval);
            }
        }

        internal static unsafe void SetItemStatus(IObjectReference _obj, global::Microsoft.UI.Xaml.DependencyObject element, string value)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __element = default;
            try
            {
                __element = global::ABI.Microsoft.UI.Xaml.DependencyObject.CreateMarshaler2(element);
                MarshalString.Pinnable __value = new(value);
                fixed(void* ___value = __value)
                {
                    global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, IntPtr, int>**)ThisPtr)[23](ThisPtr, MarshalInspectable<object>.GetAbi(__element), MarshalString.GetAbi(ref __value)));
                    global::System.GC.KeepAlive(_obj);
                }
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__element);
            }
        }

        internal static unsafe string GetItemType(IObjectReference _obj, global::Microsoft.UI.Xaml.DependencyObject element)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __element = default;
            IntPtr __retval = default;
            try
            {
                __element = global::ABI.Microsoft.UI.Xaml.DependencyObject.CreateMarshaler2(element);
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, IntPtr*, int>**)ThisPtr)[25](ThisPtr, MarshalInspectable<object>.GetAbi(__element), &__retval));
                global::System.GC.KeepAlive(_obj);
                return MarshalString.FromAbi(__retval);
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__element);
                MarshalString.DisposeAbi(__retval);
            }
        }

        internal static unsafe void SetItemType(IObjectReference _obj, global::Microsoft.UI.Xaml.DependencyObject element, string value)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __element = default;
            try
            {
                __element = global::ABI.Microsoft.UI.Xaml.DependencyObject.CreateMarshaler2(element);
                MarshalString.Pinnable __value = new(value);
                fixed(void* ___value = __value)
                {
                    global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, IntPtr, int>**)ThisPtr)[26](ThisPtr, MarshalInspectable<object>.GetAbi(__element), MarshalString.GetAbi(ref __value)));
                    global::System.GC.KeepAlive(_obj);
                }
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__element);
            }
        }

        internal static unsafe global::Microsoft.UI.Xaml.UIElement GetLabeledBy(IObjectReference _obj, global::Microsoft.UI.Xaml.DependencyObject element)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __element = default;
            IntPtr __retval = default;
            try
            {
                __element = global::ABI.Microsoft.UI.Xaml.DependencyObject.CreateMarshaler2(element);
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, IntPtr*, int>**)ThisPtr)[28](ThisPtr, MarshalInspectable<object>.GetAbi(__element), &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Xaml.UIElement.FromAbi(__retval);
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__element);
                global::ABI.Microsoft.UI.Xaml.UIElement.DisposeAbi(__retval);
            }
        }

        internal static unsafe void SetLabeledBy(IObjectReference _obj, global::Microsoft.UI.Xaml.DependencyObject element, global::Microsoft.UI.Xaml.UIElement value)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __element = default;
            ObjectReferenceValue __value = default;
            try
            {
                __element = global::ABI.Microsoft.UI.Xaml.DependencyObject.CreateMarshaler2(element);
                __value = global::ABI.Microsoft.UI.Xaml.UIElement.CreateMarshaler2(value);
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, IntPtr, int>**)ThisPtr)[29](ThisPtr, MarshalInspectable<object>.GetAbi(__element), MarshalInspectable<object>.GetAbi(__value)));
                global::System.GC.KeepAlive(_obj);
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__element);
                MarshalInspectable<object>.DisposeMarshaler(__value);
            }
        }

        internal static unsafe string GetName(IObjectReference _obj, global::Microsoft.UI.Xaml.DependencyObject element)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __element = default;
            IntPtr __retval = default;
            try
            {
                __element = global::ABI.Microsoft.UI.Xaml.DependencyObject.CreateMarshaler2(element);
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, IntPtr*, int>**)ThisPtr)[31](ThisPtr, MarshalInspectable<object>.GetAbi(__element), &__retval));
                global::System.GC.KeepAlive(_obj);
                return MarshalString.FromAbi(__retval);
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__element);
                MarshalString.DisposeAbi(__retval);
            }
        }

        internal static unsafe void SetName(IObjectReference _obj, global::Microsoft.UI.Xaml.DependencyObject element, string value)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __element = default;
            try
            {
                __element = global::ABI.Microsoft.UI.Xaml.DependencyObject.CreateMarshaler2(element);
                MarshalString.Pinnable __value = new(value);
                fixed(void* ___value = __value)
                {
                    global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, IntPtr, int>**)ThisPtr)[32](ThisPtr, MarshalInspectable<object>.GetAbi(__element), MarshalString.GetAbi(ref __value)));
                    global::System.GC.KeepAlive(_obj);
                }
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__element);
            }
        }

        internal static unsafe global::Microsoft.UI.Xaml.Automation.Peers.AutomationLiveSetting GetLiveSetting(IObjectReference _obj, global::Microsoft.UI.Xaml.DependencyObject element)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __element = default;
            global::Microsoft.UI.Xaml.Automation.Peers.AutomationLiveSetting __retval = default;
            try
            {
                __element = global::ABI.Microsoft.UI.Xaml.DependencyObject.CreateMarshaler2(element);
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, global::Microsoft.UI.Xaml.Automation.Peers.AutomationLiveSetting*, int>**)ThisPtr)[34](ThisPtr, MarshalInspectable<object>.GetAbi(__element), &__retval));
                global::System.GC.KeepAlive(_obj);
                return __retval;
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__element);
            }
        }

        internal static unsafe void SetLiveSetting(IObjectReference _obj, global::Microsoft.UI.Xaml.DependencyObject element, global::Microsoft.UI.Xaml.Automation.Peers.AutomationLiveSetting value)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __element = default;
            try
            {
                __element = global::ABI.Microsoft.UI.Xaml.DependencyObject.CreateMarshaler2(element);
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, global::Microsoft.UI.Xaml.Automation.Peers.AutomationLiveSetting, int>**)ThisPtr)[35](ThisPtr, MarshalInspectable<object>.GetAbi(__element), value));
                global::System.GC.KeepAlive(_obj);
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__element);
            }
        }

        internal static unsafe global::Microsoft.UI.Xaml.Automation.Peers.AccessibilityView GetAccessibilityView(IObjectReference _obj, global::Microsoft.UI.Xaml.DependencyObject element)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __element = default;
            global::Microsoft.UI.Xaml.Automation.Peers.AccessibilityView __retval = default;
            try
            {
                __element = global::ABI.Microsoft.UI.Xaml.DependencyObject.CreateMarshaler2(element);
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, global::Microsoft.UI.Xaml.Automation.Peers.AccessibilityView*, int>**)ThisPtr)[37](ThisPtr, MarshalInspectable<object>.GetAbi(__element), &__retval));
                global::System.GC.KeepAlive(_obj);
                return __retval;
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__element);
            }
        }

        internal static unsafe void SetAccessibilityView(IObjectReference _obj, global::Microsoft.UI.Xaml.DependencyObject element, global::Microsoft.UI.Xaml.Automation.Peers.AccessibilityView value)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __element = default;
            try
            {
                __element = global::ABI.Microsoft.UI.Xaml.DependencyObject.CreateMarshaler2(element);
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, global::Microsoft.UI.Xaml.Automation.Peers.AccessibilityView, int>**)ThisPtr)[38](ThisPtr, MarshalInspectable<object>.GetAbi(__element), value));
                global::System.GC.KeepAlive(_obj);
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__element);
            }
        }

        internal static unsafe global::System.Collections.Generic.IList<global::Microsoft.UI.Xaml.UIElement> GetControlledPeers(IObjectReference _obj, global::Microsoft.UI.Xaml.DependencyObject element)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __element = default;
            IntPtr __retval = default;
            try
            {
                __element = global::ABI.Microsoft.UI.Xaml.DependencyObject.CreateMarshaler2(element);
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, IntPtr*, int>**)ThisPtr)[40](ThisPtr, MarshalInspectable<object>.GetAbi(__element), &__retval));
                global::System.GC.KeepAlive(_obj);
                _ = global::WinRT.GenericTypeInstantiations.Windows_Foundation_Collections_IVector_1_Microsoft_UI_Xaml_UIElement.EnsureInitialized();
                return MarshalInterface<global::System.Collections.Generic.IList<global::Microsoft.UI.Xaml.UIElement>>.FromAbi(__retval);
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__element);
                MarshalInterface<global::System.Collections.Generic.IList<global::Microsoft.UI.Xaml.UIElement>>.DisposeAbi(__retval);
            }
        }

        internal static unsafe int GetPositionInSet(IObjectReference _obj, global::Microsoft.UI.Xaml.DependencyObject element)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __element = default;
            int __retval = default;
            try
            {
                __element = global::ABI.Microsoft.UI.Xaml.DependencyObject.CreateMarshaler2(element);
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, int*, int>**)ThisPtr)[42](ThisPtr, MarshalInspectable<object>.GetAbi(__element), &__retval));
                global::System.GC.KeepAlive(_obj);
                return __retval;
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__element);
            }
        }

        internal static unsafe void SetPositionInSet(IObjectReference _obj, global::Microsoft.UI.Xaml.DependencyObject element, int value)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __element = default;
            try
            {
                __element = global::ABI.Microsoft.UI.Xaml.DependencyObject.CreateMarshaler2(element);
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, int, int>**)ThisPtr)[43](ThisPtr, MarshalInspectable<object>.GetAbi(__element), value));
                global::System.GC.KeepAlive(_obj);
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__element);
            }
        }

        internal static unsafe int GetSizeOfSet(IObjectReference _obj, global::Microsoft.UI.Xaml.DependencyObject element)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __element = default;
            int __retval = default;
            try
            {
                __element = global::ABI.Microsoft.UI.Xaml.DependencyObject.CreateMarshaler2(element);
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, int*, int>**)ThisPtr)[45](ThisPtr, MarshalInspectable<object>.GetAbi(__element), &__retval));
                global::System.GC.KeepAlive(_obj);
                return __retval;
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__element);
            }
        }

        internal static unsafe void SetSizeOfSet(IObjectReference _obj, global::Microsoft.UI.Xaml.DependencyObject element, int value)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __element = default;
            try
            {
                __element = global::ABI.Microsoft.UI.Xaml.DependencyObject.CreateMarshaler2(element);
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, int, int>**)ThisPtr)[46](ThisPtr, MarshalInspectable<object>.GetAbi(__element), value));
                global::System.GC.KeepAlive(_obj);
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__element);
            }
        }

        internal static unsafe int GetLevel(IObjectReference _obj, global::Microsoft.UI.Xaml.DependencyObject element)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __element = default;
            int __retval = default;
            try
            {
                __element = global::ABI.Microsoft.UI.Xaml.DependencyObject.CreateMarshaler2(element);
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, int*, int>**)ThisPtr)[48](ThisPtr, MarshalInspectable<object>.GetAbi(__element), &__retval));
                global::System.GC.KeepAlive(_obj);
                return __retval;
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__element);
            }
        }

        internal static unsafe void SetLevel(IObjectReference _obj, global::Microsoft.UI.Xaml.DependencyObject element, int value)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __element = default;
            try
            {
                __element = global::ABI.Microsoft.UI.Xaml.DependencyObject.CreateMarshaler2(element);
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, int, int>**)ThisPtr)[49](ThisPtr, MarshalInspectable<object>.GetAbi(__element), value));
                global::System.GC.KeepAlive(_obj);
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__element);
            }
        }

        internal static unsafe global::System.Collections.Generic.IList<global::Microsoft.UI.Xaml.Automation.AutomationAnnotation> GetAnnotations(IObjectReference _obj, global::Microsoft.UI.Xaml.DependencyObject element)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __element = default;
            IntPtr __retval = default;
            try
            {
                __element = global::ABI.Microsoft.UI.Xaml.DependencyObject.CreateMarshaler2(element);
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, IntPtr*, int>**)ThisPtr)[51](ThisPtr, MarshalInspectable<object>.GetAbi(__element), &__retval));
                global::System.GC.KeepAlive(_obj);
                _ = global::WinRT.GenericTypeInstantiations.Windows_Foundation_Collections_IVector_1_Microsoft_UI_Xaml_Automation_AutomationAnnotation.EnsureInitialized();
                return MarshalInterface<global::System.Collections.Generic.IList<global::Microsoft.UI.Xaml.Automation.AutomationAnnotation>>.FromAbi(__retval);
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__element);
                MarshalInterface<global::System.Collections.Generic.IList<global::Microsoft.UI.Xaml.Automation.AutomationAnnotation>>.DisposeAbi(__retval);
            }
        }

        internal static unsafe global::Microsoft.UI.Xaml.Automation.Peers.AutomationLandmarkType GetLandmarkType(IObjectReference _obj, global::Microsoft.UI.Xaml.DependencyObject element)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __element = default;
            global::Microsoft.UI.Xaml.Automation.Peers.AutomationLandmarkType __retval = default;
            try
            {
                __element = global::ABI.Microsoft.UI.Xaml.DependencyObject.CreateMarshaler2(element);
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, global::Microsoft.UI.Xaml.Automation.Peers.AutomationLandmarkType*, int>**)ThisPtr)[53](ThisPtr, MarshalInspectable<object>.GetAbi(__element), &__retval));
                global::System.GC.KeepAlive(_obj);
                return __retval;
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__element);
            }
        }

        internal static unsafe void SetLandmarkType(IObjectReference _obj, global::Microsoft.UI.Xaml.DependencyObject element, global::Microsoft.UI.Xaml.Automation.Peers.AutomationLandmarkType value)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __element = default;
            try
            {
                __element = global::ABI.Microsoft.UI.Xaml.DependencyObject.CreateMarshaler2(element);
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, global::Microsoft.UI.Xaml.Automation.Peers.AutomationLandmarkType, int>**)ThisPtr)[54](ThisPtr, MarshalInspectable<object>.GetAbi(__element), value));
                global::System.GC.KeepAlive(_obj);
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__element);
            }
        }

        internal static unsafe string GetLocalizedLandmarkType(IObjectReference _obj, global::Microsoft.UI.Xaml.DependencyObject element)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __element = default;
            IntPtr __retval = default;
            try
            {
                __element = global::ABI.Microsoft.UI.Xaml.DependencyObject.CreateMarshaler2(element);
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, IntPtr*, int>**)ThisPtr)[56](ThisPtr, MarshalInspectable<object>.GetAbi(__element), &__retval));
                global::System.GC.KeepAlive(_obj);
                return MarshalString.FromAbi(__retval);
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__element);
                MarshalString.DisposeAbi(__retval);
            }
        }

        internal static unsafe void SetLocalizedLandmarkType(IObjectReference _obj, global::Microsoft.UI.Xaml.DependencyObject element, string value)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __element = default;
            try
            {
                __element = global::ABI.Microsoft.UI.Xaml.DependencyObject.CreateMarshaler2(element);
                MarshalString.Pinnable __value = new(value);
                fixed(void* ___value = __value)
                {
                    global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, IntPtr, int>**)ThisPtr)[57](ThisPtr, MarshalInspectable<object>.GetAbi(__element), MarshalString.GetAbi(ref __value)));
                    global::System.GC.KeepAlive(_obj);
                }
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__element);
            }
        }

        internal static unsafe bool GetIsPeripheral(IObjectReference _obj, global::Microsoft.UI.Xaml.DependencyObject element)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __element = default;
            byte __retval = default;
            try
            {
                __element = global::ABI.Microsoft.UI.Xaml.DependencyObject.CreateMarshaler2(element);
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, byte*, int>**)ThisPtr)[59](ThisPtr, MarshalInspectable<object>.GetAbi(__element), &__retval));
                global::System.GC.KeepAlive(_obj);
                return __retval != 0;
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__element);
            }
        }

        internal static unsafe void SetIsPeripheral(IObjectReference _obj, global::Microsoft.UI.Xaml.DependencyObject element, bool value)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __element = default;
            try
            {
                __element = global::ABI.Microsoft.UI.Xaml.DependencyObject.CreateMarshaler2(element);
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, byte, int>**)ThisPtr)[60](ThisPtr, MarshalInspectable<object>.GetAbi(__element), (byte)(value ? 1 : 0)));
                global::System.GC.KeepAlive(_obj);
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__element);
            }
        }

        internal static unsafe bool GetIsDataValidForForm(IObjectReference _obj, global::Microsoft.UI.Xaml.DependencyObject element)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __element = default;
            byte __retval = default;
            try
            {
                __element = global::ABI.Microsoft.UI.Xaml.DependencyObject.CreateMarshaler2(element);
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, byte*, int>**)ThisPtr)[62](ThisPtr, MarshalInspectable<object>.GetAbi(__element), &__retval));
                global::System.GC.KeepAlive(_obj);
                return __retval != 0;
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__element);
            }
        }

        internal static unsafe void SetIsDataValidForForm(IObjectReference _obj, global::Microsoft.UI.Xaml.DependencyObject element, bool value)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __element = default;
            try
            {
                __element = global::ABI.Microsoft.UI.Xaml.DependencyObject.CreateMarshaler2(element);
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, byte, int>**)ThisPtr)[63](ThisPtr, MarshalInspectable<object>.GetAbi(__element), (byte)(value ? 1 : 0)));
                global::System.GC.KeepAlive(_obj);
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__element);
            }
        }

        internal static unsafe string GetFullDescription(IObjectReference _obj, global::Microsoft.UI.Xaml.DependencyObject element)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __element = default;
            IntPtr __retval = default;
            try
            {
                __element = global::ABI.Microsoft.UI.Xaml.DependencyObject.CreateMarshaler2(element);
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, IntPtr*, int>**)ThisPtr)[65](ThisPtr, MarshalInspectable<object>.GetAbi(__element), &__retval));
                global::System.GC.KeepAlive(_obj);
                return MarshalString.FromAbi(__retval);
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__element);
                MarshalString.DisposeAbi(__retval);
            }
        }

        internal static unsafe void SetFullDescription(IObjectReference _obj, global::Microsoft.UI.Xaml.DependencyObject element, string value)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __element = default;
            try
            {
                __element = global::ABI.Microsoft.UI.Xaml.DependencyObject.CreateMarshaler2(element);
                MarshalString.Pinnable __value = new(value);
                fixed(void* ___value = __value)
                {
                    global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, IntPtr, int>**)ThisPtr)[66](ThisPtr, MarshalInspectable<object>.GetAbi(__element), MarshalString.GetAbi(ref __value)));
                    global::System.GC.KeepAlive(_obj);
                }
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__element);
            }
        }

        internal static unsafe string GetLocalizedControlType(IObjectReference _obj, global::Microsoft.UI.Xaml.DependencyObject element)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __element = default;
            IntPtr __retval = default;
            try
            {
                __element = global::ABI.Microsoft.UI.Xaml.DependencyObject.CreateMarshaler2(element);
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, IntPtr*, int>**)ThisPtr)[68](ThisPtr, MarshalInspectable<object>.GetAbi(__element), &__retval));
                global::System.GC.KeepAlive(_obj);
                return MarshalString.FromAbi(__retval);
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__element);
                MarshalString.DisposeAbi(__retval);
            }
        }

        internal static unsafe void SetLocalizedControlType(IObjectReference _obj, global::Microsoft.UI.Xaml.DependencyObject element, string value)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __element = default;
            try
            {
                __element = global::ABI.Microsoft.UI.Xaml.DependencyObject.CreateMarshaler2(element);
                MarshalString.Pinnable __value = new(value);
                fixed(void* ___value = __value)
                {
                    global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, IntPtr, int>**)ThisPtr)[69](ThisPtr, MarshalInspectable<object>.GetAbi(__element), MarshalString.GetAbi(ref __value)));
                    global::System.GC.KeepAlive(_obj);
                }
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__element);
            }
        }

        internal static unsafe global::System.Collections.Generic.IList<global::Microsoft.UI.Xaml.DependencyObject> GetDescribedBy(IObjectReference _obj, global::Microsoft.UI.Xaml.DependencyObject element)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __element = default;
            IntPtr __retval = default;
            try
            {
                __element = global::ABI.Microsoft.UI.Xaml.DependencyObject.CreateMarshaler2(element);
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, IntPtr*, int>**)ThisPtr)[71](ThisPtr, MarshalInspectable<object>.GetAbi(__element), &__retval));
                global::System.GC.KeepAlive(_obj);
                _ = global::WinRT.GenericTypeInstantiations.Windows_Foundation_Collections_IVector_1_Microsoft_UI_Xaml_DependencyObject.EnsureInitialized();
                return MarshalInterface<global::System.Collections.Generic.IList<global::Microsoft.UI.Xaml.DependencyObject>>.FromAbi(__retval);
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__element);
                MarshalInterface<global::System.Collections.Generic.IList<global::Microsoft.UI.Xaml.DependencyObject>>.DisposeAbi(__retval);
            }
        }

        internal static unsafe global::System.Collections.Generic.IList<global::Microsoft.UI.Xaml.DependencyObject> GetFlowsTo(IObjectReference _obj, global::Microsoft.UI.Xaml.DependencyObject element)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __element = default;
            IntPtr __retval = default;
            try
            {
                __element = global::ABI.Microsoft.UI.Xaml.DependencyObject.CreateMarshaler2(element);
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, IntPtr*, int>**)ThisPtr)[73](ThisPtr, MarshalInspectable<object>.GetAbi(__element), &__retval));
                global::System.GC.KeepAlive(_obj);
                _ = global::WinRT.GenericTypeInstantiations.Windows_Foundation_Collections_IVector_1_Microsoft_UI_Xaml_DependencyObject.EnsureInitialized();
                return MarshalInterface<global::System.Collections.Generic.IList<global::Microsoft.UI.Xaml.DependencyObject>>.FromAbi(__retval);
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__element);
                MarshalInterface<global::System.Collections.Generic.IList<global::Microsoft.UI.Xaml.DependencyObject>>.DisposeAbi(__retval);
            }
        }

        internal static unsafe global::System.Collections.Generic.IList<global::Microsoft.UI.Xaml.DependencyObject> GetFlowsFrom(IObjectReference _obj, global::Microsoft.UI.Xaml.DependencyObject element)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __element = default;
            IntPtr __retval = default;
            try
            {
                __element = global::ABI.Microsoft.UI.Xaml.DependencyObject.CreateMarshaler2(element);
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, IntPtr*, int>**)ThisPtr)[75](ThisPtr, MarshalInspectable<object>.GetAbi(__element), &__retval));
                global::System.GC.KeepAlive(_obj);
                _ = global::WinRT.GenericTypeInstantiations.Windows_Foundation_Collections_IVector_1_Microsoft_UI_Xaml_DependencyObject.EnsureInitialized();
                return MarshalInterface<global::System.Collections.Generic.IList<global::Microsoft.UI.Xaml.DependencyObject>>.FromAbi(__retval);
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__element);
                MarshalInterface<global::System.Collections.Generic.IList<global::Microsoft.UI.Xaml.DependencyObject>>.DisposeAbi(__retval);
            }
        }

        internal static unsafe int GetCulture(IObjectReference _obj, global::Microsoft.UI.Xaml.DependencyObject element)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __element = default;
            int __retval = default;
            try
            {
                __element = global::ABI.Microsoft.UI.Xaml.DependencyObject.CreateMarshaler2(element);
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, int*, int>**)ThisPtr)[77](ThisPtr, MarshalInspectable<object>.GetAbi(__element), &__retval));
                global::System.GC.KeepAlive(_obj);
                return __retval;
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__element);
            }
        }

        internal static unsafe void SetCulture(IObjectReference _obj, global::Microsoft.UI.Xaml.DependencyObject element, int value)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __element = default;
            try
            {
                __element = global::ABI.Microsoft.UI.Xaml.DependencyObject.CreateMarshaler2(element);
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, int, int>**)ThisPtr)[78](ThisPtr, MarshalInspectable<object>.GetAbi(__element), value));
                global::System.GC.KeepAlive(_obj);
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__element);
            }
        }

        internal static unsafe global::Microsoft.UI.Xaml.Automation.Peers.AutomationHeadingLevel GetHeadingLevel(IObjectReference _obj, global::Microsoft.UI.Xaml.DependencyObject element)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __element = default;
            global::Microsoft.UI.Xaml.Automation.Peers.AutomationHeadingLevel __retval = default;
            try
            {
                __element = global::ABI.Microsoft.UI.Xaml.DependencyObject.CreateMarshaler2(element);
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, global::Microsoft.UI.Xaml.Automation.Peers.AutomationHeadingLevel*, int>**)ThisPtr)[80](ThisPtr, MarshalInspectable<object>.GetAbi(__element), &__retval));
                global::System.GC.KeepAlive(_obj);
                return __retval;
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__element);
            }
        }

        internal static unsafe void SetHeadingLevel(IObjectReference _obj, global::Microsoft.UI.Xaml.DependencyObject element, global::Microsoft.UI.Xaml.Automation.Peers.AutomationHeadingLevel value)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __element = default;
            try
            {
                __element = global::ABI.Microsoft.UI.Xaml.DependencyObject.CreateMarshaler2(element);
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, global::Microsoft.UI.Xaml.Automation.Peers.AutomationHeadingLevel, int>**)ThisPtr)[81](ThisPtr, MarshalInspectable<object>.GetAbi(__element), value));
                global::System.GC.KeepAlive(_obj);
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__element);
            }
        }

        internal static unsafe bool GetIsDialog(IObjectReference _obj, global::Microsoft.UI.Xaml.DependencyObject element)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __element = default;
            byte __retval = default;
            try
            {
                __element = global::ABI.Microsoft.UI.Xaml.DependencyObject.CreateMarshaler2(element);
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, byte*, int>**)ThisPtr)[83](ThisPtr, MarshalInspectable<object>.GetAbi(__element), &__retval));
                global::System.GC.KeepAlive(_obj);
                return __retval != 0;
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__element);
            }
        }

        internal static unsafe void SetIsDialog(IObjectReference _obj, global::Microsoft.UI.Xaml.DependencyObject element, bool value)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __element = default;
            try
            {
                __element = global::ABI.Microsoft.UI.Xaml.DependencyObject.CreateMarshaler2(element);
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, byte, int>**)ThisPtr)[84](ThisPtr, MarshalInspectable<object>.GetAbi(__element), (byte)(value ? 1 : 0)));
                global::System.GC.KeepAlive(_obj);
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__element);
            }
        }
        internal static unsafe global::Microsoft.UI.Xaml.DependencyProperty get_AcceleratorKeyProperty(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[6](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Xaml.DependencyProperty.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.UI.Xaml.DependencyProperty.DisposeAbi(__retval);
            }
        }

        internal static unsafe global::Microsoft.UI.Xaml.DependencyProperty get_AccessKeyProperty(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[9](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Xaml.DependencyProperty.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.UI.Xaml.DependencyProperty.DisposeAbi(__retval);
            }
        }

        internal static unsafe global::Microsoft.UI.Xaml.DependencyProperty get_AccessibilityViewProperty(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[36](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Xaml.DependencyProperty.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.UI.Xaml.DependencyProperty.DisposeAbi(__retval);
            }
        }

        internal static unsafe global::Microsoft.UI.Xaml.DependencyProperty get_AnnotationsProperty(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[50](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Xaml.DependencyProperty.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.UI.Xaml.DependencyProperty.DisposeAbi(__retval);
            }
        }

        internal static unsafe global::Microsoft.UI.Xaml.DependencyProperty get_AutomationIdProperty(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[12](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Xaml.DependencyProperty.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.UI.Xaml.DependencyProperty.DisposeAbi(__retval);
            }
        }

        internal static unsafe global::Microsoft.UI.Xaml.DependencyProperty get_ControlledPeersProperty(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[39](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Xaml.DependencyProperty.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.UI.Xaml.DependencyProperty.DisposeAbi(__retval);
            }
        }

        internal static unsafe global::Microsoft.UI.Xaml.DependencyProperty get_CultureProperty(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[76](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Xaml.DependencyProperty.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.UI.Xaml.DependencyProperty.DisposeAbi(__retval);
            }
        }

        internal static unsafe global::Microsoft.UI.Xaml.DependencyProperty get_DescribedByProperty(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[70](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Xaml.DependencyProperty.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.UI.Xaml.DependencyProperty.DisposeAbi(__retval);
            }
        }

        internal static unsafe global::Microsoft.UI.Xaml.DependencyProperty get_FlowsFromProperty(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[74](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Xaml.DependencyProperty.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.UI.Xaml.DependencyProperty.DisposeAbi(__retval);
            }
        }

        internal static unsafe global::Microsoft.UI.Xaml.DependencyProperty get_FlowsToProperty(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[72](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Xaml.DependencyProperty.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.UI.Xaml.DependencyProperty.DisposeAbi(__retval);
            }
        }

        internal static unsafe global::Microsoft.UI.Xaml.DependencyProperty get_FullDescriptionProperty(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[64](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Xaml.DependencyProperty.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.UI.Xaml.DependencyProperty.DisposeAbi(__retval);
            }
        }

        internal static unsafe global::Microsoft.UI.Xaml.DependencyProperty get_HeadingLevelProperty(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[79](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Xaml.DependencyProperty.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.UI.Xaml.DependencyProperty.DisposeAbi(__retval);
            }
        }

        internal static unsafe global::Microsoft.UI.Xaml.DependencyProperty get_HelpTextProperty(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[15](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Xaml.DependencyProperty.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.UI.Xaml.DependencyProperty.DisposeAbi(__retval);
            }
        }

        internal static unsafe global::Microsoft.UI.Xaml.DependencyProperty get_IsDataValidForFormProperty(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[61](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Xaml.DependencyProperty.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.UI.Xaml.DependencyProperty.DisposeAbi(__retval);
            }
        }

        internal static unsafe global::Microsoft.UI.Xaml.DependencyProperty get_IsDialogProperty(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[82](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Xaml.DependencyProperty.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.UI.Xaml.DependencyProperty.DisposeAbi(__retval);
            }
        }

        internal static unsafe global::Microsoft.UI.Xaml.DependencyProperty get_IsPeripheralProperty(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[58](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Xaml.DependencyProperty.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.UI.Xaml.DependencyProperty.DisposeAbi(__retval);
            }
        }

        internal static unsafe global::Microsoft.UI.Xaml.DependencyProperty get_IsRequiredForFormProperty(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[18](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Xaml.DependencyProperty.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.UI.Xaml.DependencyProperty.DisposeAbi(__retval);
            }
        }

        internal static unsafe global::Microsoft.UI.Xaml.DependencyProperty get_ItemStatusProperty(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[21](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Xaml.DependencyProperty.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.UI.Xaml.DependencyProperty.DisposeAbi(__retval);
            }
        }

        internal static unsafe global::Microsoft.UI.Xaml.DependencyProperty get_ItemTypeProperty(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[24](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Xaml.DependencyProperty.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.UI.Xaml.DependencyProperty.DisposeAbi(__retval);
            }
        }

        internal static unsafe global::Microsoft.UI.Xaml.DependencyProperty get_LabeledByProperty(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[27](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Xaml.DependencyProperty.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.UI.Xaml.DependencyProperty.DisposeAbi(__retval);
            }
        }

        internal static unsafe global::Microsoft.UI.Xaml.DependencyProperty get_LandmarkTypeProperty(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[52](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Xaml.DependencyProperty.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.UI.Xaml.DependencyProperty.DisposeAbi(__retval);
            }
        }

        internal static unsafe global::Microsoft.UI.Xaml.DependencyProperty get_LevelProperty(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[47](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Xaml.DependencyProperty.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.UI.Xaml.DependencyProperty.DisposeAbi(__retval);
            }
        }

        internal static unsafe global::Microsoft.UI.Xaml.DependencyProperty get_LiveSettingProperty(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[33](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Xaml.DependencyProperty.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.UI.Xaml.DependencyProperty.DisposeAbi(__retval);
            }
        }

        internal static unsafe global::Microsoft.UI.Xaml.DependencyProperty get_LocalizedControlTypeProperty(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[67](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Xaml.DependencyProperty.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.UI.Xaml.DependencyProperty.DisposeAbi(__retval);
            }
        }

        internal static unsafe global::Microsoft.UI.Xaml.DependencyProperty get_LocalizedLandmarkTypeProperty(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[55](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Xaml.DependencyProperty.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.UI.Xaml.DependencyProperty.DisposeAbi(__retval);
            }
        }

        internal static unsafe global::Microsoft.UI.Xaml.DependencyProperty get_NameProperty(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[30](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Xaml.DependencyProperty.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.UI.Xaml.DependencyProperty.DisposeAbi(__retval);
            }
        }

        internal static unsafe global::Microsoft.UI.Xaml.DependencyProperty get_PositionInSetProperty(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[41](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Xaml.DependencyProperty.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.UI.Xaml.DependencyProperty.DisposeAbi(__retval);
            }
        }

        internal static unsafe global::Microsoft.UI.Xaml.DependencyProperty get_SizeOfSetProperty(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[44](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Xaml.DependencyProperty.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.UI.Xaml.DependencyProperty.DisposeAbi(__retval);
            }
        }



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0xF3, 0xE0, 0xE3, 0xB1, 0x2F, 0x11, 0x66, 0x59, 0x87, 0xDC, 0x78, 0x62, 0xD4, 0xAD, 0x50, 0xE5 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("B1E3E0F3-112F-5966-87DC-7862D4AD50E5")]
    internal interface IAutomationPropertiesStatics : global::Microsoft.UI.Xaml.Automation.IAutomationPropertiesStatics
    {
    }
    internal static class IAutomationPropertiesStatics2Methods
    {


        internal static unsafe global::Microsoft.UI.Xaml.Automation.Peers.AutomationControlType GetAutomationControlType(IObjectReference _obj, global::Microsoft.UI.Xaml.UIElement element)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __element = default;
            global::Microsoft.UI.Xaml.Automation.Peers.AutomationControlType __retval = default;
            try
            {
                __element = global::ABI.Microsoft.UI.Xaml.UIElement.CreateMarshaler2(element);
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, global::Microsoft.UI.Xaml.Automation.Peers.AutomationControlType*, int>**)ThisPtr)[7](ThisPtr, MarshalInspectable<object>.GetAbi(__element), &__retval));
                global::System.GC.KeepAlive(_obj);
                return __retval;
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__element);
            }
        }

        internal static unsafe void SetAutomationControlType(IObjectReference _obj, global::Microsoft.UI.Xaml.UIElement element, global::Microsoft.UI.Xaml.Automation.Peers.AutomationControlType value)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __element = default;
            try
            {
                __element = global::ABI.Microsoft.UI.Xaml.UIElement.CreateMarshaler2(element);
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, global::Microsoft.UI.Xaml.Automation.Peers.AutomationControlType, int>**)ThisPtr)[8](ThisPtr, MarshalInspectable<object>.GetAbi(__element), value));
                global::System.GC.KeepAlive(_obj);
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__element);
            }
        }
        internal static unsafe global::Microsoft.UI.Xaml.DependencyProperty get_AutomationControlTypeProperty(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[6](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Xaml.DependencyProperty.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.UI.Xaml.DependencyProperty.DisposeAbi(__retval);
            }
        }



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0xED, 0xA3, 0x33, 0xD9, 0xA, 0xE9, 0xF0, 0x5D, 0x85, 0x3D, 0xCA, 0xD1, 0x7A, 0xB, 0x9E, 0xC8 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("D933A3ED-E90A-5DF0-853D-CAD17A0B9EC8")]
    internal interface IAutomationPropertiesStatics2 : global::Microsoft.UI.Xaml.Automation.IAutomationPropertiesStatics2
    {
    }
    internal static class IAutomationPropertyMethods
    {



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0xC8, 0xB2, 0xA6, 0x5C, 0x86, 0xFF, 0x41, 0x5A, 0xAA, 0x18, 0x69, 0x48, 0xFA, 0xE5, 0x92, 0xCF };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("5CA6B2C8-FF86-5A41-AA18-6948FAE592CF")]
    internal interface IAutomationProperty : global::Microsoft.UI.Xaml.Automation.IAutomationProperty
    {
    }
    internal static class IDockPatternIdentifiersMethods
    {



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0x99, 0x4F, 0x57, 0x75, 0x45, 0xD1, 0x7E, 0x54, 0x97, 0x2B, 0x7D, 0x87, 0x9F, 0x93, 0xC0, 0x3E };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("75574F99-D145-547E-972B-7D879F93C03E")]
    internal interface IDockPatternIdentifiers : global::Microsoft.UI.Xaml.Automation.IDockPatternIdentifiers
    {
    }
    internal static class IDockPatternIdentifiersStaticsMethods
    {

        internal static unsafe global::Microsoft.UI.Xaml.Automation.AutomationProperty get_DockPositionProperty(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[6](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Xaml.Automation.AutomationProperty.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.UI.Xaml.Automation.AutomationProperty.DisposeAbi(__retval);
            }
        }



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0x2C, 0xA7, 0xD5, 0x2, 0x9D, 0xF4, 0xA9, 0x53, 0xB9, 0xFB, 0xAF, 0x27, 0x19, 0xD1, 0x6C, 0xCF };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("02D5A72C-F49D-53A9-B9FB-AF2719D16CCF")]
    internal interface IDockPatternIdentifiersStatics : global::Microsoft.UI.Xaml.Automation.IDockPatternIdentifiersStatics
    {
    }
    internal static class IDragPatternIdentifiersMethods
    {



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0xD5, 0xDF, 0x2F, 0xAA, 0x45, 0xFB, 0x2B, 0x5D, 0x8D, 0x92, 0xA8, 0xE7, 0xB0, 0x70, 0x61, 0xC2 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("AA2FDFD5-FB45-5D2B-8D92-A8E7B07061C2")]
    internal interface IDragPatternIdentifiers : global::Microsoft.UI.Xaml.Automation.IDragPatternIdentifiers
    {
    }
    internal static class IDragPatternIdentifiersStaticsMethods
    {

        internal static unsafe global::Microsoft.UI.Xaml.Automation.AutomationProperty get_DropEffectProperty(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[6](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Xaml.Automation.AutomationProperty.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.UI.Xaml.Automation.AutomationProperty.DisposeAbi(__retval);
            }
        }

        internal static unsafe global::Microsoft.UI.Xaml.Automation.AutomationProperty get_DropEffectsProperty(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[7](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Xaml.Automation.AutomationProperty.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.UI.Xaml.Automation.AutomationProperty.DisposeAbi(__retval);
            }
        }

        internal static unsafe global::Microsoft.UI.Xaml.Automation.AutomationProperty get_GrabbedItemsProperty(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[8](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Xaml.Automation.AutomationProperty.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.UI.Xaml.Automation.AutomationProperty.DisposeAbi(__retval);
            }
        }

        internal static unsafe global::Microsoft.UI.Xaml.Automation.AutomationProperty get_IsGrabbedProperty(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[9](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Xaml.Automation.AutomationProperty.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.UI.Xaml.Automation.AutomationProperty.DisposeAbi(__retval);
            }
        }



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0x70, 0xEE, 0x2E, 0x48, 0xFC, 0xB, 0x52, 0x55, 0x9E, 0x7D, 0x8D, 0xFF, 0xC5, 0x26, 0xB2, 0xF7 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("482EEE70-0BFC-5552-9E7D-8DFFC526B2F7")]
    internal interface IDragPatternIdentifiersStatics : global::Microsoft.UI.Xaml.Automation.IDragPatternIdentifiersStatics
    {
    }
    internal static class IDropTargetPatternIdentifiersMethods
    {



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0xF3, 0x8F, 0x3E, 0x13, 0xDD, 0x1D, 0xBB, 0x5C, 0xB9, 0x8, 0x14, 0x84, 0xD7, 0xC0, 0x4D, 0xA7 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("133E8FF3-1DDD-5CBB-B908-1484D7C04DA7")]
    internal interface IDropTargetPatternIdentifiers : global::Microsoft.UI.Xaml.Automation.IDropTargetPatternIdentifiers
    {
    }
    internal static class IDropTargetPatternIdentifiersStaticsMethods
    {

        internal static unsafe global::Microsoft.UI.Xaml.Automation.AutomationProperty get_DropTargetEffectProperty(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[6](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Xaml.Automation.AutomationProperty.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.UI.Xaml.Automation.AutomationProperty.DisposeAbi(__retval);
            }
        }

        internal static unsafe global::Microsoft.UI.Xaml.Automation.AutomationProperty get_DropTargetEffectsProperty(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[7](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Xaml.Automation.AutomationProperty.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.UI.Xaml.Automation.AutomationProperty.DisposeAbi(__retval);
            }
        }



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0xBD, 0xF0, 0xA6, 0x6D, 0x42, 0xB9, 0x83, 0x52, 0xBE, 0x35, 0x50, 0x1A, 0xE8, 0x7F, 0x88, 0xC7 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("6DA6F0BD-B942-5283-BE35-501AE87F88C7")]
    internal interface IDropTargetPatternIdentifiersStatics : global::Microsoft.UI.Xaml.Automation.IDropTargetPatternIdentifiersStatics
    {
    }
    internal static class IExpandCollapsePatternIdentifiersMethods
    {



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0x9F, 0x5D, 0xC1, 0xCE, 0x30, 0x86, 0x9A, 0x56, 0x86, 0xA0, 0x52, 0x4B, 0xBE, 0xA6, 0x18, 0xFF };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("CEC15D9F-8630-569A-86A0-524BBEA618FF")]
    internal interface IExpandCollapsePatternIdentifiers : global::Microsoft.UI.Xaml.Automation.IExpandCollapsePatternIdentifiers
    {
    }
    internal static class IExpandCollapsePatternIdentifiersStaticsMethods
    {

        internal static unsafe global::Microsoft.UI.Xaml.Automation.AutomationProperty get_ExpandCollapseStateProperty(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[6](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Xaml.Automation.AutomationProperty.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.UI.Xaml.Automation.AutomationProperty.DisposeAbi(__retval);
            }
        }



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0xF4, 0x1, 0x31, 0x28, 0xC, 0xC4, 0xBF, 0x55, 0xA2, 0x3B, 0xD6, 0x2B, 0x73, 0xB6, 0xAA, 0x35 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("283101F4-C40C-55BF-A23B-D62B73B6AA35")]
    internal interface IExpandCollapsePatternIdentifiersStatics : global::Microsoft.UI.Xaml.Automation.IExpandCollapsePatternIdentifiersStatics
    {
    }
    internal static class IGridItemPatternIdentifiersMethods
    {



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0x87, 0x90, 0x60, 0x93, 0x14, 0x11, 0x7D, 0x55, 0xB1, 0x7B, 0xF8, 0x1, 0xE4, 0x1C, 0xEB, 0xBB };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("93609087-1114-557D-B17B-F801E41CEBBB")]
    internal interface IGridItemPatternIdentifiers : global::Microsoft.UI.Xaml.Automation.IGridItemPatternIdentifiers
    {
    }
    internal static class IGridItemPatternIdentifiersStaticsMethods
    {

        internal static unsafe global::Microsoft.UI.Xaml.Automation.AutomationProperty get_ColumnProperty(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[6](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Xaml.Automation.AutomationProperty.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.UI.Xaml.Automation.AutomationProperty.DisposeAbi(__retval);
            }
        }

        internal static unsafe global::Microsoft.UI.Xaml.Automation.AutomationProperty get_ColumnSpanProperty(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[7](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Xaml.Automation.AutomationProperty.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.UI.Xaml.Automation.AutomationProperty.DisposeAbi(__retval);
            }
        }

        internal static unsafe global::Microsoft.UI.Xaml.Automation.AutomationProperty get_ContainingGridProperty(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[8](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Xaml.Automation.AutomationProperty.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.UI.Xaml.Automation.AutomationProperty.DisposeAbi(__retval);
            }
        }

        internal static unsafe global::Microsoft.UI.Xaml.Automation.AutomationProperty get_RowProperty(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[9](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Xaml.Automation.AutomationProperty.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.UI.Xaml.Automation.AutomationProperty.DisposeAbi(__retval);
            }
        }

        internal static unsafe global::Microsoft.UI.Xaml.Automation.AutomationProperty get_RowSpanProperty(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[10](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Xaml.Automation.AutomationProperty.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.UI.Xaml.Automation.AutomationProperty.DisposeAbi(__retval);
            }
        }



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0x18, 0xBC, 0x72, 0x80, 0xD0, 0x87, 0x2, 0x5A, 0xA0, 0xA1, 0xF9, 0xAE, 0xC9, 0x68, 0xC0, 0xE7 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("8072BC18-87D0-5A02-A0A1-F9AEC968C0E7")]
    internal interface IGridItemPatternIdentifiersStatics : global::Microsoft.UI.Xaml.Automation.IGridItemPatternIdentifiersStatics
    {
    }
    internal static class IGridPatternIdentifiersMethods
    {



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0x50, 0xE2, 0xE1, 0xE5, 0x7C, 0xC3, 0xA2, 0x54, 0x8C, 0x61, 0x1D, 0x9C, 0xCD, 0x3B, 0xB3, 0x9C };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("E5E1E250-C37C-54A2-8C61-1D9CCD3BB39C")]
    internal interface IGridPatternIdentifiers : global::Microsoft.UI.Xaml.Automation.IGridPatternIdentifiers
    {
    }
    internal static class IGridPatternIdentifiersStaticsMethods
    {

        internal static unsafe global::Microsoft.UI.Xaml.Automation.AutomationProperty get_ColumnCountProperty(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[6](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Xaml.Automation.AutomationProperty.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.UI.Xaml.Automation.AutomationProperty.DisposeAbi(__retval);
            }
        }

        internal static unsafe global::Microsoft.UI.Xaml.Automation.AutomationProperty get_RowCountProperty(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[7](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Xaml.Automation.AutomationProperty.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.UI.Xaml.Automation.AutomationProperty.DisposeAbi(__retval);
            }
        }



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0x4C, 0x60, 0x61, 0xE8, 0x1F, 0x10, 0x6D, 0x5A, 0xA3, 0x8, 0x37, 0x14, 0xF5, 0x10, 0xF7, 0x44 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("E861604C-101F-5A6D-A308-3714F510F744")]
    internal interface IGridPatternIdentifiersStatics : global::Microsoft.UI.Xaml.Automation.IGridPatternIdentifiersStatics
    {
    }
    internal static class IMultipleViewPatternIdentifiersMethods
    {



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0x47, 0xC8, 0xE4, 0x70, 0x82, 0x2B, 0xCF, 0x5E, 0xB8, 0x8, 0xE9, 0xD4, 0x53, 0xC1, 0xFE, 0x53 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("70E4C847-2B82-5ECF-B808-E9D453C1FE53")]
    internal interface IMultipleViewPatternIdentifiers : global::Microsoft.UI.Xaml.Automation.IMultipleViewPatternIdentifiers
    {
    }
    internal static class IMultipleViewPatternIdentifiersStaticsMethods
    {

        internal static unsafe global::Microsoft.UI.Xaml.Automation.AutomationProperty get_CurrentViewProperty(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[6](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Xaml.Automation.AutomationProperty.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.UI.Xaml.Automation.AutomationProperty.DisposeAbi(__retval);
            }
        }

        internal static unsafe global::Microsoft.UI.Xaml.Automation.AutomationProperty get_SupportedViewsProperty(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[7](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Xaml.Automation.AutomationProperty.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.UI.Xaml.Automation.AutomationProperty.DisposeAbi(__retval);
            }
        }



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0xEF, 0xDA, 0x71, 0xAC, 0x94, 0xD0, 0x90, 0x5C, 0x94, 0xAF, 0x1F, 0xA4, 0x74, 0xAB, 0x45, 0xFE };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("AC71DAEF-D094-5C90-94AF-1FA474AB45FE")]
    internal interface IMultipleViewPatternIdentifiersStatics : global::Microsoft.UI.Xaml.Automation.IMultipleViewPatternIdentifiersStatics
    {
    }
    internal static class IRangeValuePatternIdentifiersMethods
    {



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0x37, 0xDB, 0x14, 0xC1, 0x75, 0x6A, 0xF1, 0x5E, 0xA5, 0x42, 0xD3, 0xB1, 0x3F, 0x92, 0xCB, 0xFE };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("C114DB37-6A75-5EF1-A542-D3B13F92CBFE")]
    internal interface IRangeValuePatternIdentifiers : global::Microsoft.UI.Xaml.Automation.IRangeValuePatternIdentifiers
    {
    }
    internal static class IRangeValuePatternIdentifiersStaticsMethods
    {

        internal static unsafe global::Microsoft.UI.Xaml.Automation.AutomationProperty get_IsReadOnlyProperty(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[6](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Xaml.Automation.AutomationProperty.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.UI.Xaml.Automation.AutomationProperty.DisposeAbi(__retval);
            }
        }

        internal static unsafe global::Microsoft.UI.Xaml.Automation.AutomationProperty get_LargeChangeProperty(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[7](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Xaml.Automation.AutomationProperty.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.UI.Xaml.Automation.AutomationProperty.DisposeAbi(__retval);
            }
        }

        internal static unsafe global::Microsoft.UI.Xaml.Automation.AutomationProperty get_MaximumProperty(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[8](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Xaml.Automation.AutomationProperty.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.UI.Xaml.Automation.AutomationProperty.DisposeAbi(__retval);
            }
        }

        internal static unsafe global::Microsoft.UI.Xaml.Automation.AutomationProperty get_MinimumProperty(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[9](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Xaml.Automation.AutomationProperty.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.UI.Xaml.Automation.AutomationProperty.DisposeAbi(__retval);
            }
        }

        internal static unsafe global::Microsoft.UI.Xaml.Automation.AutomationProperty get_SmallChangeProperty(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[10](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Xaml.Automation.AutomationProperty.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.UI.Xaml.Automation.AutomationProperty.DisposeAbi(__retval);
            }
        }

        internal static unsafe global::Microsoft.UI.Xaml.Automation.AutomationProperty get_ValueProperty(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[11](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Xaml.Automation.AutomationProperty.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.UI.Xaml.Automation.AutomationProperty.DisposeAbi(__retval);
            }
        }



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0xD7, 0x9A, 0xAA, 0xA, 0xB8, 0xF9, 0xA1, 0x52, 0xBC, 0x96, 0x2A, 0x97, 0xFE, 0x38, 0x9E, 0xD0 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("0AAA9AD7-F9B8-52A1-BC96-2A97FE389ED0")]
    internal interface IRangeValuePatternIdentifiersStatics : global::Microsoft.UI.Xaml.Automation.IRangeValuePatternIdentifiersStatics
    {
    }
    internal static class IScrollPatternIdentifiersMethods
    {



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0xB8, 0xA4, 0xF1, 0x4, 0xC7, 0xED, 0xF2, 0x55, 0x96, 0xDF, 0xA9, 0xC7, 0xE8, 0x9, 0x37, 0x2E };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("04F1A4B8-EDC7-55F2-96DF-A9C7E809372E")]
    internal interface IScrollPatternIdentifiers : global::Microsoft.UI.Xaml.Automation.IScrollPatternIdentifiers
    {
    }
    internal static class IScrollPatternIdentifiersStaticsMethods
    {

        internal static unsafe global::Microsoft.UI.Xaml.Automation.AutomationProperty get_HorizontalScrollPercentProperty(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[7](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Xaml.Automation.AutomationProperty.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.UI.Xaml.Automation.AutomationProperty.DisposeAbi(__retval);
            }
        }

        internal static unsafe global::Microsoft.UI.Xaml.Automation.AutomationProperty get_HorizontalViewSizeProperty(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[8](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Xaml.Automation.AutomationProperty.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.UI.Xaml.Automation.AutomationProperty.DisposeAbi(__retval);
            }
        }

        internal static unsafe global::Microsoft.UI.Xaml.Automation.AutomationProperty get_HorizontallyScrollableProperty(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[6](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Xaml.Automation.AutomationProperty.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.UI.Xaml.Automation.AutomationProperty.DisposeAbi(__retval);
            }
        }

        internal static unsafe double get_NoScroll(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            double __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, double*, int>**)ThisPtr)[9](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }

        internal static unsafe global::Microsoft.UI.Xaml.Automation.AutomationProperty get_VerticalScrollPercentProperty(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[11](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Xaml.Automation.AutomationProperty.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.UI.Xaml.Automation.AutomationProperty.DisposeAbi(__retval);
            }
        }

        internal static unsafe global::Microsoft.UI.Xaml.Automation.AutomationProperty get_VerticalViewSizeProperty(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[12](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Xaml.Automation.AutomationProperty.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.UI.Xaml.Automation.AutomationProperty.DisposeAbi(__retval);
            }
        }

        internal static unsafe global::Microsoft.UI.Xaml.Automation.AutomationProperty get_VerticallyScrollableProperty(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[10](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Xaml.Automation.AutomationProperty.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.UI.Xaml.Automation.AutomationProperty.DisposeAbi(__retval);
            }
        }



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0xF0, 0xF2, 0x94, 0xF, 0xD2, 0xE0, 0x24, 0x5A, 0xB4, 0x15, 0x8D, 0x15, 0x6, 0xCE, 0x47, 0xAA };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("0F94F2F0-E0D2-5A24-B415-8D1506CE47AA")]
    internal interface IScrollPatternIdentifiersStatics : global::Microsoft.UI.Xaml.Automation.IScrollPatternIdentifiersStatics
    {
    }
    internal static class ISelectionItemPatternIdentifiersMethods
    {



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0x9D, 0x54, 0x3A, 0xCE, 0xCB, 0xA2, 0x4D, 0x59, 0xA2, 0xA4, 0x44, 0x77, 0x8C, 0x9, 0xCC, 0xA5 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("CE3A549D-A2CB-594D-A2A4-44778C09CCA5")]
    internal interface ISelectionItemPatternIdentifiers : global::Microsoft.UI.Xaml.Automation.ISelectionItemPatternIdentifiers
    {
    }
    internal static class ISelectionItemPatternIdentifiersStaticsMethods
    {

        internal static unsafe global::Microsoft.UI.Xaml.Automation.AutomationProperty get_IsSelectedProperty(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[6](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Xaml.Automation.AutomationProperty.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.UI.Xaml.Automation.AutomationProperty.DisposeAbi(__retval);
            }
        }

        internal static unsafe global::Microsoft.UI.Xaml.Automation.AutomationProperty get_SelectionContainerProperty(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[7](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Xaml.Automation.AutomationProperty.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.UI.Xaml.Automation.AutomationProperty.DisposeAbi(__retval);
            }
        }



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0x7C, 0xAD, 0x8E, 0x2B, 0x3, 0x4E, 0x84, 0x5B, 0x9E, 0x34, 0x8B, 0x73, 0x84, 0xCB, 0xD8, 0x62 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("2B8EAD7C-4E03-5B84-9E34-8B7384CBD862")]
    internal interface ISelectionItemPatternIdentifiersStatics : global::Microsoft.UI.Xaml.Automation.ISelectionItemPatternIdentifiersStatics
    {
    }
    internal static class ISelectionPatternIdentifiersMethods
    {



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0xD2, 0x43, 0x17, 0x40, 0xBA, 0x1F, 0x5, 0x5D, 0xB8, 0x9F, 0x63, 0x16, 0x76, 0x45, 0x32, 0x37 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("401743D2-1FBA-5D05-B89F-631676453237")]
    internal interface ISelectionPatternIdentifiers : global::Microsoft.UI.Xaml.Automation.ISelectionPatternIdentifiers
    {
    }
    internal static class ISelectionPatternIdentifiersStaticsMethods
    {

        internal static unsafe global::Microsoft.UI.Xaml.Automation.AutomationProperty get_CanSelectMultipleProperty(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[6](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Xaml.Automation.AutomationProperty.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.UI.Xaml.Automation.AutomationProperty.DisposeAbi(__retval);
            }
        }

        internal static unsafe global::Microsoft.UI.Xaml.Automation.AutomationProperty get_IsSelectionRequiredProperty(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[7](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Xaml.Automation.AutomationProperty.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.UI.Xaml.Automation.AutomationProperty.DisposeAbi(__retval);
            }
        }

        internal static unsafe global::Microsoft.UI.Xaml.Automation.AutomationProperty get_SelectionProperty(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[8](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Xaml.Automation.AutomationProperty.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.UI.Xaml.Automation.AutomationProperty.DisposeAbi(__retval);
            }
        }



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0x1B, 0x11, 0xED, 0xF3, 0xA, 0xB2, 0x5E, 0x5E, 0xA2, 0x32, 0x7, 0xF6, 0x7, 0xFD, 0x5C, 0x7 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("F3ED111B-B20A-5E5E-A232-07F607FD5C07")]
    internal interface ISelectionPatternIdentifiersStatics : global::Microsoft.UI.Xaml.Automation.ISelectionPatternIdentifiersStatics
    {
    }
    internal static class ISpreadsheetItemPatternIdentifiersMethods
    {



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0x46, 0xEC, 0xA2, 0xDC, 0x64, 0x85, 0x9C, 0x5C, 0xBA, 0x90, 0x2C, 0x8, 0x45, 0x5F, 0x69, 0x7B };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("DCA2EC46-8564-5C9C-BA90-2C08455F697B")]
    internal interface ISpreadsheetItemPatternIdentifiers : global::Microsoft.UI.Xaml.Automation.ISpreadsheetItemPatternIdentifiers
    {
    }
    internal static class ISpreadsheetItemPatternIdentifiersStaticsMethods
    {

        internal static unsafe global::Microsoft.UI.Xaml.Automation.AutomationProperty get_FormulaProperty(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[6](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Xaml.Automation.AutomationProperty.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.UI.Xaml.Automation.AutomationProperty.DisposeAbi(__retval);
            }
        }



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0x80, 0xF, 0xB1, 0x7E, 0x3A, 0x8D, 0xAD, 0x59, 0xA2, 0xB9, 0x5, 0xD8, 0xCE, 0xCF, 0x18, 0xDB };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("7EB10F80-8D3A-59AD-A2B9-05D8CECF18DB")]
    internal interface ISpreadsheetItemPatternIdentifiersStatics : global::Microsoft.UI.Xaml.Automation.ISpreadsheetItemPatternIdentifiersStatics
    {
    }
    internal static class IStylesPatternIdentifiersMethods
    {



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0x5E, 0xCA, 0xAE, 0x13, 0x96, 0xB4, 0xF5, 0x5D, 0xAE, 0xA5, 0x33, 0xE, 0x1F, 0x4, 0x90, 0xEB };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("13AECA5E-B496-5DF5-AEA5-330E1F0490EB")]
    internal interface IStylesPatternIdentifiers : global::Microsoft.UI.Xaml.Automation.IStylesPatternIdentifiers
    {
    }
    internal static class IStylesPatternIdentifiersStaticsMethods
    {

        internal static unsafe global::Microsoft.UI.Xaml.Automation.AutomationProperty get_ExtendedPropertiesProperty(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[6](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Xaml.Automation.AutomationProperty.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.UI.Xaml.Automation.AutomationProperty.DisposeAbi(__retval);
            }
        }

        internal static unsafe global::Microsoft.UI.Xaml.Automation.AutomationProperty get_FillColorProperty(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[7](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Xaml.Automation.AutomationProperty.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.UI.Xaml.Automation.AutomationProperty.DisposeAbi(__retval);
            }
        }

        internal static unsafe global::Microsoft.UI.Xaml.Automation.AutomationProperty get_FillPatternColorProperty(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[8](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Xaml.Automation.AutomationProperty.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.UI.Xaml.Automation.AutomationProperty.DisposeAbi(__retval);
            }
        }

        internal static unsafe global::Microsoft.UI.Xaml.Automation.AutomationProperty get_FillPatternStyleProperty(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[9](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Xaml.Automation.AutomationProperty.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.UI.Xaml.Automation.AutomationProperty.DisposeAbi(__retval);
            }
        }

        internal static unsafe global::Microsoft.UI.Xaml.Automation.AutomationProperty get_ShapeProperty(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[10](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Xaml.Automation.AutomationProperty.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.UI.Xaml.Automation.AutomationProperty.DisposeAbi(__retval);
            }
        }

        internal static unsafe global::Microsoft.UI.Xaml.Automation.AutomationProperty get_StyleIdProperty(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[11](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Xaml.Automation.AutomationProperty.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.UI.Xaml.Automation.AutomationProperty.DisposeAbi(__retval);
            }
        }

        internal static unsafe global::Microsoft.UI.Xaml.Automation.AutomationProperty get_StyleNameProperty(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[12](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Xaml.Automation.AutomationProperty.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.UI.Xaml.Automation.AutomationProperty.DisposeAbi(__retval);
            }
        }



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0x7A, 0x28, 0x32, 0xB2, 0x4C, 0xBC, 0x1E, 0x58, 0xA3, 0x3C, 0x3D, 0x6A, 0xEE, 0x10, 0xD0, 0x4B };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("B232287A-BC4C-581E-A33C-3D6AEE10D04B")]
    internal interface IStylesPatternIdentifiersStatics : global::Microsoft.UI.Xaml.Automation.IStylesPatternIdentifiersStatics
    {
    }
    internal static class ITableItemPatternIdentifiersMethods
    {



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0x3, 0x5D, 0xDE, 0xB4, 0xB4, 0xA5, 0xA1, 0x5C, 0x87, 0x15, 0x16, 0xC8, 0xC6, 0xA1, 0xF, 0xCC };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("B4DE5D03-A5B4-5CA1-8715-16C8C6A10FCC")]
    internal interface ITableItemPatternIdentifiers : global::Microsoft.UI.Xaml.Automation.ITableItemPatternIdentifiers
    {
    }
    internal static class ITableItemPatternIdentifiersStaticsMethods
    {

        internal static unsafe global::Microsoft.UI.Xaml.Automation.AutomationProperty get_ColumnHeaderItemsProperty(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[6](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Xaml.Automation.AutomationProperty.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.UI.Xaml.Automation.AutomationProperty.DisposeAbi(__retval);
            }
        }

        internal static unsafe global::Microsoft.UI.Xaml.Automation.AutomationProperty get_RowHeaderItemsProperty(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[7](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Xaml.Automation.AutomationProperty.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.UI.Xaml.Automation.AutomationProperty.DisposeAbi(__retval);
            }
        }



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0xD7, 0x4B, 0xD2, 0x81, 0xFB, 0x66, 0xEF, 0x53, 0x9B, 0x32, 0xD0, 0xF, 0x9C, 0x24, 0xA, 0x14 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("81D24BD7-66FB-53EF-9B32-D00F9C240A14")]
    internal interface ITableItemPatternIdentifiersStatics : global::Microsoft.UI.Xaml.Automation.ITableItemPatternIdentifiersStatics
    {
    }
    internal static class ITablePatternIdentifiersMethods
    {



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0xB, 0x9C, 0x7F, 0x3D, 0x8F, 0xFF, 0xFA, 0x50, 0xBC, 0x1, 0x2C, 0xC3, 0xC2, 0xE0, 0x6E, 0x2C };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("3D7F9C0B-FF8F-50FA-BC01-2CC3C2E06E2C")]
    internal interface ITablePatternIdentifiers : global::Microsoft.UI.Xaml.Automation.ITablePatternIdentifiers
    {
    }
    internal static class ITablePatternIdentifiersStaticsMethods
    {

        internal static unsafe global::Microsoft.UI.Xaml.Automation.AutomationProperty get_ColumnHeadersProperty(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[6](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Xaml.Automation.AutomationProperty.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.UI.Xaml.Automation.AutomationProperty.DisposeAbi(__retval);
            }
        }

        internal static unsafe global::Microsoft.UI.Xaml.Automation.AutomationProperty get_RowHeadersProperty(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[7](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Xaml.Automation.AutomationProperty.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.UI.Xaml.Automation.AutomationProperty.DisposeAbi(__retval);
            }
        }

        internal static unsafe global::Microsoft.UI.Xaml.Automation.AutomationProperty get_RowOrColumnMajorProperty(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[8](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Xaml.Automation.AutomationProperty.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.UI.Xaml.Automation.AutomationProperty.DisposeAbi(__retval);
            }
        }



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0x5E, 0x93, 0x60, 0x36, 0xBB, 0xBC, 0x48, 0x58, 0x8E, 0x9A, 0x26, 0x48, 0x54, 0xF7, 0xA1, 0x9A };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("3660935E-BCBB-5848-8E9A-264854F7A19A")]
    internal interface ITablePatternIdentifiersStatics : global::Microsoft.UI.Xaml.Automation.ITablePatternIdentifiersStatics
    {
    }
    internal static class ITogglePatternIdentifiersMethods
    {



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0x4C, 0xDF, 0xD2, 0xA0, 0x59, 0xBA, 0xD9, 0x51, 0x9C, 0x1, 0x3, 0x4D, 0x79, 0x41, 0xC2, 0x80 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("A0D2DF4C-BA59-51D9-9C01-034D7941C280")]
    internal interface ITogglePatternIdentifiers : global::Microsoft.UI.Xaml.Automation.ITogglePatternIdentifiers
    {
    }
    internal static class ITogglePatternIdentifiersStaticsMethods
    {

        internal static unsafe global::Microsoft.UI.Xaml.Automation.AutomationProperty get_ToggleStateProperty(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[6](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Xaml.Automation.AutomationProperty.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.UI.Xaml.Automation.AutomationProperty.DisposeAbi(__retval);
            }
        }



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0xB5, 0x20, 0x29, 0x86, 0xB3, 0xDC, 0x91, 0x56, 0xA4, 0x56, 0xC2, 0xF1, 0x5C, 0x47, 0x6D, 0xFB };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("862920B5-DCB3-5691-A456-C2F15C476DFB")]
    internal interface ITogglePatternIdentifiersStatics : global::Microsoft.UI.Xaml.Automation.ITogglePatternIdentifiersStatics
    {
    }
    internal static class ITransformPattern2IdentifiersMethods
    {



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0x5C, 0x59, 0xF7, 0x6E, 0x8C, 0xDB, 0xB0, 0x51, 0x87, 0x8B, 0x34, 0xB7, 0xEF, 0x12, 0xF4, 0xDA };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("6EF7595C-DB8C-51B0-878B-34B7EF12F4DA")]
    internal interface ITransformPattern2Identifiers : global::Microsoft.UI.Xaml.Automation.ITransformPattern2Identifiers
    {
    }
    internal static class ITransformPattern2IdentifiersStaticsMethods
    {

        internal static unsafe global::Microsoft.UI.Xaml.Automation.AutomationProperty get_CanZoomProperty(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[6](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Xaml.Automation.AutomationProperty.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.UI.Xaml.Automation.AutomationProperty.DisposeAbi(__retval);
            }
        }

        internal static unsafe global::Microsoft.UI.Xaml.Automation.AutomationProperty get_MaxZoomProperty(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[8](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Xaml.Automation.AutomationProperty.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.UI.Xaml.Automation.AutomationProperty.DisposeAbi(__retval);
            }
        }

        internal static unsafe global::Microsoft.UI.Xaml.Automation.AutomationProperty get_MinZoomProperty(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[9](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Xaml.Automation.AutomationProperty.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.UI.Xaml.Automation.AutomationProperty.DisposeAbi(__retval);
            }
        }

        internal static unsafe global::Microsoft.UI.Xaml.Automation.AutomationProperty get_ZoomLevelProperty(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[7](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Xaml.Automation.AutomationProperty.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.UI.Xaml.Automation.AutomationProperty.DisposeAbi(__retval);
            }
        }



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0xF5, 0x6F, 0x87, 0xD9, 0xED, 0x89, 0x33, 0x53, 0x81, 0x11, 0xAD, 0x25, 0xA2, 0x8B, 0xEE, 0x8B };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("D9876FF5-89ED-5333-8111-AD25A28BEE8B")]
    internal interface ITransformPattern2IdentifiersStatics : global::Microsoft.UI.Xaml.Automation.ITransformPattern2IdentifiersStatics
    {
    }
    internal static class ITransformPatternIdentifiersMethods
    {



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0x7B, 0x18, 0x48, 0x23, 0xF, 0xC5, 0xE, 0x5A, 0xBC, 0x5, 0x30, 0x5A, 0xC7, 0x1B, 0x3B, 0x6B };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("2348187B-C50F-5A0E-BC05-305AC71B3B6B")]
    internal interface ITransformPatternIdentifiers : global::Microsoft.UI.Xaml.Automation.ITransformPatternIdentifiers
    {
    }
    internal static class ITransformPatternIdentifiersStaticsMethods
    {

        internal static unsafe global::Microsoft.UI.Xaml.Automation.AutomationProperty get_CanMoveProperty(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[6](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Xaml.Automation.AutomationProperty.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.UI.Xaml.Automation.AutomationProperty.DisposeAbi(__retval);
            }
        }

        internal static unsafe global::Microsoft.UI.Xaml.Automation.AutomationProperty get_CanResizeProperty(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[7](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Xaml.Automation.AutomationProperty.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.UI.Xaml.Automation.AutomationProperty.DisposeAbi(__retval);
            }
        }

        internal static unsafe global::Microsoft.UI.Xaml.Automation.AutomationProperty get_CanRotateProperty(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[8](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Xaml.Automation.AutomationProperty.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.UI.Xaml.Automation.AutomationProperty.DisposeAbi(__retval);
            }
        }



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0xE4, 0x84, 0x7D, 0xCB, 0x29, 0x54, 0x88, 0x51, 0x8A, 0xA0, 0x5F, 0x96, 0x55, 0x8A, 0x87, 0x90 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("CB7D84E4-5429-5188-8AA0-5F96558A8790")]
    internal interface ITransformPatternIdentifiersStatics : global::Microsoft.UI.Xaml.Automation.ITransformPatternIdentifiersStatics
    {
    }
    internal static class IValuePatternIdentifiersMethods
    {



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0x95, 0x33, 0x49, 0xFB, 0x97, 0xFB, 0xD5, 0x59, 0x93, 0x23, 0x46, 0x51, 0xCE, 0x96, 0x4B, 0x55 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("FB493395-FB97-59D5-9323-4651CE964B55")]
    internal interface IValuePatternIdentifiers : global::Microsoft.UI.Xaml.Automation.IValuePatternIdentifiers
    {
    }
    internal static class IValuePatternIdentifiersStaticsMethods
    {

        internal static unsafe global::Microsoft.UI.Xaml.Automation.AutomationProperty get_IsReadOnlyProperty(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[6](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Xaml.Automation.AutomationProperty.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.UI.Xaml.Automation.AutomationProperty.DisposeAbi(__retval);
            }
        }

        internal static unsafe global::Microsoft.UI.Xaml.Automation.AutomationProperty get_ValueProperty(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[7](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Xaml.Automation.AutomationProperty.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.UI.Xaml.Automation.AutomationProperty.DisposeAbi(__retval);
            }
        }



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0xF5, 0xFA, 0x19, 0x20, 0x64, 0xCE, 0xA7, 0x59, 0xBC, 0x13, 0x6, 0x77, 0xC3, 0x14, 0x67, 0x24 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("2019FAF5-CE64-59A7-BC13-0677C3146724")]
    internal interface IValuePatternIdentifiersStatics : global::Microsoft.UI.Xaml.Automation.IValuePatternIdentifiersStatics
    {
    }
    internal static class IWindowPatternIdentifiersMethods
    {



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0xE1, 0x79, 0xC5, 0xBE, 0xBE, 0x91, 0x8F, 0x5D, 0xAA, 0xCA, 0x6A, 0xD8, 0x83, 0x98, 0x72, 0xD2 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("BEC579E1-91BE-5D8F-AACA-6AD8839872D2")]
    internal interface IWindowPatternIdentifiers : global::Microsoft.UI.Xaml.Automation.IWindowPatternIdentifiers
    {
    }
    internal static class IWindowPatternIdentifiersStaticsMethods
    {

        internal static unsafe global::Microsoft.UI.Xaml.Automation.AutomationProperty get_CanMaximizeProperty(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[6](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Xaml.Automation.AutomationProperty.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.UI.Xaml.Automation.AutomationProperty.DisposeAbi(__retval);
            }
        }

        internal static unsafe global::Microsoft.UI.Xaml.Automation.AutomationProperty get_CanMinimizeProperty(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[7](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Xaml.Automation.AutomationProperty.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.UI.Xaml.Automation.AutomationProperty.DisposeAbi(__retval);
            }
        }

        internal static unsafe global::Microsoft.UI.Xaml.Automation.AutomationProperty get_IsModalProperty(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[8](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Xaml.Automation.AutomationProperty.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.UI.Xaml.Automation.AutomationProperty.DisposeAbi(__retval);
            }
        }

        internal static unsafe global::Microsoft.UI.Xaml.Automation.AutomationProperty get_IsTopmostProperty(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[9](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Xaml.Automation.AutomationProperty.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.UI.Xaml.Automation.AutomationProperty.DisposeAbi(__retval);
            }
        }

        internal static unsafe global::Microsoft.UI.Xaml.Automation.AutomationProperty get_WindowInteractionStateProperty(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[10](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Xaml.Automation.AutomationProperty.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.UI.Xaml.Automation.AutomationProperty.DisposeAbi(__retval);
            }
        }

        internal static unsafe global::Microsoft.UI.Xaml.Automation.AutomationProperty get_WindowVisualStateProperty(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[11](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Xaml.Automation.AutomationProperty.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.UI.Xaml.Automation.AutomationProperty.DisposeAbi(__retval);
            }
        }



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0x44, 0x27, 0x76, 0x6, 0xD7, 0xD3, 0x41, 0x54, 0xB8, 0x79, 0x37, 0x36, 0x81, 0xD4, 0x7F, 0x64 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("06762744-D3D7-5441-B879-373681D47F64")]
    internal interface IWindowPatternIdentifiersStatics : global::Microsoft.UI.Xaml.Automation.IWindowPatternIdentifiersStatics
    {
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    public struct MultipleViewPatternIdentifiers
    {

        public static IObjectReference CreateMarshaler(global::Microsoft.UI.Xaml.Automation.MultipleViewPatternIdentifiers obj) => obj is null ? null : MarshalInspectable<global::Microsoft.UI.Xaml.Automation.MultipleViewPatternIdentifiers>.CreateMarshaler<IUnknownVftbl>(obj, global::ABI.Microsoft.UI.Xaml.Automation.IMultipleViewPatternIdentifiersMethods.IID);
        public static ObjectReferenceValue CreateMarshaler2(global::Microsoft.UI.Xaml.Automation.MultipleViewPatternIdentifiers obj) => MarshalInspectable<object>.CreateMarshaler2(obj, global::ABI.Microsoft.UI.Xaml.Automation.IMultipleViewPatternIdentifiersMethods.IID);
        public static IntPtr GetAbi(IObjectReference value) => value is null ? IntPtr.Zero : MarshalInterfaceHelper<object>.GetAbi(value);
        public static global::Microsoft.UI.Xaml.Automation.MultipleViewPatternIdentifiers FromAbi(IntPtr thisPtr) => global::Microsoft.UI.Xaml.Automation.MultipleViewPatternIdentifiers.FromAbi(thisPtr);
        public static IntPtr FromManaged(global::Microsoft.UI.Xaml.Automation.MultipleViewPatternIdentifiers obj) => obj is null ? IntPtr.Zero : CreateMarshaler2(obj).Detach();
        public static unsafe MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.MultipleViewPatternIdentifiers>.MarshalerArray CreateMarshalerArray(global::Microsoft.UI.Xaml.Automation.MultipleViewPatternIdentifiers[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.MultipleViewPatternIdentifiers>.CreateMarshalerArray2(array, (o) => CreateMarshaler2(o));
        public static (int length, IntPtr data) GetAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.MultipleViewPatternIdentifiers>.GetAbiArray(box);
        public static unsafe global::Microsoft.UI.Xaml.Automation.MultipleViewPatternIdentifiers[] FromAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.MultipleViewPatternIdentifiers>.FromAbiArray(box, FromAbi);
        public static void CopyAbiArray(global::Microsoft.UI.Xaml.Automation.MultipleViewPatternIdentifiers[] array, object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.MultipleViewPatternIdentifiers>.CopyAbiArray(array, box, FromAbi);
        public static (int length, IntPtr data) FromManagedArray(global::Microsoft.UI.Xaml.Automation.MultipleViewPatternIdentifiers[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.MultipleViewPatternIdentifiers>.FromManagedArray(array, (o) => FromManaged(o));
        public static void DisposeMarshaler(IObjectReference value) => MarshalInspectable<object>.DisposeMarshaler(value);
        public static void DisposeMarshalerArray(MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.MultipleViewPatternIdentifiers>.MarshalerArray array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.MultipleViewPatternIdentifiers>.DisposeMarshalerArray(array);
        public static void DisposeAbi(IntPtr abi) => MarshalInspectable<object>.DisposeAbi(abi);
        public static unsafe void DisposeAbiArray(object box) => MarshalInspectable<object>.DisposeAbiArray(box);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    internal sealed class MultipleViewPatternIdentifiersRcwFactoryAttribute : global::WinRT.WinRTImplementationTypeRcwFactoryAttribute
    {
        public override object CreateInstance(global::WinRT.IInspectable inspectable)
            => new global::Microsoft.UI.Xaml.Automation.MultipleViewPatternIdentifiers(inspectable.ObjRef);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    public struct RangeValuePatternIdentifiers
    {

        public static IObjectReference CreateMarshaler(global::Microsoft.UI.Xaml.Automation.RangeValuePatternIdentifiers obj) => obj is null ? null : MarshalInspectable<global::Microsoft.UI.Xaml.Automation.RangeValuePatternIdentifiers>.CreateMarshaler<IUnknownVftbl>(obj, global::ABI.Microsoft.UI.Xaml.Automation.IRangeValuePatternIdentifiersMethods.IID);
        public static ObjectReferenceValue CreateMarshaler2(global::Microsoft.UI.Xaml.Automation.RangeValuePatternIdentifiers obj) => MarshalInspectable<object>.CreateMarshaler2(obj, global::ABI.Microsoft.UI.Xaml.Automation.IRangeValuePatternIdentifiersMethods.IID);
        public static IntPtr GetAbi(IObjectReference value) => value is null ? IntPtr.Zero : MarshalInterfaceHelper<object>.GetAbi(value);
        public static global::Microsoft.UI.Xaml.Automation.RangeValuePatternIdentifiers FromAbi(IntPtr thisPtr) => global::Microsoft.UI.Xaml.Automation.RangeValuePatternIdentifiers.FromAbi(thisPtr);
        public static IntPtr FromManaged(global::Microsoft.UI.Xaml.Automation.RangeValuePatternIdentifiers obj) => obj is null ? IntPtr.Zero : CreateMarshaler2(obj).Detach();
        public static unsafe MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.RangeValuePatternIdentifiers>.MarshalerArray CreateMarshalerArray(global::Microsoft.UI.Xaml.Automation.RangeValuePatternIdentifiers[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.RangeValuePatternIdentifiers>.CreateMarshalerArray2(array, (o) => CreateMarshaler2(o));
        public static (int length, IntPtr data) GetAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.RangeValuePatternIdentifiers>.GetAbiArray(box);
        public static unsafe global::Microsoft.UI.Xaml.Automation.RangeValuePatternIdentifiers[] FromAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.RangeValuePatternIdentifiers>.FromAbiArray(box, FromAbi);
        public static void CopyAbiArray(global::Microsoft.UI.Xaml.Automation.RangeValuePatternIdentifiers[] array, object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.RangeValuePatternIdentifiers>.CopyAbiArray(array, box, FromAbi);
        public static (int length, IntPtr data) FromManagedArray(global::Microsoft.UI.Xaml.Automation.RangeValuePatternIdentifiers[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.RangeValuePatternIdentifiers>.FromManagedArray(array, (o) => FromManaged(o));
        public static void DisposeMarshaler(IObjectReference value) => MarshalInspectable<object>.DisposeMarshaler(value);
        public static void DisposeMarshalerArray(MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.RangeValuePatternIdentifiers>.MarshalerArray array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.RangeValuePatternIdentifiers>.DisposeMarshalerArray(array);
        public static void DisposeAbi(IntPtr abi) => MarshalInspectable<object>.DisposeAbi(abi);
        public static unsafe void DisposeAbiArray(object box) => MarshalInspectable<object>.DisposeAbiArray(box);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    internal sealed class RangeValuePatternIdentifiersRcwFactoryAttribute : global::WinRT.WinRTImplementationTypeRcwFactoryAttribute
    {
        public override object CreateInstance(global::WinRT.IInspectable inspectable)
            => new global::Microsoft.UI.Xaml.Automation.RangeValuePatternIdentifiers(inspectable.ObjRef);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    public struct ScrollPatternIdentifiers
    {

        public static IObjectReference CreateMarshaler(global::Microsoft.UI.Xaml.Automation.ScrollPatternIdentifiers obj) => obj is null ? null : MarshalInspectable<global::Microsoft.UI.Xaml.Automation.ScrollPatternIdentifiers>.CreateMarshaler<IUnknownVftbl>(obj, global::ABI.Microsoft.UI.Xaml.Automation.IScrollPatternIdentifiersMethods.IID);
        public static ObjectReferenceValue CreateMarshaler2(global::Microsoft.UI.Xaml.Automation.ScrollPatternIdentifiers obj) => MarshalInspectable<object>.CreateMarshaler2(obj, global::ABI.Microsoft.UI.Xaml.Automation.IScrollPatternIdentifiersMethods.IID);
        public static IntPtr GetAbi(IObjectReference value) => value is null ? IntPtr.Zero : MarshalInterfaceHelper<object>.GetAbi(value);
        public static global::Microsoft.UI.Xaml.Automation.ScrollPatternIdentifiers FromAbi(IntPtr thisPtr) => global::Microsoft.UI.Xaml.Automation.ScrollPatternIdentifiers.FromAbi(thisPtr);
        public static IntPtr FromManaged(global::Microsoft.UI.Xaml.Automation.ScrollPatternIdentifiers obj) => obj is null ? IntPtr.Zero : CreateMarshaler2(obj).Detach();
        public static unsafe MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.ScrollPatternIdentifiers>.MarshalerArray CreateMarshalerArray(global::Microsoft.UI.Xaml.Automation.ScrollPatternIdentifiers[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.ScrollPatternIdentifiers>.CreateMarshalerArray2(array, (o) => CreateMarshaler2(o));
        public static (int length, IntPtr data) GetAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.ScrollPatternIdentifiers>.GetAbiArray(box);
        public static unsafe global::Microsoft.UI.Xaml.Automation.ScrollPatternIdentifiers[] FromAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.ScrollPatternIdentifiers>.FromAbiArray(box, FromAbi);
        public static void CopyAbiArray(global::Microsoft.UI.Xaml.Automation.ScrollPatternIdentifiers[] array, object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.ScrollPatternIdentifiers>.CopyAbiArray(array, box, FromAbi);
        public static (int length, IntPtr data) FromManagedArray(global::Microsoft.UI.Xaml.Automation.ScrollPatternIdentifiers[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.ScrollPatternIdentifiers>.FromManagedArray(array, (o) => FromManaged(o));
        public static void DisposeMarshaler(IObjectReference value) => MarshalInspectable<object>.DisposeMarshaler(value);
        public static void DisposeMarshalerArray(MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.ScrollPatternIdentifiers>.MarshalerArray array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.ScrollPatternIdentifiers>.DisposeMarshalerArray(array);
        public static void DisposeAbi(IntPtr abi) => MarshalInspectable<object>.DisposeAbi(abi);
        public static unsafe void DisposeAbiArray(object box) => MarshalInspectable<object>.DisposeAbiArray(box);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    internal sealed class ScrollPatternIdentifiersRcwFactoryAttribute : global::WinRT.WinRTImplementationTypeRcwFactoryAttribute
    {
        public override object CreateInstance(global::WinRT.IInspectable inspectable)
            => new global::Microsoft.UI.Xaml.Automation.ScrollPatternIdentifiers(inspectable.ObjRef);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    public struct SelectionItemPatternIdentifiers
    {

        public static IObjectReference CreateMarshaler(global::Microsoft.UI.Xaml.Automation.SelectionItemPatternIdentifiers obj) => obj is null ? null : MarshalInspectable<global::Microsoft.UI.Xaml.Automation.SelectionItemPatternIdentifiers>.CreateMarshaler<IUnknownVftbl>(obj, global::ABI.Microsoft.UI.Xaml.Automation.ISelectionItemPatternIdentifiersMethods.IID);
        public static ObjectReferenceValue CreateMarshaler2(global::Microsoft.UI.Xaml.Automation.SelectionItemPatternIdentifiers obj) => MarshalInspectable<object>.CreateMarshaler2(obj, global::ABI.Microsoft.UI.Xaml.Automation.ISelectionItemPatternIdentifiersMethods.IID);
        public static IntPtr GetAbi(IObjectReference value) => value is null ? IntPtr.Zero : MarshalInterfaceHelper<object>.GetAbi(value);
        public static global::Microsoft.UI.Xaml.Automation.SelectionItemPatternIdentifiers FromAbi(IntPtr thisPtr) => global::Microsoft.UI.Xaml.Automation.SelectionItemPatternIdentifiers.FromAbi(thisPtr);
        public static IntPtr FromManaged(global::Microsoft.UI.Xaml.Automation.SelectionItemPatternIdentifiers obj) => obj is null ? IntPtr.Zero : CreateMarshaler2(obj).Detach();
        public static unsafe MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.SelectionItemPatternIdentifiers>.MarshalerArray CreateMarshalerArray(global::Microsoft.UI.Xaml.Automation.SelectionItemPatternIdentifiers[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.SelectionItemPatternIdentifiers>.CreateMarshalerArray2(array, (o) => CreateMarshaler2(o));
        public static (int length, IntPtr data) GetAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.SelectionItemPatternIdentifiers>.GetAbiArray(box);
        public static unsafe global::Microsoft.UI.Xaml.Automation.SelectionItemPatternIdentifiers[] FromAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.SelectionItemPatternIdentifiers>.FromAbiArray(box, FromAbi);
        public static void CopyAbiArray(global::Microsoft.UI.Xaml.Automation.SelectionItemPatternIdentifiers[] array, object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.SelectionItemPatternIdentifiers>.CopyAbiArray(array, box, FromAbi);
        public static (int length, IntPtr data) FromManagedArray(global::Microsoft.UI.Xaml.Automation.SelectionItemPatternIdentifiers[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.SelectionItemPatternIdentifiers>.FromManagedArray(array, (o) => FromManaged(o));
        public static void DisposeMarshaler(IObjectReference value) => MarshalInspectable<object>.DisposeMarshaler(value);
        public static void DisposeMarshalerArray(MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.SelectionItemPatternIdentifiers>.MarshalerArray array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.SelectionItemPatternIdentifiers>.DisposeMarshalerArray(array);
        public static void DisposeAbi(IntPtr abi) => MarshalInspectable<object>.DisposeAbi(abi);
        public static unsafe void DisposeAbiArray(object box) => MarshalInspectable<object>.DisposeAbiArray(box);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    internal sealed class SelectionItemPatternIdentifiersRcwFactoryAttribute : global::WinRT.WinRTImplementationTypeRcwFactoryAttribute
    {
        public override object CreateInstance(global::WinRT.IInspectable inspectable)
            => new global::Microsoft.UI.Xaml.Automation.SelectionItemPatternIdentifiers(inspectable.ObjRef);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    public struct SelectionPatternIdentifiers
    {

        public static IObjectReference CreateMarshaler(global::Microsoft.UI.Xaml.Automation.SelectionPatternIdentifiers obj) => obj is null ? null : MarshalInspectable<global::Microsoft.UI.Xaml.Automation.SelectionPatternIdentifiers>.CreateMarshaler<IUnknownVftbl>(obj, global::ABI.Microsoft.UI.Xaml.Automation.ISelectionPatternIdentifiersMethods.IID);
        public static ObjectReferenceValue CreateMarshaler2(global::Microsoft.UI.Xaml.Automation.SelectionPatternIdentifiers obj) => MarshalInspectable<object>.CreateMarshaler2(obj, global::ABI.Microsoft.UI.Xaml.Automation.ISelectionPatternIdentifiersMethods.IID);
        public static IntPtr GetAbi(IObjectReference value) => value is null ? IntPtr.Zero : MarshalInterfaceHelper<object>.GetAbi(value);
        public static global::Microsoft.UI.Xaml.Automation.SelectionPatternIdentifiers FromAbi(IntPtr thisPtr) => global::Microsoft.UI.Xaml.Automation.SelectionPatternIdentifiers.FromAbi(thisPtr);
        public static IntPtr FromManaged(global::Microsoft.UI.Xaml.Automation.SelectionPatternIdentifiers obj) => obj is null ? IntPtr.Zero : CreateMarshaler2(obj).Detach();
        public static unsafe MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.SelectionPatternIdentifiers>.MarshalerArray CreateMarshalerArray(global::Microsoft.UI.Xaml.Automation.SelectionPatternIdentifiers[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.SelectionPatternIdentifiers>.CreateMarshalerArray2(array, (o) => CreateMarshaler2(o));
        public static (int length, IntPtr data) GetAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.SelectionPatternIdentifiers>.GetAbiArray(box);
        public static unsafe global::Microsoft.UI.Xaml.Automation.SelectionPatternIdentifiers[] FromAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.SelectionPatternIdentifiers>.FromAbiArray(box, FromAbi);
        public static void CopyAbiArray(global::Microsoft.UI.Xaml.Automation.SelectionPatternIdentifiers[] array, object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.SelectionPatternIdentifiers>.CopyAbiArray(array, box, FromAbi);
        public static (int length, IntPtr data) FromManagedArray(global::Microsoft.UI.Xaml.Automation.SelectionPatternIdentifiers[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.SelectionPatternIdentifiers>.FromManagedArray(array, (o) => FromManaged(o));
        public static void DisposeMarshaler(IObjectReference value) => MarshalInspectable<object>.DisposeMarshaler(value);
        public static void DisposeMarshalerArray(MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.SelectionPatternIdentifiers>.MarshalerArray array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.SelectionPatternIdentifiers>.DisposeMarshalerArray(array);
        public static void DisposeAbi(IntPtr abi) => MarshalInspectable<object>.DisposeAbi(abi);
        public static unsafe void DisposeAbiArray(object box) => MarshalInspectable<object>.DisposeAbiArray(box);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    internal sealed class SelectionPatternIdentifiersRcwFactoryAttribute : global::WinRT.WinRTImplementationTypeRcwFactoryAttribute
    {
        public override object CreateInstance(global::WinRT.IInspectable inspectable)
            => new global::Microsoft.UI.Xaml.Automation.SelectionPatternIdentifiers(inspectable.ObjRef);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    public struct SpreadsheetItemPatternIdentifiers
    {

        public static IObjectReference CreateMarshaler(global::Microsoft.UI.Xaml.Automation.SpreadsheetItemPatternIdentifiers obj) => obj is null ? null : MarshalInspectable<global::Microsoft.UI.Xaml.Automation.SpreadsheetItemPatternIdentifiers>.CreateMarshaler<IUnknownVftbl>(obj, global::ABI.Microsoft.UI.Xaml.Automation.ISpreadsheetItemPatternIdentifiersMethods.IID);
        public static ObjectReferenceValue CreateMarshaler2(global::Microsoft.UI.Xaml.Automation.SpreadsheetItemPatternIdentifiers obj) => MarshalInspectable<object>.CreateMarshaler2(obj, global::ABI.Microsoft.UI.Xaml.Automation.ISpreadsheetItemPatternIdentifiersMethods.IID);
        public static IntPtr GetAbi(IObjectReference value) => value is null ? IntPtr.Zero : MarshalInterfaceHelper<object>.GetAbi(value);
        public static global::Microsoft.UI.Xaml.Automation.SpreadsheetItemPatternIdentifiers FromAbi(IntPtr thisPtr) => global::Microsoft.UI.Xaml.Automation.SpreadsheetItemPatternIdentifiers.FromAbi(thisPtr);
        public static IntPtr FromManaged(global::Microsoft.UI.Xaml.Automation.SpreadsheetItemPatternIdentifiers obj) => obj is null ? IntPtr.Zero : CreateMarshaler2(obj).Detach();
        public static unsafe MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.SpreadsheetItemPatternIdentifiers>.MarshalerArray CreateMarshalerArray(global::Microsoft.UI.Xaml.Automation.SpreadsheetItemPatternIdentifiers[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.SpreadsheetItemPatternIdentifiers>.CreateMarshalerArray2(array, (o) => CreateMarshaler2(o));
        public static (int length, IntPtr data) GetAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.SpreadsheetItemPatternIdentifiers>.GetAbiArray(box);
        public static unsafe global::Microsoft.UI.Xaml.Automation.SpreadsheetItemPatternIdentifiers[] FromAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.SpreadsheetItemPatternIdentifiers>.FromAbiArray(box, FromAbi);
        public static void CopyAbiArray(global::Microsoft.UI.Xaml.Automation.SpreadsheetItemPatternIdentifiers[] array, object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.SpreadsheetItemPatternIdentifiers>.CopyAbiArray(array, box, FromAbi);
        public static (int length, IntPtr data) FromManagedArray(global::Microsoft.UI.Xaml.Automation.SpreadsheetItemPatternIdentifiers[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.SpreadsheetItemPatternIdentifiers>.FromManagedArray(array, (o) => FromManaged(o));
        public static void DisposeMarshaler(IObjectReference value) => MarshalInspectable<object>.DisposeMarshaler(value);
        public static void DisposeMarshalerArray(MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.SpreadsheetItemPatternIdentifiers>.MarshalerArray array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.SpreadsheetItemPatternIdentifiers>.DisposeMarshalerArray(array);
        public static void DisposeAbi(IntPtr abi) => MarshalInspectable<object>.DisposeAbi(abi);
        public static unsafe void DisposeAbiArray(object box) => MarshalInspectable<object>.DisposeAbiArray(box);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    internal sealed class SpreadsheetItemPatternIdentifiersRcwFactoryAttribute : global::WinRT.WinRTImplementationTypeRcwFactoryAttribute
    {
        public override object CreateInstance(global::WinRT.IInspectable inspectable)
            => new global::Microsoft.UI.Xaml.Automation.SpreadsheetItemPatternIdentifiers(inspectable.ObjRef);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    public struct StylesPatternIdentifiers
    {

        public static IObjectReference CreateMarshaler(global::Microsoft.UI.Xaml.Automation.StylesPatternIdentifiers obj) => obj is null ? null : MarshalInspectable<global::Microsoft.UI.Xaml.Automation.StylesPatternIdentifiers>.CreateMarshaler<IUnknownVftbl>(obj, global::ABI.Microsoft.UI.Xaml.Automation.IStylesPatternIdentifiersMethods.IID);
        public static ObjectReferenceValue CreateMarshaler2(global::Microsoft.UI.Xaml.Automation.StylesPatternIdentifiers obj) => MarshalInspectable<object>.CreateMarshaler2(obj, global::ABI.Microsoft.UI.Xaml.Automation.IStylesPatternIdentifiersMethods.IID);
        public static IntPtr GetAbi(IObjectReference value) => value is null ? IntPtr.Zero : MarshalInterfaceHelper<object>.GetAbi(value);
        public static global::Microsoft.UI.Xaml.Automation.StylesPatternIdentifiers FromAbi(IntPtr thisPtr) => global::Microsoft.UI.Xaml.Automation.StylesPatternIdentifiers.FromAbi(thisPtr);
        public static IntPtr FromManaged(global::Microsoft.UI.Xaml.Automation.StylesPatternIdentifiers obj) => obj is null ? IntPtr.Zero : CreateMarshaler2(obj).Detach();
        public static unsafe MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.StylesPatternIdentifiers>.MarshalerArray CreateMarshalerArray(global::Microsoft.UI.Xaml.Automation.StylesPatternIdentifiers[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.StylesPatternIdentifiers>.CreateMarshalerArray2(array, (o) => CreateMarshaler2(o));
        public static (int length, IntPtr data) GetAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.StylesPatternIdentifiers>.GetAbiArray(box);
        public static unsafe global::Microsoft.UI.Xaml.Automation.StylesPatternIdentifiers[] FromAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.StylesPatternIdentifiers>.FromAbiArray(box, FromAbi);
        public static void CopyAbiArray(global::Microsoft.UI.Xaml.Automation.StylesPatternIdentifiers[] array, object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.StylesPatternIdentifiers>.CopyAbiArray(array, box, FromAbi);
        public static (int length, IntPtr data) FromManagedArray(global::Microsoft.UI.Xaml.Automation.StylesPatternIdentifiers[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.StylesPatternIdentifiers>.FromManagedArray(array, (o) => FromManaged(o));
        public static void DisposeMarshaler(IObjectReference value) => MarshalInspectable<object>.DisposeMarshaler(value);
        public static void DisposeMarshalerArray(MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.StylesPatternIdentifiers>.MarshalerArray array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.StylesPatternIdentifiers>.DisposeMarshalerArray(array);
        public static void DisposeAbi(IntPtr abi) => MarshalInspectable<object>.DisposeAbi(abi);
        public static unsafe void DisposeAbiArray(object box) => MarshalInspectable<object>.DisposeAbiArray(box);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    internal sealed class StylesPatternIdentifiersRcwFactoryAttribute : global::WinRT.WinRTImplementationTypeRcwFactoryAttribute
    {
        public override object CreateInstance(global::WinRT.IInspectable inspectable)
            => new global::Microsoft.UI.Xaml.Automation.StylesPatternIdentifiers(inspectable.ObjRef);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    public struct TableItemPatternIdentifiers
    {

        public static IObjectReference CreateMarshaler(global::Microsoft.UI.Xaml.Automation.TableItemPatternIdentifiers obj) => obj is null ? null : MarshalInspectable<global::Microsoft.UI.Xaml.Automation.TableItemPatternIdentifiers>.CreateMarshaler<IUnknownVftbl>(obj, global::ABI.Microsoft.UI.Xaml.Automation.ITableItemPatternIdentifiersMethods.IID);
        public static ObjectReferenceValue CreateMarshaler2(global::Microsoft.UI.Xaml.Automation.TableItemPatternIdentifiers obj) => MarshalInspectable<object>.CreateMarshaler2(obj, global::ABI.Microsoft.UI.Xaml.Automation.ITableItemPatternIdentifiersMethods.IID);
        public static IntPtr GetAbi(IObjectReference value) => value is null ? IntPtr.Zero : MarshalInterfaceHelper<object>.GetAbi(value);
        public static global::Microsoft.UI.Xaml.Automation.TableItemPatternIdentifiers FromAbi(IntPtr thisPtr) => global::Microsoft.UI.Xaml.Automation.TableItemPatternIdentifiers.FromAbi(thisPtr);
        public static IntPtr FromManaged(global::Microsoft.UI.Xaml.Automation.TableItemPatternIdentifiers obj) => obj is null ? IntPtr.Zero : CreateMarshaler2(obj).Detach();
        public static unsafe MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.TableItemPatternIdentifiers>.MarshalerArray CreateMarshalerArray(global::Microsoft.UI.Xaml.Automation.TableItemPatternIdentifiers[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.TableItemPatternIdentifiers>.CreateMarshalerArray2(array, (o) => CreateMarshaler2(o));
        public static (int length, IntPtr data) GetAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.TableItemPatternIdentifiers>.GetAbiArray(box);
        public static unsafe global::Microsoft.UI.Xaml.Automation.TableItemPatternIdentifiers[] FromAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.TableItemPatternIdentifiers>.FromAbiArray(box, FromAbi);
        public static void CopyAbiArray(global::Microsoft.UI.Xaml.Automation.TableItemPatternIdentifiers[] array, object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.TableItemPatternIdentifiers>.CopyAbiArray(array, box, FromAbi);
        public static (int length, IntPtr data) FromManagedArray(global::Microsoft.UI.Xaml.Automation.TableItemPatternIdentifiers[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.TableItemPatternIdentifiers>.FromManagedArray(array, (o) => FromManaged(o));
        public static void DisposeMarshaler(IObjectReference value) => MarshalInspectable<object>.DisposeMarshaler(value);
        public static void DisposeMarshalerArray(MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.TableItemPatternIdentifiers>.MarshalerArray array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.TableItemPatternIdentifiers>.DisposeMarshalerArray(array);
        public static void DisposeAbi(IntPtr abi) => MarshalInspectable<object>.DisposeAbi(abi);
        public static unsafe void DisposeAbiArray(object box) => MarshalInspectable<object>.DisposeAbiArray(box);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    internal sealed class TableItemPatternIdentifiersRcwFactoryAttribute : global::WinRT.WinRTImplementationTypeRcwFactoryAttribute
    {
        public override object CreateInstance(global::WinRT.IInspectable inspectable)
            => new global::Microsoft.UI.Xaml.Automation.TableItemPatternIdentifiers(inspectable.ObjRef);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    public struct TablePatternIdentifiers
    {

        public static IObjectReference CreateMarshaler(global::Microsoft.UI.Xaml.Automation.TablePatternIdentifiers obj) => obj is null ? null : MarshalInspectable<global::Microsoft.UI.Xaml.Automation.TablePatternIdentifiers>.CreateMarshaler<IUnknownVftbl>(obj, global::ABI.Microsoft.UI.Xaml.Automation.ITablePatternIdentifiersMethods.IID);
        public static ObjectReferenceValue CreateMarshaler2(global::Microsoft.UI.Xaml.Automation.TablePatternIdentifiers obj) => MarshalInspectable<object>.CreateMarshaler2(obj, global::ABI.Microsoft.UI.Xaml.Automation.ITablePatternIdentifiersMethods.IID);
        public static IntPtr GetAbi(IObjectReference value) => value is null ? IntPtr.Zero : MarshalInterfaceHelper<object>.GetAbi(value);
        public static global::Microsoft.UI.Xaml.Automation.TablePatternIdentifiers FromAbi(IntPtr thisPtr) => global::Microsoft.UI.Xaml.Automation.TablePatternIdentifiers.FromAbi(thisPtr);
        public static IntPtr FromManaged(global::Microsoft.UI.Xaml.Automation.TablePatternIdentifiers obj) => obj is null ? IntPtr.Zero : CreateMarshaler2(obj).Detach();
        public static unsafe MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.TablePatternIdentifiers>.MarshalerArray CreateMarshalerArray(global::Microsoft.UI.Xaml.Automation.TablePatternIdentifiers[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.TablePatternIdentifiers>.CreateMarshalerArray2(array, (o) => CreateMarshaler2(o));
        public static (int length, IntPtr data) GetAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.TablePatternIdentifiers>.GetAbiArray(box);
        public static unsafe global::Microsoft.UI.Xaml.Automation.TablePatternIdentifiers[] FromAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.TablePatternIdentifiers>.FromAbiArray(box, FromAbi);
        public static void CopyAbiArray(global::Microsoft.UI.Xaml.Automation.TablePatternIdentifiers[] array, object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.TablePatternIdentifiers>.CopyAbiArray(array, box, FromAbi);
        public static (int length, IntPtr data) FromManagedArray(global::Microsoft.UI.Xaml.Automation.TablePatternIdentifiers[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.TablePatternIdentifiers>.FromManagedArray(array, (o) => FromManaged(o));
        public static void DisposeMarshaler(IObjectReference value) => MarshalInspectable<object>.DisposeMarshaler(value);
        public static void DisposeMarshalerArray(MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.TablePatternIdentifiers>.MarshalerArray array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.TablePatternIdentifiers>.DisposeMarshalerArray(array);
        public static void DisposeAbi(IntPtr abi) => MarshalInspectable<object>.DisposeAbi(abi);
        public static unsafe void DisposeAbiArray(object box) => MarshalInspectable<object>.DisposeAbiArray(box);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    internal sealed class TablePatternIdentifiersRcwFactoryAttribute : global::WinRT.WinRTImplementationTypeRcwFactoryAttribute
    {
        public override object CreateInstance(global::WinRT.IInspectable inspectable)
            => new global::Microsoft.UI.Xaml.Automation.TablePatternIdentifiers(inspectable.ObjRef);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    public struct TogglePatternIdentifiers
    {

        public static IObjectReference CreateMarshaler(global::Microsoft.UI.Xaml.Automation.TogglePatternIdentifiers obj) => obj is null ? null : MarshalInspectable<global::Microsoft.UI.Xaml.Automation.TogglePatternIdentifiers>.CreateMarshaler<IUnknownVftbl>(obj, global::ABI.Microsoft.UI.Xaml.Automation.ITogglePatternIdentifiersMethods.IID);
        public static ObjectReferenceValue CreateMarshaler2(global::Microsoft.UI.Xaml.Automation.TogglePatternIdentifiers obj) => MarshalInspectable<object>.CreateMarshaler2(obj, global::ABI.Microsoft.UI.Xaml.Automation.ITogglePatternIdentifiersMethods.IID);
        public static IntPtr GetAbi(IObjectReference value) => value is null ? IntPtr.Zero : MarshalInterfaceHelper<object>.GetAbi(value);
        public static global::Microsoft.UI.Xaml.Automation.TogglePatternIdentifiers FromAbi(IntPtr thisPtr) => global::Microsoft.UI.Xaml.Automation.TogglePatternIdentifiers.FromAbi(thisPtr);
        public static IntPtr FromManaged(global::Microsoft.UI.Xaml.Automation.TogglePatternIdentifiers obj) => obj is null ? IntPtr.Zero : CreateMarshaler2(obj).Detach();
        public static unsafe MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.TogglePatternIdentifiers>.MarshalerArray CreateMarshalerArray(global::Microsoft.UI.Xaml.Automation.TogglePatternIdentifiers[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.TogglePatternIdentifiers>.CreateMarshalerArray2(array, (o) => CreateMarshaler2(o));
        public static (int length, IntPtr data) GetAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.TogglePatternIdentifiers>.GetAbiArray(box);
        public static unsafe global::Microsoft.UI.Xaml.Automation.TogglePatternIdentifiers[] FromAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.TogglePatternIdentifiers>.FromAbiArray(box, FromAbi);
        public static void CopyAbiArray(global::Microsoft.UI.Xaml.Automation.TogglePatternIdentifiers[] array, object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.TogglePatternIdentifiers>.CopyAbiArray(array, box, FromAbi);
        public static (int length, IntPtr data) FromManagedArray(global::Microsoft.UI.Xaml.Automation.TogglePatternIdentifiers[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.TogglePatternIdentifiers>.FromManagedArray(array, (o) => FromManaged(o));
        public static void DisposeMarshaler(IObjectReference value) => MarshalInspectable<object>.DisposeMarshaler(value);
        public static void DisposeMarshalerArray(MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.TogglePatternIdentifiers>.MarshalerArray array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.TogglePatternIdentifiers>.DisposeMarshalerArray(array);
        public static void DisposeAbi(IntPtr abi) => MarshalInspectable<object>.DisposeAbi(abi);
        public static unsafe void DisposeAbiArray(object box) => MarshalInspectable<object>.DisposeAbiArray(box);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    internal sealed class TogglePatternIdentifiersRcwFactoryAttribute : global::WinRT.WinRTImplementationTypeRcwFactoryAttribute
    {
        public override object CreateInstance(global::WinRT.IInspectable inspectable)
            => new global::Microsoft.UI.Xaml.Automation.TogglePatternIdentifiers(inspectable.ObjRef);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    public struct TransformPattern2Identifiers
    {

        public static IObjectReference CreateMarshaler(global::Microsoft.UI.Xaml.Automation.TransformPattern2Identifiers obj) => obj is null ? null : MarshalInspectable<global::Microsoft.UI.Xaml.Automation.TransformPattern2Identifiers>.CreateMarshaler<IUnknownVftbl>(obj, global::ABI.Microsoft.UI.Xaml.Automation.ITransformPattern2IdentifiersMethods.IID);
        public static ObjectReferenceValue CreateMarshaler2(global::Microsoft.UI.Xaml.Automation.TransformPattern2Identifiers obj) => MarshalInspectable<object>.CreateMarshaler2(obj, global::ABI.Microsoft.UI.Xaml.Automation.ITransformPattern2IdentifiersMethods.IID);
        public static IntPtr GetAbi(IObjectReference value) => value is null ? IntPtr.Zero : MarshalInterfaceHelper<object>.GetAbi(value);
        public static global::Microsoft.UI.Xaml.Automation.TransformPattern2Identifiers FromAbi(IntPtr thisPtr) => global::Microsoft.UI.Xaml.Automation.TransformPattern2Identifiers.FromAbi(thisPtr);
        public static IntPtr FromManaged(global::Microsoft.UI.Xaml.Automation.TransformPattern2Identifiers obj) => obj is null ? IntPtr.Zero : CreateMarshaler2(obj).Detach();
        public static unsafe MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.TransformPattern2Identifiers>.MarshalerArray CreateMarshalerArray(global::Microsoft.UI.Xaml.Automation.TransformPattern2Identifiers[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.TransformPattern2Identifiers>.CreateMarshalerArray2(array, (o) => CreateMarshaler2(o));
        public static (int length, IntPtr data) GetAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.TransformPattern2Identifiers>.GetAbiArray(box);
        public static unsafe global::Microsoft.UI.Xaml.Automation.TransformPattern2Identifiers[] FromAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.TransformPattern2Identifiers>.FromAbiArray(box, FromAbi);
        public static void CopyAbiArray(global::Microsoft.UI.Xaml.Automation.TransformPattern2Identifiers[] array, object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.TransformPattern2Identifiers>.CopyAbiArray(array, box, FromAbi);
        public static (int length, IntPtr data) FromManagedArray(global::Microsoft.UI.Xaml.Automation.TransformPattern2Identifiers[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.TransformPattern2Identifiers>.FromManagedArray(array, (o) => FromManaged(o));
        public static void DisposeMarshaler(IObjectReference value) => MarshalInspectable<object>.DisposeMarshaler(value);
        public static void DisposeMarshalerArray(MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.TransformPattern2Identifiers>.MarshalerArray array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.TransformPattern2Identifiers>.DisposeMarshalerArray(array);
        public static void DisposeAbi(IntPtr abi) => MarshalInspectable<object>.DisposeAbi(abi);
        public static unsafe void DisposeAbiArray(object box) => MarshalInspectable<object>.DisposeAbiArray(box);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    internal sealed class TransformPattern2IdentifiersRcwFactoryAttribute : global::WinRT.WinRTImplementationTypeRcwFactoryAttribute
    {
        public override object CreateInstance(global::WinRT.IInspectable inspectable)
            => new global::Microsoft.UI.Xaml.Automation.TransformPattern2Identifiers(inspectable.ObjRef);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    public struct TransformPatternIdentifiers
    {

        public static IObjectReference CreateMarshaler(global::Microsoft.UI.Xaml.Automation.TransformPatternIdentifiers obj) => obj is null ? null : MarshalInspectable<global::Microsoft.UI.Xaml.Automation.TransformPatternIdentifiers>.CreateMarshaler<IUnknownVftbl>(obj, global::ABI.Microsoft.UI.Xaml.Automation.ITransformPatternIdentifiersMethods.IID);
        public static ObjectReferenceValue CreateMarshaler2(global::Microsoft.UI.Xaml.Automation.TransformPatternIdentifiers obj) => MarshalInspectable<object>.CreateMarshaler2(obj, global::ABI.Microsoft.UI.Xaml.Automation.ITransformPatternIdentifiersMethods.IID);
        public static IntPtr GetAbi(IObjectReference value) => value is null ? IntPtr.Zero : MarshalInterfaceHelper<object>.GetAbi(value);
        public static global::Microsoft.UI.Xaml.Automation.TransformPatternIdentifiers FromAbi(IntPtr thisPtr) => global::Microsoft.UI.Xaml.Automation.TransformPatternIdentifiers.FromAbi(thisPtr);
        public static IntPtr FromManaged(global::Microsoft.UI.Xaml.Automation.TransformPatternIdentifiers obj) => obj is null ? IntPtr.Zero : CreateMarshaler2(obj).Detach();
        public static unsafe MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.TransformPatternIdentifiers>.MarshalerArray CreateMarshalerArray(global::Microsoft.UI.Xaml.Automation.TransformPatternIdentifiers[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.TransformPatternIdentifiers>.CreateMarshalerArray2(array, (o) => CreateMarshaler2(o));
        public static (int length, IntPtr data) GetAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.TransformPatternIdentifiers>.GetAbiArray(box);
        public static unsafe global::Microsoft.UI.Xaml.Automation.TransformPatternIdentifiers[] FromAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.TransformPatternIdentifiers>.FromAbiArray(box, FromAbi);
        public static void CopyAbiArray(global::Microsoft.UI.Xaml.Automation.TransformPatternIdentifiers[] array, object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.TransformPatternIdentifiers>.CopyAbiArray(array, box, FromAbi);
        public static (int length, IntPtr data) FromManagedArray(global::Microsoft.UI.Xaml.Automation.TransformPatternIdentifiers[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.TransformPatternIdentifiers>.FromManagedArray(array, (o) => FromManaged(o));
        public static void DisposeMarshaler(IObjectReference value) => MarshalInspectable<object>.DisposeMarshaler(value);
        public static void DisposeMarshalerArray(MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.TransformPatternIdentifiers>.MarshalerArray array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.TransformPatternIdentifiers>.DisposeMarshalerArray(array);
        public static void DisposeAbi(IntPtr abi) => MarshalInspectable<object>.DisposeAbi(abi);
        public static unsafe void DisposeAbiArray(object box) => MarshalInspectable<object>.DisposeAbiArray(box);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    internal sealed class TransformPatternIdentifiersRcwFactoryAttribute : global::WinRT.WinRTImplementationTypeRcwFactoryAttribute
    {
        public override object CreateInstance(global::WinRT.IInspectable inspectable)
            => new global::Microsoft.UI.Xaml.Automation.TransformPatternIdentifiers(inspectable.ObjRef);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    public struct ValuePatternIdentifiers
    {

        public static IObjectReference CreateMarshaler(global::Microsoft.UI.Xaml.Automation.ValuePatternIdentifiers obj) => obj is null ? null : MarshalInspectable<global::Microsoft.UI.Xaml.Automation.ValuePatternIdentifiers>.CreateMarshaler<IUnknownVftbl>(obj, global::ABI.Microsoft.UI.Xaml.Automation.IValuePatternIdentifiersMethods.IID);
        public static ObjectReferenceValue CreateMarshaler2(global::Microsoft.UI.Xaml.Automation.ValuePatternIdentifiers obj) => MarshalInspectable<object>.CreateMarshaler2(obj, global::ABI.Microsoft.UI.Xaml.Automation.IValuePatternIdentifiersMethods.IID);
        public static IntPtr GetAbi(IObjectReference value) => value is null ? IntPtr.Zero : MarshalInterfaceHelper<object>.GetAbi(value);
        public static global::Microsoft.UI.Xaml.Automation.ValuePatternIdentifiers FromAbi(IntPtr thisPtr) => global::Microsoft.UI.Xaml.Automation.ValuePatternIdentifiers.FromAbi(thisPtr);
        public static IntPtr FromManaged(global::Microsoft.UI.Xaml.Automation.ValuePatternIdentifiers obj) => obj is null ? IntPtr.Zero : CreateMarshaler2(obj).Detach();
        public static unsafe MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.ValuePatternIdentifiers>.MarshalerArray CreateMarshalerArray(global::Microsoft.UI.Xaml.Automation.ValuePatternIdentifiers[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.ValuePatternIdentifiers>.CreateMarshalerArray2(array, (o) => CreateMarshaler2(o));
        public static (int length, IntPtr data) GetAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.ValuePatternIdentifiers>.GetAbiArray(box);
        public static unsafe global::Microsoft.UI.Xaml.Automation.ValuePatternIdentifiers[] FromAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.ValuePatternIdentifiers>.FromAbiArray(box, FromAbi);
        public static void CopyAbiArray(global::Microsoft.UI.Xaml.Automation.ValuePatternIdentifiers[] array, object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.ValuePatternIdentifiers>.CopyAbiArray(array, box, FromAbi);
        public static (int length, IntPtr data) FromManagedArray(global::Microsoft.UI.Xaml.Automation.ValuePatternIdentifiers[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.ValuePatternIdentifiers>.FromManagedArray(array, (o) => FromManaged(o));
        public static void DisposeMarshaler(IObjectReference value) => MarshalInspectable<object>.DisposeMarshaler(value);
        public static void DisposeMarshalerArray(MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.ValuePatternIdentifiers>.MarshalerArray array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.ValuePatternIdentifiers>.DisposeMarshalerArray(array);
        public static void DisposeAbi(IntPtr abi) => MarshalInspectable<object>.DisposeAbi(abi);
        public static unsafe void DisposeAbiArray(object box) => MarshalInspectable<object>.DisposeAbiArray(box);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    internal sealed class ValuePatternIdentifiersRcwFactoryAttribute : global::WinRT.WinRTImplementationTypeRcwFactoryAttribute
    {
        public override object CreateInstance(global::WinRT.IInspectable inspectable)
            => new global::Microsoft.UI.Xaml.Automation.ValuePatternIdentifiers(inspectable.ObjRef);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    public struct WindowPatternIdentifiers
    {

        public static IObjectReference CreateMarshaler(global::Microsoft.UI.Xaml.Automation.WindowPatternIdentifiers obj) => obj is null ? null : MarshalInspectable<global::Microsoft.UI.Xaml.Automation.WindowPatternIdentifiers>.CreateMarshaler<IUnknownVftbl>(obj, global::ABI.Microsoft.UI.Xaml.Automation.IWindowPatternIdentifiersMethods.IID);
        public static ObjectReferenceValue CreateMarshaler2(global::Microsoft.UI.Xaml.Automation.WindowPatternIdentifiers obj) => MarshalInspectable<object>.CreateMarshaler2(obj, global::ABI.Microsoft.UI.Xaml.Automation.IWindowPatternIdentifiersMethods.IID);
        public static IntPtr GetAbi(IObjectReference value) => value is null ? IntPtr.Zero : MarshalInterfaceHelper<object>.GetAbi(value);
        public static global::Microsoft.UI.Xaml.Automation.WindowPatternIdentifiers FromAbi(IntPtr thisPtr) => global::Microsoft.UI.Xaml.Automation.WindowPatternIdentifiers.FromAbi(thisPtr);
        public static IntPtr FromManaged(global::Microsoft.UI.Xaml.Automation.WindowPatternIdentifiers obj) => obj is null ? IntPtr.Zero : CreateMarshaler2(obj).Detach();
        public static unsafe MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.WindowPatternIdentifiers>.MarshalerArray CreateMarshalerArray(global::Microsoft.UI.Xaml.Automation.WindowPatternIdentifiers[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.WindowPatternIdentifiers>.CreateMarshalerArray2(array, (o) => CreateMarshaler2(o));
        public static (int length, IntPtr data) GetAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.WindowPatternIdentifiers>.GetAbiArray(box);
        public static unsafe global::Microsoft.UI.Xaml.Automation.WindowPatternIdentifiers[] FromAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.WindowPatternIdentifiers>.FromAbiArray(box, FromAbi);
        public static void CopyAbiArray(global::Microsoft.UI.Xaml.Automation.WindowPatternIdentifiers[] array, object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.WindowPatternIdentifiers>.CopyAbiArray(array, box, FromAbi);
        public static (int length, IntPtr data) FromManagedArray(global::Microsoft.UI.Xaml.Automation.WindowPatternIdentifiers[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.WindowPatternIdentifiers>.FromManagedArray(array, (o) => FromManaged(o));
        public static void DisposeMarshaler(IObjectReference value) => MarshalInspectable<object>.DisposeMarshaler(value);
        public static void DisposeMarshalerArray(MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.WindowPatternIdentifiers>.MarshalerArray array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.WindowPatternIdentifiers>.DisposeMarshalerArray(array);
        public static void DisposeAbi(IntPtr abi) => MarshalInspectable<object>.DisposeAbi(abi);
        public static unsafe void DisposeAbiArray(object box) => MarshalInspectable<object>.DisposeAbiArray(box);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    internal sealed class WindowPatternIdentifiersRcwFactoryAttribute : global::WinRT.WinRTImplementationTypeRcwFactoryAttribute
    {
        public override object CreateInstance(global::WinRT.IInspectable inspectable)
            => new global::Microsoft.UI.Xaml.Automation.WindowPatternIdentifiers(inspectable.ObjRef);
    }
}
#pragma warning restore CA1416
