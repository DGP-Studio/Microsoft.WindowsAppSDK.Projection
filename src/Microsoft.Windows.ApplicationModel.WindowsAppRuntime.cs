//------------------------------------------------------------------------------
// <auto-generated>
//     This file was generated by cswinrt.exe version 2.2.0.241111.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Diagnostics;
using System.Diagnostics.CodeAnalysis;
using System.Linq.Expressions;
using System.Reflection;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;
using WinRT;
using WinRT.Interop;


#pragma warning disable 0169 // warning CS0169: The field '...' is never used
#pragma warning disable 0649 // warning CS0169: Field '...' is never assigned to
#pragma warning disable CA2207, CA1063, CA1033, CA1001, CA2213

namespace Microsoft.Windows.ApplicationModel.WindowsAppRuntime
{
    [global::Windows.Foundation.Metadata.ContractVersion(262144u)]
    public enum DeploymentContract
    {
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.Windows.ApplicationModel.WindowsAppRuntime")]
    [global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.Windows.ApplicationModel.WindowsAppRuntime.DeploymentInitializeOptions))]
    [global::ABI.Microsoft.Windows.ApplicationModel.WindowsAppRuntime.DeploymentInitializeOptionsRcwFactory]
    [global::WinRT.ProjectedRuntimeClass(typeof(IDeploymentInitializeOptions))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(DeploymentContract), 131072u)]
    public sealed class DeploymentInitializeOptions : global::System.Runtime.InteropServices.ICustomQueryInterface, IWinRTObject, IEquatable<DeploymentInitializeOptions>
    {
        private IntPtr ThisPtr => _inner == null ? (((IWinRTObject)this).NativeObject).ThisPtr : _inner.ThisPtr;

        private readonly IObjectReference _inner = null;



        private IObjectReference _objRef_global__Microsoft_Windows_ApplicationModel_WindowsAppRuntime_IDeploymentInitializeOptions => _inner;
        private volatile IObjectReference ___objRef_global__Microsoft_Windows_ApplicationModel_WindowsAppRuntime_IDeploymentInitializeOptions2;
        private IObjectReference Make___objRef_global__Microsoft_Windows_ApplicationModel_WindowsAppRuntime_IDeploymentInitializeOptions2()
        {
            global::System.Threading.Interlocked.CompareExchange(ref ___objRef_global__Microsoft_Windows_ApplicationModel_WindowsAppRuntime_IDeploymentInitializeOptions2, ((IWinRTObject)this).NativeObject.As<IUnknownVftbl>(global::ABI.Microsoft.Windows.ApplicationModel.WindowsAppRuntime.IDeploymentInitializeOptions2Methods.IID), null);
            return ___objRef_global__Microsoft_Windows_ApplicationModel_WindowsAppRuntime_IDeploymentInitializeOptions2;
        }
        private IObjectReference _objRef_global__Microsoft_Windows_ApplicationModel_WindowsAppRuntime_IDeploymentInitializeOptions2 => ___objRef_global__Microsoft_Windows_ApplicationModel_WindowsAppRuntime_IDeploymentInitializeOptions2 ?? Make___objRef_global__Microsoft_Windows_ApplicationModel_WindowsAppRuntime_IDeploymentInitializeOptions2();



        private static volatile IObjectReference ___objRef_global__Microsoft_Windows_ApplicationModel_WindowsAppRuntime_DeploymentInitializeOptions;
        private static IObjectReference _objRef_global__Microsoft_Windows_ApplicationModel_WindowsAppRuntime_DeploymentInitializeOptions
        {
            get
            { 
                var factory = ___objRef_global__Microsoft_Windows_ApplicationModel_WindowsAppRuntime_DeploymentInitializeOptions;
                if (factory != null && factory.IsInCurrentContext)
                {
                    return factory;
                }
                else
                {
                    return ___objRef_global__Microsoft_Windows_ApplicationModel_WindowsAppRuntime_DeploymentInitializeOptions = ActivationFactory.Get("Microsoft.Windows.ApplicationModel.WindowsAppRuntime.DeploymentInitializeOptions");
                }
            }
        }

        public DeploymentInitializeOptions() 
        {
            _inner = global::ABI.WinRT.Interop.IActivationFactoryMethods.ActivateInstanceUnsafe(_objRef_global__Microsoft_Windows_ApplicationModel_WindowsAppRuntime_DeploymentInitializeOptions, global::ABI.Microsoft.Windows.ApplicationModel.WindowsAppRuntime.IDeploymentInitializeOptionsMethods.IID);
            ComWrappersSupport.RegisterObjectForInterface(this, ThisPtr);
            ComWrappersHelper.Init(_inner, false);

        }

        public static DeploymentInitializeOptions FromAbi(IntPtr thisPtr)
        {
            if (thisPtr == IntPtr.Zero) return null;
            return MarshalInspectable<DeploymentInitializeOptions>.FromAbi(thisPtr);
        }

        internal DeploymentInitializeOptions(IObjectReference objRef)
        {
            _inner = objRef.As(global::ABI.Microsoft.Windows.ApplicationModel.WindowsAppRuntime.IDeploymentInitializeOptionsMethods.IID);

        }


        public static bool operator ==(DeploymentInitializeOptions x, DeploymentInitializeOptions y) => (x?.ThisPtr ?? IntPtr.Zero) == (y?.ThisPtr ?? IntPtr.Zero);
        public static bool operator !=(DeploymentInitializeOptions x, DeploymentInitializeOptions y) => !(x == y);
        public bool Equals(DeploymentInitializeOptions other) => this == other;
        public override bool Equals(object obj) => obj is DeploymentInitializeOptions that && this == that;
        public override int GetHashCode() => ThisPtr.GetHashCode();


        bool IWinRTObject.HasUnwrappableNativeObject => true;
        IObjectReference IWinRTObject.NativeObject => _inner;
        private volatile global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> _queryInterfaceCache;
        private global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> MakeQueryInterfaceCache()
        {
            global::System.Threading.Interlocked.CompareExchange(ref _queryInterfaceCache, new global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference>(), null); 
            return _queryInterfaceCache;
        }
        global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> IWinRTObject.QueryInterfaceCache => _queryInterfaceCache ?? MakeQueryInterfaceCache();
        private volatile global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> _additionalTypeData;
        private global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> MakeAdditionalTypeData()
        {
            global::System.Threading.Interlocked.CompareExchange(ref _additionalTypeData, new global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object>(), null); 
            return _additionalTypeData;
        }
        global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> IWinRTObject.AdditionalTypeData => _additionalTypeData ?? MakeAdditionalTypeData();

        private struct InterfaceTag<I>{};


        public bool ForceDeployment
        {
            get => global::ABI.Microsoft.Windows.ApplicationModel.WindowsAppRuntime.IDeploymentInitializeOptionsMethods.get_ForceDeployment(_objRef_global__Microsoft_Windows_ApplicationModel_WindowsAppRuntime_IDeploymentInitializeOptions);
            set => global::ABI.Microsoft.Windows.ApplicationModel.WindowsAppRuntime.IDeploymentInitializeOptionsMethods.set_ForceDeployment(_objRef_global__Microsoft_Windows_ApplicationModel_WindowsAppRuntime_IDeploymentInitializeOptions, value);
        }

        public bool OnErrorShowUI
        {
            get => global::ABI.Microsoft.Windows.ApplicationModel.WindowsAppRuntime.IDeploymentInitializeOptions2Methods.get_OnErrorShowUI(_objRef_global__Microsoft_Windows_ApplicationModel_WindowsAppRuntime_IDeploymentInitializeOptions2);
            set => global::ABI.Microsoft.Windows.ApplicationModel.WindowsAppRuntime.IDeploymentInitializeOptions2Methods.set_OnErrorShowUI(_objRef_global__Microsoft_Windows_ApplicationModel_WindowsAppRuntime_IDeploymentInitializeOptions2, value);
        }

        private bool IsOverridableInterface(Guid iid) => false;

        global::System.Runtime.InteropServices.CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(ref Guid iid, out IntPtr ppv)
        {
            ppv = IntPtr.Zero;
            if (IsOverridableInterface(iid) || global::WinRT.Interop.IID.IID_IInspectable == iid)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
            }

            if (((IWinRTObject)this).NativeObject.TryAs(iid, out ppv) >= 0)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.Handled;
            }

            return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
        }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.Windows.ApplicationModel.WindowsAppRuntime")][global::Windows.Foundation.Metadata.ContractVersion(typeof(DeploymentContract), 65536u)]
    public static class DeploymentManager
    {

        public static I As<I>() => ActivationFactory.Get("Microsoft.Windows.ApplicationModel.WindowsAppRuntime.DeploymentManager").AsInterface<I>();

        private static volatile IObjectReference ___objRef_global__Microsoft_Windows_ApplicationModel_WindowsAppRuntime_IDeploymentManagerStatics;
        private static IObjectReference _objRef_global__Microsoft_Windows_ApplicationModel_WindowsAppRuntime_IDeploymentManagerStatics
        {
            get
            { 
                var factory = ___objRef_global__Microsoft_Windows_ApplicationModel_WindowsAppRuntime_IDeploymentManagerStatics;
                if (factory != null && factory.IsInCurrentContext)
                {
                    return factory;
                }
                else
                {
                    return ___objRef_global__Microsoft_Windows_ApplicationModel_WindowsAppRuntime_IDeploymentManagerStatics = ActivationFactory.Get("Microsoft.Windows.ApplicationModel.WindowsAppRuntime.DeploymentManager", global::ABI.Microsoft.Windows.ApplicationModel.WindowsAppRuntime.IDeploymentManagerStaticsMethods.IID);
                }
            }
        }

        public static DeploymentResult GetStatus() => global::ABI.Microsoft.Windows.ApplicationModel.WindowsAppRuntime.IDeploymentManagerStaticsMethods.GetStatus(_objRef_global__Microsoft_Windows_ApplicationModel_WindowsAppRuntime_IDeploymentManagerStatics);

        public static DeploymentResult Initialize() => global::ABI.Microsoft.Windows.ApplicationModel.WindowsAppRuntime.IDeploymentManagerStaticsMethods.Initialize(_objRef_global__Microsoft_Windows_ApplicationModel_WindowsAppRuntime_IDeploymentManagerStatics);

        private static volatile IObjectReference ___objRef_global__Microsoft_Windows_ApplicationModel_WindowsAppRuntime_IDeploymentManagerStatics2;
        private static IObjectReference _objRef_global__Microsoft_Windows_ApplicationModel_WindowsAppRuntime_IDeploymentManagerStatics2
        {
            get
            { 
                var factory = ___objRef_global__Microsoft_Windows_ApplicationModel_WindowsAppRuntime_IDeploymentManagerStatics2;
                if (factory != null && factory.IsInCurrentContext)
                {
                    return factory;
                }
                else
                {
                    return ___objRef_global__Microsoft_Windows_ApplicationModel_WindowsAppRuntime_IDeploymentManagerStatics2 = ActivationFactory.Get("Microsoft.Windows.ApplicationModel.WindowsAppRuntime.DeploymentManager", global::ABI.Microsoft.Windows.ApplicationModel.WindowsAppRuntime.IDeploymentManagerStatics2Methods.IID);
                }
            }
        }

        public static DeploymentResult Initialize(DeploymentInitializeOptions deploymentInitializeOptions) => global::ABI.Microsoft.Windows.ApplicationModel.WindowsAppRuntime.IDeploymentManagerStatics2Methods.Initialize(_objRef_global__Microsoft_Windows_ApplicationModel_WindowsAppRuntime_IDeploymentManagerStatics2, deploymentInitializeOptions);
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.Windows.ApplicationModel.WindowsAppRuntime")]
    [global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.Windows.ApplicationModel.WindowsAppRuntime.DeploymentResult))]
    [global::ABI.Microsoft.Windows.ApplicationModel.WindowsAppRuntime.DeploymentResultRcwFactory]
    [global::WinRT.ProjectedRuntimeClass(typeof(IDeploymentResult))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(DeploymentContract), 65536u)]
    public sealed class DeploymentResult : global::System.Runtime.InteropServices.ICustomQueryInterface, IWinRTObject, IEquatable<DeploymentResult>
    {
        private IntPtr ThisPtr => _inner == null ? (((IWinRTObject)this).NativeObject).ThisPtr : _inner.ThisPtr;

        private readonly IObjectReference _inner = null;



        private IObjectReference _objRef_global__Microsoft_Windows_ApplicationModel_WindowsAppRuntime_IDeploymentResult => _inner;


        private static class _IDeploymentResultFactoryMethods
        {
            public static unsafe IntPtr CreateInstance(IObjectReference _obj, DeploymentStatus status, global::System.Exception extendedError)
            {
                var ThisPtr = _obj.ThisPtr;

                global::ABI.System.Exception.Marshaler __extendedError = default;
                IntPtr __retval = default;
                try
                {
                    __extendedError = global::ABI.System.Exception.CreateMarshaler(extendedError);
                    global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, DeploymentStatus, global::ABI.System.Exception, IntPtr*, int>**)ThisPtr)[6](ThisPtr, status, global::ABI.System.Exception.GetAbi(__extendedError), &__retval));
                    global::System.GC.KeepAlive(_obj);
                    return __retval;
                }
                finally
                {
                    global::ABI.System.Exception.DisposeMarshaler(__extendedError);
                }
            }
        }

        private static volatile IObjectReference ___objRef_global__Microsoft_Windows_ApplicationModel_WindowsAppRuntime_IDeploymentResultFactory;
        private static IObjectReference _objRef_global__Microsoft_Windows_ApplicationModel_WindowsAppRuntime_IDeploymentResultFactory
        {
            get
            { 
                var factory = ___objRef_global__Microsoft_Windows_ApplicationModel_WindowsAppRuntime_IDeploymentResultFactory;
                if (factory != null && factory.IsInCurrentContext)
                {
                    return factory;
                }
                else
                {
                    return ___objRef_global__Microsoft_Windows_ApplicationModel_WindowsAppRuntime_IDeploymentResultFactory = ActivationFactory.Get("Microsoft.Windows.ApplicationModel.WindowsAppRuntime.DeploymentResult", global::ABI.Microsoft.Windows.ApplicationModel.WindowsAppRuntime.IDeploymentResultFactoryMethods.IID);
                }
            }
        }

        public DeploymentResult(DeploymentStatus status, global::System.Exception extendedError) 
        { 
        IntPtr ptr = (_IDeploymentResultFactoryMethods.CreateInstance(_objRef_global__Microsoft_Windows_ApplicationModel_WindowsAppRuntime_IDeploymentResultFactory, status, extendedError)); 
        try 
        { 
        _inner = ComWrappersSupport.GetObjectReferenceForInterface(ptr, global::ABI.Microsoft.Windows.ApplicationModel.WindowsAppRuntime.IDeploymentResultMethods.IID, false); 

        } 
        finally 
        { 
        MarshalInspectable<object>.DisposeAbi(ptr); 
        }

        ComWrappersSupport.RegisterObjectForInterface(this, ThisPtr);
        ComWrappersHelper.Init(_inner, false);
        }

        public static DeploymentResult FromAbi(IntPtr thisPtr)
        {
            if (thisPtr == IntPtr.Zero) return null;
            return MarshalInspectable<DeploymentResult>.FromAbi(thisPtr);
        }

        internal DeploymentResult(IObjectReference objRef)
        {
            _inner = objRef.As(global::ABI.Microsoft.Windows.ApplicationModel.WindowsAppRuntime.IDeploymentResultMethods.IID);

        }


        public static bool operator ==(DeploymentResult x, DeploymentResult y) => (x?.ThisPtr ?? IntPtr.Zero) == (y?.ThisPtr ?? IntPtr.Zero);
        public static bool operator !=(DeploymentResult x, DeploymentResult y) => !(x == y);
        public bool Equals(DeploymentResult other) => this == other;
        public override bool Equals(object obj) => obj is DeploymentResult that && this == that;
        public override int GetHashCode() => ThisPtr.GetHashCode();


        bool IWinRTObject.HasUnwrappableNativeObject => true;
        IObjectReference IWinRTObject.NativeObject => _inner;
        private volatile global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> _queryInterfaceCache;
        private global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> MakeQueryInterfaceCache()
        {
            global::System.Threading.Interlocked.CompareExchange(ref _queryInterfaceCache, new global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference>(), null); 
            return _queryInterfaceCache;
        }
        global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> IWinRTObject.QueryInterfaceCache => _queryInterfaceCache ?? MakeQueryInterfaceCache();
        private volatile global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> _additionalTypeData;
        private global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> MakeAdditionalTypeData()
        {
            global::System.Threading.Interlocked.CompareExchange(ref _additionalTypeData, new global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object>(), null); 
            return _additionalTypeData;
        }
        global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> IWinRTObject.AdditionalTypeData => _additionalTypeData ?? MakeAdditionalTypeData();

        private struct InterfaceTag<I>{};


        public global::System.Exception ExtendedError => global::ABI.Microsoft.Windows.ApplicationModel.WindowsAppRuntime.IDeploymentResultMethods.get_ExtendedError(_objRef_global__Microsoft_Windows_ApplicationModel_WindowsAppRuntime_IDeploymentResult);

        public DeploymentStatus Status => global::ABI.Microsoft.Windows.ApplicationModel.WindowsAppRuntime.IDeploymentResultMethods.get_Status(_objRef_global__Microsoft_Windows_ApplicationModel_WindowsAppRuntime_IDeploymentResult);

        private bool IsOverridableInterface(Guid iid) => false;

        global::System.Runtime.InteropServices.CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(ref Guid iid, out IntPtr ppv)
        {
            ppv = IntPtr.Zero;
            if (IsOverridableInterface(iid) || global::WinRT.Interop.IID.IID_IInspectable == iid)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
            }

            if (((IWinRTObject)this).NativeObject.TryAs(iid, out ppv) >= 0)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.Handled;
            }

            return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
        }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.Windows.ApplicationModel.WindowsAppRuntime")][global::WinRT.WinRTExposedType(typeof(global::WinRT.EnumTypeDetails<DeploymentStatus>))][global::Windows.Foundation.Metadata.ContractVersion(typeof(DeploymentContract), 65536u)]
    public enum DeploymentStatus : int
    {
        Unknown = unchecked((int)0),
        Ok = unchecked((int)0x1),
        PackageInstallRequired = unchecked((int)0x2),
        PackageInstallFailed = unchecked((int)0x3),
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.Windows.ApplicationModel.WindowsAppRuntime")][Guid("578A5FD4-9D7F-5E01-97B8-D8EA61DB4027")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.Windows.ApplicationModel.WindowsAppRuntime.IDeploymentInitializeOptions))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(DeploymentContract), 131072u)]
    internal interface IDeploymentInitializeOptions
    {
        bool ForceDeployment { get; set; }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.Windows.ApplicationModel.WindowsAppRuntime")][Guid("AD902820-149F-5E16-A566-9B2363997DE2")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.Windows.ApplicationModel.WindowsAppRuntime.IDeploymentInitializeOptions2))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(DeploymentContract), 196608u)]
    internal interface IDeploymentInitializeOptions2
    {
        bool OnErrorShowUI { get; set; }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.Windows.ApplicationModel.WindowsAppRuntime")][Guid("6782A9D0-BFD0-50EA-81B0-32E9ED37CDF0")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.Windows.ApplicationModel.WindowsAppRuntime.IDeploymentManagerStatics))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(DeploymentContract), 65536u)]
    internal interface IDeploymentManagerStatics
    {
        DeploymentResult GetStatus();
        [global::Windows.Foundation.Metadata.Overload(@"Initialize")]
        DeploymentResult Initialize();
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.Windows.ApplicationModel.WindowsAppRuntime")][Guid("F49C16EE-6EBC-5F15-BEBB-2BA49F8C0B30")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.Windows.ApplicationModel.WindowsAppRuntime.IDeploymentManagerStatics2))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(DeploymentContract), 131072u)]
    internal interface IDeploymentManagerStatics2
    {
        [global::Windows.Foundation.Metadata.Overload(@"Initialize")]
        DeploymentResult Initialize(DeploymentInitializeOptions deploymentInitializeOptions);
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.Windows.ApplicationModel.WindowsAppRuntime")][Guid("27203F62-463D-587A-8EB7-870098901078")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.Windows.ApplicationModel.WindowsAppRuntime.IDeploymentResult))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(DeploymentContract), 65536u)]
    internal interface IDeploymentResult
    {
        global::System.Exception ExtendedError { get; }
        DeploymentStatus Status { get; }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.Windows.ApplicationModel.WindowsAppRuntime")][Guid("ACD7BDAE-4AE6-5CAC-8205-1E8C305F953B")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.Windows.ApplicationModel.WindowsAppRuntime.IDeploymentResultFactory))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(DeploymentContract), 65536u)]
    internal interface IDeploymentResultFactory
    {
        DeploymentResult CreateInstance(DeploymentStatus status, global::System.Exception extendedError);
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.Windows.ApplicationModel.WindowsAppRuntime")][Guid("ED9BE8FF-073C-5C66-BF97-EF0CE67405C3")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.Windows.ApplicationModel.WindowsAppRuntime.IReleaseInfoStatics))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(VersionInfoContract), 65536u)]
    internal interface IReleaseInfoStatics
    {
        string AsString { get; }
        ushort Major { get; }
        ushort Minor { get; }
        ushort Patch { get; }
        string VersionTag { get; }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.Windows.ApplicationModel.WindowsAppRuntime")][Guid("D7403BD9-B25D-5B8F-8DE1-9DCB57D99F6C")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.Windows.ApplicationModel.WindowsAppRuntime.IRuntimeCompatibilityOptions))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(RuntimeCompatibilityContract), 65536u)]
    internal interface IRuntimeCompatibilityOptions
    {
        void Apply();
        global::System.Collections.Generic.IList<RuntimeCompatibilityChange> DisabledChanges { get; }
        WindowsAppRuntimeVersion PatchLevel1 { get; set; }
        WindowsAppRuntimeVersion PatchLevel2 { get; set; }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.Windows.ApplicationModel.WindowsAppRuntime")][Guid("E5CB9549-8951-590E-A753-8F281CD77AB5")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.Windows.ApplicationModel.WindowsAppRuntime.IRuntimeInfoStatics))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(VersionInfoContract), 65536u)]
    internal interface IRuntimeInfoStatics
    {
        string AsString { get; }
        global::Windows.ApplicationModel.PackageVersion Version { get; }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.Windows.ApplicationModel.WindowsAppRuntime")][global::Windows.Foundation.Metadata.ContractVersion(typeof(VersionInfoContract), 65536u)]
    public static class ReleaseInfo
    {

        public static I As<I>() => ActivationFactory.Get("Microsoft.Windows.ApplicationModel.WindowsAppRuntime.ReleaseInfo").AsInterface<I>();

        private static volatile IObjectReference ___objRef_global__Microsoft_Windows_ApplicationModel_WindowsAppRuntime_IReleaseInfoStatics;
        private static IObjectReference _objRef_global__Microsoft_Windows_ApplicationModel_WindowsAppRuntime_IReleaseInfoStatics
        {
            get
            { 
                var factory = ___objRef_global__Microsoft_Windows_ApplicationModel_WindowsAppRuntime_IReleaseInfoStatics;
                if (factory != null && factory.IsInCurrentContext)
                {
                    return factory;
                }
                else
                {
                    return ___objRef_global__Microsoft_Windows_ApplicationModel_WindowsAppRuntime_IReleaseInfoStatics = ActivationFactory.Get("Microsoft.Windows.ApplicationModel.WindowsAppRuntime.ReleaseInfo", global::ABI.Microsoft.Windows.ApplicationModel.WindowsAppRuntime.IReleaseInfoStaticsMethods.IID);
                }
            }
        }

        public static string AsString => global::ABI.Microsoft.Windows.ApplicationModel.WindowsAppRuntime.IReleaseInfoStaticsMethods.get_AsString(_objRef_global__Microsoft_Windows_ApplicationModel_WindowsAppRuntime_IReleaseInfoStatics);

        public static ushort Major => global::ABI.Microsoft.Windows.ApplicationModel.WindowsAppRuntime.IReleaseInfoStaticsMethods.get_Major(_objRef_global__Microsoft_Windows_ApplicationModel_WindowsAppRuntime_IReleaseInfoStatics);

        public static ushort Minor => global::ABI.Microsoft.Windows.ApplicationModel.WindowsAppRuntime.IReleaseInfoStaticsMethods.get_Minor(_objRef_global__Microsoft_Windows_ApplicationModel_WindowsAppRuntime_IReleaseInfoStatics);

        public static ushort Patch => global::ABI.Microsoft.Windows.ApplicationModel.WindowsAppRuntime.IReleaseInfoStaticsMethods.get_Patch(_objRef_global__Microsoft_Windows_ApplicationModel_WindowsAppRuntime_IReleaseInfoStatics);

        public static string VersionTag => global::ABI.Microsoft.Windows.ApplicationModel.WindowsAppRuntime.IReleaseInfoStaticsMethods.get_VersionTag(_objRef_global__Microsoft_Windows_ApplicationModel_WindowsAppRuntime_IReleaseInfoStatics);
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.Windows.ApplicationModel.WindowsAppRuntime")][global::WinRT.WinRTExposedType(typeof(global::WinRT.EnumTypeDetails<RuntimeCompatibilityChange>))][global::Windows.Foundation.Metadata.ContractVersion(typeof(RuntimeCompatibilityContract), 65536u)]
    public enum RuntimeCompatibilityChange : int
    {
        None = unchecked((int)0),
        EnsurePackageReadyVersionSupercedence = unchecked((int)0x35d343e),
        FixPopupClosingReentrancyCrash = unchecked((int)0x363c856),
        FixPopupUnloadingCrash = unchecked((int)0x360f820),
        FixRandomUIFreezeInDispatcher = unchecked((int)0x35ed0a4),
        FixSetProgressBarIndicatorWidthCrash = unchecked((int)0x3626302),
        FixStuckPointerInputQueue = unchecked((int)0x35ff6ad),
        FixWebViewVisibilityReentrancyCrash = unchecked((int)0x36381f9),
        FixWindowCloseFocusCrash = unchecked((int)0x363d112),
    }
    [global::Windows.Foundation.Metadata.ContractVersion(65536u)]
    public enum RuntimeCompatibilityContract
    {
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.Windows.ApplicationModel.WindowsAppRuntime")]
    [global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.Windows.ApplicationModel.WindowsAppRuntime.RuntimeCompatibilityOptions))]
    [global::ABI.Microsoft.Windows.ApplicationModel.WindowsAppRuntime.RuntimeCompatibilityOptionsRcwFactory]
    [global::WinRT.ProjectedRuntimeClass(typeof(IRuntimeCompatibilityOptions))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(RuntimeCompatibilityContract), 65536u)]
    public sealed class RuntimeCompatibilityOptions : global::System.Runtime.InteropServices.ICustomQueryInterface, IWinRTObject, IEquatable<RuntimeCompatibilityOptions>
    {
        private IntPtr ThisPtr => _inner == null ? (((IWinRTObject)this).NativeObject).ThisPtr : _inner.ThisPtr;

        private readonly IObjectReference _inner = null;



        private IObjectReference _objRef_global__Microsoft_Windows_ApplicationModel_WindowsAppRuntime_IRuntimeCompatibilityOptions => _inner;


        private static volatile IObjectReference ___objRef_global__Microsoft_Windows_ApplicationModel_WindowsAppRuntime_RuntimeCompatibilityOptions;
        private static IObjectReference _objRef_global__Microsoft_Windows_ApplicationModel_WindowsAppRuntime_RuntimeCompatibilityOptions
        {
            get
            { 
                var factory = ___objRef_global__Microsoft_Windows_ApplicationModel_WindowsAppRuntime_RuntimeCompatibilityOptions;
                if (factory != null && factory.IsInCurrentContext)
                {
                    return factory;
                }
                else
                {
                    return ___objRef_global__Microsoft_Windows_ApplicationModel_WindowsAppRuntime_RuntimeCompatibilityOptions = ActivationFactory.Get("Microsoft.Windows.ApplicationModel.WindowsAppRuntime.RuntimeCompatibilityOptions");
                }
            }
        }

        public RuntimeCompatibilityOptions() 
        {
            _inner = global::ABI.WinRT.Interop.IActivationFactoryMethods.ActivateInstanceUnsafe(_objRef_global__Microsoft_Windows_ApplicationModel_WindowsAppRuntime_RuntimeCompatibilityOptions, global::ABI.Microsoft.Windows.ApplicationModel.WindowsAppRuntime.IRuntimeCompatibilityOptionsMethods.IID);
            ComWrappersSupport.RegisterObjectForInterface(this, ThisPtr);
            ComWrappersHelper.Init(_inner, false);

        }

        public static RuntimeCompatibilityOptions FromAbi(IntPtr thisPtr)
        {
            if (thisPtr == IntPtr.Zero) return null;
            return MarshalInspectable<RuntimeCompatibilityOptions>.FromAbi(thisPtr);
        }

        internal RuntimeCompatibilityOptions(IObjectReference objRef)
        {
            _inner = objRef.As(global::ABI.Microsoft.Windows.ApplicationModel.WindowsAppRuntime.IRuntimeCompatibilityOptionsMethods.IID);

        }


        public static bool operator ==(RuntimeCompatibilityOptions x, RuntimeCompatibilityOptions y) => (x?.ThisPtr ?? IntPtr.Zero) == (y?.ThisPtr ?? IntPtr.Zero);
        public static bool operator !=(RuntimeCompatibilityOptions x, RuntimeCompatibilityOptions y) => !(x == y);
        public bool Equals(RuntimeCompatibilityOptions other) => this == other;
        public override bool Equals(object obj) => obj is RuntimeCompatibilityOptions that && this == that;
        public override int GetHashCode() => ThisPtr.GetHashCode();


        bool IWinRTObject.HasUnwrappableNativeObject => true;
        IObjectReference IWinRTObject.NativeObject => _inner;
        private volatile global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> _queryInterfaceCache;
        private global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> MakeQueryInterfaceCache()
        {
            global::System.Threading.Interlocked.CompareExchange(ref _queryInterfaceCache, new global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference>(), null); 
            return _queryInterfaceCache;
        }
        global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> IWinRTObject.QueryInterfaceCache => _queryInterfaceCache ?? MakeQueryInterfaceCache();
        private volatile global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> _additionalTypeData;
        private global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> MakeAdditionalTypeData()
        {
            global::System.Threading.Interlocked.CompareExchange(ref _additionalTypeData, new global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object>(), null); 
            return _additionalTypeData;
        }
        global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> IWinRTObject.AdditionalTypeData => _additionalTypeData ?? MakeAdditionalTypeData();

        private struct InterfaceTag<I>{};


        public void Apply() => global::ABI.Microsoft.Windows.ApplicationModel.WindowsAppRuntime.IRuntimeCompatibilityOptionsMethods.Apply(_objRef_global__Microsoft_Windows_ApplicationModel_WindowsAppRuntime_IRuntimeCompatibilityOptions);

        public global::System.Collections.Generic.IList<RuntimeCompatibilityChange> DisabledChanges => global::ABI.Microsoft.Windows.ApplicationModel.WindowsAppRuntime.IRuntimeCompatibilityOptionsMethods.get_DisabledChanges(_objRef_global__Microsoft_Windows_ApplicationModel_WindowsAppRuntime_IRuntimeCompatibilityOptions);

        public WindowsAppRuntimeVersion PatchLevel1
        {
            get => global::ABI.Microsoft.Windows.ApplicationModel.WindowsAppRuntime.IRuntimeCompatibilityOptionsMethods.get_PatchLevel1(_objRef_global__Microsoft_Windows_ApplicationModel_WindowsAppRuntime_IRuntimeCompatibilityOptions);
            set => global::ABI.Microsoft.Windows.ApplicationModel.WindowsAppRuntime.IRuntimeCompatibilityOptionsMethods.set_PatchLevel1(_objRef_global__Microsoft_Windows_ApplicationModel_WindowsAppRuntime_IRuntimeCompatibilityOptions, value);
        }

        public WindowsAppRuntimeVersion PatchLevel2
        {
            get => global::ABI.Microsoft.Windows.ApplicationModel.WindowsAppRuntime.IRuntimeCompatibilityOptionsMethods.get_PatchLevel2(_objRef_global__Microsoft_Windows_ApplicationModel_WindowsAppRuntime_IRuntimeCompatibilityOptions);
            set => global::ABI.Microsoft.Windows.ApplicationModel.WindowsAppRuntime.IRuntimeCompatibilityOptionsMethods.set_PatchLevel2(_objRef_global__Microsoft_Windows_ApplicationModel_WindowsAppRuntime_IRuntimeCompatibilityOptions, value);
        }

        private bool IsOverridableInterface(Guid iid) => false;

        global::System.Runtime.InteropServices.CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(ref Guid iid, out IntPtr ppv)
        {
            ppv = IntPtr.Zero;
            if (IsOverridableInterface(iid) || global::WinRT.Interop.IID.IID_IInspectable == iid)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
            }

            if (((IWinRTObject)this).NativeObject.TryAs(iid, out ppv) >= 0)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.Handled;
            }

            return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
        }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.Windows.ApplicationModel.WindowsAppRuntime")][global::Windows.Foundation.Metadata.ContractVersion(typeof(VersionInfoContract), 65536u)]
    public static class RuntimeInfo
    {

        public static I As<I>() => ActivationFactory.Get("Microsoft.Windows.ApplicationModel.WindowsAppRuntime.RuntimeInfo").AsInterface<I>();

        private static volatile IObjectReference ___objRef_global__Microsoft_Windows_ApplicationModel_WindowsAppRuntime_IRuntimeInfoStatics;
        private static IObjectReference _objRef_global__Microsoft_Windows_ApplicationModel_WindowsAppRuntime_IRuntimeInfoStatics
        {
            get
            { 
                var factory = ___objRef_global__Microsoft_Windows_ApplicationModel_WindowsAppRuntime_IRuntimeInfoStatics;
                if (factory != null && factory.IsInCurrentContext)
                {
                    return factory;
                }
                else
                {
                    return ___objRef_global__Microsoft_Windows_ApplicationModel_WindowsAppRuntime_IRuntimeInfoStatics = ActivationFactory.Get("Microsoft.Windows.ApplicationModel.WindowsAppRuntime.RuntimeInfo", global::ABI.Microsoft.Windows.ApplicationModel.WindowsAppRuntime.IRuntimeInfoStaticsMethods.IID);
                }
            }
        }

        public static string AsString => global::ABI.Microsoft.Windows.ApplicationModel.WindowsAppRuntime.IRuntimeInfoStaticsMethods.get_AsString(_objRef_global__Microsoft_Windows_ApplicationModel_WindowsAppRuntime_IRuntimeInfoStatics);

        public static global::Windows.ApplicationModel.PackageVersion Version => global::ABI.Microsoft.Windows.ApplicationModel.WindowsAppRuntime.IRuntimeInfoStaticsMethods.get_Version(_objRef_global__Microsoft_Windows_ApplicationModel_WindowsAppRuntime_IRuntimeInfoStatics);
    }
    [global::Windows.Foundation.Metadata.ContractVersion(65536u)]
    public enum VersionInfoContract
    {
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.Windows.ApplicationModel.WindowsAppRuntime", "struct(Microsoft.Windows.ApplicationModel.WindowsAppRuntime.WindowsAppRuntimeVersion;u4;u4;u4)")][global::WinRT.WindowsRuntimeHelperType][global::WinRT.WinRTExposedType(typeof(global::WinRT.StructTypeDetails<WindowsAppRuntimeVersion, WindowsAppRuntimeVersion>))][global::Windows.Foundation.Metadata.ContractVersion(typeof(RuntimeCompatibilityContract), 65536u)]
    public struct WindowsAppRuntimeVersion: IEquatable<WindowsAppRuntimeVersion>
    {
        public uint Major;
        public uint Minor;
        public uint Patch;

        public WindowsAppRuntimeVersion(uint _Major, uint _Minor, uint _Patch)
        {
            Major = _Major; Minor = _Minor; Patch = _Patch; 
        }

        public static bool operator ==(WindowsAppRuntimeVersion x, WindowsAppRuntimeVersion y) => x.Major == y.Major && x.Minor == y.Minor && x.Patch == y.Patch;
        public static bool operator !=(WindowsAppRuntimeVersion x, WindowsAppRuntimeVersion y) => !(x == y);
        public bool Equals(WindowsAppRuntimeVersion other) => this == other;
        public override bool Equals(object obj) => obj is WindowsAppRuntimeVersion that && this == that;
        public override int GetHashCode() => Major.GetHashCode() ^ Minor.GetHashCode() ^ Patch.GetHashCode();
    }
}

#pragma warning disable CA1416
namespace ABI.Microsoft.Windows.ApplicationModel.WindowsAppRuntime
{
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    public struct DeploymentInitializeOptions
    {

        public static IObjectReference CreateMarshaler(global::Microsoft.Windows.ApplicationModel.WindowsAppRuntime.DeploymentInitializeOptions obj) => obj is null ? null : MarshalInspectable<global::Microsoft.Windows.ApplicationModel.WindowsAppRuntime.DeploymentInitializeOptions>.CreateMarshaler<IUnknownVftbl>(obj, global::ABI.Microsoft.Windows.ApplicationModel.WindowsAppRuntime.IDeploymentInitializeOptionsMethods.IID);
        public static ObjectReferenceValue CreateMarshaler2(global::Microsoft.Windows.ApplicationModel.WindowsAppRuntime.DeploymentInitializeOptions obj) => MarshalInspectable<object>.CreateMarshaler2(obj, global::ABI.Microsoft.Windows.ApplicationModel.WindowsAppRuntime.IDeploymentInitializeOptionsMethods.IID);
        public static IntPtr GetAbi(IObjectReference value) => value is null ? IntPtr.Zero : MarshalInterfaceHelper<object>.GetAbi(value);
        public static global::Microsoft.Windows.ApplicationModel.WindowsAppRuntime.DeploymentInitializeOptions FromAbi(IntPtr thisPtr) => global::Microsoft.Windows.ApplicationModel.WindowsAppRuntime.DeploymentInitializeOptions.FromAbi(thisPtr);
        public static IntPtr FromManaged(global::Microsoft.Windows.ApplicationModel.WindowsAppRuntime.DeploymentInitializeOptions obj) => obj is null ? IntPtr.Zero : CreateMarshaler2(obj).Detach();
        public static unsafe MarshalInterfaceHelper<global::Microsoft.Windows.ApplicationModel.WindowsAppRuntime.DeploymentInitializeOptions>.MarshalerArray CreateMarshalerArray(global::Microsoft.Windows.ApplicationModel.WindowsAppRuntime.DeploymentInitializeOptions[] array) => MarshalInterfaceHelper<global::Microsoft.Windows.ApplicationModel.WindowsAppRuntime.DeploymentInitializeOptions>.CreateMarshalerArray2(array, (o) => CreateMarshaler2(o));
        public static (int length, IntPtr data) GetAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.Windows.ApplicationModel.WindowsAppRuntime.DeploymentInitializeOptions>.GetAbiArray(box);
        public static unsafe global::Microsoft.Windows.ApplicationModel.WindowsAppRuntime.DeploymentInitializeOptions[] FromAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.Windows.ApplicationModel.WindowsAppRuntime.DeploymentInitializeOptions>.FromAbiArray(box, FromAbi);
        public static void CopyAbiArray(global::Microsoft.Windows.ApplicationModel.WindowsAppRuntime.DeploymentInitializeOptions[] array, object box) => MarshalInterfaceHelper<global::Microsoft.Windows.ApplicationModel.WindowsAppRuntime.DeploymentInitializeOptions>.CopyAbiArray(array, box, FromAbi);
        public static (int length, IntPtr data) FromManagedArray(global::Microsoft.Windows.ApplicationModel.WindowsAppRuntime.DeploymentInitializeOptions[] array) => MarshalInterfaceHelper<global::Microsoft.Windows.ApplicationModel.WindowsAppRuntime.DeploymentInitializeOptions>.FromManagedArray(array, (o) => FromManaged(o));
        public static void DisposeMarshaler(IObjectReference value) => MarshalInspectable<object>.DisposeMarshaler(value);
        public static void DisposeMarshalerArray(MarshalInterfaceHelper<global::Microsoft.Windows.ApplicationModel.WindowsAppRuntime.DeploymentInitializeOptions>.MarshalerArray array) => MarshalInterfaceHelper<global::Microsoft.Windows.ApplicationModel.WindowsAppRuntime.DeploymentInitializeOptions>.DisposeMarshalerArray(array);
        public static void DisposeAbi(IntPtr abi) => MarshalInspectable<object>.DisposeAbi(abi);
        public static unsafe void DisposeAbiArray(object box) => MarshalInspectable<object>.DisposeAbiArray(box);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    internal sealed class DeploymentInitializeOptionsRcwFactoryAttribute : global::WinRT.WinRTImplementationTypeRcwFactoryAttribute
    {
        public override object CreateInstance(global::WinRT.IInspectable inspectable)
            => new global::Microsoft.Windows.ApplicationModel.WindowsAppRuntime.DeploymentInitializeOptions(inspectable.ObjRef);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    public struct DeploymentResult
    {

        public static IObjectReference CreateMarshaler(global::Microsoft.Windows.ApplicationModel.WindowsAppRuntime.DeploymentResult obj) => obj is null ? null : MarshalInspectable<global::Microsoft.Windows.ApplicationModel.WindowsAppRuntime.DeploymentResult>.CreateMarshaler<IUnknownVftbl>(obj, global::ABI.Microsoft.Windows.ApplicationModel.WindowsAppRuntime.IDeploymentResultMethods.IID);
        public static ObjectReferenceValue CreateMarshaler2(global::Microsoft.Windows.ApplicationModel.WindowsAppRuntime.DeploymentResult obj) => MarshalInspectable<object>.CreateMarshaler2(obj, global::ABI.Microsoft.Windows.ApplicationModel.WindowsAppRuntime.IDeploymentResultMethods.IID);
        public static IntPtr GetAbi(IObjectReference value) => value is null ? IntPtr.Zero : MarshalInterfaceHelper<object>.GetAbi(value);
        public static global::Microsoft.Windows.ApplicationModel.WindowsAppRuntime.DeploymentResult FromAbi(IntPtr thisPtr) => global::Microsoft.Windows.ApplicationModel.WindowsAppRuntime.DeploymentResult.FromAbi(thisPtr);
        public static IntPtr FromManaged(global::Microsoft.Windows.ApplicationModel.WindowsAppRuntime.DeploymentResult obj) => obj is null ? IntPtr.Zero : CreateMarshaler2(obj).Detach();
        public static unsafe MarshalInterfaceHelper<global::Microsoft.Windows.ApplicationModel.WindowsAppRuntime.DeploymentResult>.MarshalerArray CreateMarshalerArray(global::Microsoft.Windows.ApplicationModel.WindowsAppRuntime.DeploymentResult[] array) => MarshalInterfaceHelper<global::Microsoft.Windows.ApplicationModel.WindowsAppRuntime.DeploymentResult>.CreateMarshalerArray2(array, (o) => CreateMarshaler2(o));
        public static (int length, IntPtr data) GetAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.Windows.ApplicationModel.WindowsAppRuntime.DeploymentResult>.GetAbiArray(box);
        public static unsafe global::Microsoft.Windows.ApplicationModel.WindowsAppRuntime.DeploymentResult[] FromAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.Windows.ApplicationModel.WindowsAppRuntime.DeploymentResult>.FromAbiArray(box, FromAbi);
        public static void CopyAbiArray(global::Microsoft.Windows.ApplicationModel.WindowsAppRuntime.DeploymentResult[] array, object box) => MarshalInterfaceHelper<global::Microsoft.Windows.ApplicationModel.WindowsAppRuntime.DeploymentResult>.CopyAbiArray(array, box, FromAbi);
        public static (int length, IntPtr data) FromManagedArray(global::Microsoft.Windows.ApplicationModel.WindowsAppRuntime.DeploymentResult[] array) => MarshalInterfaceHelper<global::Microsoft.Windows.ApplicationModel.WindowsAppRuntime.DeploymentResult>.FromManagedArray(array, (o) => FromManaged(o));
        public static void DisposeMarshaler(IObjectReference value) => MarshalInspectable<object>.DisposeMarshaler(value);
        public static void DisposeMarshalerArray(MarshalInterfaceHelper<global::Microsoft.Windows.ApplicationModel.WindowsAppRuntime.DeploymentResult>.MarshalerArray array) => MarshalInterfaceHelper<global::Microsoft.Windows.ApplicationModel.WindowsAppRuntime.DeploymentResult>.DisposeMarshalerArray(array);
        public static void DisposeAbi(IntPtr abi) => MarshalInspectable<object>.DisposeAbi(abi);
        public static unsafe void DisposeAbiArray(object box) => MarshalInspectable<object>.DisposeAbiArray(box);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    internal sealed class DeploymentResultRcwFactoryAttribute : global::WinRT.WinRTImplementationTypeRcwFactoryAttribute
    {
        public override object CreateInstance(global::WinRT.IInspectable inspectable)
            => new global::Microsoft.Windows.ApplicationModel.WindowsAppRuntime.DeploymentResult(inspectable.ObjRef);
    }
    internal static class IDeploymentInitializeOptionsMethods
    {

        internal static unsafe bool get_ForceDeployment(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            byte __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, byte*, int>**)ThisPtr)[6](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval != 0;
        }
        internal static unsafe void set_ForceDeployment(IObjectReference _obj, bool value)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, byte, int>**)ThisPtr)[7](ThisPtr, (byte)(value ? 1 : 0)));
            global::System.GC.KeepAlive(_obj);
        }



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0xD4, 0x5F, 0x8A, 0x57, 0x7F, 0x9D, 0x1, 0x5E, 0x97, 0xB8, 0xD8, 0xEA, 0x61, 0xDB, 0x40, 0x27 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("578A5FD4-9D7F-5E01-97B8-D8EA61DB4027")]
    internal interface IDeploymentInitializeOptions : global::Microsoft.Windows.ApplicationModel.WindowsAppRuntime.IDeploymentInitializeOptions
    {
    }
    internal static class IDeploymentInitializeOptions2Methods
    {

        internal static unsafe bool get_OnErrorShowUI(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            byte __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, byte*, int>**)ThisPtr)[6](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval != 0;
        }
        internal static unsafe void set_OnErrorShowUI(IObjectReference _obj, bool value)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, byte, int>**)ThisPtr)[7](ThisPtr, (byte)(value ? 1 : 0)));
            global::System.GC.KeepAlive(_obj);
        }



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0x20, 0x28, 0x90, 0xAD, 0x9F, 0x14, 0x16, 0x5E, 0xA5, 0x66, 0x9B, 0x23, 0x63, 0x99, 0x7D, 0xE2 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("AD902820-149F-5E16-A566-9B2363997DE2")]
    internal interface IDeploymentInitializeOptions2 : global::Microsoft.Windows.ApplicationModel.WindowsAppRuntime.IDeploymentInitializeOptions2
    {
    }
    internal static class IDeploymentManagerStaticsMethods
    {


        internal static unsafe global::Microsoft.Windows.ApplicationModel.WindowsAppRuntime.DeploymentResult GetStatus(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[6](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.Windows.ApplicationModel.WindowsAppRuntime.DeploymentResult.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.Windows.ApplicationModel.WindowsAppRuntime.DeploymentResult.DisposeAbi(__retval);
            }
        }

        internal static unsafe global::Microsoft.Windows.ApplicationModel.WindowsAppRuntime.DeploymentResult Initialize(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[7](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.Windows.ApplicationModel.WindowsAppRuntime.DeploymentResult.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.Windows.ApplicationModel.WindowsAppRuntime.DeploymentResult.DisposeAbi(__retval);
            }
        }


        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0xD0, 0xA9, 0x82, 0x67, 0xD0, 0xBF, 0xEA, 0x50, 0x81, 0xB0, 0x32, 0xE9, 0xED, 0x37, 0xCD, 0xF0 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("6782A9D0-BFD0-50EA-81B0-32E9ED37CDF0")]
    internal interface IDeploymentManagerStatics : global::Microsoft.Windows.ApplicationModel.WindowsAppRuntime.IDeploymentManagerStatics
    {
    }
    internal static class IDeploymentManagerStatics2Methods
    {


        internal static unsafe global::Microsoft.Windows.ApplicationModel.WindowsAppRuntime.DeploymentResult Initialize(IObjectReference _obj, global::Microsoft.Windows.ApplicationModel.WindowsAppRuntime.DeploymentInitializeOptions deploymentInitializeOptions)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __deploymentInitializeOptions = default;
            IntPtr __retval = default;
            try
            {
                __deploymentInitializeOptions = global::ABI.Microsoft.Windows.ApplicationModel.WindowsAppRuntime.DeploymentInitializeOptions.CreateMarshaler2(deploymentInitializeOptions);
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, IntPtr*, int>**)ThisPtr)[6](ThisPtr, MarshalInspectable<object>.GetAbi(__deploymentInitializeOptions), &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.Windows.ApplicationModel.WindowsAppRuntime.DeploymentResult.FromAbi(__retval);
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__deploymentInitializeOptions);
                global::ABI.Microsoft.Windows.ApplicationModel.WindowsAppRuntime.DeploymentResult.DisposeAbi(__retval);
            }
        }


        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0xEE, 0x16, 0x9C, 0xF4, 0xBC, 0x6E, 0x15, 0x5F, 0xBE, 0xBB, 0x2B, 0xA4, 0x9F, 0x8C, 0xB, 0x30 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("F49C16EE-6EBC-5F15-BEBB-2BA49F8C0B30")]
    internal interface IDeploymentManagerStatics2 : global::Microsoft.Windows.ApplicationModel.WindowsAppRuntime.IDeploymentManagerStatics2
    {
    }
    internal static class IDeploymentResultMethods
    {

        internal static unsafe global::System.Exception get_ExtendedError(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::ABI.System.Exception __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::ABI.System.Exception*, int>**)ThisPtr)[7](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.System.Exception.FromAbi(__retval);
            }
            finally
            {
                global::ABI.System.Exception.DisposeAbi(__retval);
            }
        }

        internal static unsafe global::Microsoft.Windows.ApplicationModel.WindowsAppRuntime.DeploymentStatus get_Status(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::Microsoft.Windows.ApplicationModel.WindowsAppRuntime.DeploymentStatus __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::Microsoft.Windows.ApplicationModel.WindowsAppRuntime.DeploymentStatus*, int>**)ThisPtr)[6](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0x62, 0x3F, 0x20, 0x27, 0x3D, 0x46, 0x7A, 0x58, 0x8E, 0xB7, 0x87, 0x0, 0x98, 0x90, 0x10, 0x78 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("27203F62-463D-587A-8EB7-870098901078")]
    internal interface IDeploymentResult : global::Microsoft.Windows.ApplicationModel.WindowsAppRuntime.IDeploymentResult
    {
    }
    internal static class IDeploymentResultFactoryMethods
    {


        internal static unsafe global::Microsoft.Windows.ApplicationModel.WindowsAppRuntime.DeploymentResult CreateInstance(IObjectReference _obj, global::Microsoft.Windows.ApplicationModel.WindowsAppRuntime.DeploymentStatus status, global::System.Exception extendedError)
        {
            var ThisPtr = _obj.ThisPtr;

            global::ABI.System.Exception.Marshaler __extendedError = default;
            IntPtr __retval = default;
            try
            {
                __extendedError = global::ABI.System.Exception.CreateMarshaler(extendedError);
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::Microsoft.Windows.ApplicationModel.WindowsAppRuntime.DeploymentStatus, global::ABI.System.Exception, IntPtr*, int>**)ThisPtr)[6](ThisPtr, status, global::ABI.System.Exception.GetAbi(__extendedError), &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.Windows.ApplicationModel.WindowsAppRuntime.DeploymentResult.FromAbi(__retval);
            }
            finally
            {
                global::ABI.System.Exception.DisposeMarshaler(__extendedError);
                global::ABI.Microsoft.Windows.ApplicationModel.WindowsAppRuntime.DeploymentResult.DisposeAbi(__retval);
            }
        }


        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0xAE, 0xBD, 0xD7, 0xAC, 0xE6, 0x4A, 0xAC, 0x5C, 0x82, 0x5, 0x1E, 0x8C, 0x30, 0x5F, 0x95, 0x3B };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("ACD7BDAE-4AE6-5CAC-8205-1E8C305F953B")]
    internal interface IDeploymentResultFactory : global::Microsoft.Windows.ApplicationModel.WindowsAppRuntime.IDeploymentResultFactory
    {
    }
    internal static class IReleaseInfoStaticsMethods
    {

        internal static unsafe string get_AsString(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[10](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return MarshalString.FromAbi(__retval);
            }
            finally
            {
                MarshalString.DisposeAbi(__retval);
            }
        }

        internal static unsafe ushort get_Major(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            ushort __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, ushort*, int>**)ThisPtr)[6](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }

        internal static unsafe ushort get_Minor(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            ushort __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, ushort*, int>**)ThisPtr)[7](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }

        internal static unsafe ushort get_Patch(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            ushort __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, ushort*, int>**)ThisPtr)[8](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }

        internal static unsafe string get_VersionTag(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[9](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return MarshalString.FromAbi(__retval);
            }
            finally
            {
                MarshalString.DisposeAbi(__retval);
            }
        }



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0xFF, 0xE8, 0x9B, 0xED, 0x3C, 0x7, 0x66, 0x5C, 0xBF, 0x97, 0xEF, 0xC, 0xE6, 0x74, 0x5, 0xC3 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("ED9BE8FF-073C-5C66-BF97-EF0CE67405C3")]
    internal interface IReleaseInfoStatics : global::Microsoft.Windows.ApplicationModel.WindowsAppRuntime.IReleaseInfoStatics
    {
    }
    internal static class IRuntimeCompatibilityOptionsMethods
    {


        internal static unsafe void Apply(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, int>**)ThisPtr)[11](ThisPtr));
            global::System.GC.KeepAlive(_obj);
        }
        internal static unsafe global::System.Collections.Generic.IList<global::Microsoft.Windows.ApplicationModel.WindowsAppRuntime.RuntimeCompatibilityChange> get_DisabledChanges(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[10](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                _ = global::WinRT.GenericTypeInstantiations.Windows_Foundation_Collections_IVector_1_Microsoft_Windows_ApplicationModel_WindowsAppRuntime_RuntimeCompatibilityChange.EnsureInitialized();
                return MarshalInterface<global::System.Collections.Generic.IList<global::Microsoft.Windows.ApplicationModel.WindowsAppRuntime.RuntimeCompatibilityChange>>.FromAbi(__retval);
            }
            finally
            {
                MarshalInterface<global::System.Collections.Generic.IList<global::Microsoft.Windows.ApplicationModel.WindowsAppRuntime.RuntimeCompatibilityChange>>.DisposeAbi(__retval);
            }
        }

        internal static unsafe global::Microsoft.Windows.ApplicationModel.WindowsAppRuntime.WindowsAppRuntimeVersion get_PatchLevel1(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::Microsoft.Windows.ApplicationModel.WindowsAppRuntime.WindowsAppRuntimeVersion __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::Microsoft.Windows.ApplicationModel.WindowsAppRuntime.WindowsAppRuntimeVersion*, int>**)ThisPtr)[6](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }
        internal static unsafe void set_PatchLevel1(IObjectReference _obj, global::Microsoft.Windows.ApplicationModel.WindowsAppRuntime.WindowsAppRuntimeVersion value)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::Microsoft.Windows.ApplicationModel.WindowsAppRuntime.WindowsAppRuntimeVersion, int>**)ThisPtr)[7](ThisPtr, value));
            global::System.GC.KeepAlive(_obj);
        }

        internal static unsafe global::Microsoft.Windows.ApplicationModel.WindowsAppRuntime.WindowsAppRuntimeVersion get_PatchLevel2(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::Microsoft.Windows.ApplicationModel.WindowsAppRuntime.WindowsAppRuntimeVersion __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::Microsoft.Windows.ApplicationModel.WindowsAppRuntime.WindowsAppRuntimeVersion*, int>**)ThisPtr)[8](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }
        internal static unsafe void set_PatchLevel2(IObjectReference _obj, global::Microsoft.Windows.ApplicationModel.WindowsAppRuntime.WindowsAppRuntimeVersion value)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::Microsoft.Windows.ApplicationModel.WindowsAppRuntime.WindowsAppRuntimeVersion, int>**)ThisPtr)[9](ThisPtr, value));
            global::System.GC.KeepAlive(_obj);
        }



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0xD9, 0x3B, 0x40, 0xD7, 0x5D, 0xB2, 0x8F, 0x5B, 0x8D, 0xE1, 0x9D, 0xCB, 0x57, 0xD9, 0x9F, 0x6C };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("D7403BD9-B25D-5B8F-8DE1-9DCB57D99F6C")]
    internal interface IRuntimeCompatibilityOptions : global::Microsoft.Windows.ApplicationModel.WindowsAppRuntime.IRuntimeCompatibilityOptions
    {
    }
    internal static class IRuntimeInfoStaticsMethods
    {

        internal static unsafe string get_AsString(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[7](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return MarshalString.FromAbi(__retval);
            }
            finally
            {
                MarshalString.DisposeAbi(__retval);
            }
        }

        internal static unsafe global::Windows.ApplicationModel.PackageVersion get_Version(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::Windows.ApplicationModel.PackageVersion __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::Windows.ApplicationModel.PackageVersion*, int>**)ThisPtr)[6](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0x49, 0x95, 0xCB, 0xE5, 0x51, 0x89, 0xE, 0x59, 0xA7, 0x53, 0x8F, 0x28, 0x1C, 0xD7, 0x7A, 0xB5 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("E5CB9549-8951-590E-A753-8F281CD77AB5")]
    internal interface IRuntimeInfoStatics : global::Microsoft.Windows.ApplicationModel.WindowsAppRuntime.IRuntimeInfoStatics
    {
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    public struct RuntimeCompatibilityOptions
    {

        public static IObjectReference CreateMarshaler(global::Microsoft.Windows.ApplicationModel.WindowsAppRuntime.RuntimeCompatibilityOptions obj) => obj is null ? null : MarshalInspectable<global::Microsoft.Windows.ApplicationModel.WindowsAppRuntime.RuntimeCompatibilityOptions>.CreateMarshaler<IUnknownVftbl>(obj, global::ABI.Microsoft.Windows.ApplicationModel.WindowsAppRuntime.IRuntimeCompatibilityOptionsMethods.IID);
        public static ObjectReferenceValue CreateMarshaler2(global::Microsoft.Windows.ApplicationModel.WindowsAppRuntime.RuntimeCompatibilityOptions obj) => MarshalInspectable<object>.CreateMarshaler2(obj, global::ABI.Microsoft.Windows.ApplicationModel.WindowsAppRuntime.IRuntimeCompatibilityOptionsMethods.IID);
        public static IntPtr GetAbi(IObjectReference value) => value is null ? IntPtr.Zero : MarshalInterfaceHelper<object>.GetAbi(value);
        public static global::Microsoft.Windows.ApplicationModel.WindowsAppRuntime.RuntimeCompatibilityOptions FromAbi(IntPtr thisPtr) => global::Microsoft.Windows.ApplicationModel.WindowsAppRuntime.RuntimeCompatibilityOptions.FromAbi(thisPtr);
        public static IntPtr FromManaged(global::Microsoft.Windows.ApplicationModel.WindowsAppRuntime.RuntimeCompatibilityOptions obj) => obj is null ? IntPtr.Zero : CreateMarshaler2(obj).Detach();
        public static unsafe MarshalInterfaceHelper<global::Microsoft.Windows.ApplicationModel.WindowsAppRuntime.RuntimeCompatibilityOptions>.MarshalerArray CreateMarshalerArray(global::Microsoft.Windows.ApplicationModel.WindowsAppRuntime.RuntimeCompatibilityOptions[] array) => MarshalInterfaceHelper<global::Microsoft.Windows.ApplicationModel.WindowsAppRuntime.RuntimeCompatibilityOptions>.CreateMarshalerArray2(array, (o) => CreateMarshaler2(o));
        public static (int length, IntPtr data) GetAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.Windows.ApplicationModel.WindowsAppRuntime.RuntimeCompatibilityOptions>.GetAbiArray(box);
        public static unsafe global::Microsoft.Windows.ApplicationModel.WindowsAppRuntime.RuntimeCompatibilityOptions[] FromAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.Windows.ApplicationModel.WindowsAppRuntime.RuntimeCompatibilityOptions>.FromAbiArray(box, FromAbi);
        public static void CopyAbiArray(global::Microsoft.Windows.ApplicationModel.WindowsAppRuntime.RuntimeCompatibilityOptions[] array, object box) => MarshalInterfaceHelper<global::Microsoft.Windows.ApplicationModel.WindowsAppRuntime.RuntimeCompatibilityOptions>.CopyAbiArray(array, box, FromAbi);
        public static (int length, IntPtr data) FromManagedArray(global::Microsoft.Windows.ApplicationModel.WindowsAppRuntime.RuntimeCompatibilityOptions[] array) => MarshalInterfaceHelper<global::Microsoft.Windows.ApplicationModel.WindowsAppRuntime.RuntimeCompatibilityOptions>.FromManagedArray(array, (o) => FromManaged(o));
        public static void DisposeMarshaler(IObjectReference value) => MarshalInspectable<object>.DisposeMarshaler(value);
        public static void DisposeMarshalerArray(MarshalInterfaceHelper<global::Microsoft.Windows.ApplicationModel.WindowsAppRuntime.RuntimeCompatibilityOptions>.MarshalerArray array) => MarshalInterfaceHelper<global::Microsoft.Windows.ApplicationModel.WindowsAppRuntime.RuntimeCompatibilityOptions>.DisposeMarshalerArray(array);
        public static void DisposeAbi(IntPtr abi) => MarshalInspectable<object>.DisposeAbi(abi);
        public static unsafe void DisposeAbiArray(object box) => MarshalInspectable<object>.DisposeAbiArray(box);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    internal sealed class RuntimeCompatibilityOptionsRcwFactoryAttribute : global::WinRT.WinRTImplementationTypeRcwFactoryAttribute
    {
        public override object CreateInstance(global::WinRT.IInspectable inspectable)
            => new global::Microsoft.Windows.ApplicationModel.WindowsAppRuntime.RuntimeCompatibilityOptions(inspectable.ObjRef);
    }
}
#pragma warning restore CA1416
