//------------------------------------------------------------------------------
// <auto-generated>
//     This file was generated by cswinrt.exe version 2.2.0.241111.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Diagnostics;
using System.Diagnostics.CodeAnalysis;
using System.Linq.Expressions;
using System.Reflection;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;
using WinRT;
using WinRT.Interop;


#pragma warning disable 0169 // warning CS0169: The field '...' is never used
#pragma warning disable 0649 // warning CS0169: Field '...' is never assigned to
#pragma warning disable CA2207, CA1063, CA1033, CA1001, CA2213

namespace Microsoft.Windows.Media.Capture
{
    [global::WinRT.WindowsRuntimeType("Microsoft.Windows.Media.Capture")]
    [global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.Windows.Media.Capture.CameraCaptureUI))]
    [global::ABI.Microsoft.Windows.Media.Capture.CameraCaptureUIRcwFactory]
    [global::WinRT.ProjectedRuntimeClass(typeof(ICameraCaptureUI))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(CameraCaptureUIContract), 65536u)]
    public sealed class CameraCaptureUI : global::System.Runtime.InteropServices.ICustomQueryInterface, IWinRTObject, IEquatable<CameraCaptureUI>
    {
        private IntPtr ThisPtr => _inner == null ? (((IWinRTObject)this).NativeObject).ThisPtr : _inner.ThisPtr;

        private readonly IObjectReference _inner = null;



        private IObjectReference _objRef_global__Microsoft_Windows_Media_Capture_ICameraCaptureUI => _inner;


        private static class _ICameraCaptureUIFactoryMethods
        {
            public static unsafe IntPtr CreateInstance(IObjectReference _obj, global::Microsoft.UI.WindowId windowId)
            {
                var ThisPtr = _obj.ThisPtr;

                IntPtr __retval = default;
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::Microsoft.UI.WindowId, IntPtr*, int>**)ThisPtr)[6](ThisPtr, windowId, &__retval));
                global::System.GC.KeepAlive(_obj);
                return __retval;
            }
        }

        private static volatile IObjectReference ___objRef_global__Microsoft_Windows_Media_Capture_ICameraCaptureUIFactory;
        private static IObjectReference _objRef_global__Microsoft_Windows_Media_Capture_ICameraCaptureUIFactory
        {
            get
            { 
                var factory = ___objRef_global__Microsoft_Windows_Media_Capture_ICameraCaptureUIFactory;
                if (factory != null && factory.IsInCurrentContext)
                {
                    return factory;
                }
                else
                {
                    return ___objRef_global__Microsoft_Windows_Media_Capture_ICameraCaptureUIFactory = ActivationFactory.Get("Microsoft.Windows.Media.Capture.CameraCaptureUI", global::ABI.Microsoft.Windows.Media.Capture.ICameraCaptureUIFactoryMethods.IID);
                }
            }
        }

        public CameraCaptureUI(global::Microsoft.UI.WindowId windowId) 
        { 
        IntPtr ptr = (_ICameraCaptureUIFactoryMethods.CreateInstance(_objRef_global__Microsoft_Windows_Media_Capture_ICameraCaptureUIFactory, windowId)); 
        try 
        { 
        _inner = ComWrappersSupport.GetObjectReferenceForInterface(ptr, global::ABI.Microsoft.Windows.Media.Capture.ICameraCaptureUIMethods.IID, false); 

        } 
        finally 
        { 
        MarshalInspectable<object>.DisposeAbi(ptr); 
        }

        ComWrappersSupport.RegisterObjectForInterface(this, ThisPtr);
        ComWrappersHelper.Init(_inner, false);
        }

        public static CameraCaptureUI FromAbi(IntPtr thisPtr)
        {
            if (thisPtr == IntPtr.Zero) return null;
            return MarshalInspectable<CameraCaptureUI>.FromAbi(thisPtr);
        }

        internal CameraCaptureUI(IObjectReference objRef)
        {
            _inner = objRef.As(global::ABI.Microsoft.Windows.Media.Capture.ICameraCaptureUIMethods.IID);

        }


        public static bool operator ==(CameraCaptureUI x, CameraCaptureUI y) => (x?.ThisPtr ?? IntPtr.Zero) == (y?.ThisPtr ?? IntPtr.Zero);
        public static bool operator !=(CameraCaptureUI x, CameraCaptureUI y) => !(x == y);
        public bool Equals(CameraCaptureUI other) => this == other;
        public override bool Equals(object obj) => obj is CameraCaptureUI that && this == that;
        public override int GetHashCode() => ThisPtr.GetHashCode();


        bool IWinRTObject.HasUnwrappableNativeObject => true;
        IObjectReference IWinRTObject.NativeObject => _inner;
        private volatile global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> _queryInterfaceCache;
        private global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> MakeQueryInterfaceCache()
        {
            global::System.Threading.Interlocked.CompareExchange(ref _queryInterfaceCache, new global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference>(), null); 
            return _queryInterfaceCache;
        }
        global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> IWinRTObject.QueryInterfaceCache => _queryInterfaceCache ?? MakeQueryInterfaceCache();
        private volatile global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> _additionalTypeData;
        private global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> MakeAdditionalTypeData()
        {
            global::System.Threading.Interlocked.CompareExchange(ref _additionalTypeData, new global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object>(), null); 
            return _additionalTypeData;
        }
        global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> IWinRTObject.AdditionalTypeData => _additionalTypeData ?? MakeAdditionalTypeData();

        private struct InterfaceTag<I>{};


        public global::Windows.Foundation.IAsyncOperation<global::Windows.Storage.StorageFile> CaptureFileAsync(CameraCaptureUIMode mode) => global::ABI.Microsoft.Windows.Media.Capture.ICameraCaptureUIMethods.CaptureFileAsync(_objRef_global__Microsoft_Windows_Media_Capture_ICameraCaptureUI, mode);

        public CameraCaptureUIPhotoCaptureSettings PhotoSettings => global::ABI.Microsoft.Windows.Media.Capture.ICameraCaptureUIMethods.get_PhotoSettings(_objRef_global__Microsoft_Windows_Media_Capture_ICameraCaptureUI);

        public CameraCaptureUIVideoCaptureSettings VideoSettings => global::ABI.Microsoft.Windows.Media.Capture.ICameraCaptureUIMethods.get_VideoSettings(_objRef_global__Microsoft_Windows_Media_Capture_ICameraCaptureUI);

        private bool IsOverridableInterface(Guid iid) => false;

        global::System.Runtime.InteropServices.CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(ref Guid iid, out IntPtr ppv)
        {
            ppv = IntPtr.Zero;
            if (IsOverridableInterface(iid) || global::WinRT.Interop.IID.IID_IInspectable == iid)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
            }

            if (((IWinRTObject)this).NativeObject.TryAs(iid, out ppv) >= 0)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.Handled;
            }

            return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
        }
    }
    [global::Windows.Foundation.Metadata.ContractVersion(65536u)]
    public enum CameraCaptureUIContract
    {
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.Windows.Media.Capture")][global::WinRT.WinRTExposedType(typeof(global::WinRT.EnumTypeDetails<CameraCaptureUIMaxPhotoResolution>))][global::Windows.Foundation.Metadata.ContractVersion(typeof(CameraCaptureUIContract), 65536u)]
    public enum CameraCaptureUIMaxPhotoResolution : int
    {
        HighestAvailable = unchecked((int)0),
        VerySmallQvga = unchecked((int)0x1),
        SmallVga = unchecked((int)0x2),
        MediumXga = unchecked((int)0x3),
        Large3M = unchecked((int)0x4),
        VeryLarge5M = unchecked((int)0x5),
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.Windows.Media.Capture")][global::WinRT.WinRTExposedType(typeof(global::WinRT.EnumTypeDetails<CameraCaptureUIMaxVideoResolution>))][global::Windows.Foundation.Metadata.ContractVersion(typeof(CameraCaptureUIContract), 65536u)]
    public enum CameraCaptureUIMaxVideoResolution : int
    {
        HighestAvailable = unchecked((int)0),
        LowDefinition = unchecked((int)0x1),
        StandardDefinition = unchecked((int)0x2),
        HighDefinition = unchecked((int)0x3),
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.Windows.Media.Capture")][global::WinRT.WinRTExposedType(typeof(global::WinRT.EnumTypeDetails<CameraCaptureUIMode>))][global::Windows.Foundation.Metadata.ContractVersion(typeof(CameraCaptureUIContract), 65536u)]
    public enum CameraCaptureUIMode : int
    {
        PhotoOrVideo = unchecked((int)0),
        Photo = unchecked((int)0x1),
        Video = unchecked((int)0x2),
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.Windows.Media.Capture")]
    [global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.Windows.Media.Capture.CameraCaptureUIPhotoCaptureSettings))]
    [global::ABI.Microsoft.Windows.Media.Capture.CameraCaptureUIPhotoCaptureSettingsRcwFactory]
    [global::WinRT.ProjectedRuntimeClass(typeof(ICameraCaptureUIPhotoCaptureSettings))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(CameraCaptureUIContract), 65536u)]
    public sealed class CameraCaptureUIPhotoCaptureSettings : global::System.Runtime.InteropServices.ICustomQueryInterface, IWinRTObject, IEquatable<CameraCaptureUIPhotoCaptureSettings>
    {
        private IntPtr ThisPtr => _inner == null ? (((IWinRTObject)this).NativeObject).ThisPtr : _inner.ThisPtr;

        private readonly IObjectReference _inner = null;



        private IObjectReference _objRef_global__Microsoft_Windows_Media_Capture_ICameraCaptureUIPhotoCaptureSettings => _inner;


        private static volatile IObjectReference ___objRef_global__Microsoft_Windows_Media_Capture_CameraCaptureUIPhotoCaptureSettings;
        private static IObjectReference _objRef_global__Microsoft_Windows_Media_Capture_CameraCaptureUIPhotoCaptureSettings
        {
            get
            { 
                var factory = ___objRef_global__Microsoft_Windows_Media_Capture_CameraCaptureUIPhotoCaptureSettings;
                if (factory != null && factory.IsInCurrentContext)
                {
                    return factory;
                }
                else
                {
                    return ___objRef_global__Microsoft_Windows_Media_Capture_CameraCaptureUIPhotoCaptureSettings = ActivationFactory.Get("Microsoft.Windows.Media.Capture.CameraCaptureUIPhotoCaptureSettings");
                }
            }
        }

        public CameraCaptureUIPhotoCaptureSettings() 
        {
            _inner = global::ABI.WinRT.Interop.IActivationFactoryMethods.ActivateInstanceUnsafe(_objRef_global__Microsoft_Windows_Media_Capture_CameraCaptureUIPhotoCaptureSettings, global::ABI.Microsoft.Windows.Media.Capture.ICameraCaptureUIPhotoCaptureSettingsMethods.IID);
            ComWrappersSupport.RegisterObjectForInterface(this, ThisPtr);
            ComWrappersHelper.Init(_inner, false);

        }

        public static CameraCaptureUIPhotoCaptureSettings FromAbi(IntPtr thisPtr)
        {
            if (thisPtr == IntPtr.Zero) return null;
            return MarshalInspectable<CameraCaptureUIPhotoCaptureSettings>.FromAbi(thisPtr);
        }

        internal CameraCaptureUIPhotoCaptureSettings(IObjectReference objRef)
        {
            _inner = objRef.As(global::ABI.Microsoft.Windows.Media.Capture.ICameraCaptureUIPhotoCaptureSettingsMethods.IID);

        }


        public static bool operator ==(CameraCaptureUIPhotoCaptureSettings x, CameraCaptureUIPhotoCaptureSettings y) => (x?.ThisPtr ?? IntPtr.Zero) == (y?.ThisPtr ?? IntPtr.Zero);
        public static bool operator !=(CameraCaptureUIPhotoCaptureSettings x, CameraCaptureUIPhotoCaptureSettings y) => !(x == y);
        public bool Equals(CameraCaptureUIPhotoCaptureSettings other) => this == other;
        public override bool Equals(object obj) => obj is CameraCaptureUIPhotoCaptureSettings that && this == that;
        public override int GetHashCode() => ThisPtr.GetHashCode();


        bool IWinRTObject.HasUnwrappableNativeObject => true;
        IObjectReference IWinRTObject.NativeObject => _inner;
        private volatile global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> _queryInterfaceCache;
        private global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> MakeQueryInterfaceCache()
        {
            global::System.Threading.Interlocked.CompareExchange(ref _queryInterfaceCache, new global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference>(), null); 
            return _queryInterfaceCache;
        }
        global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> IWinRTObject.QueryInterfaceCache => _queryInterfaceCache ?? MakeQueryInterfaceCache();
        private volatile global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> _additionalTypeData;
        private global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> MakeAdditionalTypeData()
        {
            global::System.Threading.Interlocked.CompareExchange(ref _additionalTypeData, new global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object>(), null); 
            return _additionalTypeData;
        }
        global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> IWinRTObject.AdditionalTypeData => _additionalTypeData ?? MakeAdditionalTypeData();

        private struct InterfaceTag<I>{};


        public bool AllowCropping
        {
            get => global::ABI.Microsoft.Windows.Media.Capture.ICameraCaptureUIPhotoCaptureSettingsMethods.get_AllowCropping(_objRef_global__Microsoft_Windows_Media_Capture_ICameraCaptureUIPhotoCaptureSettings);
            set => global::ABI.Microsoft.Windows.Media.Capture.ICameraCaptureUIPhotoCaptureSettingsMethods.set_AllowCropping(_objRef_global__Microsoft_Windows_Media_Capture_ICameraCaptureUIPhotoCaptureSettings, value);
        }

        public global::Windows.Foundation.Size CroppedAspectRatio
        {
            get => global::ABI.Microsoft.Windows.Media.Capture.ICameraCaptureUIPhotoCaptureSettingsMethods.get_CroppedAspectRatio(_objRef_global__Microsoft_Windows_Media_Capture_ICameraCaptureUIPhotoCaptureSettings);
            set => global::ABI.Microsoft.Windows.Media.Capture.ICameraCaptureUIPhotoCaptureSettingsMethods.set_CroppedAspectRatio(_objRef_global__Microsoft_Windows_Media_Capture_ICameraCaptureUIPhotoCaptureSettings, value);
        }

        public global::Windows.Foundation.Size CroppedSizeInPixels
        {
            get => global::ABI.Microsoft.Windows.Media.Capture.ICameraCaptureUIPhotoCaptureSettingsMethods.get_CroppedSizeInPixels(_objRef_global__Microsoft_Windows_Media_Capture_ICameraCaptureUIPhotoCaptureSettings);
            set => global::ABI.Microsoft.Windows.Media.Capture.ICameraCaptureUIPhotoCaptureSettingsMethods.set_CroppedSizeInPixels(_objRef_global__Microsoft_Windows_Media_Capture_ICameraCaptureUIPhotoCaptureSettings, value);
        }

        public CameraCaptureUIPhotoFormat Format
        {
            get => global::ABI.Microsoft.Windows.Media.Capture.ICameraCaptureUIPhotoCaptureSettingsMethods.get_Format(_objRef_global__Microsoft_Windows_Media_Capture_ICameraCaptureUIPhotoCaptureSettings);
            set => global::ABI.Microsoft.Windows.Media.Capture.ICameraCaptureUIPhotoCaptureSettingsMethods.set_Format(_objRef_global__Microsoft_Windows_Media_Capture_ICameraCaptureUIPhotoCaptureSettings, value);
        }

        public CameraCaptureUIMaxPhotoResolution MaxResolution
        {
            get => global::ABI.Microsoft.Windows.Media.Capture.ICameraCaptureUIPhotoCaptureSettingsMethods.get_MaxResolution(_objRef_global__Microsoft_Windows_Media_Capture_ICameraCaptureUIPhotoCaptureSettings);
            set => global::ABI.Microsoft.Windows.Media.Capture.ICameraCaptureUIPhotoCaptureSettingsMethods.set_MaxResolution(_objRef_global__Microsoft_Windows_Media_Capture_ICameraCaptureUIPhotoCaptureSettings, value);
        }

        private bool IsOverridableInterface(Guid iid) => false;

        global::System.Runtime.InteropServices.CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(ref Guid iid, out IntPtr ppv)
        {
            ppv = IntPtr.Zero;
            if (IsOverridableInterface(iid) || global::WinRT.Interop.IID.IID_IInspectable == iid)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
            }

            if (((IWinRTObject)this).NativeObject.TryAs(iid, out ppv) >= 0)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.Handled;
            }

            return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
        }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.Windows.Media.Capture")][global::WinRT.WinRTExposedType(typeof(global::WinRT.EnumTypeDetails<CameraCaptureUIPhotoFormat>))][global::Windows.Foundation.Metadata.ContractVersion(typeof(CameraCaptureUIContract), 65536u)]
    public enum CameraCaptureUIPhotoFormat : int
    {
        Jpeg = unchecked((int)0),
        Png = unchecked((int)0x1),
        JpegXR = unchecked((int)0x2),
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.Windows.Media.Capture")]
    [global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.Windows.Media.Capture.CameraCaptureUIVideoCaptureSettings))]
    [global::ABI.Microsoft.Windows.Media.Capture.CameraCaptureUIVideoCaptureSettingsRcwFactory]
    [global::WinRT.ProjectedRuntimeClass(typeof(ICameraCaptureUIVideoCaptureSettings))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(CameraCaptureUIContract), 65536u)]
    public sealed class CameraCaptureUIVideoCaptureSettings : global::System.Runtime.InteropServices.ICustomQueryInterface, IWinRTObject, IEquatable<CameraCaptureUIVideoCaptureSettings>
    {
        private IntPtr ThisPtr => _inner == null ? (((IWinRTObject)this).NativeObject).ThisPtr : _inner.ThisPtr;

        private readonly IObjectReference _inner = null;



        private IObjectReference _objRef_global__Microsoft_Windows_Media_Capture_ICameraCaptureUIVideoCaptureSettings => _inner;


        private static volatile IObjectReference ___objRef_global__Microsoft_Windows_Media_Capture_CameraCaptureUIVideoCaptureSettings;
        private static IObjectReference _objRef_global__Microsoft_Windows_Media_Capture_CameraCaptureUIVideoCaptureSettings
        {
            get
            { 
                var factory = ___objRef_global__Microsoft_Windows_Media_Capture_CameraCaptureUIVideoCaptureSettings;
                if (factory != null && factory.IsInCurrentContext)
                {
                    return factory;
                }
                else
                {
                    return ___objRef_global__Microsoft_Windows_Media_Capture_CameraCaptureUIVideoCaptureSettings = ActivationFactory.Get("Microsoft.Windows.Media.Capture.CameraCaptureUIVideoCaptureSettings");
                }
            }
        }

        public CameraCaptureUIVideoCaptureSettings() 
        {
            _inner = global::ABI.WinRT.Interop.IActivationFactoryMethods.ActivateInstanceUnsafe(_objRef_global__Microsoft_Windows_Media_Capture_CameraCaptureUIVideoCaptureSettings, global::ABI.Microsoft.Windows.Media.Capture.ICameraCaptureUIVideoCaptureSettingsMethods.IID);
            ComWrappersSupport.RegisterObjectForInterface(this, ThisPtr);
            ComWrappersHelper.Init(_inner, false);

        }

        public static CameraCaptureUIVideoCaptureSettings FromAbi(IntPtr thisPtr)
        {
            if (thisPtr == IntPtr.Zero) return null;
            return MarshalInspectable<CameraCaptureUIVideoCaptureSettings>.FromAbi(thisPtr);
        }

        internal CameraCaptureUIVideoCaptureSettings(IObjectReference objRef)
        {
            _inner = objRef.As(global::ABI.Microsoft.Windows.Media.Capture.ICameraCaptureUIVideoCaptureSettingsMethods.IID);

        }


        public static bool operator ==(CameraCaptureUIVideoCaptureSettings x, CameraCaptureUIVideoCaptureSettings y) => (x?.ThisPtr ?? IntPtr.Zero) == (y?.ThisPtr ?? IntPtr.Zero);
        public static bool operator !=(CameraCaptureUIVideoCaptureSettings x, CameraCaptureUIVideoCaptureSettings y) => !(x == y);
        public bool Equals(CameraCaptureUIVideoCaptureSettings other) => this == other;
        public override bool Equals(object obj) => obj is CameraCaptureUIVideoCaptureSettings that && this == that;
        public override int GetHashCode() => ThisPtr.GetHashCode();


        bool IWinRTObject.HasUnwrappableNativeObject => true;
        IObjectReference IWinRTObject.NativeObject => _inner;
        private volatile global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> _queryInterfaceCache;
        private global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> MakeQueryInterfaceCache()
        {
            global::System.Threading.Interlocked.CompareExchange(ref _queryInterfaceCache, new global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference>(), null); 
            return _queryInterfaceCache;
        }
        global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> IWinRTObject.QueryInterfaceCache => _queryInterfaceCache ?? MakeQueryInterfaceCache();
        private volatile global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> _additionalTypeData;
        private global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> MakeAdditionalTypeData()
        {
            global::System.Threading.Interlocked.CompareExchange(ref _additionalTypeData, new global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object>(), null); 
            return _additionalTypeData;
        }
        global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> IWinRTObject.AdditionalTypeData => _additionalTypeData ?? MakeAdditionalTypeData();

        private struct InterfaceTag<I>{};


        public bool AllowTrimming
        {
            get => global::ABI.Microsoft.Windows.Media.Capture.ICameraCaptureUIVideoCaptureSettingsMethods.get_AllowTrimming(_objRef_global__Microsoft_Windows_Media_Capture_ICameraCaptureUIVideoCaptureSettings);
            set => global::ABI.Microsoft.Windows.Media.Capture.ICameraCaptureUIVideoCaptureSettingsMethods.set_AllowTrimming(_objRef_global__Microsoft_Windows_Media_Capture_ICameraCaptureUIVideoCaptureSettings, value);
        }

        public CameraCaptureUIVideoFormat Format
        {
            get => global::ABI.Microsoft.Windows.Media.Capture.ICameraCaptureUIVideoCaptureSettingsMethods.get_Format(_objRef_global__Microsoft_Windows_Media_Capture_ICameraCaptureUIVideoCaptureSettings);
            set => global::ABI.Microsoft.Windows.Media.Capture.ICameraCaptureUIVideoCaptureSettingsMethods.set_Format(_objRef_global__Microsoft_Windows_Media_Capture_ICameraCaptureUIVideoCaptureSettings, value);
        }

        public float MaxDurationInSeconds
        {
            get => global::ABI.Microsoft.Windows.Media.Capture.ICameraCaptureUIVideoCaptureSettingsMethods.get_MaxDurationInSeconds(_objRef_global__Microsoft_Windows_Media_Capture_ICameraCaptureUIVideoCaptureSettings);
            set => global::ABI.Microsoft.Windows.Media.Capture.ICameraCaptureUIVideoCaptureSettingsMethods.set_MaxDurationInSeconds(_objRef_global__Microsoft_Windows_Media_Capture_ICameraCaptureUIVideoCaptureSettings, value);
        }

        public CameraCaptureUIMaxVideoResolution MaxResolution
        {
            get => global::ABI.Microsoft.Windows.Media.Capture.ICameraCaptureUIVideoCaptureSettingsMethods.get_MaxResolution(_objRef_global__Microsoft_Windows_Media_Capture_ICameraCaptureUIVideoCaptureSettings);
            set => global::ABI.Microsoft.Windows.Media.Capture.ICameraCaptureUIVideoCaptureSettingsMethods.set_MaxResolution(_objRef_global__Microsoft_Windows_Media_Capture_ICameraCaptureUIVideoCaptureSettings, value);
        }

        private bool IsOverridableInterface(Guid iid) => false;

        global::System.Runtime.InteropServices.CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(ref Guid iid, out IntPtr ppv)
        {
            ppv = IntPtr.Zero;
            if (IsOverridableInterface(iid) || global::WinRT.Interop.IID.IID_IInspectable == iid)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
            }

            if (((IWinRTObject)this).NativeObject.TryAs(iid, out ppv) >= 0)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.Handled;
            }

            return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
        }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.Windows.Media.Capture")][global::WinRT.WinRTExposedType(typeof(global::WinRT.EnumTypeDetails<CameraCaptureUIVideoFormat>))][global::Windows.Foundation.Metadata.ContractVersion(typeof(CameraCaptureUIContract), 65536u)]
    public enum CameraCaptureUIVideoFormat : int
    {
        Mp4 = unchecked((int)0),
        Wmv = unchecked((int)0x1),
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.Windows.Media.Capture")][Guid("C001D024-C617-5742-9AE1-8FD31BE07F6C")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.Windows.Media.Capture.ICameraCaptureUI))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(CameraCaptureUIContract), 65536u)]
    internal interface ICameraCaptureUI
    {
        global::Windows.Foundation.IAsyncOperation<global::Windows.Storage.StorageFile> CaptureFileAsync(CameraCaptureUIMode mode);
        CameraCaptureUIPhotoCaptureSettings PhotoSettings { get; }
        CameraCaptureUIVideoCaptureSettings VideoSettings { get; }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.Windows.Media.Capture")][Guid("2B49623D-5F22-5FEE-991F-14F24592A3C2")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.Windows.Media.Capture.ICameraCaptureUIFactory))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(CameraCaptureUIContract), 65536u)]
    internal interface ICameraCaptureUIFactory
    {
        CameraCaptureUI CreateInstance(global::Microsoft.UI.WindowId windowId);
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.Windows.Media.Capture")][Guid("19FE2155-D018-53FC-BBDC-5781A94687A0")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.Windows.Media.Capture.ICameraCaptureUIPhotoCaptureSettings))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(CameraCaptureUIContract), 65536u)]
    internal interface ICameraCaptureUIPhotoCaptureSettings
    {
        bool AllowCropping { get; set; }
        global::Windows.Foundation.Size CroppedAspectRatio { get; set; }
        global::Windows.Foundation.Size CroppedSizeInPixels { get; set; }
        CameraCaptureUIPhotoFormat Format { get; set; }
        CameraCaptureUIMaxPhotoResolution MaxResolution { get; set; }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.Windows.Media.Capture")][Guid("47DD74F6-83B7-5123-BBDF-D757201D1EE8")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.Windows.Media.Capture.ICameraCaptureUIVideoCaptureSettings))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(CameraCaptureUIContract), 65536u)]
    internal interface ICameraCaptureUIVideoCaptureSettings
    {
        bool AllowTrimming { get; set; }
        CameraCaptureUIVideoFormat Format { get; set; }
        float MaxDurationInSeconds { get; set; }
        CameraCaptureUIMaxVideoResolution MaxResolution { get; set; }
    }
}

#pragma warning disable CA1416
namespace ABI.Microsoft.Windows.Media.Capture
{
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    public struct CameraCaptureUI
    {

        public static IObjectReference CreateMarshaler(global::Microsoft.Windows.Media.Capture.CameraCaptureUI obj) => obj is null ? null : MarshalInspectable<global::Microsoft.Windows.Media.Capture.CameraCaptureUI>.CreateMarshaler<IUnknownVftbl>(obj, global::ABI.Microsoft.Windows.Media.Capture.ICameraCaptureUIMethods.IID);
        public static ObjectReferenceValue CreateMarshaler2(global::Microsoft.Windows.Media.Capture.CameraCaptureUI obj) => MarshalInspectable<object>.CreateMarshaler2(obj, global::ABI.Microsoft.Windows.Media.Capture.ICameraCaptureUIMethods.IID);
        public static IntPtr GetAbi(IObjectReference value) => value is null ? IntPtr.Zero : MarshalInterfaceHelper<object>.GetAbi(value);
        public static global::Microsoft.Windows.Media.Capture.CameraCaptureUI FromAbi(IntPtr thisPtr) => global::Microsoft.Windows.Media.Capture.CameraCaptureUI.FromAbi(thisPtr);
        public static IntPtr FromManaged(global::Microsoft.Windows.Media.Capture.CameraCaptureUI obj) => obj is null ? IntPtr.Zero : CreateMarshaler2(obj).Detach();
        public static unsafe MarshalInterfaceHelper<global::Microsoft.Windows.Media.Capture.CameraCaptureUI>.MarshalerArray CreateMarshalerArray(global::Microsoft.Windows.Media.Capture.CameraCaptureUI[] array) => MarshalInterfaceHelper<global::Microsoft.Windows.Media.Capture.CameraCaptureUI>.CreateMarshalerArray2(array, (o) => CreateMarshaler2(o));
        public static (int length, IntPtr data) GetAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.Windows.Media.Capture.CameraCaptureUI>.GetAbiArray(box);
        public static unsafe global::Microsoft.Windows.Media.Capture.CameraCaptureUI[] FromAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.Windows.Media.Capture.CameraCaptureUI>.FromAbiArray(box, FromAbi);
        public static void CopyAbiArray(global::Microsoft.Windows.Media.Capture.CameraCaptureUI[] array, object box) => MarshalInterfaceHelper<global::Microsoft.Windows.Media.Capture.CameraCaptureUI>.CopyAbiArray(array, box, FromAbi);
        public static (int length, IntPtr data) FromManagedArray(global::Microsoft.Windows.Media.Capture.CameraCaptureUI[] array) => MarshalInterfaceHelper<global::Microsoft.Windows.Media.Capture.CameraCaptureUI>.FromManagedArray(array, (o) => FromManaged(o));
        public static void DisposeMarshaler(IObjectReference value) => MarshalInspectable<object>.DisposeMarshaler(value);
        public static void DisposeMarshalerArray(MarshalInterfaceHelper<global::Microsoft.Windows.Media.Capture.CameraCaptureUI>.MarshalerArray array) => MarshalInterfaceHelper<global::Microsoft.Windows.Media.Capture.CameraCaptureUI>.DisposeMarshalerArray(array);
        public static void DisposeAbi(IntPtr abi) => MarshalInspectable<object>.DisposeAbi(abi);
        public static unsafe void DisposeAbiArray(object box) => MarshalInspectable<object>.DisposeAbiArray(box);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    internal sealed class CameraCaptureUIRcwFactoryAttribute : global::WinRT.WinRTImplementationTypeRcwFactoryAttribute
    {
        public override object CreateInstance(global::WinRT.IInspectable inspectable)
            => new global::Microsoft.Windows.Media.Capture.CameraCaptureUI(inspectable.ObjRef);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    public struct CameraCaptureUIPhotoCaptureSettings
    {

        public static IObjectReference CreateMarshaler(global::Microsoft.Windows.Media.Capture.CameraCaptureUIPhotoCaptureSettings obj) => obj is null ? null : MarshalInspectable<global::Microsoft.Windows.Media.Capture.CameraCaptureUIPhotoCaptureSettings>.CreateMarshaler<IUnknownVftbl>(obj, global::ABI.Microsoft.Windows.Media.Capture.ICameraCaptureUIPhotoCaptureSettingsMethods.IID);
        public static ObjectReferenceValue CreateMarshaler2(global::Microsoft.Windows.Media.Capture.CameraCaptureUIPhotoCaptureSettings obj) => MarshalInspectable<object>.CreateMarshaler2(obj, global::ABI.Microsoft.Windows.Media.Capture.ICameraCaptureUIPhotoCaptureSettingsMethods.IID);
        public static IntPtr GetAbi(IObjectReference value) => value is null ? IntPtr.Zero : MarshalInterfaceHelper<object>.GetAbi(value);
        public static global::Microsoft.Windows.Media.Capture.CameraCaptureUIPhotoCaptureSettings FromAbi(IntPtr thisPtr) => global::Microsoft.Windows.Media.Capture.CameraCaptureUIPhotoCaptureSettings.FromAbi(thisPtr);
        public static IntPtr FromManaged(global::Microsoft.Windows.Media.Capture.CameraCaptureUIPhotoCaptureSettings obj) => obj is null ? IntPtr.Zero : CreateMarshaler2(obj).Detach();
        public static unsafe MarshalInterfaceHelper<global::Microsoft.Windows.Media.Capture.CameraCaptureUIPhotoCaptureSettings>.MarshalerArray CreateMarshalerArray(global::Microsoft.Windows.Media.Capture.CameraCaptureUIPhotoCaptureSettings[] array) => MarshalInterfaceHelper<global::Microsoft.Windows.Media.Capture.CameraCaptureUIPhotoCaptureSettings>.CreateMarshalerArray2(array, (o) => CreateMarshaler2(o));
        public static (int length, IntPtr data) GetAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.Windows.Media.Capture.CameraCaptureUIPhotoCaptureSettings>.GetAbiArray(box);
        public static unsafe global::Microsoft.Windows.Media.Capture.CameraCaptureUIPhotoCaptureSettings[] FromAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.Windows.Media.Capture.CameraCaptureUIPhotoCaptureSettings>.FromAbiArray(box, FromAbi);
        public static void CopyAbiArray(global::Microsoft.Windows.Media.Capture.CameraCaptureUIPhotoCaptureSettings[] array, object box) => MarshalInterfaceHelper<global::Microsoft.Windows.Media.Capture.CameraCaptureUIPhotoCaptureSettings>.CopyAbiArray(array, box, FromAbi);
        public static (int length, IntPtr data) FromManagedArray(global::Microsoft.Windows.Media.Capture.CameraCaptureUIPhotoCaptureSettings[] array) => MarshalInterfaceHelper<global::Microsoft.Windows.Media.Capture.CameraCaptureUIPhotoCaptureSettings>.FromManagedArray(array, (o) => FromManaged(o));
        public static void DisposeMarshaler(IObjectReference value) => MarshalInspectable<object>.DisposeMarshaler(value);
        public static void DisposeMarshalerArray(MarshalInterfaceHelper<global::Microsoft.Windows.Media.Capture.CameraCaptureUIPhotoCaptureSettings>.MarshalerArray array) => MarshalInterfaceHelper<global::Microsoft.Windows.Media.Capture.CameraCaptureUIPhotoCaptureSettings>.DisposeMarshalerArray(array);
        public static void DisposeAbi(IntPtr abi) => MarshalInspectable<object>.DisposeAbi(abi);
        public static unsafe void DisposeAbiArray(object box) => MarshalInspectable<object>.DisposeAbiArray(box);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    internal sealed class CameraCaptureUIPhotoCaptureSettingsRcwFactoryAttribute : global::WinRT.WinRTImplementationTypeRcwFactoryAttribute
    {
        public override object CreateInstance(global::WinRT.IInspectable inspectable)
            => new global::Microsoft.Windows.Media.Capture.CameraCaptureUIPhotoCaptureSettings(inspectable.ObjRef);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    public struct CameraCaptureUIVideoCaptureSettings
    {

        public static IObjectReference CreateMarshaler(global::Microsoft.Windows.Media.Capture.CameraCaptureUIVideoCaptureSettings obj) => obj is null ? null : MarshalInspectable<global::Microsoft.Windows.Media.Capture.CameraCaptureUIVideoCaptureSettings>.CreateMarshaler<IUnknownVftbl>(obj, global::ABI.Microsoft.Windows.Media.Capture.ICameraCaptureUIVideoCaptureSettingsMethods.IID);
        public static ObjectReferenceValue CreateMarshaler2(global::Microsoft.Windows.Media.Capture.CameraCaptureUIVideoCaptureSettings obj) => MarshalInspectable<object>.CreateMarshaler2(obj, global::ABI.Microsoft.Windows.Media.Capture.ICameraCaptureUIVideoCaptureSettingsMethods.IID);
        public static IntPtr GetAbi(IObjectReference value) => value is null ? IntPtr.Zero : MarshalInterfaceHelper<object>.GetAbi(value);
        public static global::Microsoft.Windows.Media.Capture.CameraCaptureUIVideoCaptureSettings FromAbi(IntPtr thisPtr) => global::Microsoft.Windows.Media.Capture.CameraCaptureUIVideoCaptureSettings.FromAbi(thisPtr);
        public static IntPtr FromManaged(global::Microsoft.Windows.Media.Capture.CameraCaptureUIVideoCaptureSettings obj) => obj is null ? IntPtr.Zero : CreateMarshaler2(obj).Detach();
        public static unsafe MarshalInterfaceHelper<global::Microsoft.Windows.Media.Capture.CameraCaptureUIVideoCaptureSettings>.MarshalerArray CreateMarshalerArray(global::Microsoft.Windows.Media.Capture.CameraCaptureUIVideoCaptureSettings[] array) => MarshalInterfaceHelper<global::Microsoft.Windows.Media.Capture.CameraCaptureUIVideoCaptureSettings>.CreateMarshalerArray2(array, (o) => CreateMarshaler2(o));
        public static (int length, IntPtr data) GetAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.Windows.Media.Capture.CameraCaptureUIVideoCaptureSettings>.GetAbiArray(box);
        public static unsafe global::Microsoft.Windows.Media.Capture.CameraCaptureUIVideoCaptureSettings[] FromAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.Windows.Media.Capture.CameraCaptureUIVideoCaptureSettings>.FromAbiArray(box, FromAbi);
        public static void CopyAbiArray(global::Microsoft.Windows.Media.Capture.CameraCaptureUIVideoCaptureSettings[] array, object box) => MarshalInterfaceHelper<global::Microsoft.Windows.Media.Capture.CameraCaptureUIVideoCaptureSettings>.CopyAbiArray(array, box, FromAbi);
        public static (int length, IntPtr data) FromManagedArray(global::Microsoft.Windows.Media.Capture.CameraCaptureUIVideoCaptureSettings[] array) => MarshalInterfaceHelper<global::Microsoft.Windows.Media.Capture.CameraCaptureUIVideoCaptureSettings>.FromManagedArray(array, (o) => FromManaged(o));
        public static void DisposeMarshaler(IObjectReference value) => MarshalInspectable<object>.DisposeMarshaler(value);
        public static void DisposeMarshalerArray(MarshalInterfaceHelper<global::Microsoft.Windows.Media.Capture.CameraCaptureUIVideoCaptureSettings>.MarshalerArray array) => MarshalInterfaceHelper<global::Microsoft.Windows.Media.Capture.CameraCaptureUIVideoCaptureSettings>.DisposeMarshalerArray(array);
        public static void DisposeAbi(IntPtr abi) => MarshalInspectable<object>.DisposeAbi(abi);
        public static unsafe void DisposeAbiArray(object box) => MarshalInspectable<object>.DisposeAbiArray(box);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    internal sealed class CameraCaptureUIVideoCaptureSettingsRcwFactoryAttribute : global::WinRT.WinRTImplementationTypeRcwFactoryAttribute
    {
        public override object CreateInstance(global::WinRT.IInspectable inspectable)
            => new global::Microsoft.Windows.Media.Capture.CameraCaptureUIVideoCaptureSettings(inspectable.ObjRef);
    }
    internal static class ICameraCaptureUIMethods
    {


        internal static unsafe global::Windows.Foundation.IAsyncOperation<global::Windows.Storage.StorageFile> CaptureFileAsync(IObjectReference _obj, global::Microsoft.Windows.Media.Capture.CameraCaptureUIMode mode)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::Microsoft.Windows.Media.Capture.CameraCaptureUIMode, IntPtr*, int>**)ThisPtr)[8](ThisPtr, mode, &__retval));
                global::System.GC.KeepAlive(_obj);
                _ = global::WinRT.GenericTypeInstantiations.Windows_Foundation_IAsyncOperation_1_Windows_Storage_StorageFile.EnsureInitialized();
                return MarshalInterface<global::Windows.Foundation.IAsyncOperation<global::Windows.Storage.StorageFile>>.FromAbi(__retval);
            }
            finally
            {
                MarshalInterface<global::Windows.Foundation.IAsyncOperation<global::Windows.Storage.StorageFile>>.DisposeAbi(__retval);
            }
        }
        internal static unsafe global::Microsoft.Windows.Media.Capture.CameraCaptureUIPhotoCaptureSettings get_PhotoSettings(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[6](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.Windows.Media.Capture.CameraCaptureUIPhotoCaptureSettings.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.Windows.Media.Capture.CameraCaptureUIPhotoCaptureSettings.DisposeAbi(__retval);
            }
        }

        internal static unsafe global::Microsoft.Windows.Media.Capture.CameraCaptureUIVideoCaptureSettings get_VideoSettings(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[7](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.Windows.Media.Capture.CameraCaptureUIVideoCaptureSettings.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.Windows.Media.Capture.CameraCaptureUIVideoCaptureSettings.DisposeAbi(__retval);
            }
        }



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0x24, 0xD0, 0x1, 0xC0, 0x17, 0xC6, 0x42, 0x57, 0x9A, 0xE1, 0x8F, 0xD3, 0x1B, 0xE0, 0x7F, 0x6C };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("C001D024-C617-5742-9AE1-8FD31BE07F6C")]
    internal interface ICameraCaptureUI : global::Microsoft.Windows.Media.Capture.ICameraCaptureUI
    {
    }
    internal static class ICameraCaptureUIFactoryMethods
    {


        internal static unsafe global::Microsoft.Windows.Media.Capture.CameraCaptureUI CreateInstance(IObjectReference _obj, global::Microsoft.UI.WindowId windowId)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::Microsoft.UI.WindowId, IntPtr*, int>**)ThisPtr)[6](ThisPtr, windowId, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.Windows.Media.Capture.CameraCaptureUI.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.Windows.Media.Capture.CameraCaptureUI.DisposeAbi(__retval);
            }
        }


        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0x3D, 0x62, 0x49, 0x2B, 0x22, 0x5F, 0xEE, 0x5F, 0x99, 0x1F, 0x14, 0xF2, 0x45, 0x92, 0xA3, 0xC2 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("2B49623D-5F22-5FEE-991F-14F24592A3C2")]
    internal interface ICameraCaptureUIFactory : global::Microsoft.Windows.Media.Capture.ICameraCaptureUIFactory
    {
    }
    internal static class ICameraCaptureUIPhotoCaptureSettingsMethods
    {

        internal static unsafe bool get_AllowCropping(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            byte __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, byte*, int>**)ThisPtr)[6](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval != 0;
        }
        internal static unsafe void set_AllowCropping(IObjectReference _obj, bool value)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, byte, int>**)ThisPtr)[7](ThisPtr, (byte)(value ? 1 : 0)));
            global::System.GC.KeepAlive(_obj);
        }

        internal static unsafe global::Windows.Foundation.Size get_CroppedAspectRatio(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::Windows.Foundation.Size __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::Windows.Foundation.Size*, int>**)ThisPtr)[8](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }
        internal static unsafe void set_CroppedAspectRatio(IObjectReference _obj, global::Windows.Foundation.Size value)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::Windows.Foundation.Size, int>**)ThisPtr)[9](ThisPtr, value));
            global::System.GC.KeepAlive(_obj);
        }

        internal static unsafe global::Windows.Foundation.Size get_CroppedSizeInPixels(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::Windows.Foundation.Size __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::Windows.Foundation.Size*, int>**)ThisPtr)[10](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }
        internal static unsafe void set_CroppedSizeInPixels(IObjectReference _obj, global::Windows.Foundation.Size value)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::Windows.Foundation.Size, int>**)ThisPtr)[11](ThisPtr, value));
            global::System.GC.KeepAlive(_obj);
        }

        internal static unsafe global::Microsoft.Windows.Media.Capture.CameraCaptureUIPhotoFormat get_Format(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::Microsoft.Windows.Media.Capture.CameraCaptureUIPhotoFormat __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::Microsoft.Windows.Media.Capture.CameraCaptureUIPhotoFormat*, int>**)ThisPtr)[12](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }
        internal static unsafe void set_Format(IObjectReference _obj, global::Microsoft.Windows.Media.Capture.CameraCaptureUIPhotoFormat value)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::Microsoft.Windows.Media.Capture.CameraCaptureUIPhotoFormat, int>**)ThisPtr)[13](ThisPtr, value));
            global::System.GC.KeepAlive(_obj);
        }

        internal static unsafe global::Microsoft.Windows.Media.Capture.CameraCaptureUIMaxPhotoResolution get_MaxResolution(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::Microsoft.Windows.Media.Capture.CameraCaptureUIMaxPhotoResolution __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::Microsoft.Windows.Media.Capture.CameraCaptureUIMaxPhotoResolution*, int>**)ThisPtr)[14](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }
        internal static unsafe void set_MaxResolution(IObjectReference _obj, global::Microsoft.Windows.Media.Capture.CameraCaptureUIMaxPhotoResolution value)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::Microsoft.Windows.Media.Capture.CameraCaptureUIMaxPhotoResolution, int>**)ThisPtr)[15](ThisPtr, value));
            global::System.GC.KeepAlive(_obj);
        }



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0x55, 0x21, 0xFE, 0x19, 0x18, 0xD0, 0xFC, 0x53, 0xBB, 0xDC, 0x57, 0x81, 0xA9, 0x46, 0x87, 0xA0 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("19FE2155-D018-53FC-BBDC-5781A94687A0")]
    internal interface ICameraCaptureUIPhotoCaptureSettings : global::Microsoft.Windows.Media.Capture.ICameraCaptureUIPhotoCaptureSettings
    {
    }
    internal static class ICameraCaptureUIVideoCaptureSettingsMethods
    {

        internal static unsafe bool get_AllowTrimming(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            byte __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, byte*, int>**)ThisPtr)[6](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval != 0;
        }
        internal static unsafe void set_AllowTrimming(IObjectReference _obj, bool value)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, byte, int>**)ThisPtr)[7](ThisPtr, (byte)(value ? 1 : 0)));
            global::System.GC.KeepAlive(_obj);
        }

        internal static unsafe global::Microsoft.Windows.Media.Capture.CameraCaptureUIVideoFormat get_Format(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::Microsoft.Windows.Media.Capture.CameraCaptureUIVideoFormat __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::Microsoft.Windows.Media.Capture.CameraCaptureUIVideoFormat*, int>**)ThisPtr)[8](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }
        internal static unsafe void set_Format(IObjectReference _obj, global::Microsoft.Windows.Media.Capture.CameraCaptureUIVideoFormat value)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::Microsoft.Windows.Media.Capture.CameraCaptureUIVideoFormat, int>**)ThisPtr)[9](ThisPtr, value));
            global::System.GC.KeepAlive(_obj);
        }

        internal static unsafe float get_MaxDurationInSeconds(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            float __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, float*, int>**)ThisPtr)[10](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }
        internal static unsafe void set_MaxDurationInSeconds(IObjectReference _obj, float value)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, float, int>**)ThisPtr)[11](ThisPtr, value));
            global::System.GC.KeepAlive(_obj);
        }

        internal static unsafe global::Microsoft.Windows.Media.Capture.CameraCaptureUIMaxVideoResolution get_MaxResolution(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::Microsoft.Windows.Media.Capture.CameraCaptureUIMaxVideoResolution __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::Microsoft.Windows.Media.Capture.CameraCaptureUIMaxVideoResolution*, int>**)ThisPtr)[12](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }
        internal static unsafe void set_MaxResolution(IObjectReference _obj, global::Microsoft.Windows.Media.Capture.CameraCaptureUIMaxVideoResolution value)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::Microsoft.Windows.Media.Capture.CameraCaptureUIMaxVideoResolution, int>**)ThisPtr)[13](ThisPtr, value));
            global::System.GC.KeepAlive(_obj);
        }



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0xF6, 0x74, 0xDD, 0x47, 0xB7, 0x83, 0x23, 0x51, 0xBB, 0xDF, 0xD7, 0x57, 0x20, 0x1D, 0x1E, 0xE8 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("47DD74F6-83B7-5123-BBDF-D757201D1EE8")]
    internal interface ICameraCaptureUIVideoCaptureSettings : global::Microsoft.Windows.Media.Capture.ICameraCaptureUIVideoCaptureSettings
    {
    }
}
#pragma warning restore CA1416
