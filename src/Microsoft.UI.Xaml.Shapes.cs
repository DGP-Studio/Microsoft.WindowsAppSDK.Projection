//------------------------------------------------------------------------------
// <auto-generated>
//     This file was generated by cswinrt.exe version 2.2.0.241111.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Diagnostics;
using System.Diagnostics.CodeAnalysis;
using System.Linq.Expressions;
using System.Reflection;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;
using WinRT;
using WinRT.Interop;


#pragma warning disable 0169 // warning CS0169: The field '...' is never used
#pragma warning disable 0649 // warning CS0169: Field '...' is never assigned to
#pragma warning disable CA2207, CA1063, CA1033, CA1001, CA2213

namespace Microsoft.UI.Xaml.Shapes
{
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")]
    [global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Shapes.Ellipse))]
    [global::ABI.Microsoft.UI.Xaml.Shapes.EllipseRcwFactory]
    [global::WinRT.ProjectedRuntimeClass(typeof(IEllipse))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    public sealed class Ellipse : Shape, global::System.Runtime.InteropServices.ICustomQueryInterface, IWinRTObject, IEquatable<Ellipse>
    {
        private IntPtr ThisPtr => _inner == null ? (((IWinRTObject)this).NativeObject).ThisPtr : _inner.ThisPtr;

        private readonly IObjectReference _inner = null;



        private IObjectReference _objRef_global__Microsoft_UI_Xaml_Shapes_IEllipse => _inner;


        private static volatile IObjectReference ___objRef_global__Microsoft_UI_Xaml_Shapes_Ellipse;
        private static IObjectReference _objRef_global__Microsoft_UI_Xaml_Shapes_Ellipse
        {
            get
            { 
                var factory = ___objRef_global__Microsoft_UI_Xaml_Shapes_Ellipse;
                if (factory != null && factory.IsInCurrentContext)
                {
                    return factory;
                }
                else
                {
                    return ___objRef_global__Microsoft_UI_Xaml_Shapes_Ellipse = ActivationFactory.Get("Microsoft.UI.Xaml.Shapes.Ellipse");
                }
            }
        }

        public Ellipse() :base(global::WinRT.DerivedComposed.Instance)
        {
            _inner = global::ABI.WinRT.Interop.IActivationFactoryMethods.ActivateInstanceUnsafe(_objRef_global__Microsoft_UI_Xaml_Shapes_Ellipse, global::ABI.Microsoft.UI.Xaml.Shapes.IEllipseMethods.IID);
            ComWrappersSupport.RegisterObjectForInterface(this, ThisPtr);
            ComWrappersHelper.Init(_inner, false);

        }

        public static new Ellipse FromAbi(IntPtr thisPtr)
        {
            if (thisPtr == IntPtr.Zero) return null;
            return MarshalInspectable<Ellipse>.FromAbi(thisPtr);
        }

        internal Ellipse(IObjectReference objRef)
            : base(global::WinRT.DerivedComposed.Instance)

        {
            _inner = objRef.As(global::ABI.Microsoft.UI.Xaml.Shapes.IEllipseMethods.IID);

        }


        public static bool operator ==(Ellipse x, Ellipse y) => (x?.ThisPtr ?? IntPtr.Zero) == (y?.ThisPtr ?? IntPtr.Zero);
        public static bool operator !=(Ellipse x, Ellipse y) => !(x == y);
        public bool Equals(Ellipse other) => this == other;
        public override bool Equals(object obj) => obj is Ellipse that && this == that;
        public override int GetHashCode() => ThisPtr.GetHashCode();


        bool IWinRTObject.HasUnwrappableNativeObject => true;
        IObjectReference IWinRTObject.NativeObject => _inner;

        private struct InterfaceTag<I>{};


        protected override bool IsOverridableInterface(Guid iid) => base.IsOverridableInterface(iid);

        global::System.Runtime.InteropServices.CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(ref Guid iid, out IntPtr ppv)
        {
            ppv = IntPtr.Zero;
            if (IsOverridableInterface(iid) || global::WinRT.Interop.IID.IID_IInspectable == iid)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
            }

            if (((IWinRTObject)this).NativeObject.TryAs(iid, out ppv) >= 0)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.Handled;
            }

            return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
        }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")][Guid("805C39AA-FA8A-5E0B-9847-4AB81B42A3DF")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Shapes.IEllipse))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    internal interface IEllipse
    {
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")][Guid("507B3858-AF7E-559B-A87E-4CC6A5D8BA96")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Shapes.ILine))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    internal interface ILine
    {
        double X1 { get; set; }
        double X2 { get; set; }
        double Y1 { get; set; }
        double Y2 { get; set; }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")][Guid("A425BF93-F1F3-5DCB-997E-B6A26F7AE8C0")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Shapes.ILineStatics))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    internal interface ILineStatics
    {
        global::Microsoft.UI.Xaml.DependencyProperty X1Property { get; }
        global::Microsoft.UI.Xaml.DependencyProperty X2Property { get; }
        global::Microsoft.UI.Xaml.DependencyProperty Y1Property { get; }
        global::Microsoft.UI.Xaml.DependencyProperty Y2Property { get; }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")][Guid("757D1CD8-0EC0-55C5-B400-66657E493E78")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Shapes.IPath))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    internal interface IPath
    {
        global::Microsoft.UI.Xaml.Media.Geometry Data { get; set; }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")][Guid("5E82E4C9-7502-5B1F-B940-C3346A71362A")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Shapes.IPathFactory))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    internal interface IPathFactory
    {
        Path CreateInstance(object baseInterface, out object innerInterface);
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")][Guid("2146D36F-721C-5B54-AF7D-60F3ADC4FBCA")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Shapes.IPathStatics))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    internal interface IPathStatics
    {
        global::Microsoft.UI.Xaml.DependencyProperty DataProperty { get; }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")][Guid("FA126347-D1D4-54DD-B1A4-C35019397944")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Shapes.IPolygon))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    internal interface IPolygon
    {
        global::Microsoft.UI.Xaml.Media.FillRule FillRule { get; set; }
        global::Microsoft.UI.Xaml.Media.PointCollection Points { get; set; }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")][Guid("85DDBADA-9E37-5971-A9AA-DCE31F9CF67A")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Shapes.IPolygonStatics))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    internal interface IPolygonStatics
    {
        global::Microsoft.UI.Xaml.DependencyProperty FillRuleProperty { get; }
        global::Microsoft.UI.Xaml.DependencyProperty PointsProperty { get; }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")][Guid("C7F0BEC6-184C-5D96-8102-04DD211E100C")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Shapes.IPolyline))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    internal interface IPolyline
    {
        global::Microsoft.UI.Xaml.Media.FillRule FillRule { get; set; }
        global::Microsoft.UI.Xaml.Media.PointCollection Points { get; set; }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")][Guid("48840FE7-D735-5080-9C6D-2862665CDDA0")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Shapes.IPolylineStatics))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    internal interface IPolylineStatics
    {
        global::Microsoft.UI.Xaml.DependencyProperty FillRuleProperty { get; }
        global::Microsoft.UI.Xaml.DependencyProperty PointsProperty { get; }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")][Guid("BF7D30B9-152C-556E-9F10-D0B7EBA4E52F")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Shapes.IRectangle))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    internal interface IRectangle
    {
        double RadiusX { get; set; }
        double RadiusY { get; set; }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")][Guid("3CC3CC79-C332-5AD0-8743-1F1B1E670A86")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Shapes.IRectangleStatics))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    internal interface IRectangleStatics
    {
        global::Microsoft.UI.Xaml.DependencyProperty RadiusXProperty { get; }
        global::Microsoft.UI.Xaml.DependencyProperty RadiusYProperty { get; }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")][Guid("9941AAD3-6AF2-5BA2-9085-8506D5F2485E")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Shapes.IShape))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    internal interface IShape
    {
        global::Microsoft.UI.Composition.CompositionBrush GetAlphaMask();
        global::Microsoft.UI.Xaml.Media.Brush Fill { get; set; }
        global::Microsoft.UI.Xaml.Media.Transform GeometryTransform { get; }
        global::Microsoft.UI.Xaml.Media.Stretch Stretch { get; set; }
        global::Microsoft.UI.Xaml.Media.Brush Stroke { get; set; }
        global::Microsoft.UI.Xaml.Media.DoubleCollection StrokeDashArray { get; set; }
        global::Microsoft.UI.Xaml.Media.PenLineCap StrokeDashCap { get; set; }
        double StrokeDashOffset { get; set; }
        global::Microsoft.UI.Xaml.Media.PenLineCap StrokeEndLineCap { get; set; }
        global::Microsoft.UI.Xaml.Media.PenLineJoin StrokeLineJoin { get; set; }
        double StrokeMiterLimit { get; set; }
        global::Microsoft.UI.Xaml.Media.PenLineCap StrokeStartLineCap { get; set; }
        double StrokeThickness { get; set; }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")][Guid("4FECAFAF-8265-5252-BA5C-F43639F974A5")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Shapes.IShapeFactory))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    internal interface IShapeFactory
    {
        Shape CreateInstance(object baseInterface, out object innerInterface);
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")][Guid("EA407C43-8A09-587A-958A-4DD17D217CE1")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Shapes.IShapeStatics))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    internal interface IShapeStatics
    {
        global::Microsoft.UI.Xaml.DependencyProperty FillProperty { get; }
        global::Microsoft.UI.Xaml.DependencyProperty StretchProperty { get; }
        global::Microsoft.UI.Xaml.DependencyProperty StrokeDashArrayProperty { get; }
        global::Microsoft.UI.Xaml.DependencyProperty StrokeDashCapProperty { get; }
        global::Microsoft.UI.Xaml.DependencyProperty StrokeDashOffsetProperty { get; }
        global::Microsoft.UI.Xaml.DependencyProperty StrokeEndLineCapProperty { get; }
        global::Microsoft.UI.Xaml.DependencyProperty StrokeLineJoinProperty { get; }
        global::Microsoft.UI.Xaml.DependencyProperty StrokeMiterLimitProperty { get; }
        global::Microsoft.UI.Xaml.DependencyProperty StrokeProperty { get; }
        global::Microsoft.UI.Xaml.DependencyProperty StrokeStartLineCapProperty { get; }
        global::Microsoft.UI.Xaml.DependencyProperty StrokeThicknessProperty { get; }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")]
    [global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Shapes.Line))]
    [global::ABI.Microsoft.UI.Xaml.Shapes.LineRcwFactory]
    [global::WinRT.ProjectedRuntimeClass(typeof(ILine))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    public sealed class Line : Shape, global::System.Runtime.InteropServices.ICustomQueryInterface, IWinRTObject, IEquatable<Line>
    {
        private IntPtr ThisPtr => _inner == null ? (((IWinRTObject)this).NativeObject).ThisPtr : _inner.ThisPtr;

        private readonly IObjectReference _inner = null;



        private IObjectReference _objRef_global__Microsoft_UI_Xaml_Shapes_ILine => _inner;


        private static volatile IObjectReference ___objRef_global__Microsoft_UI_Xaml_Shapes_Line;
        private static IObjectReference _objRef_global__Microsoft_UI_Xaml_Shapes_Line
        {
            get
            { 
                var factory = ___objRef_global__Microsoft_UI_Xaml_Shapes_Line;
                if (factory != null && factory.IsInCurrentContext)
                {
                    return factory;
                }
                else
                {
                    return ___objRef_global__Microsoft_UI_Xaml_Shapes_Line = ActivationFactory.Get("Microsoft.UI.Xaml.Shapes.Line");
                }
            }
        }

        public Line() :base(global::WinRT.DerivedComposed.Instance)
        {
            _inner = global::ABI.WinRT.Interop.IActivationFactoryMethods.ActivateInstanceUnsafe(_objRef_global__Microsoft_UI_Xaml_Shapes_Line, global::ABI.Microsoft.UI.Xaml.Shapes.ILineMethods.IID);
            ComWrappersSupport.RegisterObjectForInterface(this, ThisPtr);
            ComWrappersHelper.Init(_inner, false);

        }

        public static new I As<I>() => ActivationFactory.Get("Microsoft.UI.Xaml.Shapes.Line").AsInterface<I>();

        private static volatile IObjectReference ___objRef_global__Microsoft_UI_Xaml_Shapes_ILineStatics;
        private static IObjectReference _objRef_global__Microsoft_UI_Xaml_Shapes_ILineStatics
        {
            get
            { 
                var factory = ___objRef_global__Microsoft_UI_Xaml_Shapes_ILineStatics;
                if (factory != null && factory.IsInCurrentContext)
                {
                    return factory;
                }
                else
                {
                    return ___objRef_global__Microsoft_UI_Xaml_Shapes_ILineStatics = ActivationFactory.Get("Microsoft.UI.Xaml.Shapes.Line", global::ABI.Microsoft.UI.Xaml.Shapes.ILineStaticsMethods.IID);
                }
            }
        }

        public static global::Microsoft.UI.Xaml.DependencyProperty X1Property => global::ABI.Microsoft.UI.Xaml.Shapes.ILineStaticsMethods.get_X1Property(_objRef_global__Microsoft_UI_Xaml_Shapes_ILineStatics);

        public static global::Microsoft.UI.Xaml.DependencyProperty X2Property => global::ABI.Microsoft.UI.Xaml.Shapes.ILineStaticsMethods.get_X2Property(_objRef_global__Microsoft_UI_Xaml_Shapes_ILineStatics);

        public static global::Microsoft.UI.Xaml.DependencyProperty Y1Property => global::ABI.Microsoft.UI.Xaml.Shapes.ILineStaticsMethods.get_Y1Property(_objRef_global__Microsoft_UI_Xaml_Shapes_ILineStatics);

        public static global::Microsoft.UI.Xaml.DependencyProperty Y2Property => global::ABI.Microsoft.UI.Xaml.Shapes.ILineStaticsMethods.get_Y2Property(_objRef_global__Microsoft_UI_Xaml_Shapes_ILineStatics);

        public static new Line FromAbi(IntPtr thisPtr)
        {
            if (thisPtr == IntPtr.Zero) return null;
            return MarshalInspectable<Line>.FromAbi(thisPtr);
        }

        internal Line(IObjectReference objRef)
            : base(global::WinRT.DerivedComposed.Instance)

        {
            _inner = objRef.As(global::ABI.Microsoft.UI.Xaml.Shapes.ILineMethods.IID);

        }


        public static bool operator ==(Line x, Line y) => (x?.ThisPtr ?? IntPtr.Zero) == (y?.ThisPtr ?? IntPtr.Zero);
        public static bool operator !=(Line x, Line y) => !(x == y);
        public bool Equals(Line other) => this == other;
        public override bool Equals(object obj) => obj is Line that && this == that;
        public override int GetHashCode() => ThisPtr.GetHashCode();


        bool IWinRTObject.HasUnwrappableNativeObject => true;
        IObjectReference IWinRTObject.NativeObject => _inner;

        private struct InterfaceTag<I>{};


        public double X1
        {
            get => global::ABI.Microsoft.UI.Xaml.Shapes.ILineMethods.get_X1(_objRef_global__Microsoft_UI_Xaml_Shapes_ILine);
            set => global::ABI.Microsoft.UI.Xaml.Shapes.ILineMethods.set_X1(_objRef_global__Microsoft_UI_Xaml_Shapes_ILine, value);
        }

        public double X2
        {
            get => global::ABI.Microsoft.UI.Xaml.Shapes.ILineMethods.get_X2(_objRef_global__Microsoft_UI_Xaml_Shapes_ILine);
            set => global::ABI.Microsoft.UI.Xaml.Shapes.ILineMethods.set_X2(_objRef_global__Microsoft_UI_Xaml_Shapes_ILine, value);
        }

        public double Y1
        {
            get => global::ABI.Microsoft.UI.Xaml.Shapes.ILineMethods.get_Y1(_objRef_global__Microsoft_UI_Xaml_Shapes_ILine);
            set => global::ABI.Microsoft.UI.Xaml.Shapes.ILineMethods.set_Y1(_objRef_global__Microsoft_UI_Xaml_Shapes_ILine, value);
        }

        public double Y2
        {
            get => global::ABI.Microsoft.UI.Xaml.Shapes.ILineMethods.get_Y2(_objRef_global__Microsoft_UI_Xaml_Shapes_ILine);
            set => global::ABI.Microsoft.UI.Xaml.Shapes.ILineMethods.set_Y2(_objRef_global__Microsoft_UI_Xaml_Shapes_ILine, value);
        }

        protected override bool IsOverridableInterface(Guid iid) => base.IsOverridableInterface(iid);

        global::System.Runtime.InteropServices.CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(ref Guid iid, out IntPtr ppv)
        {
            ppv = IntPtr.Zero;
            if (IsOverridableInterface(iid) || global::WinRT.Interop.IID.IID_IInspectable == iid)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
            }

            if (((IWinRTObject)this).NativeObject.TryAs(iid, out ppv) >= 0)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.Handled;
            }

            return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
        }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")]
    [global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Shapes.Path))]
    [global::ABI.Microsoft.UI.Xaml.Shapes.PathRcwFactory]
    [global::WinRT.ProjectedRuntimeClass(typeof(IPath))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    public class Path : Shape, global::System.Runtime.InteropServices.ICustomQueryInterface, IWinRTObject, IEquatable<Path>
    {
        private IntPtr ThisPtr => _inner == null ? (((IWinRTObject)this).NativeObject).ThisPtr : _inner.ThisPtr;

        private readonly IObjectReference _inner = null;




        private volatile IObjectReference ___objRef_global__Microsoft_UI_Xaml_Shapes_IPath;
        private IObjectReference Make___objRef_global__Microsoft_UI_Xaml_Shapes_IPath()
        {
            global::System.Threading.Interlocked.CompareExchange(ref ___objRef_global__Microsoft_UI_Xaml_Shapes_IPath, ((IWinRTObject)this).NativeObject.As<IUnknownVftbl>(global::ABI.Microsoft.UI.Xaml.Shapes.IPathMethods.IID), null);
            return ___objRef_global__Microsoft_UI_Xaml_Shapes_IPath;
        }
        private IObjectReference _objRef_global__Microsoft_UI_Xaml_Shapes_IPath => ___objRef_global__Microsoft_UI_Xaml_Shapes_IPath ?? Make___objRef_global__Microsoft_UI_Xaml_Shapes_IPath();



        private static class _IPathFactoryMethods
        {
            public static unsafe IntPtr CreateInstance(IObjectReference _obj, object baseInterface, out IntPtr innerInterface)
            {
                var ThisPtr = _obj.ThisPtr;

                ObjectReferenceValue __baseInterface = default;
                IntPtr __innerInterface = default;
                IntPtr __retval = default;
                try
                {
                    __baseInterface = MarshalInspectable<object>.CreateMarshaler2(baseInterface);
                    global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, IntPtr*, IntPtr*, int>**)ThisPtr)[6](ThisPtr, MarshalInspectable<object>.GetAbi(__baseInterface), &__innerInterface, &__retval));
                    global::System.GC.KeepAlive(_obj);
                    innerInterface = __innerInterface;
                    return __retval;
                }
                finally
                {
                    MarshalInspectable<object>.DisposeMarshaler(__baseInterface);
                }
            }
        }

        private static volatile IObjectReference ___objRef_global__Microsoft_UI_Xaml_Shapes_IPathFactory;
        private static IObjectReference _objRef_global__Microsoft_UI_Xaml_Shapes_IPathFactory
        {
            get
            { 
                var factory = ___objRef_global__Microsoft_UI_Xaml_Shapes_IPathFactory;
                if (factory != null && factory.IsInCurrentContext)
                {
                    return factory;
                }
                else
                {
                    return ___objRef_global__Microsoft_UI_Xaml_Shapes_IPathFactory = ActivationFactory.Get("Microsoft.UI.Xaml.Shapes.Path", global::ABI.Microsoft.UI.Xaml.Shapes.IPathFactoryMethods.IID);
                }
            }
        }

        public Path():base(global::WinRT.DerivedComposed.Instance)
        {
            bool isAggregation = this.GetType() != typeof(Path);
            object baseInspectable = isAggregation ? this : null;
            IntPtr composed = _IPathFactoryMethods.CreateInstance(_objRef_global__Microsoft_UI_Xaml_Shapes_IPathFactory,  baseInspectable, out IntPtr inner);
            try
            {
                ComWrappersHelper.Init(isAggregation, this, composed, inner, global::ABI.Microsoft.UI.Xaml.Shapes.IPathMethods.IID, out _inner);

            }
            finally
            {
                Marshal.Release(inner);   
            }
        }

        public static new I As<I>() => ActivationFactory.Get("Microsoft.UI.Xaml.Shapes.Path").AsInterface<I>();

        private static volatile IObjectReference ___objRef_global__Microsoft_UI_Xaml_Shapes_IPathStatics;
        private static IObjectReference _objRef_global__Microsoft_UI_Xaml_Shapes_IPathStatics
        {
            get
            { 
                var factory = ___objRef_global__Microsoft_UI_Xaml_Shapes_IPathStatics;
                if (factory != null && factory.IsInCurrentContext)
                {
                    return factory;
                }
                else
                {
                    return ___objRef_global__Microsoft_UI_Xaml_Shapes_IPathStatics = ActivationFactory.Get("Microsoft.UI.Xaml.Shapes.Path", global::ABI.Microsoft.UI.Xaml.Shapes.IPathStaticsMethods.IID);
                }
            }
        }

        public static global::Microsoft.UI.Xaml.DependencyProperty DataProperty => global::ABI.Microsoft.UI.Xaml.Shapes.IPathStaticsMethods.get_DataProperty(_objRef_global__Microsoft_UI_Xaml_Shapes_IPathStatics);

        public static new Path FromAbi(IntPtr thisPtr)
        {
            if (thisPtr == IntPtr.Zero) return null;
            return MarshalInspectable<Path>.FromAbi(thisPtr);
        }

        protected internal Path(IObjectReference objRef)
            : base(global::WinRT.DerivedComposed.Instance)

        {
            _inner = objRef.As(global::ABI.Microsoft.UI.Xaml.Shapes.IPathMethods.IID);

        }


        public static bool operator ==(Path x, Path y) => (x?.ThisPtr ?? IntPtr.Zero) == (y?.ThisPtr ?? IntPtr.Zero);
        public static bool operator !=(Path x, Path y) => !(x == y);
        public bool Equals(Path other) => this == other;
        public override bool Equals(object obj) => obj is Path that && this == that;
        public override int GetHashCode() => ThisPtr.GetHashCode();


        protected Path(global::WinRT.DerivedComposed _):base(_)
        {

        }
        bool IWinRTObject.HasUnwrappableNativeObject => this.GetType() == typeof(Path);
        IObjectReference IWinRTObject.NativeObject => _inner;

        private struct InterfaceTag<I>{};


        public global::Microsoft.UI.Xaml.Media.Geometry Data
        {
            get => global::ABI.Microsoft.UI.Xaml.Shapes.IPathMethods.get_Data(_objRef_global__Microsoft_UI_Xaml_Shapes_IPath);
            set => global::ABI.Microsoft.UI.Xaml.Shapes.IPathMethods.set_Data(_objRef_global__Microsoft_UI_Xaml_Shapes_IPath, value);
        }

        protected override bool IsOverridableInterface(Guid iid) => base.IsOverridableInterface(iid);

        global::System.Runtime.InteropServices.CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(ref Guid iid, out IntPtr ppv)
        {
            ppv = IntPtr.Zero;
            if (IsOverridableInterface(iid) || global::WinRT.Interop.IID.IID_IInspectable == iid)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
            }

            if (((IWinRTObject)this).NativeObject.TryAs(iid, out ppv) >= 0)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.Handled;
            }

            return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
        }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")]
    [global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Shapes.Polygon))]
    [global::ABI.Microsoft.UI.Xaml.Shapes.PolygonRcwFactory]
    [global::WinRT.ProjectedRuntimeClass(typeof(IPolygon))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    public sealed class Polygon : Shape, global::System.Runtime.InteropServices.ICustomQueryInterface, IWinRTObject, IEquatable<Polygon>
    {
        private IntPtr ThisPtr => _inner == null ? (((IWinRTObject)this).NativeObject).ThisPtr : _inner.ThisPtr;

        private readonly IObjectReference _inner = null;



        private IObjectReference _objRef_global__Microsoft_UI_Xaml_Shapes_IPolygon => _inner;


        private static volatile IObjectReference ___objRef_global__Microsoft_UI_Xaml_Shapes_Polygon;
        private static IObjectReference _objRef_global__Microsoft_UI_Xaml_Shapes_Polygon
        {
            get
            { 
                var factory = ___objRef_global__Microsoft_UI_Xaml_Shapes_Polygon;
                if (factory != null && factory.IsInCurrentContext)
                {
                    return factory;
                }
                else
                {
                    return ___objRef_global__Microsoft_UI_Xaml_Shapes_Polygon = ActivationFactory.Get("Microsoft.UI.Xaml.Shapes.Polygon");
                }
            }
        }

        public Polygon() :base(global::WinRT.DerivedComposed.Instance)
        {
            _inner = global::ABI.WinRT.Interop.IActivationFactoryMethods.ActivateInstanceUnsafe(_objRef_global__Microsoft_UI_Xaml_Shapes_Polygon, global::ABI.Microsoft.UI.Xaml.Shapes.IPolygonMethods.IID);
            ComWrappersSupport.RegisterObjectForInterface(this, ThisPtr);
            ComWrappersHelper.Init(_inner, false);

        }

        public static new I As<I>() => ActivationFactory.Get("Microsoft.UI.Xaml.Shapes.Polygon").AsInterface<I>();

        private static volatile IObjectReference ___objRef_global__Microsoft_UI_Xaml_Shapes_IPolygonStatics;
        private static IObjectReference _objRef_global__Microsoft_UI_Xaml_Shapes_IPolygonStatics
        {
            get
            { 
                var factory = ___objRef_global__Microsoft_UI_Xaml_Shapes_IPolygonStatics;
                if (factory != null && factory.IsInCurrentContext)
                {
                    return factory;
                }
                else
                {
                    return ___objRef_global__Microsoft_UI_Xaml_Shapes_IPolygonStatics = ActivationFactory.Get("Microsoft.UI.Xaml.Shapes.Polygon", global::ABI.Microsoft.UI.Xaml.Shapes.IPolygonStaticsMethods.IID);
                }
            }
        }

        public static global::Microsoft.UI.Xaml.DependencyProperty FillRuleProperty => global::ABI.Microsoft.UI.Xaml.Shapes.IPolygonStaticsMethods.get_FillRuleProperty(_objRef_global__Microsoft_UI_Xaml_Shapes_IPolygonStatics);

        public static global::Microsoft.UI.Xaml.DependencyProperty PointsProperty => global::ABI.Microsoft.UI.Xaml.Shapes.IPolygonStaticsMethods.get_PointsProperty(_objRef_global__Microsoft_UI_Xaml_Shapes_IPolygonStatics);

        public static new Polygon FromAbi(IntPtr thisPtr)
        {
            if (thisPtr == IntPtr.Zero) return null;
            return MarshalInspectable<Polygon>.FromAbi(thisPtr);
        }

        internal Polygon(IObjectReference objRef)
            : base(global::WinRT.DerivedComposed.Instance)

        {
            _inner = objRef.As(global::ABI.Microsoft.UI.Xaml.Shapes.IPolygonMethods.IID);

        }


        public static bool operator ==(Polygon x, Polygon y) => (x?.ThisPtr ?? IntPtr.Zero) == (y?.ThisPtr ?? IntPtr.Zero);
        public static bool operator !=(Polygon x, Polygon y) => !(x == y);
        public bool Equals(Polygon other) => this == other;
        public override bool Equals(object obj) => obj is Polygon that && this == that;
        public override int GetHashCode() => ThisPtr.GetHashCode();


        bool IWinRTObject.HasUnwrappableNativeObject => true;
        IObjectReference IWinRTObject.NativeObject => _inner;

        private struct InterfaceTag<I>{};


        public global::Microsoft.UI.Xaml.Media.FillRule FillRule
        {
            get => global::ABI.Microsoft.UI.Xaml.Shapes.IPolygonMethods.get_FillRule(_objRef_global__Microsoft_UI_Xaml_Shapes_IPolygon);
            set => global::ABI.Microsoft.UI.Xaml.Shapes.IPolygonMethods.set_FillRule(_objRef_global__Microsoft_UI_Xaml_Shapes_IPolygon, value);
        }

        public global::Microsoft.UI.Xaml.Media.PointCollection Points
        {
            get => global::ABI.Microsoft.UI.Xaml.Shapes.IPolygonMethods.get_Points(_objRef_global__Microsoft_UI_Xaml_Shapes_IPolygon);
            set => global::ABI.Microsoft.UI.Xaml.Shapes.IPolygonMethods.set_Points(_objRef_global__Microsoft_UI_Xaml_Shapes_IPolygon, value);
        }

        protected override bool IsOverridableInterface(Guid iid) => base.IsOverridableInterface(iid);

        global::System.Runtime.InteropServices.CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(ref Guid iid, out IntPtr ppv)
        {
            ppv = IntPtr.Zero;
            if (IsOverridableInterface(iid) || global::WinRT.Interop.IID.IID_IInspectable == iid)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
            }

            if (((IWinRTObject)this).NativeObject.TryAs(iid, out ppv) >= 0)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.Handled;
            }

            return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
        }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")]
    [global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Shapes.Polyline))]
    [global::ABI.Microsoft.UI.Xaml.Shapes.PolylineRcwFactory]
    [global::WinRT.ProjectedRuntimeClass(typeof(IPolyline))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    public sealed class Polyline : Shape, global::System.Runtime.InteropServices.ICustomQueryInterface, IWinRTObject, IEquatable<Polyline>
    {
        private IntPtr ThisPtr => _inner == null ? (((IWinRTObject)this).NativeObject).ThisPtr : _inner.ThisPtr;

        private readonly IObjectReference _inner = null;



        private IObjectReference _objRef_global__Microsoft_UI_Xaml_Shapes_IPolyline => _inner;


        private static volatile IObjectReference ___objRef_global__Microsoft_UI_Xaml_Shapes_Polyline;
        private static IObjectReference _objRef_global__Microsoft_UI_Xaml_Shapes_Polyline
        {
            get
            { 
                var factory = ___objRef_global__Microsoft_UI_Xaml_Shapes_Polyline;
                if (factory != null && factory.IsInCurrentContext)
                {
                    return factory;
                }
                else
                {
                    return ___objRef_global__Microsoft_UI_Xaml_Shapes_Polyline = ActivationFactory.Get("Microsoft.UI.Xaml.Shapes.Polyline");
                }
            }
        }

        public Polyline() :base(global::WinRT.DerivedComposed.Instance)
        {
            _inner = global::ABI.WinRT.Interop.IActivationFactoryMethods.ActivateInstanceUnsafe(_objRef_global__Microsoft_UI_Xaml_Shapes_Polyline, global::ABI.Microsoft.UI.Xaml.Shapes.IPolylineMethods.IID);
            ComWrappersSupport.RegisterObjectForInterface(this, ThisPtr);
            ComWrappersHelper.Init(_inner, false);

        }

        public static new I As<I>() => ActivationFactory.Get("Microsoft.UI.Xaml.Shapes.Polyline").AsInterface<I>();

        private static volatile IObjectReference ___objRef_global__Microsoft_UI_Xaml_Shapes_IPolylineStatics;
        private static IObjectReference _objRef_global__Microsoft_UI_Xaml_Shapes_IPolylineStatics
        {
            get
            { 
                var factory = ___objRef_global__Microsoft_UI_Xaml_Shapes_IPolylineStatics;
                if (factory != null && factory.IsInCurrentContext)
                {
                    return factory;
                }
                else
                {
                    return ___objRef_global__Microsoft_UI_Xaml_Shapes_IPolylineStatics = ActivationFactory.Get("Microsoft.UI.Xaml.Shapes.Polyline", global::ABI.Microsoft.UI.Xaml.Shapes.IPolylineStaticsMethods.IID);
                }
            }
        }

        public static global::Microsoft.UI.Xaml.DependencyProperty FillRuleProperty => global::ABI.Microsoft.UI.Xaml.Shapes.IPolylineStaticsMethods.get_FillRuleProperty(_objRef_global__Microsoft_UI_Xaml_Shapes_IPolylineStatics);

        public static global::Microsoft.UI.Xaml.DependencyProperty PointsProperty => global::ABI.Microsoft.UI.Xaml.Shapes.IPolylineStaticsMethods.get_PointsProperty(_objRef_global__Microsoft_UI_Xaml_Shapes_IPolylineStatics);

        public static new Polyline FromAbi(IntPtr thisPtr)
        {
            if (thisPtr == IntPtr.Zero) return null;
            return MarshalInspectable<Polyline>.FromAbi(thisPtr);
        }

        internal Polyline(IObjectReference objRef)
            : base(global::WinRT.DerivedComposed.Instance)

        {
            _inner = objRef.As(global::ABI.Microsoft.UI.Xaml.Shapes.IPolylineMethods.IID);

        }


        public static bool operator ==(Polyline x, Polyline y) => (x?.ThisPtr ?? IntPtr.Zero) == (y?.ThisPtr ?? IntPtr.Zero);
        public static bool operator !=(Polyline x, Polyline y) => !(x == y);
        public bool Equals(Polyline other) => this == other;
        public override bool Equals(object obj) => obj is Polyline that && this == that;
        public override int GetHashCode() => ThisPtr.GetHashCode();


        bool IWinRTObject.HasUnwrappableNativeObject => true;
        IObjectReference IWinRTObject.NativeObject => _inner;

        private struct InterfaceTag<I>{};


        public global::Microsoft.UI.Xaml.Media.FillRule FillRule
        {
            get => global::ABI.Microsoft.UI.Xaml.Shapes.IPolylineMethods.get_FillRule(_objRef_global__Microsoft_UI_Xaml_Shapes_IPolyline);
            set => global::ABI.Microsoft.UI.Xaml.Shapes.IPolylineMethods.set_FillRule(_objRef_global__Microsoft_UI_Xaml_Shapes_IPolyline, value);
        }

        public global::Microsoft.UI.Xaml.Media.PointCollection Points
        {
            get => global::ABI.Microsoft.UI.Xaml.Shapes.IPolylineMethods.get_Points(_objRef_global__Microsoft_UI_Xaml_Shapes_IPolyline);
            set => global::ABI.Microsoft.UI.Xaml.Shapes.IPolylineMethods.set_Points(_objRef_global__Microsoft_UI_Xaml_Shapes_IPolyline, value);
        }

        protected override bool IsOverridableInterface(Guid iid) => base.IsOverridableInterface(iid);

        global::System.Runtime.InteropServices.CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(ref Guid iid, out IntPtr ppv)
        {
            ppv = IntPtr.Zero;
            if (IsOverridableInterface(iid) || global::WinRT.Interop.IID.IID_IInspectable == iid)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
            }

            if (((IWinRTObject)this).NativeObject.TryAs(iid, out ppv) >= 0)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.Handled;
            }

            return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
        }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")]
    [global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Shapes.Rectangle))]
    [global::ABI.Microsoft.UI.Xaml.Shapes.RectangleRcwFactory]
    [global::WinRT.ProjectedRuntimeClass(typeof(IRectangle))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    public sealed class Rectangle : Shape, global::System.Runtime.InteropServices.ICustomQueryInterface, IWinRTObject, IEquatable<Rectangle>
    {
        private IntPtr ThisPtr => _inner == null ? (((IWinRTObject)this).NativeObject).ThisPtr : _inner.ThisPtr;

        private readonly IObjectReference _inner = null;



        private IObjectReference _objRef_global__Microsoft_UI_Xaml_Shapes_IRectangle => _inner;


        private static volatile IObjectReference ___objRef_global__Microsoft_UI_Xaml_Shapes_Rectangle;
        private static IObjectReference _objRef_global__Microsoft_UI_Xaml_Shapes_Rectangle
        {
            get
            { 
                var factory = ___objRef_global__Microsoft_UI_Xaml_Shapes_Rectangle;
                if (factory != null && factory.IsInCurrentContext)
                {
                    return factory;
                }
                else
                {
                    return ___objRef_global__Microsoft_UI_Xaml_Shapes_Rectangle = ActivationFactory.Get("Microsoft.UI.Xaml.Shapes.Rectangle");
                }
            }
        }

        public Rectangle() :base(global::WinRT.DerivedComposed.Instance)
        {
            _inner = global::ABI.WinRT.Interop.IActivationFactoryMethods.ActivateInstanceUnsafe(_objRef_global__Microsoft_UI_Xaml_Shapes_Rectangle, global::ABI.Microsoft.UI.Xaml.Shapes.IRectangleMethods.IID);
            ComWrappersSupport.RegisterObjectForInterface(this, ThisPtr);
            ComWrappersHelper.Init(_inner, false);

        }

        public static new I As<I>() => ActivationFactory.Get("Microsoft.UI.Xaml.Shapes.Rectangle").AsInterface<I>();

        private static volatile IObjectReference ___objRef_global__Microsoft_UI_Xaml_Shapes_IRectangleStatics;
        private static IObjectReference _objRef_global__Microsoft_UI_Xaml_Shapes_IRectangleStatics
        {
            get
            { 
                var factory = ___objRef_global__Microsoft_UI_Xaml_Shapes_IRectangleStatics;
                if (factory != null && factory.IsInCurrentContext)
                {
                    return factory;
                }
                else
                {
                    return ___objRef_global__Microsoft_UI_Xaml_Shapes_IRectangleStatics = ActivationFactory.Get("Microsoft.UI.Xaml.Shapes.Rectangle", global::ABI.Microsoft.UI.Xaml.Shapes.IRectangleStaticsMethods.IID);
                }
            }
        }

        public static global::Microsoft.UI.Xaml.DependencyProperty RadiusXProperty => global::ABI.Microsoft.UI.Xaml.Shapes.IRectangleStaticsMethods.get_RadiusXProperty(_objRef_global__Microsoft_UI_Xaml_Shapes_IRectangleStatics);

        public static global::Microsoft.UI.Xaml.DependencyProperty RadiusYProperty => global::ABI.Microsoft.UI.Xaml.Shapes.IRectangleStaticsMethods.get_RadiusYProperty(_objRef_global__Microsoft_UI_Xaml_Shapes_IRectangleStatics);

        public static new Rectangle FromAbi(IntPtr thisPtr)
        {
            if (thisPtr == IntPtr.Zero) return null;
            return MarshalInspectable<Rectangle>.FromAbi(thisPtr);
        }

        internal Rectangle(IObjectReference objRef)
            : base(global::WinRT.DerivedComposed.Instance)

        {
            _inner = objRef.As(global::ABI.Microsoft.UI.Xaml.Shapes.IRectangleMethods.IID);

        }


        public static bool operator ==(Rectangle x, Rectangle y) => (x?.ThisPtr ?? IntPtr.Zero) == (y?.ThisPtr ?? IntPtr.Zero);
        public static bool operator !=(Rectangle x, Rectangle y) => !(x == y);
        public bool Equals(Rectangle other) => this == other;
        public override bool Equals(object obj) => obj is Rectangle that && this == that;
        public override int GetHashCode() => ThisPtr.GetHashCode();


        bool IWinRTObject.HasUnwrappableNativeObject => true;
        IObjectReference IWinRTObject.NativeObject => _inner;

        private struct InterfaceTag<I>{};


        public double RadiusX
        {
            get => global::ABI.Microsoft.UI.Xaml.Shapes.IRectangleMethods.get_RadiusX(_objRef_global__Microsoft_UI_Xaml_Shapes_IRectangle);
            set => global::ABI.Microsoft.UI.Xaml.Shapes.IRectangleMethods.set_RadiusX(_objRef_global__Microsoft_UI_Xaml_Shapes_IRectangle, value);
        }

        public double RadiusY
        {
            get => global::ABI.Microsoft.UI.Xaml.Shapes.IRectangleMethods.get_RadiusY(_objRef_global__Microsoft_UI_Xaml_Shapes_IRectangle);
            set => global::ABI.Microsoft.UI.Xaml.Shapes.IRectangleMethods.set_RadiusY(_objRef_global__Microsoft_UI_Xaml_Shapes_IRectangle, value);
        }

        protected override bool IsOverridableInterface(Guid iid) => base.IsOverridableInterface(iid);

        global::System.Runtime.InteropServices.CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(ref Guid iid, out IntPtr ppv)
        {
            ppv = IntPtr.Zero;
            if (IsOverridableInterface(iid) || global::WinRT.Interop.IID.IID_IInspectable == iid)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
            }

            if (((IWinRTObject)this).NativeObject.TryAs(iid, out ppv) >= 0)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.Handled;
            }

            return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
        }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")]
    [global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Shapes.Shape))]
    [global::ABI.Microsoft.UI.Xaml.Shapes.ShapeRcwFactory]
    [global::WinRT.ProjectedRuntimeClass(typeof(IShape))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    public class Shape : global::Microsoft.UI.Xaml.FrameworkElement, global::System.Runtime.InteropServices.ICustomQueryInterface, IWinRTObject, IEquatable<Shape>
    {
        private IntPtr ThisPtr => _inner == null ? (((IWinRTObject)this).NativeObject).ThisPtr : _inner.ThisPtr;

        private readonly IObjectReference _inner = null;




        private volatile IObjectReference ___objRef_global__Microsoft_UI_Xaml_Shapes_IShape;
        private IObjectReference Make___objRef_global__Microsoft_UI_Xaml_Shapes_IShape()
        {
            global::System.Threading.Interlocked.CompareExchange(ref ___objRef_global__Microsoft_UI_Xaml_Shapes_IShape, ((IWinRTObject)this).NativeObject.As<IUnknownVftbl>(global::ABI.Microsoft.UI.Xaml.Shapes.IShapeMethods.IID), null);
            return ___objRef_global__Microsoft_UI_Xaml_Shapes_IShape;
        }
        private IObjectReference _objRef_global__Microsoft_UI_Xaml_Shapes_IShape => ___objRef_global__Microsoft_UI_Xaml_Shapes_IShape ?? Make___objRef_global__Microsoft_UI_Xaml_Shapes_IShape();



        private static class _IShapeFactoryMethods
        {
            public static unsafe IntPtr CreateInstance(IObjectReference _obj, object baseInterface, out IntPtr innerInterface)
            {
                var ThisPtr = _obj.ThisPtr;

                ObjectReferenceValue __baseInterface = default;
                IntPtr __innerInterface = default;
                IntPtr __retval = default;
                try
                {
                    __baseInterface = MarshalInspectable<object>.CreateMarshaler2(baseInterface);
                    global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, IntPtr*, IntPtr*, int>**)ThisPtr)[6](ThisPtr, MarshalInspectable<object>.GetAbi(__baseInterface), &__innerInterface, &__retval));
                    global::System.GC.KeepAlive(_obj);
                    innerInterface = __innerInterface;
                    return __retval;
                }
                finally
                {
                    MarshalInspectable<object>.DisposeMarshaler(__baseInterface);
                }
            }
        }

        private static volatile IObjectReference ___objRef_global__Microsoft_UI_Xaml_Shapes_IShapeFactory;
        private static IObjectReference _objRef_global__Microsoft_UI_Xaml_Shapes_IShapeFactory
        {
            get
            { 
                var factory = ___objRef_global__Microsoft_UI_Xaml_Shapes_IShapeFactory;
                if (factory != null && factory.IsInCurrentContext)
                {
                    return factory;
                }
                else
                {
                    return ___objRef_global__Microsoft_UI_Xaml_Shapes_IShapeFactory = ActivationFactory.Get("Microsoft.UI.Xaml.Shapes.Shape", global::ABI.Microsoft.UI.Xaml.Shapes.IShapeFactoryMethods.IID);
                }
            }
        }

        protected Shape():base(global::WinRT.DerivedComposed.Instance)
        {
            bool isAggregation = this.GetType() != typeof(Shape);
            object baseInspectable = isAggregation ? this : null;
            IntPtr composed = _IShapeFactoryMethods.CreateInstance(_objRef_global__Microsoft_UI_Xaml_Shapes_IShapeFactory,  baseInspectable, out IntPtr inner);
            try
            {
                ComWrappersHelper.Init(isAggregation, this, composed, inner, global::ABI.Microsoft.UI.Xaml.Shapes.IShapeMethods.IID, out _inner);

            }
            finally
            {
                Marshal.Release(inner);   
            }
        }

        public static new I As<I>() => ActivationFactory.Get("Microsoft.UI.Xaml.Shapes.Shape").AsInterface<I>();

        private static volatile IObjectReference ___objRef_global__Microsoft_UI_Xaml_Shapes_IShapeStatics;
        private static IObjectReference _objRef_global__Microsoft_UI_Xaml_Shapes_IShapeStatics
        {
            get
            { 
                var factory = ___objRef_global__Microsoft_UI_Xaml_Shapes_IShapeStatics;
                if (factory != null && factory.IsInCurrentContext)
                {
                    return factory;
                }
                else
                {
                    return ___objRef_global__Microsoft_UI_Xaml_Shapes_IShapeStatics = ActivationFactory.Get("Microsoft.UI.Xaml.Shapes.Shape", global::ABI.Microsoft.UI.Xaml.Shapes.IShapeStaticsMethods.IID);
                }
            }
        }

        public static global::Microsoft.UI.Xaml.DependencyProperty FillProperty => global::ABI.Microsoft.UI.Xaml.Shapes.IShapeStaticsMethods.get_FillProperty(_objRef_global__Microsoft_UI_Xaml_Shapes_IShapeStatics);

        public static global::Microsoft.UI.Xaml.DependencyProperty StretchProperty => global::ABI.Microsoft.UI.Xaml.Shapes.IShapeStaticsMethods.get_StretchProperty(_objRef_global__Microsoft_UI_Xaml_Shapes_IShapeStatics);

        public static global::Microsoft.UI.Xaml.DependencyProperty StrokeDashArrayProperty => global::ABI.Microsoft.UI.Xaml.Shapes.IShapeStaticsMethods.get_StrokeDashArrayProperty(_objRef_global__Microsoft_UI_Xaml_Shapes_IShapeStatics);

        public static global::Microsoft.UI.Xaml.DependencyProperty StrokeDashCapProperty => global::ABI.Microsoft.UI.Xaml.Shapes.IShapeStaticsMethods.get_StrokeDashCapProperty(_objRef_global__Microsoft_UI_Xaml_Shapes_IShapeStatics);

        public static global::Microsoft.UI.Xaml.DependencyProperty StrokeDashOffsetProperty => global::ABI.Microsoft.UI.Xaml.Shapes.IShapeStaticsMethods.get_StrokeDashOffsetProperty(_objRef_global__Microsoft_UI_Xaml_Shapes_IShapeStatics);

        public static global::Microsoft.UI.Xaml.DependencyProperty StrokeEndLineCapProperty => global::ABI.Microsoft.UI.Xaml.Shapes.IShapeStaticsMethods.get_StrokeEndLineCapProperty(_objRef_global__Microsoft_UI_Xaml_Shapes_IShapeStatics);

        public static global::Microsoft.UI.Xaml.DependencyProperty StrokeLineJoinProperty => global::ABI.Microsoft.UI.Xaml.Shapes.IShapeStaticsMethods.get_StrokeLineJoinProperty(_objRef_global__Microsoft_UI_Xaml_Shapes_IShapeStatics);

        public static global::Microsoft.UI.Xaml.DependencyProperty StrokeMiterLimitProperty => global::ABI.Microsoft.UI.Xaml.Shapes.IShapeStaticsMethods.get_StrokeMiterLimitProperty(_objRef_global__Microsoft_UI_Xaml_Shapes_IShapeStatics);

        public static global::Microsoft.UI.Xaml.DependencyProperty StrokeProperty => global::ABI.Microsoft.UI.Xaml.Shapes.IShapeStaticsMethods.get_StrokeProperty(_objRef_global__Microsoft_UI_Xaml_Shapes_IShapeStatics);

        public static global::Microsoft.UI.Xaml.DependencyProperty StrokeStartLineCapProperty => global::ABI.Microsoft.UI.Xaml.Shapes.IShapeStaticsMethods.get_StrokeStartLineCapProperty(_objRef_global__Microsoft_UI_Xaml_Shapes_IShapeStatics);

        public static global::Microsoft.UI.Xaml.DependencyProperty StrokeThicknessProperty => global::ABI.Microsoft.UI.Xaml.Shapes.IShapeStaticsMethods.get_StrokeThicknessProperty(_objRef_global__Microsoft_UI_Xaml_Shapes_IShapeStatics);

        public static new Shape FromAbi(IntPtr thisPtr)
        {
            if (thisPtr == IntPtr.Zero) return null;
            return MarshalInspectable<Shape>.FromAbi(thisPtr);
        }

        protected internal Shape(IObjectReference objRef)
            : base(global::WinRT.DerivedComposed.Instance)

        {
            _inner = objRef.As(global::ABI.Microsoft.UI.Xaml.Shapes.IShapeMethods.IID);

        }


        public static bool operator ==(Shape x, Shape y) => (x?.ThisPtr ?? IntPtr.Zero) == (y?.ThisPtr ?? IntPtr.Zero);
        public static bool operator !=(Shape x, Shape y) => !(x == y);
        public bool Equals(Shape other) => this == other;
        public override bool Equals(object obj) => obj is Shape that && this == that;
        public override int GetHashCode() => ThisPtr.GetHashCode();


        protected Shape(global::WinRT.DerivedComposed _):base(_)
        {

        }
        bool IWinRTObject.HasUnwrappableNativeObject => this.GetType() == typeof(Shape);
        IObjectReference IWinRTObject.NativeObject => _inner;

        private struct InterfaceTag<I>{};


        public global::Microsoft.UI.Composition.CompositionBrush GetAlphaMask() => global::ABI.Microsoft.UI.Xaml.Shapes.IShapeMethods.GetAlphaMask(_objRef_global__Microsoft_UI_Xaml_Shapes_IShape);

        public global::Microsoft.UI.Xaml.Media.Brush Fill
        {
            get => global::ABI.Microsoft.UI.Xaml.Shapes.IShapeMethods.get_Fill(_objRef_global__Microsoft_UI_Xaml_Shapes_IShape);
            set => global::ABI.Microsoft.UI.Xaml.Shapes.IShapeMethods.set_Fill(_objRef_global__Microsoft_UI_Xaml_Shapes_IShape, value);
        }

        public global::Microsoft.UI.Xaml.Media.Transform GeometryTransform => global::ABI.Microsoft.UI.Xaml.Shapes.IShapeMethods.get_GeometryTransform(_objRef_global__Microsoft_UI_Xaml_Shapes_IShape);

        public global::Microsoft.UI.Xaml.Media.Stretch Stretch
        {
            get => global::ABI.Microsoft.UI.Xaml.Shapes.IShapeMethods.get_Stretch(_objRef_global__Microsoft_UI_Xaml_Shapes_IShape);
            set => global::ABI.Microsoft.UI.Xaml.Shapes.IShapeMethods.set_Stretch(_objRef_global__Microsoft_UI_Xaml_Shapes_IShape, value);
        }

        public global::Microsoft.UI.Xaml.Media.Brush Stroke
        {
            get => global::ABI.Microsoft.UI.Xaml.Shapes.IShapeMethods.get_Stroke(_objRef_global__Microsoft_UI_Xaml_Shapes_IShape);
            set => global::ABI.Microsoft.UI.Xaml.Shapes.IShapeMethods.set_Stroke(_objRef_global__Microsoft_UI_Xaml_Shapes_IShape, value);
        }

        public global::Microsoft.UI.Xaml.Media.DoubleCollection StrokeDashArray
        {
            get => global::ABI.Microsoft.UI.Xaml.Shapes.IShapeMethods.get_StrokeDashArray(_objRef_global__Microsoft_UI_Xaml_Shapes_IShape);
            set => global::ABI.Microsoft.UI.Xaml.Shapes.IShapeMethods.set_StrokeDashArray(_objRef_global__Microsoft_UI_Xaml_Shapes_IShape, value);
        }

        public global::Microsoft.UI.Xaml.Media.PenLineCap StrokeDashCap
        {
            get => global::ABI.Microsoft.UI.Xaml.Shapes.IShapeMethods.get_StrokeDashCap(_objRef_global__Microsoft_UI_Xaml_Shapes_IShape);
            set => global::ABI.Microsoft.UI.Xaml.Shapes.IShapeMethods.set_StrokeDashCap(_objRef_global__Microsoft_UI_Xaml_Shapes_IShape, value);
        }

        public double StrokeDashOffset
        {
            get => global::ABI.Microsoft.UI.Xaml.Shapes.IShapeMethods.get_StrokeDashOffset(_objRef_global__Microsoft_UI_Xaml_Shapes_IShape);
            set => global::ABI.Microsoft.UI.Xaml.Shapes.IShapeMethods.set_StrokeDashOffset(_objRef_global__Microsoft_UI_Xaml_Shapes_IShape, value);
        }

        public global::Microsoft.UI.Xaml.Media.PenLineCap StrokeEndLineCap
        {
            get => global::ABI.Microsoft.UI.Xaml.Shapes.IShapeMethods.get_StrokeEndLineCap(_objRef_global__Microsoft_UI_Xaml_Shapes_IShape);
            set => global::ABI.Microsoft.UI.Xaml.Shapes.IShapeMethods.set_StrokeEndLineCap(_objRef_global__Microsoft_UI_Xaml_Shapes_IShape, value);
        }

        public global::Microsoft.UI.Xaml.Media.PenLineJoin StrokeLineJoin
        {
            get => global::ABI.Microsoft.UI.Xaml.Shapes.IShapeMethods.get_StrokeLineJoin(_objRef_global__Microsoft_UI_Xaml_Shapes_IShape);
            set => global::ABI.Microsoft.UI.Xaml.Shapes.IShapeMethods.set_StrokeLineJoin(_objRef_global__Microsoft_UI_Xaml_Shapes_IShape, value);
        }

        public double StrokeMiterLimit
        {
            get => global::ABI.Microsoft.UI.Xaml.Shapes.IShapeMethods.get_StrokeMiterLimit(_objRef_global__Microsoft_UI_Xaml_Shapes_IShape);
            set => global::ABI.Microsoft.UI.Xaml.Shapes.IShapeMethods.set_StrokeMiterLimit(_objRef_global__Microsoft_UI_Xaml_Shapes_IShape, value);
        }

        public global::Microsoft.UI.Xaml.Media.PenLineCap StrokeStartLineCap
        {
            get => global::ABI.Microsoft.UI.Xaml.Shapes.IShapeMethods.get_StrokeStartLineCap(_objRef_global__Microsoft_UI_Xaml_Shapes_IShape);
            set => global::ABI.Microsoft.UI.Xaml.Shapes.IShapeMethods.set_StrokeStartLineCap(_objRef_global__Microsoft_UI_Xaml_Shapes_IShape, value);
        }

        public double StrokeThickness
        {
            get => global::ABI.Microsoft.UI.Xaml.Shapes.IShapeMethods.get_StrokeThickness(_objRef_global__Microsoft_UI_Xaml_Shapes_IShape);
            set => global::ABI.Microsoft.UI.Xaml.Shapes.IShapeMethods.set_StrokeThickness(_objRef_global__Microsoft_UI_Xaml_Shapes_IShape, value);
        }

        protected override bool IsOverridableInterface(Guid iid) => base.IsOverridableInterface(iid);

        global::System.Runtime.InteropServices.CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(ref Guid iid, out IntPtr ppv)
        {
            ppv = IntPtr.Zero;
            if (IsOverridableInterface(iid) || global::WinRT.Interop.IID.IID_IInspectable == iid)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
            }

            if (((IWinRTObject)this).NativeObject.TryAs(iid, out ppv) >= 0)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.Handled;
            }

            return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
        }
    }
}

#pragma warning disable CA1416
namespace ABI.Microsoft.UI.Xaml.Shapes
{
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    public struct Ellipse
    {

        public static IObjectReference CreateMarshaler(global::Microsoft.UI.Xaml.Shapes.Ellipse obj) => obj is null ? null : MarshalInspectable<global::Microsoft.UI.Xaml.Shapes.Ellipse>.CreateMarshaler<IUnknownVftbl>(obj, global::ABI.Microsoft.UI.Xaml.Shapes.IEllipseMethods.IID);
        public static ObjectReferenceValue CreateMarshaler2(global::Microsoft.UI.Xaml.Shapes.Ellipse obj) => MarshalInspectable<object>.CreateMarshaler2(obj, global::ABI.Microsoft.UI.Xaml.Shapes.IEllipseMethods.IID);
        public static IntPtr GetAbi(IObjectReference value) => value is null ? IntPtr.Zero : MarshalInterfaceHelper<object>.GetAbi(value);
        public static global::Microsoft.UI.Xaml.Shapes.Ellipse FromAbi(IntPtr thisPtr) => global::Microsoft.UI.Xaml.Shapes.Ellipse.FromAbi(thisPtr);
        public static IntPtr FromManaged(global::Microsoft.UI.Xaml.Shapes.Ellipse obj) => obj is null ? IntPtr.Zero : CreateMarshaler2(obj).Detach();
        public static unsafe MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Shapes.Ellipse>.MarshalerArray CreateMarshalerArray(global::Microsoft.UI.Xaml.Shapes.Ellipse[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Shapes.Ellipse>.CreateMarshalerArray2(array, (o) => CreateMarshaler2(o));
        public static (int length, IntPtr data) GetAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Shapes.Ellipse>.GetAbiArray(box);
        public static unsafe global::Microsoft.UI.Xaml.Shapes.Ellipse[] FromAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Shapes.Ellipse>.FromAbiArray(box, FromAbi);
        public static void CopyAbiArray(global::Microsoft.UI.Xaml.Shapes.Ellipse[] array, object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Shapes.Ellipse>.CopyAbiArray(array, box, FromAbi);
        public static (int length, IntPtr data) FromManagedArray(global::Microsoft.UI.Xaml.Shapes.Ellipse[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Shapes.Ellipse>.FromManagedArray(array, (o) => FromManaged(o));
        public static void DisposeMarshaler(IObjectReference value) => MarshalInspectable<object>.DisposeMarshaler(value);
        public static void DisposeMarshalerArray(MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Shapes.Ellipse>.MarshalerArray array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Shapes.Ellipse>.DisposeMarshalerArray(array);
        public static void DisposeAbi(IntPtr abi) => MarshalInspectable<object>.DisposeAbi(abi);
        public static unsafe void DisposeAbiArray(object box) => MarshalInspectable<object>.DisposeAbiArray(box);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    internal sealed class EllipseRcwFactoryAttribute : global::WinRT.WinRTImplementationTypeRcwFactoryAttribute
    {
        public override object CreateInstance(global::WinRT.IInspectable inspectable)
            => new global::Microsoft.UI.Xaml.Shapes.Ellipse(inspectable.ObjRef);
    }
    internal static class IEllipseMethods
    {



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0xAA, 0x39, 0x5C, 0x80, 0x8A, 0xFA, 0xB, 0x5E, 0x98, 0x47, 0x4A, 0xB8, 0x1B, 0x42, 0xA3, 0xDF };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("805C39AA-FA8A-5E0B-9847-4AB81B42A3DF")]
    internal interface IEllipse : global::Microsoft.UI.Xaml.Shapes.IEllipse
    {
    }
    internal static class ILineMethods
    {

        internal static unsafe double get_X1(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            double __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, double*, int>**)ThisPtr)[6](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }
        internal static unsafe void set_X1(IObjectReference _obj, double value)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, double, int>**)ThisPtr)[7](ThisPtr, value));
            global::System.GC.KeepAlive(_obj);
        }

        internal static unsafe double get_X2(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            double __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, double*, int>**)ThisPtr)[10](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }
        internal static unsafe void set_X2(IObjectReference _obj, double value)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, double, int>**)ThisPtr)[11](ThisPtr, value));
            global::System.GC.KeepAlive(_obj);
        }

        internal static unsafe double get_Y1(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            double __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, double*, int>**)ThisPtr)[8](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }
        internal static unsafe void set_Y1(IObjectReference _obj, double value)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, double, int>**)ThisPtr)[9](ThisPtr, value));
            global::System.GC.KeepAlive(_obj);
        }

        internal static unsafe double get_Y2(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            double __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, double*, int>**)ThisPtr)[12](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }
        internal static unsafe void set_Y2(IObjectReference _obj, double value)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, double, int>**)ThisPtr)[13](ThisPtr, value));
            global::System.GC.KeepAlive(_obj);
        }



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0x58, 0x38, 0x7B, 0x50, 0x7E, 0xAF, 0x9B, 0x55, 0xA8, 0x7E, 0x4C, 0xC6, 0xA5, 0xD8, 0xBA, 0x96 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("507B3858-AF7E-559B-A87E-4CC6A5D8BA96")]
    internal interface ILine : global::Microsoft.UI.Xaml.Shapes.ILine
    {
    }
    internal static class ILineStaticsMethods
    {

        internal static unsafe global::Microsoft.UI.Xaml.DependencyProperty get_X1Property(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[6](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Xaml.DependencyProperty.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.UI.Xaml.DependencyProperty.DisposeAbi(__retval);
            }
        }

        internal static unsafe global::Microsoft.UI.Xaml.DependencyProperty get_X2Property(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[8](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Xaml.DependencyProperty.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.UI.Xaml.DependencyProperty.DisposeAbi(__retval);
            }
        }

        internal static unsafe global::Microsoft.UI.Xaml.DependencyProperty get_Y1Property(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[7](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Xaml.DependencyProperty.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.UI.Xaml.DependencyProperty.DisposeAbi(__retval);
            }
        }

        internal static unsafe global::Microsoft.UI.Xaml.DependencyProperty get_Y2Property(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[9](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Xaml.DependencyProperty.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.UI.Xaml.DependencyProperty.DisposeAbi(__retval);
            }
        }



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0x93, 0xBF, 0x25, 0xA4, 0xF3, 0xF1, 0xCB, 0x5D, 0x99, 0x7E, 0xB6, 0xA2, 0x6F, 0x7A, 0xE8, 0xC0 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("A425BF93-F1F3-5DCB-997E-B6A26F7AE8C0")]
    internal interface ILineStatics : global::Microsoft.UI.Xaml.Shapes.ILineStatics
    {
    }
    internal static class IPathMethods
    {

        internal static unsafe global::Microsoft.UI.Xaml.Media.Geometry get_Data(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[6](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Xaml.Media.Geometry.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.UI.Xaml.Media.Geometry.DisposeAbi(__retval);
            }
        }
        internal static unsafe void set_Data(IObjectReference _obj, global::Microsoft.UI.Xaml.Media.Geometry value)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __value = default;
            try
            {
                __value = global::ABI.Microsoft.UI.Xaml.Media.Geometry.CreateMarshaler2(value);
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, int>**)ThisPtr)[7](ThisPtr, MarshalInspectable<object>.GetAbi(__value)));
                global::System.GC.KeepAlive(_obj);
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__value);
            }
        }



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0xD8, 0x1C, 0x7D, 0x75, 0xC0, 0xE, 0xC5, 0x55, 0xB4, 0x0, 0x66, 0x65, 0x7E, 0x49, 0x3E, 0x78 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("757D1CD8-0EC0-55C5-B400-66657E493E78")]
    internal interface IPath : global::Microsoft.UI.Xaml.Shapes.IPath
    {
    }
    internal static class IPathFactoryMethods
    {


        internal static unsafe global::Microsoft.UI.Xaml.Shapes.Path CreateInstance(IObjectReference _obj, object baseInterface, out object innerInterface)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __baseInterface = default;
            IntPtr __innerInterface = default;
            IntPtr __retval = default;
            try
            {
                __baseInterface = MarshalInspectable<object>.CreateMarshaler2(baseInterface);
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, IntPtr*, IntPtr*, int>**)ThisPtr)[6](ThisPtr, MarshalInspectable<object>.GetAbi(__baseInterface), &__innerInterface, &__retval));
                global::System.GC.KeepAlive(_obj);
                innerInterface = MarshalInspectable<object>.FromAbi(__innerInterface);
                return global::ABI.Microsoft.UI.Xaml.Shapes.Path.FromAbi(__retval);
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__baseInterface);
                MarshalInspectable<object>.DisposeAbi(__innerInterface);
                global::ABI.Microsoft.UI.Xaml.Shapes.Path.DisposeAbi(__retval);
            }
        }


        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0xC9, 0xE4, 0x82, 0x5E, 0x2, 0x75, 0x1F, 0x5B, 0xB9, 0x40, 0xC3, 0x34, 0x6A, 0x71, 0x36, 0x2A };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("5E82E4C9-7502-5B1F-B940-C3346A71362A")]
    internal interface IPathFactory : global::Microsoft.UI.Xaml.Shapes.IPathFactory
    {
    }
    internal static class IPathStaticsMethods
    {

        internal static unsafe global::Microsoft.UI.Xaml.DependencyProperty get_DataProperty(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[6](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Xaml.DependencyProperty.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.UI.Xaml.DependencyProperty.DisposeAbi(__retval);
            }
        }



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0x6F, 0xD3, 0x46, 0x21, 0x1C, 0x72, 0x54, 0x5B, 0xAF, 0x7D, 0x60, 0xF3, 0xAD, 0xC4, 0xFB, 0xCA };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("2146D36F-721C-5B54-AF7D-60F3ADC4FBCA")]
    internal interface IPathStatics : global::Microsoft.UI.Xaml.Shapes.IPathStatics
    {
    }
    internal static class IPolygonMethods
    {

        internal static unsafe global::Microsoft.UI.Xaml.Media.FillRule get_FillRule(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::Microsoft.UI.Xaml.Media.FillRule __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::Microsoft.UI.Xaml.Media.FillRule*, int>**)ThisPtr)[6](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }
        internal static unsafe void set_FillRule(IObjectReference _obj, global::Microsoft.UI.Xaml.Media.FillRule value)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::Microsoft.UI.Xaml.Media.FillRule, int>**)ThisPtr)[7](ThisPtr, value));
            global::System.GC.KeepAlive(_obj);
        }

        internal static unsafe global::Microsoft.UI.Xaml.Media.PointCollection get_Points(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[8](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Xaml.Media.PointCollection.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.UI.Xaml.Media.PointCollection.DisposeAbi(__retval);
            }
        }
        internal static unsafe void set_Points(IObjectReference _obj, global::Microsoft.UI.Xaml.Media.PointCollection value)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __value = default;
            try
            {
                __value = global::ABI.Microsoft.UI.Xaml.Media.PointCollection.CreateMarshaler2(value);
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, int>**)ThisPtr)[9](ThisPtr, MarshalInspectable<object>.GetAbi(__value)));
                global::System.GC.KeepAlive(_obj);
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__value);
            }
        }



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0x47, 0x63, 0x12, 0xFA, 0xD4, 0xD1, 0xDD, 0x54, 0xB1, 0xA4, 0xC3, 0x50, 0x19, 0x39, 0x79, 0x44 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("FA126347-D1D4-54DD-B1A4-C35019397944")]
    internal interface IPolygon : global::Microsoft.UI.Xaml.Shapes.IPolygon
    {
    }
    internal static class IPolygonStaticsMethods
    {

        internal static unsafe global::Microsoft.UI.Xaml.DependencyProperty get_FillRuleProperty(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[6](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Xaml.DependencyProperty.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.UI.Xaml.DependencyProperty.DisposeAbi(__retval);
            }
        }

        internal static unsafe global::Microsoft.UI.Xaml.DependencyProperty get_PointsProperty(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[7](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Xaml.DependencyProperty.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.UI.Xaml.DependencyProperty.DisposeAbi(__retval);
            }
        }



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0xDA, 0xBA, 0xDD, 0x85, 0x37, 0x9E, 0x71, 0x59, 0xA9, 0xAA, 0xDC, 0xE3, 0x1F, 0x9C, 0xF6, 0x7A };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("85DDBADA-9E37-5971-A9AA-DCE31F9CF67A")]
    internal interface IPolygonStatics : global::Microsoft.UI.Xaml.Shapes.IPolygonStatics
    {
    }
    internal static class IPolylineMethods
    {

        internal static unsafe global::Microsoft.UI.Xaml.Media.FillRule get_FillRule(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::Microsoft.UI.Xaml.Media.FillRule __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::Microsoft.UI.Xaml.Media.FillRule*, int>**)ThisPtr)[6](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }
        internal static unsafe void set_FillRule(IObjectReference _obj, global::Microsoft.UI.Xaml.Media.FillRule value)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::Microsoft.UI.Xaml.Media.FillRule, int>**)ThisPtr)[7](ThisPtr, value));
            global::System.GC.KeepAlive(_obj);
        }

        internal static unsafe global::Microsoft.UI.Xaml.Media.PointCollection get_Points(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[8](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Xaml.Media.PointCollection.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.UI.Xaml.Media.PointCollection.DisposeAbi(__retval);
            }
        }
        internal static unsafe void set_Points(IObjectReference _obj, global::Microsoft.UI.Xaml.Media.PointCollection value)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __value = default;
            try
            {
                __value = global::ABI.Microsoft.UI.Xaml.Media.PointCollection.CreateMarshaler2(value);
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, int>**)ThisPtr)[9](ThisPtr, MarshalInspectable<object>.GetAbi(__value)));
                global::System.GC.KeepAlive(_obj);
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__value);
            }
        }



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0xC6, 0xBE, 0xF0, 0xC7, 0x4C, 0x18, 0x96, 0x5D, 0x81, 0x2, 0x4, 0xDD, 0x21, 0x1E, 0x10, 0xC };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("C7F0BEC6-184C-5D96-8102-04DD211E100C")]
    internal interface IPolyline : global::Microsoft.UI.Xaml.Shapes.IPolyline
    {
    }
    internal static class IPolylineStaticsMethods
    {

        internal static unsafe global::Microsoft.UI.Xaml.DependencyProperty get_FillRuleProperty(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[6](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Xaml.DependencyProperty.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.UI.Xaml.DependencyProperty.DisposeAbi(__retval);
            }
        }

        internal static unsafe global::Microsoft.UI.Xaml.DependencyProperty get_PointsProperty(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[7](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Xaml.DependencyProperty.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.UI.Xaml.DependencyProperty.DisposeAbi(__retval);
            }
        }



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0xE7, 0xF, 0x84, 0x48, 0x35, 0xD7, 0x80, 0x50, 0x9C, 0x6D, 0x28, 0x62, 0x66, 0x5C, 0xDD, 0xA0 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("48840FE7-D735-5080-9C6D-2862665CDDA0")]
    internal interface IPolylineStatics : global::Microsoft.UI.Xaml.Shapes.IPolylineStatics
    {
    }
    internal static class IRectangleMethods
    {

        internal static unsafe double get_RadiusX(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            double __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, double*, int>**)ThisPtr)[6](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }
        internal static unsafe void set_RadiusX(IObjectReference _obj, double value)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, double, int>**)ThisPtr)[7](ThisPtr, value));
            global::System.GC.KeepAlive(_obj);
        }

        internal static unsafe double get_RadiusY(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            double __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, double*, int>**)ThisPtr)[8](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }
        internal static unsafe void set_RadiusY(IObjectReference _obj, double value)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, double, int>**)ThisPtr)[9](ThisPtr, value));
            global::System.GC.KeepAlive(_obj);
        }



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0xB9, 0x30, 0x7D, 0xBF, 0x2C, 0x15, 0x6E, 0x55, 0x9F, 0x10, 0xD0, 0xB7, 0xEB, 0xA4, 0xE5, 0x2F };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("BF7D30B9-152C-556E-9F10-D0B7EBA4E52F")]
    internal interface IRectangle : global::Microsoft.UI.Xaml.Shapes.IRectangle
    {
    }
    internal static class IRectangleStaticsMethods
    {

        internal static unsafe global::Microsoft.UI.Xaml.DependencyProperty get_RadiusXProperty(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[6](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Xaml.DependencyProperty.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.UI.Xaml.DependencyProperty.DisposeAbi(__retval);
            }
        }

        internal static unsafe global::Microsoft.UI.Xaml.DependencyProperty get_RadiusYProperty(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[7](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Xaml.DependencyProperty.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.UI.Xaml.DependencyProperty.DisposeAbi(__retval);
            }
        }



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0x79, 0xCC, 0xC3, 0x3C, 0x32, 0xC3, 0xD0, 0x5A, 0x87, 0x43, 0x1F, 0x1B, 0x1E, 0x67, 0xA, 0x86 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("3CC3CC79-C332-5AD0-8743-1F1B1E670A86")]
    internal interface IRectangleStatics : global::Microsoft.UI.Xaml.Shapes.IRectangleStatics
    {
    }
    internal static class IShapeMethods
    {


        internal static unsafe global::Microsoft.UI.Composition.CompositionBrush GetAlphaMask(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[29](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Composition.CompositionBrush.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.UI.Composition.CompositionBrush.DisposeAbi(__retval);
            }
        }
        internal static unsafe global::Microsoft.UI.Xaml.Media.Brush get_Fill(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[6](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Xaml.Media.Brush.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.UI.Xaml.Media.Brush.DisposeAbi(__retval);
            }
        }
        internal static unsafe void set_Fill(IObjectReference _obj, global::Microsoft.UI.Xaml.Media.Brush value)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __value = default;
            try
            {
                __value = global::ABI.Microsoft.UI.Xaml.Media.Brush.CreateMarshaler2(value);
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, int>**)ThisPtr)[7](ThisPtr, MarshalInspectable<object>.GetAbi(__value)));
                global::System.GC.KeepAlive(_obj);
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__value);
            }
        }

        internal static unsafe global::Microsoft.UI.Xaml.Media.Transform get_GeometryTransform(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[28](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Xaml.Media.Transform.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.UI.Xaml.Media.Transform.DisposeAbi(__retval);
            }
        }

        internal static unsafe global::Microsoft.UI.Xaml.Media.Stretch get_Stretch(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::Microsoft.UI.Xaml.Media.Stretch __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::Microsoft.UI.Xaml.Media.Stretch*, int>**)ThisPtr)[26](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }
        internal static unsafe void set_Stretch(IObjectReference _obj, global::Microsoft.UI.Xaml.Media.Stretch value)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::Microsoft.UI.Xaml.Media.Stretch, int>**)ThisPtr)[27](ThisPtr, value));
            global::System.GC.KeepAlive(_obj);
        }

        internal static unsafe global::Microsoft.UI.Xaml.Media.Brush get_Stroke(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[8](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Xaml.Media.Brush.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.UI.Xaml.Media.Brush.DisposeAbi(__retval);
            }
        }
        internal static unsafe void set_Stroke(IObjectReference _obj, global::Microsoft.UI.Xaml.Media.Brush value)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __value = default;
            try
            {
                __value = global::ABI.Microsoft.UI.Xaml.Media.Brush.CreateMarshaler2(value);
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, int>**)ThisPtr)[9](ThisPtr, MarshalInspectable<object>.GetAbi(__value)));
                global::System.GC.KeepAlive(_obj);
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__value);
            }
        }

        internal static unsafe global::Microsoft.UI.Xaml.Media.DoubleCollection get_StrokeDashArray(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[24](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Xaml.Media.DoubleCollection.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.UI.Xaml.Media.DoubleCollection.DisposeAbi(__retval);
            }
        }
        internal static unsafe void set_StrokeDashArray(IObjectReference _obj, global::Microsoft.UI.Xaml.Media.DoubleCollection value)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __value = default;
            try
            {
                __value = global::ABI.Microsoft.UI.Xaml.Media.DoubleCollection.CreateMarshaler2(value);
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, int>**)ThisPtr)[25](ThisPtr, MarshalInspectable<object>.GetAbi(__value)));
                global::System.GC.KeepAlive(_obj);
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__value);
            }
        }

        internal static unsafe global::Microsoft.UI.Xaml.Media.PenLineCap get_StrokeDashCap(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::Microsoft.UI.Xaml.Media.PenLineCap __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::Microsoft.UI.Xaml.Media.PenLineCap*, int>**)ThisPtr)[22](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }
        internal static unsafe void set_StrokeDashCap(IObjectReference _obj, global::Microsoft.UI.Xaml.Media.PenLineCap value)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::Microsoft.UI.Xaml.Media.PenLineCap, int>**)ThisPtr)[23](ThisPtr, value));
            global::System.GC.KeepAlive(_obj);
        }

        internal static unsafe double get_StrokeDashOffset(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            double __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, double*, int>**)ThisPtr)[20](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }
        internal static unsafe void set_StrokeDashOffset(IObjectReference _obj, double value)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, double, int>**)ThisPtr)[21](ThisPtr, value));
            global::System.GC.KeepAlive(_obj);
        }

        internal static unsafe global::Microsoft.UI.Xaml.Media.PenLineCap get_StrokeEndLineCap(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::Microsoft.UI.Xaml.Media.PenLineCap __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::Microsoft.UI.Xaml.Media.PenLineCap*, int>**)ThisPtr)[16](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }
        internal static unsafe void set_StrokeEndLineCap(IObjectReference _obj, global::Microsoft.UI.Xaml.Media.PenLineCap value)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::Microsoft.UI.Xaml.Media.PenLineCap, int>**)ThisPtr)[17](ThisPtr, value));
            global::System.GC.KeepAlive(_obj);
        }

        internal static unsafe global::Microsoft.UI.Xaml.Media.PenLineJoin get_StrokeLineJoin(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::Microsoft.UI.Xaml.Media.PenLineJoin __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::Microsoft.UI.Xaml.Media.PenLineJoin*, int>**)ThisPtr)[18](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }
        internal static unsafe void set_StrokeLineJoin(IObjectReference _obj, global::Microsoft.UI.Xaml.Media.PenLineJoin value)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::Microsoft.UI.Xaml.Media.PenLineJoin, int>**)ThisPtr)[19](ThisPtr, value));
            global::System.GC.KeepAlive(_obj);
        }

        internal static unsafe double get_StrokeMiterLimit(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            double __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, double*, int>**)ThisPtr)[10](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }
        internal static unsafe void set_StrokeMiterLimit(IObjectReference _obj, double value)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, double, int>**)ThisPtr)[11](ThisPtr, value));
            global::System.GC.KeepAlive(_obj);
        }

        internal static unsafe global::Microsoft.UI.Xaml.Media.PenLineCap get_StrokeStartLineCap(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::Microsoft.UI.Xaml.Media.PenLineCap __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::Microsoft.UI.Xaml.Media.PenLineCap*, int>**)ThisPtr)[14](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }
        internal static unsafe void set_StrokeStartLineCap(IObjectReference _obj, global::Microsoft.UI.Xaml.Media.PenLineCap value)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::Microsoft.UI.Xaml.Media.PenLineCap, int>**)ThisPtr)[15](ThisPtr, value));
            global::System.GC.KeepAlive(_obj);
        }

        internal static unsafe double get_StrokeThickness(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            double __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, double*, int>**)ThisPtr)[12](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }
        internal static unsafe void set_StrokeThickness(IObjectReference _obj, double value)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, double, int>**)ThisPtr)[13](ThisPtr, value));
            global::System.GC.KeepAlive(_obj);
        }



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0xD3, 0xAA, 0x41, 0x99, 0xF2, 0x6A, 0xA2, 0x5B, 0x90, 0x85, 0x85, 0x6, 0xD5, 0xF2, 0x48, 0x5E };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("9941AAD3-6AF2-5BA2-9085-8506D5F2485E")]
    internal interface IShape : global::Microsoft.UI.Xaml.Shapes.IShape
    {
    }
    internal static class IShapeFactoryMethods
    {


        internal static unsafe global::Microsoft.UI.Xaml.Shapes.Shape CreateInstance(IObjectReference _obj, object baseInterface, out object innerInterface)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __baseInterface = default;
            IntPtr __innerInterface = default;
            IntPtr __retval = default;
            try
            {
                __baseInterface = MarshalInspectable<object>.CreateMarshaler2(baseInterface);
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, IntPtr*, IntPtr*, int>**)ThisPtr)[6](ThisPtr, MarshalInspectable<object>.GetAbi(__baseInterface), &__innerInterface, &__retval));
                global::System.GC.KeepAlive(_obj);
                innerInterface = MarshalInspectable<object>.FromAbi(__innerInterface);
                return global::ABI.Microsoft.UI.Xaml.Shapes.Shape.FromAbi(__retval);
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__baseInterface);
                MarshalInspectable<object>.DisposeAbi(__innerInterface);
                global::ABI.Microsoft.UI.Xaml.Shapes.Shape.DisposeAbi(__retval);
            }
        }


        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0xAF, 0xAF, 0xEC, 0x4F, 0x65, 0x82, 0x52, 0x52, 0xBA, 0x5C, 0xF4, 0x36, 0x39, 0xF9, 0x74, 0xA5 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("4FECAFAF-8265-5252-BA5C-F43639F974A5")]
    internal interface IShapeFactory : global::Microsoft.UI.Xaml.Shapes.IShapeFactory
    {
    }
    internal static class IShapeStaticsMethods
    {

        internal static unsafe global::Microsoft.UI.Xaml.DependencyProperty get_FillProperty(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[6](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Xaml.DependencyProperty.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.UI.Xaml.DependencyProperty.DisposeAbi(__retval);
            }
        }

        internal static unsafe global::Microsoft.UI.Xaml.DependencyProperty get_StretchProperty(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[16](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Xaml.DependencyProperty.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.UI.Xaml.DependencyProperty.DisposeAbi(__retval);
            }
        }

        internal static unsafe global::Microsoft.UI.Xaml.DependencyProperty get_StrokeDashArrayProperty(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[15](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Xaml.DependencyProperty.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.UI.Xaml.DependencyProperty.DisposeAbi(__retval);
            }
        }

        internal static unsafe global::Microsoft.UI.Xaml.DependencyProperty get_StrokeDashCapProperty(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[14](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Xaml.DependencyProperty.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.UI.Xaml.DependencyProperty.DisposeAbi(__retval);
            }
        }

        internal static unsafe global::Microsoft.UI.Xaml.DependencyProperty get_StrokeDashOffsetProperty(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[13](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Xaml.DependencyProperty.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.UI.Xaml.DependencyProperty.DisposeAbi(__retval);
            }
        }

        internal static unsafe global::Microsoft.UI.Xaml.DependencyProperty get_StrokeEndLineCapProperty(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[11](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Xaml.DependencyProperty.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.UI.Xaml.DependencyProperty.DisposeAbi(__retval);
            }
        }

        internal static unsafe global::Microsoft.UI.Xaml.DependencyProperty get_StrokeLineJoinProperty(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[12](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Xaml.DependencyProperty.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.UI.Xaml.DependencyProperty.DisposeAbi(__retval);
            }
        }

        internal static unsafe global::Microsoft.UI.Xaml.DependencyProperty get_StrokeMiterLimitProperty(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[8](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Xaml.DependencyProperty.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.UI.Xaml.DependencyProperty.DisposeAbi(__retval);
            }
        }

        internal static unsafe global::Microsoft.UI.Xaml.DependencyProperty get_StrokeProperty(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[7](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Xaml.DependencyProperty.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.UI.Xaml.DependencyProperty.DisposeAbi(__retval);
            }
        }

        internal static unsafe global::Microsoft.UI.Xaml.DependencyProperty get_StrokeStartLineCapProperty(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[10](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Xaml.DependencyProperty.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.UI.Xaml.DependencyProperty.DisposeAbi(__retval);
            }
        }

        internal static unsafe global::Microsoft.UI.Xaml.DependencyProperty get_StrokeThicknessProperty(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[9](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Xaml.DependencyProperty.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.UI.Xaml.DependencyProperty.DisposeAbi(__retval);
            }
        }



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0x43, 0x7C, 0x40, 0xEA, 0x9, 0x8A, 0x7A, 0x58, 0x95, 0x8A, 0x4D, 0xD1, 0x7D, 0x21, 0x7C, 0xE1 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("EA407C43-8A09-587A-958A-4DD17D217CE1")]
    internal interface IShapeStatics : global::Microsoft.UI.Xaml.Shapes.IShapeStatics
    {
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    public struct Line
    {

        public static IObjectReference CreateMarshaler(global::Microsoft.UI.Xaml.Shapes.Line obj) => obj is null ? null : MarshalInspectable<global::Microsoft.UI.Xaml.Shapes.Line>.CreateMarshaler<IUnknownVftbl>(obj, global::ABI.Microsoft.UI.Xaml.Shapes.ILineMethods.IID);
        public static ObjectReferenceValue CreateMarshaler2(global::Microsoft.UI.Xaml.Shapes.Line obj) => MarshalInspectable<object>.CreateMarshaler2(obj, global::ABI.Microsoft.UI.Xaml.Shapes.ILineMethods.IID);
        public static IntPtr GetAbi(IObjectReference value) => value is null ? IntPtr.Zero : MarshalInterfaceHelper<object>.GetAbi(value);
        public static global::Microsoft.UI.Xaml.Shapes.Line FromAbi(IntPtr thisPtr) => global::Microsoft.UI.Xaml.Shapes.Line.FromAbi(thisPtr);
        public static IntPtr FromManaged(global::Microsoft.UI.Xaml.Shapes.Line obj) => obj is null ? IntPtr.Zero : CreateMarshaler2(obj).Detach();
        public static unsafe MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Shapes.Line>.MarshalerArray CreateMarshalerArray(global::Microsoft.UI.Xaml.Shapes.Line[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Shapes.Line>.CreateMarshalerArray2(array, (o) => CreateMarshaler2(o));
        public static (int length, IntPtr data) GetAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Shapes.Line>.GetAbiArray(box);
        public static unsafe global::Microsoft.UI.Xaml.Shapes.Line[] FromAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Shapes.Line>.FromAbiArray(box, FromAbi);
        public static void CopyAbiArray(global::Microsoft.UI.Xaml.Shapes.Line[] array, object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Shapes.Line>.CopyAbiArray(array, box, FromAbi);
        public static (int length, IntPtr data) FromManagedArray(global::Microsoft.UI.Xaml.Shapes.Line[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Shapes.Line>.FromManagedArray(array, (o) => FromManaged(o));
        public static void DisposeMarshaler(IObjectReference value) => MarshalInspectable<object>.DisposeMarshaler(value);
        public static void DisposeMarshalerArray(MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Shapes.Line>.MarshalerArray array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Shapes.Line>.DisposeMarshalerArray(array);
        public static void DisposeAbi(IntPtr abi) => MarshalInspectable<object>.DisposeAbi(abi);
        public static unsafe void DisposeAbiArray(object box) => MarshalInspectable<object>.DisposeAbiArray(box);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    internal sealed class LineRcwFactoryAttribute : global::WinRT.WinRTImplementationTypeRcwFactoryAttribute
    {
        public override object CreateInstance(global::WinRT.IInspectable inspectable)
            => new global::Microsoft.UI.Xaml.Shapes.Line(inspectable.ObjRef);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    public struct Path
    {

        public static IObjectReference CreateMarshaler(global::Microsoft.UI.Xaml.Shapes.Path obj) => obj is null ? null : MarshalInspectable<global::Microsoft.UI.Xaml.Shapes.Path>.CreateMarshaler<IUnknownVftbl>(obj, global::ABI.Microsoft.UI.Xaml.Shapes.IPathMethods.IID);
        public static ObjectReferenceValue CreateMarshaler2(global::Microsoft.UI.Xaml.Shapes.Path obj) => MarshalInspectable<object>.CreateMarshaler2(obj, global::ABI.Microsoft.UI.Xaml.Shapes.IPathMethods.IID);
        public static IntPtr GetAbi(IObjectReference value) => value is null ? IntPtr.Zero : MarshalInterfaceHelper<object>.GetAbi(value);
        public static global::Microsoft.UI.Xaml.Shapes.Path FromAbi(IntPtr thisPtr) => global::Microsoft.UI.Xaml.Shapes.Path.FromAbi(thisPtr);
        public static IntPtr FromManaged(global::Microsoft.UI.Xaml.Shapes.Path obj) => obj is null ? IntPtr.Zero : CreateMarshaler2(obj).Detach();
        public static unsafe MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Shapes.Path>.MarshalerArray CreateMarshalerArray(global::Microsoft.UI.Xaml.Shapes.Path[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Shapes.Path>.CreateMarshalerArray2(array, (o) => CreateMarshaler2(o));
        public static (int length, IntPtr data) GetAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Shapes.Path>.GetAbiArray(box);
        public static unsafe global::Microsoft.UI.Xaml.Shapes.Path[] FromAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Shapes.Path>.FromAbiArray(box, FromAbi);
        public static void CopyAbiArray(global::Microsoft.UI.Xaml.Shapes.Path[] array, object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Shapes.Path>.CopyAbiArray(array, box, FromAbi);
        public static (int length, IntPtr data) FromManagedArray(global::Microsoft.UI.Xaml.Shapes.Path[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Shapes.Path>.FromManagedArray(array, (o) => FromManaged(o));
        public static void DisposeMarshaler(IObjectReference value) => MarshalInspectable<object>.DisposeMarshaler(value);
        public static void DisposeMarshalerArray(MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Shapes.Path>.MarshalerArray array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Shapes.Path>.DisposeMarshalerArray(array);
        public static void DisposeAbi(IntPtr abi) => MarshalInspectable<object>.DisposeAbi(abi);
        public static unsafe void DisposeAbiArray(object box) => MarshalInspectable<object>.DisposeAbiArray(box);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    internal sealed class PathRcwFactoryAttribute : global::WinRT.WinRTImplementationTypeRcwFactoryAttribute
    {
        public override object CreateInstance(global::WinRT.IInspectable inspectable)
            => new global::Microsoft.UI.Xaml.Shapes.Path(inspectable.ObjRef);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    public struct Polygon
    {

        public static IObjectReference CreateMarshaler(global::Microsoft.UI.Xaml.Shapes.Polygon obj) => obj is null ? null : MarshalInspectable<global::Microsoft.UI.Xaml.Shapes.Polygon>.CreateMarshaler<IUnknownVftbl>(obj, global::ABI.Microsoft.UI.Xaml.Shapes.IPolygonMethods.IID);
        public static ObjectReferenceValue CreateMarshaler2(global::Microsoft.UI.Xaml.Shapes.Polygon obj) => MarshalInspectable<object>.CreateMarshaler2(obj, global::ABI.Microsoft.UI.Xaml.Shapes.IPolygonMethods.IID);
        public static IntPtr GetAbi(IObjectReference value) => value is null ? IntPtr.Zero : MarshalInterfaceHelper<object>.GetAbi(value);
        public static global::Microsoft.UI.Xaml.Shapes.Polygon FromAbi(IntPtr thisPtr) => global::Microsoft.UI.Xaml.Shapes.Polygon.FromAbi(thisPtr);
        public static IntPtr FromManaged(global::Microsoft.UI.Xaml.Shapes.Polygon obj) => obj is null ? IntPtr.Zero : CreateMarshaler2(obj).Detach();
        public static unsafe MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Shapes.Polygon>.MarshalerArray CreateMarshalerArray(global::Microsoft.UI.Xaml.Shapes.Polygon[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Shapes.Polygon>.CreateMarshalerArray2(array, (o) => CreateMarshaler2(o));
        public static (int length, IntPtr data) GetAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Shapes.Polygon>.GetAbiArray(box);
        public static unsafe global::Microsoft.UI.Xaml.Shapes.Polygon[] FromAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Shapes.Polygon>.FromAbiArray(box, FromAbi);
        public static void CopyAbiArray(global::Microsoft.UI.Xaml.Shapes.Polygon[] array, object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Shapes.Polygon>.CopyAbiArray(array, box, FromAbi);
        public static (int length, IntPtr data) FromManagedArray(global::Microsoft.UI.Xaml.Shapes.Polygon[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Shapes.Polygon>.FromManagedArray(array, (o) => FromManaged(o));
        public static void DisposeMarshaler(IObjectReference value) => MarshalInspectable<object>.DisposeMarshaler(value);
        public static void DisposeMarshalerArray(MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Shapes.Polygon>.MarshalerArray array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Shapes.Polygon>.DisposeMarshalerArray(array);
        public static void DisposeAbi(IntPtr abi) => MarshalInspectable<object>.DisposeAbi(abi);
        public static unsafe void DisposeAbiArray(object box) => MarshalInspectable<object>.DisposeAbiArray(box);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    internal sealed class PolygonRcwFactoryAttribute : global::WinRT.WinRTImplementationTypeRcwFactoryAttribute
    {
        public override object CreateInstance(global::WinRT.IInspectable inspectable)
            => new global::Microsoft.UI.Xaml.Shapes.Polygon(inspectable.ObjRef);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    public struct Polyline
    {

        public static IObjectReference CreateMarshaler(global::Microsoft.UI.Xaml.Shapes.Polyline obj) => obj is null ? null : MarshalInspectable<global::Microsoft.UI.Xaml.Shapes.Polyline>.CreateMarshaler<IUnknownVftbl>(obj, global::ABI.Microsoft.UI.Xaml.Shapes.IPolylineMethods.IID);
        public static ObjectReferenceValue CreateMarshaler2(global::Microsoft.UI.Xaml.Shapes.Polyline obj) => MarshalInspectable<object>.CreateMarshaler2(obj, global::ABI.Microsoft.UI.Xaml.Shapes.IPolylineMethods.IID);
        public static IntPtr GetAbi(IObjectReference value) => value is null ? IntPtr.Zero : MarshalInterfaceHelper<object>.GetAbi(value);
        public static global::Microsoft.UI.Xaml.Shapes.Polyline FromAbi(IntPtr thisPtr) => global::Microsoft.UI.Xaml.Shapes.Polyline.FromAbi(thisPtr);
        public static IntPtr FromManaged(global::Microsoft.UI.Xaml.Shapes.Polyline obj) => obj is null ? IntPtr.Zero : CreateMarshaler2(obj).Detach();
        public static unsafe MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Shapes.Polyline>.MarshalerArray CreateMarshalerArray(global::Microsoft.UI.Xaml.Shapes.Polyline[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Shapes.Polyline>.CreateMarshalerArray2(array, (o) => CreateMarshaler2(o));
        public static (int length, IntPtr data) GetAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Shapes.Polyline>.GetAbiArray(box);
        public static unsafe global::Microsoft.UI.Xaml.Shapes.Polyline[] FromAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Shapes.Polyline>.FromAbiArray(box, FromAbi);
        public static void CopyAbiArray(global::Microsoft.UI.Xaml.Shapes.Polyline[] array, object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Shapes.Polyline>.CopyAbiArray(array, box, FromAbi);
        public static (int length, IntPtr data) FromManagedArray(global::Microsoft.UI.Xaml.Shapes.Polyline[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Shapes.Polyline>.FromManagedArray(array, (o) => FromManaged(o));
        public static void DisposeMarshaler(IObjectReference value) => MarshalInspectable<object>.DisposeMarshaler(value);
        public static void DisposeMarshalerArray(MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Shapes.Polyline>.MarshalerArray array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Shapes.Polyline>.DisposeMarshalerArray(array);
        public static void DisposeAbi(IntPtr abi) => MarshalInspectable<object>.DisposeAbi(abi);
        public static unsafe void DisposeAbiArray(object box) => MarshalInspectable<object>.DisposeAbiArray(box);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    internal sealed class PolylineRcwFactoryAttribute : global::WinRT.WinRTImplementationTypeRcwFactoryAttribute
    {
        public override object CreateInstance(global::WinRT.IInspectable inspectable)
            => new global::Microsoft.UI.Xaml.Shapes.Polyline(inspectable.ObjRef);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    public struct Rectangle
    {

        public static IObjectReference CreateMarshaler(global::Microsoft.UI.Xaml.Shapes.Rectangle obj) => obj is null ? null : MarshalInspectable<global::Microsoft.UI.Xaml.Shapes.Rectangle>.CreateMarshaler<IUnknownVftbl>(obj, global::ABI.Microsoft.UI.Xaml.Shapes.IRectangleMethods.IID);
        public static ObjectReferenceValue CreateMarshaler2(global::Microsoft.UI.Xaml.Shapes.Rectangle obj) => MarshalInspectable<object>.CreateMarshaler2(obj, global::ABI.Microsoft.UI.Xaml.Shapes.IRectangleMethods.IID);
        public static IntPtr GetAbi(IObjectReference value) => value is null ? IntPtr.Zero : MarshalInterfaceHelper<object>.GetAbi(value);
        public static global::Microsoft.UI.Xaml.Shapes.Rectangle FromAbi(IntPtr thisPtr) => global::Microsoft.UI.Xaml.Shapes.Rectangle.FromAbi(thisPtr);
        public static IntPtr FromManaged(global::Microsoft.UI.Xaml.Shapes.Rectangle obj) => obj is null ? IntPtr.Zero : CreateMarshaler2(obj).Detach();
        public static unsafe MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Shapes.Rectangle>.MarshalerArray CreateMarshalerArray(global::Microsoft.UI.Xaml.Shapes.Rectangle[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Shapes.Rectangle>.CreateMarshalerArray2(array, (o) => CreateMarshaler2(o));
        public static (int length, IntPtr data) GetAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Shapes.Rectangle>.GetAbiArray(box);
        public static unsafe global::Microsoft.UI.Xaml.Shapes.Rectangle[] FromAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Shapes.Rectangle>.FromAbiArray(box, FromAbi);
        public static void CopyAbiArray(global::Microsoft.UI.Xaml.Shapes.Rectangle[] array, object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Shapes.Rectangle>.CopyAbiArray(array, box, FromAbi);
        public static (int length, IntPtr data) FromManagedArray(global::Microsoft.UI.Xaml.Shapes.Rectangle[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Shapes.Rectangle>.FromManagedArray(array, (o) => FromManaged(o));
        public static void DisposeMarshaler(IObjectReference value) => MarshalInspectable<object>.DisposeMarshaler(value);
        public static void DisposeMarshalerArray(MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Shapes.Rectangle>.MarshalerArray array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Shapes.Rectangle>.DisposeMarshalerArray(array);
        public static void DisposeAbi(IntPtr abi) => MarshalInspectable<object>.DisposeAbi(abi);
        public static unsafe void DisposeAbiArray(object box) => MarshalInspectable<object>.DisposeAbiArray(box);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    internal sealed class RectangleRcwFactoryAttribute : global::WinRT.WinRTImplementationTypeRcwFactoryAttribute
    {
        public override object CreateInstance(global::WinRT.IInspectable inspectable)
            => new global::Microsoft.UI.Xaml.Shapes.Rectangle(inspectable.ObjRef);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    public struct Shape
    {

        public static IObjectReference CreateMarshaler(global::Microsoft.UI.Xaml.Shapes.Shape obj) => obj is null ? null : MarshalInspectable<global::Microsoft.UI.Xaml.Shapes.Shape>.CreateMarshaler<IUnknownVftbl>(obj, global::ABI.Microsoft.UI.Xaml.Shapes.IShapeMethods.IID);
        public static ObjectReferenceValue CreateMarshaler2(global::Microsoft.UI.Xaml.Shapes.Shape obj) => MarshalInspectable<object>.CreateMarshaler2(obj, global::ABI.Microsoft.UI.Xaml.Shapes.IShapeMethods.IID);
        public static IntPtr GetAbi(IObjectReference value) => value is null ? IntPtr.Zero : MarshalInterfaceHelper<object>.GetAbi(value);
        public static global::Microsoft.UI.Xaml.Shapes.Shape FromAbi(IntPtr thisPtr) => global::Microsoft.UI.Xaml.Shapes.Shape.FromAbi(thisPtr);
        public static IntPtr FromManaged(global::Microsoft.UI.Xaml.Shapes.Shape obj) => obj is null ? IntPtr.Zero : CreateMarshaler2(obj).Detach();
        public static unsafe MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Shapes.Shape>.MarshalerArray CreateMarshalerArray(global::Microsoft.UI.Xaml.Shapes.Shape[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Shapes.Shape>.CreateMarshalerArray2(array, (o) => CreateMarshaler2(o));
        public static (int length, IntPtr data) GetAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Shapes.Shape>.GetAbiArray(box);
        public static unsafe global::Microsoft.UI.Xaml.Shapes.Shape[] FromAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Shapes.Shape>.FromAbiArray(box, FromAbi);
        public static void CopyAbiArray(global::Microsoft.UI.Xaml.Shapes.Shape[] array, object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Shapes.Shape>.CopyAbiArray(array, box, FromAbi);
        public static (int length, IntPtr data) FromManagedArray(global::Microsoft.UI.Xaml.Shapes.Shape[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Shapes.Shape>.FromManagedArray(array, (o) => FromManaged(o));
        public static void DisposeMarshaler(IObjectReference value) => MarshalInspectable<object>.DisposeMarshaler(value);
        public static void DisposeMarshalerArray(MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Shapes.Shape>.MarshalerArray array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Shapes.Shape>.DisposeMarshalerArray(array);
        public static void DisposeAbi(IntPtr abi) => MarshalInspectable<object>.DisposeAbi(abi);
        public static unsafe void DisposeAbiArray(object box) => MarshalInspectable<object>.DisposeAbiArray(box);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    internal sealed class ShapeRcwFactoryAttribute : global::WinRT.WinRTImplementationTypeRcwFactoryAttribute
    {
        public override object CreateInstance(global::WinRT.IInspectable inspectable)
            => new global::Microsoft.UI.Xaml.Shapes.Shape(inspectable.ObjRef);
    }
}
#pragma warning restore CA1416
