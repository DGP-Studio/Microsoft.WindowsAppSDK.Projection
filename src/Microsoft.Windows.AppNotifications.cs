//------------------------------------------------------------------------------
// <auto-generated>
//     This file was generated by cswinrt.exe version 2.2.0.241111.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Diagnostics;
using System.Diagnostics.CodeAnalysis;
using System.Linq.Expressions;
using System.Reflection;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;
using WinRT;
using WinRT.Interop;


#pragma warning disable 0169 // warning CS0169: The field '...' is never used
#pragma warning disable 0649 // warning CS0169: Field '...' is never assigned to
#pragma warning disable CA2207, CA1063, CA1033, CA1001, CA2213

namespace Microsoft.Windows.AppNotifications
{
    [global::WinRT.WindowsRuntimeType("Microsoft.Windows.AppNotifications")]
    [global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.Windows.AppNotifications.AppNotification))]
    [global::ABI.Microsoft.Windows.AppNotifications.AppNotificationRcwFactory]
    [global::WinRT.ProjectedRuntimeClass(typeof(IAppNotification))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(AppNotificationsContract), 65536u)]
    public sealed class AppNotification : global::System.Runtime.InteropServices.ICustomQueryInterface, IWinRTObject, IEquatable<AppNotification>
    {
        private IntPtr ThisPtr => _inner == null ? (((IWinRTObject)this).NativeObject).ThisPtr : _inner.ThisPtr;

        private readonly IObjectReference _inner = null;



        private IObjectReference _objRef_global__Microsoft_Windows_AppNotifications_IAppNotification => _inner;


        private static class _IAppNotificationFactoryMethods
        {
            public static unsafe IntPtr CreateInstance(IObjectReference _obj, string payload)
            {
                var ThisPtr = _obj.ThisPtr;

                IntPtr __retval = default;
                MarshalString.Pinnable __payload = new(payload);
                fixed(void* ___payload = __payload)
                {
                    global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, IntPtr*, int>**)ThisPtr)[6](ThisPtr, MarshalString.GetAbi(ref __payload), &__retval));
                    global::System.GC.KeepAlive(_obj);
                    return __retval;
                }
            }
        }

        private static volatile IObjectReference ___objRef_global__Microsoft_Windows_AppNotifications_IAppNotificationFactory;
        private static IObjectReference _objRef_global__Microsoft_Windows_AppNotifications_IAppNotificationFactory
        {
            get
            { 
                var factory = ___objRef_global__Microsoft_Windows_AppNotifications_IAppNotificationFactory;
                if (factory != null && factory.IsInCurrentContext)
                {
                    return factory;
                }
                else
                {
                    return ___objRef_global__Microsoft_Windows_AppNotifications_IAppNotificationFactory = ActivationFactory.Get("Microsoft.Windows.AppNotifications.AppNotification", global::ABI.Microsoft.Windows.AppNotifications.IAppNotificationFactoryMethods.IID);
                }
            }
        }

        public AppNotification(string payload) 
        { 
        IntPtr ptr = (_IAppNotificationFactoryMethods.CreateInstance(_objRef_global__Microsoft_Windows_AppNotifications_IAppNotificationFactory, payload)); 
        try 
        { 
        _inner = ComWrappersSupport.GetObjectReferenceForInterface(ptr, global::ABI.Microsoft.Windows.AppNotifications.IAppNotificationMethods.IID, false); 

        } 
        finally 
        { 
        MarshalInspectable<object>.DisposeAbi(ptr); 
        }

        ComWrappersSupport.RegisterObjectForInterface(this, ThisPtr);
        ComWrappersHelper.Init(_inner, false);
        }

        public static AppNotification FromAbi(IntPtr thisPtr)
        {
            if (thisPtr == IntPtr.Zero) return null;
            return MarshalInspectable<AppNotification>.FromAbi(thisPtr);
        }

        internal AppNotification(IObjectReference objRef)
        {
            _inner = objRef.As(global::ABI.Microsoft.Windows.AppNotifications.IAppNotificationMethods.IID);

        }


        public static bool operator ==(AppNotification x, AppNotification y) => (x?.ThisPtr ?? IntPtr.Zero) == (y?.ThisPtr ?? IntPtr.Zero);
        public static bool operator !=(AppNotification x, AppNotification y) => !(x == y);
        public bool Equals(AppNotification other) => this == other;
        public override bool Equals(object obj) => obj is AppNotification that && this == that;
        public override int GetHashCode() => ThisPtr.GetHashCode();


        bool IWinRTObject.HasUnwrappableNativeObject => true;
        IObjectReference IWinRTObject.NativeObject => _inner;
        private volatile global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> _queryInterfaceCache;
        private global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> MakeQueryInterfaceCache()
        {
            global::System.Threading.Interlocked.CompareExchange(ref _queryInterfaceCache, new global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference>(), null); 
            return _queryInterfaceCache;
        }
        global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> IWinRTObject.QueryInterfaceCache => _queryInterfaceCache ?? MakeQueryInterfaceCache();
        private volatile global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> _additionalTypeData;
        private global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> MakeAdditionalTypeData()
        {
            global::System.Threading.Interlocked.CompareExchange(ref _additionalTypeData, new global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object>(), null); 
            return _additionalTypeData;
        }
        global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> IWinRTObject.AdditionalTypeData => _additionalTypeData ?? MakeAdditionalTypeData();

        private struct InterfaceTag<I>{};


        public global::System.DateTimeOffset Expiration
        {
            get => global::ABI.Microsoft.Windows.AppNotifications.IAppNotificationMethods.get_Expiration(_objRef_global__Microsoft_Windows_AppNotifications_IAppNotification);
            set => global::ABI.Microsoft.Windows.AppNotifications.IAppNotificationMethods.set_Expiration(_objRef_global__Microsoft_Windows_AppNotifications_IAppNotification, value);
        }

        public bool ExpiresOnReboot
        {
            get => global::ABI.Microsoft.Windows.AppNotifications.IAppNotificationMethods.get_ExpiresOnReboot(_objRef_global__Microsoft_Windows_AppNotifications_IAppNotification);
            set => global::ABI.Microsoft.Windows.AppNotifications.IAppNotificationMethods.set_ExpiresOnReboot(_objRef_global__Microsoft_Windows_AppNotifications_IAppNotification, value);
        }

        public string Group
        {
            get => global::ABI.Microsoft.Windows.AppNotifications.IAppNotificationMethods.get_Group(_objRef_global__Microsoft_Windows_AppNotifications_IAppNotification);
            set => global::ABI.Microsoft.Windows.AppNotifications.IAppNotificationMethods.set_Group(_objRef_global__Microsoft_Windows_AppNotifications_IAppNotification, value);
        }

        public uint Id => global::ABI.Microsoft.Windows.AppNotifications.IAppNotificationMethods.get_Id(_objRef_global__Microsoft_Windows_AppNotifications_IAppNotification);

        public string Payload => global::ABI.Microsoft.Windows.AppNotifications.IAppNotificationMethods.get_Payload(_objRef_global__Microsoft_Windows_AppNotifications_IAppNotification);

        public AppNotificationPriority Priority
        {
            get => global::ABI.Microsoft.Windows.AppNotifications.IAppNotificationMethods.get_Priority(_objRef_global__Microsoft_Windows_AppNotifications_IAppNotification);
            set => global::ABI.Microsoft.Windows.AppNotifications.IAppNotificationMethods.set_Priority(_objRef_global__Microsoft_Windows_AppNotifications_IAppNotification, value);
        }

        public AppNotificationProgressData Progress
        {
            get => global::ABI.Microsoft.Windows.AppNotifications.IAppNotificationMethods.get_Progress(_objRef_global__Microsoft_Windows_AppNotifications_IAppNotification);
            set => global::ABI.Microsoft.Windows.AppNotifications.IAppNotificationMethods.set_Progress(_objRef_global__Microsoft_Windows_AppNotifications_IAppNotification, value);
        }

        public bool SuppressDisplay
        {
            get => global::ABI.Microsoft.Windows.AppNotifications.IAppNotificationMethods.get_SuppressDisplay(_objRef_global__Microsoft_Windows_AppNotifications_IAppNotification);
            set => global::ABI.Microsoft.Windows.AppNotifications.IAppNotificationMethods.set_SuppressDisplay(_objRef_global__Microsoft_Windows_AppNotifications_IAppNotification, value);
        }

        public string Tag
        {
            get => global::ABI.Microsoft.Windows.AppNotifications.IAppNotificationMethods.get_Tag(_objRef_global__Microsoft_Windows_AppNotifications_IAppNotification);
            set => global::ABI.Microsoft.Windows.AppNotifications.IAppNotificationMethods.set_Tag(_objRef_global__Microsoft_Windows_AppNotifications_IAppNotification, value);
        }

        private bool IsOverridableInterface(Guid iid) => false;

        global::System.Runtime.InteropServices.CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(ref Guid iid, out IntPtr ppv)
        {
            ppv = IntPtr.Zero;
            if (IsOverridableInterface(iid) || global::WinRT.Interop.IID.IID_IInspectable == iid)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
            }

            if (((IWinRTObject)this).NativeObject.TryAs(iid, out ppv) >= 0)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.Handled;
            }

            return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
        }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.Windows.AppNotifications")]
    [global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.Windows.AppNotifications.AppNotificationActivatedEventArgs))]
    [global::ABI.Microsoft.Windows.AppNotifications.AppNotificationActivatedEventArgsRcwFactory]
    [global::WinRT.ProjectedRuntimeClass(typeof(IAppNotificationActivatedEventArgs))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(AppNotificationsContract), 65536u)]
    public sealed class AppNotificationActivatedEventArgs : global::System.Runtime.InteropServices.ICustomQueryInterface, IWinRTObject, IEquatable<AppNotificationActivatedEventArgs>
    {
        private IntPtr ThisPtr => _inner == null ? (((IWinRTObject)this).NativeObject).ThisPtr : _inner.ThisPtr;

        private readonly IObjectReference _inner = null;



        private IObjectReference _objRef_global__Microsoft_Windows_AppNotifications_IAppNotificationActivatedEventArgs => _inner;
        private volatile IObjectReference ___objRef_global__Microsoft_Windows_AppNotifications_IAppNotificationActivatedEventArgs2;
        private IObjectReference Make___objRef_global__Microsoft_Windows_AppNotifications_IAppNotificationActivatedEventArgs2()
        {
            global::System.Threading.Interlocked.CompareExchange(ref ___objRef_global__Microsoft_Windows_AppNotifications_IAppNotificationActivatedEventArgs2, ((IWinRTObject)this).NativeObject.As<IUnknownVftbl>(global::ABI.Microsoft.Windows.AppNotifications.IAppNotificationActivatedEventArgs2Methods.IID), null);
            return ___objRef_global__Microsoft_Windows_AppNotifications_IAppNotificationActivatedEventArgs2;
        }
        private IObjectReference _objRef_global__Microsoft_Windows_AppNotifications_IAppNotificationActivatedEventArgs2 => ___objRef_global__Microsoft_Windows_AppNotifications_IAppNotificationActivatedEventArgs2 ?? Make___objRef_global__Microsoft_Windows_AppNotifications_IAppNotificationActivatedEventArgs2();



        public static AppNotificationActivatedEventArgs FromAbi(IntPtr thisPtr)
        {
            if (thisPtr == IntPtr.Zero) return null;
            return MarshalInspectable<AppNotificationActivatedEventArgs>.FromAbi(thisPtr);
        }

        internal AppNotificationActivatedEventArgs(IObjectReference objRef)
        {
            _inner = objRef.As(global::ABI.Microsoft.Windows.AppNotifications.IAppNotificationActivatedEventArgsMethods.IID);

        }


        public static bool operator ==(AppNotificationActivatedEventArgs x, AppNotificationActivatedEventArgs y) => (x?.ThisPtr ?? IntPtr.Zero) == (y?.ThisPtr ?? IntPtr.Zero);
        public static bool operator !=(AppNotificationActivatedEventArgs x, AppNotificationActivatedEventArgs y) => !(x == y);
        public bool Equals(AppNotificationActivatedEventArgs other) => this == other;
        public override bool Equals(object obj) => obj is AppNotificationActivatedEventArgs that && this == that;
        public override int GetHashCode() => ThisPtr.GetHashCode();


        bool IWinRTObject.HasUnwrappableNativeObject => true;
        IObjectReference IWinRTObject.NativeObject => _inner;
        private volatile global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> _queryInterfaceCache;
        private global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> MakeQueryInterfaceCache()
        {
            global::System.Threading.Interlocked.CompareExchange(ref _queryInterfaceCache, new global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference>(), null); 
            return _queryInterfaceCache;
        }
        global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> IWinRTObject.QueryInterfaceCache => _queryInterfaceCache ?? MakeQueryInterfaceCache();
        private volatile global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> _additionalTypeData;
        private global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> MakeAdditionalTypeData()
        {
            global::System.Threading.Interlocked.CompareExchange(ref _additionalTypeData, new global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object>(), null); 
            return _additionalTypeData;
        }
        global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> IWinRTObject.AdditionalTypeData => _additionalTypeData ?? MakeAdditionalTypeData();

        private struct InterfaceTag<I>{};


        public string Argument => global::ABI.Microsoft.Windows.AppNotifications.IAppNotificationActivatedEventArgsMethods.get_Argument(_objRef_global__Microsoft_Windows_AppNotifications_IAppNotificationActivatedEventArgs);

        public global::System.Collections.Generic.IDictionary<string, string> Arguments => global::ABI.Microsoft.Windows.AppNotifications.IAppNotificationActivatedEventArgs2Methods.get_Arguments(_objRef_global__Microsoft_Windows_AppNotifications_IAppNotificationActivatedEventArgs2);

        public global::System.Collections.Generic.IDictionary<string, string> UserInput => global::ABI.Microsoft.Windows.AppNotifications.IAppNotificationActivatedEventArgsMethods.get_UserInput(_objRef_global__Microsoft_Windows_AppNotifications_IAppNotificationActivatedEventArgs);

        private bool IsOverridableInterface(Guid iid) => false;

        global::System.Runtime.InteropServices.CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(ref Guid iid, out IntPtr ppv)
        {
            ppv = IntPtr.Zero;
            if (IsOverridableInterface(iid) || global::WinRT.Interop.IID.IID_IInspectable == iid)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
            }

            if (((IWinRTObject)this).NativeObject.TryAs(iid, out ppv) >= 0)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.Handled;
            }

            return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
        }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.Windows.AppNotifications")]
    [global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.Windows.AppNotifications.AppNotificationManager))]
    [global::ABI.Microsoft.Windows.AppNotifications.AppNotificationManagerRcwFactory]
    [global::WinRT.ProjectedRuntimeClass(typeof(IAppNotificationManager))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(AppNotificationsContract), 65536u)]
    public sealed class AppNotificationManager : global::System.Runtime.InteropServices.ICustomQueryInterface, IWinRTObject, IEquatable<AppNotificationManager>
    {
        private IntPtr ThisPtr => _inner == null ? (((IWinRTObject)this).NativeObject).ThisPtr : _inner.ThisPtr;

        private readonly IObjectReference _inner = null;



        private IObjectReference _objRef_global__Microsoft_Windows_AppNotifications_IAppNotificationManager => _inner;
        private volatile IObjectReference ___objRef_global__Microsoft_Windows_AppNotifications_IAppNotificationManager2;
        private IObjectReference Make___objRef_global__Microsoft_Windows_AppNotifications_IAppNotificationManager2()
        {
            global::System.Threading.Interlocked.CompareExchange(ref ___objRef_global__Microsoft_Windows_AppNotifications_IAppNotificationManager2, ((IWinRTObject)this).NativeObject.As<IUnknownVftbl>(global::ABI.Microsoft.Windows.AppNotifications.IAppNotificationManager2Methods.IID), null);
            return ___objRef_global__Microsoft_Windows_AppNotifications_IAppNotificationManager2;
        }
        private IObjectReference _objRef_global__Microsoft_Windows_AppNotifications_IAppNotificationManager2 => ___objRef_global__Microsoft_Windows_AppNotifications_IAppNotificationManager2 ?? Make___objRef_global__Microsoft_Windows_AppNotifications_IAppNotificationManager2();



        public static I As<I>() => ActivationFactory.Get("Microsoft.Windows.AppNotifications.AppNotificationManager").AsInterface<I>();

        private static volatile IObjectReference ___objRef_global__Microsoft_Windows_AppNotifications_IAppNotificationManagerStatics;
        private static IObjectReference _objRef_global__Microsoft_Windows_AppNotifications_IAppNotificationManagerStatics
        {
            get
            { 
                var factory = ___objRef_global__Microsoft_Windows_AppNotifications_IAppNotificationManagerStatics;
                if (factory != null && factory.IsInCurrentContext)
                {
                    return factory;
                }
                else
                {
                    return ___objRef_global__Microsoft_Windows_AppNotifications_IAppNotificationManagerStatics = ActivationFactory.Get("Microsoft.Windows.AppNotifications.AppNotificationManager", global::ABI.Microsoft.Windows.AppNotifications.IAppNotificationManagerStaticsMethods.IID);
                }
            }
        }

        private static volatile IObjectReference ___objRef_global__Microsoft_Windows_AppNotifications_IAppNotificationManagerStatics2;
        private static IObjectReference _objRef_global__Microsoft_Windows_AppNotifications_IAppNotificationManagerStatics2
        {
            get
            { 
                var factory = ___objRef_global__Microsoft_Windows_AppNotifications_IAppNotificationManagerStatics2;
                if (factory != null && factory.IsInCurrentContext)
                {
                    return factory;
                }
                else
                {
                    return ___objRef_global__Microsoft_Windows_AppNotifications_IAppNotificationManagerStatics2 = ActivationFactory.Get("Microsoft.Windows.AppNotifications.AppNotificationManager", global::ABI.Microsoft.Windows.AppNotifications.IAppNotificationManagerStatics2Methods.IID);
                }
            }
        }

        public static bool IsSupported() => global::ABI.Microsoft.Windows.AppNotifications.IAppNotificationManagerStatics2Methods.IsSupported(_objRef_global__Microsoft_Windows_AppNotifications_IAppNotificationManagerStatics2);

        public static AppNotificationManager Default => global::ABI.Microsoft.Windows.AppNotifications.IAppNotificationManagerStaticsMethods.get_Default(_objRef_global__Microsoft_Windows_AppNotifications_IAppNotificationManagerStatics);

        public static AppNotificationManager FromAbi(IntPtr thisPtr)
        {
            if (thisPtr == IntPtr.Zero) return null;
            return MarshalInspectable<AppNotificationManager>.FromAbi(thisPtr);
        }

        internal AppNotificationManager(IObjectReference objRef)
        {
            _inner = objRef.As(global::ABI.Microsoft.Windows.AppNotifications.IAppNotificationManagerMethods.IID);

        }


        public static bool operator ==(AppNotificationManager x, AppNotificationManager y) => (x?.ThisPtr ?? IntPtr.Zero) == (y?.ThisPtr ?? IntPtr.Zero);
        public static bool operator !=(AppNotificationManager x, AppNotificationManager y) => !(x == y);
        public bool Equals(AppNotificationManager other) => this == other;
        public override bool Equals(object obj) => obj is AppNotificationManager that && this == that;
        public override int GetHashCode() => ThisPtr.GetHashCode();


        bool IWinRTObject.HasUnwrappableNativeObject => true;
        IObjectReference IWinRTObject.NativeObject => _inner;
        private volatile global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> _queryInterfaceCache;
        private global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> MakeQueryInterfaceCache()
        {
            global::System.Threading.Interlocked.CompareExchange(ref _queryInterfaceCache, new global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference>(), null); 
            return _queryInterfaceCache;
        }
        global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> IWinRTObject.QueryInterfaceCache => _queryInterfaceCache ?? MakeQueryInterfaceCache();
        private volatile global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> _additionalTypeData;
        private global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> MakeAdditionalTypeData()
        {
            global::System.Threading.Interlocked.CompareExchange(ref _additionalTypeData, new global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object>(), null); 
            return _additionalTypeData;
        }
        global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> IWinRTObject.AdditionalTypeData => _additionalTypeData ?? MakeAdditionalTypeData();

        private struct InterfaceTag<I>{};


        public void Register() => global::ABI.Microsoft.Windows.AppNotifications.IAppNotificationManagerMethods.Register(_objRef_global__Microsoft_Windows_AppNotifications_IAppNotificationManager);

        public void Unregister() => global::ABI.Microsoft.Windows.AppNotifications.IAppNotificationManagerMethods.Unregister(_objRef_global__Microsoft_Windows_AppNotifications_IAppNotificationManager);

        public void UnregisterAll() => global::ABI.Microsoft.Windows.AppNotifications.IAppNotificationManagerMethods.UnregisterAll(_objRef_global__Microsoft_Windows_AppNotifications_IAppNotificationManager);

        public void Show(AppNotification notification) => global::ABI.Microsoft.Windows.AppNotifications.IAppNotificationManagerMethods.Show(_objRef_global__Microsoft_Windows_AppNotifications_IAppNotificationManager, notification);

        public global::Windows.Foundation.IAsyncOperation<AppNotificationProgressResult> UpdateAsync(AppNotificationProgressData data, string tag, string group) => global::ABI.Microsoft.Windows.AppNotifications.IAppNotificationManagerMethods.UpdateAsync(_objRef_global__Microsoft_Windows_AppNotifications_IAppNotificationManager, data, tag, group);

        public global::Windows.Foundation.IAsyncOperation<AppNotificationProgressResult> UpdateAsync(AppNotificationProgressData data, string tag) => global::ABI.Microsoft.Windows.AppNotifications.IAppNotificationManagerMethods.UpdateAsync(_objRef_global__Microsoft_Windows_AppNotifications_IAppNotificationManager, data, tag);

        public global::Windows.Foundation.IAsyncAction RemoveByIdAsync(uint notificationId) => global::ABI.Microsoft.Windows.AppNotifications.IAppNotificationManagerMethods.RemoveByIdAsync(_objRef_global__Microsoft_Windows_AppNotifications_IAppNotificationManager, notificationId);

        public global::Windows.Foundation.IAsyncAction RemoveByTagAsync(string tag) => global::ABI.Microsoft.Windows.AppNotifications.IAppNotificationManagerMethods.RemoveByTagAsync(_objRef_global__Microsoft_Windows_AppNotifications_IAppNotificationManager, tag);

        public global::Windows.Foundation.IAsyncAction RemoveByTagAndGroupAsync(string tag, string group) => global::ABI.Microsoft.Windows.AppNotifications.IAppNotificationManagerMethods.RemoveByTagAndGroupAsync(_objRef_global__Microsoft_Windows_AppNotifications_IAppNotificationManager, tag, group);

        public global::Windows.Foundation.IAsyncAction RemoveByGroupAsync(string group) => global::ABI.Microsoft.Windows.AppNotifications.IAppNotificationManagerMethods.RemoveByGroupAsync(_objRef_global__Microsoft_Windows_AppNotifications_IAppNotificationManager, group);

        public global::Windows.Foundation.IAsyncAction RemoveAllAsync() => global::ABI.Microsoft.Windows.AppNotifications.IAppNotificationManagerMethods.RemoveAllAsync(_objRef_global__Microsoft_Windows_AppNotifications_IAppNotificationManager);

        public global::Windows.Foundation.IAsyncOperation<global::System.Collections.Generic.IList<AppNotification>> GetAllAsync() => global::ABI.Microsoft.Windows.AppNotifications.IAppNotificationManagerMethods.GetAllAsync(_objRef_global__Microsoft_Windows_AppNotifications_IAppNotificationManager);

        public event global::Windows.Foundation.TypedEventHandler<AppNotificationManager, AppNotificationActivatedEventArgs> NotificationInvoked
        {
            add => global::ABI.Microsoft.Windows.AppNotifications.IAppNotificationManagerMethods.Get_NotificationInvoked2(_objRef_global__Microsoft_Windows_AppNotifications_IAppNotificationManager, (IWinRTObject)this).Subscribe(value);
            remove => global::ABI.Microsoft.Windows.AppNotifications.IAppNotificationManagerMethods.Get_NotificationInvoked2(_objRef_global__Microsoft_Windows_AppNotifications_IAppNotificationManager, (IWinRTObject)this).Unsubscribe(value);
        }

        public void Register(string displayName, global::System.Uri iconUri) => global::ABI.Microsoft.Windows.AppNotifications.IAppNotificationManager2Methods.Register(_objRef_global__Microsoft_Windows_AppNotifications_IAppNotificationManager2, displayName, iconUri);

        public AppNotificationSetting Setting => global::ABI.Microsoft.Windows.AppNotifications.IAppNotificationManagerMethods.get_Setting(_objRef_global__Microsoft_Windows_AppNotifications_IAppNotificationManager);

        private bool IsOverridableInterface(Guid iid) => false;

        global::System.Runtime.InteropServices.CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(ref Guid iid, out IntPtr ppv)
        {
            ppv = IntPtr.Zero;
            if (IsOverridableInterface(iid) || global::WinRT.Interop.IID.IID_IInspectable == iid)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
            }

            if (((IWinRTObject)this).NativeObject.TryAs(iid, out ppv) >= 0)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.Handled;
            }

            return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
        }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.Windows.AppNotifications")][global::WinRT.WinRTExposedType(typeof(global::WinRT.EnumTypeDetails<AppNotificationPriority>))][global::Windows.Foundation.Metadata.ContractVersion(typeof(AppNotificationsContract), 65536u)]
    public enum AppNotificationPriority : int
    {
        Default = unchecked((int)0),
        High = unchecked((int)0x1),
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.Windows.AppNotifications")]
    [global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.Windows.AppNotifications.AppNotificationProgressData))]
    [global::ABI.Microsoft.Windows.AppNotifications.AppNotificationProgressDataRcwFactory]
    [global::WinRT.ProjectedRuntimeClass(typeof(IAppNotificationProgressData))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(AppNotificationsContract), 65536u)]
    public sealed class AppNotificationProgressData : global::System.Runtime.InteropServices.ICustomQueryInterface, IWinRTObject, IEquatable<AppNotificationProgressData>
    {
        private IntPtr ThisPtr => _inner == null ? (((IWinRTObject)this).NativeObject).ThisPtr : _inner.ThisPtr;

        private readonly IObjectReference _inner = null;



        private IObjectReference _objRef_global__Microsoft_Windows_AppNotifications_IAppNotificationProgressData => _inner;


        private static class _IAppNotificationProgressDataFactoryMethods
        {
            public static unsafe IntPtr CreateInstance(IObjectReference _obj, uint sequenceNumber)
            {
                var ThisPtr = _obj.ThisPtr;

                IntPtr __retval = default;
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, uint, IntPtr*, int>**)ThisPtr)[6](ThisPtr, sequenceNumber, &__retval));
                global::System.GC.KeepAlive(_obj);
                return __retval;
            }
        }

        private static volatile IObjectReference ___objRef_global__Microsoft_Windows_AppNotifications_IAppNotificationProgressDataFactory;
        private static IObjectReference _objRef_global__Microsoft_Windows_AppNotifications_IAppNotificationProgressDataFactory
        {
            get
            { 
                var factory = ___objRef_global__Microsoft_Windows_AppNotifications_IAppNotificationProgressDataFactory;
                if (factory != null && factory.IsInCurrentContext)
                {
                    return factory;
                }
                else
                {
                    return ___objRef_global__Microsoft_Windows_AppNotifications_IAppNotificationProgressDataFactory = ActivationFactory.Get("Microsoft.Windows.AppNotifications.AppNotificationProgressData", global::ABI.Microsoft.Windows.AppNotifications.IAppNotificationProgressDataFactoryMethods.IID);
                }
            }
        }

        public AppNotificationProgressData(uint sequenceNumber) 
        { 
        IntPtr ptr = (_IAppNotificationProgressDataFactoryMethods.CreateInstance(_objRef_global__Microsoft_Windows_AppNotifications_IAppNotificationProgressDataFactory, sequenceNumber)); 
        try 
        { 
        _inner = ComWrappersSupport.GetObjectReferenceForInterface(ptr, global::ABI.Microsoft.Windows.AppNotifications.IAppNotificationProgressDataMethods.IID, false); 

        } 
        finally 
        { 
        MarshalInspectable<object>.DisposeAbi(ptr); 
        }

        ComWrappersSupport.RegisterObjectForInterface(this, ThisPtr);
        ComWrappersHelper.Init(_inner, false);
        }

        public static AppNotificationProgressData FromAbi(IntPtr thisPtr)
        {
            if (thisPtr == IntPtr.Zero) return null;
            return MarshalInspectable<AppNotificationProgressData>.FromAbi(thisPtr);
        }

        internal AppNotificationProgressData(IObjectReference objRef)
        {
            _inner = objRef.As(global::ABI.Microsoft.Windows.AppNotifications.IAppNotificationProgressDataMethods.IID);

        }


        public static bool operator ==(AppNotificationProgressData x, AppNotificationProgressData y) => (x?.ThisPtr ?? IntPtr.Zero) == (y?.ThisPtr ?? IntPtr.Zero);
        public static bool operator !=(AppNotificationProgressData x, AppNotificationProgressData y) => !(x == y);
        public bool Equals(AppNotificationProgressData other) => this == other;
        public override bool Equals(object obj) => obj is AppNotificationProgressData that && this == that;
        public override int GetHashCode() => ThisPtr.GetHashCode();


        bool IWinRTObject.HasUnwrappableNativeObject => true;
        IObjectReference IWinRTObject.NativeObject => _inner;
        private volatile global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> _queryInterfaceCache;
        private global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> MakeQueryInterfaceCache()
        {
            global::System.Threading.Interlocked.CompareExchange(ref _queryInterfaceCache, new global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference>(), null); 
            return _queryInterfaceCache;
        }
        global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> IWinRTObject.QueryInterfaceCache => _queryInterfaceCache ?? MakeQueryInterfaceCache();
        private volatile global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> _additionalTypeData;
        private global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> MakeAdditionalTypeData()
        {
            global::System.Threading.Interlocked.CompareExchange(ref _additionalTypeData, new global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object>(), null); 
            return _additionalTypeData;
        }
        global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> IWinRTObject.AdditionalTypeData => _additionalTypeData ?? MakeAdditionalTypeData();

        private struct InterfaceTag<I>{};


        public uint SequenceNumber
        {
            get => global::ABI.Microsoft.Windows.AppNotifications.IAppNotificationProgressDataMethods.get_SequenceNumber(_objRef_global__Microsoft_Windows_AppNotifications_IAppNotificationProgressData);
            set => global::ABI.Microsoft.Windows.AppNotifications.IAppNotificationProgressDataMethods.set_SequenceNumber(_objRef_global__Microsoft_Windows_AppNotifications_IAppNotificationProgressData, value);
        }

        public string Status
        {
            get => global::ABI.Microsoft.Windows.AppNotifications.IAppNotificationProgressDataMethods.get_Status(_objRef_global__Microsoft_Windows_AppNotifications_IAppNotificationProgressData);
            set => global::ABI.Microsoft.Windows.AppNotifications.IAppNotificationProgressDataMethods.set_Status(_objRef_global__Microsoft_Windows_AppNotifications_IAppNotificationProgressData, value);
        }

        public string Title
        {
            get => global::ABI.Microsoft.Windows.AppNotifications.IAppNotificationProgressDataMethods.get_Title(_objRef_global__Microsoft_Windows_AppNotifications_IAppNotificationProgressData);
            set => global::ABI.Microsoft.Windows.AppNotifications.IAppNotificationProgressDataMethods.set_Title(_objRef_global__Microsoft_Windows_AppNotifications_IAppNotificationProgressData, value);
        }

        public double Value
        {
            get => global::ABI.Microsoft.Windows.AppNotifications.IAppNotificationProgressDataMethods.get_Value(_objRef_global__Microsoft_Windows_AppNotifications_IAppNotificationProgressData);
            set => global::ABI.Microsoft.Windows.AppNotifications.IAppNotificationProgressDataMethods.set_Value(_objRef_global__Microsoft_Windows_AppNotifications_IAppNotificationProgressData, value);
        }

        public string ValueStringOverride
        {
            get => global::ABI.Microsoft.Windows.AppNotifications.IAppNotificationProgressDataMethods.get_ValueStringOverride(_objRef_global__Microsoft_Windows_AppNotifications_IAppNotificationProgressData);
            set => global::ABI.Microsoft.Windows.AppNotifications.IAppNotificationProgressDataMethods.set_ValueStringOverride(_objRef_global__Microsoft_Windows_AppNotifications_IAppNotificationProgressData, value);
        }

        private bool IsOverridableInterface(Guid iid) => false;

        global::System.Runtime.InteropServices.CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(ref Guid iid, out IntPtr ppv)
        {
            ppv = IntPtr.Zero;
            if (IsOverridableInterface(iid) || global::WinRT.Interop.IID.IID_IInspectable == iid)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
            }

            if (((IWinRTObject)this).NativeObject.TryAs(iid, out ppv) >= 0)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.Handled;
            }

            return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
        }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.Windows.AppNotifications")][global::WinRT.WinRTExposedType(typeof(global::WinRT.EnumTypeDetails<AppNotificationProgressResult>))][global::Windows.Foundation.Metadata.ContractVersion(typeof(AppNotificationsContract), 65536u)]
    public enum AppNotificationProgressResult : int
    {
        Succeeded = unchecked((int)0),
        AppNotificationNotFound = unchecked((int)0x1),
        Unsupported = unchecked((int)0x2),
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.Windows.AppNotifications")][global::WinRT.WinRTExposedType(typeof(global::WinRT.EnumTypeDetails<AppNotificationSetting>))][global::Windows.Foundation.Metadata.ContractVersion(typeof(AppNotificationsContract), 65536u)]
    public enum AppNotificationSetting : int
    {
        Enabled = unchecked((int)0),
        DisabledForApplication = unchecked((int)0x1),
        DisabledForUser = unchecked((int)0x2),
        DisabledByGroupPolicy = unchecked((int)0x3),
        DisabledByManifest = unchecked((int)0x4),
        Unsupported = unchecked((int)0x5),
    }
    [global::Windows.Foundation.Metadata.ContractVersion(262144u)]
    public enum AppNotificationsContract
    {
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.Windows.AppNotifications")][Guid("373A6917-4116-5657-936A-15F99AFDD667")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.Windows.AppNotifications.IAppNotification))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(AppNotificationsContract), 65536u)]
    internal interface IAppNotification
    {
        global::System.DateTimeOffset Expiration { get; set; }
        bool ExpiresOnReboot { get; set; }
        string Group { get; set; }
        uint Id { get; }
        string Payload { get; }
        AppNotificationPriority Priority { get; set; }
        AppNotificationProgressData Progress { get; set; }
        bool SuppressDisplay { get; set; }
        string Tag { get; set; }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.Windows.AppNotifications")][Guid("7A8AFAF9-31CB-51D5-82BE-DB6BD5878B77")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.Windows.AppNotifications.IAppNotificationActivatedEventArgs))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(AppNotificationsContract), 65536u)]
    internal interface IAppNotificationActivatedEventArgs
    {
        string Argument { get; }
        global::System.Collections.Generic.IDictionary<string, string> UserInput { get; }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.Windows.AppNotifications")][Guid("52C06B9B-2C50-5037-9416-A3BE47B9D5BD")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.Windows.AppNotifications.IAppNotificationActivatedEventArgs2))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(AppNotificationsContract), 196608u)]
    internal interface IAppNotificationActivatedEventArgs2
    {
        global::System.Collections.Generic.IDictionary<string, string> Arguments { get; }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.Windows.AppNotifications")][Guid("9FFEE485-184A-5C65-87A9-C1D94469DBE7")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.Windows.AppNotifications.IAppNotificationFactory))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(AppNotificationsContract), 65536u)]
    internal interface IAppNotificationFactory
    {
        AppNotification CreateInstance(string payload);
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.Windows.AppNotifications")][Guid("55129688-B4BD-550B-AE6B-C24061954D91")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.Windows.AppNotifications.IAppNotificationManager))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(AppNotificationsContract), 65536u)]
    internal interface IAppNotificationManager
    {
        void Register();
        void Unregister();
        void UnregisterAll();
        void Show(AppNotification notification);
        [global::Windows.Foundation.Metadata.Overload(@"UpdateAsync")]
        global::Windows.Foundation.IAsyncOperation<AppNotificationProgressResult> UpdateAsync(AppNotificationProgressData data, string tag, string group);
        [global::Windows.Foundation.Metadata.Overload(@"UpdateAsync2")]
        global::Windows.Foundation.IAsyncOperation<AppNotificationProgressResult> UpdateAsync(AppNotificationProgressData data, string tag);
        global::Windows.Foundation.IAsyncAction RemoveByIdAsync(uint notificationId);
        global::Windows.Foundation.IAsyncAction RemoveByTagAsync(string tag);
        global::Windows.Foundation.IAsyncAction RemoveByTagAndGroupAsync(string tag, string group);
        global::Windows.Foundation.IAsyncAction RemoveByGroupAsync(string group);
        global::Windows.Foundation.IAsyncAction RemoveAllAsync();
        global::Windows.Foundation.IAsyncOperation<global::System.Collections.Generic.IList<AppNotification>> GetAllAsync();
        AppNotificationSetting Setting { get; }
        event global::Windows.Foundation.TypedEventHandler<AppNotificationManager, AppNotificationActivatedEventArgs> NotificationInvoked;
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.Windows.AppNotifications")][Guid("38BA268D-E0C7-522E-A79D-8A29DCDD7135")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.Windows.AppNotifications.IAppNotificationManager2))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(AppNotificationsContract), 131072u)]
    internal interface IAppNotificationManager2
    {
        void Register(string displayName, global::System.Uri iconUri);
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.Windows.AppNotifications")][Guid("6CFC0D8D-84A3-5592-B4C6-E3E7E7C680E4")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.Windows.AppNotifications.IAppNotificationManagerStatics))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(AppNotificationsContract), 65536u)]
    internal interface IAppNotificationManagerStatics
    {
        AppNotificationManager Default { get; }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.Windows.AppNotifications")][Guid("6EB42A35-E82F-5732-98F1-129705602F2E")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.Windows.AppNotifications.IAppNotificationManagerStatics2))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(AppNotificationsContract), 131072u)]
    internal interface IAppNotificationManagerStatics2
    {
        bool IsSupported();
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.Windows.AppNotifications")][Guid("4DEBFAC0-809D-55CB-B879-924821876B97")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.Windows.AppNotifications.IAppNotificationProgressData))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(AppNotificationsContract), 65536u)]
    internal interface IAppNotificationProgressData
    {
        uint SequenceNumber { get; set; }
        string Status { get; set; }
        string Title { get; set; }
        double Value { get; set; }
        string ValueStringOverride { get; set; }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.Windows.AppNotifications")][Guid("C08E4A0F-3A75-55D6-8C3E-14F03AE46046")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.Windows.AppNotifications.IAppNotificationProgressDataFactory))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(AppNotificationsContract), 65536u)]
    internal interface IAppNotificationProgressDataFactory
    {
        AppNotificationProgressData CreateInstance(uint sequenceNumber);
    }
}

#pragma warning disable CA1416
namespace ABI.Microsoft.Windows.AppNotifications
{
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    public struct AppNotification
    {

        public static IObjectReference CreateMarshaler(global::Microsoft.Windows.AppNotifications.AppNotification obj) => obj is null ? null : MarshalInspectable<global::Microsoft.Windows.AppNotifications.AppNotification>.CreateMarshaler<IUnknownVftbl>(obj, global::ABI.Microsoft.Windows.AppNotifications.IAppNotificationMethods.IID);
        public static ObjectReferenceValue CreateMarshaler2(global::Microsoft.Windows.AppNotifications.AppNotification obj) => MarshalInspectable<object>.CreateMarshaler2(obj, global::ABI.Microsoft.Windows.AppNotifications.IAppNotificationMethods.IID);
        public static IntPtr GetAbi(IObjectReference value) => value is null ? IntPtr.Zero : MarshalInterfaceHelper<object>.GetAbi(value);
        public static global::Microsoft.Windows.AppNotifications.AppNotification FromAbi(IntPtr thisPtr) => global::Microsoft.Windows.AppNotifications.AppNotification.FromAbi(thisPtr);
        public static IntPtr FromManaged(global::Microsoft.Windows.AppNotifications.AppNotification obj) => obj is null ? IntPtr.Zero : CreateMarshaler2(obj).Detach();
        public static unsafe MarshalInterfaceHelper<global::Microsoft.Windows.AppNotifications.AppNotification>.MarshalerArray CreateMarshalerArray(global::Microsoft.Windows.AppNotifications.AppNotification[] array) => MarshalInterfaceHelper<global::Microsoft.Windows.AppNotifications.AppNotification>.CreateMarshalerArray2(array, (o) => CreateMarshaler2(o));
        public static (int length, IntPtr data) GetAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.Windows.AppNotifications.AppNotification>.GetAbiArray(box);
        public static unsafe global::Microsoft.Windows.AppNotifications.AppNotification[] FromAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.Windows.AppNotifications.AppNotification>.FromAbiArray(box, FromAbi);
        public static void CopyAbiArray(global::Microsoft.Windows.AppNotifications.AppNotification[] array, object box) => MarshalInterfaceHelper<global::Microsoft.Windows.AppNotifications.AppNotification>.CopyAbiArray(array, box, FromAbi);
        public static (int length, IntPtr data) FromManagedArray(global::Microsoft.Windows.AppNotifications.AppNotification[] array) => MarshalInterfaceHelper<global::Microsoft.Windows.AppNotifications.AppNotification>.FromManagedArray(array, (o) => FromManaged(o));
        public static void DisposeMarshaler(IObjectReference value) => MarshalInspectable<object>.DisposeMarshaler(value);
        public static void DisposeMarshalerArray(MarshalInterfaceHelper<global::Microsoft.Windows.AppNotifications.AppNotification>.MarshalerArray array) => MarshalInterfaceHelper<global::Microsoft.Windows.AppNotifications.AppNotification>.DisposeMarshalerArray(array);
        public static void DisposeAbi(IntPtr abi) => MarshalInspectable<object>.DisposeAbi(abi);
        public static unsafe void DisposeAbiArray(object box) => MarshalInspectable<object>.DisposeAbiArray(box);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    internal sealed class AppNotificationRcwFactoryAttribute : global::WinRT.WinRTImplementationTypeRcwFactoryAttribute
    {
        public override object CreateInstance(global::WinRT.IInspectable inspectable)
            => new global::Microsoft.Windows.AppNotifications.AppNotification(inspectable.ObjRef);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    public struct AppNotificationActivatedEventArgs
    {

        public static IObjectReference CreateMarshaler(global::Microsoft.Windows.AppNotifications.AppNotificationActivatedEventArgs obj) => obj is null ? null : MarshalInspectable<global::Microsoft.Windows.AppNotifications.AppNotificationActivatedEventArgs>.CreateMarshaler<IUnknownVftbl>(obj, global::ABI.Microsoft.Windows.AppNotifications.IAppNotificationActivatedEventArgsMethods.IID);
        public static ObjectReferenceValue CreateMarshaler2(global::Microsoft.Windows.AppNotifications.AppNotificationActivatedEventArgs obj) => MarshalInspectable<object>.CreateMarshaler2(obj, global::ABI.Microsoft.Windows.AppNotifications.IAppNotificationActivatedEventArgsMethods.IID);
        public static IntPtr GetAbi(IObjectReference value) => value is null ? IntPtr.Zero : MarshalInterfaceHelper<object>.GetAbi(value);
        public static global::Microsoft.Windows.AppNotifications.AppNotificationActivatedEventArgs FromAbi(IntPtr thisPtr) => global::Microsoft.Windows.AppNotifications.AppNotificationActivatedEventArgs.FromAbi(thisPtr);
        public static IntPtr FromManaged(global::Microsoft.Windows.AppNotifications.AppNotificationActivatedEventArgs obj) => obj is null ? IntPtr.Zero : CreateMarshaler2(obj).Detach();
        public static unsafe MarshalInterfaceHelper<global::Microsoft.Windows.AppNotifications.AppNotificationActivatedEventArgs>.MarshalerArray CreateMarshalerArray(global::Microsoft.Windows.AppNotifications.AppNotificationActivatedEventArgs[] array) => MarshalInterfaceHelper<global::Microsoft.Windows.AppNotifications.AppNotificationActivatedEventArgs>.CreateMarshalerArray2(array, (o) => CreateMarshaler2(o));
        public static (int length, IntPtr data) GetAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.Windows.AppNotifications.AppNotificationActivatedEventArgs>.GetAbiArray(box);
        public static unsafe global::Microsoft.Windows.AppNotifications.AppNotificationActivatedEventArgs[] FromAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.Windows.AppNotifications.AppNotificationActivatedEventArgs>.FromAbiArray(box, FromAbi);
        public static void CopyAbiArray(global::Microsoft.Windows.AppNotifications.AppNotificationActivatedEventArgs[] array, object box) => MarshalInterfaceHelper<global::Microsoft.Windows.AppNotifications.AppNotificationActivatedEventArgs>.CopyAbiArray(array, box, FromAbi);
        public static (int length, IntPtr data) FromManagedArray(global::Microsoft.Windows.AppNotifications.AppNotificationActivatedEventArgs[] array) => MarshalInterfaceHelper<global::Microsoft.Windows.AppNotifications.AppNotificationActivatedEventArgs>.FromManagedArray(array, (o) => FromManaged(o));
        public static void DisposeMarshaler(IObjectReference value) => MarshalInspectable<object>.DisposeMarshaler(value);
        public static void DisposeMarshalerArray(MarshalInterfaceHelper<global::Microsoft.Windows.AppNotifications.AppNotificationActivatedEventArgs>.MarshalerArray array) => MarshalInterfaceHelper<global::Microsoft.Windows.AppNotifications.AppNotificationActivatedEventArgs>.DisposeMarshalerArray(array);
        public static void DisposeAbi(IntPtr abi) => MarshalInspectable<object>.DisposeAbi(abi);
        public static unsafe void DisposeAbiArray(object box) => MarshalInspectable<object>.DisposeAbiArray(box);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    internal sealed class AppNotificationActivatedEventArgsRcwFactoryAttribute : global::WinRT.WinRTImplementationTypeRcwFactoryAttribute
    {
        public override object CreateInstance(global::WinRT.IInspectable inspectable)
            => new global::Microsoft.Windows.AppNotifications.AppNotificationActivatedEventArgs(inspectable.ObjRef);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    public struct AppNotificationManager
    {

        public static IObjectReference CreateMarshaler(global::Microsoft.Windows.AppNotifications.AppNotificationManager obj) => obj is null ? null : MarshalInspectable<global::Microsoft.Windows.AppNotifications.AppNotificationManager>.CreateMarshaler<IUnknownVftbl>(obj, global::ABI.Microsoft.Windows.AppNotifications.IAppNotificationManagerMethods.IID);
        public static ObjectReferenceValue CreateMarshaler2(global::Microsoft.Windows.AppNotifications.AppNotificationManager obj) => MarshalInspectable<object>.CreateMarshaler2(obj, global::ABI.Microsoft.Windows.AppNotifications.IAppNotificationManagerMethods.IID);
        public static IntPtr GetAbi(IObjectReference value) => value is null ? IntPtr.Zero : MarshalInterfaceHelper<object>.GetAbi(value);
        public static global::Microsoft.Windows.AppNotifications.AppNotificationManager FromAbi(IntPtr thisPtr) => global::Microsoft.Windows.AppNotifications.AppNotificationManager.FromAbi(thisPtr);
        public static IntPtr FromManaged(global::Microsoft.Windows.AppNotifications.AppNotificationManager obj) => obj is null ? IntPtr.Zero : CreateMarshaler2(obj).Detach();
        public static unsafe MarshalInterfaceHelper<global::Microsoft.Windows.AppNotifications.AppNotificationManager>.MarshalerArray CreateMarshalerArray(global::Microsoft.Windows.AppNotifications.AppNotificationManager[] array) => MarshalInterfaceHelper<global::Microsoft.Windows.AppNotifications.AppNotificationManager>.CreateMarshalerArray2(array, (o) => CreateMarshaler2(o));
        public static (int length, IntPtr data) GetAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.Windows.AppNotifications.AppNotificationManager>.GetAbiArray(box);
        public static unsafe global::Microsoft.Windows.AppNotifications.AppNotificationManager[] FromAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.Windows.AppNotifications.AppNotificationManager>.FromAbiArray(box, FromAbi);
        public static void CopyAbiArray(global::Microsoft.Windows.AppNotifications.AppNotificationManager[] array, object box) => MarshalInterfaceHelper<global::Microsoft.Windows.AppNotifications.AppNotificationManager>.CopyAbiArray(array, box, FromAbi);
        public static (int length, IntPtr data) FromManagedArray(global::Microsoft.Windows.AppNotifications.AppNotificationManager[] array) => MarshalInterfaceHelper<global::Microsoft.Windows.AppNotifications.AppNotificationManager>.FromManagedArray(array, (o) => FromManaged(o));
        public static void DisposeMarshaler(IObjectReference value) => MarshalInspectable<object>.DisposeMarshaler(value);
        public static void DisposeMarshalerArray(MarshalInterfaceHelper<global::Microsoft.Windows.AppNotifications.AppNotificationManager>.MarshalerArray array) => MarshalInterfaceHelper<global::Microsoft.Windows.AppNotifications.AppNotificationManager>.DisposeMarshalerArray(array);
        public static void DisposeAbi(IntPtr abi) => MarshalInspectable<object>.DisposeAbi(abi);
        public static unsafe void DisposeAbiArray(object box) => MarshalInspectable<object>.DisposeAbiArray(box);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    internal sealed class AppNotificationManagerRcwFactoryAttribute : global::WinRT.WinRTImplementationTypeRcwFactoryAttribute
    {
        public override object CreateInstance(global::WinRT.IInspectable inspectable)
            => new global::Microsoft.Windows.AppNotifications.AppNotificationManager(inspectable.ObjRef);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    public struct AppNotificationProgressData
    {

        public static IObjectReference CreateMarshaler(global::Microsoft.Windows.AppNotifications.AppNotificationProgressData obj) => obj is null ? null : MarshalInspectable<global::Microsoft.Windows.AppNotifications.AppNotificationProgressData>.CreateMarshaler<IUnknownVftbl>(obj, global::ABI.Microsoft.Windows.AppNotifications.IAppNotificationProgressDataMethods.IID);
        public static ObjectReferenceValue CreateMarshaler2(global::Microsoft.Windows.AppNotifications.AppNotificationProgressData obj) => MarshalInspectable<object>.CreateMarshaler2(obj, global::ABI.Microsoft.Windows.AppNotifications.IAppNotificationProgressDataMethods.IID);
        public static IntPtr GetAbi(IObjectReference value) => value is null ? IntPtr.Zero : MarshalInterfaceHelper<object>.GetAbi(value);
        public static global::Microsoft.Windows.AppNotifications.AppNotificationProgressData FromAbi(IntPtr thisPtr) => global::Microsoft.Windows.AppNotifications.AppNotificationProgressData.FromAbi(thisPtr);
        public static IntPtr FromManaged(global::Microsoft.Windows.AppNotifications.AppNotificationProgressData obj) => obj is null ? IntPtr.Zero : CreateMarshaler2(obj).Detach();
        public static unsafe MarshalInterfaceHelper<global::Microsoft.Windows.AppNotifications.AppNotificationProgressData>.MarshalerArray CreateMarshalerArray(global::Microsoft.Windows.AppNotifications.AppNotificationProgressData[] array) => MarshalInterfaceHelper<global::Microsoft.Windows.AppNotifications.AppNotificationProgressData>.CreateMarshalerArray2(array, (o) => CreateMarshaler2(o));
        public static (int length, IntPtr data) GetAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.Windows.AppNotifications.AppNotificationProgressData>.GetAbiArray(box);
        public static unsafe global::Microsoft.Windows.AppNotifications.AppNotificationProgressData[] FromAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.Windows.AppNotifications.AppNotificationProgressData>.FromAbiArray(box, FromAbi);
        public static void CopyAbiArray(global::Microsoft.Windows.AppNotifications.AppNotificationProgressData[] array, object box) => MarshalInterfaceHelper<global::Microsoft.Windows.AppNotifications.AppNotificationProgressData>.CopyAbiArray(array, box, FromAbi);
        public static (int length, IntPtr data) FromManagedArray(global::Microsoft.Windows.AppNotifications.AppNotificationProgressData[] array) => MarshalInterfaceHelper<global::Microsoft.Windows.AppNotifications.AppNotificationProgressData>.FromManagedArray(array, (o) => FromManaged(o));
        public static void DisposeMarshaler(IObjectReference value) => MarshalInspectable<object>.DisposeMarshaler(value);
        public static void DisposeMarshalerArray(MarshalInterfaceHelper<global::Microsoft.Windows.AppNotifications.AppNotificationProgressData>.MarshalerArray array) => MarshalInterfaceHelper<global::Microsoft.Windows.AppNotifications.AppNotificationProgressData>.DisposeMarshalerArray(array);
        public static void DisposeAbi(IntPtr abi) => MarshalInspectable<object>.DisposeAbi(abi);
        public static unsafe void DisposeAbiArray(object box) => MarshalInspectable<object>.DisposeAbiArray(box);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    internal sealed class AppNotificationProgressDataRcwFactoryAttribute : global::WinRT.WinRTImplementationTypeRcwFactoryAttribute
    {
        public override object CreateInstance(global::WinRT.IInspectable inspectable)
            => new global::Microsoft.Windows.AppNotifications.AppNotificationProgressData(inspectable.ObjRef);
    }
    internal static class IAppNotificationMethods
    {

        internal static unsafe global::System.DateTimeOffset get_Expiration(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::ABI.System.DateTimeOffset __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::ABI.System.DateTimeOffset*, int>**)ThisPtr)[14](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.System.DateTimeOffset.FromAbi(__retval);
            }
            finally
            {
                global::ABI.System.DateTimeOffset.DisposeAbi(__retval);
            }
        }
        internal static unsafe void set_Expiration(IObjectReference _obj, global::System.DateTimeOffset value)
        {
            var ThisPtr = _obj.ThisPtr;

            global::ABI.System.DateTimeOffset.Marshaler __value = default;
            try
            {
                __value = global::ABI.System.DateTimeOffset.CreateMarshaler(value);
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::ABI.System.DateTimeOffset, int>**)ThisPtr)[15](ThisPtr, global::ABI.System.DateTimeOffset.GetAbi(__value)));
                global::System.GC.KeepAlive(_obj);
            }
            finally
            {
                global::ABI.System.DateTimeOffset.DisposeMarshaler(__value);
            }
        }

        internal static unsafe bool get_ExpiresOnReboot(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            byte __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, byte*, int>**)ThisPtr)[16](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval != 0;
        }
        internal static unsafe void set_ExpiresOnReboot(IObjectReference _obj, bool value)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, byte, int>**)ThisPtr)[17](ThisPtr, (byte)(value ? 1 : 0)));
            global::System.GC.KeepAlive(_obj);
        }

        internal static unsafe string get_Group(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[8](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return MarshalString.FromAbi(__retval);
            }
            finally
            {
                MarshalString.DisposeAbi(__retval);
            }
        }
        internal static unsafe void set_Group(IObjectReference _obj, string value)
        {
            var ThisPtr = _obj.ThisPtr;

            MarshalString.Pinnable __value = new(value);
            fixed(void* ___value = __value)
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, int>**)ThisPtr)[9](ThisPtr, MarshalString.GetAbi(ref __value)));
                global::System.GC.KeepAlive(_obj);
            }
        }

        internal static unsafe uint get_Id(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            uint __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, uint*, int>**)ThisPtr)[10](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }

        internal static unsafe string get_Payload(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[11](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return MarshalString.FromAbi(__retval);
            }
            finally
            {
                MarshalString.DisposeAbi(__retval);
            }
        }

        internal static unsafe global::Microsoft.Windows.AppNotifications.AppNotificationPriority get_Priority(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::Microsoft.Windows.AppNotifications.AppNotificationPriority __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::Microsoft.Windows.AppNotifications.AppNotificationPriority*, int>**)ThisPtr)[18](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }
        internal static unsafe void set_Priority(IObjectReference _obj, global::Microsoft.Windows.AppNotifications.AppNotificationPriority value)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::Microsoft.Windows.AppNotifications.AppNotificationPriority, int>**)ThisPtr)[19](ThisPtr, value));
            global::System.GC.KeepAlive(_obj);
        }

        internal static unsafe global::Microsoft.Windows.AppNotifications.AppNotificationProgressData get_Progress(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[12](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.Windows.AppNotifications.AppNotificationProgressData.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.Windows.AppNotifications.AppNotificationProgressData.DisposeAbi(__retval);
            }
        }
        internal static unsafe void set_Progress(IObjectReference _obj, global::Microsoft.Windows.AppNotifications.AppNotificationProgressData value)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __value = default;
            try
            {
                __value = global::ABI.Microsoft.Windows.AppNotifications.AppNotificationProgressData.CreateMarshaler2(value);
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, int>**)ThisPtr)[13](ThisPtr, MarshalInspectable<object>.GetAbi(__value)));
                global::System.GC.KeepAlive(_obj);
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__value);
            }
        }

        internal static unsafe bool get_SuppressDisplay(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            byte __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, byte*, int>**)ThisPtr)[20](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval != 0;
        }
        internal static unsafe void set_SuppressDisplay(IObjectReference _obj, bool value)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, byte, int>**)ThisPtr)[21](ThisPtr, (byte)(value ? 1 : 0)));
            global::System.GC.KeepAlive(_obj);
        }

        internal static unsafe string get_Tag(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[6](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return MarshalString.FromAbi(__retval);
            }
            finally
            {
                MarshalString.DisposeAbi(__retval);
            }
        }
        internal static unsafe void set_Tag(IObjectReference _obj, string value)
        {
            var ThisPtr = _obj.ThisPtr;

            MarshalString.Pinnable __value = new(value);
            fixed(void* ___value = __value)
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, int>**)ThisPtr)[7](ThisPtr, MarshalString.GetAbi(ref __value)));
                global::System.GC.KeepAlive(_obj);
            }
        }



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0x17, 0x69, 0x3A, 0x37, 0x16, 0x41, 0x57, 0x56, 0x93, 0x6A, 0x15, 0xF9, 0x9A, 0xFD, 0xD6, 0x67 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("373A6917-4116-5657-936A-15F99AFDD667")]
    internal interface IAppNotification : global::Microsoft.Windows.AppNotifications.IAppNotification
    {
    }
    internal static class IAppNotificationActivatedEventArgsMethods
    {

        internal static unsafe string get_Argument(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[6](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return MarshalString.FromAbi(__retval);
            }
            finally
            {
                MarshalString.DisposeAbi(__retval);
            }
        }

        internal static unsafe global::System.Collections.Generic.IDictionary<string, string> get_UserInput(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[7](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                _ = global::WinRT.GenericTypeInstantiations.Windows_Foundation_Collections_IMap_2_String__String.EnsureInitialized();
                return MarshalInterface<global::System.Collections.Generic.IDictionary<string, string>>.FromAbi(__retval);
            }
            finally
            {
                MarshalInterface<global::System.Collections.Generic.IDictionary<string, string>>.DisposeAbi(__retval);
            }
        }



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0xF9, 0xFA, 0x8A, 0x7A, 0xCB, 0x31, 0xD5, 0x51, 0x82, 0xBE, 0xDB, 0x6B, 0xD5, 0x87, 0x8B, 0x77 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("7A8AFAF9-31CB-51D5-82BE-DB6BD5878B77")]
    internal interface IAppNotificationActivatedEventArgs : global::Microsoft.Windows.AppNotifications.IAppNotificationActivatedEventArgs
    {
    }
    internal static class IAppNotificationActivatedEventArgs2Methods
    {

        internal static unsafe global::System.Collections.Generic.IDictionary<string, string> get_Arguments(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[6](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                _ = global::WinRT.GenericTypeInstantiations.Windows_Foundation_Collections_IMap_2_String__String.EnsureInitialized();
                return MarshalInterface<global::System.Collections.Generic.IDictionary<string, string>>.FromAbi(__retval);
            }
            finally
            {
                MarshalInterface<global::System.Collections.Generic.IDictionary<string, string>>.DisposeAbi(__retval);
            }
        }



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0x9B, 0x6B, 0xC0, 0x52, 0x50, 0x2C, 0x37, 0x50, 0x94, 0x16, 0xA3, 0xBE, 0x47, 0xB9, 0xD5, 0xBD };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("52C06B9B-2C50-5037-9416-A3BE47B9D5BD")]
    internal interface IAppNotificationActivatedEventArgs2 : global::Microsoft.Windows.AppNotifications.IAppNotificationActivatedEventArgs2
    {
    }
    internal static class IAppNotificationFactoryMethods
    {


        internal static unsafe global::Microsoft.Windows.AppNotifications.AppNotification CreateInstance(IObjectReference _obj, string payload)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                MarshalString.Pinnable __payload = new(payload);
                fixed(void* ___payload = __payload)
                {
                    global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, IntPtr*, int>**)ThisPtr)[6](ThisPtr, MarshalString.GetAbi(ref __payload), &__retval));
                    global::System.GC.KeepAlive(_obj);
                    return global::ABI.Microsoft.Windows.AppNotifications.AppNotification.FromAbi(__retval);
                }
            }
            finally
            {
                global::ABI.Microsoft.Windows.AppNotifications.AppNotification.DisposeAbi(__retval);
            }
        }


        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0x85, 0xE4, 0xFE, 0x9F, 0x4A, 0x18, 0x65, 0x5C, 0x87, 0xA9, 0xC1, 0xD9, 0x44, 0x69, 0xDB, 0xE7 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("9FFEE485-184A-5C65-87A9-C1D94469DBE7")]
    internal interface IAppNotificationFactory : global::Microsoft.Windows.AppNotifications.IAppNotificationFactory
    {
    }
    internal static class IAppNotificationManagerMethods
    {


        internal static unsafe void Register(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, int>**)ThisPtr)[6](ThisPtr));
            global::System.GC.KeepAlive(_obj);
        }

        internal static unsafe void Unregister(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, int>**)ThisPtr)[7](ThisPtr));
            global::System.GC.KeepAlive(_obj);
        }

        internal static unsafe void UnregisterAll(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, int>**)ThisPtr)[8](ThisPtr));
            global::System.GC.KeepAlive(_obj);
        }

        internal static unsafe void Show(IObjectReference _obj, global::Microsoft.Windows.AppNotifications.AppNotification notification)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __notification = default;
            try
            {
                __notification = global::ABI.Microsoft.Windows.AppNotifications.AppNotification.CreateMarshaler2(notification);
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, int>**)ThisPtr)[11](ThisPtr, MarshalInspectable<object>.GetAbi(__notification)));
                global::System.GC.KeepAlive(_obj);
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__notification);
            }
        }

        internal static unsafe global::Windows.Foundation.IAsyncOperation<global::Microsoft.Windows.AppNotifications.AppNotificationProgressResult> UpdateAsync(IObjectReference _obj, global::Microsoft.Windows.AppNotifications.AppNotificationProgressData data, string tag, string group)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __data = default;
            IntPtr __retval = default;
            try
            {
                __data = global::ABI.Microsoft.Windows.AppNotifications.AppNotificationProgressData.CreateMarshaler2(data);
                MarshalString.Pinnable __tag = new(tag);
                MarshalString.Pinnable __group = new(group);
                fixed(void* ___tag = __tag, ___group = __group)
                {
                    global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, IntPtr, IntPtr, IntPtr*, int>**)ThisPtr)[12](ThisPtr, MarshalInspectable<object>.GetAbi(__data), MarshalString.GetAbi(ref __tag), MarshalString.GetAbi(ref __group), &__retval));
                    global::System.GC.KeepAlive(_obj);
                    _ = global::WinRT.GenericTypeInstantiations.Windows_Foundation_IAsyncOperation_1_Microsoft_Windows_AppNotifications_AppNotificationProgressResult.EnsureInitialized();
                    return MarshalInterface<global::Windows.Foundation.IAsyncOperation<global::Microsoft.Windows.AppNotifications.AppNotificationProgressResult>>.FromAbi(__retval);
                }
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__data);
                MarshalInterface<global::Windows.Foundation.IAsyncOperation<global::Microsoft.Windows.AppNotifications.AppNotificationProgressResult>>.DisposeAbi(__retval);
            }
        }

        internal static unsafe global::Windows.Foundation.IAsyncOperation<global::Microsoft.Windows.AppNotifications.AppNotificationProgressResult> UpdateAsync(IObjectReference _obj, global::Microsoft.Windows.AppNotifications.AppNotificationProgressData data, string tag)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __data = default;
            IntPtr __retval = default;
            try
            {
                __data = global::ABI.Microsoft.Windows.AppNotifications.AppNotificationProgressData.CreateMarshaler2(data);
                MarshalString.Pinnable __tag = new(tag);
                fixed(void* ___tag = __tag)
                {
                    global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, IntPtr, IntPtr*, int>**)ThisPtr)[13](ThisPtr, MarshalInspectable<object>.GetAbi(__data), MarshalString.GetAbi(ref __tag), &__retval));
                    global::System.GC.KeepAlive(_obj);
                    _ = global::WinRT.GenericTypeInstantiations.Windows_Foundation_IAsyncOperation_1_Microsoft_Windows_AppNotifications_AppNotificationProgressResult.EnsureInitialized();
                    return MarshalInterface<global::Windows.Foundation.IAsyncOperation<global::Microsoft.Windows.AppNotifications.AppNotificationProgressResult>>.FromAbi(__retval);
                }
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__data);
                MarshalInterface<global::Windows.Foundation.IAsyncOperation<global::Microsoft.Windows.AppNotifications.AppNotificationProgressResult>>.DisposeAbi(__retval);
            }
        }

        internal static unsafe global::Windows.Foundation.IAsyncAction RemoveByIdAsync(IObjectReference _obj, uint notificationId)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, uint, IntPtr*, int>**)ThisPtr)[15](ThisPtr, notificationId, &__retval));
                global::System.GC.KeepAlive(_obj);
                return MarshalInterface<global::Windows.Foundation.IAsyncAction>.FromAbi(__retval);
            }
            finally
            {
                MarshalInterface<global::Windows.Foundation.IAsyncAction>.DisposeAbi(__retval);
            }
        }

        internal static unsafe global::Windows.Foundation.IAsyncAction RemoveByTagAsync(IObjectReference _obj, string tag)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                MarshalString.Pinnable __tag = new(tag);
                fixed(void* ___tag = __tag)
                {
                    global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, IntPtr*, int>**)ThisPtr)[16](ThisPtr, MarshalString.GetAbi(ref __tag), &__retval));
                    global::System.GC.KeepAlive(_obj);
                    return MarshalInterface<global::Windows.Foundation.IAsyncAction>.FromAbi(__retval);
                }
            }
            finally
            {
                MarshalInterface<global::Windows.Foundation.IAsyncAction>.DisposeAbi(__retval);
            }
        }

        internal static unsafe global::Windows.Foundation.IAsyncAction RemoveByTagAndGroupAsync(IObjectReference _obj, string tag, string group)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                MarshalString.Pinnable __tag = new(tag);
                MarshalString.Pinnable __group = new(group);
                fixed(void* ___tag = __tag, ___group = __group)
                {
                    global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, IntPtr, IntPtr*, int>**)ThisPtr)[17](ThisPtr, MarshalString.GetAbi(ref __tag), MarshalString.GetAbi(ref __group), &__retval));
                    global::System.GC.KeepAlive(_obj);
                    return MarshalInterface<global::Windows.Foundation.IAsyncAction>.FromAbi(__retval);
                }
            }
            finally
            {
                MarshalInterface<global::Windows.Foundation.IAsyncAction>.DisposeAbi(__retval);
            }
        }

        internal static unsafe global::Windows.Foundation.IAsyncAction RemoveByGroupAsync(IObjectReference _obj, string group)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                MarshalString.Pinnable __group = new(group);
                fixed(void* ___group = __group)
                {
                    global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, IntPtr*, int>**)ThisPtr)[18](ThisPtr, MarshalString.GetAbi(ref __group), &__retval));
                    global::System.GC.KeepAlive(_obj);
                    return MarshalInterface<global::Windows.Foundation.IAsyncAction>.FromAbi(__retval);
                }
            }
            finally
            {
                MarshalInterface<global::Windows.Foundation.IAsyncAction>.DisposeAbi(__retval);
            }
        }

        internal static unsafe global::Windows.Foundation.IAsyncAction RemoveAllAsync(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[19](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return MarshalInterface<global::Windows.Foundation.IAsyncAction>.FromAbi(__retval);
            }
            finally
            {
                MarshalInterface<global::Windows.Foundation.IAsyncAction>.DisposeAbi(__retval);
            }
        }

        internal static unsafe global::Windows.Foundation.IAsyncOperation<global::System.Collections.Generic.IList<global::Microsoft.Windows.AppNotifications.AppNotification>> GetAllAsync(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[20](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                _ = global::WinRT.GenericTypeInstantiations.Windows_Foundation_IAsyncOperation_1_Windows_Foundation_Collections_IVector_1_Microsoft_Windows_AppNotifications_AppNotification_.EnsureInitialized();
                return MarshalInterface<global::Windows.Foundation.IAsyncOperation<global::System.Collections.Generic.IList<global::Microsoft.Windows.AppNotifications.AppNotification>>>.FromAbi(__retval);
            }
            finally
            {
                MarshalInterface<global::Windows.Foundation.IAsyncOperation<global::System.Collections.Generic.IList<global::Microsoft.Windows.AppNotifications.AppNotification>>>.DisposeAbi(__retval);
            }
        }
        internal static unsafe global::Microsoft.Windows.AppNotifications.AppNotificationSetting get_Setting(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::Microsoft.Windows.AppNotifications.AppNotificationSetting __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::Microsoft.Windows.AppNotifications.AppNotificationSetting*, int>**)ThisPtr)[14](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }


        private volatile static global::System.Runtime.CompilerServices.ConditionalWeakTable<object, global::ABI.WinRT.Interop.EventSource<global::Windows.Foundation.TypedEventHandler<global::Microsoft.Windows.AppNotifications.AppNotificationManager, global::Microsoft.Windows.AppNotifications.AppNotificationActivatedEventArgs>>> _NotificationInvoked_;
        private static global::System.Runtime.CompilerServices.ConditionalWeakTable<object, global::ABI.WinRT.Interop.EventSource<global::Windows.Foundation.TypedEventHandler<global::Microsoft.Windows.AppNotifications.AppNotificationManager, global::Microsoft.Windows.AppNotifications.AppNotificationActivatedEventArgs>>> MakeNotificationInvokedTable()
        {
            
            global::System.Threading.Interlocked.CompareExchange(ref _NotificationInvoked_, new(), null);
            return _NotificationInvoked_;
        }
        private static global::System.Runtime.CompilerServices.ConditionalWeakTable<object, global::ABI.WinRT.Interop.EventSource<global::Windows.Foundation.TypedEventHandler<global::Microsoft.Windows.AppNotifications.AppNotificationManager, global::Microsoft.Windows.AppNotifications.AppNotificationActivatedEventArgs>>> _NotificationInvoked => _NotificationInvoked_ ?? MakeNotificationInvokedTable();



        internal static unsafe global::ABI.WinRT.Interop.EventSource<global::Windows.Foundation.TypedEventHandler<global::Microsoft.Windows.AppNotifications.AppNotificationManager, global::Microsoft.Windows.AppNotifications.AppNotificationActivatedEventArgs>> Get_NotificationInvoked2(IObjectReference _obj, object _thisObj)
        {
            return _NotificationInvoked.GetValue(_thisObj, (key) =>
            {

                var ThisPtr = _obj.ThisPtr;

                return 
                new _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_Windows_AppNotifications_AppNotificationManager__global__Microsoft_Windows_AppNotifications_AppNotificationActivatedEventArgs_(_obj,
                (*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, global::WinRT.EventRegistrationToken*, int>**)ThisPtr)[9],
                (*(delegate* unmanaged[Stdcall]<IntPtr, global::WinRT.EventRegistrationToken, int>**)ThisPtr)[10],
                0);
            });
        }


        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0x88, 0x96, 0x12, 0x55, 0xBD, 0xB4, 0xB, 0x55, 0xAE, 0x6B, 0xC2, 0x40, 0x61, 0x95, 0x4D, 0x91 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("55129688-B4BD-550B-AE6B-C24061954D91")]
    internal interface IAppNotificationManager : global::Microsoft.Windows.AppNotifications.IAppNotificationManager
    {
    }
    internal static class IAppNotificationManager2Methods
    {


        internal static unsafe void Register(IObjectReference _obj, string displayName, global::System.Uri iconUri)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __iconUri = default;
            try
            {
                __iconUri = global::ABI.System.Uri.CreateMarshaler2(iconUri);
                MarshalString.Pinnable __displayName = new(displayName);
                fixed(void* ___displayName = __displayName)
                {
                    global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, IntPtr, int>**)ThisPtr)[6](ThisPtr, MarshalString.GetAbi(ref __displayName), MarshalInspectable<object>.GetAbi(__iconUri)));
                    global::System.GC.KeepAlive(_obj);
                }
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__iconUri);
            }
        }


        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0x8D, 0x26, 0xBA, 0x38, 0xC7, 0xE0, 0x2E, 0x52, 0xA7, 0x9D, 0x8A, 0x29, 0xDC, 0xDD, 0x71, 0x35 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("38BA268D-E0C7-522E-A79D-8A29DCDD7135")]
    internal interface IAppNotificationManager2 : global::Microsoft.Windows.AppNotifications.IAppNotificationManager2
    {
    }
    internal static class IAppNotificationManagerStaticsMethods
    {

        internal static unsafe global::Microsoft.Windows.AppNotifications.AppNotificationManager get_Default(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[6](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.Windows.AppNotifications.AppNotificationManager.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.Windows.AppNotifications.AppNotificationManager.DisposeAbi(__retval);
            }
        }



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0x8D, 0xD, 0xFC, 0x6C, 0xA3, 0x84, 0x92, 0x55, 0xB4, 0xC6, 0xE3, 0xE7, 0xE7, 0xC6, 0x80, 0xE4 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("6CFC0D8D-84A3-5592-B4C6-E3E7E7C680E4")]
    internal interface IAppNotificationManagerStatics : global::Microsoft.Windows.AppNotifications.IAppNotificationManagerStatics
    {
    }
    internal static class IAppNotificationManagerStatics2Methods
    {


        internal static unsafe bool IsSupported(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            byte __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, byte*, int>**)ThisPtr)[6](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval != 0;
        }


        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0x35, 0x2A, 0xB4, 0x6E, 0x2F, 0xE8, 0x32, 0x57, 0x98, 0xF1, 0x12, 0x97, 0x5, 0x60, 0x2F, 0x2E };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("6EB42A35-E82F-5732-98F1-129705602F2E")]
    internal interface IAppNotificationManagerStatics2 : global::Microsoft.Windows.AppNotifications.IAppNotificationManagerStatics2
    {
    }
    internal static class IAppNotificationProgressDataMethods
    {

        internal static unsafe uint get_SequenceNumber(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            uint __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, uint*, int>**)ThisPtr)[6](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }
        internal static unsafe void set_SequenceNumber(IObjectReference _obj, uint value)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, uint, int>**)ThisPtr)[7](ThisPtr, value));
            global::System.GC.KeepAlive(_obj);
        }

        internal static unsafe string get_Status(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[14](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return MarshalString.FromAbi(__retval);
            }
            finally
            {
                MarshalString.DisposeAbi(__retval);
            }
        }
        internal static unsafe void set_Status(IObjectReference _obj, string value)
        {
            var ThisPtr = _obj.ThisPtr;

            MarshalString.Pinnable __value = new(value);
            fixed(void* ___value = __value)
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, int>**)ThisPtr)[15](ThisPtr, MarshalString.GetAbi(ref __value)));
                global::System.GC.KeepAlive(_obj);
            }
        }

        internal static unsafe string get_Title(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[8](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return MarshalString.FromAbi(__retval);
            }
            finally
            {
                MarshalString.DisposeAbi(__retval);
            }
        }
        internal static unsafe void set_Title(IObjectReference _obj, string value)
        {
            var ThisPtr = _obj.ThisPtr;

            MarshalString.Pinnable __value = new(value);
            fixed(void* ___value = __value)
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, int>**)ThisPtr)[9](ThisPtr, MarshalString.GetAbi(ref __value)));
                global::System.GC.KeepAlive(_obj);
            }
        }

        internal static unsafe double get_Value(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            double __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, double*, int>**)ThisPtr)[10](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }
        internal static unsafe void set_Value(IObjectReference _obj, double value)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, double, int>**)ThisPtr)[11](ThisPtr, value));
            global::System.GC.KeepAlive(_obj);
        }

        internal static unsafe string get_ValueStringOverride(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[12](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return MarshalString.FromAbi(__retval);
            }
            finally
            {
                MarshalString.DisposeAbi(__retval);
            }
        }
        internal static unsafe void set_ValueStringOverride(IObjectReference _obj, string value)
        {
            var ThisPtr = _obj.ThisPtr;

            MarshalString.Pinnable __value = new(value);
            fixed(void* ___value = __value)
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, int>**)ThisPtr)[13](ThisPtr, MarshalString.GetAbi(ref __value)));
                global::System.GC.KeepAlive(_obj);
            }
        }



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0xC0, 0xFA, 0xEB, 0x4D, 0x9D, 0x80, 0xCB, 0x55, 0xB8, 0x79, 0x92, 0x48, 0x21, 0x87, 0x6B, 0x97 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("4DEBFAC0-809D-55CB-B879-924821876B97")]
    internal interface IAppNotificationProgressData : global::Microsoft.Windows.AppNotifications.IAppNotificationProgressData
    {
    }
    internal static class IAppNotificationProgressDataFactoryMethods
    {


        internal static unsafe global::Microsoft.Windows.AppNotifications.AppNotificationProgressData CreateInstance(IObjectReference _obj, uint sequenceNumber)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, uint, IntPtr*, int>**)ThisPtr)[6](ThisPtr, sequenceNumber, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.Windows.AppNotifications.AppNotificationProgressData.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.Windows.AppNotifications.AppNotificationProgressData.DisposeAbi(__retval);
            }
        }


        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0xF, 0x4A, 0x8E, 0xC0, 0x75, 0x3A, 0xD6, 0x55, 0x8C, 0x3E, 0x14, 0xF0, 0x3A, 0xE4, 0x60, 0x46 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("C08E4A0F-3A75-55D6-8C3E-14F03AE46046")]
    internal interface IAppNotificationProgressDataFactory : global::Microsoft.Windows.AppNotifications.IAppNotificationProgressDataFactory
    {
    }
}
#pragma warning restore CA1416
