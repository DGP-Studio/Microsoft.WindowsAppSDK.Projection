//------------------------------------------------------------------------------
// <auto-generated>
//     This file was generated by cswinrt.exe version 2.2.0.241111.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Diagnostics;
using System.Diagnostics.CodeAnalysis;
using System.Linq.Expressions;
using System.Reflection;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;
using WinRT;
using WinRT.Interop;


#pragma warning disable 0169 // warning CS0169: The field '...' is never used
#pragma warning disable 0649 // warning CS0169: Field '...' is never assigned to
#pragma warning disable CA2207, CA1063, CA1033, CA1001, CA2213

namespace Microsoft.UI.Composition
{
    [global::WinRT.WindowsRuntimeType("Microsoft.UI")]
    [global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Composition.AmbientLight))]
    [global::ABI.Microsoft.UI.Composition.AmbientLightRcwFactory]
    [global::WinRT.ProjectedRuntimeClass(typeof(IAmbientLight))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.Foundation.WindowsAppSDKContract), 65536u)]
    public sealed class AmbientLight : CompositionLight, global::System.Runtime.InteropServices.ICustomQueryInterface, IWinRTObject, IEquatable<AmbientLight>
    {
        private IntPtr ThisPtr => _inner == null ? (((IWinRTObject)this).NativeObject).ThisPtr : _inner.ThisPtr;

        private readonly IObjectReference _inner = null;



        private IObjectReference _objRef_global__Microsoft_UI_Composition_IAmbientLight => _inner;
        private volatile IObjectReference ___objRef_global__Microsoft_UI_Composition_IAmbientLight2;
        private IObjectReference Make___objRef_global__Microsoft_UI_Composition_IAmbientLight2()
        {
            global::System.Threading.Interlocked.CompareExchange(ref ___objRef_global__Microsoft_UI_Composition_IAmbientLight2, ((IWinRTObject)this).NativeObject.As<IUnknownVftbl>(global::ABI.Microsoft.UI.Composition.IAmbientLight2Methods.IID), null);
            return ___objRef_global__Microsoft_UI_Composition_IAmbientLight2;
        }
        private IObjectReference _objRef_global__Microsoft_UI_Composition_IAmbientLight2 => ___objRef_global__Microsoft_UI_Composition_IAmbientLight2 ?? Make___objRef_global__Microsoft_UI_Composition_IAmbientLight2();



        public static new AmbientLight FromAbi(IntPtr thisPtr)
        {
            if (thisPtr == IntPtr.Zero) return null;
            return MarshalInspectable<AmbientLight>.FromAbi(thisPtr);
        }

        internal AmbientLight(IObjectReference objRef)
            : base(global::WinRT.DerivedComposed.Instance)

        {
            _inner = objRef.As(global::ABI.Microsoft.UI.Composition.IAmbientLightMethods.IID);

        }


        public static bool operator ==(AmbientLight x, AmbientLight y) => (x?.ThisPtr ?? IntPtr.Zero) == (y?.ThisPtr ?? IntPtr.Zero);
        public static bool operator !=(AmbientLight x, AmbientLight y) => !(x == y);
        public bool Equals(AmbientLight other) => this == other;
        public override bool Equals(object obj) => obj is AmbientLight that && this == that;
        public override int GetHashCode() => ThisPtr.GetHashCode();


        bool IWinRTObject.HasUnwrappableNativeObject => true;
        IObjectReference IWinRTObject.NativeObject => _inner;

        private struct InterfaceTag<I>{};


        public global::Windows.UI.Color Color
        {
            get => global::ABI.Microsoft.UI.Composition.IAmbientLightMethods.get_Color(_objRef_global__Microsoft_UI_Composition_IAmbientLight);
            set => global::ABI.Microsoft.UI.Composition.IAmbientLightMethods.set_Color(_objRef_global__Microsoft_UI_Composition_IAmbientLight, value);
        }

        public float Intensity
        {
            get => global::ABI.Microsoft.UI.Composition.IAmbientLight2Methods.get_Intensity(_objRef_global__Microsoft_UI_Composition_IAmbientLight2);
            set => global::ABI.Microsoft.UI.Composition.IAmbientLight2Methods.set_Intensity(_objRef_global__Microsoft_UI_Composition_IAmbientLight2, value);
        }

        protected override bool IsOverridableInterface(Guid iid) => base.IsOverridableInterface(iid);

        global::System.Runtime.InteropServices.CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(ref Guid iid, out IntPtr ppv)
        {
            ppv = IntPtr.Zero;
            if (IsOverridableInterface(iid) || global::WinRT.Interop.IID.IID_IInspectable == iid)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
            }

            if (((IWinRTObject)this).NativeObject.TryAs(iid, out ppv) >= 0)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.Handled;
            }

            return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
        }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI")]
    [global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Composition.AnimationController))]
    [global::ABI.Microsoft.UI.Composition.AnimationControllerRcwFactory]
    [global::WinRT.ProjectedRuntimeClass(typeof(IAnimationController))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.Foundation.WindowsAppSDKContract), 65536u)]
    public sealed class AnimationController : CompositionObject, global::System.Runtime.InteropServices.ICustomQueryInterface, IWinRTObject, IEquatable<AnimationController>
    {
        private IntPtr ThisPtr => _inner == null ? (((IWinRTObject)this).NativeObject).ThisPtr : _inner.ThisPtr;

        private readonly IObjectReference _inner = null;



        private IObjectReference _objRef_global__Microsoft_UI_Composition_IAnimationController => _inner;


        public static new I As<I>() => ActivationFactory.Get("Microsoft.UI.Composition.AnimationController").AsInterface<I>();

        private static volatile IObjectReference ___objRef_global__Microsoft_UI_Composition_IAnimationControllerStatics;
        private static IObjectReference _objRef_global__Microsoft_UI_Composition_IAnimationControllerStatics
        {
            get
            { 
                var factory = ___objRef_global__Microsoft_UI_Composition_IAnimationControllerStatics;
                if (factory != null && factory.IsInCurrentContext)
                {
                    return factory;
                }
                else
                {
                    return ___objRef_global__Microsoft_UI_Composition_IAnimationControllerStatics = ActivationFactory.Get("Microsoft.UI.Composition.AnimationController", global::ABI.Microsoft.UI.Composition.IAnimationControllerStaticsMethods.IID);
                }
            }
        }

        public static float MaxPlaybackRate => global::ABI.Microsoft.UI.Composition.IAnimationControllerStaticsMethods.get_MaxPlaybackRate(_objRef_global__Microsoft_UI_Composition_IAnimationControllerStatics);

        public static float MinPlaybackRate => global::ABI.Microsoft.UI.Composition.IAnimationControllerStaticsMethods.get_MinPlaybackRate(_objRef_global__Microsoft_UI_Composition_IAnimationControllerStatics);

        public static new AnimationController FromAbi(IntPtr thisPtr)
        {
            if (thisPtr == IntPtr.Zero) return null;
            return MarshalInspectable<AnimationController>.FromAbi(thisPtr);
        }

        internal AnimationController(IObjectReference objRef)
            : base(global::WinRT.DerivedComposed.Instance)

        {
            _inner = objRef.As(global::ABI.Microsoft.UI.Composition.IAnimationControllerMethods.IID);

        }


        public static bool operator ==(AnimationController x, AnimationController y) => (x?.ThisPtr ?? IntPtr.Zero) == (y?.ThisPtr ?? IntPtr.Zero);
        public static bool operator !=(AnimationController x, AnimationController y) => !(x == y);
        public bool Equals(AnimationController other) => this == other;
        public override bool Equals(object obj) => obj is AnimationController that && this == that;
        public override int GetHashCode() => ThisPtr.GetHashCode();


        bool IWinRTObject.HasUnwrappableNativeObject => true;
        IObjectReference IWinRTObject.NativeObject => _inner;

        private struct InterfaceTag<I>{};


        public void Pause() => global::ABI.Microsoft.UI.Composition.IAnimationControllerMethods.Pause(_objRef_global__Microsoft_UI_Composition_IAnimationController);

        public void Resume() => global::ABI.Microsoft.UI.Composition.IAnimationControllerMethods.Resume(_objRef_global__Microsoft_UI_Composition_IAnimationController);

        public float PlaybackRate
        {
            get => global::ABI.Microsoft.UI.Composition.IAnimationControllerMethods.get_PlaybackRate(_objRef_global__Microsoft_UI_Composition_IAnimationController);
            set => global::ABI.Microsoft.UI.Composition.IAnimationControllerMethods.set_PlaybackRate(_objRef_global__Microsoft_UI_Composition_IAnimationController, value);
        }

        public float Progress
        {
            get => global::ABI.Microsoft.UI.Composition.IAnimationControllerMethods.get_Progress(_objRef_global__Microsoft_UI_Composition_IAnimationController);
            set => global::ABI.Microsoft.UI.Composition.IAnimationControllerMethods.set_Progress(_objRef_global__Microsoft_UI_Composition_IAnimationController, value);
        }

        public AnimationControllerProgressBehavior ProgressBehavior
        {
            get => global::ABI.Microsoft.UI.Composition.IAnimationControllerMethods.get_ProgressBehavior(_objRef_global__Microsoft_UI_Composition_IAnimationController);
            set => global::ABI.Microsoft.UI.Composition.IAnimationControllerMethods.set_ProgressBehavior(_objRef_global__Microsoft_UI_Composition_IAnimationController, value);
        }

        protected override bool IsOverridableInterface(Guid iid) => base.IsOverridableInterface(iid);

        global::System.Runtime.InteropServices.CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(ref Guid iid, out IntPtr ppv)
        {
            ppv = IntPtr.Zero;
            if (IsOverridableInterface(iid) || global::WinRT.Interop.IID.IID_IInspectable == iid)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
            }

            if (((IWinRTObject)this).NativeObject.TryAs(iid, out ppv) >= 0)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.Handled;
            }

            return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
        }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI")][global::WinRT.WinRTExposedType(typeof(global::WinRT.EnumTypeDetails<AnimationControllerProgressBehavior>))][global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.Foundation.WindowsAppSDKContract), 65536u)]
    public enum AnimationControllerProgressBehavior : int
    {
        Default = unchecked((int)0),
        IncludesDelayTime = unchecked((int)0x1),
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI")][global::WinRT.WinRTExposedType(typeof(global::WinRT.EnumTypeDetails<AnimationDelayBehavior>))][global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.Foundation.WindowsAppSDKContract), 65536u)]
    public enum AnimationDelayBehavior : int
    {
        SetInitialValueAfterDelay = unchecked((int)0),
        SetInitialValueBeforeDelay = unchecked((int)0x1),
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI")][global::WinRT.WinRTExposedType(typeof(global::WinRT.EnumTypeDetails<AnimationDirection>))][global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.Foundation.WindowsAppSDKContract), 65536u)]
    public enum AnimationDirection : int
    {
        Normal = unchecked((int)0),
        Reverse = unchecked((int)0x1),
        Alternate = unchecked((int)0x2),
        AlternateReverse = unchecked((int)0x3),
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI")][global::WinRT.WinRTExposedType(typeof(global::WinRT.EnumTypeDetails<AnimationIterationBehavior>))][global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.Foundation.WindowsAppSDKContract), 65536u)]
    public enum AnimationIterationBehavior : int
    {
        Count = unchecked((int)0),
        Forever = unchecked((int)0x1),
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI")][global::WinRT.WinRTExposedType(typeof(global::WinRT.EnumTypeDetails<AnimationPropertyAccessMode>))][global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.Foundation.WindowsAppSDKContract), 65536u)]
    public enum AnimationPropertyAccessMode : int
    {
        None = unchecked((int)0),
        ReadOnly = unchecked((int)0x1),
        WriteOnly = unchecked((int)0x2),
        ReadWrite = unchecked((int)0x3),
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI")]
    [global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Composition.AnimationPropertyInfo))]
    [global::ABI.Microsoft.UI.Composition.AnimationPropertyInfoRcwFactory]
    [global::WinRT.ProjectedRuntimeClass(typeof(IAnimationPropertyInfo))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.Foundation.WindowsAppSDKContract), 65536u)]
    public sealed class AnimationPropertyInfo : CompositionObject, global::System.Runtime.InteropServices.ICustomQueryInterface, IWinRTObject, IEquatable<AnimationPropertyInfo>
    {
        private IntPtr ThisPtr => _inner == null ? (((IWinRTObject)this).NativeObject).ThisPtr : _inner.ThisPtr;

        private readonly IObjectReference _inner = null;



        private IObjectReference _objRef_global__Microsoft_UI_Composition_IAnimationPropertyInfo => _inner;
        private volatile IObjectReference ___objRef_global__Microsoft_UI_Composition_IAnimationPropertyInfo2;
        private IObjectReference Make___objRef_global__Microsoft_UI_Composition_IAnimationPropertyInfo2()
        {
            global::System.Threading.Interlocked.CompareExchange(ref ___objRef_global__Microsoft_UI_Composition_IAnimationPropertyInfo2, ((IWinRTObject)this).NativeObject.As<IUnknownVftbl>(global::ABI.Microsoft.UI.Composition.IAnimationPropertyInfo2Methods.IID), null);
            return ___objRef_global__Microsoft_UI_Composition_IAnimationPropertyInfo2;
        }
        private IObjectReference _objRef_global__Microsoft_UI_Composition_IAnimationPropertyInfo2 => ___objRef_global__Microsoft_UI_Composition_IAnimationPropertyInfo2 ?? Make___objRef_global__Microsoft_UI_Composition_IAnimationPropertyInfo2();



        public static new AnimationPropertyInfo FromAbi(IntPtr thisPtr)
        {
            if (thisPtr == IntPtr.Zero) return null;
            return MarshalInspectable<AnimationPropertyInfo>.FromAbi(thisPtr);
        }

        internal AnimationPropertyInfo(IObjectReference objRef)
            : base(global::WinRT.DerivedComposed.Instance)

        {
            _inner = objRef.As(global::ABI.Microsoft.UI.Composition.IAnimationPropertyInfoMethods.IID);

        }


        public static bool operator ==(AnimationPropertyInfo x, AnimationPropertyInfo y) => (x?.ThisPtr ?? IntPtr.Zero) == (y?.ThisPtr ?? IntPtr.Zero);
        public static bool operator !=(AnimationPropertyInfo x, AnimationPropertyInfo y) => !(x == y);
        public bool Equals(AnimationPropertyInfo other) => this == other;
        public override bool Equals(object obj) => obj is AnimationPropertyInfo that && this == that;
        public override int GetHashCode() => ThisPtr.GetHashCode();


        bool IWinRTObject.HasUnwrappableNativeObject => true;
        IObjectReference IWinRTObject.NativeObject => _inner;

        private struct InterfaceTag<I>{};


        public CompositionObject GetResolvedCompositionObject() => global::ABI.Microsoft.UI.Composition.IAnimationPropertyInfo2Methods.GetResolvedCompositionObject(_objRef_global__Microsoft_UI_Composition_IAnimationPropertyInfo2);

        public string GetResolvedCompositionObjectProperty() => global::ABI.Microsoft.UI.Composition.IAnimationPropertyInfo2Methods.GetResolvedCompositionObjectProperty(_objRef_global__Microsoft_UI_Composition_IAnimationPropertyInfo2);

        public AnimationPropertyAccessMode AccessMode
        {
            get => global::ABI.Microsoft.UI.Composition.IAnimationPropertyInfoMethods.get_AccessMode(_objRef_global__Microsoft_UI_Composition_IAnimationPropertyInfo);
            set => global::ABI.Microsoft.UI.Composition.IAnimationPropertyInfoMethods.set_AccessMode(_objRef_global__Microsoft_UI_Composition_IAnimationPropertyInfo, value);
        }

        protected override bool IsOverridableInterface(Guid iid) => base.IsOverridableInterface(iid);

        global::System.Runtime.InteropServices.CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(ref Guid iid, out IntPtr ppv)
        {
            ppv = IntPtr.Zero;
            if (IsOverridableInterface(iid) || global::WinRT.Interop.IID.IID_IInspectable == iid)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
            }

            if (((IWinRTObject)this).NativeObject.TryAs(iid, out ppv) >= 0)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.Handled;
            }

            return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
        }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI")][global::WinRT.WinRTExposedType(typeof(global::WinRT.EnumTypeDetails<AnimationStopBehavior>))][global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.Foundation.WindowsAppSDKContract), 65536u)]
    public enum AnimationStopBehavior : int
    {
        LeaveCurrentValue = unchecked((int)0),
        SetToInitialValue = unchecked((int)0x1),
        SetToFinalValue = unchecked((int)0x2),
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI")]
    [global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Composition.BackEasingFunction))]
    [global::ABI.Microsoft.UI.Composition.BackEasingFunctionRcwFactory]
    [global::WinRT.ProjectedRuntimeClass(typeof(IBackEasingFunction))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.Foundation.WindowsAppSDKContract), 65536u)]
    public sealed class BackEasingFunction : CompositionEasingFunction, global::System.Runtime.InteropServices.ICustomQueryInterface, IWinRTObject, IEquatable<BackEasingFunction>
    {
        private IntPtr ThisPtr => _inner == null ? (((IWinRTObject)this).NativeObject).ThisPtr : _inner.ThisPtr;

        private readonly IObjectReference _inner = null;



        private IObjectReference _objRef_global__Microsoft_UI_Composition_IBackEasingFunction => _inner;


        public static new BackEasingFunction FromAbi(IntPtr thisPtr)
        {
            if (thisPtr == IntPtr.Zero) return null;
            return MarshalInspectable<BackEasingFunction>.FromAbi(thisPtr);
        }

        internal BackEasingFunction(IObjectReference objRef)
            : base(global::WinRT.DerivedComposed.Instance)

        {
            _inner = objRef.As(global::ABI.Microsoft.UI.Composition.IBackEasingFunctionMethods.IID);

        }


        public static bool operator ==(BackEasingFunction x, BackEasingFunction y) => (x?.ThisPtr ?? IntPtr.Zero) == (y?.ThisPtr ?? IntPtr.Zero);
        public static bool operator !=(BackEasingFunction x, BackEasingFunction y) => !(x == y);
        public bool Equals(BackEasingFunction other) => this == other;
        public override bool Equals(object obj) => obj is BackEasingFunction that && this == that;
        public override int GetHashCode() => ThisPtr.GetHashCode();


        bool IWinRTObject.HasUnwrappableNativeObject => true;
        IObjectReference IWinRTObject.NativeObject => _inner;

        private struct InterfaceTag<I>{};


        public float Amplitude => global::ABI.Microsoft.UI.Composition.IBackEasingFunctionMethods.get_Amplitude(_objRef_global__Microsoft_UI_Composition_IBackEasingFunction);

        public CompositionEasingFunctionMode Mode => global::ABI.Microsoft.UI.Composition.IBackEasingFunctionMethods.get_Mode(_objRef_global__Microsoft_UI_Composition_IBackEasingFunction);

        protected override bool IsOverridableInterface(Guid iid) => base.IsOverridableInterface(iid);

        global::System.Runtime.InteropServices.CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(ref Guid iid, out IntPtr ppv)
        {
            ppv = IntPtr.Zero;
            if (IsOverridableInterface(iid) || global::WinRT.Interop.IID.IID_IInspectable == iid)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
            }

            if (((IWinRTObject)this).NativeObject.TryAs(iid, out ppv) >= 0)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.Handled;
            }

            return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
        }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI")]
    [global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Composition.BooleanKeyFrameAnimation))]
    [global::ABI.Microsoft.UI.Composition.BooleanKeyFrameAnimationRcwFactory]
    [global::WinRT.ProjectedRuntimeClass(typeof(IBooleanKeyFrameAnimation))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.Foundation.WindowsAppSDKContract), 65536u)]
    public sealed class BooleanKeyFrameAnimation : KeyFrameAnimation, global::System.Runtime.InteropServices.ICustomQueryInterface, IWinRTObject, IEquatable<BooleanKeyFrameAnimation>
    {
        private IntPtr ThisPtr => _inner == null ? (((IWinRTObject)this).NativeObject).ThisPtr : _inner.ThisPtr;

        private readonly IObjectReference _inner = null;



        private IObjectReference _objRef_global__Microsoft_UI_Composition_IBooleanKeyFrameAnimation => _inner;


        public static new BooleanKeyFrameAnimation FromAbi(IntPtr thisPtr)
        {
            if (thisPtr == IntPtr.Zero) return null;
            return MarshalInspectable<BooleanKeyFrameAnimation>.FromAbi(thisPtr);
        }

        internal BooleanKeyFrameAnimation(IObjectReference objRef)
            : base(global::WinRT.DerivedComposed.Instance)

        {
            _inner = objRef.As(global::ABI.Microsoft.UI.Composition.IBooleanKeyFrameAnimationMethods.IID);

        }


        public static bool operator ==(BooleanKeyFrameAnimation x, BooleanKeyFrameAnimation y) => (x?.ThisPtr ?? IntPtr.Zero) == (y?.ThisPtr ?? IntPtr.Zero);
        public static bool operator !=(BooleanKeyFrameAnimation x, BooleanKeyFrameAnimation y) => !(x == y);
        public bool Equals(BooleanKeyFrameAnimation other) => this == other;
        public override bool Equals(object obj) => obj is BooleanKeyFrameAnimation that && this == that;
        public override int GetHashCode() => ThisPtr.GetHashCode();


        bool IWinRTObject.HasUnwrappableNativeObject => true;
        IObjectReference IWinRTObject.NativeObject => _inner;

        private struct InterfaceTag<I>{};


        public void InsertKeyFrame(float normalizedProgressKey, bool value) => global::ABI.Microsoft.UI.Composition.IBooleanKeyFrameAnimationMethods.InsertKeyFrame(_objRef_global__Microsoft_UI_Composition_IBooleanKeyFrameAnimation, normalizedProgressKey, value);

        protected override bool IsOverridableInterface(Guid iid) => base.IsOverridableInterface(iid);

        global::System.Runtime.InteropServices.CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(ref Guid iid, out IntPtr ppv)
        {
            ppv = IntPtr.Zero;
            if (IsOverridableInterface(iid) || global::WinRT.Interop.IID.IID_IInspectable == iid)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
            }

            if (((IWinRTObject)this).NativeObject.TryAs(iid, out ppv) >= 0)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.Handled;
            }

            return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
        }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI")]
    [global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Composition.BounceEasingFunction))]
    [global::ABI.Microsoft.UI.Composition.BounceEasingFunctionRcwFactory]
    [global::WinRT.ProjectedRuntimeClass(typeof(IBounceEasingFunction))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.Foundation.WindowsAppSDKContract), 65536u)]
    public sealed class BounceEasingFunction : CompositionEasingFunction, global::System.Runtime.InteropServices.ICustomQueryInterface, IWinRTObject, IEquatable<BounceEasingFunction>
    {
        private IntPtr ThisPtr => _inner == null ? (((IWinRTObject)this).NativeObject).ThisPtr : _inner.ThisPtr;

        private readonly IObjectReference _inner = null;



        private IObjectReference _objRef_global__Microsoft_UI_Composition_IBounceEasingFunction => _inner;


        public static new BounceEasingFunction FromAbi(IntPtr thisPtr)
        {
            if (thisPtr == IntPtr.Zero) return null;
            return MarshalInspectable<BounceEasingFunction>.FromAbi(thisPtr);
        }

        internal BounceEasingFunction(IObjectReference objRef)
            : base(global::WinRT.DerivedComposed.Instance)

        {
            _inner = objRef.As(global::ABI.Microsoft.UI.Composition.IBounceEasingFunctionMethods.IID);

        }


        public static bool operator ==(BounceEasingFunction x, BounceEasingFunction y) => (x?.ThisPtr ?? IntPtr.Zero) == (y?.ThisPtr ?? IntPtr.Zero);
        public static bool operator !=(BounceEasingFunction x, BounceEasingFunction y) => !(x == y);
        public bool Equals(BounceEasingFunction other) => this == other;
        public override bool Equals(object obj) => obj is BounceEasingFunction that && this == that;
        public override int GetHashCode() => ThisPtr.GetHashCode();


        bool IWinRTObject.HasUnwrappableNativeObject => true;
        IObjectReference IWinRTObject.NativeObject => _inner;

        private struct InterfaceTag<I>{};


        public int Bounces => global::ABI.Microsoft.UI.Composition.IBounceEasingFunctionMethods.get_Bounces(_objRef_global__Microsoft_UI_Composition_IBounceEasingFunction);

        public float Bounciness => global::ABI.Microsoft.UI.Composition.IBounceEasingFunctionMethods.get_Bounciness(_objRef_global__Microsoft_UI_Composition_IBounceEasingFunction);

        public CompositionEasingFunctionMode Mode => global::ABI.Microsoft.UI.Composition.IBounceEasingFunctionMethods.get_Mode(_objRef_global__Microsoft_UI_Composition_IBounceEasingFunction);

        protected override bool IsOverridableInterface(Guid iid) => base.IsOverridableInterface(iid);

        global::System.Runtime.InteropServices.CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(ref Guid iid, out IntPtr ppv)
        {
            ppv = IntPtr.Zero;
            if (IsOverridableInterface(iid) || global::WinRT.Interop.IID.IID_IInspectable == iid)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
            }

            if (((IWinRTObject)this).NativeObject.TryAs(iid, out ppv) >= 0)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.Handled;
            }

            return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
        }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI")]
    [global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Composition.BounceScalarNaturalMotionAnimation))]
    [global::ABI.Microsoft.UI.Composition.BounceScalarNaturalMotionAnimationRcwFactory]
    [global::WinRT.ProjectedRuntimeClass(typeof(IBounceScalarNaturalMotionAnimation))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.Foundation.WindowsAppSDKContract), 65536u)]
    public sealed class BounceScalarNaturalMotionAnimation : ScalarNaturalMotionAnimation, global::System.Runtime.InteropServices.ICustomQueryInterface, IWinRTObject, IEquatable<BounceScalarNaturalMotionAnimation>
    {
        private IntPtr ThisPtr => _inner == null ? (((IWinRTObject)this).NativeObject).ThisPtr : _inner.ThisPtr;

        private readonly IObjectReference _inner = null;



        private IObjectReference _objRef_global__Microsoft_UI_Composition_IBounceScalarNaturalMotionAnimation => _inner;


        public static new BounceScalarNaturalMotionAnimation FromAbi(IntPtr thisPtr)
        {
            if (thisPtr == IntPtr.Zero) return null;
            return MarshalInspectable<BounceScalarNaturalMotionAnimation>.FromAbi(thisPtr);
        }

        internal BounceScalarNaturalMotionAnimation(IObjectReference objRef)
            : base(global::WinRT.DerivedComposed.Instance)

        {
            _inner = objRef.As(global::ABI.Microsoft.UI.Composition.IBounceScalarNaturalMotionAnimationMethods.IID);

        }


        public static bool operator ==(BounceScalarNaturalMotionAnimation x, BounceScalarNaturalMotionAnimation y) => (x?.ThisPtr ?? IntPtr.Zero) == (y?.ThisPtr ?? IntPtr.Zero);
        public static bool operator !=(BounceScalarNaturalMotionAnimation x, BounceScalarNaturalMotionAnimation y) => !(x == y);
        public bool Equals(BounceScalarNaturalMotionAnimation other) => this == other;
        public override bool Equals(object obj) => obj is BounceScalarNaturalMotionAnimation that && this == that;
        public override int GetHashCode() => ThisPtr.GetHashCode();


        bool IWinRTObject.HasUnwrappableNativeObject => true;
        IObjectReference IWinRTObject.NativeObject => _inner;

        private struct InterfaceTag<I>{};


        public float Acceleration
        {
            get => global::ABI.Microsoft.UI.Composition.IBounceScalarNaturalMotionAnimationMethods.get_Acceleration(_objRef_global__Microsoft_UI_Composition_IBounceScalarNaturalMotionAnimation);
            set => global::ABI.Microsoft.UI.Composition.IBounceScalarNaturalMotionAnimationMethods.set_Acceleration(_objRef_global__Microsoft_UI_Composition_IBounceScalarNaturalMotionAnimation, value);
        }

        public float Restitution
        {
            get => global::ABI.Microsoft.UI.Composition.IBounceScalarNaturalMotionAnimationMethods.get_Restitution(_objRef_global__Microsoft_UI_Composition_IBounceScalarNaturalMotionAnimation);
            set => global::ABI.Microsoft.UI.Composition.IBounceScalarNaturalMotionAnimationMethods.set_Restitution(_objRef_global__Microsoft_UI_Composition_IBounceScalarNaturalMotionAnimation, value);
        }

        protected override bool IsOverridableInterface(Guid iid) => base.IsOverridableInterface(iid);

        global::System.Runtime.InteropServices.CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(ref Guid iid, out IntPtr ppv)
        {
            ppv = IntPtr.Zero;
            if (IsOverridableInterface(iid) || global::WinRT.Interop.IID.IID_IInspectable == iid)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
            }

            if (((IWinRTObject)this).NativeObject.TryAs(iid, out ppv) >= 0)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.Handled;
            }

            return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
        }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI")]
    [global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Composition.BounceVector2NaturalMotionAnimation))]
    [global::ABI.Microsoft.UI.Composition.BounceVector2NaturalMotionAnimationRcwFactory]
    [global::WinRT.ProjectedRuntimeClass(typeof(IBounceVector2NaturalMotionAnimation))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.Foundation.WindowsAppSDKContract), 65536u)]
    public sealed class BounceVector2NaturalMotionAnimation : Vector2NaturalMotionAnimation, global::System.Runtime.InteropServices.ICustomQueryInterface, IWinRTObject, IEquatable<BounceVector2NaturalMotionAnimation>
    {
        private IntPtr ThisPtr => _inner == null ? (((IWinRTObject)this).NativeObject).ThisPtr : _inner.ThisPtr;

        private readonly IObjectReference _inner = null;



        private IObjectReference _objRef_global__Microsoft_UI_Composition_IBounceVector2NaturalMotionAnimation => _inner;


        public static new BounceVector2NaturalMotionAnimation FromAbi(IntPtr thisPtr)
        {
            if (thisPtr == IntPtr.Zero) return null;
            return MarshalInspectable<BounceVector2NaturalMotionAnimation>.FromAbi(thisPtr);
        }

        internal BounceVector2NaturalMotionAnimation(IObjectReference objRef)
            : base(global::WinRT.DerivedComposed.Instance)

        {
            _inner = objRef.As(global::ABI.Microsoft.UI.Composition.IBounceVector2NaturalMotionAnimationMethods.IID);

        }


        public static bool operator ==(BounceVector2NaturalMotionAnimation x, BounceVector2NaturalMotionAnimation y) => (x?.ThisPtr ?? IntPtr.Zero) == (y?.ThisPtr ?? IntPtr.Zero);
        public static bool operator !=(BounceVector2NaturalMotionAnimation x, BounceVector2NaturalMotionAnimation y) => !(x == y);
        public bool Equals(BounceVector2NaturalMotionAnimation other) => this == other;
        public override bool Equals(object obj) => obj is BounceVector2NaturalMotionAnimation that && this == that;
        public override int GetHashCode() => ThisPtr.GetHashCode();


        bool IWinRTObject.HasUnwrappableNativeObject => true;
        IObjectReference IWinRTObject.NativeObject => _inner;

        private struct InterfaceTag<I>{};


        public float Acceleration
        {
            get => global::ABI.Microsoft.UI.Composition.IBounceVector2NaturalMotionAnimationMethods.get_Acceleration(_objRef_global__Microsoft_UI_Composition_IBounceVector2NaturalMotionAnimation);
            set => global::ABI.Microsoft.UI.Composition.IBounceVector2NaturalMotionAnimationMethods.set_Acceleration(_objRef_global__Microsoft_UI_Composition_IBounceVector2NaturalMotionAnimation, value);
        }

        public float Restitution
        {
            get => global::ABI.Microsoft.UI.Composition.IBounceVector2NaturalMotionAnimationMethods.get_Restitution(_objRef_global__Microsoft_UI_Composition_IBounceVector2NaturalMotionAnimation);
            set => global::ABI.Microsoft.UI.Composition.IBounceVector2NaturalMotionAnimationMethods.set_Restitution(_objRef_global__Microsoft_UI_Composition_IBounceVector2NaturalMotionAnimation, value);
        }

        protected override bool IsOverridableInterface(Guid iid) => base.IsOverridableInterface(iid);

        global::System.Runtime.InteropServices.CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(ref Guid iid, out IntPtr ppv)
        {
            ppv = IntPtr.Zero;
            if (IsOverridableInterface(iid) || global::WinRT.Interop.IID.IID_IInspectable == iid)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
            }

            if (((IWinRTObject)this).NativeObject.TryAs(iid, out ppv) >= 0)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.Handled;
            }

            return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
        }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI")]
    [global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Composition.BounceVector3NaturalMotionAnimation))]
    [global::ABI.Microsoft.UI.Composition.BounceVector3NaturalMotionAnimationRcwFactory]
    [global::WinRT.ProjectedRuntimeClass(typeof(IBounceVector3NaturalMotionAnimation))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.Foundation.WindowsAppSDKContract), 65536u)]
    public sealed class BounceVector3NaturalMotionAnimation : Vector3NaturalMotionAnimation, global::System.Runtime.InteropServices.ICustomQueryInterface, IWinRTObject, IEquatable<BounceVector3NaturalMotionAnimation>
    {
        private IntPtr ThisPtr => _inner == null ? (((IWinRTObject)this).NativeObject).ThisPtr : _inner.ThisPtr;

        private readonly IObjectReference _inner = null;



        private IObjectReference _objRef_global__Microsoft_UI_Composition_IBounceVector3NaturalMotionAnimation => _inner;


        public static new BounceVector3NaturalMotionAnimation FromAbi(IntPtr thisPtr)
        {
            if (thisPtr == IntPtr.Zero) return null;
            return MarshalInspectable<BounceVector3NaturalMotionAnimation>.FromAbi(thisPtr);
        }

        internal BounceVector3NaturalMotionAnimation(IObjectReference objRef)
            : base(global::WinRT.DerivedComposed.Instance)

        {
            _inner = objRef.As(global::ABI.Microsoft.UI.Composition.IBounceVector3NaturalMotionAnimationMethods.IID);

        }


        public static bool operator ==(BounceVector3NaturalMotionAnimation x, BounceVector3NaturalMotionAnimation y) => (x?.ThisPtr ?? IntPtr.Zero) == (y?.ThisPtr ?? IntPtr.Zero);
        public static bool operator !=(BounceVector3NaturalMotionAnimation x, BounceVector3NaturalMotionAnimation y) => !(x == y);
        public bool Equals(BounceVector3NaturalMotionAnimation other) => this == other;
        public override bool Equals(object obj) => obj is BounceVector3NaturalMotionAnimation that && this == that;
        public override int GetHashCode() => ThisPtr.GetHashCode();


        bool IWinRTObject.HasUnwrappableNativeObject => true;
        IObjectReference IWinRTObject.NativeObject => _inner;

        private struct InterfaceTag<I>{};


        public float Acceleration
        {
            get => global::ABI.Microsoft.UI.Composition.IBounceVector3NaturalMotionAnimationMethods.get_Acceleration(_objRef_global__Microsoft_UI_Composition_IBounceVector3NaturalMotionAnimation);
            set => global::ABI.Microsoft.UI.Composition.IBounceVector3NaturalMotionAnimationMethods.set_Acceleration(_objRef_global__Microsoft_UI_Composition_IBounceVector3NaturalMotionAnimation, value);
        }

        public float Restitution
        {
            get => global::ABI.Microsoft.UI.Composition.IBounceVector3NaturalMotionAnimationMethods.get_Restitution(_objRef_global__Microsoft_UI_Composition_IBounceVector3NaturalMotionAnimation);
            set => global::ABI.Microsoft.UI.Composition.IBounceVector3NaturalMotionAnimationMethods.set_Restitution(_objRef_global__Microsoft_UI_Composition_IBounceVector3NaturalMotionAnimation, value);
        }

        protected override bool IsOverridableInterface(Guid iid) => base.IsOverridableInterface(iid);

        global::System.Runtime.InteropServices.CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(ref Guid iid, out IntPtr ppv)
        {
            ppv = IntPtr.Zero;
            if (IsOverridableInterface(iid) || global::WinRT.Interop.IID.IID_IInspectable == iid)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
            }

            if (((IWinRTObject)this).NativeObject.TryAs(iid, out ppv) >= 0)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.Handled;
            }

            return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
        }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI")]
    [global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Composition.CircleEasingFunction))]
    [global::ABI.Microsoft.UI.Composition.CircleEasingFunctionRcwFactory]
    [global::WinRT.ProjectedRuntimeClass(typeof(ICircleEasingFunction))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.Foundation.WindowsAppSDKContract), 65536u)]
    public sealed class CircleEasingFunction : CompositionEasingFunction, global::System.Runtime.InteropServices.ICustomQueryInterface, IWinRTObject, IEquatable<CircleEasingFunction>
    {
        private IntPtr ThisPtr => _inner == null ? (((IWinRTObject)this).NativeObject).ThisPtr : _inner.ThisPtr;

        private readonly IObjectReference _inner = null;



        private IObjectReference _objRef_global__Microsoft_UI_Composition_ICircleEasingFunction => _inner;


        public static new CircleEasingFunction FromAbi(IntPtr thisPtr)
        {
            if (thisPtr == IntPtr.Zero) return null;
            return MarshalInspectable<CircleEasingFunction>.FromAbi(thisPtr);
        }

        internal CircleEasingFunction(IObjectReference objRef)
            : base(global::WinRT.DerivedComposed.Instance)

        {
            _inner = objRef.As(global::ABI.Microsoft.UI.Composition.ICircleEasingFunctionMethods.IID);

        }


        public static bool operator ==(CircleEasingFunction x, CircleEasingFunction y) => (x?.ThisPtr ?? IntPtr.Zero) == (y?.ThisPtr ?? IntPtr.Zero);
        public static bool operator !=(CircleEasingFunction x, CircleEasingFunction y) => !(x == y);
        public bool Equals(CircleEasingFunction other) => this == other;
        public override bool Equals(object obj) => obj is CircleEasingFunction that && this == that;
        public override int GetHashCode() => ThisPtr.GetHashCode();


        bool IWinRTObject.HasUnwrappableNativeObject => true;
        IObjectReference IWinRTObject.NativeObject => _inner;

        private struct InterfaceTag<I>{};


        public CompositionEasingFunctionMode Mode => global::ABI.Microsoft.UI.Composition.ICircleEasingFunctionMethods.get_Mode(_objRef_global__Microsoft_UI_Composition_ICircleEasingFunction);

        protected override bool IsOverridableInterface(Guid iid) => base.IsOverridableInterface(iid);

        global::System.Runtime.InteropServices.CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(ref Guid iid, out IntPtr ppv)
        {
            ppv = IntPtr.Zero;
            if (IsOverridableInterface(iid) || global::WinRT.Interop.IID.IID_IInspectable == iid)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
            }

            if (((IWinRTObject)this).NativeObject.TryAs(iid, out ppv) >= 0)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.Handled;
            }

            return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
        }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI")]
    [global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Composition.ColorKeyFrameAnimation))]
    [global::ABI.Microsoft.UI.Composition.ColorKeyFrameAnimationRcwFactory]
    [global::WinRT.ProjectedRuntimeClass(typeof(IColorKeyFrameAnimation))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.Foundation.WindowsAppSDKContract), 65536u)]
    public sealed class ColorKeyFrameAnimation : KeyFrameAnimation, global::System.Runtime.InteropServices.ICustomQueryInterface, IWinRTObject, IEquatable<ColorKeyFrameAnimation>
    {
        private IntPtr ThisPtr => _inner == null ? (((IWinRTObject)this).NativeObject).ThisPtr : _inner.ThisPtr;

        private readonly IObjectReference _inner = null;



        private IObjectReference _objRef_global__Microsoft_UI_Composition_IColorKeyFrameAnimation => _inner;


        public static new ColorKeyFrameAnimation FromAbi(IntPtr thisPtr)
        {
            if (thisPtr == IntPtr.Zero) return null;
            return MarshalInspectable<ColorKeyFrameAnimation>.FromAbi(thisPtr);
        }

        internal ColorKeyFrameAnimation(IObjectReference objRef)
            : base(global::WinRT.DerivedComposed.Instance)

        {
            _inner = objRef.As(global::ABI.Microsoft.UI.Composition.IColorKeyFrameAnimationMethods.IID);

        }


        public static bool operator ==(ColorKeyFrameAnimation x, ColorKeyFrameAnimation y) => (x?.ThisPtr ?? IntPtr.Zero) == (y?.ThisPtr ?? IntPtr.Zero);
        public static bool operator !=(ColorKeyFrameAnimation x, ColorKeyFrameAnimation y) => !(x == y);
        public bool Equals(ColorKeyFrameAnimation other) => this == other;
        public override bool Equals(object obj) => obj is ColorKeyFrameAnimation that && this == that;
        public override int GetHashCode() => ThisPtr.GetHashCode();


        bool IWinRTObject.HasUnwrappableNativeObject => true;
        IObjectReference IWinRTObject.NativeObject => _inner;

        private struct InterfaceTag<I>{};


        public void InsertKeyFrame(float normalizedProgressKey, global::Windows.UI.Color value) => global::ABI.Microsoft.UI.Composition.IColorKeyFrameAnimationMethods.InsertKeyFrame(_objRef_global__Microsoft_UI_Composition_IColorKeyFrameAnimation, normalizedProgressKey, value);

        public void InsertKeyFrame(float normalizedProgressKey, global::Windows.UI.Color value, CompositionEasingFunction easingFunction) => global::ABI.Microsoft.UI.Composition.IColorKeyFrameAnimationMethods.InsertKeyFrame(_objRef_global__Microsoft_UI_Composition_IColorKeyFrameAnimation, normalizedProgressKey, value, easingFunction);

        public CompositionColorSpace InterpolationColorSpace
        {
            get => global::ABI.Microsoft.UI.Composition.IColorKeyFrameAnimationMethods.get_InterpolationColorSpace(_objRef_global__Microsoft_UI_Composition_IColorKeyFrameAnimation);
            set => global::ABI.Microsoft.UI.Composition.IColorKeyFrameAnimationMethods.set_InterpolationColorSpace(_objRef_global__Microsoft_UI_Composition_IColorKeyFrameAnimation, value);
        }

        protected override bool IsOverridableInterface(Guid iid) => base.IsOverridableInterface(iid);

        global::System.Runtime.InteropServices.CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(ref Guid iid, out IntPtr ppv)
        {
            ppv = IntPtr.Zero;
            if (IsOverridableInterface(iid) || global::WinRT.Interop.IID.IID_IInspectable == iid)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
            }

            if (((IWinRTObject)this).NativeObject.TryAs(iid, out ppv) >= 0)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.Handled;
            }

            return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
        }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI")]
    [global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Composition.CompositionAnimation))]
    [global::ABI.Microsoft.UI.Composition.CompositionAnimationRcwFactory]
    [global::WinRT.ProjectedRuntimeClass(typeof(ICompositionAnimation))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.Foundation.WindowsAppSDKContract), 65536u)]
    public class CompositionAnimation : CompositionObject, ICompositionAnimationBase, global::System.Runtime.InteropServices.ICustomQueryInterface, IWinRTObject, IEquatable<CompositionAnimation>
    {
        private IntPtr ThisPtr => _inner == null ? (((IWinRTObject)this).NativeObject).ThisPtr : _inner.ThisPtr;

        private readonly IObjectReference _inner = null;




        private volatile IObjectReference ___objRef_global__Microsoft_UI_Composition_ICompositionAnimation;
        private IObjectReference Make___objRef_global__Microsoft_UI_Composition_ICompositionAnimation()
        {
            global::System.Threading.Interlocked.CompareExchange(ref ___objRef_global__Microsoft_UI_Composition_ICompositionAnimation, ((IWinRTObject)this).NativeObject.As<IUnknownVftbl>(global::ABI.Microsoft.UI.Composition.ICompositionAnimationMethods.IID), null);
            return ___objRef_global__Microsoft_UI_Composition_ICompositionAnimation;
        }
        private IObjectReference _objRef_global__Microsoft_UI_Composition_ICompositionAnimation => ___objRef_global__Microsoft_UI_Composition_ICompositionAnimation ?? Make___objRef_global__Microsoft_UI_Composition_ICompositionAnimation();

        private volatile IObjectReference ___objRef_global__Microsoft_UI_Composition_ICompositionAnimation2;
        private IObjectReference Make___objRef_global__Microsoft_UI_Composition_ICompositionAnimation2()
        {
            global::System.Threading.Interlocked.CompareExchange(ref ___objRef_global__Microsoft_UI_Composition_ICompositionAnimation2, ((IWinRTObject)this).NativeObject.As<IUnknownVftbl>(global::ABI.Microsoft.UI.Composition.ICompositionAnimation2Methods.IID), null);
            return ___objRef_global__Microsoft_UI_Composition_ICompositionAnimation2;
        }
        private IObjectReference _objRef_global__Microsoft_UI_Composition_ICompositionAnimation2 => ___objRef_global__Microsoft_UI_Composition_ICompositionAnimation2 ?? Make___objRef_global__Microsoft_UI_Composition_ICompositionAnimation2();

        private volatile IObjectReference ___objRef_global__Microsoft_UI_Composition_ICompositionAnimation3;
        private IObjectReference Make___objRef_global__Microsoft_UI_Composition_ICompositionAnimation3()
        {
            global::System.Threading.Interlocked.CompareExchange(ref ___objRef_global__Microsoft_UI_Composition_ICompositionAnimation3, ((IWinRTObject)this).NativeObject.As<IUnknownVftbl>(global::ABI.Microsoft.UI.Composition.ICompositionAnimation3Methods.IID), null);
            return ___objRef_global__Microsoft_UI_Composition_ICompositionAnimation3;
        }
        private IObjectReference _objRef_global__Microsoft_UI_Composition_ICompositionAnimation3 => ___objRef_global__Microsoft_UI_Composition_ICompositionAnimation3 ?? Make___objRef_global__Microsoft_UI_Composition_ICompositionAnimation3();

        private volatile IObjectReference ___objRef_global__Microsoft_UI_Composition_ICompositionAnimation4;
        private IObjectReference Make___objRef_global__Microsoft_UI_Composition_ICompositionAnimation4()
        {
            global::System.Threading.Interlocked.CompareExchange(ref ___objRef_global__Microsoft_UI_Composition_ICompositionAnimation4, ((IWinRTObject)this).NativeObject.As<IUnknownVftbl>(global::ABI.Microsoft.UI.Composition.ICompositionAnimation4Methods.IID), null);
            return ___objRef_global__Microsoft_UI_Composition_ICompositionAnimation4;
        }
        private IObjectReference _objRef_global__Microsoft_UI_Composition_ICompositionAnimation4 => ___objRef_global__Microsoft_UI_Composition_ICompositionAnimation4 ?? Make___objRef_global__Microsoft_UI_Composition_ICompositionAnimation4();

        private volatile IObjectReference ___objRef_global__Microsoft_UI_Composition_ICompositionAnimationBase;
        private IObjectReference Make___objRef_global__Microsoft_UI_Composition_ICompositionAnimationBase()
        {
            global::System.Threading.Interlocked.CompareExchange(ref ___objRef_global__Microsoft_UI_Composition_ICompositionAnimationBase, ((IWinRTObject)this).NativeObject.As<IUnknownVftbl>(global::ABI.Microsoft.UI.Composition.ICompositionAnimationBaseMethods.IID), null);
            return ___objRef_global__Microsoft_UI_Composition_ICompositionAnimationBase;
        }
        private IObjectReference _objRef_global__Microsoft_UI_Composition_ICompositionAnimationBase => ___objRef_global__Microsoft_UI_Composition_ICompositionAnimationBase ?? Make___objRef_global__Microsoft_UI_Composition_ICompositionAnimationBase();



        private static class _ICompositionAnimationFactoryMethods
        {}

        private static volatile IObjectReference ___objRef_global__Microsoft_UI_Composition_ICompositionAnimationFactory;
        private static IObjectReference _objRef_global__Microsoft_UI_Composition_ICompositionAnimationFactory
        {
            get
            { 
                var factory = ___objRef_global__Microsoft_UI_Composition_ICompositionAnimationFactory;
                if (factory != null && factory.IsInCurrentContext)
                {
                    return factory;
                }
                else
                {
                    return ___objRef_global__Microsoft_UI_Composition_ICompositionAnimationFactory = ActivationFactory.Get("Microsoft.UI.Composition.CompositionAnimation", global::ABI.Microsoft.UI.Composition.ICompositionAnimationFactoryMethods.IID);
                }
            }
        }

        public static new CompositionAnimation FromAbi(IntPtr thisPtr)
        {
            if (thisPtr == IntPtr.Zero) return null;
            return MarshalInspectable<CompositionAnimation>.FromAbi(thisPtr);
        }

        protected internal CompositionAnimation(IObjectReference objRef)
            : base(global::WinRT.DerivedComposed.Instance)

        {
            _inner = objRef.As(global::ABI.Microsoft.UI.Composition.ICompositionAnimationMethods.IID);

        }


        public static bool operator ==(CompositionAnimation x, CompositionAnimation y) => (x?.ThisPtr ?? IntPtr.Zero) == (y?.ThisPtr ?? IntPtr.Zero);
        public static bool operator !=(CompositionAnimation x, CompositionAnimation y) => !(x == y);
        public bool Equals(CompositionAnimation other) => this == other;
        public override bool Equals(object obj) => obj is CompositionAnimation that && this == that;
        public override int GetHashCode() => ThisPtr.GetHashCode();


        protected CompositionAnimation(global::WinRT.DerivedComposed _):base(_)
        {

        }
        bool IWinRTObject.HasUnwrappableNativeObject => this.GetType() == typeof(CompositionAnimation);
        IObjectReference IWinRTObject.NativeObject => _inner;

        private struct InterfaceTag<I>{};


        public void ClearAllParameters() => global::ABI.Microsoft.UI.Composition.ICompositionAnimationMethods.ClearAllParameters(_objRef_global__Microsoft_UI_Composition_ICompositionAnimation);

        public void ClearParameter(string key) => global::ABI.Microsoft.UI.Composition.ICompositionAnimationMethods.ClearParameter(_objRef_global__Microsoft_UI_Composition_ICompositionAnimation, key);

        public void SetColorParameter(string key, global::Windows.UI.Color value) => global::ABI.Microsoft.UI.Composition.ICompositionAnimationMethods.SetColorParameter(_objRef_global__Microsoft_UI_Composition_ICompositionAnimation, key, value);

        public void SetMatrix3x2Parameter(string key, global::System.Numerics.Matrix3x2 value) => global::ABI.Microsoft.UI.Composition.ICompositionAnimationMethods.SetMatrix3x2Parameter(_objRef_global__Microsoft_UI_Composition_ICompositionAnimation, key, value);

        public void SetMatrix4x4Parameter(string key, global::System.Numerics.Matrix4x4 value) => global::ABI.Microsoft.UI.Composition.ICompositionAnimationMethods.SetMatrix4x4Parameter(_objRef_global__Microsoft_UI_Composition_ICompositionAnimation, key, value);

        public void SetQuaternionParameter(string key, global::System.Numerics.Quaternion value) => global::ABI.Microsoft.UI.Composition.ICompositionAnimationMethods.SetQuaternionParameter(_objRef_global__Microsoft_UI_Composition_ICompositionAnimation, key, value);

        public void SetReferenceParameter(string key, CompositionObject compositionObject) => global::ABI.Microsoft.UI.Composition.ICompositionAnimationMethods.SetReferenceParameter(_objRef_global__Microsoft_UI_Composition_ICompositionAnimation, key, compositionObject);

        public void SetScalarParameter(string key, float value) => global::ABI.Microsoft.UI.Composition.ICompositionAnimationMethods.SetScalarParameter(_objRef_global__Microsoft_UI_Composition_ICompositionAnimation, key, value);

        public void SetVector2Parameter(string key, global::System.Numerics.Vector2 value) => global::ABI.Microsoft.UI.Composition.ICompositionAnimationMethods.SetVector2Parameter(_objRef_global__Microsoft_UI_Composition_ICompositionAnimation, key, value);

        public void SetVector3Parameter(string key, global::System.Numerics.Vector3 value) => global::ABI.Microsoft.UI.Composition.ICompositionAnimationMethods.SetVector3Parameter(_objRef_global__Microsoft_UI_Composition_ICompositionAnimation, key, value);

        public void SetVector4Parameter(string key, global::System.Numerics.Vector4 value) => global::ABI.Microsoft.UI.Composition.ICompositionAnimationMethods.SetVector4Parameter(_objRef_global__Microsoft_UI_Composition_ICompositionAnimation, key, value);

        public void SetBooleanParameter(string key, bool value) => global::ABI.Microsoft.UI.Composition.ICompositionAnimation2Methods.SetBooleanParameter(_objRef_global__Microsoft_UI_Composition_ICompositionAnimation2, key, value);

        public void SetExpressionReferenceParameter(string parameterName, IAnimationObject source) => global::ABI.Microsoft.UI.Composition.ICompositionAnimation4Methods.SetExpressionReferenceParameter(_objRef_global__Microsoft_UI_Composition_ICompositionAnimation4, parameterName, source);

        public InitialValueExpressionCollection InitialValueExpressions => global::ABI.Microsoft.UI.Composition.ICompositionAnimation3Methods.get_InitialValueExpressions(_objRef_global__Microsoft_UI_Composition_ICompositionAnimation3);

        public string Target
        {
            get => global::ABI.Microsoft.UI.Composition.ICompositionAnimation2Methods.get_Target(_objRef_global__Microsoft_UI_Composition_ICompositionAnimation2);
            set => global::ABI.Microsoft.UI.Composition.ICompositionAnimation2Methods.set_Target(_objRef_global__Microsoft_UI_Composition_ICompositionAnimation2, value);
        }

        protected override bool IsOverridableInterface(Guid iid) => base.IsOverridableInterface(iid);

        global::System.Runtime.InteropServices.CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(ref Guid iid, out IntPtr ppv)
        {
            ppv = IntPtr.Zero;
            if (IsOverridableInterface(iid) || global::WinRT.Interop.IID.IID_IInspectable == iid)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
            }

            if (((IWinRTObject)this).NativeObject.TryAs(iid, out ppv) >= 0)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.Handled;
            }

            return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
        }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI")]
    [global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Composition.CompositionAnimationGroup))]
    [global::ABI.Microsoft.UI.Composition.CompositionAnimationGroupRcwFactory]
    [global::WinRT.ProjectedRuntimeClass(typeof(ICompositionAnimationGroup))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.Foundation.WindowsAppSDKContract), 65536u)]
    public sealed class CompositionAnimationGroup : CompositionObject, global::System.Collections.Generic.IEnumerable<CompositionAnimation>, ICompositionAnimationBase, global::System.Runtime.InteropServices.ICustomQueryInterface, IWinRTObject, IEquatable<CompositionAnimationGroup>
    {
        private IntPtr ThisPtr => _inner == null ? (((IWinRTObject)this).NativeObject).ThisPtr : _inner.ThisPtr;

        private readonly IObjectReference _inner = null;



        private IObjectReference _objRef_global__Microsoft_UI_Composition_ICompositionAnimationGroup => _inner;
        private volatile IObjectReference ___objRef_global__System_Collections_Generic_IEnumerable_CompositionAnimation_;
        private IObjectReference Make___objRef_global__System_Collections_Generic_IEnumerable_CompositionAnimation_()
        {
            _ = global::WinRT.GenericTypeInstantiations.Windows_Foundation_Collections_IIterable_1_Microsoft_UI_Composition_CompositionAnimation.EnsureInitialized();
            global::System.Threading.Interlocked.CompareExchange(ref ___objRef_global__System_Collections_Generic_IEnumerable_CompositionAnimation_, ((IWinRTObject)this).NativeObject.As<IUnknownVftbl>(global::ABI.System.Collections.Generic.IEnumerableMethods<CompositionAnimation>.IID), null);
            return ___objRef_global__System_Collections_Generic_IEnumerable_CompositionAnimation_;
        }
        private IObjectReference _objRef_global__System_Collections_Generic_IEnumerable_CompositionAnimation_ => ___objRef_global__System_Collections_Generic_IEnumerable_CompositionAnimation_ ?? Make___objRef_global__System_Collections_Generic_IEnumerable_CompositionAnimation_();

        private volatile IObjectReference ___objRef_global__Microsoft_UI_Composition_ICompositionAnimationBase;
        private IObjectReference Make___objRef_global__Microsoft_UI_Composition_ICompositionAnimationBase()
        {
            global::System.Threading.Interlocked.CompareExchange(ref ___objRef_global__Microsoft_UI_Composition_ICompositionAnimationBase, ((IWinRTObject)this).NativeObject.As<IUnknownVftbl>(global::ABI.Microsoft.UI.Composition.ICompositionAnimationBaseMethods.IID), null);
            return ___objRef_global__Microsoft_UI_Composition_ICompositionAnimationBase;
        }
        private IObjectReference _objRef_global__Microsoft_UI_Composition_ICompositionAnimationBase => ___objRef_global__Microsoft_UI_Composition_ICompositionAnimationBase ?? Make___objRef_global__Microsoft_UI_Composition_ICompositionAnimationBase();



        public static new CompositionAnimationGroup FromAbi(IntPtr thisPtr)
        {
            if (thisPtr == IntPtr.Zero) return null;
            return MarshalInspectable<CompositionAnimationGroup>.FromAbi(thisPtr);
        }

        internal CompositionAnimationGroup(IObjectReference objRef)
            : base(global::WinRT.DerivedComposed.Instance)

        {
            _inner = objRef.As(global::ABI.Microsoft.UI.Composition.ICompositionAnimationGroupMethods.IID);

        }


        public static bool operator ==(CompositionAnimationGroup x, CompositionAnimationGroup y) => (x?.ThisPtr ?? IntPtr.Zero) == (y?.ThisPtr ?? IntPtr.Zero);
        public static bool operator !=(CompositionAnimationGroup x, CompositionAnimationGroup y) => !(x == y);
        public bool Equals(CompositionAnimationGroup other) => this == other;
        public override bool Equals(object obj) => obj is CompositionAnimationGroup that && this == that;
        public override int GetHashCode() => ThisPtr.GetHashCode();


        bool IWinRTObject.HasUnwrappableNativeObject => true;
        IObjectReference IWinRTObject.NativeObject => _inner;

        private struct InterfaceTag<I>{};


        public void Add(CompositionAnimation value) => global::ABI.Microsoft.UI.Composition.ICompositionAnimationGroupMethods.Add(_objRef_global__Microsoft_UI_Composition_ICompositionAnimationGroup, value);

        public void Remove(CompositionAnimation value) => global::ABI.Microsoft.UI.Composition.ICompositionAnimationGroupMethods.Remove(_objRef_global__Microsoft_UI_Composition_ICompositionAnimationGroup, value);

        public void RemoveAll() => global::ABI.Microsoft.UI.Composition.ICompositionAnimationGroupMethods.RemoveAll(_objRef_global__Microsoft_UI_Composition_ICompositionAnimationGroup);

        public IEnumerator<CompositionAnimation> GetEnumerator() => global::ABI.System.Collections.Generic.IEnumerableMethods<CompositionAnimation>.GetEnumerator(_objRef_global__System_Collections_Generic_IEnumerable_CompositionAnimation_);

        IEnumerator IEnumerable.GetEnumerator() => GetEnumerator();

        public int Count => global::ABI.Microsoft.UI.Composition.ICompositionAnimationGroupMethods.get_Count(_objRef_global__Microsoft_UI_Composition_ICompositionAnimationGroup);

        protected override bool IsOverridableInterface(Guid iid) => base.IsOverridableInterface(iid);

        global::System.Runtime.InteropServices.CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(ref Guid iid, out IntPtr ppv)
        {
            ppv = IntPtr.Zero;
            if (IsOverridableInterface(iid) || global::WinRT.Interop.IID.IID_IInspectable == iid)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
            }

            if (((IWinRTObject)this).NativeObject.TryAs(iid, out ppv) >= 0)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.Handled;
            }

            return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
        }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI")][global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.Foundation.WindowsAppSDKContract), 65536u)]
    public static class CompositionApiInformation
    {

        public static I As<I>() => ActivationFactory.Get("Microsoft.UI.Composition.CompositionApiInformation").AsInterface<I>();

        private static volatile IObjectReference ___objRef_global__Microsoft_UI_Composition_ICompositionApiInformationStatics;
        private static IObjectReference _objRef_global__Microsoft_UI_Composition_ICompositionApiInformationStatics
        {
            get
            { 
                var factory = ___objRef_global__Microsoft_UI_Composition_ICompositionApiInformationStatics;
                if (factory != null && factory.IsInCurrentContext)
                {
                    return factory;
                }
                else
                {
                    return ___objRef_global__Microsoft_UI_Composition_ICompositionApiInformationStatics = ActivationFactory.Get("Microsoft.UI.Composition.CompositionApiInformation", global::ABI.Microsoft.UI.Composition.ICompositionApiInformationStaticsMethods.IID);
                }
            }
        }

        public static ulong ApiVersion => global::ABI.Microsoft.UI.Composition.ICompositionApiInformationStaticsMethods.get_ApiVersion(_objRef_global__Microsoft_UI_Composition_ICompositionApiInformationStatics);
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI")]
    [global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Composition.CompositionBackdropBrush))]
    [global::ABI.Microsoft.UI.Composition.CompositionBackdropBrushRcwFactory]
    [global::WinRT.ProjectedRuntimeClass(typeof(ICompositionBackdropBrush))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.Foundation.WindowsAppSDKContract), 65536u)]
    public sealed class CompositionBackdropBrush : CompositionBrush, global::System.Runtime.InteropServices.ICustomQueryInterface, IWinRTObject, IEquatable<CompositionBackdropBrush>
    {
        private IntPtr ThisPtr => _inner == null ? (((IWinRTObject)this).NativeObject).ThisPtr : _inner.ThisPtr;

        private readonly IObjectReference _inner = null;



        private IObjectReference _objRef_global__Microsoft_UI_Composition_ICompositionBackdropBrush => _inner;


        public static new CompositionBackdropBrush FromAbi(IntPtr thisPtr)
        {
            if (thisPtr == IntPtr.Zero) return null;
            return MarshalInspectable<CompositionBackdropBrush>.FromAbi(thisPtr);
        }

        internal CompositionBackdropBrush(IObjectReference objRef)
            : base(global::WinRT.DerivedComposed.Instance)

        {
            _inner = objRef.As(global::ABI.Microsoft.UI.Composition.ICompositionBackdropBrushMethods.IID);

        }


        public static bool operator ==(CompositionBackdropBrush x, CompositionBackdropBrush y) => (x?.ThisPtr ?? IntPtr.Zero) == (y?.ThisPtr ?? IntPtr.Zero);
        public static bool operator !=(CompositionBackdropBrush x, CompositionBackdropBrush y) => !(x == y);
        public bool Equals(CompositionBackdropBrush other) => this == other;
        public override bool Equals(object obj) => obj is CompositionBackdropBrush that && this == that;
        public override int GetHashCode() => ThisPtr.GetHashCode();


        bool IWinRTObject.HasUnwrappableNativeObject => true;
        IObjectReference IWinRTObject.NativeObject => _inner;

        private struct InterfaceTag<I>{};


        protected override bool IsOverridableInterface(Guid iid) => base.IsOverridableInterface(iid);

        global::System.Runtime.InteropServices.CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(ref Guid iid, out IntPtr ppv)
        {
            ppv = IntPtr.Zero;
            if (IsOverridableInterface(iid) || global::WinRT.Interop.IID.IID_IInspectable == iid)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
            }

            if (((IWinRTObject)this).NativeObject.TryAs(iid, out ppv) >= 0)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.Handled;
            }

            return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
        }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI")][global::WinRT.WinRTExposedType(typeof(global::WinRT.EnumTypeDetails<CompositionBackfaceVisibility>))][global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.Foundation.WindowsAppSDKContract), 65536u)]
    public enum CompositionBackfaceVisibility : int
    {
        Inherit = unchecked((int)0),
        Visible = unchecked((int)0x1),
        Hidden = unchecked((int)0x2),
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI")]
    [global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Composition.CompositionBatchCompletedEventArgs))]
    [global::ABI.Microsoft.UI.Composition.CompositionBatchCompletedEventArgsRcwFactory]
    [global::WinRT.ProjectedRuntimeClass(typeof(ICompositionBatchCompletedEventArgs))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.Foundation.WindowsAppSDKContract), 65536u)]
    public sealed class CompositionBatchCompletedEventArgs : CompositionObject, global::System.Runtime.InteropServices.ICustomQueryInterface, IWinRTObject, IEquatable<CompositionBatchCompletedEventArgs>
    {
        private IntPtr ThisPtr => _inner == null ? (((IWinRTObject)this).NativeObject).ThisPtr : _inner.ThisPtr;

        private readonly IObjectReference _inner = null;



        private IObjectReference _objRef_global__Microsoft_UI_Composition_ICompositionBatchCompletedEventArgs => _inner;


        public static new CompositionBatchCompletedEventArgs FromAbi(IntPtr thisPtr)
        {
            if (thisPtr == IntPtr.Zero) return null;
            return MarshalInspectable<CompositionBatchCompletedEventArgs>.FromAbi(thisPtr);
        }

        internal CompositionBatchCompletedEventArgs(IObjectReference objRef)
            : base(global::WinRT.DerivedComposed.Instance)

        {
            _inner = objRef.As(global::ABI.Microsoft.UI.Composition.ICompositionBatchCompletedEventArgsMethods.IID);

        }


        public static bool operator ==(CompositionBatchCompletedEventArgs x, CompositionBatchCompletedEventArgs y) => (x?.ThisPtr ?? IntPtr.Zero) == (y?.ThisPtr ?? IntPtr.Zero);
        public static bool operator !=(CompositionBatchCompletedEventArgs x, CompositionBatchCompletedEventArgs y) => !(x == y);
        public bool Equals(CompositionBatchCompletedEventArgs other) => this == other;
        public override bool Equals(object obj) => obj is CompositionBatchCompletedEventArgs that && this == that;
        public override int GetHashCode() => ThisPtr.GetHashCode();


        bool IWinRTObject.HasUnwrappableNativeObject => true;
        IObjectReference IWinRTObject.NativeObject => _inner;

        private struct InterfaceTag<I>{};


        protected override bool IsOverridableInterface(Guid iid) => base.IsOverridableInterface(iid);

        global::System.Runtime.InteropServices.CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(ref Guid iid, out IntPtr ppv)
        {
            ppv = IntPtr.Zero;
            if (IsOverridableInterface(iid) || global::WinRT.Interop.IID.IID_IInspectable == iid)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
            }

            if (((IWinRTObject)this).NativeObject.TryAs(iid, out ppv) >= 0)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.Handled;
            }

            return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
        }
    }
    [FlagsAttribute]
    [global::WinRT.WindowsRuntimeType("Microsoft.UI")][global::WinRT.WinRTExposedType(typeof(global::WinRT.EnumTypeDetails<CompositionBatchTypes>))][global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.Foundation.WindowsAppSDKContract), 65536u)]
    public enum CompositionBatchTypes : uint
    {
        None = unchecked((uint)0),
        Animation = unchecked((uint)0x1),
        Effect = unchecked((uint)0x2),
        InfiniteAnimation = unchecked((uint)0x4),
        AllAnimations = unchecked((uint)0x5),
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI")][global::WinRT.WinRTExposedType(typeof(global::WinRT.EnumTypeDetails<CompositionBitmapInterpolationMode>))][global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.Foundation.WindowsAppSDKContract), 65536u)]
    public enum CompositionBitmapInterpolationMode : int
    {
        NearestNeighbor = unchecked((int)0),
        Linear = unchecked((int)0x1),
        MagLinearMinLinearMipLinear = unchecked((int)0x2),
        MagLinearMinLinearMipNearest = unchecked((int)0x3),
        MagLinearMinNearestMipLinear = unchecked((int)0x4),
        MagLinearMinNearestMipNearest = unchecked((int)0x5),
        MagNearestMinLinearMipLinear = unchecked((int)0x6),
        MagNearestMinLinearMipNearest = unchecked((int)0x7),
        MagNearestMinNearestMipLinear = unchecked((int)0x8),
        MagNearestMinNearestMipNearest = unchecked((int)0x9),
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI")][global::WinRT.WinRTExposedType(typeof(global::WinRT.EnumTypeDetails<CompositionBorderMode>))][global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.Foundation.WindowsAppSDKContract), 65536u)]
    public enum CompositionBorderMode : int
    {
        Inherit = unchecked((int)0),
        Soft = unchecked((int)0x1),
        Hard = unchecked((int)0x2),
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI")]
    [global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Composition.CompositionBrush))]
    [global::ABI.Microsoft.UI.Composition.CompositionBrushRcwFactory]
    [global::WinRT.ProjectedRuntimeClass(typeof(ICompositionBrush))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.Foundation.WindowsAppSDKContract), 65536u)]
    public class CompositionBrush : CompositionObject, global::System.Runtime.InteropServices.ICustomQueryInterface, IWinRTObject, IEquatable<CompositionBrush>
    {
        private IntPtr ThisPtr => _inner == null ? (((IWinRTObject)this).NativeObject).ThisPtr : _inner.ThisPtr;

        private readonly IObjectReference _inner = null;




        private volatile IObjectReference ___objRef_global__Microsoft_UI_Composition_ICompositionBrush;
        private IObjectReference Make___objRef_global__Microsoft_UI_Composition_ICompositionBrush()
        {
            global::System.Threading.Interlocked.CompareExchange(ref ___objRef_global__Microsoft_UI_Composition_ICompositionBrush, ((IWinRTObject)this).NativeObject.As<IUnknownVftbl>(global::ABI.Microsoft.UI.Composition.ICompositionBrushMethods.IID), null);
            return ___objRef_global__Microsoft_UI_Composition_ICompositionBrush;
        }
        private IObjectReference _objRef_global__Microsoft_UI_Composition_ICompositionBrush => ___objRef_global__Microsoft_UI_Composition_ICompositionBrush ?? Make___objRef_global__Microsoft_UI_Composition_ICompositionBrush();



        private static class _ICompositionBrushFactoryMethods
        {}

        private static volatile IObjectReference ___objRef_global__Microsoft_UI_Composition_ICompositionBrushFactory;
        private static IObjectReference _objRef_global__Microsoft_UI_Composition_ICompositionBrushFactory
        {
            get
            { 
                var factory = ___objRef_global__Microsoft_UI_Composition_ICompositionBrushFactory;
                if (factory != null && factory.IsInCurrentContext)
                {
                    return factory;
                }
                else
                {
                    return ___objRef_global__Microsoft_UI_Composition_ICompositionBrushFactory = ActivationFactory.Get("Microsoft.UI.Composition.CompositionBrush", global::ABI.Microsoft.UI.Composition.ICompositionBrushFactoryMethods.IID);
                }
            }
        }

        public static new CompositionBrush FromAbi(IntPtr thisPtr)
        {
            if (thisPtr == IntPtr.Zero) return null;
            return MarshalInspectable<CompositionBrush>.FromAbi(thisPtr);
        }

        protected internal CompositionBrush(IObjectReference objRef)
            : base(global::WinRT.DerivedComposed.Instance)

        {
            _inner = objRef.As(global::ABI.Microsoft.UI.Composition.ICompositionBrushMethods.IID);

        }


        public static bool operator ==(CompositionBrush x, CompositionBrush y) => (x?.ThisPtr ?? IntPtr.Zero) == (y?.ThisPtr ?? IntPtr.Zero);
        public static bool operator !=(CompositionBrush x, CompositionBrush y) => !(x == y);
        public bool Equals(CompositionBrush other) => this == other;
        public override bool Equals(object obj) => obj is CompositionBrush that && this == that;
        public override int GetHashCode() => ThisPtr.GetHashCode();


        protected CompositionBrush(global::WinRT.DerivedComposed _):base(_)
        {

        }
        bool IWinRTObject.HasUnwrappableNativeObject => this.GetType() == typeof(CompositionBrush);
        IObjectReference IWinRTObject.NativeObject => _inner;

        private struct InterfaceTag<I>{};


        protected override bool IsOverridableInterface(Guid iid) => base.IsOverridableInterface(iid);

        global::System.Runtime.InteropServices.CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(ref Guid iid, out IntPtr ppv)
        {
            ppv = IntPtr.Zero;
            if (IsOverridableInterface(iid) || global::WinRT.Interop.IID.IID_IInspectable == iid)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
            }

            if (((IWinRTObject)this).NativeObject.TryAs(iid, out ppv) >= 0)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.Handled;
            }

            return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
        }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI")]
    [global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Composition.CompositionCapabilities))]
    [global::ABI.Microsoft.UI.Composition.CompositionCapabilitiesRcwFactory]
    [global::WinRT.ProjectedRuntimeClass(typeof(ICompositionCapabilities))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.Foundation.WindowsAppSDKContract), 65536u)]
    public sealed class CompositionCapabilities : global::System.Runtime.InteropServices.ICustomQueryInterface, IWinRTObject, IEquatable<CompositionCapabilities>
    {
        private IntPtr ThisPtr => _inner == null ? (((IWinRTObject)this).NativeObject).ThisPtr : _inner.ThisPtr;

        private readonly IObjectReference _inner = null;



        private IObjectReference _objRef_global__Microsoft_UI_Composition_ICompositionCapabilities => _inner;


        private static volatile IObjectReference ___objRef_global__Microsoft_UI_Composition_CompositionCapabilities;
        private static IObjectReference _objRef_global__Microsoft_UI_Composition_CompositionCapabilities
        {
            get
            { 
                var factory = ___objRef_global__Microsoft_UI_Composition_CompositionCapabilities;
                if (factory != null && factory.IsInCurrentContext)
                {
                    return factory;
                }
                else
                {
                    return ___objRef_global__Microsoft_UI_Composition_CompositionCapabilities = ActivationFactory.Get("Microsoft.UI.Composition.CompositionCapabilities");
                }
            }
        }

        public CompositionCapabilities() 
        {
            _inner = global::ABI.WinRT.Interop.IActivationFactoryMethods.ActivateInstanceUnsafe(_objRef_global__Microsoft_UI_Composition_CompositionCapabilities, global::ABI.Microsoft.UI.Composition.ICompositionCapabilitiesMethods.IID);
            ComWrappersSupport.RegisterObjectForInterface(this, ThisPtr);
            ComWrappersHelper.Init(_inner, false);

        }

        public static CompositionCapabilities FromAbi(IntPtr thisPtr)
        {
            if (thisPtr == IntPtr.Zero) return null;
            return MarshalInspectable<CompositionCapabilities>.FromAbi(thisPtr);
        }

        internal CompositionCapabilities(IObjectReference objRef)
        {
            _inner = objRef.As(global::ABI.Microsoft.UI.Composition.ICompositionCapabilitiesMethods.IID);

        }


        public static bool operator ==(CompositionCapabilities x, CompositionCapabilities y) => (x?.ThisPtr ?? IntPtr.Zero) == (y?.ThisPtr ?? IntPtr.Zero);
        public static bool operator !=(CompositionCapabilities x, CompositionCapabilities y) => !(x == y);
        public bool Equals(CompositionCapabilities other) => this == other;
        public override bool Equals(object obj) => obj is CompositionCapabilities that && this == that;
        public override int GetHashCode() => ThisPtr.GetHashCode();


        bool IWinRTObject.HasUnwrappableNativeObject => true;
        IObjectReference IWinRTObject.NativeObject => _inner;
        private volatile global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> _queryInterfaceCache;
        private global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> MakeQueryInterfaceCache()
        {
            global::System.Threading.Interlocked.CompareExchange(ref _queryInterfaceCache, new global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference>(), null); 
            return _queryInterfaceCache;
        }
        global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> IWinRTObject.QueryInterfaceCache => _queryInterfaceCache ?? MakeQueryInterfaceCache();
        private volatile global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> _additionalTypeData;
        private global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> MakeAdditionalTypeData()
        {
            global::System.Threading.Interlocked.CompareExchange(ref _additionalTypeData, new global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object>(), null); 
            return _additionalTypeData;
        }
        global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> IWinRTObject.AdditionalTypeData => _additionalTypeData ?? MakeAdditionalTypeData();

        private struct InterfaceTag<I>{};


        public bool AreEffectsSupported() => global::ABI.Microsoft.UI.Composition.ICompositionCapabilitiesMethods.AreEffectsSupported(_objRef_global__Microsoft_UI_Composition_ICompositionCapabilities);

        public bool AreEffectsFast() => global::ABI.Microsoft.UI.Composition.ICompositionCapabilitiesMethods.AreEffectsFast(_objRef_global__Microsoft_UI_Composition_ICompositionCapabilities);

        public event global::Windows.Foundation.TypedEventHandler<CompositionCapabilities, object> Changed
        {
            add => global::ABI.Microsoft.UI.Composition.ICompositionCapabilitiesMethods.Get_Changed2(_objRef_global__Microsoft_UI_Composition_ICompositionCapabilities, (IWinRTObject)this).Subscribe(value);
            remove => global::ABI.Microsoft.UI.Composition.ICompositionCapabilitiesMethods.Get_Changed2(_objRef_global__Microsoft_UI_Composition_ICompositionCapabilities, (IWinRTObject)this).Unsubscribe(value);
        }

        private bool IsOverridableInterface(Guid iid) => false;

        global::System.Runtime.InteropServices.CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(ref Guid iid, out IntPtr ppv)
        {
            ppv = IntPtr.Zero;
            if (IsOverridableInterface(iid) || global::WinRT.Interop.IID.IID_IInspectable == iid)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
            }

            if (((IWinRTObject)this).NativeObject.TryAs(iid, out ppv) >= 0)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.Handled;
            }

            return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
        }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI")]
    [global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Composition.CompositionClip))]
    [global::ABI.Microsoft.UI.Composition.CompositionClipRcwFactory]
    [global::WinRT.ProjectedRuntimeClass(typeof(ICompositionClip))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.Foundation.WindowsAppSDKContract), 65536u)]
    public class CompositionClip : CompositionObject, global::System.Runtime.InteropServices.ICustomQueryInterface, IWinRTObject, IEquatable<CompositionClip>
    {
        private IntPtr ThisPtr => _inner == null ? (((IWinRTObject)this).NativeObject).ThisPtr : _inner.ThisPtr;

        private readonly IObjectReference _inner = null;




        private volatile IObjectReference ___objRef_global__Microsoft_UI_Composition_ICompositionClip;
        private IObjectReference Make___objRef_global__Microsoft_UI_Composition_ICompositionClip()
        {
            global::System.Threading.Interlocked.CompareExchange(ref ___objRef_global__Microsoft_UI_Composition_ICompositionClip, ((IWinRTObject)this).NativeObject.As<IUnknownVftbl>(global::ABI.Microsoft.UI.Composition.ICompositionClipMethods.IID), null);
            return ___objRef_global__Microsoft_UI_Composition_ICompositionClip;
        }
        private IObjectReference _objRef_global__Microsoft_UI_Composition_ICompositionClip => ___objRef_global__Microsoft_UI_Composition_ICompositionClip ?? Make___objRef_global__Microsoft_UI_Composition_ICompositionClip();

        private volatile IObjectReference ___objRef_global__Microsoft_UI_Composition_ICompositionClip2;
        private IObjectReference Make___objRef_global__Microsoft_UI_Composition_ICompositionClip2()
        {
            global::System.Threading.Interlocked.CompareExchange(ref ___objRef_global__Microsoft_UI_Composition_ICompositionClip2, ((IWinRTObject)this).NativeObject.As<IUnknownVftbl>(global::ABI.Microsoft.UI.Composition.ICompositionClip2Methods.IID), null);
            return ___objRef_global__Microsoft_UI_Composition_ICompositionClip2;
        }
        private IObjectReference _objRef_global__Microsoft_UI_Composition_ICompositionClip2 => ___objRef_global__Microsoft_UI_Composition_ICompositionClip2 ?? Make___objRef_global__Microsoft_UI_Composition_ICompositionClip2();



        private static class _ICompositionClipFactoryMethods
        {}

        private static volatile IObjectReference ___objRef_global__Microsoft_UI_Composition_ICompositionClipFactory;
        private static IObjectReference _objRef_global__Microsoft_UI_Composition_ICompositionClipFactory
        {
            get
            { 
                var factory = ___objRef_global__Microsoft_UI_Composition_ICompositionClipFactory;
                if (factory != null && factory.IsInCurrentContext)
                {
                    return factory;
                }
                else
                {
                    return ___objRef_global__Microsoft_UI_Composition_ICompositionClipFactory = ActivationFactory.Get("Microsoft.UI.Composition.CompositionClip", global::ABI.Microsoft.UI.Composition.ICompositionClipFactoryMethods.IID);
                }
            }
        }

        public static new CompositionClip FromAbi(IntPtr thisPtr)
        {
            if (thisPtr == IntPtr.Zero) return null;
            return MarshalInspectable<CompositionClip>.FromAbi(thisPtr);
        }

        protected internal CompositionClip(IObjectReference objRef)
            : base(global::WinRT.DerivedComposed.Instance)

        {
            _inner = objRef.As(global::ABI.Microsoft.UI.Composition.ICompositionClipMethods.IID);

        }


        public static bool operator ==(CompositionClip x, CompositionClip y) => (x?.ThisPtr ?? IntPtr.Zero) == (y?.ThisPtr ?? IntPtr.Zero);
        public static bool operator !=(CompositionClip x, CompositionClip y) => !(x == y);
        public bool Equals(CompositionClip other) => this == other;
        public override bool Equals(object obj) => obj is CompositionClip that && this == that;
        public override int GetHashCode() => ThisPtr.GetHashCode();


        protected CompositionClip(global::WinRT.DerivedComposed _):base(_)
        {

        }
        bool IWinRTObject.HasUnwrappableNativeObject => this.GetType() == typeof(CompositionClip);
        IObjectReference IWinRTObject.NativeObject => _inner;

        private struct InterfaceTag<I>{};


        public global::System.Numerics.Vector2 AnchorPoint
        {
            get => global::ABI.Microsoft.UI.Composition.ICompositionClip2Methods.get_AnchorPoint(_objRef_global__Microsoft_UI_Composition_ICompositionClip2);
            set => global::ABI.Microsoft.UI.Composition.ICompositionClip2Methods.set_AnchorPoint(_objRef_global__Microsoft_UI_Composition_ICompositionClip2, value);
        }

        public global::System.Numerics.Vector2 CenterPoint
        {
            get => global::ABI.Microsoft.UI.Composition.ICompositionClip2Methods.get_CenterPoint(_objRef_global__Microsoft_UI_Composition_ICompositionClip2);
            set => global::ABI.Microsoft.UI.Composition.ICompositionClip2Methods.set_CenterPoint(_objRef_global__Microsoft_UI_Composition_ICompositionClip2, value);
        }

        public global::System.Numerics.Vector2 Offset
        {
            get => global::ABI.Microsoft.UI.Composition.ICompositionClip2Methods.get_Offset(_objRef_global__Microsoft_UI_Composition_ICompositionClip2);
            set => global::ABI.Microsoft.UI.Composition.ICompositionClip2Methods.set_Offset(_objRef_global__Microsoft_UI_Composition_ICompositionClip2, value);
        }

        public float RotationAngle
        {
            get => global::ABI.Microsoft.UI.Composition.ICompositionClip2Methods.get_RotationAngle(_objRef_global__Microsoft_UI_Composition_ICompositionClip2);
            set => global::ABI.Microsoft.UI.Composition.ICompositionClip2Methods.set_RotationAngle(_objRef_global__Microsoft_UI_Composition_ICompositionClip2, value);
        }

        public float RotationAngleInDegrees
        {
            get => global::ABI.Microsoft.UI.Composition.ICompositionClip2Methods.get_RotationAngleInDegrees(_objRef_global__Microsoft_UI_Composition_ICompositionClip2);
            set => global::ABI.Microsoft.UI.Composition.ICompositionClip2Methods.set_RotationAngleInDegrees(_objRef_global__Microsoft_UI_Composition_ICompositionClip2, value);
        }

        public global::System.Numerics.Vector2 Scale
        {
            get => global::ABI.Microsoft.UI.Composition.ICompositionClip2Methods.get_Scale(_objRef_global__Microsoft_UI_Composition_ICompositionClip2);
            set => global::ABI.Microsoft.UI.Composition.ICompositionClip2Methods.set_Scale(_objRef_global__Microsoft_UI_Composition_ICompositionClip2, value);
        }

        public global::System.Numerics.Matrix3x2 TransformMatrix
        {
            get => global::ABI.Microsoft.UI.Composition.ICompositionClip2Methods.get_TransformMatrix(_objRef_global__Microsoft_UI_Composition_ICompositionClip2);
            set => global::ABI.Microsoft.UI.Composition.ICompositionClip2Methods.set_TransformMatrix(_objRef_global__Microsoft_UI_Composition_ICompositionClip2, value);
        }

        protected override bool IsOverridableInterface(Guid iid) => base.IsOverridableInterface(iid);

        global::System.Runtime.InteropServices.CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(ref Guid iid, out IntPtr ppv)
        {
            ppv = IntPtr.Zero;
            if (IsOverridableInterface(iid) || global::WinRT.Interop.IID.IID_IInspectable == iid)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
            }

            if (((IWinRTObject)this).NativeObject.TryAs(iid, out ppv) >= 0)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.Handled;
            }

            return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
        }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI")]
    [global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Composition.CompositionColorBrush))]
    [global::ABI.Microsoft.UI.Composition.CompositionColorBrushRcwFactory]
    [global::WinRT.ProjectedRuntimeClass(typeof(ICompositionColorBrush))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.Foundation.WindowsAppSDKContract), 65536u)]
    public sealed class CompositionColorBrush : CompositionBrush, global::System.Runtime.InteropServices.ICustomQueryInterface, IWinRTObject, IEquatable<CompositionColorBrush>
    {
        private IntPtr ThisPtr => _inner == null ? (((IWinRTObject)this).NativeObject).ThisPtr : _inner.ThisPtr;

        private readonly IObjectReference _inner = null;



        private IObjectReference _objRef_global__Microsoft_UI_Composition_ICompositionColorBrush => _inner;


        public static new CompositionColorBrush FromAbi(IntPtr thisPtr)
        {
            if (thisPtr == IntPtr.Zero) return null;
            return MarshalInspectable<CompositionColorBrush>.FromAbi(thisPtr);
        }

        internal CompositionColorBrush(IObjectReference objRef)
            : base(global::WinRT.DerivedComposed.Instance)

        {
            _inner = objRef.As(global::ABI.Microsoft.UI.Composition.ICompositionColorBrushMethods.IID);

        }


        public static bool operator ==(CompositionColorBrush x, CompositionColorBrush y) => (x?.ThisPtr ?? IntPtr.Zero) == (y?.ThisPtr ?? IntPtr.Zero);
        public static bool operator !=(CompositionColorBrush x, CompositionColorBrush y) => !(x == y);
        public bool Equals(CompositionColorBrush other) => this == other;
        public override bool Equals(object obj) => obj is CompositionColorBrush that && this == that;
        public override int GetHashCode() => ThisPtr.GetHashCode();


        bool IWinRTObject.HasUnwrappableNativeObject => true;
        IObjectReference IWinRTObject.NativeObject => _inner;

        private struct InterfaceTag<I>{};


        public global::Windows.UI.Color Color
        {
            get => global::ABI.Microsoft.UI.Composition.ICompositionColorBrushMethods.get_Color(_objRef_global__Microsoft_UI_Composition_ICompositionColorBrush);
            set => global::ABI.Microsoft.UI.Composition.ICompositionColorBrushMethods.set_Color(_objRef_global__Microsoft_UI_Composition_ICompositionColorBrush, value);
        }

        protected override bool IsOverridableInterface(Guid iid) => base.IsOverridableInterface(iid);

        global::System.Runtime.InteropServices.CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(ref Guid iid, out IntPtr ppv)
        {
            ppv = IntPtr.Zero;
            if (IsOverridableInterface(iid) || global::WinRT.Interop.IID.IID_IInspectable == iid)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
            }

            if (((IWinRTObject)this).NativeObject.TryAs(iid, out ppv) >= 0)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.Handled;
            }

            return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
        }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI")]
    [global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Composition.CompositionColorGradientStop))]
    [global::ABI.Microsoft.UI.Composition.CompositionColorGradientStopRcwFactory]
    [global::WinRT.ProjectedRuntimeClass(typeof(ICompositionColorGradientStop))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.Foundation.WindowsAppSDKContract), 65536u)]
    public sealed class CompositionColorGradientStop : CompositionObject, global::System.Runtime.InteropServices.ICustomQueryInterface, IWinRTObject, IEquatable<CompositionColorGradientStop>
    {
        private IntPtr ThisPtr => _inner == null ? (((IWinRTObject)this).NativeObject).ThisPtr : _inner.ThisPtr;

        private readonly IObjectReference _inner = null;



        private IObjectReference _objRef_global__Microsoft_UI_Composition_ICompositionColorGradientStop => _inner;


        public static new CompositionColorGradientStop FromAbi(IntPtr thisPtr)
        {
            if (thisPtr == IntPtr.Zero) return null;
            return MarshalInspectable<CompositionColorGradientStop>.FromAbi(thisPtr);
        }

        internal CompositionColorGradientStop(IObjectReference objRef)
            : base(global::WinRT.DerivedComposed.Instance)

        {
            _inner = objRef.As(global::ABI.Microsoft.UI.Composition.ICompositionColorGradientStopMethods.IID);

        }


        public static bool operator ==(CompositionColorGradientStop x, CompositionColorGradientStop y) => (x?.ThisPtr ?? IntPtr.Zero) == (y?.ThisPtr ?? IntPtr.Zero);
        public static bool operator !=(CompositionColorGradientStop x, CompositionColorGradientStop y) => !(x == y);
        public bool Equals(CompositionColorGradientStop other) => this == other;
        public override bool Equals(object obj) => obj is CompositionColorGradientStop that && this == that;
        public override int GetHashCode() => ThisPtr.GetHashCode();


        bool IWinRTObject.HasUnwrappableNativeObject => true;
        IObjectReference IWinRTObject.NativeObject => _inner;

        private struct InterfaceTag<I>{};


        public global::Windows.UI.Color Color
        {
            get => global::ABI.Microsoft.UI.Composition.ICompositionColorGradientStopMethods.get_Color(_objRef_global__Microsoft_UI_Composition_ICompositionColorGradientStop);
            set => global::ABI.Microsoft.UI.Composition.ICompositionColorGradientStopMethods.set_Color(_objRef_global__Microsoft_UI_Composition_ICompositionColorGradientStop, value);
        }

        public float Offset
        {
            get => global::ABI.Microsoft.UI.Composition.ICompositionColorGradientStopMethods.get_Offset(_objRef_global__Microsoft_UI_Composition_ICompositionColorGradientStop);
            set => global::ABI.Microsoft.UI.Composition.ICompositionColorGradientStopMethods.set_Offset(_objRef_global__Microsoft_UI_Composition_ICompositionColorGradientStop, value);
        }

        protected override bool IsOverridableInterface(Guid iid) => base.IsOverridableInterface(iid);

        global::System.Runtime.InteropServices.CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(ref Guid iid, out IntPtr ppv)
        {
            ppv = IntPtr.Zero;
            if (IsOverridableInterface(iid) || global::WinRT.Interop.IID.IID_IInspectable == iid)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
            }

            if (((IWinRTObject)this).NativeObject.TryAs(iid, out ppv) >= 0)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.Handled;
            }

            return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
        }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI")]
    [global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Composition.CompositionColorGradientStopCollection))]
    [global::ABI.Microsoft.UI.Composition.CompositionColorGradientStopCollectionRcwFactory]
    [global::WinRT.ProjectedRuntimeClass(typeof(ICompositionColorGradientStopCollection))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.Foundation.WindowsAppSDKContract), 65536u)]
    public sealed class CompositionColorGradientStopCollection : global::System.Collections.Generic.IEnumerable<CompositionColorGradientStop>, global::System.Collections.Generic.IList<CompositionColorGradientStop>, global::System.Runtime.InteropServices.ICustomQueryInterface, IWinRTObject, IEquatable<CompositionColorGradientStopCollection>
    {
        private IntPtr ThisPtr => _inner == null ? (((IWinRTObject)this).NativeObject).ThisPtr : _inner.ThisPtr;

        private readonly IObjectReference _inner = null;



        private IObjectReference _objRef_global__Microsoft_UI_Composition_ICompositionColorGradientStopCollection => _inner;
        private volatile IObjectReference ___objRef_global__System_Collections_Generic_IEnumerable_CompositionColorGradientStop_;
        private IObjectReference Make___objRef_global__System_Collections_Generic_IEnumerable_CompositionColorGradientStop_()
        {
            _ = global::WinRT.GenericTypeInstantiations.Windows_Foundation_Collections_IIterable_1_Microsoft_UI_Composition_CompositionColorGradientStop.EnsureInitialized();
            global::System.Threading.Interlocked.CompareExchange(ref ___objRef_global__System_Collections_Generic_IEnumerable_CompositionColorGradientStop_, ((IWinRTObject)this).NativeObject.As<IUnknownVftbl>(global::ABI.System.Collections.Generic.IEnumerableMethods<CompositionColorGradientStop>.IID), null);
            return ___objRef_global__System_Collections_Generic_IEnumerable_CompositionColorGradientStop_;
        }
        private IObjectReference _objRef_global__System_Collections_Generic_IEnumerable_CompositionColorGradientStop_ => ___objRef_global__System_Collections_Generic_IEnumerable_CompositionColorGradientStop_ ?? Make___objRef_global__System_Collections_Generic_IEnumerable_CompositionColorGradientStop_();

        private volatile IObjectReference ___objRef_global__System_Collections_Generic_IList_CompositionColorGradientStop_;
        private IObjectReference Make___objRef_global__System_Collections_Generic_IList_CompositionColorGradientStop_()
        {
            _ = global::WinRT.GenericTypeInstantiations.Windows_Foundation_Collections_IVector_1_Microsoft_UI_Composition_CompositionColorGradientStop.EnsureInitialized();
            global::System.Threading.Interlocked.CompareExchange(ref ___objRef_global__System_Collections_Generic_IList_CompositionColorGradientStop_, ((IWinRTObject)this).NativeObject.As<IUnknownVftbl>(global::ABI.System.Collections.Generic.IListMethods<CompositionColorGradientStop>.IID), null);
            return ___objRef_global__System_Collections_Generic_IList_CompositionColorGradientStop_;
        }
        private IObjectReference _objRef_global__System_Collections_Generic_IList_CompositionColorGradientStop_ => ___objRef_global__System_Collections_Generic_IList_CompositionColorGradientStop_ ?? Make___objRef_global__System_Collections_Generic_IList_CompositionColorGradientStop_();



        public static CompositionColorGradientStopCollection FromAbi(IntPtr thisPtr)
        {
            if (thisPtr == IntPtr.Zero) return null;
            return MarshalInspectable<CompositionColorGradientStopCollection>.FromAbi(thisPtr);
        }

        internal CompositionColorGradientStopCollection(IObjectReference objRef)
        {
            _inner = objRef.As(global::ABI.Microsoft.UI.Composition.ICompositionColorGradientStopCollectionMethods.IID);

        }


        public static bool operator ==(CompositionColorGradientStopCollection x, CompositionColorGradientStopCollection y) => (x?.ThisPtr ?? IntPtr.Zero) == (y?.ThisPtr ?? IntPtr.Zero);
        public static bool operator !=(CompositionColorGradientStopCollection x, CompositionColorGradientStopCollection y) => !(x == y);
        public bool Equals(CompositionColorGradientStopCollection other) => this == other;
        public override bool Equals(object obj) => obj is CompositionColorGradientStopCollection that && this == that;
        public override int GetHashCode() => ThisPtr.GetHashCode();


        bool IWinRTObject.HasUnwrappableNativeObject => true;
        IObjectReference IWinRTObject.NativeObject => _inner;
        private volatile global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> _queryInterfaceCache;
        private global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> MakeQueryInterfaceCache()
        {
            global::System.Threading.Interlocked.CompareExchange(ref _queryInterfaceCache, new global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference>(), null); 
            return _queryInterfaceCache;
        }
        global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> IWinRTObject.QueryInterfaceCache => _queryInterfaceCache ?? MakeQueryInterfaceCache();
        private volatile global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> _additionalTypeData;
        private global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> MakeAdditionalTypeData()
        {
            global::System.Threading.Interlocked.CompareExchange(ref _additionalTypeData, new global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object>(), null); 
            return _additionalTypeData;
        }
        global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> IWinRTObject.AdditionalTypeData => _additionalTypeData ?? MakeAdditionalTypeData();

        private struct InterfaceTag<I>{};


        public IEnumerator<CompositionColorGradientStop> GetEnumerator() => global::ABI.System.Collections.Generic.IEnumerableMethods<CompositionColorGradientStop>.GetEnumerator(_objRef_global__System_Collections_Generic_IEnumerable_CompositionColorGradientStop_);

        IEnumerator IEnumerable.GetEnumerator() => GetEnumerator();

        public int Count => global::ABI.System.Collections.Generic.IListMethods<CompositionColorGradientStop>.get_Count(_objRef_global__System_Collections_Generic_IList_CompositionColorGradientStop_);
        public bool IsReadOnly => global::ABI.System.Collections.Generic.IListMethods<CompositionColorGradientStop>.get_IsReadOnly(_objRef_global__System_Collections_Generic_IList_CompositionColorGradientStop_);
        [global::System.Runtime.CompilerServices.IndexerName("ListItem")]
        public CompositionColorGradientStop this[int index] 
        {
            get => global::ABI.System.Collections.Generic.IListMethods<CompositionColorGradientStop>.Indexer_Get(_objRef_global__System_Collections_Generic_IList_CompositionColorGradientStop_, index);
            set => global::ABI.System.Collections.Generic.IListMethods<CompositionColorGradientStop>.Indexer_Set(_objRef_global__System_Collections_Generic_IList_CompositionColorGradientStop_, index, value);
        }
        public int IndexOf(CompositionColorGradientStop item) => global::ABI.System.Collections.Generic.IListMethods<CompositionColorGradientStop>.IndexOf(_objRef_global__System_Collections_Generic_IList_CompositionColorGradientStop_, item);
        public void Insert(int index, CompositionColorGradientStop item) => global::ABI.System.Collections.Generic.IListMethods<CompositionColorGradientStop>.Insert(_objRef_global__System_Collections_Generic_IList_CompositionColorGradientStop_, index, item);
        public void RemoveAt(int index) => global::ABI.System.Collections.Generic.IListMethods<CompositionColorGradientStop>.RemoveAt(_objRef_global__System_Collections_Generic_IList_CompositionColorGradientStop_, index);
        public void Add(CompositionColorGradientStop item) => global::ABI.System.Collections.Generic.IListMethods<CompositionColorGradientStop>.Add(_objRef_global__System_Collections_Generic_IList_CompositionColorGradientStop_, item);
        public void Clear() => global::ABI.System.Collections.Generic.IListMethods<CompositionColorGradientStop>.Clear(_objRef_global__System_Collections_Generic_IList_CompositionColorGradientStop_);
        public bool Contains(CompositionColorGradientStop item) => global::ABI.System.Collections.Generic.IListMethods<CompositionColorGradientStop>.Contains(_objRef_global__System_Collections_Generic_IList_CompositionColorGradientStop_, item);
        public void CopyTo(CompositionColorGradientStop[] array, int arrayIndex) => global::ABI.System.Collections.Generic.IListMethods<CompositionColorGradientStop>.CopyTo(_objRef_global__System_Collections_Generic_IList_CompositionColorGradientStop_, array, arrayIndex);
        public bool Remove(CompositionColorGradientStop item) => global::ABI.System.Collections.Generic.IListMethods<CompositionColorGradientStop>.Remove(_objRef_global__System_Collections_Generic_IList_CompositionColorGradientStop_, item);

        private bool IsOverridableInterface(Guid iid) => false;

        global::System.Runtime.InteropServices.CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(ref Guid iid, out IntPtr ppv)
        {
            ppv = IntPtr.Zero;
            if (IsOverridableInterface(iid) || global::WinRT.Interop.IID.IID_IInspectable == iid)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
            }

            if (((IWinRTObject)this).NativeObject.TryAs(iid, out ppv) >= 0)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.Handled;
            }

            return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
        }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI")][global::WinRT.WinRTExposedType(typeof(global::WinRT.EnumTypeDetails<CompositionColorSpace>))][global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.Foundation.WindowsAppSDKContract), 65536u)]
    public enum CompositionColorSpace : int
    {
        Auto = unchecked((int)0),
        Hsl = unchecked((int)0x1),
        Rgb = unchecked((int)0x2),
        HslLinear = unchecked((int)0x3),
        RgbLinear = unchecked((int)0x4),
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI")]
    [global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Composition.CompositionCommitBatch))]
    [global::ABI.Microsoft.UI.Composition.CompositionCommitBatchRcwFactory]
    [global::WinRT.ProjectedRuntimeClass(typeof(ICompositionCommitBatch))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.Foundation.WindowsAppSDKContract), 65536u)]
    public sealed class CompositionCommitBatch : CompositionObject, global::System.Runtime.InteropServices.ICustomQueryInterface, IWinRTObject, IEquatable<CompositionCommitBatch>
    {
        private IntPtr ThisPtr => _inner == null ? (((IWinRTObject)this).NativeObject).ThisPtr : _inner.ThisPtr;

        private readonly IObjectReference _inner = null;



        private IObjectReference _objRef_global__Microsoft_UI_Composition_ICompositionCommitBatch => _inner;


        public static new CompositionCommitBatch FromAbi(IntPtr thisPtr)
        {
            if (thisPtr == IntPtr.Zero) return null;
            return MarshalInspectable<CompositionCommitBatch>.FromAbi(thisPtr);
        }

        internal CompositionCommitBatch(IObjectReference objRef)
            : base(global::WinRT.DerivedComposed.Instance)

        {
            _inner = objRef.As(global::ABI.Microsoft.UI.Composition.ICompositionCommitBatchMethods.IID);

        }


        public static bool operator ==(CompositionCommitBatch x, CompositionCommitBatch y) => (x?.ThisPtr ?? IntPtr.Zero) == (y?.ThisPtr ?? IntPtr.Zero);
        public static bool operator !=(CompositionCommitBatch x, CompositionCommitBatch y) => !(x == y);
        public bool Equals(CompositionCommitBatch other) => this == other;
        public override bool Equals(object obj) => obj is CompositionCommitBatch that && this == that;
        public override int GetHashCode() => ThisPtr.GetHashCode();


        bool IWinRTObject.HasUnwrappableNativeObject => true;
        IObjectReference IWinRTObject.NativeObject => _inner;

        private struct InterfaceTag<I>{};


        public event global::Windows.Foundation.TypedEventHandler<object, CompositionBatchCompletedEventArgs> Completed
        {
            add => global::ABI.Microsoft.UI.Composition.ICompositionCommitBatchMethods.Get_Completed2(_objRef_global__Microsoft_UI_Composition_ICompositionCommitBatch, (IWinRTObject)this).Subscribe(value);
            remove => global::ABI.Microsoft.UI.Composition.ICompositionCommitBatchMethods.Get_Completed2(_objRef_global__Microsoft_UI_Composition_ICompositionCommitBatch, (IWinRTObject)this).Unsubscribe(value);
        }

        public bool IsActive => global::ABI.Microsoft.UI.Composition.ICompositionCommitBatchMethods.get_IsActive(_objRef_global__Microsoft_UI_Composition_ICompositionCommitBatch);

        public bool IsEnded => global::ABI.Microsoft.UI.Composition.ICompositionCommitBatchMethods.get_IsEnded(_objRef_global__Microsoft_UI_Composition_ICompositionCommitBatch);

        protected override bool IsOverridableInterface(Guid iid) => base.IsOverridableInterface(iid);

        global::System.Runtime.InteropServices.CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(ref Guid iid, out IntPtr ppv)
        {
            ppv = IntPtr.Zero;
            if (IsOverridableInterface(iid) || global::WinRT.Interop.IID.IID_IInspectable == iid)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
            }

            if (((IWinRTObject)this).NativeObject.TryAs(iid, out ppv) >= 0)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.Handled;
            }

            return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
        }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI")][global::WinRT.WinRTExposedType(typeof(global::WinRT.EnumTypeDetails<CompositionCompositeMode>))][global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.Foundation.WindowsAppSDKContract), 65536u)]
    public enum CompositionCompositeMode : int
    {
        Inherit = unchecked((int)0),
        SourceOver = unchecked((int)0x1),
        DestinationInvert = unchecked((int)0x2),
        MinBlend = unchecked((int)0x3),
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI")]
    [global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Composition.CompositionContainerShape))]
    [global::ABI.Microsoft.UI.Composition.CompositionContainerShapeRcwFactory]
    [global::WinRT.ProjectedRuntimeClass(typeof(ICompositionContainerShape))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.Foundation.WindowsAppSDKContract), 65536u)]
    public sealed class CompositionContainerShape : CompositionShape, global::System.Runtime.InteropServices.ICustomQueryInterface, IWinRTObject, IEquatable<CompositionContainerShape>
    {
        private IntPtr ThisPtr => _inner == null ? (((IWinRTObject)this).NativeObject).ThisPtr : _inner.ThisPtr;

        private readonly IObjectReference _inner = null;



        private IObjectReference _objRef_global__Microsoft_UI_Composition_ICompositionContainerShape => _inner;


        public static new CompositionContainerShape FromAbi(IntPtr thisPtr)
        {
            if (thisPtr == IntPtr.Zero) return null;
            return MarshalInspectable<CompositionContainerShape>.FromAbi(thisPtr);
        }

        internal CompositionContainerShape(IObjectReference objRef)
            : base(global::WinRT.DerivedComposed.Instance)

        {
            _inner = objRef.As(global::ABI.Microsoft.UI.Composition.ICompositionContainerShapeMethods.IID);

        }


        public static bool operator ==(CompositionContainerShape x, CompositionContainerShape y) => (x?.ThisPtr ?? IntPtr.Zero) == (y?.ThisPtr ?? IntPtr.Zero);
        public static bool operator !=(CompositionContainerShape x, CompositionContainerShape y) => !(x == y);
        public bool Equals(CompositionContainerShape other) => this == other;
        public override bool Equals(object obj) => obj is CompositionContainerShape that && this == that;
        public override int GetHashCode() => ThisPtr.GetHashCode();


        bool IWinRTObject.HasUnwrappableNativeObject => true;
        IObjectReference IWinRTObject.NativeObject => _inner;

        private struct InterfaceTag<I>{};


        public CompositionShapeCollection Shapes => global::ABI.Microsoft.UI.Composition.ICompositionContainerShapeMethods.get_Shapes(_objRef_global__Microsoft_UI_Composition_ICompositionContainerShape);

        protected override bool IsOverridableInterface(Guid iid) => base.IsOverridableInterface(iid);

        global::System.Runtime.InteropServices.CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(ref Guid iid, out IntPtr ppv)
        {
            ppv = IntPtr.Zero;
            if (IsOverridableInterface(iid) || global::WinRT.Interop.IID.IID_IInspectable == iid)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
            }

            if (((IWinRTObject)this).NativeObject.TryAs(iid, out ppv) >= 0)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.Handled;
            }

            return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
        }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI")]
    [global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Composition.CompositionDrawingSurface))]
    [global::ABI.Microsoft.UI.Composition.CompositionDrawingSurfaceRcwFactory]
    [global::WinRT.ProjectedRuntimeClass(typeof(ICompositionDrawingSurface))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.Foundation.WindowsAppSDKContract), 65536u)]
    public class CompositionDrawingSurface : CompositionObject, ICompositionSurface, global::System.Runtime.InteropServices.ICustomQueryInterface, IWinRTObject, IEquatable<CompositionDrawingSurface>
    {
        private IntPtr ThisPtr => _inner == null ? (((IWinRTObject)this).NativeObject).ThisPtr : _inner.ThisPtr;

        private readonly IObjectReference _inner = null;




        private volatile IObjectReference ___objRef_global__Microsoft_UI_Composition_ICompositionDrawingSurface;
        private IObjectReference Make___objRef_global__Microsoft_UI_Composition_ICompositionDrawingSurface()
        {
            global::System.Threading.Interlocked.CompareExchange(ref ___objRef_global__Microsoft_UI_Composition_ICompositionDrawingSurface, ((IWinRTObject)this).NativeObject.As<IUnknownVftbl>(global::ABI.Microsoft.UI.Composition.ICompositionDrawingSurfaceMethods.IID), null);
            return ___objRef_global__Microsoft_UI_Composition_ICompositionDrawingSurface;
        }
        private IObjectReference _objRef_global__Microsoft_UI_Composition_ICompositionDrawingSurface => ___objRef_global__Microsoft_UI_Composition_ICompositionDrawingSurface ?? Make___objRef_global__Microsoft_UI_Composition_ICompositionDrawingSurface();

        private volatile IObjectReference ___objRef_global__Microsoft_UI_Composition_ICompositionDrawingSurface2;
        private IObjectReference Make___objRef_global__Microsoft_UI_Composition_ICompositionDrawingSurface2()
        {
            global::System.Threading.Interlocked.CompareExchange(ref ___objRef_global__Microsoft_UI_Composition_ICompositionDrawingSurface2, ((IWinRTObject)this).NativeObject.As<IUnknownVftbl>(global::ABI.Microsoft.UI.Composition.ICompositionDrawingSurface2Methods.IID), null);
            return ___objRef_global__Microsoft_UI_Composition_ICompositionDrawingSurface2;
        }
        private IObjectReference _objRef_global__Microsoft_UI_Composition_ICompositionDrawingSurface2 => ___objRef_global__Microsoft_UI_Composition_ICompositionDrawingSurface2 ?? Make___objRef_global__Microsoft_UI_Composition_ICompositionDrawingSurface2();

        private volatile IObjectReference ___objRef_global__Microsoft_UI_Composition_ICompositionSurface;
        private IObjectReference Make___objRef_global__Microsoft_UI_Composition_ICompositionSurface()
        {
            global::System.Threading.Interlocked.CompareExchange(ref ___objRef_global__Microsoft_UI_Composition_ICompositionSurface, ((IWinRTObject)this).NativeObject.As<IUnknownVftbl>(global::ABI.Microsoft.UI.Composition.ICompositionSurfaceMethods.IID), null);
            return ___objRef_global__Microsoft_UI_Composition_ICompositionSurface;
        }
        private IObjectReference _objRef_global__Microsoft_UI_Composition_ICompositionSurface => ___objRef_global__Microsoft_UI_Composition_ICompositionSurface ?? Make___objRef_global__Microsoft_UI_Composition_ICompositionSurface();



        private static class _ICompositionDrawingSurfaceFactoryMethods
        {}

        private static volatile IObjectReference ___objRef_global__Microsoft_UI_Composition_ICompositionDrawingSurfaceFactory;
        private static IObjectReference _objRef_global__Microsoft_UI_Composition_ICompositionDrawingSurfaceFactory
        {
            get
            { 
                var factory = ___objRef_global__Microsoft_UI_Composition_ICompositionDrawingSurfaceFactory;
                if (factory != null && factory.IsInCurrentContext)
                {
                    return factory;
                }
                else
                {
                    return ___objRef_global__Microsoft_UI_Composition_ICompositionDrawingSurfaceFactory = ActivationFactory.Get("Microsoft.UI.Composition.CompositionDrawingSurface", global::ABI.Microsoft.UI.Composition.ICompositionDrawingSurfaceFactoryMethods.IID);
                }
            }
        }

        public static new CompositionDrawingSurface FromAbi(IntPtr thisPtr)
        {
            if (thisPtr == IntPtr.Zero) return null;
            return MarshalInspectable<CompositionDrawingSurface>.FromAbi(thisPtr);
        }

        protected internal CompositionDrawingSurface(IObjectReference objRef)
            : base(global::WinRT.DerivedComposed.Instance)

        {
            _inner = objRef.As(global::ABI.Microsoft.UI.Composition.ICompositionDrawingSurfaceMethods.IID);

        }


        public static bool operator ==(CompositionDrawingSurface x, CompositionDrawingSurface y) => (x?.ThisPtr ?? IntPtr.Zero) == (y?.ThisPtr ?? IntPtr.Zero);
        public static bool operator !=(CompositionDrawingSurface x, CompositionDrawingSurface y) => !(x == y);
        public bool Equals(CompositionDrawingSurface other) => this == other;
        public override bool Equals(object obj) => obj is CompositionDrawingSurface that && this == that;
        public override int GetHashCode() => ThisPtr.GetHashCode();


        protected CompositionDrawingSurface(global::WinRT.DerivedComposed _):base(_)
        {

        }
        bool IWinRTObject.HasUnwrappableNativeObject => this.GetType() == typeof(CompositionDrawingSurface);
        IObjectReference IWinRTObject.NativeObject => _inner;

        private struct InterfaceTag<I>{};


        public void Resize(global::Windows.Graphics.SizeInt32 sizePixels) => global::ABI.Microsoft.UI.Composition.ICompositionDrawingSurface2Methods.Resize(_objRef_global__Microsoft_UI_Composition_ICompositionDrawingSurface2, sizePixels);

        public void Scroll(global::Windows.Graphics.PointInt32 offset) => global::ABI.Microsoft.UI.Composition.ICompositionDrawingSurface2Methods.Scroll(_objRef_global__Microsoft_UI_Composition_ICompositionDrawingSurface2, offset);

        public void Scroll(global::Windows.Graphics.PointInt32 offset, global::Windows.Graphics.RectInt32 scrollRect) => global::ABI.Microsoft.UI.Composition.ICompositionDrawingSurface2Methods.Scroll(_objRef_global__Microsoft_UI_Composition_ICompositionDrawingSurface2, offset, scrollRect);

        public void ScrollWithClip(global::Windows.Graphics.PointInt32 offset, global::Windows.Graphics.RectInt32 clipRect) => global::ABI.Microsoft.UI.Composition.ICompositionDrawingSurface2Methods.ScrollWithClip(_objRef_global__Microsoft_UI_Composition_ICompositionDrawingSurface2, offset, clipRect);

        public void ScrollWithClip(global::Windows.Graphics.PointInt32 offset, global::Windows.Graphics.RectInt32 clipRect, global::Windows.Graphics.RectInt32 scrollRect) => global::ABI.Microsoft.UI.Composition.ICompositionDrawingSurface2Methods.ScrollWithClip(_objRef_global__Microsoft_UI_Composition_ICompositionDrawingSurface2, offset, clipRect, scrollRect);

        public global::Microsoft.Graphics.DirectX.DirectXAlphaMode AlphaMode => global::ABI.Microsoft.UI.Composition.ICompositionDrawingSurfaceMethods.get_AlphaMode(_objRef_global__Microsoft_UI_Composition_ICompositionDrawingSurface);

        public global::Microsoft.Graphics.DirectX.DirectXPixelFormat PixelFormat => global::ABI.Microsoft.UI.Composition.ICompositionDrawingSurfaceMethods.get_PixelFormat(_objRef_global__Microsoft_UI_Composition_ICompositionDrawingSurface);

        public global::Windows.Foundation.Size Size => global::ABI.Microsoft.UI.Composition.ICompositionDrawingSurfaceMethods.get_Size(_objRef_global__Microsoft_UI_Composition_ICompositionDrawingSurface);

        public global::Windows.Graphics.SizeInt32 SizeInt32 => global::ABI.Microsoft.UI.Composition.ICompositionDrawingSurface2Methods.get_SizeInt32(_objRef_global__Microsoft_UI_Composition_ICompositionDrawingSurface2);

        protected override bool IsOverridableInterface(Guid iid) => base.IsOverridableInterface(iid);

        global::System.Runtime.InteropServices.CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(ref Guid iid, out IntPtr ppv)
        {
            ppv = IntPtr.Zero;
            if (IsOverridableInterface(iid) || global::WinRT.Interop.IID.IID_IInspectable == iid)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
            }

            if (((IWinRTObject)this).NativeObject.TryAs(iid, out ppv) >= 0)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.Handled;
            }

            return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
        }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI")][global::WinRT.WinRTExposedType(typeof(global::WinRT.EnumTypeDetails<CompositionDropShadowSourcePolicy>))][global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.Foundation.WindowsAppSDKContract), 65536u)]
    public enum CompositionDropShadowSourcePolicy : int
    {
        Default = unchecked((int)0),
        InheritFromVisualContent = unchecked((int)0x1),
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI")]
    [global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Composition.CompositionEasingFunction))]
    [global::ABI.Microsoft.UI.Composition.CompositionEasingFunctionRcwFactory]
    [global::WinRT.ProjectedRuntimeClass(typeof(ICompositionEasingFunction))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.Foundation.WindowsAppSDKContract), 65536u)]
    public class CompositionEasingFunction : CompositionObject, global::System.Runtime.InteropServices.ICustomQueryInterface, IWinRTObject, IEquatable<CompositionEasingFunction>
    {
        private IntPtr ThisPtr => _inner == null ? (((IWinRTObject)this).NativeObject).ThisPtr : _inner.ThisPtr;

        private readonly IObjectReference _inner = null;




        private volatile IObjectReference ___objRef_global__Microsoft_UI_Composition_ICompositionEasingFunction;
        private IObjectReference Make___objRef_global__Microsoft_UI_Composition_ICompositionEasingFunction()
        {
            global::System.Threading.Interlocked.CompareExchange(ref ___objRef_global__Microsoft_UI_Composition_ICompositionEasingFunction, ((IWinRTObject)this).NativeObject.As<IUnknownVftbl>(global::ABI.Microsoft.UI.Composition.ICompositionEasingFunctionMethods.IID), null);
            return ___objRef_global__Microsoft_UI_Composition_ICompositionEasingFunction;
        }
        private IObjectReference _objRef_global__Microsoft_UI_Composition_ICompositionEasingFunction => ___objRef_global__Microsoft_UI_Composition_ICompositionEasingFunction ?? Make___objRef_global__Microsoft_UI_Composition_ICompositionEasingFunction();



        private static class _ICompositionEasingFunctionFactoryMethods
        {}

        private static volatile IObjectReference ___objRef_global__Microsoft_UI_Composition_ICompositionEasingFunctionFactory;
        private static IObjectReference _objRef_global__Microsoft_UI_Composition_ICompositionEasingFunctionFactory
        {
            get
            { 
                var factory = ___objRef_global__Microsoft_UI_Composition_ICompositionEasingFunctionFactory;
                if (factory != null && factory.IsInCurrentContext)
                {
                    return factory;
                }
                else
                {
                    return ___objRef_global__Microsoft_UI_Composition_ICompositionEasingFunctionFactory = ActivationFactory.Get("Microsoft.UI.Composition.CompositionEasingFunction", global::ABI.Microsoft.UI.Composition.ICompositionEasingFunctionFactoryMethods.IID);
                }
            }
        }

        public static new I As<I>() => ActivationFactory.Get("Microsoft.UI.Composition.CompositionEasingFunction").AsInterface<I>();

        private static volatile IObjectReference ___objRef_global__Microsoft_UI_Composition_ICompositionEasingFunctionStatics;
        private static IObjectReference _objRef_global__Microsoft_UI_Composition_ICompositionEasingFunctionStatics
        {
            get
            { 
                var factory = ___objRef_global__Microsoft_UI_Composition_ICompositionEasingFunctionStatics;
                if (factory != null && factory.IsInCurrentContext)
                {
                    return factory;
                }
                else
                {
                    return ___objRef_global__Microsoft_UI_Composition_ICompositionEasingFunctionStatics = ActivationFactory.Get("Microsoft.UI.Composition.CompositionEasingFunction", global::ABI.Microsoft.UI.Composition.ICompositionEasingFunctionStaticsMethods.IID);
                }
            }
        }

        public static CubicBezierEasingFunction CreateCubicBezierEasingFunction(Compositor owner, global::System.Numerics.Vector2 controlPoint1, global::System.Numerics.Vector2 controlPoint2) => global::ABI.Microsoft.UI.Composition.ICompositionEasingFunctionStaticsMethods.CreateCubicBezierEasingFunction(_objRef_global__Microsoft_UI_Composition_ICompositionEasingFunctionStatics, owner, controlPoint1, controlPoint2);

        public static LinearEasingFunction CreateLinearEasingFunction(Compositor owner) => global::ABI.Microsoft.UI.Composition.ICompositionEasingFunctionStaticsMethods.CreateLinearEasingFunction(_objRef_global__Microsoft_UI_Composition_ICompositionEasingFunctionStatics, owner);

        public static StepEasingFunction CreateStepEasingFunction(Compositor owner) => global::ABI.Microsoft.UI.Composition.ICompositionEasingFunctionStaticsMethods.CreateStepEasingFunction(_objRef_global__Microsoft_UI_Composition_ICompositionEasingFunctionStatics, owner);

        public static StepEasingFunction CreateStepEasingFunction(Compositor owner, int stepCount) => global::ABI.Microsoft.UI.Composition.ICompositionEasingFunctionStaticsMethods.CreateStepEasingFunction(_objRef_global__Microsoft_UI_Composition_ICompositionEasingFunctionStatics, owner, stepCount);

        public static BackEasingFunction CreateBackEasingFunction(Compositor owner, CompositionEasingFunctionMode mode, float amplitude) => global::ABI.Microsoft.UI.Composition.ICompositionEasingFunctionStaticsMethods.CreateBackEasingFunction(_objRef_global__Microsoft_UI_Composition_ICompositionEasingFunctionStatics, owner, mode, amplitude);

        public static BounceEasingFunction CreateBounceEasingFunction(Compositor owner, CompositionEasingFunctionMode mode, int bounces, float bounciness) => global::ABI.Microsoft.UI.Composition.ICompositionEasingFunctionStaticsMethods.CreateBounceEasingFunction(_objRef_global__Microsoft_UI_Composition_ICompositionEasingFunctionStatics, owner, mode, bounces, bounciness);

        public static CircleEasingFunction CreateCircleEasingFunction(Compositor owner, CompositionEasingFunctionMode mode) => global::ABI.Microsoft.UI.Composition.ICompositionEasingFunctionStaticsMethods.CreateCircleEasingFunction(_objRef_global__Microsoft_UI_Composition_ICompositionEasingFunctionStatics, owner, mode);

        public static ElasticEasingFunction CreateElasticEasingFunction(Compositor owner, CompositionEasingFunctionMode mode, int oscillations, float springiness) => global::ABI.Microsoft.UI.Composition.ICompositionEasingFunctionStaticsMethods.CreateElasticEasingFunction(_objRef_global__Microsoft_UI_Composition_ICompositionEasingFunctionStatics, owner, mode, oscillations, springiness);

        public static ExponentialEasingFunction CreateExponentialEasingFunction(Compositor owner, CompositionEasingFunctionMode mode, float exponent) => global::ABI.Microsoft.UI.Composition.ICompositionEasingFunctionStaticsMethods.CreateExponentialEasingFunction(_objRef_global__Microsoft_UI_Composition_ICompositionEasingFunctionStatics, owner, mode, exponent);

        public static PowerEasingFunction CreatePowerEasingFunction(Compositor owner, CompositionEasingFunctionMode mode, float power) => global::ABI.Microsoft.UI.Composition.ICompositionEasingFunctionStaticsMethods.CreatePowerEasingFunction(_objRef_global__Microsoft_UI_Composition_ICompositionEasingFunctionStatics, owner, mode, power);

        public static SineEasingFunction CreateSineEasingFunction(Compositor owner, CompositionEasingFunctionMode mode) => global::ABI.Microsoft.UI.Composition.ICompositionEasingFunctionStaticsMethods.CreateSineEasingFunction(_objRef_global__Microsoft_UI_Composition_ICompositionEasingFunctionStatics, owner, mode);

        public static new CompositionEasingFunction FromAbi(IntPtr thisPtr)
        {
            if (thisPtr == IntPtr.Zero) return null;
            return MarshalInspectable<CompositionEasingFunction>.FromAbi(thisPtr);
        }

        protected internal CompositionEasingFunction(IObjectReference objRef)
            : base(global::WinRT.DerivedComposed.Instance)

        {
            _inner = objRef.As(global::ABI.Microsoft.UI.Composition.ICompositionEasingFunctionMethods.IID);

        }


        public static bool operator ==(CompositionEasingFunction x, CompositionEasingFunction y) => (x?.ThisPtr ?? IntPtr.Zero) == (y?.ThisPtr ?? IntPtr.Zero);
        public static bool operator !=(CompositionEasingFunction x, CompositionEasingFunction y) => !(x == y);
        public bool Equals(CompositionEasingFunction other) => this == other;
        public override bool Equals(object obj) => obj is CompositionEasingFunction that && this == that;
        public override int GetHashCode() => ThisPtr.GetHashCode();


        protected CompositionEasingFunction(global::WinRT.DerivedComposed _):base(_)
        {

        }
        bool IWinRTObject.HasUnwrappableNativeObject => this.GetType() == typeof(CompositionEasingFunction);
        IObjectReference IWinRTObject.NativeObject => _inner;

        private struct InterfaceTag<I>{};


        protected override bool IsOverridableInterface(Guid iid) => base.IsOverridableInterface(iid);

        global::System.Runtime.InteropServices.CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(ref Guid iid, out IntPtr ppv)
        {
            ppv = IntPtr.Zero;
            if (IsOverridableInterface(iid) || global::WinRT.Interop.IID.IID_IInspectable == iid)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
            }

            if (((IWinRTObject)this).NativeObject.TryAs(iid, out ppv) >= 0)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.Handled;
            }

            return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
        }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI")][global::WinRT.WinRTExposedType(typeof(global::WinRT.EnumTypeDetails<CompositionEasingFunctionMode>))][global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.Foundation.WindowsAppSDKContract), 65536u)]
    public enum CompositionEasingFunctionMode : int
    {
        In = unchecked((int)0),
        Out = unchecked((int)0x1),
        InOut = unchecked((int)0x2),
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI")]
    [global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Composition.CompositionEffectBrush))]
    [global::ABI.Microsoft.UI.Composition.CompositionEffectBrushRcwFactory]
    [global::WinRT.ProjectedRuntimeClass(typeof(ICompositionEffectBrush))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.Foundation.WindowsAppSDKContract), 65536u)]
    public sealed class CompositionEffectBrush : CompositionBrush, global::System.Runtime.InteropServices.ICustomQueryInterface, IWinRTObject, IEquatable<CompositionEffectBrush>
    {
        private IntPtr ThisPtr => _inner == null ? (((IWinRTObject)this).NativeObject).ThisPtr : _inner.ThisPtr;

        private readonly IObjectReference _inner = null;



        private IObjectReference _objRef_global__Microsoft_UI_Composition_ICompositionEffectBrush => _inner;


        public static new CompositionEffectBrush FromAbi(IntPtr thisPtr)
        {
            if (thisPtr == IntPtr.Zero) return null;
            return MarshalInspectable<CompositionEffectBrush>.FromAbi(thisPtr);
        }

        internal CompositionEffectBrush(IObjectReference objRef)
            : base(global::WinRT.DerivedComposed.Instance)

        {
            _inner = objRef.As(global::ABI.Microsoft.UI.Composition.ICompositionEffectBrushMethods.IID);

        }


        public static bool operator ==(CompositionEffectBrush x, CompositionEffectBrush y) => (x?.ThisPtr ?? IntPtr.Zero) == (y?.ThisPtr ?? IntPtr.Zero);
        public static bool operator !=(CompositionEffectBrush x, CompositionEffectBrush y) => !(x == y);
        public bool Equals(CompositionEffectBrush other) => this == other;
        public override bool Equals(object obj) => obj is CompositionEffectBrush that && this == that;
        public override int GetHashCode() => ThisPtr.GetHashCode();


        bool IWinRTObject.HasUnwrappableNativeObject => true;
        IObjectReference IWinRTObject.NativeObject => _inner;

        private struct InterfaceTag<I>{};


        public CompositionBrush GetSourceParameter(string name) => global::ABI.Microsoft.UI.Composition.ICompositionEffectBrushMethods.GetSourceParameter(_objRef_global__Microsoft_UI_Composition_ICompositionEffectBrush, name);

        public void SetSourceParameter(string name, CompositionBrush source) => global::ABI.Microsoft.UI.Composition.ICompositionEffectBrushMethods.SetSourceParameter(_objRef_global__Microsoft_UI_Composition_ICompositionEffectBrush, name, source);

        protected override bool IsOverridableInterface(Guid iid) => base.IsOverridableInterface(iid);

        global::System.Runtime.InteropServices.CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(ref Guid iid, out IntPtr ppv)
        {
            ppv = IntPtr.Zero;
            if (IsOverridableInterface(iid) || global::WinRT.Interop.IID.IID_IInspectable == iid)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
            }

            if (((IWinRTObject)this).NativeObject.TryAs(iid, out ppv) >= 0)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.Handled;
            }

            return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
        }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI")]
    [global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Composition.CompositionEffectFactory))]
    [global::ABI.Microsoft.UI.Composition.CompositionEffectFactoryRcwFactory]
    [global::WinRT.ProjectedRuntimeClass(typeof(ICompositionEffectFactory))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.Foundation.WindowsAppSDKContract), 65536u)]
    public sealed class CompositionEffectFactory : CompositionObject, global::System.Runtime.InteropServices.ICustomQueryInterface, IWinRTObject, IEquatable<CompositionEffectFactory>
    {
        private IntPtr ThisPtr => _inner == null ? (((IWinRTObject)this).NativeObject).ThisPtr : _inner.ThisPtr;

        private readonly IObjectReference _inner = null;



        private IObjectReference _objRef_global__Microsoft_UI_Composition_ICompositionEffectFactory => _inner;


        public static new CompositionEffectFactory FromAbi(IntPtr thisPtr)
        {
            if (thisPtr == IntPtr.Zero) return null;
            return MarshalInspectable<CompositionEffectFactory>.FromAbi(thisPtr);
        }

        internal CompositionEffectFactory(IObjectReference objRef)
            : base(global::WinRT.DerivedComposed.Instance)

        {
            _inner = objRef.As(global::ABI.Microsoft.UI.Composition.ICompositionEffectFactoryMethods.IID);

        }


        public static bool operator ==(CompositionEffectFactory x, CompositionEffectFactory y) => (x?.ThisPtr ?? IntPtr.Zero) == (y?.ThisPtr ?? IntPtr.Zero);
        public static bool operator !=(CompositionEffectFactory x, CompositionEffectFactory y) => !(x == y);
        public bool Equals(CompositionEffectFactory other) => this == other;
        public override bool Equals(object obj) => obj is CompositionEffectFactory that && this == that;
        public override int GetHashCode() => ThisPtr.GetHashCode();


        bool IWinRTObject.HasUnwrappableNativeObject => true;
        IObjectReference IWinRTObject.NativeObject => _inner;

        private struct InterfaceTag<I>{};


        public CompositionEffectBrush CreateBrush() => global::ABI.Microsoft.UI.Composition.ICompositionEffectFactoryMethods.CreateBrush(_objRef_global__Microsoft_UI_Composition_ICompositionEffectFactory);

        public global::System.Exception ExtendedError => global::ABI.Microsoft.UI.Composition.ICompositionEffectFactoryMethods.get_ExtendedError(_objRef_global__Microsoft_UI_Composition_ICompositionEffectFactory);

        public CompositionEffectFactoryLoadStatus LoadStatus => global::ABI.Microsoft.UI.Composition.ICompositionEffectFactoryMethods.get_LoadStatus(_objRef_global__Microsoft_UI_Composition_ICompositionEffectFactory);

        protected override bool IsOverridableInterface(Guid iid) => base.IsOverridableInterface(iid);

        global::System.Runtime.InteropServices.CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(ref Guid iid, out IntPtr ppv)
        {
            ppv = IntPtr.Zero;
            if (IsOverridableInterface(iid) || global::WinRT.Interop.IID.IID_IInspectable == iid)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
            }

            if (((IWinRTObject)this).NativeObject.TryAs(iid, out ppv) >= 0)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.Handled;
            }

            return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
        }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI")][global::WinRT.WinRTExposedType(typeof(global::WinRT.EnumTypeDetails<CompositionEffectFactoryLoadStatus>))][global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.Foundation.WindowsAppSDKContract), 65536u)]
    public enum CompositionEffectFactoryLoadStatus : int
    {
        Success = unchecked((int)0),
        EffectTooComplex = unchecked((int)0x1),
        Pending = unchecked((int)0x2),
        Other = unchecked((int)0xffffffff),
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI")]
    [global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Composition.CompositionEffectSourceParameter))]
    [global::ABI.Microsoft.UI.Composition.CompositionEffectSourceParameterRcwFactory]
    [global::WinRT.ProjectedRuntimeClass(typeof(ICompositionEffectSourceParameter))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.Foundation.WindowsAppSDKContract), 65536u)]
    public sealed class CompositionEffectSourceParameter : global::Windows.Graphics.Effects.IGraphicsEffectSource, global::System.Runtime.InteropServices.ICustomQueryInterface, IWinRTObject, IEquatable<CompositionEffectSourceParameter>
    {
        private IntPtr ThisPtr => _inner == null ? (((IWinRTObject)this).NativeObject).ThisPtr : _inner.ThisPtr;

        private readonly IObjectReference _inner = null;



        private IObjectReference _objRef_global__Microsoft_UI_Composition_ICompositionEffectSourceParameter => _inner;
        private volatile IObjectReference ___objRef_global__Windows_Graphics_Effects_IGraphicsEffectSource;
        private IObjectReference Make___objRef_global__Windows_Graphics_Effects_IGraphicsEffectSource()
        {
            global::System.Threading.Interlocked.CompareExchange(ref ___objRef_global__Windows_Graphics_Effects_IGraphicsEffectSource, ((IWinRTObject)this).NativeObject.As<IUnknownVftbl>(global::ABI.Windows.Graphics.Effects.IGraphicsEffectSourceMethods.IID), null);
            return ___objRef_global__Windows_Graphics_Effects_IGraphicsEffectSource;
        }
        private IObjectReference _objRef_global__Windows_Graphics_Effects_IGraphicsEffectSource => ___objRef_global__Windows_Graphics_Effects_IGraphicsEffectSource ?? Make___objRef_global__Windows_Graphics_Effects_IGraphicsEffectSource();



        private static class _ICompositionEffectSourceParameterFactoryMethods
        {
            public static unsafe IntPtr Create(IObjectReference _obj, string name)
            {
                var ThisPtr = _obj.ThisPtr;

                IntPtr __retval = default;
                MarshalString.Pinnable __name = new(name);
                fixed(void* ___name = __name)
                {
                    global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, IntPtr*, int>**)ThisPtr)[6](ThisPtr, MarshalString.GetAbi(ref __name), &__retval));
                    global::System.GC.KeepAlive(_obj);
                    return __retval;
                }
            }
        }

        private static volatile IObjectReference ___objRef_global__Microsoft_UI_Composition_ICompositionEffectSourceParameterFactory;
        private static IObjectReference _objRef_global__Microsoft_UI_Composition_ICompositionEffectSourceParameterFactory
        {
            get
            { 
                var factory = ___objRef_global__Microsoft_UI_Composition_ICompositionEffectSourceParameterFactory;
                if (factory != null && factory.IsInCurrentContext)
                {
                    return factory;
                }
                else
                {
                    return ___objRef_global__Microsoft_UI_Composition_ICompositionEffectSourceParameterFactory = ActivationFactory.Get("Microsoft.UI.Composition.CompositionEffectSourceParameter", global::ABI.Microsoft.UI.Composition.ICompositionEffectSourceParameterFactoryMethods.IID);
                }
            }
        }

        public CompositionEffectSourceParameter(string name) 
        { 
        IntPtr ptr = (_ICompositionEffectSourceParameterFactoryMethods.Create(_objRef_global__Microsoft_UI_Composition_ICompositionEffectSourceParameterFactory, name)); 
        try 
        { 
        _inner = ComWrappersSupport.GetObjectReferenceForInterface(ptr, global::ABI.Microsoft.UI.Composition.ICompositionEffectSourceParameterMethods.IID, false); 

        } 
        finally 
        { 
        MarshalInspectable<object>.DisposeAbi(ptr); 
        }

        ComWrappersSupport.RegisterObjectForInterface(this, ThisPtr);
        ComWrappersHelper.Init(_inner, false);
        }

        public static CompositionEffectSourceParameter FromAbi(IntPtr thisPtr)
        {
            if (thisPtr == IntPtr.Zero) return null;
            return MarshalInspectable<CompositionEffectSourceParameter>.FromAbi(thisPtr);
        }

        internal CompositionEffectSourceParameter(IObjectReference objRef)
        {
            _inner = objRef.As(global::ABI.Microsoft.UI.Composition.ICompositionEffectSourceParameterMethods.IID);

        }


        public static bool operator ==(CompositionEffectSourceParameter x, CompositionEffectSourceParameter y) => (x?.ThisPtr ?? IntPtr.Zero) == (y?.ThisPtr ?? IntPtr.Zero);
        public static bool operator !=(CompositionEffectSourceParameter x, CompositionEffectSourceParameter y) => !(x == y);
        public bool Equals(CompositionEffectSourceParameter other) => this == other;
        public override bool Equals(object obj) => obj is CompositionEffectSourceParameter that && this == that;
        public override int GetHashCode() => ThisPtr.GetHashCode();


        bool IWinRTObject.HasUnwrappableNativeObject => true;
        IObjectReference IWinRTObject.NativeObject => _inner;
        private volatile global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> _queryInterfaceCache;
        private global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> MakeQueryInterfaceCache()
        {
            global::System.Threading.Interlocked.CompareExchange(ref _queryInterfaceCache, new global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference>(), null); 
            return _queryInterfaceCache;
        }
        global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> IWinRTObject.QueryInterfaceCache => _queryInterfaceCache ?? MakeQueryInterfaceCache();
        private volatile global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> _additionalTypeData;
        private global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> MakeAdditionalTypeData()
        {
            global::System.Threading.Interlocked.CompareExchange(ref _additionalTypeData, new global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object>(), null); 
            return _additionalTypeData;
        }
        global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> IWinRTObject.AdditionalTypeData => _additionalTypeData ?? MakeAdditionalTypeData();

        private struct InterfaceTag<I>{};


        public string Name => global::ABI.Microsoft.UI.Composition.ICompositionEffectSourceParameterMethods.get_Name(_objRef_global__Microsoft_UI_Composition_ICompositionEffectSourceParameter);

        private bool IsOverridableInterface(Guid iid) => false;

        global::System.Runtime.InteropServices.CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(ref Guid iid, out IntPtr ppv)
        {
            ppv = IntPtr.Zero;
            if (IsOverridableInterface(iid) || global::WinRT.Interop.IID.IID_IInspectable == iid)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
            }

            if (((IWinRTObject)this).NativeObject.TryAs(iid, out ppv) >= 0)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.Handled;
            }

            return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
        }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI")]
    [global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Composition.CompositionEllipseGeometry))]
    [global::ABI.Microsoft.UI.Composition.CompositionEllipseGeometryRcwFactory]
    [global::WinRT.ProjectedRuntimeClass(typeof(ICompositionEllipseGeometry))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.Foundation.WindowsAppSDKContract), 65536u)]
    public sealed class CompositionEllipseGeometry : CompositionGeometry, global::System.Runtime.InteropServices.ICustomQueryInterface, IWinRTObject, IEquatable<CompositionEllipseGeometry>
    {
        private IntPtr ThisPtr => _inner == null ? (((IWinRTObject)this).NativeObject).ThisPtr : _inner.ThisPtr;

        private readonly IObjectReference _inner = null;



        private IObjectReference _objRef_global__Microsoft_UI_Composition_ICompositionEllipseGeometry => _inner;


        public static new CompositionEllipseGeometry FromAbi(IntPtr thisPtr)
        {
            if (thisPtr == IntPtr.Zero) return null;
            return MarshalInspectable<CompositionEllipseGeometry>.FromAbi(thisPtr);
        }

        internal CompositionEllipseGeometry(IObjectReference objRef)
            : base(global::WinRT.DerivedComposed.Instance)

        {
            _inner = objRef.As(global::ABI.Microsoft.UI.Composition.ICompositionEllipseGeometryMethods.IID);

        }


        public static bool operator ==(CompositionEllipseGeometry x, CompositionEllipseGeometry y) => (x?.ThisPtr ?? IntPtr.Zero) == (y?.ThisPtr ?? IntPtr.Zero);
        public static bool operator !=(CompositionEllipseGeometry x, CompositionEllipseGeometry y) => !(x == y);
        public bool Equals(CompositionEllipseGeometry other) => this == other;
        public override bool Equals(object obj) => obj is CompositionEllipseGeometry that && this == that;
        public override int GetHashCode() => ThisPtr.GetHashCode();


        bool IWinRTObject.HasUnwrappableNativeObject => true;
        IObjectReference IWinRTObject.NativeObject => _inner;

        private struct InterfaceTag<I>{};


        public global::System.Numerics.Vector2 Center
        {
            get => global::ABI.Microsoft.UI.Composition.ICompositionEllipseGeometryMethods.get_Center(_objRef_global__Microsoft_UI_Composition_ICompositionEllipseGeometry);
            set => global::ABI.Microsoft.UI.Composition.ICompositionEllipseGeometryMethods.set_Center(_objRef_global__Microsoft_UI_Composition_ICompositionEllipseGeometry, value);
        }

        public global::System.Numerics.Vector2 Radius
        {
            get => global::ABI.Microsoft.UI.Composition.ICompositionEllipseGeometryMethods.get_Radius(_objRef_global__Microsoft_UI_Composition_ICompositionEllipseGeometry);
            set => global::ABI.Microsoft.UI.Composition.ICompositionEllipseGeometryMethods.set_Radius(_objRef_global__Microsoft_UI_Composition_ICompositionEllipseGeometry, value);
        }

        protected override bool IsOverridableInterface(Guid iid) => base.IsOverridableInterface(iid);

        global::System.Runtime.InteropServices.CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(ref Guid iid, out IntPtr ppv)
        {
            ppv = IntPtr.Zero;
            if (IsOverridableInterface(iid) || global::WinRT.Interop.IID.IID_IInspectable == iid)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
            }

            if (((IWinRTObject)this).NativeObject.TryAs(iid, out ppv) >= 0)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.Handled;
            }

            return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
        }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI")]
    [global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Composition.CompositionGeometricClip))]
    [global::ABI.Microsoft.UI.Composition.CompositionGeometricClipRcwFactory]
    [global::WinRT.ProjectedRuntimeClass(typeof(ICompositionGeometricClip))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.Foundation.WindowsAppSDKContract), 65536u)]
    public sealed class CompositionGeometricClip : CompositionClip, global::System.Runtime.InteropServices.ICustomQueryInterface, IWinRTObject, IEquatable<CompositionGeometricClip>
    {
        private IntPtr ThisPtr => _inner == null ? (((IWinRTObject)this).NativeObject).ThisPtr : _inner.ThisPtr;

        private readonly IObjectReference _inner = null;



        private IObjectReference _objRef_global__Microsoft_UI_Composition_ICompositionGeometricClip => _inner;


        public static new CompositionGeometricClip FromAbi(IntPtr thisPtr)
        {
            if (thisPtr == IntPtr.Zero) return null;
            return MarshalInspectable<CompositionGeometricClip>.FromAbi(thisPtr);
        }

        internal CompositionGeometricClip(IObjectReference objRef)
            : base(global::WinRT.DerivedComposed.Instance)

        {
            _inner = objRef.As(global::ABI.Microsoft.UI.Composition.ICompositionGeometricClipMethods.IID);

        }


        public static bool operator ==(CompositionGeometricClip x, CompositionGeometricClip y) => (x?.ThisPtr ?? IntPtr.Zero) == (y?.ThisPtr ?? IntPtr.Zero);
        public static bool operator !=(CompositionGeometricClip x, CompositionGeometricClip y) => !(x == y);
        public bool Equals(CompositionGeometricClip other) => this == other;
        public override bool Equals(object obj) => obj is CompositionGeometricClip that && this == that;
        public override int GetHashCode() => ThisPtr.GetHashCode();


        bool IWinRTObject.HasUnwrappableNativeObject => true;
        IObjectReference IWinRTObject.NativeObject => _inner;

        private struct InterfaceTag<I>{};


        public CompositionGeometry Geometry
        {
            get => global::ABI.Microsoft.UI.Composition.ICompositionGeometricClipMethods.get_Geometry(_objRef_global__Microsoft_UI_Composition_ICompositionGeometricClip);
            set => global::ABI.Microsoft.UI.Composition.ICompositionGeometricClipMethods.set_Geometry(_objRef_global__Microsoft_UI_Composition_ICompositionGeometricClip, value);
        }

        public CompositionViewBox ViewBox
        {
            get => global::ABI.Microsoft.UI.Composition.ICompositionGeometricClipMethods.get_ViewBox(_objRef_global__Microsoft_UI_Composition_ICompositionGeometricClip);
            set => global::ABI.Microsoft.UI.Composition.ICompositionGeometricClipMethods.set_ViewBox(_objRef_global__Microsoft_UI_Composition_ICompositionGeometricClip, value);
        }

        protected override bool IsOverridableInterface(Guid iid) => base.IsOverridableInterface(iid);

        global::System.Runtime.InteropServices.CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(ref Guid iid, out IntPtr ppv)
        {
            ppv = IntPtr.Zero;
            if (IsOverridableInterface(iid) || global::WinRT.Interop.IID.IID_IInspectable == iid)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
            }

            if (((IWinRTObject)this).NativeObject.TryAs(iid, out ppv) >= 0)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.Handled;
            }

            return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
        }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI")]
    [global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Composition.CompositionGeometry))]
    [global::ABI.Microsoft.UI.Composition.CompositionGeometryRcwFactory]
    [global::WinRT.ProjectedRuntimeClass(typeof(ICompositionGeometry))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.Foundation.WindowsAppSDKContract), 65536u)]
    public class CompositionGeometry : CompositionObject, global::System.Runtime.InteropServices.ICustomQueryInterface, IWinRTObject, IEquatable<CompositionGeometry>
    {
        private IntPtr ThisPtr => _inner == null ? (((IWinRTObject)this).NativeObject).ThisPtr : _inner.ThisPtr;

        private readonly IObjectReference _inner = null;




        private volatile IObjectReference ___objRef_global__Microsoft_UI_Composition_ICompositionGeometry;
        private IObjectReference Make___objRef_global__Microsoft_UI_Composition_ICompositionGeometry()
        {
            global::System.Threading.Interlocked.CompareExchange(ref ___objRef_global__Microsoft_UI_Composition_ICompositionGeometry, ((IWinRTObject)this).NativeObject.As<IUnknownVftbl>(global::ABI.Microsoft.UI.Composition.ICompositionGeometryMethods.IID), null);
            return ___objRef_global__Microsoft_UI_Composition_ICompositionGeometry;
        }
        private IObjectReference _objRef_global__Microsoft_UI_Composition_ICompositionGeometry => ___objRef_global__Microsoft_UI_Composition_ICompositionGeometry ?? Make___objRef_global__Microsoft_UI_Composition_ICompositionGeometry();



        private static class _ICompositionGeometryFactoryMethods
        {}

        private static volatile IObjectReference ___objRef_global__Microsoft_UI_Composition_ICompositionGeometryFactory;
        private static IObjectReference _objRef_global__Microsoft_UI_Composition_ICompositionGeometryFactory
        {
            get
            { 
                var factory = ___objRef_global__Microsoft_UI_Composition_ICompositionGeometryFactory;
                if (factory != null && factory.IsInCurrentContext)
                {
                    return factory;
                }
                else
                {
                    return ___objRef_global__Microsoft_UI_Composition_ICompositionGeometryFactory = ActivationFactory.Get("Microsoft.UI.Composition.CompositionGeometry", global::ABI.Microsoft.UI.Composition.ICompositionGeometryFactoryMethods.IID);
                }
            }
        }

        public static new CompositionGeometry FromAbi(IntPtr thisPtr)
        {
            if (thisPtr == IntPtr.Zero) return null;
            return MarshalInspectable<CompositionGeometry>.FromAbi(thisPtr);
        }

        protected internal CompositionGeometry(IObjectReference objRef)
            : base(global::WinRT.DerivedComposed.Instance)

        {
            _inner = objRef.As(global::ABI.Microsoft.UI.Composition.ICompositionGeometryMethods.IID);

        }


        public static bool operator ==(CompositionGeometry x, CompositionGeometry y) => (x?.ThisPtr ?? IntPtr.Zero) == (y?.ThisPtr ?? IntPtr.Zero);
        public static bool operator !=(CompositionGeometry x, CompositionGeometry y) => !(x == y);
        public bool Equals(CompositionGeometry other) => this == other;
        public override bool Equals(object obj) => obj is CompositionGeometry that && this == that;
        public override int GetHashCode() => ThisPtr.GetHashCode();


        protected CompositionGeometry(global::WinRT.DerivedComposed _):base(_)
        {

        }
        bool IWinRTObject.HasUnwrappableNativeObject => this.GetType() == typeof(CompositionGeometry);
        IObjectReference IWinRTObject.NativeObject => _inner;

        private struct InterfaceTag<I>{};


        public float TrimEnd
        {
            get => global::ABI.Microsoft.UI.Composition.ICompositionGeometryMethods.get_TrimEnd(_objRef_global__Microsoft_UI_Composition_ICompositionGeometry);
            set => global::ABI.Microsoft.UI.Composition.ICompositionGeometryMethods.set_TrimEnd(_objRef_global__Microsoft_UI_Composition_ICompositionGeometry, value);
        }

        public float TrimOffset
        {
            get => global::ABI.Microsoft.UI.Composition.ICompositionGeometryMethods.get_TrimOffset(_objRef_global__Microsoft_UI_Composition_ICompositionGeometry);
            set => global::ABI.Microsoft.UI.Composition.ICompositionGeometryMethods.set_TrimOffset(_objRef_global__Microsoft_UI_Composition_ICompositionGeometry, value);
        }

        public float TrimStart
        {
            get => global::ABI.Microsoft.UI.Composition.ICompositionGeometryMethods.get_TrimStart(_objRef_global__Microsoft_UI_Composition_ICompositionGeometry);
            set => global::ABI.Microsoft.UI.Composition.ICompositionGeometryMethods.set_TrimStart(_objRef_global__Microsoft_UI_Composition_ICompositionGeometry, value);
        }

        protected override bool IsOverridableInterface(Guid iid) => base.IsOverridableInterface(iid);

        global::System.Runtime.InteropServices.CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(ref Guid iid, out IntPtr ppv)
        {
            ppv = IntPtr.Zero;
            if (IsOverridableInterface(iid) || global::WinRT.Interop.IID.IID_IInspectable == iid)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
            }

            if (((IWinRTObject)this).NativeObject.TryAs(iid, out ppv) >= 0)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.Handled;
            }

            return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
        }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI")][global::WinRT.WinRTExposedType(typeof(global::WinRT.EnumTypeDetails<CompositionGetValueStatus>))][global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.Foundation.WindowsAppSDKContract), 65536u)]
    public enum CompositionGetValueStatus : int
    {
        Succeeded = unchecked((int)0),
        TypeMismatch = unchecked((int)0x1),
        NotFound = unchecked((int)0x2),
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI")]
    [global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Composition.CompositionGradientBrush))]
    [global::ABI.Microsoft.UI.Composition.CompositionGradientBrushRcwFactory]
    [global::WinRT.ProjectedRuntimeClass(typeof(ICompositionGradientBrush))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.Foundation.WindowsAppSDKContract), 65536u)]
    public class CompositionGradientBrush : CompositionBrush, global::System.Runtime.InteropServices.ICustomQueryInterface, IWinRTObject, IEquatable<CompositionGradientBrush>
    {
        private IntPtr ThisPtr => _inner == null ? (((IWinRTObject)this).NativeObject).ThisPtr : _inner.ThisPtr;

        private readonly IObjectReference _inner = null;




        private volatile IObjectReference ___objRef_global__Microsoft_UI_Composition_ICompositionGradientBrush;
        private IObjectReference Make___objRef_global__Microsoft_UI_Composition_ICompositionGradientBrush()
        {
            global::System.Threading.Interlocked.CompareExchange(ref ___objRef_global__Microsoft_UI_Composition_ICompositionGradientBrush, ((IWinRTObject)this).NativeObject.As<IUnknownVftbl>(global::ABI.Microsoft.UI.Composition.ICompositionGradientBrushMethods.IID), null);
            return ___objRef_global__Microsoft_UI_Composition_ICompositionGradientBrush;
        }
        private IObjectReference _objRef_global__Microsoft_UI_Composition_ICompositionGradientBrush => ___objRef_global__Microsoft_UI_Composition_ICompositionGradientBrush ?? Make___objRef_global__Microsoft_UI_Composition_ICompositionGradientBrush();

        private volatile IObjectReference ___objRef_global__Microsoft_UI_Composition_ICompositionGradientBrush2;
        private IObjectReference Make___objRef_global__Microsoft_UI_Composition_ICompositionGradientBrush2()
        {
            global::System.Threading.Interlocked.CompareExchange(ref ___objRef_global__Microsoft_UI_Composition_ICompositionGradientBrush2, ((IWinRTObject)this).NativeObject.As<IUnknownVftbl>(global::ABI.Microsoft.UI.Composition.ICompositionGradientBrush2Methods.IID), null);
            return ___objRef_global__Microsoft_UI_Composition_ICompositionGradientBrush2;
        }
        private IObjectReference _objRef_global__Microsoft_UI_Composition_ICompositionGradientBrush2 => ___objRef_global__Microsoft_UI_Composition_ICompositionGradientBrush2 ?? Make___objRef_global__Microsoft_UI_Composition_ICompositionGradientBrush2();



        private static class _ICompositionGradientBrushFactoryMethods
        {}

        private static volatile IObjectReference ___objRef_global__Microsoft_UI_Composition_ICompositionGradientBrushFactory;
        private static IObjectReference _objRef_global__Microsoft_UI_Composition_ICompositionGradientBrushFactory
        {
            get
            { 
                var factory = ___objRef_global__Microsoft_UI_Composition_ICompositionGradientBrushFactory;
                if (factory != null && factory.IsInCurrentContext)
                {
                    return factory;
                }
                else
                {
                    return ___objRef_global__Microsoft_UI_Composition_ICompositionGradientBrushFactory = ActivationFactory.Get("Microsoft.UI.Composition.CompositionGradientBrush", global::ABI.Microsoft.UI.Composition.ICompositionGradientBrushFactoryMethods.IID);
                }
            }
        }

        public static new CompositionGradientBrush FromAbi(IntPtr thisPtr)
        {
            if (thisPtr == IntPtr.Zero) return null;
            return MarshalInspectable<CompositionGradientBrush>.FromAbi(thisPtr);
        }

        protected internal CompositionGradientBrush(IObjectReference objRef)
            : base(global::WinRT.DerivedComposed.Instance)

        {
            _inner = objRef.As(global::ABI.Microsoft.UI.Composition.ICompositionGradientBrushMethods.IID);

        }


        public static bool operator ==(CompositionGradientBrush x, CompositionGradientBrush y) => (x?.ThisPtr ?? IntPtr.Zero) == (y?.ThisPtr ?? IntPtr.Zero);
        public static bool operator !=(CompositionGradientBrush x, CompositionGradientBrush y) => !(x == y);
        public bool Equals(CompositionGradientBrush other) => this == other;
        public override bool Equals(object obj) => obj is CompositionGradientBrush that && this == that;
        public override int GetHashCode() => ThisPtr.GetHashCode();


        protected CompositionGradientBrush(global::WinRT.DerivedComposed _):base(_)
        {

        }
        bool IWinRTObject.HasUnwrappableNativeObject => this.GetType() == typeof(CompositionGradientBrush);
        IObjectReference IWinRTObject.NativeObject => _inner;

        private struct InterfaceTag<I>{};


        public global::System.Numerics.Vector2 AnchorPoint
        {
            get => global::ABI.Microsoft.UI.Composition.ICompositionGradientBrushMethods.get_AnchorPoint(_objRef_global__Microsoft_UI_Composition_ICompositionGradientBrush);
            set => global::ABI.Microsoft.UI.Composition.ICompositionGradientBrushMethods.set_AnchorPoint(_objRef_global__Microsoft_UI_Composition_ICompositionGradientBrush, value);
        }

        public global::System.Numerics.Vector2 CenterPoint
        {
            get => global::ABI.Microsoft.UI.Composition.ICompositionGradientBrushMethods.get_CenterPoint(_objRef_global__Microsoft_UI_Composition_ICompositionGradientBrush);
            set => global::ABI.Microsoft.UI.Composition.ICompositionGradientBrushMethods.set_CenterPoint(_objRef_global__Microsoft_UI_Composition_ICompositionGradientBrush, value);
        }

        public CompositionColorGradientStopCollection ColorStops => global::ABI.Microsoft.UI.Composition.ICompositionGradientBrushMethods.get_ColorStops(_objRef_global__Microsoft_UI_Composition_ICompositionGradientBrush);

        public CompositionGradientExtendMode ExtendMode
        {
            get => global::ABI.Microsoft.UI.Composition.ICompositionGradientBrushMethods.get_ExtendMode(_objRef_global__Microsoft_UI_Composition_ICompositionGradientBrush);
            set => global::ABI.Microsoft.UI.Composition.ICompositionGradientBrushMethods.set_ExtendMode(_objRef_global__Microsoft_UI_Composition_ICompositionGradientBrush, value);
        }

        public CompositionColorSpace InterpolationSpace
        {
            get => global::ABI.Microsoft.UI.Composition.ICompositionGradientBrushMethods.get_InterpolationSpace(_objRef_global__Microsoft_UI_Composition_ICompositionGradientBrush);
            set => global::ABI.Microsoft.UI.Composition.ICompositionGradientBrushMethods.set_InterpolationSpace(_objRef_global__Microsoft_UI_Composition_ICompositionGradientBrush, value);
        }

        public CompositionMappingMode MappingMode
        {
            get => global::ABI.Microsoft.UI.Composition.ICompositionGradientBrush2Methods.get_MappingMode(_objRef_global__Microsoft_UI_Composition_ICompositionGradientBrush2);
            set => global::ABI.Microsoft.UI.Composition.ICompositionGradientBrush2Methods.set_MappingMode(_objRef_global__Microsoft_UI_Composition_ICompositionGradientBrush2, value);
        }

        public global::System.Numerics.Vector2 Offset
        {
            get => global::ABI.Microsoft.UI.Composition.ICompositionGradientBrushMethods.get_Offset(_objRef_global__Microsoft_UI_Composition_ICompositionGradientBrush);
            set => global::ABI.Microsoft.UI.Composition.ICompositionGradientBrushMethods.set_Offset(_objRef_global__Microsoft_UI_Composition_ICompositionGradientBrush, value);
        }

        public float RotationAngle
        {
            get => global::ABI.Microsoft.UI.Composition.ICompositionGradientBrushMethods.get_RotationAngle(_objRef_global__Microsoft_UI_Composition_ICompositionGradientBrush);
            set => global::ABI.Microsoft.UI.Composition.ICompositionGradientBrushMethods.set_RotationAngle(_objRef_global__Microsoft_UI_Composition_ICompositionGradientBrush, value);
        }

        public float RotationAngleInDegrees
        {
            get => global::ABI.Microsoft.UI.Composition.ICompositionGradientBrushMethods.get_RotationAngleInDegrees(_objRef_global__Microsoft_UI_Composition_ICompositionGradientBrush);
            set => global::ABI.Microsoft.UI.Composition.ICompositionGradientBrushMethods.set_RotationAngleInDegrees(_objRef_global__Microsoft_UI_Composition_ICompositionGradientBrush, value);
        }

        public global::System.Numerics.Vector2 Scale
        {
            get => global::ABI.Microsoft.UI.Composition.ICompositionGradientBrushMethods.get_Scale(_objRef_global__Microsoft_UI_Composition_ICompositionGradientBrush);
            set => global::ABI.Microsoft.UI.Composition.ICompositionGradientBrushMethods.set_Scale(_objRef_global__Microsoft_UI_Composition_ICompositionGradientBrush, value);
        }

        public global::System.Numerics.Matrix3x2 TransformMatrix
        {
            get => global::ABI.Microsoft.UI.Composition.ICompositionGradientBrushMethods.get_TransformMatrix(_objRef_global__Microsoft_UI_Composition_ICompositionGradientBrush);
            set => global::ABI.Microsoft.UI.Composition.ICompositionGradientBrushMethods.set_TransformMatrix(_objRef_global__Microsoft_UI_Composition_ICompositionGradientBrush, value);
        }

        protected override bool IsOverridableInterface(Guid iid) => base.IsOverridableInterface(iid);

        global::System.Runtime.InteropServices.CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(ref Guid iid, out IntPtr ppv)
        {
            ppv = IntPtr.Zero;
            if (IsOverridableInterface(iid) || global::WinRT.Interop.IID.IID_IInspectable == iid)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
            }

            if (((IWinRTObject)this).NativeObject.TryAs(iid, out ppv) >= 0)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.Handled;
            }

            return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
        }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI")][global::WinRT.WinRTExposedType(typeof(global::WinRT.EnumTypeDetails<CompositionGradientExtendMode>))][global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.Foundation.WindowsAppSDKContract), 65536u)]
    public enum CompositionGradientExtendMode : int
    {
        Clamp = unchecked((int)0),
        Wrap = unchecked((int)0x1),
        Mirror = unchecked((int)0x2),
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI")]
    [global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Composition.CompositionGraphicsDevice))]
    [global::ABI.Microsoft.UI.Composition.CompositionGraphicsDeviceRcwFactory]
    [global::WinRT.ProjectedRuntimeClass(typeof(ICompositionGraphicsDevice))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.Foundation.WindowsAppSDKContract), 65536u)]
    public sealed class CompositionGraphicsDevice : CompositionObject, global::System.Runtime.InteropServices.ICustomQueryInterface, IWinRTObject, IEquatable<CompositionGraphicsDevice>
    {
        private IntPtr ThisPtr => _inner == null ? (((IWinRTObject)this).NativeObject).ThisPtr : _inner.ThisPtr;

        private readonly IObjectReference _inner = null;



        private IObjectReference _objRef_global__Microsoft_UI_Composition_ICompositionGraphicsDevice => _inner;
        private volatile IObjectReference ___objRef_global__Microsoft_UI_Composition_ICompositionGraphicsDevice2;
        private IObjectReference Make___objRef_global__Microsoft_UI_Composition_ICompositionGraphicsDevice2()
        {
            global::System.Threading.Interlocked.CompareExchange(ref ___objRef_global__Microsoft_UI_Composition_ICompositionGraphicsDevice2, ((IWinRTObject)this).NativeObject.As<IUnknownVftbl>(global::ABI.Microsoft.UI.Composition.ICompositionGraphicsDevice2Methods.IID), null);
            return ___objRef_global__Microsoft_UI_Composition_ICompositionGraphicsDevice2;
        }
        private IObjectReference _objRef_global__Microsoft_UI_Composition_ICompositionGraphicsDevice2 => ___objRef_global__Microsoft_UI_Composition_ICompositionGraphicsDevice2 ?? Make___objRef_global__Microsoft_UI_Composition_ICompositionGraphicsDevice2();

        private volatile IObjectReference ___objRef_global__Microsoft_UI_Composition_ICompositionGraphicsDevice3;
        private IObjectReference Make___objRef_global__Microsoft_UI_Composition_ICompositionGraphicsDevice3()
        {
            global::System.Threading.Interlocked.CompareExchange(ref ___objRef_global__Microsoft_UI_Composition_ICompositionGraphicsDevice3, ((IWinRTObject)this).NativeObject.As<IUnknownVftbl>(global::ABI.Microsoft.UI.Composition.ICompositionGraphicsDevice3Methods.IID), null);
            return ___objRef_global__Microsoft_UI_Composition_ICompositionGraphicsDevice3;
        }
        private IObjectReference _objRef_global__Microsoft_UI_Composition_ICompositionGraphicsDevice3 => ___objRef_global__Microsoft_UI_Composition_ICompositionGraphicsDevice3 ?? Make___objRef_global__Microsoft_UI_Composition_ICompositionGraphicsDevice3();

        private volatile IObjectReference ___objRef_global__Microsoft_UI_Composition_ICompositionGraphicsDevice4;
        private IObjectReference Make___objRef_global__Microsoft_UI_Composition_ICompositionGraphicsDevice4()
        {
            global::System.Threading.Interlocked.CompareExchange(ref ___objRef_global__Microsoft_UI_Composition_ICompositionGraphicsDevice4, ((IWinRTObject)this).NativeObject.As<IUnknownVftbl>(global::ABI.Microsoft.UI.Composition.ICompositionGraphicsDevice4Methods.IID), null);
            return ___objRef_global__Microsoft_UI_Composition_ICompositionGraphicsDevice4;
        }
        private IObjectReference _objRef_global__Microsoft_UI_Composition_ICompositionGraphicsDevice4 => ___objRef_global__Microsoft_UI_Composition_ICompositionGraphicsDevice4 ?? Make___objRef_global__Microsoft_UI_Composition_ICompositionGraphicsDevice4();



        public static new CompositionGraphicsDevice FromAbi(IntPtr thisPtr)
        {
            if (thisPtr == IntPtr.Zero) return null;
            return MarshalInspectable<CompositionGraphicsDevice>.FromAbi(thisPtr);
        }

        internal CompositionGraphicsDevice(IObjectReference objRef)
            : base(global::WinRT.DerivedComposed.Instance)

        {
            _inner = objRef.As(global::ABI.Microsoft.UI.Composition.ICompositionGraphicsDeviceMethods.IID);

        }


        public static bool operator ==(CompositionGraphicsDevice x, CompositionGraphicsDevice y) => (x?.ThisPtr ?? IntPtr.Zero) == (y?.ThisPtr ?? IntPtr.Zero);
        public static bool operator !=(CompositionGraphicsDevice x, CompositionGraphicsDevice y) => !(x == y);
        public bool Equals(CompositionGraphicsDevice other) => this == other;
        public override bool Equals(object obj) => obj is CompositionGraphicsDevice that && this == that;
        public override int GetHashCode() => ThisPtr.GetHashCode();


        bool IWinRTObject.HasUnwrappableNativeObject => true;
        IObjectReference IWinRTObject.NativeObject => _inner;

        private struct InterfaceTag<I>{};


        public CompositionDrawingSurface CreateDrawingSurface(global::Windows.Foundation.Size sizePixels, global::Microsoft.Graphics.DirectX.DirectXPixelFormat pixelFormat, global::Microsoft.Graphics.DirectX.DirectXAlphaMode alphaMode) => global::ABI.Microsoft.UI.Composition.ICompositionGraphicsDeviceMethods.CreateDrawingSurface(_objRef_global__Microsoft_UI_Composition_ICompositionGraphicsDevice, sizePixels, pixelFormat, alphaMode);

        public event global::Windows.Foundation.TypedEventHandler<CompositionGraphicsDevice, RenderingDeviceReplacedEventArgs> RenderingDeviceReplaced
        {
            add => global::ABI.Microsoft.UI.Composition.ICompositionGraphicsDeviceMethods.Get_RenderingDeviceReplaced2(_objRef_global__Microsoft_UI_Composition_ICompositionGraphicsDevice, (IWinRTObject)this).Subscribe(value);
            remove => global::ABI.Microsoft.UI.Composition.ICompositionGraphicsDeviceMethods.Get_RenderingDeviceReplaced2(_objRef_global__Microsoft_UI_Composition_ICompositionGraphicsDevice, (IWinRTObject)this).Unsubscribe(value);
        }

        public CompositionDrawingSurface CreateDrawingSurface2(global::Windows.Graphics.SizeInt32 sizePixels, global::Microsoft.Graphics.DirectX.DirectXPixelFormat pixelFormat, global::Microsoft.Graphics.DirectX.DirectXAlphaMode alphaMode) => global::ABI.Microsoft.UI.Composition.ICompositionGraphicsDevice2Methods.CreateDrawingSurface2(_objRef_global__Microsoft_UI_Composition_ICompositionGraphicsDevice2, sizePixels, pixelFormat, alphaMode);

        public CompositionVirtualDrawingSurface CreateVirtualDrawingSurface(global::Windows.Graphics.SizeInt32 sizePixels, global::Microsoft.Graphics.DirectX.DirectXPixelFormat pixelFormat, global::Microsoft.Graphics.DirectX.DirectXAlphaMode alphaMode) => global::ABI.Microsoft.UI.Composition.ICompositionGraphicsDevice2Methods.CreateVirtualDrawingSurface(_objRef_global__Microsoft_UI_Composition_ICompositionGraphicsDevice2, sizePixels, pixelFormat, alphaMode);

        public CompositionMipmapSurface CreateMipmapSurface(global::Windows.Graphics.SizeInt32 sizePixels, global::Microsoft.Graphics.DirectX.DirectXPixelFormat pixelFormat, global::Microsoft.Graphics.DirectX.DirectXAlphaMode alphaMode) => global::ABI.Microsoft.UI.Composition.ICompositionGraphicsDevice3Methods.CreateMipmapSurface(_objRef_global__Microsoft_UI_Composition_ICompositionGraphicsDevice3, sizePixels, pixelFormat, alphaMode);

        public void Trim() => global::ABI.Microsoft.UI.Composition.ICompositionGraphicsDevice3Methods.Trim(_objRef_global__Microsoft_UI_Composition_ICompositionGraphicsDevice3);

        public global::Windows.Foundation.IAsyncOperation<ICompositionSurface> CaptureAsync(Visual captureVisual, global::Windows.Graphics.SizeInt32 size, global::Microsoft.Graphics.DirectX.DirectXPixelFormat pixelFormat, global::Microsoft.Graphics.DirectX.DirectXAlphaMode alphaMode, float sdrBoost) => global::ABI.Microsoft.UI.Composition.ICompositionGraphicsDevice4Methods.CaptureAsync(_objRef_global__Microsoft_UI_Composition_ICompositionGraphicsDevice4, captureVisual, size, pixelFormat, alphaMode, sdrBoost);

        protected override bool IsOverridableInterface(Guid iid) => base.IsOverridableInterface(iid);

        global::System.Runtime.InteropServices.CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(ref Guid iid, out IntPtr ppv)
        {
            ppv = IntPtr.Zero;
            if (IsOverridableInterface(iid) || global::WinRT.Interop.IID.IID_IInspectable == iid)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
            }

            if (((IWinRTObject)this).NativeObject.TryAs(iid, out ppv) >= 0)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.Handled;
            }

            return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
        }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI")]
    [global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Composition.CompositionLight))]
    [global::ABI.Microsoft.UI.Composition.CompositionLightRcwFactory]
    [global::WinRT.ProjectedRuntimeClass(typeof(ICompositionLight))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.Foundation.WindowsAppSDKContract), 65536u)]
    public class CompositionLight : CompositionObject, global::System.Runtime.InteropServices.ICustomQueryInterface, IWinRTObject, IEquatable<CompositionLight>
    {
        private IntPtr ThisPtr => _inner == null ? (((IWinRTObject)this).NativeObject).ThisPtr : _inner.ThisPtr;

        private readonly IObjectReference _inner = null;




        private volatile IObjectReference ___objRef_global__Microsoft_UI_Composition_ICompositionLight;
        private IObjectReference Make___objRef_global__Microsoft_UI_Composition_ICompositionLight()
        {
            global::System.Threading.Interlocked.CompareExchange(ref ___objRef_global__Microsoft_UI_Composition_ICompositionLight, ((IWinRTObject)this).NativeObject.As<IUnknownVftbl>(global::ABI.Microsoft.UI.Composition.ICompositionLightMethods.IID), null);
            return ___objRef_global__Microsoft_UI_Composition_ICompositionLight;
        }
        private IObjectReference _objRef_global__Microsoft_UI_Composition_ICompositionLight => ___objRef_global__Microsoft_UI_Composition_ICompositionLight ?? Make___objRef_global__Microsoft_UI_Composition_ICompositionLight();

        private volatile IObjectReference ___objRef_global__Microsoft_UI_Composition_ICompositionLight2;
        private IObjectReference Make___objRef_global__Microsoft_UI_Composition_ICompositionLight2()
        {
            global::System.Threading.Interlocked.CompareExchange(ref ___objRef_global__Microsoft_UI_Composition_ICompositionLight2, ((IWinRTObject)this).NativeObject.As<IUnknownVftbl>(global::ABI.Microsoft.UI.Composition.ICompositionLight2Methods.IID), null);
            return ___objRef_global__Microsoft_UI_Composition_ICompositionLight2;
        }
        private IObjectReference _objRef_global__Microsoft_UI_Composition_ICompositionLight2 => ___objRef_global__Microsoft_UI_Composition_ICompositionLight2 ?? Make___objRef_global__Microsoft_UI_Composition_ICompositionLight2();

        private volatile IObjectReference ___objRef_global__Microsoft_UI_Composition_ICompositionLight3;
        private IObjectReference Make___objRef_global__Microsoft_UI_Composition_ICompositionLight3()
        {
            global::System.Threading.Interlocked.CompareExchange(ref ___objRef_global__Microsoft_UI_Composition_ICompositionLight3, ((IWinRTObject)this).NativeObject.As<IUnknownVftbl>(global::ABI.Microsoft.UI.Composition.ICompositionLight3Methods.IID), null);
            return ___objRef_global__Microsoft_UI_Composition_ICompositionLight3;
        }
        private IObjectReference _objRef_global__Microsoft_UI_Composition_ICompositionLight3 => ___objRef_global__Microsoft_UI_Composition_ICompositionLight3 ?? Make___objRef_global__Microsoft_UI_Composition_ICompositionLight3();



        private static class _ICompositionLightFactoryMethods
        {}

        private static volatile IObjectReference ___objRef_global__Microsoft_UI_Composition_ICompositionLightFactory;
        private static IObjectReference _objRef_global__Microsoft_UI_Composition_ICompositionLightFactory
        {
            get
            { 
                var factory = ___objRef_global__Microsoft_UI_Composition_ICompositionLightFactory;
                if (factory != null && factory.IsInCurrentContext)
                {
                    return factory;
                }
                else
                {
                    return ___objRef_global__Microsoft_UI_Composition_ICompositionLightFactory = ActivationFactory.Get("Microsoft.UI.Composition.CompositionLight", global::ABI.Microsoft.UI.Composition.ICompositionLightFactoryMethods.IID);
                }
            }
        }

        public static new CompositionLight FromAbi(IntPtr thisPtr)
        {
            if (thisPtr == IntPtr.Zero) return null;
            return MarshalInspectable<CompositionLight>.FromAbi(thisPtr);
        }

        protected internal CompositionLight(IObjectReference objRef)
            : base(global::WinRT.DerivedComposed.Instance)

        {
            _inner = objRef.As(global::ABI.Microsoft.UI.Composition.ICompositionLightMethods.IID);

        }


        public static bool operator ==(CompositionLight x, CompositionLight y) => (x?.ThisPtr ?? IntPtr.Zero) == (y?.ThisPtr ?? IntPtr.Zero);
        public static bool operator !=(CompositionLight x, CompositionLight y) => !(x == y);
        public bool Equals(CompositionLight other) => this == other;
        public override bool Equals(object obj) => obj is CompositionLight that && this == that;
        public override int GetHashCode() => ThisPtr.GetHashCode();


        protected CompositionLight(global::WinRT.DerivedComposed _):base(_)
        {

        }
        bool IWinRTObject.HasUnwrappableNativeObject => this.GetType() == typeof(CompositionLight);
        IObjectReference IWinRTObject.NativeObject => _inner;

        private struct InterfaceTag<I>{};


        public VisualUnorderedCollection ExclusionsFromTargets => global::ABI.Microsoft.UI.Composition.ICompositionLight2Methods.get_ExclusionsFromTargets(_objRef_global__Microsoft_UI_Composition_ICompositionLight2);

        public bool IsEnabled
        {
            get => global::ABI.Microsoft.UI.Composition.ICompositionLight3Methods.get_IsEnabled(_objRef_global__Microsoft_UI_Composition_ICompositionLight3);
            set => global::ABI.Microsoft.UI.Composition.ICompositionLight3Methods.set_IsEnabled(_objRef_global__Microsoft_UI_Composition_ICompositionLight3, value);
        }

        public VisualUnorderedCollection Targets => global::ABI.Microsoft.UI.Composition.ICompositionLightMethods.get_Targets(_objRef_global__Microsoft_UI_Composition_ICompositionLight);

        protected override bool IsOverridableInterface(Guid iid) => base.IsOverridableInterface(iid);

        global::System.Runtime.InteropServices.CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(ref Guid iid, out IntPtr ppv)
        {
            ppv = IntPtr.Zero;
            if (IsOverridableInterface(iid) || global::WinRT.Interop.IID.IID_IInspectable == iid)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
            }

            if (((IWinRTObject)this).NativeObject.TryAs(iid, out ppv) >= 0)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.Handled;
            }

            return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
        }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI")]
    [global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Composition.CompositionLineGeometry))]
    [global::ABI.Microsoft.UI.Composition.CompositionLineGeometryRcwFactory]
    [global::WinRT.ProjectedRuntimeClass(typeof(ICompositionLineGeometry))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.Foundation.WindowsAppSDKContract), 65536u)]
    public sealed class CompositionLineGeometry : CompositionGeometry, global::System.Runtime.InteropServices.ICustomQueryInterface, IWinRTObject, IEquatable<CompositionLineGeometry>
    {
        private IntPtr ThisPtr => _inner == null ? (((IWinRTObject)this).NativeObject).ThisPtr : _inner.ThisPtr;

        private readonly IObjectReference _inner = null;



        private IObjectReference _objRef_global__Microsoft_UI_Composition_ICompositionLineGeometry => _inner;


        public static new CompositionLineGeometry FromAbi(IntPtr thisPtr)
        {
            if (thisPtr == IntPtr.Zero) return null;
            return MarshalInspectable<CompositionLineGeometry>.FromAbi(thisPtr);
        }

        internal CompositionLineGeometry(IObjectReference objRef)
            : base(global::WinRT.DerivedComposed.Instance)

        {
            _inner = objRef.As(global::ABI.Microsoft.UI.Composition.ICompositionLineGeometryMethods.IID);

        }


        public static bool operator ==(CompositionLineGeometry x, CompositionLineGeometry y) => (x?.ThisPtr ?? IntPtr.Zero) == (y?.ThisPtr ?? IntPtr.Zero);
        public static bool operator !=(CompositionLineGeometry x, CompositionLineGeometry y) => !(x == y);
        public bool Equals(CompositionLineGeometry other) => this == other;
        public override bool Equals(object obj) => obj is CompositionLineGeometry that && this == that;
        public override int GetHashCode() => ThisPtr.GetHashCode();


        bool IWinRTObject.HasUnwrappableNativeObject => true;
        IObjectReference IWinRTObject.NativeObject => _inner;

        private struct InterfaceTag<I>{};


        public global::System.Numerics.Vector2 End
        {
            get => global::ABI.Microsoft.UI.Composition.ICompositionLineGeometryMethods.get_End(_objRef_global__Microsoft_UI_Composition_ICompositionLineGeometry);
            set => global::ABI.Microsoft.UI.Composition.ICompositionLineGeometryMethods.set_End(_objRef_global__Microsoft_UI_Composition_ICompositionLineGeometry, value);
        }

        public global::System.Numerics.Vector2 Start
        {
            get => global::ABI.Microsoft.UI.Composition.ICompositionLineGeometryMethods.get_Start(_objRef_global__Microsoft_UI_Composition_ICompositionLineGeometry);
            set => global::ABI.Microsoft.UI.Composition.ICompositionLineGeometryMethods.set_Start(_objRef_global__Microsoft_UI_Composition_ICompositionLineGeometry, value);
        }

        protected override bool IsOverridableInterface(Guid iid) => base.IsOverridableInterface(iid);

        global::System.Runtime.InteropServices.CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(ref Guid iid, out IntPtr ppv)
        {
            ppv = IntPtr.Zero;
            if (IsOverridableInterface(iid) || global::WinRT.Interop.IID.IID_IInspectable == iid)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
            }

            if (((IWinRTObject)this).NativeObject.TryAs(iid, out ppv) >= 0)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.Handled;
            }

            return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
        }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI")]
    [global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Composition.CompositionLinearGradientBrush))]
    [global::ABI.Microsoft.UI.Composition.CompositionLinearGradientBrushRcwFactory]
    [global::WinRT.ProjectedRuntimeClass(typeof(ICompositionLinearGradientBrush))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.Foundation.WindowsAppSDKContract), 65536u)]
    public sealed class CompositionLinearGradientBrush : CompositionGradientBrush, global::System.Runtime.InteropServices.ICustomQueryInterface, IWinRTObject, IEquatable<CompositionLinearGradientBrush>
    {
        private IntPtr ThisPtr => _inner == null ? (((IWinRTObject)this).NativeObject).ThisPtr : _inner.ThisPtr;

        private readonly IObjectReference _inner = null;



        private IObjectReference _objRef_global__Microsoft_UI_Composition_ICompositionLinearGradientBrush => _inner;


        public static new CompositionLinearGradientBrush FromAbi(IntPtr thisPtr)
        {
            if (thisPtr == IntPtr.Zero) return null;
            return MarshalInspectable<CompositionLinearGradientBrush>.FromAbi(thisPtr);
        }

        internal CompositionLinearGradientBrush(IObjectReference objRef)
            : base(global::WinRT.DerivedComposed.Instance)

        {
            _inner = objRef.As(global::ABI.Microsoft.UI.Composition.ICompositionLinearGradientBrushMethods.IID);

        }


        public static bool operator ==(CompositionLinearGradientBrush x, CompositionLinearGradientBrush y) => (x?.ThisPtr ?? IntPtr.Zero) == (y?.ThisPtr ?? IntPtr.Zero);
        public static bool operator !=(CompositionLinearGradientBrush x, CompositionLinearGradientBrush y) => !(x == y);
        public bool Equals(CompositionLinearGradientBrush other) => this == other;
        public override bool Equals(object obj) => obj is CompositionLinearGradientBrush that && this == that;
        public override int GetHashCode() => ThisPtr.GetHashCode();


        bool IWinRTObject.HasUnwrappableNativeObject => true;
        IObjectReference IWinRTObject.NativeObject => _inner;

        private struct InterfaceTag<I>{};


        public global::System.Numerics.Vector2 EndPoint
        {
            get => global::ABI.Microsoft.UI.Composition.ICompositionLinearGradientBrushMethods.get_EndPoint(_objRef_global__Microsoft_UI_Composition_ICompositionLinearGradientBrush);
            set => global::ABI.Microsoft.UI.Composition.ICompositionLinearGradientBrushMethods.set_EndPoint(_objRef_global__Microsoft_UI_Composition_ICompositionLinearGradientBrush, value);
        }

        public global::System.Numerics.Vector2 StartPoint
        {
            get => global::ABI.Microsoft.UI.Composition.ICompositionLinearGradientBrushMethods.get_StartPoint(_objRef_global__Microsoft_UI_Composition_ICompositionLinearGradientBrush);
            set => global::ABI.Microsoft.UI.Composition.ICompositionLinearGradientBrushMethods.set_StartPoint(_objRef_global__Microsoft_UI_Composition_ICompositionLinearGradientBrush, value);
        }

        protected override bool IsOverridableInterface(Guid iid) => base.IsOverridableInterface(iid);

        global::System.Runtime.InteropServices.CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(ref Guid iid, out IntPtr ppv)
        {
            ppv = IntPtr.Zero;
            if (IsOverridableInterface(iid) || global::WinRT.Interop.IID.IID_IInspectable == iid)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
            }

            if (((IWinRTObject)this).NativeObject.TryAs(iid, out ppv) >= 0)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.Handled;
            }

            return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
        }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI")][global::WinRT.WinRTExposedType(typeof(global::WinRT.EnumTypeDetails<CompositionMappingMode>))][global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.Foundation.WindowsAppSDKContract), 65536u)]
    public enum CompositionMappingMode : int
    {
        Absolute = unchecked((int)0),
        Relative = unchecked((int)0x1),
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI")]
    [global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Composition.CompositionMaskBrush))]
    [global::ABI.Microsoft.UI.Composition.CompositionMaskBrushRcwFactory]
    [global::WinRT.ProjectedRuntimeClass(typeof(ICompositionMaskBrush))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.Foundation.WindowsAppSDKContract), 65536u)]
    public sealed class CompositionMaskBrush : CompositionBrush, global::System.Runtime.InteropServices.ICustomQueryInterface, IWinRTObject, IEquatable<CompositionMaskBrush>
    {
        private IntPtr ThisPtr => _inner == null ? (((IWinRTObject)this).NativeObject).ThisPtr : _inner.ThisPtr;

        private readonly IObjectReference _inner = null;



        private IObjectReference _objRef_global__Microsoft_UI_Composition_ICompositionMaskBrush => _inner;


        public static new CompositionMaskBrush FromAbi(IntPtr thisPtr)
        {
            if (thisPtr == IntPtr.Zero) return null;
            return MarshalInspectable<CompositionMaskBrush>.FromAbi(thisPtr);
        }

        internal CompositionMaskBrush(IObjectReference objRef)
            : base(global::WinRT.DerivedComposed.Instance)

        {
            _inner = objRef.As(global::ABI.Microsoft.UI.Composition.ICompositionMaskBrushMethods.IID);

        }


        public static bool operator ==(CompositionMaskBrush x, CompositionMaskBrush y) => (x?.ThisPtr ?? IntPtr.Zero) == (y?.ThisPtr ?? IntPtr.Zero);
        public static bool operator !=(CompositionMaskBrush x, CompositionMaskBrush y) => !(x == y);
        public bool Equals(CompositionMaskBrush other) => this == other;
        public override bool Equals(object obj) => obj is CompositionMaskBrush that && this == that;
        public override int GetHashCode() => ThisPtr.GetHashCode();


        bool IWinRTObject.HasUnwrappableNativeObject => true;
        IObjectReference IWinRTObject.NativeObject => _inner;

        private struct InterfaceTag<I>{};


        public CompositionBrush Mask
        {
            get => global::ABI.Microsoft.UI.Composition.ICompositionMaskBrushMethods.get_Mask(_objRef_global__Microsoft_UI_Composition_ICompositionMaskBrush);
            set => global::ABI.Microsoft.UI.Composition.ICompositionMaskBrushMethods.set_Mask(_objRef_global__Microsoft_UI_Composition_ICompositionMaskBrush, value);
        }

        public CompositionBrush Source
        {
            get => global::ABI.Microsoft.UI.Composition.ICompositionMaskBrushMethods.get_Source(_objRef_global__Microsoft_UI_Composition_ICompositionMaskBrush);
            set => global::ABI.Microsoft.UI.Composition.ICompositionMaskBrushMethods.set_Source(_objRef_global__Microsoft_UI_Composition_ICompositionMaskBrush, value);
        }

        protected override bool IsOverridableInterface(Guid iid) => base.IsOverridableInterface(iid);

        global::System.Runtime.InteropServices.CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(ref Guid iid, out IntPtr ppv)
        {
            ppv = IntPtr.Zero;
            if (IsOverridableInterface(iid) || global::WinRT.Interop.IID.IID_IInspectable == iid)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
            }

            if (((IWinRTObject)this).NativeObject.TryAs(iid, out ppv) >= 0)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.Handled;
            }

            return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
        }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI")]
    [global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Composition.CompositionMipmapSurface))]
    [global::ABI.Microsoft.UI.Composition.CompositionMipmapSurfaceRcwFactory]
    [global::WinRT.ProjectedRuntimeClass(typeof(ICompositionMipmapSurface))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.Foundation.WindowsAppSDKContract), 65536u)]
    public sealed class CompositionMipmapSurface : CompositionObject, ICompositionSurface, global::System.Runtime.InteropServices.ICustomQueryInterface, IWinRTObject, IEquatable<CompositionMipmapSurface>
    {
        private IntPtr ThisPtr => _inner == null ? (((IWinRTObject)this).NativeObject).ThisPtr : _inner.ThisPtr;

        private readonly IObjectReference _inner = null;



        private IObjectReference _objRef_global__Microsoft_UI_Composition_ICompositionMipmapSurface => _inner;
        private volatile IObjectReference ___objRef_global__Microsoft_UI_Composition_ICompositionSurface;
        private IObjectReference Make___objRef_global__Microsoft_UI_Composition_ICompositionSurface()
        {
            global::System.Threading.Interlocked.CompareExchange(ref ___objRef_global__Microsoft_UI_Composition_ICompositionSurface, ((IWinRTObject)this).NativeObject.As<IUnknownVftbl>(global::ABI.Microsoft.UI.Composition.ICompositionSurfaceMethods.IID), null);
            return ___objRef_global__Microsoft_UI_Composition_ICompositionSurface;
        }
        private IObjectReference _objRef_global__Microsoft_UI_Composition_ICompositionSurface => ___objRef_global__Microsoft_UI_Composition_ICompositionSurface ?? Make___objRef_global__Microsoft_UI_Composition_ICompositionSurface();



        public static new CompositionMipmapSurface FromAbi(IntPtr thisPtr)
        {
            if (thisPtr == IntPtr.Zero) return null;
            return MarshalInspectable<CompositionMipmapSurface>.FromAbi(thisPtr);
        }

        internal CompositionMipmapSurface(IObjectReference objRef)
            : base(global::WinRT.DerivedComposed.Instance)

        {
            _inner = objRef.As(global::ABI.Microsoft.UI.Composition.ICompositionMipmapSurfaceMethods.IID);

        }


        public static bool operator ==(CompositionMipmapSurface x, CompositionMipmapSurface y) => (x?.ThisPtr ?? IntPtr.Zero) == (y?.ThisPtr ?? IntPtr.Zero);
        public static bool operator !=(CompositionMipmapSurface x, CompositionMipmapSurface y) => !(x == y);
        public bool Equals(CompositionMipmapSurface other) => this == other;
        public override bool Equals(object obj) => obj is CompositionMipmapSurface that && this == that;
        public override int GetHashCode() => ThisPtr.GetHashCode();


        bool IWinRTObject.HasUnwrappableNativeObject => true;
        IObjectReference IWinRTObject.NativeObject => _inner;

        private struct InterfaceTag<I>{};


        public CompositionDrawingSurface GetDrawingSurfaceForLevel(uint level) => global::ABI.Microsoft.UI.Composition.ICompositionMipmapSurfaceMethods.GetDrawingSurfaceForLevel(_objRef_global__Microsoft_UI_Composition_ICompositionMipmapSurface, level);

        public global::Microsoft.Graphics.DirectX.DirectXAlphaMode AlphaMode => global::ABI.Microsoft.UI.Composition.ICompositionMipmapSurfaceMethods.get_AlphaMode(_objRef_global__Microsoft_UI_Composition_ICompositionMipmapSurface);

        public uint LevelCount => global::ABI.Microsoft.UI.Composition.ICompositionMipmapSurfaceMethods.get_LevelCount(_objRef_global__Microsoft_UI_Composition_ICompositionMipmapSurface);

        public global::Microsoft.Graphics.DirectX.DirectXPixelFormat PixelFormat => global::ABI.Microsoft.UI.Composition.ICompositionMipmapSurfaceMethods.get_PixelFormat(_objRef_global__Microsoft_UI_Composition_ICompositionMipmapSurface);

        public global::Windows.Graphics.SizeInt32 SizeInt32 => global::ABI.Microsoft.UI.Composition.ICompositionMipmapSurfaceMethods.get_SizeInt32(_objRef_global__Microsoft_UI_Composition_ICompositionMipmapSurface);

        protected override bool IsOverridableInterface(Guid iid) => base.IsOverridableInterface(iid);

        global::System.Runtime.InteropServices.CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(ref Guid iid, out IntPtr ppv)
        {
            ppv = IntPtr.Zero;
            if (IsOverridableInterface(iid) || global::WinRT.Interop.IID.IID_IInspectable == iid)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
            }

            if (((IWinRTObject)this).NativeObject.TryAs(iid, out ppv) >= 0)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.Handled;
            }

            return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
        }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI")]
    [global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Composition.CompositionNineGridBrush))]
    [global::ABI.Microsoft.UI.Composition.CompositionNineGridBrushRcwFactory]
    [global::WinRT.ProjectedRuntimeClass(typeof(ICompositionNineGridBrush))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.Foundation.WindowsAppSDKContract), 65536u)]
    public sealed class CompositionNineGridBrush : CompositionBrush, global::System.Runtime.InteropServices.ICustomQueryInterface, IWinRTObject, IEquatable<CompositionNineGridBrush>
    {
        private IntPtr ThisPtr => _inner == null ? (((IWinRTObject)this).NativeObject).ThisPtr : _inner.ThisPtr;

        private readonly IObjectReference _inner = null;



        private IObjectReference _objRef_global__Microsoft_UI_Composition_ICompositionNineGridBrush => _inner;


        public static new CompositionNineGridBrush FromAbi(IntPtr thisPtr)
        {
            if (thisPtr == IntPtr.Zero) return null;
            return MarshalInspectable<CompositionNineGridBrush>.FromAbi(thisPtr);
        }

        internal CompositionNineGridBrush(IObjectReference objRef)
            : base(global::WinRT.DerivedComposed.Instance)

        {
            _inner = objRef.As(global::ABI.Microsoft.UI.Composition.ICompositionNineGridBrushMethods.IID);

        }


        public static bool operator ==(CompositionNineGridBrush x, CompositionNineGridBrush y) => (x?.ThisPtr ?? IntPtr.Zero) == (y?.ThisPtr ?? IntPtr.Zero);
        public static bool operator !=(CompositionNineGridBrush x, CompositionNineGridBrush y) => !(x == y);
        public bool Equals(CompositionNineGridBrush other) => this == other;
        public override bool Equals(object obj) => obj is CompositionNineGridBrush that && this == that;
        public override int GetHashCode() => ThisPtr.GetHashCode();


        bool IWinRTObject.HasUnwrappableNativeObject => true;
        IObjectReference IWinRTObject.NativeObject => _inner;

        private struct InterfaceTag<I>{};


        public void SetInsets(float inset) => global::ABI.Microsoft.UI.Composition.ICompositionNineGridBrushMethods.SetInsets(_objRef_global__Microsoft_UI_Composition_ICompositionNineGridBrush, inset);

        public void SetInsets(float left, float top, float right, float bottom) => global::ABI.Microsoft.UI.Composition.ICompositionNineGridBrushMethods.SetInsets(_objRef_global__Microsoft_UI_Composition_ICompositionNineGridBrush, left, top, right, bottom);

        public void SetInsetScales(float scale) => global::ABI.Microsoft.UI.Composition.ICompositionNineGridBrushMethods.SetInsetScales(_objRef_global__Microsoft_UI_Composition_ICompositionNineGridBrush, scale);

        public void SetInsetScales(float left, float top, float right, float bottom) => global::ABI.Microsoft.UI.Composition.ICompositionNineGridBrushMethods.SetInsetScales(_objRef_global__Microsoft_UI_Composition_ICompositionNineGridBrush, left, top, right, bottom);

        public float BottomInset
        {
            get => global::ABI.Microsoft.UI.Composition.ICompositionNineGridBrushMethods.get_BottomInset(_objRef_global__Microsoft_UI_Composition_ICompositionNineGridBrush);
            set => global::ABI.Microsoft.UI.Composition.ICompositionNineGridBrushMethods.set_BottomInset(_objRef_global__Microsoft_UI_Composition_ICompositionNineGridBrush, value);
        }

        public float BottomInsetScale
        {
            get => global::ABI.Microsoft.UI.Composition.ICompositionNineGridBrushMethods.get_BottomInsetScale(_objRef_global__Microsoft_UI_Composition_ICompositionNineGridBrush);
            set => global::ABI.Microsoft.UI.Composition.ICompositionNineGridBrushMethods.set_BottomInsetScale(_objRef_global__Microsoft_UI_Composition_ICompositionNineGridBrush, value);
        }

        public bool IsCenterHollow
        {
            get => global::ABI.Microsoft.UI.Composition.ICompositionNineGridBrushMethods.get_IsCenterHollow(_objRef_global__Microsoft_UI_Composition_ICompositionNineGridBrush);
            set => global::ABI.Microsoft.UI.Composition.ICompositionNineGridBrushMethods.set_IsCenterHollow(_objRef_global__Microsoft_UI_Composition_ICompositionNineGridBrush, value);
        }

        public float LeftInset
        {
            get => global::ABI.Microsoft.UI.Composition.ICompositionNineGridBrushMethods.get_LeftInset(_objRef_global__Microsoft_UI_Composition_ICompositionNineGridBrush);
            set => global::ABI.Microsoft.UI.Composition.ICompositionNineGridBrushMethods.set_LeftInset(_objRef_global__Microsoft_UI_Composition_ICompositionNineGridBrush, value);
        }

        public float LeftInsetScale
        {
            get => global::ABI.Microsoft.UI.Composition.ICompositionNineGridBrushMethods.get_LeftInsetScale(_objRef_global__Microsoft_UI_Composition_ICompositionNineGridBrush);
            set => global::ABI.Microsoft.UI.Composition.ICompositionNineGridBrushMethods.set_LeftInsetScale(_objRef_global__Microsoft_UI_Composition_ICompositionNineGridBrush, value);
        }

        public float RightInset
        {
            get => global::ABI.Microsoft.UI.Composition.ICompositionNineGridBrushMethods.get_RightInset(_objRef_global__Microsoft_UI_Composition_ICompositionNineGridBrush);
            set => global::ABI.Microsoft.UI.Composition.ICompositionNineGridBrushMethods.set_RightInset(_objRef_global__Microsoft_UI_Composition_ICompositionNineGridBrush, value);
        }

        public float RightInsetScale
        {
            get => global::ABI.Microsoft.UI.Composition.ICompositionNineGridBrushMethods.get_RightInsetScale(_objRef_global__Microsoft_UI_Composition_ICompositionNineGridBrush);
            set => global::ABI.Microsoft.UI.Composition.ICompositionNineGridBrushMethods.set_RightInsetScale(_objRef_global__Microsoft_UI_Composition_ICompositionNineGridBrush, value);
        }

        public CompositionBrush Source
        {
            get => global::ABI.Microsoft.UI.Composition.ICompositionNineGridBrushMethods.get_Source(_objRef_global__Microsoft_UI_Composition_ICompositionNineGridBrush);
            set => global::ABI.Microsoft.UI.Composition.ICompositionNineGridBrushMethods.set_Source(_objRef_global__Microsoft_UI_Composition_ICompositionNineGridBrush, value);
        }

        public float TopInset
        {
            get => global::ABI.Microsoft.UI.Composition.ICompositionNineGridBrushMethods.get_TopInset(_objRef_global__Microsoft_UI_Composition_ICompositionNineGridBrush);
            set => global::ABI.Microsoft.UI.Composition.ICompositionNineGridBrushMethods.set_TopInset(_objRef_global__Microsoft_UI_Composition_ICompositionNineGridBrush, value);
        }

        public float TopInsetScale
        {
            get => global::ABI.Microsoft.UI.Composition.ICompositionNineGridBrushMethods.get_TopInsetScale(_objRef_global__Microsoft_UI_Composition_ICompositionNineGridBrush);
            set => global::ABI.Microsoft.UI.Composition.ICompositionNineGridBrushMethods.set_TopInsetScale(_objRef_global__Microsoft_UI_Composition_ICompositionNineGridBrush, value);
        }

        protected override bool IsOverridableInterface(Guid iid) => base.IsOverridableInterface(iid);

        global::System.Runtime.InteropServices.CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(ref Guid iid, out IntPtr ppv)
        {
            ppv = IntPtr.Zero;
            if (IsOverridableInterface(iid) || global::WinRT.Interop.IID.IID_IInspectable == iid)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
            }

            if (((IWinRTObject)this).NativeObject.TryAs(iid, out ppv) >= 0)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.Handled;
            }

            return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
        }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI")]
    [global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Composition.CompositionNotificationDeferral))]
    [global::ABI.Microsoft.UI.Composition.CompositionNotificationDeferralRcwFactory]
    [global::WinRT.ProjectedRuntimeClass(typeof(ICompositionNotificationDeferral))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.Foundation.WindowsAppSDKContract), 65543u)]
    [global::Windows.Foundation.Metadata.Experimental]
    public sealed class CompositionNotificationDeferral : global::System.Runtime.InteropServices.ICustomQueryInterface, IWinRTObject, IEquatable<CompositionNotificationDeferral>
    {
        private IntPtr ThisPtr => _inner == null ? (((IWinRTObject)this).NativeObject).ThisPtr : _inner.ThisPtr;

        private readonly IObjectReference _inner = null;



        private IObjectReference _objRef_global__Microsoft_UI_Composition_ICompositionNotificationDeferral => _inner;


        public static CompositionNotificationDeferral FromAbi(IntPtr thisPtr)
        {
            if (thisPtr == IntPtr.Zero) return null;
            return MarshalInspectable<CompositionNotificationDeferral>.FromAbi(thisPtr);
        }

        internal CompositionNotificationDeferral(IObjectReference objRef)
        {
            _inner = objRef.As(global::ABI.Microsoft.UI.Composition.ICompositionNotificationDeferralMethods.IID);

        }


        public static bool operator ==(CompositionNotificationDeferral x, CompositionNotificationDeferral y) => (x?.ThisPtr ?? IntPtr.Zero) == (y?.ThisPtr ?? IntPtr.Zero);
        public static bool operator !=(CompositionNotificationDeferral x, CompositionNotificationDeferral y) => !(x == y);
        public bool Equals(CompositionNotificationDeferral other) => this == other;
        public override bool Equals(object obj) => obj is CompositionNotificationDeferral that && this == that;
        public override int GetHashCode() => ThisPtr.GetHashCode();


        bool IWinRTObject.HasUnwrappableNativeObject => true;
        IObjectReference IWinRTObject.NativeObject => _inner;
        private volatile global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> _queryInterfaceCache;
        private global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> MakeQueryInterfaceCache()
        {
            global::System.Threading.Interlocked.CompareExchange(ref _queryInterfaceCache, new global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference>(), null); 
            return _queryInterfaceCache;
        }
        global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> IWinRTObject.QueryInterfaceCache => _queryInterfaceCache ?? MakeQueryInterfaceCache();
        private volatile global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> _additionalTypeData;
        private global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> MakeAdditionalTypeData()
        {
            global::System.Threading.Interlocked.CompareExchange(ref _additionalTypeData, new global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object>(), null); 
            return _additionalTypeData;
        }
        global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> IWinRTObject.AdditionalTypeData => _additionalTypeData ?? MakeAdditionalTypeData();

        private struct InterfaceTag<I>{};


        public void Complete() => global::ABI.Microsoft.UI.Composition.ICompositionNotificationDeferralMethods.Complete(_objRef_global__Microsoft_UI_Composition_ICompositionNotificationDeferral);

        private bool IsOverridableInterface(Guid iid) => false;

        global::System.Runtime.InteropServices.CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(ref Guid iid, out IntPtr ppv)
        {
            ppv = IntPtr.Zero;
            if (IsOverridableInterface(iid) || global::WinRT.Interop.IID.IID_IInspectable == iid)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
            }

            if (((IWinRTObject)this).NativeObject.TryAs(iid, out ppv) >= 0)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.Handled;
            }

            return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
        }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI")]
    [global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Composition.CompositionObject))]
    [global::ABI.Microsoft.UI.Composition.CompositionObjectRcwFactory]
    [global::WinRT.ProjectedRuntimeClass(typeof(ICompositionObject))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.Foundation.WindowsAppSDKContract), 65536u)]
    public class CompositionObject : global::System.IDisposable, IAnimationObject, global::System.Runtime.InteropServices.ICustomQueryInterface, IWinRTObject, IEquatable<CompositionObject>
    {
        private IntPtr ThisPtr => _inner == null ? (((IWinRTObject)this).NativeObject).ThisPtr : _inner.ThisPtr;

        private readonly IObjectReference _inner = null;




        private volatile IObjectReference ___objRef_global__Microsoft_UI_Composition_ICompositionObject;
        private IObjectReference Make___objRef_global__Microsoft_UI_Composition_ICompositionObject()
        {
            global::System.Threading.Interlocked.CompareExchange(ref ___objRef_global__Microsoft_UI_Composition_ICompositionObject, ((IWinRTObject)this).NativeObject.As<IUnknownVftbl>(global::ABI.Microsoft.UI.Composition.ICompositionObjectMethods.IID), null);
            return ___objRef_global__Microsoft_UI_Composition_ICompositionObject;
        }
        private IObjectReference _objRef_global__Microsoft_UI_Composition_ICompositionObject => ___objRef_global__Microsoft_UI_Composition_ICompositionObject ?? Make___objRef_global__Microsoft_UI_Composition_ICompositionObject();

        private volatile IObjectReference ___objRef_global__Microsoft_UI_Composition_ICompositionObject2;
        private IObjectReference Make___objRef_global__Microsoft_UI_Composition_ICompositionObject2()
        {
            global::System.Threading.Interlocked.CompareExchange(ref ___objRef_global__Microsoft_UI_Composition_ICompositionObject2, ((IWinRTObject)this).NativeObject.As<IUnknownVftbl>(global::ABI.Microsoft.UI.Composition.ICompositionObject2Methods.IID), null);
            return ___objRef_global__Microsoft_UI_Composition_ICompositionObject2;
        }
        private IObjectReference _objRef_global__Microsoft_UI_Composition_ICompositionObject2 => ___objRef_global__Microsoft_UI_Composition_ICompositionObject2 ?? Make___objRef_global__Microsoft_UI_Composition_ICompositionObject2();

        private volatile IObjectReference ___objRef_global__Microsoft_UI_Composition_ICompositionObject3;
        private IObjectReference Make___objRef_global__Microsoft_UI_Composition_ICompositionObject3()
        {
            global::System.Threading.Interlocked.CompareExchange(ref ___objRef_global__Microsoft_UI_Composition_ICompositionObject3, ((IWinRTObject)this).NativeObject.As<IUnknownVftbl>(global::ABI.Microsoft.UI.Composition.ICompositionObject3Methods.IID), null);
            return ___objRef_global__Microsoft_UI_Composition_ICompositionObject3;
        }
        private IObjectReference _objRef_global__Microsoft_UI_Composition_ICompositionObject3 => ___objRef_global__Microsoft_UI_Composition_ICompositionObject3 ?? Make___objRef_global__Microsoft_UI_Composition_ICompositionObject3();

        private volatile IObjectReference ___objRef_global__Microsoft_UI_Composition_ICompositionObject4;
        private IObjectReference Make___objRef_global__Microsoft_UI_Composition_ICompositionObject4()
        {
            global::System.Threading.Interlocked.CompareExchange(ref ___objRef_global__Microsoft_UI_Composition_ICompositionObject4, ((IWinRTObject)this).NativeObject.As<IUnknownVftbl>(global::ABI.Microsoft.UI.Composition.ICompositionObject4Methods.IID), null);
            return ___objRef_global__Microsoft_UI_Composition_ICompositionObject4;
        }
        private IObjectReference _objRef_global__Microsoft_UI_Composition_ICompositionObject4 => ___objRef_global__Microsoft_UI_Composition_ICompositionObject4 ?? Make___objRef_global__Microsoft_UI_Composition_ICompositionObject4();

        private volatile IObjectReference ___objRef_global__Microsoft_UI_Composition_ICompositionObject5;
        private IObjectReference Make___objRef_global__Microsoft_UI_Composition_ICompositionObject5()
        {
            global::System.Threading.Interlocked.CompareExchange(ref ___objRef_global__Microsoft_UI_Composition_ICompositionObject5, ((IWinRTObject)this).NativeObject.As<IUnknownVftbl>(global::ABI.Microsoft.UI.Composition.ICompositionObject5Methods.IID), null);
            return ___objRef_global__Microsoft_UI_Composition_ICompositionObject5;
        }
        private IObjectReference _objRef_global__Microsoft_UI_Composition_ICompositionObject5 => ___objRef_global__Microsoft_UI_Composition_ICompositionObject5 ?? Make___objRef_global__Microsoft_UI_Composition_ICompositionObject5();

        private volatile IObjectReference ___objRef_global__System_IDisposable;
        private IObjectReference Make___objRef_global__System_IDisposable()
        {
            global::System.Threading.Interlocked.CompareExchange(ref ___objRef_global__System_IDisposable, ((IWinRTObject)this).NativeObject.As<IUnknownVftbl>(global::ABI.System.IDisposableMethods.IID), null);
            return ___objRef_global__System_IDisposable;
        }
        private IObjectReference _objRef_global__System_IDisposable => ___objRef_global__System_IDisposable ?? Make___objRef_global__System_IDisposable();

        private volatile IObjectReference ___objRef_global__Microsoft_UI_Composition_IAnimationObject;
        private IObjectReference Make___objRef_global__Microsoft_UI_Composition_IAnimationObject()
        {
            global::System.Threading.Interlocked.CompareExchange(ref ___objRef_global__Microsoft_UI_Composition_IAnimationObject, ((IWinRTObject)this).NativeObject.As<IUnknownVftbl>(global::ABI.Microsoft.UI.Composition.IAnimationObjectMethods.IID), null);
            return ___objRef_global__Microsoft_UI_Composition_IAnimationObject;
        }
        private IObjectReference _objRef_global__Microsoft_UI_Composition_IAnimationObject => ___objRef_global__Microsoft_UI_Composition_IAnimationObject ?? Make___objRef_global__Microsoft_UI_Composition_IAnimationObject();



        private static class _ICompositionObjectFactoryMethods
        {}

        private static volatile IObjectReference ___objRef_global__Microsoft_UI_Composition_ICompositionObjectFactory;
        private static IObjectReference _objRef_global__Microsoft_UI_Composition_ICompositionObjectFactory
        {
            get
            { 
                var factory = ___objRef_global__Microsoft_UI_Composition_ICompositionObjectFactory;
                if (factory != null && factory.IsInCurrentContext)
                {
                    return factory;
                }
                else
                {
                    return ___objRef_global__Microsoft_UI_Composition_ICompositionObjectFactory = ActivationFactory.Get("Microsoft.UI.Composition.CompositionObject", global::ABI.Microsoft.UI.Composition.ICompositionObjectFactoryMethods.IID);
                }
            }
        }

        public static I As<I>() => ActivationFactory.Get("Microsoft.UI.Composition.CompositionObject").AsInterface<I>();

        private static volatile IObjectReference ___objRef_global__Microsoft_UI_Composition_ICompositionObjectStatics;
        private static IObjectReference _objRef_global__Microsoft_UI_Composition_ICompositionObjectStatics
        {
            get
            { 
                var factory = ___objRef_global__Microsoft_UI_Composition_ICompositionObjectStatics;
                if (factory != null && factory.IsInCurrentContext)
                {
                    return factory;
                }
                else
                {
                    return ___objRef_global__Microsoft_UI_Composition_ICompositionObjectStatics = ActivationFactory.Get("Microsoft.UI.Composition.CompositionObject", global::ABI.Microsoft.UI.Composition.ICompositionObjectStaticsMethods.IID);
                }
            }
        }

        public static void StartAnimationWithIAnimationObject(IAnimationObject target, string propertyName, CompositionAnimation animation) => global::ABI.Microsoft.UI.Composition.ICompositionObjectStaticsMethods.StartAnimationWithIAnimationObject(_objRef_global__Microsoft_UI_Composition_ICompositionObjectStatics, target, propertyName, animation);

        public static void StartAnimationGroupWithIAnimationObject(IAnimationObject target, ICompositionAnimationBase animation) => global::ABI.Microsoft.UI.Composition.ICompositionObjectStaticsMethods.StartAnimationGroupWithIAnimationObject(_objRef_global__Microsoft_UI_Composition_ICompositionObjectStatics, target, animation);

        public static CompositionObject FromAbi(IntPtr thisPtr)
        {
            if (thisPtr == IntPtr.Zero) return null;
            return MarshalInspectable<CompositionObject>.FromAbi(thisPtr);
        }

        protected internal CompositionObject(IObjectReference objRef)
        {
            _inner = objRef.As(global::ABI.Microsoft.UI.Composition.ICompositionObjectMethods.IID);

        }


        public static bool operator ==(CompositionObject x, CompositionObject y) => (x?.ThisPtr ?? IntPtr.Zero) == (y?.ThisPtr ?? IntPtr.Zero);
        public static bool operator !=(CompositionObject x, CompositionObject y) => !(x == y);
        public bool Equals(CompositionObject other) => this == other;
        public override bool Equals(object obj) => obj is CompositionObject that && this == that;
        public override int GetHashCode() => ThisPtr.GetHashCode();


        protected CompositionObject(global::WinRT.DerivedComposed _)
        {

        }
        bool IWinRTObject.HasUnwrappableNativeObject => this.GetType() == typeof(CompositionObject);
        IObjectReference IWinRTObject.NativeObject => _inner;
        private volatile global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> _queryInterfaceCache;
        private global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> MakeQueryInterfaceCache()
        {
            global::System.Threading.Interlocked.CompareExchange(ref _queryInterfaceCache, new global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference>(), null); 
            return _queryInterfaceCache;
        }
        global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> IWinRTObject.QueryInterfaceCache => _queryInterfaceCache ?? MakeQueryInterfaceCache();
        private volatile global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> _additionalTypeData;
        private global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> MakeAdditionalTypeData()
        {
            global::System.Threading.Interlocked.CompareExchange(ref _additionalTypeData, new global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object>(), null); 
            return _additionalTypeData;
        }
        global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> IWinRTObject.AdditionalTypeData => _additionalTypeData ?? MakeAdditionalTypeData();

        private struct InterfaceTag<I>{};


        public void StartAnimation(string propertyName, CompositionAnimation animation) => global::ABI.Microsoft.UI.Composition.ICompositionObjectMethods.StartAnimation(_objRef_global__Microsoft_UI_Composition_ICompositionObject, propertyName, animation);

        public void StopAnimation(string propertyName) => global::ABI.Microsoft.UI.Composition.ICompositionObjectMethods.StopAnimation(_objRef_global__Microsoft_UI_Composition_ICompositionObject, propertyName);

        public void StartAnimationGroup(ICompositionAnimationBase value) => global::ABI.Microsoft.UI.Composition.ICompositionObject2Methods.StartAnimationGroup(_objRef_global__Microsoft_UI_Composition_ICompositionObject2, value);

        public void StopAnimationGroup(ICompositionAnimationBase value) => global::ABI.Microsoft.UI.Composition.ICompositionObject2Methods.StopAnimationGroup(_objRef_global__Microsoft_UI_Composition_ICompositionObject2, value);

        public AnimationController TryGetAnimationController(string propertyName) => global::ABI.Microsoft.UI.Composition.ICompositionObject4Methods.TryGetAnimationController(_objRef_global__Microsoft_UI_Composition_ICompositionObject4, propertyName);

        public void StartAnimation(string propertyName, CompositionAnimation animation, AnimationController animationController) => global::ABI.Microsoft.UI.Composition.ICompositionObject5Methods.StartAnimation(_objRef_global__Microsoft_UI_Composition_ICompositionObject5, propertyName, animation, animationController);

        public void Dispose() => global::ABI.System.IDisposableMethods.Dispose(_objRef_global__System_IDisposable);

        public void PopulatePropertyInfo(string propertyName, AnimationPropertyInfo propertyInfo) => global::ABI.Microsoft.UI.Composition.IAnimationObjectMethods.PopulatePropertyInfo(_objRef_global__Microsoft_UI_Composition_IAnimationObject, propertyName, propertyInfo);

        public string Comment
        {
            get => global::ABI.Microsoft.UI.Composition.ICompositionObject2Methods.get_Comment(_objRef_global__Microsoft_UI_Composition_ICompositionObject2);
            set => global::ABI.Microsoft.UI.Composition.ICompositionObject2Methods.set_Comment(_objRef_global__Microsoft_UI_Composition_ICompositionObject2, value);
        }

        public Compositor Compositor => global::ABI.Microsoft.UI.Composition.ICompositionObjectMethods.get_Compositor(_objRef_global__Microsoft_UI_Composition_ICompositionObject);

        public global::Microsoft.UI.Dispatching.DispatcherQueue DispatcherQueue => global::ABI.Microsoft.UI.Composition.ICompositionObject3Methods.get_DispatcherQueue(_objRef_global__Microsoft_UI_Composition_ICompositionObject3);

        public ImplicitAnimationCollection ImplicitAnimations
        {
            get => global::ABI.Microsoft.UI.Composition.ICompositionObject2Methods.get_ImplicitAnimations(_objRef_global__Microsoft_UI_Composition_ICompositionObject2);
            set => global::ABI.Microsoft.UI.Composition.ICompositionObject2Methods.set_ImplicitAnimations(_objRef_global__Microsoft_UI_Composition_ICompositionObject2, value);
        }

        public CompositionPropertySet Properties => global::ABI.Microsoft.UI.Composition.ICompositionObjectMethods.get_Properties(_objRef_global__Microsoft_UI_Composition_ICompositionObject);

        protected virtual bool IsOverridableInterface(Guid iid) => false;

        global::System.Runtime.InteropServices.CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(ref Guid iid, out IntPtr ppv)
        {
            ppv = IntPtr.Zero;
            if (IsOverridableInterface(iid) || global::WinRT.Interop.IID.IID_IInspectable == iid)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
            }

            if (((IWinRTObject)this).NativeObject.TryAs(iid, out ppv) >= 0)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.Handled;
            }

            return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
        }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI")]
    [global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Composition.CompositionPath))]
    [global::ABI.Microsoft.UI.Composition.CompositionPathRcwFactory]
    [global::WinRT.ProjectedRuntimeClass(typeof(ICompositionPath))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.Foundation.WindowsAppSDKContract), 65536u)]
    public sealed class CompositionPath : global::Windows.Graphics.IGeometrySource2D, global::System.Runtime.InteropServices.ICustomQueryInterface, IWinRTObject, IEquatable<CompositionPath>
    {
        private IntPtr ThisPtr => _inner == null ? (((IWinRTObject)this).NativeObject).ThisPtr : _inner.ThisPtr;

        private readonly IObjectReference _inner = null;



        private IObjectReference _objRef_global__Microsoft_UI_Composition_ICompositionPath => _inner;
        private volatile IObjectReference ___objRef_global__Windows_Graphics_IGeometrySource2D;
        private IObjectReference Make___objRef_global__Windows_Graphics_IGeometrySource2D()
        {
            global::System.Threading.Interlocked.CompareExchange(ref ___objRef_global__Windows_Graphics_IGeometrySource2D, ((IWinRTObject)this).NativeObject.As<IUnknownVftbl>(global::ABI.Windows.Graphics.IGeometrySource2DMethods.IID), null);
            return ___objRef_global__Windows_Graphics_IGeometrySource2D;
        }
        private IObjectReference _objRef_global__Windows_Graphics_IGeometrySource2D => ___objRef_global__Windows_Graphics_IGeometrySource2D ?? Make___objRef_global__Windows_Graphics_IGeometrySource2D();



        private static class _ICompositionPathFactoryMethods
        {
            public static unsafe IntPtr Create(IObjectReference _obj, global::Windows.Graphics.IGeometrySource2D source)
            {
                var ThisPtr = _obj.ThisPtr;

                ObjectReferenceValue __source = default;
                IntPtr __retval = default;
                try
                {
                    __source = MarshalInterface<global::Windows.Graphics.IGeometrySource2D>.CreateMarshaler2(source, global::ABI.Windows.Graphics.IGeometrySource2DMethods.IID);
                    global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, IntPtr*, int>**)ThisPtr)[6](ThisPtr, MarshalInspectable<object>.GetAbi(__source), &__retval));
                    global::System.GC.KeepAlive(_obj);
                    return __retval;
                }
                finally
                {
                    MarshalInspectable<object>.DisposeMarshaler(__source);
                }
            }
        }

        private static volatile IObjectReference ___objRef_global__Microsoft_UI_Composition_ICompositionPathFactory;
        private static IObjectReference _objRef_global__Microsoft_UI_Composition_ICompositionPathFactory
        {
            get
            { 
                var factory = ___objRef_global__Microsoft_UI_Composition_ICompositionPathFactory;
                if (factory != null && factory.IsInCurrentContext)
                {
                    return factory;
                }
                else
                {
                    return ___objRef_global__Microsoft_UI_Composition_ICompositionPathFactory = ActivationFactory.Get("Microsoft.UI.Composition.CompositionPath", global::ABI.Microsoft.UI.Composition.ICompositionPathFactoryMethods.IID);
                }
            }
        }

        public CompositionPath(global::Windows.Graphics.IGeometrySource2D source) 
        { 
        IntPtr ptr = (_ICompositionPathFactoryMethods.Create(_objRef_global__Microsoft_UI_Composition_ICompositionPathFactory, source)); 
        try 
        { 
        _inner = ComWrappersSupport.GetObjectReferenceForInterface(ptr, global::ABI.Microsoft.UI.Composition.ICompositionPathMethods.IID, false); 

        } 
        finally 
        { 
        MarshalInspectable<object>.DisposeAbi(ptr); 
        }

        ComWrappersSupport.RegisterObjectForInterface(this, ThisPtr);
        ComWrappersHelper.Init(_inner, false);
        }

        public static CompositionPath FromAbi(IntPtr thisPtr)
        {
            if (thisPtr == IntPtr.Zero) return null;
            return MarshalInspectable<CompositionPath>.FromAbi(thisPtr);
        }

        internal CompositionPath(IObjectReference objRef)
        {
            _inner = objRef.As(global::ABI.Microsoft.UI.Composition.ICompositionPathMethods.IID);

        }


        public static bool operator ==(CompositionPath x, CompositionPath y) => (x?.ThisPtr ?? IntPtr.Zero) == (y?.ThisPtr ?? IntPtr.Zero);
        public static bool operator !=(CompositionPath x, CompositionPath y) => !(x == y);
        public bool Equals(CompositionPath other) => this == other;
        public override bool Equals(object obj) => obj is CompositionPath that && this == that;
        public override int GetHashCode() => ThisPtr.GetHashCode();


        bool IWinRTObject.HasUnwrappableNativeObject => true;
        IObjectReference IWinRTObject.NativeObject => _inner;
        private volatile global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> _queryInterfaceCache;
        private global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> MakeQueryInterfaceCache()
        {
            global::System.Threading.Interlocked.CompareExchange(ref _queryInterfaceCache, new global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference>(), null); 
            return _queryInterfaceCache;
        }
        global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> IWinRTObject.QueryInterfaceCache => _queryInterfaceCache ?? MakeQueryInterfaceCache();
        private volatile global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> _additionalTypeData;
        private global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> MakeAdditionalTypeData()
        {
            global::System.Threading.Interlocked.CompareExchange(ref _additionalTypeData, new global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object>(), null); 
            return _additionalTypeData;
        }
        global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> IWinRTObject.AdditionalTypeData => _additionalTypeData ?? MakeAdditionalTypeData();

        private struct InterfaceTag<I>{};


        private bool IsOverridableInterface(Guid iid) => false;

        global::System.Runtime.InteropServices.CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(ref Guid iid, out IntPtr ppv)
        {
            ppv = IntPtr.Zero;
            if (IsOverridableInterface(iid) || global::WinRT.Interop.IID.IID_IInspectable == iid)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
            }

            if (((IWinRTObject)this).NativeObject.TryAs(iid, out ppv) >= 0)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.Handled;
            }

            return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
        }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI")]
    [global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Composition.CompositionPathGeometry))]
    [global::ABI.Microsoft.UI.Composition.CompositionPathGeometryRcwFactory]
    [global::WinRT.ProjectedRuntimeClass(typeof(ICompositionPathGeometry))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.Foundation.WindowsAppSDKContract), 65536u)]
    public sealed class CompositionPathGeometry : CompositionGeometry, global::System.Runtime.InteropServices.ICustomQueryInterface, IWinRTObject, IEquatable<CompositionPathGeometry>
    {
        private IntPtr ThisPtr => _inner == null ? (((IWinRTObject)this).NativeObject).ThisPtr : _inner.ThisPtr;

        private readonly IObjectReference _inner = null;



        private IObjectReference _objRef_global__Microsoft_UI_Composition_ICompositionPathGeometry => _inner;


        public static new CompositionPathGeometry FromAbi(IntPtr thisPtr)
        {
            if (thisPtr == IntPtr.Zero) return null;
            return MarshalInspectable<CompositionPathGeometry>.FromAbi(thisPtr);
        }

        internal CompositionPathGeometry(IObjectReference objRef)
            : base(global::WinRT.DerivedComposed.Instance)

        {
            _inner = objRef.As(global::ABI.Microsoft.UI.Composition.ICompositionPathGeometryMethods.IID);

        }


        public static bool operator ==(CompositionPathGeometry x, CompositionPathGeometry y) => (x?.ThisPtr ?? IntPtr.Zero) == (y?.ThisPtr ?? IntPtr.Zero);
        public static bool operator !=(CompositionPathGeometry x, CompositionPathGeometry y) => !(x == y);
        public bool Equals(CompositionPathGeometry other) => this == other;
        public override bool Equals(object obj) => obj is CompositionPathGeometry that && this == that;
        public override int GetHashCode() => ThisPtr.GetHashCode();


        bool IWinRTObject.HasUnwrappableNativeObject => true;
        IObjectReference IWinRTObject.NativeObject => _inner;

        private struct InterfaceTag<I>{};


        public CompositionPath Path
        {
            get => global::ABI.Microsoft.UI.Composition.ICompositionPathGeometryMethods.get_Path(_objRef_global__Microsoft_UI_Composition_ICompositionPathGeometry);
            set => global::ABI.Microsoft.UI.Composition.ICompositionPathGeometryMethods.set_Path(_objRef_global__Microsoft_UI_Composition_ICompositionPathGeometry, value);
        }

        protected override bool IsOverridableInterface(Guid iid) => base.IsOverridableInterface(iid);

        global::System.Runtime.InteropServices.CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(ref Guid iid, out IntPtr ppv)
        {
            ppv = IntPtr.Zero;
            if (IsOverridableInterface(iid) || global::WinRT.Interop.IID.IID_IInspectable == iid)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
            }

            if (((IWinRTObject)this).NativeObject.TryAs(iid, out ppv) >= 0)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.Handled;
            }

            return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
        }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI")]
    [global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Composition.CompositionProjectedShadow))]
    [global::ABI.Microsoft.UI.Composition.CompositionProjectedShadowRcwFactory]
    [global::WinRT.ProjectedRuntimeClass(typeof(ICompositionProjectedShadow))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.Foundation.WindowsAppSDKContract), 65536u)]
    public sealed class CompositionProjectedShadow : CompositionObject, global::System.Runtime.InteropServices.ICustomQueryInterface, IWinRTObject, IEquatable<CompositionProjectedShadow>
    {
        private IntPtr ThisPtr => _inner == null ? (((IWinRTObject)this).NativeObject).ThisPtr : _inner.ThisPtr;

        private readonly IObjectReference _inner = null;



        private IObjectReference _objRef_global__Microsoft_UI_Composition_ICompositionProjectedShadow => _inner;
        private volatile IObjectReference ___objRef_global__Microsoft_UI_Composition_IExpCompositionProjectedShadow;
        private IObjectReference Make___objRef_global__Microsoft_UI_Composition_IExpCompositionProjectedShadow()
        {
            global::System.Threading.Interlocked.CompareExchange(ref ___objRef_global__Microsoft_UI_Composition_IExpCompositionProjectedShadow, ((IWinRTObject)this).NativeObject.As<IUnknownVftbl>(global::ABI.Microsoft.UI.Composition.IExpCompositionProjectedShadowMethods.IID), null);
            return ___objRef_global__Microsoft_UI_Composition_IExpCompositionProjectedShadow;
        }
        private IObjectReference _objRef_global__Microsoft_UI_Composition_IExpCompositionProjectedShadow => ___objRef_global__Microsoft_UI_Composition_IExpCompositionProjectedShadow ?? Make___objRef_global__Microsoft_UI_Composition_IExpCompositionProjectedShadow();



        public static new CompositionProjectedShadow FromAbi(IntPtr thisPtr)
        {
            if (thisPtr == IntPtr.Zero) return null;
            return MarshalInspectable<CompositionProjectedShadow>.FromAbi(thisPtr);
        }

        internal CompositionProjectedShadow(IObjectReference objRef)
            : base(global::WinRT.DerivedComposed.Instance)

        {
            _inner = objRef.As(global::ABI.Microsoft.UI.Composition.ICompositionProjectedShadowMethods.IID);

        }


        public static bool operator ==(CompositionProjectedShadow x, CompositionProjectedShadow y) => (x?.ThisPtr ?? IntPtr.Zero) == (y?.ThisPtr ?? IntPtr.Zero);
        public static bool operator !=(CompositionProjectedShadow x, CompositionProjectedShadow y) => !(x == y);
        public bool Equals(CompositionProjectedShadow other) => this == other;
        public override bool Equals(object obj) => obj is CompositionProjectedShadow that && this == that;
        public override int GetHashCode() => ThisPtr.GetHashCode();


        bool IWinRTObject.HasUnwrappableNativeObject => true;
        IObjectReference IWinRTObject.NativeObject => _inner;

        private struct InterfaceTag<I>{};


        public float BlurRadiusMultiplier
        {
            get => global::ABI.Microsoft.UI.Composition.ICompositionProjectedShadowMethods.get_BlurRadiusMultiplier(_objRef_global__Microsoft_UI_Composition_ICompositionProjectedShadow);
            set => global::ABI.Microsoft.UI.Composition.ICompositionProjectedShadowMethods.set_BlurRadiusMultiplier(_objRef_global__Microsoft_UI_Composition_ICompositionProjectedShadow, value);
        }

        public CompositionProjectedShadowCasterCollection Casters => global::ABI.Microsoft.UI.Composition.ICompositionProjectedShadowMethods.get_Casters(_objRef_global__Microsoft_UI_Composition_ICompositionProjectedShadow);

        public CompositionLight LightSource
        {
            get => global::ABI.Microsoft.UI.Composition.ICompositionProjectedShadowMethods.get_LightSource(_objRef_global__Microsoft_UI_Composition_ICompositionProjectedShadow);
            set => global::ABI.Microsoft.UI.Composition.ICompositionProjectedShadowMethods.set_LightSource(_objRef_global__Microsoft_UI_Composition_ICompositionProjectedShadow, value);
        }

        public float MaxBlurRadius
        {
            get => global::ABI.Microsoft.UI.Composition.ICompositionProjectedShadowMethods.get_MaxBlurRadius(_objRef_global__Microsoft_UI_Composition_ICompositionProjectedShadow);
            set => global::ABI.Microsoft.UI.Composition.ICompositionProjectedShadowMethods.set_MaxBlurRadius(_objRef_global__Microsoft_UI_Composition_ICompositionProjectedShadow, value);
        }

        public float MaxOpacity
        {
            get => global::ABI.Microsoft.UI.Composition.IExpCompositionProjectedShadowMethods.get_MaxOpacity(_objRef_global__Microsoft_UI_Composition_IExpCompositionProjectedShadow);
            set => global::ABI.Microsoft.UI.Composition.IExpCompositionProjectedShadowMethods.set_MaxOpacity(_objRef_global__Microsoft_UI_Composition_IExpCompositionProjectedShadow, value);
        }

        public float MinBlurRadius
        {
            get => global::ABI.Microsoft.UI.Composition.ICompositionProjectedShadowMethods.get_MinBlurRadius(_objRef_global__Microsoft_UI_Composition_ICompositionProjectedShadow);
            set => global::ABI.Microsoft.UI.Composition.ICompositionProjectedShadowMethods.set_MinBlurRadius(_objRef_global__Microsoft_UI_Composition_ICompositionProjectedShadow, value);
        }

        public float MinOpacity
        {
            get => global::ABI.Microsoft.UI.Composition.IExpCompositionProjectedShadowMethods.get_MinOpacity(_objRef_global__Microsoft_UI_Composition_IExpCompositionProjectedShadow);
            set => global::ABI.Microsoft.UI.Composition.IExpCompositionProjectedShadowMethods.set_MinOpacity(_objRef_global__Microsoft_UI_Composition_IExpCompositionProjectedShadow, value);
        }

        public float OpacityFalloff
        {
            get => global::ABI.Microsoft.UI.Composition.IExpCompositionProjectedShadowMethods.get_OpacityFalloff(_objRef_global__Microsoft_UI_Composition_IExpCompositionProjectedShadow);
            set => global::ABI.Microsoft.UI.Composition.IExpCompositionProjectedShadowMethods.set_OpacityFalloff(_objRef_global__Microsoft_UI_Composition_IExpCompositionProjectedShadow, value);
        }

        public CompositionProjectedShadowReceiverUnorderedCollection Receivers => global::ABI.Microsoft.UI.Composition.ICompositionProjectedShadowMethods.get_Receivers(_objRef_global__Microsoft_UI_Composition_ICompositionProjectedShadow);

        protected override bool IsOverridableInterface(Guid iid) => base.IsOverridableInterface(iid);

        global::System.Runtime.InteropServices.CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(ref Guid iid, out IntPtr ppv)
        {
            ppv = IntPtr.Zero;
            if (IsOverridableInterface(iid) || global::WinRT.Interop.IID.IID_IInspectable == iid)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
            }

            if (((IWinRTObject)this).NativeObject.TryAs(iid, out ppv) >= 0)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.Handled;
            }

            return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
        }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI")]
    [global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Composition.CompositionProjectedShadowCaster))]
    [global::ABI.Microsoft.UI.Composition.CompositionProjectedShadowCasterRcwFactory]
    [global::WinRT.ProjectedRuntimeClass(typeof(ICompositionProjectedShadowCaster))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.Foundation.WindowsAppSDKContract), 65536u)]
    public sealed class CompositionProjectedShadowCaster : CompositionObject, global::System.Runtime.InteropServices.ICustomQueryInterface, IWinRTObject, IEquatable<CompositionProjectedShadowCaster>
    {
        private IntPtr ThisPtr => _inner == null ? (((IWinRTObject)this).NativeObject).ThisPtr : _inner.ThisPtr;

        private readonly IObjectReference _inner = null;



        private IObjectReference _objRef_global__Microsoft_UI_Composition_ICompositionProjectedShadowCaster => _inner;
        private volatile IObjectReference ___objRef_global__Microsoft_UI_Composition_IExpCompositionProjectedShadowCaster;
        private IObjectReference Make___objRef_global__Microsoft_UI_Composition_IExpCompositionProjectedShadowCaster()
        {
            global::System.Threading.Interlocked.CompareExchange(ref ___objRef_global__Microsoft_UI_Composition_IExpCompositionProjectedShadowCaster, ((IWinRTObject)this).NativeObject.As<IUnknownVftbl>(global::ABI.Microsoft.UI.Composition.IExpCompositionProjectedShadowCasterMethods.IID), null);
            return ___objRef_global__Microsoft_UI_Composition_IExpCompositionProjectedShadowCaster;
        }
        private IObjectReference _objRef_global__Microsoft_UI_Composition_IExpCompositionProjectedShadowCaster => ___objRef_global__Microsoft_UI_Composition_IExpCompositionProjectedShadowCaster ?? Make___objRef_global__Microsoft_UI_Composition_IExpCompositionProjectedShadowCaster();



        public static new CompositionProjectedShadowCaster FromAbi(IntPtr thisPtr)
        {
            if (thisPtr == IntPtr.Zero) return null;
            return MarshalInspectable<CompositionProjectedShadowCaster>.FromAbi(thisPtr);
        }

        internal CompositionProjectedShadowCaster(IObjectReference objRef)
            : base(global::WinRT.DerivedComposed.Instance)

        {
            _inner = objRef.As(global::ABI.Microsoft.UI.Composition.ICompositionProjectedShadowCasterMethods.IID);

        }


        public static bool operator ==(CompositionProjectedShadowCaster x, CompositionProjectedShadowCaster y) => (x?.ThisPtr ?? IntPtr.Zero) == (y?.ThisPtr ?? IntPtr.Zero);
        public static bool operator !=(CompositionProjectedShadowCaster x, CompositionProjectedShadowCaster y) => !(x == y);
        public bool Equals(CompositionProjectedShadowCaster other) => this == other;
        public override bool Equals(object obj) => obj is CompositionProjectedShadowCaster that && this == that;
        public override int GetHashCode() => ThisPtr.GetHashCode();


        bool IWinRTObject.HasUnwrappableNativeObject => true;
        IObjectReference IWinRTObject.NativeObject => _inner;

        private struct InterfaceTag<I>{};


        public Visual AncestorClip
        {
            get => global::ABI.Microsoft.UI.Composition.IExpCompositionProjectedShadowCasterMethods.get_AncestorClip(_objRef_global__Microsoft_UI_Composition_IExpCompositionProjectedShadowCaster);
            set => global::ABI.Microsoft.UI.Composition.IExpCompositionProjectedShadowCasterMethods.set_AncestorClip(_objRef_global__Microsoft_UI_Composition_IExpCompositionProjectedShadowCaster, value);
        }

        public CompositionBrush Brush
        {
            get => global::ABI.Microsoft.UI.Composition.ICompositionProjectedShadowCasterMethods.get_Brush(_objRef_global__Microsoft_UI_Composition_ICompositionProjectedShadowCaster);
            set => global::ABI.Microsoft.UI.Composition.ICompositionProjectedShadowCasterMethods.set_Brush(_objRef_global__Microsoft_UI_Composition_ICompositionProjectedShadowCaster, value);
        }

        public Visual CastingVisual
        {
            get => global::ABI.Microsoft.UI.Composition.ICompositionProjectedShadowCasterMethods.get_CastingVisual(_objRef_global__Microsoft_UI_Composition_ICompositionProjectedShadowCaster);
            set => global::ABI.Microsoft.UI.Composition.ICompositionProjectedShadowCasterMethods.set_CastingVisual(_objRef_global__Microsoft_UI_Composition_ICompositionProjectedShadowCaster, value);
        }

        public CompositionBrush Mask
        {
            get => global::ABI.Microsoft.UI.Composition.IExpCompositionProjectedShadowCasterMethods.get_Mask(_objRef_global__Microsoft_UI_Composition_IExpCompositionProjectedShadowCaster);
            set => global::ABI.Microsoft.UI.Composition.IExpCompositionProjectedShadowCasterMethods.set_Mask(_objRef_global__Microsoft_UI_Composition_IExpCompositionProjectedShadowCaster, value);
        }

        protected override bool IsOverridableInterface(Guid iid) => base.IsOverridableInterface(iid);

        global::System.Runtime.InteropServices.CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(ref Guid iid, out IntPtr ppv)
        {
            ppv = IntPtr.Zero;
            if (IsOverridableInterface(iid) || global::WinRT.Interop.IID.IID_IInspectable == iid)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
            }

            if (((IWinRTObject)this).NativeObject.TryAs(iid, out ppv) >= 0)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.Handled;
            }

            return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
        }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI")]
    [global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Composition.CompositionProjectedShadowCasterCollection))]
    [global::ABI.Microsoft.UI.Composition.CompositionProjectedShadowCasterCollectionRcwFactory]
    [global::WinRT.ProjectedRuntimeClass(typeof(ICompositionProjectedShadowCasterCollection))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.Foundation.WindowsAppSDKContract), 65536u)]
    public sealed class CompositionProjectedShadowCasterCollection : CompositionObject, global::System.Collections.Generic.IEnumerable<CompositionProjectedShadowCaster>, global::System.Runtime.InteropServices.ICustomQueryInterface, IWinRTObject, IEquatable<CompositionProjectedShadowCasterCollection>
    {
        private IntPtr ThisPtr => _inner == null ? (((IWinRTObject)this).NativeObject).ThisPtr : _inner.ThisPtr;

        private readonly IObjectReference _inner = null;



        private IObjectReference _objRef_global__Microsoft_UI_Composition_ICompositionProjectedShadowCasterCollection => _inner;
        private volatile IObjectReference ___objRef_global__System_Collections_Generic_IEnumerable_CompositionProjectedShadowCaster_;
        private IObjectReference Make___objRef_global__System_Collections_Generic_IEnumerable_CompositionProjectedShadowCaster_()
        {
            _ = global::WinRT.GenericTypeInstantiations.Windows_Foundation_Collections_IIterable_1_Microsoft_UI_Composition_CompositionProjectedShadowCaster.EnsureInitialized();
            global::System.Threading.Interlocked.CompareExchange(ref ___objRef_global__System_Collections_Generic_IEnumerable_CompositionProjectedShadowCaster_, ((IWinRTObject)this).NativeObject.As<IUnknownVftbl>(global::ABI.System.Collections.Generic.IEnumerableMethods<CompositionProjectedShadowCaster>.IID), null);
            return ___objRef_global__System_Collections_Generic_IEnumerable_CompositionProjectedShadowCaster_;
        }
        private IObjectReference _objRef_global__System_Collections_Generic_IEnumerable_CompositionProjectedShadowCaster_ => ___objRef_global__System_Collections_Generic_IEnumerable_CompositionProjectedShadowCaster_ ?? Make___objRef_global__System_Collections_Generic_IEnumerable_CompositionProjectedShadowCaster_();



        public static new I As<I>() => ActivationFactory.Get("Microsoft.UI.Composition.CompositionProjectedShadowCasterCollection").AsInterface<I>();

        private static volatile IObjectReference ___objRef_global__Microsoft_UI_Composition_ICompositionProjectedShadowCasterCollectionStatics;
        private static IObjectReference _objRef_global__Microsoft_UI_Composition_ICompositionProjectedShadowCasterCollectionStatics
        {
            get
            { 
                var factory = ___objRef_global__Microsoft_UI_Composition_ICompositionProjectedShadowCasterCollectionStatics;
                if (factory != null && factory.IsInCurrentContext)
                {
                    return factory;
                }
                else
                {
                    return ___objRef_global__Microsoft_UI_Composition_ICompositionProjectedShadowCasterCollectionStatics = ActivationFactory.Get("Microsoft.UI.Composition.CompositionProjectedShadowCasterCollection", global::ABI.Microsoft.UI.Composition.ICompositionProjectedShadowCasterCollectionStaticsMethods.IID);
                }
            }
        }

        public static int MaxRespectedCasters => global::ABI.Microsoft.UI.Composition.ICompositionProjectedShadowCasterCollectionStaticsMethods.get_MaxRespectedCasters(_objRef_global__Microsoft_UI_Composition_ICompositionProjectedShadowCasterCollectionStatics);

        public static new CompositionProjectedShadowCasterCollection FromAbi(IntPtr thisPtr)
        {
            if (thisPtr == IntPtr.Zero) return null;
            return MarshalInspectable<CompositionProjectedShadowCasterCollection>.FromAbi(thisPtr);
        }

        internal CompositionProjectedShadowCasterCollection(IObjectReference objRef)
            : base(global::WinRT.DerivedComposed.Instance)

        {
            _inner = objRef.As(global::ABI.Microsoft.UI.Composition.ICompositionProjectedShadowCasterCollectionMethods.IID);

        }


        public static bool operator ==(CompositionProjectedShadowCasterCollection x, CompositionProjectedShadowCasterCollection y) => (x?.ThisPtr ?? IntPtr.Zero) == (y?.ThisPtr ?? IntPtr.Zero);
        public static bool operator !=(CompositionProjectedShadowCasterCollection x, CompositionProjectedShadowCasterCollection y) => !(x == y);
        public bool Equals(CompositionProjectedShadowCasterCollection other) => this == other;
        public override bool Equals(object obj) => obj is CompositionProjectedShadowCasterCollection that && this == that;
        public override int GetHashCode() => ThisPtr.GetHashCode();


        bool IWinRTObject.HasUnwrappableNativeObject => true;
        IObjectReference IWinRTObject.NativeObject => _inner;

        private struct InterfaceTag<I>{};


        public void InsertAbove(CompositionProjectedShadowCaster newCaster, CompositionProjectedShadowCaster reference) => global::ABI.Microsoft.UI.Composition.ICompositionProjectedShadowCasterCollectionMethods.InsertAbove(_objRef_global__Microsoft_UI_Composition_ICompositionProjectedShadowCasterCollection, newCaster, reference);

        public void InsertAtBottom(CompositionProjectedShadowCaster newCaster) => global::ABI.Microsoft.UI.Composition.ICompositionProjectedShadowCasterCollectionMethods.InsertAtBottom(_objRef_global__Microsoft_UI_Composition_ICompositionProjectedShadowCasterCollection, newCaster);

        public void InsertAtTop(CompositionProjectedShadowCaster newCaster) => global::ABI.Microsoft.UI.Composition.ICompositionProjectedShadowCasterCollectionMethods.InsertAtTop(_objRef_global__Microsoft_UI_Composition_ICompositionProjectedShadowCasterCollection, newCaster);

        public void InsertBelow(CompositionProjectedShadowCaster newCaster, CompositionProjectedShadowCaster reference) => global::ABI.Microsoft.UI.Composition.ICompositionProjectedShadowCasterCollectionMethods.InsertBelow(_objRef_global__Microsoft_UI_Composition_ICompositionProjectedShadowCasterCollection, newCaster, reference);

        public void Remove(CompositionProjectedShadowCaster caster) => global::ABI.Microsoft.UI.Composition.ICompositionProjectedShadowCasterCollectionMethods.Remove(_objRef_global__Microsoft_UI_Composition_ICompositionProjectedShadowCasterCollection, caster);

        public void RemoveAll() => global::ABI.Microsoft.UI.Composition.ICompositionProjectedShadowCasterCollectionMethods.RemoveAll(_objRef_global__Microsoft_UI_Composition_ICompositionProjectedShadowCasterCollection);

        public IEnumerator<CompositionProjectedShadowCaster> GetEnumerator() => global::ABI.System.Collections.Generic.IEnumerableMethods<CompositionProjectedShadowCaster>.GetEnumerator(_objRef_global__System_Collections_Generic_IEnumerable_CompositionProjectedShadowCaster_);

        IEnumerator IEnumerable.GetEnumerator() => GetEnumerator();

        public int Count => global::ABI.Microsoft.UI.Composition.ICompositionProjectedShadowCasterCollectionMethods.get_Count(_objRef_global__Microsoft_UI_Composition_ICompositionProjectedShadowCasterCollection);

        protected override bool IsOverridableInterface(Guid iid) => base.IsOverridableInterface(iid);

        global::System.Runtime.InteropServices.CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(ref Guid iid, out IntPtr ppv)
        {
            ppv = IntPtr.Zero;
            if (IsOverridableInterface(iid) || global::WinRT.Interop.IID.IID_IInspectable == iid)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
            }

            if (((IWinRTObject)this).NativeObject.TryAs(iid, out ppv) >= 0)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.Handled;
            }

            return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
        }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI")][global::WinRT.WinRTExposedType(typeof(global::WinRT.EnumTypeDetails<CompositionProjectedShadowDrawOrder>))][global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.Foundation.WindowsAppSDKContract), 65543u)]
    [global::Windows.Foundation.Metadata.Experimental]
    public enum CompositionProjectedShadowDrawOrder : int
    {
        PostChildren = unchecked((int)0),
        PreChildren = unchecked((int)0x1),
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI")]
    [global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Composition.CompositionProjectedShadowReceiver))]
    [global::ABI.Microsoft.UI.Composition.CompositionProjectedShadowReceiverRcwFactory]
    [global::WinRT.ProjectedRuntimeClass(typeof(ICompositionProjectedShadowReceiver))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.Foundation.WindowsAppSDKContract), 65536u)]
    public sealed class CompositionProjectedShadowReceiver : CompositionObject, global::System.Runtime.InteropServices.ICustomQueryInterface, IWinRTObject, IEquatable<CompositionProjectedShadowReceiver>
    {
        private IntPtr ThisPtr => _inner == null ? (((IWinRTObject)this).NativeObject).ThisPtr : _inner.ThisPtr;

        private readonly IObjectReference _inner = null;



        private IObjectReference _objRef_global__Microsoft_UI_Composition_ICompositionProjectedShadowReceiver => _inner;
        private volatile IObjectReference ___objRef_global__Microsoft_UI_Composition_IExpCompositionProjectedShadowReceiver;
        private IObjectReference Make___objRef_global__Microsoft_UI_Composition_IExpCompositionProjectedShadowReceiver()
        {
            global::System.Threading.Interlocked.CompareExchange(ref ___objRef_global__Microsoft_UI_Composition_IExpCompositionProjectedShadowReceiver, ((IWinRTObject)this).NativeObject.As<IUnknownVftbl>(global::ABI.Microsoft.UI.Composition.IExpCompositionProjectedShadowReceiverMethods.IID), null);
            return ___objRef_global__Microsoft_UI_Composition_IExpCompositionProjectedShadowReceiver;
        }
        private IObjectReference _objRef_global__Microsoft_UI_Composition_IExpCompositionProjectedShadowReceiver => ___objRef_global__Microsoft_UI_Composition_IExpCompositionProjectedShadowReceiver ?? Make___objRef_global__Microsoft_UI_Composition_IExpCompositionProjectedShadowReceiver();



        public static new CompositionProjectedShadowReceiver FromAbi(IntPtr thisPtr)
        {
            if (thisPtr == IntPtr.Zero) return null;
            return MarshalInspectable<CompositionProjectedShadowReceiver>.FromAbi(thisPtr);
        }

        internal CompositionProjectedShadowReceiver(IObjectReference objRef)
            : base(global::WinRT.DerivedComposed.Instance)

        {
            _inner = objRef.As(global::ABI.Microsoft.UI.Composition.ICompositionProjectedShadowReceiverMethods.IID);

        }


        public static bool operator ==(CompositionProjectedShadowReceiver x, CompositionProjectedShadowReceiver y) => (x?.ThisPtr ?? IntPtr.Zero) == (y?.ThisPtr ?? IntPtr.Zero);
        public static bool operator !=(CompositionProjectedShadowReceiver x, CompositionProjectedShadowReceiver y) => !(x == y);
        public bool Equals(CompositionProjectedShadowReceiver other) => this == other;
        public override bool Equals(object obj) => obj is CompositionProjectedShadowReceiver that && this == that;
        public override int GetHashCode() => ThisPtr.GetHashCode();


        bool IWinRTObject.HasUnwrappableNativeObject => true;
        IObjectReference IWinRTObject.NativeObject => _inner;

        private struct InterfaceTag<I>{};


        public CompositionProjectedShadowDrawOrder DrawOrder
        {
            get => global::ABI.Microsoft.UI.Composition.IExpCompositionProjectedShadowReceiverMethods.get_DrawOrder(_objRef_global__Microsoft_UI_Composition_IExpCompositionProjectedShadowReceiver);
            set => global::ABI.Microsoft.UI.Composition.IExpCompositionProjectedShadowReceiverMethods.set_DrawOrder(_objRef_global__Microsoft_UI_Composition_IExpCompositionProjectedShadowReceiver, value);
        }

        public CompositionBrush Mask
        {
            get => global::ABI.Microsoft.UI.Composition.IExpCompositionProjectedShadowReceiverMethods.get_Mask(_objRef_global__Microsoft_UI_Composition_IExpCompositionProjectedShadowReceiver);
            set => global::ABI.Microsoft.UI.Composition.IExpCompositionProjectedShadowReceiverMethods.set_Mask(_objRef_global__Microsoft_UI_Composition_IExpCompositionProjectedShadowReceiver, value);
        }

        public Visual ReceivingVisual
        {
            get => global::ABI.Microsoft.UI.Composition.ICompositionProjectedShadowReceiverMethods.get_ReceivingVisual(_objRef_global__Microsoft_UI_Composition_ICompositionProjectedShadowReceiver);
            set => global::ABI.Microsoft.UI.Composition.ICompositionProjectedShadowReceiverMethods.set_ReceivingVisual(_objRef_global__Microsoft_UI_Composition_ICompositionProjectedShadowReceiver, value);
        }

        protected override bool IsOverridableInterface(Guid iid) => base.IsOverridableInterface(iid);

        global::System.Runtime.InteropServices.CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(ref Guid iid, out IntPtr ppv)
        {
            ppv = IntPtr.Zero;
            if (IsOverridableInterface(iid) || global::WinRT.Interop.IID.IID_IInspectable == iid)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
            }

            if (((IWinRTObject)this).NativeObject.TryAs(iid, out ppv) >= 0)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.Handled;
            }

            return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
        }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI")]
    [global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Composition.CompositionProjectedShadowReceiverUnorderedCollection))]
    [global::ABI.Microsoft.UI.Composition.CompositionProjectedShadowReceiverUnorderedCollectionRcwFactory]
    [global::WinRT.ProjectedRuntimeClass(typeof(ICompositionProjectedShadowReceiverUnorderedCollection))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.Foundation.WindowsAppSDKContract), 65536u)]
    public sealed class CompositionProjectedShadowReceiverUnorderedCollection : CompositionObject, global::System.Collections.Generic.IEnumerable<CompositionProjectedShadowReceiver>, global::System.Runtime.InteropServices.ICustomQueryInterface, IWinRTObject, IEquatable<CompositionProjectedShadowReceiverUnorderedCollection>
    {
        private IntPtr ThisPtr => _inner == null ? (((IWinRTObject)this).NativeObject).ThisPtr : _inner.ThisPtr;

        private readonly IObjectReference _inner = null;



        private IObjectReference _objRef_global__Microsoft_UI_Composition_ICompositionProjectedShadowReceiverUnorderedCollection => _inner;
        private volatile IObjectReference ___objRef_global__System_Collections_Generic_IEnumerable_CompositionProjectedShadowReceiver_;
        private IObjectReference Make___objRef_global__System_Collections_Generic_IEnumerable_CompositionProjectedShadowReceiver_()
        {
            _ = global::WinRT.GenericTypeInstantiations.Windows_Foundation_Collections_IIterable_1_Microsoft_UI_Composition_CompositionProjectedShadowReceiver.EnsureInitialized();
            global::System.Threading.Interlocked.CompareExchange(ref ___objRef_global__System_Collections_Generic_IEnumerable_CompositionProjectedShadowReceiver_, ((IWinRTObject)this).NativeObject.As<IUnknownVftbl>(global::ABI.System.Collections.Generic.IEnumerableMethods<CompositionProjectedShadowReceiver>.IID), null);
            return ___objRef_global__System_Collections_Generic_IEnumerable_CompositionProjectedShadowReceiver_;
        }
        private IObjectReference _objRef_global__System_Collections_Generic_IEnumerable_CompositionProjectedShadowReceiver_ => ___objRef_global__System_Collections_Generic_IEnumerable_CompositionProjectedShadowReceiver_ ?? Make___objRef_global__System_Collections_Generic_IEnumerable_CompositionProjectedShadowReceiver_();



        public static new CompositionProjectedShadowReceiverUnorderedCollection FromAbi(IntPtr thisPtr)
        {
            if (thisPtr == IntPtr.Zero) return null;
            return MarshalInspectable<CompositionProjectedShadowReceiverUnorderedCollection>.FromAbi(thisPtr);
        }

        internal CompositionProjectedShadowReceiverUnorderedCollection(IObjectReference objRef)
            : base(global::WinRT.DerivedComposed.Instance)

        {
            _inner = objRef.As(global::ABI.Microsoft.UI.Composition.ICompositionProjectedShadowReceiverUnorderedCollectionMethods.IID);

        }


        public static bool operator ==(CompositionProjectedShadowReceiverUnorderedCollection x, CompositionProjectedShadowReceiverUnorderedCollection y) => (x?.ThisPtr ?? IntPtr.Zero) == (y?.ThisPtr ?? IntPtr.Zero);
        public static bool operator !=(CompositionProjectedShadowReceiverUnorderedCollection x, CompositionProjectedShadowReceiverUnorderedCollection y) => !(x == y);
        public bool Equals(CompositionProjectedShadowReceiverUnorderedCollection other) => this == other;
        public override bool Equals(object obj) => obj is CompositionProjectedShadowReceiverUnorderedCollection that && this == that;
        public override int GetHashCode() => ThisPtr.GetHashCode();


        bool IWinRTObject.HasUnwrappableNativeObject => true;
        IObjectReference IWinRTObject.NativeObject => _inner;

        private struct InterfaceTag<I>{};


        public void Add(CompositionProjectedShadowReceiver value) => global::ABI.Microsoft.UI.Composition.ICompositionProjectedShadowReceiverUnorderedCollectionMethods.Add(_objRef_global__Microsoft_UI_Composition_ICompositionProjectedShadowReceiverUnorderedCollection, value);

        public void Remove(CompositionProjectedShadowReceiver value) => global::ABI.Microsoft.UI.Composition.ICompositionProjectedShadowReceiverUnorderedCollectionMethods.Remove(_objRef_global__Microsoft_UI_Composition_ICompositionProjectedShadowReceiverUnorderedCollection, value);

        public void RemoveAll() => global::ABI.Microsoft.UI.Composition.ICompositionProjectedShadowReceiverUnorderedCollectionMethods.RemoveAll(_objRef_global__Microsoft_UI_Composition_ICompositionProjectedShadowReceiverUnorderedCollection);

        public IEnumerator<CompositionProjectedShadowReceiver> GetEnumerator() => global::ABI.System.Collections.Generic.IEnumerableMethods<CompositionProjectedShadowReceiver>.GetEnumerator(_objRef_global__System_Collections_Generic_IEnumerable_CompositionProjectedShadowReceiver_);

        IEnumerator IEnumerable.GetEnumerator() => GetEnumerator();

        public int Count => global::ABI.Microsoft.UI.Composition.ICompositionProjectedShadowReceiverUnorderedCollectionMethods.get_Count(_objRef_global__Microsoft_UI_Composition_ICompositionProjectedShadowReceiverUnorderedCollection);

        protected override bool IsOverridableInterface(Guid iid) => base.IsOverridableInterface(iid);

        global::System.Runtime.InteropServices.CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(ref Guid iid, out IntPtr ppv)
        {
            ppv = IntPtr.Zero;
            if (IsOverridableInterface(iid) || global::WinRT.Interop.IID.IID_IInspectable == iid)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
            }

            if (((IWinRTObject)this).NativeObject.TryAs(iid, out ppv) >= 0)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.Handled;
            }

            return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
        }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI")]
    [global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Composition.CompositionPropertySet))]
    [global::ABI.Microsoft.UI.Composition.CompositionPropertySetRcwFactory]
    [global::WinRT.ProjectedRuntimeClass(typeof(ICompositionPropertySet))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.Foundation.WindowsAppSDKContract), 65536u)]
    public sealed class CompositionPropertySet : CompositionObject, global::System.Runtime.InteropServices.ICustomQueryInterface, IWinRTObject, IEquatable<CompositionPropertySet>
    {
        private IntPtr ThisPtr => _inner == null ? (((IWinRTObject)this).NativeObject).ThisPtr : _inner.ThisPtr;

        private readonly IObjectReference _inner = null;



        private IObjectReference _objRef_global__Microsoft_UI_Composition_ICompositionPropertySet => _inner;
        private volatile IObjectReference ___objRef_global__Microsoft_UI_Composition_ICompositionPropertySet2;
        private IObjectReference Make___objRef_global__Microsoft_UI_Composition_ICompositionPropertySet2()
        {
            global::System.Threading.Interlocked.CompareExchange(ref ___objRef_global__Microsoft_UI_Composition_ICompositionPropertySet2, ((IWinRTObject)this).NativeObject.As<IUnknownVftbl>(global::ABI.Microsoft.UI.Composition.ICompositionPropertySet2Methods.IID), null);
            return ___objRef_global__Microsoft_UI_Composition_ICompositionPropertySet2;
        }
        private IObjectReference _objRef_global__Microsoft_UI_Composition_ICompositionPropertySet2 => ___objRef_global__Microsoft_UI_Composition_ICompositionPropertySet2 ?? Make___objRef_global__Microsoft_UI_Composition_ICompositionPropertySet2();



        public static new CompositionPropertySet FromAbi(IntPtr thisPtr)
        {
            if (thisPtr == IntPtr.Zero) return null;
            return MarshalInspectable<CompositionPropertySet>.FromAbi(thisPtr);
        }

        internal CompositionPropertySet(IObjectReference objRef)
            : base(global::WinRT.DerivedComposed.Instance)

        {
            _inner = objRef.As(global::ABI.Microsoft.UI.Composition.ICompositionPropertySetMethods.IID);

        }


        public static bool operator ==(CompositionPropertySet x, CompositionPropertySet y) => (x?.ThisPtr ?? IntPtr.Zero) == (y?.ThisPtr ?? IntPtr.Zero);
        public static bool operator !=(CompositionPropertySet x, CompositionPropertySet y) => !(x == y);
        public bool Equals(CompositionPropertySet other) => this == other;
        public override bool Equals(object obj) => obj is CompositionPropertySet that && this == that;
        public override int GetHashCode() => ThisPtr.GetHashCode();


        bool IWinRTObject.HasUnwrappableNativeObject => true;
        IObjectReference IWinRTObject.NativeObject => _inner;

        private struct InterfaceTag<I>{};


        public void InsertColor(string propertyName, global::Windows.UI.Color value) => global::ABI.Microsoft.UI.Composition.ICompositionPropertySetMethods.InsertColor(_objRef_global__Microsoft_UI_Composition_ICompositionPropertySet, propertyName, value);

        public void InsertMatrix3x2(string propertyName, global::System.Numerics.Matrix3x2 value) => global::ABI.Microsoft.UI.Composition.ICompositionPropertySetMethods.InsertMatrix3x2(_objRef_global__Microsoft_UI_Composition_ICompositionPropertySet, propertyName, value);

        public void InsertMatrix4x4(string propertyName, global::System.Numerics.Matrix4x4 value) => global::ABI.Microsoft.UI.Composition.ICompositionPropertySetMethods.InsertMatrix4x4(_objRef_global__Microsoft_UI_Composition_ICompositionPropertySet, propertyName, value);

        public void InsertQuaternion(string propertyName, global::System.Numerics.Quaternion value) => global::ABI.Microsoft.UI.Composition.ICompositionPropertySetMethods.InsertQuaternion(_objRef_global__Microsoft_UI_Composition_ICompositionPropertySet, propertyName, value);

        public void InsertScalar(string propertyName, float value) => global::ABI.Microsoft.UI.Composition.ICompositionPropertySetMethods.InsertScalar(_objRef_global__Microsoft_UI_Composition_ICompositionPropertySet, propertyName, value);

        public void InsertVector2(string propertyName, global::System.Numerics.Vector2 value) => global::ABI.Microsoft.UI.Composition.ICompositionPropertySetMethods.InsertVector2(_objRef_global__Microsoft_UI_Composition_ICompositionPropertySet, propertyName, value);

        public void InsertVector3(string propertyName, global::System.Numerics.Vector3 value) => global::ABI.Microsoft.UI.Composition.ICompositionPropertySetMethods.InsertVector3(_objRef_global__Microsoft_UI_Composition_ICompositionPropertySet, propertyName, value);

        public void InsertVector4(string propertyName, global::System.Numerics.Vector4 value) => global::ABI.Microsoft.UI.Composition.ICompositionPropertySetMethods.InsertVector4(_objRef_global__Microsoft_UI_Composition_ICompositionPropertySet, propertyName, value);

        public CompositionGetValueStatus TryGetColor(string propertyName, out global::Windows.UI.Color value) => global::ABI.Microsoft.UI.Composition.ICompositionPropertySetMethods.TryGetColor(_objRef_global__Microsoft_UI_Composition_ICompositionPropertySet, propertyName, out value);

        public CompositionGetValueStatus TryGetMatrix3x2(string propertyName, out global::System.Numerics.Matrix3x2 value) => global::ABI.Microsoft.UI.Composition.ICompositionPropertySetMethods.TryGetMatrix3x2(_objRef_global__Microsoft_UI_Composition_ICompositionPropertySet, propertyName, out value);

        public CompositionGetValueStatus TryGetMatrix4x4(string propertyName, out global::System.Numerics.Matrix4x4 value) => global::ABI.Microsoft.UI.Composition.ICompositionPropertySetMethods.TryGetMatrix4x4(_objRef_global__Microsoft_UI_Composition_ICompositionPropertySet, propertyName, out value);

        public CompositionGetValueStatus TryGetQuaternion(string propertyName, out global::System.Numerics.Quaternion value) => global::ABI.Microsoft.UI.Composition.ICompositionPropertySetMethods.TryGetQuaternion(_objRef_global__Microsoft_UI_Composition_ICompositionPropertySet, propertyName, out value);

        public CompositionGetValueStatus TryGetScalar(string propertyName, out float value) => global::ABI.Microsoft.UI.Composition.ICompositionPropertySetMethods.TryGetScalar(_objRef_global__Microsoft_UI_Composition_ICompositionPropertySet, propertyName, out value);

        public CompositionGetValueStatus TryGetVector2(string propertyName, out global::System.Numerics.Vector2 value) => global::ABI.Microsoft.UI.Composition.ICompositionPropertySetMethods.TryGetVector2(_objRef_global__Microsoft_UI_Composition_ICompositionPropertySet, propertyName, out value);

        public CompositionGetValueStatus TryGetVector3(string propertyName, out global::System.Numerics.Vector3 value) => global::ABI.Microsoft.UI.Composition.ICompositionPropertySetMethods.TryGetVector3(_objRef_global__Microsoft_UI_Composition_ICompositionPropertySet, propertyName, out value);

        public CompositionGetValueStatus TryGetVector4(string propertyName, out global::System.Numerics.Vector4 value) => global::ABI.Microsoft.UI.Composition.ICompositionPropertySetMethods.TryGetVector4(_objRef_global__Microsoft_UI_Composition_ICompositionPropertySet, propertyName, out value);

        public void InsertBoolean(string propertyName, bool value) => global::ABI.Microsoft.UI.Composition.ICompositionPropertySet2Methods.InsertBoolean(_objRef_global__Microsoft_UI_Composition_ICompositionPropertySet2, propertyName, value);

        public CompositionGetValueStatus TryGetBoolean(string propertyName, out bool value) => global::ABI.Microsoft.UI.Composition.ICompositionPropertySet2Methods.TryGetBoolean(_objRef_global__Microsoft_UI_Composition_ICompositionPropertySet2, propertyName, out value);

        protected override bool IsOverridableInterface(Guid iid) => base.IsOverridableInterface(iid);

        global::System.Runtime.InteropServices.CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(ref Guid iid, out IntPtr ppv)
        {
            ppv = IntPtr.Zero;
            if (IsOverridableInterface(iid) || global::WinRT.Interop.IID.IID_IInspectable == iid)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
            }

            if (((IWinRTObject)this).NativeObject.TryAs(iid, out ppv) >= 0)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.Handled;
            }

            return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
        }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI")]
    [global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Composition.CompositionRadialGradientBrush))]
    [global::ABI.Microsoft.UI.Composition.CompositionRadialGradientBrushRcwFactory]
    [global::WinRT.ProjectedRuntimeClass(typeof(ICompositionRadialGradientBrush))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.Foundation.WindowsAppSDKContract), 65536u)]
    public sealed class CompositionRadialGradientBrush : CompositionGradientBrush, global::System.Runtime.InteropServices.ICustomQueryInterface, IWinRTObject, IEquatable<CompositionRadialGradientBrush>
    {
        private IntPtr ThisPtr => _inner == null ? (((IWinRTObject)this).NativeObject).ThisPtr : _inner.ThisPtr;

        private readonly IObjectReference _inner = null;



        private IObjectReference _objRef_global__Microsoft_UI_Composition_ICompositionRadialGradientBrush => _inner;


        public static new CompositionRadialGradientBrush FromAbi(IntPtr thisPtr)
        {
            if (thisPtr == IntPtr.Zero) return null;
            return MarshalInspectable<CompositionRadialGradientBrush>.FromAbi(thisPtr);
        }

        internal CompositionRadialGradientBrush(IObjectReference objRef)
            : base(global::WinRT.DerivedComposed.Instance)

        {
            _inner = objRef.As(global::ABI.Microsoft.UI.Composition.ICompositionRadialGradientBrushMethods.IID);

        }


        public static bool operator ==(CompositionRadialGradientBrush x, CompositionRadialGradientBrush y) => (x?.ThisPtr ?? IntPtr.Zero) == (y?.ThisPtr ?? IntPtr.Zero);
        public static bool operator !=(CompositionRadialGradientBrush x, CompositionRadialGradientBrush y) => !(x == y);
        public bool Equals(CompositionRadialGradientBrush other) => this == other;
        public override bool Equals(object obj) => obj is CompositionRadialGradientBrush that && this == that;
        public override int GetHashCode() => ThisPtr.GetHashCode();


        bool IWinRTObject.HasUnwrappableNativeObject => true;
        IObjectReference IWinRTObject.NativeObject => _inner;

        private struct InterfaceTag<I>{};


        public global::System.Numerics.Vector2 EllipseCenter
        {
            get => global::ABI.Microsoft.UI.Composition.ICompositionRadialGradientBrushMethods.get_EllipseCenter(_objRef_global__Microsoft_UI_Composition_ICompositionRadialGradientBrush);
            set => global::ABI.Microsoft.UI.Composition.ICompositionRadialGradientBrushMethods.set_EllipseCenter(_objRef_global__Microsoft_UI_Composition_ICompositionRadialGradientBrush, value);
        }

        public global::System.Numerics.Vector2 EllipseRadius
        {
            get => global::ABI.Microsoft.UI.Composition.ICompositionRadialGradientBrushMethods.get_EllipseRadius(_objRef_global__Microsoft_UI_Composition_ICompositionRadialGradientBrush);
            set => global::ABI.Microsoft.UI.Composition.ICompositionRadialGradientBrushMethods.set_EllipseRadius(_objRef_global__Microsoft_UI_Composition_ICompositionRadialGradientBrush, value);
        }

        public global::System.Numerics.Vector2 GradientOriginOffset
        {
            get => global::ABI.Microsoft.UI.Composition.ICompositionRadialGradientBrushMethods.get_GradientOriginOffset(_objRef_global__Microsoft_UI_Composition_ICompositionRadialGradientBrush);
            set => global::ABI.Microsoft.UI.Composition.ICompositionRadialGradientBrushMethods.set_GradientOriginOffset(_objRef_global__Microsoft_UI_Composition_ICompositionRadialGradientBrush, value);
        }

        protected override bool IsOverridableInterface(Guid iid) => base.IsOverridableInterface(iid);

        global::System.Runtime.InteropServices.CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(ref Guid iid, out IntPtr ppv)
        {
            ppv = IntPtr.Zero;
            if (IsOverridableInterface(iid) || global::WinRT.Interop.IID.IID_IInspectable == iid)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
            }

            if (((IWinRTObject)this).NativeObject.TryAs(iid, out ppv) >= 0)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.Handled;
            }

            return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
        }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI")]
    [global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Composition.CompositionRectangleGeometry))]
    [global::ABI.Microsoft.UI.Composition.CompositionRectangleGeometryRcwFactory]
    [global::WinRT.ProjectedRuntimeClass(typeof(ICompositionRectangleGeometry))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.Foundation.WindowsAppSDKContract), 65536u)]
    public sealed class CompositionRectangleGeometry : CompositionGeometry, global::System.Runtime.InteropServices.ICustomQueryInterface, IWinRTObject, IEquatable<CompositionRectangleGeometry>
    {
        private IntPtr ThisPtr => _inner == null ? (((IWinRTObject)this).NativeObject).ThisPtr : _inner.ThisPtr;

        private readonly IObjectReference _inner = null;



        private IObjectReference _objRef_global__Microsoft_UI_Composition_ICompositionRectangleGeometry => _inner;


        public static new CompositionRectangleGeometry FromAbi(IntPtr thisPtr)
        {
            if (thisPtr == IntPtr.Zero) return null;
            return MarshalInspectable<CompositionRectangleGeometry>.FromAbi(thisPtr);
        }

        internal CompositionRectangleGeometry(IObjectReference objRef)
            : base(global::WinRT.DerivedComposed.Instance)

        {
            _inner = objRef.As(global::ABI.Microsoft.UI.Composition.ICompositionRectangleGeometryMethods.IID);

        }


        public static bool operator ==(CompositionRectangleGeometry x, CompositionRectangleGeometry y) => (x?.ThisPtr ?? IntPtr.Zero) == (y?.ThisPtr ?? IntPtr.Zero);
        public static bool operator !=(CompositionRectangleGeometry x, CompositionRectangleGeometry y) => !(x == y);
        public bool Equals(CompositionRectangleGeometry other) => this == other;
        public override bool Equals(object obj) => obj is CompositionRectangleGeometry that && this == that;
        public override int GetHashCode() => ThisPtr.GetHashCode();


        bool IWinRTObject.HasUnwrappableNativeObject => true;
        IObjectReference IWinRTObject.NativeObject => _inner;

        private struct InterfaceTag<I>{};


        public global::System.Numerics.Vector2 Offset
        {
            get => global::ABI.Microsoft.UI.Composition.ICompositionRectangleGeometryMethods.get_Offset(_objRef_global__Microsoft_UI_Composition_ICompositionRectangleGeometry);
            set => global::ABI.Microsoft.UI.Composition.ICompositionRectangleGeometryMethods.set_Offset(_objRef_global__Microsoft_UI_Composition_ICompositionRectangleGeometry, value);
        }

        public global::System.Numerics.Vector2 Size
        {
            get => global::ABI.Microsoft.UI.Composition.ICompositionRectangleGeometryMethods.get_Size(_objRef_global__Microsoft_UI_Composition_ICompositionRectangleGeometry);
            set => global::ABI.Microsoft.UI.Composition.ICompositionRectangleGeometryMethods.set_Size(_objRef_global__Microsoft_UI_Composition_ICompositionRectangleGeometry, value);
        }

        protected override bool IsOverridableInterface(Guid iid) => base.IsOverridableInterface(iid);

        global::System.Runtime.InteropServices.CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(ref Guid iid, out IntPtr ppv)
        {
            ppv = IntPtr.Zero;
            if (IsOverridableInterface(iid) || global::WinRT.Interop.IID.IID_IInspectable == iid)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
            }

            if (((IWinRTObject)this).NativeObject.TryAs(iid, out ppv) >= 0)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.Handled;
            }

            return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
        }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI")]
    [global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Composition.CompositionRoundedRectangleGeometry))]
    [global::ABI.Microsoft.UI.Composition.CompositionRoundedRectangleGeometryRcwFactory]
    [global::WinRT.ProjectedRuntimeClass(typeof(ICompositionRoundedRectangleGeometry))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.Foundation.WindowsAppSDKContract), 65536u)]
    public sealed class CompositionRoundedRectangleGeometry : CompositionGeometry, global::System.Runtime.InteropServices.ICustomQueryInterface, IWinRTObject, IEquatable<CompositionRoundedRectangleGeometry>
    {
        private IntPtr ThisPtr => _inner == null ? (((IWinRTObject)this).NativeObject).ThisPtr : _inner.ThisPtr;

        private readonly IObjectReference _inner = null;



        private IObjectReference _objRef_global__Microsoft_UI_Composition_ICompositionRoundedRectangleGeometry => _inner;


        public static new CompositionRoundedRectangleGeometry FromAbi(IntPtr thisPtr)
        {
            if (thisPtr == IntPtr.Zero) return null;
            return MarshalInspectable<CompositionRoundedRectangleGeometry>.FromAbi(thisPtr);
        }

        internal CompositionRoundedRectangleGeometry(IObjectReference objRef)
            : base(global::WinRT.DerivedComposed.Instance)

        {
            _inner = objRef.As(global::ABI.Microsoft.UI.Composition.ICompositionRoundedRectangleGeometryMethods.IID);

        }


        public static bool operator ==(CompositionRoundedRectangleGeometry x, CompositionRoundedRectangleGeometry y) => (x?.ThisPtr ?? IntPtr.Zero) == (y?.ThisPtr ?? IntPtr.Zero);
        public static bool operator !=(CompositionRoundedRectangleGeometry x, CompositionRoundedRectangleGeometry y) => !(x == y);
        public bool Equals(CompositionRoundedRectangleGeometry other) => this == other;
        public override bool Equals(object obj) => obj is CompositionRoundedRectangleGeometry that && this == that;
        public override int GetHashCode() => ThisPtr.GetHashCode();


        bool IWinRTObject.HasUnwrappableNativeObject => true;
        IObjectReference IWinRTObject.NativeObject => _inner;

        private struct InterfaceTag<I>{};


        public global::System.Numerics.Vector2 CornerRadius
        {
            get => global::ABI.Microsoft.UI.Composition.ICompositionRoundedRectangleGeometryMethods.get_CornerRadius(_objRef_global__Microsoft_UI_Composition_ICompositionRoundedRectangleGeometry);
            set => global::ABI.Microsoft.UI.Composition.ICompositionRoundedRectangleGeometryMethods.set_CornerRadius(_objRef_global__Microsoft_UI_Composition_ICompositionRoundedRectangleGeometry, value);
        }

        public global::System.Numerics.Vector2 Offset
        {
            get => global::ABI.Microsoft.UI.Composition.ICompositionRoundedRectangleGeometryMethods.get_Offset(_objRef_global__Microsoft_UI_Composition_ICompositionRoundedRectangleGeometry);
            set => global::ABI.Microsoft.UI.Composition.ICompositionRoundedRectangleGeometryMethods.set_Offset(_objRef_global__Microsoft_UI_Composition_ICompositionRoundedRectangleGeometry, value);
        }

        public global::System.Numerics.Vector2 Size
        {
            get => global::ABI.Microsoft.UI.Composition.ICompositionRoundedRectangleGeometryMethods.get_Size(_objRef_global__Microsoft_UI_Composition_ICompositionRoundedRectangleGeometry);
            set => global::ABI.Microsoft.UI.Composition.ICompositionRoundedRectangleGeometryMethods.set_Size(_objRef_global__Microsoft_UI_Composition_ICompositionRoundedRectangleGeometry, value);
        }

        protected override bool IsOverridableInterface(Guid iid) => base.IsOverridableInterface(iid);

        global::System.Runtime.InteropServices.CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(ref Guid iid, out IntPtr ppv)
        {
            ppv = IntPtr.Zero;
            if (IsOverridableInterface(iid) || global::WinRT.Interop.IID.IID_IInspectable == iid)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
            }

            if (((IWinRTObject)this).NativeObject.TryAs(iid, out ppv) >= 0)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.Handled;
            }

            return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
        }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI")]
    [global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Composition.CompositionScopedBatch))]
    [global::ABI.Microsoft.UI.Composition.CompositionScopedBatchRcwFactory]
    [global::WinRT.ProjectedRuntimeClass(typeof(ICompositionScopedBatch))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.Foundation.WindowsAppSDKContract), 65536u)]
    public sealed class CompositionScopedBatch : CompositionObject, global::System.Runtime.InteropServices.ICustomQueryInterface, IWinRTObject, IEquatable<CompositionScopedBatch>
    {
        private IntPtr ThisPtr => _inner == null ? (((IWinRTObject)this).NativeObject).ThisPtr : _inner.ThisPtr;

        private readonly IObjectReference _inner = null;



        private IObjectReference _objRef_global__Microsoft_UI_Composition_ICompositionScopedBatch => _inner;


        public static new CompositionScopedBatch FromAbi(IntPtr thisPtr)
        {
            if (thisPtr == IntPtr.Zero) return null;
            return MarshalInspectable<CompositionScopedBatch>.FromAbi(thisPtr);
        }

        internal CompositionScopedBatch(IObjectReference objRef)
            : base(global::WinRT.DerivedComposed.Instance)

        {
            _inner = objRef.As(global::ABI.Microsoft.UI.Composition.ICompositionScopedBatchMethods.IID);

        }


        public static bool operator ==(CompositionScopedBatch x, CompositionScopedBatch y) => (x?.ThisPtr ?? IntPtr.Zero) == (y?.ThisPtr ?? IntPtr.Zero);
        public static bool operator !=(CompositionScopedBatch x, CompositionScopedBatch y) => !(x == y);
        public bool Equals(CompositionScopedBatch other) => this == other;
        public override bool Equals(object obj) => obj is CompositionScopedBatch that && this == that;
        public override int GetHashCode() => ThisPtr.GetHashCode();


        bool IWinRTObject.HasUnwrappableNativeObject => true;
        IObjectReference IWinRTObject.NativeObject => _inner;

        private struct InterfaceTag<I>{};


        public void End() => global::ABI.Microsoft.UI.Composition.ICompositionScopedBatchMethods.End(_objRef_global__Microsoft_UI_Composition_ICompositionScopedBatch);

        public void Resume() => global::ABI.Microsoft.UI.Composition.ICompositionScopedBatchMethods.Resume(_objRef_global__Microsoft_UI_Composition_ICompositionScopedBatch);

        public void Suspend() => global::ABI.Microsoft.UI.Composition.ICompositionScopedBatchMethods.Suspend(_objRef_global__Microsoft_UI_Composition_ICompositionScopedBatch);

        public event global::Windows.Foundation.TypedEventHandler<object, CompositionBatchCompletedEventArgs> Completed
        {
            add => global::ABI.Microsoft.UI.Composition.ICompositionScopedBatchMethods.Get_Completed2(_objRef_global__Microsoft_UI_Composition_ICompositionScopedBatch, (IWinRTObject)this).Subscribe(value);
            remove => global::ABI.Microsoft.UI.Composition.ICompositionScopedBatchMethods.Get_Completed2(_objRef_global__Microsoft_UI_Composition_ICompositionScopedBatch, (IWinRTObject)this).Unsubscribe(value);
        }

        public bool IsActive => global::ABI.Microsoft.UI.Composition.ICompositionScopedBatchMethods.get_IsActive(_objRef_global__Microsoft_UI_Composition_ICompositionScopedBatch);

        public bool IsEnded => global::ABI.Microsoft.UI.Composition.ICompositionScopedBatchMethods.get_IsEnded(_objRef_global__Microsoft_UI_Composition_ICompositionScopedBatch);

        protected override bool IsOverridableInterface(Guid iid) => base.IsOverridableInterface(iid);

        global::System.Runtime.InteropServices.CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(ref Guid iid, out IntPtr ppv)
        {
            ppv = IntPtr.Zero;
            if (IsOverridableInterface(iid) || global::WinRT.Interop.IID.IID_IInspectable == iid)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
            }

            if (((IWinRTObject)this).NativeObject.TryAs(iid, out ppv) >= 0)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.Handled;
            }

            return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
        }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI")]
    [global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Composition.CompositionShadow))]
    [global::ABI.Microsoft.UI.Composition.CompositionShadowRcwFactory]
    [global::WinRT.ProjectedRuntimeClass(typeof(ICompositionShadow))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.Foundation.WindowsAppSDKContract), 65536u)]
    public class CompositionShadow : CompositionObject, global::System.Runtime.InteropServices.ICustomQueryInterface, IWinRTObject, IEquatable<CompositionShadow>
    {
        private IntPtr ThisPtr => _inner == null ? (((IWinRTObject)this).NativeObject).ThisPtr : _inner.ThisPtr;

        private readonly IObjectReference _inner = null;




        private volatile IObjectReference ___objRef_global__Microsoft_UI_Composition_ICompositionShadow;
        private IObjectReference Make___objRef_global__Microsoft_UI_Composition_ICompositionShadow()
        {
            global::System.Threading.Interlocked.CompareExchange(ref ___objRef_global__Microsoft_UI_Composition_ICompositionShadow, ((IWinRTObject)this).NativeObject.As<IUnknownVftbl>(global::ABI.Microsoft.UI.Composition.ICompositionShadowMethods.IID), null);
            return ___objRef_global__Microsoft_UI_Composition_ICompositionShadow;
        }
        private IObjectReference _objRef_global__Microsoft_UI_Composition_ICompositionShadow => ___objRef_global__Microsoft_UI_Composition_ICompositionShadow ?? Make___objRef_global__Microsoft_UI_Composition_ICompositionShadow();



        private static class _ICompositionShadowFactoryMethods
        {}

        private static volatile IObjectReference ___objRef_global__Microsoft_UI_Composition_ICompositionShadowFactory;
        private static IObjectReference _objRef_global__Microsoft_UI_Composition_ICompositionShadowFactory
        {
            get
            { 
                var factory = ___objRef_global__Microsoft_UI_Composition_ICompositionShadowFactory;
                if (factory != null && factory.IsInCurrentContext)
                {
                    return factory;
                }
                else
                {
                    return ___objRef_global__Microsoft_UI_Composition_ICompositionShadowFactory = ActivationFactory.Get("Microsoft.UI.Composition.CompositionShadow", global::ABI.Microsoft.UI.Composition.ICompositionShadowFactoryMethods.IID);
                }
            }
        }

        public static new CompositionShadow FromAbi(IntPtr thisPtr)
        {
            if (thisPtr == IntPtr.Zero) return null;
            return MarshalInspectable<CompositionShadow>.FromAbi(thisPtr);
        }

        protected internal CompositionShadow(IObjectReference objRef)
            : base(global::WinRT.DerivedComposed.Instance)

        {
            _inner = objRef.As(global::ABI.Microsoft.UI.Composition.ICompositionShadowMethods.IID);

        }


        public static bool operator ==(CompositionShadow x, CompositionShadow y) => (x?.ThisPtr ?? IntPtr.Zero) == (y?.ThisPtr ?? IntPtr.Zero);
        public static bool operator !=(CompositionShadow x, CompositionShadow y) => !(x == y);
        public bool Equals(CompositionShadow other) => this == other;
        public override bool Equals(object obj) => obj is CompositionShadow that && this == that;
        public override int GetHashCode() => ThisPtr.GetHashCode();


        protected CompositionShadow(global::WinRT.DerivedComposed _):base(_)
        {

        }
        bool IWinRTObject.HasUnwrappableNativeObject => this.GetType() == typeof(CompositionShadow);
        IObjectReference IWinRTObject.NativeObject => _inner;

        private struct InterfaceTag<I>{};


        protected override bool IsOverridableInterface(Guid iid) => base.IsOverridableInterface(iid);

        global::System.Runtime.InteropServices.CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(ref Guid iid, out IntPtr ppv)
        {
            ppv = IntPtr.Zero;
            if (IsOverridableInterface(iid) || global::WinRT.Interop.IID.IID_IInspectable == iid)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
            }

            if (((IWinRTObject)this).NativeObject.TryAs(iid, out ppv) >= 0)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.Handled;
            }

            return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
        }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI")]
    [global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Composition.CompositionShape))]
    [global::ABI.Microsoft.UI.Composition.CompositionShapeRcwFactory]
    [global::WinRT.ProjectedRuntimeClass(typeof(ICompositionShape))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.Foundation.WindowsAppSDKContract), 65536u)]
    public class CompositionShape : CompositionObject, global::System.Runtime.InteropServices.ICustomQueryInterface, IWinRTObject, IEquatable<CompositionShape>
    {
        private IntPtr ThisPtr => _inner == null ? (((IWinRTObject)this).NativeObject).ThisPtr : _inner.ThisPtr;

        private readonly IObjectReference _inner = null;




        private volatile IObjectReference ___objRef_global__Microsoft_UI_Composition_ICompositionShape;
        private IObjectReference Make___objRef_global__Microsoft_UI_Composition_ICompositionShape()
        {
            global::System.Threading.Interlocked.CompareExchange(ref ___objRef_global__Microsoft_UI_Composition_ICompositionShape, ((IWinRTObject)this).NativeObject.As<IUnknownVftbl>(global::ABI.Microsoft.UI.Composition.ICompositionShapeMethods.IID), null);
            return ___objRef_global__Microsoft_UI_Composition_ICompositionShape;
        }
        private IObjectReference _objRef_global__Microsoft_UI_Composition_ICompositionShape => ___objRef_global__Microsoft_UI_Composition_ICompositionShape ?? Make___objRef_global__Microsoft_UI_Composition_ICompositionShape();



        private static class _ICompositionShapeFactoryMethods
        {}

        private static volatile IObjectReference ___objRef_global__Microsoft_UI_Composition_ICompositionShapeFactory;
        private static IObjectReference _objRef_global__Microsoft_UI_Composition_ICompositionShapeFactory
        {
            get
            { 
                var factory = ___objRef_global__Microsoft_UI_Composition_ICompositionShapeFactory;
                if (factory != null && factory.IsInCurrentContext)
                {
                    return factory;
                }
                else
                {
                    return ___objRef_global__Microsoft_UI_Composition_ICompositionShapeFactory = ActivationFactory.Get("Microsoft.UI.Composition.CompositionShape", global::ABI.Microsoft.UI.Composition.ICompositionShapeFactoryMethods.IID);
                }
            }
        }

        public static new CompositionShape FromAbi(IntPtr thisPtr)
        {
            if (thisPtr == IntPtr.Zero) return null;
            return MarshalInspectable<CompositionShape>.FromAbi(thisPtr);
        }

        protected internal CompositionShape(IObjectReference objRef)
            : base(global::WinRT.DerivedComposed.Instance)

        {
            _inner = objRef.As(global::ABI.Microsoft.UI.Composition.ICompositionShapeMethods.IID);

        }


        public static bool operator ==(CompositionShape x, CompositionShape y) => (x?.ThisPtr ?? IntPtr.Zero) == (y?.ThisPtr ?? IntPtr.Zero);
        public static bool operator !=(CompositionShape x, CompositionShape y) => !(x == y);
        public bool Equals(CompositionShape other) => this == other;
        public override bool Equals(object obj) => obj is CompositionShape that && this == that;
        public override int GetHashCode() => ThisPtr.GetHashCode();


        protected CompositionShape(global::WinRT.DerivedComposed _):base(_)
        {

        }
        bool IWinRTObject.HasUnwrappableNativeObject => this.GetType() == typeof(CompositionShape);
        IObjectReference IWinRTObject.NativeObject => _inner;

        private struct InterfaceTag<I>{};


        public global::System.Numerics.Vector2 CenterPoint
        {
            get => global::ABI.Microsoft.UI.Composition.ICompositionShapeMethods.get_CenterPoint(_objRef_global__Microsoft_UI_Composition_ICompositionShape);
            set => global::ABI.Microsoft.UI.Composition.ICompositionShapeMethods.set_CenterPoint(_objRef_global__Microsoft_UI_Composition_ICompositionShape, value);
        }

        public global::System.Numerics.Vector2 Offset
        {
            get => global::ABI.Microsoft.UI.Composition.ICompositionShapeMethods.get_Offset(_objRef_global__Microsoft_UI_Composition_ICompositionShape);
            set => global::ABI.Microsoft.UI.Composition.ICompositionShapeMethods.set_Offset(_objRef_global__Microsoft_UI_Composition_ICompositionShape, value);
        }

        public float RotationAngle
        {
            get => global::ABI.Microsoft.UI.Composition.ICompositionShapeMethods.get_RotationAngle(_objRef_global__Microsoft_UI_Composition_ICompositionShape);
            set => global::ABI.Microsoft.UI.Composition.ICompositionShapeMethods.set_RotationAngle(_objRef_global__Microsoft_UI_Composition_ICompositionShape, value);
        }

        public float RotationAngleInDegrees
        {
            get => global::ABI.Microsoft.UI.Composition.ICompositionShapeMethods.get_RotationAngleInDegrees(_objRef_global__Microsoft_UI_Composition_ICompositionShape);
            set => global::ABI.Microsoft.UI.Composition.ICompositionShapeMethods.set_RotationAngleInDegrees(_objRef_global__Microsoft_UI_Composition_ICompositionShape, value);
        }

        public global::System.Numerics.Vector2 Scale
        {
            get => global::ABI.Microsoft.UI.Composition.ICompositionShapeMethods.get_Scale(_objRef_global__Microsoft_UI_Composition_ICompositionShape);
            set => global::ABI.Microsoft.UI.Composition.ICompositionShapeMethods.set_Scale(_objRef_global__Microsoft_UI_Composition_ICompositionShape, value);
        }

        public global::System.Numerics.Matrix3x2 TransformMatrix
        {
            get => global::ABI.Microsoft.UI.Composition.ICompositionShapeMethods.get_TransformMatrix(_objRef_global__Microsoft_UI_Composition_ICompositionShape);
            set => global::ABI.Microsoft.UI.Composition.ICompositionShapeMethods.set_TransformMatrix(_objRef_global__Microsoft_UI_Composition_ICompositionShape, value);
        }

        protected override bool IsOverridableInterface(Guid iid) => base.IsOverridableInterface(iid);

        global::System.Runtime.InteropServices.CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(ref Guid iid, out IntPtr ppv)
        {
            ppv = IntPtr.Zero;
            if (IsOverridableInterface(iid) || global::WinRT.Interop.IID.IID_IInspectable == iid)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
            }

            if (((IWinRTObject)this).NativeObject.TryAs(iid, out ppv) >= 0)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.Handled;
            }

            return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
        }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI")]
    [global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Composition.CompositionShapeCollection))]
    [global::ABI.Microsoft.UI.Composition.CompositionShapeCollectionRcwFactory]
    [global::WinRT.ProjectedRuntimeClass(typeof(global::System.Collections.Generic.IList<CompositionShape>))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.Foundation.WindowsAppSDKContract), 65536u)]
    public sealed class CompositionShapeCollection : CompositionObject, global::System.Collections.Generic.IList<CompositionShape>, global::System.Collections.Generic.IEnumerable<CompositionShape>, global::System.Runtime.InteropServices.ICustomQueryInterface, IWinRTObject, IEquatable<CompositionShapeCollection>
    {
        private IntPtr ThisPtr => _inner == null ? (((IWinRTObject)this).NativeObject).ThisPtr : _inner.ThisPtr;

        private readonly IObjectReference _inner = null;




        private volatile IObjectReference ___objRef_global__System_Collections_Generic_IList_CompositionShape_;
        private IObjectReference Make___objRef_global__System_Collections_Generic_IList_CompositionShape_()
        {
            _ = global::WinRT.GenericTypeInstantiations.Windows_Foundation_Collections_IVector_1_Microsoft_UI_Composition_CompositionShape.EnsureInitialized();
            global::System.Threading.Interlocked.CompareExchange(ref ___objRef_global__System_Collections_Generic_IList_CompositionShape_, ((IWinRTObject)this).NativeObject.As<IUnknownVftbl>(global::ABI.System.Collections.Generic.IListMethods<CompositionShape>.IID), null);
            return ___objRef_global__System_Collections_Generic_IList_CompositionShape_;
        }
        private IObjectReference _objRef_global__System_Collections_Generic_IList_CompositionShape_ => ___objRef_global__System_Collections_Generic_IList_CompositionShape_ ?? Make___objRef_global__System_Collections_Generic_IList_CompositionShape_();

        private volatile IObjectReference ___objRef_global__System_Collections_Generic_IEnumerable_CompositionShape_;
        private IObjectReference Make___objRef_global__System_Collections_Generic_IEnumerable_CompositionShape_()
        {
            _ = global::WinRT.GenericTypeInstantiations.Windows_Foundation_Collections_IIterable_1_Microsoft_UI_Composition_CompositionShape.EnsureInitialized();
            global::System.Threading.Interlocked.CompareExchange(ref ___objRef_global__System_Collections_Generic_IEnumerable_CompositionShape_, ((IWinRTObject)this).NativeObject.As<IUnknownVftbl>(global::ABI.System.Collections.Generic.IEnumerableMethods<CompositionShape>.IID), null);
            return ___objRef_global__System_Collections_Generic_IEnumerable_CompositionShape_;
        }
        private IObjectReference _objRef_global__System_Collections_Generic_IEnumerable_CompositionShape_ => ___objRef_global__System_Collections_Generic_IEnumerable_CompositionShape_ ?? Make___objRef_global__System_Collections_Generic_IEnumerable_CompositionShape_();



        public static new CompositionShapeCollection FromAbi(IntPtr thisPtr)
        {
            if (thisPtr == IntPtr.Zero) return null;
            return MarshalInspectable<CompositionShapeCollection>.FromAbi(thisPtr);
        }

        internal CompositionShapeCollection(IObjectReference objRef)
            : base(global::WinRT.DerivedComposed.Instance)

        {
            _inner = objRef.As(global::ABI.System.Collections.Generic.IListMethods<CompositionShape>.IID);

        }


        public static bool operator ==(CompositionShapeCollection x, CompositionShapeCollection y) => (x?.ThisPtr ?? IntPtr.Zero) == (y?.ThisPtr ?? IntPtr.Zero);
        public static bool operator !=(CompositionShapeCollection x, CompositionShapeCollection y) => !(x == y);
        public bool Equals(CompositionShapeCollection other) => this == other;
        public override bool Equals(object obj) => obj is CompositionShapeCollection that && this == that;
        public override int GetHashCode() => ThisPtr.GetHashCode();


        bool IWinRTObject.HasUnwrappableNativeObject => true;
        IObjectReference IWinRTObject.NativeObject => _inner;

        private struct InterfaceTag<I>{};


        public int Count => global::ABI.System.Collections.Generic.IListMethods<CompositionShape>.get_Count(_objRef_global__System_Collections_Generic_IList_CompositionShape_);
        public bool IsReadOnly => global::ABI.System.Collections.Generic.IListMethods<CompositionShape>.get_IsReadOnly(_objRef_global__System_Collections_Generic_IList_CompositionShape_);
        [global::System.Runtime.CompilerServices.IndexerName("ListItem")]
        public CompositionShape this[int index] 
        {
            get => global::ABI.System.Collections.Generic.IListMethods<CompositionShape>.Indexer_Get(_objRef_global__System_Collections_Generic_IList_CompositionShape_, index);
            set => global::ABI.System.Collections.Generic.IListMethods<CompositionShape>.Indexer_Set(_objRef_global__System_Collections_Generic_IList_CompositionShape_, index, value);
        }
        public int IndexOf(CompositionShape item) => global::ABI.System.Collections.Generic.IListMethods<CompositionShape>.IndexOf(_objRef_global__System_Collections_Generic_IList_CompositionShape_, item);
        public void Insert(int index, CompositionShape item) => global::ABI.System.Collections.Generic.IListMethods<CompositionShape>.Insert(_objRef_global__System_Collections_Generic_IList_CompositionShape_, index, item);
        public void RemoveAt(int index) => global::ABI.System.Collections.Generic.IListMethods<CompositionShape>.RemoveAt(_objRef_global__System_Collections_Generic_IList_CompositionShape_, index);
        public void Add(CompositionShape item) => global::ABI.System.Collections.Generic.IListMethods<CompositionShape>.Add(_objRef_global__System_Collections_Generic_IList_CompositionShape_, item);
        public void Clear() => global::ABI.System.Collections.Generic.IListMethods<CompositionShape>.Clear(_objRef_global__System_Collections_Generic_IList_CompositionShape_);
        public bool Contains(CompositionShape item) => global::ABI.System.Collections.Generic.IListMethods<CompositionShape>.Contains(_objRef_global__System_Collections_Generic_IList_CompositionShape_, item);
        public void CopyTo(CompositionShape[] array, int arrayIndex) => global::ABI.System.Collections.Generic.IListMethods<CompositionShape>.CopyTo(_objRef_global__System_Collections_Generic_IList_CompositionShape_, array, arrayIndex);
        public bool Remove(CompositionShape item) => global::ABI.System.Collections.Generic.IListMethods<CompositionShape>.Remove(_objRef_global__System_Collections_Generic_IList_CompositionShape_, item);

        public IEnumerator<CompositionShape> GetEnumerator() => global::ABI.System.Collections.Generic.IEnumerableMethods<CompositionShape>.GetEnumerator(_objRef_global__System_Collections_Generic_IEnumerable_CompositionShape_);

        IEnumerator IEnumerable.GetEnumerator() => GetEnumerator();

        protected override bool IsOverridableInterface(Guid iid) => base.IsOverridableInterface(iid);

        global::System.Runtime.InteropServices.CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(ref Guid iid, out IntPtr ppv)
        {
            ppv = IntPtr.Zero;
            if (IsOverridableInterface(iid) || global::WinRT.Interop.IID.IID_IInspectable == iid)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
            }

            if (((IWinRTObject)this).NativeObject.TryAs(iid, out ppv) >= 0)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.Handled;
            }

            return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
        }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI")]
    [global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Composition.CompositionSpriteShape))]
    [global::ABI.Microsoft.UI.Composition.CompositionSpriteShapeRcwFactory]
    [global::WinRT.ProjectedRuntimeClass(typeof(ICompositionSpriteShape))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.Foundation.WindowsAppSDKContract), 65536u)]
    public sealed class CompositionSpriteShape : CompositionShape, global::System.Runtime.InteropServices.ICustomQueryInterface, IWinRTObject, IEquatable<CompositionSpriteShape>
    {
        private IntPtr ThisPtr => _inner == null ? (((IWinRTObject)this).NativeObject).ThisPtr : _inner.ThisPtr;

        private readonly IObjectReference _inner = null;



        private IObjectReference _objRef_global__Microsoft_UI_Composition_ICompositionSpriteShape => _inner;


        public static new CompositionSpriteShape FromAbi(IntPtr thisPtr)
        {
            if (thisPtr == IntPtr.Zero) return null;
            return MarshalInspectable<CompositionSpriteShape>.FromAbi(thisPtr);
        }

        internal CompositionSpriteShape(IObjectReference objRef)
            : base(global::WinRT.DerivedComposed.Instance)

        {
            _inner = objRef.As(global::ABI.Microsoft.UI.Composition.ICompositionSpriteShapeMethods.IID);

        }


        public static bool operator ==(CompositionSpriteShape x, CompositionSpriteShape y) => (x?.ThisPtr ?? IntPtr.Zero) == (y?.ThisPtr ?? IntPtr.Zero);
        public static bool operator !=(CompositionSpriteShape x, CompositionSpriteShape y) => !(x == y);
        public bool Equals(CompositionSpriteShape other) => this == other;
        public override bool Equals(object obj) => obj is CompositionSpriteShape that && this == that;
        public override int GetHashCode() => ThisPtr.GetHashCode();


        bool IWinRTObject.HasUnwrappableNativeObject => true;
        IObjectReference IWinRTObject.NativeObject => _inner;

        private struct InterfaceTag<I>{};


        public CompositionBrush FillBrush
        {
            get => global::ABI.Microsoft.UI.Composition.ICompositionSpriteShapeMethods.get_FillBrush(_objRef_global__Microsoft_UI_Composition_ICompositionSpriteShape);
            set => global::ABI.Microsoft.UI.Composition.ICompositionSpriteShapeMethods.set_FillBrush(_objRef_global__Microsoft_UI_Composition_ICompositionSpriteShape, value);
        }

        public CompositionGeometry Geometry
        {
            get => global::ABI.Microsoft.UI.Composition.ICompositionSpriteShapeMethods.get_Geometry(_objRef_global__Microsoft_UI_Composition_ICompositionSpriteShape);
            set => global::ABI.Microsoft.UI.Composition.ICompositionSpriteShapeMethods.set_Geometry(_objRef_global__Microsoft_UI_Composition_ICompositionSpriteShape, value);
        }

        public bool IsStrokeNonScaling
        {
            get => global::ABI.Microsoft.UI.Composition.ICompositionSpriteShapeMethods.get_IsStrokeNonScaling(_objRef_global__Microsoft_UI_Composition_ICompositionSpriteShape);
            set => global::ABI.Microsoft.UI.Composition.ICompositionSpriteShapeMethods.set_IsStrokeNonScaling(_objRef_global__Microsoft_UI_Composition_ICompositionSpriteShape, value);
        }

        public CompositionBrush StrokeBrush
        {
            get => global::ABI.Microsoft.UI.Composition.ICompositionSpriteShapeMethods.get_StrokeBrush(_objRef_global__Microsoft_UI_Composition_ICompositionSpriteShape);
            set => global::ABI.Microsoft.UI.Composition.ICompositionSpriteShapeMethods.set_StrokeBrush(_objRef_global__Microsoft_UI_Composition_ICompositionSpriteShape, value);
        }

        public CompositionStrokeDashArray StrokeDashArray => global::ABI.Microsoft.UI.Composition.ICompositionSpriteShapeMethods.get_StrokeDashArray(_objRef_global__Microsoft_UI_Composition_ICompositionSpriteShape);

        public CompositionStrokeCap StrokeDashCap
        {
            get => global::ABI.Microsoft.UI.Composition.ICompositionSpriteShapeMethods.get_StrokeDashCap(_objRef_global__Microsoft_UI_Composition_ICompositionSpriteShape);
            set => global::ABI.Microsoft.UI.Composition.ICompositionSpriteShapeMethods.set_StrokeDashCap(_objRef_global__Microsoft_UI_Composition_ICompositionSpriteShape, value);
        }

        public float StrokeDashOffset
        {
            get => global::ABI.Microsoft.UI.Composition.ICompositionSpriteShapeMethods.get_StrokeDashOffset(_objRef_global__Microsoft_UI_Composition_ICompositionSpriteShape);
            set => global::ABI.Microsoft.UI.Composition.ICompositionSpriteShapeMethods.set_StrokeDashOffset(_objRef_global__Microsoft_UI_Composition_ICompositionSpriteShape, value);
        }

        public CompositionStrokeCap StrokeEndCap
        {
            get => global::ABI.Microsoft.UI.Composition.ICompositionSpriteShapeMethods.get_StrokeEndCap(_objRef_global__Microsoft_UI_Composition_ICompositionSpriteShape);
            set => global::ABI.Microsoft.UI.Composition.ICompositionSpriteShapeMethods.set_StrokeEndCap(_objRef_global__Microsoft_UI_Composition_ICompositionSpriteShape, value);
        }

        public CompositionStrokeLineJoin StrokeLineJoin
        {
            get => global::ABI.Microsoft.UI.Composition.ICompositionSpriteShapeMethods.get_StrokeLineJoin(_objRef_global__Microsoft_UI_Composition_ICompositionSpriteShape);
            set => global::ABI.Microsoft.UI.Composition.ICompositionSpriteShapeMethods.set_StrokeLineJoin(_objRef_global__Microsoft_UI_Composition_ICompositionSpriteShape, value);
        }

        public float StrokeMiterLimit
        {
            get => global::ABI.Microsoft.UI.Composition.ICompositionSpriteShapeMethods.get_StrokeMiterLimit(_objRef_global__Microsoft_UI_Composition_ICompositionSpriteShape);
            set => global::ABI.Microsoft.UI.Composition.ICompositionSpriteShapeMethods.set_StrokeMiterLimit(_objRef_global__Microsoft_UI_Composition_ICompositionSpriteShape, value);
        }

        public CompositionStrokeCap StrokeStartCap
        {
            get => global::ABI.Microsoft.UI.Composition.ICompositionSpriteShapeMethods.get_StrokeStartCap(_objRef_global__Microsoft_UI_Composition_ICompositionSpriteShape);
            set => global::ABI.Microsoft.UI.Composition.ICompositionSpriteShapeMethods.set_StrokeStartCap(_objRef_global__Microsoft_UI_Composition_ICompositionSpriteShape, value);
        }

        public float StrokeThickness
        {
            get => global::ABI.Microsoft.UI.Composition.ICompositionSpriteShapeMethods.get_StrokeThickness(_objRef_global__Microsoft_UI_Composition_ICompositionSpriteShape);
            set => global::ABI.Microsoft.UI.Composition.ICompositionSpriteShapeMethods.set_StrokeThickness(_objRef_global__Microsoft_UI_Composition_ICompositionSpriteShape, value);
        }

        protected override bool IsOverridableInterface(Guid iid) => base.IsOverridableInterface(iid);

        global::System.Runtime.InteropServices.CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(ref Guid iid, out IntPtr ppv)
        {
            ppv = IntPtr.Zero;
            if (IsOverridableInterface(iid) || global::WinRT.Interop.IID.IID_IInspectable == iid)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
            }

            if (((IWinRTObject)this).NativeObject.TryAs(iid, out ppv) >= 0)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.Handled;
            }

            return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
        }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI")][global::WinRT.WinRTExposedType(typeof(global::WinRT.EnumTypeDetails<CompositionStretch>))][global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.Foundation.WindowsAppSDKContract), 65536u)]
    public enum CompositionStretch : int
    {
        None = unchecked((int)0),
        Fill = unchecked((int)0x1),
        Uniform = unchecked((int)0x2),
        UniformToFill = unchecked((int)0x3),
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI")][global::WinRT.WinRTExposedType(typeof(global::WinRT.EnumTypeDetails<CompositionStrokeCap>))][global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.Foundation.WindowsAppSDKContract), 65536u)]
    public enum CompositionStrokeCap : int
    {
        Flat = unchecked((int)0),
        Square = unchecked((int)0x1),
        Round = unchecked((int)0x2),
        Triangle = unchecked((int)0x3),
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI")]
    [global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Composition.CompositionStrokeDashArray))]
    [global::ABI.Microsoft.UI.Composition.CompositionStrokeDashArrayRcwFactory]
    [global::WinRT.ProjectedRuntimeClass(typeof(global::System.Collections.Generic.IList<float>))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.Foundation.WindowsAppSDKContract), 65536u)]
    public sealed class CompositionStrokeDashArray : CompositionObject, global::System.Collections.Generic.IList<float>, global::System.Collections.Generic.IEnumerable<float>, global::System.Runtime.InteropServices.ICustomQueryInterface, IWinRTObject, IEquatable<CompositionStrokeDashArray>
    {
        private IntPtr ThisPtr => _inner == null ? (((IWinRTObject)this).NativeObject).ThisPtr : _inner.ThisPtr;

        private readonly IObjectReference _inner = null;




        private volatile IObjectReference ___objRef_global__System_Collections_Generic_IList_float_;
        private IObjectReference Make___objRef_global__System_Collections_Generic_IList_float_()
        {
            _ = global::WinRT.GenericTypeInstantiations.Windows_Foundation_Collections_IVector_1_Float.EnsureInitialized();
            global::System.Threading.Interlocked.CompareExchange(ref ___objRef_global__System_Collections_Generic_IList_float_, ((IWinRTObject)this).NativeObject.As<IUnknownVftbl>(global::ABI.System.Collections.Generic.IListMethods<float>.IID), null);
            return ___objRef_global__System_Collections_Generic_IList_float_;
        }
        private IObjectReference _objRef_global__System_Collections_Generic_IList_float_ => ___objRef_global__System_Collections_Generic_IList_float_ ?? Make___objRef_global__System_Collections_Generic_IList_float_();

        private volatile IObjectReference ___objRef_global__System_Collections_Generic_IEnumerable_float_;
        private IObjectReference Make___objRef_global__System_Collections_Generic_IEnumerable_float_()
        {
            _ = global::WinRT.GenericTypeInstantiations.Windows_Foundation_Collections_IIterable_1_Float.EnsureInitialized();
            global::System.Threading.Interlocked.CompareExchange(ref ___objRef_global__System_Collections_Generic_IEnumerable_float_, ((IWinRTObject)this).NativeObject.As<IUnknownVftbl>(global::ABI.System.Collections.Generic.IEnumerableMethods<float>.IID), null);
            return ___objRef_global__System_Collections_Generic_IEnumerable_float_;
        }
        private IObjectReference _objRef_global__System_Collections_Generic_IEnumerable_float_ => ___objRef_global__System_Collections_Generic_IEnumerable_float_ ?? Make___objRef_global__System_Collections_Generic_IEnumerable_float_();



        public static new CompositionStrokeDashArray FromAbi(IntPtr thisPtr)
        {
            if (thisPtr == IntPtr.Zero) return null;
            return MarshalInspectable<CompositionStrokeDashArray>.FromAbi(thisPtr);
        }

        internal CompositionStrokeDashArray(IObjectReference objRef)
            : base(global::WinRT.DerivedComposed.Instance)

        {
            _inner = objRef.As(global::ABI.System.Collections.Generic.IListMethods<float>.IID);

        }


        public static bool operator ==(CompositionStrokeDashArray x, CompositionStrokeDashArray y) => (x?.ThisPtr ?? IntPtr.Zero) == (y?.ThisPtr ?? IntPtr.Zero);
        public static bool operator !=(CompositionStrokeDashArray x, CompositionStrokeDashArray y) => !(x == y);
        public bool Equals(CompositionStrokeDashArray other) => this == other;
        public override bool Equals(object obj) => obj is CompositionStrokeDashArray that && this == that;
        public override int GetHashCode() => ThisPtr.GetHashCode();


        bool IWinRTObject.HasUnwrappableNativeObject => true;
        IObjectReference IWinRTObject.NativeObject => _inner;

        private struct InterfaceTag<I>{};


        public int Count => global::ABI.System.Collections.Generic.IListMethods<float>.get_Count(_objRef_global__System_Collections_Generic_IList_float_);
        public bool IsReadOnly => global::ABI.System.Collections.Generic.IListMethods<float>.get_IsReadOnly(_objRef_global__System_Collections_Generic_IList_float_);
        [global::System.Runtime.CompilerServices.IndexerName("ListItem")]
        public float this[int index] 
        {
            get => global::ABI.System.Collections.Generic.IListMethods<float>.Indexer_Get(_objRef_global__System_Collections_Generic_IList_float_, index);
            set => global::ABI.System.Collections.Generic.IListMethods<float>.Indexer_Set(_objRef_global__System_Collections_Generic_IList_float_, index, value);
        }
        public int IndexOf(float item) => global::ABI.System.Collections.Generic.IListMethods<float>.IndexOf(_objRef_global__System_Collections_Generic_IList_float_, item);
        public void Insert(int index, float item) => global::ABI.System.Collections.Generic.IListMethods<float>.Insert(_objRef_global__System_Collections_Generic_IList_float_, index, item);
        public void RemoveAt(int index) => global::ABI.System.Collections.Generic.IListMethods<float>.RemoveAt(_objRef_global__System_Collections_Generic_IList_float_, index);
        public void Add(float item) => global::ABI.System.Collections.Generic.IListMethods<float>.Add(_objRef_global__System_Collections_Generic_IList_float_, item);
        public void Clear() => global::ABI.System.Collections.Generic.IListMethods<float>.Clear(_objRef_global__System_Collections_Generic_IList_float_);
        public bool Contains(float item) => global::ABI.System.Collections.Generic.IListMethods<float>.Contains(_objRef_global__System_Collections_Generic_IList_float_, item);
        public void CopyTo(float[] array, int arrayIndex) => global::ABI.System.Collections.Generic.IListMethods<float>.CopyTo(_objRef_global__System_Collections_Generic_IList_float_, array, arrayIndex);
        public bool Remove(float item) => global::ABI.System.Collections.Generic.IListMethods<float>.Remove(_objRef_global__System_Collections_Generic_IList_float_, item);

        public IEnumerator<float> GetEnumerator() => global::ABI.System.Collections.Generic.IEnumerableMethods<float>.GetEnumerator(_objRef_global__System_Collections_Generic_IEnumerable_float_);

        IEnumerator IEnumerable.GetEnumerator() => GetEnumerator();

        protected override bool IsOverridableInterface(Guid iid) => base.IsOverridableInterface(iid);

        global::System.Runtime.InteropServices.CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(ref Guid iid, out IntPtr ppv)
        {
            ppv = IntPtr.Zero;
            if (IsOverridableInterface(iid) || global::WinRT.Interop.IID.IID_IInspectable == iid)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
            }

            if (((IWinRTObject)this).NativeObject.TryAs(iid, out ppv) >= 0)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.Handled;
            }

            return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
        }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI")][global::WinRT.WinRTExposedType(typeof(global::WinRT.EnumTypeDetails<CompositionStrokeLineJoin>))][global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.Foundation.WindowsAppSDKContract), 65536u)]
    public enum CompositionStrokeLineJoin : int
    {
        Miter = unchecked((int)0),
        Bevel = unchecked((int)0x1),
        Round = unchecked((int)0x2),
        MiterOrBevel = unchecked((int)0x3),
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI")]
    [global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Composition.CompositionSurfaceBrush))]
    [global::ABI.Microsoft.UI.Composition.CompositionSurfaceBrushRcwFactory]
    [global::WinRT.ProjectedRuntimeClass(typeof(ICompositionSurfaceBrush))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.Foundation.WindowsAppSDKContract), 65536u)]
    public sealed class CompositionSurfaceBrush : CompositionBrush, global::System.Runtime.InteropServices.ICustomQueryInterface, IWinRTObject, IEquatable<CompositionSurfaceBrush>
    {
        private IntPtr ThisPtr => _inner == null ? (((IWinRTObject)this).NativeObject).ThisPtr : _inner.ThisPtr;

        private readonly IObjectReference _inner = null;



        private IObjectReference _objRef_global__Microsoft_UI_Composition_ICompositionSurfaceBrush => _inner;
        private volatile IObjectReference ___objRef_global__Microsoft_UI_Composition_ICompositionSurfaceBrush2;
        private IObjectReference Make___objRef_global__Microsoft_UI_Composition_ICompositionSurfaceBrush2()
        {
            global::System.Threading.Interlocked.CompareExchange(ref ___objRef_global__Microsoft_UI_Composition_ICompositionSurfaceBrush2, ((IWinRTObject)this).NativeObject.As<IUnknownVftbl>(global::ABI.Microsoft.UI.Composition.ICompositionSurfaceBrush2Methods.IID), null);
            return ___objRef_global__Microsoft_UI_Composition_ICompositionSurfaceBrush2;
        }
        private IObjectReference _objRef_global__Microsoft_UI_Composition_ICompositionSurfaceBrush2 => ___objRef_global__Microsoft_UI_Composition_ICompositionSurfaceBrush2 ?? Make___objRef_global__Microsoft_UI_Composition_ICompositionSurfaceBrush2();

        private volatile IObjectReference ___objRef_global__Microsoft_UI_Composition_ICompositionSurfaceBrush3;
        private IObjectReference Make___objRef_global__Microsoft_UI_Composition_ICompositionSurfaceBrush3()
        {
            global::System.Threading.Interlocked.CompareExchange(ref ___objRef_global__Microsoft_UI_Composition_ICompositionSurfaceBrush3, ((IWinRTObject)this).NativeObject.As<IUnknownVftbl>(global::ABI.Microsoft.UI.Composition.ICompositionSurfaceBrush3Methods.IID), null);
            return ___objRef_global__Microsoft_UI_Composition_ICompositionSurfaceBrush3;
        }
        private IObjectReference _objRef_global__Microsoft_UI_Composition_ICompositionSurfaceBrush3 => ___objRef_global__Microsoft_UI_Composition_ICompositionSurfaceBrush3 ?? Make___objRef_global__Microsoft_UI_Composition_ICompositionSurfaceBrush3();



        public static new CompositionSurfaceBrush FromAbi(IntPtr thisPtr)
        {
            if (thisPtr == IntPtr.Zero) return null;
            return MarshalInspectable<CompositionSurfaceBrush>.FromAbi(thisPtr);
        }

        internal CompositionSurfaceBrush(IObjectReference objRef)
            : base(global::WinRT.DerivedComposed.Instance)

        {
            _inner = objRef.As(global::ABI.Microsoft.UI.Composition.ICompositionSurfaceBrushMethods.IID);

        }


        public static bool operator ==(CompositionSurfaceBrush x, CompositionSurfaceBrush y) => (x?.ThisPtr ?? IntPtr.Zero) == (y?.ThisPtr ?? IntPtr.Zero);
        public static bool operator !=(CompositionSurfaceBrush x, CompositionSurfaceBrush y) => !(x == y);
        public bool Equals(CompositionSurfaceBrush other) => this == other;
        public override bool Equals(object obj) => obj is CompositionSurfaceBrush that && this == that;
        public override int GetHashCode() => ThisPtr.GetHashCode();


        bool IWinRTObject.HasUnwrappableNativeObject => true;
        IObjectReference IWinRTObject.NativeObject => _inner;

        private struct InterfaceTag<I>{};


        public global::System.Numerics.Vector2 AnchorPoint
        {
            get => global::ABI.Microsoft.UI.Composition.ICompositionSurfaceBrush2Methods.get_AnchorPoint(_objRef_global__Microsoft_UI_Composition_ICompositionSurfaceBrush2);
            set => global::ABI.Microsoft.UI.Composition.ICompositionSurfaceBrush2Methods.set_AnchorPoint(_objRef_global__Microsoft_UI_Composition_ICompositionSurfaceBrush2, value);
        }

        public CompositionBitmapInterpolationMode BitmapInterpolationMode
        {
            get => global::ABI.Microsoft.UI.Composition.ICompositionSurfaceBrushMethods.get_BitmapInterpolationMode(_objRef_global__Microsoft_UI_Composition_ICompositionSurfaceBrush);
            set => global::ABI.Microsoft.UI.Composition.ICompositionSurfaceBrushMethods.set_BitmapInterpolationMode(_objRef_global__Microsoft_UI_Composition_ICompositionSurfaceBrush, value);
        }

        public global::System.Numerics.Vector2 CenterPoint
        {
            get => global::ABI.Microsoft.UI.Composition.ICompositionSurfaceBrush2Methods.get_CenterPoint(_objRef_global__Microsoft_UI_Composition_ICompositionSurfaceBrush2);
            set => global::ABI.Microsoft.UI.Composition.ICompositionSurfaceBrush2Methods.set_CenterPoint(_objRef_global__Microsoft_UI_Composition_ICompositionSurfaceBrush2, value);
        }

        public float HorizontalAlignmentRatio
        {
            get => global::ABI.Microsoft.UI.Composition.ICompositionSurfaceBrushMethods.get_HorizontalAlignmentRatio(_objRef_global__Microsoft_UI_Composition_ICompositionSurfaceBrush);
            set => global::ABI.Microsoft.UI.Composition.ICompositionSurfaceBrushMethods.set_HorizontalAlignmentRatio(_objRef_global__Microsoft_UI_Composition_ICompositionSurfaceBrush, value);
        }

        public global::System.Numerics.Vector2 Offset
        {
            get => global::ABI.Microsoft.UI.Composition.ICompositionSurfaceBrush2Methods.get_Offset(_objRef_global__Microsoft_UI_Composition_ICompositionSurfaceBrush2);
            set => global::ABI.Microsoft.UI.Composition.ICompositionSurfaceBrush2Methods.set_Offset(_objRef_global__Microsoft_UI_Composition_ICompositionSurfaceBrush2, value);
        }

        public float RotationAngle
        {
            get => global::ABI.Microsoft.UI.Composition.ICompositionSurfaceBrush2Methods.get_RotationAngle(_objRef_global__Microsoft_UI_Composition_ICompositionSurfaceBrush2);
            set => global::ABI.Microsoft.UI.Composition.ICompositionSurfaceBrush2Methods.set_RotationAngle(_objRef_global__Microsoft_UI_Composition_ICompositionSurfaceBrush2, value);
        }

        public float RotationAngleInDegrees
        {
            get => global::ABI.Microsoft.UI.Composition.ICompositionSurfaceBrush2Methods.get_RotationAngleInDegrees(_objRef_global__Microsoft_UI_Composition_ICompositionSurfaceBrush2);
            set => global::ABI.Microsoft.UI.Composition.ICompositionSurfaceBrush2Methods.set_RotationAngleInDegrees(_objRef_global__Microsoft_UI_Composition_ICompositionSurfaceBrush2, value);
        }

        public global::System.Numerics.Vector2 Scale
        {
            get => global::ABI.Microsoft.UI.Composition.ICompositionSurfaceBrush2Methods.get_Scale(_objRef_global__Microsoft_UI_Composition_ICompositionSurfaceBrush2);
            set => global::ABI.Microsoft.UI.Composition.ICompositionSurfaceBrush2Methods.set_Scale(_objRef_global__Microsoft_UI_Composition_ICompositionSurfaceBrush2, value);
        }

        public bool SnapToPixels
        {
            get => global::ABI.Microsoft.UI.Composition.ICompositionSurfaceBrush3Methods.get_SnapToPixels(_objRef_global__Microsoft_UI_Composition_ICompositionSurfaceBrush3);
            set => global::ABI.Microsoft.UI.Composition.ICompositionSurfaceBrush3Methods.set_SnapToPixels(_objRef_global__Microsoft_UI_Composition_ICompositionSurfaceBrush3, value);
        }

        public CompositionStretch Stretch
        {
            get => global::ABI.Microsoft.UI.Composition.ICompositionSurfaceBrushMethods.get_Stretch(_objRef_global__Microsoft_UI_Composition_ICompositionSurfaceBrush);
            set => global::ABI.Microsoft.UI.Composition.ICompositionSurfaceBrushMethods.set_Stretch(_objRef_global__Microsoft_UI_Composition_ICompositionSurfaceBrush, value);
        }

        public ICompositionSurface Surface
        {
            get => global::ABI.Microsoft.UI.Composition.ICompositionSurfaceBrushMethods.get_Surface(_objRef_global__Microsoft_UI_Composition_ICompositionSurfaceBrush);
            set => global::ABI.Microsoft.UI.Composition.ICompositionSurfaceBrushMethods.set_Surface(_objRef_global__Microsoft_UI_Composition_ICompositionSurfaceBrush, value);
        }

        public global::System.Numerics.Matrix3x2 TransformMatrix
        {
            get => global::ABI.Microsoft.UI.Composition.ICompositionSurfaceBrush2Methods.get_TransformMatrix(_objRef_global__Microsoft_UI_Composition_ICompositionSurfaceBrush2);
            set => global::ABI.Microsoft.UI.Composition.ICompositionSurfaceBrush2Methods.set_TransformMatrix(_objRef_global__Microsoft_UI_Composition_ICompositionSurfaceBrush2, value);
        }

        public float VerticalAlignmentRatio
        {
            get => global::ABI.Microsoft.UI.Composition.ICompositionSurfaceBrushMethods.get_VerticalAlignmentRatio(_objRef_global__Microsoft_UI_Composition_ICompositionSurfaceBrush);
            set => global::ABI.Microsoft.UI.Composition.ICompositionSurfaceBrushMethods.set_VerticalAlignmentRatio(_objRef_global__Microsoft_UI_Composition_ICompositionSurfaceBrush, value);
        }

        protected override bool IsOverridableInterface(Guid iid) => base.IsOverridableInterface(iid);

        global::System.Runtime.InteropServices.CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(ref Guid iid, out IntPtr ppv)
        {
            ppv = IntPtr.Zero;
            if (IsOverridableInterface(iid) || global::WinRT.Interop.IID.IID_IInspectable == iid)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
            }

            if (((IWinRTObject)this).NativeObject.TryAs(iid, out ppv) >= 0)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.Handled;
            }

            return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
        }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI")]
    [global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Composition.CompositionTransform))]
    [global::ABI.Microsoft.UI.Composition.CompositionTransformRcwFactory]
    [global::WinRT.ProjectedRuntimeClass(typeof(ICompositionTransform))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.Foundation.WindowsAppSDKContract), 65536u)]
    public class CompositionTransform : CompositionObject, global::System.Runtime.InteropServices.ICustomQueryInterface, IWinRTObject, IEquatable<CompositionTransform>
    {
        private IntPtr ThisPtr => _inner == null ? (((IWinRTObject)this).NativeObject).ThisPtr : _inner.ThisPtr;

        private readonly IObjectReference _inner = null;




        private volatile IObjectReference ___objRef_global__Microsoft_UI_Composition_ICompositionTransform;
        private IObjectReference Make___objRef_global__Microsoft_UI_Composition_ICompositionTransform()
        {
            global::System.Threading.Interlocked.CompareExchange(ref ___objRef_global__Microsoft_UI_Composition_ICompositionTransform, ((IWinRTObject)this).NativeObject.As<IUnknownVftbl>(global::ABI.Microsoft.UI.Composition.ICompositionTransformMethods.IID), null);
            return ___objRef_global__Microsoft_UI_Composition_ICompositionTransform;
        }
        private IObjectReference _objRef_global__Microsoft_UI_Composition_ICompositionTransform => ___objRef_global__Microsoft_UI_Composition_ICompositionTransform ?? Make___objRef_global__Microsoft_UI_Composition_ICompositionTransform();



        private static class _ICompositionTransformFactoryMethods
        {}

        private static volatile IObjectReference ___objRef_global__Microsoft_UI_Composition_ICompositionTransformFactory;
        private static IObjectReference _objRef_global__Microsoft_UI_Composition_ICompositionTransformFactory
        {
            get
            { 
                var factory = ___objRef_global__Microsoft_UI_Composition_ICompositionTransformFactory;
                if (factory != null && factory.IsInCurrentContext)
                {
                    return factory;
                }
                else
                {
                    return ___objRef_global__Microsoft_UI_Composition_ICompositionTransformFactory = ActivationFactory.Get("Microsoft.UI.Composition.CompositionTransform", global::ABI.Microsoft.UI.Composition.ICompositionTransformFactoryMethods.IID);
                }
            }
        }

        public static new CompositionTransform FromAbi(IntPtr thisPtr)
        {
            if (thisPtr == IntPtr.Zero) return null;
            return MarshalInspectable<CompositionTransform>.FromAbi(thisPtr);
        }

        protected internal CompositionTransform(IObjectReference objRef)
            : base(global::WinRT.DerivedComposed.Instance)

        {
            _inner = objRef.As(global::ABI.Microsoft.UI.Composition.ICompositionTransformMethods.IID);

        }


        public static bool operator ==(CompositionTransform x, CompositionTransform y) => (x?.ThisPtr ?? IntPtr.Zero) == (y?.ThisPtr ?? IntPtr.Zero);
        public static bool operator !=(CompositionTransform x, CompositionTransform y) => !(x == y);
        public bool Equals(CompositionTransform other) => this == other;
        public override bool Equals(object obj) => obj is CompositionTransform that && this == that;
        public override int GetHashCode() => ThisPtr.GetHashCode();


        protected CompositionTransform(global::WinRT.DerivedComposed _):base(_)
        {

        }
        bool IWinRTObject.HasUnwrappableNativeObject => this.GetType() == typeof(CompositionTransform);
        IObjectReference IWinRTObject.NativeObject => _inner;

        private struct InterfaceTag<I>{};


        protected override bool IsOverridableInterface(Guid iid) => base.IsOverridableInterface(iid);

        global::System.Runtime.InteropServices.CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(ref Guid iid, out IntPtr ppv)
        {
            ppv = IntPtr.Zero;
            if (IsOverridableInterface(iid) || global::WinRT.Interop.IID.IID_IInspectable == iid)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
            }

            if (((IWinRTObject)this).NativeObject.TryAs(iid, out ppv) >= 0)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.Handled;
            }

            return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
        }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI")]
    [global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Composition.CompositionViewBox))]
    [global::ABI.Microsoft.UI.Composition.CompositionViewBoxRcwFactory]
    [global::WinRT.ProjectedRuntimeClass(typeof(ICompositionViewBox))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.Foundation.WindowsAppSDKContract), 65536u)]
    public sealed class CompositionViewBox : CompositionObject, global::System.Runtime.InteropServices.ICustomQueryInterface, IWinRTObject, IEquatable<CompositionViewBox>
    {
        private IntPtr ThisPtr => _inner == null ? (((IWinRTObject)this).NativeObject).ThisPtr : _inner.ThisPtr;

        private readonly IObjectReference _inner = null;



        private IObjectReference _objRef_global__Microsoft_UI_Composition_ICompositionViewBox => _inner;


        public static new CompositionViewBox FromAbi(IntPtr thisPtr)
        {
            if (thisPtr == IntPtr.Zero) return null;
            return MarshalInspectable<CompositionViewBox>.FromAbi(thisPtr);
        }

        internal CompositionViewBox(IObjectReference objRef)
            : base(global::WinRT.DerivedComposed.Instance)

        {
            _inner = objRef.As(global::ABI.Microsoft.UI.Composition.ICompositionViewBoxMethods.IID);

        }


        public static bool operator ==(CompositionViewBox x, CompositionViewBox y) => (x?.ThisPtr ?? IntPtr.Zero) == (y?.ThisPtr ?? IntPtr.Zero);
        public static bool operator !=(CompositionViewBox x, CompositionViewBox y) => !(x == y);
        public bool Equals(CompositionViewBox other) => this == other;
        public override bool Equals(object obj) => obj is CompositionViewBox that && this == that;
        public override int GetHashCode() => ThisPtr.GetHashCode();


        bool IWinRTObject.HasUnwrappableNativeObject => true;
        IObjectReference IWinRTObject.NativeObject => _inner;

        private struct InterfaceTag<I>{};


        public float HorizontalAlignmentRatio
        {
            get => global::ABI.Microsoft.UI.Composition.ICompositionViewBoxMethods.get_HorizontalAlignmentRatio(_objRef_global__Microsoft_UI_Composition_ICompositionViewBox);
            set => global::ABI.Microsoft.UI.Composition.ICompositionViewBoxMethods.set_HorizontalAlignmentRatio(_objRef_global__Microsoft_UI_Composition_ICompositionViewBox, value);
        }

        public global::System.Numerics.Vector2 Offset
        {
            get => global::ABI.Microsoft.UI.Composition.ICompositionViewBoxMethods.get_Offset(_objRef_global__Microsoft_UI_Composition_ICompositionViewBox);
            set => global::ABI.Microsoft.UI.Composition.ICompositionViewBoxMethods.set_Offset(_objRef_global__Microsoft_UI_Composition_ICompositionViewBox, value);
        }

        public global::System.Numerics.Vector2 Size
        {
            get => global::ABI.Microsoft.UI.Composition.ICompositionViewBoxMethods.get_Size(_objRef_global__Microsoft_UI_Composition_ICompositionViewBox);
            set => global::ABI.Microsoft.UI.Composition.ICompositionViewBoxMethods.set_Size(_objRef_global__Microsoft_UI_Composition_ICompositionViewBox, value);
        }

        public CompositionStretch Stretch
        {
            get => global::ABI.Microsoft.UI.Composition.ICompositionViewBoxMethods.get_Stretch(_objRef_global__Microsoft_UI_Composition_ICompositionViewBox);
            set => global::ABI.Microsoft.UI.Composition.ICompositionViewBoxMethods.set_Stretch(_objRef_global__Microsoft_UI_Composition_ICompositionViewBox, value);
        }

        public float VerticalAlignmentRatio
        {
            get => global::ABI.Microsoft.UI.Composition.ICompositionViewBoxMethods.get_VerticalAlignmentRatio(_objRef_global__Microsoft_UI_Composition_ICompositionViewBox);
            set => global::ABI.Microsoft.UI.Composition.ICompositionViewBoxMethods.set_VerticalAlignmentRatio(_objRef_global__Microsoft_UI_Composition_ICompositionViewBox, value);
        }

        protected override bool IsOverridableInterface(Guid iid) => base.IsOverridableInterface(iid);

        global::System.Runtime.InteropServices.CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(ref Guid iid, out IntPtr ppv)
        {
            ppv = IntPtr.Zero;
            if (IsOverridableInterface(iid) || global::WinRT.Interop.IID.IID_IInspectable == iid)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
            }

            if (((IWinRTObject)this).NativeObject.TryAs(iid, out ppv) >= 0)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.Handled;
            }

            return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
        }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI")]
    [global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Composition.CompositionVirtualDrawingSurface))]
    [global::ABI.Microsoft.UI.Composition.CompositionVirtualDrawingSurfaceRcwFactory]
    [global::WinRT.ProjectedRuntimeClass(typeof(ICompositionVirtualDrawingSurface))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.Foundation.WindowsAppSDKContract), 65536u)]
    public class CompositionVirtualDrawingSurface : CompositionDrawingSurface, global::System.Runtime.InteropServices.ICustomQueryInterface, IWinRTObject, IEquatable<CompositionVirtualDrawingSurface>
    {
        private IntPtr ThisPtr => _inner == null ? (((IWinRTObject)this).NativeObject).ThisPtr : _inner.ThisPtr;

        private readonly IObjectReference _inner = null;




        private volatile IObjectReference ___objRef_global__Microsoft_UI_Composition_ICompositionVirtualDrawingSurface;
        private IObjectReference Make___objRef_global__Microsoft_UI_Composition_ICompositionVirtualDrawingSurface()
        {
            global::System.Threading.Interlocked.CompareExchange(ref ___objRef_global__Microsoft_UI_Composition_ICompositionVirtualDrawingSurface, ((IWinRTObject)this).NativeObject.As<IUnknownVftbl>(global::ABI.Microsoft.UI.Composition.ICompositionVirtualDrawingSurfaceMethods.IID), null);
            return ___objRef_global__Microsoft_UI_Composition_ICompositionVirtualDrawingSurface;
        }
        private IObjectReference _objRef_global__Microsoft_UI_Composition_ICompositionVirtualDrawingSurface => ___objRef_global__Microsoft_UI_Composition_ICompositionVirtualDrawingSurface ?? Make___objRef_global__Microsoft_UI_Composition_ICompositionVirtualDrawingSurface();



        private static class _ICompositionVirtualDrawingSurfaceFactoryMethods
        {}

        private static volatile IObjectReference ___objRef_global__Microsoft_UI_Composition_ICompositionVirtualDrawingSurfaceFactory;
        private static IObjectReference _objRef_global__Microsoft_UI_Composition_ICompositionVirtualDrawingSurfaceFactory
        {
            get
            { 
                var factory = ___objRef_global__Microsoft_UI_Composition_ICompositionVirtualDrawingSurfaceFactory;
                if (factory != null && factory.IsInCurrentContext)
                {
                    return factory;
                }
                else
                {
                    return ___objRef_global__Microsoft_UI_Composition_ICompositionVirtualDrawingSurfaceFactory = ActivationFactory.Get("Microsoft.UI.Composition.CompositionVirtualDrawingSurface", global::ABI.Microsoft.UI.Composition.ICompositionVirtualDrawingSurfaceFactoryMethods.IID);
                }
            }
        }

        public static new CompositionVirtualDrawingSurface FromAbi(IntPtr thisPtr)
        {
            if (thisPtr == IntPtr.Zero) return null;
            return MarshalInspectable<CompositionVirtualDrawingSurface>.FromAbi(thisPtr);
        }

        protected internal CompositionVirtualDrawingSurface(IObjectReference objRef)
            : base(global::WinRT.DerivedComposed.Instance)

        {
            _inner = objRef.As(global::ABI.Microsoft.UI.Composition.ICompositionVirtualDrawingSurfaceMethods.IID);

        }


        public static bool operator ==(CompositionVirtualDrawingSurface x, CompositionVirtualDrawingSurface y) => (x?.ThisPtr ?? IntPtr.Zero) == (y?.ThisPtr ?? IntPtr.Zero);
        public static bool operator !=(CompositionVirtualDrawingSurface x, CompositionVirtualDrawingSurface y) => !(x == y);
        public bool Equals(CompositionVirtualDrawingSurface other) => this == other;
        public override bool Equals(object obj) => obj is CompositionVirtualDrawingSurface that && this == that;
        public override int GetHashCode() => ThisPtr.GetHashCode();


        protected CompositionVirtualDrawingSurface(global::WinRT.DerivedComposed _):base(_)
        {

        }
        bool IWinRTObject.HasUnwrappableNativeObject => this.GetType() == typeof(CompositionVirtualDrawingSurface);
        IObjectReference IWinRTObject.NativeObject => _inner;

        private struct InterfaceTag<I>{};


        public void Trim(global::Windows.Graphics.RectInt32[] rects) => global::ABI.Microsoft.UI.Composition.ICompositionVirtualDrawingSurfaceMethods.Trim(_objRef_global__Microsoft_UI_Composition_ICompositionVirtualDrawingSurface, rects);

        protected override bool IsOverridableInterface(Guid iid) => base.IsOverridableInterface(iid);

        global::System.Runtime.InteropServices.CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(ref Guid iid, out IntPtr ppv)
        {
            ppv = IntPtr.Zero;
            if (IsOverridableInterface(iid) || global::WinRT.Interop.IID.IID_IInspectable == iid)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
            }

            if (((IWinRTObject)this).NativeObject.TryAs(iid, out ppv) >= 0)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.Handled;
            }

            return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
        }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI")]
    [global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Composition.CompositionVisualSurface))]
    [global::ABI.Microsoft.UI.Composition.CompositionVisualSurfaceRcwFactory]
    [global::WinRT.ProjectedRuntimeClass(typeof(ICompositionVisualSurface))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.Foundation.WindowsAppSDKContract), 65536u)]
    public sealed class CompositionVisualSurface : CompositionObject, ICompositionSurface, global::System.Runtime.InteropServices.ICustomQueryInterface, IWinRTObject, IEquatable<CompositionVisualSurface>
    {
        private IntPtr ThisPtr => _inner == null ? (((IWinRTObject)this).NativeObject).ThisPtr : _inner.ThisPtr;

        private readonly IObjectReference _inner = null;



        private IObjectReference _objRef_global__Microsoft_UI_Composition_ICompositionVisualSurface => _inner;
        private volatile IObjectReference ___objRef_global__Microsoft_UI_Composition_ICompositionSurface;
        private IObjectReference Make___objRef_global__Microsoft_UI_Composition_ICompositionSurface()
        {
            global::System.Threading.Interlocked.CompareExchange(ref ___objRef_global__Microsoft_UI_Composition_ICompositionSurface, ((IWinRTObject)this).NativeObject.As<IUnknownVftbl>(global::ABI.Microsoft.UI.Composition.ICompositionSurfaceMethods.IID), null);
            return ___objRef_global__Microsoft_UI_Composition_ICompositionSurface;
        }
        private IObjectReference _objRef_global__Microsoft_UI_Composition_ICompositionSurface => ___objRef_global__Microsoft_UI_Composition_ICompositionSurface ?? Make___objRef_global__Microsoft_UI_Composition_ICompositionSurface();



        public static new CompositionVisualSurface FromAbi(IntPtr thisPtr)
        {
            if (thisPtr == IntPtr.Zero) return null;
            return MarshalInspectable<CompositionVisualSurface>.FromAbi(thisPtr);
        }

        internal CompositionVisualSurface(IObjectReference objRef)
            : base(global::WinRT.DerivedComposed.Instance)

        {
            _inner = objRef.As(global::ABI.Microsoft.UI.Composition.ICompositionVisualSurfaceMethods.IID);

        }


        public static bool operator ==(CompositionVisualSurface x, CompositionVisualSurface y) => (x?.ThisPtr ?? IntPtr.Zero) == (y?.ThisPtr ?? IntPtr.Zero);
        public static bool operator !=(CompositionVisualSurface x, CompositionVisualSurface y) => !(x == y);
        public bool Equals(CompositionVisualSurface other) => this == other;
        public override bool Equals(object obj) => obj is CompositionVisualSurface that && this == that;
        public override int GetHashCode() => ThisPtr.GetHashCode();


        bool IWinRTObject.HasUnwrappableNativeObject => true;
        IObjectReference IWinRTObject.NativeObject => _inner;

        private struct InterfaceTag<I>{};


        public global::System.Numerics.Vector2 SourceOffset
        {
            get => global::ABI.Microsoft.UI.Composition.ICompositionVisualSurfaceMethods.get_SourceOffset(_objRef_global__Microsoft_UI_Composition_ICompositionVisualSurface);
            set => global::ABI.Microsoft.UI.Composition.ICompositionVisualSurfaceMethods.set_SourceOffset(_objRef_global__Microsoft_UI_Composition_ICompositionVisualSurface, value);
        }

        public global::System.Numerics.Vector2 SourceSize
        {
            get => global::ABI.Microsoft.UI.Composition.ICompositionVisualSurfaceMethods.get_SourceSize(_objRef_global__Microsoft_UI_Composition_ICompositionVisualSurface);
            set => global::ABI.Microsoft.UI.Composition.ICompositionVisualSurfaceMethods.set_SourceSize(_objRef_global__Microsoft_UI_Composition_ICompositionVisualSurface, value);
        }

        public Visual SourceVisual
        {
            get => global::ABI.Microsoft.UI.Composition.ICompositionVisualSurfaceMethods.get_SourceVisual(_objRef_global__Microsoft_UI_Composition_ICompositionVisualSurface);
            set => global::ABI.Microsoft.UI.Composition.ICompositionVisualSurfaceMethods.set_SourceVisual(_objRef_global__Microsoft_UI_Composition_ICompositionVisualSurface, value);
        }

        protected override bool IsOverridableInterface(Guid iid) => base.IsOverridableInterface(iid);

        global::System.Runtime.InteropServices.CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(ref Guid iid, out IntPtr ppv)
        {
            ppv = IntPtr.Zero;
            if (IsOverridableInterface(iid) || global::WinRT.Interop.IID.IID_IInspectable == iid)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
            }

            if (((IWinRTObject)this).NativeObject.TryAs(iid, out ppv) >= 0)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.Handled;
            }

            return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
        }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI")]
    [global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Composition.Compositor))]
    [global::ABI.Microsoft.UI.Composition.CompositorRcwFactory]
    [global::WinRT.ProjectedRuntimeClass(typeof(ICompositor))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.Foundation.WindowsAppSDKContract), 65536u)]
    public sealed class Compositor : global::System.IDisposable, global::System.Runtime.InteropServices.ICustomQueryInterface, IWinRTObject, IEquatable<Compositor>
    {
        private IntPtr ThisPtr => _inner == null ? (((IWinRTObject)this).NativeObject).ThisPtr : _inner.ThisPtr;

        private readonly IObjectReference _inner = null;



        private IObjectReference _objRef_global__Microsoft_UI_Composition_ICompositor => _inner;
        private volatile IObjectReference ___objRef_global__Microsoft_UI_Composition_ICompositor2;
        private IObjectReference Make___objRef_global__Microsoft_UI_Composition_ICompositor2()
        {
            global::System.Threading.Interlocked.CompareExchange(ref ___objRef_global__Microsoft_UI_Composition_ICompositor2, ((IWinRTObject)this).NativeObject.As<IUnknownVftbl>(global::ABI.Microsoft.UI.Composition.ICompositor2Methods.IID), null);
            return ___objRef_global__Microsoft_UI_Composition_ICompositor2;
        }
        private IObjectReference _objRef_global__Microsoft_UI_Composition_ICompositor2 => ___objRef_global__Microsoft_UI_Composition_ICompositor2 ?? Make___objRef_global__Microsoft_UI_Composition_ICompositor2();

        private volatile IObjectReference ___objRef_global__Microsoft_UI_Composition_ICompositor4;
        private IObjectReference Make___objRef_global__Microsoft_UI_Composition_ICompositor4()
        {
            global::System.Threading.Interlocked.CompareExchange(ref ___objRef_global__Microsoft_UI_Composition_ICompositor4, ((IWinRTObject)this).NativeObject.As<IUnknownVftbl>(global::ABI.Microsoft.UI.Composition.ICompositor4Methods.IID), null);
            return ___objRef_global__Microsoft_UI_Composition_ICompositor4;
        }
        private IObjectReference _objRef_global__Microsoft_UI_Composition_ICompositor4 => ___objRef_global__Microsoft_UI_Composition_ICompositor4 ?? Make___objRef_global__Microsoft_UI_Composition_ICompositor4();

        private volatile IObjectReference ___objRef_global__Microsoft_UI_Composition_ICompositor5;
        private IObjectReference Make___objRef_global__Microsoft_UI_Composition_ICompositor5()
        {
            global::System.Threading.Interlocked.CompareExchange(ref ___objRef_global__Microsoft_UI_Composition_ICompositor5, ((IWinRTObject)this).NativeObject.As<IUnknownVftbl>(global::ABI.Microsoft.UI.Composition.ICompositor5Methods.IID), null);
            return ___objRef_global__Microsoft_UI_Composition_ICompositor5;
        }
        private IObjectReference _objRef_global__Microsoft_UI_Composition_ICompositor5 => ___objRef_global__Microsoft_UI_Composition_ICompositor5 ?? Make___objRef_global__Microsoft_UI_Composition_ICompositor5();

        private volatile IObjectReference ___objRef_global__Microsoft_UI_Composition_ICompositor6;
        private IObjectReference Make___objRef_global__Microsoft_UI_Composition_ICompositor6()
        {
            global::System.Threading.Interlocked.CompareExchange(ref ___objRef_global__Microsoft_UI_Composition_ICompositor6, ((IWinRTObject)this).NativeObject.As<IUnknownVftbl>(global::ABI.Microsoft.UI.Composition.ICompositor6Methods.IID), null);
            return ___objRef_global__Microsoft_UI_Composition_ICompositor6;
        }
        private IObjectReference _objRef_global__Microsoft_UI_Composition_ICompositor6 => ___objRef_global__Microsoft_UI_Composition_ICompositor6 ?? Make___objRef_global__Microsoft_UI_Composition_ICompositor6();

        private volatile IObjectReference ___objRef_global__Microsoft_UI_Composition_ICompositor7;
        private IObjectReference Make___objRef_global__Microsoft_UI_Composition_ICompositor7()
        {
            global::System.Threading.Interlocked.CompareExchange(ref ___objRef_global__Microsoft_UI_Composition_ICompositor7, ((IWinRTObject)this).NativeObject.As<IUnknownVftbl>(global::ABI.Microsoft.UI.Composition.ICompositor7Methods.IID), null);
            return ___objRef_global__Microsoft_UI_Composition_ICompositor7;
        }
        private IObjectReference _objRef_global__Microsoft_UI_Composition_ICompositor7 => ___objRef_global__Microsoft_UI_Composition_ICompositor7 ?? Make___objRef_global__Microsoft_UI_Composition_ICompositor7();

        private volatile IObjectReference ___objRef_global__Microsoft_UI_Composition_ICompositorWithProjectedShadow;
        private IObjectReference Make___objRef_global__Microsoft_UI_Composition_ICompositorWithProjectedShadow()
        {
            global::System.Threading.Interlocked.CompareExchange(ref ___objRef_global__Microsoft_UI_Composition_ICompositorWithProjectedShadow, ((IWinRTObject)this).NativeObject.As<IUnknownVftbl>(global::ABI.Microsoft.UI.Composition.ICompositorWithProjectedShadowMethods.IID), null);
            return ___objRef_global__Microsoft_UI_Composition_ICompositorWithProjectedShadow;
        }
        private IObjectReference _objRef_global__Microsoft_UI_Composition_ICompositorWithProjectedShadow => ___objRef_global__Microsoft_UI_Composition_ICompositorWithProjectedShadow ?? Make___objRef_global__Microsoft_UI_Composition_ICompositorWithProjectedShadow();

        private volatile IObjectReference ___objRef_global__Microsoft_UI_Composition_ICompositorWithRadialGradient;
        private IObjectReference Make___objRef_global__Microsoft_UI_Composition_ICompositorWithRadialGradient()
        {
            global::System.Threading.Interlocked.CompareExchange(ref ___objRef_global__Microsoft_UI_Composition_ICompositorWithRadialGradient, ((IWinRTObject)this).NativeObject.As<IUnknownVftbl>(global::ABI.Microsoft.UI.Composition.ICompositorWithRadialGradientMethods.IID), null);
            return ___objRef_global__Microsoft_UI_Composition_ICompositorWithRadialGradient;
        }
        private IObjectReference _objRef_global__Microsoft_UI_Composition_ICompositorWithRadialGradient => ___objRef_global__Microsoft_UI_Composition_ICompositorWithRadialGradient ?? Make___objRef_global__Microsoft_UI_Composition_ICompositorWithRadialGradient();

        private volatile IObjectReference ___objRef_global__Microsoft_UI_Composition_ICompositorWithVisualSurface;
        private IObjectReference Make___objRef_global__Microsoft_UI_Composition_ICompositorWithVisualSurface()
        {
            global::System.Threading.Interlocked.CompareExchange(ref ___objRef_global__Microsoft_UI_Composition_ICompositorWithVisualSurface, ((IWinRTObject)this).NativeObject.As<IUnknownVftbl>(global::ABI.Microsoft.UI.Composition.ICompositorWithVisualSurfaceMethods.IID), null);
            return ___objRef_global__Microsoft_UI_Composition_ICompositorWithVisualSurface;
        }
        private IObjectReference _objRef_global__Microsoft_UI_Composition_ICompositorWithVisualSurface => ___objRef_global__Microsoft_UI_Composition_ICompositorWithVisualSurface ?? Make___objRef_global__Microsoft_UI_Composition_ICompositorWithVisualSurface();

        private volatile IObjectReference ___objRef_global__Microsoft_UI_Composition_ICompositor8;
        private IObjectReference Make___objRef_global__Microsoft_UI_Composition_ICompositor8()
        {
            global::System.Threading.Interlocked.CompareExchange(ref ___objRef_global__Microsoft_UI_Composition_ICompositor8, ((IWinRTObject)this).NativeObject.As<IUnknownVftbl>(global::ABI.Microsoft.UI.Composition.ICompositor8Methods.IID), null);
            return ___objRef_global__Microsoft_UI_Composition_ICompositor8;
        }
        private IObjectReference _objRef_global__Microsoft_UI_Composition_ICompositor8 => ___objRef_global__Microsoft_UI_Composition_ICompositor8 ?? Make___objRef_global__Microsoft_UI_Composition_ICompositor8();

        private volatile IObjectReference ___objRef_global__System_IDisposable;
        private IObjectReference Make___objRef_global__System_IDisposable()
        {
            global::System.Threading.Interlocked.CompareExchange(ref ___objRef_global__System_IDisposable, ((IWinRTObject)this).NativeObject.As<IUnknownVftbl>(global::ABI.System.IDisposableMethods.IID), null);
            return ___objRef_global__System_IDisposable;
        }
        private IObjectReference _objRef_global__System_IDisposable => ___objRef_global__System_IDisposable ?? Make___objRef_global__System_IDisposable();



        private static volatile IObjectReference ___objRef_global__Microsoft_UI_Composition_Compositor;
        private static IObjectReference _objRef_global__Microsoft_UI_Composition_Compositor
        {
            get
            { 
                var factory = ___objRef_global__Microsoft_UI_Composition_Compositor;
                if (factory != null && factory.IsInCurrentContext)
                {
                    return factory;
                }
                else
                {
                    return ___objRef_global__Microsoft_UI_Composition_Compositor = ActivationFactory.Get("Microsoft.UI.Composition.Compositor");
                }
            }
        }

        public Compositor() 
        {
            _inner = global::ABI.WinRT.Interop.IActivationFactoryMethods.ActivateInstanceUnsafe(_objRef_global__Microsoft_UI_Composition_Compositor, global::ABI.Microsoft.UI.Composition.ICompositorMethods.IID);
            ComWrappersSupport.RegisterObjectForInterface(this, ThisPtr);
            ComWrappersHelper.Init(_inner, false);

        }

        public static I As<I>() => ActivationFactory.Get("Microsoft.UI.Composition.Compositor").AsInterface<I>();

        private static volatile IObjectReference ___objRef_global__Microsoft_UI_Composition_ICompositorStatics;
        private static IObjectReference _objRef_global__Microsoft_UI_Composition_ICompositorStatics
        {
            get
            { 
                var factory = ___objRef_global__Microsoft_UI_Composition_ICompositorStatics;
                if (factory != null && factory.IsInCurrentContext)
                {
                    return factory;
                }
                else
                {
                    return ___objRef_global__Microsoft_UI_Composition_ICompositorStatics = ActivationFactory.Get("Microsoft.UI.Composition.Compositor", global::ABI.Microsoft.UI.Composition.ICompositorStaticsMethods.IID);
                }
            }
        }

        public static float MaxGlobalPlaybackRate => global::ABI.Microsoft.UI.Composition.ICompositorStaticsMethods.get_MaxGlobalPlaybackRate(_objRef_global__Microsoft_UI_Composition_ICompositorStatics);

        public static float MinGlobalPlaybackRate => global::ABI.Microsoft.UI.Composition.ICompositorStaticsMethods.get_MinGlobalPlaybackRate(_objRef_global__Microsoft_UI_Composition_ICompositorStatics);

        public static Compositor FromAbi(IntPtr thisPtr)
        {
            if (thisPtr == IntPtr.Zero) return null;
            return MarshalInspectable<Compositor>.FromAbi(thisPtr);
        }

        internal Compositor(IObjectReference objRef)
        {
            _inner = objRef.As(global::ABI.Microsoft.UI.Composition.ICompositorMethods.IID);

        }


        public static bool operator ==(Compositor x, Compositor y) => (x?.ThisPtr ?? IntPtr.Zero) == (y?.ThisPtr ?? IntPtr.Zero);
        public static bool operator !=(Compositor x, Compositor y) => !(x == y);
        public bool Equals(Compositor other) => this == other;
        public override bool Equals(object obj) => obj is Compositor that && this == that;
        public override int GetHashCode() => ThisPtr.GetHashCode();


        bool IWinRTObject.HasUnwrappableNativeObject => true;
        IObjectReference IWinRTObject.NativeObject => _inner;
        private volatile global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> _queryInterfaceCache;
        private global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> MakeQueryInterfaceCache()
        {
            global::System.Threading.Interlocked.CompareExchange(ref _queryInterfaceCache, new global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference>(), null); 
            return _queryInterfaceCache;
        }
        global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> IWinRTObject.QueryInterfaceCache => _queryInterfaceCache ?? MakeQueryInterfaceCache();
        private volatile global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> _additionalTypeData;
        private global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> MakeAdditionalTypeData()
        {
            global::System.Threading.Interlocked.CompareExchange(ref _additionalTypeData, new global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object>(), null); 
            return _additionalTypeData;
        }
        global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> IWinRTObject.AdditionalTypeData => _additionalTypeData ?? MakeAdditionalTypeData();

        private struct InterfaceTag<I>{};


        public ColorKeyFrameAnimation CreateColorKeyFrameAnimation() => global::ABI.Microsoft.UI.Composition.ICompositorMethods.CreateColorKeyFrameAnimation(_objRef_global__Microsoft_UI_Composition_ICompositor);

        public CompositionColorBrush CreateColorBrush() => global::ABI.Microsoft.UI.Composition.ICompositorMethods.CreateColorBrush(_objRef_global__Microsoft_UI_Composition_ICompositor);

        public CompositionColorBrush CreateColorBrush(global::Windows.UI.Color color) => global::ABI.Microsoft.UI.Composition.ICompositorMethods.CreateColorBrush(_objRef_global__Microsoft_UI_Composition_ICompositor, color);

        public ContainerVisual CreateContainerVisual() => global::ABI.Microsoft.UI.Composition.ICompositorMethods.CreateContainerVisual(_objRef_global__Microsoft_UI_Composition_ICompositor);

        public CubicBezierEasingFunction CreateCubicBezierEasingFunction(global::System.Numerics.Vector2 controlPoint1, global::System.Numerics.Vector2 controlPoint2) => global::ABI.Microsoft.UI.Composition.ICompositorMethods.CreateCubicBezierEasingFunction(_objRef_global__Microsoft_UI_Composition_ICompositor, controlPoint1, controlPoint2);

        public CompositionEffectFactory CreateEffectFactory(global::Windows.Graphics.Effects.IGraphicsEffect graphicsEffect) => global::ABI.Microsoft.UI.Composition.ICompositorMethods.CreateEffectFactory(_objRef_global__Microsoft_UI_Composition_ICompositor, graphicsEffect);

        public CompositionEffectFactory CreateEffectFactory(global::Windows.Graphics.Effects.IGraphicsEffect graphicsEffect, global::System.Collections.Generic.IEnumerable<string> animatableProperties) => global::ABI.Microsoft.UI.Composition.ICompositorMethods.CreateEffectFactory(_objRef_global__Microsoft_UI_Composition_ICompositor, graphicsEffect, animatableProperties);

        public ExpressionAnimation CreateExpressionAnimation() => global::ABI.Microsoft.UI.Composition.ICompositorMethods.CreateExpressionAnimation(_objRef_global__Microsoft_UI_Composition_ICompositor);

        public ExpressionAnimation CreateExpressionAnimation(string expression) => global::ABI.Microsoft.UI.Composition.ICompositorMethods.CreateExpressionAnimation(_objRef_global__Microsoft_UI_Composition_ICompositor, expression);

        public InsetClip CreateInsetClip() => global::ABI.Microsoft.UI.Composition.ICompositorMethods.CreateInsetClip(_objRef_global__Microsoft_UI_Composition_ICompositor);

        public InsetClip CreateInsetClip(float leftInset, float topInset, float rightInset, float bottomInset) => global::ABI.Microsoft.UI.Composition.ICompositorMethods.CreateInsetClip(_objRef_global__Microsoft_UI_Composition_ICompositor, leftInset, topInset, rightInset, bottomInset);

        public LinearEasingFunction CreateLinearEasingFunction() => global::ABI.Microsoft.UI.Composition.ICompositorMethods.CreateLinearEasingFunction(_objRef_global__Microsoft_UI_Composition_ICompositor);

        public CompositionPropertySet CreatePropertySet() => global::ABI.Microsoft.UI.Composition.ICompositorMethods.CreatePropertySet(_objRef_global__Microsoft_UI_Composition_ICompositor);

        public QuaternionKeyFrameAnimation CreateQuaternionKeyFrameAnimation() => global::ABI.Microsoft.UI.Composition.ICompositorMethods.CreateQuaternionKeyFrameAnimation(_objRef_global__Microsoft_UI_Composition_ICompositor);

        public ScalarKeyFrameAnimation CreateScalarKeyFrameAnimation() => global::ABI.Microsoft.UI.Composition.ICompositorMethods.CreateScalarKeyFrameAnimation(_objRef_global__Microsoft_UI_Composition_ICompositor);

        public CompositionScopedBatch CreateScopedBatch(CompositionBatchTypes batchType) => global::ABI.Microsoft.UI.Composition.ICompositorMethods.CreateScopedBatch(_objRef_global__Microsoft_UI_Composition_ICompositor, batchType);

        public SpriteVisual CreateSpriteVisual() => global::ABI.Microsoft.UI.Composition.ICompositorMethods.CreateSpriteVisual(_objRef_global__Microsoft_UI_Composition_ICompositor);

        public CompositionSurfaceBrush CreateSurfaceBrush() => global::ABI.Microsoft.UI.Composition.ICompositorMethods.CreateSurfaceBrush(_objRef_global__Microsoft_UI_Composition_ICompositor);

        public CompositionSurfaceBrush CreateSurfaceBrush(ICompositionSurface surface) => global::ABI.Microsoft.UI.Composition.ICompositorMethods.CreateSurfaceBrush(_objRef_global__Microsoft_UI_Composition_ICompositor, surface);

        public Vector2KeyFrameAnimation CreateVector2KeyFrameAnimation() => global::ABI.Microsoft.UI.Composition.ICompositorMethods.CreateVector2KeyFrameAnimation(_objRef_global__Microsoft_UI_Composition_ICompositor);

        public Vector3KeyFrameAnimation CreateVector3KeyFrameAnimation() => global::ABI.Microsoft.UI.Composition.ICompositorMethods.CreateVector3KeyFrameAnimation(_objRef_global__Microsoft_UI_Composition_ICompositor);

        public Vector4KeyFrameAnimation CreateVector4KeyFrameAnimation() => global::ABI.Microsoft.UI.Composition.ICompositorMethods.CreateVector4KeyFrameAnimation(_objRef_global__Microsoft_UI_Composition_ICompositor);

        public CompositionCommitBatch GetCommitBatch(CompositionBatchTypes batchType) => global::ABI.Microsoft.UI.Composition.ICompositorMethods.GetCommitBatch(_objRef_global__Microsoft_UI_Composition_ICompositor, batchType);

        public AmbientLight CreateAmbientLight() => global::ABI.Microsoft.UI.Composition.ICompositor2Methods.CreateAmbientLight(_objRef_global__Microsoft_UI_Composition_ICompositor2);

        public CompositionAnimationGroup CreateAnimationGroup() => global::ABI.Microsoft.UI.Composition.ICompositor2Methods.CreateAnimationGroup(_objRef_global__Microsoft_UI_Composition_ICompositor2);

        public CompositionBackdropBrush CreateBackdropBrush() => global::ABI.Microsoft.UI.Composition.ICompositor2Methods.CreateBackdropBrush(_objRef_global__Microsoft_UI_Composition_ICompositor2);

        public DistantLight CreateDistantLight() => global::ABI.Microsoft.UI.Composition.ICompositor2Methods.CreateDistantLight(_objRef_global__Microsoft_UI_Composition_ICompositor2);

        public DropShadow CreateDropShadow() => global::ABI.Microsoft.UI.Composition.ICompositor2Methods.CreateDropShadow(_objRef_global__Microsoft_UI_Composition_ICompositor2);

        public ImplicitAnimationCollection CreateImplicitAnimationCollection() => global::ABI.Microsoft.UI.Composition.ICompositor2Methods.CreateImplicitAnimationCollection(_objRef_global__Microsoft_UI_Composition_ICompositor2);

        public LayerVisual CreateLayerVisual() => global::ABI.Microsoft.UI.Composition.ICompositor2Methods.CreateLayerVisual(_objRef_global__Microsoft_UI_Composition_ICompositor2);

        public CompositionMaskBrush CreateMaskBrush() => global::ABI.Microsoft.UI.Composition.ICompositor2Methods.CreateMaskBrush(_objRef_global__Microsoft_UI_Composition_ICompositor2);

        public CompositionNineGridBrush CreateNineGridBrush() => global::ABI.Microsoft.UI.Composition.ICompositor2Methods.CreateNineGridBrush(_objRef_global__Microsoft_UI_Composition_ICompositor2);

        public PointLight CreatePointLight() => global::ABI.Microsoft.UI.Composition.ICompositor2Methods.CreatePointLight(_objRef_global__Microsoft_UI_Composition_ICompositor2);

        public SpotLight CreateSpotLight() => global::ABI.Microsoft.UI.Composition.ICompositor2Methods.CreateSpotLight(_objRef_global__Microsoft_UI_Composition_ICompositor2);

        public StepEasingFunction CreateStepEasingFunction() => global::ABI.Microsoft.UI.Composition.ICompositor2Methods.CreateStepEasingFunction(_objRef_global__Microsoft_UI_Composition_ICompositor2);

        public StepEasingFunction CreateStepEasingFunction(int stepCount) => global::ABI.Microsoft.UI.Composition.ICompositor2Methods.CreateStepEasingFunction(_objRef_global__Microsoft_UI_Composition_ICompositor2, stepCount);

        public CompositionColorGradientStop CreateColorGradientStop() => global::ABI.Microsoft.UI.Composition.ICompositor4Methods.CreateColorGradientStop(_objRef_global__Microsoft_UI_Composition_ICompositor4);

        public CompositionColorGradientStop CreateColorGradientStop(float offset, global::Windows.UI.Color color) => global::ABI.Microsoft.UI.Composition.ICompositor4Methods.CreateColorGradientStop(_objRef_global__Microsoft_UI_Composition_ICompositor4, offset, color);

        public CompositionLinearGradientBrush CreateLinearGradientBrush() => global::ABI.Microsoft.UI.Composition.ICompositor4Methods.CreateLinearGradientBrush(_objRef_global__Microsoft_UI_Composition_ICompositor4);

        public SpringScalarNaturalMotionAnimation CreateSpringScalarAnimation() => global::ABI.Microsoft.UI.Composition.ICompositor4Methods.CreateSpringScalarAnimation(_objRef_global__Microsoft_UI_Composition_ICompositor4);

        public SpringVector2NaturalMotionAnimation CreateSpringVector2Animation() => global::ABI.Microsoft.UI.Composition.ICompositor4Methods.CreateSpringVector2Animation(_objRef_global__Microsoft_UI_Composition_ICompositor4);

        public SpringVector3NaturalMotionAnimation CreateSpringVector3Animation() => global::ABI.Microsoft.UI.Composition.ICompositor4Methods.CreateSpringVector3Animation(_objRef_global__Microsoft_UI_Composition_ICompositor4);

        public BounceScalarNaturalMotionAnimation CreateBounceScalarAnimation() => global::ABI.Microsoft.UI.Composition.ICompositor5Methods.CreateBounceScalarAnimation(_objRef_global__Microsoft_UI_Composition_ICompositor5);

        public BounceVector2NaturalMotionAnimation CreateBounceVector2Animation() => global::ABI.Microsoft.UI.Composition.ICompositor5Methods.CreateBounceVector2Animation(_objRef_global__Microsoft_UI_Composition_ICompositor5);

        public BounceVector3NaturalMotionAnimation CreateBounceVector3Animation() => global::ABI.Microsoft.UI.Composition.ICompositor5Methods.CreateBounceVector3Animation(_objRef_global__Microsoft_UI_Composition_ICompositor5);

        public CompositionContainerShape CreateContainerShape() => global::ABI.Microsoft.UI.Composition.ICompositor5Methods.CreateContainerShape(_objRef_global__Microsoft_UI_Composition_ICompositor5);

        public CompositionEllipseGeometry CreateEllipseGeometry() => global::ABI.Microsoft.UI.Composition.ICompositor5Methods.CreateEllipseGeometry(_objRef_global__Microsoft_UI_Composition_ICompositor5);

        public CompositionLineGeometry CreateLineGeometry() => global::ABI.Microsoft.UI.Composition.ICompositor5Methods.CreateLineGeometry(_objRef_global__Microsoft_UI_Composition_ICompositor5);

        public CompositionPathGeometry CreatePathGeometry() => global::ABI.Microsoft.UI.Composition.ICompositor5Methods.CreatePathGeometry(_objRef_global__Microsoft_UI_Composition_ICompositor5);

        public CompositionPathGeometry CreatePathGeometry(CompositionPath path) => global::ABI.Microsoft.UI.Composition.ICompositor5Methods.CreatePathGeometry(_objRef_global__Microsoft_UI_Composition_ICompositor5, path);

        public PathKeyFrameAnimation CreatePathKeyFrameAnimation() => global::ABI.Microsoft.UI.Composition.ICompositor5Methods.CreatePathKeyFrameAnimation(_objRef_global__Microsoft_UI_Composition_ICompositor5);

        public CompositionRectangleGeometry CreateRectangleGeometry() => global::ABI.Microsoft.UI.Composition.ICompositor5Methods.CreateRectangleGeometry(_objRef_global__Microsoft_UI_Composition_ICompositor5);

        public CompositionRoundedRectangleGeometry CreateRoundedRectangleGeometry() => global::ABI.Microsoft.UI.Composition.ICompositor5Methods.CreateRoundedRectangleGeometry(_objRef_global__Microsoft_UI_Composition_ICompositor5);

        public ShapeVisual CreateShapeVisual() => global::ABI.Microsoft.UI.Composition.ICompositor5Methods.CreateShapeVisual(_objRef_global__Microsoft_UI_Composition_ICompositor5);

        public CompositionSpriteShape CreateSpriteShape() => global::ABI.Microsoft.UI.Composition.ICompositor5Methods.CreateSpriteShape(_objRef_global__Microsoft_UI_Composition_ICompositor5);

        public CompositionSpriteShape CreateSpriteShape(CompositionGeometry geometry) => global::ABI.Microsoft.UI.Composition.ICompositor5Methods.CreateSpriteShape(_objRef_global__Microsoft_UI_Composition_ICompositor5, geometry);

        public CompositionViewBox CreateViewBox() => global::ABI.Microsoft.UI.Composition.ICompositor5Methods.CreateViewBox(_objRef_global__Microsoft_UI_Composition_ICompositor5);

        public global::Windows.Foundation.IAsyncAction RequestCommitAsync() => global::ABI.Microsoft.UI.Composition.ICompositor5Methods.RequestCommitAsync(_objRef_global__Microsoft_UI_Composition_ICompositor5);

        public CompositionGeometricClip CreateGeometricClip() => global::ABI.Microsoft.UI.Composition.ICompositor6Methods.CreateGeometricClip(_objRef_global__Microsoft_UI_Composition_ICompositor6);

        public CompositionGeometricClip CreateGeometricClip(CompositionGeometry geometry) => global::ABI.Microsoft.UI.Composition.ICompositor6Methods.CreateGeometricClip(_objRef_global__Microsoft_UI_Composition_ICompositor6, geometry);

        public RedirectVisual CreateRedirectVisual() => global::ABI.Microsoft.UI.Composition.ICompositor6Methods.CreateRedirectVisual(_objRef_global__Microsoft_UI_Composition_ICompositor6);

        public RedirectVisual CreateRedirectVisual(Visual source) => global::ABI.Microsoft.UI.Composition.ICompositor6Methods.CreateRedirectVisual(_objRef_global__Microsoft_UI_Composition_ICompositor6, source);

        public BooleanKeyFrameAnimation CreateBooleanKeyFrameAnimation() => global::ABI.Microsoft.UI.Composition.ICompositor6Methods.CreateBooleanKeyFrameAnimation(_objRef_global__Microsoft_UI_Composition_ICompositor6);

        public AnimationPropertyInfo CreateAnimationPropertyInfo() => global::ABI.Microsoft.UI.Composition.ICompositor7Methods.CreateAnimationPropertyInfo(_objRef_global__Microsoft_UI_Composition_ICompositor7);

        public RectangleClip CreateRectangleClip() => global::ABI.Microsoft.UI.Composition.ICompositor7Methods.CreateRectangleClip(_objRef_global__Microsoft_UI_Composition_ICompositor7);

        public RectangleClip CreateRectangleClip(float left, float top, float right, float bottom) => global::ABI.Microsoft.UI.Composition.ICompositor7Methods.CreateRectangleClip(_objRef_global__Microsoft_UI_Composition_ICompositor7, left, top, right, bottom);

        public RectangleClip CreateRectangleClip(float left, float top, float right, float bottom, global::System.Numerics.Vector2 topLeftRadius, global::System.Numerics.Vector2 topRightRadius, global::System.Numerics.Vector2 bottomRightRadius, global::System.Numerics.Vector2 bottomLeftRadius) => global::ABI.Microsoft.UI.Composition.ICompositor7Methods.CreateRectangleClip(_objRef_global__Microsoft_UI_Composition_ICompositor7, left, top, right, bottom, topLeftRadius, topRightRadius, bottomRightRadius, bottomLeftRadius);

        public CompositionProjectedShadowCaster CreateProjectedShadowCaster() => global::ABI.Microsoft.UI.Composition.ICompositorWithProjectedShadowMethods.CreateProjectedShadowCaster(_objRef_global__Microsoft_UI_Composition_ICompositorWithProjectedShadow);

        public CompositionProjectedShadow CreateProjectedShadow() => global::ABI.Microsoft.UI.Composition.ICompositorWithProjectedShadowMethods.CreateProjectedShadow(_objRef_global__Microsoft_UI_Composition_ICompositorWithProjectedShadow);

        public CompositionProjectedShadowReceiver CreateProjectedShadowReceiver() => global::ABI.Microsoft.UI.Composition.ICompositorWithProjectedShadowMethods.CreateProjectedShadowReceiver(_objRef_global__Microsoft_UI_Composition_ICompositorWithProjectedShadow);

        public CompositionRadialGradientBrush CreateRadialGradientBrush() => global::ABI.Microsoft.UI.Composition.ICompositorWithRadialGradientMethods.CreateRadialGradientBrush(_objRef_global__Microsoft_UI_Composition_ICompositorWithRadialGradient);

        public CompositionVisualSurface CreateVisualSurface() => global::ABI.Microsoft.UI.Composition.ICompositorWithVisualSurfaceMethods.CreateVisualSurface(_objRef_global__Microsoft_UI_Composition_ICompositorWithVisualSurface);

        public AnimationController CreateAnimationController() => global::ABI.Microsoft.UI.Composition.ICompositor8Methods.CreateAnimationController(_objRef_global__Microsoft_UI_Composition_ICompositor8);

        public void Dispose() => global::ABI.System.IDisposableMethods.Dispose(_objRef_global__System_IDisposable);

        public string Comment
        {
            get => global::ABI.Microsoft.UI.Composition.ICompositor5Methods.get_Comment(_objRef_global__Microsoft_UI_Composition_ICompositor5);
            set => global::ABI.Microsoft.UI.Composition.ICompositor5Methods.set_Comment(_objRef_global__Microsoft_UI_Composition_ICompositor5, value);
        }

        public global::Microsoft.UI.Dispatching.DispatcherQueue DispatcherQueue => global::ABI.Microsoft.UI.Composition.ICompositor7Methods.get_DispatcherQueue(_objRef_global__Microsoft_UI_Composition_ICompositor7);

        public float GlobalPlaybackRate
        {
            get => global::ABI.Microsoft.UI.Composition.ICompositor5Methods.get_GlobalPlaybackRate(_objRef_global__Microsoft_UI_Composition_ICompositor5);
            set => global::ABI.Microsoft.UI.Composition.ICompositor5Methods.set_GlobalPlaybackRate(_objRef_global__Microsoft_UI_Composition_ICompositor5, value);
        }

        private bool IsOverridableInterface(Guid iid) => false;

        global::System.Runtime.InteropServices.CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(ref Guid iid, out IntPtr ppv)
        {
            ppv = IntPtr.Zero;
            if (IsOverridableInterface(iid) || global::WinRT.Interop.IID.IID_IInspectable == iid)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
            }

            if (((IWinRTObject)this).NativeObject.TryAs(iid, out ppv) >= 0)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.Handled;
            }

            return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
        }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI")]
    [global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Composition.ContainerVisual))]
    [global::ABI.Microsoft.UI.Composition.ContainerVisualRcwFactory]
    [global::WinRT.ProjectedRuntimeClass(typeof(IContainerVisual))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.Foundation.WindowsAppSDKContract), 65536u)]
    public class ContainerVisual : Visual, global::System.Runtime.InteropServices.ICustomQueryInterface, IWinRTObject, IEquatable<ContainerVisual>
    {
        private IntPtr ThisPtr => _inner == null ? (((IWinRTObject)this).NativeObject).ThisPtr : _inner.ThisPtr;

        private readonly IObjectReference _inner = null;




        private volatile IObjectReference ___objRef_global__Microsoft_UI_Composition_IContainerVisual;
        private IObjectReference Make___objRef_global__Microsoft_UI_Composition_IContainerVisual()
        {
            global::System.Threading.Interlocked.CompareExchange(ref ___objRef_global__Microsoft_UI_Composition_IContainerVisual, ((IWinRTObject)this).NativeObject.As<IUnknownVftbl>(global::ABI.Microsoft.UI.Composition.IContainerVisualMethods.IID), null);
            return ___objRef_global__Microsoft_UI_Composition_IContainerVisual;
        }
        private IObjectReference _objRef_global__Microsoft_UI_Composition_IContainerVisual => ___objRef_global__Microsoft_UI_Composition_IContainerVisual ?? Make___objRef_global__Microsoft_UI_Composition_IContainerVisual();



        private static class _IContainerVisualFactoryMethods
        {}

        private static volatile IObjectReference ___objRef_global__Microsoft_UI_Composition_IContainerVisualFactory;
        private static IObjectReference _objRef_global__Microsoft_UI_Composition_IContainerVisualFactory
        {
            get
            { 
                var factory = ___objRef_global__Microsoft_UI_Composition_IContainerVisualFactory;
                if (factory != null && factory.IsInCurrentContext)
                {
                    return factory;
                }
                else
                {
                    return ___objRef_global__Microsoft_UI_Composition_IContainerVisualFactory = ActivationFactory.Get("Microsoft.UI.Composition.ContainerVisual", global::ABI.Microsoft.UI.Composition.IContainerVisualFactoryMethods.IID);
                }
            }
        }

        public static new ContainerVisual FromAbi(IntPtr thisPtr)
        {
            if (thisPtr == IntPtr.Zero) return null;
            return MarshalInspectable<ContainerVisual>.FromAbi(thisPtr);
        }

        protected internal ContainerVisual(IObjectReference objRef)
            : base(global::WinRT.DerivedComposed.Instance)

        {
            _inner = objRef.As(global::ABI.Microsoft.UI.Composition.IContainerVisualMethods.IID);

        }


        public static bool operator ==(ContainerVisual x, ContainerVisual y) => (x?.ThisPtr ?? IntPtr.Zero) == (y?.ThisPtr ?? IntPtr.Zero);
        public static bool operator !=(ContainerVisual x, ContainerVisual y) => !(x == y);
        public bool Equals(ContainerVisual other) => this == other;
        public override bool Equals(object obj) => obj is ContainerVisual that && this == that;
        public override int GetHashCode() => ThisPtr.GetHashCode();


        protected ContainerVisual(global::WinRT.DerivedComposed _):base(_)
        {

        }
        bool IWinRTObject.HasUnwrappableNativeObject => this.GetType() == typeof(ContainerVisual);
        IObjectReference IWinRTObject.NativeObject => _inner;

        private struct InterfaceTag<I>{};


        public VisualCollection Children => global::ABI.Microsoft.UI.Composition.IContainerVisualMethods.get_Children(_objRef_global__Microsoft_UI_Composition_IContainerVisual);

        protected override bool IsOverridableInterface(Guid iid) => base.IsOverridableInterface(iid);

        global::System.Runtime.InteropServices.CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(ref Guid iid, out IntPtr ppv)
        {
            ppv = IntPtr.Zero;
            if (IsOverridableInterface(iid) || global::WinRT.Interop.IID.IID_IInspectable == iid)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
            }

            if (((IWinRTObject)this).NativeObject.TryAs(iid, out ppv) >= 0)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.Handled;
            }

            return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
        }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI")]
    [global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Composition.CubicBezierEasingFunction))]
    [global::ABI.Microsoft.UI.Composition.CubicBezierEasingFunctionRcwFactory]
    [global::WinRT.ProjectedRuntimeClass(typeof(ICubicBezierEasingFunction))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.Foundation.WindowsAppSDKContract), 65536u)]
    public sealed class CubicBezierEasingFunction : CompositionEasingFunction, global::System.Runtime.InteropServices.ICustomQueryInterface, IWinRTObject, IEquatable<CubicBezierEasingFunction>
    {
        private IntPtr ThisPtr => _inner == null ? (((IWinRTObject)this).NativeObject).ThisPtr : _inner.ThisPtr;

        private readonly IObjectReference _inner = null;



        private IObjectReference _objRef_global__Microsoft_UI_Composition_ICubicBezierEasingFunction => _inner;


        public static new CubicBezierEasingFunction FromAbi(IntPtr thisPtr)
        {
            if (thisPtr == IntPtr.Zero) return null;
            return MarshalInspectable<CubicBezierEasingFunction>.FromAbi(thisPtr);
        }

        internal CubicBezierEasingFunction(IObjectReference objRef)
            : base(global::WinRT.DerivedComposed.Instance)

        {
            _inner = objRef.As(global::ABI.Microsoft.UI.Composition.ICubicBezierEasingFunctionMethods.IID);

        }


        public static bool operator ==(CubicBezierEasingFunction x, CubicBezierEasingFunction y) => (x?.ThisPtr ?? IntPtr.Zero) == (y?.ThisPtr ?? IntPtr.Zero);
        public static bool operator !=(CubicBezierEasingFunction x, CubicBezierEasingFunction y) => !(x == y);
        public bool Equals(CubicBezierEasingFunction other) => this == other;
        public override bool Equals(object obj) => obj is CubicBezierEasingFunction that && this == that;
        public override int GetHashCode() => ThisPtr.GetHashCode();


        bool IWinRTObject.HasUnwrappableNativeObject => true;
        IObjectReference IWinRTObject.NativeObject => _inner;

        private struct InterfaceTag<I>{};


        public global::System.Numerics.Vector2 ControlPoint1 => global::ABI.Microsoft.UI.Composition.ICubicBezierEasingFunctionMethods.get_ControlPoint1(_objRef_global__Microsoft_UI_Composition_ICubicBezierEasingFunction);

        public global::System.Numerics.Vector2 ControlPoint2 => global::ABI.Microsoft.UI.Composition.ICubicBezierEasingFunctionMethods.get_ControlPoint2(_objRef_global__Microsoft_UI_Composition_ICubicBezierEasingFunction);

        protected override bool IsOverridableInterface(Guid iid) => base.IsOverridableInterface(iid);

        global::System.Runtime.InteropServices.CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(ref Guid iid, out IntPtr ppv)
        {
            ppv = IntPtr.Zero;
            if (IsOverridableInterface(iid) || global::WinRT.Interop.IID.IID_IInspectable == iid)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
            }

            if (((IWinRTObject)this).NativeObject.TryAs(iid, out ppv) >= 0)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.Handled;
            }

            return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
        }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI")]
    [global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Composition.DistantLight))]
    [global::ABI.Microsoft.UI.Composition.DistantLightRcwFactory]
    [global::WinRT.ProjectedRuntimeClass(typeof(IDistantLight))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.Foundation.WindowsAppSDKContract), 65536u)]
    public sealed class DistantLight : CompositionLight, global::System.Runtime.InteropServices.ICustomQueryInterface, IWinRTObject, IEquatable<DistantLight>
    {
        private IntPtr ThisPtr => _inner == null ? (((IWinRTObject)this).NativeObject).ThisPtr : _inner.ThisPtr;

        private readonly IObjectReference _inner = null;



        private IObjectReference _objRef_global__Microsoft_UI_Composition_IDistantLight => _inner;
        private volatile IObjectReference ___objRef_global__Microsoft_UI_Composition_IDistantLight2;
        private IObjectReference Make___objRef_global__Microsoft_UI_Composition_IDistantLight2()
        {
            global::System.Threading.Interlocked.CompareExchange(ref ___objRef_global__Microsoft_UI_Composition_IDistantLight2, ((IWinRTObject)this).NativeObject.As<IUnknownVftbl>(global::ABI.Microsoft.UI.Composition.IDistantLight2Methods.IID), null);
            return ___objRef_global__Microsoft_UI_Composition_IDistantLight2;
        }
        private IObjectReference _objRef_global__Microsoft_UI_Composition_IDistantLight2 => ___objRef_global__Microsoft_UI_Composition_IDistantLight2 ?? Make___objRef_global__Microsoft_UI_Composition_IDistantLight2();



        public static new DistantLight FromAbi(IntPtr thisPtr)
        {
            if (thisPtr == IntPtr.Zero) return null;
            return MarshalInspectable<DistantLight>.FromAbi(thisPtr);
        }

        internal DistantLight(IObjectReference objRef)
            : base(global::WinRT.DerivedComposed.Instance)

        {
            _inner = objRef.As(global::ABI.Microsoft.UI.Composition.IDistantLightMethods.IID);

        }


        public static bool operator ==(DistantLight x, DistantLight y) => (x?.ThisPtr ?? IntPtr.Zero) == (y?.ThisPtr ?? IntPtr.Zero);
        public static bool operator !=(DistantLight x, DistantLight y) => !(x == y);
        public bool Equals(DistantLight other) => this == other;
        public override bool Equals(object obj) => obj is DistantLight that && this == that;
        public override int GetHashCode() => ThisPtr.GetHashCode();


        bool IWinRTObject.HasUnwrappableNativeObject => true;
        IObjectReference IWinRTObject.NativeObject => _inner;

        private struct InterfaceTag<I>{};


        public global::Windows.UI.Color Color
        {
            get => global::ABI.Microsoft.UI.Composition.IDistantLightMethods.get_Color(_objRef_global__Microsoft_UI_Composition_IDistantLight);
            set => global::ABI.Microsoft.UI.Composition.IDistantLightMethods.set_Color(_objRef_global__Microsoft_UI_Composition_IDistantLight, value);
        }

        public Visual CoordinateSpace
        {
            get => global::ABI.Microsoft.UI.Composition.IDistantLightMethods.get_CoordinateSpace(_objRef_global__Microsoft_UI_Composition_IDistantLight);
            set => global::ABI.Microsoft.UI.Composition.IDistantLightMethods.set_CoordinateSpace(_objRef_global__Microsoft_UI_Composition_IDistantLight, value);
        }

        public global::System.Numerics.Vector3 Direction
        {
            get => global::ABI.Microsoft.UI.Composition.IDistantLightMethods.get_Direction(_objRef_global__Microsoft_UI_Composition_IDistantLight);
            set => global::ABI.Microsoft.UI.Composition.IDistantLightMethods.set_Direction(_objRef_global__Microsoft_UI_Composition_IDistantLight, value);
        }

        public float Intensity
        {
            get => global::ABI.Microsoft.UI.Composition.IDistantLight2Methods.get_Intensity(_objRef_global__Microsoft_UI_Composition_IDistantLight2);
            set => global::ABI.Microsoft.UI.Composition.IDistantLight2Methods.set_Intensity(_objRef_global__Microsoft_UI_Composition_IDistantLight2, value);
        }

        protected override bool IsOverridableInterface(Guid iid) => base.IsOverridableInterface(iid);

        global::System.Runtime.InteropServices.CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(ref Guid iid, out IntPtr ppv)
        {
            ppv = IntPtr.Zero;
            if (IsOverridableInterface(iid) || global::WinRT.Interop.IID.IID_IInspectable == iid)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
            }

            if (((IWinRTObject)this).NativeObject.TryAs(iid, out ppv) >= 0)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.Handled;
            }

            return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
        }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI")]
    [global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Composition.DropShadow))]
    [global::ABI.Microsoft.UI.Composition.DropShadowRcwFactory]
    [global::WinRT.ProjectedRuntimeClass(typeof(IDropShadow))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.Foundation.WindowsAppSDKContract), 65536u)]
    public sealed class DropShadow : CompositionShadow, global::System.Runtime.InteropServices.ICustomQueryInterface, IWinRTObject, IEquatable<DropShadow>
    {
        private IntPtr ThisPtr => _inner == null ? (((IWinRTObject)this).NativeObject).ThisPtr : _inner.ThisPtr;

        private readonly IObjectReference _inner = null;



        private IObjectReference _objRef_global__Microsoft_UI_Composition_IDropShadow => _inner;
        private volatile IObjectReference ___objRef_global__Microsoft_UI_Composition_IDropShadow2;
        private IObjectReference Make___objRef_global__Microsoft_UI_Composition_IDropShadow2()
        {
            global::System.Threading.Interlocked.CompareExchange(ref ___objRef_global__Microsoft_UI_Composition_IDropShadow2, ((IWinRTObject)this).NativeObject.As<IUnknownVftbl>(global::ABI.Microsoft.UI.Composition.IDropShadow2Methods.IID), null);
            return ___objRef_global__Microsoft_UI_Composition_IDropShadow2;
        }
        private IObjectReference _objRef_global__Microsoft_UI_Composition_IDropShadow2 => ___objRef_global__Microsoft_UI_Composition_IDropShadow2 ?? Make___objRef_global__Microsoft_UI_Composition_IDropShadow2();



        public static new DropShadow FromAbi(IntPtr thisPtr)
        {
            if (thisPtr == IntPtr.Zero) return null;
            return MarshalInspectable<DropShadow>.FromAbi(thisPtr);
        }

        internal DropShadow(IObjectReference objRef)
            : base(global::WinRT.DerivedComposed.Instance)

        {
            _inner = objRef.As(global::ABI.Microsoft.UI.Composition.IDropShadowMethods.IID);

        }


        public static bool operator ==(DropShadow x, DropShadow y) => (x?.ThisPtr ?? IntPtr.Zero) == (y?.ThisPtr ?? IntPtr.Zero);
        public static bool operator !=(DropShadow x, DropShadow y) => !(x == y);
        public bool Equals(DropShadow other) => this == other;
        public override bool Equals(object obj) => obj is DropShadow that && this == that;
        public override int GetHashCode() => ThisPtr.GetHashCode();


        bool IWinRTObject.HasUnwrappableNativeObject => true;
        IObjectReference IWinRTObject.NativeObject => _inner;

        private struct InterfaceTag<I>{};


        public float BlurRadius
        {
            get => global::ABI.Microsoft.UI.Composition.IDropShadowMethods.get_BlurRadius(_objRef_global__Microsoft_UI_Composition_IDropShadow);
            set => global::ABI.Microsoft.UI.Composition.IDropShadowMethods.set_BlurRadius(_objRef_global__Microsoft_UI_Composition_IDropShadow, value);
        }

        public global::Windows.UI.Color Color
        {
            get => global::ABI.Microsoft.UI.Composition.IDropShadowMethods.get_Color(_objRef_global__Microsoft_UI_Composition_IDropShadow);
            set => global::ABI.Microsoft.UI.Composition.IDropShadowMethods.set_Color(_objRef_global__Microsoft_UI_Composition_IDropShadow, value);
        }

        public CompositionBrush Mask
        {
            get => global::ABI.Microsoft.UI.Composition.IDropShadowMethods.get_Mask(_objRef_global__Microsoft_UI_Composition_IDropShadow);
            set => global::ABI.Microsoft.UI.Composition.IDropShadowMethods.set_Mask(_objRef_global__Microsoft_UI_Composition_IDropShadow, value);
        }

        public global::System.Numerics.Vector3 Offset
        {
            get => global::ABI.Microsoft.UI.Composition.IDropShadowMethods.get_Offset(_objRef_global__Microsoft_UI_Composition_IDropShadow);
            set => global::ABI.Microsoft.UI.Composition.IDropShadowMethods.set_Offset(_objRef_global__Microsoft_UI_Composition_IDropShadow, value);
        }

        public float Opacity
        {
            get => global::ABI.Microsoft.UI.Composition.IDropShadowMethods.get_Opacity(_objRef_global__Microsoft_UI_Composition_IDropShadow);
            set => global::ABI.Microsoft.UI.Composition.IDropShadowMethods.set_Opacity(_objRef_global__Microsoft_UI_Composition_IDropShadow, value);
        }

        public CompositionDropShadowSourcePolicy SourcePolicy
        {
            get => global::ABI.Microsoft.UI.Composition.IDropShadow2Methods.get_SourcePolicy(_objRef_global__Microsoft_UI_Composition_IDropShadow2);
            set => global::ABI.Microsoft.UI.Composition.IDropShadow2Methods.set_SourcePolicy(_objRef_global__Microsoft_UI_Composition_IDropShadow2, value);
        }

        protected override bool IsOverridableInterface(Guid iid) => base.IsOverridableInterface(iid);

        global::System.Runtime.InteropServices.CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(ref Guid iid, out IntPtr ppv)
        {
            ppv = IntPtr.Zero;
            if (IsOverridableInterface(iid) || global::WinRT.Interop.IID.IID_IInspectable == iid)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
            }

            if (((IWinRTObject)this).NativeObject.TryAs(iid, out ppv) >= 0)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.Handled;
            }

            return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
        }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI")]
    [global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Composition.ElasticEasingFunction))]
    [global::ABI.Microsoft.UI.Composition.ElasticEasingFunctionRcwFactory]
    [global::WinRT.ProjectedRuntimeClass(typeof(IElasticEasingFunction))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.Foundation.WindowsAppSDKContract), 65536u)]
    public sealed class ElasticEasingFunction : CompositionEasingFunction, global::System.Runtime.InteropServices.ICustomQueryInterface, IWinRTObject, IEquatable<ElasticEasingFunction>
    {
        private IntPtr ThisPtr => _inner == null ? (((IWinRTObject)this).NativeObject).ThisPtr : _inner.ThisPtr;

        private readonly IObjectReference _inner = null;



        private IObjectReference _objRef_global__Microsoft_UI_Composition_IElasticEasingFunction => _inner;


        public static new ElasticEasingFunction FromAbi(IntPtr thisPtr)
        {
            if (thisPtr == IntPtr.Zero) return null;
            return MarshalInspectable<ElasticEasingFunction>.FromAbi(thisPtr);
        }

        internal ElasticEasingFunction(IObjectReference objRef)
            : base(global::WinRT.DerivedComposed.Instance)

        {
            _inner = objRef.As(global::ABI.Microsoft.UI.Composition.IElasticEasingFunctionMethods.IID);

        }


        public static bool operator ==(ElasticEasingFunction x, ElasticEasingFunction y) => (x?.ThisPtr ?? IntPtr.Zero) == (y?.ThisPtr ?? IntPtr.Zero);
        public static bool operator !=(ElasticEasingFunction x, ElasticEasingFunction y) => !(x == y);
        public bool Equals(ElasticEasingFunction other) => this == other;
        public override bool Equals(object obj) => obj is ElasticEasingFunction that && this == that;
        public override int GetHashCode() => ThisPtr.GetHashCode();


        bool IWinRTObject.HasUnwrappableNativeObject => true;
        IObjectReference IWinRTObject.NativeObject => _inner;

        private struct InterfaceTag<I>{};


        public CompositionEasingFunctionMode Mode => global::ABI.Microsoft.UI.Composition.IElasticEasingFunctionMethods.get_Mode(_objRef_global__Microsoft_UI_Composition_IElasticEasingFunction);

        public int Oscillations => global::ABI.Microsoft.UI.Composition.IElasticEasingFunctionMethods.get_Oscillations(_objRef_global__Microsoft_UI_Composition_IElasticEasingFunction);

        public float Springiness => global::ABI.Microsoft.UI.Composition.IElasticEasingFunctionMethods.get_Springiness(_objRef_global__Microsoft_UI_Composition_IElasticEasingFunction);

        protected override bool IsOverridableInterface(Guid iid) => base.IsOverridableInterface(iid);

        global::System.Runtime.InteropServices.CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(ref Guid iid, out IntPtr ppv)
        {
            ppv = IntPtr.Zero;
            if (IsOverridableInterface(iid) || global::WinRT.Interop.IID.IID_IInspectable == iid)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
            }

            if (((IWinRTObject)this).NativeObject.TryAs(iid, out ppv) >= 0)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.Handled;
            }

            return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
        }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI")]
    [global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Composition.ExponentialEasingFunction))]
    [global::ABI.Microsoft.UI.Composition.ExponentialEasingFunctionRcwFactory]
    [global::WinRT.ProjectedRuntimeClass(typeof(IExponentialEasingFunction))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.Foundation.WindowsAppSDKContract), 65536u)]
    public sealed class ExponentialEasingFunction : CompositionEasingFunction, global::System.Runtime.InteropServices.ICustomQueryInterface, IWinRTObject, IEquatable<ExponentialEasingFunction>
    {
        private IntPtr ThisPtr => _inner == null ? (((IWinRTObject)this).NativeObject).ThisPtr : _inner.ThisPtr;

        private readonly IObjectReference _inner = null;



        private IObjectReference _objRef_global__Microsoft_UI_Composition_IExponentialEasingFunction => _inner;


        public static new ExponentialEasingFunction FromAbi(IntPtr thisPtr)
        {
            if (thisPtr == IntPtr.Zero) return null;
            return MarshalInspectable<ExponentialEasingFunction>.FromAbi(thisPtr);
        }

        internal ExponentialEasingFunction(IObjectReference objRef)
            : base(global::WinRT.DerivedComposed.Instance)

        {
            _inner = objRef.As(global::ABI.Microsoft.UI.Composition.IExponentialEasingFunctionMethods.IID);

        }


        public static bool operator ==(ExponentialEasingFunction x, ExponentialEasingFunction y) => (x?.ThisPtr ?? IntPtr.Zero) == (y?.ThisPtr ?? IntPtr.Zero);
        public static bool operator !=(ExponentialEasingFunction x, ExponentialEasingFunction y) => !(x == y);
        public bool Equals(ExponentialEasingFunction other) => this == other;
        public override bool Equals(object obj) => obj is ExponentialEasingFunction that && this == that;
        public override int GetHashCode() => ThisPtr.GetHashCode();


        bool IWinRTObject.HasUnwrappableNativeObject => true;
        IObjectReference IWinRTObject.NativeObject => _inner;

        private struct InterfaceTag<I>{};


        public float Exponent => global::ABI.Microsoft.UI.Composition.IExponentialEasingFunctionMethods.get_Exponent(_objRef_global__Microsoft_UI_Composition_IExponentialEasingFunction);

        public CompositionEasingFunctionMode Mode => global::ABI.Microsoft.UI.Composition.IExponentialEasingFunctionMethods.get_Mode(_objRef_global__Microsoft_UI_Composition_IExponentialEasingFunction);

        protected override bool IsOverridableInterface(Guid iid) => base.IsOverridableInterface(iid);

        global::System.Runtime.InteropServices.CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(ref Guid iid, out IntPtr ppv)
        {
            ppv = IntPtr.Zero;
            if (IsOverridableInterface(iid) || global::WinRT.Interop.IID.IID_IInspectable == iid)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
            }

            if (((IWinRTObject)this).NativeObject.TryAs(iid, out ppv) >= 0)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.Handled;
            }

            return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
        }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI")]
    [global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Composition.ExpressionAnimation))]
    [global::ABI.Microsoft.UI.Composition.ExpressionAnimationRcwFactory]
    [global::WinRT.ProjectedRuntimeClass(typeof(IExpressionAnimation))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.Foundation.WindowsAppSDKContract), 65536u)]
    public sealed class ExpressionAnimation : CompositionAnimation, global::System.Runtime.InteropServices.ICustomQueryInterface, IWinRTObject, IEquatable<ExpressionAnimation>
    {
        private IntPtr ThisPtr => _inner == null ? (((IWinRTObject)this).NativeObject).ThisPtr : _inner.ThisPtr;

        private readonly IObjectReference _inner = null;



        private IObjectReference _objRef_global__Microsoft_UI_Composition_IExpressionAnimation => _inner;


        public static new ExpressionAnimation FromAbi(IntPtr thisPtr)
        {
            if (thisPtr == IntPtr.Zero) return null;
            return MarshalInspectable<ExpressionAnimation>.FromAbi(thisPtr);
        }

        internal ExpressionAnimation(IObjectReference objRef)
            : base(global::WinRT.DerivedComposed.Instance)

        {
            _inner = objRef.As(global::ABI.Microsoft.UI.Composition.IExpressionAnimationMethods.IID);

        }


        public static bool operator ==(ExpressionAnimation x, ExpressionAnimation y) => (x?.ThisPtr ?? IntPtr.Zero) == (y?.ThisPtr ?? IntPtr.Zero);
        public static bool operator !=(ExpressionAnimation x, ExpressionAnimation y) => !(x == y);
        public bool Equals(ExpressionAnimation other) => this == other;
        public override bool Equals(object obj) => obj is ExpressionAnimation that && this == that;
        public override int GetHashCode() => ThisPtr.GetHashCode();


        bool IWinRTObject.HasUnwrappableNativeObject => true;
        IObjectReference IWinRTObject.NativeObject => _inner;

        private struct InterfaceTag<I>{};


        public string Expression
        {
            get => global::ABI.Microsoft.UI.Composition.IExpressionAnimationMethods.get_Expression(_objRef_global__Microsoft_UI_Composition_IExpressionAnimation);
            set => global::ABI.Microsoft.UI.Composition.IExpressionAnimationMethods.set_Expression(_objRef_global__Microsoft_UI_Composition_IExpressionAnimation, value);
        }

        protected override bool IsOverridableInterface(Guid iid) => base.IsOverridableInterface(iid);

        global::System.Runtime.InteropServices.CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(ref Guid iid, out IntPtr ppv)
        {
            ppv = IntPtr.Zero;
            if (IsOverridableInterface(iid) || global::WinRT.Interop.IID.IID_IInspectable == iid)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
            }

            if (((IWinRTObject)this).NativeObject.TryAs(iid, out ppv) >= 0)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.Handled;
            }

            return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
        }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI")][Guid("4540525E-B70D-5A14-BBFA-63BEF42313C7")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Composition.IAmbientLight))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.Foundation.WindowsAppSDKContract), 65536u)]
    internal interface IAmbientLight
    {
        global::Windows.UI.Color Color { get; set; }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI")][Guid("3356F963-040C-54D4-9DFC-B61C51AAADD1")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Composition.IAmbientLight2))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.Foundation.WindowsAppSDKContract), 65536u)]
    internal interface IAmbientLight2
    {
        float Intensity { get; set; }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI")][Guid("BD0F88A8-A415-5322-8C3D-1A6D9192754F")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Composition.IAnimationController))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.Foundation.WindowsAppSDKContract), 65536u)]
    internal interface IAnimationController
    {
        void Pause();
        void Resume();
        float PlaybackRate { get; set; }
        float Progress { get; set; }
        AnimationControllerProgressBehavior ProgressBehavior { get; set; }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI")][Guid("B63B0FB6-286B-57AF-B096-16066D43DC00")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Composition.IAnimationControllerStatics))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.Foundation.WindowsAppSDKContract), 65536u)]
    internal interface IAnimationControllerStatics
    {
        float MaxPlaybackRate { get; }
        float MinPlaybackRate { get; }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI")][Guid("8F56119D-B96D-58D0-9916-D1C5E390F890")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Composition.IAnimationObject))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.Foundation.WindowsAppSDKContract), 65536u)]
    public interface IAnimationObject
    {
        void PopulatePropertyInfo(string propertyName, AnimationPropertyInfo propertyInfo);
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI")][Guid("3D721A2B-9CCD-57BD-B6C2-CE9E04AE3606")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Composition.IAnimationPropertyInfo))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.Foundation.WindowsAppSDKContract), 65536u)]
    internal interface IAnimationPropertyInfo
    {
        AnimationPropertyAccessMode AccessMode { get; set; }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI")][Guid("ED14FB09-DE28-540D-9311-80CFDCC97338")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Composition.IAnimationPropertyInfo2))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.Foundation.WindowsAppSDKContract), 65536u)]
    internal interface IAnimationPropertyInfo2
    {
        CompositionObject GetResolvedCompositionObject();
        string GetResolvedCompositionObjectProperty();
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI")][Guid("27C75BAB-317A-5362-BF25-FFFBB98A51B9")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Composition.IBackEasingFunction))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.Foundation.WindowsAppSDKContract), 65536u)]
    internal interface IBackEasingFunction
    {
        float Amplitude { get; }
        CompositionEasingFunctionMode Mode { get; }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI")][Guid("7FE485E9-E874-5FF3-8DDC-826C3818BFC3")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Composition.IBooleanKeyFrameAnimation))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.Foundation.WindowsAppSDKContract), 65536u)]
    internal interface IBooleanKeyFrameAnimation
    {
        [global::Windows.Foundation.Metadata.Overload(@"InsertKeyFrame")]
        void InsertKeyFrame(float normalizedProgressKey, bool value);
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI")][Guid("FA11F3C0-697B-562F-AF46-C6AF666B6EC4")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Composition.IBounceEasingFunction))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.Foundation.WindowsAppSDKContract), 65536u)]
    internal interface IBounceEasingFunction
    {
        int Bounces { get; }
        float Bounciness { get; }
        CompositionEasingFunctionMode Mode { get; }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI")][Guid("1C0C4B76-C4D6-5DD9-8DD6-DBE35C7B7E55")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Composition.IBounceScalarNaturalMotionAnimation))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.Foundation.WindowsAppSDKContract), 65536u)]
    internal interface IBounceScalarNaturalMotionAnimation
    {
        float Acceleration { get; set; }
        float Restitution { get; set; }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI")][Guid("EC528D1F-22E2-573E-AB87-757071E50012")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Composition.IBounceVector2NaturalMotionAnimation))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.Foundation.WindowsAppSDKContract), 65536u)]
    internal interface IBounceVector2NaturalMotionAnimation
    {
        float Acceleration { get; set; }
        float Restitution { get; set; }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI")][Guid("E3E2EE98-1211-586D-8A6D-FEA5EFC3957F")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Composition.IBounceVector3NaturalMotionAnimation))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.Foundation.WindowsAppSDKContract), 65536u)]
    internal interface IBounceVector3NaturalMotionAnimation
    {
        float Acceleration { get; set; }
        float Restitution { get; set; }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI")][Guid("414B172C-BF27-5EAD-93E0-35915322DB2C")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Composition.ICircleEasingFunction))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.Foundation.WindowsAppSDKContract), 65536u)]
    internal interface ICircleEasingFunction
    {
        CompositionEasingFunctionMode Mode { get; }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI")][Guid("F0237928-353C-5867-BE93-71547E989F44")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Composition.IColorKeyFrameAnimation))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.Foundation.WindowsAppSDKContract), 65536u)]
    internal interface IColorKeyFrameAnimation
    {
        [global::Windows.Foundation.Metadata.Overload(@"InsertKeyFrame")]
        void InsertKeyFrame(float normalizedProgressKey, global::Windows.UI.Color value);
        [global::Windows.Foundation.Metadata.Overload(@"InsertKeyFrameWithEasingFunction")]
        void InsertKeyFrame(float normalizedProgressKey, global::Windows.UI.Color value, CompositionEasingFunction easingFunction);
        CompositionColorSpace InterpolationColorSpace { get; set; }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI")][Guid("A829CCC8-6FDE-5B90-AD37-EFD307E1B631")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Composition.ICompositionAnimation))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.Foundation.WindowsAppSDKContract), 65536u)]
    internal interface ICompositionAnimation
    {
        void ClearAllParameters();
        void ClearParameter(string key);
        void SetColorParameter(string key, global::Windows.UI.Color value);
        void SetMatrix3x2Parameter(string key, global::System.Numerics.Matrix3x2 value);
        void SetMatrix4x4Parameter(string key, global::System.Numerics.Matrix4x4 value);
        void SetQuaternionParameter(string key, global::System.Numerics.Quaternion value);
        void SetReferenceParameter(string key, CompositionObject compositionObject);
        void SetScalarParameter(string key, float value);
        void SetVector2Parameter(string key, global::System.Numerics.Vector2 value);
        void SetVector3Parameter(string key, global::System.Numerics.Vector3 value);
        void SetVector4Parameter(string key, global::System.Numerics.Vector4 value);
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI")][Guid("0926EB58-8965-5C74-BDAC-852EBB5E8542")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Composition.ICompositionAnimation2))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.Foundation.WindowsAppSDKContract), 65536u)]
    internal interface ICompositionAnimation2
    {
        void SetBooleanParameter(string key, bool value);
        string Target { get; set; }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI")][Guid("60063F53-4167-5914-A2F1-9EFCC2F86C76")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Composition.ICompositionAnimation3))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.Foundation.WindowsAppSDKContract), 65536u)]
    internal interface ICompositionAnimation3
    {
        InitialValueExpressionCollection InitialValueExpressions { get; }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI")][Guid("C4101447-DFE4-597F-B5BC-96443F5D18A1")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Composition.ICompositionAnimation4))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.Foundation.WindowsAppSDKContract), 65536u)]
    internal interface ICompositionAnimation4
    {
        void SetExpressionReferenceParameter(string parameterName, IAnimationObject source);
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI")][Guid("A77C0E5A-F059-4E85-BCEF-C068694CEC78")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Composition.ICompositionAnimationBase))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.Foundation.WindowsAppSDKContract), 65536u)]
    public interface ICompositionAnimationBase
    {
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI")][Guid("2ED278CA-4CCA-5F7F-8D47-F930552A7769")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Composition.ICompositionAnimationFactory))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.Foundation.WindowsAppSDKContract), 65536u)]
    internal interface ICompositionAnimationFactory
    {
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI")][Guid("A51CDCAC-B972-5AE7-81D0-9D91C71ECB7A")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Composition.ICompositionAnimationGroup))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.Foundation.WindowsAppSDKContract), 65536u)]
    internal interface ICompositionAnimationGroup
    {
        void Add(CompositionAnimation value);
        void Remove(CompositionAnimation value);
        void RemoveAll();
        int Count { get; }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI")][Guid("85260ED3-365B-5E70-B79A-F9F1D10FA4B5")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Composition.ICompositionApiInformationStatics))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.Foundation.WindowsAppSDKContract), 65536u)]
    internal interface ICompositionApiInformationStatics
    {
        ulong ApiVersion { get; }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI")][Guid("6C866BB3-172A-570C-82AC-BF9848D99A59")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Composition.ICompositionBackdropBrush))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.Foundation.WindowsAppSDKContract), 65536u)]
    internal interface ICompositionBackdropBrush
    {
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI")][Guid("AC400334-4358-5FB0-BFC3-117FE581998F")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Composition.ICompositionBatchCompletedEventArgs))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.Foundation.WindowsAppSDKContract), 65536u)]
    internal interface ICompositionBatchCompletedEventArgs
    {
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI")][Guid("483924E7-99A5-5377-968B-DEC6D40BBCCD")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Composition.ICompositionBrush))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.Foundation.WindowsAppSDKContract), 65536u)]
    internal interface ICompositionBrush
    {
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI")][Guid("ABF2B354-7130-53D9-8324-365D7E02EDE7")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Composition.ICompositionBrushFactory))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.Foundation.WindowsAppSDKContract), 65536u)]
    internal interface ICompositionBrushFactory
    {
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI")][Guid("7689BF12-75C0-52EA-81CB-463ED1C16C45")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Composition.ICompositionCapabilities))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.Foundation.WindowsAppSDKContract), 65536u)]
    internal interface ICompositionCapabilities
    {
        bool AreEffectsSupported();
        bool AreEffectsFast();
        event global::Windows.Foundation.TypedEventHandler<CompositionCapabilities, object> Changed;
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI")][Guid("B66B55CB-B5A5-5BEE-8972-AE78233CB34C")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Composition.ICompositionClip))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.Foundation.WindowsAppSDKContract), 65536u)]
    internal interface ICompositionClip
    {
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI")][Guid("CDF6BF80-AFD7-57DC-8148-6CCBBB5D78BB")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Composition.ICompositionClip2))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.Foundation.WindowsAppSDKContract), 65536u)]
    internal interface ICompositionClip2
    {
        global::System.Numerics.Vector2 AnchorPoint { get; set; }
        global::System.Numerics.Vector2 CenterPoint { get; set; }
        global::System.Numerics.Vector2 Offset { get; set; }
        float RotationAngle { get; set; }
        float RotationAngleInDegrees { get; set; }
        global::System.Numerics.Vector2 Scale { get; set; }
        global::System.Numerics.Matrix3x2 TransformMatrix { get; set; }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI")][Guid("611DEC65-D302-52BC-92AB-A295BD141AE4")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Composition.ICompositionClipFactory))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.Foundation.WindowsAppSDKContract), 65536u)]
    internal interface ICompositionClipFactory
    {
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI")][Guid("3F8FFB69-3E71-55A7-8E79-F27A214C56AE")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Composition.ICompositionColorBrush))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.Foundation.WindowsAppSDKContract), 65536u)]
    internal interface ICompositionColorBrush
    {
        global::Windows.UI.Color Color { get; set; }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI")][Guid("868030D8-C5C0-5DD8-A765-E32CD3497AA9")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Composition.ICompositionColorGradientStop))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.Foundation.WindowsAppSDKContract), 65536u)]
    internal interface ICompositionColorGradientStop
    {
        global::Windows.UI.Color Color { get; set; }
        float Offset { get; set; }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI")][Guid("4794CB29-CE9D-5837-9FC9-847DF3E197DE")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Composition.ICompositionColorGradientStopCollection))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.Foundation.WindowsAppSDKContract), 65536u)]
    internal interface ICompositionColorGradientStopCollection
    {
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI")][Guid("C4550FA8-A7F2-5259-BF74-33B2F5240A28")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Composition.ICompositionCommitBatch))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.Foundation.WindowsAppSDKContract), 65536u)]
    internal interface ICompositionCommitBatch
    {
        bool IsActive { get; }
        bool IsEnded { get; }
        event global::Windows.Foundation.TypedEventHandler<object, CompositionBatchCompletedEventArgs> Completed;
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI")][Guid("064AABD5-2DAB-52D3-824B-C72456540F29")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Composition.ICompositionContainerShape))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.Foundation.WindowsAppSDKContract), 65536u)]
    internal interface ICompositionContainerShape
    {
        CompositionShapeCollection Shapes { get; }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI")][Guid("216CAB97-A2EE-5A29-AD6B-0BC2DF4A1504")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Composition.ICompositionDrawingSurface))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.Foundation.WindowsAppSDKContract), 65536u)]
    internal interface ICompositionDrawingSurface
    {
        global::Microsoft.Graphics.DirectX.DirectXAlphaMode AlphaMode { get; }
        global::Microsoft.Graphics.DirectX.DirectXPixelFormat PixelFormat { get; }
        global::Windows.Foundation.Size Size { get; }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI")][Guid("6BE6F652-BEC8-5ADF-A6AF-5ACFC00A968E")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Composition.ICompositionDrawingSurface2))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.Foundation.WindowsAppSDKContract), 65536u)]
    internal interface ICompositionDrawingSurface2
    {
        void Resize(global::Windows.Graphics.SizeInt32 sizePixels);
        [global::Windows.Foundation.Metadata.Overload(@"Scroll")]
        void Scroll(global::Windows.Graphics.PointInt32 offset);
        [global::Windows.Foundation.Metadata.Overload(@"ScrollRect")]
        void Scroll(global::Windows.Graphics.PointInt32 offset, global::Windows.Graphics.RectInt32 scrollRect);
        [global::Windows.Foundation.Metadata.Overload(@"ScrollWithClip")]
        void ScrollWithClip(global::Windows.Graphics.PointInt32 offset, global::Windows.Graphics.RectInt32 clipRect);
        [global::Windows.Foundation.Metadata.Overload(@"ScrollRectWithClip")]
        void ScrollWithClip(global::Windows.Graphics.PointInt32 offset, global::Windows.Graphics.RectInt32 clipRect, global::Windows.Graphics.RectInt32 scrollRect);
        global::Windows.Graphics.SizeInt32 SizeInt32 { get; }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI")][Guid("4791E19A-C83B-58B0-AC86-DFC58494F5F9")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Composition.ICompositionDrawingSurfaceFactory))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.Foundation.WindowsAppSDKContract), 65536u)]
    internal interface ICompositionDrawingSurfaceFactory
    {
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI")][Guid("8E1ECD0D-57D8-5BC9-9BCD-E43D0DD733C4")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Composition.ICompositionEasingFunction))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.Foundation.WindowsAppSDKContract), 65536u)]
    internal interface ICompositionEasingFunction
    {
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI")][Guid("7D7D32C3-574B-5620-9902-DB426851802F")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Composition.ICompositionEasingFunctionFactory))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.Foundation.WindowsAppSDKContract), 65536u)]
    internal interface ICompositionEasingFunctionFactory
    {
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI")][Guid("9D4B87FF-6DCA-5CE2-B69C-E52705B0FEF4")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Composition.ICompositionEasingFunctionStatics))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.Foundation.WindowsAppSDKContract), 65536u)]
    internal interface ICompositionEasingFunctionStatics
    {
        CubicBezierEasingFunction CreateCubicBezierEasingFunction(Compositor owner, global::System.Numerics.Vector2 controlPoint1, global::System.Numerics.Vector2 controlPoint2);
        LinearEasingFunction CreateLinearEasingFunction(Compositor owner);
        [global::Windows.Foundation.Metadata.Overload(@"CreateStepEasingFunction")]
        StepEasingFunction CreateStepEasingFunction(Compositor owner);
        [global::Windows.Foundation.Metadata.Overload(@"CreateStepEasingFunctionWithStepCount")]
        StepEasingFunction CreateStepEasingFunction(Compositor owner, int stepCount);
        BackEasingFunction CreateBackEasingFunction(Compositor owner, CompositionEasingFunctionMode mode, float amplitude);
        BounceEasingFunction CreateBounceEasingFunction(Compositor owner, CompositionEasingFunctionMode mode, int bounces, float bounciness);
        CircleEasingFunction CreateCircleEasingFunction(Compositor owner, CompositionEasingFunctionMode mode);
        ElasticEasingFunction CreateElasticEasingFunction(Compositor owner, CompositionEasingFunctionMode mode, int oscillations, float springiness);
        ExponentialEasingFunction CreateExponentialEasingFunction(Compositor owner, CompositionEasingFunctionMode mode, float exponent);
        PowerEasingFunction CreatePowerEasingFunction(Compositor owner, CompositionEasingFunctionMode mode, float power);
        SineEasingFunction CreateSineEasingFunction(Compositor owner, CompositionEasingFunctionMode mode);
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI")][Guid("62E0BBAB-1F45-5A44-9DDF-F0C38A02ED85")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Composition.ICompositionEffectBrush))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.Foundation.WindowsAppSDKContract), 65536u)]
    internal interface ICompositionEffectBrush
    {
        CompositionBrush GetSourceParameter(string name);
        void SetSourceParameter(string name, CompositionBrush source);
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI")][Guid("C50F407A-0231-5ED2-B7A7-CA66D3E14B3B")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Composition.ICompositionEffectFactory))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.Foundation.WindowsAppSDKContract), 65536u)]
    internal interface ICompositionEffectFactory
    {
        CompositionEffectBrush CreateBrush();
        global::System.Exception ExtendedError { get; }
        CompositionEffectFactoryLoadStatus LoadStatus { get; }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI")][Guid("BECE3367-5704-59F7-BE8C-D6293AF9C95F")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Composition.ICompositionEffectSourceParameter))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.Foundation.WindowsAppSDKContract), 65536u)]
    internal interface ICompositionEffectSourceParameter
    {
        string Name { get; }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI")][Guid("26185954-4489-5D0E-AE4D-7BC4BBBC6161")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Composition.ICompositionEffectSourceParameterFactory))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.Foundation.WindowsAppSDKContract), 65536u)]
    internal interface ICompositionEffectSourceParameterFactory
    {
        CompositionEffectSourceParameter Create(string name);
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI")][Guid("F2A21042-7A57-58C1-8B47-8BC8B21D3AA0")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Composition.ICompositionEllipseGeometry))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.Foundation.WindowsAppSDKContract), 65536u)]
    internal interface ICompositionEllipseGeometry
    {
        global::System.Numerics.Vector2 Center { get; set; }
        global::System.Numerics.Vector2 Radius { get; set; }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI")][Guid("E3C0A8C5-5297-5D69-8B91-F5330BB1CB27")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Composition.ICompositionGeometricClip))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.Foundation.WindowsAppSDKContract), 65536u)]
    internal interface ICompositionGeometricClip
    {
        CompositionGeometry Geometry { get; set; }
        CompositionViewBox ViewBox { get; set; }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI")][Guid("4E40BDB2-450B-5A81-9E9B-149417980CC4")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Composition.ICompositionGeometry))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.Foundation.WindowsAppSDKContract), 65536u)]
    internal interface ICompositionGeometry
    {
        float TrimEnd { get; set; }
        float TrimOffset { get; set; }
        float TrimStart { get; set; }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI")][Guid("B2FB802B-C691-5554-8312-9C6D358D6B9E")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Composition.ICompositionGeometryFactory))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.Foundation.WindowsAppSDKContract), 65536u)]
    internal interface ICompositionGeometryFactory
    {
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI")][Guid("9165D1FB-C738-5F44-ADDC-309EE071D588")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Composition.ICompositionGradientBrush))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.Foundation.WindowsAppSDKContract), 65536u)]
    internal interface ICompositionGradientBrush
    {
        global::System.Numerics.Vector2 AnchorPoint { get; set; }
        global::System.Numerics.Vector2 CenterPoint { get; set; }
        CompositionColorGradientStopCollection ColorStops { get; }
        CompositionGradientExtendMode ExtendMode { get; set; }
        CompositionColorSpace InterpolationSpace { get; set; }
        global::System.Numerics.Vector2 Offset { get; set; }
        float RotationAngle { get; set; }
        float RotationAngleInDegrees { get; set; }
        global::System.Numerics.Vector2 Scale { get; set; }
        global::System.Numerics.Matrix3x2 TransformMatrix { get; set; }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI")][Guid("03E9EDF3-EE3D-58FC-8C0B-95E4B6060A94")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Composition.ICompositionGradientBrush2))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.Foundation.WindowsAppSDKContract), 65536u)]
    internal interface ICompositionGradientBrush2
    {
        CompositionMappingMode MappingMode { get; set; }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI")][Guid("B043B155-4B40-590D-A0D9-F8C1A7E0C88F")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Composition.ICompositionGradientBrushFactory))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.Foundation.WindowsAppSDKContract), 65536u)]
    internal interface ICompositionGradientBrushFactory
    {
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI")][Guid("3D47E3F5-F76C-5F1F-88C0-54A5F2A090D6")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Composition.ICompositionGraphicsDevice))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.Foundation.WindowsAppSDKContract), 65536u)]
    internal interface ICompositionGraphicsDevice
    {
        CompositionDrawingSurface CreateDrawingSurface(global::Windows.Foundation.Size sizePixels, global::Microsoft.Graphics.DirectX.DirectXPixelFormat pixelFormat, global::Microsoft.Graphics.DirectX.DirectXAlphaMode alphaMode);
        event global::Windows.Foundation.TypedEventHandler<CompositionGraphicsDevice, RenderingDeviceReplacedEventArgs> RenderingDeviceReplaced;
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI")][Guid("FFD56707-1C7A-5DA0-AA1A-49CB935B5DCA")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Composition.ICompositionGraphicsDevice2))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.Foundation.WindowsAppSDKContract), 65536u)]
    internal interface ICompositionGraphicsDevice2
    {
        CompositionDrawingSurface CreateDrawingSurface2(global::Windows.Graphics.SizeInt32 sizePixels, global::Microsoft.Graphics.DirectX.DirectXPixelFormat pixelFormat, global::Microsoft.Graphics.DirectX.DirectXAlphaMode alphaMode);
        CompositionVirtualDrawingSurface CreateVirtualDrawingSurface(global::Windows.Graphics.SizeInt32 sizePixels, global::Microsoft.Graphics.DirectX.DirectXPixelFormat pixelFormat, global::Microsoft.Graphics.DirectX.DirectXAlphaMode alphaMode);
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI")][Guid("FBBEF487-D5A4-5DB2-BF3E-9F488E659D11")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Composition.ICompositionGraphicsDevice3))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.Foundation.WindowsAppSDKContract), 65536u)]
    internal interface ICompositionGraphicsDevice3
    {
        CompositionMipmapSurface CreateMipmapSurface(global::Windows.Graphics.SizeInt32 sizePixels, global::Microsoft.Graphics.DirectX.DirectXPixelFormat pixelFormat, global::Microsoft.Graphics.DirectX.DirectXAlphaMode alphaMode);
        void Trim();
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI")][Guid("2B295C04-7B2E-5B0E-9762-2992313B700C")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Composition.ICompositionGraphicsDevice4))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.Foundation.WindowsAppSDKContract), 65536u)]
    internal interface ICompositionGraphicsDevice4
    {
        global::Windows.Foundation.IAsyncOperation<ICompositionSurface> CaptureAsync(Visual captureVisual, global::Windows.Graphics.SizeInt32 size, global::Microsoft.Graphics.DirectX.DirectXPixelFormat pixelFormat, global::Microsoft.Graphics.DirectX.DirectXAlphaMode alphaMode, float sdrBoost);
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI")][Guid("6D633E77-A6B8-5A2D-8235-E0C380C3B47B")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Composition.ICompositionLight))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.Foundation.WindowsAppSDKContract), 65536u)]
    internal interface ICompositionLight
    {
        VisualUnorderedCollection Targets { get; }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI")][Guid("0BB940A4-05EF-5920-BAE1-918B36D44380")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Composition.ICompositionLight2))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.Foundation.WindowsAppSDKContract), 65536u)]
    internal interface ICompositionLight2
    {
        VisualUnorderedCollection ExclusionsFromTargets { get; }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI")][Guid("95CE4859-DD55-5C38-A3EB-13D053CEBB1E")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Composition.ICompositionLight3))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.Foundation.WindowsAppSDKContract), 65536u)]
    internal interface ICompositionLight3
    {
        bool IsEnabled { get; set; }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI")][Guid("CB29CAED-9245-51A6-BA56-ADDBAEFA54CC")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Composition.ICompositionLightFactory))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.Foundation.WindowsAppSDKContract), 65536u)]
    internal interface ICompositionLightFactory
    {
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI")][Guid("489F9382-C186-5936-8946-C4F927E844AA")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Composition.ICompositionLineGeometry))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.Foundation.WindowsAppSDKContract), 65536u)]
    internal interface ICompositionLineGeometry
    {
        global::System.Numerics.Vector2 End { get; set; }
        global::System.Numerics.Vector2 Start { get; set; }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI")][Guid("F726FB52-270C-58B1-A902-89576772DEDC")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Composition.ICompositionLinearGradientBrush))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.Foundation.WindowsAppSDKContract), 65536u)]
    internal interface ICompositionLinearGradientBrush
    {
        global::System.Numerics.Vector2 EndPoint { get; set; }
        global::System.Numerics.Vector2 StartPoint { get; set; }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI")][Guid("C9502786-65AA-5BE5-A679-C3B5DBFB0DC6")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Composition.ICompositionMaskBrush))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.Foundation.WindowsAppSDKContract), 65536u)]
    internal interface ICompositionMaskBrush
    {
        CompositionBrush Mask { get; set; }
        CompositionBrush Source { get; set; }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI")][Guid("681F1E47-6E43-5B55-BE3A-E5C858A2D5FA")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Composition.ICompositionMipmapSurface))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.Foundation.WindowsAppSDKContract), 65536u)]
    internal interface ICompositionMipmapSurface
    {
        CompositionDrawingSurface GetDrawingSurfaceForLevel(uint level);
        global::Microsoft.Graphics.DirectX.DirectXAlphaMode AlphaMode { get; }
        uint LevelCount { get; }
        global::Microsoft.Graphics.DirectX.DirectXPixelFormat PixelFormat { get; }
        global::Windows.Graphics.SizeInt32 SizeInt32 { get; }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI")][Guid("C77A3D21-C7EE-517A-98F4-AD9A7202BC86")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Composition.ICompositionNineGridBrush))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.Foundation.WindowsAppSDKContract), 65536u)]
    internal interface ICompositionNineGridBrush
    {
        [global::Windows.Foundation.Metadata.Overload(@"SetInsets")]
        void SetInsets(float inset);
        [global::Windows.Foundation.Metadata.Overload(@"SetInsetsWithValues")]
        void SetInsets(float left, float top, float right, float bottom);
        [global::Windows.Foundation.Metadata.Overload(@"SetInsetScales")]
        void SetInsetScales(float scale);
        [global::Windows.Foundation.Metadata.Overload(@"SetInsetScalesWithValues")]
        void SetInsetScales(float left, float top, float right, float bottom);
        float BottomInset { get; set; }
        float BottomInsetScale { get; set; }
        bool IsCenterHollow { get; set; }
        float LeftInset { get; set; }
        float LeftInsetScale { get; set; }
        float RightInset { get; set; }
        float RightInsetScale { get; set; }
        CompositionBrush Source { get; set; }
        float TopInset { get; set; }
        float TopInsetScale { get; set; }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI")][Guid("396698B7-437B-5ACF-AEC9-6342C437FAF1")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Composition.ICompositionNotificationDeferral))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.Foundation.WindowsAppSDKContract), 65543u)]
    [global::Windows.Foundation.Metadata.Experimental]
    internal interface ICompositionNotificationDeferral
    {
        void Complete();
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI")][Guid("0E583D49-FB5E-5481-A426-D3C41E059A5A")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Composition.ICompositionObject))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.Foundation.WindowsAppSDKContract), 65536u)]
    internal interface ICompositionObject
    {
        void StartAnimation(string propertyName, CompositionAnimation animation);
        void StopAnimation(string propertyName);
        Compositor Compositor { get; }
        CompositionPropertySet Properties { get; }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI")][Guid("BCBBFEBF-799C-51CE-9C82-B6E49E7E62E1")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Composition.ICompositionObject2))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.Foundation.WindowsAppSDKContract), 65536u)]
    internal interface ICompositionObject2
    {
        void StartAnimationGroup(ICompositionAnimationBase value);
        void StopAnimationGroup(ICompositionAnimationBase value);
        string Comment { get; set; }
        ImplicitAnimationCollection ImplicitAnimations { get; set; }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI")][Guid("D43C5CF1-47DF-52B8-B409-D5831503905E")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Composition.ICompositionObject3))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.Foundation.WindowsAppSDKContract), 65536u)]
    internal interface ICompositionObject3
    {
        global::Microsoft.UI.Dispatching.DispatcherQueue DispatcherQueue { get; }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI")][Guid("029AD57C-5497-51F3-8B40-E4E235992C6F")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Composition.ICompositionObject4))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.Foundation.WindowsAppSDKContract), 65536u)]
    internal interface ICompositionObject4
    {
        AnimationController TryGetAnimationController(string propertyName);
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI")][Guid("85FD26D1-BB99-5392-9DCE-A05CB81458A5")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Composition.ICompositionObject5))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.Foundation.WindowsAppSDKContract), 65537u)]
    internal interface ICompositionObject5
    {
        [global::Windows.Foundation.Metadata.Overload(@"StartAnimationWithController")]
        void StartAnimation(string propertyName, CompositionAnimation animation, AnimationController animationController);
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI")][Guid("6133C5F9-CD3B-56B2-876F-EB849DB14911")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Composition.ICompositionObjectFactory))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.Foundation.WindowsAppSDKContract), 65536u)]
    internal interface ICompositionObjectFactory
    {
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI")][Guid("A091356C-38AE-514C-9B58-AD5C8C7936AD")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Composition.ICompositionObjectStatics))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.Foundation.WindowsAppSDKContract), 65536u)]
    internal interface ICompositionObjectStatics
    {
        void StartAnimationWithIAnimationObject(IAnimationObject target, string propertyName, CompositionAnimation animation);
        void StartAnimationGroupWithIAnimationObject(IAnimationObject target, ICompositionAnimationBase animation);
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI")][Guid("17C518C0-D7A2-54BE-AC7F-C408562A6A20")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Composition.ICompositionPath))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.Foundation.WindowsAppSDKContract), 65536u)]
    internal interface ICompositionPath
    {
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI")][Guid("87143312-D280-51D2-B75B-5D76EA86C285")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Composition.ICompositionPathFactory))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.Foundation.WindowsAppSDKContract), 65536u)]
    internal interface ICompositionPathFactory
    {
        CompositionPath Create(global::Windows.Graphics.IGeometrySource2D source);
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI")][Guid("0F6E6B82-060B-571E-B849-AB8E0D723962")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Composition.ICompositionPathGeometry))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.Foundation.WindowsAppSDKContract), 65536u)]
    internal interface ICompositionPathGeometry
    {
        CompositionPath Path { get; set; }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI")][Guid("D400AB10-8B92-5ABB-9E23-807974FC6961")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Composition.ICompositionProjectedShadow))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.Foundation.WindowsAppSDKContract), 65536u)]
    internal interface ICompositionProjectedShadow
    {
        float BlurRadiusMultiplier { get; set; }
        CompositionProjectedShadowCasterCollection Casters { get; }
        CompositionLight LightSource { get; set; }
        float MaxBlurRadius { get; set; }
        float MinBlurRadius { get; set; }
        CompositionProjectedShadowReceiverUnorderedCollection Receivers { get; }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI")][Guid("15A9F2D0-6BAE-521B-90C7-C7500F2BF562")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Composition.ICompositionProjectedShadowCaster))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.Foundation.WindowsAppSDKContract), 65536u)]
    internal interface ICompositionProjectedShadowCaster
    {
        CompositionBrush Brush { get; set; }
        Visual CastingVisual { get; set; }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI")][Guid("B120BFDC-533C-57A9-AE16-D43BA52472C4")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Composition.ICompositionProjectedShadowCasterCollection))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.Foundation.WindowsAppSDKContract), 65536u)]
    internal interface ICompositionProjectedShadowCasterCollection
    {
        void InsertAbove(CompositionProjectedShadowCaster newCaster, CompositionProjectedShadowCaster reference);
        void InsertAtBottom(CompositionProjectedShadowCaster newCaster);
        void InsertAtTop(CompositionProjectedShadowCaster newCaster);
        void InsertBelow(CompositionProjectedShadowCaster newCaster, CompositionProjectedShadowCaster reference);
        void Remove(CompositionProjectedShadowCaster caster);
        void RemoveAll();
        int Count { get; }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI")][Guid("43A98014-B88B-5B2A-B1E2-5E776AB77538")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Composition.ICompositionProjectedShadowCasterCollectionStatics))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.Foundation.WindowsAppSDKContract), 65536u)]
    internal interface ICompositionProjectedShadowCasterCollectionStatics
    {
        int MaxRespectedCasters { get; }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI")][Guid("29FE12B0-F1A0-50E1-AF28-2E943BC819D6")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Composition.ICompositionProjectedShadowReceiver))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.Foundation.WindowsAppSDKContract), 65536u)]
    internal interface ICompositionProjectedShadowReceiver
    {
        Visual ReceivingVisual { get; set; }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI")][Guid("2D35F751-A1FA-5FFF-B156-6D8FCD8362ED")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Composition.ICompositionProjectedShadowReceiverUnorderedCollection))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.Foundation.WindowsAppSDKContract), 65536u)]
    internal interface ICompositionProjectedShadowReceiverUnorderedCollection
    {
        void Add(CompositionProjectedShadowReceiver value);
        void Remove(CompositionProjectedShadowReceiver value);
        void RemoveAll();
        int Count { get; }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI")][Guid("97F7A17B-97BE-5545-9F1C-0B9D44577F57")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Composition.ICompositionPropertySet))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.Foundation.WindowsAppSDKContract), 65536u)]
    internal interface ICompositionPropertySet
    {
        void InsertColor(string propertyName, global::Windows.UI.Color value);
        void InsertMatrix3x2(string propertyName, global::System.Numerics.Matrix3x2 value);
        void InsertMatrix4x4(string propertyName, global::System.Numerics.Matrix4x4 value);
        void InsertQuaternion(string propertyName, global::System.Numerics.Quaternion value);
        void InsertScalar(string propertyName, float value);
        void InsertVector2(string propertyName, global::System.Numerics.Vector2 value);
        void InsertVector3(string propertyName, global::System.Numerics.Vector3 value);
        void InsertVector4(string propertyName, global::System.Numerics.Vector4 value);
        CompositionGetValueStatus TryGetColor(string propertyName, out global::Windows.UI.Color value);
        CompositionGetValueStatus TryGetMatrix3x2(string propertyName, out global::System.Numerics.Matrix3x2 value);
        CompositionGetValueStatus TryGetMatrix4x4(string propertyName, out global::System.Numerics.Matrix4x4 value);
        CompositionGetValueStatus TryGetQuaternion(string propertyName, out global::System.Numerics.Quaternion value);
        CompositionGetValueStatus TryGetScalar(string propertyName, out float value);
        CompositionGetValueStatus TryGetVector2(string propertyName, out global::System.Numerics.Vector2 value);
        CompositionGetValueStatus TryGetVector3(string propertyName, out global::System.Numerics.Vector3 value);
        CompositionGetValueStatus TryGetVector4(string propertyName, out global::System.Numerics.Vector4 value);
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI")][Guid("3DB6D621-3497-55E4-95BF-8AE5E7C34C33")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Composition.ICompositionPropertySet2))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.Foundation.WindowsAppSDKContract), 65536u)]
    internal interface ICompositionPropertySet2
    {
        void InsertBoolean(string propertyName, bool value);
        CompositionGetValueStatus TryGetBoolean(string propertyName, out bool value);
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI")][Guid("17662F3F-D351-5435-B3B4-EC26CEFECCC5")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Composition.ICompositionRadialGradientBrush))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.Foundation.WindowsAppSDKContract), 65536u)]
    internal interface ICompositionRadialGradientBrush
    {
        global::System.Numerics.Vector2 EllipseCenter { get; set; }
        global::System.Numerics.Vector2 EllipseRadius { get; set; }
        global::System.Numerics.Vector2 GradientOriginOffset { get; set; }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI")][Guid("BD551FCF-2C7F-5125-AC44-50A4F1D8FA76")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Composition.ICompositionRectangleGeometry))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.Foundation.WindowsAppSDKContract), 65536u)]
    internal interface ICompositionRectangleGeometry
    {
        global::System.Numerics.Vector2 Offset { get; set; }
        global::System.Numerics.Vector2 Size { get; set; }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI")][Guid("02EAFC87-8D1F-5445-A416-D81BAEE8A750")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Composition.ICompositionRoundedRectangleGeometry))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.Foundation.WindowsAppSDKContract), 65536u)]
    internal interface ICompositionRoundedRectangleGeometry
    {
        global::System.Numerics.Vector2 CornerRadius { get; set; }
        global::System.Numerics.Vector2 Offset { get; set; }
        global::System.Numerics.Vector2 Size { get; set; }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI")][Guid("D31CA572-99CE-5969-B042-6C2D330A3859")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Composition.ICompositionScopedBatch))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.Foundation.WindowsAppSDKContract), 65536u)]
    internal interface ICompositionScopedBatch
    {
        void End();
        void Resume();
        void Suspend();
        bool IsActive { get; }
        bool IsEnded { get; }
        event global::Windows.Foundation.TypedEventHandler<object, CompositionBatchCompletedEventArgs> Completed;
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI")][Guid("176B8BB5-4DAE-59B2-B9A0-2499B243267C")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Composition.ICompositionShadow))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.Foundation.WindowsAppSDKContract), 65536u)]
    internal interface ICompositionShadow
    {
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI")][Guid("FF27546D-9750-54AE-AB8C-126CBE9158C3")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Composition.ICompositionShadowFactory))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.Foundation.WindowsAppSDKContract), 65536u)]
    internal interface ICompositionShadowFactory
    {
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI")][Guid("ED75D4D8-437F-5640-9720-FAAE35CE5895")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Composition.ICompositionShape))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.Foundation.WindowsAppSDKContract), 65536u)]
    internal interface ICompositionShape
    {
        global::System.Numerics.Vector2 CenterPoint { get; set; }
        global::System.Numerics.Vector2 Offset { get; set; }
        float RotationAngle { get; set; }
        float RotationAngleInDegrees { get; set; }
        global::System.Numerics.Vector2 Scale { get; set; }
        global::System.Numerics.Matrix3x2 TransformMatrix { get; set; }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI")][Guid("7AA2B987-9CDD-5B6E-8AC1-E989D78B4811")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Composition.ICompositionShapeFactory))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.Foundation.WindowsAppSDKContract), 65536u)]
    internal interface ICompositionShapeFactory
    {
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI")][Guid("982138F2-5781-509A-BA5D-112BCB0B98EF")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Composition.ICompositionSpriteShape))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.Foundation.WindowsAppSDKContract), 65536u)]
    internal interface ICompositionSpriteShape
    {
        CompositionBrush FillBrush { get; set; }
        CompositionGeometry Geometry { get; set; }
        bool IsStrokeNonScaling { get; set; }
        CompositionBrush StrokeBrush { get; set; }
        CompositionStrokeDashArray StrokeDashArray { get; }
        CompositionStrokeCap StrokeDashCap { get; set; }
        float StrokeDashOffset { get; set; }
        CompositionStrokeCap StrokeEndCap { get; set; }
        CompositionStrokeLineJoin StrokeLineJoin { get; set; }
        float StrokeMiterLimit { get; set; }
        CompositionStrokeCap StrokeStartCap { get; set; }
        float StrokeThickness { get; set; }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI")][Guid("397DAFE4-B6C2-5BB9-951D-F5707DE8B7BC")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Composition.ICompositionSupportsSystemBackdrop))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.Foundation.WindowsAppSDKContract), 65537u)]
    public interface ICompositionSupportsSystemBackdrop
    {
        global::Windows.UI.Composition.CompositionBrush SystemBackdrop { get; set; }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI")][Guid("9EC612C3-A5D2-4F97-9DF3-6B49CE736215")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Composition.ICompositionSurface))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.Foundation.WindowsAppSDKContract), 65536u)]
    public interface ICompositionSurface
    {
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI")][Guid("616BB5A5-0A33-512D-B4B1-3D3734F04ACA")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Composition.ICompositionSurfaceBrush))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.Foundation.WindowsAppSDKContract), 65536u)]
    internal interface ICompositionSurfaceBrush
    {
        CompositionBitmapInterpolationMode BitmapInterpolationMode { get; set; }
        float HorizontalAlignmentRatio { get; set; }
        CompositionStretch Stretch { get; set; }
        ICompositionSurface Surface { get; set; }
        float VerticalAlignmentRatio { get; set; }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI")][Guid("9904B7E3-084B-58B5-9AE1-3A2040DD7A22")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Composition.ICompositionSurfaceBrush2))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.Foundation.WindowsAppSDKContract), 65536u)]
    internal interface ICompositionSurfaceBrush2
    {
        global::System.Numerics.Vector2 AnchorPoint { get; set; }
        global::System.Numerics.Vector2 CenterPoint { get; set; }
        global::System.Numerics.Vector2 Offset { get; set; }
        float RotationAngle { get; set; }
        float RotationAngleInDegrees { get; set; }
        global::System.Numerics.Vector2 Scale { get; set; }
        global::System.Numerics.Matrix3x2 TransformMatrix { get; set; }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI")][Guid("8AA74C78-680C-5791-AB07-92DB0F37E352")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Composition.ICompositionSurfaceBrush3))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.Foundation.WindowsAppSDKContract), 65536u)]
    internal interface ICompositionSurfaceBrush3
    {
        bool SnapToPixels { get; set; }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI")][Guid("88AC5DF6-377F-5CF7-A02E-ED5074D30452")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Composition.ICompositionSurfaceFacade))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.Foundation.WindowsAppSDKContract), 65536u)]
    public interface ICompositionSurfaceFacade
    {
        ICompositionSurface GetRealSurface();
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI")][Guid("670E1826-1932-51D0-BBB3-063B4CA94B56")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Composition.ICompositionTransform))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.Foundation.WindowsAppSDKContract), 65536u)]
    internal interface ICompositionTransform
    {
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI")][Guid("78CC7BF2-CDC0-59D2-9C04-8D208DE7EF5E")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Composition.ICompositionTransformFactory))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.Foundation.WindowsAppSDKContract), 65536u)]
    internal interface ICompositionTransformFactory
    {
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI")][Guid("667E4071-ADDD-5DED-B6C0-09E03A14BE7E")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Composition.ICompositionViewBox))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.Foundation.WindowsAppSDKContract), 65536u)]
    internal interface ICompositionViewBox
    {
        float HorizontalAlignmentRatio { get; set; }
        global::System.Numerics.Vector2 Offset { get; set; }
        global::System.Numerics.Vector2 Size { get; set; }
        CompositionStretch Stretch { get; set; }
        float VerticalAlignmentRatio { get; set; }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI")][Guid("D741B99D-E248-5BA7-B728-8BEEA53FE28E")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Composition.ICompositionVirtualDrawingSurface))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.Foundation.WindowsAppSDKContract), 65536u)]
    internal interface ICompositionVirtualDrawingSurface
    {
        void Trim(global::Windows.Graphics.RectInt32[] rects);
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI")][Guid("85895891-3F06-52E2-B5EA-D1FB595F6574")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Composition.ICompositionVirtualDrawingSurfaceFactory))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.Foundation.WindowsAppSDKContract), 65536u)]
    internal interface ICompositionVirtualDrawingSurfaceFactory
    {
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI")][Guid("49E3624B-4D2E-53E7-9E02-F64831681134")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Composition.ICompositionVisualSurface))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.Foundation.WindowsAppSDKContract), 65536u)]
    internal interface ICompositionVisualSurface
    {
        global::System.Numerics.Vector2 SourceOffset { get; set; }
        global::System.Numerics.Vector2 SourceSize { get; set; }
        Visual SourceVisual { get; set; }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI")][Guid("95213C13-C4CB-57DE-B267-D21AB901AE38")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Composition.ICompositor))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.Foundation.WindowsAppSDKContract), 65536u)]
    internal interface ICompositor
    {
        ColorKeyFrameAnimation CreateColorKeyFrameAnimation();
        [global::Windows.Foundation.Metadata.Overload(@"CreateColorBrush")]
        CompositionColorBrush CreateColorBrush();
        [global::Windows.Foundation.Metadata.Overload(@"CreateColorBrushWithColor")]
        CompositionColorBrush CreateColorBrush(global::Windows.UI.Color color);
        ContainerVisual CreateContainerVisual();
        CubicBezierEasingFunction CreateCubicBezierEasingFunction(global::System.Numerics.Vector2 controlPoint1, global::System.Numerics.Vector2 controlPoint2);
        [global::Windows.Foundation.Metadata.Overload(@"CreateEffectFactory")]
        CompositionEffectFactory CreateEffectFactory(global::Windows.Graphics.Effects.IGraphicsEffect graphicsEffect);
        [global::Windows.Foundation.Metadata.Overload(@"CreateEffectFactoryWithProperties")]
        CompositionEffectFactory CreateEffectFactory(global::Windows.Graphics.Effects.IGraphicsEffect graphicsEffect, global::System.Collections.Generic.IEnumerable<string> animatableProperties);
        [global::Windows.Foundation.Metadata.Overload(@"CreateExpressionAnimation")]
        ExpressionAnimation CreateExpressionAnimation();
        [global::Windows.Foundation.Metadata.Overload(@"CreateExpressionAnimationWithExpression")]
        ExpressionAnimation CreateExpressionAnimation(string expression);
        [global::Windows.Foundation.Metadata.Overload(@"CreateInsetClip")]
        InsetClip CreateInsetClip();
        [global::Windows.Foundation.Metadata.Overload(@"CreateInsetClipWithInsets")]
        InsetClip CreateInsetClip(float leftInset, float topInset, float rightInset, float bottomInset);
        LinearEasingFunction CreateLinearEasingFunction();
        CompositionPropertySet CreatePropertySet();
        QuaternionKeyFrameAnimation CreateQuaternionKeyFrameAnimation();
        ScalarKeyFrameAnimation CreateScalarKeyFrameAnimation();
        CompositionScopedBatch CreateScopedBatch(CompositionBatchTypes batchType);
        SpriteVisual CreateSpriteVisual();
        [global::Windows.Foundation.Metadata.Overload(@"CreateSurfaceBrush")]
        CompositionSurfaceBrush CreateSurfaceBrush();
        [global::Windows.Foundation.Metadata.Overload(@"CreateSurfaceBrushWithSurface")]
        CompositionSurfaceBrush CreateSurfaceBrush(ICompositionSurface surface);
        Vector2KeyFrameAnimation CreateVector2KeyFrameAnimation();
        Vector3KeyFrameAnimation CreateVector3KeyFrameAnimation();
        Vector4KeyFrameAnimation CreateVector4KeyFrameAnimation();
        CompositionCommitBatch GetCommitBatch(CompositionBatchTypes batchType);
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI")][Guid("A9FFEDAD-3982-576D-A38A-C888FF605819")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Composition.ICompositor2))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.Foundation.WindowsAppSDKContract), 65536u)]
    internal interface ICompositor2
    {
        AmbientLight CreateAmbientLight();
        CompositionAnimationGroup CreateAnimationGroup();
        CompositionBackdropBrush CreateBackdropBrush();
        DistantLight CreateDistantLight();
        DropShadow CreateDropShadow();
        ImplicitAnimationCollection CreateImplicitAnimationCollection();
        LayerVisual CreateLayerVisual();
        CompositionMaskBrush CreateMaskBrush();
        CompositionNineGridBrush CreateNineGridBrush();
        PointLight CreatePointLight();
        SpotLight CreateSpotLight();
        [global::Windows.Foundation.Metadata.Overload(@"CreateStepEasingFunction")]
        StepEasingFunction CreateStepEasingFunction();
        [global::Windows.Foundation.Metadata.Overload(@"CreateStepEasingFunctionWithStepCount")]
        StepEasingFunction CreateStepEasingFunction(int stepCount);
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI")][Guid("EE444BCA-735C-5CF2-B79D-A6DD46C16160")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Composition.ICompositor4))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.Foundation.WindowsAppSDKContract), 65536u)]
    internal interface ICompositor4
    {
        [global::Windows.Foundation.Metadata.Overload(@"CreateColorGradientStop")]
        CompositionColorGradientStop CreateColorGradientStop();
        [global::Windows.Foundation.Metadata.Overload(@"CreateColorGradientStopWithOffsetAndColor")]
        CompositionColorGradientStop CreateColorGradientStop(float offset, global::Windows.UI.Color color);
        CompositionLinearGradientBrush CreateLinearGradientBrush();
        SpringScalarNaturalMotionAnimation CreateSpringScalarAnimation();
        SpringVector2NaturalMotionAnimation CreateSpringVector2Animation();
        SpringVector3NaturalMotionAnimation CreateSpringVector3Animation();
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI")][Guid("BB52D644-A030-5C19-B883-577DED739AE7")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Composition.ICompositor5))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.Foundation.WindowsAppSDKContract), 65536u)]
    internal interface ICompositor5
    {
        BounceScalarNaturalMotionAnimation CreateBounceScalarAnimation();
        BounceVector2NaturalMotionAnimation CreateBounceVector2Animation();
        BounceVector3NaturalMotionAnimation CreateBounceVector3Animation();
        CompositionContainerShape CreateContainerShape();
        CompositionEllipseGeometry CreateEllipseGeometry();
        CompositionLineGeometry CreateLineGeometry();
        [global::Windows.Foundation.Metadata.Overload(@"CreatePathGeometry")]
        CompositionPathGeometry CreatePathGeometry();
        [global::Windows.Foundation.Metadata.Overload(@"CreatePathGeometryWithPath")]
        CompositionPathGeometry CreatePathGeometry(CompositionPath path);
        PathKeyFrameAnimation CreatePathKeyFrameAnimation();
        CompositionRectangleGeometry CreateRectangleGeometry();
        CompositionRoundedRectangleGeometry CreateRoundedRectangleGeometry();
        ShapeVisual CreateShapeVisual();
        [global::Windows.Foundation.Metadata.Overload(@"CreateSpriteShape")]
        CompositionSpriteShape CreateSpriteShape();
        [global::Windows.Foundation.Metadata.Overload(@"CreateSpriteShapeWithGeometry")]
        CompositionSpriteShape CreateSpriteShape(CompositionGeometry geometry);
        CompositionViewBox CreateViewBox();
        global::Windows.Foundation.IAsyncAction RequestCommitAsync();
        string Comment { get; set; }
        float GlobalPlaybackRate { get; set; }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI")][Guid("5FD20200-C188-5737-B567-5E61741AF19C")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Composition.ICompositor6))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.Foundation.WindowsAppSDKContract), 65536u)]
    internal interface ICompositor6
    {
        [global::Windows.Foundation.Metadata.Overload(@"CreateGeometricClip")]
        CompositionGeometricClip CreateGeometricClip();
        [global::Windows.Foundation.Metadata.Overload(@"CreateGeometricClipWithGeometry")]
        CompositionGeometricClip CreateGeometricClip(CompositionGeometry geometry);
        [global::Windows.Foundation.Metadata.Overload(@"CreateRedirectVisual")]
        RedirectVisual CreateRedirectVisual();
        [global::Windows.Foundation.Metadata.Overload(@"CreateRedirectVisualWithSourceVisual")]
        RedirectVisual CreateRedirectVisual(Visual source);
        BooleanKeyFrameAnimation CreateBooleanKeyFrameAnimation();
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI")][Guid("5358B81B-4799-5E7C-906C-E3DF3B2E95EB")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Composition.ICompositor7))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.Foundation.WindowsAppSDKContract), 65536u)]
    internal interface ICompositor7
    {
        AnimationPropertyInfo CreateAnimationPropertyInfo();
        [global::Windows.Foundation.Metadata.Overload(@"CreateRectangleClip")]
        RectangleClip CreateRectangleClip();
        [global::Windows.Foundation.Metadata.Overload(@"CreateRectangleClipWithSides")]
        RectangleClip CreateRectangleClip(float left, float top, float right, float bottom);
        [global::Windows.Foundation.Metadata.Overload(@"CreateRectangleClipWithSidesAndRadius")]
        RectangleClip CreateRectangleClip(float left, float top, float right, float bottom, global::System.Numerics.Vector2 topLeftRadius, global::System.Numerics.Vector2 topRightRadius, global::System.Numerics.Vector2 bottomRightRadius, global::System.Numerics.Vector2 bottomLeftRadius);
        global::Microsoft.UI.Dispatching.DispatcherQueue DispatcherQueue { get; }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI")][Guid("02F5C9EE-A3C0-577A-9D23-44024C8EACDA")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Composition.ICompositor8))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.Foundation.WindowsAppSDKContract), 65537u)]
    internal interface ICompositor8
    {
        AnimationController CreateAnimationController();
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI")][Guid("6BAA947A-F103-55C6-91AD-3D275BEA65C4")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Composition.ICompositorStatics))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.Foundation.WindowsAppSDKContract), 65536u)]
    internal interface ICompositorStatics
    {
        float MaxGlobalPlaybackRate { get; }
        float MinGlobalPlaybackRate { get; }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI")][Guid("60AB2BF2-B95C-5944-8B36-C9773B9F5256")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Composition.ICompositorWithProjectedShadow))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.Foundation.WindowsAppSDKContract), 65536u)]
    internal interface ICompositorWithProjectedShadow
    {
        CompositionProjectedShadowCaster CreateProjectedShadowCaster();
        CompositionProjectedShadow CreateProjectedShadow();
        CompositionProjectedShadowReceiver CreateProjectedShadowReceiver();
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI")][Guid("FA4F8F7D-5CC7-5C9C-883B-FE878A2F3E30")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Composition.ICompositorWithRadialGradient))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.Foundation.WindowsAppSDKContract), 65536u)]
    internal interface ICompositorWithRadialGradient
    {
        CompositionRadialGradientBrush CreateRadialGradientBrush();
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI")][Guid("5FCFE24A-690A-5378-ACEE-561E84BFB982")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Composition.ICompositorWithVisualSurface))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.Foundation.WindowsAppSDKContract), 65536u)]
    internal interface ICompositorWithVisualSurface
    {
        CompositionVisualSurface CreateVisualSurface();
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI")][Guid("C70DBCE1-2C2F-5D8E-91A4-AAE1121E6186")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Composition.IContainerVisual))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.Foundation.WindowsAppSDKContract), 65536u)]
    internal interface IContainerVisual
    {
        VisualCollection Children { get; }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI")][Guid("3FA45EEB-C6DD-5AFD-971D-EAAF6245E716")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Composition.IContainerVisualFactory))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.Foundation.WindowsAppSDKContract), 65536u)]
    internal interface IContainerVisualFactory
    {
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI")][Guid("35E7FCDE-F9CE-590A-8B88-64A82A6B4B48")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Composition.ICubicBezierEasingFunction))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.Foundation.WindowsAppSDKContract), 65536u)]
    internal interface ICubicBezierEasingFunction
    {
        global::System.Numerics.Vector2 ControlPoint1 { get; }
        global::System.Numerics.Vector2 ControlPoint2 { get; }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI")][Guid("125EF556-56EE-5C60-B944-571928CA03F5")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Composition.IDistantLight))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.Foundation.WindowsAppSDKContract), 65536u)]
    internal interface IDistantLight
    {
        global::Windows.UI.Color Color { get; set; }
        Visual CoordinateSpace { get; set; }
        global::System.Numerics.Vector3 Direction { get; set; }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI")][Guid("9F97BFEC-B6B9-51EE-8480-B546468C748F")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Composition.IDistantLight2))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.Foundation.WindowsAppSDKContract), 65536u)]
    internal interface IDistantLight2
    {
        float Intensity { get; set; }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI")][Guid("977095D2-265F-5F58-9789-CB7F85E98C9E")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Composition.IDropShadow))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.Foundation.WindowsAppSDKContract), 65536u)]
    internal interface IDropShadow
    {
        float BlurRadius { get; set; }
        global::Windows.UI.Color Color { get; set; }
        CompositionBrush Mask { get; set; }
        global::System.Numerics.Vector3 Offset { get; set; }
        float Opacity { get; set; }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI")][Guid("CBC7C266-2D33-5711-B3B4-5699410BEF56")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Composition.IDropShadow2))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.Foundation.WindowsAppSDKContract), 65536u)]
    internal interface IDropShadow2
    {
        CompositionDropShadowSourcePolicy SourcePolicy { get; set; }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI")][Guid("B952E12F-4A50-51A9-A11A-23855F4AAE07")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Composition.IElasticEasingFunction))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.Foundation.WindowsAppSDKContract), 65536u)]
    internal interface IElasticEasingFunction
    {
        CompositionEasingFunctionMode Mode { get; }
        int Oscillations { get; }
        float Springiness { get; }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI")][Guid("DA7447BF-78A8-5023-B1D5-4EB090D3CE25")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Composition.IExpCompositionProjectedShadow))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.Foundation.WindowsAppSDKContract), 65543u)]
    [global::Windows.Foundation.Metadata.Experimental]
    internal interface IExpCompositionProjectedShadow
    {
        float MaxOpacity { get; set; }
        float MinOpacity { get; set; }
        float OpacityFalloff { get; set; }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI")][Guid("201F3A32-B715-5A3B-AF0C-570F1DAE4F1B")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Composition.IExpCompositionProjectedShadowCaster))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.Foundation.WindowsAppSDKContract), 65543u)]
    [global::Windows.Foundation.Metadata.Experimental]
    internal interface IExpCompositionProjectedShadowCaster
    {
        Visual AncestorClip { get; set; }
        CompositionBrush Mask { get; set; }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI")][Guid("85A2028B-896B-56A2-896B-5985BA7FB0CF")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Composition.IExpCompositionProjectedShadowReceiver))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.Foundation.WindowsAppSDKContract), 65543u)]
    [global::Windows.Foundation.Metadata.Experimental]
    internal interface IExpCompositionProjectedShadowReceiver
    {
        CompositionProjectedShadowDrawOrder DrawOrder { get; set; }
        CompositionBrush Mask { get; set; }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI")][Guid("DF29ECC1-3FFC-565F-9D6C-533586908106")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Composition.IExponentialEasingFunction))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.Foundation.WindowsAppSDKContract), 65536u)]
    internal interface IExponentialEasingFunction
    {
        float Exponent { get; }
        CompositionEasingFunctionMode Mode { get; }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI")][Guid("7FFF5826-1992-56C0-9060-5ADE561A4F2D")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Composition.IExpressionAnimation))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.Foundation.WindowsAppSDKContract), 65536u)]
    internal interface IExpressionAnimation
    {
        string Expression { get; set; }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI")][Guid("C5C0689E-F5AE-5BED-829B-C522CDA39717")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Composition.IImplicitAnimationCollection))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.Foundation.WindowsAppSDKContract), 65536u)]
    internal interface IImplicitAnimationCollection
    {
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI")][Guid("F9D99475-7B59-5B28-A1D2-B832DA6988C9")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Composition.IInsetClip))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.Foundation.WindowsAppSDKContract), 65536u)]
    internal interface IInsetClip
    {
        float BottomInset { get; set; }
        float LeftInset { get; set; }
        float RightInset { get; set; }
        float TopInset { get; set; }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI")][Guid("5A8F57F0-F059-5B47-B308-C4C80FC71248")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Composition.IKeyFrameAnimation))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.Foundation.WindowsAppSDKContract), 65536u)]
    internal interface IKeyFrameAnimation
    {
        [global::Windows.Foundation.Metadata.Overload(@"InsertExpressionKeyFrame")]
        void InsertExpressionKeyFrame(float normalizedProgressKey, string value);
        [global::Windows.Foundation.Metadata.Overload(@"InsertExpressionKeyFrameWithEasingFunction")]
        void InsertExpressionKeyFrame(float normalizedProgressKey, string value, CompositionEasingFunction easingFunction);
        global::System.TimeSpan DelayTime { get; set; }
        global::System.TimeSpan Duration { get; set; }
        AnimationIterationBehavior IterationBehavior { get; set; }
        int IterationCount { get; set; }
        int KeyFrameCount { get; }
        AnimationStopBehavior StopBehavior { get; set; }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI")][Guid("414692E5-8A7E-58EA-83E1-25CE475D9300")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Composition.IKeyFrameAnimation2))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.Foundation.WindowsAppSDKContract), 65536u)]
    internal interface IKeyFrameAnimation2
    {
        AnimationDirection Direction { get; set; }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI")][Guid("4F97E180-9BCB-5FC4-ABBE-43AA3BE327E7")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Composition.IKeyFrameAnimation3))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.Foundation.WindowsAppSDKContract), 65536u)]
    internal interface IKeyFrameAnimation3
    {
        AnimationDelayBehavior DelayBehavior { get; set; }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI")][Guid("7CCCFC87-3BAF-5100-B5F8-2F779F954F19")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Composition.IKeyFrameAnimationFactory))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.Foundation.WindowsAppSDKContract), 65536u)]
    internal interface IKeyFrameAnimationFactory
    {
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI")][Guid("64D05CA1-3BF6-5D4F-98A1-7500F2F23EBE")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Composition.ILayerVisual))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.Foundation.WindowsAppSDKContract), 65536u)]
    internal interface ILayerVisual
    {
        CompositionEffectBrush Effect { get; set; }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI")][Guid("9AB2E401-AF45-54DA-9991-DD31273155D2")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Composition.ILayerVisual2))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.Foundation.WindowsAppSDKContract), 65536u)]
    internal interface ILayerVisual2
    {
        CompositionShadow Shadow { get; set; }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI")][Guid("79BFEEF6-70C7-50A6-BB3A-0E9636148695")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Composition.ILinearEasingFunction))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.Foundation.WindowsAppSDKContract), 65536u)]
    internal interface ILinearEasingFunction
    {
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI")][Guid("2FF54EBB-A035-50BE-A73C-20014975EE31")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Composition.INaturalMotionAnimation))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.Foundation.WindowsAppSDKContract), 65536u)]
    internal interface INaturalMotionAnimation
    {
        AnimationDelayBehavior DelayBehavior { get; set; }
        global::System.TimeSpan DelayTime { get; set; }
        AnimationStopBehavior StopBehavior { get; set; }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI")][Guid("0411A259-2622-59E2-A59E-1E23D8F83A9F")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Composition.INaturalMotionAnimationFactory))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.Foundation.WindowsAppSDKContract), 65536u)]
    internal interface INaturalMotionAnimationFactory
    {
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI")][Guid("2B692808-43DA-5118-B66D-904A3EC74FD9")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Composition.IPathKeyFrameAnimation))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.Foundation.WindowsAppSDKContract), 65536u)]
    internal interface IPathKeyFrameAnimation
    {
        [global::Windows.Foundation.Metadata.Overload(@"InsertKeyFrame")]
        void InsertKeyFrame(float normalizedProgressKey, CompositionPath path);
        [global::Windows.Foundation.Metadata.Overload(@"InsertKeyFrameWithEasingFunction")]
        void InsertKeyFrame(float normalizedProgressKey, CompositionPath path, CompositionEasingFunction easingFunction);
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI")][Guid("ED5CC102-F0AC-59A8-8678-CE54146E7BE8")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Composition.IPointLight))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.Foundation.WindowsAppSDKContract), 65536u)]
    internal interface IPointLight
    {
        global::Windows.UI.Color Color { get; set; }
        float ConstantAttenuation { get; set; }
        Visual CoordinateSpace { get; set; }
        float LinearAttenuation { get; set; }
        global::System.Numerics.Vector3 Offset { get; set; }
        float QuadraticAttenuation { get; set; }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI")][Guid("DE466104-59D9-57D2-92B5-554D6D82EDF2")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Composition.IPointLight2))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.Foundation.WindowsAppSDKContract), 65536u)]
    internal interface IPointLight2
    {
        float Intensity { get; set; }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI")][Guid("BE30E87A-8CBB-5A56-8D24-2CD865F383B3")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Composition.IPointLight3))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.Foundation.WindowsAppSDKContract), 65536u)]
    internal interface IPointLight3
    {
        float MaxAttenuationCutoff { get; set; }
        float MinAttenuationCutoff { get; set; }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI")][Guid("0268A272-EA06-5FB0-8DEF-49726BCEE39B")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Composition.IPowerEasingFunction))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.Foundation.WindowsAppSDKContract), 65536u)]
    internal interface IPowerEasingFunction
    {
        CompositionEasingFunctionMode Mode { get; }
        float Power { get; }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI")][Guid("E72D1026-DA3B-5D56-858B-3A9AA3C57D70")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Composition.IQuaternionKeyFrameAnimation))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.Foundation.WindowsAppSDKContract), 65536u)]
    internal interface IQuaternionKeyFrameAnimation
    {
        [global::Windows.Foundation.Metadata.Overload(@"InsertKeyFrame")]
        void InsertKeyFrame(float normalizedProgressKey, global::System.Numerics.Quaternion value);
        [global::Windows.Foundation.Metadata.Overload(@"InsertKeyFrameWithEasingFunction")]
        void InsertKeyFrame(float normalizedProgressKey, global::System.Numerics.Quaternion value, CompositionEasingFunction easingFunction);
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI")][Guid("BC261502-2259-5C01-8616-556110A09657")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Composition.IRectangleClip))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.Foundation.WindowsAppSDKContract), 65536u)]
    internal interface IRectangleClip
    {
        float Bottom { get; set; }
        global::System.Numerics.Vector2 BottomLeftRadius { get; set; }
        global::System.Numerics.Vector2 BottomRightRadius { get; set; }
        float Left { get; set; }
        float Right { get; set; }
        float Top { get; set; }
        global::System.Numerics.Vector2 TopLeftRadius { get; set; }
        global::System.Numerics.Vector2 TopRightRadius { get; set; }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI")][Guid("6C10081A-CDE1-50D9-AC05-78D6845B656F")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Composition.IRedirectVisual))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.Foundation.WindowsAppSDKContract), 65536u)]
    internal interface IRedirectVisual
    {
        Visual Source { get; set; }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI")][Guid("FE5B97C7-F656-56D6-A0CD-3E1227E4DD44")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Composition.IRenderingDeviceReplacedEventArgs))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.Foundation.WindowsAppSDKContract), 65536u)]
    internal interface IRenderingDeviceReplacedEventArgs
    {
        CompositionGraphicsDevice GraphicsDevice { get; }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI")][Guid("5A5F8ABE-D129-5B25-8AFF-8180FD9BFB22")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Composition.IScalarKeyFrameAnimation))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.Foundation.WindowsAppSDKContract), 65536u)]
    internal interface IScalarKeyFrameAnimation
    {
        [global::Windows.Foundation.Metadata.Overload(@"InsertKeyFrame")]
        void InsertKeyFrame(float normalizedProgressKey, float value);
        [global::Windows.Foundation.Metadata.Overload(@"InsertKeyFrameWithEasingFunction")]
        void InsertKeyFrame(float normalizedProgressKey, float value, CompositionEasingFunction easingFunction);
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI")][Guid("903224B0-2DBE-56EB-B9EA-33D2E3113181")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Composition.IScalarNaturalMotionAnimation))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.Foundation.WindowsAppSDKContract), 65536u)]
    internal interface IScalarNaturalMotionAnimation
    {
        global::System.Nullable<float> FinalValue { get; set; }
        global::System.Nullable<float> InitialValue { get; set; }
        float InitialVelocity { get; set; }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI")][Guid("14F8A9AB-976C-5E6F-890B-9A74D07FA39F")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Composition.IScalarNaturalMotionAnimationFactory))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.Foundation.WindowsAppSDKContract), 65536u)]
    internal interface IScalarNaturalMotionAnimationFactory
    {
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI")][Guid("A911C80B-A5A5-5ACA-B8FF-C43F08F06143")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Composition.IShapeVisual))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.Foundation.WindowsAppSDKContract), 65536u)]
    internal interface IShapeVisual
    {
        CompositionShapeCollection Shapes { get; }
        CompositionViewBox ViewBox { get; set; }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI")][Guid("7FCCB5F8-CB0E-5A01-A26B-98880FF49DC6")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Composition.ISineEasingFunction))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.Foundation.WindowsAppSDKContract), 65536u)]
    internal interface ISineEasingFunction
    {
        CompositionEasingFunctionMode Mode { get; }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI")][Guid("5935496A-0586-5F77-BD03-D5A6BB9E8FA0")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Composition.ISpotLight))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.Foundation.WindowsAppSDKContract), 65536u)]
    internal interface ISpotLight
    {
        float ConstantAttenuation { get; set; }
        Visual CoordinateSpace { get; set; }
        global::System.Numerics.Vector3 Direction { get; set; }
        float InnerConeAngle { get; set; }
        float InnerConeAngleInDegrees { get; set; }
        global::Windows.UI.Color InnerConeColor { get; set; }
        float LinearAttenuation { get; set; }
        global::System.Numerics.Vector3 Offset { get; set; }
        float OuterConeAngle { get; set; }
        float OuterConeAngleInDegrees { get; set; }
        global::Windows.UI.Color OuterConeColor { get; set; }
        float QuadraticAttenuation { get; set; }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI")][Guid("49DD3B50-EC5C-5B6C-BAA1-8504B13E3A67")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Composition.ISpotLight2))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.Foundation.WindowsAppSDKContract), 65536u)]
    internal interface ISpotLight2
    {
        float InnerConeIntensity { get; set; }
        float OuterConeIntensity { get; set; }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI")][Guid("C6919941-0D9F-58C8-91E2-ADEF6E5E70A4")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Composition.ISpotLight3))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.Foundation.WindowsAppSDKContract), 65536u)]
    internal interface ISpotLight3
    {
        float MaxAttenuationCutoff { get; set; }
        float MinAttenuationCutoff { get; set; }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI")][Guid("6F720AFD-D3D0-5E78-9C2E-83092F6EA45E")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Composition.ISpringScalarNaturalMotionAnimation))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.Foundation.WindowsAppSDKContract), 65536u)]
    internal interface ISpringScalarNaturalMotionAnimation
    {
        float DampingRatio { get; set; }
        global::System.TimeSpan Period { get; set; }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI")][Guid("5B4580A4-2594-521E-B288-EAF2C2A16A66")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Composition.ISpringVector2NaturalMotionAnimation))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.Foundation.WindowsAppSDKContract), 65536u)]
    internal interface ISpringVector2NaturalMotionAnimation
    {
        float DampingRatio { get; set; }
        global::System.TimeSpan Period { get; set; }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI")][Guid("02D9E1C6-7434-5464-A1F6-D644CE1FC9A6")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Composition.ISpringVector3NaturalMotionAnimation))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.Foundation.WindowsAppSDKContract), 65536u)]
    internal interface ISpringVector3NaturalMotionAnimation
    {
        float DampingRatio { get; set; }
        global::System.TimeSpan Period { get; set; }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI")][Guid("7E964632-45E4-5761-806D-5B4022C14F26")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Composition.ISpriteVisual))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.Foundation.WindowsAppSDKContract), 65536u)]
    internal interface ISpriteVisual
    {
        CompositionBrush Brush { get; set; }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI")][Guid("3CB43662-9ECF-5128-850D-9EB8437774F0")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Composition.ISpriteVisual2))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.Foundation.WindowsAppSDKContract), 65536u)]
    internal interface ISpriteVisual2
    {
        CompositionShadow Shadow { get; set; }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI")][Guid("C7B1D4CF-C562-56B3-B4E6-B21326165F71")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Composition.IStepEasingFunction))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.Foundation.WindowsAppSDKContract), 65536u)]
    internal interface IStepEasingFunction
    {
        int FinalStep { get; set; }
        int InitialStep { get; set; }
        bool IsFinalStepSingleFrame { get; set; }
        bool IsInitialStepSingleFrame { get; set; }
        int StepCount { get; set; }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI")][Guid("E9C5E3FD-43B7-526E-9DA0-4C3EA96DB27D")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Composition.IVector2KeyFrameAnimation))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.Foundation.WindowsAppSDKContract), 65536u)]
    internal interface IVector2KeyFrameAnimation
    {
        [global::Windows.Foundation.Metadata.Overload(@"InsertKeyFrame")]
        void InsertKeyFrame(float normalizedProgressKey, global::System.Numerics.Vector2 value);
        [global::Windows.Foundation.Metadata.Overload(@"InsertKeyFrameWithEasingFunction")]
        void InsertKeyFrame(float normalizedProgressKey, global::System.Numerics.Vector2 value, CompositionEasingFunction easingFunction);
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI")][Guid("E00E60CE-D1BE-5C24-885D-C1D0A749D109")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Composition.IVector2NaturalMotionAnimation))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.Foundation.WindowsAppSDKContract), 65536u)]
    internal interface IVector2NaturalMotionAnimation
    {
        global::System.Nullable<global::System.Numerics.Vector2> FinalValue { get; set; }
        global::System.Nullable<global::System.Numerics.Vector2> InitialValue { get; set; }
        global::System.Numerics.Vector2 InitialVelocity { get; set; }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI")][Guid("E39AEAD8-80F9-5F64-8644-E9E5646B796F")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Composition.IVector2NaturalMotionAnimationFactory))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.Foundation.WindowsAppSDKContract), 65536u)]
    internal interface IVector2NaturalMotionAnimationFactory
    {
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI")][Guid("D7DA980E-2DDE-5DD1-A40C-D6868DD2449E")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Composition.IVector3KeyFrameAnimation))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.Foundation.WindowsAppSDKContract), 65536u)]
    internal interface IVector3KeyFrameAnimation
    {
        [global::Windows.Foundation.Metadata.Overload(@"InsertKeyFrame")]
        void InsertKeyFrame(float normalizedProgressKey, global::System.Numerics.Vector3 value);
        [global::Windows.Foundation.Metadata.Overload(@"InsertKeyFrameWithEasingFunction")]
        void InsertKeyFrame(float normalizedProgressKey, global::System.Numerics.Vector3 value, CompositionEasingFunction easingFunction);
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI")][Guid("13FEEEF2-D2C0-5B72-AD67-983A19B9B783")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Composition.IVector3NaturalMotionAnimation))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.Foundation.WindowsAppSDKContract), 65536u)]
    internal interface IVector3NaturalMotionAnimation
    {
        global::System.Nullable<global::System.Numerics.Vector3> FinalValue { get; set; }
        global::System.Nullable<global::System.Numerics.Vector3> InitialValue { get; set; }
        global::System.Numerics.Vector3 InitialVelocity { get; set; }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI")][Guid("428241CB-BE9C-5C2A-939C-EC78AA60BB8A")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Composition.IVector3NaturalMotionAnimationFactory))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.Foundation.WindowsAppSDKContract), 65536u)]
    internal interface IVector3NaturalMotionAnimationFactory
    {
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI")][Guid("16CEA3B9-C5E3-5F6F-B5C7-DA29A31CCFC7")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Composition.IVector4KeyFrameAnimation))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.Foundation.WindowsAppSDKContract), 65536u)]
    internal interface IVector4KeyFrameAnimation
    {
        [global::Windows.Foundation.Metadata.Overload(@"InsertKeyFrame")]
        void InsertKeyFrame(float normalizedProgressKey, global::System.Numerics.Vector4 value);
        [global::Windows.Foundation.Metadata.Overload(@"InsertKeyFrameWithEasingFunction")]
        void InsertKeyFrame(float normalizedProgressKey, global::System.Numerics.Vector4 value, CompositionEasingFunction easingFunction);
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI")][Guid("C0EEAB6C-C897-5AC6-A1C9-63ABD5055B9B")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Composition.IVisual))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.Foundation.WindowsAppSDKContract), 65536u)]
    internal interface IVisual
    {
        global::System.Numerics.Vector2 AnchorPoint { get; set; }
        CompositionBackfaceVisibility BackfaceVisibility { get; set; }
        CompositionBorderMode BorderMode { get; set; }
        global::System.Numerics.Vector3 CenterPoint { get; set; }
        CompositionClip Clip { get; set; }
        CompositionCompositeMode CompositeMode { get; set; }
        bool IsVisible { get; set; }
        global::System.Numerics.Vector3 Offset { get; set; }
        float Opacity { get; set; }
        global::System.Numerics.Quaternion Orientation { get; set; }
        ContainerVisual Parent { get; }
        float RotationAngle { get; set; }
        float RotationAngleInDegrees { get; set; }
        global::System.Numerics.Vector3 RotationAxis { get; set; }
        global::System.Numerics.Vector3 Scale { get; set; }
        global::System.Numerics.Vector2 Size { get; set; }
        global::System.Numerics.Matrix4x4 TransformMatrix { get; set; }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI")][Guid("492A7995-0C5C-5993-A283-52E4DA3050EE")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Composition.IVisual2))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.Foundation.WindowsAppSDKContract), 65536u)]
    internal interface IVisual2
    {
        Visual ParentForTransform { get; set; }
        global::System.Numerics.Vector3 RelativeOffsetAdjustment { get; set; }
        global::System.Numerics.Vector2 RelativeSizeAdjustment { get; set; }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI")][Guid("972B70B0-950D-5656-A380-BD4A70775868")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Composition.IVisual3))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.Foundation.WindowsAppSDKContract), 65536u)]
    internal interface IVisual3
    {
        bool IsHitTestVisible { get; set; }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI")][Guid("27CB223F-C431-57AC-B61E-D6B7515D579F")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Composition.IVisual4))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.Foundation.WindowsAppSDKContract), 65536u)]
    internal interface IVisual4
    {
        bool IsPixelSnappingEnabled { get; set; }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI")][Guid("D002896D-67D8-5F69-AB70-581FA3BF370F")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Composition.IVisualCollection))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.Foundation.WindowsAppSDKContract), 65536u)]
    internal interface IVisualCollection
    {
        void InsertAbove(Visual newChild, Visual sibling);
        void InsertAtBottom(Visual newChild);
        void InsertAtTop(Visual newChild);
        void InsertBelow(Visual newChild, Visual sibling);
        void Remove(Visual child);
        void RemoveAll();
        int Count { get; }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI")][Guid("2180F1F5-B5D8-4BF6-920A-12006E63EFEF")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Composition.IVisualElement))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.Foundation.WindowsAppSDKContract), 65536u)]
    public interface IVisualElement
    {
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI")][Guid("BC950C8D-1DB0-53AA-9DEE-34271CD18CE6")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Composition.IVisualElement2))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.Foundation.WindowsAppSDKContract), 65536u)]
    public interface IVisualElement2
    {
        Visual GetVisualInternal();
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI")][Guid("77BB4668-83FA-5BB5-B78B-5E6FDC3D4038")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Composition.IVisualFactory))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.Foundation.WindowsAppSDKContract), 65536u)]
    internal interface IVisualFactory
    {
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI")][Guid("4A97216E-793E-54E3-96E8-F9DB790119CD")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Composition.IVisualUnorderedCollection))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.Foundation.WindowsAppSDKContract), 65536u)]
    internal interface IVisualUnorderedCollection
    {
        void Add(Visual newVisual);
        void Remove(Visual visual);
        void RemoveAll();
        int Count { get; }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI")]
    [global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Composition.ImplicitAnimationCollection))]
    [global::ABI.Microsoft.UI.Composition.ImplicitAnimationCollectionRcwFactory]
    [global::WinRT.ProjectedRuntimeClass(typeof(IImplicitAnimationCollection))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.Foundation.WindowsAppSDKContract), 65536u)]
    public sealed class ImplicitAnimationCollection : CompositionObject, global::System.Collections.Generic.IEnumerable<global::System.Collections.Generic.KeyValuePair<string, ICompositionAnimationBase>>, global::System.Collections.Generic.IDictionary<string, ICompositionAnimationBase>, global::System.Runtime.InteropServices.ICustomQueryInterface, IWinRTObject, IEquatable<ImplicitAnimationCollection>
    {
        private IntPtr ThisPtr => _inner == null ? (((IWinRTObject)this).NativeObject).ThisPtr : _inner.ThisPtr;

        private readonly IObjectReference _inner = null;



        private IObjectReference _objRef_global__Microsoft_UI_Composition_IImplicitAnimationCollection => _inner;
        private volatile IObjectReference ___objRef_global__System_Collections_Generic_IEnumerable_global__System_Collections_Generic_KeyValuePair_string__ICompositionAnimationBase__;
        private IObjectReference Make___objRef_global__System_Collections_Generic_IEnumerable_global__System_Collections_Generic_KeyValuePair_string__ICompositionAnimationBase__()
        {
            _ = global::WinRT.GenericTypeInstantiations.Windows_Foundation_Collections_IIterable_1_Windows_Foundation_Collections_IKeyValuePair_2_String__Microsoft_UI_Composition_ICompositionAnimationBase_.EnsureInitialized();
            global::System.Threading.Interlocked.CompareExchange(ref ___objRef_global__System_Collections_Generic_IEnumerable_global__System_Collections_Generic_KeyValuePair_string__ICompositionAnimationBase__, ((IWinRTObject)this).NativeObject.As<IUnknownVftbl>(global::ABI.System.Collections.Generic.IEnumerableMethods<global::System.Collections.Generic.KeyValuePair<string, ICompositionAnimationBase>>.IID), null);
            return ___objRef_global__System_Collections_Generic_IEnumerable_global__System_Collections_Generic_KeyValuePair_string__ICompositionAnimationBase__;
        }
        private IObjectReference _objRef_global__System_Collections_Generic_IEnumerable_global__System_Collections_Generic_KeyValuePair_string__ICompositionAnimationBase__ => ___objRef_global__System_Collections_Generic_IEnumerable_global__System_Collections_Generic_KeyValuePair_string__ICompositionAnimationBase__ ?? Make___objRef_global__System_Collections_Generic_IEnumerable_global__System_Collections_Generic_KeyValuePair_string__ICompositionAnimationBase__();

        private volatile IObjectReference ___objRef_global__System_Collections_Generic_IDictionary_string__ICompositionAnimationBase_;
        private IObjectReference Make___objRef_global__System_Collections_Generic_IDictionary_string__ICompositionAnimationBase_()
        {
            _ = global::WinRT.GenericTypeInstantiations.Windows_Foundation_Collections_IMap_2_String__Microsoft_UI_Composition_ICompositionAnimationBase.EnsureInitialized();
            global::System.Threading.Interlocked.CompareExchange(ref ___objRef_global__System_Collections_Generic_IDictionary_string__ICompositionAnimationBase_, ((IWinRTObject)this).NativeObject.As<IUnknownVftbl>(global::ABI.System.Collections.Generic.IDictionaryMethods<string, ICompositionAnimationBase>.IID), null);
            return ___objRef_global__System_Collections_Generic_IDictionary_string__ICompositionAnimationBase_;
        }
        private IObjectReference _objRef_global__System_Collections_Generic_IDictionary_string__ICompositionAnimationBase_ => ___objRef_global__System_Collections_Generic_IDictionary_string__ICompositionAnimationBase_ ?? Make___objRef_global__System_Collections_Generic_IDictionary_string__ICompositionAnimationBase_();



        public static new ImplicitAnimationCollection FromAbi(IntPtr thisPtr)
        {
            if (thisPtr == IntPtr.Zero) return null;
            return MarshalInspectable<ImplicitAnimationCollection>.FromAbi(thisPtr);
        }

        internal ImplicitAnimationCollection(IObjectReference objRef)
            : base(global::WinRT.DerivedComposed.Instance)

        {
            _inner = objRef.As(global::ABI.Microsoft.UI.Composition.IImplicitAnimationCollectionMethods.IID);

        }


        public static bool operator ==(ImplicitAnimationCollection x, ImplicitAnimationCollection y) => (x?.ThisPtr ?? IntPtr.Zero) == (y?.ThisPtr ?? IntPtr.Zero);
        public static bool operator !=(ImplicitAnimationCollection x, ImplicitAnimationCollection y) => !(x == y);
        public bool Equals(ImplicitAnimationCollection other) => this == other;
        public override bool Equals(object obj) => obj is ImplicitAnimationCollection that && this == that;
        public override int GetHashCode() => ThisPtr.GetHashCode();


        bool IWinRTObject.HasUnwrappableNativeObject => true;
        IObjectReference IWinRTObject.NativeObject => _inner;

        private struct InterfaceTag<I>{};


        public IEnumerator<global::System.Collections.Generic.KeyValuePair<string, ICompositionAnimationBase>> GetEnumerator() => global::ABI.System.Collections.Generic.IEnumerableMethods<global::System.Collections.Generic.KeyValuePair<string, ICompositionAnimationBase>>.GetEnumerator(_objRef_global__System_Collections_Generic_IEnumerable_global__System_Collections_Generic_KeyValuePair_string__ICompositionAnimationBase__);

        IEnumerator IEnumerable.GetEnumerator() => GetEnumerator();

        public ICollection<string> Keys => global::ABI.System.Collections.Generic.IDictionaryMethods<string, ICompositionAnimationBase>.get_Keys(_objRef_global__System_Collections_Generic_IDictionary_string__ICompositionAnimationBase_);
        public ICollection<ICompositionAnimationBase> Values => global::ABI.System.Collections.Generic.IDictionaryMethods<string, ICompositionAnimationBase>.get_Values(_objRef_global__System_Collections_Generic_IDictionary_string__ICompositionAnimationBase_);
        public int Count => global::ABI.System.Collections.Generic.IDictionaryMethods<string, ICompositionAnimationBase>.get_Count(_objRef_global__System_Collections_Generic_IDictionary_string__ICompositionAnimationBase_);
        public bool IsReadOnly => global::ABI.System.Collections.Generic.IDictionaryMethods<string, ICompositionAnimationBase>.get_IsReadOnly(_objRef_global__System_Collections_Generic_IDictionary_string__ICompositionAnimationBase_);
        public ICompositionAnimationBase this[string key] 
        {
            get => global::ABI.System.Collections.Generic.IDictionaryMethods<string, ICompositionAnimationBase>.Indexer_Get(_objRef_global__System_Collections_Generic_IDictionary_string__ICompositionAnimationBase_, null, key);
            set => global::ABI.System.Collections.Generic.IDictionaryMethods<string, ICompositionAnimationBase>.Indexer_Set(_objRef_global__System_Collections_Generic_IDictionary_string__ICompositionAnimationBase_, key, value);
        }
        public void Add(string key, ICompositionAnimationBase value) => global::ABI.System.Collections.Generic.IDictionaryMethods<string, ICompositionAnimationBase>.Add(_objRef_global__System_Collections_Generic_IDictionary_string__ICompositionAnimationBase_, key, value);
        public bool ContainsKey(string key) => global::ABI.System.Collections.Generic.IDictionaryMethods<string, ICompositionAnimationBase>.ContainsKey(_objRef_global__System_Collections_Generic_IDictionary_string__ICompositionAnimationBase_, key);
        public bool Remove(string key) => global::ABI.System.Collections.Generic.IDictionaryMethods<string, ICompositionAnimationBase>.Remove(_objRef_global__System_Collections_Generic_IDictionary_string__ICompositionAnimationBase_, key);
        public bool TryGetValue(string key, out ICompositionAnimationBase value) => global::ABI.System.Collections.Generic.IDictionaryMethods<string, ICompositionAnimationBase>.TryGetValue(_objRef_global__System_Collections_Generic_IDictionary_string__ICompositionAnimationBase_, null, key, out value);
        public void Add(KeyValuePair<string, ICompositionAnimationBase> item) => global::ABI.System.Collections.Generic.IDictionaryMethods<string, ICompositionAnimationBase>.Add(_objRef_global__System_Collections_Generic_IDictionary_string__ICompositionAnimationBase_, item);
        public void Clear() => global::ABI.System.Collections.Generic.IDictionaryMethods<string, ICompositionAnimationBase>.Clear(_objRef_global__System_Collections_Generic_IDictionary_string__ICompositionAnimationBase_);
        public bool Contains(KeyValuePair<string, ICompositionAnimationBase> item) => global::ABI.System.Collections.Generic.IDictionaryMethods<string, ICompositionAnimationBase>.Contains(_objRef_global__System_Collections_Generic_IDictionary_string__ICompositionAnimationBase_, null, item);
        public void CopyTo(KeyValuePair<string, ICompositionAnimationBase>[] array, int arrayIndex) => global::ABI.System.Collections.Generic.IDictionaryMethods<string, ICompositionAnimationBase>.CopyTo(_objRef_global__System_Collections_Generic_IDictionary_string__ICompositionAnimationBase_, _objRef_global__System_Collections_Generic_IEnumerable_global__System_Collections_Generic_KeyValuePair_string__ICompositionAnimationBase__, array, arrayIndex);
        bool ICollection<KeyValuePair<string, ICompositionAnimationBase>>.Remove(KeyValuePair<string, ICompositionAnimationBase> item) => global::ABI.System.Collections.Generic.IDictionaryMethods<string, ICompositionAnimationBase>.Remove(_objRef_global__System_Collections_Generic_IDictionary_string__ICompositionAnimationBase_, item);

        protected override bool IsOverridableInterface(Guid iid) => base.IsOverridableInterface(iid);

        global::System.Runtime.InteropServices.CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(ref Guid iid, out IntPtr ppv)
        {
            ppv = IntPtr.Zero;
            if (IsOverridableInterface(iid) || global::WinRT.Interop.IID.IID_IInspectable == iid)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
            }

            if (((IWinRTObject)this).NativeObject.TryAs(iid, out ppv) >= 0)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.Handled;
            }

            return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
        }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI")]
    [global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Composition.InitialValueExpressionCollection))]
    [global::ABI.Microsoft.UI.Composition.InitialValueExpressionCollectionRcwFactory]
    [global::WinRT.ProjectedRuntimeClass(typeof(global::System.Collections.Generic.IDictionary<string, string>))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.Foundation.WindowsAppSDKContract), 65536u)]
    public sealed class InitialValueExpressionCollection : CompositionObject, global::System.Collections.Generic.IDictionary<string, string>, global::System.Collections.Generic.IEnumerable<global::System.Collections.Generic.KeyValuePair<string, string>>, global::System.Runtime.InteropServices.ICustomQueryInterface, IWinRTObject, IEquatable<InitialValueExpressionCollection>
    {
        private IntPtr ThisPtr => _inner == null ? (((IWinRTObject)this).NativeObject).ThisPtr : _inner.ThisPtr;

        private readonly IObjectReference _inner = null;




        private volatile IObjectReference ___objRef_global__System_Collections_Generic_IDictionary_string__string_;
        private IObjectReference Make___objRef_global__System_Collections_Generic_IDictionary_string__string_()
        {
            _ = global::WinRT.GenericTypeInstantiations.Windows_Foundation_Collections_IMap_2_String__String.EnsureInitialized();
            global::System.Threading.Interlocked.CompareExchange(ref ___objRef_global__System_Collections_Generic_IDictionary_string__string_, ((IWinRTObject)this).NativeObject.As<IUnknownVftbl>(global::ABI.System.Collections.Generic.IDictionaryMethods<string, string>.IID), null);
            return ___objRef_global__System_Collections_Generic_IDictionary_string__string_;
        }
        private IObjectReference _objRef_global__System_Collections_Generic_IDictionary_string__string_ => ___objRef_global__System_Collections_Generic_IDictionary_string__string_ ?? Make___objRef_global__System_Collections_Generic_IDictionary_string__string_();

        private volatile IObjectReference ___objRef_global__System_Collections_Generic_IEnumerable_global__System_Collections_Generic_KeyValuePair_string__string__;
        private IObjectReference Make___objRef_global__System_Collections_Generic_IEnumerable_global__System_Collections_Generic_KeyValuePair_string__string__()
        {
            _ = global::WinRT.GenericTypeInstantiations.Windows_Foundation_Collections_IIterable_1_Windows_Foundation_Collections_IKeyValuePair_2_String__String_.EnsureInitialized();
            global::System.Threading.Interlocked.CompareExchange(ref ___objRef_global__System_Collections_Generic_IEnumerable_global__System_Collections_Generic_KeyValuePair_string__string__, ((IWinRTObject)this).NativeObject.As<IUnknownVftbl>(global::ABI.System.Collections.Generic.IEnumerableMethods<global::System.Collections.Generic.KeyValuePair<string, string>>.IID), null);
            return ___objRef_global__System_Collections_Generic_IEnumerable_global__System_Collections_Generic_KeyValuePair_string__string__;
        }
        private IObjectReference _objRef_global__System_Collections_Generic_IEnumerable_global__System_Collections_Generic_KeyValuePair_string__string__ => ___objRef_global__System_Collections_Generic_IEnumerable_global__System_Collections_Generic_KeyValuePair_string__string__ ?? Make___objRef_global__System_Collections_Generic_IEnumerable_global__System_Collections_Generic_KeyValuePair_string__string__();



        public static new InitialValueExpressionCollection FromAbi(IntPtr thisPtr)
        {
            if (thisPtr == IntPtr.Zero) return null;
            return MarshalInspectable<InitialValueExpressionCollection>.FromAbi(thisPtr);
        }

        internal InitialValueExpressionCollection(IObjectReference objRef)
            : base(global::WinRT.DerivedComposed.Instance)

        {
            _inner = objRef.As(global::ABI.System.Collections.Generic.IDictionaryMethods<string, string>.IID);

        }


        public static bool operator ==(InitialValueExpressionCollection x, InitialValueExpressionCollection y) => (x?.ThisPtr ?? IntPtr.Zero) == (y?.ThisPtr ?? IntPtr.Zero);
        public static bool operator !=(InitialValueExpressionCollection x, InitialValueExpressionCollection y) => !(x == y);
        public bool Equals(InitialValueExpressionCollection other) => this == other;
        public override bool Equals(object obj) => obj is InitialValueExpressionCollection that && this == that;
        public override int GetHashCode() => ThisPtr.GetHashCode();


        bool IWinRTObject.HasUnwrappableNativeObject => true;
        IObjectReference IWinRTObject.NativeObject => _inner;

        private struct InterfaceTag<I>{};


        public ICollection<string> Keys => global::ABI.System.Collections.Generic.IDictionaryMethods<string, string>.get_Keys(_objRef_global__System_Collections_Generic_IDictionary_string__string_);
        public ICollection<string> Values => global::ABI.System.Collections.Generic.IDictionaryMethods<string, string>.get_Values(_objRef_global__System_Collections_Generic_IDictionary_string__string_);
        public int Count => global::ABI.System.Collections.Generic.IDictionaryMethods<string, string>.get_Count(_objRef_global__System_Collections_Generic_IDictionary_string__string_);
        public bool IsReadOnly => global::ABI.System.Collections.Generic.IDictionaryMethods<string, string>.get_IsReadOnly(_objRef_global__System_Collections_Generic_IDictionary_string__string_);
        public string this[string key] 
        {
            get => global::ABI.System.Collections.Generic.IDictionaryMethods<string, string>.Indexer_Get(_objRef_global__System_Collections_Generic_IDictionary_string__string_, null, key);
            set => global::ABI.System.Collections.Generic.IDictionaryMethods<string, string>.Indexer_Set(_objRef_global__System_Collections_Generic_IDictionary_string__string_, key, value);
        }
        public void Add(string key, string value) => global::ABI.System.Collections.Generic.IDictionaryMethods<string, string>.Add(_objRef_global__System_Collections_Generic_IDictionary_string__string_, key, value);
        public bool ContainsKey(string key) => global::ABI.System.Collections.Generic.IDictionaryMethods<string, string>.ContainsKey(_objRef_global__System_Collections_Generic_IDictionary_string__string_, key);
        public bool Remove(string key) => global::ABI.System.Collections.Generic.IDictionaryMethods<string, string>.Remove(_objRef_global__System_Collections_Generic_IDictionary_string__string_, key);
        public bool TryGetValue(string key, out string value) => global::ABI.System.Collections.Generic.IDictionaryMethods<string, string>.TryGetValue(_objRef_global__System_Collections_Generic_IDictionary_string__string_, null, key, out value);
        public void Add(KeyValuePair<string, string> item) => global::ABI.System.Collections.Generic.IDictionaryMethods<string, string>.Add(_objRef_global__System_Collections_Generic_IDictionary_string__string_, item);
        public void Clear() => global::ABI.System.Collections.Generic.IDictionaryMethods<string, string>.Clear(_objRef_global__System_Collections_Generic_IDictionary_string__string_);
        public bool Contains(KeyValuePair<string, string> item) => global::ABI.System.Collections.Generic.IDictionaryMethods<string, string>.Contains(_objRef_global__System_Collections_Generic_IDictionary_string__string_, null, item);
        public void CopyTo(KeyValuePair<string, string>[] array, int arrayIndex) => global::ABI.System.Collections.Generic.IDictionaryMethods<string, string>.CopyTo(_objRef_global__System_Collections_Generic_IDictionary_string__string_, _objRef_global__System_Collections_Generic_IEnumerable_global__System_Collections_Generic_KeyValuePair_string__string__, array, arrayIndex);
        bool ICollection<KeyValuePair<string, string>>.Remove(KeyValuePair<string, string> item) => global::ABI.System.Collections.Generic.IDictionaryMethods<string, string>.Remove(_objRef_global__System_Collections_Generic_IDictionary_string__string_, item);

        public IEnumerator<global::System.Collections.Generic.KeyValuePair<string, string>> GetEnumerator() => global::ABI.System.Collections.Generic.IEnumerableMethods<global::System.Collections.Generic.KeyValuePair<string, string>>.GetEnumerator(_objRef_global__System_Collections_Generic_IEnumerable_global__System_Collections_Generic_KeyValuePair_string__string__);

        IEnumerator IEnumerable.GetEnumerator() => GetEnumerator();

        protected override bool IsOverridableInterface(Guid iid) => base.IsOverridableInterface(iid);

        global::System.Runtime.InteropServices.CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(ref Guid iid, out IntPtr ppv)
        {
            ppv = IntPtr.Zero;
            if (IsOverridableInterface(iid) || global::WinRT.Interop.IID.IID_IInspectable == iid)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
            }

            if (((IWinRTObject)this).NativeObject.TryAs(iid, out ppv) >= 0)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.Handled;
            }

            return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
        }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI")]
    [global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Composition.InsetClip))]
    [global::ABI.Microsoft.UI.Composition.InsetClipRcwFactory]
    [global::WinRT.ProjectedRuntimeClass(typeof(IInsetClip))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.Foundation.WindowsAppSDKContract), 65536u)]
    public sealed class InsetClip : CompositionClip, global::System.Runtime.InteropServices.ICustomQueryInterface, IWinRTObject, IEquatable<InsetClip>
    {
        private IntPtr ThisPtr => _inner == null ? (((IWinRTObject)this).NativeObject).ThisPtr : _inner.ThisPtr;

        private readonly IObjectReference _inner = null;



        private IObjectReference _objRef_global__Microsoft_UI_Composition_IInsetClip => _inner;


        public static new InsetClip FromAbi(IntPtr thisPtr)
        {
            if (thisPtr == IntPtr.Zero) return null;
            return MarshalInspectable<InsetClip>.FromAbi(thisPtr);
        }

        internal InsetClip(IObjectReference objRef)
            : base(global::WinRT.DerivedComposed.Instance)

        {
            _inner = objRef.As(global::ABI.Microsoft.UI.Composition.IInsetClipMethods.IID);

        }


        public static bool operator ==(InsetClip x, InsetClip y) => (x?.ThisPtr ?? IntPtr.Zero) == (y?.ThisPtr ?? IntPtr.Zero);
        public static bool operator !=(InsetClip x, InsetClip y) => !(x == y);
        public bool Equals(InsetClip other) => this == other;
        public override bool Equals(object obj) => obj is InsetClip that && this == that;
        public override int GetHashCode() => ThisPtr.GetHashCode();


        bool IWinRTObject.HasUnwrappableNativeObject => true;
        IObjectReference IWinRTObject.NativeObject => _inner;

        private struct InterfaceTag<I>{};


        public float BottomInset
        {
            get => global::ABI.Microsoft.UI.Composition.IInsetClipMethods.get_BottomInset(_objRef_global__Microsoft_UI_Composition_IInsetClip);
            set => global::ABI.Microsoft.UI.Composition.IInsetClipMethods.set_BottomInset(_objRef_global__Microsoft_UI_Composition_IInsetClip, value);
        }

        public float LeftInset
        {
            get => global::ABI.Microsoft.UI.Composition.IInsetClipMethods.get_LeftInset(_objRef_global__Microsoft_UI_Composition_IInsetClip);
            set => global::ABI.Microsoft.UI.Composition.IInsetClipMethods.set_LeftInset(_objRef_global__Microsoft_UI_Composition_IInsetClip, value);
        }

        public float RightInset
        {
            get => global::ABI.Microsoft.UI.Composition.IInsetClipMethods.get_RightInset(_objRef_global__Microsoft_UI_Composition_IInsetClip);
            set => global::ABI.Microsoft.UI.Composition.IInsetClipMethods.set_RightInset(_objRef_global__Microsoft_UI_Composition_IInsetClip, value);
        }

        public float TopInset
        {
            get => global::ABI.Microsoft.UI.Composition.IInsetClipMethods.get_TopInset(_objRef_global__Microsoft_UI_Composition_IInsetClip);
            set => global::ABI.Microsoft.UI.Composition.IInsetClipMethods.set_TopInset(_objRef_global__Microsoft_UI_Composition_IInsetClip, value);
        }

        protected override bool IsOverridableInterface(Guid iid) => base.IsOverridableInterface(iid);

        global::System.Runtime.InteropServices.CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(ref Guid iid, out IntPtr ppv)
        {
            ppv = IntPtr.Zero;
            if (IsOverridableInterface(iid) || global::WinRT.Interop.IID.IID_IInspectable == iid)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
            }

            if (((IWinRTObject)this).NativeObject.TryAs(iid, out ppv) >= 0)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.Handled;
            }

            return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
        }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI")]
    [global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Composition.KeyFrameAnimation))]
    [global::ABI.Microsoft.UI.Composition.KeyFrameAnimationRcwFactory]
    [global::WinRT.ProjectedRuntimeClass(typeof(IKeyFrameAnimation))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.Foundation.WindowsAppSDKContract), 65536u)]
    public class KeyFrameAnimation : CompositionAnimation, global::System.Runtime.InteropServices.ICustomQueryInterface, IWinRTObject, IEquatable<KeyFrameAnimation>
    {
        private IntPtr ThisPtr => _inner == null ? (((IWinRTObject)this).NativeObject).ThisPtr : _inner.ThisPtr;

        private readonly IObjectReference _inner = null;




        private volatile IObjectReference ___objRef_global__Microsoft_UI_Composition_IKeyFrameAnimation;
        private IObjectReference Make___objRef_global__Microsoft_UI_Composition_IKeyFrameAnimation()
        {
            global::System.Threading.Interlocked.CompareExchange(ref ___objRef_global__Microsoft_UI_Composition_IKeyFrameAnimation, ((IWinRTObject)this).NativeObject.As<IUnknownVftbl>(global::ABI.Microsoft.UI.Composition.IKeyFrameAnimationMethods.IID), null);
            return ___objRef_global__Microsoft_UI_Composition_IKeyFrameAnimation;
        }
        private IObjectReference _objRef_global__Microsoft_UI_Composition_IKeyFrameAnimation => ___objRef_global__Microsoft_UI_Composition_IKeyFrameAnimation ?? Make___objRef_global__Microsoft_UI_Composition_IKeyFrameAnimation();

        private volatile IObjectReference ___objRef_global__Microsoft_UI_Composition_IKeyFrameAnimation2;
        private IObjectReference Make___objRef_global__Microsoft_UI_Composition_IKeyFrameAnimation2()
        {
            global::System.Threading.Interlocked.CompareExchange(ref ___objRef_global__Microsoft_UI_Composition_IKeyFrameAnimation2, ((IWinRTObject)this).NativeObject.As<IUnknownVftbl>(global::ABI.Microsoft.UI.Composition.IKeyFrameAnimation2Methods.IID), null);
            return ___objRef_global__Microsoft_UI_Composition_IKeyFrameAnimation2;
        }
        private IObjectReference _objRef_global__Microsoft_UI_Composition_IKeyFrameAnimation2 => ___objRef_global__Microsoft_UI_Composition_IKeyFrameAnimation2 ?? Make___objRef_global__Microsoft_UI_Composition_IKeyFrameAnimation2();

        private volatile IObjectReference ___objRef_global__Microsoft_UI_Composition_IKeyFrameAnimation3;
        private IObjectReference Make___objRef_global__Microsoft_UI_Composition_IKeyFrameAnimation3()
        {
            global::System.Threading.Interlocked.CompareExchange(ref ___objRef_global__Microsoft_UI_Composition_IKeyFrameAnimation3, ((IWinRTObject)this).NativeObject.As<IUnknownVftbl>(global::ABI.Microsoft.UI.Composition.IKeyFrameAnimation3Methods.IID), null);
            return ___objRef_global__Microsoft_UI_Composition_IKeyFrameAnimation3;
        }
        private IObjectReference _objRef_global__Microsoft_UI_Composition_IKeyFrameAnimation3 => ___objRef_global__Microsoft_UI_Composition_IKeyFrameAnimation3 ?? Make___objRef_global__Microsoft_UI_Composition_IKeyFrameAnimation3();



        private static class _IKeyFrameAnimationFactoryMethods
        {}

        private static volatile IObjectReference ___objRef_global__Microsoft_UI_Composition_IKeyFrameAnimationFactory;
        private static IObjectReference _objRef_global__Microsoft_UI_Composition_IKeyFrameAnimationFactory
        {
            get
            { 
                var factory = ___objRef_global__Microsoft_UI_Composition_IKeyFrameAnimationFactory;
                if (factory != null && factory.IsInCurrentContext)
                {
                    return factory;
                }
                else
                {
                    return ___objRef_global__Microsoft_UI_Composition_IKeyFrameAnimationFactory = ActivationFactory.Get("Microsoft.UI.Composition.KeyFrameAnimation", global::ABI.Microsoft.UI.Composition.IKeyFrameAnimationFactoryMethods.IID);
                }
            }
        }

        public static new KeyFrameAnimation FromAbi(IntPtr thisPtr)
        {
            if (thisPtr == IntPtr.Zero) return null;
            return MarshalInspectable<KeyFrameAnimation>.FromAbi(thisPtr);
        }

        protected internal KeyFrameAnimation(IObjectReference objRef)
            : base(global::WinRT.DerivedComposed.Instance)

        {
            _inner = objRef.As(global::ABI.Microsoft.UI.Composition.IKeyFrameAnimationMethods.IID);

        }


        public static bool operator ==(KeyFrameAnimation x, KeyFrameAnimation y) => (x?.ThisPtr ?? IntPtr.Zero) == (y?.ThisPtr ?? IntPtr.Zero);
        public static bool operator !=(KeyFrameAnimation x, KeyFrameAnimation y) => !(x == y);
        public bool Equals(KeyFrameAnimation other) => this == other;
        public override bool Equals(object obj) => obj is KeyFrameAnimation that && this == that;
        public override int GetHashCode() => ThisPtr.GetHashCode();


        protected KeyFrameAnimation(global::WinRT.DerivedComposed _):base(_)
        {

        }
        bool IWinRTObject.HasUnwrappableNativeObject => this.GetType() == typeof(KeyFrameAnimation);
        IObjectReference IWinRTObject.NativeObject => _inner;

        private struct InterfaceTag<I>{};


        public void InsertExpressionKeyFrame(float normalizedProgressKey, string value) => global::ABI.Microsoft.UI.Composition.IKeyFrameAnimationMethods.InsertExpressionKeyFrame(_objRef_global__Microsoft_UI_Composition_IKeyFrameAnimation, normalizedProgressKey, value);

        public void InsertExpressionKeyFrame(float normalizedProgressKey, string value, CompositionEasingFunction easingFunction) => global::ABI.Microsoft.UI.Composition.IKeyFrameAnimationMethods.InsertExpressionKeyFrame(_objRef_global__Microsoft_UI_Composition_IKeyFrameAnimation, normalizedProgressKey, value, easingFunction);

        public AnimationDelayBehavior DelayBehavior
        {
            get => global::ABI.Microsoft.UI.Composition.IKeyFrameAnimation3Methods.get_DelayBehavior(_objRef_global__Microsoft_UI_Composition_IKeyFrameAnimation3);
            set => global::ABI.Microsoft.UI.Composition.IKeyFrameAnimation3Methods.set_DelayBehavior(_objRef_global__Microsoft_UI_Composition_IKeyFrameAnimation3, value);
        }

        public global::System.TimeSpan DelayTime
        {
            get => global::ABI.Microsoft.UI.Composition.IKeyFrameAnimationMethods.get_DelayTime(_objRef_global__Microsoft_UI_Composition_IKeyFrameAnimation);
            set => global::ABI.Microsoft.UI.Composition.IKeyFrameAnimationMethods.set_DelayTime(_objRef_global__Microsoft_UI_Composition_IKeyFrameAnimation, value);
        }

        public AnimationDirection Direction
        {
            get => global::ABI.Microsoft.UI.Composition.IKeyFrameAnimation2Methods.get_Direction(_objRef_global__Microsoft_UI_Composition_IKeyFrameAnimation2);
            set => global::ABI.Microsoft.UI.Composition.IKeyFrameAnimation2Methods.set_Direction(_objRef_global__Microsoft_UI_Composition_IKeyFrameAnimation2, value);
        }

        public global::System.TimeSpan Duration
        {
            get => global::ABI.Microsoft.UI.Composition.IKeyFrameAnimationMethods.get_Duration(_objRef_global__Microsoft_UI_Composition_IKeyFrameAnimation);
            set => global::ABI.Microsoft.UI.Composition.IKeyFrameAnimationMethods.set_Duration(_objRef_global__Microsoft_UI_Composition_IKeyFrameAnimation, value);
        }

        public AnimationIterationBehavior IterationBehavior
        {
            get => global::ABI.Microsoft.UI.Composition.IKeyFrameAnimationMethods.get_IterationBehavior(_objRef_global__Microsoft_UI_Composition_IKeyFrameAnimation);
            set => global::ABI.Microsoft.UI.Composition.IKeyFrameAnimationMethods.set_IterationBehavior(_objRef_global__Microsoft_UI_Composition_IKeyFrameAnimation, value);
        }

        public int IterationCount
        {
            get => global::ABI.Microsoft.UI.Composition.IKeyFrameAnimationMethods.get_IterationCount(_objRef_global__Microsoft_UI_Composition_IKeyFrameAnimation);
            set => global::ABI.Microsoft.UI.Composition.IKeyFrameAnimationMethods.set_IterationCount(_objRef_global__Microsoft_UI_Composition_IKeyFrameAnimation, value);
        }

        public int KeyFrameCount => global::ABI.Microsoft.UI.Composition.IKeyFrameAnimationMethods.get_KeyFrameCount(_objRef_global__Microsoft_UI_Composition_IKeyFrameAnimation);

        public AnimationStopBehavior StopBehavior
        {
            get => global::ABI.Microsoft.UI.Composition.IKeyFrameAnimationMethods.get_StopBehavior(_objRef_global__Microsoft_UI_Composition_IKeyFrameAnimation);
            set => global::ABI.Microsoft.UI.Composition.IKeyFrameAnimationMethods.set_StopBehavior(_objRef_global__Microsoft_UI_Composition_IKeyFrameAnimation, value);
        }

        protected override bool IsOverridableInterface(Guid iid) => base.IsOverridableInterface(iid);

        global::System.Runtime.InteropServices.CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(ref Guid iid, out IntPtr ppv)
        {
            ppv = IntPtr.Zero;
            if (IsOverridableInterface(iid) || global::WinRT.Interop.IID.IID_IInspectable == iid)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
            }

            if (((IWinRTObject)this).NativeObject.TryAs(iid, out ppv) >= 0)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.Handled;
            }

            return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
        }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI")]
    [global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Composition.LayerVisual))]
    [global::ABI.Microsoft.UI.Composition.LayerVisualRcwFactory]
    [global::WinRT.ProjectedRuntimeClass(typeof(ILayerVisual))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.Foundation.WindowsAppSDKContract), 65536u)]
    public sealed class LayerVisual : ContainerVisual, global::System.Runtime.InteropServices.ICustomQueryInterface, IWinRTObject, IEquatable<LayerVisual>
    {
        private IntPtr ThisPtr => _inner == null ? (((IWinRTObject)this).NativeObject).ThisPtr : _inner.ThisPtr;

        private readonly IObjectReference _inner = null;



        private IObjectReference _objRef_global__Microsoft_UI_Composition_ILayerVisual => _inner;
        private volatile IObjectReference ___objRef_global__Microsoft_UI_Composition_ILayerVisual2;
        private IObjectReference Make___objRef_global__Microsoft_UI_Composition_ILayerVisual2()
        {
            global::System.Threading.Interlocked.CompareExchange(ref ___objRef_global__Microsoft_UI_Composition_ILayerVisual2, ((IWinRTObject)this).NativeObject.As<IUnknownVftbl>(global::ABI.Microsoft.UI.Composition.ILayerVisual2Methods.IID), null);
            return ___objRef_global__Microsoft_UI_Composition_ILayerVisual2;
        }
        private IObjectReference _objRef_global__Microsoft_UI_Composition_ILayerVisual2 => ___objRef_global__Microsoft_UI_Composition_ILayerVisual2 ?? Make___objRef_global__Microsoft_UI_Composition_ILayerVisual2();



        public static new LayerVisual FromAbi(IntPtr thisPtr)
        {
            if (thisPtr == IntPtr.Zero) return null;
            return MarshalInspectable<LayerVisual>.FromAbi(thisPtr);
        }

        internal LayerVisual(IObjectReference objRef)
            : base(global::WinRT.DerivedComposed.Instance)

        {
            _inner = objRef.As(global::ABI.Microsoft.UI.Composition.ILayerVisualMethods.IID);

        }


        public static bool operator ==(LayerVisual x, LayerVisual y) => (x?.ThisPtr ?? IntPtr.Zero) == (y?.ThisPtr ?? IntPtr.Zero);
        public static bool operator !=(LayerVisual x, LayerVisual y) => !(x == y);
        public bool Equals(LayerVisual other) => this == other;
        public override bool Equals(object obj) => obj is LayerVisual that && this == that;
        public override int GetHashCode() => ThisPtr.GetHashCode();


        bool IWinRTObject.HasUnwrappableNativeObject => true;
        IObjectReference IWinRTObject.NativeObject => _inner;

        private struct InterfaceTag<I>{};


        public CompositionEffectBrush Effect
        {
            get => global::ABI.Microsoft.UI.Composition.ILayerVisualMethods.get_Effect(_objRef_global__Microsoft_UI_Composition_ILayerVisual);
            set => global::ABI.Microsoft.UI.Composition.ILayerVisualMethods.set_Effect(_objRef_global__Microsoft_UI_Composition_ILayerVisual, value);
        }

        public CompositionShadow Shadow
        {
            get => global::ABI.Microsoft.UI.Composition.ILayerVisual2Methods.get_Shadow(_objRef_global__Microsoft_UI_Composition_ILayerVisual2);
            set => global::ABI.Microsoft.UI.Composition.ILayerVisual2Methods.set_Shadow(_objRef_global__Microsoft_UI_Composition_ILayerVisual2, value);
        }

        protected override bool IsOverridableInterface(Guid iid) => base.IsOverridableInterface(iid);

        global::System.Runtime.InteropServices.CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(ref Guid iid, out IntPtr ppv)
        {
            ppv = IntPtr.Zero;
            if (IsOverridableInterface(iid) || global::WinRT.Interop.IID.IID_IInspectable == iid)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
            }

            if (((IWinRTObject)this).NativeObject.TryAs(iid, out ppv) >= 0)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.Handled;
            }

            return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
        }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI")]
    [global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Composition.LinearEasingFunction))]
    [global::ABI.Microsoft.UI.Composition.LinearEasingFunctionRcwFactory]
    [global::WinRT.ProjectedRuntimeClass(typeof(ILinearEasingFunction))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.Foundation.WindowsAppSDKContract), 65536u)]
    public sealed class LinearEasingFunction : CompositionEasingFunction, global::System.Runtime.InteropServices.ICustomQueryInterface, IWinRTObject, IEquatable<LinearEasingFunction>
    {
        private IntPtr ThisPtr => _inner == null ? (((IWinRTObject)this).NativeObject).ThisPtr : _inner.ThisPtr;

        private readonly IObjectReference _inner = null;



        private IObjectReference _objRef_global__Microsoft_UI_Composition_ILinearEasingFunction => _inner;


        public static new LinearEasingFunction FromAbi(IntPtr thisPtr)
        {
            if (thisPtr == IntPtr.Zero) return null;
            return MarshalInspectable<LinearEasingFunction>.FromAbi(thisPtr);
        }

        internal LinearEasingFunction(IObjectReference objRef)
            : base(global::WinRT.DerivedComposed.Instance)

        {
            _inner = objRef.As(global::ABI.Microsoft.UI.Composition.ILinearEasingFunctionMethods.IID);

        }


        public static bool operator ==(LinearEasingFunction x, LinearEasingFunction y) => (x?.ThisPtr ?? IntPtr.Zero) == (y?.ThisPtr ?? IntPtr.Zero);
        public static bool operator !=(LinearEasingFunction x, LinearEasingFunction y) => !(x == y);
        public bool Equals(LinearEasingFunction other) => this == other;
        public override bool Equals(object obj) => obj is LinearEasingFunction that && this == that;
        public override int GetHashCode() => ThisPtr.GetHashCode();


        bool IWinRTObject.HasUnwrappableNativeObject => true;
        IObjectReference IWinRTObject.NativeObject => _inner;

        private struct InterfaceTag<I>{};


        protected override bool IsOverridableInterface(Guid iid) => base.IsOverridableInterface(iid);

        global::System.Runtime.InteropServices.CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(ref Guid iid, out IntPtr ppv)
        {
            ppv = IntPtr.Zero;
            if (IsOverridableInterface(iid) || global::WinRT.Interop.IID.IID_IInspectable == iid)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
            }

            if (((IWinRTObject)this).NativeObject.TryAs(iid, out ppv) >= 0)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.Handled;
            }

            return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
        }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI")]
    [global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Composition.NaturalMotionAnimation))]
    [global::ABI.Microsoft.UI.Composition.NaturalMotionAnimationRcwFactory]
    [global::WinRT.ProjectedRuntimeClass(typeof(INaturalMotionAnimation))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.Foundation.WindowsAppSDKContract), 65536u)]
    public class NaturalMotionAnimation : CompositionAnimation, global::System.Runtime.InteropServices.ICustomQueryInterface, IWinRTObject, IEquatable<NaturalMotionAnimation>
    {
        private IntPtr ThisPtr => _inner == null ? (((IWinRTObject)this).NativeObject).ThisPtr : _inner.ThisPtr;

        private readonly IObjectReference _inner = null;




        private volatile IObjectReference ___objRef_global__Microsoft_UI_Composition_INaturalMotionAnimation;
        private IObjectReference Make___objRef_global__Microsoft_UI_Composition_INaturalMotionAnimation()
        {
            global::System.Threading.Interlocked.CompareExchange(ref ___objRef_global__Microsoft_UI_Composition_INaturalMotionAnimation, ((IWinRTObject)this).NativeObject.As<IUnknownVftbl>(global::ABI.Microsoft.UI.Composition.INaturalMotionAnimationMethods.IID), null);
            return ___objRef_global__Microsoft_UI_Composition_INaturalMotionAnimation;
        }
        private IObjectReference _objRef_global__Microsoft_UI_Composition_INaturalMotionAnimation => ___objRef_global__Microsoft_UI_Composition_INaturalMotionAnimation ?? Make___objRef_global__Microsoft_UI_Composition_INaturalMotionAnimation();



        private static class _INaturalMotionAnimationFactoryMethods
        {}

        private static volatile IObjectReference ___objRef_global__Microsoft_UI_Composition_INaturalMotionAnimationFactory;
        private static IObjectReference _objRef_global__Microsoft_UI_Composition_INaturalMotionAnimationFactory
        {
            get
            { 
                var factory = ___objRef_global__Microsoft_UI_Composition_INaturalMotionAnimationFactory;
                if (factory != null && factory.IsInCurrentContext)
                {
                    return factory;
                }
                else
                {
                    return ___objRef_global__Microsoft_UI_Composition_INaturalMotionAnimationFactory = ActivationFactory.Get("Microsoft.UI.Composition.NaturalMotionAnimation", global::ABI.Microsoft.UI.Composition.INaturalMotionAnimationFactoryMethods.IID);
                }
            }
        }

        public static new NaturalMotionAnimation FromAbi(IntPtr thisPtr)
        {
            if (thisPtr == IntPtr.Zero) return null;
            return MarshalInspectable<NaturalMotionAnimation>.FromAbi(thisPtr);
        }

        protected internal NaturalMotionAnimation(IObjectReference objRef)
            : base(global::WinRT.DerivedComposed.Instance)

        {
            _inner = objRef.As(global::ABI.Microsoft.UI.Composition.INaturalMotionAnimationMethods.IID);

        }


        public static bool operator ==(NaturalMotionAnimation x, NaturalMotionAnimation y) => (x?.ThisPtr ?? IntPtr.Zero) == (y?.ThisPtr ?? IntPtr.Zero);
        public static bool operator !=(NaturalMotionAnimation x, NaturalMotionAnimation y) => !(x == y);
        public bool Equals(NaturalMotionAnimation other) => this == other;
        public override bool Equals(object obj) => obj is NaturalMotionAnimation that && this == that;
        public override int GetHashCode() => ThisPtr.GetHashCode();


        protected NaturalMotionAnimation(global::WinRT.DerivedComposed _):base(_)
        {

        }
        bool IWinRTObject.HasUnwrappableNativeObject => this.GetType() == typeof(NaturalMotionAnimation);
        IObjectReference IWinRTObject.NativeObject => _inner;

        private struct InterfaceTag<I>{};


        public AnimationDelayBehavior DelayBehavior
        {
            get => global::ABI.Microsoft.UI.Composition.INaturalMotionAnimationMethods.get_DelayBehavior(_objRef_global__Microsoft_UI_Composition_INaturalMotionAnimation);
            set => global::ABI.Microsoft.UI.Composition.INaturalMotionAnimationMethods.set_DelayBehavior(_objRef_global__Microsoft_UI_Composition_INaturalMotionAnimation, value);
        }

        public global::System.TimeSpan DelayTime
        {
            get => global::ABI.Microsoft.UI.Composition.INaturalMotionAnimationMethods.get_DelayTime(_objRef_global__Microsoft_UI_Composition_INaturalMotionAnimation);
            set => global::ABI.Microsoft.UI.Composition.INaturalMotionAnimationMethods.set_DelayTime(_objRef_global__Microsoft_UI_Composition_INaturalMotionAnimation, value);
        }

        public AnimationStopBehavior StopBehavior
        {
            get => global::ABI.Microsoft.UI.Composition.INaturalMotionAnimationMethods.get_StopBehavior(_objRef_global__Microsoft_UI_Composition_INaturalMotionAnimation);
            set => global::ABI.Microsoft.UI.Composition.INaturalMotionAnimationMethods.set_StopBehavior(_objRef_global__Microsoft_UI_Composition_INaturalMotionAnimation, value);
        }

        protected override bool IsOverridableInterface(Guid iid) => base.IsOverridableInterface(iid);

        global::System.Runtime.InteropServices.CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(ref Guid iid, out IntPtr ppv)
        {
            ppv = IntPtr.Zero;
            if (IsOverridableInterface(iid) || global::WinRT.Interop.IID.IID_IInspectable == iid)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
            }

            if (((IWinRTObject)this).NativeObject.TryAs(iid, out ppv) >= 0)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.Handled;
            }

            return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
        }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI")]
    [global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Composition.PathKeyFrameAnimation))]
    [global::ABI.Microsoft.UI.Composition.PathKeyFrameAnimationRcwFactory]
    [global::WinRT.ProjectedRuntimeClass(typeof(IPathKeyFrameAnimation))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.Foundation.WindowsAppSDKContract), 65536u)]
    public sealed class PathKeyFrameAnimation : KeyFrameAnimation, global::System.Runtime.InteropServices.ICustomQueryInterface, IWinRTObject, IEquatable<PathKeyFrameAnimation>
    {
        private IntPtr ThisPtr => _inner == null ? (((IWinRTObject)this).NativeObject).ThisPtr : _inner.ThisPtr;

        private readonly IObjectReference _inner = null;



        private IObjectReference _objRef_global__Microsoft_UI_Composition_IPathKeyFrameAnimation => _inner;


        public static new PathKeyFrameAnimation FromAbi(IntPtr thisPtr)
        {
            if (thisPtr == IntPtr.Zero) return null;
            return MarshalInspectable<PathKeyFrameAnimation>.FromAbi(thisPtr);
        }

        internal PathKeyFrameAnimation(IObjectReference objRef)
            : base(global::WinRT.DerivedComposed.Instance)

        {
            _inner = objRef.As(global::ABI.Microsoft.UI.Composition.IPathKeyFrameAnimationMethods.IID);

        }


        public static bool operator ==(PathKeyFrameAnimation x, PathKeyFrameAnimation y) => (x?.ThisPtr ?? IntPtr.Zero) == (y?.ThisPtr ?? IntPtr.Zero);
        public static bool operator !=(PathKeyFrameAnimation x, PathKeyFrameAnimation y) => !(x == y);
        public bool Equals(PathKeyFrameAnimation other) => this == other;
        public override bool Equals(object obj) => obj is PathKeyFrameAnimation that && this == that;
        public override int GetHashCode() => ThisPtr.GetHashCode();


        bool IWinRTObject.HasUnwrappableNativeObject => true;
        IObjectReference IWinRTObject.NativeObject => _inner;

        private struct InterfaceTag<I>{};


        public void InsertKeyFrame(float normalizedProgressKey, CompositionPath path) => global::ABI.Microsoft.UI.Composition.IPathKeyFrameAnimationMethods.InsertKeyFrame(_objRef_global__Microsoft_UI_Composition_IPathKeyFrameAnimation, normalizedProgressKey, path);

        public void InsertKeyFrame(float normalizedProgressKey, CompositionPath path, CompositionEasingFunction easingFunction) => global::ABI.Microsoft.UI.Composition.IPathKeyFrameAnimationMethods.InsertKeyFrame(_objRef_global__Microsoft_UI_Composition_IPathKeyFrameAnimation, normalizedProgressKey, path, easingFunction);

        protected override bool IsOverridableInterface(Guid iid) => base.IsOverridableInterface(iid);

        global::System.Runtime.InteropServices.CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(ref Guid iid, out IntPtr ppv)
        {
            ppv = IntPtr.Zero;
            if (IsOverridableInterface(iid) || global::WinRT.Interop.IID.IID_IInspectable == iid)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
            }

            if (((IWinRTObject)this).NativeObject.TryAs(iid, out ppv) >= 0)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.Handled;
            }

            return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
        }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI")]
    [global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Composition.PointLight))]
    [global::ABI.Microsoft.UI.Composition.PointLightRcwFactory]
    [global::WinRT.ProjectedRuntimeClass(typeof(IPointLight))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.Foundation.WindowsAppSDKContract), 65536u)]
    public sealed class PointLight : CompositionLight, global::System.Runtime.InteropServices.ICustomQueryInterface, IWinRTObject, IEquatable<PointLight>
    {
        private IntPtr ThisPtr => _inner == null ? (((IWinRTObject)this).NativeObject).ThisPtr : _inner.ThisPtr;

        private readonly IObjectReference _inner = null;



        private IObjectReference _objRef_global__Microsoft_UI_Composition_IPointLight => _inner;
        private volatile IObjectReference ___objRef_global__Microsoft_UI_Composition_IPointLight2;
        private IObjectReference Make___objRef_global__Microsoft_UI_Composition_IPointLight2()
        {
            global::System.Threading.Interlocked.CompareExchange(ref ___objRef_global__Microsoft_UI_Composition_IPointLight2, ((IWinRTObject)this).NativeObject.As<IUnknownVftbl>(global::ABI.Microsoft.UI.Composition.IPointLight2Methods.IID), null);
            return ___objRef_global__Microsoft_UI_Composition_IPointLight2;
        }
        private IObjectReference _objRef_global__Microsoft_UI_Composition_IPointLight2 => ___objRef_global__Microsoft_UI_Composition_IPointLight2 ?? Make___objRef_global__Microsoft_UI_Composition_IPointLight2();

        private volatile IObjectReference ___objRef_global__Microsoft_UI_Composition_IPointLight3;
        private IObjectReference Make___objRef_global__Microsoft_UI_Composition_IPointLight3()
        {
            global::System.Threading.Interlocked.CompareExchange(ref ___objRef_global__Microsoft_UI_Composition_IPointLight3, ((IWinRTObject)this).NativeObject.As<IUnknownVftbl>(global::ABI.Microsoft.UI.Composition.IPointLight3Methods.IID), null);
            return ___objRef_global__Microsoft_UI_Composition_IPointLight3;
        }
        private IObjectReference _objRef_global__Microsoft_UI_Composition_IPointLight3 => ___objRef_global__Microsoft_UI_Composition_IPointLight3 ?? Make___objRef_global__Microsoft_UI_Composition_IPointLight3();



        public static new PointLight FromAbi(IntPtr thisPtr)
        {
            if (thisPtr == IntPtr.Zero) return null;
            return MarshalInspectable<PointLight>.FromAbi(thisPtr);
        }

        internal PointLight(IObjectReference objRef)
            : base(global::WinRT.DerivedComposed.Instance)

        {
            _inner = objRef.As(global::ABI.Microsoft.UI.Composition.IPointLightMethods.IID);

        }


        public static bool operator ==(PointLight x, PointLight y) => (x?.ThisPtr ?? IntPtr.Zero) == (y?.ThisPtr ?? IntPtr.Zero);
        public static bool operator !=(PointLight x, PointLight y) => !(x == y);
        public bool Equals(PointLight other) => this == other;
        public override bool Equals(object obj) => obj is PointLight that && this == that;
        public override int GetHashCode() => ThisPtr.GetHashCode();


        bool IWinRTObject.HasUnwrappableNativeObject => true;
        IObjectReference IWinRTObject.NativeObject => _inner;

        private struct InterfaceTag<I>{};


        public global::Windows.UI.Color Color
        {
            get => global::ABI.Microsoft.UI.Composition.IPointLightMethods.get_Color(_objRef_global__Microsoft_UI_Composition_IPointLight);
            set => global::ABI.Microsoft.UI.Composition.IPointLightMethods.set_Color(_objRef_global__Microsoft_UI_Composition_IPointLight, value);
        }

        public float ConstantAttenuation
        {
            get => global::ABI.Microsoft.UI.Composition.IPointLightMethods.get_ConstantAttenuation(_objRef_global__Microsoft_UI_Composition_IPointLight);
            set => global::ABI.Microsoft.UI.Composition.IPointLightMethods.set_ConstantAttenuation(_objRef_global__Microsoft_UI_Composition_IPointLight, value);
        }

        public Visual CoordinateSpace
        {
            get => global::ABI.Microsoft.UI.Composition.IPointLightMethods.get_CoordinateSpace(_objRef_global__Microsoft_UI_Composition_IPointLight);
            set => global::ABI.Microsoft.UI.Composition.IPointLightMethods.set_CoordinateSpace(_objRef_global__Microsoft_UI_Composition_IPointLight, value);
        }

        public float Intensity
        {
            get => global::ABI.Microsoft.UI.Composition.IPointLight2Methods.get_Intensity(_objRef_global__Microsoft_UI_Composition_IPointLight2);
            set => global::ABI.Microsoft.UI.Composition.IPointLight2Methods.set_Intensity(_objRef_global__Microsoft_UI_Composition_IPointLight2, value);
        }

        public float LinearAttenuation
        {
            get => global::ABI.Microsoft.UI.Composition.IPointLightMethods.get_LinearAttenuation(_objRef_global__Microsoft_UI_Composition_IPointLight);
            set => global::ABI.Microsoft.UI.Composition.IPointLightMethods.set_LinearAttenuation(_objRef_global__Microsoft_UI_Composition_IPointLight, value);
        }

        public float MaxAttenuationCutoff
        {
            get => global::ABI.Microsoft.UI.Composition.IPointLight3Methods.get_MaxAttenuationCutoff(_objRef_global__Microsoft_UI_Composition_IPointLight3);
            set => global::ABI.Microsoft.UI.Composition.IPointLight3Methods.set_MaxAttenuationCutoff(_objRef_global__Microsoft_UI_Composition_IPointLight3, value);
        }

        public float MinAttenuationCutoff
        {
            get => global::ABI.Microsoft.UI.Composition.IPointLight3Methods.get_MinAttenuationCutoff(_objRef_global__Microsoft_UI_Composition_IPointLight3);
            set => global::ABI.Microsoft.UI.Composition.IPointLight3Methods.set_MinAttenuationCutoff(_objRef_global__Microsoft_UI_Composition_IPointLight3, value);
        }

        public global::System.Numerics.Vector3 Offset
        {
            get => global::ABI.Microsoft.UI.Composition.IPointLightMethods.get_Offset(_objRef_global__Microsoft_UI_Composition_IPointLight);
            set => global::ABI.Microsoft.UI.Composition.IPointLightMethods.set_Offset(_objRef_global__Microsoft_UI_Composition_IPointLight, value);
        }

        public float QuadraticAttenuation
        {
            get => global::ABI.Microsoft.UI.Composition.IPointLightMethods.get_QuadraticAttenuation(_objRef_global__Microsoft_UI_Composition_IPointLight);
            set => global::ABI.Microsoft.UI.Composition.IPointLightMethods.set_QuadraticAttenuation(_objRef_global__Microsoft_UI_Composition_IPointLight, value);
        }

        protected override bool IsOverridableInterface(Guid iid) => base.IsOverridableInterface(iid);

        global::System.Runtime.InteropServices.CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(ref Guid iid, out IntPtr ppv)
        {
            ppv = IntPtr.Zero;
            if (IsOverridableInterface(iid) || global::WinRT.Interop.IID.IID_IInspectable == iid)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
            }

            if (((IWinRTObject)this).NativeObject.TryAs(iid, out ppv) >= 0)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.Handled;
            }

            return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
        }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI")]
    [global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Composition.PowerEasingFunction))]
    [global::ABI.Microsoft.UI.Composition.PowerEasingFunctionRcwFactory]
    [global::WinRT.ProjectedRuntimeClass(typeof(IPowerEasingFunction))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.Foundation.WindowsAppSDKContract), 65536u)]
    public sealed class PowerEasingFunction : CompositionEasingFunction, global::System.Runtime.InteropServices.ICustomQueryInterface, IWinRTObject, IEquatable<PowerEasingFunction>
    {
        private IntPtr ThisPtr => _inner == null ? (((IWinRTObject)this).NativeObject).ThisPtr : _inner.ThisPtr;

        private readonly IObjectReference _inner = null;



        private IObjectReference _objRef_global__Microsoft_UI_Composition_IPowerEasingFunction => _inner;


        public static new PowerEasingFunction FromAbi(IntPtr thisPtr)
        {
            if (thisPtr == IntPtr.Zero) return null;
            return MarshalInspectable<PowerEasingFunction>.FromAbi(thisPtr);
        }

        internal PowerEasingFunction(IObjectReference objRef)
            : base(global::WinRT.DerivedComposed.Instance)

        {
            _inner = objRef.As(global::ABI.Microsoft.UI.Composition.IPowerEasingFunctionMethods.IID);

        }


        public static bool operator ==(PowerEasingFunction x, PowerEasingFunction y) => (x?.ThisPtr ?? IntPtr.Zero) == (y?.ThisPtr ?? IntPtr.Zero);
        public static bool operator !=(PowerEasingFunction x, PowerEasingFunction y) => !(x == y);
        public bool Equals(PowerEasingFunction other) => this == other;
        public override bool Equals(object obj) => obj is PowerEasingFunction that && this == that;
        public override int GetHashCode() => ThisPtr.GetHashCode();


        bool IWinRTObject.HasUnwrappableNativeObject => true;
        IObjectReference IWinRTObject.NativeObject => _inner;

        private struct InterfaceTag<I>{};


        public CompositionEasingFunctionMode Mode => global::ABI.Microsoft.UI.Composition.IPowerEasingFunctionMethods.get_Mode(_objRef_global__Microsoft_UI_Composition_IPowerEasingFunction);

        public float Power => global::ABI.Microsoft.UI.Composition.IPowerEasingFunctionMethods.get_Power(_objRef_global__Microsoft_UI_Composition_IPowerEasingFunction);

        protected override bool IsOverridableInterface(Guid iid) => base.IsOverridableInterface(iid);

        global::System.Runtime.InteropServices.CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(ref Guid iid, out IntPtr ppv)
        {
            ppv = IntPtr.Zero;
            if (IsOverridableInterface(iid) || global::WinRT.Interop.IID.IID_IInspectable == iid)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
            }

            if (((IWinRTObject)this).NativeObject.TryAs(iid, out ppv) >= 0)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.Handled;
            }

            return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
        }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI")]
    [global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Composition.QuaternionKeyFrameAnimation))]
    [global::ABI.Microsoft.UI.Composition.QuaternionKeyFrameAnimationRcwFactory]
    [global::WinRT.ProjectedRuntimeClass(typeof(IQuaternionKeyFrameAnimation))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.Foundation.WindowsAppSDKContract), 65536u)]
    public sealed class QuaternionKeyFrameAnimation : KeyFrameAnimation, global::System.Runtime.InteropServices.ICustomQueryInterface, IWinRTObject, IEquatable<QuaternionKeyFrameAnimation>
    {
        private IntPtr ThisPtr => _inner == null ? (((IWinRTObject)this).NativeObject).ThisPtr : _inner.ThisPtr;

        private readonly IObjectReference _inner = null;



        private IObjectReference _objRef_global__Microsoft_UI_Composition_IQuaternionKeyFrameAnimation => _inner;


        public static new QuaternionKeyFrameAnimation FromAbi(IntPtr thisPtr)
        {
            if (thisPtr == IntPtr.Zero) return null;
            return MarshalInspectable<QuaternionKeyFrameAnimation>.FromAbi(thisPtr);
        }

        internal QuaternionKeyFrameAnimation(IObjectReference objRef)
            : base(global::WinRT.DerivedComposed.Instance)

        {
            _inner = objRef.As(global::ABI.Microsoft.UI.Composition.IQuaternionKeyFrameAnimationMethods.IID);

        }


        public static bool operator ==(QuaternionKeyFrameAnimation x, QuaternionKeyFrameAnimation y) => (x?.ThisPtr ?? IntPtr.Zero) == (y?.ThisPtr ?? IntPtr.Zero);
        public static bool operator !=(QuaternionKeyFrameAnimation x, QuaternionKeyFrameAnimation y) => !(x == y);
        public bool Equals(QuaternionKeyFrameAnimation other) => this == other;
        public override bool Equals(object obj) => obj is QuaternionKeyFrameAnimation that && this == that;
        public override int GetHashCode() => ThisPtr.GetHashCode();


        bool IWinRTObject.HasUnwrappableNativeObject => true;
        IObjectReference IWinRTObject.NativeObject => _inner;

        private struct InterfaceTag<I>{};


        public void InsertKeyFrame(float normalizedProgressKey, global::System.Numerics.Quaternion value) => global::ABI.Microsoft.UI.Composition.IQuaternionKeyFrameAnimationMethods.InsertKeyFrame(_objRef_global__Microsoft_UI_Composition_IQuaternionKeyFrameAnimation, normalizedProgressKey, value);

        public void InsertKeyFrame(float normalizedProgressKey, global::System.Numerics.Quaternion value, CompositionEasingFunction easingFunction) => global::ABI.Microsoft.UI.Composition.IQuaternionKeyFrameAnimationMethods.InsertKeyFrame(_objRef_global__Microsoft_UI_Composition_IQuaternionKeyFrameAnimation, normalizedProgressKey, value, easingFunction);

        protected override bool IsOverridableInterface(Guid iid) => base.IsOverridableInterface(iid);

        global::System.Runtime.InteropServices.CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(ref Guid iid, out IntPtr ppv)
        {
            ppv = IntPtr.Zero;
            if (IsOverridableInterface(iid) || global::WinRT.Interop.IID.IID_IInspectable == iid)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
            }

            if (((IWinRTObject)this).NativeObject.TryAs(iid, out ppv) >= 0)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.Handled;
            }

            return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
        }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI")]
    [global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Composition.RectangleClip))]
    [global::ABI.Microsoft.UI.Composition.RectangleClipRcwFactory]
    [global::WinRT.ProjectedRuntimeClass(typeof(IRectangleClip))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.Foundation.WindowsAppSDKContract), 65536u)]
    public sealed class RectangleClip : CompositionClip, global::System.Runtime.InteropServices.ICustomQueryInterface, IWinRTObject, IEquatable<RectangleClip>
    {
        private IntPtr ThisPtr => _inner == null ? (((IWinRTObject)this).NativeObject).ThisPtr : _inner.ThisPtr;

        private readonly IObjectReference _inner = null;



        private IObjectReference _objRef_global__Microsoft_UI_Composition_IRectangleClip => _inner;


        public static new RectangleClip FromAbi(IntPtr thisPtr)
        {
            if (thisPtr == IntPtr.Zero) return null;
            return MarshalInspectable<RectangleClip>.FromAbi(thisPtr);
        }

        internal RectangleClip(IObjectReference objRef)
            : base(global::WinRT.DerivedComposed.Instance)

        {
            _inner = objRef.As(global::ABI.Microsoft.UI.Composition.IRectangleClipMethods.IID);

        }


        public static bool operator ==(RectangleClip x, RectangleClip y) => (x?.ThisPtr ?? IntPtr.Zero) == (y?.ThisPtr ?? IntPtr.Zero);
        public static bool operator !=(RectangleClip x, RectangleClip y) => !(x == y);
        public bool Equals(RectangleClip other) => this == other;
        public override bool Equals(object obj) => obj is RectangleClip that && this == that;
        public override int GetHashCode() => ThisPtr.GetHashCode();


        bool IWinRTObject.HasUnwrappableNativeObject => true;
        IObjectReference IWinRTObject.NativeObject => _inner;

        private struct InterfaceTag<I>{};


        public float Bottom
        {
            get => global::ABI.Microsoft.UI.Composition.IRectangleClipMethods.get_Bottom(_objRef_global__Microsoft_UI_Composition_IRectangleClip);
            set => global::ABI.Microsoft.UI.Composition.IRectangleClipMethods.set_Bottom(_objRef_global__Microsoft_UI_Composition_IRectangleClip, value);
        }

        public global::System.Numerics.Vector2 BottomLeftRadius
        {
            get => global::ABI.Microsoft.UI.Composition.IRectangleClipMethods.get_BottomLeftRadius(_objRef_global__Microsoft_UI_Composition_IRectangleClip);
            set => global::ABI.Microsoft.UI.Composition.IRectangleClipMethods.set_BottomLeftRadius(_objRef_global__Microsoft_UI_Composition_IRectangleClip, value);
        }

        public global::System.Numerics.Vector2 BottomRightRadius
        {
            get => global::ABI.Microsoft.UI.Composition.IRectangleClipMethods.get_BottomRightRadius(_objRef_global__Microsoft_UI_Composition_IRectangleClip);
            set => global::ABI.Microsoft.UI.Composition.IRectangleClipMethods.set_BottomRightRadius(_objRef_global__Microsoft_UI_Composition_IRectangleClip, value);
        }

        public float Left
        {
            get => global::ABI.Microsoft.UI.Composition.IRectangleClipMethods.get_Left(_objRef_global__Microsoft_UI_Composition_IRectangleClip);
            set => global::ABI.Microsoft.UI.Composition.IRectangleClipMethods.set_Left(_objRef_global__Microsoft_UI_Composition_IRectangleClip, value);
        }

        public float Right
        {
            get => global::ABI.Microsoft.UI.Composition.IRectangleClipMethods.get_Right(_objRef_global__Microsoft_UI_Composition_IRectangleClip);
            set => global::ABI.Microsoft.UI.Composition.IRectangleClipMethods.set_Right(_objRef_global__Microsoft_UI_Composition_IRectangleClip, value);
        }

        public float Top
        {
            get => global::ABI.Microsoft.UI.Composition.IRectangleClipMethods.get_Top(_objRef_global__Microsoft_UI_Composition_IRectangleClip);
            set => global::ABI.Microsoft.UI.Composition.IRectangleClipMethods.set_Top(_objRef_global__Microsoft_UI_Composition_IRectangleClip, value);
        }

        public global::System.Numerics.Vector2 TopLeftRadius
        {
            get => global::ABI.Microsoft.UI.Composition.IRectangleClipMethods.get_TopLeftRadius(_objRef_global__Microsoft_UI_Composition_IRectangleClip);
            set => global::ABI.Microsoft.UI.Composition.IRectangleClipMethods.set_TopLeftRadius(_objRef_global__Microsoft_UI_Composition_IRectangleClip, value);
        }

        public global::System.Numerics.Vector2 TopRightRadius
        {
            get => global::ABI.Microsoft.UI.Composition.IRectangleClipMethods.get_TopRightRadius(_objRef_global__Microsoft_UI_Composition_IRectangleClip);
            set => global::ABI.Microsoft.UI.Composition.IRectangleClipMethods.set_TopRightRadius(_objRef_global__Microsoft_UI_Composition_IRectangleClip, value);
        }

        protected override bool IsOverridableInterface(Guid iid) => base.IsOverridableInterface(iid);

        global::System.Runtime.InteropServices.CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(ref Guid iid, out IntPtr ppv)
        {
            ppv = IntPtr.Zero;
            if (IsOverridableInterface(iid) || global::WinRT.Interop.IID.IID_IInspectable == iid)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
            }

            if (((IWinRTObject)this).NativeObject.TryAs(iid, out ppv) >= 0)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.Handled;
            }

            return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
        }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI")]
    [global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Composition.RedirectVisual))]
    [global::ABI.Microsoft.UI.Composition.RedirectVisualRcwFactory]
    [global::WinRT.ProjectedRuntimeClass(typeof(IRedirectVisual))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.Foundation.WindowsAppSDKContract), 65536u)]
    public sealed class RedirectVisual : ContainerVisual, global::System.Runtime.InteropServices.ICustomQueryInterface, IWinRTObject, IEquatable<RedirectVisual>
    {
        private IntPtr ThisPtr => _inner == null ? (((IWinRTObject)this).NativeObject).ThisPtr : _inner.ThisPtr;

        private readonly IObjectReference _inner = null;



        private IObjectReference _objRef_global__Microsoft_UI_Composition_IRedirectVisual => _inner;


        public static new RedirectVisual FromAbi(IntPtr thisPtr)
        {
            if (thisPtr == IntPtr.Zero) return null;
            return MarshalInspectable<RedirectVisual>.FromAbi(thisPtr);
        }

        internal RedirectVisual(IObjectReference objRef)
            : base(global::WinRT.DerivedComposed.Instance)

        {
            _inner = objRef.As(global::ABI.Microsoft.UI.Composition.IRedirectVisualMethods.IID);

        }


        public static bool operator ==(RedirectVisual x, RedirectVisual y) => (x?.ThisPtr ?? IntPtr.Zero) == (y?.ThisPtr ?? IntPtr.Zero);
        public static bool operator !=(RedirectVisual x, RedirectVisual y) => !(x == y);
        public bool Equals(RedirectVisual other) => this == other;
        public override bool Equals(object obj) => obj is RedirectVisual that && this == that;
        public override int GetHashCode() => ThisPtr.GetHashCode();


        bool IWinRTObject.HasUnwrappableNativeObject => true;
        IObjectReference IWinRTObject.NativeObject => _inner;

        private struct InterfaceTag<I>{};


        public Visual Source
        {
            get => global::ABI.Microsoft.UI.Composition.IRedirectVisualMethods.get_Source(_objRef_global__Microsoft_UI_Composition_IRedirectVisual);
            set => global::ABI.Microsoft.UI.Composition.IRedirectVisualMethods.set_Source(_objRef_global__Microsoft_UI_Composition_IRedirectVisual, value);
        }

        protected override bool IsOverridableInterface(Guid iid) => base.IsOverridableInterface(iid);

        global::System.Runtime.InteropServices.CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(ref Guid iid, out IntPtr ppv)
        {
            ppv = IntPtr.Zero;
            if (IsOverridableInterface(iid) || global::WinRT.Interop.IID.IID_IInspectable == iid)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
            }

            if (((IWinRTObject)this).NativeObject.TryAs(iid, out ppv) >= 0)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.Handled;
            }

            return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
        }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI")]
    [global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Composition.RenderingDeviceReplacedEventArgs))]
    [global::ABI.Microsoft.UI.Composition.RenderingDeviceReplacedEventArgsRcwFactory]
    [global::WinRT.ProjectedRuntimeClass(typeof(IRenderingDeviceReplacedEventArgs))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.Foundation.WindowsAppSDKContract), 65536u)]
    public sealed class RenderingDeviceReplacedEventArgs : CompositionObject, global::System.Runtime.InteropServices.ICustomQueryInterface, IWinRTObject, IEquatable<RenderingDeviceReplacedEventArgs>
    {
        private IntPtr ThisPtr => _inner == null ? (((IWinRTObject)this).NativeObject).ThisPtr : _inner.ThisPtr;

        private readonly IObjectReference _inner = null;



        private IObjectReference _objRef_global__Microsoft_UI_Composition_IRenderingDeviceReplacedEventArgs => _inner;


        public static new RenderingDeviceReplacedEventArgs FromAbi(IntPtr thisPtr)
        {
            if (thisPtr == IntPtr.Zero) return null;
            return MarshalInspectable<RenderingDeviceReplacedEventArgs>.FromAbi(thisPtr);
        }

        internal RenderingDeviceReplacedEventArgs(IObjectReference objRef)
            : base(global::WinRT.DerivedComposed.Instance)

        {
            _inner = objRef.As(global::ABI.Microsoft.UI.Composition.IRenderingDeviceReplacedEventArgsMethods.IID);

        }


        public static bool operator ==(RenderingDeviceReplacedEventArgs x, RenderingDeviceReplacedEventArgs y) => (x?.ThisPtr ?? IntPtr.Zero) == (y?.ThisPtr ?? IntPtr.Zero);
        public static bool operator !=(RenderingDeviceReplacedEventArgs x, RenderingDeviceReplacedEventArgs y) => !(x == y);
        public bool Equals(RenderingDeviceReplacedEventArgs other) => this == other;
        public override bool Equals(object obj) => obj is RenderingDeviceReplacedEventArgs that && this == that;
        public override int GetHashCode() => ThisPtr.GetHashCode();


        bool IWinRTObject.HasUnwrappableNativeObject => true;
        IObjectReference IWinRTObject.NativeObject => _inner;

        private struct InterfaceTag<I>{};


        public CompositionGraphicsDevice GraphicsDevice => global::ABI.Microsoft.UI.Composition.IRenderingDeviceReplacedEventArgsMethods.get_GraphicsDevice(_objRef_global__Microsoft_UI_Composition_IRenderingDeviceReplacedEventArgs);

        protected override bool IsOverridableInterface(Guid iid) => base.IsOverridableInterface(iid);

        global::System.Runtime.InteropServices.CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(ref Guid iid, out IntPtr ppv)
        {
            ppv = IntPtr.Zero;
            if (IsOverridableInterface(iid) || global::WinRT.Interop.IID.IID_IInspectable == iid)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
            }

            if (((IWinRTObject)this).NativeObject.TryAs(iid, out ppv) >= 0)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.Handled;
            }

            return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
        }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI")]
    [global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Composition.ScalarKeyFrameAnimation))]
    [global::ABI.Microsoft.UI.Composition.ScalarKeyFrameAnimationRcwFactory]
    [global::WinRT.ProjectedRuntimeClass(typeof(IScalarKeyFrameAnimation))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.Foundation.WindowsAppSDKContract), 65536u)]
    public sealed class ScalarKeyFrameAnimation : KeyFrameAnimation, global::System.Runtime.InteropServices.ICustomQueryInterface, IWinRTObject, IEquatable<ScalarKeyFrameAnimation>
    {
        private IntPtr ThisPtr => _inner == null ? (((IWinRTObject)this).NativeObject).ThisPtr : _inner.ThisPtr;

        private readonly IObjectReference _inner = null;



        private IObjectReference _objRef_global__Microsoft_UI_Composition_IScalarKeyFrameAnimation => _inner;


        public static new ScalarKeyFrameAnimation FromAbi(IntPtr thisPtr)
        {
            if (thisPtr == IntPtr.Zero) return null;
            return MarshalInspectable<ScalarKeyFrameAnimation>.FromAbi(thisPtr);
        }

        internal ScalarKeyFrameAnimation(IObjectReference objRef)
            : base(global::WinRT.DerivedComposed.Instance)

        {
            _inner = objRef.As(global::ABI.Microsoft.UI.Composition.IScalarKeyFrameAnimationMethods.IID);

        }


        public static bool operator ==(ScalarKeyFrameAnimation x, ScalarKeyFrameAnimation y) => (x?.ThisPtr ?? IntPtr.Zero) == (y?.ThisPtr ?? IntPtr.Zero);
        public static bool operator !=(ScalarKeyFrameAnimation x, ScalarKeyFrameAnimation y) => !(x == y);
        public bool Equals(ScalarKeyFrameAnimation other) => this == other;
        public override bool Equals(object obj) => obj is ScalarKeyFrameAnimation that && this == that;
        public override int GetHashCode() => ThisPtr.GetHashCode();


        bool IWinRTObject.HasUnwrappableNativeObject => true;
        IObjectReference IWinRTObject.NativeObject => _inner;

        private struct InterfaceTag<I>{};


        public void InsertKeyFrame(float normalizedProgressKey, float value) => global::ABI.Microsoft.UI.Composition.IScalarKeyFrameAnimationMethods.InsertKeyFrame(_objRef_global__Microsoft_UI_Composition_IScalarKeyFrameAnimation, normalizedProgressKey, value);

        public void InsertKeyFrame(float normalizedProgressKey, float value, CompositionEasingFunction easingFunction) => global::ABI.Microsoft.UI.Composition.IScalarKeyFrameAnimationMethods.InsertKeyFrame(_objRef_global__Microsoft_UI_Composition_IScalarKeyFrameAnimation, normalizedProgressKey, value, easingFunction);

        protected override bool IsOverridableInterface(Guid iid) => base.IsOverridableInterface(iid);

        global::System.Runtime.InteropServices.CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(ref Guid iid, out IntPtr ppv)
        {
            ppv = IntPtr.Zero;
            if (IsOverridableInterface(iid) || global::WinRT.Interop.IID.IID_IInspectable == iid)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
            }

            if (((IWinRTObject)this).NativeObject.TryAs(iid, out ppv) >= 0)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.Handled;
            }

            return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
        }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI")]
    [global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Composition.ScalarNaturalMotionAnimation))]
    [global::ABI.Microsoft.UI.Composition.ScalarNaturalMotionAnimationRcwFactory]
    [global::WinRT.ProjectedRuntimeClass(typeof(IScalarNaturalMotionAnimation))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.Foundation.WindowsAppSDKContract), 65536u)]
    public class ScalarNaturalMotionAnimation : NaturalMotionAnimation, global::System.Runtime.InteropServices.ICustomQueryInterface, IWinRTObject, IEquatable<ScalarNaturalMotionAnimation>
    {
        private IntPtr ThisPtr => _inner == null ? (((IWinRTObject)this).NativeObject).ThisPtr : _inner.ThisPtr;

        private readonly IObjectReference _inner = null;




        private volatile IObjectReference ___objRef_global__Microsoft_UI_Composition_IScalarNaturalMotionAnimation;
        private IObjectReference Make___objRef_global__Microsoft_UI_Composition_IScalarNaturalMotionAnimation()
        {
            global::System.Threading.Interlocked.CompareExchange(ref ___objRef_global__Microsoft_UI_Composition_IScalarNaturalMotionAnimation, ((IWinRTObject)this).NativeObject.As<IUnknownVftbl>(global::ABI.Microsoft.UI.Composition.IScalarNaturalMotionAnimationMethods.IID), null);
            return ___objRef_global__Microsoft_UI_Composition_IScalarNaturalMotionAnimation;
        }
        private IObjectReference _objRef_global__Microsoft_UI_Composition_IScalarNaturalMotionAnimation => ___objRef_global__Microsoft_UI_Composition_IScalarNaturalMotionAnimation ?? Make___objRef_global__Microsoft_UI_Composition_IScalarNaturalMotionAnimation();



        private static class _IScalarNaturalMotionAnimationFactoryMethods
        {}

        private static volatile IObjectReference ___objRef_global__Microsoft_UI_Composition_IScalarNaturalMotionAnimationFactory;
        private static IObjectReference _objRef_global__Microsoft_UI_Composition_IScalarNaturalMotionAnimationFactory
        {
            get
            { 
                var factory = ___objRef_global__Microsoft_UI_Composition_IScalarNaturalMotionAnimationFactory;
                if (factory != null && factory.IsInCurrentContext)
                {
                    return factory;
                }
                else
                {
                    return ___objRef_global__Microsoft_UI_Composition_IScalarNaturalMotionAnimationFactory = ActivationFactory.Get("Microsoft.UI.Composition.ScalarNaturalMotionAnimation", global::ABI.Microsoft.UI.Composition.IScalarNaturalMotionAnimationFactoryMethods.IID);
                }
            }
        }

        public static new ScalarNaturalMotionAnimation FromAbi(IntPtr thisPtr)
        {
            if (thisPtr == IntPtr.Zero) return null;
            return MarshalInspectable<ScalarNaturalMotionAnimation>.FromAbi(thisPtr);
        }

        protected internal ScalarNaturalMotionAnimation(IObjectReference objRef)
            : base(global::WinRT.DerivedComposed.Instance)

        {
            _inner = objRef.As(global::ABI.Microsoft.UI.Composition.IScalarNaturalMotionAnimationMethods.IID);

        }


        public static bool operator ==(ScalarNaturalMotionAnimation x, ScalarNaturalMotionAnimation y) => (x?.ThisPtr ?? IntPtr.Zero) == (y?.ThisPtr ?? IntPtr.Zero);
        public static bool operator !=(ScalarNaturalMotionAnimation x, ScalarNaturalMotionAnimation y) => !(x == y);
        public bool Equals(ScalarNaturalMotionAnimation other) => this == other;
        public override bool Equals(object obj) => obj is ScalarNaturalMotionAnimation that && this == that;
        public override int GetHashCode() => ThisPtr.GetHashCode();


        protected ScalarNaturalMotionAnimation(global::WinRT.DerivedComposed _):base(_)
        {

        }
        bool IWinRTObject.HasUnwrappableNativeObject => this.GetType() == typeof(ScalarNaturalMotionAnimation);
        IObjectReference IWinRTObject.NativeObject => _inner;

        private struct InterfaceTag<I>{};


        public global::System.Nullable<float> FinalValue
        {
            get => global::ABI.Microsoft.UI.Composition.IScalarNaturalMotionAnimationMethods.get_FinalValue(_objRef_global__Microsoft_UI_Composition_IScalarNaturalMotionAnimation);
            set => global::ABI.Microsoft.UI.Composition.IScalarNaturalMotionAnimationMethods.set_FinalValue(_objRef_global__Microsoft_UI_Composition_IScalarNaturalMotionAnimation, value);
        }

        public global::System.Nullable<float> InitialValue
        {
            get => global::ABI.Microsoft.UI.Composition.IScalarNaturalMotionAnimationMethods.get_InitialValue(_objRef_global__Microsoft_UI_Composition_IScalarNaturalMotionAnimation);
            set => global::ABI.Microsoft.UI.Composition.IScalarNaturalMotionAnimationMethods.set_InitialValue(_objRef_global__Microsoft_UI_Composition_IScalarNaturalMotionAnimation, value);
        }

        public float InitialVelocity
        {
            get => global::ABI.Microsoft.UI.Composition.IScalarNaturalMotionAnimationMethods.get_InitialVelocity(_objRef_global__Microsoft_UI_Composition_IScalarNaturalMotionAnimation);
            set => global::ABI.Microsoft.UI.Composition.IScalarNaturalMotionAnimationMethods.set_InitialVelocity(_objRef_global__Microsoft_UI_Composition_IScalarNaturalMotionAnimation, value);
        }

        protected override bool IsOverridableInterface(Guid iid) => base.IsOverridableInterface(iid);

        global::System.Runtime.InteropServices.CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(ref Guid iid, out IntPtr ppv)
        {
            ppv = IntPtr.Zero;
            if (IsOverridableInterface(iid) || global::WinRT.Interop.IID.IID_IInspectable == iid)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
            }

            if (((IWinRTObject)this).NativeObject.TryAs(iid, out ppv) >= 0)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.Handled;
            }

            return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
        }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI")]
    [global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Composition.ShapeVisual))]
    [global::ABI.Microsoft.UI.Composition.ShapeVisualRcwFactory]
    [global::WinRT.ProjectedRuntimeClass(typeof(IShapeVisual))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.Foundation.WindowsAppSDKContract), 65536u)]
    public sealed class ShapeVisual : ContainerVisual, global::System.Runtime.InteropServices.ICustomQueryInterface, IWinRTObject, IEquatable<ShapeVisual>
    {
        private IntPtr ThisPtr => _inner == null ? (((IWinRTObject)this).NativeObject).ThisPtr : _inner.ThisPtr;

        private readonly IObjectReference _inner = null;



        private IObjectReference _objRef_global__Microsoft_UI_Composition_IShapeVisual => _inner;


        public static new ShapeVisual FromAbi(IntPtr thisPtr)
        {
            if (thisPtr == IntPtr.Zero) return null;
            return MarshalInspectable<ShapeVisual>.FromAbi(thisPtr);
        }

        internal ShapeVisual(IObjectReference objRef)
            : base(global::WinRT.DerivedComposed.Instance)

        {
            _inner = objRef.As(global::ABI.Microsoft.UI.Composition.IShapeVisualMethods.IID);

        }


        public static bool operator ==(ShapeVisual x, ShapeVisual y) => (x?.ThisPtr ?? IntPtr.Zero) == (y?.ThisPtr ?? IntPtr.Zero);
        public static bool operator !=(ShapeVisual x, ShapeVisual y) => !(x == y);
        public bool Equals(ShapeVisual other) => this == other;
        public override bool Equals(object obj) => obj is ShapeVisual that && this == that;
        public override int GetHashCode() => ThisPtr.GetHashCode();


        bool IWinRTObject.HasUnwrappableNativeObject => true;
        IObjectReference IWinRTObject.NativeObject => _inner;

        private struct InterfaceTag<I>{};


        public CompositionShapeCollection Shapes => global::ABI.Microsoft.UI.Composition.IShapeVisualMethods.get_Shapes(_objRef_global__Microsoft_UI_Composition_IShapeVisual);

        public CompositionViewBox ViewBox
        {
            get => global::ABI.Microsoft.UI.Composition.IShapeVisualMethods.get_ViewBox(_objRef_global__Microsoft_UI_Composition_IShapeVisual);
            set => global::ABI.Microsoft.UI.Composition.IShapeVisualMethods.set_ViewBox(_objRef_global__Microsoft_UI_Composition_IShapeVisual, value);
        }

        protected override bool IsOverridableInterface(Guid iid) => base.IsOverridableInterface(iid);

        global::System.Runtime.InteropServices.CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(ref Guid iid, out IntPtr ppv)
        {
            ppv = IntPtr.Zero;
            if (IsOverridableInterface(iid) || global::WinRT.Interop.IID.IID_IInspectable == iid)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
            }

            if (((IWinRTObject)this).NativeObject.TryAs(iid, out ppv) >= 0)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.Handled;
            }

            return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
        }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI")]
    [global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Composition.SineEasingFunction))]
    [global::ABI.Microsoft.UI.Composition.SineEasingFunctionRcwFactory]
    [global::WinRT.ProjectedRuntimeClass(typeof(ISineEasingFunction))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.Foundation.WindowsAppSDKContract), 65536u)]
    public sealed class SineEasingFunction : CompositionEasingFunction, global::System.Runtime.InteropServices.ICustomQueryInterface, IWinRTObject, IEquatable<SineEasingFunction>
    {
        private IntPtr ThisPtr => _inner == null ? (((IWinRTObject)this).NativeObject).ThisPtr : _inner.ThisPtr;

        private readonly IObjectReference _inner = null;



        private IObjectReference _objRef_global__Microsoft_UI_Composition_ISineEasingFunction => _inner;


        public static new SineEasingFunction FromAbi(IntPtr thisPtr)
        {
            if (thisPtr == IntPtr.Zero) return null;
            return MarshalInspectable<SineEasingFunction>.FromAbi(thisPtr);
        }

        internal SineEasingFunction(IObjectReference objRef)
            : base(global::WinRT.DerivedComposed.Instance)

        {
            _inner = objRef.As(global::ABI.Microsoft.UI.Composition.ISineEasingFunctionMethods.IID);

        }


        public static bool operator ==(SineEasingFunction x, SineEasingFunction y) => (x?.ThisPtr ?? IntPtr.Zero) == (y?.ThisPtr ?? IntPtr.Zero);
        public static bool operator !=(SineEasingFunction x, SineEasingFunction y) => !(x == y);
        public bool Equals(SineEasingFunction other) => this == other;
        public override bool Equals(object obj) => obj is SineEasingFunction that && this == that;
        public override int GetHashCode() => ThisPtr.GetHashCode();


        bool IWinRTObject.HasUnwrappableNativeObject => true;
        IObjectReference IWinRTObject.NativeObject => _inner;

        private struct InterfaceTag<I>{};


        public CompositionEasingFunctionMode Mode => global::ABI.Microsoft.UI.Composition.ISineEasingFunctionMethods.get_Mode(_objRef_global__Microsoft_UI_Composition_ISineEasingFunction);

        protected override bool IsOverridableInterface(Guid iid) => base.IsOverridableInterface(iid);

        global::System.Runtime.InteropServices.CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(ref Guid iid, out IntPtr ppv)
        {
            ppv = IntPtr.Zero;
            if (IsOverridableInterface(iid) || global::WinRT.Interop.IID.IID_IInspectable == iid)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
            }

            if (((IWinRTObject)this).NativeObject.TryAs(iid, out ppv) >= 0)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.Handled;
            }

            return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
        }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI")]
    [global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Composition.SpotLight))]
    [global::ABI.Microsoft.UI.Composition.SpotLightRcwFactory]
    [global::WinRT.ProjectedRuntimeClass(typeof(ISpotLight))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.Foundation.WindowsAppSDKContract), 65536u)]
    public sealed class SpotLight : CompositionLight, global::System.Runtime.InteropServices.ICustomQueryInterface, IWinRTObject, IEquatable<SpotLight>
    {
        private IntPtr ThisPtr => _inner == null ? (((IWinRTObject)this).NativeObject).ThisPtr : _inner.ThisPtr;

        private readonly IObjectReference _inner = null;



        private IObjectReference _objRef_global__Microsoft_UI_Composition_ISpotLight => _inner;
        private volatile IObjectReference ___objRef_global__Microsoft_UI_Composition_ISpotLight2;
        private IObjectReference Make___objRef_global__Microsoft_UI_Composition_ISpotLight2()
        {
            global::System.Threading.Interlocked.CompareExchange(ref ___objRef_global__Microsoft_UI_Composition_ISpotLight2, ((IWinRTObject)this).NativeObject.As<IUnknownVftbl>(global::ABI.Microsoft.UI.Composition.ISpotLight2Methods.IID), null);
            return ___objRef_global__Microsoft_UI_Composition_ISpotLight2;
        }
        private IObjectReference _objRef_global__Microsoft_UI_Composition_ISpotLight2 => ___objRef_global__Microsoft_UI_Composition_ISpotLight2 ?? Make___objRef_global__Microsoft_UI_Composition_ISpotLight2();

        private volatile IObjectReference ___objRef_global__Microsoft_UI_Composition_ISpotLight3;
        private IObjectReference Make___objRef_global__Microsoft_UI_Composition_ISpotLight3()
        {
            global::System.Threading.Interlocked.CompareExchange(ref ___objRef_global__Microsoft_UI_Composition_ISpotLight3, ((IWinRTObject)this).NativeObject.As<IUnknownVftbl>(global::ABI.Microsoft.UI.Composition.ISpotLight3Methods.IID), null);
            return ___objRef_global__Microsoft_UI_Composition_ISpotLight3;
        }
        private IObjectReference _objRef_global__Microsoft_UI_Composition_ISpotLight3 => ___objRef_global__Microsoft_UI_Composition_ISpotLight3 ?? Make___objRef_global__Microsoft_UI_Composition_ISpotLight3();



        public static new SpotLight FromAbi(IntPtr thisPtr)
        {
            if (thisPtr == IntPtr.Zero) return null;
            return MarshalInspectable<SpotLight>.FromAbi(thisPtr);
        }

        internal SpotLight(IObjectReference objRef)
            : base(global::WinRT.DerivedComposed.Instance)

        {
            _inner = objRef.As(global::ABI.Microsoft.UI.Composition.ISpotLightMethods.IID);

        }


        public static bool operator ==(SpotLight x, SpotLight y) => (x?.ThisPtr ?? IntPtr.Zero) == (y?.ThisPtr ?? IntPtr.Zero);
        public static bool operator !=(SpotLight x, SpotLight y) => !(x == y);
        public bool Equals(SpotLight other) => this == other;
        public override bool Equals(object obj) => obj is SpotLight that && this == that;
        public override int GetHashCode() => ThisPtr.GetHashCode();


        bool IWinRTObject.HasUnwrappableNativeObject => true;
        IObjectReference IWinRTObject.NativeObject => _inner;

        private struct InterfaceTag<I>{};


        public float ConstantAttenuation
        {
            get => global::ABI.Microsoft.UI.Composition.ISpotLightMethods.get_ConstantAttenuation(_objRef_global__Microsoft_UI_Composition_ISpotLight);
            set => global::ABI.Microsoft.UI.Composition.ISpotLightMethods.set_ConstantAttenuation(_objRef_global__Microsoft_UI_Composition_ISpotLight, value);
        }

        public Visual CoordinateSpace
        {
            get => global::ABI.Microsoft.UI.Composition.ISpotLightMethods.get_CoordinateSpace(_objRef_global__Microsoft_UI_Composition_ISpotLight);
            set => global::ABI.Microsoft.UI.Composition.ISpotLightMethods.set_CoordinateSpace(_objRef_global__Microsoft_UI_Composition_ISpotLight, value);
        }

        public global::System.Numerics.Vector3 Direction
        {
            get => global::ABI.Microsoft.UI.Composition.ISpotLightMethods.get_Direction(_objRef_global__Microsoft_UI_Composition_ISpotLight);
            set => global::ABI.Microsoft.UI.Composition.ISpotLightMethods.set_Direction(_objRef_global__Microsoft_UI_Composition_ISpotLight, value);
        }

        public float InnerConeAngle
        {
            get => global::ABI.Microsoft.UI.Composition.ISpotLightMethods.get_InnerConeAngle(_objRef_global__Microsoft_UI_Composition_ISpotLight);
            set => global::ABI.Microsoft.UI.Composition.ISpotLightMethods.set_InnerConeAngle(_objRef_global__Microsoft_UI_Composition_ISpotLight, value);
        }

        public float InnerConeAngleInDegrees
        {
            get => global::ABI.Microsoft.UI.Composition.ISpotLightMethods.get_InnerConeAngleInDegrees(_objRef_global__Microsoft_UI_Composition_ISpotLight);
            set => global::ABI.Microsoft.UI.Composition.ISpotLightMethods.set_InnerConeAngleInDegrees(_objRef_global__Microsoft_UI_Composition_ISpotLight, value);
        }

        public global::Windows.UI.Color InnerConeColor
        {
            get => global::ABI.Microsoft.UI.Composition.ISpotLightMethods.get_InnerConeColor(_objRef_global__Microsoft_UI_Composition_ISpotLight);
            set => global::ABI.Microsoft.UI.Composition.ISpotLightMethods.set_InnerConeColor(_objRef_global__Microsoft_UI_Composition_ISpotLight, value);
        }

        public float InnerConeIntensity
        {
            get => global::ABI.Microsoft.UI.Composition.ISpotLight2Methods.get_InnerConeIntensity(_objRef_global__Microsoft_UI_Composition_ISpotLight2);
            set => global::ABI.Microsoft.UI.Composition.ISpotLight2Methods.set_InnerConeIntensity(_objRef_global__Microsoft_UI_Composition_ISpotLight2, value);
        }

        public float LinearAttenuation
        {
            get => global::ABI.Microsoft.UI.Composition.ISpotLightMethods.get_LinearAttenuation(_objRef_global__Microsoft_UI_Composition_ISpotLight);
            set => global::ABI.Microsoft.UI.Composition.ISpotLightMethods.set_LinearAttenuation(_objRef_global__Microsoft_UI_Composition_ISpotLight, value);
        }

        public float MaxAttenuationCutoff
        {
            get => global::ABI.Microsoft.UI.Composition.ISpotLight3Methods.get_MaxAttenuationCutoff(_objRef_global__Microsoft_UI_Composition_ISpotLight3);
            set => global::ABI.Microsoft.UI.Composition.ISpotLight3Methods.set_MaxAttenuationCutoff(_objRef_global__Microsoft_UI_Composition_ISpotLight3, value);
        }

        public float MinAttenuationCutoff
        {
            get => global::ABI.Microsoft.UI.Composition.ISpotLight3Methods.get_MinAttenuationCutoff(_objRef_global__Microsoft_UI_Composition_ISpotLight3);
            set => global::ABI.Microsoft.UI.Composition.ISpotLight3Methods.set_MinAttenuationCutoff(_objRef_global__Microsoft_UI_Composition_ISpotLight3, value);
        }

        public global::System.Numerics.Vector3 Offset
        {
            get => global::ABI.Microsoft.UI.Composition.ISpotLightMethods.get_Offset(_objRef_global__Microsoft_UI_Composition_ISpotLight);
            set => global::ABI.Microsoft.UI.Composition.ISpotLightMethods.set_Offset(_objRef_global__Microsoft_UI_Composition_ISpotLight, value);
        }

        public float OuterConeAngle
        {
            get => global::ABI.Microsoft.UI.Composition.ISpotLightMethods.get_OuterConeAngle(_objRef_global__Microsoft_UI_Composition_ISpotLight);
            set => global::ABI.Microsoft.UI.Composition.ISpotLightMethods.set_OuterConeAngle(_objRef_global__Microsoft_UI_Composition_ISpotLight, value);
        }

        public float OuterConeAngleInDegrees
        {
            get => global::ABI.Microsoft.UI.Composition.ISpotLightMethods.get_OuterConeAngleInDegrees(_objRef_global__Microsoft_UI_Composition_ISpotLight);
            set => global::ABI.Microsoft.UI.Composition.ISpotLightMethods.set_OuterConeAngleInDegrees(_objRef_global__Microsoft_UI_Composition_ISpotLight, value);
        }

        public global::Windows.UI.Color OuterConeColor
        {
            get => global::ABI.Microsoft.UI.Composition.ISpotLightMethods.get_OuterConeColor(_objRef_global__Microsoft_UI_Composition_ISpotLight);
            set => global::ABI.Microsoft.UI.Composition.ISpotLightMethods.set_OuterConeColor(_objRef_global__Microsoft_UI_Composition_ISpotLight, value);
        }

        public float OuterConeIntensity
        {
            get => global::ABI.Microsoft.UI.Composition.ISpotLight2Methods.get_OuterConeIntensity(_objRef_global__Microsoft_UI_Composition_ISpotLight2);
            set => global::ABI.Microsoft.UI.Composition.ISpotLight2Methods.set_OuterConeIntensity(_objRef_global__Microsoft_UI_Composition_ISpotLight2, value);
        }

        public float QuadraticAttenuation
        {
            get => global::ABI.Microsoft.UI.Composition.ISpotLightMethods.get_QuadraticAttenuation(_objRef_global__Microsoft_UI_Composition_ISpotLight);
            set => global::ABI.Microsoft.UI.Composition.ISpotLightMethods.set_QuadraticAttenuation(_objRef_global__Microsoft_UI_Composition_ISpotLight, value);
        }

        protected override bool IsOverridableInterface(Guid iid) => base.IsOverridableInterface(iid);

        global::System.Runtime.InteropServices.CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(ref Guid iid, out IntPtr ppv)
        {
            ppv = IntPtr.Zero;
            if (IsOverridableInterface(iid) || global::WinRT.Interop.IID.IID_IInspectable == iid)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
            }

            if (((IWinRTObject)this).NativeObject.TryAs(iid, out ppv) >= 0)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.Handled;
            }

            return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
        }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI")]
    [global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Composition.SpringScalarNaturalMotionAnimation))]
    [global::ABI.Microsoft.UI.Composition.SpringScalarNaturalMotionAnimationRcwFactory]
    [global::WinRT.ProjectedRuntimeClass(typeof(ISpringScalarNaturalMotionAnimation))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.Foundation.WindowsAppSDKContract), 65536u)]
    public sealed class SpringScalarNaturalMotionAnimation : ScalarNaturalMotionAnimation, global::System.Runtime.InteropServices.ICustomQueryInterface, IWinRTObject, IEquatable<SpringScalarNaturalMotionAnimation>
    {
        private IntPtr ThisPtr => _inner == null ? (((IWinRTObject)this).NativeObject).ThisPtr : _inner.ThisPtr;

        private readonly IObjectReference _inner = null;



        private IObjectReference _objRef_global__Microsoft_UI_Composition_ISpringScalarNaturalMotionAnimation => _inner;


        public static new SpringScalarNaturalMotionAnimation FromAbi(IntPtr thisPtr)
        {
            if (thisPtr == IntPtr.Zero) return null;
            return MarshalInspectable<SpringScalarNaturalMotionAnimation>.FromAbi(thisPtr);
        }

        internal SpringScalarNaturalMotionAnimation(IObjectReference objRef)
            : base(global::WinRT.DerivedComposed.Instance)

        {
            _inner = objRef.As(global::ABI.Microsoft.UI.Composition.ISpringScalarNaturalMotionAnimationMethods.IID);

        }


        public static bool operator ==(SpringScalarNaturalMotionAnimation x, SpringScalarNaturalMotionAnimation y) => (x?.ThisPtr ?? IntPtr.Zero) == (y?.ThisPtr ?? IntPtr.Zero);
        public static bool operator !=(SpringScalarNaturalMotionAnimation x, SpringScalarNaturalMotionAnimation y) => !(x == y);
        public bool Equals(SpringScalarNaturalMotionAnimation other) => this == other;
        public override bool Equals(object obj) => obj is SpringScalarNaturalMotionAnimation that && this == that;
        public override int GetHashCode() => ThisPtr.GetHashCode();


        bool IWinRTObject.HasUnwrappableNativeObject => true;
        IObjectReference IWinRTObject.NativeObject => _inner;

        private struct InterfaceTag<I>{};


        public float DampingRatio
        {
            get => global::ABI.Microsoft.UI.Composition.ISpringScalarNaturalMotionAnimationMethods.get_DampingRatio(_objRef_global__Microsoft_UI_Composition_ISpringScalarNaturalMotionAnimation);
            set => global::ABI.Microsoft.UI.Composition.ISpringScalarNaturalMotionAnimationMethods.set_DampingRatio(_objRef_global__Microsoft_UI_Composition_ISpringScalarNaturalMotionAnimation, value);
        }

        public global::System.TimeSpan Period
        {
            get => global::ABI.Microsoft.UI.Composition.ISpringScalarNaturalMotionAnimationMethods.get_Period(_objRef_global__Microsoft_UI_Composition_ISpringScalarNaturalMotionAnimation);
            set => global::ABI.Microsoft.UI.Composition.ISpringScalarNaturalMotionAnimationMethods.set_Period(_objRef_global__Microsoft_UI_Composition_ISpringScalarNaturalMotionAnimation, value);
        }

        protected override bool IsOverridableInterface(Guid iid) => base.IsOverridableInterface(iid);

        global::System.Runtime.InteropServices.CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(ref Guid iid, out IntPtr ppv)
        {
            ppv = IntPtr.Zero;
            if (IsOverridableInterface(iid) || global::WinRT.Interop.IID.IID_IInspectable == iid)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
            }

            if (((IWinRTObject)this).NativeObject.TryAs(iid, out ppv) >= 0)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.Handled;
            }

            return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
        }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI")]
    [global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Composition.SpringVector2NaturalMotionAnimation))]
    [global::ABI.Microsoft.UI.Composition.SpringVector2NaturalMotionAnimationRcwFactory]
    [global::WinRT.ProjectedRuntimeClass(typeof(ISpringVector2NaturalMotionAnimation))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.Foundation.WindowsAppSDKContract), 65536u)]
    public sealed class SpringVector2NaturalMotionAnimation : Vector2NaturalMotionAnimation, global::System.Runtime.InteropServices.ICustomQueryInterface, IWinRTObject, IEquatable<SpringVector2NaturalMotionAnimation>
    {
        private IntPtr ThisPtr => _inner == null ? (((IWinRTObject)this).NativeObject).ThisPtr : _inner.ThisPtr;

        private readonly IObjectReference _inner = null;



        private IObjectReference _objRef_global__Microsoft_UI_Composition_ISpringVector2NaturalMotionAnimation => _inner;


        public static new SpringVector2NaturalMotionAnimation FromAbi(IntPtr thisPtr)
        {
            if (thisPtr == IntPtr.Zero) return null;
            return MarshalInspectable<SpringVector2NaturalMotionAnimation>.FromAbi(thisPtr);
        }

        internal SpringVector2NaturalMotionAnimation(IObjectReference objRef)
            : base(global::WinRT.DerivedComposed.Instance)

        {
            _inner = objRef.As(global::ABI.Microsoft.UI.Composition.ISpringVector2NaturalMotionAnimationMethods.IID);

        }


        public static bool operator ==(SpringVector2NaturalMotionAnimation x, SpringVector2NaturalMotionAnimation y) => (x?.ThisPtr ?? IntPtr.Zero) == (y?.ThisPtr ?? IntPtr.Zero);
        public static bool operator !=(SpringVector2NaturalMotionAnimation x, SpringVector2NaturalMotionAnimation y) => !(x == y);
        public bool Equals(SpringVector2NaturalMotionAnimation other) => this == other;
        public override bool Equals(object obj) => obj is SpringVector2NaturalMotionAnimation that && this == that;
        public override int GetHashCode() => ThisPtr.GetHashCode();


        bool IWinRTObject.HasUnwrappableNativeObject => true;
        IObjectReference IWinRTObject.NativeObject => _inner;

        private struct InterfaceTag<I>{};


        public float DampingRatio
        {
            get => global::ABI.Microsoft.UI.Composition.ISpringVector2NaturalMotionAnimationMethods.get_DampingRatio(_objRef_global__Microsoft_UI_Composition_ISpringVector2NaturalMotionAnimation);
            set => global::ABI.Microsoft.UI.Composition.ISpringVector2NaturalMotionAnimationMethods.set_DampingRatio(_objRef_global__Microsoft_UI_Composition_ISpringVector2NaturalMotionAnimation, value);
        }

        public global::System.TimeSpan Period
        {
            get => global::ABI.Microsoft.UI.Composition.ISpringVector2NaturalMotionAnimationMethods.get_Period(_objRef_global__Microsoft_UI_Composition_ISpringVector2NaturalMotionAnimation);
            set => global::ABI.Microsoft.UI.Composition.ISpringVector2NaturalMotionAnimationMethods.set_Period(_objRef_global__Microsoft_UI_Composition_ISpringVector2NaturalMotionAnimation, value);
        }

        protected override bool IsOverridableInterface(Guid iid) => base.IsOverridableInterface(iid);

        global::System.Runtime.InteropServices.CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(ref Guid iid, out IntPtr ppv)
        {
            ppv = IntPtr.Zero;
            if (IsOverridableInterface(iid) || global::WinRT.Interop.IID.IID_IInspectable == iid)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
            }

            if (((IWinRTObject)this).NativeObject.TryAs(iid, out ppv) >= 0)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.Handled;
            }

            return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
        }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI")]
    [global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Composition.SpringVector3NaturalMotionAnimation))]
    [global::ABI.Microsoft.UI.Composition.SpringVector3NaturalMotionAnimationRcwFactory]
    [global::WinRT.ProjectedRuntimeClass(typeof(ISpringVector3NaturalMotionAnimation))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.Foundation.WindowsAppSDKContract), 65536u)]
    public sealed class SpringVector3NaturalMotionAnimation : Vector3NaturalMotionAnimation, global::System.Runtime.InteropServices.ICustomQueryInterface, IWinRTObject, IEquatable<SpringVector3NaturalMotionAnimation>
    {
        private IntPtr ThisPtr => _inner == null ? (((IWinRTObject)this).NativeObject).ThisPtr : _inner.ThisPtr;

        private readonly IObjectReference _inner = null;



        private IObjectReference _objRef_global__Microsoft_UI_Composition_ISpringVector3NaturalMotionAnimation => _inner;


        public static new SpringVector3NaturalMotionAnimation FromAbi(IntPtr thisPtr)
        {
            if (thisPtr == IntPtr.Zero) return null;
            return MarshalInspectable<SpringVector3NaturalMotionAnimation>.FromAbi(thisPtr);
        }

        internal SpringVector3NaturalMotionAnimation(IObjectReference objRef)
            : base(global::WinRT.DerivedComposed.Instance)

        {
            _inner = objRef.As(global::ABI.Microsoft.UI.Composition.ISpringVector3NaturalMotionAnimationMethods.IID);

        }


        public static bool operator ==(SpringVector3NaturalMotionAnimation x, SpringVector3NaturalMotionAnimation y) => (x?.ThisPtr ?? IntPtr.Zero) == (y?.ThisPtr ?? IntPtr.Zero);
        public static bool operator !=(SpringVector3NaturalMotionAnimation x, SpringVector3NaturalMotionAnimation y) => !(x == y);
        public bool Equals(SpringVector3NaturalMotionAnimation other) => this == other;
        public override bool Equals(object obj) => obj is SpringVector3NaturalMotionAnimation that && this == that;
        public override int GetHashCode() => ThisPtr.GetHashCode();


        bool IWinRTObject.HasUnwrappableNativeObject => true;
        IObjectReference IWinRTObject.NativeObject => _inner;

        private struct InterfaceTag<I>{};


        public float DampingRatio
        {
            get => global::ABI.Microsoft.UI.Composition.ISpringVector3NaturalMotionAnimationMethods.get_DampingRatio(_objRef_global__Microsoft_UI_Composition_ISpringVector3NaturalMotionAnimation);
            set => global::ABI.Microsoft.UI.Composition.ISpringVector3NaturalMotionAnimationMethods.set_DampingRatio(_objRef_global__Microsoft_UI_Composition_ISpringVector3NaturalMotionAnimation, value);
        }

        public global::System.TimeSpan Period
        {
            get => global::ABI.Microsoft.UI.Composition.ISpringVector3NaturalMotionAnimationMethods.get_Period(_objRef_global__Microsoft_UI_Composition_ISpringVector3NaturalMotionAnimation);
            set => global::ABI.Microsoft.UI.Composition.ISpringVector3NaturalMotionAnimationMethods.set_Period(_objRef_global__Microsoft_UI_Composition_ISpringVector3NaturalMotionAnimation, value);
        }

        protected override bool IsOverridableInterface(Guid iid) => base.IsOverridableInterface(iid);

        global::System.Runtime.InteropServices.CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(ref Guid iid, out IntPtr ppv)
        {
            ppv = IntPtr.Zero;
            if (IsOverridableInterface(iid) || global::WinRT.Interop.IID.IID_IInspectable == iid)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
            }

            if (((IWinRTObject)this).NativeObject.TryAs(iid, out ppv) >= 0)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.Handled;
            }

            return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
        }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI")]
    [global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Composition.SpriteVisual))]
    [global::ABI.Microsoft.UI.Composition.SpriteVisualRcwFactory]
    [global::WinRT.ProjectedRuntimeClass(typeof(ISpriteVisual))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.Foundation.WindowsAppSDKContract), 65536u)]
    public sealed class SpriteVisual : ContainerVisual, global::System.Runtime.InteropServices.ICustomQueryInterface, IWinRTObject, IEquatable<SpriteVisual>
    {
        private IntPtr ThisPtr => _inner == null ? (((IWinRTObject)this).NativeObject).ThisPtr : _inner.ThisPtr;

        private readonly IObjectReference _inner = null;



        private IObjectReference _objRef_global__Microsoft_UI_Composition_ISpriteVisual => _inner;
        private volatile IObjectReference ___objRef_global__Microsoft_UI_Composition_ISpriteVisual2;
        private IObjectReference Make___objRef_global__Microsoft_UI_Composition_ISpriteVisual2()
        {
            global::System.Threading.Interlocked.CompareExchange(ref ___objRef_global__Microsoft_UI_Composition_ISpriteVisual2, ((IWinRTObject)this).NativeObject.As<IUnknownVftbl>(global::ABI.Microsoft.UI.Composition.ISpriteVisual2Methods.IID), null);
            return ___objRef_global__Microsoft_UI_Composition_ISpriteVisual2;
        }
        private IObjectReference _objRef_global__Microsoft_UI_Composition_ISpriteVisual2 => ___objRef_global__Microsoft_UI_Composition_ISpriteVisual2 ?? Make___objRef_global__Microsoft_UI_Composition_ISpriteVisual2();



        public static new SpriteVisual FromAbi(IntPtr thisPtr)
        {
            if (thisPtr == IntPtr.Zero) return null;
            return MarshalInspectable<SpriteVisual>.FromAbi(thisPtr);
        }

        internal SpriteVisual(IObjectReference objRef)
            : base(global::WinRT.DerivedComposed.Instance)

        {
            _inner = objRef.As(global::ABI.Microsoft.UI.Composition.ISpriteVisualMethods.IID);

        }


        public static bool operator ==(SpriteVisual x, SpriteVisual y) => (x?.ThisPtr ?? IntPtr.Zero) == (y?.ThisPtr ?? IntPtr.Zero);
        public static bool operator !=(SpriteVisual x, SpriteVisual y) => !(x == y);
        public bool Equals(SpriteVisual other) => this == other;
        public override bool Equals(object obj) => obj is SpriteVisual that && this == that;
        public override int GetHashCode() => ThisPtr.GetHashCode();


        bool IWinRTObject.HasUnwrappableNativeObject => true;
        IObjectReference IWinRTObject.NativeObject => _inner;

        private struct InterfaceTag<I>{};


        public CompositionBrush Brush
        {
            get => global::ABI.Microsoft.UI.Composition.ISpriteVisualMethods.get_Brush(_objRef_global__Microsoft_UI_Composition_ISpriteVisual);
            set => global::ABI.Microsoft.UI.Composition.ISpriteVisualMethods.set_Brush(_objRef_global__Microsoft_UI_Composition_ISpriteVisual, value);
        }

        public CompositionShadow Shadow
        {
            get => global::ABI.Microsoft.UI.Composition.ISpriteVisual2Methods.get_Shadow(_objRef_global__Microsoft_UI_Composition_ISpriteVisual2);
            set => global::ABI.Microsoft.UI.Composition.ISpriteVisual2Methods.set_Shadow(_objRef_global__Microsoft_UI_Composition_ISpriteVisual2, value);
        }

        protected override bool IsOverridableInterface(Guid iid) => base.IsOverridableInterface(iid);

        global::System.Runtime.InteropServices.CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(ref Guid iid, out IntPtr ppv)
        {
            ppv = IntPtr.Zero;
            if (IsOverridableInterface(iid) || global::WinRT.Interop.IID.IID_IInspectable == iid)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
            }

            if (((IWinRTObject)this).NativeObject.TryAs(iid, out ppv) >= 0)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.Handled;
            }

            return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
        }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI")]
    [global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Composition.StepEasingFunction))]
    [global::ABI.Microsoft.UI.Composition.StepEasingFunctionRcwFactory]
    [global::WinRT.ProjectedRuntimeClass(typeof(IStepEasingFunction))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.Foundation.WindowsAppSDKContract), 65536u)]
    public sealed class StepEasingFunction : CompositionEasingFunction, global::System.Runtime.InteropServices.ICustomQueryInterface, IWinRTObject, IEquatable<StepEasingFunction>
    {
        private IntPtr ThisPtr => _inner == null ? (((IWinRTObject)this).NativeObject).ThisPtr : _inner.ThisPtr;

        private readonly IObjectReference _inner = null;



        private IObjectReference _objRef_global__Microsoft_UI_Composition_IStepEasingFunction => _inner;


        public static new StepEasingFunction FromAbi(IntPtr thisPtr)
        {
            if (thisPtr == IntPtr.Zero) return null;
            return MarshalInspectable<StepEasingFunction>.FromAbi(thisPtr);
        }

        internal StepEasingFunction(IObjectReference objRef)
            : base(global::WinRT.DerivedComposed.Instance)

        {
            _inner = objRef.As(global::ABI.Microsoft.UI.Composition.IStepEasingFunctionMethods.IID);

        }


        public static bool operator ==(StepEasingFunction x, StepEasingFunction y) => (x?.ThisPtr ?? IntPtr.Zero) == (y?.ThisPtr ?? IntPtr.Zero);
        public static bool operator !=(StepEasingFunction x, StepEasingFunction y) => !(x == y);
        public bool Equals(StepEasingFunction other) => this == other;
        public override bool Equals(object obj) => obj is StepEasingFunction that && this == that;
        public override int GetHashCode() => ThisPtr.GetHashCode();


        bool IWinRTObject.HasUnwrappableNativeObject => true;
        IObjectReference IWinRTObject.NativeObject => _inner;

        private struct InterfaceTag<I>{};


        public int FinalStep
        {
            get => global::ABI.Microsoft.UI.Composition.IStepEasingFunctionMethods.get_FinalStep(_objRef_global__Microsoft_UI_Composition_IStepEasingFunction);
            set => global::ABI.Microsoft.UI.Composition.IStepEasingFunctionMethods.set_FinalStep(_objRef_global__Microsoft_UI_Composition_IStepEasingFunction, value);
        }

        public int InitialStep
        {
            get => global::ABI.Microsoft.UI.Composition.IStepEasingFunctionMethods.get_InitialStep(_objRef_global__Microsoft_UI_Composition_IStepEasingFunction);
            set => global::ABI.Microsoft.UI.Composition.IStepEasingFunctionMethods.set_InitialStep(_objRef_global__Microsoft_UI_Composition_IStepEasingFunction, value);
        }

        public bool IsFinalStepSingleFrame
        {
            get => global::ABI.Microsoft.UI.Composition.IStepEasingFunctionMethods.get_IsFinalStepSingleFrame(_objRef_global__Microsoft_UI_Composition_IStepEasingFunction);
            set => global::ABI.Microsoft.UI.Composition.IStepEasingFunctionMethods.set_IsFinalStepSingleFrame(_objRef_global__Microsoft_UI_Composition_IStepEasingFunction, value);
        }

        public bool IsInitialStepSingleFrame
        {
            get => global::ABI.Microsoft.UI.Composition.IStepEasingFunctionMethods.get_IsInitialStepSingleFrame(_objRef_global__Microsoft_UI_Composition_IStepEasingFunction);
            set => global::ABI.Microsoft.UI.Composition.IStepEasingFunctionMethods.set_IsInitialStepSingleFrame(_objRef_global__Microsoft_UI_Composition_IStepEasingFunction, value);
        }

        public int StepCount
        {
            get => global::ABI.Microsoft.UI.Composition.IStepEasingFunctionMethods.get_StepCount(_objRef_global__Microsoft_UI_Composition_IStepEasingFunction);
            set => global::ABI.Microsoft.UI.Composition.IStepEasingFunctionMethods.set_StepCount(_objRef_global__Microsoft_UI_Composition_IStepEasingFunction, value);
        }

        protected override bool IsOverridableInterface(Guid iid) => base.IsOverridableInterface(iid);

        global::System.Runtime.InteropServices.CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(ref Guid iid, out IntPtr ppv)
        {
            ppv = IntPtr.Zero;
            if (IsOverridableInterface(iid) || global::WinRT.Interop.IID.IID_IInspectable == iid)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
            }

            if (((IWinRTObject)this).NativeObject.TryAs(iid, out ppv) >= 0)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.Handled;
            }

            return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
        }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI")]
    [global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Composition.Vector2KeyFrameAnimation))]
    [global::ABI.Microsoft.UI.Composition.Vector2KeyFrameAnimationRcwFactory]
    [global::WinRT.ProjectedRuntimeClass(typeof(IVector2KeyFrameAnimation))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.Foundation.WindowsAppSDKContract), 65536u)]
    public sealed class Vector2KeyFrameAnimation : KeyFrameAnimation, global::System.Runtime.InteropServices.ICustomQueryInterface, IWinRTObject, IEquatable<Vector2KeyFrameAnimation>
    {
        private IntPtr ThisPtr => _inner == null ? (((IWinRTObject)this).NativeObject).ThisPtr : _inner.ThisPtr;

        private readonly IObjectReference _inner = null;



        private IObjectReference _objRef_global__Microsoft_UI_Composition_IVector2KeyFrameAnimation => _inner;


        public static new Vector2KeyFrameAnimation FromAbi(IntPtr thisPtr)
        {
            if (thisPtr == IntPtr.Zero) return null;
            return MarshalInspectable<Vector2KeyFrameAnimation>.FromAbi(thisPtr);
        }

        internal Vector2KeyFrameAnimation(IObjectReference objRef)
            : base(global::WinRT.DerivedComposed.Instance)

        {
            _inner = objRef.As(global::ABI.Microsoft.UI.Composition.IVector2KeyFrameAnimationMethods.IID);

        }


        public static bool operator ==(Vector2KeyFrameAnimation x, Vector2KeyFrameAnimation y) => (x?.ThisPtr ?? IntPtr.Zero) == (y?.ThisPtr ?? IntPtr.Zero);
        public static bool operator !=(Vector2KeyFrameAnimation x, Vector2KeyFrameAnimation y) => !(x == y);
        public bool Equals(Vector2KeyFrameAnimation other) => this == other;
        public override bool Equals(object obj) => obj is Vector2KeyFrameAnimation that && this == that;
        public override int GetHashCode() => ThisPtr.GetHashCode();


        bool IWinRTObject.HasUnwrappableNativeObject => true;
        IObjectReference IWinRTObject.NativeObject => _inner;

        private struct InterfaceTag<I>{};


        public void InsertKeyFrame(float normalizedProgressKey, global::System.Numerics.Vector2 value) => global::ABI.Microsoft.UI.Composition.IVector2KeyFrameAnimationMethods.InsertKeyFrame(_objRef_global__Microsoft_UI_Composition_IVector2KeyFrameAnimation, normalizedProgressKey, value);

        public void InsertKeyFrame(float normalizedProgressKey, global::System.Numerics.Vector2 value, CompositionEasingFunction easingFunction) => global::ABI.Microsoft.UI.Composition.IVector2KeyFrameAnimationMethods.InsertKeyFrame(_objRef_global__Microsoft_UI_Composition_IVector2KeyFrameAnimation, normalizedProgressKey, value, easingFunction);

        protected override bool IsOverridableInterface(Guid iid) => base.IsOverridableInterface(iid);

        global::System.Runtime.InteropServices.CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(ref Guid iid, out IntPtr ppv)
        {
            ppv = IntPtr.Zero;
            if (IsOverridableInterface(iid) || global::WinRT.Interop.IID.IID_IInspectable == iid)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
            }

            if (((IWinRTObject)this).NativeObject.TryAs(iid, out ppv) >= 0)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.Handled;
            }

            return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
        }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI")]
    [global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Composition.Vector2NaturalMotionAnimation))]
    [global::ABI.Microsoft.UI.Composition.Vector2NaturalMotionAnimationRcwFactory]
    [global::WinRT.ProjectedRuntimeClass(typeof(IVector2NaturalMotionAnimation))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.Foundation.WindowsAppSDKContract), 65536u)]
    public class Vector2NaturalMotionAnimation : NaturalMotionAnimation, global::System.Runtime.InteropServices.ICustomQueryInterface, IWinRTObject, IEquatable<Vector2NaturalMotionAnimation>
    {
        private IntPtr ThisPtr => _inner == null ? (((IWinRTObject)this).NativeObject).ThisPtr : _inner.ThisPtr;

        private readonly IObjectReference _inner = null;




        private volatile IObjectReference ___objRef_global__Microsoft_UI_Composition_IVector2NaturalMotionAnimation;
        private IObjectReference Make___objRef_global__Microsoft_UI_Composition_IVector2NaturalMotionAnimation()
        {
            global::System.Threading.Interlocked.CompareExchange(ref ___objRef_global__Microsoft_UI_Composition_IVector2NaturalMotionAnimation, ((IWinRTObject)this).NativeObject.As<IUnknownVftbl>(global::ABI.Microsoft.UI.Composition.IVector2NaturalMotionAnimationMethods.IID), null);
            return ___objRef_global__Microsoft_UI_Composition_IVector2NaturalMotionAnimation;
        }
        private IObjectReference _objRef_global__Microsoft_UI_Composition_IVector2NaturalMotionAnimation => ___objRef_global__Microsoft_UI_Composition_IVector2NaturalMotionAnimation ?? Make___objRef_global__Microsoft_UI_Composition_IVector2NaturalMotionAnimation();



        private static class _IVector2NaturalMotionAnimationFactoryMethods
        {}

        private static volatile IObjectReference ___objRef_global__Microsoft_UI_Composition_IVector2NaturalMotionAnimationFactory;
        private static IObjectReference _objRef_global__Microsoft_UI_Composition_IVector2NaturalMotionAnimationFactory
        {
            get
            { 
                var factory = ___objRef_global__Microsoft_UI_Composition_IVector2NaturalMotionAnimationFactory;
                if (factory != null && factory.IsInCurrentContext)
                {
                    return factory;
                }
                else
                {
                    return ___objRef_global__Microsoft_UI_Composition_IVector2NaturalMotionAnimationFactory = ActivationFactory.Get("Microsoft.UI.Composition.Vector2NaturalMotionAnimation", global::ABI.Microsoft.UI.Composition.IVector2NaturalMotionAnimationFactoryMethods.IID);
                }
            }
        }

        public static new Vector2NaturalMotionAnimation FromAbi(IntPtr thisPtr)
        {
            if (thisPtr == IntPtr.Zero) return null;
            return MarshalInspectable<Vector2NaturalMotionAnimation>.FromAbi(thisPtr);
        }

        protected internal Vector2NaturalMotionAnimation(IObjectReference objRef)
            : base(global::WinRT.DerivedComposed.Instance)

        {
            _inner = objRef.As(global::ABI.Microsoft.UI.Composition.IVector2NaturalMotionAnimationMethods.IID);

        }


        public static bool operator ==(Vector2NaturalMotionAnimation x, Vector2NaturalMotionAnimation y) => (x?.ThisPtr ?? IntPtr.Zero) == (y?.ThisPtr ?? IntPtr.Zero);
        public static bool operator !=(Vector2NaturalMotionAnimation x, Vector2NaturalMotionAnimation y) => !(x == y);
        public bool Equals(Vector2NaturalMotionAnimation other) => this == other;
        public override bool Equals(object obj) => obj is Vector2NaturalMotionAnimation that && this == that;
        public override int GetHashCode() => ThisPtr.GetHashCode();


        protected Vector2NaturalMotionAnimation(global::WinRT.DerivedComposed _):base(_)
        {

        }
        bool IWinRTObject.HasUnwrappableNativeObject => this.GetType() == typeof(Vector2NaturalMotionAnimation);
        IObjectReference IWinRTObject.NativeObject => _inner;

        private struct InterfaceTag<I>{};


        public global::System.Nullable<global::System.Numerics.Vector2> FinalValue
        {
            get => global::ABI.Microsoft.UI.Composition.IVector2NaturalMotionAnimationMethods.get_FinalValue(_objRef_global__Microsoft_UI_Composition_IVector2NaturalMotionAnimation);
            set => global::ABI.Microsoft.UI.Composition.IVector2NaturalMotionAnimationMethods.set_FinalValue(_objRef_global__Microsoft_UI_Composition_IVector2NaturalMotionAnimation, value);
        }

        public global::System.Nullable<global::System.Numerics.Vector2> InitialValue
        {
            get => global::ABI.Microsoft.UI.Composition.IVector2NaturalMotionAnimationMethods.get_InitialValue(_objRef_global__Microsoft_UI_Composition_IVector2NaturalMotionAnimation);
            set => global::ABI.Microsoft.UI.Composition.IVector2NaturalMotionAnimationMethods.set_InitialValue(_objRef_global__Microsoft_UI_Composition_IVector2NaturalMotionAnimation, value);
        }

        public global::System.Numerics.Vector2 InitialVelocity
        {
            get => global::ABI.Microsoft.UI.Composition.IVector2NaturalMotionAnimationMethods.get_InitialVelocity(_objRef_global__Microsoft_UI_Composition_IVector2NaturalMotionAnimation);
            set => global::ABI.Microsoft.UI.Composition.IVector2NaturalMotionAnimationMethods.set_InitialVelocity(_objRef_global__Microsoft_UI_Composition_IVector2NaturalMotionAnimation, value);
        }

        protected override bool IsOverridableInterface(Guid iid) => base.IsOverridableInterface(iid);

        global::System.Runtime.InteropServices.CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(ref Guid iid, out IntPtr ppv)
        {
            ppv = IntPtr.Zero;
            if (IsOverridableInterface(iid) || global::WinRT.Interop.IID.IID_IInspectable == iid)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
            }

            if (((IWinRTObject)this).NativeObject.TryAs(iid, out ppv) >= 0)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.Handled;
            }

            return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
        }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI")]
    [global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Composition.Vector3KeyFrameAnimation))]
    [global::ABI.Microsoft.UI.Composition.Vector3KeyFrameAnimationRcwFactory]
    [global::WinRT.ProjectedRuntimeClass(typeof(IVector3KeyFrameAnimation))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.Foundation.WindowsAppSDKContract), 65536u)]
    public sealed class Vector3KeyFrameAnimation : KeyFrameAnimation, global::System.Runtime.InteropServices.ICustomQueryInterface, IWinRTObject, IEquatable<Vector3KeyFrameAnimation>
    {
        private IntPtr ThisPtr => _inner == null ? (((IWinRTObject)this).NativeObject).ThisPtr : _inner.ThisPtr;

        private readonly IObjectReference _inner = null;



        private IObjectReference _objRef_global__Microsoft_UI_Composition_IVector3KeyFrameAnimation => _inner;


        public static new Vector3KeyFrameAnimation FromAbi(IntPtr thisPtr)
        {
            if (thisPtr == IntPtr.Zero) return null;
            return MarshalInspectable<Vector3KeyFrameAnimation>.FromAbi(thisPtr);
        }

        internal Vector3KeyFrameAnimation(IObjectReference objRef)
            : base(global::WinRT.DerivedComposed.Instance)

        {
            _inner = objRef.As(global::ABI.Microsoft.UI.Composition.IVector3KeyFrameAnimationMethods.IID);

        }


        public static bool operator ==(Vector3KeyFrameAnimation x, Vector3KeyFrameAnimation y) => (x?.ThisPtr ?? IntPtr.Zero) == (y?.ThisPtr ?? IntPtr.Zero);
        public static bool operator !=(Vector3KeyFrameAnimation x, Vector3KeyFrameAnimation y) => !(x == y);
        public bool Equals(Vector3KeyFrameAnimation other) => this == other;
        public override bool Equals(object obj) => obj is Vector3KeyFrameAnimation that && this == that;
        public override int GetHashCode() => ThisPtr.GetHashCode();


        bool IWinRTObject.HasUnwrappableNativeObject => true;
        IObjectReference IWinRTObject.NativeObject => _inner;

        private struct InterfaceTag<I>{};


        public void InsertKeyFrame(float normalizedProgressKey, global::System.Numerics.Vector3 value) => global::ABI.Microsoft.UI.Composition.IVector3KeyFrameAnimationMethods.InsertKeyFrame(_objRef_global__Microsoft_UI_Composition_IVector3KeyFrameAnimation, normalizedProgressKey, value);

        public void InsertKeyFrame(float normalizedProgressKey, global::System.Numerics.Vector3 value, CompositionEasingFunction easingFunction) => global::ABI.Microsoft.UI.Composition.IVector3KeyFrameAnimationMethods.InsertKeyFrame(_objRef_global__Microsoft_UI_Composition_IVector3KeyFrameAnimation, normalizedProgressKey, value, easingFunction);

        protected override bool IsOverridableInterface(Guid iid) => base.IsOverridableInterface(iid);

        global::System.Runtime.InteropServices.CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(ref Guid iid, out IntPtr ppv)
        {
            ppv = IntPtr.Zero;
            if (IsOverridableInterface(iid) || global::WinRT.Interop.IID.IID_IInspectable == iid)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
            }

            if (((IWinRTObject)this).NativeObject.TryAs(iid, out ppv) >= 0)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.Handled;
            }

            return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
        }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI")]
    [global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Composition.Vector3NaturalMotionAnimation))]
    [global::ABI.Microsoft.UI.Composition.Vector3NaturalMotionAnimationRcwFactory]
    [global::WinRT.ProjectedRuntimeClass(typeof(IVector3NaturalMotionAnimation))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.Foundation.WindowsAppSDKContract), 65536u)]
    public class Vector3NaturalMotionAnimation : NaturalMotionAnimation, global::System.Runtime.InteropServices.ICustomQueryInterface, IWinRTObject, IEquatable<Vector3NaturalMotionAnimation>
    {
        private IntPtr ThisPtr => _inner == null ? (((IWinRTObject)this).NativeObject).ThisPtr : _inner.ThisPtr;

        private readonly IObjectReference _inner = null;




        private volatile IObjectReference ___objRef_global__Microsoft_UI_Composition_IVector3NaturalMotionAnimation;
        private IObjectReference Make___objRef_global__Microsoft_UI_Composition_IVector3NaturalMotionAnimation()
        {
            global::System.Threading.Interlocked.CompareExchange(ref ___objRef_global__Microsoft_UI_Composition_IVector3NaturalMotionAnimation, ((IWinRTObject)this).NativeObject.As<IUnknownVftbl>(global::ABI.Microsoft.UI.Composition.IVector3NaturalMotionAnimationMethods.IID), null);
            return ___objRef_global__Microsoft_UI_Composition_IVector3NaturalMotionAnimation;
        }
        private IObjectReference _objRef_global__Microsoft_UI_Composition_IVector3NaturalMotionAnimation => ___objRef_global__Microsoft_UI_Composition_IVector3NaturalMotionAnimation ?? Make___objRef_global__Microsoft_UI_Composition_IVector3NaturalMotionAnimation();



        private static class _IVector3NaturalMotionAnimationFactoryMethods
        {}

        private static volatile IObjectReference ___objRef_global__Microsoft_UI_Composition_IVector3NaturalMotionAnimationFactory;
        private static IObjectReference _objRef_global__Microsoft_UI_Composition_IVector3NaturalMotionAnimationFactory
        {
            get
            { 
                var factory = ___objRef_global__Microsoft_UI_Composition_IVector3NaturalMotionAnimationFactory;
                if (factory != null && factory.IsInCurrentContext)
                {
                    return factory;
                }
                else
                {
                    return ___objRef_global__Microsoft_UI_Composition_IVector3NaturalMotionAnimationFactory = ActivationFactory.Get("Microsoft.UI.Composition.Vector3NaturalMotionAnimation", global::ABI.Microsoft.UI.Composition.IVector3NaturalMotionAnimationFactoryMethods.IID);
                }
            }
        }

        public static new Vector3NaturalMotionAnimation FromAbi(IntPtr thisPtr)
        {
            if (thisPtr == IntPtr.Zero) return null;
            return MarshalInspectable<Vector3NaturalMotionAnimation>.FromAbi(thisPtr);
        }

        protected internal Vector3NaturalMotionAnimation(IObjectReference objRef)
            : base(global::WinRT.DerivedComposed.Instance)

        {
            _inner = objRef.As(global::ABI.Microsoft.UI.Composition.IVector3NaturalMotionAnimationMethods.IID);

        }


        public static bool operator ==(Vector3NaturalMotionAnimation x, Vector3NaturalMotionAnimation y) => (x?.ThisPtr ?? IntPtr.Zero) == (y?.ThisPtr ?? IntPtr.Zero);
        public static bool operator !=(Vector3NaturalMotionAnimation x, Vector3NaturalMotionAnimation y) => !(x == y);
        public bool Equals(Vector3NaturalMotionAnimation other) => this == other;
        public override bool Equals(object obj) => obj is Vector3NaturalMotionAnimation that && this == that;
        public override int GetHashCode() => ThisPtr.GetHashCode();


        protected Vector3NaturalMotionAnimation(global::WinRT.DerivedComposed _):base(_)
        {

        }
        bool IWinRTObject.HasUnwrappableNativeObject => this.GetType() == typeof(Vector3NaturalMotionAnimation);
        IObjectReference IWinRTObject.NativeObject => _inner;

        private struct InterfaceTag<I>{};


        public global::System.Nullable<global::System.Numerics.Vector3> FinalValue
        {
            get => global::ABI.Microsoft.UI.Composition.IVector3NaturalMotionAnimationMethods.get_FinalValue(_objRef_global__Microsoft_UI_Composition_IVector3NaturalMotionAnimation);
            set => global::ABI.Microsoft.UI.Composition.IVector3NaturalMotionAnimationMethods.set_FinalValue(_objRef_global__Microsoft_UI_Composition_IVector3NaturalMotionAnimation, value);
        }

        public global::System.Nullable<global::System.Numerics.Vector3> InitialValue
        {
            get => global::ABI.Microsoft.UI.Composition.IVector3NaturalMotionAnimationMethods.get_InitialValue(_objRef_global__Microsoft_UI_Composition_IVector3NaturalMotionAnimation);
            set => global::ABI.Microsoft.UI.Composition.IVector3NaturalMotionAnimationMethods.set_InitialValue(_objRef_global__Microsoft_UI_Composition_IVector3NaturalMotionAnimation, value);
        }

        public global::System.Numerics.Vector3 InitialVelocity
        {
            get => global::ABI.Microsoft.UI.Composition.IVector3NaturalMotionAnimationMethods.get_InitialVelocity(_objRef_global__Microsoft_UI_Composition_IVector3NaturalMotionAnimation);
            set => global::ABI.Microsoft.UI.Composition.IVector3NaturalMotionAnimationMethods.set_InitialVelocity(_objRef_global__Microsoft_UI_Composition_IVector3NaturalMotionAnimation, value);
        }

        protected override bool IsOverridableInterface(Guid iid) => base.IsOverridableInterface(iid);

        global::System.Runtime.InteropServices.CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(ref Guid iid, out IntPtr ppv)
        {
            ppv = IntPtr.Zero;
            if (IsOverridableInterface(iid) || global::WinRT.Interop.IID.IID_IInspectable == iid)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
            }

            if (((IWinRTObject)this).NativeObject.TryAs(iid, out ppv) >= 0)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.Handled;
            }

            return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
        }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI")]
    [global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Composition.Vector4KeyFrameAnimation))]
    [global::ABI.Microsoft.UI.Composition.Vector4KeyFrameAnimationRcwFactory]
    [global::WinRT.ProjectedRuntimeClass(typeof(IVector4KeyFrameAnimation))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.Foundation.WindowsAppSDKContract), 65536u)]
    public sealed class Vector4KeyFrameAnimation : KeyFrameAnimation, global::System.Runtime.InteropServices.ICustomQueryInterface, IWinRTObject, IEquatable<Vector4KeyFrameAnimation>
    {
        private IntPtr ThisPtr => _inner == null ? (((IWinRTObject)this).NativeObject).ThisPtr : _inner.ThisPtr;

        private readonly IObjectReference _inner = null;



        private IObjectReference _objRef_global__Microsoft_UI_Composition_IVector4KeyFrameAnimation => _inner;


        public static new Vector4KeyFrameAnimation FromAbi(IntPtr thisPtr)
        {
            if (thisPtr == IntPtr.Zero) return null;
            return MarshalInspectable<Vector4KeyFrameAnimation>.FromAbi(thisPtr);
        }

        internal Vector4KeyFrameAnimation(IObjectReference objRef)
            : base(global::WinRT.DerivedComposed.Instance)

        {
            _inner = objRef.As(global::ABI.Microsoft.UI.Composition.IVector4KeyFrameAnimationMethods.IID);

        }


        public static bool operator ==(Vector4KeyFrameAnimation x, Vector4KeyFrameAnimation y) => (x?.ThisPtr ?? IntPtr.Zero) == (y?.ThisPtr ?? IntPtr.Zero);
        public static bool operator !=(Vector4KeyFrameAnimation x, Vector4KeyFrameAnimation y) => !(x == y);
        public bool Equals(Vector4KeyFrameAnimation other) => this == other;
        public override bool Equals(object obj) => obj is Vector4KeyFrameAnimation that && this == that;
        public override int GetHashCode() => ThisPtr.GetHashCode();


        bool IWinRTObject.HasUnwrappableNativeObject => true;
        IObjectReference IWinRTObject.NativeObject => _inner;

        private struct InterfaceTag<I>{};


        public void InsertKeyFrame(float normalizedProgressKey, global::System.Numerics.Vector4 value) => global::ABI.Microsoft.UI.Composition.IVector4KeyFrameAnimationMethods.InsertKeyFrame(_objRef_global__Microsoft_UI_Composition_IVector4KeyFrameAnimation, normalizedProgressKey, value);

        public void InsertKeyFrame(float normalizedProgressKey, global::System.Numerics.Vector4 value, CompositionEasingFunction easingFunction) => global::ABI.Microsoft.UI.Composition.IVector4KeyFrameAnimationMethods.InsertKeyFrame(_objRef_global__Microsoft_UI_Composition_IVector4KeyFrameAnimation, normalizedProgressKey, value, easingFunction);

        protected override bool IsOverridableInterface(Guid iid) => base.IsOverridableInterface(iid);

        global::System.Runtime.InteropServices.CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(ref Guid iid, out IntPtr ppv)
        {
            ppv = IntPtr.Zero;
            if (IsOverridableInterface(iid) || global::WinRT.Interop.IID.IID_IInspectable == iid)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
            }

            if (((IWinRTObject)this).NativeObject.TryAs(iid, out ppv) >= 0)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.Handled;
            }

            return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
        }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI")]
    [global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Composition.Visual))]
    [global::ABI.Microsoft.UI.Composition.VisualRcwFactory]
    [global::WinRT.ProjectedRuntimeClass(typeof(IVisual))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.Foundation.WindowsAppSDKContract), 65536u)]
    public class Visual : CompositionObject, global::System.Runtime.InteropServices.ICustomQueryInterface, IWinRTObject, IEquatable<Visual>
    {
        private IntPtr ThisPtr => _inner == null ? (((IWinRTObject)this).NativeObject).ThisPtr : _inner.ThisPtr;

        private readonly IObjectReference _inner = null;




        private volatile IObjectReference ___objRef_global__Microsoft_UI_Composition_IVisual;
        private IObjectReference Make___objRef_global__Microsoft_UI_Composition_IVisual()
        {
            global::System.Threading.Interlocked.CompareExchange(ref ___objRef_global__Microsoft_UI_Composition_IVisual, ((IWinRTObject)this).NativeObject.As<IUnknownVftbl>(global::ABI.Microsoft.UI.Composition.IVisualMethods.IID), null);
            return ___objRef_global__Microsoft_UI_Composition_IVisual;
        }
        private IObjectReference _objRef_global__Microsoft_UI_Composition_IVisual => ___objRef_global__Microsoft_UI_Composition_IVisual ?? Make___objRef_global__Microsoft_UI_Composition_IVisual();

        private volatile IObjectReference ___objRef_global__Microsoft_UI_Composition_IVisual2;
        private IObjectReference Make___objRef_global__Microsoft_UI_Composition_IVisual2()
        {
            global::System.Threading.Interlocked.CompareExchange(ref ___objRef_global__Microsoft_UI_Composition_IVisual2, ((IWinRTObject)this).NativeObject.As<IUnknownVftbl>(global::ABI.Microsoft.UI.Composition.IVisual2Methods.IID), null);
            return ___objRef_global__Microsoft_UI_Composition_IVisual2;
        }
        private IObjectReference _objRef_global__Microsoft_UI_Composition_IVisual2 => ___objRef_global__Microsoft_UI_Composition_IVisual2 ?? Make___objRef_global__Microsoft_UI_Composition_IVisual2();

        private volatile IObjectReference ___objRef_global__Microsoft_UI_Composition_IVisual3;
        private IObjectReference Make___objRef_global__Microsoft_UI_Composition_IVisual3()
        {
            global::System.Threading.Interlocked.CompareExchange(ref ___objRef_global__Microsoft_UI_Composition_IVisual3, ((IWinRTObject)this).NativeObject.As<IUnknownVftbl>(global::ABI.Microsoft.UI.Composition.IVisual3Methods.IID), null);
            return ___objRef_global__Microsoft_UI_Composition_IVisual3;
        }
        private IObjectReference _objRef_global__Microsoft_UI_Composition_IVisual3 => ___objRef_global__Microsoft_UI_Composition_IVisual3 ?? Make___objRef_global__Microsoft_UI_Composition_IVisual3();

        private volatile IObjectReference ___objRef_global__Microsoft_UI_Composition_IVisual4;
        private IObjectReference Make___objRef_global__Microsoft_UI_Composition_IVisual4()
        {
            global::System.Threading.Interlocked.CompareExchange(ref ___objRef_global__Microsoft_UI_Composition_IVisual4, ((IWinRTObject)this).NativeObject.As<IUnknownVftbl>(global::ABI.Microsoft.UI.Composition.IVisual4Methods.IID), null);
            return ___objRef_global__Microsoft_UI_Composition_IVisual4;
        }
        private IObjectReference _objRef_global__Microsoft_UI_Composition_IVisual4 => ___objRef_global__Microsoft_UI_Composition_IVisual4 ?? Make___objRef_global__Microsoft_UI_Composition_IVisual4();



        private static class _IVisualFactoryMethods
        {}

        private static volatile IObjectReference ___objRef_global__Microsoft_UI_Composition_IVisualFactory;
        private static IObjectReference _objRef_global__Microsoft_UI_Composition_IVisualFactory
        {
            get
            { 
                var factory = ___objRef_global__Microsoft_UI_Composition_IVisualFactory;
                if (factory != null && factory.IsInCurrentContext)
                {
                    return factory;
                }
                else
                {
                    return ___objRef_global__Microsoft_UI_Composition_IVisualFactory = ActivationFactory.Get("Microsoft.UI.Composition.Visual", global::ABI.Microsoft.UI.Composition.IVisualFactoryMethods.IID);
                }
            }
        }

        public static new Visual FromAbi(IntPtr thisPtr)
        {
            if (thisPtr == IntPtr.Zero) return null;
            return MarshalInspectable<Visual>.FromAbi(thisPtr);
        }

        protected internal Visual(IObjectReference objRef)
            : base(global::WinRT.DerivedComposed.Instance)

        {
            _inner = objRef.As(global::ABI.Microsoft.UI.Composition.IVisualMethods.IID);

        }


        public static bool operator ==(Visual x, Visual y) => (x?.ThisPtr ?? IntPtr.Zero) == (y?.ThisPtr ?? IntPtr.Zero);
        public static bool operator !=(Visual x, Visual y) => !(x == y);
        public bool Equals(Visual other) => this == other;
        public override bool Equals(object obj) => obj is Visual that && this == that;
        public override int GetHashCode() => ThisPtr.GetHashCode();


        protected Visual(global::WinRT.DerivedComposed _):base(_)
        {

        }
        bool IWinRTObject.HasUnwrappableNativeObject => this.GetType() == typeof(Visual);
        IObjectReference IWinRTObject.NativeObject => _inner;

        private struct InterfaceTag<I>{};


        public global::System.Numerics.Vector2 AnchorPoint
        {
            get => global::ABI.Microsoft.UI.Composition.IVisualMethods.get_AnchorPoint(_objRef_global__Microsoft_UI_Composition_IVisual);
            set => global::ABI.Microsoft.UI.Composition.IVisualMethods.set_AnchorPoint(_objRef_global__Microsoft_UI_Composition_IVisual, value);
        }

        public CompositionBackfaceVisibility BackfaceVisibility
        {
            get => global::ABI.Microsoft.UI.Composition.IVisualMethods.get_BackfaceVisibility(_objRef_global__Microsoft_UI_Composition_IVisual);
            set => global::ABI.Microsoft.UI.Composition.IVisualMethods.set_BackfaceVisibility(_objRef_global__Microsoft_UI_Composition_IVisual, value);
        }

        public CompositionBorderMode BorderMode
        {
            get => global::ABI.Microsoft.UI.Composition.IVisualMethods.get_BorderMode(_objRef_global__Microsoft_UI_Composition_IVisual);
            set => global::ABI.Microsoft.UI.Composition.IVisualMethods.set_BorderMode(_objRef_global__Microsoft_UI_Composition_IVisual, value);
        }

        public global::System.Numerics.Vector3 CenterPoint
        {
            get => global::ABI.Microsoft.UI.Composition.IVisualMethods.get_CenterPoint(_objRef_global__Microsoft_UI_Composition_IVisual);
            set => global::ABI.Microsoft.UI.Composition.IVisualMethods.set_CenterPoint(_objRef_global__Microsoft_UI_Composition_IVisual, value);
        }

        public CompositionClip Clip
        {
            get => global::ABI.Microsoft.UI.Composition.IVisualMethods.get_Clip(_objRef_global__Microsoft_UI_Composition_IVisual);
            set => global::ABI.Microsoft.UI.Composition.IVisualMethods.set_Clip(_objRef_global__Microsoft_UI_Composition_IVisual, value);
        }

        public CompositionCompositeMode CompositeMode
        {
            get => global::ABI.Microsoft.UI.Composition.IVisualMethods.get_CompositeMode(_objRef_global__Microsoft_UI_Composition_IVisual);
            set => global::ABI.Microsoft.UI.Composition.IVisualMethods.set_CompositeMode(_objRef_global__Microsoft_UI_Composition_IVisual, value);
        }

        public bool IsHitTestVisible
        {
            get => global::ABI.Microsoft.UI.Composition.IVisual3Methods.get_IsHitTestVisible(_objRef_global__Microsoft_UI_Composition_IVisual3);
            set => global::ABI.Microsoft.UI.Composition.IVisual3Methods.set_IsHitTestVisible(_objRef_global__Microsoft_UI_Composition_IVisual3, value);
        }

        public bool IsPixelSnappingEnabled
        {
            get => global::ABI.Microsoft.UI.Composition.IVisual4Methods.get_IsPixelSnappingEnabled(_objRef_global__Microsoft_UI_Composition_IVisual4);
            set => global::ABI.Microsoft.UI.Composition.IVisual4Methods.set_IsPixelSnappingEnabled(_objRef_global__Microsoft_UI_Composition_IVisual4, value);
        }

        public bool IsVisible
        {
            get => global::ABI.Microsoft.UI.Composition.IVisualMethods.get_IsVisible(_objRef_global__Microsoft_UI_Composition_IVisual);
            set => global::ABI.Microsoft.UI.Composition.IVisualMethods.set_IsVisible(_objRef_global__Microsoft_UI_Composition_IVisual, value);
        }

        public global::System.Numerics.Vector3 Offset
        {
            get => global::ABI.Microsoft.UI.Composition.IVisualMethods.get_Offset(_objRef_global__Microsoft_UI_Composition_IVisual);
            set => global::ABI.Microsoft.UI.Composition.IVisualMethods.set_Offset(_objRef_global__Microsoft_UI_Composition_IVisual, value);
        }

        public float Opacity
        {
            get => global::ABI.Microsoft.UI.Composition.IVisualMethods.get_Opacity(_objRef_global__Microsoft_UI_Composition_IVisual);
            set => global::ABI.Microsoft.UI.Composition.IVisualMethods.set_Opacity(_objRef_global__Microsoft_UI_Composition_IVisual, value);
        }

        public global::System.Numerics.Quaternion Orientation
        {
            get => global::ABI.Microsoft.UI.Composition.IVisualMethods.get_Orientation(_objRef_global__Microsoft_UI_Composition_IVisual);
            set => global::ABI.Microsoft.UI.Composition.IVisualMethods.set_Orientation(_objRef_global__Microsoft_UI_Composition_IVisual, value);
        }

        public ContainerVisual Parent => global::ABI.Microsoft.UI.Composition.IVisualMethods.get_Parent(_objRef_global__Microsoft_UI_Composition_IVisual);

        public Visual ParentForTransform
        {
            get => global::ABI.Microsoft.UI.Composition.IVisual2Methods.get_ParentForTransform(_objRef_global__Microsoft_UI_Composition_IVisual2);
            set => global::ABI.Microsoft.UI.Composition.IVisual2Methods.set_ParentForTransform(_objRef_global__Microsoft_UI_Composition_IVisual2, value);
        }

        public global::System.Numerics.Vector3 RelativeOffsetAdjustment
        {
            get => global::ABI.Microsoft.UI.Composition.IVisual2Methods.get_RelativeOffsetAdjustment(_objRef_global__Microsoft_UI_Composition_IVisual2);
            set => global::ABI.Microsoft.UI.Composition.IVisual2Methods.set_RelativeOffsetAdjustment(_objRef_global__Microsoft_UI_Composition_IVisual2, value);
        }

        public global::System.Numerics.Vector2 RelativeSizeAdjustment
        {
            get => global::ABI.Microsoft.UI.Composition.IVisual2Methods.get_RelativeSizeAdjustment(_objRef_global__Microsoft_UI_Composition_IVisual2);
            set => global::ABI.Microsoft.UI.Composition.IVisual2Methods.set_RelativeSizeAdjustment(_objRef_global__Microsoft_UI_Composition_IVisual2, value);
        }

        public float RotationAngle
        {
            get => global::ABI.Microsoft.UI.Composition.IVisualMethods.get_RotationAngle(_objRef_global__Microsoft_UI_Composition_IVisual);
            set => global::ABI.Microsoft.UI.Composition.IVisualMethods.set_RotationAngle(_objRef_global__Microsoft_UI_Composition_IVisual, value);
        }

        public float RotationAngleInDegrees
        {
            get => global::ABI.Microsoft.UI.Composition.IVisualMethods.get_RotationAngleInDegrees(_objRef_global__Microsoft_UI_Composition_IVisual);
            set => global::ABI.Microsoft.UI.Composition.IVisualMethods.set_RotationAngleInDegrees(_objRef_global__Microsoft_UI_Composition_IVisual, value);
        }

        public global::System.Numerics.Vector3 RotationAxis
        {
            get => global::ABI.Microsoft.UI.Composition.IVisualMethods.get_RotationAxis(_objRef_global__Microsoft_UI_Composition_IVisual);
            set => global::ABI.Microsoft.UI.Composition.IVisualMethods.set_RotationAxis(_objRef_global__Microsoft_UI_Composition_IVisual, value);
        }

        public global::System.Numerics.Vector3 Scale
        {
            get => global::ABI.Microsoft.UI.Composition.IVisualMethods.get_Scale(_objRef_global__Microsoft_UI_Composition_IVisual);
            set => global::ABI.Microsoft.UI.Composition.IVisualMethods.set_Scale(_objRef_global__Microsoft_UI_Composition_IVisual, value);
        }

        public global::System.Numerics.Vector2 Size
        {
            get => global::ABI.Microsoft.UI.Composition.IVisualMethods.get_Size(_objRef_global__Microsoft_UI_Composition_IVisual);
            set => global::ABI.Microsoft.UI.Composition.IVisualMethods.set_Size(_objRef_global__Microsoft_UI_Composition_IVisual, value);
        }

        public global::System.Numerics.Matrix4x4 TransformMatrix
        {
            get => global::ABI.Microsoft.UI.Composition.IVisualMethods.get_TransformMatrix(_objRef_global__Microsoft_UI_Composition_IVisual);
            set => global::ABI.Microsoft.UI.Composition.IVisualMethods.set_TransformMatrix(_objRef_global__Microsoft_UI_Composition_IVisual, value);
        }

        protected override bool IsOverridableInterface(Guid iid) => base.IsOverridableInterface(iid);

        global::System.Runtime.InteropServices.CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(ref Guid iid, out IntPtr ppv)
        {
            ppv = IntPtr.Zero;
            if (IsOverridableInterface(iid) || global::WinRT.Interop.IID.IID_IInspectable == iid)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
            }

            if (((IWinRTObject)this).NativeObject.TryAs(iid, out ppv) >= 0)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.Handled;
            }

            return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
        }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI")]
    [global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Composition.VisualCollection))]
    [global::ABI.Microsoft.UI.Composition.VisualCollectionRcwFactory]
    [global::WinRT.ProjectedRuntimeClass(typeof(IVisualCollection))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.Foundation.WindowsAppSDKContract), 65536u)]
    public sealed class VisualCollection : CompositionObject, global::System.Collections.Generic.IEnumerable<Visual>, global::System.Runtime.InteropServices.ICustomQueryInterface, IWinRTObject, IEquatable<VisualCollection>
    {
        private IntPtr ThisPtr => _inner == null ? (((IWinRTObject)this).NativeObject).ThisPtr : _inner.ThisPtr;

        private readonly IObjectReference _inner = null;



        private IObjectReference _objRef_global__Microsoft_UI_Composition_IVisualCollection => _inner;
        private volatile IObjectReference ___objRef_global__System_Collections_Generic_IEnumerable_Visual_;
        private IObjectReference Make___objRef_global__System_Collections_Generic_IEnumerable_Visual_()
        {
            _ = global::WinRT.GenericTypeInstantiations.Windows_Foundation_Collections_IIterable_1_Microsoft_UI_Composition_Visual.EnsureInitialized();
            global::System.Threading.Interlocked.CompareExchange(ref ___objRef_global__System_Collections_Generic_IEnumerable_Visual_, ((IWinRTObject)this).NativeObject.As<IUnknownVftbl>(global::ABI.System.Collections.Generic.IEnumerableMethods<Visual>.IID), null);
            return ___objRef_global__System_Collections_Generic_IEnumerable_Visual_;
        }
        private IObjectReference _objRef_global__System_Collections_Generic_IEnumerable_Visual_ => ___objRef_global__System_Collections_Generic_IEnumerable_Visual_ ?? Make___objRef_global__System_Collections_Generic_IEnumerable_Visual_();



        public static new VisualCollection FromAbi(IntPtr thisPtr)
        {
            if (thisPtr == IntPtr.Zero) return null;
            return MarshalInspectable<VisualCollection>.FromAbi(thisPtr);
        }

        internal VisualCollection(IObjectReference objRef)
            : base(global::WinRT.DerivedComposed.Instance)

        {
            _inner = objRef.As(global::ABI.Microsoft.UI.Composition.IVisualCollectionMethods.IID);

        }


        public static bool operator ==(VisualCollection x, VisualCollection y) => (x?.ThisPtr ?? IntPtr.Zero) == (y?.ThisPtr ?? IntPtr.Zero);
        public static bool operator !=(VisualCollection x, VisualCollection y) => !(x == y);
        public bool Equals(VisualCollection other) => this == other;
        public override bool Equals(object obj) => obj is VisualCollection that && this == that;
        public override int GetHashCode() => ThisPtr.GetHashCode();


        bool IWinRTObject.HasUnwrappableNativeObject => true;
        IObjectReference IWinRTObject.NativeObject => _inner;

        private struct InterfaceTag<I>{};


        public void InsertAbove(Visual newChild, Visual sibling) => global::ABI.Microsoft.UI.Composition.IVisualCollectionMethods.InsertAbove(_objRef_global__Microsoft_UI_Composition_IVisualCollection, newChild, sibling);

        public void InsertAtBottom(Visual newChild) => global::ABI.Microsoft.UI.Composition.IVisualCollectionMethods.InsertAtBottom(_objRef_global__Microsoft_UI_Composition_IVisualCollection, newChild);

        public void InsertAtTop(Visual newChild) => global::ABI.Microsoft.UI.Composition.IVisualCollectionMethods.InsertAtTop(_objRef_global__Microsoft_UI_Composition_IVisualCollection, newChild);

        public void InsertBelow(Visual newChild, Visual sibling) => global::ABI.Microsoft.UI.Composition.IVisualCollectionMethods.InsertBelow(_objRef_global__Microsoft_UI_Composition_IVisualCollection, newChild, sibling);

        public void Remove(Visual child) => global::ABI.Microsoft.UI.Composition.IVisualCollectionMethods.Remove(_objRef_global__Microsoft_UI_Composition_IVisualCollection, child);

        public void RemoveAll() => global::ABI.Microsoft.UI.Composition.IVisualCollectionMethods.RemoveAll(_objRef_global__Microsoft_UI_Composition_IVisualCollection);

        public IEnumerator<Visual> GetEnumerator() => global::ABI.System.Collections.Generic.IEnumerableMethods<Visual>.GetEnumerator(_objRef_global__System_Collections_Generic_IEnumerable_Visual_);

        IEnumerator IEnumerable.GetEnumerator() => GetEnumerator();

        public int Count => global::ABI.Microsoft.UI.Composition.IVisualCollectionMethods.get_Count(_objRef_global__Microsoft_UI_Composition_IVisualCollection);

        protected override bool IsOverridableInterface(Guid iid) => base.IsOverridableInterface(iid);

        global::System.Runtime.InteropServices.CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(ref Guid iid, out IntPtr ppv)
        {
            ppv = IntPtr.Zero;
            if (IsOverridableInterface(iid) || global::WinRT.Interop.IID.IID_IInspectable == iid)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
            }

            if (((IWinRTObject)this).NativeObject.TryAs(iid, out ppv) >= 0)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.Handled;
            }

            return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
        }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI")]
    [global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Composition.VisualUnorderedCollection))]
    [global::ABI.Microsoft.UI.Composition.VisualUnorderedCollectionRcwFactory]
    [global::WinRT.ProjectedRuntimeClass(typeof(IVisualUnorderedCollection))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.Foundation.WindowsAppSDKContract), 65536u)]
    public sealed class VisualUnorderedCollection : CompositionObject, global::System.Collections.Generic.IEnumerable<Visual>, global::System.Runtime.InteropServices.ICustomQueryInterface, IWinRTObject, IEquatable<VisualUnorderedCollection>
    {
        private IntPtr ThisPtr => _inner == null ? (((IWinRTObject)this).NativeObject).ThisPtr : _inner.ThisPtr;

        private readonly IObjectReference _inner = null;



        private IObjectReference _objRef_global__Microsoft_UI_Composition_IVisualUnorderedCollection => _inner;
        private volatile IObjectReference ___objRef_global__System_Collections_Generic_IEnumerable_Visual_;
        private IObjectReference Make___objRef_global__System_Collections_Generic_IEnumerable_Visual_()
        {
            _ = global::WinRT.GenericTypeInstantiations.Windows_Foundation_Collections_IIterable_1_Microsoft_UI_Composition_Visual.EnsureInitialized();
            global::System.Threading.Interlocked.CompareExchange(ref ___objRef_global__System_Collections_Generic_IEnumerable_Visual_, ((IWinRTObject)this).NativeObject.As<IUnknownVftbl>(global::ABI.System.Collections.Generic.IEnumerableMethods<Visual>.IID), null);
            return ___objRef_global__System_Collections_Generic_IEnumerable_Visual_;
        }
        private IObjectReference _objRef_global__System_Collections_Generic_IEnumerable_Visual_ => ___objRef_global__System_Collections_Generic_IEnumerable_Visual_ ?? Make___objRef_global__System_Collections_Generic_IEnumerable_Visual_();



        public static new VisualUnorderedCollection FromAbi(IntPtr thisPtr)
        {
            if (thisPtr == IntPtr.Zero) return null;
            return MarshalInspectable<VisualUnorderedCollection>.FromAbi(thisPtr);
        }

        internal VisualUnorderedCollection(IObjectReference objRef)
            : base(global::WinRT.DerivedComposed.Instance)

        {
            _inner = objRef.As(global::ABI.Microsoft.UI.Composition.IVisualUnorderedCollectionMethods.IID);

        }


        public static bool operator ==(VisualUnorderedCollection x, VisualUnorderedCollection y) => (x?.ThisPtr ?? IntPtr.Zero) == (y?.ThisPtr ?? IntPtr.Zero);
        public static bool operator !=(VisualUnorderedCollection x, VisualUnorderedCollection y) => !(x == y);
        public bool Equals(VisualUnorderedCollection other) => this == other;
        public override bool Equals(object obj) => obj is VisualUnorderedCollection that && this == that;
        public override int GetHashCode() => ThisPtr.GetHashCode();


        bool IWinRTObject.HasUnwrappableNativeObject => true;
        IObjectReference IWinRTObject.NativeObject => _inner;

        private struct InterfaceTag<I>{};


        public void Add(Visual newVisual) => global::ABI.Microsoft.UI.Composition.IVisualUnorderedCollectionMethods.Add(_objRef_global__Microsoft_UI_Composition_IVisualUnorderedCollection, newVisual);

        public void Remove(Visual visual) => global::ABI.Microsoft.UI.Composition.IVisualUnorderedCollectionMethods.Remove(_objRef_global__Microsoft_UI_Composition_IVisualUnorderedCollection, visual);

        public void RemoveAll() => global::ABI.Microsoft.UI.Composition.IVisualUnorderedCollectionMethods.RemoveAll(_objRef_global__Microsoft_UI_Composition_IVisualUnorderedCollection);

        public IEnumerator<Visual> GetEnumerator() => global::ABI.System.Collections.Generic.IEnumerableMethods<Visual>.GetEnumerator(_objRef_global__System_Collections_Generic_IEnumerable_Visual_);

        IEnumerator IEnumerable.GetEnumerator() => GetEnumerator();

        public int Count => global::ABI.Microsoft.UI.Composition.IVisualUnorderedCollectionMethods.get_Count(_objRef_global__Microsoft_UI_Composition_IVisualUnorderedCollection);

        protected override bool IsOverridableInterface(Guid iid) => base.IsOverridableInterface(iid);

        global::System.Runtime.InteropServices.CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(ref Guid iid, out IntPtr ppv)
        {
            ppv = IntPtr.Zero;
            if (IsOverridableInterface(iid) || global::WinRT.Interop.IID.IID_IInspectable == iid)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
            }

            if (((IWinRTObject)this).NativeObject.TryAs(iid, out ppv) >= 0)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.Handled;
            }

            return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
        }
    }
}

#pragma warning disable CA1416
namespace ABI.Microsoft.UI.Composition
{
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    public struct AmbientLight
    {

        public static IObjectReference CreateMarshaler(global::Microsoft.UI.Composition.AmbientLight obj) => obj is null ? null : MarshalInspectable<global::Microsoft.UI.Composition.AmbientLight>.CreateMarshaler<IUnknownVftbl>(obj, global::ABI.Microsoft.UI.Composition.IAmbientLightMethods.IID);
        public static ObjectReferenceValue CreateMarshaler2(global::Microsoft.UI.Composition.AmbientLight obj) => MarshalInspectable<object>.CreateMarshaler2(obj, global::ABI.Microsoft.UI.Composition.IAmbientLightMethods.IID);
        public static IntPtr GetAbi(IObjectReference value) => value is null ? IntPtr.Zero : MarshalInterfaceHelper<object>.GetAbi(value);
        public static global::Microsoft.UI.Composition.AmbientLight FromAbi(IntPtr thisPtr) => global::Microsoft.UI.Composition.AmbientLight.FromAbi(thisPtr);
        public static IntPtr FromManaged(global::Microsoft.UI.Composition.AmbientLight obj) => obj is null ? IntPtr.Zero : CreateMarshaler2(obj).Detach();
        public static unsafe MarshalInterfaceHelper<global::Microsoft.UI.Composition.AmbientLight>.MarshalerArray CreateMarshalerArray(global::Microsoft.UI.Composition.AmbientLight[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.AmbientLight>.CreateMarshalerArray2(array, (o) => CreateMarshaler2(o));
        public static (int length, IntPtr data) GetAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.AmbientLight>.GetAbiArray(box);
        public static unsafe global::Microsoft.UI.Composition.AmbientLight[] FromAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.AmbientLight>.FromAbiArray(box, FromAbi);
        public static void CopyAbiArray(global::Microsoft.UI.Composition.AmbientLight[] array, object box) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.AmbientLight>.CopyAbiArray(array, box, FromAbi);
        public static (int length, IntPtr data) FromManagedArray(global::Microsoft.UI.Composition.AmbientLight[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.AmbientLight>.FromManagedArray(array, (o) => FromManaged(o));
        public static void DisposeMarshaler(IObjectReference value) => MarshalInspectable<object>.DisposeMarshaler(value);
        public static void DisposeMarshalerArray(MarshalInterfaceHelper<global::Microsoft.UI.Composition.AmbientLight>.MarshalerArray array) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.AmbientLight>.DisposeMarshalerArray(array);
        public static void DisposeAbi(IntPtr abi) => MarshalInspectable<object>.DisposeAbi(abi);
        public static unsafe void DisposeAbiArray(object box) => MarshalInspectable<object>.DisposeAbiArray(box);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    internal sealed class AmbientLightRcwFactoryAttribute : global::WinRT.WinRTImplementationTypeRcwFactoryAttribute
    {
        public override object CreateInstance(global::WinRT.IInspectable inspectable)
            => new global::Microsoft.UI.Composition.AmbientLight(inspectable.ObjRef);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    public struct AnimationController
    {

        public static IObjectReference CreateMarshaler(global::Microsoft.UI.Composition.AnimationController obj) => obj is null ? null : MarshalInspectable<global::Microsoft.UI.Composition.AnimationController>.CreateMarshaler<IUnknownVftbl>(obj, global::ABI.Microsoft.UI.Composition.IAnimationControllerMethods.IID);
        public static ObjectReferenceValue CreateMarshaler2(global::Microsoft.UI.Composition.AnimationController obj) => MarshalInspectable<object>.CreateMarshaler2(obj, global::ABI.Microsoft.UI.Composition.IAnimationControllerMethods.IID);
        public static IntPtr GetAbi(IObjectReference value) => value is null ? IntPtr.Zero : MarshalInterfaceHelper<object>.GetAbi(value);
        public static global::Microsoft.UI.Composition.AnimationController FromAbi(IntPtr thisPtr) => global::Microsoft.UI.Composition.AnimationController.FromAbi(thisPtr);
        public static IntPtr FromManaged(global::Microsoft.UI.Composition.AnimationController obj) => obj is null ? IntPtr.Zero : CreateMarshaler2(obj).Detach();
        public static unsafe MarshalInterfaceHelper<global::Microsoft.UI.Composition.AnimationController>.MarshalerArray CreateMarshalerArray(global::Microsoft.UI.Composition.AnimationController[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.AnimationController>.CreateMarshalerArray2(array, (o) => CreateMarshaler2(o));
        public static (int length, IntPtr data) GetAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.AnimationController>.GetAbiArray(box);
        public static unsafe global::Microsoft.UI.Composition.AnimationController[] FromAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.AnimationController>.FromAbiArray(box, FromAbi);
        public static void CopyAbiArray(global::Microsoft.UI.Composition.AnimationController[] array, object box) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.AnimationController>.CopyAbiArray(array, box, FromAbi);
        public static (int length, IntPtr data) FromManagedArray(global::Microsoft.UI.Composition.AnimationController[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.AnimationController>.FromManagedArray(array, (o) => FromManaged(o));
        public static void DisposeMarshaler(IObjectReference value) => MarshalInspectable<object>.DisposeMarshaler(value);
        public static void DisposeMarshalerArray(MarshalInterfaceHelper<global::Microsoft.UI.Composition.AnimationController>.MarshalerArray array) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.AnimationController>.DisposeMarshalerArray(array);
        public static void DisposeAbi(IntPtr abi) => MarshalInspectable<object>.DisposeAbi(abi);
        public static unsafe void DisposeAbiArray(object box) => MarshalInspectable<object>.DisposeAbiArray(box);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    internal sealed class AnimationControllerRcwFactoryAttribute : global::WinRT.WinRTImplementationTypeRcwFactoryAttribute
    {
        public override object CreateInstance(global::WinRT.IInspectable inspectable)
            => new global::Microsoft.UI.Composition.AnimationController(inspectable.ObjRef);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    public struct AnimationPropertyInfo
    {

        public static IObjectReference CreateMarshaler(global::Microsoft.UI.Composition.AnimationPropertyInfo obj) => obj is null ? null : MarshalInspectable<global::Microsoft.UI.Composition.AnimationPropertyInfo>.CreateMarshaler<IUnknownVftbl>(obj, global::ABI.Microsoft.UI.Composition.IAnimationPropertyInfoMethods.IID);
        public static ObjectReferenceValue CreateMarshaler2(global::Microsoft.UI.Composition.AnimationPropertyInfo obj) => MarshalInspectable<object>.CreateMarshaler2(obj, global::ABI.Microsoft.UI.Composition.IAnimationPropertyInfoMethods.IID);
        public static IntPtr GetAbi(IObjectReference value) => value is null ? IntPtr.Zero : MarshalInterfaceHelper<object>.GetAbi(value);
        public static global::Microsoft.UI.Composition.AnimationPropertyInfo FromAbi(IntPtr thisPtr) => global::Microsoft.UI.Composition.AnimationPropertyInfo.FromAbi(thisPtr);
        public static IntPtr FromManaged(global::Microsoft.UI.Composition.AnimationPropertyInfo obj) => obj is null ? IntPtr.Zero : CreateMarshaler2(obj).Detach();
        public static unsafe MarshalInterfaceHelper<global::Microsoft.UI.Composition.AnimationPropertyInfo>.MarshalerArray CreateMarshalerArray(global::Microsoft.UI.Composition.AnimationPropertyInfo[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.AnimationPropertyInfo>.CreateMarshalerArray2(array, (o) => CreateMarshaler2(o));
        public static (int length, IntPtr data) GetAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.AnimationPropertyInfo>.GetAbiArray(box);
        public static unsafe global::Microsoft.UI.Composition.AnimationPropertyInfo[] FromAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.AnimationPropertyInfo>.FromAbiArray(box, FromAbi);
        public static void CopyAbiArray(global::Microsoft.UI.Composition.AnimationPropertyInfo[] array, object box) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.AnimationPropertyInfo>.CopyAbiArray(array, box, FromAbi);
        public static (int length, IntPtr data) FromManagedArray(global::Microsoft.UI.Composition.AnimationPropertyInfo[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.AnimationPropertyInfo>.FromManagedArray(array, (o) => FromManaged(o));
        public static void DisposeMarshaler(IObjectReference value) => MarshalInspectable<object>.DisposeMarshaler(value);
        public static void DisposeMarshalerArray(MarshalInterfaceHelper<global::Microsoft.UI.Composition.AnimationPropertyInfo>.MarshalerArray array) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.AnimationPropertyInfo>.DisposeMarshalerArray(array);
        public static void DisposeAbi(IntPtr abi) => MarshalInspectable<object>.DisposeAbi(abi);
        public static unsafe void DisposeAbiArray(object box) => MarshalInspectable<object>.DisposeAbiArray(box);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    internal sealed class AnimationPropertyInfoRcwFactoryAttribute : global::WinRT.WinRTImplementationTypeRcwFactoryAttribute
    {
        public override object CreateInstance(global::WinRT.IInspectable inspectable)
            => new global::Microsoft.UI.Composition.AnimationPropertyInfo(inspectable.ObjRef);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    public struct BackEasingFunction
    {

        public static IObjectReference CreateMarshaler(global::Microsoft.UI.Composition.BackEasingFunction obj) => obj is null ? null : MarshalInspectable<global::Microsoft.UI.Composition.BackEasingFunction>.CreateMarshaler<IUnknownVftbl>(obj, global::ABI.Microsoft.UI.Composition.IBackEasingFunctionMethods.IID);
        public static ObjectReferenceValue CreateMarshaler2(global::Microsoft.UI.Composition.BackEasingFunction obj) => MarshalInspectable<object>.CreateMarshaler2(obj, global::ABI.Microsoft.UI.Composition.IBackEasingFunctionMethods.IID);
        public static IntPtr GetAbi(IObjectReference value) => value is null ? IntPtr.Zero : MarshalInterfaceHelper<object>.GetAbi(value);
        public static global::Microsoft.UI.Composition.BackEasingFunction FromAbi(IntPtr thisPtr) => global::Microsoft.UI.Composition.BackEasingFunction.FromAbi(thisPtr);
        public static IntPtr FromManaged(global::Microsoft.UI.Composition.BackEasingFunction obj) => obj is null ? IntPtr.Zero : CreateMarshaler2(obj).Detach();
        public static unsafe MarshalInterfaceHelper<global::Microsoft.UI.Composition.BackEasingFunction>.MarshalerArray CreateMarshalerArray(global::Microsoft.UI.Composition.BackEasingFunction[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.BackEasingFunction>.CreateMarshalerArray2(array, (o) => CreateMarshaler2(o));
        public static (int length, IntPtr data) GetAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.BackEasingFunction>.GetAbiArray(box);
        public static unsafe global::Microsoft.UI.Composition.BackEasingFunction[] FromAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.BackEasingFunction>.FromAbiArray(box, FromAbi);
        public static void CopyAbiArray(global::Microsoft.UI.Composition.BackEasingFunction[] array, object box) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.BackEasingFunction>.CopyAbiArray(array, box, FromAbi);
        public static (int length, IntPtr data) FromManagedArray(global::Microsoft.UI.Composition.BackEasingFunction[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.BackEasingFunction>.FromManagedArray(array, (o) => FromManaged(o));
        public static void DisposeMarshaler(IObjectReference value) => MarshalInspectable<object>.DisposeMarshaler(value);
        public static void DisposeMarshalerArray(MarshalInterfaceHelper<global::Microsoft.UI.Composition.BackEasingFunction>.MarshalerArray array) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.BackEasingFunction>.DisposeMarshalerArray(array);
        public static void DisposeAbi(IntPtr abi) => MarshalInspectable<object>.DisposeAbi(abi);
        public static unsafe void DisposeAbiArray(object box) => MarshalInspectable<object>.DisposeAbiArray(box);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    internal sealed class BackEasingFunctionRcwFactoryAttribute : global::WinRT.WinRTImplementationTypeRcwFactoryAttribute
    {
        public override object CreateInstance(global::WinRT.IInspectable inspectable)
            => new global::Microsoft.UI.Composition.BackEasingFunction(inspectable.ObjRef);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    public struct BooleanKeyFrameAnimation
    {

        public static IObjectReference CreateMarshaler(global::Microsoft.UI.Composition.BooleanKeyFrameAnimation obj) => obj is null ? null : MarshalInspectable<global::Microsoft.UI.Composition.BooleanKeyFrameAnimation>.CreateMarshaler<IUnknownVftbl>(obj, global::ABI.Microsoft.UI.Composition.IBooleanKeyFrameAnimationMethods.IID);
        public static ObjectReferenceValue CreateMarshaler2(global::Microsoft.UI.Composition.BooleanKeyFrameAnimation obj) => MarshalInspectable<object>.CreateMarshaler2(obj, global::ABI.Microsoft.UI.Composition.IBooleanKeyFrameAnimationMethods.IID);
        public static IntPtr GetAbi(IObjectReference value) => value is null ? IntPtr.Zero : MarshalInterfaceHelper<object>.GetAbi(value);
        public static global::Microsoft.UI.Composition.BooleanKeyFrameAnimation FromAbi(IntPtr thisPtr) => global::Microsoft.UI.Composition.BooleanKeyFrameAnimation.FromAbi(thisPtr);
        public static IntPtr FromManaged(global::Microsoft.UI.Composition.BooleanKeyFrameAnimation obj) => obj is null ? IntPtr.Zero : CreateMarshaler2(obj).Detach();
        public static unsafe MarshalInterfaceHelper<global::Microsoft.UI.Composition.BooleanKeyFrameAnimation>.MarshalerArray CreateMarshalerArray(global::Microsoft.UI.Composition.BooleanKeyFrameAnimation[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.BooleanKeyFrameAnimation>.CreateMarshalerArray2(array, (o) => CreateMarshaler2(o));
        public static (int length, IntPtr data) GetAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.BooleanKeyFrameAnimation>.GetAbiArray(box);
        public static unsafe global::Microsoft.UI.Composition.BooleanKeyFrameAnimation[] FromAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.BooleanKeyFrameAnimation>.FromAbiArray(box, FromAbi);
        public static void CopyAbiArray(global::Microsoft.UI.Composition.BooleanKeyFrameAnimation[] array, object box) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.BooleanKeyFrameAnimation>.CopyAbiArray(array, box, FromAbi);
        public static (int length, IntPtr data) FromManagedArray(global::Microsoft.UI.Composition.BooleanKeyFrameAnimation[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.BooleanKeyFrameAnimation>.FromManagedArray(array, (o) => FromManaged(o));
        public static void DisposeMarshaler(IObjectReference value) => MarshalInspectable<object>.DisposeMarshaler(value);
        public static void DisposeMarshalerArray(MarshalInterfaceHelper<global::Microsoft.UI.Composition.BooleanKeyFrameAnimation>.MarshalerArray array) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.BooleanKeyFrameAnimation>.DisposeMarshalerArray(array);
        public static void DisposeAbi(IntPtr abi) => MarshalInspectable<object>.DisposeAbi(abi);
        public static unsafe void DisposeAbiArray(object box) => MarshalInspectable<object>.DisposeAbiArray(box);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    internal sealed class BooleanKeyFrameAnimationRcwFactoryAttribute : global::WinRT.WinRTImplementationTypeRcwFactoryAttribute
    {
        public override object CreateInstance(global::WinRT.IInspectable inspectable)
            => new global::Microsoft.UI.Composition.BooleanKeyFrameAnimation(inspectable.ObjRef);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    public struct BounceEasingFunction
    {

        public static IObjectReference CreateMarshaler(global::Microsoft.UI.Composition.BounceEasingFunction obj) => obj is null ? null : MarshalInspectable<global::Microsoft.UI.Composition.BounceEasingFunction>.CreateMarshaler<IUnknownVftbl>(obj, global::ABI.Microsoft.UI.Composition.IBounceEasingFunctionMethods.IID);
        public static ObjectReferenceValue CreateMarshaler2(global::Microsoft.UI.Composition.BounceEasingFunction obj) => MarshalInspectable<object>.CreateMarshaler2(obj, global::ABI.Microsoft.UI.Composition.IBounceEasingFunctionMethods.IID);
        public static IntPtr GetAbi(IObjectReference value) => value is null ? IntPtr.Zero : MarshalInterfaceHelper<object>.GetAbi(value);
        public static global::Microsoft.UI.Composition.BounceEasingFunction FromAbi(IntPtr thisPtr) => global::Microsoft.UI.Composition.BounceEasingFunction.FromAbi(thisPtr);
        public static IntPtr FromManaged(global::Microsoft.UI.Composition.BounceEasingFunction obj) => obj is null ? IntPtr.Zero : CreateMarshaler2(obj).Detach();
        public static unsafe MarshalInterfaceHelper<global::Microsoft.UI.Composition.BounceEasingFunction>.MarshalerArray CreateMarshalerArray(global::Microsoft.UI.Composition.BounceEasingFunction[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.BounceEasingFunction>.CreateMarshalerArray2(array, (o) => CreateMarshaler2(o));
        public static (int length, IntPtr data) GetAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.BounceEasingFunction>.GetAbiArray(box);
        public static unsafe global::Microsoft.UI.Composition.BounceEasingFunction[] FromAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.BounceEasingFunction>.FromAbiArray(box, FromAbi);
        public static void CopyAbiArray(global::Microsoft.UI.Composition.BounceEasingFunction[] array, object box) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.BounceEasingFunction>.CopyAbiArray(array, box, FromAbi);
        public static (int length, IntPtr data) FromManagedArray(global::Microsoft.UI.Composition.BounceEasingFunction[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.BounceEasingFunction>.FromManagedArray(array, (o) => FromManaged(o));
        public static void DisposeMarshaler(IObjectReference value) => MarshalInspectable<object>.DisposeMarshaler(value);
        public static void DisposeMarshalerArray(MarshalInterfaceHelper<global::Microsoft.UI.Composition.BounceEasingFunction>.MarshalerArray array) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.BounceEasingFunction>.DisposeMarshalerArray(array);
        public static void DisposeAbi(IntPtr abi) => MarshalInspectable<object>.DisposeAbi(abi);
        public static unsafe void DisposeAbiArray(object box) => MarshalInspectable<object>.DisposeAbiArray(box);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    internal sealed class BounceEasingFunctionRcwFactoryAttribute : global::WinRT.WinRTImplementationTypeRcwFactoryAttribute
    {
        public override object CreateInstance(global::WinRT.IInspectable inspectable)
            => new global::Microsoft.UI.Composition.BounceEasingFunction(inspectable.ObjRef);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    public struct BounceScalarNaturalMotionAnimation
    {

        public static IObjectReference CreateMarshaler(global::Microsoft.UI.Composition.BounceScalarNaturalMotionAnimation obj) => obj is null ? null : MarshalInspectable<global::Microsoft.UI.Composition.BounceScalarNaturalMotionAnimation>.CreateMarshaler<IUnknownVftbl>(obj, global::ABI.Microsoft.UI.Composition.IBounceScalarNaturalMotionAnimationMethods.IID);
        public static ObjectReferenceValue CreateMarshaler2(global::Microsoft.UI.Composition.BounceScalarNaturalMotionAnimation obj) => MarshalInspectable<object>.CreateMarshaler2(obj, global::ABI.Microsoft.UI.Composition.IBounceScalarNaturalMotionAnimationMethods.IID);
        public static IntPtr GetAbi(IObjectReference value) => value is null ? IntPtr.Zero : MarshalInterfaceHelper<object>.GetAbi(value);
        public static global::Microsoft.UI.Composition.BounceScalarNaturalMotionAnimation FromAbi(IntPtr thisPtr) => global::Microsoft.UI.Composition.BounceScalarNaturalMotionAnimation.FromAbi(thisPtr);
        public static IntPtr FromManaged(global::Microsoft.UI.Composition.BounceScalarNaturalMotionAnimation obj) => obj is null ? IntPtr.Zero : CreateMarshaler2(obj).Detach();
        public static unsafe MarshalInterfaceHelper<global::Microsoft.UI.Composition.BounceScalarNaturalMotionAnimation>.MarshalerArray CreateMarshalerArray(global::Microsoft.UI.Composition.BounceScalarNaturalMotionAnimation[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.BounceScalarNaturalMotionAnimation>.CreateMarshalerArray2(array, (o) => CreateMarshaler2(o));
        public static (int length, IntPtr data) GetAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.BounceScalarNaturalMotionAnimation>.GetAbiArray(box);
        public static unsafe global::Microsoft.UI.Composition.BounceScalarNaturalMotionAnimation[] FromAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.BounceScalarNaturalMotionAnimation>.FromAbiArray(box, FromAbi);
        public static void CopyAbiArray(global::Microsoft.UI.Composition.BounceScalarNaturalMotionAnimation[] array, object box) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.BounceScalarNaturalMotionAnimation>.CopyAbiArray(array, box, FromAbi);
        public static (int length, IntPtr data) FromManagedArray(global::Microsoft.UI.Composition.BounceScalarNaturalMotionAnimation[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.BounceScalarNaturalMotionAnimation>.FromManagedArray(array, (o) => FromManaged(o));
        public static void DisposeMarshaler(IObjectReference value) => MarshalInspectable<object>.DisposeMarshaler(value);
        public static void DisposeMarshalerArray(MarshalInterfaceHelper<global::Microsoft.UI.Composition.BounceScalarNaturalMotionAnimation>.MarshalerArray array) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.BounceScalarNaturalMotionAnimation>.DisposeMarshalerArray(array);
        public static void DisposeAbi(IntPtr abi) => MarshalInspectable<object>.DisposeAbi(abi);
        public static unsafe void DisposeAbiArray(object box) => MarshalInspectable<object>.DisposeAbiArray(box);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    internal sealed class BounceScalarNaturalMotionAnimationRcwFactoryAttribute : global::WinRT.WinRTImplementationTypeRcwFactoryAttribute
    {
        public override object CreateInstance(global::WinRT.IInspectable inspectable)
            => new global::Microsoft.UI.Composition.BounceScalarNaturalMotionAnimation(inspectable.ObjRef);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    public struct BounceVector2NaturalMotionAnimation
    {

        public static IObjectReference CreateMarshaler(global::Microsoft.UI.Composition.BounceVector2NaturalMotionAnimation obj) => obj is null ? null : MarshalInspectable<global::Microsoft.UI.Composition.BounceVector2NaturalMotionAnimation>.CreateMarshaler<IUnknownVftbl>(obj, global::ABI.Microsoft.UI.Composition.IBounceVector2NaturalMotionAnimationMethods.IID);
        public static ObjectReferenceValue CreateMarshaler2(global::Microsoft.UI.Composition.BounceVector2NaturalMotionAnimation obj) => MarshalInspectable<object>.CreateMarshaler2(obj, global::ABI.Microsoft.UI.Composition.IBounceVector2NaturalMotionAnimationMethods.IID);
        public static IntPtr GetAbi(IObjectReference value) => value is null ? IntPtr.Zero : MarshalInterfaceHelper<object>.GetAbi(value);
        public static global::Microsoft.UI.Composition.BounceVector2NaturalMotionAnimation FromAbi(IntPtr thisPtr) => global::Microsoft.UI.Composition.BounceVector2NaturalMotionAnimation.FromAbi(thisPtr);
        public static IntPtr FromManaged(global::Microsoft.UI.Composition.BounceVector2NaturalMotionAnimation obj) => obj is null ? IntPtr.Zero : CreateMarshaler2(obj).Detach();
        public static unsafe MarshalInterfaceHelper<global::Microsoft.UI.Composition.BounceVector2NaturalMotionAnimation>.MarshalerArray CreateMarshalerArray(global::Microsoft.UI.Composition.BounceVector2NaturalMotionAnimation[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.BounceVector2NaturalMotionAnimation>.CreateMarshalerArray2(array, (o) => CreateMarshaler2(o));
        public static (int length, IntPtr data) GetAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.BounceVector2NaturalMotionAnimation>.GetAbiArray(box);
        public static unsafe global::Microsoft.UI.Composition.BounceVector2NaturalMotionAnimation[] FromAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.BounceVector2NaturalMotionAnimation>.FromAbiArray(box, FromAbi);
        public static void CopyAbiArray(global::Microsoft.UI.Composition.BounceVector2NaturalMotionAnimation[] array, object box) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.BounceVector2NaturalMotionAnimation>.CopyAbiArray(array, box, FromAbi);
        public static (int length, IntPtr data) FromManagedArray(global::Microsoft.UI.Composition.BounceVector2NaturalMotionAnimation[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.BounceVector2NaturalMotionAnimation>.FromManagedArray(array, (o) => FromManaged(o));
        public static void DisposeMarshaler(IObjectReference value) => MarshalInspectable<object>.DisposeMarshaler(value);
        public static void DisposeMarshalerArray(MarshalInterfaceHelper<global::Microsoft.UI.Composition.BounceVector2NaturalMotionAnimation>.MarshalerArray array) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.BounceVector2NaturalMotionAnimation>.DisposeMarshalerArray(array);
        public static void DisposeAbi(IntPtr abi) => MarshalInspectable<object>.DisposeAbi(abi);
        public static unsafe void DisposeAbiArray(object box) => MarshalInspectable<object>.DisposeAbiArray(box);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    internal sealed class BounceVector2NaturalMotionAnimationRcwFactoryAttribute : global::WinRT.WinRTImplementationTypeRcwFactoryAttribute
    {
        public override object CreateInstance(global::WinRT.IInspectable inspectable)
            => new global::Microsoft.UI.Composition.BounceVector2NaturalMotionAnimation(inspectable.ObjRef);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    public struct BounceVector3NaturalMotionAnimation
    {

        public static IObjectReference CreateMarshaler(global::Microsoft.UI.Composition.BounceVector3NaturalMotionAnimation obj) => obj is null ? null : MarshalInspectable<global::Microsoft.UI.Composition.BounceVector3NaturalMotionAnimation>.CreateMarshaler<IUnknownVftbl>(obj, global::ABI.Microsoft.UI.Composition.IBounceVector3NaturalMotionAnimationMethods.IID);
        public static ObjectReferenceValue CreateMarshaler2(global::Microsoft.UI.Composition.BounceVector3NaturalMotionAnimation obj) => MarshalInspectable<object>.CreateMarshaler2(obj, global::ABI.Microsoft.UI.Composition.IBounceVector3NaturalMotionAnimationMethods.IID);
        public static IntPtr GetAbi(IObjectReference value) => value is null ? IntPtr.Zero : MarshalInterfaceHelper<object>.GetAbi(value);
        public static global::Microsoft.UI.Composition.BounceVector3NaturalMotionAnimation FromAbi(IntPtr thisPtr) => global::Microsoft.UI.Composition.BounceVector3NaturalMotionAnimation.FromAbi(thisPtr);
        public static IntPtr FromManaged(global::Microsoft.UI.Composition.BounceVector3NaturalMotionAnimation obj) => obj is null ? IntPtr.Zero : CreateMarshaler2(obj).Detach();
        public static unsafe MarshalInterfaceHelper<global::Microsoft.UI.Composition.BounceVector3NaturalMotionAnimation>.MarshalerArray CreateMarshalerArray(global::Microsoft.UI.Composition.BounceVector3NaturalMotionAnimation[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.BounceVector3NaturalMotionAnimation>.CreateMarshalerArray2(array, (o) => CreateMarshaler2(o));
        public static (int length, IntPtr data) GetAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.BounceVector3NaturalMotionAnimation>.GetAbiArray(box);
        public static unsafe global::Microsoft.UI.Composition.BounceVector3NaturalMotionAnimation[] FromAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.BounceVector3NaturalMotionAnimation>.FromAbiArray(box, FromAbi);
        public static void CopyAbiArray(global::Microsoft.UI.Composition.BounceVector3NaturalMotionAnimation[] array, object box) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.BounceVector3NaturalMotionAnimation>.CopyAbiArray(array, box, FromAbi);
        public static (int length, IntPtr data) FromManagedArray(global::Microsoft.UI.Composition.BounceVector3NaturalMotionAnimation[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.BounceVector3NaturalMotionAnimation>.FromManagedArray(array, (o) => FromManaged(o));
        public static void DisposeMarshaler(IObjectReference value) => MarshalInspectable<object>.DisposeMarshaler(value);
        public static void DisposeMarshalerArray(MarshalInterfaceHelper<global::Microsoft.UI.Composition.BounceVector3NaturalMotionAnimation>.MarshalerArray array) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.BounceVector3NaturalMotionAnimation>.DisposeMarshalerArray(array);
        public static void DisposeAbi(IntPtr abi) => MarshalInspectable<object>.DisposeAbi(abi);
        public static unsafe void DisposeAbiArray(object box) => MarshalInspectable<object>.DisposeAbiArray(box);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    internal sealed class BounceVector3NaturalMotionAnimationRcwFactoryAttribute : global::WinRT.WinRTImplementationTypeRcwFactoryAttribute
    {
        public override object CreateInstance(global::WinRT.IInspectable inspectable)
            => new global::Microsoft.UI.Composition.BounceVector3NaturalMotionAnimation(inspectable.ObjRef);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    public struct CircleEasingFunction
    {

        public static IObjectReference CreateMarshaler(global::Microsoft.UI.Composition.CircleEasingFunction obj) => obj is null ? null : MarshalInspectable<global::Microsoft.UI.Composition.CircleEasingFunction>.CreateMarshaler<IUnknownVftbl>(obj, global::ABI.Microsoft.UI.Composition.ICircleEasingFunctionMethods.IID);
        public static ObjectReferenceValue CreateMarshaler2(global::Microsoft.UI.Composition.CircleEasingFunction obj) => MarshalInspectable<object>.CreateMarshaler2(obj, global::ABI.Microsoft.UI.Composition.ICircleEasingFunctionMethods.IID);
        public static IntPtr GetAbi(IObjectReference value) => value is null ? IntPtr.Zero : MarshalInterfaceHelper<object>.GetAbi(value);
        public static global::Microsoft.UI.Composition.CircleEasingFunction FromAbi(IntPtr thisPtr) => global::Microsoft.UI.Composition.CircleEasingFunction.FromAbi(thisPtr);
        public static IntPtr FromManaged(global::Microsoft.UI.Composition.CircleEasingFunction obj) => obj is null ? IntPtr.Zero : CreateMarshaler2(obj).Detach();
        public static unsafe MarshalInterfaceHelper<global::Microsoft.UI.Composition.CircleEasingFunction>.MarshalerArray CreateMarshalerArray(global::Microsoft.UI.Composition.CircleEasingFunction[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.CircleEasingFunction>.CreateMarshalerArray2(array, (o) => CreateMarshaler2(o));
        public static (int length, IntPtr data) GetAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.CircleEasingFunction>.GetAbiArray(box);
        public static unsafe global::Microsoft.UI.Composition.CircleEasingFunction[] FromAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.CircleEasingFunction>.FromAbiArray(box, FromAbi);
        public static void CopyAbiArray(global::Microsoft.UI.Composition.CircleEasingFunction[] array, object box) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.CircleEasingFunction>.CopyAbiArray(array, box, FromAbi);
        public static (int length, IntPtr data) FromManagedArray(global::Microsoft.UI.Composition.CircleEasingFunction[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.CircleEasingFunction>.FromManagedArray(array, (o) => FromManaged(o));
        public static void DisposeMarshaler(IObjectReference value) => MarshalInspectable<object>.DisposeMarshaler(value);
        public static void DisposeMarshalerArray(MarshalInterfaceHelper<global::Microsoft.UI.Composition.CircleEasingFunction>.MarshalerArray array) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.CircleEasingFunction>.DisposeMarshalerArray(array);
        public static void DisposeAbi(IntPtr abi) => MarshalInspectable<object>.DisposeAbi(abi);
        public static unsafe void DisposeAbiArray(object box) => MarshalInspectable<object>.DisposeAbiArray(box);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    internal sealed class CircleEasingFunctionRcwFactoryAttribute : global::WinRT.WinRTImplementationTypeRcwFactoryAttribute
    {
        public override object CreateInstance(global::WinRT.IInspectable inspectable)
            => new global::Microsoft.UI.Composition.CircleEasingFunction(inspectable.ObjRef);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    public struct ColorKeyFrameAnimation
    {

        public static IObjectReference CreateMarshaler(global::Microsoft.UI.Composition.ColorKeyFrameAnimation obj) => obj is null ? null : MarshalInspectable<global::Microsoft.UI.Composition.ColorKeyFrameAnimation>.CreateMarshaler<IUnknownVftbl>(obj, global::ABI.Microsoft.UI.Composition.IColorKeyFrameAnimationMethods.IID);
        public static ObjectReferenceValue CreateMarshaler2(global::Microsoft.UI.Composition.ColorKeyFrameAnimation obj) => MarshalInspectable<object>.CreateMarshaler2(obj, global::ABI.Microsoft.UI.Composition.IColorKeyFrameAnimationMethods.IID);
        public static IntPtr GetAbi(IObjectReference value) => value is null ? IntPtr.Zero : MarshalInterfaceHelper<object>.GetAbi(value);
        public static global::Microsoft.UI.Composition.ColorKeyFrameAnimation FromAbi(IntPtr thisPtr) => global::Microsoft.UI.Composition.ColorKeyFrameAnimation.FromAbi(thisPtr);
        public static IntPtr FromManaged(global::Microsoft.UI.Composition.ColorKeyFrameAnimation obj) => obj is null ? IntPtr.Zero : CreateMarshaler2(obj).Detach();
        public static unsafe MarshalInterfaceHelper<global::Microsoft.UI.Composition.ColorKeyFrameAnimation>.MarshalerArray CreateMarshalerArray(global::Microsoft.UI.Composition.ColorKeyFrameAnimation[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.ColorKeyFrameAnimation>.CreateMarshalerArray2(array, (o) => CreateMarshaler2(o));
        public static (int length, IntPtr data) GetAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.ColorKeyFrameAnimation>.GetAbiArray(box);
        public static unsafe global::Microsoft.UI.Composition.ColorKeyFrameAnimation[] FromAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.ColorKeyFrameAnimation>.FromAbiArray(box, FromAbi);
        public static void CopyAbiArray(global::Microsoft.UI.Composition.ColorKeyFrameAnimation[] array, object box) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.ColorKeyFrameAnimation>.CopyAbiArray(array, box, FromAbi);
        public static (int length, IntPtr data) FromManagedArray(global::Microsoft.UI.Composition.ColorKeyFrameAnimation[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.ColorKeyFrameAnimation>.FromManagedArray(array, (o) => FromManaged(o));
        public static void DisposeMarshaler(IObjectReference value) => MarshalInspectable<object>.DisposeMarshaler(value);
        public static void DisposeMarshalerArray(MarshalInterfaceHelper<global::Microsoft.UI.Composition.ColorKeyFrameAnimation>.MarshalerArray array) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.ColorKeyFrameAnimation>.DisposeMarshalerArray(array);
        public static void DisposeAbi(IntPtr abi) => MarshalInspectable<object>.DisposeAbi(abi);
        public static unsafe void DisposeAbiArray(object box) => MarshalInspectable<object>.DisposeAbiArray(box);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    internal sealed class ColorKeyFrameAnimationRcwFactoryAttribute : global::WinRT.WinRTImplementationTypeRcwFactoryAttribute
    {
        public override object CreateInstance(global::WinRT.IInspectable inspectable)
            => new global::Microsoft.UI.Composition.ColorKeyFrameAnimation(inspectable.ObjRef);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    public struct CompositionAnimation
    {

        public static IObjectReference CreateMarshaler(global::Microsoft.UI.Composition.CompositionAnimation obj) => obj is null ? null : MarshalInspectable<global::Microsoft.UI.Composition.CompositionAnimation>.CreateMarshaler<IUnknownVftbl>(obj, global::ABI.Microsoft.UI.Composition.ICompositionAnimationMethods.IID);
        public static ObjectReferenceValue CreateMarshaler2(global::Microsoft.UI.Composition.CompositionAnimation obj) => MarshalInspectable<object>.CreateMarshaler2(obj, global::ABI.Microsoft.UI.Composition.ICompositionAnimationMethods.IID);
        public static IntPtr GetAbi(IObjectReference value) => value is null ? IntPtr.Zero : MarshalInterfaceHelper<object>.GetAbi(value);
        public static global::Microsoft.UI.Composition.CompositionAnimation FromAbi(IntPtr thisPtr) => global::Microsoft.UI.Composition.CompositionAnimation.FromAbi(thisPtr);
        public static IntPtr FromManaged(global::Microsoft.UI.Composition.CompositionAnimation obj) => obj is null ? IntPtr.Zero : CreateMarshaler2(obj).Detach();
        public static unsafe MarshalInterfaceHelper<global::Microsoft.UI.Composition.CompositionAnimation>.MarshalerArray CreateMarshalerArray(global::Microsoft.UI.Composition.CompositionAnimation[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.CompositionAnimation>.CreateMarshalerArray2(array, (o) => CreateMarshaler2(o));
        public static (int length, IntPtr data) GetAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.CompositionAnimation>.GetAbiArray(box);
        public static unsafe global::Microsoft.UI.Composition.CompositionAnimation[] FromAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.CompositionAnimation>.FromAbiArray(box, FromAbi);
        public static void CopyAbiArray(global::Microsoft.UI.Composition.CompositionAnimation[] array, object box) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.CompositionAnimation>.CopyAbiArray(array, box, FromAbi);
        public static (int length, IntPtr data) FromManagedArray(global::Microsoft.UI.Composition.CompositionAnimation[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.CompositionAnimation>.FromManagedArray(array, (o) => FromManaged(o));
        public static void DisposeMarshaler(IObjectReference value) => MarshalInspectable<object>.DisposeMarshaler(value);
        public static void DisposeMarshalerArray(MarshalInterfaceHelper<global::Microsoft.UI.Composition.CompositionAnimation>.MarshalerArray array) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.CompositionAnimation>.DisposeMarshalerArray(array);
        public static void DisposeAbi(IntPtr abi) => MarshalInspectable<object>.DisposeAbi(abi);
        public static unsafe void DisposeAbiArray(object box) => MarshalInspectable<object>.DisposeAbiArray(box);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    internal sealed class CompositionAnimationRcwFactoryAttribute : global::WinRT.WinRTImplementationTypeRcwFactoryAttribute
    {
        public override object CreateInstance(global::WinRT.IInspectable inspectable)
            => new global::Microsoft.UI.Composition.CompositionAnimation(inspectable.ObjRef);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    public struct CompositionAnimationGroup
    {

        public static IObjectReference CreateMarshaler(global::Microsoft.UI.Composition.CompositionAnimationGroup obj) => obj is null ? null : MarshalInspectable<global::Microsoft.UI.Composition.CompositionAnimationGroup>.CreateMarshaler<IUnknownVftbl>(obj, global::ABI.Microsoft.UI.Composition.ICompositionAnimationGroupMethods.IID);
        public static ObjectReferenceValue CreateMarshaler2(global::Microsoft.UI.Composition.CompositionAnimationGroup obj) => MarshalInspectable<object>.CreateMarshaler2(obj, global::ABI.Microsoft.UI.Composition.ICompositionAnimationGroupMethods.IID);
        public static IntPtr GetAbi(IObjectReference value) => value is null ? IntPtr.Zero : MarshalInterfaceHelper<object>.GetAbi(value);
        public static global::Microsoft.UI.Composition.CompositionAnimationGroup FromAbi(IntPtr thisPtr) => global::Microsoft.UI.Composition.CompositionAnimationGroup.FromAbi(thisPtr);
        public static IntPtr FromManaged(global::Microsoft.UI.Composition.CompositionAnimationGroup obj) => obj is null ? IntPtr.Zero : CreateMarshaler2(obj).Detach();
        public static unsafe MarshalInterfaceHelper<global::Microsoft.UI.Composition.CompositionAnimationGroup>.MarshalerArray CreateMarshalerArray(global::Microsoft.UI.Composition.CompositionAnimationGroup[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.CompositionAnimationGroup>.CreateMarshalerArray2(array, (o) => CreateMarshaler2(o));
        public static (int length, IntPtr data) GetAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.CompositionAnimationGroup>.GetAbiArray(box);
        public static unsafe global::Microsoft.UI.Composition.CompositionAnimationGroup[] FromAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.CompositionAnimationGroup>.FromAbiArray(box, FromAbi);
        public static void CopyAbiArray(global::Microsoft.UI.Composition.CompositionAnimationGroup[] array, object box) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.CompositionAnimationGroup>.CopyAbiArray(array, box, FromAbi);
        public static (int length, IntPtr data) FromManagedArray(global::Microsoft.UI.Composition.CompositionAnimationGroup[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.CompositionAnimationGroup>.FromManagedArray(array, (o) => FromManaged(o));
        public static void DisposeMarshaler(IObjectReference value) => MarshalInspectable<object>.DisposeMarshaler(value);
        public static void DisposeMarshalerArray(MarshalInterfaceHelper<global::Microsoft.UI.Composition.CompositionAnimationGroup>.MarshalerArray array) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.CompositionAnimationGroup>.DisposeMarshalerArray(array);
        public static void DisposeAbi(IntPtr abi) => MarshalInspectable<object>.DisposeAbi(abi);
        public static unsafe void DisposeAbiArray(object box) => MarshalInspectable<object>.DisposeAbiArray(box);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    internal sealed class CompositionAnimationGroupRcwFactoryAttribute : global::WinRT.WinRTImplementationTypeRcwFactoryAttribute
    {
        public override object CreateInstance(global::WinRT.IInspectable inspectable)
            => new global::Microsoft.UI.Composition.CompositionAnimationGroup(inspectable.ObjRef);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    public struct CompositionBackdropBrush
    {

        public static IObjectReference CreateMarshaler(global::Microsoft.UI.Composition.CompositionBackdropBrush obj) => obj is null ? null : MarshalInspectable<global::Microsoft.UI.Composition.CompositionBackdropBrush>.CreateMarshaler<IUnknownVftbl>(obj, global::ABI.Microsoft.UI.Composition.ICompositionBackdropBrushMethods.IID);
        public static ObjectReferenceValue CreateMarshaler2(global::Microsoft.UI.Composition.CompositionBackdropBrush obj) => MarshalInspectable<object>.CreateMarshaler2(obj, global::ABI.Microsoft.UI.Composition.ICompositionBackdropBrushMethods.IID);
        public static IntPtr GetAbi(IObjectReference value) => value is null ? IntPtr.Zero : MarshalInterfaceHelper<object>.GetAbi(value);
        public static global::Microsoft.UI.Composition.CompositionBackdropBrush FromAbi(IntPtr thisPtr) => global::Microsoft.UI.Composition.CompositionBackdropBrush.FromAbi(thisPtr);
        public static IntPtr FromManaged(global::Microsoft.UI.Composition.CompositionBackdropBrush obj) => obj is null ? IntPtr.Zero : CreateMarshaler2(obj).Detach();
        public static unsafe MarshalInterfaceHelper<global::Microsoft.UI.Composition.CompositionBackdropBrush>.MarshalerArray CreateMarshalerArray(global::Microsoft.UI.Composition.CompositionBackdropBrush[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.CompositionBackdropBrush>.CreateMarshalerArray2(array, (o) => CreateMarshaler2(o));
        public static (int length, IntPtr data) GetAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.CompositionBackdropBrush>.GetAbiArray(box);
        public static unsafe global::Microsoft.UI.Composition.CompositionBackdropBrush[] FromAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.CompositionBackdropBrush>.FromAbiArray(box, FromAbi);
        public static void CopyAbiArray(global::Microsoft.UI.Composition.CompositionBackdropBrush[] array, object box) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.CompositionBackdropBrush>.CopyAbiArray(array, box, FromAbi);
        public static (int length, IntPtr data) FromManagedArray(global::Microsoft.UI.Composition.CompositionBackdropBrush[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.CompositionBackdropBrush>.FromManagedArray(array, (o) => FromManaged(o));
        public static void DisposeMarshaler(IObjectReference value) => MarshalInspectable<object>.DisposeMarshaler(value);
        public static void DisposeMarshalerArray(MarshalInterfaceHelper<global::Microsoft.UI.Composition.CompositionBackdropBrush>.MarshalerArray array) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.CompositionBackdropBrush>.DisposeMarshalerArray(array);
        public static void DisposeAbi(IntPtr abi) => MarshalInspectable<object>.DisposeAbi(abi);
        public static unsafe void DisposeAbiArray(object box) => MarshalInspectable<object>.DisposeAbiArray(box);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    internal sealed class CompositionBackdropBrushRcwFactoryAttribute : global::WinRT.WinRTImplementationTypeRcwFactoryAttribute
    {
        public override object CreateInstance(global::WinRT.IInspectable inspectable)
            => new global::Microsoft.UI.Composition.CompositionBackdropBrush(inspectable.ObjRef);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    public struct CompositionBatchCompletedEventArgs
    {

        public static IObjectReference CreateMarshaler(global::Microsoft.UI.Composition.CompositionBatchCompletedEventArgs obj) => obj is null ? null : MarshalInspectable<global::Microsoft.UI.Composition.CompositionBatchCompletedEventArgs>.CreateMarshaler<IUnknownVftbl>(obj, global::ABI.Microsoft.UI.Composition.ICompositionBatchCompletedEventArgsMethods.IID);
        public static ObjectReferenceValue CreateMarshaler2(global::Microsoft.UI.Composition.CompositionBatchCompletedEventArgs obj) => MarshalInspectable<object>.CreateMarshaler2(obj, global::ABI.Microsoft.UI.Composition.ICompositionBatchCompletedEventArgsMethods.IID);
        public static IntPtr GetAbi(IObjectReference value) => value is null ? IntPtr.Zero : MarshalInterfaceHelper<object>.GetAbi(value);
        public static global::Microsoft.UI.Composition.CompositionBatchCompletedEventArgs FromAbi(IntPtr thisPtr) => global::Microsoft.UI.Composition.CompositionBatchCompletedEventArgs.FromAbi(thisPtr);
        public static IntPtr FromManaged(global::Microsoft.UI.Composition.CompositionBatchCompletedEventArgs obj) => obj is null ? IntPtr.Zero : CreateMarshaler2(obj).Detach();
        public static unsafe MarshalInterfaceHelper<global::Microsoft.UI.Composition.CompositionBatchCompletedEventArgs>.MarshalerArray CreateMarshalerArray(global::Microsoft.UI.Composition.CompositionBatchCompletedEventArgs[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.CompositionBatchCompletedEventArgs>.CreateMarshalerArray2(array, (o) => CreateMarshaler2(o));
        public static (int length, IntPtr data) GetAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.CompositionBatchCompletedEventArgs>.GetAbiArray(box);
        public static unsafe global::Microsoft.UI.Composition.CompositionBatchCompletedEventArgs[] FromAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.CompositionBatchCompletedEventArgs>.FromAbiArray(box, FromAbi);
        public static void CopyAbiArray(global::Microsoft.UI.Composition.CompositionBatchCompletedEventArgs[] array, object box) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.CompositionBatchCompletedEventArgs>.CopyAbiArray(array, box, FromAbi);
        public static (int length, IntPtr data) FromManagedArray(global::Microsoft.UI.Composition.CompositionBatchCompletedEventArgs[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.CompositionBatchCompletedEventArgs>.FromManagedArray(array, (o) => FromManaged(o));
        public static void DisposeMarshaler(IObjectReference value) => MarshalInspectable<object>.DisposeMarshaler(value);
        public static void DisposeMarshalerArray(MarshalInterfaceHelper<global::Microsoft.UI.Composition.CompositionBatchCompletedEventArgs>.MarshalerArray array) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.CompositionBatchCompletedEventArgs>.DisposeMarshalerArray(array);
        public static void DisposeAbi(IntPtr abi) => MarshalInspectable<object>.DisposeAbi(abi);
        public static unsafe void DisposeAbiArray(object box) => MarshalInspectable<object>.DisposeAbiArray(box);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    internal sealed class CompositionBatchCompletedEventArgsRcwFactoryAttribute : global::WinRT.WinRTImplementationTypeRcwFactoryAttribute
    {
        public override object CreateInstance(global::WinRT.IInspectable inspectable)
            => new global::Microsoft.UI.Composition.CompositionBatchCompletedEventArgs(inspectable.ObjRef);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    public struct CompositionBrush
    {

        public static IObjectReference CreateMarshaler(global::Microsoft.UI.Composition.CompositionBrush obj) => obj is null ? null : MarshalInspectable<global::Microsoft.UI.Composition.CompositionBrush>.CreateMarshaler<IUnknownVftbl>(obj, global::ABI.Microsoft.UI.Composition.ICompositionBrushMethods.IID);
        public static ObjectReferenceValue CreateMarshaler2(global::Microsoft.UI.Composition.CompositionBrush obj) => MarshalInspectable<object>.CreateMarshaler2(obj, global::ABI.Microsoft.UI.Composition.ICompositionBrushMethods.IID);
        public static IntPtr GetAbi(IObjectReference value) => value is null ? IntPtr.Zero : MarshalInterfaceHelper<object>.GetAbi(value);
        public static global::Microsoft.UI.Composition.CompositionBrush FromAbi(IntPtr thisPtr) => global::Microsoft.UI.Composition.CompositionBrush.FromAbi(thisPtr);
        public static IntPtr FromManaged(global::Microsoft.UI.Composition.CompositionBrush obj) => obj is null ? IntPtr.Zero : CreateMarshaler2(obj).Detach();
        public static unsafe MarshalInterfaceHelper<global::Microsoft.UI.Composition.CompositionBrush>.MarshalerArray CreateMarshalerArray(global::Microsoft.UI.Composition.CompositionBrush[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.CompositionBrush>.CreateMarshalerArray2(array, (o) => CreateMarshaler2(o));
        public static (int length, IntPtr data) GetAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.CompositionBrush>.GetAbiArray(box);
        public static unsafe global::Microsoft.UI.Composition.CompositionBrush[] FromAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.CompositionBrush>.FromAbiArray(box, FromAbi);
        public static void CopyAbiArray(global::Microsoft.UI.Composition.CompositionBrush[] array, object box) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.CompositionBrush>.CopyAbiArray(array, box, FromAbi);
        public static (int length, IntPtr data) FromManagedArray(global::Microsoft.UI.Composition.CompositionBrush[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.CompositionBrush>.FromManagedArray(array, (o) => FromManaged(o));
        public static void DisposeMarshaler(IObjectReference value) => MarshalInspectable<object>.DisposeMarshaler(value);
        public static void DisposeMarshalerArray(MarshalInterfaceHelper<global::Microsoft.UI.Composition.CompositionBrush>.MarshalerArray array) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.CompositionBrush>.DisposeMarshalerArray(array);
        public static void DisposeAbi(IntPtr abi) => MarshalInspectable<object>.DisposeAbi(abi);
        public static unsafe void DisposeAbiArray(object box) => MarshalInspectable<object>.DisposeAbiArray(box);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    internal sealed class CompositionBrushRcwFactoryAttribute : global::WinRT.WinRTImplementationTypeRcwFactoryAttribute
    {
        public override object CreateInstance(global::WinRT.IInspectable inspectable)
            => new global::Microsoft.UI.Composition.CompositionBrush(inspectable.ObjRef);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    public struct CompositionCapabilities
    {

        public static IObjectReference CreateMarshaler(global::Microsoft.UI.Composition.CompositionCapabilities obj) => obj is null ? null : MarshalInspectable<global::Microsoft.UI.Composition.CompositionCapabilities>.CreateMarshaler<IUnknownVftbl>(obj, global::ABI.Microsoft.UI.Composition.ICompositionCapabilitiesMethods.IID);
        public static ObjectReferenceValue CreateMarshaler2(global::Microsoft.UI.Composition.CompositionCapabilities obj) => MarshalInspectable<object>.CreateMarshaler2(obj, global::ABI.Microsoft.UI.Composition.ICompositionCapabilitiesMethods.IID);
        public static IntPtr GetAbi(IObjectReference value) => value is null ? IntPtr.Zero : MarshalInterfaceHelper<object>.GetAbi(value);
        public static global::Microsoft.UI.Composition.CompositionCapabilities FromAbi(IntPtr thisPtr) => global::Microsoft.UI.Composition.CompositionCapabilities.FromAbi(thisPtr);
        public static IntPtr FromManaged(global::Microsoft.UI.Composition.CompositionCapabilities obj) => obj is null ? IntPtr.Zero : CreateMarshaler2(obj).Detach();
        public static unsafe MarshalInterfaceHelper<global::Microsoft.UI.Composition.CompositionCapabilities>.MarshalerArray CreateMarshalerArray(global::Microsoft.UI.Composition.CompositionCapabilities[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.CompositionCapabilities>.CreateMarshalerArray2(array, (o) => CreateMarshaler2(o));
        public static (int length, IntPtr data) GetAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.CompositionCapabilities>.GetAbiArray(box);
        public static unsafe global::Microsoft.UI.Composition.CompositionCapabilities[] FromAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.CompositionCapabilities>.FromAbiArray(box, FromAbi);
        public static void CopyAbiArray(global::Microsoft.UI.Composition.CompositionCapabilities[] array, object box) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.CompositionCapabilities>.CopyAbiArray(array, box, FromAbi);
        public static (int length, IntPtr data) FromManagedArray(global::Microsoft.UI.Composition.CompositionCapabilities[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.CompositionCapabilities>.FromManagedArray(array, (o) => FromManaged(o));
        public static void DisposeMarshaler(IObjectReference value) => MarshalInspectable<object>.DisposeMarshaler(value);
        public static void DisposeMarshalerArray(MarshalInterfaceHelper<global::Microsoft.UI.Composition.CompositionCapabilities>.MarshalerArray array) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.CompositionCapabilities>.DisposeMarshalerArray(array);
        public static void DisposeAbi(IntPtr abi) => MarshalInspectable<object>.DisposeAbi(abi);
        public static unsafe void DisposeAbiArray(object box) => MarshalInspectable<object>.DisposeAbiArray(box);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    internal sealed class CompositionCapabilitiesRcwFactoryAttribute : global::WinRT.WinRTImplementationTypeRcwFactoryAttribute
    {
        public override object CreateInstance(global::WinRT.IInspectable inspectable)
            => new global::Microsoft.UI.Composition.CompositionCapabilities(inspectable.ObjRef);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    public struct CompositionClip
    {

        public static IObjectReference CreateMarshaler(global::Microsoft.UI.Composition.CompositionClip obj) => obj is null ? null : MarshalInspectable<global::Microsoft.UI.Composition.CompositionClip>.CreateMarshaler<IUnknownVftbl>(obj, global::ABI.Microsoft.UI.Composition.ICompositionClipMethods.IID);
        public static ObjectReferenceValue CreateMarshaler2(global::Microsoft.UI.Composition.CompositionClip obj) => MarshalInspectable<object>.CreateMarshaler2(obj, global::ABI.Microsoft.UI.Composition.ICompositionClipMethods.IID);
        public static IntPtr GetAbi(IObjectReference value) => value is null ? IntPtr.Zero : MarshalInterfaceHelper<object>.GetAbi(value);
        public static global::Microsoft.UI.Composition.CompositionClip FromAbi(IntPtr thisPtr) => global::Microsoft.UI.Composition.CompositionClip.FromAbi(thisPtr);
        public static IntPtr FromManaged(global::Microsoft.UI.Composition.CompositionClip obj) => obj is null ? IntPtr.Zero : CreateMarshaler2(obj).Detach();
        public static unsafe MarshalInterfaceHelper<global::Microsoft.UI.Composition.CompositionClip>.MarshalerArray CreateMarshalerArray(global::Microsoft.UI.Composition.CompositionClip[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.CompositionClip>.CreateMarshalerArray2(array, (o) => CreateMarshaler2(o));
        public static (int length, IntPtr data) GetAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.CompositionClip>.GetAbiArray(box);
        public static unsafe global::Microsoft.UI.Composition.CompositionClip[] FromAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.CompositionClip>.FromAbiArray(box, FromAbi);
        public static void CopyAbiArray(global::Microsoft.UI.Composition.CompositionClip[] array, object box) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.CompositionClip>.CopyAbiArray(array, box, FromAbi);
        public static (int length, IntPtr data) FromManagedArray(global::Microsoft.UI.Composition.CompositionClip[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.CompositionClip>.FromManagedArray(array, (o) => FromManaged(o));
        public static void DisposeMarshaler(IObjectReference value) => MarshalInspectable<object>.DisposeMarshaler(value);
        public static void DisposeMarshalerArray(MarshalInterfaceHelper<global::Microsoft.UI.Composition.CompositionClip>.MarshalerArray array) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.CompositionClip>.DisposeMarshalerArray(array);
        public static void DisposeAbi(IntPtr abi) => MarshalInspectable<object>.DisposeAbi(abi);
        public static unsafe void DisposeAbiArray(object box) => MarshalInspectable<object>.DisposeAbiArray(box);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    internal sealed class CompositionClipRcwFactoryAttribute : global::WinRT.WinRTImplementationTypeRcwFactoryAttribute
    {
        public override object CreateInstance(global::WinRT.IInspectable inspectable)
            => new global::Microsoft.UI.Composition.CompositionClip(inspectable.ObjRef);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    public struct CompositionColorBrush
    {

        public static IObjectReference CreateMarshaler(global::Microsoft.UI.Composition.CompositionColorBrush obj) => obj is null ? null : MarshalInspectable<global::Microsoft.UI.Composition.CompositionColorBrush>.CreateMarshaler<IUnknownVftbl>(obj, global::ABI.Microsoft.UI.Composition.ICompositionColorBrushMethods.IID);
        public static ObjectReferenceValue CreateMarshaler2(global::Microsoft.UI.Composition.CompositionColorBrush obj) => MarshalInspectable<object>.CreateMarshaler2(obj, global::ABI.Microsoft.UI.Composition.ICompositionColorBrushMethods.IID);
        public static IntPtr GetAbi(IObjectReference value) => value is null ? IntPtr.Zero : MarshalInterfaceHelper<object>.GetAbi(value);
        public static global::Microsoft.UI.Composition.CompositionColorBrush FromAbi(IntPtr thisPtr) => global::Microsoft.UI.Composition.CompositionColorBrush.FromAbi(thisPtr);
        public static IntPtr FromManaged(global::Microsoft.UI.Composition.CompositionColorBrush obj) => obj is null ? IntPtr.Zero : CreateMarshaler2(obj).Detach();
        public static unsafe MarshalInterfaceHelper<global::Microsoft.UI.Composition.CompositionColorBrush>.MarshalerArray CreateMarshalerArray(global::Microsoft.UI.Composition.CompositionColorBrush[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.CompositionColorBrush>.CreateMarshalerArray2(array, (o) => CreateMarshaler2(o));
        public static (int length, IntPtr data) GetAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.CompositionColorBrush>.GetAbiArray(box);
        public static unsafe global::Microsoft.UI.Composition.CompositionColorBrush[] FromAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.CompositionColorBrush>.FromAbiArray(box, FromAbi);
        public static void CopyAbiArray(global::Microsoft.UI.Composition.CompositionColorBrush[] array, object box) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.CompositionColorBrush>.CopyAbiArray(array, box, FromAbi);
        public static (int length, IntPtr data) FromManagedArray(global::Microsoft.UI.Composition.CompositionColorBrush[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.CompositionColorBrush>.FromManagedArray(array, (o) => FromManaged(o));
        public static void DisposeMarshaler(IObjectReference value) => MarshalInspectable<object>.DisposeMarshaler(value);
        public static void DisposeMarshalerArray(MarshalInterfaceHelper<global::Microsoft.UI.Composition.CompositionColorBrush>.MarshalerArray array) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.CompositionColorBrush>.DisposeMarshalerArray(array);
        public static void DisposeAbi(IntPtr abi) => MarshalInspectable<object>.DisposeAbi(abi);
        public static unsafe void DisposeAbiArray(object box) => MarshalInspectable<object>.DisposeAbiArray(box);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    internal sealed class CompositionColorBrushRcwFactoryAttribute : global::WinRT.WinRTImplementationTypeRcwFactoryAttribute
    {
        public override object CreateInstance(global::WinRT.IInspectable inspectable)
            => new global::Microsoft.UI.Composition.CompositionColorBrush(inspectable.ObjRef);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    public struct CompositionColorGradientStop
    {

        public static IObjectReference CreateMarshaler(global::Microsoft.UI.Composition.CompositionColorGradientStop obj) => obj is null ? null : MarshalInspectable<global::Microsoft.UI.Composition.CompositionColorGradientStop>.CreateMarshaler<IUnknownVftbl>(obj, global::ABI.Microsoft.UI.Composition.ICompositionColorGradientStopMethods.IID);
        public static ObjectReferenceValue CreateMarshaler2(global::Microsoft.UI.Composition.CompositionColorGradientStop obj) => MarshalInspectable<object>.CreateMarshaler2(obj, global::ABI.Microsoft.UI.Composition.ICompositionColorGradientStopMethods.IID);
        public static IntPtr GetAbi(IObjectReference value) => value is null ? IntPtr.Zero : MarshalInterfaceHelper<object>.GetAbi(value);
        public static global::Microsoft.UI.Composition.CompositionColorGradientStop FromAbi(IntPtr thisPtr) => global::Microsoft.UI.Composition.CompositionColorGradientStop.FromAbi(thisPtr);
        public static IntPtr FromManaged(global::Microsoft.UI.Composition.CompositionColorGradientStop obj) => obj is null ? IntPtr.Zero : CreateMarshaler2(obj).Detach();
        public static unsafe MarshalInterfaceHelper<global::Microsoft.UI.Composition.CompositionColorGradientStop>.MarshalerArray CreateMarshalerArray(global::Microsoft.UI.Composition.CompositionColorGradientStop[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.CompositionColorGradientStop>.CreateMarshalerArray2(array, (o) => CreateMarshaler2(o));
        public static (int length, IntPtr data) GetAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.CompositionColorGradientStop>.GetAbiArray(box);
        public static unsafe global::Microsoft.UI.Composition.CompositionColorGradientStop[] FromAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.CompositionColorGradientStop>.FromAbiArray(box, FromAbi);
        public static void CopyAbiArray(global::Microsoft.UI.Composition.CompositionColorGradientStop[] array, object box) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.CompositionColorGradientStop>.CopyAbiArray(array, box, FromAbi);
        public static (int length, IntPtr data) FromManagedArray(global::Microsoft.UI.Composition.CompositionColorGradientStop[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.CompositionColorGradientStop>.FromManagedArray(array, (o) => FromManaged(o));
        public static void DisposeMarshaler(IObjectReference value) => MarshalInspectable<object>.DisposeMarshaler(value);
        public static void DisposeMarshalerArray(MarshalInterfaceHelper<global::Microsoft.UI.Composition.CompositionColorGradientStop>.MarshalerArray array) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.CompositionColorGradientStop>.DisposeMarshalerArray(array);
        public static void DisposeAbi(IntPtr abi) => MarshalInspectable<object>.DisposeAbi(abi);
        public static unsafe void DisposeAbiArray(object box) => MarshalInspectable<object>.DisposeAbiArray(box);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    internal sealed class CompositionColorGradientStopRcwFactoryAttribute : global::WinRT.WinRTImplementationTypeRcwFactoryAttribute
    {
        public override object CreateInstance(global::WinRT.IInspectable inspectable)
            => new global::Microsoft.UI.Composition.CompositionColorGradientStop(inspectable.ObjRef);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    public struct CompositionColorGradientStopCollection
    {

        public static IObjectReference CreateMarshaler(global::Microsoft.UI.Composition.CompositionColorGradientStopCollection obj) => obj is null ? null : MarshalInspectable<global::Microsoft.UI.Composition.CompositionColorGradientStopCollection>.CreateMarshaler<IUnknownVftbl>(obj, global::ABI.Microsoft.UI.Composition.ICompositionColorGradientStopCollectionMethods.IID);
        public static ObjectReferenceValue CreateMarshaler2(global::Microsoft.UI.Composition.CompositionColorGradientStopCollection obj) => MarshalInspectable<object>.CreateMarshaler2(obj, global::ABI.Microsoft.UI.Composition.ICompositionColorGradientStopCollectionMethods.IID);
        public static IntPtr GetAbi(IObjectReference value) => value is null ? IntPtr.Zero : MarshalInterfaceHelper<object>.GetAbi(value);
        public static global::Microsoft.UI.Composition.CompositionColorGradientStopCollection FromAbi(IntPtr thisPtr) => global::Microsoft.UI.Composition.CompositionColorGradientStopCollection.FromAbi(thisPtr);
        public static IntPtr FromManaged(global::Microsoft.UI.Composition.CompositionColorGradientStopCollection obj) => obj is null ? IntPtr.Zero : CreateMarshaler2(obj).Detach();
        public static unsafe MarshalInterfaceHelper<global::Microsoft.UI.Composition.CompositionColorGradientStopCollection>.MarshalerArray CreateMarshalerArray(global::Microsoft.UI.Composition.CompositionColorGradientStopCollection[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.CompositionColorGradientStopCollection>.CreateMarshalerArray2(array, (o) => CreateMarshaler2(o));
        public static (int length, IntPtr data) GetAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.CompositionColorGradientStopCollection>.GetAbiArray(box);
        public static unsafe global::Microsoft.UI.Composition.CompositionColorGradientStopCollection[] FromAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.CompositionColorGradientStopCollection>.FromAbiArray(box, FromAbi);
        public static void CopyAbiArray(global::Microsoft.UI.Composition.CompositionColorGradientStopCollection[] array, object box) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.CompositionColorGradientStopCollection>.CopyAbiArray(array, box, FromAbi);
        public static (int length, IntPtr data) FromManagedArray(global::Microsoft.UI.Composition.CompositionColorGradientStopCollection[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.CompositionColorGradientStopCollection>.FromManagedArray(array, (o) => FromManaged(o));
        public static void DisposeMarshaler(IObjectReference value) => MarshalInspectable<object>.DisposeMarshaler(value);
        public static void DisposeMarshalerArray(MarshalInterfaceHelper<global::Microsoft.UI.Composition.CompositionColorGradientStopCollection>.MarshalerArray array) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.CompositionColorGradientStopCollection>.DisposeMarshalerArray(array);
        public static void DisposeAbi(IntPtr abi) => MarshalInspectable<object>.DisposeAbi(abi);
        public static unsafe void DisposeAbiArray(object box) => MarshalInspectable<object>.DisposeAbiArray(box);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    internal sealed class CompositionColorGradientStopCollectionRcwFactoryAttribute : global::WinRT.WinRTImplementationTypeRcwFactoryAttribute
    {
        public override object CreateInstance(global::WinRT.IInspectable inspectable)
            => new global::Microsoft.UI.Composition.CompositionColorGradientStopCollection(inspectable.ObjRef);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    public struct CompositionCommitBatch
    {

        public static IObjectReference CreateMarshaler(global::Microsoft.UI.Composition.CompositionCommitBatch obj) => obj is null ? null : MarshalInspectable<global::Microsoft.UI.Composition.CompositionCommitBatch>.CreateMarshaler<IUnknownVftbl>(obj, global::ABI.Microsoft.UI.Composition.ICompositionCommitBatchMethods.IID);
        public static ObjectReferenceValue CreateMarshaler2(global::Microsoft.UI.Composition.CompositionCommitBatch obj) => MarshalInspectable<object>.CreateMarshaler2(obj, global::ABI.Microsoft.UI.Composition.ICompositionCommitBatchMethods.IID);
        public static IntPtr GetAbi(IObjectReference value) => value is null ? IntPtr.Zero : MarshalInterfaceHelper<object>.GetAbi(value);
        public static global::Microsoft.UI.Composition.CompositionCommitBatch FromAbi(IntPtr thisPtr) => global::Microsoft.UI.Composition.CompositionCommitBatch.FromAbi(thisPtr);
        public static IntPtr FromManaged(global::Microsoft.UI.Composition.CompositionCommitBatch obj) => obj is null ? IntPtr.Zero : CreateMarshaler2(obj).Detach();
        public static unsafe MarshalInterfaceHelper<global::Microsoft.UI.Composition.CompositionCommitBatch>.MarshalerArray CreateMarshalerArray(global::Microsoft.UI.Composition.CompositionCommitBatch[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.CompositionCommitBatch>.CreateMarshalerArray2(array, (o) => CreateMarshaler2(o));
        public static (int length, IntPtr data) GetAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.CompositionCommitBatch>.GetAbiArray(box);
        public static unsafe global::Microsoft.UI.Composition.CompositionCommitBatch[] FromAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.CompositionCommitBatch>.FromAbiArray(box, FromAbi);
        public static void CopyAbiArray(global::Microsoft.UI.Composition.CompositionCommitBatch[] array, object box) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.CompositionCommitBatch>.CopyAbiArray(array, box, FromAbi);
        public static (int length, IntPtr data) FromManagedArray(global::Microsoft.UI.Composition.CompositionCommitBatch[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.CompositionCommitBatch>.FromManagedArray(array, (o) => FromManaged(o));
        public static void DisposeMarshaler(IObjectReference value) => MarshalInspectable<object>.DisposeMarshaler(value);
        public static void DisposeMarshalerArray(MarshalInterfaceHelper<global::Microsoft.UI.Composition.CompositionCommitBatch>.MarshalerArray array) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.CompositionCommitBatch>.DisposeMarshalerArray(array);
        public static void DisposeAbi(IntPtr abi) => MarshalInspectable<object>.DisposeAbi(abi);
        public static unsafe void DisposeAbiArray(object box) => MarshalInspectable<object>.DisposeAbiArray(box);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    internal sealed class CompositionCommitBatchRcwFactoryAttribute : global::WinRT.WinRTImplementationTypeRcwFactoryAttribute
    {
        public override object CreateInstance(global::WinRT.IInspectable inspectable)
            => new global::Microsoft.UI.Composition.CompositionCommitBatch(inspectable.ObjRef);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    public struct CompositionContainerShape
    {

        public static IObjectReference CreateMarshaler(global::Microsoft.UI.Composition.CompositionContainerShape obj) => obj is null ? null : MarshalInspectable<global::Microsoft.UI.Composition.CompositionContainerShape>.CreateMarshaler<IUnknownVftbl>(obj, global::ABI.Microsoft.UI.Composition.ICompositionContainerShapeMethods.IID);
        public static ObjectReferenceValue CreateMarshaler2(global::Microsoft.UI.Composition.CompositionContainerShape obj) => MarshalInspectable<object>.CreateMarshaler2(obj, global::ABI.Microsoft.UI.Composition.ICompositionContainerShapeMethods.IID);
        public static IntPtr GetAbi(IObjectReference value) => value is null ? IntPtr.Zero : MarshalInterfaceHelper<object>.GetAbi(value);
        public static global::Microsoft.UI.Composition.CompositionContainerShape FromAbi(IntPtr thisPtr) => global::Microsoft.UI.Composition.CompositionContainerShape.FromAbi(thisPtr);
        public static IntPtr FromManaged(global::Microsoft.UI.Composition.CompositionContainerShape obj) => obj is null ? IntPtr.Zero : CreateMarshaler2(obj).Detach();
        public static unsafe MarshalInterfaceHelper<global::Microsoft.UI.Composition.CompositionContainerShape>.MarshalerArray CreateMarshalerArray(global::Microsoft.UI.Composition.CompositionContainerShape[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.CompositionContainerShape>.CreateMarshalerArray2(array, (o) => CreateMarshaler2(o));
        public static (int length, IntPtr data) GetAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.CompositionContainerShape>.GetAbiArray(box);
        public static unsafe global::Microsoft.UI.Composition.CompositionContainerShape[] FromAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.CompositionContainerShape>.FromAbiArray(box, FromAbi);
        public static void CopyAbiArray(global::Microsoft.UI.Composition.CompositionContainerShape[] array, object box) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.CompositionContainerShape>.CopyAbiArray(array, box, FromAbi);
        public static (int length, IntPtr data) FromManagedArray(global::Microsoft.UI.Composition.CompositionContainerShape[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.CompositionContainerShape>.FromManagedArray(array, (o) => FromManaged(o));
        public static void DisposeMarshaler(IObjectReference value) => MarshalInspectable<object>.DisposeMarshaler(value);
        public static void DisposeMarshalerArray(MarshalInterfaceHelper<global::Microsoft.UI.Composition.CompositionContainerShape>.MarshalerArray array) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.CompositionContainerShape>.DisposeMarshalerArray(array);
        public static void DisposeAbi(IntPtr abi) => MarshalInspectable<object>.DisposeAbi(abi);
        public static unsafe void DisposeAbiArray(object box) => MarshalInspectable<object>.DisposeAbiArray(box);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    internal sealed class CompositionContainerShapeRcwFactoryAttribute : global::WinRT.WinRTImplementationTypeRcwFactoryAttribute
    {
        public override object CreateInstance(global::WinRT.IInspectable inspectable)
            => new global::Microsoft.UI.Composition.CompositionContainerShape(inspectable.ObjRef);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    public struct CompositionDrawingSurface
    {

        public static IObjectReference CreateMarshaler(global::Microsoft.UI.Composition.CompositionDrawingSurface obj) => obj is null ? null : MarshalInspectable<global::Microsoft.UI.Composition.CompositionDrawingSurface>.CreateMarshaler<IUnknownVftbl>(obj, global::ABI.Microsoft.UI.Composition.ICompositionDrawingSurfaceMethods.IID);
        public static ObjectReferenceValue CreateMarshaler2(global::Microsoft.UI.Composition.CompositionDrawingSurface obj) => MarshalInspectable<object>.CreateMarshaler2(obj, global::ABI.Microsoft.UI.Composition.ICompositionDrawingSurfaceMethods.IID);
        public static IntPtr GetAbi(IObjectReference value) => value is null ? IntPtr.Zero : MarshalInterfaceHelper<object>.GetAbi(value);
        public static global::Microsoft.UI.Composition.CompositionDrawingSurface FromAbi(IntPtr thisPtr) => global::Microsoft.UI.Composition.CompositionDrawingSurface.FromAbi(thisPtr);
        public static IntPtr FromManaged(global::Microsoft.UI.Composition.CompositionDrawingSurface obj) => obj is null ? IntPtr.Zero : CreateMarshaler2(obj).Detach();
        public static unsafe MarshalInterfaceHelper<global::Microsoft.UI.Composition.CompositionDrawingSurface>.MarshalerArray CreateMarshalerArray(global::Microsoft.UI.Composition.CompositionDrawingSurface[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.CompositionDrawingSurface>.CreateMarshalerArray2(array, (o) => CreateMarshaler2(o));
        public static (int length, IntPtr data) GetAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.CompositionDrawingSurface>.GetAbiArray(box);
        public static unsafe global::Microsoft.UI.Composition.CompositionDrawingSurface[] FromAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.CompositionDrawingSurface>.FromAbiArray(box, FromAbi);
        public static void CopyAbiArray(global::Microsoft.UI.Composition.CompositionDrawingSurface[] array, object box) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.CompositionDrawingSurface>.CopyAbiArray(array, box, FromAbi);
        public static (int length, IntPtr data) FromManagedArray(global::Microsoft.UI.Composition.CompositionDrawingSurface[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.CompositionDrawingSurface>.FromManagedArray(array, (o) => FromManaged(o));
        public static void DisposeMarshaler(IObjectReference value) => MarshalInspectable<object>.DisposeMarshaler(value);
        public static void DisposeMarshalerArray(MarshalInterfaceHelper<global::Microsoft.UI.Composition.CompositionDrawingSurface>.MarshalerArray array) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.CompositionDrawingSurface>.DisposeMarshalerArray(array);
        public static void DisposeAbi(IntPtr abi) => MarshalInspectable<object>.DisposeAbi(abi);
        public static unsafe void DisposeAbiArray(object box) => MarshalInspectable<object>.DisposeAbiArray(box);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    internal sealed class CompositionDrawingSurfaceRcwFactoryAttribute : global::WinRT.WinRTImplementationTypeRcwFactoryAttribute
    {
        public override object CreateInstance(global::WinRT.IInspectable inspectable)
            => new global::Microsoft.UI.Composition.CompositionDrawingSurface(inspectable.ObjRef);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    public struct CompositionEasingFunction
    {

        public static IObjectReference CreateMarshaler(global::Microsoft.UI.Composition.CompositionEasingFunction obj) => obj is null ? null : MarshalInspectable<global::Microsoft.UI.Composition.CompositionEasingFunction>.CreateMarshaler<IUnknownVftbl>(obj, global::ABI.Microsoft.UI.Composition.ICompositionEasingFunctionMethods.IID);
        public static ObjectReferenceValue CreateMarshaler2(global::Microsoft.UI.Composition.CompositionEasingFunction obj) => MarshalInspectable<object>.CreateMarshaler2(obj, global::ABI.Microsoft.UI.Composition.ICompositionEasingFunctionMethods.IID);
        public static IntPtr GetAbi(IObjectReference value) => value is null ? IntPtr.Zero : MarshalInterfaceHelper<object>.GetAbi(value);
        public static global::Microsoft.UI.Composition.CompositionEasingFunction FromAbi(IntPtr thisPtr) => global::Microsoft.UI.Composition.CompositionEasingFunction.FromAbi(thisPtr);
        public static IntPtr FromManaged(global::Microsoft.UI.Composition.CompositionEasingFunction obj) => obj is null ? IntPtr.Zero : CreateMarshaler2(obj).Detach();
        public static unsafe MarshalInterfaceHelper<global::Microsoft.UI.Composition.CompositionEasingFunction>.MarshalerArray CreateMarshalerArray(global::Microsoft.UI.Composition.CompositionEasingFunction[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.CompositionEasingFunction>.CreateMarshalerArray2(array, (o) => CreateMarshaler2(o));
        public static (int length, IntPtr data) GetAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.CompositionEasingFunction>.GetAbiArray(box);
        public static unsafe global::Microsoft.UI.Composition.CompositionEasingFunction[] FromAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.CompositionEasingFunction>.FromAbiArray(box, FromAbi);
        public static void CopyAbiArray(global::Microsoft.UI.Composition.CompositionEasingFunction[] array, object box) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.CompositionEasingFunction>.CopyAbiArray(array, box, FromAbi);
        public static (int length, IntPtr data) FromManagedArray(global::Microsoft.UI.Composition.CompositionEasingFunction[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.CompositionEasingFunction>.FromManagedArray(array, (o) => FromManaged(o));
        public static void DisposeMarshaler(IObjectReference value) => MarshalInspectable<object>.DisposeMarshaler(value);
        public static void DisposeMarshalerArray(MarshalInterfaceHelper<global::Microsoft.UI.Composition.CompositionEasingFunction>.MarshalerArray array) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.CompositionEasingFunction>.DisposeMarshalerArray(array);
        public static void DisposeAbi(IntPtr abi) => MarshalInspectable<object>.DisposeAbi(abi);
        public static unsafe void DisposeAbiArray(object box) => MarshalInspectable<object>.DisposeAbiArray(box);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    internal sealed class CompositionEasingFunctionRcwFactoryAttribute : global::WinRT.WinRTImplementationTypeRcwFactoryAttribute
    {
        public override object CreateInstance(global::WinRT.IInspectable inspectable)
            => new global::Microsoft.UI.Composition.CompositionEasingFunction(inspectable.ObjRef);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    public struct CompositionEffectBrush
    {

        public static IObjectReference CreateMarshaler(global::Microsoft.UI.Composition.CompositionEffectBrush obj) => obj is null ? null : MarshalInspectable<global::Microsoft.UI.Composition.CompositionEffectBrush>.CreateMarshaler<IUnknownVftbl>(obj, global::ABI.Microsoft.UI.Composition.ICompositionEffectBrushMethods.IID);
        public static ObjectReferenceValue CreateMarshaler2(global::Microsoft.UI.Composition.CompositionEffectBrush obj) => MarshalInspectable<object>.CreateMarshaler2(obj, global::ABI.Microsoft.UI.Composition.ICompositionEffectBrushMethods.IID);
        public static IntPtr GetAbi(IObjectReference value) => value is null ? IntPtr.Zero : MarshalInterfaceHelper<object>.GetAbi(value);
        public static global::Microsoft.UI.Composition.CompositionEffectBrush FromAbi(IntPtr thisPtr) => global::Microsoft.UI.Composition.CompositionEffectBrush.FromAbi(thisPtr);
        public static IntPtr FromManaged(global::Microsoft.UI.Composition.CompositionEffectBrush obj) => obj is null ? IntPtr.Zero : CreateMarshaler2(obj).Detach();
        public static unsafe MarshalInterfaceHelper<global::Microsoft.UI.Composition.CompositionEffectBrush>.MarshalerArray CreateMarshalerArray(global::Microsoft.UI.Composition.CompositionEffectBrush[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.CompositionEffectBrush>.CreateMarshalerArray2(array, (o) => CreateMarshaler2(o));
        public static (int length, IntPtr data) GetAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.CompositionEffectBrush>.GetAbiArray(box);
        public static unsafe global::Microsoft.UI.Composition.CompositionEffectBrush[] FromAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.CompositionEffectBrush>.FromAbiArray(box, FromAbi);
        public static void CopyAbiArray(global::Microsoft.UI.Composition.CompositionEffectBrush[] array, object box) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.CompositionEffectBrush>.CopyAbiArray(array, box, FromAbi);
        public static (int length, IntPtr data) FromManagedArray(global::Microsoft.UI.Composition.CompositionEffectBrush[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.CompositionEffectBrush>.FromManagedArray(array, (o) => FromManaged(o));
        public static void DisposeMarshaler(IObjectReference value) => MarshalInspectable<object>.DisposeMarshaler(value);
        public static void DisposeMarshalerArray(MarshalInterfaceHelper<global::Microsoft.UI.Composition.CompositionEffectBrush>.MarshalerArray array) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.CompositionEffectBrush>.DisposeMarshalerArray(array);
        public static void DisposeAbi(IntPtr abi) => MarshalInspectable<object>.DisposeAbi(abi);
        public static unsafe void DisposeAbiArray(object box) => MarshalInspectable<object>.DisposeAbiArray(box);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    internal sealed class CompositionEffectBrushRcwFactoryAttribute : global::WinRT.WinRTImplementationTypeRcwFactoryAttribute
    {
        public override object CreateInstance(global::WinRT.IInspectable inspectable)
            => new global::Microsoft.UI.Composition.CompositionEffectBrush(inspectable.ObjRef);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    public struct CompositionEffectFactory
    {

        public static IObjectReference CreateMarshaler(global::Microsoft.UI.Composition.CompositionEffectFactory obj) => obj is null ? null : MarshalInspectable<global::Microsoft.UI.Composition.CompositionEffectFactory>.CreateMarshaler<IUnknownVftbl>(obj, global::ABI.Microsoft.UI.Composition.ICompositionEffectFactoryMethods.IID);
        public static ObjectReferenceValue CreateMarshaler2(global::Microsoft.UI.Composition.CompositionEffectFactory obj) => MarshalInspectable<object>.CreateMarshaler2(obj, global::ABI.Microsoft.UI.Composition.ICompositionEffectFactoryMethods.IID);
        public static IntPtr GetAbi(IObjectReference value) => value is null ? IntPtr.Zero : MarshalInterfaceHelper<object>.GetAbi(value);
        public static global::Microsoft.UI.Composition.CompositionEffectFactory FromAbi(IntPtr thisPtr) => global::Microsoft.UI.Composition.CompositionEffectFactory.FromAbi(thisPtr);
        public static IntPtr FromManaged(global::Microsoft.UI.Composition.CompositionEffectFactory obj) => obj is null ? IntPtr.Zero : CreateMarshaler2(obj).Detach();
        public static unsafe MarshalInterfaceHelper<global::Microsoft.UI.Composition.CompositionEffectFactory>.MarshalerArray CreateMarshalerArray(global::Microsoft.UI.Composition.CompositionEffectFactory[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.CompositionEffectFactory>.CreateMarshalerArray2(array, (o) => CreateMarshaler2(o));
        public static (int length, IntPtr data) GetAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.CompositionEffectFactory>.GetAbiArray(box);
        public static unsafe global::Microsoft.UI.Composition.CompositionEffectFactory[] FromAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.CompositionEffectFactory>.FromAbiArray(box, FromAbi);
        public static void CopyAbiArray(global::Microsoft.UI.Composition.CompositionEffectFactory[] array, object box) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.CompositionEffectFactory>.CopyAbiArray(array, box, FromAbi);
        public static (int length, IntPtr data) FromManagedArray(global::Microsoft.UI.Composition.CompositionEffectFactory[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.CompositionEffectFactory>.FromManagedArray(array, (o) => FromManaged(o));
        public static void DisposeMarshaler(IObjectReference value) => MarshalInspectable<object>.DisposeMarshaler(value);
        public static void DisposeMarshalerArray(MarshalInterfaceHelper<global::Microsoft.UI.Composition.CompositionEffectFactory>.MarshalerArray array) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.CompositionEffectFactory>.DisposeMarshalerArray(array);
        public static void DisposeAbi(IntPtr abi) => MarshalInspectable<object>.DisposeAbi(abi);
        public static unsafe void DisposeAbiArray(object box) => MarshalInspectable<object>.DisposeAbiArray(box);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    internal sealed class CompositionEffectFactoryRcwFactoryAttribute : global::WinRT.WinRTImplementationTypeRcwFactoryAttribute
    {
        public override object CreateInstance(global::WinRT.IInspectable inspectable)
            => new global::Microsoft.UI.Composition.CompositionEffectFactory(inspectable.ObjRef);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    public struct CompositionEffectSourceParameter
    {

        public static IObjectReference CreateMarshaler(global::Microsoft.UI.Composition.CompositionEffectSourceParameter obj) => obj is null ? null : MarshalInspectable<global::Microsoft.UI.Composition.CompositionEffectSourceParameter>.CreateMarshaler<IUnknownVftbl>(obj, global::ABI.Microsoft.UI.Composition.ICompositionEffectSourceParameterMethods.IID);
        public static ObjectReferenceValue CreateMarshaler2(global::Microsoft.UI.Composition.CompositionEffectSourceParameter obj) => MarshalInspectable<object>.CreateMarshaler2(obj, global::ABI.Microsoft.UI.Composition.ICompositionEffectSourceParameterMethods.IID);
        public static IntPtr GetAbi(IObjectReference value) => value is null ? IntPtr.Zero : MarshalInterfaceHelper<object>.GetAbi(value);
        public static global::Microsoft.UI.Composition.CompositionEffectSourceParameter FromAbi(IntPtr thisPtr) => global::Microsoft.UI.Composition.CompositionEffectSourceParameter.FromAbi(thisPtr);
        public static IntPtr FromManaged(global::Microsoft.UI.Composition.CompositionEffectSourceParameter obj) => obj is null ? IntPtr.Zero : CreateMarshaler2(obj).Detach();
        public static unsafe MarshalInterfaceHelper<global::Microsoft.UI.Composition.CompositionEffectSourceParameter>.MarshalerArray CreateMarshalerArray(global::Microsoft.UI.Composition.CompositionEffectSourceParameter[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.CompositionEffectSourceParameter>.CreateMarshalerArray2(array, (o) => CreateMarshaler2(o));
        public static (int length, IntPtr data) GetAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.CompositionEffectSourceParameter>.GetAbiArray(box);
        public static unsafe global::Microsoft.UI.Composition.CompositionEffectSourceParameter[] FromAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.CompositionEffectSourceParameter>.FromAbiArray(box, FromAbi);
        public static void CopyAbiArray(global::Microsoft.UI.Composition.CompositionEffectSourceParameter[] array, object box) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.CompositionEffectSourceParameter>.CopyAbiArray(array, box, FromAbi);
        public static (int length, IntPtr data) FromManagedArray(global::Microsoft.UI.Composition.CompositionEffectSourceParameter[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.CompositionEffectSourceParameter>.FromManagedArray(array, (o) => FromManaged(o));
        public static void DisposeMarshaler(IObjectReference value) => MarshalInspectable<object>.DisposeMarshaler(value);
        public static void DisposeMarshalerArray(MarshalInterfaceHelper<global::Microsoft.UI.Composition.CompositionEffectSourceParameter>.MarshalerArray array) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.CompositionEffectSourceParameter>.DisposeMarshalerArray(array);
        public static void DisposeAbi(IntPtr abi) => MarshalInspectable<object>.DisposeAbi(abi);
        public static unsafe void DisposeAbiArray(object box) => MarshalInspectable<object>.DisposeAbiArray(box);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    internal sealed class CompositionEffectSourceParameterRcwFactoryAttribute : global::WinRT.WinRTImplementationTypeRcwFactoryAttribute
    {
        public override object CreateInstance(global::WinRT.IInspectable inspectable)
            => new global::Microsoft.UI.Composition.CompositionEffectSourceParameter(inspectable.ObjRef);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    public struct CompositionEllipseGeometry
    {

        public static IObjectReference CreateMarshaler(global::Microsoft.UI.Composition.CompositionEllipseGeometry obj) => obj is null ? null : MarshalInspectable<global::Microsoft.UI.Composition.CompositionEllipseGeometry>.CreateMarshaler<IUnknownVftbl>(obj, global::ABI.Microsoft.UI.Composition.ICompositionEllipseGeometryMethods.IID);
        public static ObjectReferenceValue CreateMarshaler2(global::Microsoft.UI.Composition.CompositionEllipseGeometry obj) => MarshalInspectable<object>.CreateMarshaler2(obj, global::ABI.Microsoft.UI.Composition.ICompositionEllipseGeometryMethods.IID);
        public static IntPtr GetAbi(IObjectReference value) => value is null ? IntPtr.Zero : MarshalInterfaceHelper<object>.GetAbi(value);
        public static global::Microsoft.UI.Composition.CompositionEllipseGeometry FromAbi(IntPtr thisPtr) => global::Microsoft.UI.Composition.CompositionEllipseGeometry.FromAbi(thisPtr);
        public static IntPtr FromManaged(global::Microsoft.UI.Composition.CompositionEllipseGeometry obj) => obj is null ? IntPtr.Zero : CreateMarshaler2(obj).Detach();
        public static unsafe MarshalInterfaceHelper<global::Microsoft.UI.Composition.CompositionEllipseGeometry>.MarshalerArray CreateMarshalerArray(global::Microsoft.UI.Composition.CompositionEllipseGeometry[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.CompositionEllipseGeometry>.CreateMarshalerArray2(array, (o) => CreateMarshaler2(o));
        public static (int length, IntPtr data) GetAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.CompositionEllipseGeometry>.GetAbiArray(box);
        public static unsafe global::Microsoft.UI.Composition.CompositionEllipseGeometry[] FromAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.CompositionEllipseGeometry>.FromAbiArray(box, FromAbi);
        public static void CopyAbiArray(global::Microsoft.UI.Composition.CompositionEllipseGeometry[] array, object box) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.CompositionEllipseGeometry>.CopyAbiArray(array, box, FromAbi);
        public static (int length, IntPtr data) FromManagedArray(global::Microsoft.UI.Composition.CompositionEllipseGeometry[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.CompositionEllipseGeometry>.FromManagedArray(array, (o) => FromManaged(o));
        public static void DisposeMarshaler(IObjectReference value) => MarshalInspectable<object>.DisposeMarshaler(value);
        public static void DisposeMarshalerArray(MarshalInterfaceHelper<global::Microsoft.UI.Composition.CompositionEllipseGeometry>.MarshalerArray array) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.CompositionEllipseGeometry>.DisposeMarshalerArray(array);
        public static void DisposeAbi(IntPtr abi) => MarshalInspectable<object>.DisposeAbi(abi);
        public static unsafe void DisposeAbiArray(object box) => MarshalInspectable<object>.DisposeAbiArray(box);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    internal sealed class CompositionEllipseGeometryRcwFactoryAttribute : global::WinRT.WinRTImplementationTypeRcwFactoryAttribute
    {
        public override object CreateInstance(global::WinRT.IInspectable inspectable)
            => new global::Microsoft.UI.Composition.CompositionEllipseGeometry(inspectable.ObjRef);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    public struct CompositionGeometricClip
    {

        public static IObjectReference CreateMarshaler(global::Microsoft.UI.Composition.CompositionGeometricClip obj) => obj is null ? null : MarshalInspectable<global::Microsoft.UI.Composition.CompositionGeometricClip>.CreateMarshaler<IUnknownVftbl>(obj, global::ABI.Microsoft.UI.Composition.ICompositionGeometricClipMethods.IID);
        public static ObjectReferenceValue CreateMarshaler2(global::Microsoft.UI.Composition.CompositionGeometricClip obj) => MarshalInspectable<object>.CreateMarshaler2(obj, global::ABI.Microsoft.UI.Composition.ICompositionGeometricClipMethods.IID);
        public static IntPtr GetAbi(IObjectReference value) => value is null ? IntPtr.Zero : MarshalInterfaceHelper<object>.GetAbi(value);
        public static global::Microsoft.UI.Composition.CompositionGeometricClip FromAbi(IntPtr thisPtr) => global::Microsoft.UI.Composition.CompositionGeometricClip.FromAbi(thisPtr);
        public static IntPtr FromManaged(global::Microsoft.UI.Composition.CompositionGeometricClip obj) => obj is null ? IntPtr.Zero : CreateMarshaler2(obj).Detach();
        public static unsafe MarshalInterfaceHelper<global::Microsoft.UI.Composition.CompositionGeometricClip>.MarshalerArray CreateMarshalerArray(global::Microsoft.UI.Composition.CompositionGeometricClip[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.CompositionGeometricClip>.CreateMarshalerArray2(array, (o) => CreateMarshaler2(o));
        public static (int length, IntPtr data) GetAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.CompositionGeometricClip>.GetAbiArray(box);
        public static unsafe global::Microsoft.UI.Composition.CompositionGeometricClip[] FromAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.CompositionGeometricClip>.FromAbiArray(box, FromAbi);
        public static void CopyAbiArray(global::Microsoft.UI.Composition.CompositionGeometricClip[] array, object box) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.CompositionGeometricClip>.CopyAbiArray(array, box, FromAbi);
        public static (int length, IntPtr data) FromManagedArray(global::Microsoft.UI.Composition.CompositionGeometricClip[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.CompositionGeometricClip>.FromManagedArray(array, (o) => FromManaged(o));
        public static void DisposeMarshaler(IObjectReference value) => MarshalInspectable<object>.DisposeMarshaler(value);
        public static void DisposeMarshalerArray(MarshalInterfaceHelper<global::Microsoft.UI.Composition.CompositionGeometricClip>.MarshalerArray array) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.CompositionGeometricClip>.DisposeMarshalerArray(array);
        public static void DisposeAbi(IntPtr abi) => MarshalInspectable<object>.DisposeAbi(abi);
        public static unsafe void DisposeAbiArray(object box) => MarshalInspectable<object>.DisposeAbiArray(box);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    internal sealed class CompositionGeometricClipRcwFactoryAttribute : global::WinRT.WinRTImplementationTypeRcwFactoryAttribute
    {
        public override object CreateInstance(global::WinRT.IInspectable inspectable)
            => new global::Microsoft.UI.Composition.CompositionGeometricClip(inspectable.ObjRef);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    public struct CompositionGeometry
    {

        public static IObjectReference CreateMarshaler(global::Microsoft.UI.Composition.CompositionGeometry obj) => obj is null ? null : MarshalInspectable<global::Microsoft.UI.Composition.CompositionGeometry>.CreateMarshaler<IUnknownVftbl>(obj, global::ABI.Microsoft.UI.Composition.ICompositionGeometryMethods.IID);
        public static ObjectReferenceValue CreateMarshaler2(global::Microsoft.UI.Composition.CompositionGeometry obj) => MarshalInspectable<object>.CreateMarshaler2(obj, global::ABI.Microsoft.UI.Composition.ICompositionGeometryMethods.IID);
        public static IntPtr GetAbi(IObjectReference value) => value is null ? IntPtr.Zero : MarshalInterfaceHelper<object>.GetAbi(value);
        public static global::Microsoft.UI.Composition.CompositionGeometry FromAbi(IntPtr thisPtr) => global::Microsoft.UI.Composition.CompositionGeometry.FromAbi(thisPtr);
        public static IntPtr FromManaged(global::Microsoft.UI.Composition.CompositionGeometry obj) => obj is null ? IntPtr.Zero : CreateMarshaler2(obj).Detach();
        public static unsafe MarshalInterfaceHelper<global::Microsoft.UI.Composition.CompositionGeometry>.MarshalerArray CreateMarshalerArray(global::Microsoft.UI.Composition.CompositionGeometry[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.CompositionGeometry>.CreateMarshalerArray2(array, (o) => CreateMarshaler2(o));
        public static (int length, IntPtr data) GetAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.CompositionGeometry>.GetAbiArray(box);
        public static unsafe global::Microsoft.UI.Composition.CompositionGeometry[] FromAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.CompositionGeometry>.FromAbiArray(box, FromAbi);
        public static void CopyAbiArray(global::Microsoft.UI.Composition.CompositionGeometry[] array, object box) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.CompositionGeometry>.CopyAbiArray(array, box, FromAbi);
        public static (int length, IntPtr data) FromManagedArray(global::Microsoft.UI.Composition.CompositionGeometry[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.CompositionGeometry>.FromManagedArray(array, (o) => FromManaged(o));
        public static void DisposeMarshaler(IObjectReference value) => MarshalInspectable<object>.DisposeMarshaler(value);
        public static void DisposeMarshalerArray(MarshalInterfaceHelper<global::Microsoft.UI.Composition.CompositionGeometry>.MarshalerArray array) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.CompositionGeometry>.DisposeMarshalerArray(array);
        public static void DisposeAbi(IntPtr abi) => MarshalInspectable<object>.DisposeAbi(abi);
        public static unsafe void DisposeAbiArray(object box) => MarshalInspectable<object>.DisposeAbiArray(box);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    internal sealed class CompositionGeometryRcwFactoryAttribute : global::WinRT.WinRTImplementationTypeRcwFactoryAttribute
    {
        public override object CreateInstance(global::WinRT.IInspectable inspectable)
            => new global::Microsoft.UI.Composition.CompositionGeometry(inspectable.ObjRef);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    public struct CompositionGradientBrush
    {

        public static IObjectReference CreateMarshaler(global::Microsoft.UI.Composition.CompositionGradientBrush obj) => obj is null ? null : MarshalInspectable<global::Microsoft.UI.Composition.CompositionGradientBrush>.CreateMarshaler<IUnknownVftbl>(obj, global::ABI.Microsoft.UI.Composition.ICompositionGradientBrushMethods.IID);
        public static ObjectReferenceValue CreateMarshaler2(global::Microsoft.UI.Composition.CompositionGradientBrush obj) => MarshalInspectable<object>.CreateMarshaler2(obj, global::ABI.Microsoft.UI.Composition.ICompositionGradientBrushMethods.IID);
        public static IntPtr GetAbi(IObjectReference value) => value is null ? IntPtr.Zero : MarshalInterfaceHelper<object>.GetAbi(value);
        public static global::Microsoft.UI.Composition.CompositionGradientBrush FromAbi(IntPtr thisPtr) => global::Microsoft.UI.Composition.CompositionGradientBrush.FromAbi(thisPtr);
        public static IntPtr FromManaged(global::Microsoft.UI.Composition.CompositionGradientBrush obj) => obj is null ? IntPtr.Zero : CreateMarshaler2(obj).Detach();
        public static unsafe MarshalInterfaceHelper<global::Microsoft.UI.Composition.CompositionGradientBrush>.MarshalerArray CreateMarshalerArray(global::Microsoft.UI.Composition.CompositionGradientBrush[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.CompositionGradientBrush>.CreateMarshalerArray2(array, (o) => CreateMarshaler2(o));
        public static (int length, IntPtr data) GetAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.CompositionGradientBrush>.GetAbiArray(box);
        public static unsafe global::Microsoft.UI.Composition.CompositionGradientBrush[] FromAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.CompositionGradientBrush>.FromAbiArray(box, FromAbi);
        public static void CopyAbiArray(global::Microsoft.UI.Composition.CompositionGradientBrush[] array, object box) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.CompositionGradientBrush>.CopyAbiArray(array, box, FromAbi);
        public static (int length, IntPtr data) FromManagedArray(global::Microsoft.UI.Composition.CompositionGradientBrush[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.CompositionGradientBrush>.FromManagedArray(array, (o) => FromManaged(o));
        public static void DisposeMarshaler(IObjectReference value) => MarshalInspectable<object>.DisposeMarshaler(value);
        public static void DisposeMarshalerArray(MarshalInterfaceHelper<global::Microsoft.UI.Composition.CompositionGradientBrush>.MarshalerArray array) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.CompositionGradientBrush>.DisposeMarshalerArray(array);
        public static void DisposeAbi(IntPtr abi) => MarshalInspectable<object>.DisposeAbi(abi);
        public static unsafe void DisposeAbiArray(object box) => MarshalInspectable<object>.DisposeAbiArray(box);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    internal sealed class CompositionGradientBrushRcwFactoryAttribute : global::WinRT.WinRTImplementationTypeRcwFactoryAttribute
    {
        public override object CreateInstance(global::WinRT.IInspectable inspectable)
            => new global::Microsoft.UI.Composition.CompositionGradientBrush(inspectable.ObjRef);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    public struct CompositionGraphicsDevice
    {

        public static IObjectReference CreateMarshaler(global::Microsoft.UI.Composition.CompositionGraphicsDevice obj) => obj is null ? null : MarshalInspectable<global::Microsoft.UI.Composition.CompositionGraphicsDevice>.CreateMarshaler<IUnknownVftbl>(obj, global::ABI.Microsoft.UI.Composition.ICompositionGraphicsDeviceMethods.IID);
        public static ObjectReferenceValue CreateMarshaler2(global::Microsoft.UI.Composition.CompositionGraphicsDevice obj) => MarshalInspectable<object>.CreateMarshaler2(obj, global::ABI.Microsoft.UI.Composition.ICompositionGraphicsDeviceMethods.IID);
        public static IntPtr GetAbi(IObjectReference value) => value is null ? IntPtr.Zero : MarshalInterfaceHelper<object>.GetAbi(value);
        public static global::Microsoft.UI.Composition.CompositionGraphicsDevice FromAbi(IntPtr thisPtr) => global::Microsoft.UI.Composition.CompositionGraphicsDevice.FromAbi(thisPtr);
        public static IntPtr FromManaged(global::Microsoft.UI.Composition.CompositionGraphicsDevice obj) => obj is null ? IntPtr.Zero : CreateMarshaler2(obj).Detach();
        public static unsafe MarshalInterfaceHelper<global::Microsoft.UI.Composition.CompositionGraphicsDevice>.MarshalerArray CreateMarshalerArray(global::Microsoft.UI.Composition.CompositionGraphicsDevice[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.CompositionGraphicsDevice>.CreateMarshalerArray2(array, (o) => CreateMarshaler2(o));
        public static (int length, IntPtr data) GetAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.CompositionGraphicsDevice>.GetAbiArray(box);
        public static unsafe global::Microsoft.UI.Composition.CompositionGraphicsDevice[] FromAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.CompositionGraphicsDevice>.FromAbiArray(box, FromAbi);
        public static void CopyAbiArray(global::Microsoft.UI.Composition.CompositionGraphicsDevice[] array, object box) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.CompositionGraphicsDevice>.CopyAbiArray(array, box, FromAbi);
        public static (int length, IntPtr data) FromManagedArray(global::Microsoft.UI.Composition.CompositionGraphicsDevice[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.CompositionGraphicsDevice>.FromManagedArray(array, (o) => FromManaged(o));
        public static void DisposeMarshaler(IObjectReference value) => MarshalInspectable<object>.DisposeMarshaler(value);
        public static void DisposeMarshalerArray(MarshalInterfaceHelper<global::Microsoft.UI.Composition.CompositionGraphicsDevice>.MarshalerArray array) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.CompositionGraphicsDevice>.DisposeMarshalerArray(array);
        public static void DisposeAbi(IntPtr abi) => MarshalInspectable<object>.DisposeAbi(abi);
        public static unsafe void DisposeAbiArray(object box) => MarshalInspectable<object>.DisposeAbiArray(box);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    internal sealed class CompositionGraphicsDeviceRcwFactoryAttribute : global::WinRT.WinRTImplementationTypeRcwFactoryAttribute
    {
        public override object CreateInstance(global::WinRT.IInspectable inspectable)
            => new global::Microsoft.UI.Composition.CompositionGraphicsDevice(inspectable.ObjRef);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    public struct CompositionLight
    {

        public static IObjectReference CreateMarshaler(global::Microsoft.UI.Composition.CompositionLight obj) => obj is null ? null : MarshalInspectable<global::Microsoft.UI.Composition.CompositionLight>.CreateMarshaler<IUnknownVftbl>(obj, global::ABI.Microsoft.UI.Composition.ICompositionLightMethods.IID);
        public static ObjectReferenceValue CreateMarshaler2(global::Microsoft.UI.Composition.CompositionLight obj) => MarshalInspectable<object>.CreateMarshaler2(obj, global::ABI.Microsoft.UI.Composition.ICompositionLightMethods.IID);
        public static IntPtr GetAbi(IObjectReference value) => value is null ? IntPtr.Zero : MarshalInterfaceHelper<object>.GetAbi(value);
        public static global::Microsoft.UI.Composition.CompositionLight FromAbi(IntPtr thisPtr) => global::Microsoft.UI.Composition.CompositionLight.FromAbi(thisPtr);
        public static IntPtr FromManaged(global::Microsoft.UI.Composition.CompositionLight obj) => obj is null ? IntPtr.Zero : CreateMarshaler2(obj).Detach();
        public static unsafe MarshalInterfaceHelper<global::Microsoft.UI.Composition.CompositionLight>.MarshalerArray CreateMarshalerArray(global::Microsoft.UI.Composition.CompositionLight[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.CompositionLight>.CreateMarshalerArray2(array, (o) => CreateMarshaler2(o));
        public static (int length, IntPtr data) GetAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.CompositionLight>.GetAbiArray(box);
        public static unsafe global::Microsoft.UI.Composition.CompositionLight[] FromAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.CompositionLight>.FromAbiArray(box, FromAbi);
        public static void CopyAbiArray(global::Microsoft.UI.Composition.CompositionLight[] array, object box) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.CompositionLight>.CopyAbiArray(array, box, FromAbi);
        public static (int length, IntPtr data) FromManagedArray(global::Microsoft.UI.Composition.CompositionLight[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.CompositionLight>.FromManagedArray(array, (o) => FromManaged(o));
        public static void DisposeMarshaler(IObjectReference value) => MarshalInspectable<object>.DisposeMarshaler(value);
        public static void DisposeMarshalerArray(MarshalInterfaceHelper<global::Microsoft.UI.Composition.CompositionLight>.MarshalerArray array) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.CompositionLight>.DisposeMarshalerArray(array);
        public static void DisposeAbi(IntPtr abi) => MarshalInspectable<object>.DisposeAbi(abi);
        public static unsafe void DisposeAbiArray(object box) => MarshalInspectable<object>.DisposeAbiArray(box);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    internal sealed class CompositionLightRcwFactoryAttribute : global::WinRT.WinRTImplementationTypeRcwFactoryAttribute
    {
        public override object CreateInstance(global::WinRT.IInspectable inspectable)
            => new global::Microsoft.UI.Composition.CompositionLight(inspectable.ObjRef);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    public struct CompositionLineGeometry
    {

        public static IObjectReference CreateMarshaler(global::Microsoft.UI.Composition.CompositionLineGeometry obj) => obj is null ? null : MarshalInspectable<global::Microsoft.UI.Composition.CompositionLineGeometry>.CreateMarshaler<IUnknownVftbl>(obj, global::ABI.Microsoft.UI.Composition.ICompositionLineGeometryMethods.IID);
        public static ObjectReferenceValue CreateMarshaler2(global::Microsoft.UI.Composition.CompositionLineGeometry obj) => MarshalInspectable<object>.CreateMarshaler2(obj, global::ABI.Microsoft.UI.Composition.ICompositionLineGeometryMethods.IID);
        public static IntPtr GetAbi(IObjectReference value) => value is null ? IntPtr.Zero : MarshalInterfaceHelper<object>.GetAbi(value);
        public static global::Microsoft.UI.Composition.CompositionLineGeometry FromAbi(IntPtr thisPtr) => global::Microsoft.UI.Composition.CompositionLineGeometry.FromAbi(thisPtr);
        public static IntPtr FromManaged(global::Microsoft.UI.Composition.CompositionLineGeometry obj) => obj is null ? IntPtr.Zero : CreateMarshaler2(obj).Detach();
        public static unsafe MarshalInterfaceHelper<global::Microsoft.UI.Composition.CompositionLineGeometry>.MarshalerArray CreateMarshalerArray(global::Microsoft.UI.Composition.CompositionLineGeometry[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.CompositionLineGeometry>.CreateMarshalerArray2(array, (o) => CreateMarshaler2(o));
        public static (int length, IntPtr data) GetAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.CompositionLineGeometry>.GetAbiArray(box);
        public static unsafe global::Microsoft.UI.Composition.CompositionLineGeometry[] FromAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.CompositionLineGeometry>.FromAbiArray(box, FromAbi);
        public static void CopyAbiArray(global::Microsoft.UI.Composition.CompositionLineGeometry[] array, object box) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.CompositionLineGeometry>.CopyAbiArray(array, box, FromAbi);
        public static (int length, IntPtr data) FromManagedArray(global::Microsoft.UI.Composition.CompositionLineGeometry[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.CompositionLineGeometry>.FromManagedArray(array, (o) => FromManaged(o));
        public static void DisposeMarshaler(IObjectReference value) => MarshalInspectable<object>.DisposeMarshaler(value);
        public static void DisposeMarshalerArray(MarshalInterfaceHelper<global::Microsoft.UI.Composition.CompositionLineGeometry>.MarshalerArray array) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.CompositionLineGeometry>.DisposeMarshalerArray(array);
        public static void DisposeAbi(IntPtr abi) => MarshalInspectable<object>.DisposeAbi(abi);
        public static unsafe void DisposeAbiArray(object box) => MarshalInspectable<object>.DisposeAbiArray(box);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    internal sealed class CompositionLineGeometryRcwFactoryAttribute : global::WinRT.WinRTImplementationTypeRcwFactoryAttribute
    {
        public override object CreateInstance(global::WinRT.IInspectable inspectable)
            => new global::Microsoft.UI.Composition.CompositionLineGeometry(inspectable.ObjRef);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    public struct CompositionLinearGradientBrush
    {

        public static IObjectReference CreateMarshaler(global::Microsoft.UI.Composition.CompositionLinearGradientBrush obj) => obj is null ? null : MarshalInspectable<global::Microsoft.UI.Composition.CompositionLinearGradientBrush>.CreateMarshaler<IUnknownVftbl>(obj, global::ABI.Microsoft.UI.Composition.ICompositionLinearGradientBrushMethods.IID);
        public static ObjectReferenceValue CreateMarshaler2(global::Microsoft.UI.Composition.CompositionLinearGradientBrush obj) => MarshalInspectable<object>.CreateMarshaler2(obj, global::ABI.Microsoft.UI.Composition.ICompositionLinearGradientBrushMethods.IID);
        public static IntPtr GetAbi(IObjectReference value) => value is null ? IntPtr.Zero : MarshalInterfaceHelper<object>.GetAbi(value);
        public static global::Microsoft.UI.Composition.CompositionLinearGradientBrush FromAbi(IntPtr thisPtr) => global::Microsoft.UI.Composition.CompositionLinearGradientBrush.FromAbi(thisPtr);
        public static IntPtr FromManaged(global::Microsoft.UI.Composition.CompositionLinearGradientBrush obj) => obj is null ? IntPtr.Zero : CreateMarshaler2(obj).Detach();
        public static unsafe MarshalInterfaceHelper<global::Microsoft.UI.Composition.CompositionLinearGradientBrush>.MarshalerArray CreateMarshalerArray(global::Microsoft.UI.Composition.CompositionLinearGradientBrush[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.CompositionLinearGradientBrush>.CreateMarshalerArray2(array, (o) => CreateMarshaler2(o));
        public static (int length, IntPtr data) GetAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.CompositionLinearGradientBrush>.GetAbiArray(box);
        public static unsafe global::Microsoft.UI.Composition.CompositionLinearGradientBrush[] FromAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.CompositionLinearGradientBrush>.FromAbiArray(box, FromAbi);
        public static void CopyAbiArray(global::Microsoft.UI.Composition.CompositionLinearGradientBrush[] array, object box) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.CompositionLinearGradientBrush>.CopyAbiArray(array, box, FromAbi);
        public static (int length, IntPtr data) FromManagedArray(global::Microsoft.UI.Composition.CompositionLinearGradientBrush[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.CompositionLinearGradientBrush>.FromManagedArray(array, (o) => FromManaged(o));
        public static void DisposeMarshaler(IObjectReference value) => MarshalInspectable<object>.DisposeMarshaler(value);
        public static void DisposeMarshalerArray(MarshalInterfaceHelper<global::Microsoft.UI.Composition.CompositionLinearGradientBrush>.MarshalerArray array) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.CompositionLinearGradientBrush>.DisposeMarshalerArray(array);
        public static void DisposeAbi(IntPtr abi) => MarshalInspectable<object>.DisposeAbi(abi);
        public static unsafe void DisposeAbiArray(object box) => MarshalInspectable<object>.DisposeAbiArray(box);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    internal sealed class CompositionLinearGradientBrushRcwFactoryAttribute : global::WinRT.WinRTImplementationTypeRcwFactoryAttribute
    {
        public override object CreateInstance(global::WinRT.IInspectable inspectable)
            => new global::Microsoft.UI.Composition.CompositionLinearGradientBrush(inspectable.ObjRef);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    public struct CompositionMaskBrush
    {

        public static IObjectReference CreateMarshaler(global::Microsoft.UI.Composition.CompositionMaskBrush obj) => obj is null ? null : MarshalInspectable<global::Microsoft.UI.Composition.CompositionMaskBrush>.CreateMarshaler<IUnknownVftbl>(obj, global::ABI.Microsoft.UI.Composition.ICompositionMaskBrushMethods.IID);
        public static ObjectReferenceValue CreateMarshaler2(global::Microsoft.UI.Composition.CompositionMaskBrush obj) => MarshalInspectable<object>.CreateMarshaler2(obj, global::ABI.Microsoft.UI.Composition.ICompositionMaskBrushMethods.IID);
        public static IntPtr GetAbi(IObjectReference value) => value is null ? IntPtr.Zero : MarshalInterfaceHelper<object>.GetAbi(value);
        public static global::Microsoft.UI.Composition.CompositionMaskBrush FromAbi(IntPtr thisPtr) => global::Microsoft.UI.Composition.CompositionMaskBrush.FromAbi(thisPtr);
        public static IntPtr FromManaged(global::Microsoft.UI.Composition.CompositionMaskBrush obj) => obj is null ? IntPtr.Zero : CreateMarshaler2(obj).Detach();
        public static unsafe MarshalInterfaceHelper<global::Microsoft.UI.Composition.CompositionMaskBrush>.MarshalerArray CreateMarshalerArray(global::Microsoft.UI.Composition.CompositionMaskBrush[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.CompositionMaskBrush>.CreateMarshalerArray2(array, (o) => CreateMarshaler2(o));
        public static (int length, IntPtr data) GetAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.CompositionMaskBrush>.GetAbiArray(box);
        public static unsafe global::Microsoft.UI.Composition.CompositionMaskBrush[] FromAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.CompositionMaskBrush>.FromAbiArray(box, FromAbi);
        public static void CopyAbiArray(global::Microsoft.UI.Composition.CompositionMaskBrush[] array, object box) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.CompositionMaskBrush>.CopyAbiArray(array, box, FromAbi);
        public static (int length, IntPtr data) FromManagedArray(global::Microsoft.UI.Composition.CompositionMaskBrush[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.CompositionMaskBrush>.FromManagedArray(array, (o) => FromManaged(o));
        public static void DisposeMarshaler(IObjectReference value) => MarshalInspectable<object>.DisposeMarshaler(value);
        public static void DisposeMarshalerArray(MarshalInterfaceHelper<global::Microsoft.UI.Composition.CompositionMaskBrush>.MarshalerArray array) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.CompositionMaskBrush>.DisposeMarshalerArray(array);
        public static void DisposeAbi(IntPtr abi) => MarshalInspectable<object>.DisposeAbi(abi);
        public static unsafe void DisposeAbiArray(object box) => MarshalInspectable<object>.DisposeAbiArray(box);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    internal sealed class CompositionMaskBrushRcwFactoryAttribute : global::WinRT.WinRTImplementationTypeRcwFactoryAttribute
    {
        public override object CreateInstance(global::WinRT.IInspectable inspectable)
            => new global::Microsoft.UI.Composition.CompositionMaskBrush(inspectable.ObjRef);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    public struct CompositionMipmapSurface
    {

        public static IObjectReference CreateMarshaler(global::Microsoft.UI.Composition.CompositionMipmapSurface obj) => obj is null ? null : MarshalInspectable<global::Microsoft.UI.Composition.CompositionMipmapSurface>.CreateMarshaler<IUnknownVftbl>(obj, global::ABI.Microsoft.UI.Composition.ICompositionMipmapSurfaceMethods.IID);
        public static ObjectReferenceValue CreateMarshaler2(global::Microsoft.UI.Composition.CompositionMipmapSurface obj) => MarshalInspectable<object>.CreateMarshaler2(obj, global::ABI.Microsoft.UI.Composition.ICompositionMipmapSurfaceMethods.IID);
        public static IntPtr GetAbi(IObjectReference value) => value is null ? IntPtr.Zero : MarshalInterfaceHelper<object>.GetAbi(value);
        public static global::Microsoft.UI.Composition.CompositionMipmapSurface FromAbi(IntPtr thisPtr) => global::Microsoft.UI.Composition.CompositionMipmapSurface.FromAbi(thisPtr);
        public static IntPtr FromManaged(global::Microsoft.UI.Composition.CompositionMipmapSurface obj) => obj is null ? IntPtr.Zero : CreateMarshaler2(obj).Detach();
        public static unsafe MarshalInterfaceHelper<global::Microsoft.UI.Composition.CompositionMipmapSurface>.MarshalerArray CreateMarshalerArray(global::Microsoft.UI.Composition.CompositionMipmapSurface[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.CompositionMipmapSurface>.CreateMarshalerArray2(array, (o) => CreateMarshaler2(o));
        public static (int length, IntPtr data) GetAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.CompositionMipmapSurface>.GetAbiArray(box);
        public static unsafe global::Microsoft.UI.Composition.CompositionMipmapSurface[] FromAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.CompositionMipmapSurface>.FromAbiArray(box, FromAbi);
        public static void CopyAbiArray(global::Microsoft.UI.Composition.CompositionMipmapSurface[] array, object box) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.CompositionMipmapSurface>.CopyAbiArray(array, box, FromAbi);
        public static (int length, IntPtr data) FromManagedArray(global::Microsoft.UI.Composition.CompositionMipmapSurface[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.CompositionMipmapSurface>.FromManagedArray(array, (o) => FromManaged(o));
        public static void DisposeMarshaler(IObjectReference value) => MarshalInspectable<object>.DisposeMarshaler(value);
        public static void DisposeMarshalerArray(MarshalInterfaceHelper<global::Microsoft.UI.Composition.CompositionMipmapSurface>.MarshalerArray array) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.CompositionMipmapSurface>.DisposeMarshalerArray(array);
        public static void DisposeAbi(IntPtr abi) => MarshalInspectable<object>.DisposeAbi(abi);
        public static unsafe void DisposeAbiArray(object box) => MarshalInspectable<object>.DisposeAbiArray(box);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    internal sealed class CompositionMipmapSurfaceRcwFactoryAttribute : global::WinRT.WinRTImplementationTypeRcwFactoryAttribute
    {
        public override object CreateInstance(global::WinRT.IInspectable inspectable)
            => new global::Microsoft.UI.Composition.CompositionMipmapSurface(inspectable.ObjRef);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    public struct CompositionNineGridBrush
    {

        public static IObjectReference CreateMarshaler(global::Microsoft.UI.Composition.CompositionNineGridBrush obj) => obj is null ? null : MarshalInspectable<global::Microsoft.UI.Composition.CompositionNineGridBrush>.CreateMarshaler<IUnknownVftbl>(obj, global::ABI.Microsoft.UI.Composition.ICompositionNineGridBrushMethods.IID);
        public static ObjectReferenceValue CreateMarshaler2(global::Microsoft.UI.Composition.CompositionNineGridBrush obj) => MarshalInspectable<object>.CreateMarshaler2(obj, global::ABI.Microsoft.UI.Composition.ICompositionNineGridBrushMethods.IID);
        public static IntPtr GetAbi(IObjectReference value) => value is null ? IntPtr.Zero : MarshalInterfaceHelper<object>.GetAbi(value);
        public static global::Microsoft.UI.Composition.CompositionNineGridBrush FromAbi(IntPtr thisPtr) => global::Microsoft.UI.Composition.CompositionNineGridBrush.FromAbi(thisPtr);
        public static IntPtr FromManaged(global::Microsoft.UI.Composition.CompositionNineGridBrush obj) => obj is null ? IntPtr.Zero : CreateMarshaler2(obj).Detach();
        public static unsafe MarshalInterfaceHelper<global::Microsoft.UI.Composition.CompositionNineGridBrush>.MarshalerArray CreateMarshalerArray(global::Microsoft.UI.Composition.CompositionNineGridBrush[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.CompositionNineGridBrush>.CreateMarshalerArray2(array, (o) => CreateMarshaler2(o));
        public static (int length, IntPtr data) GetAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.CompositionNineGridBrush>.GetAbiArray(box);
        public static unsafe global::Microsoft.UI.Composition.CompositionNineGridBrush[] FromAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.CompositionNineGridBrush>.FromAbiArray(box, FromAbi);
        public static void CopyAbiArray(global::Microsoft.UI.Composition.CompositionNineGridBrush[] array, object box) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.CompositionNineGridBrush>.CopyAbiArray(array, box, FromAbi);
        public static (int length, IntPtr data) FromManagedArray(global::Microsoft.UI.Composition.CompositionNineGridBrush[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.CompositionNineGridBrush>.FromManagedArray(array, (o) => FromManaged(o));
        public static void DisposeMarshaler(IObjectReference value) => MarshalInspectable<object>.DisposeMarshaler(value);
        public static void DisposeMarshalerArray(MarshalInterfaceHelper<global::Microsoft.UI.Composition.CompositionNineGridBrush>.MarshalerArray array) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.CompositionNineGridBrush>.DisposeMarshalerArray(array);
        public static void DisposeAbi(IntPtr abi) => MarshalInspectable<object>.DisposeAbi(abi);
        public static unsafe void DisposeAbiArray(object box) => MarshalInspectable<object>.DisposeAbiArray(box);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    internal sealed class CompositionNineGridBrushRcwFactoryAttribute : global::WinRT.WinRTImplementationTypeRcwFactoryAttribute
    {
        public override object CreateInstance(global::WinRT.IInspectable inspectable)
            => new global::Microsoft.UI.Composition.CompositionNineGridBrush(inspectable.ObjRef);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    public struct CompositionNotificationDeferral
    {

        public static IObjectReference CreateMarshaler(global::Microsoft.UI.Composition.CompositionNotificationDeferral obj) => obj is null ? null : MarshalInspectable<global::Microsoft.UI.Composition.CompositionNotificationDeferral>.CreateMarshaler<IUnknownVftbl>(obj, global::ABI.Microsoft.UI.Composition.ICompositionNotificationDeferralMethods.IID);
        public static ObjectReferenceValue CreateMarshaler2(global::Microsoft.UI.Composition.CompositionNotificationDeferral obj) => MarshalInspectable<object>.CreateMarshaler2(obj, global::ABI.Microsoft.UI.Composition.ICompositionNotificationDeferralMethods.IID);
        public static IntPtr GetAbi(IObjectReference value) => value is null ? IntPtr.Zero : MarshalInterfaceHelper<object>.GetAbi(value);
        public static global::Microsoft.UI.Composition.CompositionNotificationDeferral FromAbi(IntPtr thisPtr) => global::Microsoft.UI.Composition.CompositionNotificationDeferral.FromAbi(thisPtr);
        public static IntPtr FromManaged(global::Microsoft.UI.Composition.CompositionNotificationDeferral obj) => obj is null ? IntPtr.Zero : CreateMarshaler2(obj).Detach();
        public static unsafe MarshalInterfaceHelper<global::Microsoft.UI.Composition.CompositionNotificationDeferral>.MarshalerArray CreateMarshalerArray(global::Microsoft.UI.Composition.CompositionNotificationDeferral[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.CompositionNotificationDeferral>.CreateMarshalerArray2(array, (o) => CreateMarshaler2(o));
        public static (int length, IntPtr data) GetAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.CompositionNotificationDeferral>.GetAbiArray(box);
        public static unsafe global::Microsoft.UI.Composition.CompositionNotificationDeferral[] FromAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.CompositionNotificationDeferral>.FromAbiArray(box, FromAbi);
        public static void CopyAbiArray(global::Microsoft.UI.Composition.CompositionNotificationDeferral[] array, object box) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.CompositionNotificationDeferral>.CopyAbiArray(array, box, FromAbi);
        public static (int length, IntPtr data) FromManagedArray(global::Microsoft.UI.Composition.CompositionNotificationDeferral[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.CompositionNotificationDeferral>.FromManagedArray(array, (o) => FromManaged(o));
        public static void DisposeMarshaler(IObjectReference value) => MarshalInspectable<object>.DisposeMarshaler(value);
        public static void DisposeMarshalerArray(MarshalInterfaceHelper<global::Microsoft.UI.Composition.CompositionNotificationDeferral>.MarshalerArray array) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.CompositionNotificationDeferral>.DisposeMarshalerArray(array);
        public static void DisposeAbi(IntPtr abi) => MarshalInspectable<object>.DisposeAbi(abi);
        public static unsafe void DisposeAbiArray(object box) => MarshalInspectable<object>.DisposeAbiArray(box);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    internal sealed class CompositionNotificationDeferralRcwFactoryAttribute : global::WinRT.WinRTImplementationTypeRcwFactoryAttribute
    {
        public override object CreateInstance(global::WinRT.IInspectable inspectable)
            => new global::Microsoft.UI.Composition.CompositionNotificationDeferral(inspectable.ObjRef);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    public struct CompositionObject
    {

        public static IObjectReference CreateMarshaler(global::Microsoft.UI.Composition.CompositionObject obj) => obj is null ? null : MarshalInspectable<global::Microsoft.UI.Composition.CompositionObject>.CreateMarshaler<IUnknownVftbl>(obj, global::ABI.Microsoft.UI.Composition.ICompositionObjectMethods.IID);
        public static ObjectReferenceValue CreateMarshaler2(global::Microsoft.UI.Composition.CompositionObject obj) => MarshalInspectable<object>.CreateMarshaler2(obj, global::ABI.Microsoft.UI.Composition.ICompositionObjectMethods.IID);
        public static IntPtr GetAbi(IObjectReference value) => value is null ? IntPtr.Zero : MarshalInterfaceHelper<object>.GetAbi(value);
        public static global::Microsoft.UI.Composition.CompositionObject FromAbi(IntPtr thisPtr) => global::Microsoft.UI.Composition.CompositionObject.FromAbi(thisPtr);
        public static IntPtr FromManaged(global::Microsoft.UI.Composition.CompositionObject obj) => obj is null ? IntPtr.Zero : CreateMarshaler2(obj).Detach();
        public static unsafe MarshalInterfaceHelper<global::Microsoft.UI.Composition.CompositionObject>.MarshalerArray CreateMarshalerArray(global::Microsoft.UI.Composition.CompositionObject[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.CompositionObject>.CreateMarshalerArray2(array, (o) => CreateMarshaler2(o));
        public static (int length, IntPtr data) GetAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.CompositionObject>.GetAbiArray(box);
        public static unsafe global::Microsoft.UI.Composition.CompositionObject[] FromAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.CompositionObject>.FromAbiArray(box, FromAbi);
        public static void CopyAbiArray(global::Microsoft.UI.Composition.CompositionObject[] array, object box) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.CompositionObject>.CopyAbiArray(array, box, FromAbi);
        public static (int length, IntPtr data) FromManagedArray(global::Microsoft.UI.Composition.CompositionObject[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.CompositionObject>.FromManagedArray(array, (o) => FromManaged(o));
        public static void DisposeMarshaler(IObjectReference value) => MarshalInspectable<object>.DisposeMarshaler(value);
        public static void DisposeMarshalerArray(MarshalInterfaceHelper<global::Microsoft.UI.Composition.CompositionObject>.MarshalerArray array) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.CompositionObject>.DisposeMarshalerArray(array);
        public static void DisposeAbi(IntPtr abi) => MarshalInspectable<object>.DisposeAbi(abi);
        public static unsafe void DisposeAbiArray(object box) => MarshalInspectable<object>.DisposeAbiArray(box);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    internal sealed class CompositionObjectRcwFactoryAttribute : global::WinRT.WinRTImplementationTypeRcwFactoryAttribute
    {
        public override object CreateInstance(global::WinRT.IInspectable inspectable)
            => new global::Microsoft.UI.Composition.CompositionObject(inspectable.ObjRef);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    public struct CompositionPath
    {

        public static IObjectReference CreateMarshaler(global::Microsoft.UI.Composition.CompositionPath obj) => obj is null ? null : MarshalInspectable<global::Microsoft.UI.Composition.CompositionPath>.CreateMarshaler<IUnknownVftbl>(obj, global::ABI.Microsoft.UI.Composition.ICompositionPathMethods.IID);
        public static ObjectReferenceValue CreateMarshaler2(global::Microsoft.UI.Composition.CompositionPath obj) => MarshalInspectable<object>.CreateMarshaler2(obj, global::ABI.Microsoft.UI.Composition.ICompositionPathMethods.IID);
        public static IntPtr GetAbi(IObjectReference value) => value is null ? IntPtr.Zero : MarshalInterfaceHelper<object>.GetAbi(value);
        public static global::Microsoft.UI.Composition.CompositionPath FromAbi(IntPtr thisPtr) => global::Microsoft.UI.Composition.CompositionPath.FromAbi(thisPtr);
        public static IntPtr FromManaged(global::Microsoft.UI.Composition.CompositionPath obj) => obj is null ? IntPtr.Zero : CreateMarshaler2(obj).Detach();
        public static unsafe MarshalInterfaceHelper<global::Microsoft.UI.Composition.CompositionPath>.MarshalerArray CreateMarshalerArray(global::Microsoft.UI.Composition.CompositionPath[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.CompositionPath>.CreateMarshalerArray2(array, (o) => CreateMarshaler2(o));
        public static (int length, IntPtr data) GetAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.CompositionPath>.GetAbiArray(box);
        public static unsafe global::Microsoft.UI.Composition.CompositionPath[] FromAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.CompositionPath>.FromAbiArray(box, FromAbi);
        public static void CopyAbiArray(global::Microsoft.UI.Composition.CompositionPath[] array, object box) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.CompositionPath>.CopyAbiArray(array, box, FromAbi);
        public static (int length, IntPtr data) FromManagedArray(global::Microsoft.UI.Composition.CompositionPath[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.CompositionPath>.FromManagedArray(array, (o) => FromManaged(o));
        public static void DisposeMarshaler(IObjectReference value) => MarshalInspectable<object>.DisposeMarshaler(value);
        public static void DisposeMarshalerArray(MarshalInterfaceHelper<global::Microsoft.UI.Composition.CompositionPath>.MarshalerArray array) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.CompositionPath>.DisposeMarshalerArray(array);
        public static void DisposeAbi(IntPtr abi) => MarshalInspectable<object>.DisposeAbi(abi);
        public static unsafe void DisposeAbiArray(object box) => MarshalInspectable<object>.DisposeAbiArray(box);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    internal sealed class CompositionPathRcwFactoryAttribute : global::WinRT.WinRTImplementationTypeRcwFactoryAttribute
    {
        public override object CreateInstance(global::WinRT.IInspectable inspectable)
            => new global::Microsoft.UI.Composition.CompositionPath(inspectable.ObjRef);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    public struct CompositionPathGeometry
    {

        public static IObjectReference CreateMarshaler(global::Microsoft.UI.Composition.CompositionPathGeometry obj) => obj is null ? null : MarshalInspectable<global::Microsoft.UI.Composition.CompositionPathGeometry>.CreateMarshaler<IUnknownVftbl>(obj, global::ABI.Microsoft.UI.Composition.ICompositionPathGeometryMethods.IID);
        public static ObjectReferenceValue CreateMarshaler2(global::Microsoft.UI.Composition.CompositionPathGeometry obj) => MarshalInspectable<object>.CreateMarshaler2(obj, global::ABI.Microsoft.UI.Composition.ICompositionPathGeometryMethods.IID);
        public static IntPtr GetAbi(IObjectReference value) => value is null ? IntPtr.Zero : MarshalInterfaceHelper<object>.GetAbi(value);
        public static global::Microsoft.UI.Composition.CompositionPathGeometry FromAbi(IntPtr thisPtr) => global::Microsoft.UI.Composition.CompositionPathGeometry.FromAbi(thisPtr);
        public static IntPtr FromManaged(global::Microsoft.UI.Composition.CompositionPathGeometry obj) => obj is null ? IntPtr.Zero : CreateMarshaler2(obj).Detach();
        public static unsafe MarshalInterfaceHelper<global::Microsoft.UI.Composition.CompositionPathGeometry>.MarshalerArray CreateMarshalerArray(global::Microsoft.UI.Composition.CompositionPathGeometry[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.CompositionPathGeometry>.CreateMarshalerArray2(array, (o) => CreateMarshaler2(o));
        public static (int length, IntPtr data) GetAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.CompositionPathGeometry>.GetAbiArray(box);
        public static unsafe global::Microsoft.UI.Composition.CompositionPathGeometry[] FromAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.CompositionPathGeometry>.FromAbiArray(box, FromAbi);
        public static void CopyAbiArray(global::Microsoft.UI.Composition.CompositionPathGeometry[] array, object box) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.CompositionPathGeometry>.CopyAbiArray(array, box, FromAbi);
        public static (int length, IntPtr data) FromManagedArray(global::Microsoft.UI.Composition.CompositionPathGeometry[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.CompositionPathGeometry>.FromManagedArray(array, (o) => FromManaged(o));
        public static void DisposeMarshaler(IObjectReference value) => MarshalInspectable<object>.DisposeMarshaler(value);
        public static void DisposeMarshalerArray(MarshalInterfaceHelper<global::Microsoft.UI.Composition.CompositionPathGeometry>.MarshalerArray array) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.CompositionPathGeometry>.DisposeMarshalerArray(array);
        public static void DisposeAbi(IntPtr abi) => MarshalInspectable<object>.DisposeAbi(abi);
        public static unsafe void DisposeAbiArray(object box) => MarshalInspectable<object>.DisposeAbiArray(box);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    internal sealed class CompositionPathGeometryRcwFactoryAttribute : global::WinRT.WinRTImplementationTypeRcwFactoryAttribute
    {
        public override object CreateInstance(global::WinRT.IInspectable inspectable)
            => new global::Microsoft.UI.Composition.CompositionPathGeometry(inspectable.ObjRef);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    public struct CompositionProjectedShadow
    {

        public static IObjectReference CreateMarshaler(global::Microsoft.UI.Composition.CompositionProjectedShadow obj) => obj is null ? null : MarshalInspectable<global::Microsoft.UI.Composition.CompositionProjectedShadow>.CreateMarshaler<IUnknownVftbl>(obj, global::ABI.Microsoft.UI.Composition.ICompositionProjectedShadowMethods.IID);
        public static ObjectReferenceValue CreateMarshaler2(global::Microsoft.UI.Composition.CompositionProjectedShadow obj) => MarshalInspectable<object>.CreateMarshaler2(obj, global::ABI.Microsoft.UI.Composition.ICompositionProjectedShadowMethods.IID);
        public static IntPtr GetAbi(IObjectReference value) => value is null ? IntPtr.Zero : MarshalInterfaceHelper<object>.GetAbi(value);
        public static global::Microsoft.UI.Composition.CompositionProjectedShadow FromAbi(IntPtr thisPtr) => global::Microsoft.UI.Composition.CompositionProjectedShadow.FromAbi(thisPtr);
        public static IntPtr FromManaged(global::Microsoft.UI.Composition.CompositionProjectedShadow obj) => obj is null ? IntPtr.Zero : CreateMarshaler2(obj).Detach();
        public static unsafe MarshalInterfaceHelper<global::Microsoft.UI.Composition.CompositionProjectedShadow>.MarshalerArray CreateMarshalerArray(global::Microsoft.UI.Composition.CompositionProjectedShadow[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.CompositionProjectedShadow>.CreateMarshalerArray2(array, (o) => CreateMarshaler2(o));
        public static (int length, IntPtr data) GetAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.CompositionProjectedShadow>.GetAbiArray(box);
        public static unsafe global::Microsoft.UI.Composition.CompositionProjectedShadow[] FromAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.CompositionProjectedShadow>.FromAbiArray(box, FromAbi);
        public static void CopyAbiArray(global::Microsoft.UI.Composition.CompositionProjectedShadow[] array, object box) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.CompositionProjectedShadow>.CopyAbiArray(array, box, FromAbi);
        public static (int length, IntPtr data) FromManagedArray(global::Microsoft.UI.Composition.CompositionProjectedShadow[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.CompositionProjectedShadow>.FromManagedArray(array, (o) => FromManaged(o));
        public static void DisposeMarshaler(IObjectReference value) => MarshalInspectable<object>.DisposeMarshaler(value);
        public static void DisposeMarshalerArray(MarshalInterfaceHelper<global::Microsoft.UI.Composition.CompositionProjectedShadow>.MarshalerArray array) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.CompositionProjectedShadow>.DisposeMarshalerArray(array);
        public static void DisposeAbi(IntPtr abi) => MarshalInspectable<object>.DisposeAbi(abi);
        public static unsafe void DisposeAbiArray(object box) => MarshalInspectable<object>.DisposeAbiArray(box);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    internal sealed class CompositionProjectedShadowRcwFactoryAttribute : global::WinRT.WinRTImplementationTypeRcwFactoryAttribute
    {
        public override object CreateInstance(global::WinRT.IInspectable inspectable)
            => new global::Microsoft.UI.Composition.CompositionProjectedShadow(inspectable.ObjRef);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    public struct CompositionProjectedShadowCaster
    {

        public static IObjectReference CreateMarshaler(global::Microsoft.UI.Composition.CompositionProjectedShadowCaster obj) => obj is null ? null : MarshalInspectable<global::Microsoft.UI.Composition.CompositionProjectedShadowCaster>.CreateMarshaler<IUnknownVftbl>(obj, global::ABI.Microsoft.UI.Composition.ICompositionProjectedShadowCasterMethods.IID);
        public static ObjectReferenceValue CreateMarshaler2(global::Microsoft.UI.Composition.CompositionProjectedShadowCaster obj) => MarshalInspectable<object>.CreateMarshaler2(obj, global::ABI.Microsoft.UI.Composition.ICompositionProjectedShadowCasterMethods.IID);
        public static IntPtr GetAbi(IObjectReference value) => value is null ? IntPtr.Zero : MarshalInterfaceHelper<object>.GetAbi(value);
        public static global::Microsoft.UI.Composition.CompositionProjectedShadowCaster FromAbi(IntPtr thisPtr) => global::Microsoft.UI.Composition.CompositionProjectedShadowCaster.FromAbi(thisPtr);
        public static IntPtr FromManaged(global::Microsoft.UI.Composition.CompositionProjectedShadowCaster obj) => obj is null ? IntPtr.Zero : CreateMarshaler2(obj).Detach();
        public static unsafe MarshalInterfaceHelper<global::Microsoft.UI.Composition.CompositionProjectedShadowCaster>.MarshalerArray CreateMarshalerArray(global::Microsoft.UI.Composition.CompositionProjectedShadowCaster[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.CompositionProjectedShadowCaster>.CreateMarshalerArray2(array, (o) => CreateMarshaler2(o));
        public static (int length, IntPtr data) GetAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.CompositionProjectedShadowCaster>.GetAbiArray(box);
        public static unsafe global::Microsoft.UI.Composition.CompositionProjectedShadowCaster[] FromAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.CompositionProjectedShadowCaster>.FromAbiArray(box, FromAbi);
        public static void CopyAbiArray(global::Microsoft.UI.Composition.CompositionProjectedShadowCaster[] array, object box) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.CompositionProjectedShadowCaster>.CopyAbiArray(array, box, FromAbi);
        public static (int length, IntPtr data) FromManagedArray(global::Microsoft.UI.Composition.CompositionProjectedShadowCaster[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.CompositionProjectedShadowCaster>.FromManagedArray(array, (o) => FromManaged(o));
        public static void DisposeMarshaler(IObjectReference value) => MarshalInspectable<object>.DisposeMarshaler(value);
        public static void DisposeMarshalerArray(MarshalInterfaceHelper<global::Microsoft.UI.Composition.CompositionProjectedShadowCaster>.MarshalerArray array) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.CompositionProjectedShadowCaster>.DisposeMarshalerArray(array);
        public static void DisposeAbi(IntPtr abi) => MarshalInspectable<object>.DisposeAbi(abi);
        public static unsafe void DisposeAbiArray(object box) => MarshalInspectable<object>.DisposeAbiArray(box);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    internal sealed class CompositionProjectedShadowCasterRcwFactoryAttribute : global::WinRT.WinRTImplementationTypeRcwFactoryAttribute
    {
        public override object CreateInstance(global::WinRT.IInspectable inspectable)
            => new global::Microsoft.UI.Composition.CompositionProjectedShadowCaster(inspectable.ObjRef);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    public struct CompositionProjectedShadowCasterCollection
    {

        public static IObjectReference CreateMarshaler(global::Microsoft.UI.Composition.CompositionProjectedShadowCasterCollection obj) => obj is null ? null : MarshalInspectable<global::Microsoft.UI.Composition.CompositionProjectedShadowCasterCollection>.CreateMarshaler<IUnknownVftbl>(obj, global::ABI.Microsoft.UI.Composition.ICompositionProjectedShadowCasterCollectionMethods.IID);
        public static ObjectReferenceValue CreateMarshaler2(global::Microsoft.UI.Composition.CompositionProjectedShadowCasterCollection obj) => MarshalInspectable<object>.CreateMarshaler2(obj, global::ABI.Microsoft.UI.Composition.ICompositionProjectedShadowCasterCollectionMethods.IID);
        public static IntPtr GetAbi(IObjectReference value) => value is null ? IntPtr.Zero : MarshalInterfaceHelper<object>.GetAbi(value);
        public static global::Microsoft.UI.Composition.CompositionProjectedShadowCasterCollection FromAbi(IntPtr thisPtr) => global::Microsoft.UI.Composition.CompositionProjectedShadowCasterCollection.FromAbi(thisPtr);
        public static IntPtr FromManaged(global::Microsoft.UI.Composition.CompositionProjectedShadowCasterCollection obj) => obj is null ? IntPtr.Zero : CreateMarshaler2(obj).Detach();
        public static unsafe MarshalInterfaceHelper<global::Microsoft.UI.Composition.CompositionProjectedShadowCasterCollection>.MarshalerArray CreateMarshalerArray(global::Microsoft.UI.Composition.CompositionProjectedShadowCasterCollection[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.CompositionProjectedShadowCasterCollection>.CreateMarshalerArray2(array, (o) => CreateMarshaler2(o));
        public static (int length, IntPtr data) GetAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.CompositionProjectedShadowCasterCollection>.GetAbiArray(box);
        public static unsafe global::Microsoft.UI.Composition.CompositionProjectedShadowCasterCollection[] FromAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.CompositionProjectedShadowCasterCollection>.FromAbiArray(box, FromAbi);
        public static void CopyAbiArray(global::Microsoft.UI.Composition.CompositionProjectedShadowCasterCollection[] array, object box) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.CompositionProjectedShadowCasterCollection>.CopyAbiArray(array, box, FromAbi);
        public static (int length, IntPtr data) FromManagedArray(global::Microsoft.UI.Composition.CompositionProjectedShadowCasterCollection[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.CompositionProjectedShadowCasterCollection>.FromManagedArray(array, (o) => FromManaged(o));
        public static void DisposeMarshaler(IObjectReference value) => MarshalInspectable<object>.DisposeMarshaler(value);
        public static void DisposeMarshalerArray(MarshalInterfaceHelper<global::Microsoft.UI.Composition.CompositionProjectedShadowCasterCollection>.MarshalerArray array) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.CompositionProjectedShadowCasterCollection>.DisposeMarshalerArray(array);
        public static void DisposeAbi(IntPtr abi) => MarshalInspectable<object>.DisposeAbi(abi);
        public static unsafe void DisposeAbiArray(object box) => MarshalInspectable<object>.DisposeAbiArray(box);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    internal sealed class CompositionProjectedShadowCasterCollectionRcwFactoryAttribute : global::WinRT.WinRTImplementationTypeRcwFactoryAttribute
    {
        public override object CreateInstance(global::WinRT.IInspectable inspectable)
            => new global::Microsoft.UI.Composition.CompositionProjectedShadowCasterCollection(inspectable.ObjRef);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    public struct CompositionProjectedShadowReceiver
    {

        public static IObjectReference CreateMarshaler(global::Microsoft.UI.Composition.CompositionProjectedShadowReceiver obj) => obj is null ? null : MarshalInspectable<global::Microsoft.UI.Composition.CompositionProjectedShadowReceiver>.CreateMarshaler<IUnknownVftbl>(obj, global::ABI.Microsoft.UI.Composition.ICompositionProjectedShadowReceiverMethods.IID);
        public static ObjectReferenceValue CreateMarshaler2(global::Microsoft.UI.Composition.CompositionProjectedShadowReceiver obj) => MarshalInspectable<object>.CreateMarshaler2(obj, global::ABI.Microsoft.UI.Composition.ICompositionProjectedShadowReceiverMethods.IID);
        public static IntPtr GetAbi(IObjectReference value) => value is null ? IntPtr.Zero : MarshalInterfaceHelper<object>.GetAbi(value);
        public static global::Microsoft.UI.Composition.CompositionProjectedShadowReceiver FromAbi(IntPtr thisPtr) => global::Microsoft.UI.Composition.CompositionProjectedShadowReceiver.FromAbi(thisPtr);
        public static IntPtr FromManaged(global::Microsoft.UI.Composition.CompositionProjectedShadowReceiver obj) => obj is null ? IntPtr.Zero : CreateMarshaler2(obj).Detach();
        public static unsafe MarshalInterfaceHelper<global::Microsoft.UI.Composition.CompositionProjectedShadowReceiver>.MarshalerArray CreateMarshalerArray(global::Microsoft.UI.Composition.CompositionProjectedShadowReceiver[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.CompositionProjectedShadowReceiver>.CreateMarshalerArray2(array, (o) => CreateMarshaler2(o));
        public static (int length, IntPtr data) GetAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.CompositionProjectedShadowReceiver>.GetAbiArray(box);
        public static unsafe global::Microsoft.UI.Composition.CompositionProjectedShadowReceiver[] FromAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.CompositionProjectedShadowReceiver>.FromAbiArray(box, FromAbi);
        public static void CopyAbiArray(global::Microsoft.UI.Composition.CompositionProjectedShadowReceiver[] array, object box) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.CompositionProjectedShadowReceiver>.CopyAbiArray(array, box, FromAbi);
        public static (int length, IntPtr data) FromManagedArray(global::Microsoft.UI.Composition.CompositionProjectedShadowReceiver[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.CompositionProjectedShadowReceiver>.FromManagedArray(array, (o) => FromManaged(o));
        public static void DisposeMarshaler(IObjectReference value) => MarshalInspectable<object>.DisposeMarshaler(value);
        public static void DisposeMarshalerArray(MarshalInterfaceHelper<global::Microsoft.UI.Composition.CompositionProjectedShadowReceiver>.MarshalerArray array) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.CompositionProjectedShadowReceiver>.DisposeMarshalerArray(array);
        public static void DisposeAbi(IntPtr abi) => MarshalInspectable<object>.DisposeAbi(abi);
        public static unsafe void DisposeAbiArray(object box) => MarshalInspectable<object>.DisposeAbiArray(box);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    internal sealed class CompositionProjectedShadowReceiverRcwFactoryAttribute : global::WinRT.WinRTImplementationTypeRcwFactoryAttribute
    {
        public override object CreateInstance(global::WinRT.IInspectable inspectable)
            => new global::Microsoft.UI.Composition.CompositionProjectedShadowReceiver(inspectable.ObjRef);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    public struct CompositionProjectedShadowReceiverUnorderedCollection
    {

        public static IObjectReference CreateMarshaler(global::Microsoft.UI.Composition.CompositionProjectedShadowReceiverUnorderedCollection obj) => obj is null ? null : MarshalInspectable<global::Microsoft.UI.Composition.CompositionProjectedShadowReceiverUnorderedCollection>.CreateMarshaler<IUnknownVftbl>(obj, global::ABI.Microsoft.UI.Composition.ICompositionProjectedShadowReceiverUnorderedCollectionMethods.IID);
        public static ObjectReferenceValue CreateMarshaler2(global::Microsoft.UI.Composition.CompositionProjectedShadowReceiverUnorderedCollection obj) => MarshalInspectable<object>.CreateMarshaler2(obj, global::ABI.Microsoft.UI.Composition.ICompositionProjectedShadowReceiverUnorderedCollectionMethods.IID);
        public static IntPtr GetAbi(IObjectReference value) => value is null ? IntPtr.Zero : MarshalInterfaceHelper<object>.GetAbi(value);
        public static global::Microsoft.UI.Composition.CompositionProjectedShadowReceiverUnorderedCollection FromAbi(IntPtr thisPtr) => global::Microsoft.UI.Composition.CompositionProjectedShadowReceiverUnorderedCollection.FromAbi(thisPtr);
        public static IntPtr FromManaged(global::Microsoft.UI.Composition.CompositionProjectedShadowReceiverUnorderedCollection obj) => obj is null ? IntPtr.Zero : CreateMarshaler2(obj).Detach();
        public static unsafe MarshalInterfaceHelper<global::Microsoft.UI.Composition.CompositionProjectedShadowReceiverUnorderedCollection>.MarshalerArray CreateMarshalerArray(global::Microsoft.UI.Composition.CompositionProjectedShadowReceiverUnorderedCollection[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.CompositionProjectedShadowReceiverUnorderedCollection>.CreateMarshalerArray2(array, (o) => CreateMarshaler2(o));
        public static (int length, IntPtr data) GetAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.CompositionProjectedShadowReceiverUnorderedCollection>.GetAbiArray(box);
        public static unsafe global::Microsoft.UI.Composition.CompositionProjectedShadowReceiverUnorderedCollection[] FromAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.CompositionProjectedShadowReceiverUnorderedCollection>.FromAbiArray(box, FromAbi);
        public static void CopyAbiArray(global::Microsoft.UI.Composition.CompositionProjectedShadowReceiverUnorderedCollection[] array, object box) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.CompositionProjectedShadowReceiverUnorderedCollection>.CopyAbiArray(array, box, FromAbi);
        public static (int length, IntPtr data) FromManagedArray(global::Microsoft.UI.Composition.CompositionProjectedShadowReceiverUnorderedCollection[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.CompositionProjectedShadowReceiverUnorderedCollection>.FromManagedArray(array, (o) => FromManaged(o));
        public static void DisposeMarshaler(IObjectReference value) => MarshalInspectable<object>.DisposeMarshaler(value);
        public static void DisposeMarshalerArray(MarshalInterfaceHelper<global::Microsoft.UI.Composition.CompositionProjectedShadowReceiverUnorderedCollection>.MarshalerArray array) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.CompositionProjectedShadowReceiverUnorderedCollection>.DisposeMarshalerArray(array);
        public static void DisposeAbi(IntPtr abi) => MarshalInspectable<object>.DisposeAbi(abi);
        public static unsafe void DisposeAbiArray(object box) => MarshalInspectable<object>.DisposeAbiArray(box);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    internal sealed class CompositionProjectedShadowReceiverUnorderedCollectionRcwFactoryAttribute : global::WinRT.WinRTImplementationTypeRcwFactoryAttribute
    {
        public override object CreateInstance(global::WinRT.IInspectable inspectable)
            => new global::Microsoft.UI.Composition.CompositionProjectedShadowReceiverUnorderedCollection(inspectable.ObjRef);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    public struct CompositionPropertySet
    {

        public static IObjectReference CreateMarshaler(global::Microsoft.UI.Composition.CompositionPropertySet obj) => obj is null ? null : MarshalInspectable<global::Microsoft.UI.Composition.CompositionPropertySet>.CreateMarshaler<IUnknownVftbl>(obj, global::ABI.Microsoft.UI.Composition.ICompositionPropertySetMethods.IID);
        public static ObjectReferenceValue CreateMarshaler2(global::Microsoft.UI.Composition.CompositionPropertySet obj) => MarshalInspectable<object>.CreateMarshaler2(obj, global::ABI.Microsoft.UI.Composition.ICompositionPropertySetMethods.IID);
        public static IntPtr GetAbi(IObjectReference value) => value is null ? IntPtr.Zero : MarshalInterfaceHelper<object>.GetAbi(value);
        public static global::Microsoft.UI.Composition.CompositionPropertySet FromAbi(IntPtr thisPtr) => global::Microsoft.UI.Composition.CompositionPropertySet.FromAbi(thisPtr);
        public static IntPtr FromManaged(global::Microsoft.UI.Composition.CompositionPropertySet obj) => obj is null ? IntPtr.Zero : CreateMarshaler2(obj).Detach();
        public static unsafe MarshalInterfaceHelper<global::Microsoft.UI.Composition.CompositionPropertySet>.MarshalerArray CreateMarshalerArray(global::Microsoft.UI.Composition.CompositionPropertySet[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.CompositionPropertySet>.CreateMarshalerArray2(array, (o) => CreateMarshaler2(o));
        public static (int length, IntPtr data) GetAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.CompositionPropertySet>.GetAbiArray(box);
        public static unsafe global::Microsoft.UI.Composition.CompositionPropertySet[] FromAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.CompositionPropertySet>.FromAbiArray(box, FromAbi);
        public static void CopyAbiArray(global::Microsoft.UI.Composition.CompositionPropertySet[] array, object box) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.CompositionPropertySet>.CopyAbiArray(array, box, FromAbi);
        public static (int length, IntPtr data) FromManagedArray(global::Microsoft.UI.Composition.CompositionPropertySet[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.CompositionPropertySet>.FromManagedArray(array, (o) => FromManaged(o));
        public static void DisposeMarshaler(IObjectReference value) => MarshalInspectable<object>.DisposeMarshaler(value);
        public static void DisposeMarshalerArray(MarshalInterfaceHelper<global::Microsoft.UI.Composition.CompositionPropertySet>.MarshalerArray array) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.CompositionPropertySet>.DisposeMarshalerArray(array);
        public static void DisposeAbi(IntPtr abi) => MarshalInspectable<object>.DisposeAbi(abi);
        public static unsafe void DisposeAbiArray(object box) => MarshalInspectable<object>.DisposeAbiArray(box);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    internal sealed class CompositionPropertySetRcwFactoryAttribute : global::WinRT.WinRTImplementationTypeRcwFactoryAttribute
    {
        public override object CreateInstance(global::WinRT.IInspectable inspectable)
            => new global::Microsoft.UI.Composition.CompositionPropertySet(inspectable.ObjRef);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    public struct CompositionRadialGradientBrush
    {

        public static IObjectReference CreateMarshaler(global::Microsoft.UI.Composition.CompositionRadialGradientBrush obj) => obj is null ? null : MarshalInspectable<global::Microsoft.UI.Composition.CompositionRadialGradientBrush>.CreateMarshaler<IUnknownVftbl>(obj, global::ABI.Microsoft.UI.Composition.ICompositionRadialGradientBrushMethods.IID);
        public static ObjectReferenceValue CreateMarshaler2(global::Microsoft.UI.Composition.CompositionRadialGradientBrush obj) => MarshalInspectable<object>.CreateMarshaler2(obj, global::ABI.Microsoft.UI.Composition.ICompositionRadialGradientBrushMethods.IID);
        public static IntPtr GetAbi(IObjectReference value) => value is null ? IntPtr.Zero : MarshalInterfaceHelper<object>.GetAbi(value);
        public static global::Microsoft.UI.Composition.CompositionRadialGradientBrush FromAbi(IntPtr thisPtr) => global::Microsoft.UI.Composition.CompositionRadialGradientBrush.FromAbi(thisPtr);
        public static IntPtr FromManaged(global::Microsoft.UI.Composition.CompositionRadialGradientBrush obj) => obj is null ? IntPtr.Zero : CreateMarshaler2(obj).Detach();
        public static unsafe MarshalInterfaceHelper<global::Microsoft.UI.Composition.CompositionRadialGradientBrush>.MarshalerArray CreateMarshalerArray(global::Microsoft.UI.Composition.CompositionRadialGradientBrush[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.CompositionRadialGradientBrush>.CreateMarshalerArray2(array, (o) => CreateMarshaler2(o));
        public static (int length, IntPtr data) GetAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.CompositionRadialGradientBrush>.GetAbiArray(box);
        public static unsafe global::Microsoft.UI.Composition.CompositionRadialGradientBrush[] FromAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.CompositionRadialGradientBrush>.FromAbiArray(box, FromAbi);
        public static void CopyAbiArray(global::Microsoft.UI.Composition.CompositionRadialGradientBrush[] array, object box) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.CompositionRadialGradientBrush>.CopyAbiArray(array, box, FromAbi);
        public static (int length, IntPtr data) FromManagedArray(global::Microsoft.UI.Composition.CompositionRadialGradientBrush[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.CompositionRadialGradientBrush>.FromManagedArray(array, (o) => FromManaged(o));
        public static void DisposeMarshaler(IObjectReference value) => MarshalInspectable<object>.DisposeMarshaler(value);
        public static void DisposeMarshalerArray(MarshalInterfaceHelper<global::Microsoft.UI.Composition.CompositionRadialGradientBrush>.MarshalerArray array) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.CompositionRadialGradientBrush>.DisposeMarshalerArray(array);
        public static void DisposeAbi(IntPtr abi) => MarshalInspectable<object>.DisposeAbi(abi);
        public static unsafe void DisposeAbiArray(object box) => MarshalInspectable<object>.DisposeAbiArray(box);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    internal sealed class CompositionRadialGradientBrushRcwFactoryAttribute : global::WinRT.WinRTImplementationTypeRcwFactoryAttribute
    {
        public override object CreateInstance(global::WinRT.IInspectable inspectable)
            => new global::Microsoft.UI.Composition.CompositionRadialGradientBrush(inspectable.ObjRef);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    public struct CompositionRectangleGeometry
    {

        public static IObjectReference CreateMarshaler(global::Microsoft.UI.Composition.CompositionRectangleGeometry obj) => obj is null ? null : MarshalInspectable<global::Microsoft.UI.Composition.CompositionRectangleGeometry>.CreateMarshaler<IUnknownVftbl>(obj, global::ABI.Microsoft.UI.Composition.ICompositionRectangleGeometryMethods.IID);
        public static ObjectReferenceValue CreateMarshaler2(global::Microsoft.UI.Composition.CompositionRectangleGeometry obj) => MarshalInspectable<object>.CreateMarshaler2(obj, global::ABI.Microsoft.UI.Composition.ICompositionRectangleGeometryMethods.IID);
        public static IntPtr GetAbi(IObjectReference value) => value is null ? IntPtr.Zero : MarshalInterfaceHelper<object>.GetAbi(value);
        public static global::Microsoft.UI.Composition.CompositionRectangleGeometry FromAbi(IntPtr thisPtr) => global::Microsoft.UI.Composition.CompositionRectangleGeometry.FromAbi(thisPtr);
        public static IntPtr FromManaged(global::Microsoft.UI.Composition.CompositionRectangleGeometry obj) => obj is null ? IntPtr.Zero : CreateMarshaler2(obj).Detach();
        public static unsafe MarshalInterfaceHelper<global::Microsoft.UI.Composition.CompositionRectangleGeometry>.MarshalerArray CreateMarshalerArray(global::Microsoft.UI.Composition.CompositionRectangleGeometry[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.CompositionRectangleGeometry>.CreateMarshalerArray2(array, (o) => CreateMarshaler2(o));
        public static (int length, IntPtr data) GetAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.CompositionRectangleGeometry>.GetAbiArray(box);
        public static unsafe global::Microsoft.UI.Composition.CompositionRectangleGeometry[] FromAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.CompositionRectangleGeometry>.FromAbiArray(box, FromAbi);
        public static void CopyAbiArray(global::Microsoft.UI.Composition.CompositionRectangleGeometry[] array, object box) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.CompositionRectangleGeometry>.CopyAbiArray(array, box, FromAbi);
        public static (int length, IntPtr data) FromManagedArray(global::Microsoft.UI.Composition.CompositionRectangleGeometry[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.CompositionRectangleGeometry>.FromManagedArray(array, (o) => FromManaged(o));
        public static void DisposeMarshaler(IObjectReference value) => MarshalInspectable<object>.DisposeMarshaler(value);
        public static void DisposeMarshalerArray(MarshalInterfaceHelper<global::Microsoft.UI.Composition.CompositionRectangleGeometry>.MarshalerArray array) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.CompositionRectangleGeometry>.DisposeMarshalerArray(array);
        public static void DisposeAbi(IntPtr abi) => MarshalInspectable<object>.DisposeAbi(abi);
        public static unsafe void DisposeAbiArray(object box) => MarshalInspectable<object>.DisposeAbiArray(box);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    internal sealed class CompositionRectangleGeometryRcwFactoryAttribute : global::WinRT.WinRTImplementationTypeRcwFactoryAttribute
    {
        public override object CreateInstance(global::WinRT.IInspectable inspectable)
            => new global::Microsoft.UI.Composition.CompositionRectangleGeometry(inspectable.ObjRef);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    public struct CompositionRoundedRectangleGeometry
    {

        public static IObjectReference CreateMarshaler(global::Microsoft.UI.Composition.CompositionRoundedRectangleGeometry obj) => obj is null ? null : MarshalInspectable<global::Microsoft.UI.Composition.CompositionRoundedRectangleGeometry>.CreateMarshaler<IUnknownVftbl>(obj, global::ABI.Microsoft.UI.Composition.ICompositionRoundedRectangleGeometryMethods.IID);
        public static ObjectReferenceValue CreateMarshaler2(global::Microsoft.UI.Composition.CompositionRoundedRectangleGeometry obj) => MarshalInspectable<object>.CreateMarshaler2(obj, global::ABI.Microsoft.UI.Composition.ICompositionRoundedRectangleGeometryMethods.IID);
        public static IntPtr GetAbi(IObjectReference value) => value is null ? IntPtr.Zero : MarshalInterfaceHelper<object>.GetAbi(value);
        public static global::Microsoft.UI.Composition.CompositionRoundedRectangleGeometry FromAbi(IntPtr thisPtr) => global::Microsoft.UI.Composition.CompositionRoundedRectangleGeometry.FromAbi(thisPtr);
        public static IntPtr FromManaged(global::Microsoft.UI.Composition.CompositionRoundedRectangleGeometry obj) => obj is null ? IntPtr.Zero : CreateMarshaler2(obj).Detach();
        public static unsafe MarshalInterfaceHelper<global::Microsoft.UI.Composition.CompositionRoundedRectangleGeometry>.MarshalerArray CreateMarshalerArray(global::Microsoft.UI.Composition.CompositionRoundedRectangleGeometry[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.CompositionRoundedRectangleGeometry>.CreateMarshalerArray2(array, (o) => CreateMarshaler2(o));
        public static (int length, IntPtr data) GetAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.CompositionRoundedRectangleGeometry>.GetAbiArray(box);
        public static unsafe global::Microsoft.UI.Composition.CompositionRoundedRectangleGeometry[] FromAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.CompositionRoundedRectangleGeometry>.FromAbiArray(box, FromAbi);
        public static void CopyAbiArray(global::Microsoft.UI.Composition.CompositionRoundedRectangleGeometry[] array, object box) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.CompositionRoundedRectangleGeometry>.CopyAbiArray(array, box, FromAbi);
        public static (int length, IntPtr data) FromManagedArray(global::Microsoft.UI.Composition.CompositionRoundedRectangleGeometry[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.CompositionRoundedRectangleGeometry>.FromManagedArray(array, (o) => FromManaged(o));
        public static void DisposeMarshaler(IObjectReference value) => MarshalInspectable<object>.DisposeMarshaler(value);
        public static void DisposeMarshalerArray(MarshalInterfaceHelper<global::Microsoft.UI.Composition.CompositionRoundedRectangleGeometry>.MarshalerArray array) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.CompositionRoundedRectangleGeometry>.DisposeMarshalerArray(array);
        public static void DisposeAbi(IntPtr abi) => MarshalInspectable<object>.DisposeAbi(abi);
        public static unsafe void DisposeAbiArray(object box) => MarshalInspectable<object>.DisposeAbiArray(box);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    internal sealed class CompositionRoundedRectangleGeometryRcwFactoryAttribute : global::WinRT.WinRTImplementationTypeRcwFactoryAttribute
    {
        public override object CreateInstance(global::WinRT.IInspectable inspectable)
            => new global::Microsoft.UI.Composition.CompositionRoundedRectangleGeometry(inspectable.ObjRef);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    public struct CompositionScopedBatch
    {

        public static IObjectReference CreateMarshaler(global::Microsoft.UI.Composition.CompositionScopedBatch obj) => obj is null ? null : MarshalInspectable<global::Microsoft.UI.Composition.CompositionScopedBatch>.CreateMarshaler<IUnknownVftbl>(obj, global::ABI.Microsoft.UI.Composition.ICompositionScopedBatchMethods.IID);
        public static ObjectReferenceValue CreateMarshaler2(global::Microsoft.UI.Composition.CompositionScopedBatch obj) => MarshalInspectable<object>.CreateMarshaler2(obj, global::ABI.Microsoft.UI.Composition.ICompositionScopedBatchMethods.IID);
        public static IntPtr GetAbi(IObjectReference value) => value is null ? IntPtr.Zero : MarshalInterfaceHelper<object>.GetAbi(value);
        public static global::Microsoft.UI.Composition.CompositionScopedBatch FromAbi(IntPtr thisPtr) => global::Microsoft.UI.Composition.CompositionScopedBatch.FromAbi(thisPtr);
        public static IntPtr FromManaged(global::Microsoft.UI.Composition.CompositionScopedBatch obj) => obj is null ? IntPtr.Zero : CreateMarshaler2(obj).Detach();
        public static unsafe MarshalInterfaceHelper<global::Microsoft.UI.Composition.CompositionScopedBatch>.MarshalerArray CreateMarshalerArray(global::Microsoft.UI.Composition.CompositionScopedBatch[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.CompositionScopedBatch>.CreateMarshalerArray2(array, (o) => CreateMarshaler2(o));
        public static (int length, IntPtr data) GetAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.CompositionScopedBatch>.GetAbiArray(box);
        public static unsafe global::Microsoft.UI.Composition.CompositionScopedBatch[] FromAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.CompositionScopedBatch>.FromAbiArray(box, FromAbi);
        public static void CopyAbiArray(global::Microsoft.UI.Composition.CompositionScopedBatch[] array, object box) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.CompositionScopedBatch>.CopyAbiArray(array, box, FromAbi);
        public static (int length, IntPtr data) FromManagedArray(global::Microsoft.UI.Composition.CompositionScopedBatch[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.CompositionScopedBatch>.FromManagedArray(array, (o) => FromManaged(o));
        public static void DisposeMarshaler(IObjectReference value) => MarshalInspectable<object>.DisposeMarshaler(value);
        public static void DisposeMarshalerArray(MarshalInterfaceHelper<global::Microsoft.UI.Composition.CompositionScopedBatch>.MarshalerArray array) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.CompositionScopedBatch>.DisposeMarshalerArray(array);
        public static void DisposeAbi(IntPtr abi) => MarshalInspectable<object>.DisposeAbi(abi);
        public static unsafe void DisposeAbiArray(object box) => MarshalInspectable<object>.DisposeAbiArray(box);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    internal sealed class CompositionScopedBatchRcwFactoryAttribute : global::WinRT.WinRTImplementationTypeRcwFactoryAttribute
    {
        public override object CreateInstance(global::WinRT.IInspectable inspectable)
            => new global::Microsoft.UI.Composition.CompositionScopedBatch(inspectable.ObjRef);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    public struct CompositionShadow
    {

        public static IObjectReference CreateMarshaler(global::Microsoft.UI.Composition.CompositionShadow obj) => obj is null ? null : MarshalInspectable<global::Microsoft.UI.Composition.CompositionShadow>.CreateMarshaler<IUnknownVftbl>(obj, global::ABI.Microsoft.UI.Composition.ICompositionShadowMethods.IID);
        public static ObjectReferenceValue CreateMarshaler2(global::Microsoft.UI.Composition.CompositionShadow obj) => MarshalInspectable<object>.CreateMarshaler2(obj, global::ABI.Microsoft.UI.Composition.ICompositionShadowMethods.IID);
        public static IntPtr GetAbi(IObjectReference value) => value is null ? IntPtr.Zero : MarshalInterfaceHelper<object>.GetAbi(value);
        public static global::Microsoft.UI.Composition.CompositionShadow FromAbi(IntPtr thisPtr) => global::Microsoft.UI.Composition.CompositionShadow.FromAbi(thisPtr);
        public static IntPtr FromManaged(global::Microsoft.UI.Composition.CompositionShadow obj) => obj is null ? IntPtr.Zero : CreateMarshaler2(obj).Detach();
        public static unsafe MarshalInterfaceHelper<global::Microsoft.UI.Composition.CompositionShadow>.MarshalerArray CreateMarshalerArray(global::Microsoft.UI.Composition.CompositionShadow[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.CompositionShadow>.CreateMarshalerArray2(array, (o) => CreateMarshaler2(o));
        public static (int length, IntPtr data) GetAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.CompositionShadow>.GetAbiArray(box);
        public static unsafe global::Microsoft.UI.Composition.CompositionShadow[] FromAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.CompositionShadow>.FromAbiArray(box, FromAbi);
        public static void CopyAbiArray(global::Microsoft.UI.Composition.CompositionShadow[] array, object box) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.CompositionShadow>.CopyAbiArray(array, box, FromAbi);
        public static (int length, IntPtr data) FromManagedArray(global::Microsoft.UI.Composition.CompositionShadow[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.CompositionShadow>.FromManagedArray(array, (o) => FromManaged(o));
        public static void DisposeMarshaler(IObjectReference value) => MarshalInspectable<object>.DisposeMarshaler(value);
        public static void DisposeMarshalerArray(MarshalInterfaceHelper<global::Microsoft.UI.Composition.CompositionShadow>.MarshalerArray array) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.CompositionShadow>.DisposeMarshalerArray(array);
        public static void DisposeAbi(IntPtr abi) => MarshalInspectable<object>.DisposeAbi(abi);
        public static unsafe void DisposeAbiArray(object box) => MarshalInspectable<object>.DisposeAbiArray(box);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    internal sealed class CompositionShadowRcwFactoryAttribute : global::WinRT.WinRTImplementationTypeRcwFactoryAttribute
    {
        public override object CreateInstance(global::WinRT.IInspectable inspectable)
            => new global::Microsoft.UI.Composition.CompositionShadow(inspectable.ObjRef);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    public struct CompositionShape
    {

        public static IObjectReference CreateMarshaler(global::Microsoft.UI.Composition.CompositionShape obj) => obj is null ? null : MarshalInspectable<global::Microsoft.UI.Composition.CompositionShape>.CreateMarshaler<IUnknownVftbl>(obj, global::ABI.Microsoft.UI.Composition.ICompositionShapeMethods.IID);
        public static ObjectReferenceValue CreateMarshaler2(global::Microsoft.UI.Composition.CompositionShape obj) => MarshalInspectable<object>.CreateMarshaler2(obj, global::ABI.Microsoft.UI.Composition.ICompositionShapeMethods.IID);
        public static IntPtr GetAbi(IObjectReference value) => value is null ? IntPtr.Zero : MarshalInterfaceHelper<object>.GetAbi(value);
        public static global::Microsoft.UI.Composition.CompositionShape FromAbi(IntPtr thisPtr) => global::Microsoft.UI.Composition.CompositionShape.FromAbi(thisPtr);
        public static IntPtr FromManaged(global::Microsoft.UI.Composition.CompositionShape obj) => obj is null ? IntPtr.Zero : CreateMarshaler2(obj).Detach();
        public static unsafe MarshalInterfaceHelper<global::Microsoft.UI.Composition.CompositionShape>.MarshalerArray CreateMarshalerArray(global::Microsoft.UI.Composition.CompositionShape[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.CompositionShape>.CreateMarshalerArray2(array, (o) => CreateMarshaler2(o));
        public static (int length, IntPtr data) GetAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.CompositionShape>.GetAbiArray(box);
        public static unsafe global::Microsoft.UI.Composition.CompositionShape[] FromAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.CompositionShape>.FromAbiArray(box, FromAbi);
        public static void CopyAbiArray(global::Microsoft.UI.Composition.CompositionShape[] array, object box) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.CompositionShape>.CopyAbiArray(array, box, FromAbi);
        public static (int length, IntPtr data) FromManagedArray(global::Microsoft.UI.Composition.CompositionShape[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.CompositionShape>.FromManagedArray(array, (o) => FromManaged(o));
        public static void DisposeMarshaler(IObjectReference value) => MarshalInspectable<object>.DisposeMarshaler(value);
        public static void DisposeMarshalerArray(MarshalInterfaceHelper<global::Microsoft.UI.Composition.CompositionShape>.MarshalerArray array) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.CompositionShape>.DisposeMarshalerArray(array);
        public static void DisposeAbi(IntPtr abi) => MarshalInspectable<object>.DisposeAbi(abi);
        public static unsafe void DisposeAbiArray(object box) => MarshalInspectable<object>.DisposeAbiArray(box);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    internal sealed class CompositionShapeRcwFactoryAttribute : global::WinRT.WinRTImplementationTypeRcwFactoryAttribute
    {
        public override object CreateInstance(global::WinRT.IInspectable inspectable)
            => new global::Microsoft.UI.Composition.CompositionShape(inspectable.ObjRef);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    public struct CompositionShapeCollection
    {

        public static IObjectReference CreateMarshaler(global::Microsoft.UI.Composition.CompositionShapeCollection obj) => obj is null ? null : MarshalInterface<global::System.Collections.Generic.IList<global::Microsoft.UI.Composition.CompositionShape>>.CreateMarshaler(obj);
        public static ObjectReferenceValue CreateMarshaler2(global::Microsoft.UI.Composition.CompositionShapeCollection obj) => MarshalInterface<global::System.Collections.Generic.IList<global::Microsoft.UI.Composition.CompositionShape>>.CreateMarshaler2(obj, global::ABI.System.Collections.Generic.IListMethods<global::Microsoft.UI.Composition.CompositionShape>.IID);
        public static IntPtr GetAbi(IObjectReference value) => value is null ? IntPtr.Zero : MarshalInterfaceHelper<object>.GetAbi(value);
        public static global::Microsoft.UI.Composition.CompositionShapeCollection FromAbi(IntPtr thisPtr) => global::Microsoft.UI.Composition.CompositionShapeCollection.FromAbi(thisPtr);
        public static IntPtr FromManaged(global::Microsoft.UI.Composition.CompositionShapeCollection obj) => obj is null ? IntPtr.Zero : CreateMarshaler2(obj).Detach();
        public static unsafe MarshalInterfaceHelper<global::Microsoft.UI.Composition.CompositionShapeCollection>.MarshalerArray CreateMarshalerArray(global::Microsoft.UI.Composition.CompositionShapeCollection[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.CompositionShapeCollection>.CreateMarshalerArray2(array, (o) => CreateMarshaler2(o));
        public static (int length, IntPtr data) GetAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.CompositionShapeCollection>.GetAbiArray(box);
        public static unsafe global::Microsoft.UI.Composition.CompositionShapeCollection[] FromAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.CompositionShapeCollection>.FromAbiArray(box, FromAbi);
        public static void CopyAbiArray(global::Microsoft.UI.Composition.CompositionShapeCollection[] array, object box) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.CompositionShapeCollection>.CopyAbiArray(array, box, FromAbi);
        public static (int length, IntPtr data) FromManagedArray(global::Microsoft.UI.Composition.CompositionShapeCollection[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.CompositionShapeCollection>.FromManagedArray(array, (o) => FromManaged(o));
        public static void DisposeMarshaler(IObjectReference value) => MarshalInspectable<object>.DisposeMarshaler(value);
        public static void DisposeMarshalerArray(MarshalInterfaceHelper<global::Microsoft.UI.Composition.CompositionShapeCollection>.MarshalerArray array) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.CompositionShapeCollection>.DisposeMarshalerArray(array);
        public static void DisposeAbi(IntPtr abi) => MarshalInspectable<object>.DisposeAbi(abi);
        public static unsafe void DisposeAbiArray(object box) => MarshalInspectable<object>.DisposeAbiArray(box);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    internal sealed class CompositionShapeCollectionRcwFactoryAttribute : global::WinRT.WinRTImplementationTypeRcwFactoryAttribute
    {
        public override object CreateInstance(global::WinRT.IInspectable inspectable)
            => new global::Microsoft.UI.Composition.CompositionShapeCollection(inspectable.ObjRef);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    public struct CompositionSpriteShape
    {

        public static IObjectReference CreateMarshaler(global::Microsoft.UI.Composition.CompositionSpriteShape obj) => obj is null ? null : MarshalInspectable<global::Microsoft.UI.Composition.CompositionSpriteShape>.CreateMarshaler<IUnknownVftbl>(obj, global::ABI.Microsoft.UI.Composition.ICompositionSpriteShapeMethods.IID);
        public static ObjectReferenceValue CreateMarshaler2(global::Microsoft.UI.Composition.CompositionSpriteShape obj) => MarshalInspectable<object>.CreateMarshaler2(obj, global::ABI.Microsoft.UI.Composition.ICompositionSpriteShapeMethods.IID);
        public static IntPtr GetAbi(IObjectReference value) => value is null ? IntPtr.Zero : MarshalInterfaceHelper<object>.GetAbi(value);
        public static global::Microsoft.UI.Composition.CompositionSpriteShape FromAbi(IntPtr thisPtr) => global::Microsoft.UI.Composition.CompositionSpriteShape.FromAbi(thisPtr);
        public static IntPtr FromManaged(global::Microsoft.UI.Composition.CompositionSpriteShape obj) => obj is null ? IntPtr.Zero : CreateMarshaler2(obj).Detach();
        public static unsafe MarshalInterfaceHelper<global::Microsoft.UI.Composition.CompositionSpriteShape>.MarshalerArray CreateMarshalerArray(global::Microsoft.UI.Composition.CompositionSpriteShape[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.CompositionSpriteShape>.CreateMarshalerArray2(array, (o) => CreateMarshaler2(o));
        public static (int length, IntPtr data) GetAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.CompositionSpriteShape>.GetAbiArray(box);
        public static unsafe global::Microsoft.UI.Composition.CompositionSpriteShape[] FromAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.CompositionSpriteShape>.FromAbiArray(box, FromAbi);
        public static void CopyAbiArray(global::Microsoft.UI.Composition.CompositionSpriteShape[] array, object box) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.CompositionSpriteShape>.CopyAbiArray(array, box, FromAbi);
        public static (int length, IntPtr data) FromManagedArray(global::Microsoft.UI.Composition.CompositionSpriteShape[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.CompositionSpriteShape>.FromManagedArray(array, (o) => FromManaged(o));
        public static void DisposeMarshaler(IObjectReference value) => MarshalInspectable<object>.DisposeMarshaler(value);
        public static void DisposeMarshalerArray(MarshalInterfaceHelper<global::Microsoft.UI.Composition.CompositionSpriteShape>.MarshalerArray array) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.CompositionSpriteShape>.DisposeMarshalerArray(array);
        public static void DisposeAbi(IntPtr abi) => MarshalInspectable<object>.DisposeAbi(abi);
        public static unsafe void DisposeAbiArray(object box) => MarshalInspectable<object>.DisposeAbiArray(box);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    internal sealed class CompositionSpriteShapeRcwFactoryAttribute : global::WinRT.WinRTImplementationTypeRcwFactoryAttribute
    {
        public override object CreateInstance(global::WinRT.IInspectable inspectable)
            => new global::Microsoft.UI.Composition.CompositionSpriteShape(inspectable.ObjRef);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    public struct CompositionStrokeDashArray
    {

        public static IObjectReference CreateMarshaler(global::Microsoft.UI.Composition.CompositionStrokeDashArray obj) => obj is null ? null : MarshalInterface<global::System.Collections.Generic.IList<float>>.CreateMarshaler(obj);
        public static ObjectReferenceValue CreateMarshaler2(global::Microsoft.UI.Composition.CompositionStrokeDashArray obj) => MarshalInterface<global::System.Collections.Generic.IList<float>>.CreateMarshaler2(obj, global::ABI.System.Collections.Generic.IListMethods<float>.IID);
        public static IntPtr GetAbi(IObjectReference value) => value is null ? IntPtr.Zero : MarshalInterfaceHelper<object>.GetAbi(value);
        public static global::Microsoft.UI.Composition.CompositionStrokeDashArray FromAbi(IntPtr thisPtr) => global::Microsoft.UI.Composition.CompositionStrokeDashArray.FromAbi(thisPtr);
        public static IntPtr FromManaged(global::Microsoft.UI.Composition.CompositionStrokeDashArray obj) => obj is null ? IntPtr.Zero : CreateMarshaler2(obj).Detach();
        public static unsafe MarshalInterfaceHelper<global::Microsoft.UI.Composition.CompositionStrokeDashArray>.MarshalerArray CreateMarshalerArray(global::Microsoft.UI.Composition.CompositionStrokeDashArray[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.CompositionStrokeDashArray>.CreateMarshalerArray2(array, (o) => CreateMarshaler2(o));
        public static (int length, IntPtr data) GetAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.CompositionStrokeDashArray>.GetAbiArray(box);
        public static unsafe global::Microsoft.UI.Composition.CompositionStrokeDashArray[] FromAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.CompositionStrokeDashArray>.FromAbiArray(box, FromAbi);
        public static void CopyAbiArray(global::Microsoft.UI.Composition.CompositionStrokeDashArray[] array, object box) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.CompositionStrokeDashArray>.CopyAbiArray(array, box, FromAbi);
        public static (int length, IntPtr data) FromManagedArray(global::Microsoft.UI.Composition.CompositionStrokeDashArray[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.CompositionStrokeDashArray>.FromManagedArray(array, (o) => FromManaged(o));
        public static void DisposeMarshaler(IObjectReference value) => MarshalInspectable<object>.DisposeMarshaler(value);
        public static void DisposeMarshalerArray(MarshalInterfaceHelper<global::Microsoft.UI.Composition.CompositionStrokeDashArray>.MarshalerArray array) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.CompositionStrokeDashArray>.DisposeMarshalerArray(array);
        public static void DisposeAbi(IntPtr abi) => MarshalInspectable<object>.DisposeAbi(abi);
        public static unsafe void DisposeAbiArray(object box) => MarshalInspectable<object>.DisposeAbiArray(box);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    internal sealed class CompositionStrokeDashArrayRcwFactoryAttribute : global::WinRT.WinRTImplementationTypeRcwFactoryAttribute
    {
        public override object CreateInstance(global::WinRT.IInspectable inspectable)
            => new global::Microsoft.UI.Composition.CompositionStrokeDashArray(inspectable.ObjRef);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    public struct CompositionSurfaceBrush
    {

        public static IObjectReference CreateMarshaler(global::Microsoft.UI.Composition.CompositionSurfaceBrush obj) => obj is null ? null : MarshalInspectable<global::Microsoft.UI.Composition.CompositionSurfaceBrush>.CreateMarshaler<IUnknownVftbl>(obj, global::ABI.Microsoft.UI.Composition.ICompositionSurfaceBrushMethods.IID);
        public static ObjectReferenceValue CreateMarshaler2(global::Microsoft.UI.Composition.CompositionSurfaceBrush obj) => MarshalInspectable<object>.CreateMarshaler2(obj, global::ABI.Microsoft.UI.Composition.ICompositionSurfaceBrushMethods.IID);
        public static IntPtr GetAbi(IObjectReference value) => value is null ? IntPtr.Zero : MarshalInterfaceHelper<object>.GetAbi(value);
        public static global::Microsoft.UI.Composition.CompositionSurfaceBrush FromAbi(IntPtr thisPtr) => global::Microsoft.UI.Composition.CompositionSurfaceBrush.FromAbi(thisPtr);
        public static IntPtr FromManaged(global::Microsoft.UI.Composition.CompositionSurfaceBrush obj) => obj is null ? IntPtr.Zero : CreateMarshaler2(obj).Detach();
        public static unsafe MarshalInterfaceHelper<global::Microsoft.UI.Composition.CompositionSurfaceBrush>.MarshalerArray CreateMarshalerArray(global::Microsoft.UI.Composition.CompositionSurfaceBrush[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.CompositionSurfaceBrush>.CreateMarshalerArray2(array, (o) => CreateMarshaler2(o));
        public static (int length, IntPtr data) GetAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.CompositionSurfaceBrush>.GetAbiArray(box);
        public static unsafe global::Microsoft.UI.Composition.CompositionSurfaceBrush[] FromAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.CompositionSurfaceBrush>.FromAbiArray(box, FromAbi);
        public static void CopyAbiArray(global::Microsoft.UI.Composition.CompositionSurfaceBrush[] array, object box) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.CompositionSurfaceBrush>.CopyAbiArray(array, box, FromAbi);
        public static (int length, IntPtr data) FromManagedArray(global::Microsoft.UI.Composition.CompositionSurfaceBrush[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.CompositionSurfaceBrush>.FromManagedArray(array, (o) => FromManaged(o));
        public static void DisposeMarshaler(IObjectReference value) => MarshalInspectable<object>.DisposeMarshaler(value);
        public static void DisposeMarshalerArray(MarshalInterfaceHelper<global::Microsoft.UI.Composition.CompositionSurfaceBrush>.MarshalerArray array) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.CompositionSurfaceBrush>.DisposeMarshalerArray(array);
        public static void DisposeAbi(IntPtr abi) => MarshalInspectable<object>.DisposeAbi(abi);
        public static unsafe void DisposeAbiArray(object box) => MarshalInspectable<object>.DisposeAbiArray(box);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    internal sealed class CompositionSurfaceBrushRcwFactoryAttribute : global::WinRT.WinRTImplementationTypeRcwFactoryAttribute
    {
        public override object CreateInstance(global::WinRT.IInspectable inspectable)
            => new global::Microsoft.UI.Composition.CompositionSurfaceBrush(inspectable.ObjRef);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    public struct CompositionTransform
    {

        public static IObjectReference CreateMarshaler(global::Microsoft.UI.Composition.CompositionTransform obj) => obj is null ? null : MarshalInspectable<global::Microsoft.UI.Composition.CompositionTransform>.CreateMarshaler<IUnknownVftbl>(obj, global::ABI.Microsoft.UI.Composition.ICompositionTransformMethods.IID);
        public static ObjectReferenceValue CreateMarshaler2(global::Microsoft.UI.Composition.CompositionTransform obj) => MarshalInspectable<object>.CreateMarshaler2(obj, global::ABI.Microsoft.UI.Composition.ICompositionTransformMethods.IID);
        public static IntPtr GetAbi(IObjectReference value) => value is null ? IntPtr.Zero : MarshalInterfaceHelper<object>.GetAbi(value);
        public static global::Microsoft.UI.Composition.CompositionTransform FromAbi(IntPtr thisPtr) => global::Microsoft.UI.Composition.CompositionTransform.FromAbi(thisPtr);
        public static IntPtr FromManaged(global::Microsoft.UI.Composition.CompositionTransform obj) => obj is null ? IntPtr.Zero : CreateMarshaler2(obj).Detach();
        public static unsafe MarshalInterfaceHelper<global::Microsoft.UI.Composition.CompositionTransform>.MarshalerArray CreateMarshalerArray(global::Microsoft.UI.Composition.CompositionTransform[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.CompositionTransform>.CreateMarshalerArray2(array, (o) => CreateMarshaler2(o));
        public static (int length, IntPtr data) GetAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.CompositionTransform>.GetAbiArray(box);
        public static unsafe global::Microsoft.UI.Composition.CompositionTransform[] FromAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.CompositionTransform>.FromAbiArray(box, FromAbi);
        public static void CopyAbiArray(global::Microsoft.UI.Composition.CompositionTransform[] array, object box) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.CompositionTransform>.CopyAbiArray(array, box, FromAbi);
        public static (int length, IntPtr data) FromManagedArray(global::Microsoft.UI.Composition.CompositionTransform[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.CompositionTransform>.FromManagedArray(array, (o) => FromManaged(o));
        public static void DisposeMarshaler(IObjectReference value) => MarshalInspectable<object>.DisposeMarshaler(value);
        public static void DisposeMarshalerArray(MarshalInterfaceHelper<global::Microsoft.UI.Composition.CompositionTransform>.MarshalerArray array) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.CompositionTransform>.DisposeMarshalerArray(array);
        public static void DisposeAbi(IntPtr abi) => MarshalInspectable<object>.DisposeAbi(abi);
        public static unsafe void DisposeAbiArray(object box) => MarshalInspectable<object>.DisposeAbiArray(box);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    internal sealed class CompositionTransformRcwFactoryAttribute : global::WinRT.WinRTImplementationTypeRcwFactoryAttribute
    {
        public override object CreateInstance(global::WinRT.IInspectable inspectable)
            => new global::Microsoft.UI.Composition.CompositionTransform(inspectable.ObjRef);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    public struct CompositionViewBox
    {

        public static IObjectReference CreateMarshaler(global::Microsoft.UI.Composition.CompositionViewBox obj) => obj is null ? null : MarshalInspectable<global::Microsoft.UI.Composition.CompositionViewBox>.CreateMarshaler<IUnknownVftbl>(obj, global::ABI.Microsoft.UI.Composition.ICompositionViewBoxMethods.IID);
        public static ObjectReferenceValue CreateMarshaler2(global::Microsoft.UI.Composition.CompositionViewBox obj) => MarshalInspectable<object>.CreateMarshaler2(obj, global::ABI.Microsoft.UI.Composition.ICompositionViewBoxMethods.IID);
        public static IntPtr GetAbi(IObjectReference value) => value is null ? IntPtr.Zero : MarshalInterfaceHelper<object>.GetAbi(value);
        public static global::Microsoft.UI.Composition.CompositionViewBox FromAbi(IntPtr thisPtr) => global::Microsoft.UI.Composition.CompositionViewBox.FromAbi(thisPtr);
        public static IntPtr FromManaged(global::Microsoft.UI.Composition.CompositionViewBox obj) => obj is null ? IntPtr.Zero : CreateMarshaler2(obj).Detach();
        public static unsafe MarshalInterfaceHelper<global::Microsoft.UI.Composition.CompositionViewBox>.MarshalerArray CreateMarshalerArray(global::Microsoft.UI.Composition.CompositionViewBox[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.CompositionViewBox>.CreateMarshalerArray2(array, (o) => CreateMarshaler2(o));
        public static (int length, IntPtr data) GetAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.CompositionViewBox>.GetAbiArray(box);
        public static unsafe global::Microsoft.UI.Composition.CompositionViewBox[] FromAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.CompositionViewBox>.FromAbiArray(box, FromAbi);
        public static void CopyAbiArray(global::Microsoft.UI.Composition.CompositionViewBox[] array, object box) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.CompositionViewBox>.CopyAbiArray(array, box, FromAbi);
        public static (int length, IntPtr data) FromManagedArray(global::Microsoft.UI.Composition.CompositionViewBox[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.CompositionViewBox>.FromManagedArray(array, (o) => FromManaged(o));
        public static void DisposeMarshaler(IObjectReference value) => MarshalInspectable<object>.DisposeMarshaler(value);
        public static void DisposeMarshalerArray(MarshalInterfaceHelper<global::Microsoft.UI.Composition.CompositionViewBox>.MarshalerArray array) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.CompositionViewBox>.DisposeMarshalerArray(array);
        public static void DisposeAbi(IntPtr abi) => MarshalInspectable<object>.DisposeAbi(abi);
        public static unsafe void DisposeAbiArray(object box) => MarshalInspectable<object>.DisposeAbiArray(box);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    internal sealed class CompositionViewBoxRcwFactoryAttribute : global::WinRT.WinRTImplementationTypeRcwFactoryAttribute
    {
        public override object CreateInstance(global::WinRT.IInspectable inspectable)
            => new global::Microsoft.UI.Composition.CompositionViewBox(inspectable.ObjRef);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    public struct CompositionVirtualDrawingSurface
    {

        public static IObjectReference CreateMarshaler(global::Microsoft.UI.Composition.CompositionVirtualDrawingSurface obj) => obj is null ? null : MarshalInspectable<global::Microsoft.UI.Composition.CompositionVirtualDrawingSurface>.CreateMarshaler<IUnknownVftbl>(obj, global::ABI.Microsoft.UI.Composition.ICompositionVirtualDrawingSurfaceMethods.IID);
        public static ObjectReferenceValue CreateMarshaler2(global::Microsoft.UI.Composition.CompositionVirtualDrawingSurface obj) => MarshalInspectable<object>.CreateMarshaler2(obj, global::ABI.Microsoft.UI.Composition.ICompositionVirtualDrawingSurfaceMethods.IID);
        public static IntPtr GetAbi(IObjectReference value) => value is null ? IntPtr.Zero : MarshalInterfaceHelper<object>.GetAbi(value);
        public static global::Microsoft.UI.Composition.CompositionVirtualDrawingSurface FromAbi(IntPtr thisPtr) => global::Microsoft.UI.Composition.CompositionVirtualDrawingSurface.FromAbi(thisPtr);
        public static IntPtr FromManaged(global::Microsoft.UI.Composition.CompositionVirtualDrawingSurface obj) => obj is null ? IntPtr.Zero : CreateMarshaler2(obj).Detach();
        public static unsafe MarshalInterfaceHelper<global::Microsoft.UI.Composition.CompositionVirtualDrawingSurface>.MarshalerArray CreateMarshalerArray(global::Microsoft.UI.Composition.CompositionVirtualDrawingSurface[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.CompositionVirtualDrawingSurface>.CreateMarshalerArray2(array, (o) => CreateMarshaler2(o));
        public static (int length, IntPtr data) GetAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.CompositionVirtualDrawingSurface>.GetAbiArray(box);
        public static unsafe global::Microsoft.UI.Composition.CompositionVirtualDrawingSurface[] FromAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.CompositionVirtualDrawingSurface>.FromAbiArray(box, FromAbi);
        public static void CopyAbiArray(global::Microsoft.UI.Composition.CompositionVirtualDrawingSurface[] array, object box) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.CompositionVirtualDrawingSurface>.CopyAbiArray(array, box, FromAbi);
        public static (int length, IntPtr data) FromManagedArray(global::Microsoft.UI.Composition.CompositionVirtualDrawingSurface[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.CompositionVirtualDrawingSurface>.FromManagedArray(array, (o) => FromManaged(o));
        public static void DisposeMarshaler(IObjectReference value) => MarshalInspectable<object>.DisposeMarshaler(value);
        public static void DisposeMarshalerArray(MarshalInterfaceHelper<global::Microsoft.UI.Composition.CompositionVirtualDrawingSurface>.MarshalerArray array) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.CompositionVirtualDrawingSurface>.DisposeMarshalerArray(array);
        public static void DisposeAbi(IntPtr abi) => MarshalInspectable<object>.DisposeAbi(abi);
        public static unsafe void DisposeAbiArray(object box) => MarshalInspectable<object>.DisposeAbiArray(box);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    internal sealed class CompositionVirtualDrawingSurfaceRcwFactoryAttribute : global::WinRT.WinRTImplementationTypeRcwFactoryAttribute
    {
        public override object CreateInstance(global::WinRT.IInspectable inspectable)
            => new global::Microsoft.UI.Composition.CompositionVirtualDrawingSurface(inspectable.ObjRef);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    public struct CompositionVisualSurface
    {

        public static IObjectReference CreateMarshaler(global::Microsoft.UI.Composition.CompositionVisualSurface obj) => obj is null ? null : MarshalInspectable<global::Microsoft.UI.Composition.CompositionVisualSurface>.CreateMarshaler<IUnknownVftbl>(obj, global::ABI.Microsoft.UI.Composition.ICompositionVisualSurfaceMethods.IID);
        public static ObjectReferenceValue CreateMarshaler2(global::Microsoft.UI.Composition.CompositionVisualSurface obj) => MarshalInspectable<object>.CreateMarshaler2(obj, global::ABI.Microsoft.UI.Composition.ICompositionVisualSurfaceMethods.IID);
        public static IntPtr GetAbi(IObjectReference value) => value is null ? IntPtr.Zero : MarshalInterfaceHelper<object>.GetAbi(value);
        public static global::Microsoft.UI.Composition.CompositionVisualSurface FromAbi(IntPtr thisPtr) => global::Microsoft.UI.Composition.CompositionVisualSurface.FromAbi(thisPtr);
        public static IntPtr FromManaged(global::Microsoft.UI.Composition.CompositionVisualSurface obj) => obj is null ? IntPtr.Zero : CreateMarshaler2(obj).Detach();
        public static unsafe MarshalInterfaceHelper<global::Microsoft.UI.Composition.CompositionVisualSurface>.MarshalerArray CreateMarshalerArray(global::Microsoft.UI.Composition.CompositionVisualSurface[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.CompositionVisualSurface>.CreateMarshalerArray2(array, (o) => CreateMarshaler2(o));
        public static (int length, IntPtr data) GetAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.CompositionVisualSurface>.GetAbiArray(box);
        public static unsafe global::Microsoft.UI.Composition.CompositionVisualSurface[] FromAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.CompositionVisualSurface>.FromAbiArray(box, FromAbi);
        public static void CopyAbiArray(global::Microsoft.UI.Composition.CompositionVisualSurface[] array, object box) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.CompositionVisualSurface>.CopyAbiArray(array, box, FromAbi);
        public static (int length, IntPtr data) FromManagedArray(global::Microsoft.UI.Composition.CompositionVisualSurface[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.CompositionVisualSurface>.FromManagedArray(array, (o) => FromManaged(o));
        public static void DisposeMarshaler(IObjectReference value) => MarshalInspectable<object>.DisposeMarshaler(value);
        public static void DisposeMarshalerArray(MarshalInterfaceHelper<global::Microsoft.UI.Composition.CompositionVisualSurface>.MarshalerArray array) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.CompositionVisualSurface>.DisposeMarshalerArray(array);
        public static void DisposeAbi(IntPtr abi) => MarshalInspectable<object>.DisposeAbi(abi);
        public static unsafe void DisposeAbiArray(object box) => MarshalInspectable<object>.DisposeAbiArray(box);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    internal sealed class CompositionVisualSurfaceRcwFactoryAttribute : global::WinRT.WinRTImplementationTypeRcwFactoryAttribute
    {
        public override object CreateInstance(global::WinRT.IInspectable inspectable)
            => new global::Microsoft.UI.Composition.CompositionVisualSurface(inspectable.ObjRef);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    public struct Compositor
    {

        public static IObjectReference CreateMarshaler(global::Microsoft.UI.Composition.Compositor obj) => obj is null ? null : MarshalInspectable<global::Microsoft.UI.Composition.Compositor>.CreateMarshaler<IUnknownVftbl>(obj, global::ABI.Microsoft.UI.Composition.ICompositorMethods.IID);
        public static ObjectReferenceValue CreateMarshaler2(global::Microsoft.UI.Composition.Compositor obj) => MarshalInspectable<object>.CreateMarshaler2(obj, global::ABI.Microsoft.UI.Composition.ICompositorMethods.IID);
        public static IntPtr GetAbi(IObjectReference value) => value is null ? IntPtr.Zero : MarshalInterfaceHelper<object>.GetAbi(value);
        public static global::Microsoft.UI.Composition.Compositor FromAbi(IntPtr thisPtr) => global::Microsoft.UI.Composition.Compositor.FromAbi(thisPtr);
        public static IntPtr FromManaged(global::Microsoft.UI.Composition.Compositor obj) => obj is null ? IntPtr.Zero : CreateMarshaler2(obj).Detach();
        public static unsafe MarshalInterfaceHelper<global::Microsoft.UI.Composition.Compositor>.MarshalerArray CreateMarshalerArray(global::Microsoft.UI.Composition.Compositor[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.Compositor>.CreateMarshalerArray2(array, (o) => CreateMarshaler2(o));
        public static (int length, IntPtr data) GetAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.Compositor>.GetAbiArray(box);
        public static unsafe global::Microsoft.UI.Composition.Compositor[] FromAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.Compositor>.FromAbiArray(box, FromAbi);
        public static void CopyAbiArray(global::Microsoft.UI.Composition.Compositor[] array, object box) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.Compositor>.CopyAbiArray(array, box, FromAbi);
        public static (int length, IntPtr data) FromManagedArray(global::Microsoft.UI.Composition.Compositor[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.Compositor>.FromManagedArray(array, (o) => FromManaged(o));
        public static void DisposeMarshaler(IObjectReference value) => MarshalInspectable<object>.DisposeMarshaler(value);
        public static void DisposeMarshalerArray(MarshalInterfaceHelper<global::Microsoft.UI.Composition.Compositor>.MarshalerArray array) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.Compositor>.DisposeMarshalerArray(array);
        public static void DisposeAbi(IntPtr abi) => MarshalInspectable<object>.DisposeAbi(abi);
        public static unsafe void DisposeAbiArray(object box) => MarshalInspectable<object>.DisposeAbiArray(box);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    internal sealed class CompositorRcwFactoryAttribute : global::WinRT.WinRTImplementationTypeRcwFactoryAttribute
    {
        public override object CreateInstance(global::WinRT.IInspectable inspectable)
            => new global::Microsoft.UI.Composition.Compositor(inspectable.ObjRef);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    public struct ContainerVisual
    {

        public static IObjectReference CreateMarshaler(global::Microsoft.UI.Composition.ContainerVisual obj) => obj is null ? null : MarshalInspectable<global::Microsoft.UI.Composition.ContainerVisual>.CreateMarshaler<IUnknownVftbl>(obj, global::ABI.Microsoft.UI.Composition.IContainerVisualMethods.IID);
        public static ObjectReferenceValue CreateMarshaler2(global::Microsoft.UI.Composition.ContainerVisual obj) => MarshalInspectable<object>.CreateMarshaler2(obj, global::ABI.Microsoft.UI.Composition.IContainerVisualMethods.IID);
        public static IntPtr GetAbi(IObjectReference value) => value is null ? IntPtr.Zero : MarshalInterfaceHelper<object>.GetAbi(value);
        public static global::Microsoft.UI.Composition.ContainerVisual FromAbi(IntPtr thisPtr) => global::Microsoft.UI.Composition.ContainerVisual.FromAbi(thisPtr);
        public static IntPtr FromManaged(global::Microsoft.UI.Composition.ContainerVisual obj) => obj is null ? IntPtr.Zero : CreateMarshaler2(obj).Detach();
        public static unsafe MarshalInterfaceHelper<global::Microsoft.UI.Composition.ContainerVisual>.MarshalerArray CreateMarshalerArray(global::Microsoft.UI.Composition.ContainerVisual[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.ContainerVisual>.CreateMarshalerArray2(array, (o) => CreateMarshaler2(o));
        public static (int length, IntPtr data) GetAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.ContainerVisual>.GetAbiArray(box);
        public static unsafe global::Microsoft.UI.Composition.ContainerVisual[] FromAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.ContainerVisual>.FromAbiArray(box, FromAbi);
        public static void CopyAbiArray(global::Microsoft.UI.Composition.ContainerVisual[] array, object box) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.ContainerVisual>.CopyAbiArray(array, box, FromAbi);
        public static (int length, IntPtr data) FromManagedArray(global::Microsoft.UI.Composition.ContainerVisual[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.ContainerVisual>.FromManagedArray(array, (o) => FromManaged(o));
        public static void DisposeMarshaler(IObjectReference value) => MarshalInspectable<object>.DisposeMarshaler(value);
        public static void DisposeMarshalerArray(MarshalInterfaceHelper<global::Microsoft.UI.Composition.ContainerVisual>.MarshalerArray array) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.ContainerVisual>.DisposeMarshalerArray(array);
        public static void DisposeAbi(IntPtr abi) => MarshalInspectable<object>.DisposeAbi(abi);
        public static unsafe void DisposeAbiArray(object box) => MarshalInspectable<object>.DisposeAbiArray(box);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    internal sealed class ContainerVisualRcwFactoryAttribute : global::WinRT.WinRTImplementationTypeRcwFactoryAttribute
    {
        public override object CreateInstance(global::WinRT.IInspectable inspectable)
            => new global::Microsoft.UI.Composition.ContainerVisual(inspectable.ObjRef);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    public struct CubicBezierEasingFunction
    {

        public static IObjectReference CreateMarshaler(global::Microsoft.UI.Composition.CubicBezierEasingFunction obj) => obj is null ? null : MarshalInspectable<global::Microsoft.UI.Composition.CubicBezierEasingFunction>.CreateMarshaler<IUnknownVftbl>(obj, global::ABI.Microsoft.UI.Composition.ICubicBezierEasingFunctionMethods.IID);
        public static ObjectReferenceValue CreateMarshaler2(global::Microsoft.UI.Composition.CubicBezierEasingFunction obj) => MarshalInspectable<object>.CreateMarshaler2(obj, global::ABI.Microsoft.UI.Composition.ICubicBezierEasingFunctionMethods.IID);
        public static IntPtr GetAbi(IObjectReference value) => value is null ? IntPtr.Zero : MarshalInterfaceHelper<object>.GetAbi(value);
        public static global::Microsoft.UI.Composition.CubicBezierEasingFunction FromAbi(IntPtr thisPtr) => global::Microsoft.UI.Composition.CubicBezierEasingFunction.FromAbi(thisPtr);
        public static IntPtr FromManaged(global::Microsoft.UI.Composition.CubicBezierEasingFunction obj) => obj is null ? IntPtr.Zero : CreateMarshaler2(obj).Detach();
        public static unsafe MarshalInterfaceHelper<global::Microsoft.UI.Composition.CubicBezierEasingFunction>.MarshalerArray CreateMarshalerArray(global::Microsoft.UI.Composition.CubicBezierEasingFunction[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.CubicBezierEasingFunction>.CreateMarshalerArray2(array, (o) => CreateMarshaler2(o));
        public static (int length, IntPtr data) GetAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.CubicBezierEasingFunction>.GetAbiArray(box);
        public static unsafe global::Microsoft.UI.Composition.CubicBezierEasingFunction[] FromAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.CubicBezierEasingFunction>.FromAbiArray(box, FromAbi);
        public static void CopyAbiArray(global::Microsoft.UI.Composition.CubicBezierEasingFunction[] array, object box) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.CubicBezierEasingFunction>.CopyAbiArray(array, box, FromAbi);
        public static (int length, IntPtr data) FromManagedArray(global::Microsoft.UI.Composition.CubicBezierEasingFunction[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.CubicBezierEasingFunction>.FromManagedArray(array, (o) => FromManaged(o));
        public static void DisposeMarshaler(IObjectReference value) => MarshalInspectable<object>.DisposeMarshaler(value);
        public static void DisposeMarshalerArray(MarshalInterfaceHelper<global::Microsoft.UI.Composition.CubicBezierEasingFunction>.MarshalerArray array) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.CubicBezierEasingFunction>.DisposeMarshalerArray(array);
        public static void DisposeAbi(IntPtr abi) => MarshalInspectable<object>.DisposeAbi(abi);
        public static unsafe void DisposeAbiArray(object box) => MarshalInspectable<object>.DisposeAbiArray(box);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    internal sealed class CubicBezierEasingFunctionRcwFactoryAttribute : global::WinRT.WinRTImplementationTypeRcwFactoryAttribute
    {
        public override object CreateInstance(global::WinRT.IInspectable inspectable)
            => new global::Microsoft.UI.Composition.CubicBezierEasingFunction(inspectable.ObjRef);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    public struct DistantLight
    {

        public static IObjectReference CreateMarshaler(global::Microsoft.UI.Composition.DistantLight obj) => obj is null ? null : MarshalInspectable<global::Microsoft.UI.Composition.DistantLight>.CreateMarshaler<IUnknownVftbl>(obj, global::ABI.Microsoft.UI.Composition.IDistantLightMethods.IID);
        public static ObjectReferenceValue CreateMarshaler2(global::Microsoft.UI.Composition.DistantLight obj) => MarshalInspectable<object>.CreateMarshaler2(obj, global::ABI.Microsoft.UI.Composition.IDistantLightMethods.IID);
        public static IntPtr GetAbi(IObjectReference value) => value is null ? IntPtr.Zero : MarshalInterfaceHelper<object>.GetAbi(value);
        public static global::Microsoft.UI.Composition.DistantLight FromAbi(IntPtr thisPtr) => global::Microsoft.UI.Composition.DistantLight.FromAbi(thisPtr);
        public static IntPtr FromManaged(global::Microsoft.UI.Composition.DistantLight obj) => obj is null ? IntPtr.Zero : CreateMarshaler2(obj).Detach();
        public static unsafe MarshalInterfaceHelper<global::Microsoft.UI.Composition.DistantLight>.MarshalerArray CreateMarshalerArray(global::Microsoft.UI.Composition.DistantLight[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.DistantLight>.CreateMarshalerArray2(array, (o) => CreateMarshaler2(o));
        public static (int length, IntPtr data) GetAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.DistantLight>.GetAbiArray(box);
        public static unsafe global::Microsoft.UI.Composition.DistantLight[] FromAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.DistantLight>.FromAbiArray(box, FromAbi);
        public static void CopyAbiArray(global::Microsoft.UI.Composition.DistantLight[] array, object box) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.DistantLight>.CopyAbiArray(array, box, FromAbi);
        public static (int length, IntPtr data) FromManagedArray(global::Microsoft.UI.Composition.DistantLight[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.DistantLight>.FromManagedArray(array, (o) => FromManaged(o));
        public static void DisposeMarshaler(IObjectReference value) => MarshalInspectable<object>.DisposeMarshaler(value);
        public static void DisposeMarshalerArray(MarshalInterfaceHelper<global::Microsoft.UI.Composition.DistantLight>.MarshalerArray array) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.DistantLight>.DisposeMarshalerArray(array);
        public static void DisposeAbi(IntPtr abi) => MarshalInspectable<object>.DisposeAbi(abi);
        public static unsafe void DisposeAbiArray(object box) => MarshalInspectable<object>.DisposeAbiArray(box);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    internal sealed class DistantLightRcwFactoryAttribute : global::WinRT.WinRTImplementationTypeRcwFactoryAttribute
    {
        public override object CreateInstance(global::WinRT.IInspectable inspectable)
            => new global::Microsoft.UI.Composition.DistantLight(inspectable.ObjRef);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    public struct DropShadow
    {

        public static IObjectReference CreateMarshaler(global::Microsoft.UI.Composition.DropShadow obj) => obj is null ? null : MarshalInspectable<global::Microsoft.UI.Composition.DropShadow>.CreateMarshaler<IUnknownVftbl>(obj, global::ABI.Microsoft.UI.Composition.IDropShadowMethods.IID);
        public static ObjectReferenceValue CreateMarshaler2(global::Microsoft.UI.Composition.DropShadow obj) => MarshalInspectable<object>.CreateMarshaler2(obj, global::ABI.Microsoft.UI.Composition.IDropShadowMethods.IID);
        public static IntPtr GetAbi(IObjectReference value) => value is null ? IntPtr.Zero : MarshalInterfaceHelper<object>.GetAbi(value);
        public static global::Microsoft.UI.Composition.DropShadow FromAbi(IntPtr thisPtr) => global::Microsoft.UI.Composition.DropShadow.FromAbi(thisPtr);
        public static IntPtr FromManaged(global::Microsoft.UI.Composition.DropShadow obj) => obj is null ? IntPtr.Zero : CreateMarshaler2(obj).Detach();
        public static unsafe MarshalInterfaceHelper<global::Microsoft.UI.Composition.DropShadow>.MarshalerArray CreateMarshalerArray(global::Microsoft.UI.Composition.DropShadow[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.DropShadow>.CreateMarshalerArray2(array, (o) => CreateMarshaler2(o));
        public static (int length, IntPtr data) GetAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.DropShadow>.GetAbiArray(box);
        public static unsafe global::Microsoft.UI.Composition.DropShadow[] FromAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.DropShadow>.FromAbiArray(box, FromAbi);
        public static void CopyAbiArray(global::Microsoft.UI.Composition.DropShadow[] array, object box) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.DropShadow>.CopyAbiArray(array, box, FromAbi);
        public static (int length, IntPtr data) FromManagedArray(global::Microsoft.UI.Composition.DropShadow[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.DropShadow>.FromManagedArray(array, (o) => FromManaged(o));
        public static void DisposeMarshaler(IObjectReference value) => MarshalInspectable<object>.DisposeMarshaler(value);
        public static void DisposeMarshalerArray(MarshalInterfaceHelper<global::Microsoft.UI.Composition.DropShadow>.MarshalerArray array) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.DropShadow>.DisposeMarshalerArray(array);
        public static void DisposeAbi(IntPtr abi) => MarshalInspectable<object>.DisposeAbi(abi);
        public static unsafe void DisposeAbiArray(object box) => MarshalInspectable<object>.DisposeAbiArray(box);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    internal sealed class DropShadowRcwFactoryAttribute : global::WinRT.WinRTImplementationTypeRcwFactoryAttribute
    {
        public override object CreateInstance(global::WinRT.IInspectable inspectable)
            => new global::Microsoft.UI.Composition.DropShadow(inspectable.ObjRef);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    public struct ElasticEasingFunction
    {

        public static IObjectReference CreateMarshaler(global::Microsoft.UI.Composition.ElasticEasingFunction obj) => obj is null ? null : MarshalInspectable<global::Microsoft.UI.Composition.ElasticEasingFunction>.CreateMarshaler<IUnknownVftbl>(obj, global::ABI.Microsoft.UI.Composition.IElasticEasingFunctionMethods.IID);
        public static ObjectReferenceValue CreateMarshaler2(global::Microsoft.UI.Composition.ElasticEasingFunction obj) => MarshalInspectable<object>.CreateMarshaler2(obj, global::ABI.Microsoft.UI.Composition.IElasticEasingFunctionMethods.IID);
        public static IntPtr GetAbi(IObjectReference value) => value is null ? IntPtr.Zero : MarshalInterfaceHelper<object>.GetAbi(value);
        public static global::Microsoft.UI.Composition.ElasticEasingFunction FromAbi(IntPtr thisPtr) => global::Microsoft.UI.Composition.ElasticEasingFunction.FromAbi(thisPtr);
        public static IntPtr FromManaged(global::Microsoft.UI.Composition.ElasticEasingFunction obj) => obj is null ? IntPtr.Zero : CreateMarshaler2(obj).Detach();
        public static unsafe MarshalInterfaceHelper<global::Microsoft.UI.Composition.ElasticEasingFunction>.MarshalerArray CreateMarshalerArray(global::Microsoft.UI.Composition.ElasticEasingFunction[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.ElasticEasingFunction>.CreateMarshalerArray2(array, (o) => CreateMarshaler2(o));
        public static (int length, IntPtr data) GetAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.ElasticEasingFunction>.GetAbiArray(box);
        public static unsafe global::Microsoft.UI.Composition.ElasticEasingFunction[] FromAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.ElasticEasingFunction>.FromAbiArray(box, FromAbi);
        public static void CopyAbiArray(global::Microsoft.UI.Composition.ElasticEasingFunction[] array, object box) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.ElasticEasingFunction>.CopyAbiArray(array, box, FromAbi);
        public static (int length, IntPtr data) FromManagedArray(global::Microsoft.UI.Composition.ElasticEasingFunction[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.ElasticEasingFunction>.FromManagedArray(array, (o) => FromManaged(o));
        public static void DisposeMarshaler(IObjectReference value) => MarshalInspectable<object>.DisposeMarshaler(value);
        public static void DisposeMarshalerArray(MarshalInterfaceHelper<global::Microsoft.UI.Composition.ElasticEasingFunction>.MarshalerArray array) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.ElasticEasingFunction>.DisposeMarshalerArray(array);
        public static void DisposeAbi(IntPtr abi) => MarshalInspectable<object>.DisposeAbi(abi);
        public static unsafe void DisposeAbiArray(object box) => MarshalInspectable<object>.DisposeAbiArray(box);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    internal sealed class ElasticEasingFunctionRcwFactoryAttribute : global::WinRT.WinRTImplementationTypeRcwFactoryAttribute
    {
        public override object CreateInstance(global::WinRT.IInspectable inspectable)
            => new global::Microsoft.UI.Composition.ElasticEasingFunction(inspectable.ObjRef);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    public struct ExponentialEasingFunction
    {

        public static IObjectReference CreateMarshaler(global::Microsoft.UI.Composition.ExponentialEasingFunction obj) => obj is null ? null : MarshalInspectable<global::Microsoft.UI.Composition.ExponentialEasingFunction>.CreateMarshaler<IUnknownVftbl>(obj, global::ABI.Microsoft.UI.Composition.IExponentialEasingFunctionMethods.IID);
        public static ObjectReferenceValue CreateMarshaler2(global::Microsoft.UI.Composition.ExponentialEasingFunction obj) => MarshalInspectable<object>.CreateMarshaler2(obj, global::ABI.Microsoft.UI.Composition.IExponentialEasingFunctionMethods.IID);
        public static IntPtr GetAbi(IObjectReference value) => value is null ? IntPtr.Zero : MarshalInterfaceHelper<object>.GetAbi(value);
        public static global::Microsoft.UI.Composition.ExponentialEasingFunction FromAbi(IntPtr thisPtr) => global::Microsoft.UI.Composition.ExponentialEasingFunction.FromAbi(thisPtr);
        public static IntPtr FromManaged(global::Microsoft.UI.Composition.ExponentialEasingFunction obj) => obj is null ? IntPtr.Zero : CreateMarshaler2(obj).Detach();
        public static unsafe MarshalInterfaceHelper<global::Microsoft.UI.Composition.ExponentialEasingFunction>.MarshalerArray CreateMarshalerArray(global::Microsoft.UI.Composition.ExponentialEasingFunction[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.ExponentialEasingFunction>.CreateMarshalerArray2(array, (o) => CreateMarshaler2(o));
        public static (int length, IntPtr data) GetAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.ExponentialEasingFunction>.GetAbiArray(box);
        public static unsafe global::Microsoft.UI.Composition.ExponentialEasingFunction[] FromAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.ExponentialEasingFunction>.FromAbiArray(box, FromAbi);
        public static void CopyAbiArray(global::Microsoft.UI.Composition.ExponentialEasingFunction[] array, object box) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.ExponentialEasingFunction>.CopyAbiArray(array, box, FromAbi);
        public static (int length, IntPtr data) FromManagedArray(global::Microsoft.UI.Composition.ExponentialEasingFunction[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.ExponentialEasingFunction>.FromManagedArray(array, (o) => FromManaged(o));
        public static void DisposeMarshaler(IObjectReference value) => MarshalInspectable<object>.DisposeMarshaler(value);
        public static void DisposeMarshalerArray(MarshalInterfaceHelper<global::Microsoft.UI.Composition.ExponentialEasingFunction>.MarshalerArray array) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.ExponentialEasingFunction>.DisposeMarshalerArray(array);
        public static void DisposeAbi(IntPtr abi) => MarshalInspectable<object>.DisposeAbi(abi);
        public static unsafe void DisposeAbiArray(object box) => MarshalInspectable<object>.DisposeAbiArray(box);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    internal sealed class ExponentialEasingFunctionRcwFactoryAttribute : global::WinRT.WinRTImplementationTypeRcwFactoryAttribute
    {
        public override object CreateInstance(global::WinRT.IInspectable inspectable)
            => new global::Microsoft.UI.Composition.ExponentialEasingFunction(inspectable.ObjRef);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    public struct ExpressionAnimation
    {

        public static IObjectReference CreateMarshaler(global::Microsoft.UI.Composition.ExpressionAnimation obj) => obj is null ? null : MarshalInspectable<global::Microsoft.UI.Composition.ExpressionAnimation>.CreateMarshaler<IUnknownVftbl>(obj, global::ABI.Microsoft.UI.Composition.IExpressionAnimationMethods.IID);
        public static ObjectReferenceValue CreateMarshaler2(global::Microsoft.UI.Composition.ExpressionAnimation obj) => MarshalInspectable<object>.CreateMarshaler2(obj, global::ABI.Microsoft.UI.Composition.IExpressionAnimationMethods.IID);
        public static IntPtr GetAbi(IObjectReference value) => value is null ? IntPtr.Zero : MarshalInterfaceHelper<object>.GetAbi(value);
        public static global::Microsoft.UI.Composition.ExpressionAnimation FromAbi(IntPtr thisPtr) => global::Microsoft.UI.Composition.ExpressionAnimation.FromAbi(thisPtr);
        public static IntPtr FromManaged(global::Microsoft.UI.Composition.ExpressionAnimation obj) => obj is null ? IntPtr.Zero : CreateMarshaler2(obj).Detach();
        public static unsafe MarshalInterfaceHelper<global::Microsoft.UI.Composition.ExpressionAnimation>.MarshalerArray CreateMarshalerArray(global::Microsoft.UI.Composition.ExpressionAnimation[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.ExpressionAnimation>.CreateMarshalerArray2(array, (o) => CreateMarshaler2(o));
        public static (int length, IntPtr data) GetAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.ExpressionAnimation>.GetAbiArray(box);
        public static unsafe global::Microsoft.UI.Composition.ExpressionAnimation[] FromAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.ExpressionAnimation>.FromAbiArray(box, FromAbi);
        public static void CopyAbiArray(global::Microsoft.UI.Composition.ExpressionAnimation[] array, object box) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.ExpressionAnimation>.CopyAbiArray(array, box, FromAbi);
        public static (int length, IntPtr data) FromManagedArray(global::Microsoft.UI.Composition.ExpressionAnimation[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.ExpressionAnimation>.FromManagedArray(array, (o) => FromManaged(o));
        public static void DisposeMarshaler(IObjectReference value) => MarshalInspectable<object>.DisposeMarshaler(value);
        public static void DisposeMarshalerArray(MarshalInterfaceHelper<global::Microsoft.UI.Composition.ExpressionAnimation>.MarshalerArray array) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.ExpressionAnimation>.DisposeMarshalerArray(array);
        public static void DisposeAbi(IntPtr abi) => MarshalInspectable<object>.DisposeAbi(abi);
        public static unsafe void DisposeAbiArray(object box) => MarshalInspectable<object>.DisposeAbiArray(box);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    internal sealed class ExpressionAnimationRcwFactoryAttribute : global::WinRT.WinRTImplementationTypeRcwFactoryAttribute
    {
        public override object CreateInstance(global::WinRT.IInspectable inspectable)
            => new global::Microsoft.UI.Composition.ExpressionAnimation(inspectable.ObjRef);
    }
    internal static class IAmbientLightMethods
    {

        internal static unsafe global::Windows.UI.Color get_Color(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::Windows.UI.Color __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::Windows.UI.Color*, int>**)ThisPtr)[6](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }
        internal static unsafe void set_Color(IObjectReference _obj, global::Windows.UI.Color value)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::Windows.UI.Color, int>**)ThisPtr)[7](ThisPtr, value));
            global::System.GC.KeepAlive(_obj);
        }



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0x5E, 0x52, 0x40, 0x45, 0xD, 0xB7, 0x14, 0x5A, 0xBB, 0xFA, 0x63, 0xBE, 0xF4, 0x23, 0x13, 0xC7 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("4540525E-B70D-5A14-BBFA-63BEF42313C7")]
    internal interface IAmbientLight : global::Microsoft.UI.Composition.IAmbientLight
    {
    }
    internal static class IAmbientLight2Methods
    {

        internal static unsafe float get_Intensity(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            float __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, float*, int>**)ThisPtr)[6](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }
        internal static unsafe void set_Intensity(IObjectReference _obj, float value)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, float, int>**)ThisPtr)[7](ThisPtr, value));
            global::System.GC.KeepAlive(_obj);
        }



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0x63, 0xF9, 0x56, 0x33, 0xC, 0x4, 0xD4, 0x54, 0x9D, 0xFC, 0xB6, 0x1C, 0x51, 0xAA, 0xAD, 0xD1 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("3356F963-040C-54D4-9DFC-B61C51AAADD1")]
    internal interface IAmbientLight2 : global::Microsoft.UI.Composition.IAmbientLight2
    {
    }
    internal static class IAnimationControllerMethods
    {


        internal static unsafe void Pause(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, int>**)ThisPtr)[12](ThisPtr));
            global::System.GC.KeepAlive(_obj);
        }

        internal static unsafe void Resume(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, int>**)ThisPtr)[13](ThisPtr));
            global::System.GC.KeepAlive(_obj);
        }
        internal static unsafe float get_PlaybackRate(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            float __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, float*, int>**)ThisPtr)[6](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }
        internal static unsafe void set_PlaybackRate(IObjectReference _obj, float value)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, float, int>**)ThisPtr)[7](ThisPtr, value));
            global::System.GC.KeepAlive(_obj);
        }

        internal static unsafe float get_Progress(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            float __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, float*, int>**)ThisPtr)[8](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }
        internal static unsafe void set_Progress(IObjectReference _obj, float value)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, float, int>**)ThisPtr)[9](ThisPtr, value));
            global::System.GC.KeepAlive(_obj);
        }

        internal static unsafe global::Microsoft.UI.Composition.AnimationControllerProgressBehavior get_ProgressBehavior(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::Microsoft.UI.Composition.AnimationControllerProgressBehavior __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::Microsoft.UI.Composition.AnimationControllerProgressBehavior*, int>**)ThisPtr)[10](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }
        internal static unsafe void set_ProgressBehavior(IObjectReference _obj, global::Microsoft.UI.Composition.AnimationControllerProgressBehavior value)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::Microsoft.UI.Composition.AnimationControllerProgressBehavior, int>**)ThisPtr)[11](ThisPtr, value));
            global::System.GC.KeepAlive(_obj);
        }



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0xA8, 0x88, 0xF, 0xBD, 0x15, 0xA4, 0x22, 0x53, 0x8C, 0x3D, 0x1A, 0x6D, 0x91, 0x92, 0x75, 0x4F };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("BD0F88A8-A415-5322-8C3D-1A6D9192754F")]
    internal interface IAnimationController : global::Microsoft.UI.Composition.IAnimationController
    {
    }
    internal static class IAnimationControllerStaticsMethods
    {

        internal static unsafe float get_MaxPlaybackRate(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            float __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, float*, int>**)ThisPtr)[6](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }

        internal static unsafe float get_MinPlaybackRate(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            float __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, float*, int>**)ThisPtr)[7](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0xB6, 0xF, 0x3B, 0xB6, 0x6B, 0x28, 0xAF, 0x57, 0xB0, 0x96, 0x16, 0x6, 0x6D, 0x43, 0xDC, 0x0 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("B63B0FB6-286B-57AF-B096-16066D43DC00")]
    internal interface IAnimationControllerStatics : global::Microsoft.UI.Composition.IAnimationControllerStatics
    {
    }
    public static class IAnimationObjectMethods
    {


        public static unsafe void PopulatePropertyInfo(IObjectReference _obj, string propertyName, global::Microsoft.UI.Composition.AnimationPropertyInfo propertyInfo)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __propertyInfo = default;
            try
            {
                __propertyInfo = global::ABI.Microsoft.UI.Composition.AnimationPropertyInfo.CreateMarshaler2(propertyInfo);
                MarshalString.Pinnable __propertyName = new(propertyName);
                fixed(void* ___propertyName = __propertyName)
                {
                    global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, IntPtr, int>**)ThisPtr)[6](ThisPtr, MarshalString.GetAbi(ref __propertyName), MarshalInspectable<object>.GetAbi(__propertyInfo)));
                    global::System.GC.KeepAlive(_obj);
                }
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__propertyInfo);
            }
        }


        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0x9D, 0x11, 0x56, 0x8F, 0x6D, 0xB9, 0xD0, 0x58, 0x99, 0x16, 0xD1, 0xC5, 0xE3, 0x90, 0xF8, 0x90 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

        public static global::System.IntPtr AbiToProjectionVftablePtr => IAnimationObject.AbiToProjectionVftablePtr;

    }
    [DynamicInterfaceCastableImplementation]
    [Guid("8F56119D-B96D-58D0-9916-D1C5E390F890")]
    internal unsafe interface IAnimationObject : global::Microsoft.UI.Composition.IAnimationObject
    {

        public static readonly IntPtr AbiToProjectionVftablePtr;
        static unsafe IAnimationObject()
        {
            AbiToProjectionVftablePtr = ComWrappersSupport.AllocateVtableMemory(typeof(IAnimationObject), sizeof(IInspectable.Vftbl) + sizeof(IntPtr) * 1);
            *(IInspectable.Vftbl*)AbiToProjectionVftablePtr = IInspectable.Vftbl.AbiToProjectionVftable;
            ((delegate* unmanaged[Stdcall]<IntPtr, IntPtr, IntPtr, int>*)AbiToProjectionVftablePtr)[6] = &Do_Abi_PopulatePropertyInfo_0;
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvStdcall) })]
        private static unsafe int Do_Abi_PopulatePropertyInfo_0(IntPtr thisPtr, IntPtr propertyName, IntPtr propertyInfo)
        {



            try
            {
                global::WinRT.ComWrappersSupport.FindObject<global::Microsoft.UI.Composition.IAnimationObject>(thisPtr).PopulatePropertyInfo(MarshalString.FromAbi(propertyName), global::ABI.Microsoft.UI.Composition.AnimationPropertyInfo.FromAbi(propertyInfo));

            }
            catch (Exception __exception__)
            {
                global::WinRT.ExceptionHelpers.SetErrorInfo(__exception__);
                return global::WinRT.ExceptionHelpers.GetHRForException(__exception__);
            }
            return 0;
        }

        unsafe void global::Microsoft.UI.Composition.IAnimationObject.PopulatePropertyInfo(string propertyName, global::Microsoft.UI.Composition.AnimationPropertyInfo propertyInfo)
        {
            var _obj = ((IObjectReference)((IWinRTObject)this).GetObjectReferenceForType(typeof(global::Microsoft.UI.Composition.IAnimationObject).TypeHandle));
            global::ABI.Microsoft.UI.Composition.IAnimationObjectMethods.PopulatePropertyInfo(_obj, propertyName, propertyInfo);
        }
    }

    internal static class IAnimationPropertyInfoMethods
    {

        internal static unsafe global::Microsoft.UI.Composition.AnimationPropertyAccessMode get_AccessMode(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::Microsoft.UI.Composition.AnimationPropertyAccessMode __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::Microsoft.UI.Composition.AnimationPropertyAccessMode*, int>**)ThisPtr)[6](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }
        internal static unsafe void set_AccessMode(IObjectReference _obj, global::Microsoft.UI.Composition.AnimationPropertyAccessMode value)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::Microsoft.UI.Composition.AnimationPropertyAccessMode, int>**)ThisPtr)[7](ThisPtr, value));
            global::System.GC.KeepAlive(_obj);
        }



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0x2B, 0x1A, 0x72, 0x3D, 0xCD, 0x9C, 0xBD, 0x57, 0xB6, 0xC2, 0xCE, 0x9E, 0x4, 0xAE, 0x36, 0x6 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("3D721A2B-9CCD-57BD-B6C2-CE9E04AE3606")]
    internal interface IAnimationPropertyInfo : global::Microsoft.UI.Composition.IAnimationPropertyInfo
    {
    }
    internal static class IAnimationPropertyInfo2Methods
    {


        internal static unsafe global::Microsoft.UI.Composition.CompositionObject GetResolvedCompositionObject(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[6](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Composition.CompositionObject.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.UI.Composition.CompositionObject.DisposeAbi(__retval);
            }
        }

        internal static unsafe string GetResolvedCompositionObjectProperty(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[7](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return MarshalString.FromAbi(__retval);
            }
            finally
            {
                MarshalString.DisposeAbi(__retval);
            }
        }


        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0x9, 0xFB, 0x14, 0xED, 0x28, 0xDE, 0xD, 0x54, 0x93, 0x11, 0x80, 0xCF, 0xDC, 0xC9, 0x73, 0x38 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("ED14FB09-DE28-540D-9311-80CFDCC97338")]
    internal interface IAnimationPropertyInfo2 : global::Microsoft.UI.Composition.IAnimationPropertyInfo2
    {
    }
    internal static class IBackEasingFunctionMethods
    {

        internal static unsafe float get_Amplitude(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            float __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, float*, int>**)ThisPtr)[7](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }

        internal static unsafe global::Microsoft.UI.Composition.CompositionEasingFunctionMode get_Mode(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::Microsoft.UI.Composition.CompositionEasingFunctionMode __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::Microsoft.UI.Composition.CompositionEasingFunctionMode*, int>**)ThisPtr)[6](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0xAB, 0x5B, 0xC7, 0x27, 0x7A, 0x31, 0x62, 0x53, 0xBF, 0x25, 0xFF, 0xFB, 0xB9, 0x8A, 0x51, 0xB9 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("27C75BAB-317A-5362-BF25-FFFBB98A51B9")]
    internal interface IBackEasingFunction : global::Microsoft.UI.Composition.IBackEasingFunction
    {
    }
    internal static class IBooleanKeyFrameAnimationMethods
    {


        internal static unsafe void InsertKeyFrame(IObjectReference _obj, float normalizedProgressKey, bool value)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, float, byte, int>**)ThisPtr)[6](ThisPtr, normalizedProgressKey, (byte)(value ? 1 : 0)));
            global::System.GC.KeepAlive(_obj);
        }


        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0xE9, 0x85, 0xE4, 0x7F, 0x74, 0xE8, 0xF3, 0x5F, 0x8D, 0xDC, 0x82, 0x6C, 0x38, 0x18, 0xBF, 0xC3 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("7FE485E9-E874-5FF3-8DDC-826C3818BFC3")]
    internal interface IBooleanKeyFrameAnimation : global::Microsoft.UI.Composition.IBooleanKeyFrameAnimation
    {
    }
    internal static class IBounceEasingFunctionMethods
    {

        internal static unsafe int get_Bounces(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            int __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, int*, int>**)ThisPtr)[7](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }

        internal static unsafe float get_Bounciness(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            float __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, float*, int>**)ThisPtr)[8](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }

        internal static unsafe global::Microsoft.UI.Composition.CompositionEasingFunctionMode get_Mode(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::Microsoft.UI.Composition.CompositionEasingFunctionMode __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::Microsoft.UI.Composition.CompositionEasingFunctionMode*, int>**)ThisPtr)[6](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0xC0, 0xF3, 0x11, 0xFA, 0x7B, 0x69, 0x2F, 0x56, 0xAF, 0x46, 0xC6, 0xAF, 0x66, 0x6B, 0x6E, 0xC4 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("FA11F3C0-697B-562F-AF46-C6AF666B6EC4")]
    internal interface IBounceEasingFunction : global::Microsoft.UI.Composition.IBounceEasingFunction
    {
    }
    internal static class IBounceScalarNaturalMotionAnimationMethods
    {

        internal static unsafe float get_Acceleration(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            float __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, float*, int>**)ThisPtr)[6](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }
        internal static unsafe void set_Acceleration(IObjectReference _obj, float value)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, float, int>**)ThisPtr)[7](ThisPtr, value));
            global::System.GC.KeepAlive(_obj);
        }

        internal static unsafe float get_Restitution(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            float __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, float*, int>**)ThisPtr)[8](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }
        internal static unsafe void set_Restitution(IObjectReference _obj, float value)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, float, int>**)ThisPtr)[9](ThisPtr, value));
            global::System.GC.KeepAlive(_obj);
        }



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0x76, 0x4B, 0xC, 0x1C, 0xD6, 0xC4, 0xD9, 0x5D, 0x8D, 0xD6, 0xDB, 0xE3, 0x5C, 0x7B, 0x7E, 0x55 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("1C0C4B76-C4D6-5DD9-8DD6-DBE35C7B7E55")]
    internal interface IBounceScalarNaturalMotionAnimation : global::Microsoft.UI.Composition.IBounceScalarNaturalMotionAnimation
    {
    }
    internal static class IBounceVector2NaturalMotionAnimationMethods
    {

        internal static unsafe float get_Acceleration(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            float __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, float*, int>**)ThisPtr)[6](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }
        internal static unsafe void set_Acceleration(IObjectReference _obj, float value)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, float, int>**)ThisPtr)[7](ThisPtr, value));
            global::System.GC.KeepAlive(_obj);
        }

        internal static unsafe float get_Restitution(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            float __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, float*, int>**)ThisPtr)[8](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }
        internal static unsafe void set_Restitution(IObjectReference _obj, float value)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, float, int>**)ThisPtr)[9](ThisPtr, value));
            global::System.GC.KeepAlive(_obj);
        }



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0x1F, 0x8D, 0x52, 0xEC, 0xE2, 0x22, 0x3E, 0x57, 0xAB, 0x87, 0x75, 0x70, 0x71, 0xE5, 0x0, 0x12 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("EC528D1F-22E2-573E-AB87-757071E50012")]
    internal interface IBounceVector2NaturalMotionAnimation : global::Microsoft.UI.Composition.IBounceVector2NaturalMotionAnimation
    {
    }
    internal static class IBounceVector3NaturalMotionAnimationMethods
    {

        internal static unsafe float get_Acceleration(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            float __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, float*, int>**)ThisPtr)[6](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }
        internal static unsafe void set_Acceleration(IObjectReference _obj, float value)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, float, int>**)ThisPtr)[7](ThisPtr, value));
            global::System.GC.KeepAlive(_obj);
        }

        internal static unsafe float get_Restitution(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            float __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, float*, int>**)ThisPtr)[8](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }
        internal static unsafe void set_Restitution(IObjectReference _obj, float value)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, float, int>**)ThisPtr)[9](ThisPtr, value));
            global::System.GC.KeepAlive(_obj);
        }



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0x98, 0xEE, 0xE2, 0xE3, 0x11, 0x12, 0x6D, 0x58, 0x8A, 0x6D, 0xFE, 0xA5, 0xEF, 0xC3, 0x95, 0x7F };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("E3E2EE98-1211-586D-8A6D-FEA5EFC3957F")]
    internal interface IBounceVector3NaturalMotionAnimation : global::Microsoft.UI.Composition.IBounceVector3NaturalMotionAnimation
    {
    }
    internal static class ICircleEasingFunctionMethods
    {

        internal static unsafe global::Microsoft.UI.Composition.CompositionEasingFunctionMode get_Mode(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::Microsoft.UI.Composition.CompositionEasingFunctionMode __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::Microsoft.UI.Composition.CompositionEasingFunctionMode*, int>**)ThisPtr)[6](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0x2C, 0x17, 0x4B, 0x41, 0x27, 0xBF, 0xAD, 0x5E, 0x93, 0xE0, 0x35, 0x91, 0x53, 0x22, 0xDB, 0x2C };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("414B172C-BF27-5EAD-93E0-35915322DB2C")]
    internal interface ICircleEasingFunction : global::Microsoft.UI.Composition.ICircleEasingFunction
    {
    }
    internal static class IColorKeyFrameAnimationMethods
    {


        internal static unsafe void InsertKeyFrame(IObjectReference _obj, float normalizedProgressKey, global::Windows.UI.Color value)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, float, global::Windows.UI.Color, int>**)ThisPtr)[8](ThisPtr, normalizedProgressKey, value));
            global::System.GC.KeepAlive(_obj);
        }

        internal static unsafe void InsertKeyFrame(IObjectReference _obj, float normalizedProgressKey, global::Windows.UI.Color value, global::Microsoft.UI.Composition.CompositionEasingFunction easingFunction)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __easingFunction = default;
            try
            {
                __easingFunction = global::ABI.Microsoft.UI.Composition.CompositionEasingFunction.CreateMarshaler2(easingFunction);
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, float, global::Windows.UI.Color, IntPtr, int>**)ThisPtr)[9](ThisPtr, normalizedProgressKey, value, MarshalInspectable<object>.GetAbi(__easingFunction)));
                global::System.GC.KeepAlive(_obj);
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__easingFunction);
            }
        }
        internal static unsafe global::Microsoft.UI.Composition.CompositionColorSpace get_InterpolationColorSpace(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::Microsoft.UI.Composition.CompositionColorSpace __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::Microsoft.UI.Composition.CompositionColorSpace*, int>**)ThisPtr)[6](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }
        internal static unsafe void set_InterpolationColorSpace(IObjectReference _obj, global::Microsoft.UI.Composition.CompositionColorSpace value)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::Microsoft.UI.Composition.CompositionColorSpace, int>**)ThisPtr)[7](ThisPtr, value));
            global::System.GC.KeepAlive(_obj);
        }



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0x28, 0x79, 0x23, 0xF0, 0x3C, 0x35, 0x67, 0x58, 0xBE, 0x93, 0x71, 0x54, 0x7E, 0x98, 0x9F, 0x44 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("F0237928-353C-5867-BE93-71547E989F44")]
    internal interface IColorKeyFrameAnimation : global::Microsoft.UI.Composition.IColorKeyFrameAnimation
    {
    }
    internal static class ICompositionAnimationMethods
    {


        internal static unsafe void ClearAllParameters(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, int>**)ThisPtr)[6](ThisPtr));
            global::System.GC.KeepAlive(_obj);
        }

        internal static unsafe void ClearParameter(IObjectReference _obj, string key)
        {
            var ThisPtr = _obj.ThisPtr;

            MarshalString.Pinnable __key = new(key);
            fixed(void* ___key = __key)
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, int>**)ThisPtr)[7](ThisPtr, MarshalString.GetAbi(ref __key)));
                global::System.GC.KeepAlive(_obj);
            }
        }

        internal static unsafe void SetColorParameter(IObjectReference _obj, string key, global::Windows.UI.Color value)
        {
            var ThisPtr = _obj.ThisPtr;

            MarshalString.Pinnable __key = new(key);
            fixed(void* ___key = __key)
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, global::Windows.UI.Color, int>**)ThisPtr)[8](ThisPtr, MarshalString.GetAbi(ref __key), value));
                global::System.GC.KeepAlive(_obj);
            }
        }

        internal static unsafe void SetMatrix3x2Parameter(IObjectReference _obj, string key, global::System.Numerics.Matrix3x2 value)
        {
            var ThisPtr = _obj.ThisPtr;

            MarshalString.Pinnable __key = new(key);
            fixed(void* ___key = __key)
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, global::System.Numerics.Matrix3x2, int>**)ThisPtr)[9](ThisPtr, MarshalString.GetAbi(ref __key), value));
                global::System.GC.KeepAlive(_obj);
            }
        }

        internal static unsafe void SetMatrix4x4Parameter(IObjectReference _obj, string key, global::System.Numerics.Matrix4x4 value)
        {
            var ThisPtr = _obj.ThisPtr;

            MarshalString.Pinnable __key = new(key);
            fixed(void* ___key = __key)
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, global::System.Numerics.Matrix4x4, int>**)ThisPtr)[10](ThisPtr, MarshalString.GetAbi(ref __key), value));
                global::System.GC.KeepAlive(_obj);
            }
        }

        internal static unsafe void SetQuaternionParameter(IObjectReference _obj, string key, global::System.Numerics.Quaternion value)
        {
            var ThisPtr = _obj.ThisPtr;

            MarshalString.Pinnable __key = new(key);
            fixed(void* ___key = __key)
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, global::System.Numerics.Quaternion, int>**)ThisPtr)[11](ThisPtr, MarshalString.GetAbi(ref __key), value));
                global::System.GC.KeepAlive(_obj);
            }
        }

        internal static unsafe void SetReferenceParameter(IObjectReference _obj, string key, global::Microsoft.UI.Composition.CompositionObject compositionObject)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __compositionObject = default;
            try
            {
                __compositionObject = global::ABI.Microsoft.UI.Composition.CompositionObject.CreateMarshaler2(compositionObject);
                MarshalString.Pinnable __key = new(key);
                fixed(void* ___key = __key)
                {
                    global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, IntPtr, int>**)ThisPtr)[12](ThisPtr, MarshalString.GetAbi(ref __key), MarshalInspectable<object>.GetAbi(__compositionObject)));
                    global::System.GC.KeepAlive(_obj);
                }
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__compositionObject);
            }
        }

        internal static unsafe void SetScalarParameter(IObjectReference _obj, string key, float value)
        {
            var ThisPtr = _obj.ThisPtr;

            MarshalString.Pinnable __key = new(key);
            fixed(void* ___key = __key)
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, float, int>**)ThisPtr)[13](ThisPtr, MarshalString.GetAbi(ref __key), value));
                global::System.GC.KeepAlive(_obj);
            }
        }

        internal static unsafe void SetVector2Parameter(IObjectReference _obj, string key, global::System.Numerics.Vector2 value)
        {
            var ThisPtr = _obj.ThisPtr;

            MarshalString.Pinnable __key = new(key);
            fixed(void* ___key = __key)
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, global::System.Numerics.Vector2, int>**)ThisPtr)[14](ThisPtr, MarshalString.GetAbi(ref __key), value));
                global::System.GC.KeepAlive(_obj);
            }
        }

        internal static unsafe void SetVector3Parameter(IObjectReference _obj, string key, global::System.Numerics.Vector3 value)
        {
            var ThisPtr = _obj.ThisPtr;

            MarshalString.Pinnable __key = new(key);
            fixed(void* ___key = __key)
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, global::System.Numerics.Vector3, int>**)ThisPtr)[15](ThisPtr, MarshalString.GetAbi(ref __key), value));
                global::System.GC.KeepAlive(_obj);
            }
        }

        internal static unsafe void SetVector4Parameter(IObjectReference _obj, string key, global::System.Numerics.Vector4 value)
        {
            var ThisPtr = _obj.ThisPtr;

            MarshalString.Pinnable __key = new(key);
            fixed(void* ___key = __key)
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, global::System.Numerics.Vector4, int>**)ThisPtr)[16](ThisPtr, MarshalString.GetAbi(ref __key), value));
                global::System.GC.KeepAlive(_obj);
            }
        }


        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0xC8, 0xCC, 0x29, 0xA8, 0xDE, 0x6F, 0x90, 0x5B, 0xAD, 0x37, 0xEF, 0xD3, 0x7, 0xE1, 0xB6, 0x31 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("A829CCC8-6FDE-5B90-AD37-EFD307E1B631")]
    internal interface ICompositionAnimation : global::Microsoft.UI.Composition.ICompositionAnimation
    {
    }
    internal static class ICompositionAnimation2Methods
    {


        internal static unsafe void SetBooleanParameter(IObjectReference _obj, string key, bool value)
        {
            var ThisPtr = _obj.ThisPtr;

            MarshalString.Pinnable __key = new(key);
            fixed(void* ___key = __key)
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, byte, int>**)ThisPtr)[6](ThisPtr, MarshalString.GetAbi(ref __key), (byte)(value ? 1 : 0)));
                global::System.GC.KeepAlive(_obj);
            }
        }
        internal static unsafe string get_Target(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[7](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return MarshalString.FromAbi(__retval);
            }
            finally
            {
                MarshalString.DisposeAbi(__retval);
            }
        }
        internal static unsafe void set_Target(IObjectReference _obj, string value)
        {
            var ThisPtr = _obj.ThisPtr;

            MarshalString.Pinnable __value = new(value);
            fixed(void* ___value = __value)
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, int>**)ThisPtr)[8](ThisPtr, MarshalString.GetAbi(ref __value)));
                global::System.GC.KeepAlive(_obj);
            }
        }



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0x58, 0xEB, 0x26, 0x9, 0x65, 0x89, 0x74, 0x5C, 0xBD, 0xAC, 0x85, 0x2E, 0xBB, 0x5E, 0x85, 0x42 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("0926EB58-8965-5C74-BDAC-852EBB5E8542")]
    internal interface ICompositionAnimation2 : global::Microsoft.UI.Composition.ICompositionAnimation2
    {
    }
    internal static class ICompositionAnimation3Methods
    {

        internal static unsafe global::Microsoft.UI.Composition.InitialValueExpressionCollection get_InitialValueExpressions(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[6](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Composition.InitialValueExpressionCollection.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.UI.Composition.InitialValueExpressionCollection.DisposeAbi(__retval);
            }
        }



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0x53, 0x3F, 0x6, 0x60, 0x67, 0x41, 0x14, 0x59, 0xA2, 0xF1, 0x9E, 0xFC, 0xC2, 0xF8, 0x6C, 0x76 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("60063F53-4167-5914-A2F1-9EFCC2F86C76")]
    internal interface ICompositionAnimation3 : global::Microsoft.UI.Composition.ICompositionAnimation3
    {
    }
    internal static class ICompositionAnimation4Methods
    {


        internal static unsafe void SetExpressionReferenceParameter(IObjectReference _obj, string parameterName, global::Microsoft.UI.Composition.IAnimationObject source)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __source = default;
            try
            {
                __source = MarshalInterface<global::Microsoft.UI.Composition.IAnimationObject>.CreateMarshaler2(source, global::ABI.Microsoft.UI.Composition.IAnimationObjectMethods.IID);
                MarshalString.Pinnable __parameterName = new(parameterName);
                fixed(void* ___parameterName = __parameterName)
                {
                    global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, IntPtr, int>**)ThisPtr)[6](ThisPtr, MarshalString.GetAbi(ref __parameterName), MarshalInspectable<object>.GetAbi(__source)));
                    global::System.GC.KeepAlive(_obj);
                }
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__source);
            }
        }


        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0x47, 0x14, 0x10, 0xC4, 0xE4, 0xDF, 0x7F, 0x59, 0xB5, 0xBC, 0x96, 0x44, 0x3F, 0x5D, 0x18, 0xA1 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("C4101447-DFE4-597F-B5BC-96443F5D18A1")]
    internal interface ICompositionAnimation4 : global::Microsoft.UI.Composition.ICompositionAnimation4
    {
    }
    public static class ICompositionAnimationBaseMethods
    {



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0x5A, 0xE, 0x7C, 0xA7, 0x59, 0xF0, 0x85, 0x4E, 0xBC, 0xEF, 0xC0, 0x68, 0x69, 0x4C, 0xEC, 0x78 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

        public static global::System.IntPtr AbiToProjectionVftablePtr => ICompositionAnimationBase.AbiToProjectionVftablePtr;

    }
    [DynamicInterfaceCastableImplementation]
    [Guid("A77C0E5A-F059-4E85-BCEF-C068694CEC78")]
    internal unsafe interface ICompositionAnimationBase : global::Microsoft.UI.Composition.ICompositionAnimationBase
    {

        public static readonly IntPtr AbiToProjectionVftablePtr;
        static unsafe ICompositionAnimationBase()
        {
            AbiToProjectionVftablePtr = ComWrappersSupport.AllocateVtableMemory(typeof(ICompositionAnimationBase), sizeof(IInspectable.Vftbl) + sizeof(IntPtr) * 0);
            *(IInspectable.Vftbl*)AbiToProjectionVftablePtr = IInspectable.Vftbl.AbiToProjectionVftable;

        }

    }

    internal static class ICompositionAnimationFactoryMethods
    {



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0xCA, 0x78, 0xD2, 0x2E, 0xCA, 0x4C, 0x7F, 0x5F, 0x8D, 0x47, 0xF9, 0x30, 0x55, 0x2A, 0x77, 0x69 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("2ED278CA-4CCA-5F7F-8D47-F930552A7769")]
    internal interface ICompositionAnimationFactory : global::Microsoft.UI.Composition.ICompositionAnimationFactory
    {
    }
    internal static class ICompositionAnimationGroupMethods
    {


        internal static unsafe void Add(IObjectReference _obj, global::Microsoft.UI.Composition.CompositionAnimation value)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __value = default;
            try
            {
                __value = global::ABI.Microsoft.UI.Composition.CompositionAnimation.CreateMarshaler2(value);
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, int>**)ThisPtr)[7](ThisPtr, MarshalInspectable<object>.GetAbi(__value)));
                global::System.GC.KeepAlive(_obj);
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__value);
            }
        }

        internal static unsafe void Remove(IObjectReference _obj, global::Microsoft.UI.Composition.CompositionAnimation value)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __value = default;
            try
            {
                __value = global::ABI.Microsoft.UI.Composition.CompositionAnimation.CreateMarshaler2(value);
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, int>**)ThisPtr)[8](ThisPtr, MarshalInspectable<object>.GetAbi(__value)));
                global::System.GC.KeepAlive(_obj);
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__value);
            }
        }

        internal static unsafe void RemoveAll(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, int>**)ThisPtr)[9](ThisPtr));
            global::System.GC.KeepAlive(_obj);
        }
        internal static unsafe int get_Count(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            int __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, int*, int>**)ThisPtr)[6](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0xAC, 0xDC, 0x1C, 0xA5, 0x72, 0xB9, 0xE7, 0x5A, 0x81, 0xD0, 0x9D, 0x91, 0xC7, 0x1E, 0xCB, 0x7A };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("A51CDCAC-B972-5AE7-81D0-9D91C71ECB7A")]
    internal interface ICompositionAnimationGroup : global::Microsoft.UI.Composition.ICompositionAnimationGroup
    {
    }
    internal static class ICompositionApiInformationStaticsMethods
    {

        internal static unsafe ulong get_ApiVersion(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            ulong __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, ulong*, int>**)ThisPtr)[6](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0xD3, 0xE, 0x26, 0x85, 0x5B, 0x36, 0x70, 0x5E, 0xB7, 0x9A, 0xF9, 0xF1, 0xD1, 0xF, 0xA4, 0xB5 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("85260ED3-365B-5E70-B79A-F9F1D10FA4B5")]
    internal interface ICompositionApiInformationStatics : global::Microsoft.UI.Composition.ICompositionApiInformationStatics
    {
    }
    internal static class ICompositionBackdropBrushMethods
    {



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0xB3, 0x6B, 0x86, 0x6C, 0x2A, 0x17, 0xC, 0x57, 0x82, 0xAC, 0xBF, 0x98, 0x48, 0xD9, 0x9A, 0x59 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("6C866BB3-172A-570C-82AC-BF9848D99A59")]
    internal interface ICompositionBackdropBrush : global::Microsoft.UI.Composition.ICompositionBackdropBrush
    {
    }
    internal static class ICompositionBatchCompletedEventArgsMethods
    {



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0x34, 0x3, 0x40, 0xAC, 0x58, 0x43, 0xB0, 0x5F, 0xBF, 0xC3, 0x11, 0x7F, 0xE5, 0x81, 0x99, 0x8F };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("AC400334-4358-5FB0-BFC3-117FE581998F")]
    internal interface ICompositionBatchCompletedEventArgs : global::Microsoft.UI.Composition.ICompositionBatchCompletedEventArgs
    {
    }
    internal static class ICompositionBrushMethods
    {



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0xE7, 0x24, 0x39, 0x48, 0xA5, 0x99, 0x77, 0x53, 0x96, 0x8B, 0xDE, 0xC6, 0xD4, 0xB, 0xBC, 0xCD };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("483924E7-99A5-5377-968B-DEC6D40BBCCD")]
    internal interface ICompositionBrush : global::Microsoft.UI.Composition.ICompositionBrush
    {
    }
    internal static class ICompositionBrushFactoryMethods
    {



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0x54, 0xB3, 0xF2, 0xAB, 0x30, 0x71, 0xD9, 0x53, 0x83, 0x24, 0x36, 0x5D, 0x7E, 0x2, 0xED, 0xE7 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("ABF2B354-7130-53D9-8324-365D7E02EDE7")]
    internal interface ICompositionBrushFactory : global::Microsoft.UI.Composition.ICompositionBrushFactory
    {
    }
    internal static class ICompositionCapabilitiesMethods
    {


        internal static unsafe bool AreEffectsSupported(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            byte __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, byte*, int>**)ThisPtr)[6](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval != 0;
        }

        internal static unsafe bool AreEffectsFast(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            byte __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, byte*, int>**)ThisPtr)[7](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval != 0;
        }

        private volatile static global::System.Runtime.CompilerServices.ConditionalWeakTable<object, global::ABI.WinRT.Interop.EventSource<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Composition.CompositionCapabilities, object>>> _Changed_;
        private static global::System.Runtime.CompilerServices.ConditionalWeakTable<object, global::ABI.WinRT.Interop.EventSource<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Composition.CompositionCapabilities, object>>> MakeChangedTable()
        {
            
            global::System.Threading.Interlocked.CompareExchange(ref _Changed_, new(), null);
            return _Changed_;
        }
        private static global::System.Runtime.CompilerServices.ConditionalWeakTable<object, global::ABI.WinRT.Interop.EventSource<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Composition.CompositionCapabilities, object>>> _Changed => _Changed_ ?? MakeChangedTable();



        internal static unsafe global::ABI.WinRT.Interop.EventSource<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Composition.CompositionCapabilities, object>> Get_Changed2(IObjectReference _obj, object _thisObj)
        {
            return _Changed.GetValue(_thisObj, (key) =>
            {

                var ThisPtr = _obj.ThisPtr;

                return 
                new _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_UI_Composition_CompositionCapabilities__object_(_obj,
                (*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, global::WinRT.EventRegistrationToken*, int>**)ThisPtr)[8],
                (*(delegate* unmanaged[Stdcall]<IntPtr, global::WinRT.EventRegistrationToken, int>**)ThisPtr)[9],
                0);
            });
        }


        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0x12, 0xBF, 0x89, 0x76, 0xC0, 0x75, 0xEA, 0x52, 0x81, 0xCB, 0x46, 0x3E, 0xD1, 0xC1, 0x6C, 0x45 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("7689BF12-75C0-52EA-81CB-463ED1C16C45")]
    internal interface ICompositionCapabilities : global::Microsoft.UI.Composition.ICompositionCapabilities
    {
    }
    internal static class ICompositionClipMethods
    {



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0xCB, 0x55, 0x6B, 0xB6, 0xA5, 0xB5, 0xEE, 0x5B, 0x89, 0x72, 0xAE, 0x78, 0x23, 0x3C, 0xB3, 0x4C };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("B66B55CB-B5A5-5BEE-8972-AE78233CB34C")]
    internal interface ICompositionClip : global::Microsoft.UI.Composition.ICompositionClip
    {
    }
    internal static class ICompositionClip2Methods
    {

        internal static unsafe global::System.Numerics.Vector2 get_AnchorPoint(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::System.Numerics.Vector2 __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::System.Numerics.Vector2*, int>**)ThisPtr)[6](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }
        internal static unsafe void set_AnchorPoint(IObjectReference _obj, global::System.Numerics.Vector2 value)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::System.Numerics.Vector2, int>**)ThisPtr)[7](ThisPtr, value));
            global::System.GC.KeepAlive(_obj);
        }

        internal static unsafe global::System.Numerics.Vector2 get_CenterPoint(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::System.Numerics.Vector2 __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::System.Numerics.Vector2*, int>**)ThisPtr)[8](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }
        internal static unsafe void set_CenterPoint(IObjectReference _obj, global::System.Numerics.Vector2 value)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::System.Numerics.Vector2, int>**)ThisPtr)[9](ThisPtr, value));
            global::System.GC.KeepAlive(_obj);
        }

        internal static unsafe global::System.Numerics.Vector2 get_Offset(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::System.Numerics.Vector2 __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::System.Numerics.Vector2*, int>**)ThisPtr)[10](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }
        internal static unsafe void set_Offset(IObjectReference _obj, global::System.Numerics.Vector2 value)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::System.Numerics.Vector2, int>**)ThisPtr)[11](ThisPtr, value));
            global::System.GC.KeepAlive(_obj);
        }

        internal static unsafe float get_RotationAngle(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            float __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, float*, int>**)ThisPtr)[12](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }
        internal static unsafe void set_RotationAngle(IObjectReference _obj, float value)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, float, int>**)ThisPtr)[13](ThisPtr, value));
            global::System.GC.KeepAlive(_obj);
        }

        internal static unsafe float get_RotationAngleInDegrees(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            float __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, float*, int>**)ThisPtr)[14](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }
        internal static unsafe void set_RotationAngleInDegrees(IObjectReference _obj, float value)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, float, int>**)ThisPtr)[15](ThisPtr, value));
            global::System.GC.KeepAlive(_obj);
        }

        internal static unsafe global::System.Numerics.Vector2 get_Scale(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::System.Numerics.Vector2 __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::System.Numerics.Vector2*, int>**)ThisPtr)[16](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }
        internal static unsafe void set_Scale(IObjectReference _obj, global::System.Numerics.Vector2 value)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::System.Numerics.Vector2, int>**)ThisPtr)[17](ThisPtr, value));
            global::System.GC.KeepAlive(_obj);
        }

        internal static unsafe global::System.Numerics.Matrix3x2 get_TransformMatrix(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::System.Numerics.Matrix3x2 __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::System.Numerics.Matrix3x2*, int>**)ThisPtr)[18](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }
        internal static unsafe void set_TransformMatrix(IObjectReference _obj, global::System.Numerics.Matrix3x2 value)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::System.Numerics.Matrix3x2, int>**)ThisPtr)[19](ThisPtr, value));
            global::System.GC.KeepAlive(_obj);
        }



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0x80, 0xBF, 0xF6, 0xCD, 0xD7, 0xAF, 0xDC, 0x57, 0x81, 0x48, 0x6C, 0xCB, 0xBB, 0x5D, 0x78, 0xBB };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("CDF6BF80-AFD7-57DC-8148-6CCBBB5D78BB")]
    internal interface ICompositionClip2 : global::Microsoft.UI.Composition.ICompositionClip2
    {
    }
    internal static class ICompositionClipFactoryMethods
    {



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0x65, 0xEC, 0x1D, 0x61, 0x2, 0xD3, 0xBC, 0x52, 0x92, 0xAB, 0xA2, 0x95, 0xBD, 0x14, 0x1A, 0xE4 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("611DEC65-D302-52BC-92AB-A295BD141AE4")]
    internal interface ICompositionClipFactory : global::Microsoft.UI.Composition.ICompositionClipFactory
    {
    }
    internal static class ICompositionColorBrushMethods
    {

        internal static unsafe global::Windows.UI.Color get_Color(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::Windows.UI.Color __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::Windows.UI.Color*, int>**)ThisPtr)[6](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }
        internal static unsafe void set_Color(IObjectReference _obj, global::Windows.UI.Color value)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::Windows.UI.Color, int>**)ThisPtr)[7](ThisPtr, value));
            global::System.GC.KeepAlive(_obj);
        }



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0x69, 0xFB, 0x8F, 0x3F, 0x71, 0x3E, 0xA7, 0x55, 0x8E, 0x79, 0xF2, 0x7A, 0x21, 0x4C, 0x56, 0xAE };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("3F8FFB69-3E71-55A7-8E79-F27A214C56AE")]
    internal interface ICompositionColorBrush : global::Microsoft.UI.Composition.ICompositionColorBrush
    {
    }
    internal static class ICompositionColorGradientStopMethods
    {

        internal static unsafe global::Windows.UI.Color get_Color(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::Windows.UI.Color __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::Windows.UI.Color*, int>**)ThisPtr)[6](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }
        internal static unsafe void set_Color(IObjectReference _obj, global::Windows.UI.Color value)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::Windows.UI.Color, int>**)ThisPtr)[7](ThisPtr, value));
            global::System.GC.KeepAlive(_obj);
        }

        internal static unsafe float get_Offset(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            float __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, float*, int>**)ThisPtr)[8](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }
        internal static unsafe void set_Offset(IObjectReference _obj, float value)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, float, int>**)ThisPtr)[9](ThisPtr, value));
            global::System.GC.KeepAlive(_obj);
        }



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0xD8, 0x30, 0x80, 0x86, 0xC0, 0xC5, 0xD8, 0x5D, 0xA7, 0x65, 0xE3, 0x2C, 0xD3, 0x49, 0x7A, 0xA9 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("868030D8-C5C0-5DD8-A765-E32CD3497AA9")]
    internal interface ICompositionColorGradientStop : global::Microsoft.UI.Composition.ICompositionColorGradientStop
    {
    }
    internal static class ICompositionColorGradientStopCollectionMethods
    {



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0x29, 0xCB, 0x94, 0x47, 0x9D, 0xCE, 0x37, 0x58, 0x9F, 0xC9, 0x84, 0x7D, 0xF3, 0xE1, 0x97, 0xDE };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("4794CB29-CE9D-5837-9FC9-847DF3E197DE")]
    internal interface ICompositionColorGradientStopCollection : global::Microsoft.UI.Composition.ICompositionColorGradientStopCollection
    {
    }
    internal static class ICompositionCommitBatchMethods
    {

        internal static unsafe bool get_IsActive(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            byte __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, byte*, int>**)ThisPtr)[6](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval != 0;
        }

        internal static unsafe bool get_IsEnded(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            byte __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, byte*, int>**)ThisPtr)[7](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval != 0;
        }


        private volatile static global::System.Runtime.CompilerServices.ConditionalWeakTable<object, global::ABI.WinRT.Interop.EventSource<global::Windows.Foundation.TypedEventHandler<object, global::Microsoft.UI.Composition.CompositionBatchCompletedEventArgs>>> _Completed_;
        private static global::System.Runtime.CompilerServices.ConditionalWeakTable<object, global::ABI.WinRT.Interop.EventSource<global::Windows.Foundation.TypedEventHandler<object, global::Microsoft.UI.Composition.CompositionBatchCompletedEventArgs>>> MakeCompletedTable()
        {
            
            global::System.Threading.Interlocked.CompareExchange(ref _Completed_, new(), null);
            return _Completed_;
        }
        private static global::System.Runtime.CompilerServices.ConditionalWeakTable<object, global::ABI.WinRT.Interop.EventSource<global::Windows.Foundation.TypedEventHandler<object, global::Microsoft.UI.Composition.CompositionBatchCompletedEventArgs>>> _Completed => _Completed_ ?? MakeCompletedTable();



        internal static unsafe global::ABI.WinRT.Interop.EventSource<global::Windows.Foundation.TypedEventHandler<object, global::Microsoft.UI.Composition.CompositionBatchCompletedEventArgs>> Get_Completed2(IObjectReference _obj, object _thisObj)
        {
            return _Completed.GetValue(_thisObj, (key) =>
            {

                var ThisPtr = _obj.ThisPtr;

                return 
                new _EventSource_global__Windows_Foundation_TypedEventHandler_object__global__Microsoft_UI_Composition_CompositionBatchCompletedEventArgs_(_obj,
                (*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, global::WinRT.EventRegistrationToken*, int>**)ThisPtr)[8],
                (*(delegate* unmanaged[Stdcall]<IntPtr, global::WinRT.EventRegistrationToken, int>**)ThisPtr)[9],
                0);
            });
        }


        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0xA8, 0xF, 0x55, 0xC4, 0xF2, 0xA7, 0x59, 0x52, 0xBF, 0x74, 0x33, 0xB2, 0xF5, 0x24, 0xA, 0x28 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("C4550FA8-A7F2-5259-BF74-33B2F5240A28")]
    internal interface ICompositionCommitBatch : global::Microsoft.UI.Composition.ICompositionCommitBatch
    {
    }
    internal static class ICompositionContainerShapeMethods
    {

        internal static unsafe global::Microsoft.UI.Composition.CompositionShapeCollection get_Shapes(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[6](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Composition.CompositionShapeCollection.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.UI.Composition.CompositionShapeCollection.DisposeAbi(__retval);
            }
        }



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0xD5, 0xAB, 0x4A, 0x6, 0xAB, 0x2D, 0xD3, 0x52, 0x82, 0x4B, 0xC7, 0x24, 0x56, 0x54, 0xF, 0x29 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("064AABD5-2DAB-52D3-824B-C72456540F29")]
    internal interface ICompositionContainerShape : global::Microsoft.UI.Composition.ICompositionContainerShape
    {
    }
    internal static class ICompositionDrawingSurfaceMethods
    {

        internal static unsafe global::Microsoft.Graphics.DirectX.DirectXAlphaMode get_AlphaMode(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::Microsoft.Graphics.DirectX.DirectXAlphaMode __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::Microsoft.Graphics.DirectX.DirectXAlphaMode*, int>**)ThisPtr)[6](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }

        internal static unsafe global::Microsoft.Graphics.DirectX.DirectXPixelFormat get_PixelFormat(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::Microsoft.Graphics.DirectX.DirectXPixelFormat __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::Microsoft.Graphics.DirectX.DirectXPixelFormat*, int>**)ThisPtr)[7](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }

        internal static unsafe global::Windows.Foundation.Size get_Size(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::Windows.Foundation.Size __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::Windows.Foundation.Size*, int>**)ThisPtr)[8](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0x97, 0xAB, 0x6C, 0x21, 0xEE, 0xA2, 0x29, 0x5A, 0xAD, 0x6B, 0xB, 0xC2, 0xDF, 0x4A, 0x15, 0x4 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("216CAB97-A2EE-5A29-AD6B-0BC2DF4A1504")]
    internal interface ICompositionDrawingSurface : global::Microsoft.UI.Composition.ICompositionDrawingSurface
    {
    }
    internal static class ICompositionDrawingSurface2Methods
    {


        internal static unsafe void Resize(IObjectReference _obj, global::Windows.Graphics.SizeInt32 sizePixels)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::Windows.Graphics.SizeInt32, int>**)ThisPtr)[7](ThisPtr, sizePixels));
            global::System.GC.KeepAlive(_obj);
        }

        internal static unsafe void Scroll(IObjectReference _obj, global::Windows.Graphics.PointInt32 offset)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::Windows.Graphics.PointInt32, int>**)ThisPtr)[8](ThisPtr, offset));
            global::System.GC.KeepAlive(_obj);
        }

        internal static unsafe void Scroll(IObjectReference _obj, global::Windows.Graphics.PointInt32 offset, global::Windows.Graphics.RectInt32 scrollRect)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::Windows.Graphics.PointInt32, global::Windows.Graphics.RectInt32, int>**)ThisPtr)[9](ThisPtr, offset, scrollRect));
            global::System.GC.KeepAlive(_obj);
        }

        internal static unsafe void ScrollWithClip(IObjectReference _obj, global::Windows.Graphics.PointInt32 offset, global::Windows.Graphics.RectInt32 clipRect)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::Windows.Graphics.PointInt32, global::Windows.Graphics.RectInt32, int>**)ThisPtr)[10](ThisPtr, offset, clipRect));
            global::System.GC.KeepAlive(_obj);
        }

        internal static unsafe void ScrollWithClip(IObjectReference _obj, global::Windows.Graphics.PointInt32 offset, global::Windows.Graphics.RectInt32 clipRect, global::Windows.Graphics.RectInt32 scrollRect)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::Windows.Graphics.PointInt32, global::Windows.Graphics.RectInt32, global::Windows.Graphics.RectInt32, int>**)ThisPtr)[11](ThisPtr, offset, clipRect, scrollRect));
            global::System.GC.KeepAlive(_obj);
        }
        internal static unsafe global::Windows.Graphics.SizeInt32 get_SizeInt32(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::Windows.Graphics.SizeInt32 __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::Windows.Graphics.SizeInt32*, int>**)ThisPtr)[6](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0x52, 0xF6, 0xE6, 0x6B, 0xC8, 0xBE, 0xDF, 0x5A, 0xA6, 0xAF, 0x5A, 0xCF, 0xC0, 0xA, 0x96, 0x8E };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("6BE6F652-BEC8-5ADF-A6AF-5ACFC00A968E")]
    internal interface ICompositionDrawingSurface2 : global::Microsoft.UI.Composition.ICompositionDrawingSurface2
    {
    }
    internal static class ICompositionDrawingSurfaceFactoryMethods
    {



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0x9A, 0xE1, 0x91, 0x47, 0x3B, 0xC8, 0xB0, 0x58, 0xAC, 0x86, 0xDF, 0xC5, 0x84, 0x94, 0xF5, 0xF9 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("4791E19A-C83B-58B0-AC86-DFC58494F5F9")]
    internal interface ICompositionDrawingSurfaceFactory : global::Microsoft.UI.Composition.ICompositionDrawingSurfaceFactory
    {
    }
    internal static class ICompositionEasingFunctionMethods
    {



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0xD, 0xCD, 0x1E, 0x8E, 0xD8, 0x57, 0xC9, 0x5B, 0x9B, 0xCD, 0xE4, 0x3D, 0xD, 0xD7, 0x33, 0xC4 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("8E1ECD0D-57D8-5BC9-9BCD-E43D0DD733C4")]
    internal interface ICompositionEasingFunction : global::Microsoft.UI.Composition.ICompositionEasingFunction
    {
    }
    internal static class ICompositionEasingFunctionFactoryMethods
    {



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0xC3, 0x32, 0x7D, 0x7D, 0x4B, 0x57, 0x20, 0x56, 0x99, 0x2, 0xDB, 0x42, 0x68, 0x51, 0x80, 0x2F };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("7D7D32C3-574B-5620-9902-DB426851802F")]
    internal interface ICompositionEasingFunctionFactory : global::Microsoft.UI.Composition.ICompositionEasingFunctionFactory
    {
    }
    internal static class ICompositionEasingFunctionStaticsMethods
    {


        internal static unsafe global::Microsoft.UI.Composition.CubicBezierEasingFunction CreateCubicBezierEasingFunction(IObjectReference _obj, global::Microsoft.UI.Composition.Compositor owner, global::System.Numerics.Vector2 controlPoint1, global::System.Numerics.Vector2 controlPoint2)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __owner = default;
            IntPtr __retval = default;
            try
            {
                __owner = global::ABI.Microsoft.UI.Composition.Compositor.CreateMarshaler2(owner);
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, global::System.Numerics.Vector2, global::System.Numerics.Vector2, IntPtr*, int>**)ThisPtr)[6](ThisPtr, MarshalInspectable<object>.GetAbi(__owner), controlPoint1, controlPoint2, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Composition.CubicBezierEasingFunction.FromAbi(__retval);
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__owner);
                global::ABI.Microsoft.UI.Composition.CubicBezierEasingFunction.DisposeAbi(__retval);
            }
        }

        internal static unsafe global::Microsoft.UI.Composition.LinearEasingFunction CreateLinearEasingFunction(IObjectReference _obj, global::Microsoft.UI.Composition.Compositor owner)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __owner = default;
            IntPtr __retval = default;
            try
            {
                __owner = global::ABI.Microsoft.UI.Composition.Compositor.CreateMarshaler2(owner);
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, IntPtr*, int>**)ThisPtr)[7](ThisPtr, MarshalInspectable<object>.GetAbi(__owner), &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Composition.LinearEasingFunction.FromAbi(__retval);
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__owner);
                global::ABI.Microsoft.UI.Composition.LinearEasingFunction.DisposeAbi(__retval);
            }
        }

        internal static unsafe global::Microsoft.UI.Composition.StepEasingFunction CreateStepEasingFunction(IObjectReference _obj, global::Microsoft.UI.Composition.Compositor owner)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __owner = default;
            IntPtr __retval = default;
            try
            {
                __owner = global::ABI.Microsoft.UI.Composition.Compositor.CreateMarshaler2(owner);
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, IntPtr*, int>**)ThisPtr)[8](ThisPtr, MarshalInspectable<object>.GetAbi(__owner), &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Composition.StepEasingFunction.FromAbi(__retval);
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__owner);
                global::ABI.Microsoft.UI.Composition.StepEasingFunction.DisposeAbi(__retval);
            }
        }

        internal static unsafe global::Microsoft.UI.Composition.StepEasingFunction CreateStepEasingFunction(IObjectReference _obj, global::Microsoft.UI.Composition.Compositor owner, int stepCount)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __owner = default;
            IntPtr __retval = default;
            try
            {
                __owner = global::ABI.Microsoft.UI.Composition.Compositor.CreateMarshaler2(owner);
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, int, IntPtr*, int>**)ThisPtr)[9](ThisPtr, MarshalInspectable<object>.GetAbi(__owner), stepCount, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Composition.StepEasingFunction.FromAbi(__retval);
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__owner);
                global::ABI.Microsoft.UI.Composition.StepEasingFunction.DisposeAbi(__retval);
            }
        }

        internal static unsafe global::Microsoft.UI.Composition.BackEasingFunction CreateBackEasingFunction(IObjectReference _obj, global::Microsoft.UI.Composition.Compositor owner, global::Microsoft.UI.Composition.CompositionEasingFunctionMode mode, float amplitude)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __owner = default;
            IntPtr __retval = default;
            try
            {
                __owner = global::ABI.Microsoft.UI.Composition.Compositor.CreateMarshaler2(owner);
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, global::Microsoft.UI.Composition.CompositionEasingFunctionMode, float, IntPtr*, int>**)ThisPtr)[10](ThisPtr, MarshalInspectable<object>.GetAbi(__owner), mode, amplitude, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Composition.BackEasingFunction.FromAbi(__retval);
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__owner);
                global::ABI.Microsoft.UI.Composition.BackEasingFunction.DisposeAbi(__retval);
            }
        }

        internal static unsafe global::Microsoft.UI.Composition.BounceEasingFunction CreateBounceEasingFunction(IObjectReference _obj, global::Microsoft.UI.Composition.Compositor owner, global::Microsoft.UI.Composition.CompositionEasingFunctionMode mode, int bounces, float bounciness)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __owner = default;
            IntPtr __retval = default;
            try
            {
                __owner = global::ABI.Microsoft.UI.Composition.Compositor.CreateMarshaler2(owner);
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, global::Microsoft.UI.Composition.CompositionEasingFunctionMode, int, float, IntPtr*, int>**)ThisPtr)[11](ThisPtr, MarshalInspectable<object>.GetAbi(__owner), mode, bounces, bounciness, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Composition.BounceEasingFunction.FromAbi(__retval);
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__owner);
                global::ABI.Microsoft.UI.Composition.BounceEasingFunction.DisposeAbi(__retval);
            }
        }

        internal static unsafe global::Microsoft.UI.Composition.CircleEasingFunction CreateCircleEasingFunction(IObjectReference _obj, global::Microsoft.UI.Composition.Compositor owner, global::Microsoft.UI.Composition.CompositionEasingFunctionMode mode)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __owner = default;
            IntPtr __retval = default;
            try
            {
                __owner = global::ABI.Microsoft.UI.Composition.Compositor.CreateMarshaler2(owner);
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, global::Microsoft.UI.Composition.CompositionEasingFunctionMode, IntPtr*, int>**)ThisPtr)[12](ThisPtr, MarshalInspectable<object>.GetAbi(__owner), mode, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Composition.CircleEasingFunction.FromAbi(__retval);
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__owner);
                global::ABI.Microsoft.UI.Composition.CircleEasingFunction.DisposeAbi(__retval);
            }
        }

        internal static unsafe global::Microsoft.UI.Composition.ElasticEasingFunction CreateElasticEasingFunction(IObjectReference _obj, global::Microsoft.UI.Composition.Compositor owner, global::Microsoft.UI.Composition.CompositionEasingFunctionMode mode, int oscillations, float springiness)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __owner = default;
            IntPtr __retval = default;
            try
            {
                __owner = global::ABI.Microsoft.UI.Composition.Compositor.CreateMarshaler2(owner);
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, global::Microsoft.UI.Composition.CompositionEasingFunctionMode, int, float, IntPtr*, int>**)ThisPtr)[13](ThisPtr, MarshalInspectable<object>.GetAbi(__owner), mode, oscillations, springiness, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Composition.ElasticEasingFunction.FromAbi(__retval);
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__owner);
                global::ABI.Microsoft.UI.Composition.ElasticEasingFunction.DisposeAbi(__retval);
            }
        }

        internal static unsafe global::Microsoft.UI.Composition.ExponentialEasingFunction CreateExponentialEasingFunction(IObjectReference _obj, global::Microsoft.UI.Composition.Compositor owner, global::Microsoft.UI.Composition.CompositionEasingFunctionMode mode, float exponent)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __owner = default;
            IntPtr __retval = default;
            try
            {
                __owner = global::ABI.Microsoft.UI.Composition.Compositor.CreateMarshaler2(owner);
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, global::Microsoft.UI.Composition.CompositionEasingFunctionMode, float, IntPtr*, int>**)ThisPtr)[14](ThisPtr, MarshalInspectable<object>.GetAbi(__owner), mode, exponent, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Composition.ExponentialEasingFunction.FromAbi(__retval);
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__owner);
                global::ABI.Microsoft.UI.Composition.ExponentialEasingFunction.DisposeAbi(__retval);
            }
        }

        internal static unsafe global::Microsoft.UI.Composition.PowerEasingFunction CreatePowerEasingFunction(IObjectReference _obj, global::Microsoft.UI.Composition.Compositor owner, global::Microsoft.UI.Composition.CompositionEasingFunctionMode mode, float power)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __owner = default;
            IntPtr __retval = default;
            try
            {
                __owner = global::ABI.Microsoft.UI.Composition.Compositor.CreateMarshaler2(owner);
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, global::Microsoft.UI.Composition.CompositionEasingFunctionMode, float, IntPtr*, int>**)ThisPtr)[15](ThisPtr, MarshalInspectable<object>.GetAbi(__owner), mode, power, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Composition.PowerEasingFunction.FromAbi(__retval);
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__owner);
                global::ABI.Microsoft.UI.Composition.PowerEasingFunction.DisposeAbi(__retval);
            }
        }

        internal static unsafe global::Microsoft.UI.Composition.SineEasingFunction CreateSineEasingFunction(IObjectReference _obj, global::Microsoft.UI.Composition.Compositor owner, global::Microsoft.UI.Composition.CompositionEasingFunctionMode mode)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __owner = default;
            IntPtr __retval = default;
            try
            {
                __owner = global::ABI.Microsoft.UI.Composition.Compositor.CreateMarshaler2(owner);
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, global::Microsoft.UI.Composition.CompositionEasingFunctionMode, IntPtr*, int>**)ThisPtr)[16](ThisPtr, MarshalInspectable<object>.GetAbi(__owner), mode, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Composition.SineEasingFunction.FromAbi(__retval);
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__owner);
                global::ABI.Microsoft.UI.Composition.SineEasingFunction.DisposeAbi(__retval);
            }
        }


        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0xFF, 0x87, 0x4B, 0x9D, 0xCA, 0x6D, 0xE2, 0x5C, 0xB6, 0x9C, 0xE5, 0x27, 0x5, 0xB0, 0xFE, 0xF4 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("9D4B87FF-6DCA-5CE2-B69C-E52705B0FEF4")]
    internal interface ICompositionEasingFunctionStatics : global::Microsoft.UI.Composition.ICompositionEasingFunctionStatics
    {
    }
    internal static class ICompositionEffectBrushMethods
    {


        internal static unsafe global::Microsoft.UI.Composition.CompositionBrush GetSourceParameter(IObjectReference _obj, string name)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                MarshalString.Pinnable __name = new(name);
                fixed(void* ___name = __name)
                {
                    global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, IntPtr*, int>**)ThisPtr)[6](ThisPtr, MarshalString.GetAbi(ref __name), &__retval));
                    global::System.GC.KeepAlive(_obj);
                    return global::ABI.Microsoft.UI.Composition.CompositionBrush.FromAbi(__retval);
                }
            }
            finally
            {
                global::ABI.Microsoft.UI.Composition.CompositionBrush.DisposeAbi(__retval);
            }
        }

        internal static unsafe void SetSourceParameter(IObjectReference _obj, string name, global::Microsoft.UI.Composition.CompositionBrush source)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __source = default;
            try
            {
                __source = global::ABI.Microsoft.UI.Composition.CompositionBrush.CreateMarshaler2(source);
                MarshalString.Pinnable __name = new(name);
                fixed(void* ___name = __name)
                {
                    global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, IntPtr, int>**)ThisPtr)[7](ThisPtr, MarshalString.GetAbi(ref __name), MarshalInspectable<object>.GetAbi(__source)));
                    global::System.GC.KeepAlive(_obj);
                }
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__source);
            }
        }


        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0xAB, 0xBB, 0xE0, 0x62, 0x45, 0x1F, 0x44, 0x5A, 0x9D, 0xDF, 0xF0, 0xC3, 0x8A, 0x2, 0xED, 0x85 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("62E0BBAB-1F45-5A44-9DDF-F0C38A02ED85")]
    internal interface ICompositionEffectBrush : global::Microsoft.UI.Composition.ICompositionEffectBrush
    {
    }
    internal static class ICompositionEffectFactoryMethods
    {


        internal static unsafe global::Microsoft.UI.Composition.CompositionEffectBrush CreateBrush(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[6](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Composition.CompositionEffectBrush.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.UI.Composition.CompositionEffectBrush.DisposeAbi(__retval);
            }
        }
        internal static unsafe global::System.Exception get_ExtendedError(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::ABI.System.Exception __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::ABI.System.Exception*, int>**)ThisPtr)[7](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.System.Exception.FromAbi(__retval);
            }
            finally
            {
                global::ABI.System.Exception.DisposeAbi(__retval);
            }
        }

        internal static unsafe global::Microsoft.UI.Composition.CompositionEffectFactoryLoadStatus get_LoadStatus(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::Microsoft.UI.Composition.CompositionEffectFactoryLoadStatus __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::Microsoft.UI.Composition.CompositionEffectFactoryLoadStatus*, int>**)ThisPtr)[8](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0x7A, 0x40, 0xF, 0xC5, 0x31, 0x2, 0xD2, 0x5E, 0xB7, 0xA7, 0xCA, 0x66, 0xD3, 0xE1, 0x4B, 0x3B };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("C50F407A-0231-5ED2-B7A7-CA66D3E14B3B")]
    internal interface ICompositionEffectFactory : global::Microsoft.UI.Composition.ICompositionEffectFactory
    {
    }
    internal static class ICompositionEffectSourceParameterMethods
    {

        internal static unsafe string get_Name(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[6](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return MarshalString.FromAbi(__retval);
            }
            finally
            {
                MarshalString.DisposeAbi(__retval);
            }
        }



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0x67, 0x33, 0xCE, 0xBE, 0x4, 0x57, 0xF7, 0x59, 0xBE, 0x8C, 0xD6, 0x29, 0x3A, 0xF9, 0xC9, 0x5F };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("BECE3367-5704-59F7-BE8C-D6293AF9C95F")]
    internal interface ICompositionEffectSourceParameter : global::Microsoft.UI.Composition.ICompositionEffectSourceParameter
    {
    }
    internal static class ICompositionEffectSourceParameterFactoryMethods
    {


        internal static unsafe global::Microsoft.UI.Composition.CompositionEffectSourceParameter Create(IObjectReference _obj, string name)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                MarshalString.Pinnable __name = new(name);
                fixed(void* ___name = __name)
                {
                    global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, IntPtr*, int>**)ThisPtr)[6](ThisPtr, MarshalString.GetAbi(ref __name), &__retval));
                    global::System.GC.KeepAlive(_obj);
                    return global::ABI.Microsoft.UI.Composition.CompositionEffectSourceParameter.FromAbi(__retval);
                }
            }
            finally
            {
                global::ABI.Microsoft.UI.Composition.CompositionEffectSourceParameter.DisposeAbi(__retval);
            }
        }


        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0x54, 0x59, 0x18, 0x26, 0x89, 0x44, 0xE, 0x5D, 0xAE, 0x4D, 0x7B, 0xC4, 0xBB, 0xBC, 0x61, 0x61 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("26185954-4489-5D0E-AE4D-7BC4BBBC6161")]
    internal interface ICompositionEffectSourceParameterFactory : global::Microsoft.UI.Composition.ICompositionEffectSourceParameterFactory
    {
    }
    internal static class ICompositionEllipseGeometryMethods
    {

        internal static unsafe global::System.Numerics.Vector2 get_Center(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::System.Numerics.Vector2 __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::System.Numerics.Vector2*, int>**)ThisPtr)[6](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }
        internal static unsafe void set_Center(IObjectReference _obj, global::System.Numerics.Vector2 value)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::System.Numerics.Vector2, int>**)ThisPtr)[7](ThisPtr, value));
            global::System.GC.KeepAlive(_obj);
        }

        internal static unsafe global::System.Numerics.Vector2 get_Radius(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::System.Numerics.Vector2 __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::System.Numerics.Vector2*, int>**)ThisPtr)[8](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }
        internal static unsafe void set_Radius(IObjectReference _obj, global::System.Numerics.Vector2 value)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::System.Numerics.Vector2, int>**)ThisPtr)[9](ThisPtr, value));
            global::System.GC.KeepAlive(_obj);
        }



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0x42, 0x10, 0xA2, 0xF2, 0x57, 0x7A, 0xC1, 0x58, 0x8B, 0x47, 0x8B, 0xC8, 0xB2, 0x1D, 0x3A, 0xA0 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("F2A21042-7A57-58C1-8B47-8BC8B21D3AA0")]
    internal interface ICompositionEllipseGeometry : global::Microsoft.UI.Composition.ICompositionEllipseGeometry
    {
    }
    internal static class ICompositionGeometricClipMethods
    {

        internal static unsafe global::Microsoft.UI.Composition.CompositionGeometry get_Geometry(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[6](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Composition.CompositionGeometry.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.UI.Composition.CompositionGeometry.DisposeAbi(__retval);
            }
        }
        internal static unsafe void set_Geometry(IObjectReference _obj, global::Microsoft.UI.Composition.CompositionGeometry value)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __value = default;
            try
            {
                __value = global::ABI.Microsoft.UI.Composition.CompositionGeometry.CreateMarshaler2(value);
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, int>**)ThisPtr)[7](ThisPtr, MarshalInspectable<object>.GetAbi(__value)));
                global::System.GC.KeepAlive(_obj);
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__value);
            }
        }

        internal static unsafe global::Microsoft.UI.Composition.CompositionViewBox get_ViewBox(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[8](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Composition.CompositionViewBox.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.UI.Composition.CompositionViewBox.DisposeAbi(__retval);
            }
        }
        internal static unsafe void set_ViewBox(IObjectReference _obj, global::Microsoft.UI.Composition.CompositionViewBox value)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __value = default;
            try
            {
                __value = global::ABI.Microsoft.UI.Composition.CompositionViewBox.CreateMarshaler2(value);
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, int>**)ThisPtr)[9](ThisPtr, MarshalInspectable<object>.GetAbi(__value)));
                global::System.GC.KeepAlive(_obj);
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__value);
            }
        }



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0xC5, 0xA8, 0xC0, 0xE3, 0x97, 0x52, 0x69, 0x5D, 0x8B, 0x91, 0xF5, 0x33, 0xB, 0xB1, 0xCB, 0x27 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("E3C0A8C5-5297-5D69-8B91-F5330BB1CB27")]
    internal interface ICompositionGeometricClip : global::Microsoft.UI.Composition.ICompositionGeometricClip
    {
    }
    internal static class ICompositionGeometryMethods
    {

        internal static unsafe float get_TrimEnd(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            float __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, float*, int>**)ThisPtr)[6](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }
        internal static unsafe void set_TrimEnd(IObjectReference _obj, float value)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, float, int>**)ThisPtr)[7](ThisPtr, value));
            global::System.GC.KeepAlive(_obj);
        }

        internal static unsafe float get_TrimOffset(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            float __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, float*, int>**)ThisPtr)[8](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }
        internal static unsafe void set_TrimOffset(IObjectReference _obj, float value)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, float, int>**)ThisPtr)[9](ThisPtr, value));
            global::System.GC.KeepAlive(_obj);
        }

        internal static unsafe float get_TrimStart(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            float __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, float*, int>**)ThisPtr)[10](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }
        internal static unsafe void set_TrimStart(IObjectReference _obj, float value)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, float, int>**)ThisPtr)[11](ThisPtr, value));
            global::System.GC.KeepAlive(_obj);
        }



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0xB2, 0xBD, 0x40, 0x4E, 0xB, 0x45, 0x81, 0x5A, 0x9E, 0x9B, 0x14, 0x94, 0x17, 0x98, 0xC, 0xC4 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("4E40BDB2-450B-5A81-9E9B-149417980CC4")]
    internal interface ICompositionGeometry : global::Microsoft.UI.Composition.ICompositionGeometry
    {
    }
    internal static class ICompositionGeometryFactoryMethods
    {



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0x2B, 0x80, 0xFB, 0xB2, 0x91, 0xC6, 0x54, 0x55, 0x83, 0x12, 0x9C, 0x6D, 0x35, 0x8D, 0x6B, 0x9E };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("B2FB802B-C691-5554-8312-9C6D358D6B9E")]
    internal interface ICompositionGeometryFactory : global::Microsoft.UI.Composition.ICompositionGeometryFactory
    {
    }
    internal static class ICompositionGradientBrushMethods
    {

        internal static unsafe global::System.Numerics.Vector2 get_AnchorPoint(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::System.Numerics.Vector2 __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::System.Numerics.Vector2*, int>**)ThisPtr)[6](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }
        internal static unsafe void set_AnchorPoint(IObjectReference _obj, global::System.Numerics.Vector2 value)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::System.Numerics.Vector2, int>**)ThisPtr)[7](ThisPtr, value));
            global::System.GC.KeepAlive(_obj);
        }

        internal static unsafe global::System.Numerics.Vector2 get_CenterPoint(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::System.Numerics.Vector2 __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::System.Numerics.Vector2*, int>**)ThisPtr)[8](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }
        internal static unsafe void set_CenterPoint(IObjectReference _obj, global::System.Numerics.Vector2 value)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::System.Numerics.Vector2, int>**)ThisPtr)[9](ThisPtr, value));
            global::System.GC.KeepAlive(_obj);
        }

        internal static unsafe global::Microsoft.UI.Composition.CompositionColorGradientStopCollection get_ColorStops(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[10](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Composition.CompositionColorGradientStopCollection.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.UI.Composition.CompositionColorGradientStopCollection.DisposeAbi(__retval);
            }
        }

        internal static unsafe global::Microsoft.UI.Composition.CompositionGradientExtendMode get_ExtendMode(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::Microsoft.UI.Composition.CompositionGradientExtendMode __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::Microsoft.UI.Composition.CompositionGradientExtendMode*, int>**)ThisPtr)[11](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }
        internal static unsafe void set_ExtendMode(IObjectReference _obj, global::Microsoft.UI.Composition.CompositionGradientExtendMode value)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::Microsoft.UI.Composition.CompositionGradientExtendMode, int>**)ThisPtr)[12](ThisPtr, value));
            global::System.GC.KeepAlive(_obj);
        }

        internal static unsafe global::Microsoft.UI.Composition.CompositionColorSpace get_InterpolationSpace(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::Microsoft.UI.Composition.CompositionColorSpace __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::Microsoft.UI.Composition.CompositionColorSpace*, int>**)ThisPtr)[13](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }
        internal static unsafe void set_InterpolationSpace(IObjectReference _obj, global::Microsoft.UI.Composition.CompositionColorSpace value)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::Microsoft.UI.Composition.CompositionColorSpace, int>**)ThisPtr)[14](ThisPtr, value));
            global::System.GC.KeepAlive(_obj);
        }

        internal static unsafe global::System.Numerics.Vector2 get_Offset(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::System.Numerics.Vector2 __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::System.Numerics.Vector2*, int>**)ThisPtr)[15](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }
        internal static unsafe void set_Offset(IObjectReference _obj, global::System.Numerics.Vector2 value)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::System.Numerics.Vector2, int>**)ThisPtr)[16](ThisPtr, value));
            global::System.GC.KeepAlive(_obj);
        }

        internal static unsafe float get_RotationAngle(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            float __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, float*, int>**)ThisPtr)[17](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }
        internal static unsafe void set_RotationAngle(IObjectReference _obj, float value)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, float, int>**)ThisPtr)[18](ThisPtr, value));
            global::System.GC.KeepAlive(_obj);
        }

        internal static unsafe float get_RotationAngleInDegrees(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            float __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, float*, int>**)ThisPtr)[19](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }
        internal static unsafe void set_RotationAngleInDegrees(IObjectReference _obj, float value)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, float, int>**)ThisPtr)[20](ThisPtr, value));
            global::System.GC.KeepAlive(_obj);
        }

        internal static unsafe global::System.Numerics.Vector2 get_Scale(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::System.Numerics.Vector2 __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::System.Numerics.Vector2*, int>**)ThisPtr)[21](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }
        internal static unsafe void set_Scale(IObjectReference _obj, global::System.Numerics.Vector2 value)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::System.Numerics.Vector2, int>**)ThisPtr)[22](ThisPtr, value));
            global::System.GC.KeepAlive(_obj);
        }

        internal static unsafe global::System.Numerics.Matrix3x2 get_TransformMatrix(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::System.Numerics.Matrix3x2 __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::System.Numerics.Matrix3x2*, int>**)ThisPtr)[23](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }
        internal static unsafe void set_TransformMatrix(IObjectReference _obj, global::System.Numerics.Matrix3x2 value)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::System.Numerics.Matrix3x2, int>**)ThisPtr)[24](ThisPtr, value));
            global::System.GC.KeepAlive(_obj);
        }



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0xFB, 0xD1, 0x65, 0x91, 0x38, 0xC7, 0x44, 0x5F, 0xAD, 0xDC, 0x30, 0x9E, 0xE0, 0x71, 0xD5, 0x88 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("9165D1FB-C738-5F44-ADDC-309EE071D588")]
    internal interface ICompositionGradientBrush : global::Microsoft.UI.Composition.ICompositionGradientBrush
    {
    }
    internal static class ICompositionGradientBrush2Methods
    {

        internal static unsafe global::Microsoft.UI.Composition.CompositionMappingMode get_MappingMode(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::Microsoft.UI.Composition.CompositionMappingMode __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::Microsoft.UI.Composition.CompositionMappingMode*, int>**)ThisPtr)[6](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }
        internal static unsafe void set_MappingMode(IObjectReference _obj, global::Microsoft.UI.Composition.CompositionMappingMode value)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::Microsoft.UI.Composition.CompositionMappingMode, int>**)ThisPtr)[7](ThisPtr, value));
            global::System.GC.KeepAlive(_obj);
        }



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0xF3, 0xED, 0xE9, 0x3, 0x3D, 0xEE, 0xFC, 0x58, 0x8C, 0xB, 0x95, 0xE4, 0xB6, 0x6, 0xA, 0x94 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("03E9EDF3-EE3D-58FC-8C0B-95E4B6060A94")]
    internal interface ICompositionGradientBrush2 : global::Microsoft.UI.Composition.ICompositionGradientBrush2
    {
    }
    internal static class ICompositionGradientBrushFactoryMethods
    {



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0x55, 0xB1, 0x43, 0xB0, 0x40, 0x4B, 0xD, 0x59, 0xA0, 0xD9, 0xF8, 0xC1, 0xA7, 0xE0, 0xC8, 0x8F };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("B043B155-4B40-590D-A0D9-F8C1A7E0C88F")]
    internal interface ICompositionGradientBrushFactory : global::Microsoft.UI.Composition.ICompositionGradientBrushFactory
    {
    }
    internal static class ICompositionGraphicsDeviceMethods
    {


        internal static unsafe global::Microsoft.UI.Composition.CompositionDrawingSurface CreateDrawingSurface(IObjectReference _obj, global::Windows.Foundation.Size sizePixels, global::Microsoft.Graphics.DirectX.DirectXPixelFormat pixelFormat, global::Microsoft.Graphics.DirectX.DirectXAlphaMode alphaMode)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::Windows.Foundation.Size, global::Microsoft.Graphics.DirectX.DirectXPixelFormat, global::Microsoft.Graphics.DirectX.DirectXAlphaMode, IntPtr*, int>**)ThisPtr)[6](ThisPtr, sizePixels, pixelFormat, alphaMode, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Composition.CompositionDrawingSurface.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.UI.Composition.CompositionDrawingSurface.DisposeAbi(__retval);
            }
        }

        private volatile static global::System.Runtime.CompilerServices.ConditionalWeakTable<object, global::ABI.WinRT.Interop.EventSource<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Composition.CompositionGraphicsDevice, global::Microsoft.UI.Composition.RenderingDeviceReplacedEventArgs>>> _RenderingDeviceReplaced_;
        private static global::System.Runtime.CompilerServices.ConditionalWeakTable<object, global::ABI.WinRT.Interop.EventSource<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Composition.CompositionGraphicsDevice, global::Microsoft.UI.Composition.RenderingDeviceReplacedEventArgs>>> MakeRenderingDeviceReplacedTable()
        {
            
            global::System.Threading.Interlocked.CompareExchange(ref _RenderingDeviceReplaced_, new(), null);
            return _RenderingDeviceReplaced_;
        }
        private static global::System.Runtime.CompilerServices.ConditionalWeakTable<object, global::ABI.WinRT.Interop.EventSource<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Composition.CompositionGraphicsDevice, global::Microsoft.UI.Composition.RenderingDeviceReplacedEventArgs>>> _RenderingDeviceReplaced => _RenderingDeviceReplaced_ ?? MakeRenderingDeviceReplacedTable();



        internal static unsafe global::ABI.WinRT.Interop.EventSource<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Composition.CompositionGraphicsDevice, global::Microsoft.UI.Composition.RenderingDeviceReplacedEventArgs>> Get_RenderingDeviceReplaced2(IObjectReference _obj, object _thisObj)
        {
            return _RenderingDeviceReplaced.GetValue(_thisObj, (key) =>
            {

                var ThisPtr = _obj.ThisPtr;

                return 
                new _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_UI_Composition_CompositionGraphicsDevice__global__Microsoft_UI_Composition_RenderingDeviceReplacedEventArgs_(_obj,
                (*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, global::WinRT.EventRegistrationToken*, int>**)ThisPtr)[7],
                (*(delegate* unmanaged[Stdcall]<IntPtr, global::WinRT.EventRegistrationToken, int>**)ThisPtr)[8],
                0);
            });
        }


        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0xF5, 0xE3, 0x47, 0x3D, 0x6C, 0xF7, 0x1F, 0x5F, 0x88, 0xC0, 0x54, 0xA5, 0xF2, 0xA0, 0x90, 0xD6 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("3D47E3F5-F76C-5F1F-88C0-54A5F2A090D6")]
    internal interface ICompositionGraphicsDevice : global::Microsoft.UI.Composition.ICompositionGraphicsDevice
    {
    }
    internal static class ICompositionGraphicsDevice2Methods
    {


        internal static unsafe global::Microsoft.UI.Composition.CompositionDrawingSurface CreateDrawingSurface2(IObjectReference _obj, global::Windows.Graphics.SizeInt32 sizePixels, global::Microsoft.Graphics.DirectX.DirectXPixelFormat pixelFormat, global::Microsoft.Graphics.DirectX.DirectXAlphaMode alphaMode)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::Windows.Graphics.SizeInt32, global::Microsoft.Graphics.DirectX.DirectXPixelFormat, global::Microsoft.Graphics.DirectX.DirectXAlphaMode, IntPtr*, int>**)ThisPtr)[6](ThisPtr, sizePixels, pixelFormat, alphaMode, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Composition.CompositionDrawingSurface.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.UI.Composition.CompositionDrawingSurface.DisposeAbi(__retval);
            }
        }

        internal static unsafe global::Microsoft.UI.Composition.CompositionVirtualDrawingSurface CreateVirtualDrawingSurface(IObjectReference _obj, global::Windows.Graphics.SizeInt32 sizePixels, global::Microsoft.Graphics.DirectX.DirectXPixelFormat pixelFormat, global::Microsoft.Graphics.DirectX.DirectXAlphaMode alphaMode)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::Windows.Graphics.SizeInt32, global::Microsoft.Graphics.DirectX.DirectXPixelFormat, global::Microsoft.Graphics.DirectX.DirectXAlphaMode, IntPtr*, int>**)ThisPtr)[7](ThisPtr, sizePixels, pixelFormat, alphaMode, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Composition.CompositionVirtualDrawingSurface.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.UI.Composition.CompositionVirtualDrawingSurface.DisposeAbi(__retval);
            }
        }


        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0x7, 0x67, 0xD5, 0xFF, 0x7A, 0x1C, 0xA0, 0x5D, 0xAA, 0x1A, 0x49, 0xCB, 0x93, 0x5B, 0x5D, 0xCA };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("FFD56707-1C7A-5DA0-AA1A-49CB935B5DCA")]
    internal interface ICompositionGraphicsDevice2 : global::Microsoft.UI.Composition.ICompositionGraphicsDevice2
    {
    }
    internal static class ICompositionGraphicsDevice3Methods
    {


        internal static unsafe global::Microsoft.UI.Composition.CompositionMipmapSurface CreateMipmapSurface(IObjectReference _obj, global::Windows.Graphics.SizeInt32 sizePixels, global::Microsoft.Graphics.DirectX.DirectXPixelFormat pixelFormat, global::Microsoft.Graphics.DirectX.DirectXAlphaMode alphaMode)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::Windows.Graphics.SizeInt32, global::Microsoft.Graphics.DirectX.DirectXPixelFormat, global::Microsoft.Graphics.DirectX.DirectXAlphaMode, IntPtr*, int>**)ThisPtr)[6](ThisPtr, sizePixels, pixelFormat, alphaMode, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Composition.CompositionMipmapSurface.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.UI.Composition.CompositionMipmapSurface.DisposeAbi(__retval);
            }
        }

        internal static unsafe void Trim(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, int>**)ThisPtr)[7](ThisPtr));
            global::System.GC.KeepAlive(_obj);
        }


        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0x87, 0xF4, 0xBE, 0xFB, 0xA4, 0xD5, 0xB2, 0x5D, 0xBF, 0x3E, 0x9F, 0x48, 0x8E, 0x65, 0x9D, 0x11 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("FBBEF487-D5A4-5DB2-BF3E-9F488E659D11")]
    internal interface ICompositionGraphicsDevice3 : global::Microsoft.UI.Composition.ICompositionGraphicsDevice3
    {
    }
    internal static class ICompositionGraphicsDevice4Methods
    {


        internal static unsafe global::Windows.Foundation.IAsyncOperation<global::Microsoft.UI.Composition.ICompositionSurface> CaptureAsync(IObjectReference _obj, global::Microsoft.UI.Composition.Visual captureVisual, global::Windows.Graphics.SizeInt32 size, global::Microsoft.Graphics.DirectX.DirectXPixelFormat pixelFormat, global::Microsoft.Graphics.DirectX.DirectXAlphaMode alphaMode, float sdrBoost)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __captureVisual = default;
            IntPtr __retval = default;
            try
            {
                __captureVisual = global::ABI.Microsoft.UI.Composition.Visual.CreateMarshaler2(captureVisual);
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, global::Windows.Graphics.SizeInt32, global::Microsoft.Graphics.DirectX.DirectXPixelFormat, global::Microsoft.Graphics.DirectX.DirectXAlphaMode, float, IntPtr*, int>**)ThisPtr)[6](ThisPtr, MarshalInspectable<object>.GetAbi(__captureVisual), size, pixelFormat, alphaMode, sdrBoost, &__retval));
                global::System.GC.KeepAlive(_obj);
                _ = global::WinRT.GenericTypeInstantiations.Windows_Foundation_IAsyncOperation_1_Microsoft_UI_Composition_ICompositionSurface.EnsureInitialized();
                return MarshalInterface<global::Windows.Foundation.IAsyncOperation<global::Microsoft.UI.Composition.ICompositionSurface>>.FromAbi(__retval);
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__captureVisual);
                MarshalInterface<global::Windows.Foundation.IAsyncOperation<global::Microsoft.UI.Composition.ICompositionSurface>>.DisposeAbi(__retval);
            }
        }


        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0x4, 0x5C, 0x29, 0x2B, 0x2E, 0x7B, 0xE, 0x5B, 0x97, 0x62, 0x29, 0x92, 0x31, 0x3B, 0x70, 0xC };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("2B295C04-7B2E-5B0E-9762-2992313B700C")]
    internal interface ICompositionGraphicsDevice4 : global::Microsoft.UI.Composition.ICompositionGraphicsDevice4
    {
    }
    internal static class ICompositionLightMethods
    {

        internal static unsafe global::Microsoft.UI.Composition.VisualUnorderedCollection get_Targets(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[6](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Composition.VisualUnorderedCollection.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.UI.Composition.VisualUnorderedCollection.DisposeAbi(__retval);
            }
        }



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0x77, 0x3E, 0x63, 0x6D, 0xB8, 0xA6, 0x2D, 0x5A, 0x82, 0x35, 0xE0, 0xC3, 0x80, 0xC3, 0xB4, 0x7B };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("6D633E77-A6B8-5A2D-8235-E0C380C3B47B")]
    internal interface ICompositionLight : global::Microsoft.UI.Composition.ICompositionLight
    {
    }
    internal static class ICompositionLight2Methods
    {

        internal static unsafe global::Microsoft.UI.Composition.VisualUnorderedCollection get_ExclusionsFromTargets(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[6](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Composition.VisualUnorderedCollection.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.UI.Composition.VisualUnorderedCollection.DisposeAbi(__retval);
            }
        }



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0xA4, 0x40, 0xB9, 0xB, 0xEF, 0x5, 0x20, 0x59, 0xBA, 0xE1, 0x91, 0x8B, 0x36, 0xD4, 0x43, 0x80 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("0BB940A4-05EF-5920-BAE1-918B36D44380")]
    internal interface ICompositionLight2 : global::Microsoft.UI.Composition.ICompositionLight2
    {
    }
    internal static class ICompositionLight3Methods
    {

        internal static unsafe bool get_IsEnabled(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            byte __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, byte*, int>**)ThisPtr)[6](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval != 0;
        }
        internal static unsafe void set_IsEnabled(IObjectReference _obj, bool value)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, byte, int>**)ThisPtr)[7](ThisPtr, (byte)(value ? 1 : 0)));
            global::System.GC.KeepAlive(_obj);
        }



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0x59, 0x48, 0xCE, 0x95, 0x55, 0xDD, 0x38, 0x5C, 0xA3, 0xEB, 0x13, 0xD0, 0x53, 0xCE, 0xBB, 0x1E };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("95CE4859-DD55-5C38-A3EB-13D053CEBB1E")]
    internal interface ICompositionLight3 : global::Microsoft.UI.Composition.ICompositionLight3
    {
    }
    internal static class ICompositionLightFactoryMethods
    {



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0xED, 0xCA, 0x29, 0xCB, 0x45, 0x92, 0xA6, 0x51, 0xBA, 0x56, 0xAD, 0xDB, 0xAE, 0xFA, 0x54, 0xCC };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("CB29CAED-9245-51A6-BA56-ADDBAEFA54CC")]
    internal interface ICompositionLightFactory : global::Microsoft.UI.Composition.ICompositionLightFactory
    {
    }
    internal static class ICompositionLineGeometryMethods
    {

        internal static unsafe global::System.Numerics.Vector2 get_End(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::System.Numerics.Vector2 __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::System.Numerics.Vector2*, int>**)ThisPtr)[8](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }
        internal static unsafe void set_End(IObjectReference _obj, global::System.Numerics.Vector2 value)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::System.Numerics.Vector2, int>**)ThisPtr)[9](ThisPtr, value));
            global::System.GC.KeepAlive(_obj);
        }

        internal static unsafe global::System.Numerics.Vector2 get_Start(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::System.Numerics.Vector2 __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::System.Numerics.Vector2*, int>**)ThisPtr)[6](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }
        internal static unsafe void set_Start(IObjectReference _obj, global::System.Numerics.Vector2 value)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::System.Numerics.Vector2, int>**)ThisPtr)[7](ThisPtr, value));
            global::System.GC.KeepAlive(_obj);
        }



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0x82, 0x93, 0x9F, 0x48, 0x86, 0xC1, 0x36, 0x59, 0x89, 0x46, 0xC4, 0xF9, 0x27, 0xE8, 0x44, 0xAA };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("489F9382-C186-5936-8946-C4F927E844AA")]
    internal interface ICompositionLineGeometry : global::Microsoft.UI.Composition.ICompositionLineGeometry
    {
    }
    internal static class ICompositionLinearGradientBrushMethods
    {

        internal static unsafe global::System.Numerics.Vector2 get_EndPoint(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::System.Numerics.Vector2 __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::System.Numerics.Vector2*, int>**)ThisPtr)[6](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }
        internal static unsafe void set_EndPoint(IObjectReference _obj, global::System.Numerics.Vector2 value)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::System.Numerics.Vector2, int>**)ThisPtr)[7](ThisPtr, value));
            global::System.GC.KeepAlive(_obj);
        }

        internal static unsafe global::System.Numerics.Vector2 get_StartPoint(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::System.Numerics.Vector2 __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::System.Numerics.Vector2*, int>**)ThisPtr)[8](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }
        internal static unsafe void set_StartPoint(IObjectReference _obj, global::System.Numerics.Vector2 value)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::System.Numerics.Vector2, int>**)ThisPtr)[9](ThisPtr, value));
            global::System.GC.KeepAlive(_obj);
        }



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0x52, 0xFB, 0x26, 0xF7, 0xC, 0x27, 0xB1, 0x58, 0xA9, 0x2, 0x89, 0x57, 0x67, 0x72, 0xDE, 0xDC };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("F726FB52-270C-58B1-A902-89576772DEDC")]
    internal interface ICompositionLinearGradientBrush : global::Microsoft.UI.Composition.ICompositionLinearGradientBrush
    {
    }
    internal static class ICompositionMaskBrushMethods
    {

        internal static unsafe global::Microsoft.UI.Composition.CompositionBrush get_Mask(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[6](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Composition.CompositionBrush.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.UI.Composition.CompositionBrush.DisposeAbi(__retval);
            }
        }
        internal static unsafe void set_Mask(IObjectReference _obj, global::Microsoft.UI.Composition.CompositionBrush value)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __value = default;
            try
            {
                __value = global::ABI.Microsoft.UI.Composition.CompositionBrush.CreateMarshaler2(value);
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, int>**)ThisPtr)[7](ThisPtr, MarshalInspectable<object>.GetAbi(__value)));
                global::System.GC.KeepAlive(_obj);
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__value);
            }
        }

        internal static unsafe global::Microsoft.UI.Composition.CompositionBrush get_Source(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[8](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Composition.CompositionBrush.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.UI.Composition.CompositionBrush.DisposeAbi(__retval);
            }
        }
        internal static unsafe void set_Source(IObjectReference _obj, global::Microsoft.UI.Composition.CompositionBrush value)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __value = default;
            try
            {
                __value = global::ABI.Microsoft.UI.Composition.CompositionBrush.CreateMarshaler2(value);
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, int>**)ThisPtr)[9](ThisPtr, MarshalInspectable<object>.GetAbi(__value)));
                global::System.GC.KeepAlive(_obj);
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__value);
            }
        }



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0x86, 0x27, 0x50, 0xC9, 0xAA, 0x65, 0xE5, 0x5B, 0xA6, 0x79, 0xC3, 0xB5, 0xDB, 0xFB, 0xD, 0xC6 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("C9502786-65AA-5BE5-A679-C3B5DBFB0DC6")]
    internal interface ICompositionMaskBrush : global::Microsoft.UI.Composition.ICompositionMaskBrush
    {
    }
    internal static class ICompositionMipmapSurfaceMethods
    {


        internal static unsafe global::Microsoft.UI.Composition.CompositionDrawingSurface GetDrawingSurfaceForLevel(IObjectReference _obj, uint level)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, uint, IntPtr*, int>**)ThisPtr)[10](ThisPtr, level, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Composition.CompositionDrawingSurface.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.UI.Composition.CompositionDrawingSurface.DisposeAbi(__retval);
            }
        }
        internal static unsafe global::Microsoft.Graphics.DirectX.DirectXAlphaMode get_AlphaMode(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::Microsoft.Graphics.DirectX.DirectXAlphaMode __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::Microsoft.Graphics.DirectX.DirectXAlphaMode*, int>**)ThisPtr)[7](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }

        internal static unsafe uint get_LevelCount(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            uint __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, uint*, int>**)ThisPtr)[6](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }

        internal static unsafe global::Microsoft.Graphics.DirectX.DirectXPixelFormat get_PixelFormat(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::Microsoft.Graphics.DirectX.DirectXPixelFormat __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::Microsoft.Graphics.DirectX.DirectXPixelFormat*, int>**)ThisPtr)[8](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }

        internal static unsafe global::Windows.Graphics.SizeInt32 get_SizeInt32(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::Windows.Graphics.SizeInt32 __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::Windows.Graphics.SizeInt32*, int>**)ThisPtr)[9](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0x47, 0x1E, 0x1F, 0x68, 0x43, 0x6E, 0x55, 0x5B, 0xBE, 0x3A, 0xE5, 0xC8, 0x58, 0xA2, 0xD5, 0xFA };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("681F1E47-6E43-5B55-BE3A-E5C858A2D5FA")]
    internal interface ICompositionMipmapSurface : global::Microsoft.UI.Composition.ICompositionMipmapSurface
    {
    }
    internal static class ICompositionNineGridBrushMethods
    {


        internal static unsafe void SetInsets(IObjectReference _obj, float inset)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, float, int>**)ThisPtr)[26](ThisPtr, inset));
            global::System.GC.KeepAlive(_obj);
        }

        internal static unsafe void SetInsets(IObjectReference _obj, float left, float top, float right, float bottom)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, float, float, float, float, int>**)ThisPtr)[27](ThisPtr, left, top, right, bottom));
            global::System.GC.KeepAlive(_obj);
        }

        internal static unsafe void SetInsetScales(IObjectReference _obj, float scale)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, float, int>**)ThisPtr)[28](ThisPtr, scale));
            global::System.GC.KeepAlive(_obj);
        }

        internal static unsafe void SetInsetScales(IObjectReference _obj, float left, float top, float right, float bottom)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, float, float, float, float, int>**)ThisPtr)[29](ThisPtr, left, top, right, bottom));
            global::System.GC.KeepAlive(_obj);
        }
        internal static unsafe float get_BottomInset(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            float __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, float*, int>**)ThisPtr)[6](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }
        internal static unsafe void set_BottomInset(IObjectReference _obj, float value)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, float, int>**)ThisPtr)[7](ThisPtr, value));
            global::System.GC.KeepAlive(_obj);
        }

        internal static unsafe float get_BottomInsetScale(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            float __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, float*, int>**)ThisPtr)[8](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }
        internal static unsafe void set_BottomInsetScale(IObjectReference _obj, float value)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, float, int>**)ThisPtr)[9](ThisPtr, value));
            global::System.GC.KeepAlive(_obj);
        }

        internal static unsafe bool get_IsCenterHollow(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            byte __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, byte*, int>**)ThisPtr)[10](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval != 0;
        }
        internal static unsafe void set_IsCenterHollow(IObjectReference _obj, bool value)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, byte, int>**)ThisPtr)[11](ThisPtr, (byte)(value ? 1 : 0)));
            global::System.GC.KeepAlive(_obj);
        }

        internal static unsafe float get_LeftInset(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            float __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, float*, int>**)ThisPtr)[12](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }
        internal static unsafe void set_LeftInset(IObjectReference _obj, float value)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, float, int>**)ThisPtr)[13](ThisPtr, value));
            global::System.GC.KeepAlive(_obj);
        }

        internal static unsafe float get_LeftInsetScale(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            float __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, float*, int>**)ThisPtr)[14](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }
        internal static unsafe void set_LeftInsetScale(IObjectReference _obj, float value)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, float, int>**)ThisPtr)[15](ThisPtr, value));
            global::System.GC.KeepAlive(_obj);
        }

        internal static unsafe float get_RightInset(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            float __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, float*, int>**)ThisPtr)[16](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }
        internal static unsafe void set_RightInset(IObjectReference _obj, float value)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, float, int>**)ThisPtr)[17](ThisPtr, value));
            global::System.GC.KeepAlive(_obj);
        }

        internal static unsafe float get_RightInsetScale(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            float __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, float*, int>**)ThisPtr)[18](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }
        internal static unsafe void set_RightInsetScale(IObjectReference _obj, float value)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, float, int>**)ThisPtr)[19](ThisPtr, value));
            global::System.GC.KeepAlive(_obj);
        }

        internal static unsafe global::Microsoft.UI.Composition.CompositionBrush get_Source(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[20](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Composition.CompositionBrush.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.UI.Composition.CompositionBrush.DisposeAbi(__retval);
            }
        }
        internal static unsafe void set_Source(IObjectReference _obj, global::Microsoft.UI.Composition.CompositionBrush value)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __value = default;
            try
            {
                __value = global::ABI.Microsoft.UI.Composition.CompositionBrush.CreateMarshaler2(value);
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, int>**)ThisPtr)[21](ThisPtr, MarshalInspectable<object>.GetAbi(__value)));
                global::System.GC.KeepAlive(_obj);
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__value);
            }
        }

        internal static unsafe float get_TopInset(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            float __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, float*, int>**)ThisPtr)[22](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }
        internal static unsafe void set_TopInset(IObjectReference _obj, float value)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, float, int>**)ThisPtr)[23](ThisPtr, value));
            global::System.GC.KeepAlive(_obj);
        }

        internal static unsafe float get_TopInsetScale(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            float __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, float*, int>**)ThisPtr)[24](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }
        internal static unsafe void set_TopInsetScale(IObjectReference _obj, float value)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, float, int>**)ThisPtr)[25](ThisPtr, value));
            global::System.GC.KeepAlive(_obj);
        }



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0x21, 0x3D, 0x7A, 0xC7, 0xEE, 0xC7, 0x7A, 0x51, 0x98, 0xF4, 0xAD, 0x9A, 0x72, 0x2, 0xBC, 0x86 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("C77A3D21-C7EE-517A-98F4-AD9A7202BC86")]
    internal interface ICompositionNineGridBrush : global::Microsoft.UI.Composition.ICompositionNineGridBrush
    {
    }
    internal static class ICompositionNotificationDeferralMethods
    {


        internal static unsafe void Complete(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, int>**)ThisPtr)[6](ThisPtr));
            global::System.GC.KeepAlive(_obj);
        }


        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0xB7, 0x98, 0x66, 0x39, 0x7B, 0x43, 0xCF, 0x5A, 0xAE, 0xC9, 0x63, 0x42, 0xC4, 0x37, 0xFA, 0xF1 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("396698B7-437B-5ACF-AEC9-6342C437FAF1")]
    internal interface ICompositionNotificationDeferral : global::Microsoft.UI.Composition.ICompositionNotificationDeferral
    {
    }
    internal static class ICompositionObjectMethods
    {


        internal static unsafe void StartAnimation(IObjectReference _obj, string propertyName, global::Microsoft.UI.Composition.CompositionAnimation animation)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __animation = default;
            try
            {
                __animation = global::ABI.Microsoft.UI.Composition.CompositionAnimation.CreateMarshaler2(animation);
                MarshalString.Pinnable __propertyName = new(propertyName);
                fixed(void* ___propertyName = __propertyName)
                {
                    global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, IntPtr, int>**)ThisPtr)[8](ThisPtr, MarshalString.GetAbi(ref __propertyName), MarshalInspectable<object>.GetAbi(__animation)));
                    global::System.GC.KeepAlive(_obj);
                }
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__animation);
            }
        }

        internal static unsafe void StopAnimation(IObjectReference _obj, string propertyName)
        {
            var ThisPtr = _obj.ThisPtr;

            MarshalString.Pinnable __propertyName = new(propertyName);
            fixed(void* ___propertyName = __propertyName)
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, int>**)ThisPtr)[9](ThisPtr, MarshalString.GetAbi(ref __propertyName)));
                global::System.GC.KeepAlive(_obj);
            }
        }
        internal static unsafe global::Microsoft.UI.Composition.Compositor get_Compositor(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[6](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Composition.Compositor.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.UI.Composition.Compositor.DisposeAbi(__retval);
            }
        }

        internal static unsafe global::Microsoft.UI.Composition.CompositionPropertySet get_Properties(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[7](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Composition.CompositionPropertySet.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.UI.Composition.CompositionPropertySet.DisposeAbi(__retval);
            }
        }



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0x49, 0x3D, 0x58, 0xE, 0x5E, 0xFB, 0x81, 0x54, 0xA4, 0x26, 0xD3, 0xC4, 0x1E, 0x5, 0x9A, 0x5A };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("0E583D49-FB5E-5481-A426-D3C41E059A5A")]
    internal interface ICompositionObject : global::Microsoft.UI.Composition.ICompositionObject
    {
    }
    internal static class ICompositionObject2Methods
    {


        internal static unsafe void StartAnimationGroup(IObjectReference _obj, global::Microsoft.UI.Composition.ICompositionAnimationBase value)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __value = default;
            try
            {
                __value = MarshalInterface<global::Microsoft.UI.Composition.ICompositionAnimationBase>.CreateMarshaler2(value, global::ABI.Microsoft.UI.Composition.ICompositionAnimationBaseMethods.IID);
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, int>**)ThisPtr)[10](ThisPtr, MarshalInspectable<object>.GetAbi(__value)));
                global::System.GC.KeepAlive(_obj);
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__value);
            }
        }

        internal static unsafe void StopAnimationGroup(IObjectReference _obj, global::Microsoft.UI.Composition.ICompositionAnimationBase value)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __value = default;
            try
            {
                __value = MarshalInterface<global::Microsoft.UI.Composition.ICompositionAnimationBase>.CreateMarshaler2(value, global::ABI.Microsoft.UI.Composition.ICompositionAnimationBaseMethods.IID);
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, int>**)ThisPtr)[11](ThisPtr, MarshalInspectable<object>.GetAbi(__value)));
                global::System.GC.KeepAlive(_obj);
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__value);
            }
        }
        internal static unsafe string get_Comment(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[6](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return MarshalString.FromAbi(__retval);
            }
            finally
            {
                MarshalString.DisposeAbi(__retval);
            }
        }
        internal static unsafe void set_Comment(IObjectReference _obj, string value)
        {
            var ThisPtr = _obj.ThisPtr;

            MarshalString.Pinnable __value = new(value);
            fixed(void* ___value = __value)
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, int>**)ThisPtr)[7](ThisPtr, MarshalString.GetAbi(ref __value)));
                global::System.GC.KeepAlive(_obj);
            }
        }

        internal static unsafe global::Microsoft.UI.Composition.ImplicitAnimationCollection get_ImplicitAnimations(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[8](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Composition.ImplicitAnimationCollection.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.UI.Composition.ImplicitAnimationCollection.DisposeAbi(__retval);
            }
        }
        internal static unsafe void set_ImplicitAnimations(IObjectReference _obj, global::Microsoft.UI.Composition.ImplicitAnimationCollection value)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __value = default;
            try
            {
                __value = global::ABI.Microsoft.UI.Composition.ImplicitAnimationCollection.CreateMarshaler2(value);
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, int>**)ThisPtr)[9](ThisPtr, MarshalInspectable<object>.GetAbi(__value)));
                global::System.GC.KeepAlive(_obj);
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__value);
            }
        }



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0xBF, 0xFE, 0xBB, 0xBC, 0x9C, 0x79, 0xCE, 0x51, 0x9C, 0x82, 0xB6, 0xE4, 0x9E, 0x7E, 0x62, 0xE1 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("BCBBFEBF-799C-51CE-9C82-B6E49E7E62E1")]
    internal interface ICompositionObject2 : global::Microsoft.UI.Composition.ICompositionObject2
    {
    }
    internal static class ICompositionObject3Methods
    {

        internal static unsafe global::Microsoft.UI.Dispatching.DispatcherQueue get_DispatcherQueue(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[6](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Dispatching.DispatcherQueue.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.UI.Dispatching.DispatcherQueue.DisposeAbi(__retval);
            }
        }



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0xF1, 0x5C, 0x3C, 0xD4, 0xDF, 0x47, 0xB8, 0x52, 0xB4, 0x9, 0xD5, 0x83, 0x15, 0x3, 0x90, 0x5E };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("D43C5CF1-47DF-52B8-B409-D5831503905E")]
    internal interface ICompositionObject3 : global::Microsoft.UI.Composition.ICompositionObject3
    {
    }
    internal static class ICompositionObject4Methods
    {


        internal static unsafe global::Microsoft.UI.Composition.AnimationController TryGetAnimationController(IObjectReference _obj, string propertyName)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                MarshalString.Pinnable __propertyName = new(propertyName);
                fixed(void* ___propertyName = __propertyName)
                {
                    global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, IntPtr*, int>**)ThisPtr)[6](ThisPtr, MarshalString.GetAbi(ref __propertyName), &__retval));
                    global::System.GC.KeepAlive(_obj);
                    return global::ABI.Microsoft.UI.Composition.AnimationController.FromAbi(__retval);
                }
            }
            finally
            {
                global::ABI.Microsoft.UI.Composition.AnimationController.DisposeAbi(__retval);
            }
        }


        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0x7C, 0xD5, 0x9A, 0x2, 0x97, 0x54, 0xF3, 0x51, 0x8B, 0x40, 0xE4, 0xE2, 0x35, 0x99, 0x2C, 0x6F };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("029AD57C-5497-51F3-8B40-E4E235992C6F")]
    internal interface ICompositionObject4 : global::Microsoft.UI.Composition.ICompositionObject4
    {
    }
    internal static class ICompositionObject5Methods
    {


        internal static unsafe void StartAnimation(IObjectReference _obj, string propertyName, global::Microsoft.UI.Composition.CompositionAnimation animation, global::Microsoft.UI.Composition.AnimationController animationController)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __animation = default;
            ObjectReferenceValue __animationController = default;
            try
            {
                __animation = global::ABI.Microsoft.UI.Composition.CompositionAnimation.CreateMarshaler2(animation);
                __animationController = global::ABI.Microsoft.UI.Composition.AnimationController.CreateMarshaler2(animationController);
                MarshalString.Pinnable __propertyName = new(propertyName);
                fixed(void* ___propertyName = __propertyName)
                {
                    global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, IntPtr, IntPtr, int>**)ThisPtr)[6](ThisPtr, MarshalString.GetAbi(ref __propertyName), MarshalInspectable<object>.GetAbi(__animation), MarshalInspectable<object>.GetAbi(__animationController)));
                    global::System.GC.KeepAlive(_obj);
                }
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__animation);
                MarshalInspectable<object>.DisposeMarshaler(__animationController);
            }
        }


        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0xD1, 0x26, 0xFD, 0x85, 0x99, 0xBB, 0x92, 0x53, 0x9D, 0xCE, 0xA0, 0x5C, 0xB8, 0x14, 0x58, 0xA5 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("85FD26D1-BB99-5392-9DCE-A05CB81458A5")]
    internal interface ICompositionObject5 : global::Microsoft.UI.Composition.ICompositionObject5
    {
    }
    internal static class ICompositionObjectFactoryMethods
    {



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0xF9, 0xC5, 0x33, 0x61, 0x3B, 0xCD, 0xB2, 0x56, 0x87, 0x6F, 0xEB, 0x84, 0x9D, 0xB1, 0x49, 0x11 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("6133C5F9-CD3B-56B2-876F-EB849DB14911")]
    internal interface ICompositionObjectFactory : global::Microsoft.UI.Composition.ICompositionObjectFactory
    {
    }
    internal static class ICompositionObjectStaticsMethods
    {


        internal static unsafe void StartAnimationWithIAnimationObject(IObjectReference _obj, global::Microsoft.UI.Composition.IAnimationObject target, string propertyName, global::Microsoft.UI.Composition.CompositionAnimation animation)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __target = default;
            ObjectReferenceValue __animation = default;
            try
            {
                __target = MarshalInterface<global::Microsoft.UI.Composition.IAnimationObject>.CreateMarshaler2(target, global::ABI.Microsoft.UI.Composition.IAnimationObjectMethods.IID);
                __animation = global::ABI.Microsoft.UI.Composition.CompositionAnimation.CreateMarshaler2(animation);
                MarshalString.Pinnable __propertyName = new(propertyName);
                fixed(void* ___propertyName = __propertyName)
                {
                    global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, IntPtr, IntPtr, int>**)ThisPtr)[6](ThisPtr, MarshalInspectable<object>.GetAbi(__target), MarshalString.GetAbi(ref __propertyName), MarshalInspectable<object>.GetAbi(__animation)));
                    global::System.GC.KeepAlive(_obj);
                }
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__target);
                MarshalInspectable<object>.DisposeMarshaler(__animation);
            }
        }

        internal static unsafe void StartAnimationGroupWithIAnimationObject(IObjectReference _obj, global::Microsoft.UI.Composition.IAnimationObject target, global::Microsoft.UI.Composition.ICompositionAnimationBase animation)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __target = default;
            ObjectReferenceValue __animation = default;
            try
            {
                __target = MarshalInterface<global::Microsoft.UI.Composition.IAnimationObject>.CreateMarshaler2(target, global::ABI.Microsoft.UI.Composition.IAnimationObjectMethods.IID);
                __animation = MarshalInterface<global::Microsoft.UI.Composition.ICompositionAnimationBase>.CreateMarshaler2(animation, global::ABI.Microsoft.UI.Composition.ICompositionAnimationBaseMethods.IID);
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, IntPtr, int>**)ThisPtr)[7](ThisPtr, MarshalInspectable<object>.GetAbi(__target), MarshalInspectable<object>.GetAbi(__animation)));
                global::System.GC.KeepAlive(_obj);
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__target);
                MarshalInspectable<object>.DisposeMarshaler(__animation);
            }
        }


        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0x6C, 0x35, 0x91, 0xA0, 0xAE, 0x38, 0x4C, 0x51, 0x9B, 0x58, 0xAD, 0x5C, 0x8C, 0x79, 0x36, 0xAD };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("A091356C-38AE-514C-9B58-AD5C8C7936AD")]
    internal interface ICompositionObjectStatics : global::Microsoft.UI.Composition.ICompositionObjectStatics
    {
    }
    internal static class ICompositionPathMethods
    {



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0xC0, 0x18, 0xC5, 0x17, 0xA2, 0xD7, 0xBE, 0x54, 0xAC, 0x7F, 0xC4, 0x8, 0x56, 0x2A, 0x6A, 0x20 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("17C518C0-D7A2-54BE-AC7F-C408562A6A20")]
    internal interface ICompositionPath : global::Microsoft.UI.Composition.ICompositionPath
    {
    }
    internal static class ICompositionPathFactoryMethods
    {


        internal static unsafe global::Microsoft.UI.Composition.CompositionPath Create(IObjectReference _obj, global::Windows.Graphics.IGeometrySource2D source)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __source = default;
            IntPtr __retval = default;
            try
            {
                __source = MarshalInterface<global::Windows.Graphics.IGeometrySource2D>.CreateMarshaler2(source, global::ABI.Windows.Graphics.IGeometrySource2DMethods.IID);
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, IntPtr*, int>**)ThisPtr)[6](ThisPtr, MarshalInspectable<object>.GetAbi(__source), &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Composition.CompositionPath.FromAbi(__retval);
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__source);
                global::ABI.Microsoft.UI.Composition.CompositionPath.DisposeAbi(__retval);
            }
        }


        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0x12, 0x33, 0x14, 0x87, 0x80, 0xD2, 0xD2, 0x51, 0xB7, 0x5B, 0x5D, 0x76, 0xEA, 0x86, 0xC2, 0x85 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("87143312-D280-51D2-B75B-5D76EA86C285")]
    internal interface ICompositionPathFactory : global::Microsoft.UI.Composition.ICompositionPathFactory
    {
    }
    internal static class ICompositionPathGeometryMethods
    {

        internal static unsafe global::Microsoft.UI.Composition.CompositionPath get_Path(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[6](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Composition.CompositionPath.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.UI.Composition.CompositionPath.DisposeAbi(__retval);
            }
        }
        internal static unsafe void set_Path(IObjectReference _obj, global::Microsoft.UI.Composition.CompositionPath value)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __value = default;
            try
            {
                __value = global::ABI.Microsoft.UI.Composition.CompositionPath.CreateMarshaler2(value);
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, int>**)ThisPtr)[7](ThisPtr, MarshalInspectable<object>.GetAbi(__value)));
                global::System.GC.KeepAlive(_obj);
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__value);
            }
        }



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0x82, 0x6B, 0x6E, 0xF, 0xB, 0x6, 0x1E, 0x57, 0xB8, 0x49, 0xAB, 0x8E, 0xD, 0x72, 0x39, 0x62 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("0F6E6B82-060B-571E-B849-AB8E0D723962")]
    internal interface ICompositionPathGeometry : global::Microsoft.UI.Composition.ICompositionPathGeometry
    {
    }
    internal static class ICompositionProjectedShadowMethods
    {

        internal static unsafe float get_BlurRadiusMultiplier(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            float __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, float*, int>**)ThisPtr)[6](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }
        internal static unsafe void set_BlurRadiusMultiplier(IObjectReference _obj, float value)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, float, int>**)ThisPtr)[7](ThisPtr, value));
            global::System.GC.KeepAlive(_obj);
        }

        internal static unsafe global::Microsoft.UI.Composition.CompositionProjectedShadowCasterCollection get_Casters(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[8](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Composition.CompositionProjectedShadowCasterCollection.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.UI.Composition.CompositionProjectedShadowCasterCollection.DisposeAbi(__retval);
            }
        }

        internal static unsafe global::Microsoft.UI.Composition.CompositionLight get_LightSource(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[9](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Composition.CompositionLight.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.UI.Composition.CompositionLight.DisposeAbi(__retval);
            }
        }
        internal static unsafe void set_LightSource(IObjectReference _obj, global::Microsoft.UI.Composition.CompositionLight value)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __value = default;
            try
            {
                __value = global::ABI.Microsoft.UI.Composition.CompositionLight.CreateMarshaler2(value);
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, int>**)ThisPtr)[10](ThisPtr, MarshalInspectable<object>.GetAbi(__value)));
                global::System.GC.KeepAlive(_obj);
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__value);
            }
        }

        internal static unsafe float get_MaxBlurRadius(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            float __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, float*, int>**)ThisPtr)[11](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }
        internal static unsafe void set_MaxBlurRadius(IObjectReference _obj, float value)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, float, int>**)ThisPtr)[12](ThisPtr, value));
            global::System.GC.KeepAlive(_obj);
        }

        internal static unsafe float get_MinBlurRadius(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            float __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, float*, int>**)ThisPtr)[13](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }
        internal static unsafe void set_MinBlurRadius(IObjectReference _obj, float value)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, float, int>**)ThisPtr)[14](ThisPtr, value));
            global::System.GC.KeepAlive(_obj);
        }

        internal static unsafe global::Microsoft.UI.Composition.CompositionProjectedShadowReceiverUnorderedCollection get_Receivers(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[15](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Composition.CompositionProjectedShadowReceiverUnorderedCollection.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.UI.Composition.CompositionProjectedShadowReceiverUnorderedCollection.DisposeAbi(__retval);
            }
        }



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0x10, 0xAB, 0x0, 0xD4, 0x92, 0x8B, 0xBB, 0x5A, 0x9E, 0x23, 0x80, 0x79, 0x74, 0xFC, 0x69, 0x61 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("D400AB10-8B92-5ABB-9E23-807974FC6961")]
    internal interface ICompositionProjectedShadow : global::Microsoft.UI.Composition.ICompositionProjectedShadow
    {
    }
    internal static class ICompositionProjectedShadowCasterMethods
    {

        internal static unsafe global::Microsoft.UI.Composition.CompositionBrush get_Brush(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[6](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Composition.CompositionBrush.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.UI.Composition.CompositionBrush.DisposeAbi(__retval);
            }
        }
        internal static unsafe void set_Brush(IObjectReference _obj, global::Microsoft.UI.Composition.CompositionBrush value)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __value = default;
            try
            {
                __value = global::ABI.Microsoft.UI.Composition.CompositionBrush.CreateMarshaler2(value);
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, int>**)ThisPtr)[7](ThisPtr, MarshalInspectable<object>.GetAbi(__value)));
                global::System.GC.KeepAlive(_obj);
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__value);
            }
        }

        internal static unsafe global::Microsoft.UI.Composition.Visual get_CastingVisual(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[8](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Composition.Visual.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.UI.Composition.Visual.DisposeAbi(__retval);
            }
        }
        internal static unsafe void set_CastingVisual(IObjectReference _obj, global::Microsoft.UI.Composition.Visual value)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __value = default;
            try
            {
                __value = global::ABI.Microsoft.UI.Composition.Visual.CreateMarshaler2(value);
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, int>**)ThisPtr)[9](ThisPtr, MarshalInspectable<object>.GetAbi(__value)));
                global::System.GC.KeepAlive(_obj);
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__value);
            }
        }



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0xD0, 0xF2, 0xA9, 0x15, 0xAE, 0x6B, 0x1B, 0x52, 0x90, 0xC7, 0xC7, 0x50, 0xF, 0x2B, 0xF5, 0x62 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("15A9F2D0-6BAE-521B-90C7-C7500F2BF562")]
    internal interface ICompositionProjectedShadowCaster : global::Microsoft.UI.Composition.ICompositionProjectedShadowCaster
    {
    }
    internal static class ICompositionProjectedShadowCasterCollectionMethods
    {


        internal static unsafe void InsertAbove(IObjectReference _obj, global::Microsoft.UI.Composition.CompositionProjectedShadowCaster newCaster, global::Microsoft.UI.Composition.CompositionProjectedShadowCaster reference)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __newCaster = default;
            ObjectReferenceValue __reference = default;
            try
            {
                __newCaster = global::ABI.Microsoft.UI.Composition.CompositionProjectedShadowCaster.CreateMarshaler2(newCaster);
                __reference = global::ABI.Microsoft.UI.Composition.CompositionProjectedShadowCaster.CreateMarshaler2(reference);
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, IntPtr, int>**)ThisPtr)[7](ThisPtr, MarshalInspectable<object>.GetAbi(__newCaster), MarshalInspectable<object>.GetAbi(__reference)));
                global::System.GC.KeepAlive(_obj);
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__newCaster);
                MarshalInspectable<object>.DisposeMarshaler(__reference);
            }
        }

        internal static unsafe void InsertAtBottom(IObjectReference _obj, global::Microsoft.UI.Composition.CompositionProjectedShadowCaster newCaster)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __newCaster = default;
            try
            {
                __newCaster = global::ABI.Microsoft.UI.Composition.CompositionProjectedShadowCaster.CreateMarshaler2(newCaster);
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, int>**)ThisPtr)[8](ThisPtr, MarshalInspectable<object>.GetAbi(__newCaster)));
                global::System.GC.KeepAlive(_obj);
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__newCaster);
            }
        }

        internal static unsafe void InsertAtTop(IObjectReference _obj, global::Microsoft.UI.Composition.CompositionProjectedShadowCaster newCaster)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __newCaster = default;
            try
            {
                __newCaster = global::ABI.Microsoft.UI.Composition.CompositionProjectedShadowCaster.CreateMarshaler2(newCaster);
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, int>**)ThisPtr)[9](ThisPtr, MarshalInspectable<object>.GetAbi(__newCaster)));
                global::System.GC.KeepAlive(_obj);
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__newCaster);
            }
        }

        internal static unsafe void InsertBelow(IObjectReference _obj, global::Microsoft.UI.Composition.CompositionProjectedShadowCaster newCaster, global::Microsoft.UI.Composition.CompositionProjectedShadowCaster reference)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __newCaster = default;
            ObjectReferenceValue __reference = default;
            try
            {
                __newCaster = global::ABI.Microsoft.UI.Composition.CompositionProjectedShadowCaster.CreateMarshaler2(newCaster);
                __reference = global::ABI.Microsoft.UI.Composition.CompositionProjectedShadowCaster.CreateMarshaler2(reference);
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, IntPtr, int>**)ThisPtr)[10](ThisPtr, MarshalInspectable<object>.GetAbi(__newCaster), MarshalInspectable<object>.GetAbi(__reference)));
                global::System.GC.KeepAlive(_obj);
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__newCaster);
                MarshalInspectable<object>.DisposeMarshaler(__reference);
            }
        }

        internal static unsafe void Remove(IObjectReference _obj, global::Microsoft.UI.Composition.CompositionProjectedShadowCaster caster)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __caster = default;
            try
            {
                __caster = global::ABI.Microsoft.UI.Composition.CompositionProjectedShadowCaster.CreateMarshaler2(caster);
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, int>**)ThisPtr)[11](ThisPtr, MarshalInspectable<object>.GetAbi(__caster)));
                global::System.GC.KeepAlive(_obj);
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__caster);
            }
        }

        internal static unsafe void RemoveAll(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, int>**)ThisPtr)[12](ThisPtr));
            global::System.GC.KeepAlive(_obj);
        }
        internal static unsafe int get_Count(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            int __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, int*, int>**)ThisPtr)[6](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0xDC, 0xBF, 0x20, 0xB1, 0x3C, 0x53, 0xA9, 0x57, 0xAE, 0x16, 0xD4, 0x3B, 0xA5, 0x24, 0x72, 0xC4 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("B120BFDC-533C-57A9-AE16-D43BA52472C4")]
    internal interface ICompositionProjectedShadowCasterCollection : global::Microsoft.UI.Composition.ICompositionProjectedShadowCasterCollection
    {
    }
    internal static class ICompositionProjectedShadowCasterCollectionStaticsMethods
    {

        internal static unsafe int get_MaxRespectedCasters(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            int __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, int*, int>**)ThisPtr)[6](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0x14, 0x80, 0xA9, 0x43, 0x8B, 0xB8, 0x2A, 0x5B, 0xB1, 0xE2, 0x5E, 0x77, 0x6A, 0xB7, 0x75, 0x38 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("43A98014-B88B-5B2A-B1E2-5E776AB77538")]
    internal interface ICompositionProjectedShadowCasterCollectionStatics : global::Microsoft.UI.Composition.ICompositionProjectedShadowCasterCollectionStatics
    {
    }
    internal static class ICompositionProjectedShadowReceiverMethods
    {

        internal static unsafe global::Microsoft.UI.Composition.Visual get_ReceivingVisual(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[6](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Composition.Visual.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.UI.Composition.Visual.DisposeAbi(__retval);
            }
        }
        internal static unsafe void set_ReceivingVisual(IObjectReference _obj, global::Microsoft.UI.Composition.Visual value)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __value = default;
            try
            {
                __value = global::ABI.Microsoft.UI.Composition.Visual.CreateMarshaler2(value);
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, int>**)ThisPtr)[7](ThisPtr, MarshalInspectable<object>.GetAbi(__value)));
                global::System.GC.KeepAlive(_obj);
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__value);
            }
        }



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0xB0, 0x12, 0xFE, 0x29, 0xA0, 0xF1, 0xE1, 0x50, 0xAF, 0x28, 0x2E, 0x94, 0x3B, 0xC8, 0x19, 0xD6 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("29FE12B0-F1A0-50E1-AF28-2E943BC819D6")]
    internal interface ICompositionProjectedShadowReceiver : global::Microsoft.UI.Composition.ICompositionProjectedShadowReceiver
    {
    }
    internal static class ICompositionProjectedShadowReceiverUnorderedCollectionMethods
    {


        internal static unsafe void Add(IObjectReference _obj, global::Microsoft.UI.Composition.CompositionProjectedShadowReceiver value)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __value = default;
            try
            {
                __value = global::ABI.Microsoft.UI.Composition.CompositionProjectedShadowReceiver.CreateMarshaler2(value);
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, int>**)ThisPtr)[6](ThisPtr, MarshalInspectable<object>.GetAbi(__value)));
                global::System.GC.KeepAlive(_obj);
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__value);
            }
        }

        internal static unsafe void Remove(IObjectReference _obj, global::Microsoft.UI.Composition.CompositionProjectedShadowReceiver value)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __value = default;
            try
            {
                __value = global::ABI.Microsoft.UI.Composition.CompositionProjectedShadowReceiver.CreateMarshaler2(value);
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, int>**)ThisPtr)[8](ThisPtr, MarshalInspectable<object>.GetAbi(__value)));
                global::System.GC.KeepAlive(_obj);
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__value);
            }
        }

        internal static unsafe void RemoveAll(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, int>**)ThisPtr)[9](ThisPtr));
            global::System.GC.KeepAlive(_obj);
        }
        internal static unsafe int get_Count(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            int __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, int*, int>**)ThisPtr)[7](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0x51, 0xF7, 0x35, 0x2D, 0xFA, 0xA1, 0xFF, 0x5F, 0xB1, 0x56, 0x6D, 0x8F, 0xCD, 0x83, 0x62, 0xED };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("2D35F751-A1FA-5FFF-B156-6D8FCD8362ED")]
    internal interface ICompositionProjectedShadowReceiverUnorderedCollection : global::Microsoft.UI.Composition.ICompositionProjectedShadowReceiverUnorderedCollection
    {
    }
    internal static class ICompositionPropertySetMethods
    {


        internal static unsafe void InsertColor(IObjectReference _obj, string propertyName, global::Windows.UI.Color value)
        {
            var ThisPtr = _obj.ThisPtr;

            MarshalString.Pinnable __propertyName = new(propertyName);
            fixed(void* ___propertyName = __propertyName)
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, global::Windows.UI.Color, int>**)ThisPtr)[6](ThisPtr, MarshalString.GetAbi(ref __propertyName), value));
                global::System.GC.KeepAlive(_obj);
            }
        }

        internal static unsafe void InsertMatrix3x2(IObjectReference _obj, string propertyName, global::System.Numerics.Matrix3x2 value)
        {
            var ThisPtr = _obj.ThisPtr;

            MarshalString.Pinnable __propertyName = new(propertyName);
            fixed(void* ___propertyName = __propertyName)
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, global::System.Numerics.Matrix3x2, int>**)ThisPtr)[7](ThisPtr, MarshalString.GetAbi(ref __propertyName), value));
                global::System.GC.KeepAlive(_obj);
            }
        }

        internal static unsafe void InsertMatrix4x4(IObjectReference _obj, string propertyName, global::System.Numerics.Matrix4x4 value)
        {
            var ThisPtr = _obj.ThisPtr;

            MarshalString.Pinnable __propertyName = new(propertyName);
            fixed(void* ___propertyName = __propertyName)
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, global::System.Numerics.Matrix4x4, int>**)ThisPtr)[8](ThisPtr, MarshalString.GetAbi(ref __propertyName), value));
                global::System.GC.KeepAlive(_obj);
            }
        }

        internal static unsafe void InsertQuaternion(IObjectReference _obj, string propertyName, global::System.Numerics.Quaternion value)
        {
            var ThisPtr = _obj.ThisPtr;

            MarshalString.Pinnable __propertyName = new(propertyName);
            fixed(void* ___propertyName = __propertyName)
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, global::System.Numerics.Quaternion, int>**)ThisPtr)[9](ThisPtr, MarshalString.GetAbi(ref __propertyName), value));
                global::System.GC.KeepAlive(_obj);
            }
        }

        internal static unsafe void InsertScalar(IObjectReference _obj, string propertyName, float value)
        {
            var ThisPtr = _obj.ThisPtr;

            MarshalString.Pinnable __propertyName = new(propertyName);
            fixed(void* ___propertyName = __propertyName)
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, float, int>**)ThisPtr)[10](ThisPtr, MarshalString.GetAbi(ref __propertyName), value));
                global::System.GC.KeepAlive(_obj);
            }
        }

        internal static unsafe void InsertVector2(IObjectReference _obj, string propertyName, global::System.Numerics.Vector2 value)
        {
            var ThisPtr = _obj.ThisPtr;

            MarshalString.Pinnable __propertyName = new(propertyName);
            fixed(void* ___propertyName = __propertyName)
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, global::System.Numerics.Vector2, int>**)ThisPtr)[11](ThisPtr, MarshalString.GetAbi(ref __propertyName), value));
                global::System.GC.KeepAlive(_obj);
            }
        }

        internal static unsafe void InsertVector3(IObjectReference _obj, string propertyName, global::System.Numerics.Vector3 value)
        {
            var ThisPtr = _obj.ThisPtr;

            MarshalString.Pinnable __propertyName = new(propertyName);
            fixed(void* ___propertyName = __propertyName)
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, global::System.Numerics.Vector3, int>**)ThisPtr)[12](ThisPtr, MarshalString.GetAbi(ref __propertyName), value));
                global::System.GC.KeepAlive(_obj);
            }
        }

        internal static unsafe void InsertVector4(IObjectReference _obj, string propertyName, global::System.Numerics.Vector4 value)
        {
            var ThisPtr = _obj.ThisPtr;

            MarshalString.Pinnable __propertyName = new(propertyName);
            fixed(void* ___propertyName = __propertyName)
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, global::System.Numerics.Vector4, int>**)ThisPtr)[13](ThisPtr, MarshalString.GetAbi(ref __propertyName), value));
                global::System.GC.KeepAlive(_obj);
            }
        }

        internal static unsafe global::Microsoft.UI.Composition.CompositionGetValueStatus TryGetColor(IObjectReference _obj, string propertyName, out global::Windows.UI.Color value)
        {
            var ThisPtr = _obj.ThisPtr;

            global::Windows.UI.Color __value = default;
            global::Microsoft.UI.Composition.CompositionGetValueStatus __retval = default;
            MarshalString.Pinnable __propertyName = new(propertyName);
            fixed(void* ___propertyName = __propertyName)
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, global::Windows.UI.Color*, global::Microsoft.UI.Composition.CompositionGetValueStatus*, int>**)ThisPtr)[14](ThisPtr, MarshalString.GetAbi(ref __propertyName), &__value, &__retval));
                global::System.GC.KeepAlive(_obj);
                value = __value;
                return __retval;
            }
        }

        internal static unsafe global::Microsoft.UI.Composition.CompositionGetValueStatus TryGetMatrix3x2(IObjectReference _obj, string propertyName, out global::System.Numerics.Matrix3x2 value)
        {
            var ThisPtr = _obj.ThisPtr;

            global::System.Numerics.Matrix3x2 __value = default;
            global::Microsoft.UI.Composition.CompositionGetValueStatus __retval = default;
            MarshalString.Pinnable __propertyName = new(propertyName);
            fixed(void* ___propertyName = __propertyName)
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, global::System.Numerics.Matrix3x2*, global::Microsoft.UI.Composition.CompositionGetValueStatus*, int>**)ThisPtr)[15](ThisPtr, MarshalString.GetAbi(ref __propertyName), &__value, &__retval));
                global::System.GC.KeepAlive(_obj);
                value = __value;
                return __retval;
            }
        }

        internal static unsafe global::Microsoft.UI.Composition.CompositionGetValueStatus TryGetMatrix4x4(IObjectReference _obj, string propertyName, out global::System.Numerics.Matrix4x4 value)
        {
            var ThisPtr = _obj.ThisPtr;

            global::System.Numerics.Matrix4x4 __value = default;
            global::Microsoft.UI.Composition.CompositionGetValueStatus __retval = default;
            MarshalString.Pinnable __propertyName = new(propertyName);
            fixed(void* ___propertyName = __propertyName)
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, global::System.Numerics.Matrix4x4*, global::Microsoft.UI.Composition.CompositionGetValueStatus*, int>**)ThisPtr)[16](ThisPtr, MarshalString.GetAbi(ref __propertyName), &__value, &__retval));
                global::System.GC.KeepAlive(_obj);
                value = __value;
                return __retval;
            }
        }

        internal static unsafe global::Microsoft.UI.Composition.CompositionGetValueStatus TryGetQuaternion(IObjectReference _obj, string propertyName, out global::System.Numerics.Quaternion value)
        {
            var ThisPtr = _obj.ThisPtr;

            global::System.Numerics.Quaternion __value = default;
            global::Microsoft.UI.Composition.CompositionGetValueStatus __retval = default;
            MarshalString.Pinnable __propertyName = new(propertyName);
            fixed(void* ___propertyName = __propertyName)
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, global::System.Numerics.Quaternion*, global::Microsoft.UI.Composition.CompositionGetValueStatus*, int>**)ThisPtr)[17](ThisPtr, MarshalString.GetAbi(ref __propertyName), &__value, &__retval));
                global::System.GC.KeepAlive(_obj);
                value = __value;
                return __retval;
            }
        }

        internal static unsafe global::Microsoft.UI.Composition.CompositionGetValueStatus TryGetScalar(IObjectReference _obj, string propertyName, out float value)
        {
            var ThisPtr = _obj.ThisPtr;

            float __value = default;
            global::Microsoft.UI.Composition.CompositionGetValueStatus __retval = default;
            MarshalString.Pinnable __propertyName = new(propertyName);
            fixed(void* ___propertyName = __propertyName)
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, float*, global::Microsoft.UI.Composition.CompositionGetValueStatus*, int>**)ThisPtr)[18](ThisPtr, MarshalString.GetAbi(ref __propertyName), &__value, &__retval));
                global::System.GC.KeepAlive(_obj);
                value = __value;
                return __retval;
            }
        }

        internal static unsafe global::Microsoft.UI.Composition.CompositionGetValueStatus TryGetVector2(IObjectReference _obj, string propertyName, out global::System.Numerics.Vector2 value)
        {
            var ThisPtr = _obj.ThisPtr;

            global::System.Numerics.Vector2 __value = default;
            global::Microsoft.UI.Composition.CompositionGetValueStatus __retval = default;
            MarshalString.Pinnable __propertyName = new(propertyName);
            fixed(void* ___propertyName = __propertyName)
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, global::System.Numerics.Vector2*, global::Microsoft.UI.Composition.CompositionGetValueStatus*, int>**)ThisPtr)[19](ThisPtr, MarshalString.GetAbi(ref __propertyName), &__value, &__retval));
                global::System.GC.KeepAlive(_obj);
                value = __value;
                return __retval;
            }
        }

        internal static unsafe global::Microsoft.UI.Composition.CompositionGetValueStatus TryGetVector3(IObjectReference _obj, string propertyName, out global::System.Numerics.Vector3 value)
        {
            var ThisPtr = _obj.ThisPtr;

            global::System.Numerics.Vector3 __value = default;
            global::Microsoft.UI.Composition.CompositionGetValueStatus __retval = default;
            MarshalString.Pinnable __propertyName = new(propertyName);
            fixed(void* ___propertyName = __propertyName)
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, global::System.Numerics.Vector3*, global::Microsoft.UI.Composition.CompositionGetValueStatus*, int>**)ThisPtr)[20](ThisPtr, MarshalString.GetAbi(ref __propertyName), &__value, &__retval));
                global::System.GC.KeepAlive(_obj);
                value = __value;
                return __retval;
            }
        }

        internal static unsafe global::Microsoft.UI.Composition.CompositionGetValueStatus TryGetVector4(IObjectReference _obj, string propertyName, out global::System.Numerics.Vector4 value)
        {
            var ThisPtr = _obj.ThisPtr;

            global::System.Numerics.Vector4 __value = default;
            global::Microsoft.UI.Composition.CompositionGetValueStatus __retval = default;
            MarshalString.Pinnable __propertyName = new(propertyName);
            fixed(void* ___propertyName = __propertyName)
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, global::System.Numerics.Vector4*, global::Microsoft.UI.Composition.CompositionGetValueStatus*, int>**)ThisPtr)[21](ThisPtr, MarshalString.GetAbi(ref __propertyName), &__value, &__retval));
                global::System.GC.KeepAlive(_obj);
                value = __value;
                return __retval;
            }
        }


        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0x7B, 0xA1, 0xF7, 0x97, 0xBE, 0x97, 0x45, 0x55, 0x9F, 0x1C, 0xB, 0x9D, 0x44, 0x57, 0x7F, 0x57 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("97F7A17B-97BE-5545-9F1C-0B9D44577F57")]
    internal interface ICompositionPropertySet : global::Microsoft.UI.Composition.ICompositionPropertySet
    {
    }
    internal static class ICompositionPropertySet2Methods
    {


        internal static unsafe void InsertBoolean(IObjectReference _obj, string propertyName, bool value)
        {
            var ThisPtr = _obj.ThisPtr;

            MarshalString.Pinnable __propertyName = new(propertyName);
            fixed(void* ___propertyName = __propertyName)
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, byte, int>**)ThisPtr)[6](ThisPtr, MarshalString.GetAbi(ref __propertyName), (byte)(value ? 1 : 0)));
                global::System.GC.KeepAlive(_obj);
            }
        }

        internal static unsafe global::Microsoft.UI.Composition.CompositionGetValueStatus TryGetBoolean(IObjectReference _obj, string propertyName, out bool value)
        {
            var ThisPtr = _obj.ThisPtr;

            byte __value = default;
            global::Microsoft.UI.Composition.CompositionGetValueStatus __retval = default;
            MarshalString.Pinnable __propertyName = new(propertyName);
            fixed(void* ___propertyName = __propertyName)
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, byte*, global::Microsoft.UI.Composition.CompositionGetValueStatus*, int>**)ThisPtr)[7](ThisPtr, MarshalString.GetAbi(ref __propertyName), &__value, &__retval));
                global::System.GC.KeepAlive(_obj);
                value = __value != 0;
                return __retval;
            }
        }


        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0x21, 0xD6, 0xB6, 0x3D, 0x97, 0x34, 0xE4, 0x55, 0x95, 0xBF, 0x8A, 0xE5, 0xE7, 0xC3, 0x4C, 0x33 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("3DB6D621-3497-55E4-95BF-8AE5E7C34C33")]
    internal interface ICompositionPropertySet2 : global::Microsoft.UI.Composition.ICompositionPropertySet2
    {
    }
    internal static class ICompositionRadialGradientBrushMethods
    {

        internal static unsafe global::System.Numerics.Vector2 get_EllipseCenter(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::System.Numerics.Vector2 __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::System.Numerics.Vector2*, int>**)ThisPtr)[6](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }
        internal static unsafe void set_EllipseCenter(IObjectReference _obj, global::System.Numerics.Vector2 value)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::System.Numerics.Vector2, int>**)ThisPtr)[7](ThisPtr, value));
            global::System.GC.KeepAlive(_obj);
        }

        internal static unsafe global::System.Numerics.Vector2 get_EllipseRadius(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::System.Numerics.Vector2 __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::System.Numerics.Vector2*, int>**)ThisPtr)[8](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }
        internal static unsafe void set_EllipseRadius(IObjectReference _obj, global::System.Numerics.Vector2 value)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::System.Numerics.Vector2, int>**)ThisPtr)[9](ThisPtr, value));
            global::System.GC.KeepAlive(_obj);
        }

        internal static unsafe global::System.Numerics.Vector2 get_GradientOriginOffset(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::System.Numerics.Vector2 __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::System.Numerics.Vector2*, int>**)ThisPtr)[10](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }
        internal static unsafe void set_GradientOriginOffset(IObjectReference _obj, global::System.Numerics.Vector2 value)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::System.Numerics.Vector2, int>**)ThisPtr)[11](ThisPtr, value));
            global::System.GC.KeepAlive(_obj);
        }



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0x3F, 0x2F, 0x66, 0x17, 0x51, 0xD3, 0x35, 0x54, 0xB3, 0xB4, 0xEC, 0x26, 0xCE, 0xFE, 0xCC, 0xC5 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("17662F3F-D351-5435-B3B4-EC26CEFECCC5")]
    internal interface ICompositionRadialGradientBrush : global::Microsoft.UI.Composition.ICompositionRadialGradientBrush
    {
    }
    internal static class ICompositionRectangleGeometryMethods
    {

        internal static unsafe global::System.Numerics.Vector2 get_Offset(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::System.Numerics.Vector2 __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::System.Numerics.Vector2*, int>**)ThisPtr)[6](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }
        internal static unsafe void set_Offset(IObjectReference _obj, global::System.Numerics.Vector2 value)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::System.Numerics.Vector2, int>**)ThisPtr)[7](ThisPtr, value));
            global::System.GC.KeepAlive(_obj);
        }

        internal static unsafe global::System.Numerics.Vector2 get_Size(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::System.Numerics.Vector2 __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::System.Numerics.Vector2*, int>**)ThisPtr)[8](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }
        internal static unsafe void set_Size(IObjectReference _obj, global::System.Numerics.Vector2 value)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::System.Numerics.Vector2, int>**)ThisPtr)[9](ThisPtr, value));
            global::System.GC.KeepAlive(_obj);
        }



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0xCF, 0x1F, 0x55, 0xBD, 0x7F, 0x2C, 0x25, 0x51, 0xAC, 0x44, 0x50, 0xA4, 0xF1, 0xD8, 0xFA, 0x76 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("BD551FCF-2C7F-5125-AC44-50A4F1D8FA76")]
    internal interface ICompositionRectangleGeometry : global::Microsoft.UI.Composition.ICompositionRectangleGeometry
    {
    }
    internal static class ICompositionRoundedRectangleGeometryMethods
    {

        internal static unsafe global::System.Numerics.Vector2 get_CornerRadius(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::System.Numerics.Vector2 __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::System.Numerics.Vector2*, int>**)ThisPtr)[6](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }
        internal static unsafe void set_CornerRadius(IObjectReference _obj, global::System.Numerics.Vector2 value)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::System.Numerics.Vector2, int>**)ThisPtr)[7](ThisPtr, value));
            global::System.GC.KeepAlive(_obj);
        }

        internal static unsafe global::System.Numerics.Vector2 get_Offset(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::System.Numerics.Vector2 __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::System.Numerics.Vector2*, int>**)ThisPtr)[8](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }
        internal static unsafe void set_Offset(IObjectReference _obj, global::System.Numerics.Vector2 value)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::System.Numerics.Vector2, int>**)ThisPtr)[9](ThisPtr, value));
            global::System.GC.KeepAlive(_obj);
        }

        internal static unsafe global::System.Numerics.Vector2 get_Size(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::System.Numerics.Vector2 __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::System.Numerics.Vector2*, int>**)ThisPtr)[10](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }
        internal static unsafe void set_Size(IObjectReference _obj, global::System.Numerics.Vector2 value)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::System.Numerics.Vector2, int>**)ThisPtr)[11](ThisPtr, value));
            global::System.GC.KeepAlive(_obj);
        }



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0x87, 0xFC, 0xEA, 0x2, 0x1F, 0x8D, 0x45, 0x54, 0xA4, 0x16, 0xD8, 0x1B, 0xAE, 0xE8, 0xA7, 0x50 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("02EAFC87-8D1F-5445-A416-D81BAEE8A750")]
    internal interface ICompositionRoundedRectangleGeometry : global::Microsoft.UI.Composition.ICompositionRoundedRectangleGeometry
    {
    }
    internal static class ICompositionScopedBatchMethods
    {


        internal static unsafe void End(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, int>**)ThisPtr)[8](ThisPtr));
            global::System.GC.KeepAlive(_obj);
        }

        internal static unsafe void Resume(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, int>**)ThisPtr)[9](ThisPtr));
            global::System.GC.KeepAlive(_obj);
        }

        internal static unsafe void Suspend(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, int>**)ThisPtr)[10](ThisPtr));
            global::System.GC.KeepAlive(_obj);
        }
        internal static unsafe bool get_IsActive(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            byte __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, byte*, int>**)ThisPtr)[6](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval != 0;
        }

        internal static unsafe bool get_IsEnded(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            byte __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, byte*, int>**)ThisPtr)[7](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval != 0;
        }


        private volatile static global::System.Runtime.CompilerServices.ConditionalWeakTable<object, global::ABI.WinRT.Interop.EventSource<global::Windows.Foundation.TypedEventHandler<object, global::Microsoft.UI.Composition.CompositionBatchCompletedEventArgs>>> _Completed_;
        private static global::System.Runtime.CompilerServices.ConditionalWeakTable<object, global::ABI.WinRT.Interop.EventSource<global::Windows.Foundation.TypedEventHandler<object, global::Microsoft.UI.Composition.CompositionBatchCompletedEventArgs>>> MakeCompletedTable()
        {
            
            global::System.Threading.Interlocked.CompareExchange(ref _Completed_, new(), null);
            return _Completed_;
        }
        private static global::System.Runtime.CompilerServices.ConditionalWeakTable<object, global::ABI.WinRT.Interop.EventSource<global::Windows.Foundation.TypedEventHandler<object, global::Microsoft.UI.Composition.CompositionBatchCompletedEventArgs>>> _Completed => _Completed_ ?? MakeCompletedTable();



        internal static unsafe global::ABI.WinRT.Interop.EventSource<global::Windows.Foundation.TypedEventHandler<object, global::Microsoft.UI.Composition.CompositionBatchCompletedEventArgs>> Get_Completed2(IObjectReference _obj, object _thisObj)
        {
            return _Completed.GetValue(_thisObj, (key) =>
            {

                var ThisPtr = _obj.ThisPtr;

                return 
                new _EventSource_global__Windows_Foundation_TypedEventHandler_object__global__Microsoft_UI_Composition_CompositionBatchCompletedEventArgs_(_obj,
                (*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, global::WinRT.EventRegistrationToken*, int>**)ThisPtr)[11],
                (*(delegate* unmanaged[Stdcall]<IntPtr, global::WinRT.EventRegistrationToken, int>**)ThisPtr)[12],
                0);
            });
        }


        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0x72, 0xA5, 0x1C, 0xD3, 0xCE, 0x99, 0x69, 0x59, 0xB0, 0x42, 0x6C, 0x2D, 0x33, 0xA, 0x38, 0x59 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("D31CA572-99CE-5969-B042-6C2D330A3859")]
    internal interface ICompositionScopedBatch : global::Microsoft.UI.Composition.ICompositionScopedBatch
    {
    }
    internal static class ICompositionShadowMethods
    {



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0xB5, 0x8B, 0x6B, 0x17, 0xAE, 0x4D, 0xB2, 0x59, 0xB9, 0xA0, 0x24, 0x99, 0xB2, 0x43, 0x26, 0x7C };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("176B8BB5-4DAE-59B2-B9A0-2499B243267C")]
    internal interface ICompositionShadow : global::Microsoft.UI.Composition.ICompositionShadow
    {
    }
    internal static class ICompositionShadowFactoryMethods
    {



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0x6D, 0x54, 0x27, 0xFF, 0x50, 0x97, 0xAE, 0x54, 0xAB, 0x8C, 0x12, 0x6C, 0xBE, 0x91, 0x58, 0xC3 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("FF27546D-9750-54AE-AB8C-126CBE9158C3")]
    internal interface ICompositionShadowFactory : global::Microsoft.UI.Composition.ICompositionShadowFactory
    {
    }
    internal static class ICompositionShapeMethods
    {

        internal static unsafe global::System.Numerics.Vector2 get_CenterPoint(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::System.Numerics.Vector2 __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::System.Numerics.Vector2*, int>**)ThisPtr)[6](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }
        internal static unsafe void set_CenterPoint(IObjectReference _obj, global::System.Numerics.Vector2 value)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::System.Numerics.Vector2, int>**)ThisPtr)[7](ThisPtr, value));
            global::System.GC.KeepAlive(_obj);
        }

        internal static unsafe global::System.Numerics.Vector2 get_Offset(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::System.Numerics.Vector2 __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::System.Numerics.Vector2*, int>**)ThisPtr)[8](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }
        internal static unsafe void set_Offset(IObjectReference _obj, global::System.Numerics.Vector2 value)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::System.Numerics.Vector2, int>**)ThisPtr)[9](ThisPtr, value));
            global::System.GC.KeepAlive(_obj);
        }

        internal static unsafe float get_RotationAngle(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            float __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, float*, int>**)ThisPtr)[10](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }
        internal static unsafe void set_RotationAngle(IObjectReference _obj, float value)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, float, int>**)ThisPtr)[11](ThisPtr, value));
            global::System.GC.KeepAlive(_obj);
        }

        internal static unsafe float get_RotationAngleInDegrees(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            float __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, float*, int>**)ThisPtr)[12](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }
        internal static unsafe void set_RotationAngleInDegrees(IObjectReference _obj, float value)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, float, int>**)ThisPtr)[13](ThisPtr, value));
            global::System.GC.KeepAlive(_obj);
        }

        internal static unsafe global::System.Numerics.Vector2 get_Scale(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::System.Numerics.Vector2 __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::System.Numerics.Vector2*, int>**)ThisPtr)[14](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }
        internal static unsafe void set_Scale(IObjectReference _obj, global::System.Numerics.Vector2 value)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::System.Numerics.Vector2, int>**)ThisPtr)[15](ThisPtr, value));
            global::System.GC.KeepAlive(_obj);
        }

        internal static unsafe global::System.Numerics.Matrix3x2 get_TransformMatrix(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::System.Numerics.Matrix3x2 __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::System.Numerics.Matrix3x2*, int>**)ThisPtr)[16](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }
        internal static unsafe void set_TransformMatrix(IObjectReference _obj, global::System.Numerics.Matrix3x2 value)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::System.Numerics.Matrix3x2, int>**)ThisPtr)[17](ThisPtr, value));
            global::System.GC.KeepAlive(_obj);
        }



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0xD8, 0xD4, 0x75, 0xED, 0x7F, 0x43, 0x40, 0x56, 0x97, 0x20, 0xFA, 0xAE, 0x35, 0xCE, 0x58, 0x95 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("ED75D4D8-437F-5640-9720-FAAE35CE5895")]
    internal interface ICompositionShape : global::Microsoft.UI.Composition.ICompositionShape
    {
    }
    internal static class ICompositionShapeFactoryMethods
    {



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0x87, 0xB9, 0xA2, 0x7A, 0xDD, 0x9C, 0x6E, 0x5B, 0x8A, 0xC1, 0xE9, 0x89, 0xD7, 0x8B, 0x48, 0x11 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("7AA2B987-9CDD-5B6E-8AC1-E989D78B4811")]
    internal interface ICompositionShapeFactory : global::Microsoft.UI.Composition.ICompositionShapeFactory
    {
    }
    internal static class ICompositionSpriteShapeMethods
    {

        internal static unsafe global::Microsoft.UI.Composition.CompositionBrush get_FillBrush(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[6](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Composition.CompositionBrush.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.UI.Composition.CompositionBrush.DisposeAbi(__retval);
            }
        }
        internal static unsafe void set_FillBrush(IObjectReference _obj, global::Microsoft.UI.Composition.CompositionBrush value)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __value = default;
            try
            {
                __value = global::ABI.Microsoft.UI.Composition.CompositionBrush.CreateMarshaler2(value);
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, int>**)ThisPtr)[7](ThisPtr, MarshalInspectable<object>.GetAbi(__value)));
                global::System.GC.KeepAlive(_obj);
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__value);
            }
        }

        internal static unsafe global::Microsoft.UI.Composition.CompositionGeometry get_Geometry(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[8](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Composition.CompositionGeometry.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.UI.Composition.CompositionGeometry.DisposeAbi(__retval);
            }
        }
        internal static unsafe void set_Geometry(IObjectReference _obj, global::Microsoft.UI.Composition.CompositionGeometry value)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __value = default;
            try
            {
                __value = global::ABI.Microsoft.UI.Composition.CompositionGeometry.CreateMarshaler2(value);
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, int>**)ThisPtr)[9](ThisPtr, MarshalInspectable<object>.GetAbi(__value)));
                global::System.GC.KeepAlive(_obj);
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__value);
            }
        }

        internal static unsafe bool get_IsStrokeNonScaling(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            byte __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, byte*, int>**)ThisPtr)[10](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval != 0;
        }
        internal static unsafe void set_IsStrokeNonScaling(IObjectReference _obj, bool value)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, byte, int>**)ThisPtr)[11](ThisPtr, (byte)(value ? 1 : 0)));
            global::System.GC.KeepAlive(_obj);
        }

        internal static unsafe global::Microsoft.UI.Composition.CompositionBrush get_StrokeBrush(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[12](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Composition.CompositionBrush.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.UI.Composition.CompositionBrush.DisposeAbi(__retval);
            }
        }
        internal static unsafe void set_StrokeBrush(IObjectReference _obj, global::Microsoft.UI.Composition.CompositionBrush value)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __value = default;
            try
            {
                __value = global::ABI.Microsoft.UI.Composition.CompositionBrush.CreateMarshaler2(value);
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, int>**)ThisPtr)[13](ThisPtr, MarshalInspectable<object>.GetAbi(__value)));
                global::System.GC.KeepAlive(_obj);
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__value);
            }
        }

        internal static unsafe global::Microsoft.UI.Composition.CompositionStrokeDashArray get_StrokeDashArray(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[14](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Composition.CompositionStrokeDashArray.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.UI.Composition.CompositionStrokeDashArray.DisposeAbi(__retval);
            }
        }

        internal static unsafe global::Microsoft.UI.Composition.CompositionStrokeCap get_StrokeDashCap(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::Microsoft.UI.Composition.CompositionStrokeCap __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::Microsoft.UI.Composition.CompositionStrokeCap*, int>**)ThisPtr)[15](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }
        internal static unsafe void set_StrokeDashCap(IObjectReference _obj, global::Microsoft.UI.Composition.CompositionStrokeCap value)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::Microsoft.UI.Composition.CompositionStrokeCap, int>**)ThisPtr)[16](ThisPtr, value));
            global::System.GC.KeepAlive(_obj);
        }

        internal static unsafe float get_StrokeDashOffset(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            float __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, float*, int>**)ThisPtr)[17](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }
        internal static unsafe void set_StrokeDashOffset(IObjectReference _obj, float value)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, float, int>**)ThisPtr)[18](ThisPtr, value));
            global::System.GC.KeepAlive(_obj);
        }

        internal static unsafe global::Microsoft.UI.Composition.CompositionStrokeCap get_StrokeEndCap(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::Microsoft.UI.Composition.CompositionStrokeCap __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::Microsoft.UI.Composition.CompositionStrokeCap*, int>**)ThisPtr)[19](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }
        internal static unsafe void set_StrokeEndCap(IObjectReference _obj, global::Microsoft.UI.Composition.CompositionStrokeCap value)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::Microsoft.UI.Composition.CompositionStrokeCap, int>**)ThisPtr)[20](ThisPtr, value));
            global::System.GC.KeepAlive(_obj);
        }

        internal static unsafe global::Microsoft.UI.Composition.CompositionStrokeLineJoin get_StrokeLineJoin(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::Microsoft.UI.Composition.CompositionStrokeLineJoin __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::Microsoft.UI.Composition.CompositionStrokeLineJoin*, int>**)ThisPtr)[21](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }
        internal static unsafe void set_StrokeLineJoin(IObjectReference _obj, global::Microsoft.UI.Composition.CompositionStrokeLineJoin value)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::Microsoft.UI.Composition.CompositionStrokeLineJoin, int>**)ThisPtr)[22](ThisPtr, value));
            global::System.GC.KeepAlive(_obj);
        }

        internal static unsafe float get_StrokeMiterLimit(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            float __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, float*, int>**)ThisPtr)[23](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }
        internal static unsafe void set_StrokeMiterLimit(IObjectReference _obj, float value)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, float, int>**)ThisPtr)[24](ThisPtr, value));
            global::System.GC.KeepAlive(_obj);
        }

        internal static unsafe global::Microsoft.UI.Composition.CompositionStrokeCap get_StrokeStartCap(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::Microsoft.UI.Composition.CompositionStrokeCap __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::Microsoft.UI.Composition.CompositionStrokeCap*, int>**)ThisPtr)[25](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }
        internal static unsafe void set_StrokeStartCap(IObjectReference _obj, global::Microsoft.UI.Composition.CompositionStrokeCap value)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::Microsoft.UI.Composition.CompositionStrokeCap, int>**)ThisPtr)[26](ThisPtr, value));
            global::System.GC.KeepAlive(_obj);
        }

        internal static unsafe float get_StrokeThickness(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            float __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, float*, int>**)ThisPtr)[27](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }
        internal static unsafe void set_StrokeThickness(IObjectReference _obj, float value)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, float, int>**)ThisPtr)[28](ThisPtr, value));
            global::System.GC.KeepAlive(_obj);
        }



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0xF2, 0x38, 0x21, 0x98, 0x81, 0x57, 0x9A, 0x50, 0xBA, 0x5D, 0x11, 0x2B, 0xCB, 0xB, 0x98, 0xEF };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("982138F2-5781-509A-BA5D-112BCB0B98EF")]
    internal interface ICompositionSpriteShape : global::Microsoft.UI.Composition.ICompositionSpriteShape
    {
    }
    public static class ICompositionSupportsSystemBackdropMethods
    {

        public static unsafe global::Windows.UI.Composition.CompositionBrush get_SystemBackdrop(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[6](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Windows.UI.Composition.CompositionBrush.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Windows.UI.Composition.CompositionBrush.DisposeAbi(__retval);
            }
        }
        public static unsafe void set_SystemBackdrop(IObjectReference _obj, global::Windows.UI.Composition.CompositionBrush value)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __value = default;
            try
            {
                __value = global::ABI.Windows.UI.Composition.CompositionBrush.CreateMarshaler2(value);
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, int>**)ThisPtr)[7](ThisPtr, MarshalInspectable<object>.GetAbi(__value)));
                global::System.GC.KeepAlive(_obj);
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__value);
            }
        }



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0xE4, 0xAF, 0x7D, 0x39, 0xC2, 0xB6, 0xB9, 0x5B, 0x95, 0x1D, 0xF5, 0x70, 0x7D, 0xE8, 0xB7, 0xBC };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

        public static global::System.IntPtr AbiToProjectionVftablePtr => ICompositionSupportsSystemBackdrop.AbiToProjectionVftablePtr;

    }
    [DynamicInterfaceCastableImplementation]
    [Guid("397DAFE4-B6C2-5BB9-951D-F5707DE8B7BC")]
    internal unsafe interface ICompositionSupportsSystemBackdrop : global::Microsoft.UI.Composition.ICompositionSupportsSystemBackdrop
    {

        public static readonly IntPtr AbiToProjectionVftablePtr;
        static unsafe ICompositionSupportsSystemBackdrop()
        {
            AbiToProjectionVftablePtr = ComWrappersSupport.AllocateVtableMemory(typeof(ICompositionSupportsSystemBackdrop), sizeof(IInspectable.Vftbl) + sizeof(IntPtr) * 2);
            *(IInspectable.Vftbl*)AbiToProjectionVftablePtr = IInspectable.Vftbl.AbiToProjectionVftable;
            ((delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>*)AbiToProjectionVftablePtr)[6] = &Do_Abi_get_SystemBackdrop_0;
            ((delegate* unmanaged[Stdcall]<IntPtr, IntPtr, int>*)AbiToProjectionVftablePtr)[7] = &Do_Abi_put_SystemBackdrop_1;
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvStdcall) })]
        private static unsafe int Do_Abi_put_SystemBackdrop_1(IntPtr thisPtr, IntPtr value)
        {



            try
            {
                global::WinRT.ComWrappersSupport.FindObject<global::Microsoft.UI.Composition.ICompositionSupportsSystemBackdrop>(thisPtr).SystemBackdrop = global::ABI.Windows.UI.Composition.CompositionBrush.FromAbi(value);

            }
            catch (Exception __exception__)
            {
                global::WinRT.ExceptionHelpers.SetErrorInfo(__exception__);
                return global::WinRT.ExceptionHelpers.GetHRForException(__exception__);
            }
            return 0;
        }
        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvStdcall) })]
        private static unsafe int Do_Abi_get_SystemBackdrop_0(IntPtr thisPtr, IntPtr* value)
        {

            global::Windows.UI.Composition.CompositionBrush __value = default;

            *value = default;

            try
            {
                __value = global::WinRT.ComWrappersSupport.FindObject<global::Microsoft.UI.Composition.ICompositionSupportsSystemBackdrop>(thisPtr).SystemBackdrop;
                *value = global::ABI.Windows.UI.Composition.CompositionBrush.FromManaged(__value);

            }
            catch (Exception __exception__)
            {
                global::WinRT.ExceptionHelpers.SetErrorInfo(__exception__);
                return global::WinRT.ExceptionHelpers.GetHRForException(__exception__);
            }
            return 0;
        }

        unsafe global::Windows.UI.Composition.CompositionBrush global::Microsoft.UI.Composition.ICompositionSupportsSystemBackdrop.SystemBackdrop
        {
            get
            {
                var _obj = ((IObjectReference)((IWinRTObject)this).GetObjectReferenceForType(typeof(global::Microsoft.UI.Composition.ICompositionSupportsSystemBackdrop).TypeHandle));
                return global::ABI.Microsoft.UI.Composition.ICompositionSupportsSystemBackdropMethods.get_SystemBackdrop(_obj);
            }
            set
            {
                var _obj = ((IObjectReference)((IWinRTObject)this).GetObjectReferenceForType(typeof(global::Microsoft.UI.Composition.ICompositionSupportsSystemBackdrop).TypeHandle));
                global::ABI.Microsoft.UI.Composition.ICompositionSupportsSystemBackdropMethods.set_SystemBackdrop(_obj, value);
            }
        }
    }

    public static class ICompositionSurfaceMethods
    {



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0xC3, 0x12, 0xC6, 0x9E, 0xD2, 0xA5, 0x97, 0x4F, 0x9D, 0xF3, 0x6B, 0x49, 0xCE, 0x73, 0x62, 0x15 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

        public static global::System.IntPtr AbiToProjectionVftablePtr => ICompositionSurface.AbiToProjectionVftablePtr;

    }
    [DynamicInterfaceCastableImplementation]
    [Guid("9EC612C3-A5D2-4F97-9DF3-6B49CE736215")]
    internal unsafe interface ICompositionSurface : global::Microsoft.UI.Composition.ICompositionSurface
    {

        public static readonly IntPtr AbiToProjectionVftablePtr;
        static unsafe ICompositionSurface()
        {
            AbiToProjectionVftablePtr = ComWrappersSupport.AllocateVtableMemory(typeof(ICompositionSurface), sizeof(IInspectable.Vftbl) + sizeof(IntPtr) * 0);
            *(IInspectable.Vftbl*)AbiToProjectionVftablePtr = IInspectable.Vftbl.AbiToProjectionVftable;

        }

    }

    internal static class ICompositionSurfaceBrushMethods
    {

        internal static unsafe global::Microsoft.UI.Composition.CompositionBitmapInterpolationMode get_BitmapInterpolationMode(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::Microsoft.UI.Composition.CompositionBitmapInterpolationMode __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::Microsoft.UI.Composition.CompositionBitmapInterpolationMode*, int>**)ThisPtr)[6](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }
        internal static unsafe void set_BitmapInterpolationMode(IObjectReference _obj, global::Microsoft.UI.Composition.CompositionBitmapInterpolationMode value)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::Microsoft.UI.Composition.CompositionBitmapInterpolationMode, int>**)ThisPtr)[7](ThisPtr, value));
            global::System.GC.KeepAlive(_obj);
        }

        internal static unsafe float get_HorizontalAlignmentRatio(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            float __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, float*, int>**)ThisPtr)[8](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }
        internal static unsafe void set_HorizontalAlignmentRatio(IObjectReference _obj, float value)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, float, int>**)ThisPtr)[9](ThisPtr, value));
            global::System.GC.KeepAlive(_obj);
        }

        internal static unsafe global::Microsoft.UI.Composition.CompositionStretch get_Stretch(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::Microsoft.UI.Composition.CompositionStretch __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::Microsoft.UI.Composition.CompositionStretch*, int>**)ThisPtr)[10](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }
        internal static unsafe void set_Stretch(IObjectReference _obj, global::Microsoft.UI.Composition.CompositionStretch value)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::Microsoft.UI.Composition.CompositionStretch, int>**)ThisPtr)[11](ThisPtr, value));
            global::System.GC.KeepAlive(_obj);
        }

        internal static unsafe global::Microsoft.UI.Composition.ICompositionSurface get_Surface(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[12](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return MarshalInterface<global::Microsoft.UI.Composition.ICompositionSurface>.FromAbi(__retval);
            }
            finally
            {
                MarshalInterface<global::Microsoft.UI.Composition.ICompositionSurface>.DisposeAbi(__retval);
            }
        }
        internal static unsafe void set_Surface(IObjectReference _obj, global::Microsoft.UI.Composition.ICompositionSurface value)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __value = default;
            try
            {
                __value = MarshalInterface<global::Microsoft.UI.Composition.ICompositionSurface>.CreateMarshaler2(value, global::ABI.Microsoft.UI.Composition.ICompositionSurfaceMethods.IID);
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, int>**)ThisPtr)[13](ThisPtr, MarshalInspectable<object>.GetAbi(__value)));
                global::System.GC.KeepAlive(_obj);
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__value);
            }
        }

        internal static unsafe float get_VerticalAlignmentRatio(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            float __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, float*, int>**)ThisPtr)[14](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }
        internal static unsafe void set_VerticalAlignmentRatio(IObjectReference _obj, float value)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, float, int>**)ThisPtr)[15](ThisPtr, value));
            global::System.GC.KeepAlive(_obj);
        }



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0xA5, 0xB5, 0x6B, 0x61, 0x33, 0xA, 0x2D, 0x51, 0xB4, 0xB1, 0x3D, 0x37, 0x34, 0xF0, 0x4A, 0xCA };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("616BB5A5-0A33-512D-B4B1-3D3734F04ACA")]
    internal interface ICompositionSurfaceBrush : global::Microsoft.UI.Composition.ICompositionSurfaceBrush
    {
    }
    internal static class ICompositionSurfaceBrush2Methods
    {

        internal static unsafe global::System.Numerics.Vector2 get_AnchorPoint(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::System.Numerics.Vector2 __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::System.Numerics.Vector2*, int>**)ThisPtr)[6](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }
        internal static unsafe void set_AnchorPoint(IObjectReference _obj, global::System.Numerics.Vector2 value)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::System.Numerics.Vector2, int>**)ThisPtr)[7](ThisPtr, value));
            global::System.GC.KeepAlive(_obj);
        }

        internal static unsafe global::System.Numerics.Vector2 get_CenterPoint(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::System.Numerics.Vector2 __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::System.Numerics.Vector2*, int>**)ThisPtr)[8](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }
        internal static unsafe void set_CenterPoint(IObjectReference _obj, global::System.Numerics.Vector2 value)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::System.Numerics.Vector2, int>**)ThisPtr)[9](ThisPtr, value));
            global::System.GC.KeepAlive(_obj);
        }

        internal static unsafe global::System.Numerics.Vector2 get_Offset(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::System.Numerics.Vector2 __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::System.Numerics.Vector2*, int>**)ThisPtr)[10](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }
        internal static unsafe void set_Offset(IObjectReference _obj, global::System.Numerics.Vector2 value)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::System.Numerics.Vector2, int>**)ThisPtr)[11](ThisPtr, value));
            global::System.GC.KeepAlive(_obj);
        }

        internal static unsafe float get_RotationAngle(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            float __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, float*, int>**)ThisPtr)[12](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }
        internal static unsafe void set_RotationAngle(IObjectReference _obj, float value)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, float, int>**)ThisPtr)[13](ThisPtr, value));
            global::System.GC.KeepAlive(_obj);
        }

        internal static unsafe float get_RotationAngleInDegrees(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            float __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, float*, int>**)ThisPtr)[14](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }
        internal static unsafe void set_RotationAngleInDegrees(IObjectReference _obj, float value)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, float, int>**)ThisPtr)[15](ThisPtr, value));
            global::System.GC.KeepAlive(_obj);
        }

        internal static unsafe global::System.Numerics.Vector2 get_Scale(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::System.Numerics.Vector2 __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::System.Numerics.Vector2*, int>**)ThisPtr)[16](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }
        internal static unsafe void set_Scale(IObjectReference _obj, global::System.Numerics.Vector2 value)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::System.Numerics.Vector2, int>**)ThisPtr)[17](ThisPtr, value));
            global::System.GC.KeepAlive(_obj);
        }

        internal static unsafe global::System.Numerics.Matrix3x2 get_TransformMatrix(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::System.Numerics.Matrix3x2 __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::System.Numerics.Matrix3x2*, int>**)ThisPtr)[18](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }
        internal static unsafe void set_TransformMatrix(IObjectReference _obj, global::System.Numerics.Matrix3x2 value)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::System.Numerics.Matrix3x2, int>**)ThisPtr)[19](ThisPtr, value));
            global::System.GC.KeepAlive(_obj);
        }



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0xE3, 0xB7, 0x4, 0x99, 0x4B, 0x8, 0xB5, 0x58, 0x9A, 0xE1, 0x3A, 0x20, 0x40, 0xDD, 0x7A, 0x22 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("9904B7E3-084B-58B5-9AE1-3A2040DD7A22")]
    internal interface ICompositionSurfaceBrush2 : global::Microsoft.UI.Composition.ICompositionSurfaceBrush2
    {
    }
    internal static class ICompositionSurfaceBrush3Methods
    {

        internal static unsafe bool get_SnapToPixels(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            byte __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, byte*, int>**)ThisPtr)[6](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval != 0;
        }
        internal static unsafe void set_SnapToPixels(IObjectReference _obj, bool value)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, byte, int>**)ThisPtr)[7](ThisPtr, (byte)(value ? 1 : 0)));
            global::System.GC.KeepAlive(_obj);
        }



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0x78, 0x4C, 0xA7, 0x8A, 0xC, 0x68, 0x91, 0x57, 0xAB, 0x7, 0x92, 0xDB, 0xF, 0x37, 0xE3, 0x52 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("8AA74C78-680C-5791-AB07-92DB0F37E352")]
    internal interface ICompositionSurfaceBrush3 : global::Microsoft.UI.Composition.ICompositionSurfaceBrush3
    {
    }
    public static class ICompositionSurfaceFacadeMethods
    {


        public static unsafe global::Microsoft.UI.Composition.ICompositionSurface GetRealSurface(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[6](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return MarshalInterface<global::Microsoft.UI.Composition.ICompositionSurface>.FromAbi(__retval);
            }
            finally
            {
                MarshalInterface<global::Microsoft.UI.Composition.ICompositionSurface>.DisposeAbi(__retval);
            }
        }


        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0xF6, 0x5D, 0xAC, 0x88, 0x7F, 0x37, 0xF7, 0x5C, 0xA0, 0x2E, 0xED, 0x50, 0x74, 0xD3, 0x4, 0x52 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

        public static global::System.IntPtr AbiToProjectionVftablePtr => ICompositionSurfaceFacade.AbiToProjectionVftablePtr;

    }
    [DynamicInterfaceCastableImplementation]
    [Guid("88AC5DF6-377F-5CF7-A02E-ED5074D30452")]
    internal unsafe interface ICompositionSurfaceFacade : global::Microsoft.UI.Composition.ICompositionSurfaceFacade
    {

        public static readonly IntPtr AbiToProjectionVftablePtr;
        static unsafe ICompositionSurfaceFacade()
        {
            AbiToProjectionVftablePtr = ComWrappersSupport.AllocateVtableMemory(typeof(ICompositionSurfaceFacade), sizeof(IInspectable.Vftbl) + sizeof(IntPtr) * 1);
            *(IInspectable.Vftbl*)AbiToProjectionVftablePtr = IInspectable.Vftbl.AbiToProjectionVftable;
            ((delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>*)AbiToProjectionVftablePtr)[6] = &Do_Abi_GetRealSurface_0;
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvStdcall) })]
        private static unsafe int Do_Abi_GetRealSurface_0(IntPtr thisPtr, IntPtr* result)
        {

            global::Microsoft.UI.Composition.ICompositionSurface __result = default;

            *result = default;

            try
            {
                __result = global::WinRT.ComWrappersSupport.FindObject<global::Microsoft.UI.Composition.ICompositionSurfaceFacade>(thisPtr).GetRealSurface();
                *result = MarshalInterface<global::Microsoft.UI.Composition.ICompositionSurface>.FromManaged(__result);

            }
            catch (Exception __exception__)
            {
                global::WinRT.ExceptionHelpers.SetErrorInfo(__exception__);
                return global::WinRT.ExceptionHelpers.GetHRForException(__exception__);
            }
            return 0;
        }

        unsafe global::Microsoft.UI.Composition.ICompositionSurface global::Microsoft.UI.Composition.ICompositionSurfaceFacade.GetRealSurface()
        {
            var _obj = ((IObjectReference)((IWinRTObject)this).GetObjectReferenceForType(typeof(global::Microsoft.UI.Composition.ICompositionSurfaceFacade).TypeHandle));
            return global::ABI.Microsoft.UI.Composition.ICompositionSurfaceFacadeMethods.GetRealSurface(_obj);
        }
    }

    internal static class ICompositionTransformMethods
    {



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0x26, 0x18, 0xE, 0x67, 0x32, 0x19, 0xD0, 0x51, 0xBB, 0xB3, 0x6, 0x3B, 0x4C, 0xA9, 0x4B, 0x56 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("670E1826-1932-51D0-BBB3-063B4CA94B56")]
    internal interface ICompositionTransform : global::Microsoft.UI.Composition.ICompositionTransform
    {
    }
    internal static class ICompositionTransformFactoryMethods
    {



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0xF2, 0x7B, 0xCC, 0x78, 0xC0, 0xCD, 0xD2, 0x59, 0x9C, 0x4, 0x8D, 0x20, 0x8D, 0xE7, 0xEF, 0x5E };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("78CC7BF2-CDC0-59D2-9C04-8D208DE7EF5E")]
    internal interface ICompositionTransformFactory : global::Microsoft.UI.Composition.ICompositionTransformFactory
    {
    }
    internal static class ICompositionViewBoxMethods
    {

        internal static unsafe float get_HorizontalAlignmentRatio(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            float __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, float*, int>**)ThisPtr)[6](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }
        internal static unsafe void set_HorizontalAlignmentRatio(IObjectReference _obj, float value)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, float, int>**)ThisPtr)[7](ThisPtr, value));
            global::System.GC.KeepAlive(_obj);
        }

        internal static unsafe global::System.Numerics.Vector2 get_Offset(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::System.Numerics.Vector2 __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::System.Numerics.Vector2*, int>**)ThisPtr)[8](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }
        internal static unsafe void set_Offset(IObjectReference _obj, global::System.Numerics.Vector2 value)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::System.Numerics.Vector2, int>**)ThisPtr)[9](ThisPtr, value));
            global::System.GC.KeepAlive(_obj);
        }

        internal static unsafe global::System.Numerics.Vector2 get_Size(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::System.Numerics.Vector2 __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::System.Numerics.Vector2*, int>**)ThisPtr)[10](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }
        internal static unsafe void set_Size(IObjectReference _obj, global::System.Numerics.Vector2 value)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::System.Numerics.Vector2, int>**)ThisPtr)[11](ThisPtr, value));
            global::System.GC.KeepAlive(_obj);
        }

        internal static unsafe global::Microsoft.UI.Composition.CompositionStretch get_Stretch(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::Microsoft.UI.Composition.CompositionStretch __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::Microsoft.UI.Composition.CompositionStretch*, int>**)ThisPtr)[12](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }
        internal static unsafe void set_Stretch(IObjectReference _obj, global::Microsoft.UI.Composition.CompositionStretch value)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::Microsoft.UI.Composition.CompositionStretch, int>**)ThisPtr)[13](ThisPtr, value));
            global::System.GC.KeepAlive(_obj);
        }

        internal static unsafe float get_VerticalAlignmentRatio(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            float __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, float*, int>**)ThisPtr)[14](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }
        internal static unsafe void set_VerticalAlignmentRatio(IObjectReference _obj, float value)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, float, int>**)ThisPtr)[15](ThisPtr, value));
            global::System.GC.KeepAlive(_obj);
        }



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0x71, 0x40, 0x7E, 0x66, 0xDD, 0xAD, 0xED, 0x5D, 0xB6, 0xC0, 0x9, 0xE0, 0x3A, 0x14, 0xBE, 0x7E };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("667E4071-ADDD-5DED-B6C0-09E03A14BE7E")]
    internal interface ICompositionViewBox : global::Microsoft.UI.Composition.ICompositionViewBox
    {
    }
    internal static class ICompositionVirtualDrawingSurfaceMethods
    {


        internal static unsafe void Trim(IObjectReference _obj, global::Windows.Graphics.RectInt32[] rects)
        {
            var ThisPtr = _obj.ThisPtr;

            MarshalBlittable<global::Windows.Graphics.RectInt32>.MarshalerArray __rects = default;
            int __rects_length = default;
            IntPtr __rects_data = default;
            try
            {
                __rects = MarshalBlittable<global::Windows.Graphics.RectInt32>.CreateMarshalerArray(rects);
                (__rects_length, __rects_data) = MarshalBlittable<global::Windows.Graphics.RectInt32>.GetAbiArray(__rects);
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, int, IntPtr, int>**)ThisPtr)[6](ThisPtr, __rects_length, __rects_data));
                global::System.GC.KeepAlive(_obj);
            }
            finally
            {
                MarshalBlittable<global::Windows.Graphics.RectInt32>.DisposeMarshalerArray(__rects);
            }
        }


        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0x9D, 0xB9, 0x41, 0xD7, 0x48, 0xE2, 0xA7, 0x5B, 0xB7, 0x28, 0x8B, 0xEE, 0xA5, 0x3F, 0xE2, 0x8E };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("D741B99D-E248-5BA7-B728-8BEEA53FE28E")]
    internal interface ICompositionVirtualDrawingSurface : global::Microsoft.UI.Composition.ICompositionVirtualDrawingSurface
    {
    }
    internal static class ICompositionVirtualDrawingSurfaceFactoryMethods
    {



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0x91, 0x58, 0x89, 0x85, 0x6, 0x3F, 0xE2, 0x52, 0xB5, 0xEA, 0xD1, 0xFB, 0x59, 0x5F, 0x65, 0x74 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("85895891-3F06-52E2-B5EA-D1FB595F6574")]
    internal interface ICompositionVirtualDrawingSurfaceFactory : global::Microsoft.UI.Composition.ICompositionVirtualDrawingSurfaceFactory
    {
    }
    internal static class ICompositionVisualSurfaceMethods
    {

        internal static unsafe global::System.Numerics.Vector2 get_SourceOffset(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::System.Numerics.Vector2 __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::System.Numerics.Vector2*, int>**)ThisPtr)[8](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }
        internal static unsafe void set_SourceOffset(IObjectReference _obj, global::System.Numerics.Vector2 value)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::System.Numerics.Vector2, int>**)ThisPtr)[9](ThisPtr, value));
            global::System.GC.KeepAlive(_obj);
        }

        internal static unsafe global::System.Numerics.Vector2 get_SourceSize(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::System.Numerics.Vector2 __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::System.Numerics.Vector2*, int>**)ThisPtr)[10](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }
        internal static unsafe void set_SourceSize(IObjectReference _obj, global::System.Numerics.Vector2 value)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::System.Numerics.Vector2, int>**)ThisPtr)[11](ThisPtr, value));
            global::System.GC.KeepAlive(_obj);
        }

        internal static unsafe global::Microsoft.UI.Composition.Visual get_SourceVisual(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[6](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Composition.Visual.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.UI.Composition.Visual.DisposeAbi(__retval);
            }
        }
        internal static unsafe void set_SourceVisual(IObjectReference _obj, global::Microsoft.UI.Composition.Visual value)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __value = default;
            try
            {
                __value = global::ABI.Microsoft.UI.Composition.Visual.CreateMarshaler2(value);
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, int>**)ThisPtr)[7](ThisPtr, MarshalInspectable<object>.GetAbi(__value)));
                global::System.GC.KeepAlive(_obj);
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__value);
            }
        }



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0x4B, 0x62, 0xE3, 0x49, 0x2E, 0x4D, 0xE7, 0x53, 0x9E, 0x2, 0xF6, 0x48, 0x31, 0x68, 0x11, 0x34 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("49E3624B-4D2E-53E7-9E02-F64831681134")]
    internal interface ICompositionVisualSurface : global::Microsoft.UI.Composition.ICompositionVisualSurface
    {
    }
    internal static class ICompositorMethods
    {


        internal static unsafe global::Microsoft.UI.Composition.ColorKeyFrameAnimation CreateColorKeyFrameAnimation(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[6](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Composition.ColorKeyFrameAnimation.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.UI.Composition.ColorKeyFrameAnimation.DisposeAbi(__retval);
            }
        }

        internal static unsafe global::Microsoft.UI.Composition.CompositionColorBrush CreateColorBrush(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[7](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Composition.CompositionColorBrush.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.UI.Composition.CompositionColorBrush.DisposeAbi(__retval);
            }
        }

        internal static unsafe global::Microsoft.UI.Composition.CompositionColorBrush CreateColorBrush(IObjectReference _obj, global::Windows.UI.Color color)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::Windows.UI.Color, IntPtr*, int>**)ThisPtr)[8](ThisPtr, color, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Composition.CompositionColorBrush.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.UI.Composition.CompositionColorBrush.DisposeAbi(__retval);
            }
        }

        internal static unsafe global::Microsoft.UI.Composition.ContainerVisual CreateContainerVisual(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[9](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Composition.ContainerVisual.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.UI.Composition.ContainerVisual.DisposeAbi(__retval);
            }
        }

        internal static unsafe global::Microsoft.UI.Composition.CubicBezierEasingFunction CreateCubicBezierEasingFunction(IObjectReference _obj, global::System.Numerics.Vector2 controlPoint1, global::System.Numerics.Vector2 controlPoint2)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::System.Numerics.Vector2, global::System.Numerics.Vector2, IntPtr*, int>**)ThisPtr)[10](ThisPtr, controlPoint1, controlPoint2, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Composition.CubicBezierEasingFunction.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.UI.Composition.CubicBezierEasingFunction.DisposeAbi(__retval);
            }
        }

        internal static unsafe global::Microsoft.UI.Composition.CompositionEffectFactory CreateEffectFactory(IObjectReference _obj, global::Windows.Graphics.Effects.IGraphicsEffect graphicsEffect)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __graphicsEffect = default;
            IntPtr __retval = default;
            try
            {
                __graphicsEffect = MarshalInterface<global::Windows.Graphics.Effects.IGraphicsEffect>.CreateMarshaler2(graphicsEffect, global::ABI.Windows.Graphics.Effects.IGraphicsEffectMethods.IID);
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, IntPtr*, int>**)ThisPtr)[11](ThisPtr, MarshalInspectable<object>.GetAbi(__graphicsEffect), &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Composition.CompositionEffectFactory.FromAbi(__retval);
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__graphicsEffect);
                global::ABI.Microsoft.UI.Composition.CompositionEffectFactory.DisposeAbi(__retval);
            }
        }

        internal static unsafe global::Microsoft.UI.Composition.CompositionEffectFactory CreateEffectFactory(IObjectReference _obj, global::Windows.Graphics.Effects.IGraphicsEffect graphicsEffect, global::System.Collections.Generic.IEnumerable<string> animatableProperties)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __graphicsEffect = default;
            ObjectReferenceValue __animatableProperties = default;
            IntPtr __retval = default;
            try
            {
                __graphicsEffect = MarshalInterface<global::Windows.Graphics.Effects.IGraphicsEffect>.CreateMarshaler2(graphicsEffect, global::ABI.Windows.Graphics.Effects.IGraphicsEffectMethods.IID);
                __animatableProperties = MarshalInterface<global::System.Collections.Generic.IEnumerable<string>>.CreateMarshaler2(animatableProperties, global::ABI.System.Collections.Generic.IEnumerableMethods<string>.IID);
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, IntPtr, IntPtr*, int>**)ThisPtr)[12](ThisPtr, MarshalInspectable<object>.GetAbi(__graphicsEffect), MarshalInspectable<object>.GetAbi(__animatableProperties), &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Composition.CompositionEffectFactory.FromAbi(__retval);
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__graphicsEffect);
                MarshalInspectable<object>.DisposeMarshaler(__animatableProperties);
                global::ABI.Microsoft.UI.Composition.CompositionEffectFactory.DisposeAbi(__retval);
            }
        }

        internal static unsafe global::Microsoft.UI.Composition.ExpressionAnimation CreateExpressionAnimation(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[13](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Composition.ExpressionAnimation.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.UI.Composition.ExpressionAnimation.DisposeAbi(__retval);
            }
        }

        internal static unsafe global::Microsoft.UI.Composition.ExpressionAnimation CreateExpressionAnimation(IObjectReference _obj, string expression)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                MarshalString.Pinnable __expression = new(expression);
                fixed(void* ___expression = __expression)
                {
                    global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, IntPtr*, int>**)ThisPtr)[14](ThisPtr, MarshalString.GetAbi(ref __expression), &__retval));
                    global::System.GC.KeepAlive(_obj);
                    return global::ABI.Microsoft.UI.Composition.ExpressionAnimation.FromAbi(__retval);
                }
            }
            finally
            {
                global::ABI.Microsoft.UI.Composition.ExpressionAnimation.DisposeAbi(__retval);
            }
        }

        internal static unsafe global::Microsoft.UI.Composition.InsetClip CreateInsetClip(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[15](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Composition.InsetClip.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.UI.Composition.InsetClip.DisposeAbi(__retval);
            }
        }

        internal static unsafe global::Microsoft.UI.Composition.InsetClip CreateInsetClip(IObjectReference _obj, float leftInset, float topInset, float rightInset, float bottomInset)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, float, float, float, float, IntPtr*, int>**)ThisPtr)[16](ThisPtr, leftInset, topInset, rightInset, bottomInset, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Composition.InsetClip.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.UI.Composition.InsetClip.DisposeAbi(__retval);
            }
        }

        internal static unsafe global::Microsoft.UI.Composition.LinearEasingFunction CreateLinearEasingFunction(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[17](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Composition.LinearEasingFunction.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.UI.Composition.LinearEasingFunction.DisposeAbi(__retval);
            }
        }

        internal static unsafe global::Microsoft.UI.Composition.CompositionPropertySet CreatePropertySet(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[18](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Composition.CompositionPropertySet.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.UI.Composition.CompositionPropertySet.DisposeAbi(__retval);
            }
        }

        internal static unsafe global::Microsoft.UI.Composition.QuaternionKeyFrameAnimation CreateQuaternionKeyFrameAnimation(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[19](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Composition.QuaternionKeyFrameAnimation.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.UI.Composition.QuaternionKeyFrameAnimation.DisposeAbi(__retval);
            }
        }

        internal static unsafe global::Microsoft.UI.Composition.ScalarKeyFrameAnimation CreateScalarKeyFrameAnimation(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[20](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Composition.ScalarKeyFrameAnimation.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.UI.Composition.ScalarKeyFrameAnimation.DisposeAbi(__retval);
            }
        }

        internal static unsafe global::Microsoft.UI.Composition.CompositionScopedBatch CreateScopedBatch(IObjectReference _obj, global::Microsoft.UI.Composition.CompositionBatchTypes batchType)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::Microsoft.UI.Composition.CompositionBatchTypes, IntPtr*, int>**)ThisPtr)[21](ThisPtr, batchType, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Composition.CompositionScopedBatch.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.UI.Composition.CompositionScopedBatch.DisposeAbi(__retval);
            }
        }

        internal static unsafe global::Microsoft.UI.Composition.SpriteVisual CreateSpriteVisual(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[22](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Composition.SpriteVisual.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.UI.Composition.SpriteVisual.DisposeAbi(__retval);
            }
        }

        internal static unsafe global::Microsoft.UI.Composition.CompositionSurfaceBrush CreateSurfaceBrush(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[23](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Composition.CompositionSurfaceBrush.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.UI.Composition.CompositionSurfaceBrush.DisposeAbi(__retval);
            }
        }

        internal static unsafe global::Microsoft.UI.Composition.CompositionSurfaceBrush CreateSurfaceBrush(IObjectReference _obj, global::Microsoft.UI.Composition.ICompositionSurface surface)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __surface = default;
            IntPtr __retval = default;
            try
            {
                __surface = MarshalInterface<global::Microsoft.UI.Composition.ICompositionSurface>.CreateMarshaler2(surface, global::ABI.Microsoft.UI.Composition.ICompositionSurfaceMethods.IID);
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, IntPtr*, int>**)ThisPtr)[24](ThisPtr, MarshalInspectable<object>.GetAbi(__surface), &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Composition.CompositionSurfaceBrush.FromAbi(__retval);
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__surface);
                global::ABI.Microsoft.UI.Composition.CompositionSurfaceBrush.DisposeAbi(__retval);
            }
        }

        internal static unsafe global::Microsoft.UI.Composition.Vector2KeyFrameAnimation CreateVector2KeyFrameAnimation(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[25](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Composition.Vector2KeyFrameAnimation.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.UI.Composition.Vector2KeyFrameAnimation.DisposeAbi(__retval);
            }
        }

        internal static unsafe global::Microsoft.UI.Composition.Vector3KeyFrameAnimation CreateVector3KeyFrameAnimation(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[26](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Composition.Vector3KeyFrameAnimation.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.UI.Composition.Vector3KeyFrameAnimation.DisposeAbi(__retval);
            }
        }

        internal static unsafe global::Microsoft.UI.Composition.Vector4KeyFrameAnimation CreateVector4KeyFrameAnimation(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[27](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Composition.Vector4KeyFrameAnimation.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.UI.Composition.Vector4KeyFrameAnimation.DisposeAbi(__retval);
            }
        }

        internal static unsafe global::Microsoft.UI.Composition.CompositionCommitBatch GetCommitBatch(IObjectReference _obj, global::Microsoft.UI.Composition.CompositionBatchTypes batchType)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::Microsoft.UI.Composition.CompositionBatchTypes, IntPtr*, int>**)ThisPtr)[28](ThisPtr, batchType, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Composition.CompositionCommitBatch.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.UI.Composition.CompositionCommitBatch.DisposeAbi(__retval);
            }
        }


        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0x13, 0x3C, 0x21, 0x95, 0xCB, 0xC4, 0xDE, 0x57, 0xB2, 0x67, 0xD2, 0x1A, 0xB9, 0x1, 0xAE, 0x38 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("95213C13-C4CB-57DE-B267-D21AB901AE38")]
    internal interface ICompositor : global::Microsoft.UI.Composition.ICompositor
    {
    }
    internal static class ICompositor2Methods
    {


        internal static unsafe global::Microsoft.UI.Composition.AmbientLight CreateAmbientLight(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[6](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Composition.AmbientLight.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.UI.Composition.AmbientLight.DisposeAbi(__retval);
            }
        }

        internal static unsafe global::Microsoft.UI.Composition.CompositionAnimationGroup CreateAnimationGroup(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[7](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Composition.CompositionAnimationGroup.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.UI.Composition.CompositionAnimationGroup.DisposeAbi(__retval);
            }
        }

        internal static unsafe global::Microsoft.UI.Composition.CompositionBackdropBrush CreateBackdropBrush(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[8](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Composition.CompositionBackdropBrush.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.UI.Composition.CompositionBackdropBrush.DisposeAbi(__retval);
            }
        }

        internal static unsafe global::Microsoft.UI.Composition.DistantLight CreateDistantLight(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[9](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Composition.DistantLight.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.UI.Composition.DistantLight.DisposeAbi(__retval);
            }
        }

        internal static unsafe global::Microsoft.UI.Composition.DropShadow CreateDropShadow(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[10](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Composition.DropShadow.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.UI.Composition.DropShadow.DisposeAbi(__retval);
            }
        }

        internal static unsafe global::Microsoft.UI.Composition.ImplicitAnimationCollection CreateImplicitAnimationCollection(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[11](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Composition.ImplicitAnimationCollection.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.UI.Composition.ImplicitAnimationCollection.DisposeAbi(__retval);
            }
        }

        internal static unsafe global::Microsoft.UI.Composition.LayerVisual CreateLayerVisual(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[12](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Composition.LayerVisual.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.UI.Composition.LayerVisual.DisposeAbi(__retval);
            }
        }

        internal static unsafe global::Microsoft.UI.Composition.CompositionMaskBrush CreateMaskBrush(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[13](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Composition.CompositionMaskBrush.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.UI.Composition.CompositionMaskBrush.DisposeAbi(__retval);
            }
        }

        internal static unsafe global::Microsoft.UI.Composition.CompositionNineGridBrush CreateNineGridBrush(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[14](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Composition.CompositionNineGridBrush.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.UI.Composition.CompositionNineGridBrush.DisposeAbi(__retval);
            }
        }

        internal static unsafe global::Microsoft.UI.Composition.PointLight CreatePointLight(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[15](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Composition.PointLight.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.UI.Composition.PointLight.DisposeAbi(__retval);
            }
        }

        internal static unsafe global::Microsoft.UI.Composition.SpotLight CreateSpotLight(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[16](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Composition.SpotLight.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.UI.Composition.SpotLight.DisposeAbi(__retval);
            }
        }

        internal static unsafe global::Microsoft.UI.Composition.StepEasingFunction CreateStepEasingFunction(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[17](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Composition.StepEasingFunction.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.UI.Composition.StepEasingFunction.DisposeAbi(__retval);
            }
        }

        internal static unsafe global::Microsoft.UI.Composition.StepEasingFunction CreateStepEasingFunction(IObjectReference _obj, int stepCount)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, int, IntPtr*, int>**)ThisPtr)[18](ThisPtr, stepCount, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Composition.StepEasingFunction.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.UI.Composition.StepEasingFunction.DisposeAbi(__retval);
            }
        }


        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0xAD, 0xED, 0xFF, 0xA9, 0x82, 0x39, 0x6D, 0x57, 0xA3, 0x8A, 0xC8, 0x88, 0xFF, 0x60, 0x58, 0x19 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("A9FFEDAD-3982-576D-A38A-C888FF605819")]
    internal interface ICompositor2 : global::Microsoft.UI.Composition.ICompositor2
    {
    }
    internal static class ICompositor4Methods
    {


        internal static unsafe global::Microsoft.UI.Composition.CompositionColorGradientStop CreateColorGradientStop(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[6](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Composition.CompositionColorGradientStop.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.UI.Composition.CompositionColorGradientStop.DisposeAbi(__retval);
            }
        }

        internal static unsafe global::Microsoft.UI.Composition.CompositionColorGradientStop CreateColorGradientStop(IObjectReference _obj, float offset, global::Windows.UI.Color color)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, float, global::Windows.UI.Color, IntPtr*, int>**)ThisPtr)[7](ThisPtr, offset, color, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Composition.CompositionColorGradientStop.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.UI.Composition.CompositionColorGradientStop.DisposeAbi(__retval);
            }
        }

        internal static unsafe global::Microsoft.UI.Composition.CompositionLinearGradientBrush CreateLinearGradientBrush(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[8](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Composition.CompositionLinearGradientBrush.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.UI.Composition.CompositionLinearGradientBrush.DisposeAbi(__retval);
            }
        }

        internal static unsafe global::Microsoft.UI.Composition.SpringScalarNaturalMotionAnimation CreateSpringScalarAnimation(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[9](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Composition.SpringScalarNaturalMotionAnimation.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.UI.Composition.SpringScalarNaturalMotionAnimation.DisposeAbi(__retval);
            }
        }

        internal static unsafe global::Microsoft.UI.Composition.SpringVector2NaturalMotionAnimation CreateSpringVector2Animation(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[10](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Composition.SpringVector2NaturalMotionAnimation.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.UI.Composition.SpringVector2NaturalMotionAnimation.DisposeAbi(__retval);
            }
        }

        internal static unsafe global::Microsoft.UI.Composition.SpringVector3NaturalMotionAnimation CreateSpringVector3Animation(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[11](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Composition.SpringVector3NaturalMotionAnimation.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.UI.Composition.SpringVector3NaturalMotionAnimation.DisposeAbi(__retval);
            }
        }


        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0xCA, 0x4B, 0x44, 0xEE, 0x5C, 0x73, 0xF2, 0x5C, 0xB7, 0x9D, 0xA6, 0xDD, 0x46, 0xC1, 0x61, 0x60 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("EE444BCA-735C-5CF2-B79D-A6DD46C16160")]
    internal interface ICompositor4 : global::Microsoft.UI.Composition.ICompositor4
    {
    }
    internal static class ICompositor5Methods
    {


        internal static unsafe global::Microsoft.UI.Composition.BounceScalarNaturalMotionAnimation CreateBounceScalarAnimation(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[10](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Composition.BounceScalarNaturalMotionAnimation.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.UI.Composition.BounceScalarNaturalMotionAnimation.DisposeAbi(__retval);
            }
        }

        internal static unsafe global::Microsoft.UI.Composition.BounceVector2NaturalMotionAnimation CreateBounceVector2Animation(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[11](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Composition.BounceVector2NaturalMotionAnimation.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.UI.Composition.BounceVector2NaturalMotionAnimation.DisposeAbi(__retval);
            }
        }

        internal static unsafe global::Microsoft.UI.Composition.BounceVector3NaturalMotionAnimation CreateBounceVector3Animation(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[12](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Composition.BounceVector3NaturalMotionAnimation.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.UI.Composition.BounceVector3NaturalMotionAnimation.DisposeAbi(__retval);
            }
        }

        internal static unsafe global::Microsoft.UI.Composition.CompositionContainerShape CreateContainerShape(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[13](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Composition.CompositionContainerShape.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.UI.Composition.CompositionContainerShape.DisposeAbi(__retval);
            }
        }

        internal static unsafe global::Microsoft.UI.Composition.CompositionEllipseGeometry CreateEllipseGeometry(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[14](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Composition.CompositionEllipseGeometry.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.UI.Composition.CompositionEllipseGeometry.DisposeAbi(__retval);
            }
        }

        internal static unsafe global::Microsoft.UI.Composition.CompositionLineGeometry CreateLineGeometry(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[15](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Composition.CompositionLineGeometry.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.UI.Composition.CompositionLineGeometry.DisposeAbi(__retval);
            }
        }

        internal static unsafe global::Microsoft.UI.Composition.CompositionPathGeometry CreatePathGeometry(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[16](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Composition.CompositionPathGeometry.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.UI.Composition.CompositionPathGeometry.DisposeAbi(__retval);
            }
        }

        internal static unsafe global::Microsoft.UI.Composition.CompositionPathGeometry CreatePathGeometry(IObjectReference _obj, global::Microsoft.UI.Composition.CompositionPath path)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __path = default;
            IntPtr __retval = default;
            try
            {
                __path = global::ABI.Microsoft.UI.Composition.CompositionPath.CreateMarshaler2(path);
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, IntPtr*, int>**)ThisPtr)[17](ThisPtr, MarshalInspectable<object>.GetAbi(__path), &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Composition.CompositionPathGeometry.FromAbi(__retval);
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__path);
                global::ABI.Microsoft.UI.Composition.CompositionPathGeometry.DisposeAbi(__retval);
            }
        }

        internal static unsafe global::Microsoft.UI.Composition.PathKeyFrameAnimation CreatePathKeyFrameAnimation(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[18](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Composition.PathKeyFrameAnimation.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.UI.Composition.PathKeyFrameAnimation.DisposeAbi(__retval);
            }
        }

        internal static unsafe global::Microsoft.UI.Composition.CompositionRectangleGeometry CreateRectangleGeometry(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[19](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Composition.CompositionRectangleGeometry.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.UI.Composition.CompositionRectangleGeometry.DisposeAbi(__retval);
            }
        }

        internal static unsafe global::Microsoft.UI.Composition.CompositionRoundedRectangleGeometry CreateRoundedRectangleGeometry(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[20](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Composition.CompositionRoundedRectangleGeometry.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.UI.Composition.CompositionRoundedRectangleGeometry.DisposeAbi(__retval);
            }
        }

        internal static unsafe global::Microsoft.UI.Composition.ShapeVisual CreateShapeVisual(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[21](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Composition.ShapeVisual.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.UI.Composition.ShapeVisual.DisposeAbi(__retval);
            }
        }

        internal static unsafe global::Microsoft.UI.Composition.CompositionSpriteShape CreateSpriteShape(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[22](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Composition.CompositionSpriteShape.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.UI.Composition.CompositionSpriteShape.DisposeAbi(__retval);
            }
        }

        internal static unsafe global::Microsoft.UI.Composition.CompositionSpriteShape CreateSpriteShape(IObjectReference _obj, global::Microsoft.UI.Composition.CompositionGeometry geometry)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __geometry = default;
            IntPtr __retval = default;
            try
            {
                __geometry = global::ABI.Microsoft.UI.Composition.CompositionGeometry.CreateMarshaler2(geometry);
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, IntPtr*, int>**)ThisPtr)[23](ThisPtr, MarshalInspectable<object>.GetAbi(__geometry), &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Composition.CompositionSpriteShape.FromAbi(__retval);
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__geometry);
                global::ABI.Microsoft.UI.Composition.CompositionSpriteShape.DisposeAbi(__retval);
            }
        }

        internal static unsafe global::Microsoft.UI.Composition.CompositionViewBox CreateViewBox(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[24](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Composition.CompositionViewBox.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.UI.Composition.CompositionViewBox.DisposeAbi(__retval);
            }
        }

        internal static unsafe global::Windows.Foundation.IAsyncAction RequestCommitAsync(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[25](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return MarshalInterface<global::Windows.Foundation.IAsyncAction>.FromAbi(__retval);
            }
            finally
            {
                MarshalInterface<global::Windows.Foundation.IAsyncAction>.DisposeAbi(__retval);
            }
        }
        internal static unsafe string get_Comment(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[6](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return MarshalString.FromAbi(__retval);
            }
            finally
            {
                MarshalString.DisposeAbi(__retval);
            }
        }
        internal static unsafe void set_Comment(IObjectReference _obj, string value)
        {
            var ThisPtr = _obj.ThisPtr;

            MarshalString.Pinnable __value = new(value);
            fixed(void* ___value = __value)
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, int>**)ThisPtr)[7](ThisPtr, MarshalString.GetAbi(ref __value)));
                global::System.GC.KeepAlive(_obj);
            }
        }

        internal static unsafe float get_GlobalPlaybackRate(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            float __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, float*, int>**)ThisPtr)[8](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }
        internal static unsafe void set_GlobalPlaybackRate(IObjectReference _obj, float value)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, float, int>**)ThisPtr)[9](ThisPtr, value));
            global::System.GC.KeepAlive(_obj);
        }



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0x44, 0xD6, 0x52, 0xBB, 0x30, 0xA0, 0x19, 0x5C, 0xB8, 0x83, 0x57, 0x7D, 0xED, 0x73, 0x9A, 0xE7 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("BB52D644-A030-5C19-B883-577DED739AE7")]
    internal interface ICompositor5 : global::Microsoft.UI.Composition.ICompositor5
    {
    }
    internal static class ICompositor6Methods
    {


        internal static unsafe global::Microsoft.UI.Composition.CompositionGeometricClip CreateGeometricClip(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[6](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Composition.CompositionGeometricClip.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.UI.Composition.CompositionGeometricClip.DisposeAbi(__retval);
            }
        }

        internal static unsafe global::Microsoft.UI.Composition.CompositionGeometricClip CreateGeometricClip(IObjectReference _obj, global::Microsoft.UI.Composition.CompositionGeometry geometry)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __geometry = default;
            IntPtr __retval = default;
            try
            {
                __geometry = global::ABI.Microsoft.UI.Composition.CompositionGeometry.CreateMarshaler2(geometry);
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, IntPtr*, int>**)ThisPtr)[7](ThisPtr, MarshalInspectable<object>.GetAbi(__geometry), &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Composition.CompositionGeometricClip.FromAbi(__retval);
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__geometry);
                global::ABI.Microsoft.UI.Composition.CompositionGeometricClip.DisposeAbi(__retval);
            }
        }

        internal static unsafe global::Microsoft.UI.Composition.RedirectVisual CreateRedirectVisual(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[8](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Composition.RedirectVisual.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.UI.Composition.RedirectVisual.DisposeAbi(__retval);
            }
        }

        internal static unsafe global::Microsoft.UI.Composition.RedirectVisual CreateRedirectVisual(IObjectReference _obj, global::Microsoft.UI.Composition.Visual source)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __source = default;
            IntPtr __retval = default;
            try
            {
                __source = global::ABI.Microsoft.UI.Composition.Visual.CreateMarshaler2(source);
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, IntPtr*, int>**)ThisPtr)[9](ThisPtr, MarshalInspectable<object>.GetAbi(__source), &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Composition.RedirectVisual.FromAbi(__retval);
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__source);
                global::ABI.Microsoft.UI.Composition.RedirectVisual.DisposeAbi(__retval);
            }
        }

        internal static unsafe global::Microsoft.UI.Composition.BooleanKeyFrameAnimation CreateBooleanKeyFrameAnimation(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[10](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Composition.BooleanKeyFrameAnimation.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.UI.Composition.BooleanKeyFrameAnimation.DisposeAbi(__retval);
            }
        }


        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0x0, 0x2, 0xD2, 0x5F, 0x88, 0xC1, 0x37, 0x57, 0xB5, 0x67, 0x5E, 0x61, 0x74, 0x1A, 0xF1, 0x9C };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("5FD20200-C188-5737-B567-5E61741AF19C")]
    internal interface ICompositor6 : global::Microsoft.UI.Composition.ICompositor6
    {
    }
    internal static class ICompositor7Methods
    {


        internal static unsafe global::Microsoft.UI.Composition.AnimationPropertyInfo CreateAnimationPropertyInfo(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[7](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Composition.AnimationPropertyInfo.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.UI.Composition.AnimationPropertyInfo.DisposeAbi(__retval);
            }
        }

        internal static unsafe global::Microsoft.UI.Composition.RectangleClip CreateRectangleClip(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[8](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Composition.RectangleClip.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.UI.Composition.RectangleClip.DisposeAbi(__retval);
            }
        }

        internal static unsafe global::Microsoft.UI.Composition.RectangleClip CreateRectangleClip(IObjectReference _obj, float left, float top, float right, float bottom)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, float, float, float, float, IntPtr*, int>**)ThisPtr)[9](ThisPtr, left, top, right, bottom, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Composition.RectangleClip.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.UI.Composition.RectangleClip.DisposeAbi(__retval);
            }
        }

        internal static unsafe global::Microsoft.UI.Composition.RectangleClip CreateRectangleClip(IObjectReference _obj, float left, float top, float right, float bottom, global::System.Numerics.Vector2 topLeftRadius, global::System.Numerics.Vector2 topRightRadius, global::System.Numerics.Vector2 bottomRightRadius, global::System.Numerics.Vector2 bottomLeftRadius)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, float, float, float, float, global::System.Numerics.Vector2, global::System.Numerics.Vector2, global::System.Numerics.Vector2, global::System.Numerics.Vector2, IntPtr*, int>**)ThisPtr)[10](ThisPtr, left, top, right, bottom, topLeftRadius, topRightRadius, bottomRightRadius, bottomLeftRadius, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Composition.RectangleClip.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.UI.Composition.RectangleClip.DisposeAbi(__retval);
            }
        }
        internal static unsafe global::Microsoft.UI.Dispatching.DispatcherQueue get_DispatcherQueue(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[6](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Dispatching.DispatcherQueue.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.UI.Dispatching.DispatcherQueue.DisposeAbi(__retval);
            }
        }



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0x1B, 0xB8, 0x58, 0x53, 0x99, 0x47, 0x7C, 0x5E, 0x90, 0x6C, 0xE3, 0xDF, 0x3B, 0x2E, 0x95, 0xEB };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("5358B81B-4799-5E7C-906C-E3DF3B2E95EB")]
    internal interface ICompositor7 : global::Microsoft.UI.Composition.ICompositor7
    {
    }
    internal static class ICompositor8Methods
    {


        internal static unsafe global::Microsoft.UI.Composition.AnimationController CreateAnimationController(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[6](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Composition.AnimationController.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.UI.Composition.AnimationController.DisposeAbi(__retval);
            }
        }


        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0xEE, 0xC9, 0xF5, 0x2, 0xC0, 0xA3, 0x7A, 0x57, 0x9D, 0x23, 0x44, 0x2, 0x4C, 0x8E, 0xAC, 0xDA };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("02F5C9EE-A3C0-577A-9D23-44024C8EACDA")]
    internal interface ICompositor8 : global::Microsoft.UI.Composition.ICompositor8
    {
    }
    internal static class ICompositorStaticsMethods
    {

        internal static unsafe float get_MaxGlobalPlaybackRate(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            float __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, float*, int>**)ThisPtr)[6](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }

        internal static unsafe float get_MinGlobalPlaybackRate(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            float __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, float*, int>**)ThisPtr)[7](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0x7A, 0x94, 0xAA, 0x6B, 0x3, 0xF1, 0xC6, 0x55, 0x91, 0xAD, 0x3D, 0x27, 0x5B, 0xEA, 0x65, 0xC4 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("6BAA947A-F103-55C6-91AD-3D275BEA65C4")]
    internal interface ICompositorStatics : global::Microsoft.UI.Composition.ICompositorStatics
    {
    }
    internal static class ICompositorWithProjectedShadowMethods
    {


        internal static unsafe global::Microsoft.UI.Composition.CompositionProjectedShadowCaster CreateProjectedShadowCaster(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[6](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Composition.CompositionProjectedShadowCaster.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.UI.Composition.CompositionProjectedShadowCaster.DisposeAbi(__retval);
            }
        }

        internal static unsafe global::Microsoft.UI.Composition.CompositionProjectedShadow CreateProjectedShadow(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[7](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Composition.CompositionProjectedShadow.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.UI.Composition.CompositionProjectedShadow.DisposeAbi(__retval);
            }
        }

        internal static unsafe global::Microsoft.UI.Composition.CompositionProjectedShadowReceiver CreateProjectedShadowReceiver(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[8](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Composition.CompositionProjectedShadowReceiver.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.UI.Composition.CompositionProjectedShadowReceiver.DisposeAbi(__retval);
            }
        }


        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0xF2, 0x2B, 0xAB, 0x60, 0x5C, 0xB9, 0x44, 0x59, 0x8B, 0x36, 0xC9, 0x77, 0x3B, 0x9F, 0x52, 0x56 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("60AB2BF2-B95C-5944-8B36-C9773B9F5256")]
    internal interface ICompositorWithProjectedShadow : global::Microsoft.UI.Composition.ICompositorWithProjectedShadow
    {
    }
    internal static class ICompositorWithRadialGradientMethods
    {


        internal static unsafe global::Microsoft.UI.Composition.CompositionRadialGradientBrush CreateRadialGradientBrush(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[6](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Composition.CompositionRadialGradientBrush.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.UI.Composition.CompositionRadialGradientBrush.DisposeAbi(__retval);
            }
        }


        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0x7D, 0x8F, 0x4F, 0xFA, 0xC7, 0x5C, 0x9C, 0x5C, 0x88, 0x3B, 0xFE, 0x87, 0x8A, 0x2F, 0x3E, 0x30 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("FA4F8F7D-5CC7-5C9C-883B-FE878A2F3E30")]
    internal interface ICompositorWithRadialGradient : global::Microsoft.UI.Composition.ICompositorWithRadialGradient
    {
    }
    internal static class ICompositorWithVisualSurfaceMethods
    {


        internal static unsafe global::Microsoft.UI.Composition.CompositionVisualSurface CreateVisualSurface(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[6](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Composition.CompositionVisualSurface.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.UI.Composition.CompositionVisualSurface.DisposeAbi(__retval);
            }
        }


        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0x4A, 0xE2, 0xCF, 0x5F, 0xA, 0x69, 0x78, 0x53, 0xAC, 0xEE, 0x56, 0x1E, 0x84, 0xBF, 0xB9, 0x82 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("5FCFE24A-690A-5378-ACEE-561E84BFB982")]
    internal interface ICompositorWithVisualSurface : global::Microsoft.UI.Composition.ICompositorWithVisualSurface
    {
    }
    internal static class IContainerVisualMethods
    {

        internal static unsafe global::Microsoft.UI.Composition.VisualCollection get_Children(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[6](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Composition.VisualCollection.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.UI.Composition.VisualCollection.DisposeAbi(__retval);
            }
        }



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0xE1, 0xBC, 0xD, 0xC7, 0x2F, 0x2C, 0x8E, 0x5D, 0x91, 0xA4, 0xAA, 0xE1, 0x12, 0x1E, 0x61, 0x86 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("C70DBCE1-2C2F-5D8E-91A4-AAE1121E6186")]
    internal interface IContainerVisual : global::Microsoft.UI.Composition.IContainerVisual
    {
    }
    internal static class IContainerVisualFactoryMethods
    {



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0xEB, 0x5E, 0xA4, 0x3F, 0xDD, 0xC6, 0xFD, 0x5A, 0x97, 0x1D, 0xEA, 0xAF, 0x62, 0x45, 0xE7, 0x16 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("3FA45EEB-C6DD-5AFD-971D-EAAF6245E716")]
    internal interface IContainerVisualFactory : global::Microsoft.UI.Composition.IContainerVisualFactory
    {
    }
    internal static class ICubicBezierEasingFunctionMethods
    {

        internal static unsafe global::System.Numerics.Vector2 get_ControlPoint1(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::System.Numerics.Vector2 __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::System.Numerics.Vector2*, int>**)ThisPtr)[6](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }

        internal static unsafe global::System.Numerics.Vector2 get_ControlPoint2(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::System.Numerics.Vector2 __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::System.Numerics.Vector2*, int>**)ThisPtr)[7](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0xDE, 0xFC, 0xE7, 0x35, 0xCE, 0xF9, 0xA, 0x59, 0x8B, 0x88, 0x64, 0xA8, 0x2A, 0x6B, 0x4B, 0x48 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("35E7FCDE-F9CE-590A-8B88-64A82A6B4B48")]
    internal interface ICubicBezierEasingFunction : global::Microsoft.UI.Composition.ICubicBezierEasingFunction
    {
    }
    internal static class IDistantLightMethods
    {

        internal static unsafe global::Windows.UI.Color get_Color(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::Windows.UI.Color __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::Windows.UI.Color*, int>**)ThisPtr)[6](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }
        internal static unsafe void set_Color(IObjectReference _obj, global::Windows.UI.Color value)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::Windows.UI.Color, int>**)ThisPtr)[7](ThisPtr, value));
            global::System.GC.KeepAlive(_obj);
        }

        internal static unsafe global::Microsoft.UI.Composition.Visual get_CoordinateSpace(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[8](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Composition.Visual.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.UI.Composition.Visual.DisposeAbi(__retval);
            }
        }
        internal static unsafe void set_CoordinateSpace(IObjectReference _obj, global::Microsoft.UI.Composition.Visual value)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __value = default;
            try
            {
                __value = global::ABI.Microsoft.UI.Composition.Visual.CreateMarshaler2(value);
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, int>**)ThisPtr)[9](ThisPtr, MarshalInspectable<object>.GetAbi(__value)));
                global::System.GC.KeepAlive(_obj);
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__value);
            }
        }

        internal static unsafe global::System.Numerics.Vector3 get_Direction(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::System.Numerics.Vector3 __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::System.Numerics.Vector3*, int>**)ThisPtr)[10](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }
        internal static unsafe void set_Direction(IObjectReference _obj, global::System.Numerics.Vector3 value)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::System.Numerics.Vector3, int>**)ThisPtr)[11](ThisPtr, value));
            global::System.GC.KeepAlive(_obj);
        }



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0x56, 0xF5, 0x5E, 0x12, 0xEE, 0x56, 0x60, 0x5C, 0xB9, 0x44, 0x57, 0x19, 0x28, 0xCA, 0x3, 0xF5 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("125EF556-56EE-5C60-B944-571928CA03F5")]
    internal interface IDistantLight : global::Microsoft.UI.Composition.IDistantLight
    {
    }
    internal static class IDistantLight2Methods
    {

        internal static unsafe float get_Intensity(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            float __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, float*, int>**)ThisPtr)[6](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }
        internal static unsafe void set_Intensity(IObjectReference _obj, float value)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, float, int>**)ThisPtr)[7](ThisPtr, value));
            global::System.GC.KeepAlive(_obj);
        }



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0xEC, 0xBF, 0x97, 0x9F, 0xB9, 0xB6, 0xEE, 0x51, 0x84, 0x80, 0xB5, 0x46, 0x46, 0x8C, 0x74, 0x8F };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("9F97BFEC-B6B9-51EE-8480-B546468C748F")]
    internal interface IDistantLight2 : global::Microsoft.UI.Composition.IDistantLight2
    {
    }
    internal static class IDropShadowMethods
    {

        internal static unsafe float get_BlurRadius(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            float __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, float*, int>**)ThisPtr)[6](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }
        internal static unsafe void set_BlurRadius(IObjectReference _obj, float value)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, float, int>**)ThisPtr)[7](ThisPtr, value));
            global::System.GC.KeepAlive(_obj);
        }

        internal static unsafe global::Windows.UI.Color get_Color(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::Windows.UI.Color __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::Windows.UI.Color*, int>**)ThisPtr)[8](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }
        internal static unsafe void set_Color(IObjectReference _obj, global::Windows.UI.Color value)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::Windows.UI.Color, int>**)ThisPtr)[9](ThisPtr, value));
            global::System.GC.KeepAlive(_obj);
        }

        internal static unsafe global::Microsoft.UI.Composition.CompositionBrush get_Mask(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[10](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Composition.CompositionBrush.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.UI.Composition.CompositionBrush.DisposeAbi(__retval);
            }
        }
        internal static unsafe void set_Mask(IObjectReference _obj, global::Microsoft.UI.Composition.CompositionBrush value)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __value = default;
            try
            {
                __value = global::ABI.Microsoft.UI.Composition.CompositionBrush.CreateMarshaler2(value);
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, int>**)ThisPtr)[11](ThisPtr, MarshalInspectable<object>.GetAbi(__value)));
                global::System.GC.KeepAlive(_obj);
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__value);
            }
        }

        internal static unsafe global::System.Numerics.Vector3 get_Offset(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::System.Numerics.Vector3 __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::System.Numerics.Vector3*, int>**)ThisPtr)[12](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }
        internal static unsafe void set_Offset(IObjectReference _obj, global::System.Numerics.Vector3 value)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::System.Numerics.Vector3, int>**)ThisPtr)[13](ThisPtr, value));
            global::System.GC.KeepAlive(_obj);
        }

        internal static unsafe float get_Opacity(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            float __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, float*, int>**)ThisPtr)[14](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }
        internal static unsafe void set_Opacity(IObjectReference _obj, float value)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, float, int>**)ThisPtr)[15](ThisPtr, value));
            global::System.GC.KeepAlive(_obj);
        }



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0xD2, 0x95, 0x70, 0x97, 0x5F, 0x26, 0x58, 0x5F, 0x97, 0x89, 0xCB, 0x7F, 0x85, 0xE9, 0x8C, 0x9E };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("977095D2-265F-5F58-9789-CB7F85E98C9E")]
    internal interface IDropShadow : global::Microsoft.UI.Composition.IDropShadow
    {
    }
    internal static class IDropShadow2Methods
    {

        internal static unsafe global::Microsoft.UI.Composition.CompositionDropShadowSourcePolicy get_SourcePolicy(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::Microsoft.UI.Composition.CompositionDropShadowSourcePolicy __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::Microsoft.UI.Composition.CompositionDropShadowSourcePolicy*, int>**)ThisPtr)[6](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }
        internal static unsafe void set_SourcePolicy(IObjectReference _obj, global::Microsoft.UI.Composition.CompositionDropShadowSourcePolicy value)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::Microsoft.UI.Composition.CompositionDropShadowSourcePolicy, int>**)ThisPtr)[7](ThisPtr, value));
            global::System.GC.KeepAlive(_obj);
        }



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0x66, 0xC2, 0xC7, 0xCB, 0x33, 0x2D, 0x11, 0x57, 0xB3, 0xB4, 0x56, 0x99, 0x41, 0xB, 0xEF, 0x56 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("CBC7C266-2D33-5711-B3B4-5699410BEF56")]
    internal interface IDropShadow2 : global::Microsoft.UI.Composition.IDropShadow2
    {
    }
    internal static class IElasticEasingFunctionMethods
    {

        internal static unsafe global::Microsoft.UI.Composition.CompositionEasingFunctionMode get_Mode(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::Microsoft.UI.Composition.CompositionEasingFunctionMode __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::Microsoft.UI.Composition.CompositionEasingFunctionMode*, int>**)ThisPtr)[6](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }

        internal static unsafe int get_Oscillations(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            int __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, int*, int>**)ThisPtr)[7](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }

        internal static unsafe float get_Springiness(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            float __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, float*, int>**)ThisPtr)[8](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0x2F, 0xE1, 0x52, 0xB9, 0x50, 0x4A, 0xA9, 0x51, 0xA1, 0x1A, 0x23, 0x85, 0x5F, 0x4A, 0xAE, 0x7 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("B952E12F-4A50-51A9-A11A-23855F4AAE07")]
    internal interface IElasticEasingFunction : global::Microsoft.UI.Composition.IElasticEasingFunction
    {
    }
    internal static class IExpCompositionProjectedShadowMethods
    {

        internal static unsafe float get_MaxOpacity(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            float __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, float*, int>**)ThisPtr)[6](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }
        internal static unsafe void set_MaxOpacity(IObjectReference _obj, float value)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, float, int>**)ThisPtr)[7](ThisPtr, value));
            global::System.GC.KeepAlive(_obj);
        }

        internal static unsafe float get_MinOpacity(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            float __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, float*, int>**)ThisPtr)[8](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }
        internal static unsafe void set_MinOpacity(IObjectReference _obj, float value)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, float, int>**)ThisPtr)[9](ThisPtr, value));
            global::System.GC.KeepAlive(_obj);
        }

        internal static unsafe float get_OpacityFalloff(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            float __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, float*, int>**)ThisPtr)[10](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }
        internal static unsafe void set_OpacityFalloff(IObjectReference _obj, float value)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, float, int>**)ThisPtr)[11](ThisPtr, value));
            global::System.GC.KeepAlive(_obj);
        }



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0xBF, 0x47, 0x74, 0xDA, 0xA8, 0x78, 0x23, 0x50, 0xB1, 0xD5, 0x4E, 0xB0, 0x90, 0xD3, 0xCE, 0x25 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("DA7447BF-78A8-5023-B1D5-4EB090D3CE25")]
    internal interface IExpCompositionProjectedShadow : global::Microsoft.UI.Composition.IExpCompositionProjectedShadow
    {
    }
    internal static class IExpCompositionProjectedShadowCasterMethods
    {

        internal static unsafe global::Microsoft.UI.Composition.Visual get_AncestorClip(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[6](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Composition.Visual.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.UI.Composition.Visual.DisposeAbi(__retval);
            }
        }
        internal static unsafe void set_AncestorClip(IObjectReference _obj, global::Microsoft.UI.Composition.Visual value)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __value = default;
            try
            {
                __value = global::ABI.Microsoft.UI.Composition.Visual.CreateMarshaler2(value);
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, int>**)ThisPtr)[7](ThisPtr, MarshalInspectable<object>.GetAbi(__value)));
                global::System.GC.KeepAlive(_obj);
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__value);
            }
        }

        internal static unsafe global::Microsoft.UI.Composition.CompositionBrush get_Mask(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[8](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Composition.CompositionBrush.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.UI.Composition.CompositionBrush.DisposeAbi(__retval);
            }
        }
        internal static unsafe void set_Mask(IObjectReference _obj, global::Microsoft.UI.Composition.CompositionBrush value)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __value = default;
            try
            {
                __value = global::ABI.Microsoft.UI.Composition.CompositionBrush.CreateMarshaler2(value);
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, int>**)ThisPtr)[9](ThisPtr, MarshalInspectable<object>.GetAbi(__value)));
                global::System.GC.KeepAlive(_obj);
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__value);
            }
        }



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0x32, 0x3A, 0x1F, 0x20, 0x15, 0xB7, 0x3B, 0x5A, 0xAF, 0xC, 0x57, 0xF, 0x1D, 0xAE, 0x4F, 0x1B };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("201F3A32-B715-5A3B-AF0C-570F1DAE4F1B")]
    internal interface IExpCompositionProjectedShadowCaster : global::Microsoft.UI.Composition.IExpCompositionProjectedShadowCaster
    {
    }
    internal static class IExpCompositionProjectedShadowReceiverMethods
    {

        internal static unsafe global::Microsoft.UI.Composition.CompositionProjectedShadowDrawOrder get_DrawOrder(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::Microsoft.UI.Composition.CompositionProjectedShadowDrawOrder __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::Microsoft.UI.Composition.CompositionProjectedShadowDrawOrder*, int>**)ThisPtr)[6](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }
        internal static unsafe void set_DrawOrder(IObjectReference _obj, global::Microsoft.UI.Composition.CompositionProjectedShadowDrawOrder value)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::Microsoft.UI.Composition.CompositionProjectedShadowDrawOrder, int>**)ThisPtr)[7](ThisPtr, value));
            global::System.GC.KeepAlive(_obj);
        }

        internal static unsafe global::Microsoft.UI.Composition.CompositionBrush get_Mask(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[8](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Composition.CompositionBrush.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.UI.Composition.CompositionBrush.DisposeAbi(__retval);
            }
        }
        internal static unsafe void set_Mask(IObjectReference _obj, global::Microsoft.UI.Composition.CompositionBrush value)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __value = default;
            try
            {
                __value = global::ABI.Microsoft.UI.Composition.CompositionBrush.CreateMarshaler2(value);
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, int>**)ThisPtr)[9](ThisPtr, MarshalInspectable<object>.GetAbi(__value)));
                global::System.GC.KeepAlive(_obj);
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__value);
            }
        }



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0x8B, 0x2, 0xA2, 0x85, 0x6B, 0x89, 0xA2, 0x56, 0x89, 0x6B, 0x59, 0x85, 0xBA, 0x7F, 0xB0, 0xCF };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("85A2028B-896B-56A2-896B-5985BA7FB0CF")]
    internal interface IExpCompositionProjectedShadowReceiver : global::Microsoft.UI.Composition.IExpCompositionProjectedShadowReceiver
    {
    }
    internal static class IExponentialEasingFunctionMethods
    {

        internal static unsafe float get_Exponent(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            float __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, float*, int>**)ThisPtr)[7](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }

        internal static unsafe global::Microsoft.UI.Composition.CompositionEasingFunctionMode get_Mode(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::Microsoft.UI.Composition.CompositionEasingFunctionMode __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::Microsoft.UI.Composition.CompositionEasingFunctionMode*, int>**)ThisPtr)[6](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0xC1, 0xEC, 0x29, 0xDF, 0xFC, 0x3F, 0x5F, 0x56, 0x9D, 0x6C, 0x53, 0x35, 0x86, 0x90, 0x81, 0x6 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("DF29ECC1-3FFC-565F-9D6C-533586908106")]
    internal interface IExponentialEasingFunction : global::Microsoft.UI.Composition.IExponentialEasingFunction
    {
    }
    internal static class IExpressionAnimationMethods
    {

        internal static unsafe string get_Expression(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[6](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return MarshalString.FromAbi(__retval);
            }
            finally
            {
                MarshalString.DisposeAbi(__retval);
            }
        }
        internal static unsafe void set_Expression(IObjectReference _obj, string value)
        {
            var ThisPtr = _obj.ThisPtr;

            MarshalString.Pinnable __value = new(value);
            fixed(void* ___value = __value)
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, int>**)ThisPtr)[7](ThisPtr, MarshalString.GetAbi(ref __value)));
                global::System.GC.KeepAlive(_obj);
            }
        }



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0x26, 0x58, 0xFF, 0x7F, 0x92, 0x19, 0xC0, 0x56, 0x90, 0x60, 0x5A, 0xDE, 0x56, 0x1A, 0x4F, 0x2D };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("7FFF5826-1992-56C0-9060-5ADE561A4F2D")]
    internal interface IExpressionAnimation : global::Microsoft.UI.Composition.IExpressionAnimation
    {
    }
    internal static class IImplicitAnimationCollectionMethods
    {



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0x9E, 0x68, 0xC0, 0xC5, 0xAE, 0xF5, 0xED, 0x5B, 0x82, 0x9B, 0xC5, 0x22, 0xCD, 0xA3, 0x97, 0x17 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("C5C0689E-F5AE-5BED-829B-C522CDA39717")]
    internal interface IImplicitAnimationCollection : global::Microsoft.UI.Composition.IImplicitAnimationCollection
    {
    }
    internal static class IInsetClipMethods
    {

        internal static unsafe float get_BottomInset(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            float __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, float*, int>**)ThisPtr)[6](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }
        internal static unsafe void set_BottomInset(IObjectReference _obj, float value)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, float, int>**)ThisPtr)[7](ThisPtr, value));
            global::System.GC.KeepAlive(_obj);
        }

        internal static unsafe float get_LeftInset(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            float __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, float*, int>**)ThisPtr)[8](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }
        internal static unsafe void set_LeftInset(IObjectReference _obj, float value)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, float, int>**)ThisPtr)[9](ThisPtr, value));
            global::System.GC.KeepAlive(_obj);
        }

        internal static unsafe float get_RightInset(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            float __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, float*, int>**)ThisPtr)[10](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }
        internal static unsafe void set_RightInset(IObjectReference _obj, float value)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, float, int>**)ThisPtr)[11](ThisPtr, value));
            global::System.GC.KeepAlive(_obj);
        }

        internal static unsafe float get_TopInset(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            float __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, float*, int>**)ThisPtr)[12](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }
        internal static unsafe void set_TopInset(IObjectReference _obj, float value)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, float, int>**)ThisPtr)[13](ThisPtr, value));
            global::System.GC.KeepAlive(_obj);
        }



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0x75, 0x94, 0xD9, 0xF9, 0x59, 0x7B, 0x28, 0x5B, 0xA1, 0xD2, 0xB8, 0x32, 0xDA, 0x69, 0x88, 0xC9 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("F9D99475-7B59-5B28-A1D2-B832DA6988C9")]
    internal interface IInsetClip : global::Microsoft.UI.Composition.IInsetClip
    {
    }
    internal static class IKeyFrameAnimationMethods
    {


        internal static unsafe void InsertExpressionKeyFrame(IObjectReference _obj, float normalizedProgressKey, string value)
        {
            var ThisPtr = _obj.ThisPtr;

            MarshalString.Pinnable __value = new(value);
            fixed(void* ___value = __value)
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, float, IntPtr, int>**)ThisPtr)[17](ThisPtr, normalizedProgressKey, MarshalString.GetAbi(ref __value)));
                global::System.GC.KeepAlive(_obj);
            }
        }

        internal static unsafe void InsertExpressionKeyFrame(IObjectReference _obj, float normalizedProgressKey, string value, global::Microsoft.UI.Composition.CompositionEasingFunction easingFunction)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __easingFunction = default;
            try
            {
                __easingFunction = global::ABI.Microsoft.UI.Composition.CompositionEasingFunction.CreateMarshaler2(easingFunction);
                MarshalString.Pinnable __value = new(value);
                fixed(void* ___value = __value)
                {
                    global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, float, IntPtr, IntPtr, int>**)ThisPtr)[18](ThisPtr, normalizedProgressKey, MarshalString.GetAbi(ref __value), MarshalInspectable<object>.GetAbi(__easingFunction)));
                    global::System.GC.KeepAlive(_obj);
                }
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__easingFunction);
            }
        }
        internal static unsafe global::System.TimeSpan get_DelayTime(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::ABI.System.TimeSpan __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::ABI.System.TimeSpan*, int>**)ThisPtr)[6](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.System.TimeSpan.FromAbi(__retval);
            }
            finally
            {
                global::ABI.System.TimeSpan.DisposeAbi(__retval);
            }
        }
        internal static unsafe void set_DelayTime(IObjectReference _obj, global::System.TimeSpan value)
        {
            var ThisPtr = _obj.ThisPtr;

            global::ABI.System.TimeSpan.Marshaler __value = default;
            try
            {
                __value = global::ABI.System.TimeSpan.CreateMarshaler(value);
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::ABI.System.TimeSpan, int>**)ThisPtr)[7](ThisPtr, global::ABI.System.TimeSpan.GetAbi(__value)));
                global::System.GC.KeepAlive(_obj);
            }
            finally
            {
                global::ABI.System.TimeSpan.DisposeMarshaler(__value);
            }
        }

        internal static unsafe global::System.TimeSpan get_Duration(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::ABI.System.TimeSpan __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::ABI.System.TimeSpan*, int>**)ThisPtr)[8](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.System.TimeSpan.FromAbi(__retval);
            }
            finally
            {
                global::ABI.System.TimeSpan.DisposeAbi(__retval);
            }
        }
        internal static unsafe void set_Duration(IObjectReference _obj, global::System.TimeSpan value)
        {
            var ThisPtr = _obj.ThisPtr;

            global::ABI.System.TimeSpan.Marshaler __value = default;
            try
            {
                __value = global::ABI.System.TimeSpan.CreateMarshaler(value);
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::ABI.System.TimeSpan, int>**)ThisPtr)[9](ThisPtr, global::ABI.System.TimeSpan.GetAbi(__value)));
                global::System.GC.KeepAlive(_obj);
            }
            finally
            {
                global::ABI.System.TimeSpan.DisposeMarshaler(__value);
            }
        }

        internal static unsafe global::Microsoft.UI.Composition.AnimationIterationBehavior get_IterationBehavior(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::Microsoft.UI.Composition.AnimationIterationBehavior __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::Microsoft.UI.Composition.AnimationIterationBehavior*, int>**)ThisPtr)[10](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }
        internal static unsafe void set_IterationBehavior(IObjectReference _obj, global::Microsoft.UI.Composition.AnimationIterationBehavior value)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::Microsoft.UI.Composition.AnimationIterationBehavior, int>**)ThisPtr)[11](ThisPtr, value));
            global::System.GC.KeepAlive(_obj);
        }

        internal static unsafe int get_IterationCount(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            int __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, int*, int>**)ThisPtr)[12](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }
        internal static unsafe void set_IterationCount(IObjectReference _obj, int value)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, int, int>**)ThisPtr)[13](ThisPtr, value));
            global::System.GC.KeepAlive(_obj);
        }

        internal static unsafe int get_KeyFrameCount(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            int __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, int*, int>**)ThisPtr)[14](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }

        internal static unsafe global::Microsoft.UI.Composition.AnimationStopBehavior get_StopBehavior(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::Microsoft.UI.Composition.AnimationStopBehavior __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::Microsoft.UI.Composition.AnimationStopBehavior*, int>**)ThisPtr)[15](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }
        internal static unsafe void set_StopBehavior(IObjectReference _obj, global::Microsoft.UI.Composition.AnimationStopBehavior value)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::Microsoft.UI.Composition.AnimationStopBehavior, int>**)ThisPtr)[16](ThisPtr, value));
            global::System.GC.KeepAlive(_obj);
        }



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0xF0, 0x57, 0x8F, 0x5A, 0x59, 0xF0, 0x47, 0x5B, 0xB3, 0x8, 0xC4, 0xC8, 0xF, 0xC7, 0x12, 0x48 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("5A8F57F0-F059-5B47-B308-C4C80FC71248")]
    internal interface IKeyFrameAnimation : global::Microsoft.UI.Composition.IKeyFrameAnimation
    {
    }
    internal static class IKeyFrameAnimation2Methods
    {

        internal static unsafe global::Microsoft.UI.Composition.AnimationDirection get_Direction(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::Microsoft.UI.Composition.AnimationDirection __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::Microsoft.UI.Composition.AnimationDirection*, int>**)ThisPtr)[6](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }
        internal static unsafe void set_Direction(IObjectReference _obj, global::Microsoft.UI.Composition.AnimationDirection value)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::Microsoft.UI.Composition.AnimationDirection, int>**)ThisPtr)[7](ThisPtr, value));
            global::System.GC.KeepAlive(_obj);
        }



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0xE5, 0x92, 0x46, 0x41, 0x7E, 0x8A, 0xEA, 0x58, 0x83, 0xE1, 0x25, 0xCE, 0x47, 0x5D, 0x93, 0x0 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("414692E5-8A7E-58EA-83E1-25CE475D9300")]
    internal interface IKeyFrameAnimation2 : global::Microsoft.UI.Composition.IKeyFrameAnimation2
    {
    }
    internal static class IKeyFrameAnimation3Methods
    {

        internal static unsafe global::Microsoft.UI.Composition.AnimationDelayBehavior get_DelayBehavior(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::Microsoft.UI.Composition.AnimationDelayBehavior __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::Microsoft.UI.Composition.AnimationDelayBehavior*, int>**)ThisPtr)[6](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }
        internal static unsafe void set_DelayBehavior(IObjectReference _obj, global::Microsoft.UI.Composition.AnimationDelayBehavior value)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::Microsoft.UI.Composition.AnimationDelayBehavior, int>**)ThisPtr)[7](ThisPtr, value));
            global::System.GC.KeepAlive(_obj);
        }



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0x80, 0xE1, 0x97, 0x4F, 0xCB, 0x9B, 0xC4, 0x5F, 0xAB, 0xBE, 0x43, 0xAA, 0x3B, 0xE3, 0x27, 0xE7 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("4F97E180-9BCB-5FC4-ABBE-43AA3BE327E7")]
    internal interface IKeyFrameAnimation3 : global::Microsoft.UI.Composition.IKeyFrameAnimation3
    {
    }
    internal static class IKeyFrameAnimationFactoryMethods
    {



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0x87, 0xFC, 0xCC, 0x7C, 0xAF, 0x3B, 0x0, 0x51, 0xB5, 0xF8, 0x2F, 0x77, 0x9F, 0x95, 0x4F, 0x19 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("7CCCFC87-3BAF-5100-B5F8-2F779F954F19")]
    internal interface IKeyFrameAnimationFactory : global::Microsoft.UI.Composition.IKeyFrameAnimationFactory
    {
    }
    internal static class ILayerVisualMethods
    {

        internal static unsafe global::Microsoft.UI.Composition.CompositionEffectBrush get_Effect(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[6](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Composition.CompositionEffectBrush.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.UI.Composition.CompositionEffectBrush.DisposeAbi(__retval);
            }
        }
        internal static unsafe void set_Effect(IObjectReference _obj, global::Microsoft.UI.Composition.CompositionEffectBrush value)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __value = default;
            try
            {
                __value = global::ABI.Microsoft.UI.Composition.CompositionEffectBrush.CreateMarshaler2(value);
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, int>**)ThisPtr)[7](ThisPtr, MarshalInspectable<object>.GetAbi(__value)));
                global::System.GC.KeepAlive(_obj);
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__value);
            }
        }



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0xA1, 0x5C, 0xD0, 0x64, 0xF6, 0x3B, 0x4F, 0x5D, 0x98, 0xA1, 0x75, 0x0, 0xF2, 0xF2, 0x3E, 0xBE };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("64D05CA1-3BF6-5D4F-98A1-7500F2F23EBE")]
    internal interface ILayerVisual : global::Microsoft.UI.Composition.ILayerVisual
    {
    }
    internal static class ILayerVisual2Methods
    {

        internal static unsafe global::Microsoft.UI.Composition.CompositionShadow get_Shadow(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[6](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Composition.CompositionShadow.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.UI.Composition.CompositionShadow.DisposeAbi(__retval);
            }
        }
        internal static unsafe void set_Shadow(IObjectReference _obj, global::Microsoft.UI.Composition.CompositionShadow value)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __value = default;
            try
            {
                __value = global::ABI.Microsoft.UI.Composition.CompositionShadow.CreateMarshaler2(value);
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, int>**)ThisPtr)[7](ThisPtr, MarshalInspectable<object>.GetAbi(__value)));
                global::System.GC.KeepAlive(_obj);
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__value);
            }
        }



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0x1, 0xE4, 0xB2, 0x9A, 0x45, 0xAF, 0xDA, 0x54, 0x99, 0x91, 0xDD, 0x31, 0x27, 0x31, 0x55, 0xD2 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("9AB2E401-AF45-54DA-9991-DD31273155D2")]
    internal interface ILayerVisual2 : global::Microsoft.UI.Composition.ILayerVisual2
    {
    }
    internal static class ILinearEasingFunctionMethods
    {



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0xF6, 0xEE, 0xBF, 0x79, 0xC7, 0x70, 0xA6, 0x50, 0xBB, 0x3A, 0xE, 0x96, 0x36, 0x14, 0x86, 0x95 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("79BFEEF6-70C7-50A6-BB3A-0E9636148695")]
    internal interface ILinearEasingFunction : global::Microsoft.UI.Composition.ILinearEasingFunction
    {
    }
    internal static class INaturalMotionAnimationMethods
    {

        internal static unsafe global::Microsoft.UI.Composition.AnimationDelayBehavior get_DelayBehavior(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::Microsoft.UI.Composition.AnimationDelayBehavior __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::Microsoft.UI.Composition.AnimationDelayBehavior*, int>**)ThisPtr)[6](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }
        internal static unsafe void set_DelayBehavior(IObjectReference _obj, global::Microsoft.UI.Composition.AnimationDelayBehavior value)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::Microsoft.UI.Composition.AnimationDelayBehavior, int>**)ThisPtr)[7](ThisPtr, value));
            global::System.GC.KeepAlive(_obj);
        }

        internal static unsafe global::System.TimeSpan get_DelayTime(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::ABI.System.TimeSpan __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::ABI.System.TimeSpan*, int>**)ThisPtr)[8](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.System.TimeSpan.FromAbi(__retval);
            }
            finally
            {
                global::ABI.System.TimeSpan.DisposeAbi(__retval);
            }
        }
        internal static unsafe void set_DelayTime(IObjectReference _obj, global::System.TimeSpan value)
        {
            var ThisPtr = _obj.ThisPtr;

            global::ABI.System.TimeSpan.Marshaler __value = default;
            try
            {
                __value = global::ABI.System.TimeSpan.CreateMarshaler(value);
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::ABI.System.TimeSpan, int>**)ThisPtr)[9](ThisPtr, global::ABI.System.TimeSpan.GetAbi(__value)));
                global::System.GC.KeepAlive(_obj);
            }
            finally
            {
                global::ABI.System.TimeSpan.DisposeMarshaler(__value);
            }
        }

        internal static unsafe global::Microsoft.UI.Composition.AnimationStopBehavior get_StopBehavior(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::Microsoft.UI.Composition.AnimationStopBehavior __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::Microsoft.UI.Composition.AnimationStopBehavior*, int>**)ThisPtr)[10](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }
        internal static unsafe void set_StopBehavior(IObjectReference _obj, global::Microsoft.UI.Composition.AnimationStopBehavior value)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::Microsoft.UI.Composition.AnimationStopBehavior, int>**)ThisPtr)[11](ThisPtr, value));
            global::System.GC.KeepAlive(_obj);
        }



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0xBB, 0x4E, 0xF5, 0x2F, 0x35, 0xA0, 0xBE, 0x50, 0xA7, 0x3C, 0x20, 0x1, 0x49, 0x75, 0xEE, 0x31 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("2FF54EBB-A035-50BE-A73C-20014975EE31")]
    internal interface INaturalMotionAnimation : global::Microsoft.UI.Composition.INaturalMotionAnimation
    {
    }
    internal static class INaturalMotionAnimationFactoryMethods
    {



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0x59, 0xA2, 0x11, 0x4, 0x22, 0x26, 0xE2, 0x59, 0xA5, 0x9E, 0x1E, 0x23, 0xD8, 0xF8, 0x3A, 0x9F };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("0411A259-2622-59E2-A59E-1E23D8F83A9F")]
    internal interface INaturalMotionAnimationFactory : global::Microsoft.UI.Composition.INaturalMotionAnimationFactory
    {
    }
    internal static class IPathKeyFrameAnimationMethods
    {


        internal static unsafe void InsertKeyFrame(IObjectReference _obj, float normalizedProgressKey, global::Microsoft.UI.Composition.CompositionPath path)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __path = default;
            try
            {
                __path = global::ABI.Microsoft.UI.Composition.CompositionPath.CreateMarshaler2(path);
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, float, IntPtr, int>**)ThisPtr)[6](ThisPtr, normalizedProgressKey, MarshalInspectable<object>.GetAbi(__path)));
                global::System.GC.KeepAlive(_obj);
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__path);
            }
        }

        internal static unsafe void InsertKeyFrame(IObjectReference _obj, float normalizedProgressKey, global::Microsoft.UI.Composition.CompositionPath path, global::Microsoft.UI.Composition.CompositionEasingFunction easingFunction)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __path = default;
            ObjectReferenceValue __easingFunction = default;
            try
            {
                __path = global::ABI.Microsoft.UI.Composition.CompositionPath.CreateMarshaler2(path);
                __easingFunction = global::ABI.Microsoft.UI.Composition.CompositionEasingFunction.CreateMarshaler2(easingFunction);
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, float, IntPtr, IntPtr, int>**)ThisPtr)[7](ThisPtr, normalizedProgressKey, MarshalInspectable<object>.GetAbi(__path), MarshalInspectable<object>.GetAbi(__easingFunction)));
                global::System.GC.KeepAlive(_obj);
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__path);
                MarshalInspectable<object>.DisposeMarshaler(__easingFunction);
            }
        }


        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0x8, 0x28, 0x69, 0x2B, 0xDA, 0x43, 0x18, 0x51, 0xB6, 0x6D, 0x90, 0x4A, 0x3E, 0xC7, 0x4F, 0xD9 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("2B692808-43DA-5118-B66D-904A3EC74FD9")]
    internal interface IPathKeyFrameAnimation : global::Microsoft.UI.Composition.IPathKeyFrameAnimation
    {
    }
    internal static class IPointLightMethods
    {

        internal static unsafe global::Windows.UI.Color get_Color(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::Windows.UI.Color __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::Windows.UI.Color*, int>**)ThisPtr)[6](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }
        internal static unsafe void set_Color(IObjectReference _obj, global::Windows.UI.Color value)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::Windows.UI.Color, int>**)ThisPtr)[7](ThisPtr, value));
            global::System.GC.KeepAlive(_obj);
        }

        internal static unsafe float get_ConstantAttenuation(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            float __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, float*, int>**)ThisPtr)[8](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }
        internal static unsafe void set_ConstantAttenuation(IObjectReference _obj, float value)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, float, int>**)ThisPtr)[9](ThisPtr, value));
            global::System.GC.KeepAlive(_obj);
        }

        internal static unsafe global::Microsoft.UI.Composition.Visual get_CoordinateSpace(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[10](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Composition.Visual.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.UI.Composition.Visual.DisposeAbi(__retval);
            }
        }
        internal static unsafe void set_CoordinateSpace(IObjectReference _obj, global::Microsoft.UI.Composition.Visual value)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __value = default;
            try
            {
                __value = global::ABI.Microsoft.UI.Composition.Visual.CreateMarshaler2(value);
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, int>**)ThisPtr)[11](ThisPtr, MarshalInspectable<object>.GetAbi(__value)));
                global::System.GC.KeepAlive(_obj);
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__value);
            }
        }

        internal static unsafe float get_LinearAttenuation(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            float __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, float*, int>**)ThisPtr)[12](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }
        internal static unsafe void set_LinearAttenuation(IObjectReference _obj, float value)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, float, int>**)ThisPtr)[13](ThisPtr, value));
            global::System.GC.KeepAlive(_obj);
        }

        internal static unsafe global::System.Numerics.Vector3 get_Offset(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::System.Numerics.Vector3 __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::System.Numerics.Vector3*, int>**)ThisPtr)[14](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }
        internal static unsafe void set_Offset(IObjectReference _obj, global::System.Numerics.Vector3 value)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::System.Numerics.Vector3, int>**)ThisPtr)[15](ThisPtr, value));
            global::System.GC.KeepAlive(_obj);
        }

        internal static unsafe float get_QuadraticAttenuation(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            float __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, float*, int>**)ThisPtr)[16](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }
        internal static unsafe void set_QuadraticAttenuation(IObjectReference _obj, float value)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, float, int>**)ThisPtr)[17](ThisPtr, value));
            global::System.GC.KeepAlive(_obj);
        }



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0x2, 0xC1, 0x5C, 0xED, 0xAC, 0xF0, 0xA8, 0x59, 0x86, 0x78, 0xCE, 0x54, 0x14, 0x6E, 0x7B, 0xE8 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("ED5CC102-F0AC-59A8-8678-CE54146E7BE8")]
    internal interface IPointLight : global::Microsoft.UI.Composition.IPointLight
    {
    }
    internal static class IPointLight2Methods
    {

        internal static unsafe float get_Intensity(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            float __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, float*, int>**)ThisPtr)[6](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }
        internal static unsafe void set_Intensity(IObjectReference _obj, float value)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, float, int>**)ThisPtr)[7](ThisPtr, value));
            global::System.GC.KeepAlive(_obj);
        }



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0x4, 0x61, 0x46, 0xDE, 0xD9, 0x59, 0xD2, 0x57, 0x92, 0xB5, 0x55, 0x4D, 0x6D, 0x82, 0xED, 0xF2 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("DE466104-59D9-57D2-92B5-554D6D82EDF2")]
    internal interface IPointLight2 : global::Microsoft.UI.Composition.IPointLight2
    {
    }
    internal static class IPointLight3Methods
    {

        internal static unsafe float get_MaxAttenuationCutoff(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            float __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, float*, int>**)ThisPtr)[8](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }
        internal static unsafe void set_MaxAttenuationCutoff(IObjectReference _obj, float value)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, float, int>**)ThisPtr)[9](ThisPtr, value));
            global::System.GC.KeepAlive(_obj);
        }

        internal static unsafe float get_MinAttenuationCutoff(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            float __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, float*, int>**)ThisPtr)[6](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }
        internal static unsafe void set_MinAttenuationCutoff(IObjectReference _obj, float value)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, float, int>**)ThisPtr)[7](ThisPtr, value));
            global::System.GC.KeepAlive(_obj);
        }



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0x7A, 0xE8, 0x30, 0xBE, 0xBB, 0x8C, 0x56, 0x5A, 0x8D, 0x24, 0x2C, 0xD8, 0x65, 0xF3, 0x83, 0xB3 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("BE30E87A-8CBB-5A56-8D24-2CD865F383B3")]
    internal interface IPointLight3 : global::Microsoft.UI.Composition.IPointLight3
    {
    }
    internal static class IPowerEasingFunctionMethods
    {

        internal static unsafe global::Microsoft.UI.Composition.CompositionEasingFunctionMode get_Mode(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::Microsoft.UI.Composition.CompositionEasingFunctionMode __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::Microsoft.UI.Composition.CompositionEasingFunctionMode*, int>**)ThisPtr)[6](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }

        internal static unsafe float get_Power(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            float __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, float*, int>**)ThisPtr)[7](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0x72, 0xA2, 0x68, 0x2, 0x6, 0xEA, 0xB0, 0x5F, 0x8D, 0xEF, 0x49, 0x72, 0x6B, 0xCE, 0xE3, 0x9B };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("0268A272-EA06-5FB0-8DEF-49726BCEE39B")]
    internal interface IPowerEasingFunction : global::Microsoft.UI.Composition.IPowerEasingFunction
    {
    }
    internal static class IQuaternionKeyFrameAnimationMethods
    {


        internal static unsafe void InsertKeyFrame(IObjectReference _obj, float normalizedProgressKey, global::System.Numerics.Quaternion value)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, float, global::System.Numerics.Quaternion, int>**)ThisPtr)[6](ThisPtr, normalizedProgressKey, value));
            global::System.GC.KeepAlive(_obj);
        }

        internal static unsafe void InsertKeyFrame(IObjectReference _obj, float normalizedProgressKey, global::System.Numerics.Quaternion value, global::Microsoft.UI.Composition.CompositionEasingFunction easingFunction)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __easingFunction = default;
            try
            {
                __easingFunction = global::ABI.Microsoft.UI.Composition.CompositionEasingFunction.CreateMarshaler2(easingFunction);
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, float, global::System.Numerics.Quaternion, IntPtr, int>**)ThisPtr)[7](ThisPtr, normalizedProgressKey, value, MarshalInspectable<object>.GetAbi(__easingFunction)));
                global::System.GC.KeepAlive(_obj);
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__easingFunction);
            }
        }


        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0x26, 0x10, 0x2D, 0xE7, 0x3B, 0xDA, 0x56, 0x5D, 0x85, 0x8B, 0x3A, 0x9A, 0xA3, 0xC5, 0x7D, 0x70 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("E72D1026-DA3B-5D56-858B-3A9AA3C57D70")]
    internal interface IQuaternionKeyFrameAnimation : global::Microsoft.UI.Composition.IQuaternionKeyFrameAnimation
    {
    }
    internal static class IRectangleClipMethods
    {

        internal static unsafe float get_Bottom(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            float __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, float*, int>**)ThisPtr)[6](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }
        internal static unsafe void set_Bottom(IObjectReference _obj, float value)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, float, int>**)ThisPtr)[7](ThisPtr, value));
            global::System.GC.KeepAlive(_obj);
        }

        internal static unsafe global::System.Numerics.Vector2 get_BottomLeftRadius(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::System.Numerics.Vector2 __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::System.Numerics.Vector2*, int>**)ThisPtr)[8](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }
        internal static unsafe void set_BottomLeftRadius(IObjectReference _obj, global::System.Numerics.Vector2 value)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::System.Numerics.Vector2, int>**)ThisPtr)[9](ThisPtr, value));
            global::System.GC.KeepAlive(_obj);
        }

        internal static unsafe global::System.Numerics.Vector2 get_BottomRightRadius(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::System.Numerics.Vector2 __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::System.Numerics.Vector2*, int>**)ThisPtr)[10](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }
        internal static unsafe void set_BottomRightRadius(IObjectReference _obj, global::System.Numerics.Vector2 value)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::System.Numerics.Vector2, int>**)ThisPtr)[11](ThisPtr, value));
            global::System.GC.KeepAlive(_obj);
        }

        internal static unsafe float get_Left(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            float __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, float*, int>**)ThisPtr)[12](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }
        internal static unsafe void set_Left(IObjectReference _obj, float value)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, float, int>**)ThisPtr)[13](ThisPtr, value));
            global::System.GC.KeepAlive(_obj);
        }

        internal static unsafe float get_Right(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            float __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, float*, int>**)ThisPtr)[14](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }
        internal static unsafe void set_Right(IObjectReference _obj, float value)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, float, int>**)ThisPtr)[15](ThisPtr, value));
            global::System.GC.KeepAlive(_obj);
        }

        internal static unsafe float get_Top(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            float __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, float*, int>**)ThisPtr)[16](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }
        internal static unsafe void set_Top(IObjectReference _obj, float value)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, float, int>**)ThisPtr)[17](ThisPtr, value));
            global::System.GC.KeepAlive(_obj);
        }

        internal static unsafe global::System.Numerics.Vector2 get_TopLeftRadius(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::System.Numerics.Vector2 __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::System.Numerics.Vector2*, int>**)ThisPtr)[18](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }
        internal static unsafe void set_TopLeftRadius(IObjectReference _obj, global::System.Numerics.Vector2 value)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::System.Numerics.Vector2, int>**)ThisPtr)[19](ThisPtr, value));
            global::System.GC.KeepAlive(_obj);
        }

        internal static unsafe global::System.Numerics.Vector2 get_TopRightRadius(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::System.Numerics.Vector2 __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::System.Numerics.Vector2*, int>**)ThisPtr)[20](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }
        internal static unsafe void set_TopRightRadius(IObjectReference _obj, global::System.Numerics.Vector2 value)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::System.Numerics.Vector2, int>**)ThisPtr)[21](ThisPtr, value));
            global::System.GC.KeepAlive(_obj);
        }



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0x2, 0x15, 0x26, 0xBC, 0x59, 0x22, 0x1, 0x5C, 0x86, 0x16, 0x55, 0x61, 0x10, 0xA0, 0x96, 0x57 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("BC261502-2259-5C01-8616-556110A09657")]
    internal interface IRectangleClip : global::Microsoft.UI.Composition.IRectangleClip
    {
    }
    internal static class IRedirectVisualMethods
    {

        internal static unsafe global::Microsoft.UI.Composition.Visual get_Source(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[6](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Composition.Visual.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.UI.Composition.Visual.DisposeAbi(__retval);
            }
        }
        internal static unsafe void set_Source(IObjectReference _obj, global::Microsoft.UI.Composition.Visual value)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __value = default;
            try
            {
                __value = global::ABI.Microsoft.UI.Composition.Visual.CreateMarshaler2(value);
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, int>**)ThisPtr)[7](ThisPtr, MarshalInspectable<object>.GetAbi(__value)));
                global::System.GC.KeepAlive(_obj);
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__value);
            }
        }



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0x1A, 0x8, 0x10, 0x6C, 0xE1, 0xCD, 0xD9, 0x50, 0xAC, 0x5, 0x78, 0xD6, 0x84, 0x5B, 0x65, 0x6F };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("6C10081A-CDE1-50D9-AC05-78D6845B656F")]
    internal interface IRedirectVisual : global::Microsoft.UI.Composition.IRedirectVisual
    {
    }
    internal static class IRenderingDeviceReplacedEventArgsMethods
    {

        internal static unsafe global::Microsoft.UI.Composition.CompositionGraphicsDevice get_GraphicsDevice(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[6](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Composition.CompositionGraphicsDevice.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.UI.Composition.CompositionGraphicsDevice.DisposeAbi(__retval);
            }
        }



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0xC7, 0x97, 0x5B, 0xFE, 0x56, 0xF6, 0xD6, 0x56, 0xA0, 0xCD, 0x3E, 0x12, 0x27, 0xE4, 0xDD, 0x44 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("FE5B97C7-F656-56D6-A0CD-3E1227E4DD44")]
    internal interface IRenderingDeviceReplacedEventArgs : global::Microsoft.UI.Composition.IRenderingDeviceReplacedEventArgs
    {
    }
    internal static class IScalarKeyFrameAnimationMethods
    {


        internal static unsafe void InsertKeyFrame(IObjectReference _obj, float normalizedProgressKey, float value)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, float, float, int>**)ThisPtr)[6](ThisPtr, normalizedProgressKey, value));
            global::System.GC.KeepAlive(_obj);
        }

        internal static unsafe void InsertKeyFrame(IObjectReference _obj, float normalizedProgressKey, float value, global::Microsoft.UI.Composition.CompositionEasingFunction easingFunction)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __easingFunction = default;
            try
            {
                __easingFunction = global::ABI.Microsoft.UI.Composition.CompositionEasingFunction.CreateMarshaler2(easingFunction);
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, float, float, IntPtr, int>**)ThisPtr)[7](ThisPtr, normalizedProgressKey, value, MarshalInspectable<object>.GetAbi(__easingFunction)));
                global::System.GC.KeepAlive(_obj);
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__easingFunction);
            }
        }


        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0xBE, 0x8A, 0x5F, 0x5A, 0x29, 0xD1, 0x25, 0x5B, 0x8A, 0xFF, 0x81, 0x80, 0xFD, 0x9B, 0xFB, 0x22 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("5A5F8ABE-D129-5B25-8AFF-8180FD9BFB22")]
    internal interface IScalarKeyFrameAnimation : global::Microsoft.UI.Composition.IScalarKeyFrameAnimation
    {
    }
    internal static class IScalarNaturalMotionAnimationMethods
    {

        internal static unsafe global::System.Nullable<float> get_FinalValue(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[6](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return MarshalInterface<global::System.Nullable<float>>.FromAbi(__retval);
            }
            finally
            {
                MarshalInterface<global::System.Nullable<float>>.DisposeAbi(__retval);
            }
        }
        internal static unsafe void set_FinalValue(IObjectReference _obj, global::System.Nullable<float> value)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __value = default;
            try
            {
                __value = MarshalInterface<global::System.Nullable<float>>.CreateMarshaler2(value, global::ABI.System.Nullable<float>.PIID);
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, int>**)ThisPtr)[7](ThisPtr, MarshalInspectable<object>.GetAbi(__value)));
                global::System.GC.KeepAlive(_obj);
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__value);
            }
        }

        internal static unsafe global::System.Nullable<float> get_InitialValue(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[8](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return MarshalInterface<global::System.Nullable<float>>.FromAbi(__retval);
            }
            finally
            {
                MarshalInterface<global::System.Nullable<float>>.DisposeAbi(__retval);
            }
        }
        internal static unsafe void set_InitialValue(IObjectReference _obj, global::System.Nullable<float> value)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __value = default;
            try
            {
                __value = MarshalInterface<global::System.Nullable<float>>.CreateMarshaler2(value, global::ABI.System.Nullable<float>.PIID);
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, int>**)ThisPtr)[9](ThisPtr, MarshalInspectable<object>.GetAbi(__value)));
                global::System.GC.KeepAlive(_obj);
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__value);
            }
        }

        internal static unsafe float get_InitialVelocity(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            float __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, float*, int>**)ThisPtr)[10](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }
        internal static unsafe void set_InitialVelocity(IObjectReference _obj, float value)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, float, int>**)ThisPtr)[11](ThisPtr, value));
            global::System.GC.KeepAlive(_obj);
        }



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0xB0, 0x24, 0x32, 0x90, 0xBE, 0x2D, 0xEB, 0x56, 0xB9, 0xEA, 0x33, 0xD2, 0xE3, 0x11, 0x31, 0x81 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("903224B0-2DBE-56EB-B9EA-33D2E3113181")]
    internal interface IScalarNaturalMotionAnimation : global::Microsoft.UI.Composition.IScalarNaturalMotionAnimation
    {
    }
    internal static class IScalarNaturalMotionAnimationFactoryMethods
    {



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0xAB, 0xA9, 0xF8, 0x14, 0x6C, 0x97, 0x6F, 0x5E, 0x89, 0xB, 0x9A, 0x74, 0xD0, 0x7F, 0xA3, 0x9F };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("14F8A9AB-976C-5E6F-890B-9A74D07FA39F")]
    internal interface IScalarNaturalMotionAnimationFactory : global::Microsoft.UI.Composition.IScalarNaturalMotionAnimationFactory
    {
    }
    internal static class IShapeVisualMethods
    {

        internal static unsafe global::Microsoft.UI.Composition.CompositionShapeCollection get_Shapes(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[6](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Composition.CompositionShapeCollection.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.UI.Composition.CompositionShapeCollection.DisposeAbi(__retval);
            }
        }

        internal static unsafe global::Microsoft.UI.Composition.CompositionViewBox get_ViewBox(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[7](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Composition.CompositionViewBox.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.UI.Composition.CompositionViewBox.DisposeAbi(__retval);
            }
        }
        internal static unsafe void set_ViewBox(IObjectReference _obj, global::Microsoft.UI.Composition.CompositionViewBox value)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __value = default;
            try
            {
                __value = global::ABI.Microsoft.UI.Composition.CompositionViewBox.CreateMarshaler2(value);
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, int>**)ThisPtr)[8](ThisPtr, MarshalInspectable<object>.GetAbi(__value)));
                global::System.GC.KeepAlive(_obj);
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__value);
            }
        }



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0xB, 0xC8, 0x11, 0xA9, 0xA5, 0xA5, 0xCA, 0x5A, 0xB8, 0xFF, 0xC4, 0x3F, 0x8, 0xF0, 0x61, 0x43 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("A911C80B-A5A5-5ACA-B8FF-C43F08F06143")]
    internal interface IShapeVisual : global::Microsoft.UI.Composition.IShapeVisual
    {
    }
    internal static class ISineEasingFunctionMethods
    {

        internal static unsafe global::Microsoft.UI.Composition.CompositionEasingFunctionMode get_Mode(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::Microsoft.UI.Composition.CompositionEasingFunctionMode __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::Microsoft.UI.Composition.CompositionEasingFunctionMode*, int>**)ThisPtr)[6](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0xF8, 0xB5, 0xCC, 0x7F, 0xE, 0xCB, 0x1, 0x5A, 0xA2, 0x6B, 0x98, 0x88, 0xF, 0xF4, 0x9D, 0xC6 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("7FCCB5F8-CB0E-5A01-A26B-98880FF49DC6")]
    internal interface ISineEasingFunction : global::Microsoft.UI.Composition.ISineEasingFunction
    {
    }
    internal static class ISpotLightMethods
    {

        internal static unsafe float get_ConstantAttenuation(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            float __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, float*, int>**)ThisPtr)[6](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }
        internal static unsafe void set_ConstantAttenuation(IObjectReference _obj, float value)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, float, int>**)ThisPtr)[7](ThisPtr, value));
            global::System.GC.KeepAlive(_obj);
        }

        internal static unsafe global::Microsoft.UI.Composition.Visual get_CoordinateSpace(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[8](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Composition.Visual.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.UI.Composition.Visual.DisposeAbi(__retval);
            }
        }
        internal static unsafe void set_CoordinateSpace(IObjectReference _obj, global::Microsoft.UI.Composition.Visual value)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __value = default;
            try
            {
                __value = global::ABI.Microsoft.UI.Composition.Visual.CreateMarshaler2(value);
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, int>**)ThisPtr)[9](ThisPtr, MarshalInspectable<object>.GetAbi(__value)));
                global::System.GC.KeepAlive(_obj);
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__value);
            }
        }

        internal static unsafe global::System.Numerics.Vector3 get_Direction(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::System.Numerics.Vector3 __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::System.Numerics.Vector3*, int>**)ThisPtr)[10](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }
        internal static unsafe void set_Direction(IObjectReference _obj, global::System.Numerics.Vector3 value)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::System.Numerics.Vector3, int>**)ThisPtr)[11](ThisPtr, value));
            global::System.GC.KeepAlive(_obj);
        }

        internal static unsafe float get_InnerConeAngle(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            float __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, float*, int>**)ThisPtr)[12](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }
        internal static unsafe void set_InnerConeAngle(IObjectReference _obj, float value)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, float, int>**)ThisPtr)[13](ThisPtr, value));
            global::System.GC.KeepAlive(_obj);
        }

        internal static unsafe float get_InnerConeAngleInDegrees(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            float __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, float*, int>**)ThisPtr)[14](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }
        internal static unsafe void set_InnerConeAngleInDegrees(IObjectReference _obj, float value)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, float, int>**)ThisPtr)[15](ThisPtr, value));
            global::System.GC.KeepAlive(_obj);
        }

        internal static unsafe global::Windows.UI.Color get_InnerConeColor(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::Windows.UI.Color __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::Windows.UI.Color*, int>**)ThisPtr)[16](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }
        internal static unsafe void set_InnerConeColor(IObjectReference _obj, global::Windows.UI.Color value)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::Windows.UI.Color, int>**)ThisPtr)[17](ThisPtr, value));
            global::System.GC.KeepAlive(_obj);
        }

        internal static unsafe float get_LinearAttenuation(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            float __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, float*, int>**)ThisPtr)[18](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }
        internal static unsafe void set_LinearAttenuation(IObjectReference _obj, float value)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, float, int>**)ThisPtr)[19](ThisPtr, value));
            global::System.GC.KeepAlive(_obj);
        }

        internal static unsafe global::System.Numerics.Vector3 get_Offset(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::System.Numerics.Vector3 __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::System.Numerics.Vector3*, int>**)ThisPtr)[20](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }
        internal static unsafe void set_Offset(IObjectReference _obj, global::System.Numerics.Vector3 value)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::System.Numerics.Vector3, int>**)ThisPtr)[21](ThisPtr, value));
            global::System.GC.KeepAlive(_obj);
        }

        internal static unsafe float get_OuterConeAngle(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            float __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, float*, int>**)ThisPtr)[22](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }
        internal static unsafe void set_OuterConeAngle(IObjectReference _obj, float value)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, float, int>**)ThisPtr)[23](ThisPtr, value));
            global::System.GC.KeepAlive(_obj);
        }

        internal static unsafe float get_OuterConeAngleInDegrees(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            float __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, float*, int>**)ThisPtr)[24](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }
        internal static unsafe void set_OuterConeAngleInDegrees(IObjectReference _obj, float value)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, float, int>**)ThisPtr)[25](ThisPtr, value));
            global::System.GC.KeepAlive(_obj);
        }

        internal static unsafe global::Windows.UI.Color get_OuterConeColor(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::Windows.UI.Color __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::Windows.UI.Color*, int>**)ThisPtr)[26](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }
        internal static unsafe void set_OuterConeColor(IObjectReference _obj, global::Windows.UI.Color value)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::Windows.UI.Color, int>**)ThisPtr)[27](ThisPtr, value));
            global::System.GC.KeepAlive(_obj);
        }

        internal static unsafe float get_QuadraticAttenuation(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            float __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, float*, int>**)ThisPtr)[28](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }
        internal static unsafe void set_QuadraticAttenuation(IObjectReference _obj, float value)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, float, int>**)ThisPtr)[29](ThisPtr, value));
            global::System.GC.KeepAlive(_obj);
        }



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0x6A, 0x49, 0x35, 0x59, 0x86, 0x5, 0x77, 0x5F, 0xBD, 0x3, 0xD5, 0xA6, 0xBB, 0x9E, 0x8F, 0xA0 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("5935496A-0586-5F77-BD03-D5A6BB9E8FA0")]
    internal interface ISpotLight : global::Microsoft.UI.Composition.ISpotLight
    {
    }
    internal static class ISpotLight2Methods
    {

        internal static unsafe float get_InnerConeIntensity(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            float __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, float*, int>**)ThisPtr)[6](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }
        internal static unsafe void set_InnerConeIntensity(IObjectReference _obj, float value)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, float, int>**)ThisPtr)[7](ThisPtr, value));
            global::System.GC.KeepAlive(_obj);
        }

        internal static unsafe float get_OuterConeIntensity(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            float __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, float*, int>**)ThisPtr)[8](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }
        internal static unsafe void set_OuterConeIntensity(IObjectReference _obj, float value)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, float, int>**)ThisPtr)[9](ThisPtr, value));
            global::System.GC.KeepAlive(_obj);
        }



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0x50, 0x3B, 0xDD, 0x49, 0x5C, 0xEC, 0x6C, 0x5B, 0xBA, 0xA1, 0x85, 0x4, 0xB1, 0x3E, 0x3A, 0x67 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("49DD3B50-EC5C-5B6C-BAA1-8504B13E3A67")]
    internal interface ISpotLight2 : global::Microsoft.UI.Composition.ISpotLight2
    {
    }
    internal static class ISpotLight3Methods
    {

        internal static unsafe float get_MaxAttenuationCutoff(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            float __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, float*, int>**)ThisPtr)[8](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }
        internal static unsafe void set_MaxAttenuationCutoff(IObjectReference _obj, float value)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, float, int>**)ThisPtr)[9](ThisPtr, value));
            global::System.GC.KeepAlive(_obj);
        }

        internal static unsafe float get_MinAttenuationCutoff(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            float __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, float*, int>**)ThisPtr)[6](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }
        internal static unsafe void set_MinAttenuationCutoff(IObjectReference _obj, float value)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, float, int>**)ThisPtr)[7](ThisPtr, value));
            global::System.GC.KeepAlive(_obj);
        }



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0x41, 0x99, 0x91, 0xC6, 0x9F, 0xD, 0xC8, 0x58, 0x91, 0xE2, 0xAD, 0xEF, 0x6E, 0x5E, 0x70, 0xA4 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("C6919941-0D9F-58C8-91E2-ADEF6E5E70A4")]
    internal interface ISpotLight3 : global::Microsoft.UI.Composition.ISpotLight3
    {
    }
    internal static class ISpringScalarNaturalMotionAnimationMethods
    {

        internal static unsafe float get_DampingRatio(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            float __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, float*, int>**)ThisPtr)[6](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }
        internal static unsafe void set_DampingRatio(IObjectReference _obj, float value)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, float, int>**)ThisPtr)[7](ThisPtr, value));
            global::System.GC.KeepAlive(_obj);
        }

        internal static unsafe global::System.TimeSpan get_Period(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::ABI.System.TimeSpan __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::ABI.System.TimeSpan*, int>**)ThisPtr)[8](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.System.TimeSpan.FromAbi(__retval);
            }
            finally
            {
                global::ABI.System.TimeSpan.DisposeAbi(__retval);
            }
        }
        internal static unsafe void set_Period(IObjectReference _obj, global::System.TimeSpan value)
        {
            var ThisPtr = _obj.ThisPtr;

            global::ABI.System.TimeSpan.Marshaler __value = default;
            try
            {
                __value = global::ABI.System.TimeSpan.CreateMarshaler(value);
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::ABI.System.TimeSpan, int>**)ThisPtr)[9](ThisPtr, global::ABI.System.TimeSpan.GetAbi(__value)));
                global::System.GC.KeepAlive(_obj);
            }
            finally
            {
                global::ABI.System.TimeSpan.DisposeMarshaler(__value);
            }
        }



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0xFD, 0xA, 0x72, 0x6F, 0xD0, 0xD3, 0x78, 0x5E, 0x9C, 0x2E, 0x83, 0x9, 0x2F, 0x6E, 0xA4, 0x5E };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("6F720AFD-D3D0-5E78-9C2E-83092F6EA45E")]
    internal interface ISpringScalarNaturalMotionAnimation : global::Microsoft.UI.Composition.ISpringScalarNaturalMotionAnimation
    {
    }
    internal static class ISpringVector2NaturalMotionAnimationMethods
    {

        internal static unsafe float get_DampingRatio(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            float __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, float*, int>**)ThisPtr)[6](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }
        internal static unsafe void set_DampingRatio(IObjectReference _obj, float value)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, float, int>**)ThisPtr)[7](ThisPtr, value));
            global::System.GC.KeepAlive(_obj);
        }

        internal static unsafe global::System.TimeSpan get_Period(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::ABI.System.TimeSpan __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::ABI.System.TimeSpan*, int>**)ThisPtr)[8](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.System.TimeSpan.FromAbi(__retval);
            }
            finally
            {
                global::ABI.System.TimeSpan.DisposeAbi(__retval);
            }
        }
        internal static unsafe void set_Period(IObjectReference _obj, global::System.TimeSpan value)
        {
            var ThisPtr = _obj.ThisPtr;

            global::ABI.System.TimeSpan.Marshaler __value = default;
            try
            {
                __value = global::ABI.System.TimeSpan.CreateMarshaler(value);
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::ABI.System.TimeSpan, int>**)ThisPtr)[9](ThisPtr, global::ABI.System.TimeSpan.GetAbi(__value)));
                global::System.GC.KeepAlive(_obj);
            }
            finally
            {
                global::ABI.System.TimeSpan.DisposeMarshaler(__value);
            }
        }



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0xA4, 0x80, 0x45, 0x5B, 0x94, 0x25, 0x1E, 0x52, 0xB2, 0x88, 0xEA, 0xF2, 0xC2, 0xA1, 0x6A, 0x66 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("5B4580A4-2594-521E-B288-EAF2C2A16A66")]
    internal interface ISpringVector2NaturalMotionAnimation : global::Microsoft.UI.Composition.ISpringVector2NaturalMotionAnimation
    {
    }
    internal static class ISpringVector3NaturalMotionAnimationMethods
    {

        internal static unsafe float get_DampingRatio(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            float __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, float*, int>**)ThisPtr)[6](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }
        internal static unsafe void set_DampingRatio(IObjectReference _obj, float value)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, float, int>**)ThisPtr)[7](ThisPtr, value));
            global::System.GC.KeepAlive(_obj);
        }

        internal static unsafe global::System.TimeSpan get_Period(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::ABI.System.TimeSpan __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::ABI.System.TimeSpan*, int>**)ThisPtr)[8](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.System.TimeSpan.FromAbi(__retval);
            }
            finally
            {
                global::ABI.System.TimeSpan.DisposeAbi(__retval);
            }
        }
        internal static unsafe void set_Period(IObjectReference _obj, global::System.TimeSpan value)
        {
            var ThisPtr = _obj.ThisPtr;

            global::ABI.System.TimeSpan.Marshaler __value = default;
            try
            {
                __value = global::ABI.System.TimeSpan.CreateMarshaler(value);
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::ABI.System.TimeSpan, int>**)ThisPtr)[9](ThisPtr, global::ABI.System.TimeSpan.GetAbi(__value)));
                global::System.GC.KeepAlive(_obj);
            }
            finally
            {
                global::ABI.System.TimeSpan.DisposeMarshaler(__value);
            }
        }



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0xC6, 0xE1, 0xD9, 0x2, 0x34, 0x74, 0x64, 0x54, 0xA1, 0xF6, 0xD6, 0x44, 0xCE, 0x1F, 0xC9, 0xA6 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("02D9E1C6-7434-5464-A1F6-D644CE1FC9A6")]
    internal interface ISpringVector3NaturalMotionAnimation : global::Microsoft.UI.Composition.ISpringVector3NaturalMotionAnimation
    {
    }
    internal static class ISpriteVisualMethods
    {

        internal static unsafe global::Microsoft.UI.Composition.CompositionBrush get_Brush(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[6](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Composition.CompositionBrush.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.UI.Composition.CompositionBrush.DisposeAbi(__retval);
            }
        }
        internal static unsafe void set_Brush(IObjectReference _obj, global::Microsoft.UI.Composition.CompositionBrush value)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __value = default;
            try
            {
                __value = global::ABI.Microsoft.UI.Composition.CompositionBrush.CreateMarshaler2(value);
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, int>**)ThisPtr)[7](ThisPtr, MarshalInspectable<object>.GetAbi(__value)));
                global::System.GC.KeepAlive(_obj);
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__value);
            }
        }



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0x32, 0x46, 0x96, 0x7E, 0xE4, 0x45, 0x61, 0x57, 0x80, 0x6D, 0x5B, 0x40, 0x22, 0xC1, 0x4F, 0x26 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("7E964632-45E4-5761-806D-5B4022C14F26")]
    internal interface ISpriteVisual : global::Microsoft.UI.Composition.ISpriteVisual
    {
    }
    internal static class ISpriteVisual2Methods
    {

        internal static unsafe global::Microsoft.UI.Composition.CompositionShadow get_Shadow(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[6](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Composition.CompositionShadow.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.UI.Composition.CompositionShadow.DisposeAbi(__retval);
            }
        }
        internal static unsafe void set_Shadow(IObjectReference _obj, global::Microsoft.UI.Composition.CompositionShadow value)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __value = default;
            try
            {
                __value = global::ABI.Microsoft.UI.Composition.CompositionShadow.CreateMarshaler2(value);
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, int>**)ThisPtr)[7](ThisPtr, MarshalInspectable<object>.GetAbi(__value)));
                global::System.GC.KeepAlive(_obj);
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__value);
            }
        }



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0x62, 0x36, 0xB4, 0x3C, 0xCF, 0x9E, 0x28, 0x51, 0x85, 0xD, 0x9E, 0xB8, 0x43, 0x77, 0x74, 0xF0 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("3CB43662-9ECF-5128-850D-9EB8437774F0")]
    internal interface ISpriteVisual2 : global::Microsoft.UI.Composition.ISpriteVisual2
    {
    }
    internal static class IStepEasingFunctionMethods
    {

        internal static unsafe int get_FinalStep(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            int __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, int*, int>**)ThisPtr)[6](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }
        internal static unsafe void set_FinalStep(IObjectReference _obj, int value)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, int, int>**)ThisPtr)[7](ThisPtr, value));
            global::System.GC.KeepAlive(_obj);
        }

        internal static unsafe int get_InitialStep(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            int __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, int*, int>**)ThisPtr)[8](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }
        internal static unsafe void set_InitialStep(IObjectReference _obj, int value)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, int, int>**)ThisPtr)[9](ThisPtr, value));
            global::System.GC.KeepAlive(_obj);
        }

        internal static unsafe bool get_IsFinalStepSingleFrame(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            byte __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, byte*, int>**)ThisPtr)[10](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval != 0;
        }
        internal static unsafe void set_IsFinalStepSingleFrame(IObjectReference _obj, bool value)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, byte, int>**)ThisPtr)[11](ThisPtr, (byte)(value ? 1 : 0)));
            global::System.GC.KeepAlive(_obj);
        }

        internal static unsafe bool get_IsInitialStepSingleFrame(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            byte __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, byte*, int>**)ThisPtr)[12](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval != 0;
        }
        internal static unsafe void set_IsInitialStepSingleFrame(IObjectReference _obj, bool value)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, byte, int>**)ThisPtr)[13](ThisPtr, (byte)(value ? 1 : 0)));
            global::System.GC.KeepAlive(_obj);
        }

        internal static unsafe int get_StepCount(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            int __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, int*, int>**)ThisPtr)[14](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }
        internal static unsafe void set_StepCount(IObjectReference _obj, int value)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, int, int>**)ThisPtr)[15](ThisPtr, value));
            global::System.GC.KeepAlive(_obj);
        }



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0xCF, 0xD4, 0xB1, 0xC7, 0x62, 0xC5, 0xB3, 0x56, 0xB4, 0xE6, 0xB2, 0x13, 0x26, 0x16, 0x5F, 0x71 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("C7B1D4CF-C562-56B3-B4E6-B21326165F71")]
    internal interface IStepEasingFunction : global::Microsoft.UI.Composition.IStepEasingFunction
    {
    }
    internal static class IVector2KeyFrameAnimationMethods
    {


        internal static unsafe void InsertKeyFrame(IObjectReference _obj, float normalizedProgressKey, global::System.Numerics.Vector2 value)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, float, global::System.Numerics.Vector2, int>**)ThisPtr)[6](ThisPtr, normalizedProgressKey, value));
            global::System.GC.KeepAlive(_obj);
        }

        internal static unsafe void InsertKeyFrame(IObjectReference _obj, float normalizedProgressKey, global::System.Numerics.Vector2 value, global::Microsoft.UI.Composition.CompositionEasingFunction easingFunction)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __easingFunction = default;
            try
            {
                __easingFunction = global::ABI.Microsoft.UI.Composition.CompositionEasingFunction.CreateMarshaler2(easingFunction);
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, float, global::System.Numerics.Vector2, IntPtr, int>**)ThisPtr)[7](ThisPtr, normalizedProgressKey, value, MarshalInspectable<object>.GetAbi(__easingFunction)));
                global::System.GC.KeepAlive(_obj);
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__easingFunction);
            }
        }


        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0xFD, 0xE3, 0xC5, 0xE9, 0xB7, 0x43, 0x6E, 0x52, 0x9D, 0xA0, 0x4C, 0x3E, 0xA9, 0x6D, 0xB2, 0x7D };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("E9C5E3FD-43B7-526E-9DA0-4C3EA96DB27D")]
    internal interface IVector2KeyFrameAnimation : global::Microsoft.UI.Composition.IVector2KeyFrameAnimation
    {
    }
    internal static class IVector2NaturalMotionAnimationMethods
    {

        internal static unsafe global::System.Nullable<global::System.Numerics.Vector2> get_FinalValue(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[6](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return MarshalInterface<global::System.Nullable<global::System.Numerics.Vector2>>.FromAbi(__retval);
            }
            finally
            {
                MarshalInterface<global::System.Nullable<global::System.Numerics.Vector2>>.DisposeAbi(__retval);
            }
        }
        internal static unsafe void set_FinalValue(IObjectReference _obj, global::System.Nullable<global::System.Numerics.Vector2> value)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __value = default;
            try
            {
                __value = MarshalInterface<global::System.Nullable<global::System.Numerics.Vector2>>.CreateMarshaler2(value, global::ABI.System.Nullable<global::System.Numerics.Vector2>.PIID);
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, int>**)ThisPtr)[7](ThisPtr, MarshalInspectable<object>.GetAbi(__value)));
                global::System.GC.KeepAlive(_obj);
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__value);
            }
        }

        internal static unsafe global::System.Nullable<global::System.Numerics.Vector2> get_InitialValue(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[8](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return MarshalInterface<global::System.Nullable<global::System.Numerics.Vector2>>.FromAbi(__retval);
            }
            finally
            {
                MarshalInterface<global::System.Nullable<global::System.Numerics.Vector2>>.DisposeAbi(__retval);
            }
        }
        internal static unsafe void set_InitialValue(IObjectReference _obj, global::System.Nullable<global::System.Numerics.Vector2> value)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __value = default;
            try
            {
                __value = MarshalInterface<global::System.Nullable<global::System.Numerics.Vector2>>.CreateMarshaler2(value, global::ABI.System.Nullable<global::System.Numerics.Vector2>.PIID);
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, int>**)ThisPtr)[9](ThisPtr, MarshalInspectable<object>.GetAbi(__value)));
                global::System.GC.KeepAlive(_obj);
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__value);
            }
        }

        internal static unsafe global::System.Numerics.Vector2 get_InitialVelocity(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::System.Numerics.Vector2 __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::System.Numerics.Vector2*, int>**)ThisPtr)[10](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }
        internal static unsafe void set_InitialVelocity(IObjectReference _obj, global::System.Numerics.Vector2 value)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::System.Numerics.Vector2, int>**)ThisPtr)[11](ThisPtr, value));
            global::System.GC.KeepAlive(_obj);
        }



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0xCE, 0x60, 0xE, 0xE0, 0xBE, 0xD1, 0x24, 0x5C, 0x88, 0x5D, 0xC1, 0xD0, 0xA7, 0x49, 0xD1, 0x9 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("E00E60CE-D1BE-5C24-885D-C1D0A749D109")]
    internal interface IVector2NaturalMotionAnimation : global::Microsoft.UI.Composition.IVector2NaturalMotionAnimation
    {
    }
    internal static class IVector2NaturalMotionAnimationFactoryMethods
    {



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0xD8, 0xEA, 0x9A, 0xE3, 0xF9, 0x80, 0x64, 0x5F, 0x86, 0x44, 0xE9, 0xE5, 0x64, 0x6B, 0x79, 0x6F };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("E39AEAD8-80F9-5F64-8644-E9E5646B796F")]
    internal interface IVector2NaturalMotionAnimationFactory : global::Microsoft.UI.Composition.IVector2NaturalMotionAnimationFactory
    {
    }
    internal static class IVector3KeyFrameAnimationMethods
    {


        internal static unsafe void InsertKeyFrame(IObjectReference _obj, float normalizedProgressKey, global::System.Numerics.Vector3 value)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, float, global::System.Numerics.Vector3, int>**)ThisPtr)[6](ThisPtr, normalizedProgressKey, value));
            global::System.GC.KeepAlive(_obj);
        }

        internal static unsafe void InsertKeyFrame(IObjectReference _obj, float normalizedProgressKey, global::System.Numerics.Vector3 value, global::Microsoft.UI.Composition.CompositionEasingFunction easingFunction)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __easingFunction = default;
            try
            {
                __easingFunction = global::ABI.Microsoft.UI.Composition.CompositionEasingFunction.CreateMarshaler2(easingFunction);
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, float, global::System.Numerics.Vector3, IntPtr, int>**)ThisPtr)[7](ThisPtr, normalizedProgressKey, value, MarshalInspectable<object>.GetAbi(__easingFunction)));
                global::System.GC.KeepAlive(_obj);
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__easingFunction);
            }
        }


        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0xE, 0x98, 0xDA, 0xD7, 0xDE, 0x2D, 0xD1, 0x5D, 0xA4, 0xC, 0xD6, 0x86, 0x8D, 0xD2, 0x44, 0x9E };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("D7DA980E-2DDE-5DD1-A40C-D6868DD2449E")]
    internal interface IVector3KeyFrameAnimation : global::Microsoft.UI.Composition.IVector3KeyFrameAnimation
    {
    }
    internal static class IVector3NaturalMotionAnimationMethods
    {

        internal static unsafe global::System.Nullable<global::System.Numerics.Vector3> get_FinalValue(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[6](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return MarshalInterface<global::System.Nullable<global::System.Numerics.Vector3>>.FromAbi(__retval);
            }
            finally
            {
                MarshalInterface<global::System.Nullable<global::System.Numerics.Vector3>>.DisposeAbi(__retval);
            }
        }
        internal static unsafe void set_FinalValue(IObjectReference _obj, global::System.Nullable<global::System.Numerics.Vector3> value)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __value = default;
            try
            {
                __value = MarshalInterface<global::System.Nullable<global::System.Numerics.Vector3>>.CreateMarshaler2(value, global::ABI.System.Nullable<global::System.Numerics.Vector3>.PIID);
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, int>**)ThisPtr)[7](ThisPtr, MarshalInspectable<object>.GetAbi(__value)));
                global::System.GC.KeepAlive(_obj);
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__value);
            }
        }

        internal static unsafe global::System.Nullable<global::System.Numerics.Vector3> get_InitialValue(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[8](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return MarshalInterface<global::System.Nullable<global::System.Numerics.Vector3>>.FromAbi(__retval);
            }
            finally
            {
                MarshalInterface<global::System.Nullable<global::System.Numerics.Vector3>>.DisposeAbi(__retval);
            }
        }
        internal static unsafe void set_InitialValue(IObjectReference _obj, global::System.Nullable<global::System.Numerics.Vector3> value)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __value = default;
            try
            {
                __value = MarshalInterface<global::System.Nullable<global::System.Numerics.Vector3>>.CreateMarshaler2(value, global::ABI.System.Nullable<global::System.Numerics.Vector3>.PIID);
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, int>**)ThisPtr)[9](ThisPtr, MarshalInspectable<object>.GetAbi(__value)));
                global::System.GC.KeepAlive(_obj);
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__value);
            }
        }

        internal static unsafe global::System.Numerics.Vector3 get_InitialVelocity(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::System.Numerics.Vector3 __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::System.Numerics.Vector3*, int>**)ThisPtr)[10](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }
        internal static unsafe void set_InitialVelocity(IObjectReference _obj, global::System.Numerics.Vector3 value)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::System.Numerics.Vector3, int>**)ThisPtr)[11](ThisPtr, value));
            global::System.GC.KeepAlive(_obj);
        }



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0xF2, 0xEE, 0xFE, 0x13, 0xC0, 0xD2, 0x72, 0x5B, 0xAD, 0x67, 0x98, 0x3A, 0x19, 0xB9, 0xB7, 0x83 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("13FEEEF2-D2C0-5B72-AD67-983A19B9B783")]
    internal interface IVector3NaturalMotionAnimation : global::Microsoft.UI.Composition.IVector3NaturalMotionAnimation
    {
    }
    internal static class IVector3NaturalMotionAnimationFactoryMethods
    {



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0xCB, 0x41, 0x82, 0x42, 0x9C, 0xBE, 0x2A, 0x5C, 0x93, 0x9C, 0xEC, 0x78, 0xAA, 0x60, 0xBB, 0x8A };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("428241CB-BE9C-5C2A-939C-EC78AA60BB8A")]
    internal interface IVector3NaturalMotionAnimationFactory : global::Microsoft.UI.Composition.IVector3NaturalMotionAnimationFactory
    {
    }
    internal static class IVector4KeyFrameAnimationMethods
    {


        internal static unsafe void InsertKeyFrame(IObjectReference _obj, float normalizedProgressKey, global::System.Numerics.Vector4 value)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, float, global::System.Numerics.Vector4, int>**)ThisPtr)[6](ThisPtr, normalizedProgressKey, value));
            global::System.GC.KeepAlive(_obj);
        }

        internal static unsafe void InsertKeyFrame(IObjectReference _obj, float normalizedProgressKey, global::System.Numerics.Vector4 value, global::Microsoft.UI.Composition.CompositionEasingFunction easingFunction)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __easingFunction = default;
            try
            {
                __easingFunction = global::ABI.Microsoft.UI.Composition.CompositionEasingFunction.CreateMarshaler2(easingFunction);
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, float, global::System.Numerics.Vector4, IntPtr, int>**)ThisPtr)[7](ThisPtr, normalizedProgressKey, value, MarshalInspectable<object>.GetAbi(__easingFunction)));
                global::System.GC.KeepAlive(_obj);
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__easingFunction);
            }
        }


        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0xB9, 0xA3, 0xCE, 0x16, 0xE3, 0xC5, 0x6F, 0x5F, 0xB5, 0xC7, 0xDA, 0x29, 0xA3, 0x1C, 0xCF, 0xC7 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("16CEA3B9-C5E3-5F6F-B5C7-DA29A31CCFC7")]
    internal interface IVector4KeyFrameAnimation : global::Microsoft.UI.Composition.IVector4KeyFrameAnimation
    {
    }
    internal static class IVisualMethods
    {

        internal static unsafe global::System.Numerics.Vector2 get_AnchorPoint(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::System.Numerics.Vector2 __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::System.Numerics.Vector2*, int>**)ThisPtr)[6](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }
        internal static unsafe void set_AnchorPoint(IObjectReference _obj, global::System.Numerics.Vector2 value)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::System.Numerics.Vector2, int>**)ThisPtr)[7](ThisPtr, value));
            global::System.GC.KeepAlive(_obj);
        }

        internal static unsafe global::Microsoft.UI.Composition.CompositionBackfaceVisibility get_BackfaceVisibility(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::Microsoft.UI.Composition.CompositionBackfaceVisibility __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::Microsoft.UI.Composition.CompositionBackfaceVisibility*, int>**)ThisPtr)[8](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }
        internal static unsafe void set_BackfaceVisibility(IObjectReference _obj, global::Microsoft.UI.Composition.CompositionBackfaceVisibility value)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::Microsoft.UI.Composition.CompositionBackfaceVisibility, int>**)ThisPtr)[9](ThisPtr, value));
            global::System.GC.KeepAlive(_obj);
        }

        internal static unsafe global::Microsoft.UI.Composition.CompositionBorderMode get_BorderMode(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::Microsoft.UI.Composition.CompositionBorderMode __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::Microsoft.UI.Composition.CompositionBorderMode*, int>**)ThisPtr)[10](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }
        internal static unsafe void set_BorderMode(IObjectReference _obj, global::Microsoft.UI.Composition.CompositionBorderMode value)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::Microsoft.UI.Composition.CompositionBorderMode, int>**)ThisPtr)[11](ThisPtr, value));
            global::System.GC.KeepAlive(_obj);
        }

        internal static unsafe global::System.Numerics.Vector3 get_CenterPoint(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::System.Numerics.Vector3 __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::System.Numerics.Vector3*, int>**)ThisPtr)[12](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }
        internal static unsafe void set_CenterPoint(IObjectReference _obj, global::System.Numerics.Vector3 value)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::System.Numerics.Vector3, int>**)ThisPtr)[13](ThisPtr, value));
            global::System.GC.KeepAlive(_obj);
        }

        internal static unsafe global::Microsoft.UI.Composition.CompositionClip get_Clip(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[14](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Composition.CompositionClip.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.UI.Composition.CompositionClip.DisposeAbi(__retval);
            }
        }
        internal static unsafe void set_Clip(IObjectReference _obj, global::Microsoft.UI.Composition.CompositionClip value)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __value = default;
            try
            {
                __value = global::ABI.Microsoft.UI.Composition.CompositionClip.CreateMarshaler2(value);
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, int>**)ThisPtr)[15](ThisPtr, MarshalInspectable<object>.GetAbi(__value)));
                global::System.GC.KeepAlive(_obj);
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__value);
            }
        }

        internal static unsafe global::Microsoft.UI.Composition.CompositionCompositeMode get_CompositeMode(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::Microsoft.UI.Composition.CompositionCompositeMode __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::Microsoft.UI.Composition.CompositionCompositeMode*, int>**)ThisPtr)[16](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }
        internal static unsafe void set_CompositeMode(IObjectReference _obj, global::Microsoft.UI.Composition.CompositionCompositeMode value)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::Microsoft.UI.Composition.CompositionCompositeMode, int>**)ThisPtr)[17](ThisPtr, value));
            global::System.GC.KeepAlive(_obj);
        }

        internal static unsafe bool get_IsVisible(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            byte __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, byte*, int>**)ThisPtr)[18](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval != 0;
        }
        internal static unsafe void set_IsVisible(IObjectReference _obj, bool value)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, byte, int>**)ThisPtr)[19](ThisPtr, (byte)(value ? 1 : 0)));
            global::System.GC.KeepAlive(_obj);
        }

        internal static unsafe global::System.Numerics.Vector3 get_Offset(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::System.Numerics.Vector3 __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::System.Numerics.Vector3*, int>**)ThisPtr)[20](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }
        internal static unsafe void set_Offset(IObjectReference _obj, global::System.Numerics.Vector3 value)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::System.Numerics.Vector3, int>**)ThisPtr)[21](ThisPtr, value));
            global::System.GC.KeepAlive(_obj);
        }

        internal static unsafe float get_Opacity(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            float __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, float*, int>**)ThisPtr)[22](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }
        internal static unsafe void set_Opacity(IObjectReference _obj, float value)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, float, int>**)ThisPtr)[23](ThisPtr, value));
            global::System.GC.KeepAlive(_obj);
        }

        internal static unsafe global::System.Numerics.Quaternion get_Orientation(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::System.Numerics.Quaternion __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::System.Numerics.Quaternion*, int>**)ThisPtr)[24](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }
        internal static unsafe void set_Orientation(IObjectReference _obj, global::System.Numerics.Quaternion value)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::System.Numerics.Quaternion, int>**)ThisPtr)[25](ThisPtr, value));
            global::System.GC.KeepAlive(_obj);
        }

        internal static unsafe global::Microsoft.UI.Composition.ContainerVisual get_Parent(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[26](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Composition.ContainerVisual.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.UI.Composition.ContainerVisual.DisposeAbi(__retval);
            }
        }

        internal static unsafe float get_RotationAngle(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            float __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, float*, int>**)ThisPtr)[27](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }
        internal static unsafe void set_RotationAngle(IObjectReference _obj, float value)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, float, int>**)ThisPtr)[28](ThisPtr, value));
            global::System.GC.KeepAlive(_obj);
        }

        internal static unsafe float get_RotationAngleInDegrees(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            float __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, float*, int>**)ThisPtr)[29](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }
        internal static unsafe void set_RotationAngleInDegrees(IObjectReference _obj, float value)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, float, int>**)ThisPtr)[30](ThisPtr, value));
            global::System.GC.KeepAlive(_obj);
        }

        internal static unsafe global::System.Numerics.Vector3 get_RotationAxis(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::System.Numerics.Vector3 __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::System.Numerics.Vector3*, int>**)ThisPtr)[31](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }
        internal static unsafe void set_RotationAxis(IObjectReference _obj, global::System.Numerics.Vector3 value)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::System.Numerics.Vector3, int>**)ThisPtr)[32](ThisPtr, value));
            global::System.GC.KeepAlive(_obj);
        }

        internal static unsafe global::System.Numerics.Vector3 get_Scale(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::System.Numerics.Vector3 __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::System.Numerics.Vector3*, int>**)ThisPtr)[33](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }
        internal static unsafe void set_Scale(IObjectReference _obj, global::System.Numerics.Vector3 value)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::System.Numerics.Vector3, int>**)ThisPtr)[34](ThisPtr, value));
            global::System.GC.KeepAlive(_obj);
        }

        internal static unsafe global::System.Numerics.Vector2 get_Size(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::System.Numerics.Vector2 __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::System.Numerics.Vector2*, int>**)ThisPtr)[35](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }
        internal static unsafe void set_Size(IObjectReference _obj, global::System.Numerics.Vector2 value)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::System.Numerics.Vector2, int>**)ThisPtr)[36](ThisPtr, value));
            global::System.GC.KeepAlive(_obj);
        }

        internal static unsafe global::System.Numerics.Matrix4x4 get_TransformMatrix(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::System.Numerics.Matrix4x4 __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::System.Numerics.Matrix4x4*, int>**)ThisPtr)[37](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }
        internal static unsafe void set_TransformMatrix(IObjectReference _obj, global::System.Numerics.Matrix4x4 value)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::System.Numerics.Matrix4x4, int>**)ThisPtr)[38](ThisPtr, value));
            global::System.GC.KeepAlive(_obj);
        }



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0x6C, 0xAB, 0xEE, 0xC0, 0x97, 0xC8, 0xC6, 0x5A, 0xA1, 0xC9, 0x63, 0xAB, 0xD5, 0x5, 0x5B, 0x9B };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("C0EEAB6C-C897-5AC6-A1C9-63ABD5055B9B")]
    internal interface IVisual : global::Microsoft.UI.Composition.IVisual
    {
    }
    internal static class IVisual2Methods
    {

        internal static unsafe global::Microsoft.UI.Composition.Visual get_ParentForTransform(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[6](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Composition.Visual.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.UI.Composition.Visual.DisposeAbi(__retval);
            }
        }
        internal static unsafe void set_ParentForTransform(IObjectReference _obj, global::Microsoft.UI.Composition.Visual value)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __value = default;
            try
            {
                __value = global::ABI.Microsoft.UI.Composition.Visual.CreateMarshaler2(value);
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, int>**)ThisPtr)[7](ThisPtr, MarshalInspectable<object>.GetAbi(__value)));
                global::System.GC.KeepAlive(_obj);
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__value);
            }
        }

        internal static unsafe global::System.Numerics.Vector3 get_RelativeOffsetAdjustment(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::System.Numerics.Vector3 __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::System.Numerics.Vector3*, int>**)ThisPtr)[8](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }
        internal static unsafe void set_RelativeOffsetAdjustment(IObjectReference _obj, global::System.Numerics.Vector3 value)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::System.Numerics.Vector3, int>**)ThisPtr)[9](ThisPtr, value));
            global::System.GC.KeepAlive(_obj);
        }

        internal static unsafe global::System.Numerics.Vector2 get_RelativeSizeAdjustment(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::System.Numerics.Vector2 __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::System.Numerics.Vector2*, int>**)ThisPtr)[10](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }
        internal static unsafe void set_RelativeSizeAdjustment(IObjectReference _obj, global::System.Numerics.Vector2 value)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::System.Numerics.Vector2, int>**)ThisPtr)[11](ThisPtr, value));
            global::System.GC.KeepAlive(_obj);
        }



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0x95, 0x79, 0x2A, 0x49, 0x5C, 0xC, 0x93, 0x59, 0xA2, 0x83, 0x52, 0xE4, 0xDA, 0x30, 0x50, 0xEE };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("492A7995-0C5C-5993-A283-52E4DA3050EE")]
    internal interface IVisual2 : global::Microsoft.UI.Composition.IVisual2
    {
    }
    internal static class IVisual3Methods
    {

        internal static unsafe bool get_IsHitTestVisible(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            byte __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, byte*, int>**)ThisPtr)[6](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval != 0;
        }
        internal static unsafe void set_IsHitTestVisible(IObjectReference _obj, bool value)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, byte, int>**)ThisPtr)[7](ThisPtr, (byte)(value ? 1 : 0)));
            global::System.GC.KeepAlive(_obj);
        }



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0xB0, 0x70, 0x2B, 0x97, 0xD, 0x95, 0x56, 0x56, 0xA3, 0x80, 0xBD, 0x4A, 0x70, 0x77, 0x58, 0x68 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("972B70B0-950D-5656-A380-BD4A70775868")]
    internal interface IVisual3 : global::Microsoft.UI.Composition.IVisual3
    {
    }
    internal static class IVisual4Methods
    {

        internal static unsafe bool get_IsPixelSnappingEnabled(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            byte __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, byte*, int>**)ThisPtr)[6](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval != 0;
        }
        internal static unsafe void set_IsPixelSnappingEnabled(IObjectReference _obj, bool value)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, byte, int>**)ThisPtr)[7](ThisPtr, (byte)(value ? 1 : 0)));
            global::System.GC.KeepAlive(_obj);
        }



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0x3F, 0x22, 0xCB, 0x27, 0x31, 0xC4, 0xAC, 0x57, 0xB6, 0x1E, 0xD6, 0xB7, 0x51, 0x5D, 0x57, 0x9F };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("27CB223F-C431-57AC-B61E-D6B7515D579F")]
    internal interface IVisual4 : global::Microsoft.UI.Composition.IVisual4
    {
    }
    internal static class IVisualCollectionMethods
    {


        internal static unsafe void InsertAbove(IObjectReference _obj, global::Microsoft.UI.Composition.Visual newChild, global::Microsoft.UI.Composition.Visual sibling)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __newChild = default;
            ObjectReferenceValue __sibling = default;
            try
            {
                __newChild = global::ABI.Microsoft.UI.Composition.Visual.CreateMarshaler2(newChild);
                __sibling = global::ABI.Microsoft.UI.Composition.Visual.CreateMarshaler2(sibling);
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, IntPtr, int>**)ThisPtr)[7](ThisPtr, MarshalInspectable<object>.GetAbi(__newChild), MarshalInspectable<object>.GetAbi(__sibling)));
                global::System.GC.KeepAlive(_obj);
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__newChild);
                MarshalInspectable<object>.DisposeMarshaler(__sibling);
            }
        }

        internal static unsafe void InsertAtBottom(IObjectReference _obj, global::Microsoft.UI.Composition.Visual newChild)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __newChild = default;
            try
            {
                __newChild = global::ABI.Microsoft.UI.Composition.Visual.CreateMarshaler2(newChild);
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, int>**)ThisPtr)[8](ThisPtr, MarshalInspectable<object>.GetAbi(__newChild)));
                global::System.GC.KeepAlive(_obj);
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__newChild);
            }
        }

        internal static unsafe void InsertAtTop(IObjectReference _obj, global::Microsoft.UI.Composition.Visual newChild)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __newChild = default;
            try
            {
                __newChild = global::ABI.Microsoft.UI.Composition.Visual.CreateMarshaler2(newChild);
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, int>**)ThisPtr)[9](ThisPtr, MarshalInspectable<object>.GetAbi(__newChild)));
                global::System.GC.KeepAlive(_obj);
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__newChild);
            }
        }

        internal static unsafe void InsertBelow(IObjectReference _obj, global::Microsoft.UI.Composition.Visual newChild, global::Microsoft.UI.Composition.Visual sibling)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __newChild = default;
            ObjectReferenceValue __sibling = default;
            try
            {
                __newChild = global::ABI.Microsoft.UI.Composition.Visual.CreateMarshaler2(newChild);
                __sibling = global::ABI.Microsoft.UI.Composition.Visual.CreateMarshaler2(sibling);
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, IntPtr, int>**)ThisPtr)[10](ThisPtr, MarshalInspectable<object>.GetAbi(__newChild), MarshalInspectable<object>.GetAbi(__sibling)));
                global::System.GC.KeepAlive(_obj);
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__newChild);
                MarshalInspectable<object>.DisposeMarshaler(__sibling);
            }
        }

        internal static unsafe void Remove(IObjectReference _obj, global::Microsoft.UI.Composition.Visual child)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __child = default;
            try
            {
                __child = global::ABI.Microsoft.UI.Composition.Visual.CreateMarshaler2(child);
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, int>**)ThisPtr)[11](ThisPtr, MarshalInspectable<object>.GetAbi(__child)));
                global::System.GC.KeepAlive(_obj);
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__child);
            }
        }

        internal static unsafe void RemoveAll(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, int>**)ThisPtr)[12](ThisPtr));
            global::System.GC.KeepAlive(_obj);
        }
        internal static unsafe int get_Count(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            int __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, int*, int>**)ThisPtr)[6](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0x6D, 0x89, 0x2, 0xD0, 0xD8, 0x67, 0x69, 0x5F, 0xAB, 0x70, 0x58, 0x1F, 0xA3, 0xBF, 0x37, 0xF };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("D002896D-67D8-5F69-AB70-581FA3BF370F")]
    internal interface IVisualCollection : global::Microsoft.UI.Composition.IVisualCollection
    {
    }
    public static class IVisualElementMethods
    {



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0xF5, 0xF1, 0x80, 0x21, 0xD8, 0xB5, 0xF6, 0x4B, 0x92, 0xA, 0x12, 0x0, 0x6E, 0x63, 0xEF, 0xEF };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

        public static global::System.IntPtr AbiToProjectionVftablePtr => IVisualElement.AbiToProjectionVftablePtr;

    }
    [DynamicInterfaceCastableImplementation]
    [Guid("2180F1F5-B5D8-4BF6-920A-12006E63EFEF")]
    internal unsafe interface IVisualElement : global::Microsoft.UI.Composition.IVisualElement
    {

        public static readonly IntPtr AbiToProjectionVftablePtr;
        static unsafe IVisualElement()
        {
            AbiToProjectionVftablePtr = ComWrappersSupport.AllocateVtableMemory(typeof(IVisualElement), sizeof(IInspectable.Vftbl) + sizeof(IntPtr) * 0);
            *(IInspectable.Vftbl*)AbiToProjectionVftablePtr = IInspectable.Vftbl.AbiToProjectionVftable;

        }

    }

    public static class IVisualElement2Methods
    {


        public static unsafe global::Microsoft.UI.Composition.Visual GetVisualInternal(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[6](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Composition.Visual.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.UI.Composition.Visual.DisposeAbi(__retval);
            }
        }


        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0x8D, 0xC, 0x95, 0xBC, 0xB0, 0x1D, 0xAA, 0x53, 0x9D, 0xEE, 0x34, 0x27, 0x1C, 0xD1, 0x8C, 0xE6 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

        public static global::System.IntPtr AbiToProjectionVftablePtr => IVisualElement2.AbiToProjectionVftablePtr;

    }
    [DynamicInterfaceCastableImplementation]
    [Guid("BC950C8D-1DB0-53AA-9DEE-34271CD18CE6")]
    internal unsafe interface IVisualElement2 : global::Microsoft.UI.Composition.IVisualElement2
    {

        public static readonly IntPtr AbiToProjectionVftablePtr;
        static unsafe IVisualElement2()
        {
            AbiToProjectionVftablePtr = ComWrappersSupport.AllocateVtableMemory(typeof(IVisualElement2), sizeof(IInspectable.Vftbl) + sizeof(IntPtr) * 1);
            *(IInspectable.Vftbl*)AbiToProjectionVftablePtr = IInspectable.Vftbl.AbiToProjectionVftable;
            ((delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>*)AbiToProjectionVftablePtr)[6] = &Do_Abi_GetVisualInternal_0;
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvStdcall) })]
        private static unsafe int Do_Abi_GetVisualInternal_0(IntPtr thisPtr, IntPtr* result)
        {

            global::Microsoft.UI.Composition.Visual __result = default;

            *result = default;

            try
            {
                __result = global::WinRT.ComWrappersSupport.FindObject<global::Microsoft.UI.Composition.IVisualElement2>(thisPtr).GetVisualInternal();
                *result = global::ABI.Microsoft.UI.Composition.Visual.FromManaged(__result);

            }
            catch (Exception __exception__)
            {
                global::WinRT.ExceptionHelpers.SetErrorInfo(__exception__);
                return global::WinRT.ExceptionHelpers.GetHRForException(__exception__);
            }
            return 0;
        }

        unsafe global::Microsoft.UI.Composition.Visual global::Microsoft.UI.Composition.IVisualElement2.GetVisualInternal()
        {
            var _obj = ((IObjectReference)((IWinRTObject)this).GetObjectReferenceForType(typeof(global::Microsoft.UI.Composition.IVisualElement2).TypeHandle));
            return global::ABI.Microsoft.UI.Composition.IVisualElement2Methods.GetVisualInternal(_obj);
        }
    }

    internal static class IVisualFactoryMethods
    {



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0x68, 0x46, 0xBB, 0x77, 0xFA, 0x83, 0xB5, 0x5B, 0xB7, 0x8B, 0x5E, 0x6F, 0xDC, 0x3D, 0x40, 0x38 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("77BB4668-83FA-5BB5-B78B-5E6FDC3D4038")]
    internal interface IVisualFactory : global::Microsoft.UI.Composition.IVisualFactory
    {
    }
    internal static class IVisualUnorderedCollectionMethods
    {


        internal static unsafe void Add(IObjectReference _obj, global::Microsoft.UI.Composition.Visual newVisual)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __newVisual = default;
            try
            {
                __newVisual = global::ABI.Microsoft.UI.Composition.Visual.CreateMarshaler2(newVisual);
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, int>**)ThisPtr)[7](ThisPtr, MarshalInspectable<object>.GetAbi(__newVisual)));
                global::System.GC.KeepAlive(_obj);
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__newVisual);
            }
        }

        internal static unsafe void Remove(IObjectReference _obj, global::Microsoft.UI.Composition.Visual visual)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __visual = default;
            try
            {
                __visual = global::ABI.Microsoft.UI.Composition.Visual.CreateMarshaler2(visual);
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, int>**)ThisPtr)[8](ThisPtr, MarshalInspectable<object>.GetAbi(__visual)));
                global::System.GC.KeepAlive(_obj);
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__visual);
            }
        }

        internal static unsafe void RemoveAll(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, int>**)ThisPtr)[9](ThisPtr));
            global::System.GC.KeepAlive(_obj);
        }
        internal static unsafe int get_Count(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            int __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, int*, int>**)ThisPtr)[6](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0x6E, 0x21, 0x97, 0x4A, 0x3E, 0x79, 0xE3, 0x54, 0x96, 0xE8, 0xF9, 0xDB, 0x79, 0x1, 0x19, 0xCD };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("4A97216E-793E-54E3-96E8-F9DB790119CD")]
    internal interface IVisualUnorderedCollection : global::Microsoft.UI.Composition.IVisualUnorderedCollection
    {
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    public struct ImplicitAnimationCollection
    {

        public static IObjectReference CreateMarshaler(global::Microsoft.UI.Composition.ImplicitAnimationCollection obj) => obj is null ? null : MarshalInspectable<global::Microsoft.UI.Composition.ImplicitAnimationCollection>.CreateMarshaler<IUnknownVftbl>(obj, global::ABI.Microsoft.UI.Composition.IImplicitAnimationCollectionMethods.IID);
        public static ObjectReferenceValue CreateMarshaler2(global::Microsoft.UI.Composition.ImplicitAnimationCollection obj) => MarshalInspectable<object>.CreateMarshaler2(obj, global::ABI.Microsoft.UI.Composition.IImplicitAnimationCollectionMethods.IID);
        public static IntPtr GetAbi(IObjectReference value) => value is null ? IntPtr.Zero : MarshalInterfaceHelper<object>.GetAbi(value);
        public static global::Microsoft.UI.Composition.ImplicitAnimationCollection FromAbi(IntPtr thisPtr) => global::Microsoft.UI.Composition.ImplicitAnimationCollection.FromAbi(thisPtr);
        public static IntPtr FromManaged(global::Microsoft.UI.Composition.ImplicitAnimationCollection obj) => obj is null ? IntPtr.Zero : CreateMarshaler2(obj).Detach();
        public static unsafe MarshalInterfaceHelper<global::Microsoft.UI.Composition.ImplicitAnimationCollection>.MarshalerArray CreateMarshalerArray(global::Microsoft.UI.Composition.ImplicitAnimationCollection[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.ImplicitAnimationCollection>.CreateMarshalerArray2(array, (o) => CreateMarshaler2(o));
        public static (int length, IntPtr data) GetAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.ImplicitAnimationCollection>.GetAbiArray(box);
        public static unsafe global::Microsoft.UI.Composition.ImplicitAnimationCollection[] FromAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.ImplicitAnimationCollection>.FromAbiArray(box, FromAbi);
        public static void CopyAbiArray(global::Microsoft.UI.Composition.ImplicitAnimationCollection[] array, object box) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.ImplicitAnimationCollection>.CopyAbiArray(array, box, FromAbi);
        public static (int length, IntPtr data) FromManagedArray(global::Microsoft.UI.Composition.ImplicitAnimationCollection[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.ImplicitAnimationCollection>.FromManagedArray(array, (o) => FromManaged(o));
        public static void DisposeMarshaler(IObjectReference value) => MarshalInspectable<object>.DisposeMarshaler(value);
        public static void DisposeMarshalerArray(MarshalInterfaceHelper<global::Microsoft.UI.Composition.ImplicitAnimationCollection>.MarshalerArray array) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.ImplicitAnimationCollection>.DisposeMarshalerArray(array);
        public static void DisposeAbi(IntPtr abi) => MarshalInspectable<object>.DisposeAbi(abi);
        public static unsafe void DisposeAbiArray(object box) => MarshalInspectable<object>.DisposeAbiArray(box);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    internal sealed class ImplicitAnimationCollectionRcwFactoryAttribute : global::WinRT.WinRTImplementationTypeRcwFactoryAttribute
    {
        public override object CreateInstance(global::WinRT.IInspectable inspectable)
            => new global::Microsoft.UI.Composition.ImplicitAnimationCollection(inspectable.ObjRef);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    public struct InitialValueExpressionCollection
    {

        public static IObjectReference CreateMarshaler(global::Microsoft.UI.Composition.InitialValueExpressionCollection obj) => obj is null ? null : MarshalInterface<global::System.Collections.Generic.IDictionary<string, string>>.CreateMarshaler(obj);
        public static ObjectReferenceValue CreateMarshaler2(global::Microsoft.UI.Composition.InitialValueExpressionCollection obj) => MarshalInterface<global::System.Collections.Generic.IDictionary<string, string>>.CreateMarshaler2(obj, global::ABI.System.Collections.Generic.IDictionaryMethods<string, string>.IID);
        public static IntPtr GetAbi(IObjectReference value) => value is null ? IntPtr.Zero : MarshalInterfaceHelper<object>.GetAbi(value);
        public static global::Microsoft.UI.Composition.InitialValueExpressionCollection FromAbi(IntPtr thisPtr) => global::Microsoft.UI.Composition.InitialValueExpressionCollection.FromAbi(thisPtr);
        public static IntPtr FromManaged(global::Microsoft.UI.Composition.InitialValueExpressionCollection obj) => obj is null ? IntPtr.Zero : CreateMarshaler2(obj).Detach();
        public static unsafe MarshalInterfaceHelper<global::Microsoft.UI.Composition.InitialValueExpressionCollection>.MarshalerArray CreateMarshalerArray(global::Microsoft.UI.Composition.InitialValueExpressionCollection[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.InitialValueExpressionCollection>.CreateMarshalerArray2(array, (o) => CreateMarshaler2(o));
        public static (int length, IntPtr data) GetAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.InitialValueExpressionCollection>.GetAbiArray(box);
        public static unsafe global::Microsoft.UI.Composition.InitialValueExpressionCollection[] FromAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.InitialValueExpressionCollection>.FromAbiArray(box, FromAbi);
        public static void CopyAbiArray(global::Microsoft.UI.Composition.InitialValueExpressionCollection[] array, object box) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.InitialValueExpressionCollection>.CopyAbiArray(array, box, FromAbi);
        public static (int length, IntPtr data) FromManagedArray(global::Microsoft.UI.Composition.InitialValueExpressionCollection[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.InitialValueExpressionCollection>.FromManagedArray(array, (o) => FromManaged(o));
        public static void DisposeMarshaler(IObjectReference value) => MarshalInspectable<object>.DisposeMarshaler(value);
        public static void DisposeMarshalerArray(MarshalInterfaceHelper<global::Microsoft.UI.Composition.InitialValueExpressionCollection>.MarshalerArray array) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.InitialValueExpressionCollection>.DisposeMarshalerArray(array);
        public static void DisposeAbi(IntPtr abi) => MarshalInspectable<object>.DisposeAbi(abi);
        public static unsafe void DisposeAbiArray(object box) => MarshalInspectable<object>.DisposeAbiArray(box);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    internal sealed class InitialValueExpressionCollectionRcwFactoryAttribute : global::WinRT.WinRTImplementationTypeRcwFactoryAttribute
    {
        public override object CreateInstance(global::WinRT.IInspectable inspectable)
            => new global::Microsoft.UI.Composition.InitialValueExpressionCollection(inspectable.ObjRef);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    public struct InsetClip
    {

        public static IObjectReference CreateMarshaler(global::Microsoft.UI.Composition.InsetClip obj) => obj is null ? null : MarshalInspectable<global::Microsoft.UI.Composition.InsetClip>.CreateMarshaler<IUnknownVftbl>(obj, global::ABI.Microsoft.UI.Composition.IInsetClipMethods.IID);
        public static ObjectReferenceValue CreateMarshaler2(global::Microsoft.UI.Composition.InsetClip obj) => MarshalInspectable<object>.CreateMarshaler2(obj, global::ABI.Microsoft.UI.Composition.IInsetClipMethods.IID);
        public static IntPtr GetAbi(IObjectReference value) => value is null ? IntPtr.Zero : MarshalInterfaceHelper<object>.GetAbi(value);
        public static global::Microsoft.UI.Composition.InsetClip FromAbi(IntPtr thisPtr) => global::Microsoft.UI.Composition.InsetClip.FromAbi(thisPtr);
        public static IntPtr FromManaged(global::Microsoft.UI.Composition.InsetClip obj) => obj is null ? IntPtr.Zero : CreateMarshaler2(obj).Detach();
        public static unsafe MarshalInterfaceHelper<global::Microsoft.UI.Composition.InsetClip>.MarshalerArray CreateMarshalerArray(global::Microsoft.UI.Composition.InsetClip[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.InsetClip>.CreateMarshalerArray2(array, (o) => CreateMarshaler2(o));
        public static (int length, IntPtr data) GetAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.InsetClip>.GetAbiArray(box);
        public static unsafe global::Microsoft.UI.Composition.InsetClip[] FromAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.InsetClip>.FromAbiArray(box, FromAbi);
        public static void CopyAbiArray(global::Microsoft.UI.Composition.InsetClip[] array, object box) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.InsetClip>.CopyAbiArray(array, box, FromAbi);
        public static (int length, IntPtr data) FromManagedArray(global::Microsoft.UI.Composition.InsetClip[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.InsetClip>.FromManagedArray(array, (o) => FromManaged(o));
        public static void DisposeMarshaler(IObjectReference value) => MarshalInspectable<object>.DisposeMarshaler(value);
        public static void DisposeMarshalerArray(MarshalInterfaceHelper<global::Microsoft.UI.Composition.InsetClip>.MarshalerArray array) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.InsetClip>.DisposeMarshalerArray(array);
        public static void DisposeAbi(IntPtr abi) => MarshalInspectable<object>.DisposeAbi(abi);
        public static unsafe void DisposeAbiArray(object box) => MarshalInspectable<object>.DisposeAbiArray(box);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    internal sealed class InsetClipRcwFactoryAttribute : global::WinRT.WinRTImplementationTypeRcwFactoryAttribute
    {
        public override object CreateInstance(global::WinRT.IInspectable inspectable)
            => new global::Microsoft.UI.Composition.InsetClip(inspectable.ObjRef);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    public struct KeyFrameAnimation
    {

        public static IObjectReference CreateMarshaler(global::Microsoft.UI.Composition.KeyFrameAnimation obj) => obj is null ? null : MarshalInspectable<global::Microsoft.UI.Composition.KeyFrameAnimation>.CreateMarshaler<IUnknownVftbl>(obj, global::ABI.Microsoft.UI.Composition.IKeyFrameAnimationMethods.IID);
        public static ObjectReferenceValue CreateMarshaler2(global::Microsoft.UI.Composition.KeyFrameAnimation obj) => MarshalInspectable<object>.CreateMarshaler2(obj, global::ABI.Microsoft.UI.Composition.IKeyFrameAnimationMethods.IID);
        public static IntPtr GetAbi(IObjectReference value) => value is null ? IntPtr.Zero : MarshalInterfaceHelper<object>.GetAbi(value);
        public static global::Microsoft.UI.Composition.KeyFrameAnimation FromAbi(IntPtr thisPtr) => global::Microsoft.UI.Composition.KeyFrameAnimation.FromAbi(thisPtr);
        public static IntPtr FromManaged(global::Microsoft.UI.Composition.KeyFrameAnimation obj) => obj is null ? IntPtr.Zero : CreateMarshaler2(obj).Detach();
        public static unsafe MarshalInterfaceHelper<global::Microsoft.UI.Composition.KeyFrameAnimation>.MarshalerArray CreateMarshalerArray(global::Microsoft.UI.Composition.KeyFrameAnimation[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.KeyFrameAnimation>.CreateMarshalerArray2(array, (o) => CreateMarshaler2(o));
        public static (int length, IntPtr data) GetAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.KeyFrameAnimation>.GetAbiArray(box);
        public static unsafe global::Microsoft.UI.Composition.KeyFrameAnimation[] FromAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.KeyFrameAnimation>.FromAbiArray(box, FromAbi);
        public static void CopyAbiArray(global::Microsoft.UI.Composition.KeyFrameAnimation[] array, object box) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.KeyFrameAnimation>.CopyAbiArray(array, box, FromAbi);
        public static (int length, IntPtr data) FromManagedArray(global::Microsoft.UI.Composition.KeyFrameAnimation[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.KeyFrameAnimation>.FromManagedArray(array, (o) => FromManaged(o));
        public static void DisposeMarshaler(IObjectReference value) => MarshalInspectable<object>.DisposeMarshaler(value);
        public static void DisposeMarshalerArray(MarshalInterfaceHelper<global::Microsoft.UI.Composition.KeyFrameAnimation>.MarshalerArray array) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.KeyFrameAnimation>.DisposeMarshalerArray(array);
        public static void DisposeAbi(IntPtr abi) => MarshalInspectable<object>.DisposeAbi(abi);
        public static unsafe void DisposeAbiArray(object box) => MarshalInspectable<object>.DisposeAbiArray(box);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    internal sealed class KeyFrameAnimationRcwFactoryAttribute : global::WinRT.WinRTImplementationTypeRcwFactoryAttribute
    {
        public override object CreateInstance(global::WinRT.IInspectable inspectable)
            => new global::Microsoft.UI.Composition.KeyFrameAnimation(inspectable.ObjRef);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    public struct LayerVisual
    {

        public static IObjectReference CreateMarshaler(global::Microsoft.UI.Composition.LayerVisual obj) => obj is null ? null : MarshalInspectable<global::Microsoft.UI.Composition.LayerVisual>.CreateMarshaler<IUnknownVftbl>(obj, global::ABI.Microsoft.UI.Composition.ILayerVisualMethods.IID);
        public static ObjectReferenceValue CreateMarshaler2(global::Microsoft.UI.Composition.LayerVisual obj) => MarshalInspectable<object>.CreateMarshaler2(obj, global::ABI.Microsoft.UI.Composition.ILayerVisualMethods.IID);
        public static IntPtr GetAbi(IObjectReference value) => value is null ? IntPtr.Zero : MarshalInterfaceHelper<object>.GetAbi(value);
        public static global::Microsoft.UI.Composition.LayerVisual FromAbi(IntPtr thisPtr) => global::Microsoft.UI.Composition.LayerVisual.FromAbi(thisPtr);
        public static IntPtr FromManaged(global::Microsoft.UI.Composition.LayerVisual obj) => obj is null ? IntPtr.Zero : CreateMarshaler2(obj).Detach();
        public static unsafe MarshalInterfaceHelper<global::Microsoft.UI.Composition.LayerVisual>.MarshalerArray CreateMarshalerArray(global::Microsoft.UI.Composition.LayerVisual[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.LayerVisual>.CreateMarshalerArray2(array, (o) => CreateMarshaler2(o));
        public static (int length, IntPtr data) GetAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.LayerVisual>.GetAbiArray(box);
        public static unsafe global::Microsoft.UI.Composition.LayerVisual[] FromAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.LayerVisual>.FromAbiArray(box, FromAbi);
        public static void CopyAbiArray(global::Microsoft.UI.Composition.LayerVisual[] array, object box) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.LayerVisual>.CopyAbiArray(array, box, FromAbi);
        public static (int length, IntPtr data) FromManagedArray(global::Microsoft.UI.Composition.LayerVisual[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.LayerVisual>.FromManagedArray(array, (o) => FromManaged(o));
        public static void DisposeMarshaler(IObjectReference value) => MarshalInspectable<object>.DisposeMarshaler(value);
        public static void DisposeMarshalerArray(MarshalInterfaceHelper<global::Microsoft.UI.Composition.LayerVisual>.MarshalerArray array) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.LayerVisual>.DisposeMarshalerArray(array);
        public static void DisposeAbi(IntPtr abi) => MarshalInspectable<object>.DisposeAbi(abi);
        public static unsafe void DisposeAbiArray(object box) => MarshalInspectable<object>.DisposeAbiArray(box);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    internal sealed class LayerVisualRcwFactoryAttribute : global::WinRT.WinRTImplementationTypeRcwFactoryAttribute
    {
        public override object CreateInstance(global::WinRT.IInspectable inspectable)
            => new global::Microsoft.UI.Composition.LayerVisual(inspectable.ObjRef);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    public struct LinearEasingFunction
    {

        public static IObjectReference CreateMarshaler(global::Microsoft.UI.Composition.LinearEasingFunction obj) => obj is null ? null : MarshalInspectable<global::Microsoft.UI.Composition.LinearEasingFunction>.CreateMarshaler<IUnknownVftbl>(obj, global::ABI.Microsoft.UI.Composition.ILinearEasingFunctionMethods.IID);
        public static ObjectReferenceValue CreateMarshaler2(global::Microsoft.UI.Composition.LinearEasingFunction obj) => MarshalInspectable<object>.CreateMarshaler2(obj, global::ABI.Microsoft.UI.Composition.ILinearEasingFunctionMethods.IID);
        public static IntPtr GetAbi(IObjectReference value) => value is null ? IntPtr.Zero : MarshalInterfaceHelper<object>.GetAbi(value);
        public static global::Microsoft.UI.Composition.LinearEasingFunction FromAbi(IntPtr thisPtr) => global::Microsoft.UI.Composition.LinearEasingFunction.FromAbi(thisPtr);
        public static IntPtr FromManaged(global::Microsoft.UI.Composition.LinearEasingFunction obj) => obj is null ? IntPtr.Zero : CreateMarshaler2(obj).Detach();
        public static unsafe MarshalInterfaceHelper<global::Microsoft.UI.Composition.LinearEasingFunction>.MarshalerArray CreateMarshalerArray(global::Microsoft.UI.Composition.LinearEasingFunction[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.LinearEasingFunction>.CreateMarshalerArray2(array, (o) => CreateMarshaler2(o));
        public static (int length, IntPtr data) GetAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.LinearEasingFunction>.GetAbiArray(box);
        public static unsafe global::Microsoft.UI.Composition.LinearEasingFunction[] FromAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.LinearEasingFunction>.FromAbiArray(box, FromAbi);
        public static void CopyAbiArray(global::Microsoft.UI.Composition.LinearEasingFunction[] array, object box) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.LinearEasingFunction>.CopyAbiArray(array, box, FromAbi);
        public static (int length, IntPtr data) FromManagedArray(global::Microsoft.UI.Composition.LinearEasingFunction[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.LinearEasingFunction>.FromManagedArray(array, (o) => FromManaged(o));
        public static void DisposeMarshaler(IObjectReference value) => MarshalInspectable<object>.DisposeMarshaler(value);
        public static void DisposeMarshalerArray(MarshalInterfaceHelper<global::Microsoft.UI.Composition.LinearEasingFunction>.MarshalerArray array) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.LinearEasingFunction>.DisposeMarshalerArray(array);
        public static void DisposeAbi(IntPtr abi) => MarshalInspectable<object>.DisposeAbi(abi);
        public static unsafe void DisposeAbiArray(object box) => MarshalInspectable<object>.DisposeAbiArray(box);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    internal sealed class LinearEasingFunctionRcwFactoryAttribute : global::WinRT.WinRTImplementationTypeRcwFactoryAttribute
    {
        public override object CreateInstance(global::WinRT.IInspectable inspectable)
            => new global::Microsoft.UI.Composition.LinearEasingFunction(inspectable.ObjRef);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    public struct NaturalMotionAnimation
    {

        public static IObjectReference CreateMarshaler(global::Microsoft.UI.Composition.NaturalMotionAnimation obj) => obj is null ? null : MarshalInspectable<global::Microsoft.UI.Composition.NaturalMotionAnimation>.CreateMarshaler<IUnknownVftbl>(obj, global::ABI.Microsoft.UI.Composition.INaturalMotionAnimationMethods.IID);
        public static ObjectReferenceValue CreateMarshaler2(global::Microsoft.UI.Composition.NaturalMotionAnimation obj) => MarshalInspectable<object>.CreateMarshaler2(obj, global::ABI.Microsoft.UI.Composition.INaturalMotionAnimationMethods.IID);
        public static IntPtr GetAbi(IObjectReference value) => value is null ? IntPtr.Zero : MarshalInterfaceHelper<object>.GetAbi(value);
        public static global::Microsoft.UI.Composition.NaturalMotionAnimation FromAbi(IntPtr thisPtr) => global::Microsoft.UI.Composition.NaturalMotionAnimation.FromAbi(thisPtr);
        public static IntPtr FromManaged(global::Microsoft.UI.Composition.NaturalMotionAnimation obj) => obj is null ? IntPtr.Zero : CreateMarshaler2(obj).Detach();
        public static unsafe MarshalInterfaceHelper<global::Microsoft.UI.Composition.NaturalMotionAnimation>.MarshalerArray CreateMarshalerArray(global::Microsoft.UI.Composition.NaturalMotionAnimation[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.NaturalMotionAnimation>.CreateMarshalerArray2(array, (o) => CreateMarshaler2(o));
        public static (int length, IntPtr data) GetAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.NaturalMotionAnimation>.GetAbiArray(box);
        public static unsafe global::Microsoft.UI.Composition.NaturalMotionAnimation[] FromAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.NaturalMotionAnimation>.FromAbiArray(box, FromAbi);
        public static void CopyAbiArray(global::Microsoft.UI.Composition.NaturalMotionAnimation[] array, object box) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.NaturalMotionAnimation>.CopyAbiArray(array, box, FromAbi);
        public static (int length, IntPtr data) FromManagedArray(global::Microsoft.UI.Composition.NaturalMotionAnimation[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.NaturalMotionAnimation>.FromManagedArray(array, (o) => FromManaged(o));
        public static void DisposeMarshaler(IObjectReference value) => MarshalInspectable<object>.DisposeMarshaler(value);
        public static void DisposeMarshalerArray(MarshalInterfaceHelper<global::Microsoft.UI.Composition.NaturalMotionAnimation>.MarshalerArray array) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.NaturalMotionAnimation>.DisposeMarshalerArray(array);
        public static void DisposeAbi(IntPtr abi) => MarshalInspectable<object>.DisposeAbi(abi);
        public static unsafe void DisposeAbiArray(object box) => MarshalInspectable<object>.DisposeAbiArray(box);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    internal sealed class NaturalMotionAnimationRcwFactoryAttribute : global::WinRT.WinRTImplementationTypeRcwFactoryAttribute
    {
        public override object CreateInstance(global::WinRT.IInspectable inspectable)
            => new global::Microsoft.UI.Composition.NaturalMotionAnimation(inspectable.ObjRef);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    public struct PathKeyFrameAnimation
    {

        public static IObjectReference CreateMarshaler(global::Microsoft.UI.Composition.PathKeyFrameAnimation obj) => obj is null ? null : MarshalInspectable<global::Microsoft.UI.Composition.PathKeyFrameAnimation>.CreateMarshaler<IUnknownVftbl>(obj, global::ABI.Microsoft.UI.Composition.IPathKeyFrameAnimationMethods.IID);
        public static ObjectReferenceValue CreateMarshaler2(global::Microsoft.UI.Composition.PathKeyFrameAnimation obj) => MarshalInspectable<object>.CreateMarshaler2(obj, global::ABI.Microsoft.UI.Composition.IPathKeyFrameAnimationMethods.IID);
        public static IntPtr GetAbi(IObjectReference value) => value is null ? IntPtr.Zero : MarshalInterfaceHelper<object>.GetAbi(value);
        public static global::Microsoft.UI.Composition.PathKeyFrameAnimation FromAbi(IntPtr thisPtr) => global::Microsoft.UI.Composition.PathKeyFrameAnimation.FromAbi(thisPtr);
        public static IntPtr FromManaged(global::Microsoft.UI.Composition.PathKeyFrameAnimation obj) => obj is null ? IntPtr.Zero : CreateMarshaler2(obj).Detach();
        public static unsafe MarshalInterfaceHelper<global::Microsoft.UI.Composition.PathKeyFrameAnimation>.MarshalerArray CreateMarshalerArray(global::Microsoft.UI.Composition.PathKeyFrameAnimation[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.PathKeyFrameAnimation>.CreateMarshalerArray2(array, (o) => CreateMarshaler2(o));
        public static (int length, IntPtr data) GetAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.PathKeyFrameAnimation>.GetAbiArray(box);
        public static unsafe global::Microsoft.UI.Composition.PathKeyFrameAnimation[] FromAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.PathKeyFrameAnimation>.FromAbiArray(box, FromAbi);
        public static void CopyAbiArray(global::Microsoft.UI.Composition.PathKeyFrameAnimation[] array, object box) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.PathKeyFrameAnimation>.CopyAbiArray(array, box, FromAbi);
        public static (int length, IntPtr data) FromManagedArray(global::Microsoft.UI.Composition.PathKeyFrameAnimation[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.PathKeyFrameAnimation>.FromManagedArray(array, (o) => FromManaged(o));
        public static void DisposeMarshaler(IObjectReference value) => MarshalInspectable<object>.DisposeMarshaler(value);
        public static void DisposeMarshalerArray(MarshalInterfaceHelper<global::Microsoft.UI.Composition.PathKeyFrameAnimation>.MarshalerArray array) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.PathKeyFrameAnimation>.DisposeMarshalerArray(array);
        public static void DisposeAbi(IntPtr abi) => MarshalInspectable<object>.DisposeAbi(abi);
        public static unsafe void DisposeAbiArray(object box) => MarshalInspectable<object>.DisposeAbiArray(box);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    internal sealed class PathKeyFrameAnimationRcwFactoryAttribute : global::WinRT.WinRTImplementationTypeRcwFactoryAttribute
    {
        public override object CreateInstance(global::WinRT.IInspectable inspectable)
            => new global::Microsoft.UI.Composition.PathKeyFrameAnimation(inspectable.ObjRef);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    public struct PointLight
    {

        public static IObjectReference CreateMarshaler(global::Microsoft.UI.Composition.PointLight obj) => obj is null ? null : MarshalInspectable<global::Microsoft.UI.Composition.PointLight>.CreateMarshaler<IUnknownVftbl>(obj, global::ABI.Microsoft.UI.Composition.IPointLightMethods.IID);
        public static ObjectReferenceValue CreateMarshaler2(global::Microsoft.UI.Composition.PointLight obj) => MarshalInspectable<object>.CreateMarshaler2(obj, global::ABI.Microsoft.UI.Composition.IPointLightMethods.IID);
        public static IntPtr GetAbi(IObjectReference value) => value is null ? IntPtr.Zero : MarshalInterfaceHelper<object>.GetAbi(value);
        public static global::Microsoft.UI.Composition.PointLight FromAbi(IntPtr thisPtr) => global::Microsoft.UI.Composition.PointLight.FromAbi(thisPtr);
        public static IntPtr FromManaged(global::Microsoft.UI.Composition.PointLight obj) => obj is null ? IntPtr.Zero : CreateMarshaler2(obj).Detach();
        public static unsafe MarshalInterfaceHelper<global::Microsoft.UI.Composition.PointLight>.MarshalerArray CreateMarshalerArray(global::Microsoft.UI.Composition.PointLight[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.PointLight>.CreateMarshalerArray2(array, (o) => CreateMarshaler2(o));
        public static (int length, IntPtr data) GetAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.PointLight>.GetAbiArray(box);
        public static unsafe global::Microsoft.UI.Composition.PointLight[] FromAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.PointLight>.FromAbiArray(box, FromAbi);
        public static void CopyAbiArray(global::Microsoft.UI.Composition.PointLight[] array, object box) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.PointLight>.CopyAbiArray(array, box, FromAbi);
        public static (int length, IntPtr data) FromManagedArray(global::Microsoft.UI.Composition.PointLight[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.PointLight>.FromManagedArray(array, (o) => FromManaged(o));
        public static void DisposeMarshaler(IObjectReference value) => MarshalInspectable<object>.DisposeMarshaler(value);
        public static void DisposeMarshalerArray(MarshalInterfaceHelper<global::Microsoft.UI.Composition.PointLight>.MarshalerArray array) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.PointLight>.DisposeMarshalerArray(array);
        public static void DisposeAbi(IntPtr abi) => MarshalInspectable<object>.DisposeAbi(abi);
        public static unsafe void DisposeAbiArray(object box) => MarshalInspectable<object>.DisposeAbiArray(box);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    internal sealed class PointLightRcwFactoryAttribute : global::WinRT.WinRTImplementationTypeRcwFactoryAttribute
    {
        public override object CreateInstance(global::WinRT.IInspectable inspectable)
            => new global::Microsoft.UI.Composition.PointLight(inspectable.ObjRef);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    public struct PowerEasingFunction
    {

        public static IObjectReference CreateMarshaler(global::Microsoft.UI.Composition.PowerEasingFunction obj) => obj is null ? null : MarshalInspectable<global::Microsoft.UI.Composition.PowerEasingFunction>.CreateMarshaler<IUnknownVftbl>(obj, global::ABI.Microsoft.UI.Composition.IPowerEasingFunctionMethods.IID);
        public static ObjectReferenceValue CreateMarshaler2(global::Microsoft.UI.Composition.PowerEasingFunction obj) => MarshalInspectable<object>.CreateMarshaler2(obj, global::ABI.Microsoft.UI.Composition.IPowerEasingFunctionMethods.IID);
        public static IntPtr GetAbi(IObjectReference value) => value is null ? IntPtr.Zero : MarshalInterfaceHelper<object>.GetAbi(value);
        public static global::Microsoft.UI.Composition.PowerEasingFunction FromAbi(IntPtr thisPtr) => global::Microsoft.UI.Composition.PowerEasingFunction.FromAbi(thisPtr);
        public static IntPtr FromManaged(global::Microsoft.UI.Composition.PowerEasingFunction obj) => obj is null ? IntPtr.Zero : CreateMarshaler2(obj).Detach();
        public static unsafe MarshalInterfaceHelper<global::Microsoft.UI.Composition.PowerEasingFunction>.MarshalerArray CreateMarshalerArray(global::Microsoft.UI.Composition.PowerEasingFunction[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.PowerEasingFunction>.CreateMarshalerArray2(array, (o) => CreateMarshaler2(o));
        public static (int length, IntPtr data) GetAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.PowerEasingFunction>.GetAbiArray(box);
        public static unsafe global::Microsoft.UI.Composition.PowerEasingFunction[] FromAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.PowerEasingFunction>.FromAbiArray(box, FromAbi);
        public static void CopyAbiArray(global::Microsoft.UI.Composition.PowerEasingFunction[] array, object box) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.PowerEasingFunction>.CopyAbiArray(array, box, FromAbi);
        public static (int length, IntPtr data) FromManagedArray(global::Microsoft.UI.Composition.PowerEasingFunction[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.PowerEasingFunction>.FromManagedArray(array, (o) => FromManaged(o));
        public static void DisposeMarshaler(IObjectReference value) => MarshalInspectable<object>.DisposeMarshaler(value);
        public static void DisposeMarshalerArray(MarshalInterfaceHelper<global::Microsoft.UI.Composition.PowerEasingFunction>.MarshalerArray array) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.PowerEasingFunction>.DisposeMarshalerArray(array);
        public static void DisposeAbi(IntPtr abi) => MarshalInspectable<object>.DisposeAbi(abi);
        public static unsafe void DisposeAbiArray(object box) => MarshalInspectable<object>.DisposeAbiArray(box);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    internal sealed class PowerEasingFunctionRcwFactoryAttribute : global::WinRT.WinRTImplementationTypeRcwFactoryAttribute
    {
        public override object CreateInstance(global::WinRT.IInspectable inspectable)
            => new global::Microsoft.UI.Composition.PowerEasingFunction(inspectable.ObjRef);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    public struct QuaternionKeyFrameAnimation
    {

        public static IObjectReference CreateMarshaler(global::Microsoft.UI.Composition.QuaternionKeyFrameAnimation obj) => obj is null ? null : MarshalInspectable<global::Microsoft.UI.Composition.QuaternionKeyFrameAnimation>.CreateMarshaler<IUnknownVftbl>(obj, global::ABI.Microsoft.UI.Composition.IQuaternionKeyFrameAnimationMethods.IID);
        public static ObjectReferenceValue CreateMarshaler2(global::Microsoft.UI.Composition.QuaternionKeyFrameAnimation obj) => MarshalInspectable<object>.CreateMarshaler2(obj, global::ABI.Microsoft.UI.Composition.IQuaternionKeyFrameAnimationMethods.IID);
        public static IntPtr GetAbi(IObjectReference value) => value is null ? IntPtr.Zero : MarshalInterfaceHelper<object>.GetAbi(value);
        public static global::Microsoft.UI.Composition.QuaternionKeyFrameAnimation FromAbi(IntPtr thisPtr) => global::Microsoft.UI.Composition.QuaternionKeyFrameAnimation.FromAbi(thisPtr);
        public static IntPtr FromManaged(global::Microsoft.UI.Composition.QuaternionKeyFrameAnimation obj) => obj is null ? IntPtr.Zero : CreateMarshaler2(obj).Detach();
        public static unsafe MarshalInterfaceHelper<global::Microsoft.UI.Composition.QuaternionKeyFrameAnimation>.MarshalerArray CreateMarshalerArray(global::Microsoft.UI.Composition.QuaternionKeyFrameAnimation[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.QuaternionKeyFrameAnimation>.CreateMarshalerArray2(array, (o) => CreateMarshaler2(o));
        public static (int length, IntPtr data) GetAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.QuaternionKeyFrameAnimation>.GetAbiArray(box);
        public static unsafe global::Microsoft.UI.Composition.QuaternionKeyFrameAnimation[] FromAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.QuaternionKeyFrameAnimation>.FromAbiArray(box, FromAbi);
        public static void CopyAbiArray(global::Microsoft.UI.Composition.QuaternionKeyFrameAnimation[] array, object box) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.QuaternionKeyFrameAnimation>.CopyAbiArray(array, box, FromAbi);
        public static (int length, IntPtr data) FromManagedArray(global::Microsoft.UI.Composition.QuaternionKeyFrameAnimation[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.QuaternionKeyFrameAnimation>.FromManagedArray(array, (o) => FromManaged(o));
        public static void DisposeMarshaler(IObjectReference value) => MarshalInspectable<object>.DisposeMarshaler(value);
        public static void DisposeMarshalerArray(MarshalInterfaceHelper<global::Microsoft.UI.Composition.QuaternionKeyFrameAnimation>.MarshalerArray array) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.QuaternionKeyFrameAnimation>.DisposeMarshalerArray(array);
        public static void DisposeAbi(IntPtr abi) => MarshalInspectable<object>.DisposeAbi(abi);
        public static unsafe void DisposeAbiArray(object box) => MarshalInspectable<object>.DisposeAbiArray(box);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    internal sealed class QuaternionKeyFrameAnimationRcwFactoryAttribute : global::WinRT.WinRTImplementationTypeRcwFactoryAttribute
    {
        public override object CreateInstance(global::WinRT.IInspectable inspectable)
            => new global::Microsoft.UI.Composition.QuaternionKeyFrameAnimation(inspectable.ObjRef);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    public struct RectangleClip
    {

        public static IObjectReference CreateMarshaler(global::Microsoft.UI.Composition.RectangleClip obj) => obj is null ? null : MarshalInspectable<global::Microsoft.UI.Composition.RectangleClip>.CreateMarshaler<IUnknownVftbl>(obj, global::ABI.Microsoft.UI.Composition.IRectangleClipMethods.IID);
        public static ObjectReferenceValue CreateMarshaler2(global::Microsoft.UI.Composition.RectangleClip obj) => MarshalInspectable<object>.CreateMarshaler2(obj, global::ABI.Microsoft.UI.Composition.IRectangleClipMethods.IID);
        public static IntPtr GetAbi(IObjectReference value) => value is null ? IntPtr.Zero : MarshalInterfaceHelper<object>.GetAbi(value);
        public static global::Microsoft.UI.Composition.RectangleClip FromAbi(IntPtr thisPtr) => global::Microsoft.UI.Composition.RectangleClip.FromAbi(thisPtr);
        public static IntPtr FromManaged(global::Microsoft.UI.Composition.RectangleClip obj) => obj is null ? IntPtr.Zero : CreateMarshaler2(obj).Detach();
        public static unsafe MarshalInterfaceHelper<global::Microsoft.UI.Composition.RectangleClip>.MarshalerArray CreateMarshalerArray(global::Microsoft.UI.Composition.RectangleClip[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.RectangleClip>.CreateMarshalerArray2(array, (o) => CreateMarshaler2(o));
        public static (int length, IntPtr data) GetAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.RectangleClip>.GetAbiArray(box);
        public static unsafe global::Microsoft.UI.Composition.RectangleClip[] FromAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.RectangleClip>.FromAbiArray(box, FromAbi);
        public static void CopyAbiArray(global::Microsoft.UI.Composition.RectangleClip[] array, object box) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.RectangleClip>.CopyAbiArray(array, box, FromAbi);
        public static (int length, IntPtr data) FromManagedArray(global::Microsoft.UI.Composition.RectangleClip[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.RectangleClip>.FromManagedArray(array, (o) => FromManaged(o));
        public static void DisposeMarshaler(IObjectReference value) => MarshalInspectable<object>.DisposeMarshaler(value);
        public static void DisposeMarshalerArray(MarshalInterfaceHelper<global::Microsoft.UI.Composition.RectangleClip>.MarshalerArray array) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.RectangleClip>.DisposeMarshalerArray(array);
        public static void DisposeAbi(IntPtr abi) => MarshalInspectable<object>.DisposeAbi(abi);
        public static unsafe void DisposeAbiArray(object box) => MarshalInspectable<object>.DisposeAbiArray(box);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    internal sealed class RectangleClipRcwFactoryAttribute : global::WinRT.WinRTImplementationTypeRcwFactoryAttribute
    {
        public override object CreateInstance(global::WinRT.IInspectable inspectable)
            => new global::Microsoft.UI.Composition.RectangleClip(inspectable.ObjRef);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    public struct RedirectVisual
    {

        public static IObjectReference CreateMarshaler(global::Microsoft.UI.Composition.RedirectVisual obj) => obj is null ? null : MarshalInspectable<global::Microsoft.UI.Composition.RedirectVisual>.CreateMarshaler<IUnknownVftbl>(obj, global::ABI.Microsoft.UI.Composition.IRedirectVisualMethods.IID);
        public static ObjectReferenceValue CreateMarshaler2(global::Microsoft.UI.Composition.RedirectVisual obj) => MarshalInspectable<object>.CreateMarshaler2(obj, global::ABI.Microsoft.UI.Composition.IRedirectVisualMethods.IID);
        public static IntPtr GetAbi(IObjectReference value) => value is null ? IntPtr.Zero : MarshalInterfaceHelper<object>.GetAbi(value);
        public static global::Microsoft.UI.Composition.RedirectVisual FromAbi(IntPtr thisPtr) => global::Microsoft.UI.Composition.RedirectVisual.FromAbi(thisPtr);
        public static IntPtr FromManaged(global::Microsoft.UI.Composition.RedirectVisual obj) => obj is null ? IntPtr.Zero : CreateMarshaler2(obj).Detach();
        public static unsafe MarshalInterfaceHelper<global::Microsoft.UI.Composition.RedirectVisual>.MarshalerArray CreateMarshalerArray(global::Microsoft.UI.Composition.RedirectVisual[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.RedirectVisual>.CreateMarshalerArray2(array, (o) => CreateMarshaler2(o));
        public static (int length, IntPtr data) GetAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.RedirectVisual>.GetAbiArray(box);
        public static unsafe global::Microsoft.UI.Composition.RedirectVisual[] FromAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.RedirectVisual>.FromAbiArray(box, FromAbi);
        public static void CopyAbiArray(global::Microsoft.UI.Composition.RedirectVisual[] array, object box) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.RedirectVisual>.CopyAbiArray(array, box, FromAbi);
        public static (int length, IntPtr data) FromManagedArray(global::Microsoft.UI.Composition.RedirectVisual[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.RedirectVisual>.FromManagedArray(array, (o) => FromManaged(o));
        public static void DisposeMarshaler(IObjectReference value) => MarshalInspectable<object>.DisposeMarshaler(value);
        public static void DisposeMarshalerArray(MarshalInterfaceHelper<global::Microsoft.UI.Composition.RedirectVisual>.MarshalerArray array) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.RedirectVisual>.DisposeMarshalerArray(array);
        public static void DisposeAbi(IntPtr abi) => MarshalInspectable<object>.DisposeAbi(abi);
        public static unsafe void DisposeAbiArray(object box) => MarshalInspectable<object>.DisposeAbiArray(box);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    internal sealed class RedirectVisualRcwFactoryAttribute : global::WinRT.WinRTImplementationTypeRcwFactoryAttribute
    {
        public override object CreateInstance(global::WinRT.IInspectable inspectable)
            => new global::Microsoft.UI.Composition.RedirectVisual(inspectable.ObjRef);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    public struct RenderingDeviceReplacedEventArgs
    {

        public static IObjectReference CreateMarshaler(global::Microsoft.UI.Composition.RenderingDeviceReplacedEventArgs obj) => obj is null ? null : MarshalInspectable<global::Microsoft.UI.Composition.RenderingDeviceReplacedEventArgs>.CreateMarshaler<IUnknownVftbl>(obj, global::ABI.Microsoft.UI.Composition.IRenderingDeviceReplacedEventArgsMethods.IID);
        public static ObjectReferenceValue CreateMarshaler2(global::Microsoft.UI.Composition.RenderingDeviceReplacedEventArgs obj) => MarshalInspectable<object>.CreateMarshaler2(obj, global::ABI.Microsoft.UI.Composition.IRenderingDeviceReplacedEventArgsMethods.IID);
        public static IntPtr GetAbi(IObjectReference value) => value is null ? IntPtr.Zero : MarshalInterfaceHelper<object>.GetAbi(value);
        public static global::Microsoft.UI.Composition.RenderingDeviceReplacedEventArgs FromAbi(IntPtr thisPtr) => global::Microsoft.UI.Composition.RenderingDeviceReplacedEventArgs.FromAbi(thisPtr);
        public static IntPtr FromManaged(global::Microsoft.UI.Composition.RenderingDeviceReplacedEventArgs obj) => obj is null ? IntPtr.Zero : CreateMarshaler2(obj).Detach();
        public static unsafe MarshalInterfaceHelper<global::Microsoft.UI.Composition.RenderingDeviceReplacedEventArgs>.MarshalerArray CreateMarshalerArray(global::Microsoft.UI.Composition.RenderingDeviceReplacedEventArgs[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.RenderingDeviceReplacedEventArgs>.CreateMarshalerArray2(array, (o) => CreateMarshaler2(o));
        public static (int length, IntPtr data) GetAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.RenderingDeviceReplacedEventArgs>.GetAbiArray(box);
        public static unsafe global::Microsoft.UI.Composition.RenderingDeviceReplacedEventArgs[] FromAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.RenderingDeviceReplacedEventArgs>.FromAbiArray(box, FromAbi);
        public static void CopyAbiArray(global::Microsoft.UI.Composition.RenderingDeviceReplacedEventArgs[] array, object box) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.RenderingDeviceReplacedEventArgs>.CopyAbiArray(array, box, FromAbi);
        public static (int length, IntPtr data) FromManagedArray(global::Microsoft.UI.Composition.RenderingDeviceReplacedEventArgs[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.RenderingDeviceReplacedEventArgs>.FromManagedArray(array, (o) => FromManaged(o));
        public static void DisposeMarshaler(IObjectReference value) => MarshalInspectable<object>.DisposeMarshaler(value);
        public static void DisposeMarshalerArray(MarshalInterfaceHelper<global::Microsoft.UI.Composition.RenderingDeviceReplacedEventArgs>.MarshalerArray array) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.RenderingDeviceReplacedEventArgs>.DisposeMarshalerArray(array);
        public static void DisposeAbi(IntPtr abi) => MarshalInspectable<object>.DisposeAbi(abi);
        public static unsafe void DisposeAbiArray(object box) => MarshalInspectable<object>.DisposeAbiArray(box);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    internal sealed class RenderingDeviceReplacedEventArgsRcwFactoryAttribute : global::WinRT.WinRTImplementationTypeRcwFactoryAttribute
    {
        public override object CreateInstance(global::WinRT.IInspectable inspectable)
            => new global::Microsoft.UI.Composition.RenderingDeviceReplacedEventArgs(inspectable.ObjRef);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    public struct ScalarKeyFrameAnimation
    {

        public static IObjectReference CreateMarshaler(global::Microsoft.UI.Composition.ScalarKeyFrameAnimation obj) => obj is null ? null : MarshalInspectable<global::Microsoft.UI.Composition.ScalarKeyFrameAnimation>.CreateMarshaler<IUnknownVftbl>(obj, global::ABI.Microsoft.UI.Composition.IScalarKeyFrameAnimationMethods.IID);
        public static ObjectReferenceValue CreateMarshaler2(global::Microsoft.UI.Composition.ScalarKeyFrameAnimation obj) => MarshalInspectable<object>.CreateMarshaler2(obj, global::ABI.Microsoft.UI.Composition.IScalarKeyFrameAnimationMethods.IID);
        public static IntPtr GetAbi(IObjectReference value) => value is null ? IntPtr.Zero : MarshalInterfaceHelper<object>.GetAbi(value);
        public static global::Microsoft.UI.Composition.ScalarKeyFrameAnimation FromAbi(IntPtr thisPtr) => global::Microsoft.UI.Composition.ScalarKeyFrameAnimation.FromAbi(thisPtr);
        public static IntPtr FromManaged(global::Microsoft.UI.Composition.ScalarKeyFrameAnimation obj) => obj is null ? IntPtr.Zero : CreateMarshaler2(obj).Detach();
        public static unsafe MarshalInterfaceHelper<global::Microsoft.UI.Composition.ScalarKeyFrameAnimation>.MarshalerArray CreateMarshalerArray(global::Microsoft.UI.Composition.ScalarKeyFrameAnimation[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.ScalarKeyFrameAnimation>.CreateMarshalerArray2(array, (o) => CreateMarshaler2(o));
        public static (int length, IntPtr data) GetAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.ScalarKeyFrameAnimation>.GetAbiArray(box);
        public static unsafe global::Microsoft.UI.Composition.ScalarKeyFrameAnimation[] FromAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.ScalarKeyFrameAnimation>.FromAbiArray(box, FromAbi);
        public static void CopyAbiArray(global::Microsoft.UI.Composition.ScalarKeyFrameAnimation[] array, object box) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.ScalarKeyFrameAnimation>.CopyAbiArray(array, box, FromAbi);
        public static (int length, IntPtr data) FromManagedArray(global::Microsoft.UI.Composition.ScalarKeyFrameAnimation[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.ScalarKeyFrameAnimation>.FromManagedArray(array, (o) => FromManaged(o));
        public static void DisposeMarshaler(IObjectReference value) => MarshalInspectable<object>.DisposeMarshaler(value);
        public static void DisposeMarshalerArray(MarshalInterfaceHelper<global::Microsoft.UI.Composition.ScalarKeyFrameAnimation>.MarshalerArray array) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.ScalarKeyFrameAnimation>.DisposeMarshalerArray(array);
        public static void DisposeAbi(IntPtr abi) => MarshalInspectable<object>.DisposeAbi(abi);
        public static unsafe void DisposeAbiArray(object box) => MarshalInspectable<object>.DisposeAbiArray(box);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    internal sealed class ScalarKeyFrameAnimationRcwFactoryAttribute : global::WinRT.WinRTImplementationTypeRcwFactoryAttribute
    {
        public override object CreateInstance(global::WinRT.IInspectable inspectable)
            => new global::Microsoft.UI.Composition.ScalarKeyFrameAnimation(inspectable.ObjRef);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    public struct ScalarNaturalMotionAnimation
    {

        public static IObjectReference CreateMarshaler(global::Microsoft.UI.Composition.ScalarNaturalMotionAnimation obj) => obj is null ? null : MarshalInspectable<global::Microsoft.UI.Composition.ScalarNaturalMotionAnimation>.CreateMarshaler<IUnknownVftbl>(obj, global::ABI.Microsoft.UI.Composition.IScalarNaturalMotionAnimationMethods.IID);
        public static ObjectReferenceValue CreateMarshaler2(global::Microsoft.UI.Composition.ScalarNaturalMotionAnimation obj) => MarshalInspectable<object>.CreateMarshaler2(obj, global::ABI.Microsoft.UI.Composition.IScalarNaturalMotionAnimationMethods.IID);
        public static IntPtr GetAbi(IObjectReference value) => value is null ? IntPtr.Zero : MarshalInterfaceHelper<object>.GetAbi(value);
        public static global::Microsoft.UI.Composition.ScalarNaturalMotionAnimation FromAbi(IntPtr thisPtr) => global::Microsoft.UI.Composition.ScalarNaturalMotionAnimation.FromAbi(thisPtr);
        public static IntPtr FromManaged(global::Microsoft.UI.Composition.ScalarNaturalMotionAnimation obj) => obj is null ? IntPtr.Zero : CreateMarshaler2(obj).Detach();
        public static unsafe MarshalInterfaceHelper<global::Microsoft.UI.Composition.ScalarNaturalMotionAnimation>.MarshalerArray CreateMarshalerArray(global::Microsoft.UI.Composition.ScalarNaturalMotionAnimation[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.ScalarNaturalMotionAnimation>.CreateMarshalerArray2(array, (o) => CreateMarshaler2(o));
        public static (int length, IntPtr data) GetAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.ScalarNaturalMotionAnimation>.GetAbiArray(box);
        public static unsafe global::Microsoft.UI.Composition.ScalarNaturalMotionAnimation[] FromAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.ScalarNaturalMotionAnimation>.FromAbiArray(box, FromAbi);
        public static void CopyAbiArray(global::Microsoft.UI.Composition.ScalarNaturalMotionAnimation[] array, object box) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.ScalarNaturalMotionAnimation>.CopyAbiArray(array, box, FromAbi);
        public static (int length, IntPtr data) FromManagedArray(global::Microsoft.UI.Composition.ScalarNaturalMotionAnimation[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.ScalarNaturalMotionAnimation>.FromManagedArray(array, (o) => FromManaged(o));
        public static void DisposeMarshaler(IObjectReference value) => MarshalInspectable<object>.DisposeMarshaler(value);
        public static void DisposeMarshalerArray(MarshalInterfaceHelper<global::Microsoft.UI.Composition.ScalarNaturalMotionAnimation>.MarshalerArray array) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.ScalarNaturalMotionAnimation>.DisposeMarshalerArray(array);
        public static void DisposeAbi(IntPtr abi) => MarshalInspectable<object>.DisposeAbi(abi);
        public static unsafe void DisposeAbiArray(object box) => MarshalInspectable<object>.DisposeAbiArray(box);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    internal sealed class ScalarNaturalMotionAnimationRcwFactoryAttribute : global::WinRT.WinRTImplementationTypeRcwFactoryAttribute
    {
        public override object CreateInstance(global::WinRT.IInspectable inspectable)
            => new global::Microsoft.UI.Composition.ScalarNaturalMotionAnimation(inspectable.ObjRef);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    public struct ShapeVisual
    {

        public static IObjectReference CreateMarshaler(global::Microsoft.UI.Composition.ShapeVisual obj) => obj is null ? null : MarshalInspectable<global::Microsoft.UI.Composition.ShapeVisual>.CreateMarshaler<IUnknownVftbl>(obj, global::ABI.Microsoft.UI.Composition.IShapeVisualMethods.IID);
        public static ObjectReferenceValue CreateMarshaler2(global::Microsoft.UI.Composition.ShapeVisual obj) => MarshalInspectable<object>.CreateMarshaler2(obj, global::ABI.Microsoft.UI.Composition.IShapeVisualMethods.IID);
        public static IntPtr GetAbi(IObjectReference value) => value is null ? IntPtr.Zero : MarshalInterfaceHelper<object>.GetAbi(value);
        public static global::Microsoft.UI.Composition.ShapeVisual FromAbi(IntPtr thisPtr) => global::Microsoft.UI.Composition.ShapeVisual.FromAbi(thisPtr);
        public static IntPtr FromManaged(global::Microsoft.UI.Composition.ShapeVisual obj) => obj is null ? IntPtr.Zero : CreateMarshaler2(obj).Detach();
        public static unsafe MarshalInterfaceHelper<global::Microsoft.UI.Composition.ShapeVisual>.MarshalerArray CreateMarshalerArray(global::Microsoft.UI.Composition.ShapeVisual[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.ShapeVisual>.CreateMarshalerArray2(array, (o) => CreateMarshaler2(o));
        public static (int length, IntPtr data) GetAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.ShapeVisual>.GetAbiArray(box);
        public static unsafe global::Microsoft.UI.Composition.ShapeVisual[] FromAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.ShapeVisual>.FromAbiArray(box, FromAbi);
        public static void CopyAbiArray(global::Microsoft.UI.Composition.ShapeVisual[] array, object box) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.ShapeVisual>.CopyAbiArray(array, box, FromAbi);
        public static (int length, IntPtr data) FromManagedArray(global::Microsoft.UI.Composition.ShapeVisual[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.ShapeVisual>.FromManagedArray(array, (o) => FromManaged(o));
        public static void DisposeMarshaler(IObjectReference value) => MarshalInspectable<object>.DisposeMarshaler(value);
        public static void DisposeMarshalerArray(MarshalInterfaceHelper<global::Microsoft.UI.Composition.ShapeVisual>.MarshalerArray array) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.ShapeVisual>.DisposeMarshalerArray(array);
        public static void DisposeAbi(IntPtr abi) => MarshalInspectable<object>.DisposeAbi(abi);
        public static unsafe void DisposeAbiArray(object box) => MarshalInspectable<object>.DisposeAbiArray(box);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    internal sealed class ShapeVisualRcwFactoryAttribute : global::WinRT.WinRTImplementationTypeRcwFactoryAttribute
    {
        public override object CreateInstance(global::WinRT.IInspectable inspectable)
            => new global::Microsoft.UI.Composition.ShapeVisual(inspectable.ObjRef);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    public struct SineEasingFunction
    {

        public static IObjectReference CreateMarshaler(global::Microsoft.UI.Composition.SineEasingFunction obj) => obj is null ? null : MarshalInspectable<global::Microsoft.UI.Composition.SineEasingFunction>.CreateMarshaler<IUnknownVftbl>(obj, global::ABI.Microsoft.UI.Composition.ISineEasingFunctionMethods.IID);
        public static ObjectReferenceValue CreateMarshaler2(global::Microsoft.UI.Composition.SineEasingFunction obj) => MarshalInspectable<object>.CreateMarshaler2(obj, global::ABI.Microsoft.UI.Composition.ISineEasingFunctionMethods.IID);
        public static IntPtr GetAbi(IObjectReference value) => value is null ? IntPtr.Zero : MarshalInterfaceHelper<object>.GetAbi(value);
        public static global::Microsoft.UI.Composition.SineEasingFunction FromAbi(IntPtr thisPtr) => global::Microsoft.UI.Composition.SineEasingFunction.FromAbi(thisPtr);
        public static IntPtr FromManaged(global::Microsoft.UI.Composition.SineEasingFunction obj) => obj is null ? IntPtr.Zero : CreateMarshaler2(obj).Detach();
        public static unsafe MarshalInterfaceHelper<global::Microsoft.UI.Composition.SineEasingFunction>.MarshalerArray CreateMarshalerArray(global::Microsoft.UI.Composition.SineEasingFunction[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.SineEasingFunction>.CreateMarshalerArray2(array, (o) => CreateMarshaler2(o));
        public static (int length, IntPtr data) GetAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.SineEasingFunction>.GetAbiArray(box);
        public static unsafe global::Microsoft.UI.Composition.SineEasingFunction[] FromAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.SineEasingFunction>.FromAbiArray(box, FromAbi);
        public static void CopyAbiArray(global::Microsoft.UI.Composition.SineEasingFunction[] array, object box) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.SineEasingFunction>.CopyAbiArray(array, box, FromAbi);
        public static (int length, IntPtr data) FromManagedArray(global::Microsoft.UI.Composition.SineEasingFunction[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.SineEasingFunction>.FromManagedArray(array, (o) => FromManaged(o));
        public static void DisposeMarshaler(IObjectReference value) => MarshalInspectable<object>.DisposeMarshaler(value);
        public static void DisposeMarshalerArray(MarshalInterfaceHelper<global::Microsoft.UI.Composition.SineEasingFunction>.MarshalerArray array) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.SineEasingFunction>.DisposeMarshalerArray(array);
        public static void DisposeAbi(IntPtr abi) => MarshalInspectable<object>.DisposeAbi(abi);
        public static unsafe void DisposeAbiArray(object box) => MarshalInspectable<object>.DisposeAbiArray(box);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    internal sealed class SineEasingFunctionRcwFactoryAttribute : global::WinRT.WinRTImplementationTypeRcwFactoryAttribute
    {
        public override object CreateInstance(global::WinRT.IInspectable inspectable)
            => new global::Microsoft.UI.Composition.SineEasingFunction(inspectable.ObjRef);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    public struct SpotLight
    {

        public static IObjectReference CreateMarshaler(global::Microsoft.UI.Composition.SpotLight obj) => obj is null ? null : MarshalInspectable<global::Microsoft.UI.Composition.SpotLight>.CreateMarshaler<IUnknownVftbl>(obj, global::ABI.Microsoft.UI.Composition.ISpotLightMethods.IID);
        public static ObjectReferenceValue CreateMarshaler2(global::Microsoft.UI.Composition.SpotLight obj) => MarshalInspectable<object>.CreateMarshaler2(obj, global::ABI.Microsoft.UI.Composition.ISpotLightMethods.IID);
        public static IntPtr GetAbi(IObjectReference value) => value is null ? IntPtr.Zero : MarshalInterfaceHelper<object>.GetAbi(value);
        public static global::Microsoft.UI.Composition.SpotLight FromAbi(IntPtr thisPtr) => global::Microsoft.UI.Composition.SpotLight.FromAbi(thisPtr);
        public static IntPtr FromManaged(global::Microsoft.UI.Composition.SpotLight obj) => obj is null ? IntPtr.Zero : CreateMarshaler2(obj).Detach();
        public static unsafe MarshalInterfaceHelper<global::Microsoft.UI.Composition.SpotLight>.MarshalerArray CreateMarshalerArray(global::Microsoft.UI.Composition.SpotLight[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.SpotLight>.CreateMarshalerArray2(array, (o) => CreateMarshaler2(o));
        public static (int length, IntPtr data) GetAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.SpotLight>.GetAbiArray(box);
        public static unsafe global::Microsoft.UI.Composition.SpotLight[] FromAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.SpotLight>.FromAbiArray(box, FromAbi);
        public static void CopyAbiArray(global::Microsoft.UI.Composition.SpotLight[] array, object box) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.SpotLight>.CopyAbiArray(array, box, FromAbi);
        public static (int length, IntPtr data) FromManagedArray(global::Microsoft.UI.Composition.SpotLight[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.SpotLight>.FromManagedArray(array, (o) => FromManaged(o));
        public static void DisposeMarshaler(IObjectReference value) => MarshalInspectable<object>.DisposeMarshaler(value);
        public static void DisposeMarshalerArray(MarshalInterfaceHelper<global::Microsoft.UI.Composition.SpotLight>.MarshalerArray array) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.SpotLight>.DisposeMarshalerArray(array);
        public static void DisposeAbi(IntPtr abi) => MarshalInspectable<object>.DisposeAbi(abi);
        public static unsafe void DisposeAbiArray(object box) => MarshalInspectable<object>.DisposeAbiArray(box);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    internal sealed class SpotLightRcwFactoryAttribute : global::WinRT.WinRTImplementationTypeRcwFactoryAttribute
    {
        public override object CreateInstance(global::WinRT.IInspectable inspectable)
            => new global::Microsoft.UI.Composition.SpotLight(inspectable.ObjRef);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    public struct SpringScalarNaturalMotionAnimation
    {

        public static IObjectReference CreateMarshaler(global::Microsoft.UI.Composition.SpringScalarNaturalMotionAnimation obj) => obj is null ? null : MarshalInspectable<global::Microsoft.UI.Composition.SpringScalarNaturalMotionAnimation>.CreateMarshaler<IUnknownVftbl>(obj, global::ABI.Microsoft.UI.Composition.ISpringScalarNaturalMotionAnimationMethods.IID);
        public static ObjectReferenceValue CreateMarshaler2(global::Microsoft.UI.Composition.SpringScalarNaturalMotionAnimation obj) => MarshalInspectable<object>.CreateMarshaler2(obj, global::ABI.Microsoft.UI.Composition.ISpringScalarNaturalMotionAnimationMethods.IID);
        public static IntPtr GetAbi(IObjectReference value) => value is null ? IntPtr.Zero : MarshalInterfaceHelper<object>.GetAbi(value);
        public static global::Microsoft.UI.Composition.SpringScalarNaturalMotionAnimation FromAbi(IntPtr thisPtr) => global::Microsoft.UI.Composition.SpringScalarNaturalMotionAnimation.FromAbi(thisPtr);
        public static IntPtr FromManaged(global::Microsoft.UI.Composition.SpringScalarNaturalMotionAnimation obj) => obj is null ? IntPtr.Zero : CreateMarshaler2(obj).Detach();
        public static unsafe MarshalInterfaceHelper<global::Microsoft.UI.Composition.SpringScalarNaturalMotionAnimation>.MarshalerArray CreateMarshalerArray(global::Microsoft.UI.Composition.SpringScalarNaturalMotionAnimation[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.SpringScalarNaturalMotionAnimation>.CreateMarshalerArray2(array, (o) => CreateMarshaler2(o));
        public static (int length, IntPtr data) GetAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.SpringScalarNaturalMotionAnimation>.GetAbiArray(box);
        public static unsafe global::Microsoft.UI.Composition.SpringScalarNaturalMotionAnimation[] FromAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.SpringScalarNaturalMotionAnimation>.FromAbiArray(box, FromAbi);
        public static void CopyAbiArray(global::Microsoft.UI.Composition.SpringScalarNaturalMotionAnimation[] array, object box) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.SpringScalarNaturalMotionAnimation>.CopyAbiArray(array, box, FromAbi);
        public static (int length, IntPtr data) FromManagedArray(global::Microsoft.UI.Composition.SpringScalarNaturalMotionAnimation[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.SpringScalarNaturalMotionAnimation>.FromManagedArray(array, (o) => FromManaged(o));
        public static void DisposeMarshaler(IObjectReference value) => MarshalInspectable<object>.DisposeMarshaler(value);
        public static void DisposeMarshalerArray(MarshalInterfaceHelper<global::Microsoft.UI.Composition.SpringScalarNaturalMotionAnimation>.MarshalerArray array) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.SpringScalarNaturalMotionAnimation>.DisposeMarshalerArray(array);
        public static void DisposeAbi(IntPtr abi) => MarshalInspectable<object>.DisposeAbi(abi);
        public static unsafe void DisposeAbiArray(object box) => MarshalInspectable<object>.DisposeAbiArray(box);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    internal sealed class SpringScalarNaturalMotionAnimationRcwFactoryAttribute : global::WinRT.WinRTImplementationTypeRcwFactoryAttribute
    {
        public override object CreateInstance(global::WinRT.IInspectable inspectable)
            => new global::Microsoft.UI.Composition.SpringScalarNaturalMotionAnimation(inspectable.ObjRef);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    public struct SpringVector2NaturalMotionAnimation
    {

        public static IObjectReference CreateMarshaler(global::Microsoft.UI.Composition.SpringVector2NaturalMotionAnimation obj) => obj is null ? null : MarshalInspectable<global::Microsoft.UI.Composition.SpringVector2NaturalMotionAnimation>.CreateMarshaler<IUnknownVftbl>(obj, global::ABI.Microsoft.UI.Composition.ISpringVector2NaturalMotionAnimationMethods.IID);
        public static ObjectReferenceValue CreateMarshaler2(global::Microsoft.UI.Composition.SpringVector2NaturalMotionAnimation obj) => MarshalInspectable<object>.CreateMarshaler2(obj, global::ABI.Microsoft.UI.Composition.ISpringVector2NaturalMotionAnimationMethods.IID);
        public static IntPtr GetAbi(IObjectReference value) => value is null ? IntPtr.Zero : MarshalInterfaceHelper<object>.GetAbi(value);
        public static global::Microsoft.UI.Composition.SpringVector2NaturalMotionAnimation FromAbi(IntPtr thisPtr) => global::Microsoft.UI.Composition.SpringVector2NaturalMotionAnimation.FromAbi(thisPtr);
        public static IntPtr FromManaged(global::Microsoft.UI.Composition.SpringVector2NaturalMotionAnimation obj) => obj is null ? IntPtr.Zero : CreateMarshaler2(obj).Detach();
        public static unsafe MarshalInterfaceHelper<global::Microsoft.UI.Composition.SpringVector2NaturalMotionAnimation>.MarshalerArray CreateMarshalerArray(global::Microsoft.UI.Composition.SpringVector2NaturalMotionAnimation[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.SpringVector2NaturalMotionAnimation>.CreateMarshalerArray2(array, (o) => CreateMarshaler2(o));
        public static (int length, IntPtr data) GetAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.SpringVector2NaturalMotionAnimation>.GetAbiArray(box);
        public static unsafe global::Microsoft.UI.Composition.SpringVector2NaturalMotionAnimation[] FromAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.SpringVector2NaturalMotionAnimation>.FromAbiArray(box, FromAbi);
        public static void CopyAbiArray(global::Microsoft.UI.Composition.SpringVector2NaturalMotionAnimation[] array, object box) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.SpringVector2NaturalMotionAnimation>.CopyAbiArray(array, box, FromAbi);
        public static (int length, IntPtr data) FromManagedArray(global::Microsoft.UI.Composition.SpringVector2NaturalMotionAnimation[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.SpringVector2NaturalMotionAnimation>.FromManagedArray(array, (o) => FromManaged(o));
        public static void DisposeMarshaler(IObjectReference value) => MarshalInspectable<object>.DisposeMarshaler(value);
        public static void DisposeMarshalerArray(MarshalInterfaceHelper<global::Microsoft.UI.Composition.SpringVector2NaturalMotionAnimation>.MarshalerArray array) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.SpringVector2NaturalMotionAnimation>.DisposeMarshalerArray(array);
        public static void DisposeAbi(IntPtr abi) => MarshalInspectable<object>.DisposeAbi(abi);
        public static unsafe void DisposeAbiArray(object box) => MarshalInspectable<object>.DisposeAbiArray(box);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    internal sealed class SpringVector2NaturalMotionAnimationRcwFactoryAttribute : global::WinRT.WinRTImplementationTypeRcwFactoryAttribute
    {
        public override object CreateInstance(global::WinRT.IInspectable inspectable)
            => new global::Microsoft.UI.Composition.SpringVector2NaturalMotionAnimation(inspectable.ObjRef);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    public struct SpringVector3NaturalMotionAnimation
    {

        public static IObjectReference CreateMarshaler(global::Microsoft.UI.Composition.SpringVector3NaturalMotionAnimation obj) => obj is null ? null : MarshalInspectable<global::Microsoft.UI.Composition.SpringVector3NaturalMotionAnimation>.CreateMarshaler<IUnknownVftbl>(obj, global::ABI.Microsoft.UI.Composition.ISpringVector3NaturalMotionAnimationMethods.IID);
        public static ObjectReferenceValue CreateMarshaler2(global::Microsoft.UI.Composition.SpringVector3NaturalMotionAnimation obj) => MarshalInspectable<object>.CreateMarshaler2(obj, global::ABI.Microsoft.UI.Composition.ISpringVector3NaturalMotionAnimationMethods.IID);
        public static IntPtr GetAbi(IObjectReference value) => value is null ? IntPtr.Zero : MarshalInterfaceHelper<object>.GetAbi(value);
        public static global::Microsoft.UI.Composition.SpringVector3NaturalMotionAnimation FromAbi(IntPtr thisPtr) => global::Microsoft.UI.Composition.SpringVector3NaturalMotionAnimation.FromAbi(thisPtr);
        public static IntPtr FromManaged(global::Microsoft.UI.Composition.SpringVector3NaturalMotionAnimation obj) => obj is null ? IntPtr.Zero : CreateMarshaler2(obj).Detach();
        public static unsafe MarshalInterfaceHelper<global::Microsoft.UI.Composition.SpringVector3NaturalMotionAnimation>.MarshalerArray CreateMarshalerArray(global::Microsoft.UI.Composition.SpringVector3NaturalMotionAnimation[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.SpringVector3NaturalMotionAnimation>.CreateMarshalerArray2(array, (o) => CreateMarshaler2(o));
        public static (int length, IntPtr data) GetAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.SpringVector3NaturalMotionAnimation>.GetAbiArray(box);
        public static unsafe global::Microsoft.UI.Composition.SpringVector3NaturalMotionAnimation[] FromAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.SpringVector3NaturalMotionAnimation>.FromAbiArray(box, FromAbi);
        public static void CopyAbiArray(global::Microsoft.UI.Composition.SpringVector3NaturalMotionAnimation[] array, object box) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.SpringVector3NaturalMotionAnimation>.CopyAbiArray(array, box, FromAbi);
        public static (int length, IntPtr data) FromManagedArray(global::Microsoft.UI.Composition.SpringVector3NaturalMotionAnimation[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.SpringVector3NaturalMotionAnimation>.FromManagedArray(array, (o) => FromManaged(o));
        public static void DisposeMarshaler(IObjectReference value) => MarshalInspectable<object>.DisposeMarshaler(value);
        public static void DisposeMarshalerArray(MarshalInterfaceHelper<global::Microsoft.UI.Composition.SpringVector3NaturalMotionAnimation>.MarshalerArray array) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.SpringVector3NaturalMotionAnimation>.DisposeMarshalerArray(array);
        public static void DisposeAbi(IntPtr abi) => MarshalInspectable<object>.DisposeAbi(abi);
        public static unsafe void DisposeAbiArray(object box) => MarshalInspectable<object>.DisposeAbiArray(box);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    internal sealed class SpringVector3NaturalMotionAnimationRcwFactoryAttribute : global::WinRT.WinRTImplementationTypeRcwFactoryAttribute
    {
        public override object CreateInstance(global::WinRT.IInspectable inspectable)
            => new global::Microsoft.UI.Composition.SpringVector3NaturalMotionAnimation(inspectable.ObjRef);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    public struct SpriteVisual
    {

        public static IObjectReference CreateMarshaler(global::Microsoft.UI.Composition.SpriteVisual obj) => obj is null ? null : MarshalInspectable<global::Microsoft.UI.Composition.SpriteVisual>.CreateMarshaler<IUnknownVftbl>(obj, global::ABI.Microsoft.UI.Composition.ISpriteVisualMethods.IID);
        public static ObjectReferenceValue CreateMarshaler2(global::Microsoft.UI.Composition.SpriteVisual obj) => MarshalInspectable<object>.CreateMarshaler2(obj, global::ABI.Microsoft.UI.Composition.ISpriteVisualMethods.IID);
        public static IntPtr GetAbi(IObjectReference value) => value is null ? IntPtr.Zero : MarshalInterfaceHelper<object>.GetAbi(value);
        public static global::Microsoft.UI.Composition.SpriteVisual FromAbi(IntPtr thisPtr) => global::Microsoft.UI.Composition.SpriteVisual.FromAbi(thisPtr);
        public static IntPtr FromManaged(global::Microsoft.UI.Composition.SpriteVisual obj) => obj is null ? IntPtr.Zero : CreateMarshaler2(obj).Detach();
        public static unsafe MarshalInterfaceHelper<global::Microsoft.UI.Composition.SpriteVisual>.MarshalerArray CreateMarshalerArray(global::Microsoft.UI.Composition.SpriteVisual[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.SpriteVisual>.CreateMarshalerArray2(array, (o) => CreateMarshaler2(o));
        public static (int length, IntPtr data) GetAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.SpriteVisual>.GetAbiArray(box);
        public static unsafe global::Microsoft.UI.Composition.SpriteVisual[] FromAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.SpriteVisual>.FromAbiArray(box, FromAbi);
        public static void CopyAbiArray(global::Microsoft.UI.Composition.SpriteVisual[] array, object box) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.SpriteVisual>.CopyAbiArray(array, box, FromAbi);
        public static (int length, IntPtr data) FromManagedArray(global::Microsoft.UI.Composition.SpriteVisual[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.SpriteVisual>.FromManagedArray(array, (o) => FromManaged(o));
        public static void DisposeMarshaler(IObjectReference value) => MarshalInspectable<object>.DisposeMarshaler(value);
        public static void DisposeMarshalerArray(MarshalInterfaceHelper<global::Microsoft.UI.Composition.SpriteVisual>.MarshalerArray array) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.SpriteVisual>.DisposeMarshalerArray(array);
        public static void DisposeAbi(IntPtr abi) => MarshalInspectable<object>.DisposeAbi(abi);
        public static unsafe void DisposeAbiArray(object box) => MarshalInspectable<object>.DisposeAbiArray(box);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    internal sealed class SpriteVisualRcwFactoryAttribute : global::WinRT.WinRTImplementationTypeRcwFactoryAttribute
    {
        public override object CreateInstance(global::WinRT.IInspectable inspectable)
            => new global::Microsoft.UI.Composition.SpriteVisual(inspectable.ObjRef);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    public struct StepEasingFunction
    {

        public static IObjectReference CreateMarshaler(global::Microsoft.UI.Composition.StepEasingFunction obj) => obj is null ? null : MarshalInspectable<global::Microsoft.UI.Composition.StepEasingFunction>.CreateMarshaler<IUnknownVftbl>(obj, global::ABI.Microsoft.UI.Composition.IStepEasingFunctionMethods.IID);
        public static ObjectReferenceValue CreateMarshaler2(global::Microsoft.UI.Composition.StepEasingFunction obj) => MarshalInspectable<object>.CreateMarshaler2(obj, global::ABI.Microsoft.UI.Composition.IStepEasingFunctionMethods.IID);
        public static IntPtr GetAbi(IObjectReference value) => value is null ? IntPtr.Zero : MarshalInterfaceHelper<object>.GetAbi(value);
        public static global::Microsoft.UI.Composition.StepEasingFunction FromAbi(IntPtr thisPtr) => global::Microsoft.UI.Composition.StepEasingFunction.FromAbi(thisPtr);
        public static IntPtr FromManaged(global::Microsoft.UI.Composition.StepEasingFunction obj) => obj is null ? IntPtr.Zero : CreateMarshaler2(obj).Detach();
        public static unsafe MarshalInterfaceHelper<global::Microsoft.UI.Composition.StepEasingFunction>.MarshalerArray CreateMarshalerArray(global::Microsoft.UI.Composition.StepEasingFunction[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.StepEasingFunction>.CreateMarshalerArray2(array, (o) => CreateMarshaler2(o));
        public static (int length, IntPtr data) GetAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.StepEasingFunction>.GetAbiArray(box);
        public static unsafe global::Microsoft.UI.Composition.StepEasingFunction[] FromAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.StepEasingFunction>.FromAbiArray(box, FromAbi);
        public static void CopyAbiArray(global::Microsoft.UI.Composition.StepEasingFunction[] array, object box) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.StepEasingFunction>.CopyAbiArray(array, box, FromAbi);
        public static (int length, IntPtr data) FromManagedArray(global::Microsoft.UI.Composition.StepEasingFunction[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.StepEasingFunction>.FromManagedArray(array, (o) => FromManaged(o));
        public static void DisposeMarshaler(IObjectReference value) => MarshalInspectable<object>.DisposeMarshaler(value);
        public static void DisposeMarshalerArray(MarshalInterfaceHelper<global::Microsoft.UI.Composition.StepEasingFunction>.MarshalerArray array) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.StepEasingFunction>.DisposeMarshalerArray(array);
        public static void DisposeAbi(IntPtr abi) => MarshalInspectable<object>.DisposeAbi(abi);
        public static unsafe void DisposeAbiArray(object box) => MarshalInspectable<object>.DisposeAbiArray(box);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    internal sealed class StepEasingFunctionRcwFactoryAttribute : global::WinRT.WinRTImplementationTypeRcwFactoryAttribute
    {
        public override object CreateInstance(global::WinRT.IInspectable inspectable)
            => new global::Microsoft.UI.Composition.StepEasingFunction(inspectable.ObjRef);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    public struct Vector2KeyFrameAnimation
    {

        public static IObjectReference CreateMarshaler(global::Microsoft.UI.Composition.Vector2KeyFrameAnimation obj) => obj is null ? null : MarshalInspectable<global::Microsoft.UI.Composition.Vector2KeyFrameAnimation>.CreateMarshaler<IUnknownVftbl>(obj, global::ABI.Microsoft.UI.Composition.IVector2KeyFrameAnimationMethods.IID);
        public static ObjectReferenceValue CreateMarshaler2(global::Microsoft.UI.Composition.Vector2KeyFrameAnimation obj) => MarshalInspectable<object>.CreateMarshaler2(obj, global::ABI.Microsoft.UI.Composition.IVector2KeyFrameAnimationMethods.IID);
        public static IntPtr GetAbi(IObjectReference value) => value is null ? IntPtr.Zero : MarshalInterfaceHelper<object>.GetAbi(value);
        public static global::Microsoft.UI.Composition.Vector2KeyFrameAnimation FromAbi(IntPtr thisPtr) => global::Microsoft.UI.Composition.Vector2KeyFrameAnimation.FromAbi(thisPtr);
        public static IntPtr FromManaged(global::Microsoft.UI.Composition.Vector2KeyFrameAnimation obj) => obj is null ? IntPtr.Zero : CreateMarshaler2(obj).Detach();
        public static unsafe MarshalInterfaceHelper<global::Microsoft.UI.Composition.Vector2KeyFrameAnimation>.MarshalerArray CreateMarshalerArray(global::Microsoft.UI.Composition.Vector2KeyFrameAnimation[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.Vector2KeyFrameAnimation>.CreateMarshalerArray2(array, (o) => CreateMarshaler2(o));
        public static (int length, IntPtr data) GetAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.Vector2KeyFrameAnimation>.GetAbiArray(box);
        public static unsafe global::Microsoft.UI.Composition.Vector2KeyFrameAnimation[] FromAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.Vector2KeyFrameAnimation>.FromAbiArray(box, FromAbi);
        public static void CopyAbiArray(global::Microsoft.UI.Composition.Vector2KeyFrameAnimation[] array, object box) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.Vector2KeyFrameAnimation>.CopyAbiArray(array, box, FromAbi);
        public static (int length, IntPtr data) FromManagedArray(global::Microsoft.UI.Composition.Vector2KeyFrameAnimation[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.Vector2KeyFrameAnimation>.FromManagedArray(array, (o) => FromManaged(o));
        public static void DisposeMarshaler(IObjectReference value) => MarshalInspectable<object>.DisposeMarshaler(value);
        public static void DisposeMarshalerArray(MarshalInterfaceHelper<global::Microsoft.UI.Composition.Vector2KeyFrameAnimation>.MarshalerArray array) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.Vector2KeyFrameAnimation>.DisposeMarshalerArray(array);
        public static void DisposeAbi(IntPtr abi) => MarshalInspectable<object>.DisposeAbi(abi);
        public static unsafe void DisposeAbiArray(object box) => MarshalInspectable<object>.DisposeAbiArray(box);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    internal sealed class Vector2KeyFrameAnimationRcwFactoryAttribute : global::WinRT.WinRTImplementationTypeRcwFactoryAttribute
    {
        public override object CreateInstance(global::WinRT.IInspectable inspectable)
            => new global::Microsoft.UI.Composition.Vector2KeyFrameAnimation(inspectable.ObjRef);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    public struct Vector2NaturalMotionAnimation
    {

        public static IObjectReference CreateMarshaler(global::Microsoft.UI.Composition.Vector2NaturalMotionAnimation obj) => obj is null ? null : MarshalInspectable<global::Microsoft.UI.Composition.Vector2NaturalMotionAnimation>.CreateMarshaler<IUnknownVftbl>(obj, global::ABI.Microsoft.UI.Composition.IVector2NaturalMotionAnimationMethods.IID);
        public static ObjectReferenceValue CreateMarshaler2(global::Microsoft.UI.Composition.Vector2NaturalMotionAnimation obj) => MarshalInspectable<object>.CreateMarshaler2(obj, global::ABI.Microsoft.UI.Composition.IVector2NaturalMotionAnimationMethods.IID);
        public static IntPtr GetAbi(IObjectReference value) => value is null ? IntPtr.Zero : MarshalInterfaceHelper<object>.GetAbi(value);
        public static global::Microsoft.UI.Composition.Vector2NaturalMotionAnimation FromAbi(IntPtr thisPtr) => global::Microsoft.UI.Composition.Vector2NaturalMotionAnimation.FromAbi(thisPtr);
        public static IntPtr FromManaged(global::Microsoft.UI.Composition.Vector2NaturalMotionAnimation obj) => obj is null ? IntPtr.Zero : CreateMarshaler2(obj).Detach();
        public static unsafe MarshalInterfaceHelper<global::Microsoft.UI.Composition.Vector2NaturalMotionAnimation>.MarshalerArray CreateMarshalerArray(global::Microsoft.UI.Composition.Vector2NaturalMotionAnimation[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.Vector2NaturalMotionAnimation>.CreateMarshalerArray2(array, (o) => CreateMarshaler2(o));
        public static (int length, IntPtr data) GetAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.Vector2NaturalMotionAnimation>.GetAbiArray(box);
        public static unsafe global::Microsoft.UI.Composition.Vector2NaturalMotionAnimation[] FromAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.Vector2NaturalMotionAnimation>.FromAbiArray(box, FromAbi);
        public static void CopyAbiArray(global::Microsoft.UI.Composition.Vector2NaturalMotionAnimation[] array, object box) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.Vector2NaturalMotionAnimation>.CopyAbiArray(array, box, FromAbi);
        public static (int length, IntPtr data) FromManagedArray(global::Microsoft.UI.Composition.Vector2NaturalMotionAnimation[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.Vector2NaturalMotionAnimation>.FromManagedArray(array, (o) => FromManaged(o));
        public static void DisposeMarshaler(IObjectReference value) => MarshalInspectable<object>.DisposeMarshaler(value);
        public static void DisposeMarshalerArray(MarshalInterfaceHelper<global::Microsoft.UI.Composition.Vector2NaturalMotionAnimation>.MarshalerArray array) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.Vector2NaturalMotionAnimation>.DisposeMarshalerArray(array);
        public static void DisposeAbi(IntPtr abi) => MarshalInspectable<object>.DisposeAbi(abi);
        public static unsafe void DisposeAbiArray(object box) => MarshalInspectable<object>.DisposeAbiArray(box);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    internal sealed class Vector2NaturalMotionAnimationRcwFactoryAttribute : global::WinRT.WinRTImplementationTypeRcwFactoryAttribute
    {
        public override object CreateInstance(global::WinRT.IInspectable inspectable)
            => new global::Microsoft.UI.Composition.Vector2NaturalMotionAnimation(inspectable.ObjRef);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    public struct Vector3KeyFrameAnimation
    {

        public static IObjectReference CreateMarshaler(global::Microsoft.UI.Composition.Vector3KeyFrameAnimation obj) => obj is null ? null : MarshalInspectable<global::Microsoft.UI.Composition.Vector3KeyFrameAnimation>.CreateMarshaler<IUnknownVftbl>(obj, global::ABI.Microsoft.UI.Composition.IVector3KeyFrameAnimationMethods.IID);
        public static ObjectReferenceValue CreateMarshaler2(global::Microsoft.UI.Composition.Vector3KeyFrameAnimation obj) => MarshalInspectable<object>.CreateMarshaler2(obj, global::ABI.Microsoft.UI.Composition.IVector3KeyFrameAnimationMethods.IID);
        public static IntPtr GetAbi(IObjectReference value) => value is null ? IntPtr.Zero : MarshalInterfaceHelper<object>.GetAbi(value);
        public static global::Microsoft.UI.Composition.Vector3KeyFrameAnimation FromAbi(IntPtr thisPtr) => global::Microsoft.UI.Composition.Vector3KeyFrameAnimation.FromAbi(thisPtr);
        public static IntPtr FromManaged(global::Microsoft.UI.Composition.Vector3KeyFrameAnimation obj) => obj is null ? IntPtr.Zero : CreateMarshaler2(obj).Detach();
        public static unsafe MarshalInterfaceHelper<global::Microsoft.UI.Composition.Vector3KeyFrameAnimation>.MarshalerArray CreateMarshalerArray(global::Microsoft.UI.Composition.Vector3KeyFrameAnimation[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.Vector3KeyFrameAnimation>.CreateMarshalerArray2(array, (o) => CreateMarshaler2(o));
        public static (int length, IntPtr data) GetAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.Vector3KeyFrameAnimation>.GetAbiArray(box);
        public static unsafe global::Microsoft.UI.Composition.Vector3KeyFrameAnimation[] FromAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.Vector3KeyFrameAnimation>.FromAbiArray(box, FromAbi);
        public static void CopyAbiArray(global::Microsoft.UI.Composition.Vector3KeyFrameAnimation[] array, object box) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.Vector3KeyFrameAnimation>.CopyAbiArray(array, box, FromAbi);
        public static (int length, IntPtr data) FromManagedArray(global::Microsoft.UI.Composition.Vector3KeyFrameAnimation[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.Vector3KeyFrameAnimation>.FromManagedArray(array, (o) => FromManaged(o));
        public static void DisposeMarshaler(IObjectReference value) => MarshalInspectable<object>.DisposeMarshaler(value);
        public static void DisposeMarshalerArray(MarshalInterfaceHelper<global::Microsoft.UI.Composition.Vector3KeyFrameAnimation>.MarshalerArray array) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.Vector3KeyFrameAnimation>.DisposeMarshalerArray(array);
        public static void DisposeAbi(IntPtr abi) => MarshalInspectable<object>.DisposeAbi(abi);
        public static unsafe void DisposeAbiArray(object box) => MarshalInspectable<object>.DisposeAbiArray(box);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    internal sealed class Vector3KeyFrameAnimationRcwFactoryAttribute : global::WinRT.WinRTImplementationTypeRcwFactoryAttribute
    {
        public override object CreateInstance(global::WinRT.IInspectable inspectable)
            => new global::Microsoft.UI.Composition.Vector3KeyFrameAnimation(inspectable.ObjRef);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    public struct Vector3NaturalMotionAnimation
    {

        public static IObjectReference CreateMarshaler(global::Microsoft.UI.Composition.Vector3NaturalMotionAnimation obj) => obj is null ? null : MarshalInspectable<global::Microsoft.UI.Composition.Vector3NaturalMotionAnimation>.CreateMarshaler<IUnknownVftbl>(obj, global::ABI.Microsoft.UI.Composition.IVector3NaturalMotionAnimationMethods.IID);
        public static ObjectReferenceValue CreateMarshaler2(global::Microsoft.UI.Composition.Vector3NaturalMotionAnimation obj) => MarshalInspectable<object>.CreateMarshaler2(obj, global::ABI.Microsoft.UI.Composition.IVector3NaturalMotionAnimationMethods.IID);
        public static IntPtr GetAbi(IObjectReference value) => value is null ? IntPtr.Zero : MarshalInterfaceHelper<object>.GetAbi(value);
        public static global::Microsoft.UI.Composition.Vector3NaturalMotionAnimation FromAbi(IntPtr thisPtr) => global::Microsoft.UI.Composition.Vector3NaturalMotionAnimation.FromAbi(thisPtr);
        public static IntPtr FromManaged(global::Microsoft.UI.Composition.Vector3NaturalMotionAnimation obj) => obj is null ? IntPtr.Zero : CreateMarshaler2(obj).Detach();
        public static unsafe MarshalInterfaceHelper<global::Microsoft.UI.Composition.Vector3NaturalMotionAnimation>.MarshalerArray CreateMarshalerArray(global::Microsoft.UI.Composition.Vector3NaturalMotionAnimation[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.Vector3NaturalMotionAnimation>.CreateMarshalerArray2(array, (o) => CreateMarshaler2(o));
        public static (int length, IntPtr data) GetAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.Vector3NaturalMotionAnimation>.GetAbiArray(box);
        public static unsafe global::Microsoft.UI.Composition.Vector3NaturalMotionAnimation[] FromAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.Vector3NaturalMotionAnimation>.FromAbiArray(box, FromAbi);
        public static void CopyAbiArray(global::Microsoft.UI.Composition.Vector3NaturalMotionAnimation[] array, object box) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.Vector3NaturalMotionAnimation>.CopyAbiArray(array, box, FromAbi);
        public static (int length, IntPtr data) FromManagedArray(global::Microsoft.UI.Composition.Vector3NaturalMotionAnimation[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.Vector3NaturalMotionAnimation>.FromManagedArray(array, (o) => FromManaged(o));
        public static void DisposeMarshaler(IObjectReference value) => MarshalInspectable<object>.DisposeMarshaler(value);
        public static void DisposeMarshalerArray(MarshalInterfaceHelper<global::Microsoft.UI.Composition.Vector3NaturalMotionAnimation>.MarshalerArray array) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.Vector3NaturalMotionAnimation>.DisposeMarshalerArray(array);
        public static void DisposeAbi(IntPtr abi) => MarshalInspectable<object>.DisposeAbi(abi);
        public static unsafe void DisposeAbiArray(object box) => MarshalInspectable<object>.DisposeAbiArray(box);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    internal sealed class Vector3NaturalMotionAnimationRcwFactoryAttribute : global::WinRT.WinRTImplementationTypeRcwFactoryAttribute
    {
        public override object CreateInstance(global::WinRT.IInspectable inspectable)
            => new global::Microsoft.UI.Composition.Vector3NaturalMotionAnimation(inspectable.ObjRef);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    public struct Vector4KeyFrameAnimation
    {

        public static IObjectReference CreateMarshaler(global::Microsoft.UI.Composition.Vector4KeyFrameAnimation obj) => obj is null ? null : MarshalInspectable<global::Microsoft.UI.Composition.Vector4KeyFrameAnimation>.CreateMarshaler<IUnknownVftbl>(obj, global::ABI.Microsoft.UI.Composition.IVector4KeyFrameAnimationMethods.IID);
        public static ObjectReferenceValue CreateMarshaler2(global::Microsoft.UI.Composition.Vector4KeyFrameAnimation obj) => MarshalInspectable<object>.CreateMarshaler2(obj, global::ABI.Microsoft.UI.Composition.IVector4KeyFrameAnimationMethods.IID);
        public static IntPtr GetAbi(IObjectReference value) => value is null ? IntPtr.Zero : MarshalInterfaceHelper<object>.GetAbi(value);
        public static global::Microsoft.UI.Composition.Vector4KeyFrameAnimation FromAbi(IntPtr thisPtr) => global::Microsoft.UI.Composition.Vector4KeyFrameAnimation.FromAbi(thisPtr);
        public static IntPtr FromManaged(global::Microsoft.UI.Composition.Vector4KeyFrameAnimation obj) => obj is null ? IntPtr.Zero : CreateMarshaler2(obj).Detach();
        public static unsafe MarshalInterfaceHelper<global::Microsoft.UI.Composition.Vector4KeyFrameAnimation>.MarshalerArray CreateMarshalerArray(global::Microsoft.UI.Composition.Vector4KeyFrameAnimation[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.Vector4KeyFrameAnimation>.CreateMarshalerArray2(array, (o) => CreateMarshaler2(o));
        public static (int length, IntPtr data) GetAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.Vector4KeyFrameAnimation>.GetAbiArray(box);
        public static unsafe global::Microsoft.UI.Composition.Vector4KeyFrameAnimation[] FromAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.Vector4KeyFrameAnimation>.FromAbiArray(box, FromAbi);
        public static void CopyAbiArray(global::Microsoft.UI.Composition.Vector4KeyFrameAnimation[] array, object box) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.Vector4KeyFrameAnimation>.CopyAbiArray(array, box, FromAbi);
        public static (int length, IntPtr data) FromManagedArray(global::Microsoft.UI.Composition.Vector4KeyFrameAnimation[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.Vector4KeyFrameAnimation>.FromManagedArray(array, (o) => FromManaged(o));
        public static void DisposeMarshaler(IObjectReference value) => MarshalInspectable<object>.DisposeMarshaler(value);
        public static void DisposeMarshalerArray(MarshalInterfaceHelper<global::Microsoft.UI.Composition.Vector4KeyFrameAnimation>.MarshalerArray array) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.Vector4KeyFrameAnimation>.DisposeMarshalerArray(array);
        public static void DisposeAbi(IntPtr abi) => MarshalInspectable<object>.DisposeAbi(abi);
        public static unsafe void DisposeAbiArray(object box) => MarshalInspectable<object>.DisposeAbiArray(box);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    internal sealed class Vector4KeyFrameAnimationRcwFactoryAttribute : global::WinRT.WinRTImplementationTypeRcwFactoryAttribute
    {
        public override object CreateInstance(global::WinRT.IInspectable inspectable)
            => new global::Microsoft.UI.Composition.Vector4KeyFrameAnimation(inspectable.ObjRef);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    public struct Visual
    {

        public static IObjectReference CreateMarshaler(global::Microsoft.UI.Composition.Visual obj) => obj is null ? null : MarshalInspectable<global::Microsoft.UI.Composition.Visual>.CreateMarshaler<IUnknownVftbl>(obj, global::ABI.Microsoft.UI.Composition.IVisualMethods.IID);
        public static ObjectReferenceValue CreateMarshaler2(global::Microsoft.UI.Composition.Visual obj) => MarshalInspectable<object>.CreateMarshaler2(obj, global::ABI.Microsoft.UI.Composition.IVisualMethods.IID);
        public static IntPtr GetAbi(IObjectReference value) => value is null ? IntPtr.Zero : MarshalInterfaceHelper<object>.GetAbi(value);
        public static global::Microsoft.UI.Composition.Visual FromAbi(IntPtr thisPtr) => global::Microsoft.UI.Composition.Visual.FromAbi(thisPtr);
        public static IntPtr FromManaged(global::Microsoft.UI.Composition.Visual obj) => obj is null ? IntPtr.Zero : CreateMarshaler2(obj).Detach();
        public static unsafe MarshalInterfaceHelper<global::Microsoft.UI.Composition.Visual>.MarshalerArray CreateMarshalerArray(global::Microsoft.UI.Composition.Visual[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.Visual>.CreateMarshalerArray2(array, (o) => CreateMarshaler2(o));
        public static (int length, IntPtr data) GetAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.Visual>.GetAbiArray(box);
        public static unsafe global::Microsoft.UI.Composition.Visual[] FromAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.Visual>.FromAbiArray(box, FromAbi);
        public static void CopyAbiArray(global::Microsoft.UI.Composition.Visual[] array, object box) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.Visual>.CopyAbiArray(array, box, FromAbi);
        public static (int length, IntPtr data) FromManagedArray(global::Microsoft.UI.Composition.Visual[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.Visual>.FromManagedArray(array, (o) => FromManaged(o));
        public static void DisposeMarshaler(IObjectReference value) => MarshalInspectable<object>.DisposeMarshaler(value);
        public static void DisposeMarshalerArray(MarshalInterfaceHelper<global::Microsoft.UI.Composition.Visual>.MarshalerArray array) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.Visual>.DisposeMarshalerArray(array);
        public static void DisposeAbi(IntPtr abi) => MarshalInspectable<object>.DisposeAbi(abi);
        public static unsafe void DisposeAbiArray(object box) => MarshalInspectable<object>.DisposeAbiArray(box);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    internal sealed class VisualRcwFactoryAttribute : global::WinRT.WinRTImplementationTypeRcwFactoryAttribute
    {
        public override object CreateInstance(global::WinRT.IInspectable inspectable)
            => new global::Microsoft.UI.Composition.Visual(inspectable.ObjRef);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    public struct VisualCollection
    {

        public static IObjectReference CreateMarshaler(global::Microsoft.UI.Composition.VisualCollection obj) => obj is null ? null : MarshalInspectable<global::Microsoft.UI.Composition.VisualCollection>.CreateMarshaler<IUnknownVftbl>(obj, global::ABI.Microsoft.UI.Composition.IVisualCollectionMethods.IID);
        public static ObjectReferenceValue CreateMarshaler2(global::Microsoft.UI.Composition.VisualCollection obj) => MarshalInspectable<object>.CreateMarshaler2(obj, global::ABI.Microsoft.UI.Composition.IVisualCollectionMethods.IID);
        public static IntPtr GetAbi(IObjectReference value) => value is null ? IntPtr.Zero : MarshalInterfaceHelper<object>.GetAbi(value);
        public static global::Microsoft.UI.Composition.VisualCollection FromAbi(IntPtr thisPtr) => global::Microsoft.UI.Composition.VisualCollection.FromAbi(thisPtr);
        public static IntPtr FromManaged(global::Microsoft.UI.Composition.VisualCollection obj) => obj is null ? IntPtr.Zero : CreateMarshaler2(obj).Detach();
        public static unsafe MarshalInterfaceHelper<global::Microsoft.UI.Composition.VisualCollection>.MarshalerArray CreateMarshalerArray(global::Microsoft.UI.Composition.VisualCollection[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.VisualCollection>.CreateMarshalerArray2(array, (o) => CreateMarshaler2(o));
        public static (int length, IntPtr data) GetAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.VisualCollection>.GetAbiArray(box);
        public static unsafe global::Microsoft.UI.Composition.VisualCollection[] FromAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.VisualCollection>.FromAbiArray(box, FromAbi);
        public static void CopyAbiArray(global::Microsoft.UI.Composition.VisualCollection[] array, object box) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.VisualCollection>.CopyAbiArray(array, box, FromAbi);
        public static (int length, IntPtr data) FromManagedArray(global::Microsoft.UI.Composition.VisualCollection[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.VisualCollection>.FromManagedArray(array, (o) => FromManaged(o));
        public static void DisposeMarshaler(IObjectReference value) => MarshalInspectable<object>.DisposeMarshaler(value);
        public static void DisposeMarshalerArray(MarshalInterfaceHelper<global::Microsoft.UI.Composition.VisualCollection>.MarshalerArray array) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.VisualCollection>.DisposeMarshalerArray(array);
        public static void DisposeAbi(IntPtr abi) => MarshalInspectable<object>.DisposeAbi(abi);
        public static unsafe void DisposeAbiArray(object box) => MarshalInspectable<object>.DisposeAbiArray(box);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    internal sealed class VisualCollectionRcwFactoryAttribute : global::WinRT.WinRTImplementationTypeRcwFactoryAttribute
    {
        public override object CreateInstance(global::WinRT.IInspectable inspectable)
            => new global::Microsoft.UI.Composition.VisualCollection(inspectable.ObjRef);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    public struct VisualUnorderedCollection
    {

        public static IObjectReference CreateMarshaler(global::Microsoft.UI.Composition.VisualUnorderedCollection obj) => obj is null ? null : MarshalInspectable<global::Microsoft.UI.Composition.VisualUnorderedCollection>.CreateMarshaler<IUnknownVftbl>(obj, global::ABI.Microsoft.UI.Composition.IVisualUnorderedCollectionMethods.IID);
        public static ObjectReferenceValue CreateMarshaler2(global::Microsoft.UI.Composition.VisualUnorderedCollection obj) => MarshalInspectable<object>.CreateMarshaler2(obj, global::ABI.Microsoft.UI.Composition.IVisualUnorderedCollectionMethods.IID);
        public static IntPtr GetAbi(IObjectReference value) => value is null ? IntPtr.Zero : MarshalInterfaceHelper<object>.GetAbi(value);
        public static global::Microsoft.UI.Composition.VisualUnorderedCollection FromAbi(IntPtr thisPtr) => global::Microsoft.UI.Composition.VisualUnorderedCollection.FromAbi(thisPtr);
        public static IntPtr FromManaged(global::Microsoft.UI.Composition.VisualUnorderedCollection obj) => obj is null ? IntPtr.Zero : CreateMarshaler2(obj).Detach();
        public static unsafe MarshalInterfaceHelper<global::Microsoft.UI.Composition.VisualUnorderedCollection>.MarshalerArray CreateMarshalerArray(global::Microsoft.UI.Composition.VisualUnorderedCollection[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.VisualUnorderedCollection>.CreateMarshalerArray2(array, (o) => CreateMarshaler2(o));
        public static (int length, IntPtr data) GetAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.VisualUnorderedCollection>.GetAbiArray(box);
        public static unsafe global::Microsoft.UI.Composition.VisualUnorderedCollection[] FromAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.VisualUnorderedCollection>.FromAbiArray(box, FromAbi);
        public static void CopyAbiArray(global::Microsoft.UI.Composition.VisualUnorderedCollection[] array, object box) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.VisualUnorderedCollection>.CopyAbiArray(array, box, FromAbi);
        public static (int length, IntPtr data) FromManagedArray(global::Microsoft.UI.Composition.VisualUnorderedCollection[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.VisualUnorderedCollection>.FromManagedArray(array, (o) => FromManaged(o));
        public static void DisposeMarshaler(IObjectReference value) => MarshalInspectable<object>.DisposeMarshaler(value);
        public static void DisposeMarshalerArray(MarshalInterfaceHelper<global::Microsoft.UI.Composition.VisualUnorderedCollection>.MarshalerArray array) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.VisualUnorderedCollection>.DisposeMarshalerArray(array);
        public static void DisposeAbi(IntPtr abi) => MarshalInspectable<object>.DisposeAbi(abi);
        public static unsafe void DisposeAbiArray(object box) => MarshalInspectable<object>.DisposeAbiArray(box);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    internal sealed class VisualUnorderedCollectionRcwFactoryAttribute : global::WinRT.WinRTImplementationTypeRcwFactoryAttribute
    {
        public override object CreateInstance(global::WinRT.IInspectable inspectable)
            => new global::Microsoft.UI.Composition.VisualUnorderedCollection(inspectable.ObjRef);
    }
}
#pragma warning restore CA1416
