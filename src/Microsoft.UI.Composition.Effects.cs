//------------------------------------------------------------------------------
// <auto-generated>
//     This file was generated by cswinrt.exe version 2.2.0.241111.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Diagnostics;
using System.Diagnostics.CodeAnalysis;
using System.Linq.Expressions;
using System.Reflection;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;
using WinRT;
using WinRT.Interop;


#pragma warning disable 0169 // warning CS0169: The field '...' is never used
#pragma warning disable 0649 // warning CS0169: Field '...' is never assigned to
#pragma warning disable CA2207, CA1063, CA1033, CA1001, CA2213

namespace Microsoft.UI.Composition.Effects
{
    [global::WinRT.WindowsRuntimeType("Microsoft.UI")][Guid("EB1E7316-114C-5950-8480-20A29A3BB1EE")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Composition.Effects.ISceneLightingEffect))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.Foundation.WindowsAppSDKContract), 65536u)]
    internal interface ISceneLightingEffect
    {
        float AmbientAmount { get; set; }
        float DiffuseAmount { get; set; }
        global::Windows.Graphics.Effects.IGraphicsEffectSource NormalMapSource { get; set; }
        float SpecularAmount { get; set; }
        float SpecularShine { get; set; }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI")][Guid("6B6496B2-468D-50D1-BBE9-593B8263AD80")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Composition.Effects.ISceneLightingEffect2))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.Foundation.WindowsAppSDKContract), 65536u)]
    internal interface ISceneLightingEffect2
    {
        SceneLightingEffectReflectanceModel ReflectanceModel { get; set; }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI")]
    [global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Composition.Effects.SceneLightingEffect))]
    [global::ABI.Microsoft.UI.Composition.Effects.SceneLightingEffectRcwFactory]
    [global::WinRT.ProjectedRuntimeClass(typeof(ISceneLightingEffect))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.Foundation.WindowsAppSDKContract), 65536u)]
    public sealed class SceneLightingEffect : global::Windows.Graphics.Effects.IGraphicsEffect, global::Windows.Graphics.Effects.IGraphicsEffectSource, global::System.Runtime.InteropServices.ICustomQueryInterface, IWinRTObject, IEquatable<SceneLightingEffect>
    {
        private IntPtr ThisPtr => _inner == null ? (((IWinRTObject)this).NativeObject).ThisPtr : _inner.ThisPtr;

        private readonly IObjectReference _inner = null;



        private IObjectReference _objRef_global__Microsoft_UI_Composition_Effects_ISceneLightingEffect => _inner;
        private volatile IObjectReference ___objRef_global__Microsoft_UI_Composition_Effects_ISceneLightingEffect2;
        private IObjectReference Make___objRef_global__Microsoft_UI_Composition_Effects_ISceneLightingEffect2()
        {
            global::System.Threading.Interlocked.CompareExchange(ref ___objRef_global__Microsoft_UI_Composition_Effects_ISceneLightingEffect2, ((IWinRTObject)this).NativeObject.As<IUnknownVftbl>(global::ABI.Microsoft.UI.Composition.Effects.ISceneLightingEffect2Methods.IID), null);
            return ___objRef_global__Microsoft_UI_Composition_Effects_ISceneLightingEffect2;
        }
        private IObjectReference _objRef_global__Microsoft_UI_Composition_Effects_ISceneLightingEffect2 => ___objRef_global__Microsoft_UI_Composition_Effects_ISceneLightingEffect2 ?? Make___objRef_global__Microsoft_UI_Composition_Effects_ISceneLightingEffect2();

        private volatile IObjectReference ___objRef_global__Windows_Graphics_Effects_IGraphicsEffect;
        private IObjectReference Make___objRef_global__Windows_Graphics_Effects_IGraphicsEffect()
        {
            global::System.Threading.Interlocked.CompareExchange(ref ___objRef_global__Windows_Graphics_Effects_IGraphicsEffect, ((IWinRTObject)this).NativeObject.As<IUnknownVftbl>(global::ABI.Windows.Graphics.Effects.IGraphicsEffectMethods.IID), null);
            return ___objRef_global__Windows_Graphics_Effects_IGraphicsEffect;
        }
        private IObjectReference _objRef_global__Windows_Graphics_Effects_IGraphicsEffect => ___objRef_global__Windows_Graphics_Effects_IGraphicsEffect ?? Make___objRef_global__Windows_Graphics_Effects_IGraphicsEffect();

        private volatile IObjectReference ___objRef_global__Windows_Graphics_Effects_IGraphicsEffectSource;
        private IObjectReference Make___objRef_global__Windows_Graphics_Effects_IGraphicsEffectSource()
        {
            global::System.Threading.Interlocked.CompareExchange(ref ___objRef_global__Windows_Graphics_Effects_IGraphicsEffectSource, ((IWinRTObject)this).NativeObject.As<IUnknownVftbl>(global::ABI.Windows.Graphics.Effects.IGraphicsEffectSourceMethods.IID), null);
            return ___objRef_global__Windows_Graphics_Effects_IGraphicsEffectSource;
        }
        private IObjectReference _objRef_global__Windows_Graphics_Effects_IGraphicsEffectSource => ___objRef_global__Windows_Graphics_Effects_IGraphicsEffectSource ?? Make___objRef_global__Windows_Graphics_Effects_IGraphicsEffectSource();



        private static volatile IObjectReference ___objRef_global__Microsoft_UI_Composition_Effects_SceneLightingEffect;
        private static IObjectReference _objRef_global__Microsoft_UI_Composition_Effects_SceneLightingEffect
        {
            get
            { 
                var factory = ___objRef_global__Microsoft_UI_Composition_Effects_SceneLightingEffect;
                if (factory != null && factory.IsInCurrentContext)
                {
                    return factory;
                }
                else
                {
                    return ___objRef_global__Microsoft_UI_Composition_Effects_SceneLightingEffect = ActivationFactory.Get("Microsoft.UI.Composition.Effects.SceneLightingEffect");
                }
            }
        }

        public SceneLightingEffect() 
        {
            _inner = global::ABI.WinRT.Interop.IActivationFactoryMethods.ActivateInstanceUnsafe(_objRef_global__Microsoft_UI_Composition_Effects_SceneLightingEffect, global::ABI.Microsoft.UI.Composition.Effects.ISceneLightingEffectMethods.IID);
            ComWrappersSupport.RegisterObjectForInterface(this, ThisPtr);
            ComWrappersHelper.Init(_inner, false);

        }

        public static SceneLightingEffect FromAbi(IntPtr thisPtr)
        {
            if (thisPtr == IntPtr.Zero) return null;
            return MarshalInspectable<SceneLightingEffect>.FromAbi(thisPtr);
        }

        internal SceneLightingEffect(IObjectReference objRef)
        {
            _inner = objRef.As(global::ABI.Microsoft.UI.Composition.Effects.ISceneLightingEffectMethods.IID);

        }


        public static bool operator ==(SceneLightingEffect x, SceneLightingEffect y) => (x?.ThisPtr ?? IntPtr.Zero) == (y?.ThisPtr ?? IntPtr.Zero);
        public static bool operator !=(SceneLightingEffect x, SceneLightingEffect y) => !(x == y);
        public bool Equals(SceneLightingEffect other) => this == other;
        public override bool Equals(object obj) => obj is SceneLightingEffect that && this == that;
        public override int GetHashCode() => ThisPtr.GetHashCode();


        bool IWinRTObject.HasUnwrappableNativeObject => true;
        IObjectReference IWinRTObject.NativeObject => _inner;
        private volatile global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> _queryInterfaceCache;
        private global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> MakeQueryInterfaceCache()
        {
            global::System.Threading.Interlocked.CompareExchange(ref _queryInterfaceCache, new global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference>(), null); 
            return _queryInterfaceCache;
        }
        global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> IWinRTObject.QueryInterfaceCache => _queryInterfaceCache ?? MakeQueryInterfaceCache();
        private volatile global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> _additionalTypeData;
        private global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> MakeAdditionalTypeData()
        {
            global::System.Threading.Interlocked.CompareExchange(ref _additionalTypeData, new global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object>(), null); 
            return _additionalTypeData;
        }
        global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> IWinRTObject.AdditionalTypeData => _additionalTypeData ?? MakeAdditionalTypeData();

        private struct InterfaceTag<I>{};


        public float AmbientAmount
        {
            get => global::ABI.Microsoft.UI.Composition.Effects.ISceneLightingEffectMethods.get_AmbientAmount(_objRef_global__Microsoft_UI_Composition_Effects_ISceneLightingEffect);
            set => global::ABI.Microsoft.UI.Composition.Effects.ISceneLightingEffectMethods.set_AmbientAmount(_objRef_global__Microsoft_UI_Composition_Effects_ISceneLightingEffect, value);
        }

        public float DiffuseAmount
        {
            get => global::ABI.Microsoft.UI.Composition.Effects.ISceneLightingEffectMethods.get_DiffuseAmount(_objRef_global__Microsoft_UI_Composition_Effects_ISceneLightingEffect);
            set => global::ABI.Microsoft.UI.Composition.Effects.ISceneLightingEffectMethods.set_DiffuseAmount(_objRef_global__Microsoft_UI_Composition_Effects_ISceneLightingEffect, value);
        }

        [global::System.Runtime.Versioning.SupportedOSPlatform("Windows10.0.10240.0")]
        public string Name
        {
            get => global::ABI.Windows.Graphics.Effects.IGraphicsEffectMethods.get_Name(_objRef_global__Windows_Graphics_Effects_IGraphicsEffect);
            set => global::ABI.Windows.Graphics.Effects.IGraphicsEffectMethods.set_Name(_objRef_global__Windows_Graphics_Effects_IGraphicsEffect, value);
        }

        public global::Windows.Graphics.Effects.IGraphicsEffectSource NormalMapSource
        {
            get => global::ABI.Microsoft.UI.Composition.Effects.ISceneLightingEffectMethods.get_NormalMapSource(_objRef_global__Microsoft_UI_Composition_Effects_ISceneLightingEffect);
            set => global::ABI.Microsoft.UI.Composition.Effects.ISceneLightingEffectMethods.set_NormalMapSource(_objRef_global__Microsoft_UI_Composition_Effects_ISceneLightingEffect, value);
        }

        public SceneLightingEffectReflectanceModel ReflectanceModel
        {
            get => global::ABI.Microsoft.UI.Composition.Effects.ISceneLightingEffect2Methods.get_ReflectanceModel(_objRef_global__Microsoft_UI_Composition_Effects_ISceneLightingEffect2);
            set => global::ABI.Microsoft.UI.Composition.Effects.ISceneLightingEffect2Methods.set_ReflectanceModel(_objRef_global__Microsoft_UI_Composition_Effects_ISceneLightingEffect2, value);
        }

        public float SpecularAmount
        {
            get => global::ABI.Microsoft.UI.Composition.Effects.ISceneLightingEffectMethods.get_SpecularAmount(_objRef_global__Microsoft_UI_Composition_Effects_ISceneLightingEffect);
            set => global::ABI.Microsoft.UI.Composition.Effects.ISceneLightingEffectMethods.set_SpecularAmount(_objRef_global__Microsoft_UI_Composition_Effects_ISceneLightingEffect, value);
        }

        public float SpecularShine
        {
            get => global::ABI.Microsoft.UI.Composition.Effects.ISceneLightingEffectMethods.get_SpecularShine(_objRef_global__Microsoft_UI_Composition_Effects_ISceneLightingEffect);
            set => global::ABI.Microsoft.UI.Composition.Effects.ISceneLightingEffectMethods.set_SpecularShine(_objRef_global__Microsoft_UI_Composition_Effects_ISceneLightingEffect, value);
        }

        private bool IsOverridableInterface(Guid iid) => false;

        global::System.Runtime.InteropServices.CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(ref Guid iid, out IntPtr ppv)
        {
            ppv = IntPtr.Zero;
            if (IsOverridableInterface(iid) || global::WinRT.Interop.IID.IID_IInspectable == iid)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
            }

            if (((IWinRTObject)this).NativeObject.TryAs(iid, out ppv) >= 0)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.Handled;
            }

            return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
        }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI")][global::WinRT.WinRTExposedType(typeof(global::WinRT.EnumTypeDetails<SceneLightingEffectReflectanceModel>))][global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.Foundation.WindowsAppSDKContract), 65536u)]
    public enum SceneLightingEffectReflectanceModel : int
    {
        BlinnPhong = unchecked((int)0),
        PhysicallyBasedBlinnPhong = unchecked((int)0x1),
    }
}

#pragma warning disable CA1416
namespace ABI.Microsoft.UI.Composition.Effects
{
    internal static class ISceneLightingEffectMethods
    {

        internal static unsafe float get_AmbientAmount(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            float __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, float*, int>**)ThisPtr)[6](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }
        internal static unsafe void set_AmbientAmount(IObjectReference _obj, float value)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, float, int>**)ThisPtr)[7](ThisPtr, value));
            global::System.GC.KeepAlive(_obj);
        }

        internal static unsafe float get_DiffuseAmount(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            float __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, float*, int>**)ThisPtr)[8](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }
        internal static unsafe void set_DiffuseAmount(IObjectReference _obj, float value)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, float, int>**)ThisPtr)[9](ThisPtr, value));
            global::System.GC.KeepAlive(_obj);
        }

        internal static unsafe global::Windows.Graphics.Effects.IGraphicsEffectSource get_NormalMapSource(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[10](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return MarshalInterface<global::Windows.Graphics.Effects.IGraphicsEffectSource>.FromAbi(__retval);
            }
            finally
            {
                MarshalInterface<global::Windows.Graphics.Effects.IGraphicsEffectSource>.DisposeAbi(__retval);
            }
        }
        internal static unsafe void set_NormalMapSource(IObjectReference _obj, global::Windows.Graphics.Effects.IGraphicsEffectSource value)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __value = default;
            try
            {
                __value = MarshalInterface<global::Windows.Graphics.Effects.IGraphicsEffectSource>.CreateMarshaler2(value, global::ABI.Windows.Graphics.Effects.IGraphicsEffectSourceMethods.IID);
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, int>**)ThisPtr)[11](ThisPtr, MarshalInspectable<object>.GetAbi(__value)));
                global::System.GC.KeepAlive(_obj);
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__value);
            }
        }

        internal static unsafe float get_SpecularAmount(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            float __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, float*, int>**)ThisPtr)[12](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }
        internal static unsafe void set_SpecularAmount(IObjectReference _obj, float value)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, float, int>**)ThisPtr)[13](ThisPtr, value));
            global::System.GC.KeepAlive(_obj);
        }

        internal static unsafe float get_SpecularShine(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            float __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, float*, int>**)ThisPtr)[14](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }
        internal static unsafe void set_SpecularShine(IObjectReference _obj, float value)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, float, int>**)ThisPtr)[15](ThisPtr, value));
            global::System.GC.KeepAlive(_obj);
        }



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0x16, 0x73, 0x1E, 0xEB, 0x4C, 0x11, 0x50, 0x59, 0x84, 0x80, 0x20, 0xA2, 0x9A, 0x3B, 0xB1, 0xEE };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("EB1E7316-114C-5950-8480-20A29A3BB1EE")]
    internal interface ISceneLightingEffect : global::Microsoft.UI.Composition.Effects.ISceneLightingEffect
    {
    }
    internal static class ISceneLightingEffect2Methods
    {

        internal static unsafe global::Microsoft.UI.Composition.Effects.SceneLightingEffectReflectanceModel get_ReflectanceModel(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::Microsoft.UI.Composition.Effects.SceneLightingEffectReflectanceModel __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::Microsoft.UI.Composition.Effects.SceneLightingEffectReflectanceModel*, int>**)ThisPtr)[6](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }
        internal static unsafe void set_ReflectanceModel(IObjectReference _obj, global::Microsoft.UI.Composition.Effects.SceneLightingEffectReflectanceModel value)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::Microsoft.UI.Composition.Effects.SceneLightingEffectReflectanceModel, int>**)ThisPtr)[7](ThisPtr, value));
            global::System.GC.KeepAlive(_obj);
        }



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0xB2, 0x96, 0x64, 0x6B, 0x8D, 0x46, 0xD1, 0x50, 0xBB, 0xE9, 0x59, 0x3B, 0x82, 0x63, 0xAD, 0x80 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("6B6496B2-468D-50D1-BBE9-593B8263AD80")]
    internal interface ISceneLightingEffect2 : global::Microsoft.UI.Composition.Effects.ISceneLightingEffect2
    {
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    public struct SceneLightingEffect
    {

        public static IObjectReference CreateMarshaler(global::Microsoft.UI.Composition.Effects.SceneLightingEffect obj) => obj is null ? null : MarshalInspectable<global::Microsoft.UI.Composition.Effects.SceneLightingEffect>.CreateMarshaler<IUnknownVftbl>(obj, global::ABI.Microsoft.UI.Composition.Effects.ISceneLightingEffectMethods.IID);
        public static ObjectReferenceValue CreateMarshaler2(global::Microsoft.UI.Composition.Effects.SceneLightingEffect obj) => MarshalInspectable<object>.CreateMarshaler2(obj, global::ABI.Microsoft.UI.Composition.Effects.ISceneLightingEffectMethods.IID);
        public static IntPtr GetAbi(IObjectReference value) => value is null ? IntPtr.Zero : MarshalInterfaceHelper<object>.GetAbi(value);
        public static global::Microsoft.UI.Composition.Effects.SceneLightingEffect FromAbi(IntPtr thisPtr) => global::Microsoft.UI.Composition.Effects.SceneLightingEffect.FromAbi(thisPtr);
        public static IntPtr FromManaged(global::Microsoft.UI.Composition.Effects.SceneLightingEffect obj) => obj is null ? IntPtr.Zero : CreateMarshaler2(obj).Detach();
        public static unsafe MarshalInterfaceHelper<global::Microsoft.UI.Composition.Effects.SceneLightingEffect>.MarshalerArray CreateMarshalerArray(global::Microsoft.UI.Composition.Effects.SceneLightingEffect[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.Effects.SceneLightingEffect>.CreateMarshalerArray2(array, (o) => CreateMarshaler2(o));
        public static (int length, IntPtr data) GetAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.Effects.SceneLightingEffect>.GetAbiArray(box);
        public static unsafe global::Microsoft.UI.Composition.Effects.SceneLightingEffect[] FromAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.Effects.SceneLightingEffect>.FromAbiArray(box, FromAbi);
        public static void CopyAbiArray(global::Microsoft.UI.Composition.Effects.SceneLightingEffect[] array, object box) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.Effects.SceneLightingEffect>.CopyAbiArray(array, box, FromAbi);
        public static (int length, IntPtr data) FromManagedArray(global::Microsoft.UI.Composition.Effects.SceneLightingEffect[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.Effects.SceneLightingEffect>.FromManagedArray(array, (o) => FromManaged(o));
        public static void DisposeMarshaler(IObjectReference value) => MarshalInspectable<object>.DisposeMarshaler(value);
        public static void DisposeMarshalerArray(MarshalInterfaceHelper<global::Microsoft.UI.Composition.Effects.SceneLightingEffect>.MarshalerArray array) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.Effects.SceneLightingEffect>.DisposeMarshalerArray(array);
        public static void DisposeAbi(IntPtr abi) => MarshalInspectable<object>.DisposeAbi(abi);
        public static unsafe void DisposeAbiArray(object box) => MarshalInspectable<object>.DisposeAbiArray(box);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    internal sealed class SceneLightingEffectRcwFactoryAttribute : global::WinRT.WinRTImplementationTypeRcwFactoryAttribute
    {
        public override object CreateInstance(global::WinRT.IInspectable inspectable)
            => new global::Microsoft.UI.Composition.Effects.SceneLightingEffect(inspectable.ObjRef);
    }
}
#pragma warning restore CA1416
