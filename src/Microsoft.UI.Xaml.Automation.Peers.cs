//------------------------------------------------------------------------------
// <auto-generated>
//     This file was generated by cswinrt.exe version 2.2.0.241111.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Diagnostics;
using System.Diagnostics.CodeAnalysis;
using System.Linq.Expressions;
using System.Reflection;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;
using WinRT;
using WinRT.Interop;


#pragma warning disable 0169 // warning CS0169: The field '...' is never used
#pragma warning disable 0649 // warning CS0169: Field '...' is never assigned to
#pragma warning disable CA2207, CA1063, CA1033, CA1001, CA2213

namespace Microsoft.UI.Xaml.Automation.Peers
{
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")][global::WinRT.WinRTExposedType(typeof(global::WinRT.EnumTypeDetails<AccessibilityView>))][global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    public enum AccessibilityView : int
    {
        Raw = unchecked((int)0),
        Control = unchecked((int)0x1),
        Content = unchecked((int)0x2),
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")]
    [global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Automation.Peers.AnimatedVisualPlayerAutomationPeer))]
    [global::ABI.Microsoft.UI.Xaml.Automation.Peers.AnimatedVisualPlayerAutomationPeerRcwFactory]
    [global::WinRT.ProjectedRuntimeClass(typeof(IAnimatedVisualPlayerAutomationPeer))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.XamlContract), 65536u)]
    public class AnimatedVisualPlayerAutomationPeer : FrameworkElementAutomationPeer, global::System.Runtime.InteropServices.ICustomQueryInterface, IWinRTObject, IEquatable<AnimatedVisualPlayerAutomationPeer>
    {
        private IntPtr ThisPtr => _inner == null ? (((IWinRTObject)this).NativeObject).ThisPtr : _inner.ThisPtr;

        private readonly IObjectReference _inner = null;




        private volatile IObjectReference ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IAnimatedVisualPlayerAutomationPeer;
        private IObjectReference Make___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IAnimatedVisualPlayerAutomationPeer()
        {
            global::System.Threading.Interlocked.CompareExchange(ref ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IAnimatedVisualPlayerAutomationPeer, ((IWinRTObject)this).NativeObject.As<IUnknownVftbl>(global::ABI.Microsoft.UI.Xaml.Automation.Peers.IAnimatedVisualPlayerAutomationPeerMethods.IID), null);
            return ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IAnimatedVisualPlayerAutomationPeer;
        }
        private IObjectReference _objRef_global__Microsoft_UI_Xaml_Automation_Peers_IAnimatedVisualPlayerAutomationPeer => ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IAnimatedVisualPlayerAutomationPeer ?? Make___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IAnimatedVisualPlayerAutomationPeer();



        private static class _IAnimatedVisualPlayerAutomationPeerFactoryMethods
        {
            public static unsafe IntPtr CreateInstance(IObjectReference _obj, global::Microsoft.UI.Xaml.Controls.AnimatedVisualPlayer owner, object baseInterface, out IntPtr innerInterface)
            {
                var ThisPtr = _obj.ThisPtr;

                ObjectReferenceValue __owner = default;
                ObjectReferenceValue __baseInterface = default;
                IntPtr __innerInterface = default;
                IntPtr __retval = default;
                try
                {
                    __owner = global::ABI.Microsoft.UI.Xaml.Controls.AnimatedVisualPlayer.CreateMarshaler2(owner);
                    __baseInterface = MarshalInspectable<object>.CreateMarshaler2(baseInterface);
                    global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, IntPtr, IntPtr*, IntPtr*, int>**)ThisPtr)[6](ThisPtr, MarshalInspectable<object>.GetAbi(__owner), MarshalInspectable<object>.GetAbi(__baseInterface), &__innerInterface, &__retval));
                    global::System.GC.KeepAlive(_obj);
                    innerInterface = __innerInterface;
                    return __retval;
                }
                finally
                {
                    MarshalInspectable<object>.DisposeMarshaler(__owner);
                    MarshalInspectable<object>.DisposeMarshaler(__baseInterface);
                }
            }
        }

        private static volatile IObjectReference ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IAnimatedVisualPlayerAutomationPeerFactory;
        private static IObjectReference _objRef_global__Microsoft_UI_Xaml_Automation_Peers_IAnimatedVisualPlayerAutomationPeerFactory
        {
            get
            { 
                var factory = ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IAnimatedVisualPlayerAutomationPeerFactory;
                if (factory != null && factory.IsInCurrentContext)
                {
                    return factory;
                }
                else
                {
                    return ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IAnimatedVisualPlayerAutomationPeerFactory = ActivationFactory.Get("Microsoft.UI.Xaml.Automation.Peers.AnimatedVisualPlayerAutomationPeer", global::ABI.Microsoft.UI.Xaml.Automation.Peers.IAnimatedVisualPlayerAutomationPeerFactoryMethods.IID);
                }
            }
        }

        public AnimatedVisualPlayerAutomationPeer(global::Microsoft.UI.Xaml.Controls.AnimatedVisualPlayer owner):base(global::WinRT.DerivedComposed.Instance)
        {
            bool isAggregation = this.GetType() != typeof(AnimatedVisualPlayerAutomationPeer);
            object baseInspectable = isAggregation ? this : null;
            IntPtr composed = _IAnimatedVisualPlayerAutomationPeerFactoryMethods.CreateInstance(_objRef_global__Microsoft_UI_Xaml_Automation_Peers_IAnimatedVisualPlayerAutomationPeerFactory, owner, baseInspectable, out IntPtr inner);
            try
            {
                ComWrappersHelper.Init(isAggregation, this, composed, inner, global::ABI.Microsoft.UI.Xaml.Automation.Peers.IAnimatedVisualPlayerAutomationPeerMethods.IID, out _inner);

            }
            finally
            {
                Marshal.Release(inner);   
            }
        }

        public static new AnimatedVisualPlayerAutomationPeer FromAbi(IntPtr thisPtr)
        {
            if (thisPtr == IntPtr.Zero) return null;
            return MarshalInspectable<AnimatedVisualPlayerAutomationPeer>.FromAbi(thisPtr);
        }

        protected internal AnimatedVisualPlayerAutomationPeer(IObjectReference objRef)
            : base(global::WinRT.DerivedComposed.Instance)

        {
            _inner = objRef.As(global::ABI.Microsoft.UI.Xaml.Automation.Peers.IAnimatedVisualPlayerAutomationPeerMethods.IID);

        }


        public static bool operator ==(AnimatedVisualPlayerAutomationPeer x, AnimatedVisualPlayerAutomationPeer y) => (x?.ThisPtr ?? IntPtr.Zero) == (y?.ThisPtr ?? IntPtr.Zero);
        public static bool operator !=(AnimatedVisualPlayerAutomationPeer x, AnimatedVisualPlayerAutomationPeer y) => !(x == y);
        public bool Equals(AnimatedVisualPlayerAutomationPeer other) => this == other;
        public override bool Equals(object obj) => obj is AnimatedVisualPlayerAutomationPeer that && this == that;
        public override int GetHashCode() => ThisPtr.GetHashCode();


        protected AnimatedVisualPlayerAutomationPeer(global::WinRT.DerivedComposed _):base(_)
        {

        }
        bool IWinRTObject.HasUnwrappableNativeObject => this.GetType() == typeof(AnimatedVisualPlayerAutomationPeer);
        IObjectReference IWinRTObject.NativeObject => _inner;

        private struct InterfaceTag<I>{};


        protected override bool IsOverridableInterface(Guid iid) => base.IsOverridableInterface(iid);

        global::System.Runtime.InteropServices.CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(ref Guid iid, out IntPtr ppv)
        {
            ppv = IntPtr.Zero;
            if (IsOverridableInterface(iid) || global::WinRT.Interop.IID.IID_IInspectable == iid)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
            }

            if (((IWinRTObject)this).NativeObject.TryAs(iid, out ppv) >= 0)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.Handled;
            }

            return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
        }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")]
    [global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Automation.Peers.AppBarAutomationPeer))]
    [global::ABI.Microsoft.UI.Xaml.Automation.Peers.AppBarAutomationPeerRcwFactory]
    [global::WinRT.ProjectedRuntimeClass(typeof(IAppBarAutomationPeer))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    public class AppBarAutomationPeer : FrameworkElementAutomationPeer, global::Microsoft.UI.Xaml.Automation.Provider.IExpandCollapseProvider, global::Microsoft.UI.Xaml.Automation.Provider.IToggleProvider, global::Microsoft.UI.Xaml.Automation.Provider.IWindowProvider, global::System.Runtime.InteropServices.ICustomQueryInterface, IWinRTObject, IEquatable<AppBarAutomationPeer>
    {
        private IntPtr ThisPtr => _inner == null ? (((IWinRTObject)this).NativeObject).ThisPtr : _inner.ThisPtr;

        private readonly IObjectReference _inner = null;




        private volatile IObjectReference ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IAppBarAutomationPeer;
        private IObjectReference Make___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IAppBarAutomationPeer()
        {
            global::System.Threading.Interlocked.CompareExchange(ref ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IAppBarAutomationPeer, ((IWinRTObject)this).NativeObject.As<IUnknownVftbl>(global::ABI.Microsoft.UI.Xaml.Automation.Peers.IAppBarAutomationPeerMethods.IID), null);
            return ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IAppBarAutomationPeer;
        }
        private IObjectReference _objRef_global__Microsoft_UI_Xaml_Automation_Peers_IAppBarAutomationPeer => ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IAppBarAutomationPeer ?? Make___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IAppBarAutomationPeer();

        private volatile IObjectReference ___objRef_global__Microsoft_UI_Xaml_Automation_Provider_IExpandCollapseProvider;
        private IObjectReference Make___objRef_global__Microsoft_UI_Xaml_Automation_Provider_IExpandCollapseProvider()
        {
            global::System.Threading.Interlocked.CompareExchange(ref ___objRef_global__Microsoft_UI_Xaml_Automation_Provider_IExpandCollapseProvider, ((IWinRTObject)this).NativeObject.As<IUnknownVftbl>(global::ABI.Microsoft.UI.Xaml.Automation.Provider.IExpandCollapseProviderMethods.IID), null);
            return ___objRef_global__Microsoft_UI_Xaml_Automation_Provider_IExpandCollapseProvider;
        }
        private IObjectReference _objRef_global__Microsoft_UI_Xaml_Automation_Provider_IExpandCollapseProvider => ___objRef_global__Microsoft_UI_Xaml_Automation_Provider_IExpandCollapseProvider ?? Make___objRef_global__Microsoft_UI_Xaml_Automation_Provider_IExpandCollapseProvider();

        private volatile IObjectReference ___objRef_global__Microsoft_UI_Xaml_Automation_Provider_IToggleProvider;
        private IObjectReference Make___objRef_global__Microsoft_UI_Xaml_Automation_Provider_IToggleProvider()
        {
            global::System.Threading.Interlocked.CompareExchange(ref ___objRef_global__Microsoft_UI_Xaml_Automation_Provider_IToggleProvider, ((IWinRTObject)this).NativeObject.As<IUnknownVftbl>(global::ABI.Microsoft.UI.Xaml.Automation.Provider.IToggleProviderMethods.IID), null);
            return ___objRef_global__Microsoft_UI_Xaml_Automation_Provider_IToggleProvider;
        }
        private IObjectReference _objRef_global__Microsoft_UI_Xaml_Automation_Provider_IToggleProvider => ___objRef_global__Microsoft_UI_Xaml_Automation_Provider_IToggleProvider ?? Make___objRef_global__Microsoft_UI_Xaml_Automation_Provider_IToggleProvider();

        private volatile IObjectReference ___objRef_global__Microsoft_UI_Xaml_Automation_Provider_IWindowProvider;
        private IObjectReference Make___objRef_global__Microsoft_UI_Xaml_Automation_Provider_IWindowProvider()
        {
            global::System.Threading.Interlocked.CompareExchange(ref ___objRef_global__Microsoft_UI_Xaml_Automation_Provider_IWindowProvider, ((IWinRTObject)this).NativeObject.As<IUnknownVftbl>(global::ABI.Microsoft.UI.Xaml.Automation.Provider.IWindowProviderMethods.IID), null);
            return ___objRef_global__Microsoft_UI_Xaml_Automation_Provider_IWindowProvider;
        }
        private IObjectReference _objRef_global__Microsoft_UI_Xaml_Automation_Provider_IWindowProvider => ___objRef_global__Microsoft_UI_Xaml_Automation_Provider_IWindowProvider ?? Make___objRef_global__Microsoft_UI_Xaml_Automation_Provider_IWindowProvider();



        private static class _IAppBarAutomationPeerFactoryMethods
        {
            public static unsafe IntPtr CreateInstanceWithOwner(IObjectReference _obj, global::Microsoft.UI.Xaml.Controls.AppBar owner, object baseInterface, out IntPtr innerInterface)
            {
                var ThisPtr = _obj.ThisPtr;

                ObjectReferenceValue __owner = default;
                ObjectReferenceValue __baseInterface = default;
                IntPtr __innerInterface = default;
                IntPtr __retval = default;
                try
                {
                    __owner = global::ABI.Microsoft.UI.Xaml.Controls.AppBar.CreateMarshaler2(owner);
                    __baseInterface = MarshalInspectable<object>.CreateMarshaler2(baseInterface);
                    global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, IntPtr, IntPtr*, IntPtr*, int>**)ThisPtr)[6](ThisPtr, MarshalInspectable<object>.GetAbi(__owner), MarshalInspectable<object>.GetAbi(__baseInterface), &__innerInterface, &__retval));
                    global::System.GC.KeepAlive(_obj);
                    innerInterface = __innerInterface;
                    return __retval;
                }
                finally
                {
                    MarshalInspectable<object>.DisposeMarshaler(__owner);
                    MarshalInspectable<object>.DisposeMarshaler(__baseInterface);
                }
            }
        }

        private static volatile IObjectReference ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IAppBarAutomationPeerFactory;
        private static IObjectReference _objRef_global__Microsoft_UI_Xaml_Automation_Peers_IAppBarAutomationPeerFactory
        {
            get
            { 
                var factory = ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IAppBarAutomationPeerFactory;
                if (factory != null && factory.IsInCurrentContext)
                {
                    return factory;
                }
                else
                {
                    return ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IAppBarAutomationPeerFactory = ActivationFactory.Get("Microsoft.UI.Xaml.Automation.Peers.AppBarAutomationPeer", global::ABI.Microsoft.UI.Xaml.Automation.Peers.IAppBarAutomationPeerFactoryMethods.IID);
                }
            }
        }

        public AppBarAutomationPeer(global::Microsoft.UI.Xaml.Controls.AppBar owner):base(global::WinRT.DerivedComposed.Instance)
        {
            bool isAggregation = this.GetType() != typeof(AppBarAutomationPeer);
            object baseInspectable = isAggregation ? this : null;
            IntPtr composed = _IAppBarAutomationPeerFactoryMethods.CreateInstanceWithOwner(_objRef_global__Microsoft_UI_Xaml_Automation_Peers_IAppBarAutomationPeerFactory, owner, baseInspectable, out IntPtr inner);
            try
            {
                ComWrappersHelper.Init(isAggregation, this, composed, inner, global::ABI.Microsoft.UI.Xaml.Automation.Peers.IAppBarAutomationPeerMethods.IID, out _inner);

            }
            finally
            {
                Marshal.Release(inner);   
            }
        }

        public static new AppBarAutomationPeer FromAbi(IntPtr thisPtr)
        {
            if (thisPtr == IntPtr.Zero) return null;
            return MarshalInspectable<AppBarAutomationPeer>.FromAbi(thisPtr);
        }

        protected internal AppBarAutomationPeer(IObjectReference objRef)
            : base(global::WinRT.DerivedComposed.Instance)

        {
            _inner = objRef.As(global::ABI.Microsoft.UI.Xaml.Automation.Peers.IAppBarAutomationPeerMethods.IID);

        }


        public static bool operator ==(AppBarAutomationPeer x, AppBarAutomationPeer y) => (x?.ThisPtr ?? IntPtr.Zero) == (y?.ThisPtr ?? IntPtr.Zero);
        public static bool operator !=(AppBarAutomationPeer x, AppBarAutomationPeer y) => !(x == y);
        public bool Equals(AppBarAutomationPeer other) => this == other;
        public override bool Equals(object obj) => obj is AppBarAutomationPeer that && this == that;
        public override int GetHashCode() => ThisPtr.GetHashCode();


        protected AppBarAutomationPeer(global::WinRT.DerivedComposed _):base(_)
        {

        }
        bool IWinRTObject.HasUnwrappableNativeObject => this.GetType() == typeof(AppBarAutomationPeer);
        IObjectReference IWinRTObject.NativeObject => _inner;

        private struct InterfaceTag<I>{};


        public void Collapse() => global::ABI.Microsoft.UI.Xaml.Automation.Provider.IExpandCollapseProviderMethods.Collapse(_objRef_global__Microsoft_UI_Xaml_Automation_Provider_IExpandCollapseProvider);

        public void Expand() => global::ABI.Microsoft.UI.Xaml.Automation.Provider.IExpandCollapseProviderMethods.Expand(_objRef_global__Microsoft_UI_Xaml_Automation_Provider_IExpandCollapseProvider);

        public void Toggle() => global::ABI.Microsoft.UI.Xaml.Automation.Provider.IToggleProviderMethods.Toggle(_objRef_global__Microsoft_UI_Xaml_Automation_Provider_IToggleProvider);

        public void Close() => global::ABI.Microsoft.UI.Xaml.Automation.Provider.IWindowProviderMethods.Close(_objRef_global__Microsoft_UI_Xaml_Automation_Provider_IWindowProvider);

        public void SetVisualState(global::Microsoft.UI.Xaml.Automation.WindowVisualState state) => global::ABI.Microsoft.UI.Xaml.Automation.Provider.IWindowProviderMethods.SetVisualState(_objRef_global__Microsoft_UI_Xaml_Automation_Provider_IWindowProvider, state);

        public bool WaitForInputIdle(int milliseconds) => global::ABI.Microsoft.UI.Xaml.Automation.Provider.IWindowProviderMethods.WaitForInputIdle(_objRef_global__Microsoft_UI_Xaml_Automation_Provider_IWindowProvider, milliseconds);

        public global::Microsoft.UI.Xaml.Automation.ExpandCollapseState ExpandCollapseState => global::ABI.Microsoft.UI.Xaml.Automation.Provider.IExpandCollapseProviderMethods.get_ExpandCollapseState(_objRef_global__Microsoft_UI_Xaml_Automation_Provider_IExpandCollapseProvider);

        public global::Microsoft.UI.Xaml.Automation.WindowInteractionState InteractionState => global::ABI.Microsoft.UI.Xaml.Automation.Provider.IWindowProviderMethods.get_InteractionState(_objRef_global__Microsoft_UI_Xaml_Automation_Provider_IWindowProvider);

        public bool IsModal => global::ABI.Microsoft.UI.Xaml.Automation.Provider.IWindowProviderMethods.get_IsModal(_objRef_global__Microsoft_UI_Xaml_Automation_Provider_IWindowProvider);

        public bool IsTopmost => global::ABI.Microsoft.UI.Xaml.Automation.Provider.IWindowProviderMethods.get_IsTopmost(_objRef_global__Microsoft_UI_Xaml_Automation_Provider_IWindowProvider);

        public bool Maximizable => global::ABI.Microsoft.UI.Xaml.Automation.Provider.IWindowProviderMethods.get_Maximizable(_objRef_global__Microsoft_UI_Xaml_Automation_Provider_IWindowProvider);

        public bool Minimizable => global::ABI.Microsoft.UI.Xaml.Automation.Provider.IWindowProviderMethods.get_Minimizable(_objRef_global__Microsoft_UI_Xaml_Automation_Provider_IWindowProvider);

        public global::Microsoft.UI.Xaml.Automation.ToggleState ToggleState => global::ABI.Microsoft.UI.Xaml.Automation.Provider.IToggleProviderMethods.get_ToggleState(_objRef_global__Microsoft_UI_Xaml_Automation_Provider_IToggleProvider);

        public global::Microsoft.UI.Xaml.Automation.WindowVisualState VisualState => global::ABI.Microsoft.UI.Xaml.Automation.Provider.IWindowProviderMethods.get_VisualState(_objRef_global__Microsoft_UI_Xaml_Automation_Provider_IWindowProvider);

        protected override bool IsOverridableInterface(Guid iid) => base.IsOverridableInterface(iid);

        global::System.Runtime.InteropServices.CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(ref Guid iid, out IntPtr ppv)
        {
            ppv = IntPtr.Zero;
            if (IsOverridableInterface(iid) || global::WinRT.Interop.IID.IID_IInspectable == iid)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
            }

            if (((IWinRTObject)this).NativeObject.TryAs(iid, out ppv) >= 0)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.Handled;
            }

            return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
        }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")]
    [global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Automation.Peers.AppBarButtonAutomationPeer))]
    [global::ABI.Microsoft.UI.Xaml.Automation.Peers.AppBarButtonAutomationPeerRcwFactory]
    [global::WinRT.ProjectedRuntimeClass(typeof(IAppBarButtonAutomationPeer))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    public class AppBarButtonAutomationPeer : ButtonAutomationPeer, global::Microsoft.UI.Xaml.Automation.Provider.IExpandCollapseProvider, global::System.Runtime.InteropServices.ICustomQueryInterface, IWinRTObject, IEquatable<AppBarButtonAutomationPeer>
    {
        private IntPtr ThisPtr => _inner == null ? (((IWinRTObject)this).NativeObject).ThisPtr : _inner.ThisPtr;

        private readonly IObjectReference _inner = null;




        private volatile IObjectReference ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IAppBarButtonAutomationPeer;
        private IObjectReference Make___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IAppBarButtonAutomationPeer()
        {
            global::System.Threading.Interlocked.CompareExchange(ref ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IAppBarButtonAutomationPeer, ((IWinRTObject)this).NativeObject.As<IUnknownVftbl>(global::ABI.Microsoft.UI.Xaml.Automation.Peers.IAppBarButtonAutomationPeerMethods.IID), null);
            return ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IAppBarButtonAutomationPeer;
        }
        private IObjectReference _objRef_global__Microsoft_UI_Xaml_Automation_Peers_IAppBarButtonAutomationPeer => ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IAppBarButtonAutomationPeer ?? Make___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IAppBarButtonAutomationPeer();

        private volatile IObjectReference ___objRef_global__Microsoft_UI_Xaml_Automation_Provider_IExpandCollapseProvider;
        private IObjectReference Make___objRef_global__Microsoft_UI_Xaml_Automation_Provider_IExpandCollapseProvider()
        {
            global::System.Threading.Interlocked.CompareExchange(ref ___objRef_global__Microsoft_UI_Xaml_Automation_Provider_IExpandCollapseProvider, ((IWinRTObject)this).NativeObject.As<IUnknownVftbl>(global::ABI.Microsoft.UI.Xaml.Automation.Provider.IExpandCollapseProviderMethods.IID), null);
            return ___objRef_global__Microsoft_UI_Xaml_Automation_Provider_IExpandCollapseProvider;
        }
        private IObjectReference _objRef_global__Microsoft_UI_Xaml_Automation_Provider_IExpandCollapseProvider => ___objRef_global__Microsoft_UI_Xaml_Automation_Provider_IExpandCollapseProvider ?? Make___objRef_global__Microsoft_UI_Xaml_Automation_Provider_IExpandCollapseProvider();



        private static class _IAppBarButtonAutomationPeerFactoryMethods
        {
            public static unsafe IntPtr CreateInstanceWithOwner(IObjectReference _obj, global::Microsoft.UI.Xaml.Controls.AppBarButton owner, object baseInterface, out IntPtr innerInterface)
            {
                var ThisPtr = _obj.ThisPtr;

                ObjectReferenceValue __owner = default;
                ObjectReferenceValue __baseInterface = default;
                IntPtr __innerInterface = default;
                IntPtr __retval = default;
                try
                {
                    __owner = global::ABI.Microsoft.UI.Xaml.Controls.AppBarButton.CreateMarshaler2(owner);
                    __baseInterface = MarshalInspectable<object>.CreateMarshaler2(baseInterface);
                    global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, IntPtr, IntPtr*, IntPtr*, int>**)ThisPtr)[6](ThisPtr, MarshalInspectable<object>.GetAbi(__owner), MarshalInspectable<object>.GetAbi(__baseInterface), &__innerInterface, &__retval));
                    global::System.GC.KeepAlive(_obj);
                    innerInterface = __innerInterface;
                    return __retval;
                }
                finally
                {
                    MarshalInspectable<object>.DisposeMarshaler(__owner);
                    MarshalInspectable<object>.DisposeMarshaler(__baseInterface);
                }
            }
        }

        private static volatile IObjectReference ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IAppBarButtonAutomationPeerFactory;
        private static IObjectReference _objRef_global__Microsoft_UI_Xaml_Automation_Peers_IAppBarButtonAutomationPeerFactory
        {
            get
            { 
                var factory = ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IAppBarButtonAutomationPeerFactory;
                if (factory != null && factory.IsInCurrentContext)
                {
                    return factory;
                }
                else
                {
                    return ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IAppBarButtonAutomationPeerFactory = ActivationFactory.Get("Microsoft.UI.Xaml.Automation.Peers.AppBarButtonAutomationPeer", global::ABI.Microsoft.UI.Xaml.Automation.Peers.IAppBarButtonAutomationPeerFactoryMethods.IID);
                }
            }
        }

        public AppBarButtonAutomationPeer(global::Microsoft.UI.Xaml.Controls.AppBarButton owner):base(global::WinRT.DerivedComposed.Instance)
        {
            bool isAggregation = this.GetType() != typeof(AppBarButtonAutomationPeer);
            object baseInspectable = isAggregation ? this : null;
            IntPtr composed = _IAppBarButtonAutomationPeerFactoryMethods.CreateInstanceWithOwner(_objRef_global__Microsoft_UI_Xaml_Automation_Peers_IAppBarButtonAutomationPeerFactory, owner, baseInspectable, out IntPtr inner);
            try
            {
                ComWrappersHelper.Init(isAggregation, this, composed, inner, global::ABI.Microsoft.UI.Xaml.Automation.Peers.IAppBarButtonAutomationPeerMethods.IID, out _inner);

            }
            finally
            {
                Marshal.Release(inner);   
            }
        }

        public static new AppBarButtonAutomationPeer FromAbi(IntPtr thisPtr)
        {
            if (thisPtr == IntPtr.Zero) return null;
            return MarshalInspectable<AppBarButtonAutomationPeer>.FromAbi(thisPtr);
        }

        protected internal AppBarButtonAutomationPeer(IObjectReference objRef)
            : base(global::WinRT.DerivedComposed.Instance)

        {
            _inner = objRef.As(global::ABI.Microsoft.UI.Xaml.Automation.Peers.IAppBarButtonAutomationPeerMethods.IID);

        }


        public static bool operator ==(AppBarButtonAutomationPeer x, AppBarButtonAutomationPeer y) => (x?.ThisPtr ?? IntPtr.Zero) == (y?.ThisPtr ?? IntPtr.Zero);
        public static bool operator !=(AppBarButtonAutomationPeer x, AppBarButtonAutomationPeer y) => !(x == y);
        public bool Equals(AppBarButtonAutomationPeer other) => this == other;
        public override bool Equals(object obj) => obj is AppBarButtonAutomationPeer that && this == that;
        public override int GetHashCode() => ThisPtr.GetHashCode();


        protected AppBarButtonAutomationPeer(global::WinRT.DerivedComposed _):base(_)
        {

        }
        bool IWinRTObject.HasUnwrappableNativeObject => this.GetType() == typeof(AppBarButtonAutomationPeer);
        IObjectReference IWinRTObject.NativeObject => _inner;

        private struct InterfaceTag<I>{};


        public void Collapse() => global::ABI.Microsoft.UI.Xaml.Automation.Provider.IExpandCollapseProviderMethods.Collapse(_objRef_global__Microsoft_UI_Xaml_Automation_Provider_IExpandCollapseProvider);

        public void Expand() => global::ABI.Microsoft.UI.Xaml.Automation.Provider.IExpandCollapseProviderMethods.Expand(_objRef_global__Microsoft_UI_Xaml_Automation_Provider_IExpandCollapseProvider);

        public global::Microsoft.UI.Xaml.Automation.ExpandCollapseState ExpandCollapseState => global::ABI.Microsoft.UI.Xaml.Automation.Provider.IExpandCollapseProviderMethods.get_ExpandCollapseState(_objRef_global__Microsoft_UI_Xaml_Automation_Provider_IExpandCollapseProvider);

        protected override bool IsOverridableInterface(Guid iid) => base.IsOverridableInterface(iid);

        global::System.Runtime.InteropServices.CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(ref Guid iid, out IntPtr ppv)
        {
            ppv = IntPtr.Zero;
            if (IsOverridableInterface(iid) || global::WinRT.Interop.IID.IID_IInspectable == iid)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
            }

            if (((IWinRTObject)this).NativeObject.TryAs(iid, out ppv) >= 0)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.Handled;
            }

            return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
        }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")]
    [global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Automation.Peers.AppBarToggleButtonAutomationPeer))]
    [global::ABI.Microsoft.UI.Xaml.Automation.Peers.AppBarToggleButtonAutomationPeerRcwFactory]
    [global::WinRT.ProjectedRuntimeClass(typeof(IAppBarToggleButtonAutomationPeer))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    public class AppBarToggleButtonAutomationPeer : ToggleButtonAutomationPeer, global::System.Runtime.InteropServices.ICustomQueryInterface, IWinRTObject, IEquatable<AppBarToggleButtonAutomationPeer>
    {
        private IntPtr ThisPtr => _inner == null ? (((IWinRTObject)this).NativeObject).ThisPtr : _inner.ThisPtr;

        private readonly IObjectReference _inner = null;




        private volatile IObjectReference ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IAppBarToggleButtonAutomationPeer;
        private IObjectReference Make___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IAppBarToggleButtonAutomationPeer()
        {
            global::System.Threading.Interlocked.CompareExchange(ref ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IAppBarToggleButtonAutomationPeer, ((IWinRTObject)this).NativeObject.As<IUnknownVftbl>(global::ABI.Microsoft.UI.Xaml.Automation.Peers.IAppBarToggleButtonAutomationPeerMethods.IID), null);
            return ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IAppBarToggleButtonAutomationPeer;
        }
        private IObjectReference _objRef_global__Microsoft_UI_Xaml_Automation_Peers_IAppBarToggleButtonAutomationPeer => ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IAppBarToggleButtonAutomationPeer ?? Make___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IAppBarToggleButtonAutomationPeer();



        private static class _IAppBarToggleButtonAutomationPeerFactoryMethods
        {
            public static unsafe IntPtr CreateInstanceWithOwner(IObjectReference _obj, global::Microsoft.UI.Xaml.Controls.AppBarToggleButton owner, object baseInterface, out IntPtr innerInterface)
            {
                var ThisPtr = _obj.ThisPtr;

                ObjectReferenceValue __owner = default;
                ObjectReferenceValue __baseInterface = default;
                IntPtr __innerInterface = default;
                IntPtr __retval = default;
                try
                {
                    __owner = global::ABI.Microsoft.UI.Xaml.Controls.AppBarToggleButton.CreateMarshaler2(owner);
                    __baseInterface = MarshalInspectable<object>.CreateMarshaler2(baseInterface);
                    global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, IntPtr, IntPtr*, IntPtr*, int>**)ThisPtr)[6](ThisPtr, MarshalInspectable<object>.GetAbi(__owner), MarshalInspectable<object>.GetAbi(__baseInterface), &__innerInterface, &__retval));
                    global::System.GC.KeepAlive(_obj);
                    innerInterface = __innerInterface;
                    return __retval;
                }
                finally
                {
                    MarshalInspectable<object>.DisposeMarshaler(__owner);
                    MarshalInspectable<object>.DisposeMarshaler(__baseInterface);
                }
            }
        }

        private static volatile IObjectReference ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IAppBarToggleButtonAutomationPeerFactory;
        private static IObjectReference _objRef_global__Microsoft_UI_Xaml_Automation_Peers_IAppBarToggleButtonAutomationPeerFactory
        {
            get
            { 
                var factory = ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IAppBarToggleButtonAutomationPeerFactory;
                if (factory != null && factory.IsInCurrentContext)
                {
                    return factory;
                }
                else
                {
                    return ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IAppBarToggleButtonAutomationPeerFactory = ActivationFactory.Get("Microsoft.UI.Xaml.Automation.Peers.AppBarToggleButtonAutomationPeer", global::ABI.Microsoft.UI.Xaml.Automation.Peers.IAppBarToggleButtonAutomationPeerFactoryMethods.IID);
                }
            }
        }

        public AppBarToggleButtonAutomationPeer(global::Microsoft.UI.Xaml.Controls.AppBarToggleButton owner):base(global::WinRT.DerivedComposed.Instance)
        {
            bool isAggregation = this.GetType() != typeof(AppBarToggleButtonAutomationPeer);
            object baseInspectable = isAggregation ? this : null;
            IntPtr composed = _IAppBarToggleButtonAutomationPeerFactoryMethods.CreateInstanceWithOwner(_objRef_global__Microsoft_UI_Xaml_Automation_Peers_IAppBarToggleButtonAutomationPeerFactory, owner, baseInspectable, out IntPtr inner);
            try
            {
                ComWrappersHelper.Init(isAggregation, this, composed, inner, global::ABI.Microsoft.UI.Xaml.Automation.Peers.IAppBarToggleButtonAutomationPeerMethods.IID, out _inner);

            }
            finally
            {
                Marshal.Release(inner);   
            }
        }

        public static new AppBarToggleButtonAutomationPeer FromAbi(IntPtr thisPtr)
        {
            if (thisPtr == IntPtr.Zero) return null;
            return MarshalInspectable<AppBarToggleButtonAutomationPeer>.FromAbi(thisPtr);
        }

        protected internal AppBarToggleButtonAutomationPeer(IObjectReference objRef)
            : base(global::WinRT.DerivedComposed.Instance)

        {
            _inner = objRef.As(global::ABI.Microsoft.UI.Xaml.Automation.Peers.IAppBarToggleButtonAutomationPeerMethods.IID);

        }


        public static bool operator ==(AppBarToggleButtonAutomationPeer x, AppBarToggleButtonAutomationPeer y) => (x?.ThisPtr ?? IntPtr.Zero) == (y?.ThisPtr ?? IntPtr.Zero);
        public static bool operator !=(AppBarToggleButtonAutomationPeer x, AppBarToggleButtonAutomationPeer y) => !(x == y);
        public bool Equals(AppBarToggleButtonAutomationPeer other) => this == other;
        public override bool Equals(object obj) => obj is AppBarToggleButtonAutomationPeer that && this == that;
        public override int GetHashCode() => ThisPtr.GetHashCode();


        protected AppBarToggleButtonAutomationPeer(global::WinRT.DerivedComposed _):base(_)
        {

        }
        bool IWinRTObject.HasUnwrappableNativeObject => this.GetType() == typeof(AppBarToggleButtonAutomationPeer);
        IObjectReference IWinRTObject.NativeObject => _inner;

        private struct InterfaceTag<I>{};


        protected override bool IsOverridableInterface(Guid iid) => base.IsOverridableInterface(iid);

        global::System.Runtime.InteropServices.CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(ref Guid iid, out IntPtr ppv)
        {
            ppv = IntPtr.Zero;
            if (IsOverridableInterface(iid) || global::WinRT.Interop.IID.IID_IInspectable == iid)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
            }

            if (((IWinRTObject)this).NativeObject.TryAs(iid, out ppv) >= 0)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.Handled;
            }

            return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
        }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")]
    [global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Automation.Peers.AutoSuggestBoxAutomationPeer))]
    [global::ABI.Microsoft.UI.Xaml.Automation.Peers.AutoSuggestBoxAutomationPeerRcwFactory]
    [global::WinRT.ProjectedRuntimeClass(typeof(IAutoSuggestBoxAutomationPeer))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    public sealed class AutoSuggestBoxAutomationPeer : FrameworkElementAutomationPeer, global::Microsoft.UI.Xaml.Automation.Provider.IInvokeProvider, global::System.Runtime.InteropServices.ICustomQueryInterface, IWinRTObject, IEquatable<AutoSuggestBoxAutomationPeer>
    {
        private IntPtr ThisPtr => _inner == null ? (((IWinRTObject)this).NativeObject).ThisPtr : _inner.ThisPtr;

        private readonly IObjectReference _inner = null;



        private IObjectReference _objRef_global__Microsoft_UI_Xaml_Automation_Peers_IAutoSuggestBoxAutomationPeer => _inner;
        private volatile IObjectReference ___objRef_global__Microsoft_UI_Xaml_Automation_Provider_IInvokeProvider;
        private IObjectReference Make___objRef_global__Microsoft_UI_Xaml_Automation_Provider_IInvokeProvider()
        {
            global::System.Threading.Interlocked.CompareExchange(ref ___objRef_global__Microsoft_UI_Xaml_Automation_Provider_IInvokeProvider, ((IWinRTObject)this).NativeObject.As<IUnknownVftbl>(global::ABI.Microsoft.UI.Xaml.Automation.Provider.IInvokeProviderMethods.IID), null);
            return ___objRef_global__Microsoft_UI_Xaml_Automation_Provider_IInvokeProvider;
        }
        private IObjectReference _objRef_global__Microsoft_UI_Xaml_Automation_Provider_IInvokeProvider => ___objRef_global__Microsoft_UI_Xaml_Automation_Provider_IInvokeProvider ?? Make___objRef_global__Microsoft_UI_Xaml_Automation_Provider_IInvokeProvider();



        private static class _IAutoSuggestBoxAutomationPeerFactoryMethods
        {
            public static unsafe IntPtr CreateInstanceWithOwner(IObjectReference _obj, global::Microsoft.UI.Xaml.Controls.AutoSuggestBox owner)
            {
                var ThisPtr = _obj.ThisPtr;

                ObjectReferenceValue __owner = default;
                IntPtr __retval = default;
                try
                {
                    __owner = global::ABI.Microsoft.UI.Xaml.Controls.AutoSuggestBox.CreateMarshaler2(owner);
                    global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, IntPtr*, int>**)ThisPtr)[6](ThisPtr, MarshalInspectable<object>.GetAbi(__owner), &__retval));
                    global::System.GC.KeepAlive(_obj);
                    return __retval;
                }
                finally
                {
                    MarshalInspectable<object>.DisposeMarshaler(__owner);
                }
            }
        }

        private static volatile IObjectReference ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IAutoSuggestBoxAutomationPeerFactory;
        private static IObjectReference _objRef_global__Microsoft_UI_Xaml_Automation_Peers_IAutoSuggestBoxAutomationPeerFactory
        {
            get
            { 
                var factory = ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IAutoSuggestBoxAutomationPeerFactory;
                if (factory != null && factory.IsInCurrentContext)
                {
                    return factory;
                }
                else
                {
                    return ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IAutoSuggestBoxAutomationPeerFactory = ActivationFactory.Get("Microsoft.UI.Xaml.Automation.Peers.AutoSuggestBoxAutomationPeer", global::ABI.Microsoft.UI.Xaml.Automation.Peers.IAutoSuggestBoxAutomationPeerFactoryMethods.IID);
                }
            }
        }

        public AutoSuggestBoxAutomationPeer(global::Microsoft.UI.Xaml.Controls.AutoSuggestBox owner) :base(global::WinRT.DerivedComposed.Instance)
        { 
        IntPtr ptr = (_IAutoSuggestBoxAutomationPeerFactoryMethods.CreateInstanceWithOwner(_objRef_global__Microsoft_UI_Xaml_Automation_Peers_IAutoSuggestBoxAutomationPeerFactory, owner)); 
        try 
        { 
        _inner = ComWrappersSupport.GetObjectReferenceForInterface(ptr, global::ABI.Microsoft.UI.Xaml.Automation.Peers.IAutoSuggestBoxAutomationPeerMethods.IID, false); 

        } 
        finally 
        { 
        MarshalInspectable<object>.DisposeAbi(ptr); 
        }

        ComWrappersSupport.RegisterObjectForInterface(this, ThisPtr);
        ComWrappersHelper.Init(_inner, false);
        }

        public static new AutoSuggestBoxAutomationPeer FromAbi(IntPtr thisPtr)
        {
            if (thisPtr == IntPtr.Zero) return null;
            return MarshalInspectable<AutoSuggestBoxAutomationPeer>.FromAbi(thisPtr);
        }

        internal AutoSuggestBoxAutomationPeer(IObjectReference objRef)
            : base(global::WinRT.DerivedComposed.Instance)

        {
            _inner = objRef.As(global::ABI.Microsoft.UI.Xaml.Automation.Peers.IAutoSuggestBoxAutomationPeerMethods.IID);

        }


        public static bool operator ==(AutoSuggestBoxAutomationPeer x, AutoSuggestBoxAutomationPeer y) => (x?.ThisPtr ?? IntPtr.Zero) == (y?.ThisPtr ?? IntPtr.Zero);
        public static bool operator !=(AutoSuggestBoxAutomationPeer x, AutoSuggestBoxAutomationPeer y) => !(x == y);
        public bool Equals(AutoSuggestBoxAutomationPeer other) => this == other;
        public override bool Equals(object obj) => obj is AutoSuggestBoxAutomationPeer that && this == that;
        public override int GetHashCode() => ThisPtr.GetHashCode();


        bool IWinRTObject.HasUnwrappableNativeObject => true;
        IObjectReference IWinRTObject.NativeObject => _inner;

        private struct InterfaceTag<I>{};


        public void Invoke() => global::ABI.Microsoft.UI.Xaml.Automation.Provider.IInvokeProviderMethods.Invoke(_objRef_global__Microsoft_UI_Xaml_Automation_Provider_IInvokeProvider);

        protected override bool IsOverridableInterface(Guid iid) => base.IsOverridableInterface(iid);

        global::System.Runtime.InteropServices.CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(ref Guid iid, out IntPtr ppv)
        {
            ppv = IntPtr.Zero;
            if (IsOverridableInterface(iid) || global::WinRT.Interop.IID.IID_IInspectable == iid)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
            }

            if (((IWinRTObject)this).NativeObject.TryAs(iid, out ppv) >= 0)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.Handled;
            }

            return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
        }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")][global::WinRT.WinRTExposedType(typeof(global::WinRT.EnumTypeDetails<AutomationControlType>))][global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    public enum AutomationControlType : int
    {
        Button = unchecked((int)0),
        Calendar = unchecked((int)0x1),
        CheckBox = unchecked((int)0x2),
        ComboBox = unchecked((int)0x3),
        Edit = unchecked((int)0x4),
        Hyperlink = unchecked((int)0x5),
        Image = unchecked((int)0x6),
        ListItem = unchecked((int)0x7),
        List = unchecked((int)0x8),
        Menu = unchecked((int)0x9),
        MenuBar = unchecked((int)0xa),
        MenuItem = unchecked((int)0xb),
        ProgressBar = unchecked((int)0xc),
        RadioButton = unchecked((int)0xd),
        ScrollBar = unchecked((int)0xe),
        Slider = unchecked((int)0xf),
        Spinner = unchecked((int)0x10),
        StatusBar = unchecked((int)0x11),
        Tab = unchecked((int)0x12),
        TabItem = unchecked((int)0x13),
        Text = unchecked((int)0x14),
        ToolBar = unchecked((int)0x15),
        ToolTip = unchecked((int)0x16),
        Tree = unchecked((int)0x17),
        TreeItem = unchecked((int)0x18),
        Custom = unchecked((int)0x19),
        Group = unchecked((int)0x1a),
        Thumb = unchecked((int)0x1b),
        DataGrid = unchecked((int)0x1c),
        DataItem = unchecked((int)0x1d),
        Document = unchecked((int)0x1e),
        SplitButton = unchecked((int)0x1f),
        Window = unchecked((int)0x20),
        Pane = unchecked((int)0x21),
        Header = unchecked((int)0x22),
        HeaderItem = unchecked((int)0x23),
        Table = unchecked((int)0x24),
        TitleBar = unchecked((int)0x25),
        Separator = unchecked((int)0x26),
        SemanticZoom = unchecked((int)0x27),
        AppBar = unchecked((int)0x28),
        FlipView = unchecked((int)0x29),
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")][global::WinRT.WinRTExposedType(typeof(global::WinRT.EnumTypeDetails<AutomationEvents>))][global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    public enum AutomationEvents : int
    {
        ToolTipOpened = unchecked((int)0),
        ToolTipClosed = unchecked((int)0x1),
        MenuOpened = unchecked((int)0x2),
        MenuClosed = unchecked((int)0x3),
        AutomationFocusChanged = unchecked((int)0x4),
        InvokePatternOnInvoked = unchecked((int)0x5),
        SelectionItemPatternOnElementAddedToSelection = unchecked((int)0x6),
        SelectionItemPatternOnElementRemovedFromSelection = unchecked((int)0x7),
        SelectionItemPatternOnElementSelected = unchecked((int)0x8),
        SelectionPatternOnInvalidated = unchecked((int)0x9),
        TextPatternOnTextSelectionChanged = unchecked((int)0xa),
        TextPatternOnTextChanged = unchecked((int)0xb),
        AsyncContentLoaded = unchecked((int)0xc),
        PropertyChanged = unchecked((int)0xd),
        StructureChanged = unchecked((int)0xe),
        DragStart = unchecked((int)0xf),
        DragCancel = unchecked((int)0x10),
        DragComplete = unchecked((int)0x11),
        DragEnter = unchecked((int)0x12),
        DragLeave = unchecked((int)0x13),
        Dropped = unchecked((int)0x14),
        LiveRegionChanged = unchecked((int)0x15),
        InputReachedTarget = unchecked((int)0x16),
        InputReachedOtherElement = unchecked((int)0x17),
        InputDiscarded = unchecked((int)0x18),
        WindowClosed = unchecked((int)0x19),
        WindowOpened = unchecked((int)0x1a),
        ConversionTargetChanged = unchecked((int)0x1b),
        TextEditTextChanged = unchecked((int)0x1c),
        LayoutInvalidated = unchecked((int)0x1d),
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")][global::WinRT.WinRTExposedType(typeof(global::WinRT.EnumTypeDetails<AutomationHeadingLevel>))][global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    public enum AutomationHeadingLevel : int
    {
        None = unchecked((int)0),
        Level1 = unchecked((int)0x1),
        Level2 = unchecked((int)0x2),
        Level3 = unchecked((int)0x3),
        Level4 = unchecked((int)0x4),
        Level5 = unchecked((int)0x5),
        Level6 = unchecked((int)0x6),
        Level7 = unchecked((int)0x7),
        Level8 = unchecked((int)0x8),
        Level9 = unchecked((int)0x9),
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")][global::WinRT.WinRTExposedType(typeof(global::WinRT.EnumTypeDetails<AutomationLandmarkType>))][global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    public enum AutomationLandmarkType : int
    {
        None = unchecked((int)0),
        Custom = unchecked((int)0x1),
        Form = unchecked((int)0x2),
        Main = unchecked((int)0x3),
        Navigation = unchecked((int)0x4),
        Search = unchecked((int)0x5),
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")][global::WinRT.WinRTExposedType(typeof(global::WinRT.EnumTypeDetails<AutomationLiveSetting>))][global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    public enum AutomationLiveSetting : int
    {
        Off = unchecked((int)0),
        Polite = unchecked((int)0x1),
        Assertive = unchecked((int)0x2),
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")][global::WinRT.WinRTExposedType(typeof(global::WinRT.EnumTypeDetails<AutomationNavigationDirection>))][global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    public enum AutomationNavigationDirection : int
    {
        Parent = unchecked((int)0),
        NextSibling = unchecked((int)0x1),
        PreviousSibling = unchecked((int)0x2),
        FirstChild = unchecked((int)0x3),
        LastChild = unchecked((int)0x4),
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")][global::WinRT.WinRTExposedType(typeof(global::WinRT.EnumTypeDetails<AutomationNotificationKind>))][global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    public enum AutomationNotificationKind : int
    {
        ItemAdded = unchecked((int)0),
        ItemRemoved = unchecked((int)0x1),
        ActionCompleted = unchecked((int)0x2),
        ActionAborted = unchecked((int)0x3),
        Other = unchecked((int)0x4),
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")][global::WinRT.WinRTExposedType(typeof(global::WinRT.EnumTypeDetails<AutomationNotificationProcessing>))][global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    public enum AutomationNotificationProcessing : int
    {
        ImportantAll = unchecked((int)0),
        ImportantMostRecent = unchecked((int)0x1),
        All = unchecked((int)0x2),
        MostRecent = unchecked((int)0x3),
        CurrentThenMostRecent = unchecked((int)0x4),
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")][global::WinRT.WinRTExposedType(typeof(global::WinRT.EnumTypeDetails<AutomationOrientation>))][global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    public enum AutomationOrientation : int
    {
        None = unchecked((int)0),
        Horizontal = unchecked((int)0x1),
        Vertical = unchecked((int)0x2),
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")]
    [global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Automation.Peers.AutomationPeer))]
    [global::ABI.Microsoft.UI.Xaml.Automation.Peers.AutomationPeerRcwFactory]
    [global::WinRT.ProjectedRuntimeClass(typeof(IAutomationPeer))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    public class AutomationPeer : global::Microsoft.UI.Xaml.DependencyObject, IAutomationPeerOverrides, global::System.Runtime.InteropServices.ICustomQueryInterface, IWinRTObject, IEquatable<AutomationPeer>
    {
        private IntPtr ThisPtr => _inner == null ? (((IWinRTObject)this).NativeObject).ThisPtr : _inner.ThisPtr;

        private readonly IObjectReference _inner = null;




        private volatile IObjectReference ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IAutomationPeer;
        private IObjectReference Make___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IAutomationPeer()
        {
            global::System.Threading.Interlocked.CompareExchange(ref ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IAutomationPeer, ((IWinRTObject)this).NativeObject.As<IUnknownVftbl>(global::ABI.Microsoft.UI.Xaml.Automation.Peers.IAutomationPeerMethods.IID), null);
            return ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IAutomationPeer;
        }
        private IObjectReference _objRef_global__Microsoft_UI_Xaml_Automation_Peers_IAutomationPeer => ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IAutomationPeer ?? Make___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IAutomationPeer();

        private volatile IObjectReference ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IAutomationPeerProtected;
        private IObjectReference Make___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IAutomationPeerProtected()
        {
            global::System.Threading.Interlocked.CompareExchange(ref ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IAutomationPeerProtected, ((IWinRTObject)this).NativeObject.As<IUnknownVftbl>(global::ABI.Microsoft.UI.Xaml.Automation.Peers.IAutomationPeerProtectedMethods.IID), null);
            return ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IAutomationPeerProtected;
        }
        private IObjectReference _objRef_global__Microsoft_UI_Xaml_Automation_Peers_IAutomationPeerProtected => ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IAutomationPeerProtected ?? Make___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IAutomationPeerProtected();

        private volatile IObjectReference ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IAutomationPeerOverrides;
        private IObjectReference Make___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IAutomationPeerOverrides()
        {
            global::System.Threading.Interlocked.CompareExchange(ref ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IAutomationPeerOverrides, ((IWinRTObject)this).NativeObject.As<IUnknownVftbl>(global::ABI.Microsoft.UI.Xaml.Automation.Peers.IAutomationPeerOverridesMethods.IID), null);
            return ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IAutomationPeerOverrides;
        }
        private IObjectReference _objRef_global__Microsoft_UI_Xaml_Automation_Peers_IAutomationPeerOverrides => ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IAutomationPeerOverrides ?? Make___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IAutomationPeerOverrides();



        private static class _IAutomationPeerFactoryMethods
        {
            public static unsafe IntPtr CreateInstance(IObjectReference _obj, object baseInterface, out IntPtr innerInterface)
            {
                var ThisPtr = _obj.ThisPtr;

                ObjectReferenceValue __baseInterface = default;
                IntPtr __innerInterface = default;
                IntPtr __retval = default;
                try
                {
                    __baseInterface = MarshalInspectable<object>.CreateMarshaler2(baseInterface);
                    global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, IntPtr*, IntPtr*, int>**)ThisPtr)[6](ThisPtr, MarshalInspectable<object>.GetAbi(__baseInterface), &__innerInterface, &__retval));
                    global::System.GC.KeepAlive(_obj);
                    innerInterface = __innerInterface;
                    return __retval;
                }
                finally
                {
                    MarshalInspectable<object>.DisposeMarshaler(__baseInterface);
                }
            }
        }

        private static volatile IObjectReference ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IAutomationPeerFactory;
        private static IObjectReference _objRef_global__Microsoft_UI_Xaml_Automation_Peers_IAutomationPeerFactory
        {
            get
            { 
                var factory = ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IAutomationPeerFactory;
                if (factory != null && factory.IsInCurrentContext)
                {
                    return factory;
                }
                else
                {
                    return ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IAutomationPeerFactory = ActivationFactory.Get("Microsoft.UI.Xaml.Automation.Peers.AutomationPeer", global::ABI.Microsoft.UI.Xaml.Automation.Peers.IAutomationPeerFactoryMethods.IID);
                }
            }
        }

        protected AutomationPeer():base(global::WinRT.DerivedComposed.Instance)
        {
            bool isAggregation = this.GetType() != typeof(AutomationPeer);
            object baseInspectable = isAggregation ? this : null;
            IntPtr composed = _IAutomationPeerFactoryMethods.CreateInstance(_objRef_global__Microsoft_UI_Xaml_Automation_Peers_IAutomationPeerFactory,  baseInspectable, out IntPtr inner);
            try
            {
                ComWrappersHelper.Init(isAggregation, this, composed, inner, global::ABI.Microsoft.UI.Xaml.Automation.Peers.IAutomationPeerMethods.IID, out _inner);

            }
            finally
            {
                Marshal.Release(inner);   
            }
        }

        public static I As<I>() => ActivationFactory.Get("Microsoft.UI.Xaml.Automation.Peers.AutomationPeer").AsInterface<I>();

        private static volatile IObjectReference ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IAutomationPeerStatics;
        private static IObjectReference _objRef_global__Microsoft_UI_Xaml_Automation_Peers_IAutomationPeerStatics
        {
            get
            { 
                var factory = ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IAutomationPeerStatics;
                if (factory != null && factory.IsInCurrentContext)
                {
                    return factory;
                }
                else
                {
                    return ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IAutomationPeerStatics = ActivationFactory.Get("Microsoft.UI.Xaml.Automation.Peers.AutomationPeer", global::ABI.Microsoft.UI.Xaml.Automation.Peers.IAutomationPeerStaticsMethods.IID);
                }
            }
        }

        public static bool ListenerExists(AutomationEvents eventId) => global::ABI.Microsoft.UI.Xaml.Automation.Peers.IAutomationPeerStaticsMethods.ListenerExists(_objRef_global__Microsoft_UI_Xaml_Automation_Peers_IAutomationPeerStatics, eventId);

        public static RawElementProviderRuntimeId GenerateRawElementProviderRuntimeId() => global::ABI.Microsoft.UI.Xaml.Automation.Peers.IAutomationPeerStaticsMethods.GenerateRawElementProviderRuntimeId(_objRef_global__Microsoft_UI_Xaml_Automation_Peers_IAutomationPeerStatics);

        public static new AutomationPeer FromAbi(IntPtr thisPtr)
        {
            if (thisPtr == IntPtr.Zero) return null;
            return MarshalInspectable<AutomationPeer>.FromAbi(thisPtr);
        }

        protected internal AutomationPeer(IObjectReference objRef)
            : base(global::WinRT.DerivedComposed.Instance)

        {
            _inner = objRef.As(global::ABI.Microsoft.UI.Xaml.Automation.Peers.IAutomationPeerMethods.IID);

        }


        public static bool operator ==(AutomationPeer x, AutomationPeer y) => (x?.ThisPtr ?? IntPtr.Zero) == (y?.ThisPtr ?? IntPtr.Zero);
        public static bool operator !=(AutomationPeer x, AutomationPeer y) => !(x == y);
        public bool Equals(AutomationPeer other) => this == other;
        public override bool Equals(object obj) => obj is AutomationPeer that && this == that;
        public override int GetHashCode() => ThisPtr.GetHashCode();


        protected AutomationPeer(global::WinRT.DerivedComposed _):base(_)
        {

        }
        bool IWinRTObject.HasUnwrappableNativeObject => this.GetType() == typeof(AutomationPeer);
        IObjectReference IWinRTObject.NativeObject => _inner;

        private struct InterfaceTag<I>{};


        public object GetPattern(PatternInterface patternInterface) => global::ABI.Microsoft.UI.Xaml.Automation.Peers.IAutomationPeerMethods.GetPattern(_objRef_global__Microsoft_UI_Xaml_Automation_Peers_IAutomationPeer, patternInterface);

        public void RaiseAutomationEvent(AutomationEvents eventId) => global::ABI.Microsoft.UI.Xaml.Automation.Peers.IAutomationPeerMethods.RaiseAutomationEvent(_objRef_global__Microsoft_UI_Xaml_Automation_Peers_IAutomationPeer, eventId);

        public void RaisePropertyChangedEvent(global::Microsoft.UI.Xaml.Automation.AutomationProperty automationProperty, object oldValue, object newValue) => global::ABI.Microsoft.UI.Xaml.Automation.Peers.IAutomationPeerMethods.RaisePropertyChangedEvent(_objRef_global__Microsoft_UI_Xaml_Automation_Peers_IAutomationPeer, automationProperty, oldValue, newValue);

        public string GetAcceleratorKey() => global::ABI.Microsoft.UI.Xaml.Automation.Peers.IAutomationPeerMethods.GetAcceleratorKey(_objRef_global__Microsoft_UI_Xaml_Automation_Peers_IAutomationPeer);

        public string GetAccessKey() => global::ABI.Microsoft.UI.Xaml.Automation.Peers.IAutomationPeerMethods.GetAccessKey(_objRef_global__Microsoft_UI_Xaml_Automation_Peers_IAutomationPeer);

        public AutomationControlType GetAutomationControlType() => global::ABI.Microsoft.UI.Xaml.Automation.Peers.IAutomationPeerMethods.GetAutomationControlType(_objRef_global__Microsoft_UI_Xaml_Automation_Peers_IAutomationPeer);

        public string GetAutomationId() => global::ABI.Microsoft.UI.Xaml.Automation.Peers.IAutomationPeerMethods.GetAutomationId(_objRef_global__Microsoft_UI_Xaml_Automation_Peers_IAutomationPeer);

        public global::Windows.Foundation.Rect GetBoundingRectangle() => global::ABI.Microsoft.UI.Xaml.Automation.Peers.IAutomationPeerMethods.GetBoundingRectangle(_objRef_global__Microsoft_UI_Xaml_Automation_Peers_IAutomationPeer);

        public global::System.Collections.Generic.IList<AutomationPeer> GetChildren() => global::ABI.Microsoft.UI.Xaml.Automation.Peers.IAutomationPeerMethods.GetChildren(_objRef_global__Microsoft_UI_Xaml_Automation_Peers_IAutomationPeer);

        public object Navigate(AutomationNavigationDirection direction) => global::ABI.Microsoft.UI.Xaml.Automation.Peers.IAutomationPeerMethods.Navigate(_objRef_global__Microsoft_UI_Xaml_Automation_Peers_IAutomationPeer, direction);

        public string GetClassName() => global::ABI.Microsoft.UI.Xaml.Automation.Peers.IAutomationPeerMethods.GetClassName(_objRef_global__Microsoft_UI_Xaml_Automation_Peers_IAutomationPeer);

        public global::Windows.Foundation.Point GetClickablePoint() => global::ABI.Microsoft.UI.Xaml.Automation.Peers.IAutomationPeerMethods.GetClickablePoint(_objRef_global__Microsoft_UI_Xaml_Automation_Peers_IAutomationPeer);

        public string GetHelpText() => global::ABI.Microsoft.UI.Xaml.Automation.Peers.IAutomationPeerMethods.GetHelpText(_objRef_global__Microsoft_UI_Xaml_Automation_Peers_IAutomationPeer);

        public string GetItemStatus() => global::ABI.Microsoft.UI.Xaml.Automation.Peers.IAutomationPeerMethods.GetItemStatus(_objRef_global__Microsoft_UI_Xaml_Automation_Peers_IAutomationPeer);

        public string GetItemType() => global::ABI.Microsoft.UI.Xaml.Automation.Peers.IAutomationPeerMethods.GetItemType(_objRef_global__Microsoft_UI_Xaml_Automation_Peers_IAutomationPeer);

        public AutomationPeer GetLabeledBy() => global::ABI.Microsoft.UI.Xaml.Automation.Peers.IAutomationPeerMethods.GetLabeledBy(_objRef_global__Microsoft_UI_Xaml_Automation_Peers_IAutomationPeer);

        public string GetLocalizedControlType() => global::ABI.Microsoft.UI.Xaml.Automation.Peers.IAutomationPeerMethods.GetLocalizedControlType(_objRef_global__Microsoft_UI_Xaml_Automation_Peers_IAutomationPeer);

        public string GetName() => global::ABI.Microsoft.UI.Xaml.Automation.Peers.IAutomationPeerMethods.GetName(_objRef_global__Microsoft_UI_Xaml_Automation_Peers_IAutomationPeer);

        public AutomationOrientation GetOrientation() => global::ABI.Microsoft.UI.Xaml.Automation.Peers.IAutomationPeerMethods.GetOrientation(_objRef_global__Microsoft_UI_Xaml_Automation_Peers_IAutomationPeer);

        public bool HasKeyboardFocus() => global::ABI.Microsoft.UI.Xaml.Automation.Peers.IAutomationPeerMethods.HasKeyboardFocus(_objRef_global__Microsoft_UI_Xaml_Automation_Peers_IAutomationPeer);

        public bool IsContentElement() => global::ABI.Microsoft.UI.Xaml.Automation.Peers.IAutomationPeerMethods.IsContentElement(_objRef_global__Microsoft_UI_Xaml_Automation_Peers_IAutomationPeer);

        public bool IsControlElement() => global::ABI.Microsoft.UI.Xaml.Automation.Peers.IAutomationPeerMethods.IsControlElement(_objRef_global__Microsoft_UI_Xaml_Automation_Peers_IAutomationPeer);

        public bool IsEnabled() => global::ABI.Microsoft.UI.Xaml.Automation.Peers.IAutomationPeerMethods.IsEnabled(_objRef_global__Microsoft_UI_Xaml_Automation_Peers_IAutomationPeer);

        public bool IsKeyboardFocusable() => global::ABI.Microsoft.UI.Xaml.Automation.Peers.IAutomationPeerMethods.IsKeyboardFocusable(_objRef_global__Microsoft_UI_Xaml_Automation_Peers_IAutomationPeer);

        public bool IsOffscreen() => global::ABI.Microsoft.UI.Xaml.Automation.Peers.IAutomationPeerMethods.IsOffscreen(_objRef_global__Microsoft_UI_Xaml_Automation_Peers_IAutomationPeer);

        public bool IsPassword() => global::ABI.Microsoft.UI.Xaml.Automation.Peers.IAutomationPeerMethods.IsPassword(_objRef_global__Microsoft_UI_Xaml_Automation_Peers_IAutomationPeer);

        public bool IsRequiredForForm() => global::ABI.Microsoft.UI.Xaml.Automation.Peers.IAutomationPeerMethods.IsRequiredForForm(_objRef_global__Microsoft_UI_Xaml_Automation_Peers_IAutomationPeer);

        public void SetFocus() => global::ABI.Microsoft.UI.Xaml.Automation.Peers.IAutomationPeerMethods.SetFocus(_objRef_global__Microsoft_UI_Xaml_Automation_Peers_IAutomationPeer);

        public AutomationPeer GetParent() => global::ABI.Microsoft.UI.Xaml.Automation.Peers.IAutomationPeerMethods.GetParent(_objRef_global__Microsoft_UI_Xaml_Automation_Peers_IAutomationPeer);

        public void InvalidatePeer() => global::ABI.Microsoft.UI.Xaml.Automation.Peers.IAutomationPeerMethods.InvalidatePeer(_objRef_global__Microsoft_UI_Xaml_Automation_Peers_IAutomationPeer);

        public AutomationPeer GetPeerFromPoint(global::Windows.Foundation.Point point) => global::ABI.Microsoft.UI.Xaml.Automation.Peers.IAutomationPeerMethods.GetPeerFromPoint(_objRef_global__Microsoft_UI_Xaml_Automation_Peers_IAutomationPeer, point);

        public object GetElementFromPoint(global::Windows.Foundation.Point pointInWindowCoordinates) => global::ABI.Microsoft.UI.Xaml.Automation.Peers.IAutomationPeerMethods.GetElementFromPoint(_objRef_global__Microsoft_UI_Xaml_Automation_Peers_IAutomationPeer, pointInWindowCoordinates);

        public object GetFocusedElement() => global::ABI.Microsoft.UI.Xaml.Automation.Peers.IAutomationPeerMethods.GetFocusedElement(_objRef_global__Microsoft_UI_Xaml_Automation_Peers_IAutomationPeer);

        public AutomationLiveSetting GetLiveSetting() => global::ABI.Microsoft.UI.Xaml.Automation.Peers.IAutomationPeerMethods.GetLiveSetting(_objRef_global__Microsoft_UI_Xaml_Automation_Peers_IAutomationPeer);

        public void ShowContextMenu() => global::ABI.Microsoft.UI.Xaml.Automation.Peers.IAutomationPeerMethods.ShowContextMenu(_objRef_global__Microsoft_UI_Xaml_Automation_Peers_IAutomationPeer);

        public global::System.Collections.Generic.IReadOnlyList<AutomationPeer> GetControlledPeers() => global::ABI.Microsoft.UI.Xaml.Automation.Peers.IAutomationPeerMethods.GetControlledPeers(_objRef_global__Microsoft_UI_Xaml_Automation_Peers_IAutomationPeer);

        public global::System.Collections.Generic.IList<AutomationPeerAnnotation> GetAnnotations() => global::ABI.Microsoft.UI.Xaml.Automation.Peers.IAutomationPeerMethods.GetAnnotations(_objRef_global__Microsoft_UI_Xaml_Automation_Peers_IAutomationPeer);

        public void SetParent(AutomationPeer peer) => global::ABI.Microsoft.UI.Xaml.Automation.Peers.IAutomationPeerMethods.SetParent(_objRef_global__Microsoft_UI_Xaml_Automation_Peers_IAutomationPeer, peer);

        public void RaiseTextEditTextChangedEvent(global::Microsoft.UI.Xaml.Automation.AutomationTextEditChangeType automationTextEditChangeType, global::System.Collections.Generic.IReadOnlyList<string> changedData) => global::ABI.Microsoft.UI.Xaml.Automation.Peers.IAutomationPeerMethods.RaiseTextEditTextChangedEvent(_objRef_global__Microsoft_UI_Xaml_Automation_Peers_IAutomationPeer, automationTextEditChangeType, changedData);

        public int GetPositionInSet() => global::ABI.Microsoft.UI.Xaml.Automation.Peers.IAutomationPeerMethods.GetPositionInSet(_objRef_global__Microsoft_UI_Xaml_Automation_Peers_IAutomationPeer);

        public int GetSizeOfSet() => global::ABI.Microsoft.UI.Xaml.Automation.Peers.IAutomationPeerMethods.GetSizeOfSet(_objRef_global__Microsoft_UI_Xaml_Automation_Peers_IAutomationPeer);

        public int GetLevel() => global::ABI.Microsoft.UI.Xaml.Automation.Peers.IAutomationPeerMethods.GetLevel(_objRef_global__Microsoft_UI_Xaml_Automation_Peers_IAutomationPeer);

        public void RaiseStructureChangedEvent(AutomationStructureChangeType structureChangeType, AutomationPeer child) => global::ABI.Microsoft.UI.Xaml.Automation.Peers.IAutomationPeerMethods.RaiseStructureChangedEvent(_objRef_global__Microsoft_UI_Xaml_Automation_Peers_IAutomationPeer, structureChangeType, child);

        public AutomationLandmarkType GetLandmarkType() => global::ABI.Microsoft.UI.Xaml.Automation.Peers.IAutomationPeerMethods.GetLandmarkType(_objRef_global__Microsoft_UI_Xaml_Automation_Peers_IAutomationPeer);

        public string GetLocalizedLandmarkType() => global::ABI.Microsoft.UI.Xaml.Automation.Peers.IAutomationPeerMethods.GetLocalizedLandmarkType(_objRef_global__Microsoft_UI_Xaml_Automation_Peers_IAutomationPeer);

        public bool IsPeripheral() => global::ABI.Microsoft.UI.Xaml.Automation.Peers.IAutomationPeerMethods.IsPeripheral(_objRef_global__Microsoft_UI_Xaml_Automation_Peers_IAutomationPeer);

        public bool IsDataValidForForm() => global::ABI.Microsoft.UI.Xaml.Automation.Peers.IAutomationPeerMethods.IsDataValidForForm(_objRef_global__Microsoft_UI_Xaml_Automation_Peers_IAutomationPeer);

        public string GetFullDescription() => global::ABI.Microsoft.UI.Xaml.Automation.Peers.IAutomationPeerMethods.GetFullDescription(_objRef_global__Microsoft_UI_Xaml_Automation_Peers_IAutomationPeer);

        public int GetCulture() => global::ABI.Microsoft.UI.Xaml.Automation.Peers.IAutomationPeerMethods.GetCulture(_objRef_global__Microsoft_UI_Xaml_Automation_Peers_IAutomationPeer);

        public void RaiseNotificationEvent(AutomationNotificationKind notificationKind, AutomationNotificationProcessing notificationProcessing, string displayString, string activityId) => global::ABI.Microsoft.UI.Xaml.Automation.Peers.IAutomationPeerMethods.RaiseNotificationEvent(_objRef_global__Microsoft_UI_Xaml_Automation_Peers_IAutomationPeer, notificationKind, notificationProcessing, displayString, activityId);

        public AutomationHeadingLevel GetHeadingLevel() => global::ABI.Microsoft.UI.Xaml.Automation.Peers.IAutomationPeerMethods.GetHeadingLevel(_objRef_global__Microsoft_UI_Xaml_Automation_Peers_IAutomationPeer);

        public bool IsDialog() => global::ABI.Microsoft.UI.Xaml.Automation.Peers.IAutomationPeerMethods.IsDialog(_objRef_global__Microsoft_UI_Xaml_Automation_Peers_IAutomationPeer);

        protected AutomationPeer PeerFromProvider(global::Microsoft.UI.Xaml.Automation.Provider.IRawElementProviderSimple provider) => global::ABI.Microsoft.UI.Xaml.Automation.Peers.IAutomationPeerProtectedMethods.PeerFromProvider(_objRef_global__Microsoft_UI_Xaml_Automation_Peers_IAutomationPeerProtected, provider);

        protected global::Microsoft.UI.Xaml.Automation.Provider.IRawElementProviderSimple ProviderFromPeer(AutomationPeer peer) => global::ABI.Microsoft.UI.Xaml.Automation.Peers.IAutomationPeerProtectedMethods.ProviderFromPeer(_objRef_global__Microsoft_UI_Xaml_Automation_Peers_IAutomationPeerProtected, peer);

        protected virtual object GetPatternCore(PatternInterface patternInterface) => global::ABI.Microsoft.UI.Xaml.Automation.Peers.IAutomationPeerOverridesMethods.GetPatternCore(_objRef_global__Microsoft_UI_Xaml_Automation_Peers_IAutomationPeerOverrides, patternInterface);

        object IAutomationPeerOverrides.GetPatternCore(PatternInterface patternInterface) => GetPatternCore(patternInterface);
        protected virtual string GetAcceleratorKeyCore() => global::ABI.Microsoft.UI.Xaml.Automation.Peers.IAutomationPeerOverridesMethods.GetAcceleratorKeyCore(_objRef_global__Microsoft_UI_Xaml_Automation_Peers_IAutomationPeerOverrides);

        string IAutomationPeerOverrides.GetAcceleratorKeyCore() => GetAcceleratorKeyCore();
        protected virtual string GetAccessKeyCore() => global::ABI.Microsoft.UI.Xaml.Automation.Peers.IAutomationPeerOverridesMethods.GetAccessKeyCore(_objRef_global__Microsoft_UI_Xaml_Automation_Peers_IAutomationPeerOverrides);

        string IAutomationPeerOverrides.GetAccessKeyCore() => GetAccessKeyCore();
        protected virtual AutomationControlType GetAutomationControlTypeCore() => global::ABI.Microsoft.UI.Xaml.Automation.Peers.IAutomationPeerOverridesMethods.GetAutomationControlTypeCore(_objRef_global__Microsoft_UI_Xaml_Automation_Peers_IAutomationPeerOverrides);

        AutomationControlType IAutomationPeerOverrides.GetAutomationControlTypeCore() => GetAutomationControlTypeCore();
        protected virtual string GetAutomationIdCore() => global::ABI.Microsoft.UI.Xaml.Automation.Peers.IAutomationPeerOverridesMethods.GetAutomationIdCore(_objRef_global__Microsoft_UI_Xaml_Automation_Peers_IAutomationPeerOverrides);

        string IAutomationPeerOverrides.GetAutomationIdCore() => GetAutomationIdCore();
        protected virtual global::Windows.Foundation.Rect GetBoundingRectangleCore() => global::ABI.Microsoft.UI.Xaml.Automation.Peers.IAutomationPeerOverridesMethods.GetBoundingRectangleCore(_objRef_global__Microsoft_UI_Xaml_Automation_Peers_IAutomationPeerOverrides);

        global::Windows.Foundation.Rect IAutomationPeerOverrides.GetBoundingRectangleCore() => GetBoundingRectangleCore();
        protected virtual global::System.Collections.Generic.IList<AutomationPeer> GetChildrenCore() => global::ABI.Microsoft.UI.Xaml.Automation.Peers.IAutomationPeerOverridesMethods.GetChildrenCore(_objRef_global__Microsoft_UI_Xaml_Automation_Peers_IAutomationPeerOverrides);

        global::System.Collections.Generic.IList<AutomationPeer> IAutomationPeerOverrides.GetChildrenCore() => GetChildrenCore();
        protected virtual object NavigateCore(AutomationNavigationDirection direction) => global::ABI.Microsoft.UI.Xaml.Automation.Peers.IAutomationPeerOverridesMethods.NavigateCore(_objRef_global__Microsoft_UI_Xaml_Automation_Peers_IAutomationPeerOverrides, direction);

        object IAutomationPeerOverrides.NavigateCore(AutomationNavigationDirection direction) => NavigateCore(direction);
        protected virtual string GetClassNameCore() => global::ABI.Microsoft.UI.Xaml.Automation.Peers.IAutomationPeerOverridesMethods.GetClassNameCore(_objRef_global__Microsoft_UI_Xaml_Automation_Peers_IAutomationPeerOverrides);

        string IAutomationPeerOverrides.GetClassNameCore() => GetClassNameCore();
        protected virtual global::Windows.Foundation.Point GetClickablePointCore() => global::ABI.Microsoft.UI.Xaml.Automation.Peers.IAutomationPeerOverridesMethods.GetClickablePointCore(_objRef_global__Microsoft_UI_Xaml_Automation_Peers_IAutomationPeerOverrides);

        global::Windows.Foundation.Point IAutomationPeerOverrides.GetClickablePointCore() => GetClickablePointCore();
        protected virtual string GetHelpTextCore() => global::ABI.Microsoft.UI.Xaml.Automation.Peers.IAutomationPeerOverridesMethods.GetHelpTextCore(_objRef_global__Microsoft_UI_Xaml_Automation_Peers_IAutomationPeerOverrides);

        string IAutomationPeerOverrides.GetHelpTextCore() => GetHelpTextCore();
        protected virtual string GetItemStatusCore() => global::ABI.Microsoft.UI.Xaml.Automation.Peers.IAutomationPeerOverridesMethods.GetItemStatusCore(_objRef_global__Microsoft_UI_Xaml_Automation_Peers_IAutomationPeerOverrides);

        string IAutomationPeerOverrides.GetItemStatusCore() => GetItemStatusCore();
        protected virtual string GetItemTypeCore() => global::ABI.Microsoft.UI.Xaml.Automation.Peers.IAutomationPeerOverridesMethods.GetItemTypeCore(_objRef_global__Microsoft_UI_Xaml_Automation_Peers_IAutomationPeerOverrides);

        string IAutomationPeerOverrides.GetItemTypeCore() => GetItemTypeCore();
        protected virtual AutomationPeer GetLabeledByCore() => global::ABI.Microsoft.UI.Xaml.Automation.Peers.IAutomationPeerOverridesMethods.GetLabeledByCore(_objRef_global__Microsoft_UI_Xaml_Automation_Peers_IAutomationPeerOverrides);

        AutomationPeer IAutomationPeerOverrides.GetLabeledByCore() => GetLabeledByCore();
        protected virtual string GetLocalizedControlTypeCore() => global::ABI.Microsoft.UI.Xaml.Automation.Peers.IAutomationPeerOverridesMethods.GetLocalizedControlTypeCore(_objRef_global__Microsoft_UI_Xaml_Automation_Peers_IAutomationPeerOverrides);

        string IAutomationPeerOverrides.GetLocalizedControlTypeCore() => GetLocalizedControlTypeCore();
        protected virtual string GetNameCore() => global::ABI.Microsoft.UI.Xaml.Automation.Peers.IAutomationPeerOverridesMethods.GetNameCore(_objRef_global__Microsoft_UI_Xaml_Automation_Peers_IAutomationPeerOverrides);

        string IAutomationPeerOverrides.GetNameCore() => GetNameCore();
        protected virtual AutomationOrientation GetOrientationCore() => global::ABI.Microsoft.UI.Xaml.Automation.Peers.IAutomationPeerOverridesMethods.GetOrientationCore(_objRef_global__Microsoft_UI_Xaml_Automation_Peers_IAutomationPeerOverrides);

        AutomationOrientation IAutomationPeerOverrides.GetOrientationCore() => GetOrientationCore();
        protected virtual bool HasKeyboardFocusCore() => global::ABI.Microsoft.UI.Xaml.Automation.Peers.IAutomationPeerOverridesMethods.HasKeyboardFocusCore(_objRef_global__Microsoft_UI_Xaml_Automation_Peers_IAutomationPeerOverrides);

        bool IAutomationPeerOverrides.HasKeyboardFocusCore() => HasKeyboardFocusCore();
        protected virtual bool IsContentElementCore() => global::ABI.Microsoft.UI.Xaml.Automation.Peers.IAutomationPeerOverridesMethods.IsContentElementCore(_objRef_global__Microsoft_UI_Xaml_Automation_Peers_IAutomationPeerOverrides);

        bool IAutomationPeerOverrides.IsContentElementCore() => IsContentElementCore();
        protected virtual bool IsControlElementCore() => global::ABI.Microsoft.UI.Xaml.Automation.Peers.IAutomationPeerOverridesMethods.IsControlElementCore(_objRef_global__Microsoft_UI_Xaml_Automation_Peers_IAutomationPeerOverrides);

        bool IAutomationPeerOverrides.IsControlElementCore() => IsControlElementCore();
        protected virtual bool IsEnabledCore() => global::ABI.Microsoft.UI.Xaml.Automation.Peers.IAutomationPeerOverridesMethods.IsEnabledCore(_objRef_global__Microsoft_UI_Xaml_Automation_Peers_IAutomationPeerOverrides);

        bool IAutomationPeerOverrides.IsEnabledCore() => IsEnabledCore();
        protected virtual bool IsKeyboardFocusableCore() => global::ABI.Microsoft.UI.Xaml.Automation.Peers.IAutomationPeerOverridesMethods.IsKeyboardFocusableCore(_objRef_global__Microsoft_UI_Xaml_Automation_Peers_IAutomationPeerOverrides);

        bool IAutomationPeerOverrides.IsKeyboardFocusableCore() => IsKeyboardFocusableCore();
        protected virtual bool IsOffscreenCore() => global::ABI.Microsoft.UI.Xaml.Automation.Peers.IAutomationPeerOverridesMethods.IsOffscreenCore(_objRef_global__Microsoft_UI_Xaml_Automation_Peers_IAutomationPeerOverrides);

        bool IAutomationPeerOverrides.IsOffscreenCore() => IsOffscreenCore();
        protected virtual bool IsPasswordCore() => global::ABI.Microsoft.UI.Xaml.Automation.Peers.IAutomationPeerOverridesMethods.IsPasswordCore(_objRef_global__Microsoft_UI_Xaml_Automation_Peers_IAutomationPeerOverrides);

        bool IAutomationPeerOverrides.IsPasswordCore() => IsPasswordCore();
        protected virtual bool IsRequiredForFormCore() => global::ABI.Microsoft.UI.Xaml.Automation.Peers.IAutomationPeerOverridesMethods.IsRequiredForFormCore(_objRef_global__Microsoft_UI_Xaml_Automation_Peers_IAutomationPeerOverrides);

        bool IAutomationPeerOverrides.IsRequiredForFormCore() => IsRequiredForFormCore();
        protected virtual void SetFocusCore() => global::ABI.Microsoft.UI.Xaml.Automation.Peers.IAutomationPeerOverridesMethods.SetFocusCore(_objRef_global__Microsoft_UI_Xaml_Automation_Peers_IAutomationPeerOverrides);

        void IAutomationPeerOverrides.SetFocusCore() => SetFocusCore();
        protected virtual AutomationPeer GetPeerFromPointCore(global::Windows.Foundation.Point point) => global::ABI.Microsoft.UI.Xaml.Automation.Peers.IAutomationPeerOverridesMethods.GetPeerFromPointCore(_objRef_global__Microsoft_UI_Xaml_Automation_Peers_IAutomationPeerOverrides, point);

        AutomationPeer IAutomationPeerOverrides.GetPeerFromPointCore(global::Windows.Foundation.Point point) => GetPeerFromPointCore(point);
        protected virtual object GetElementFromPointCore(global::Windows.Foundation.Point pointInWindowCoordinates) => global::ABI.Microsoft.UI.Xaml.Automation.Peers.IAutomationPeerOverridesMethods.GetElementFromPointCore(_objRef_global__Microsoft_UI_Xaml_Automation_Peers_IAutomationPeerOverrides, pointInWindowCoordinates);

        object IAutomationPeerOverrides.GetElementFromPointCore(global::Windows.Foundation.Point pointInWindowCoordinates) => GetElementFromPointCore(pointInWindowCoordinates);
        protected virtual object GetFocusedElementCore() => global::ABI.Microsoft.UI.Xaml.Automation.Peers.IAutomationPeerOverridesMethods.GetFocusedElementCore(_objRef_global__Microsoft_UI_Xaml_Automation_Peers_IAutomationPeerOverrides);

        object IAutomationPeerOverrides.GetFocusedElementCore() => GetFocusedElementCore();
        protected virtual AutomationLiveSetting GetLiveSettingCore() => global::ABI.Microsoft.UI.Xaml.Automation.Peers.IAutomationPeerOverridesMethods.GetLiveSettingCore(_objRef_global__Microsoft_UI_Xaml_Automation_Peers_IAutomationPeerOverrides);

        AutomationLiveSetting IAutomationPeerOverrides.GetLiveSettingCore() => GetLiveSettingCore();
        protected virtual void ShowContextMenuCore() => global::ABI.Microsoft.UI.Xaml.Automation.Peers.IAutomationPeerOverridesMethods.ShowContextMenuCore(_objRef_global__Microsoft_UI_Xaml_Automation_Peers_IAutomationPeerOverrides);

        void IAutomationPeerOverrides.ShowContextMenuCore() => ShowContextMenuCore();
        protected virtual global::System.Collections.Generic.IReadOnlyList<AutomationPeer> GetControlledPeersCore() => global::ABI.Microsoft.UI.Xaml.Automation.Peers.IAutomationPeerOverridesMethods.GetControlledPeersCore(_objRef_global__Microsoft_UI_Xaml_Automation_Peers_IAutomationPeerOverrides);

        global::System.Collections.Generic.IReadOnlyList<AutomationPeer> IAutomationPeerOverrides.GetControlledPeersCore() => GetControlledPeersCore();
        protected virtual global::System.Collections.Generic.IList<AutomationPeerAnnotation> GetAnnotationsCore() => global::ABI.Microsoft.UI.Xaml.Automation.Peers.IAutomationPeerOverridesMethods.GetAnnotationsCore(_objRef_global__Microsoft_UI_Xaml_Automation_Peers_IAutomationPeerOverrides);

        global::System.Collections.Generic.IList<AutomationPeerAnnotation> IAutomationPeerOverrides.GetAnnotationsCore() => GetAnnotationsCore();
        protected virtual int GetPositionInSetCore() => global::ABI.Microsoft.UI.Xaml.Automation.Peers.IAutomationPeerOverridesMethods.GetPositionInSetCore(_objRef_global__Microsoft_UI_Xaml_Automation_Peers_IAutomationPeerOverrides);

        int IAutomationPeerOverrides.GetPositionInSetCore() => GetPositionInSetCore();
        protected virtual int GetSizeOfSetCore() => global::ABI.Microsoft.UI.Xaml.Automation.Peers.IAutomationPeerOverridesMethods.GetSizeOfSetCore(_objRef_global__Microsoft_UI_Xaml_Automation_Peers_IAutomationPeerOverrides);

        int IAutomationPeerOverrides.GetSizeOfSetCore() => GetSizeOfSetCore();
        protected virtual int GetLevelCore() => global::ABI.Microsoft.UI.Xaml.Automation.Peers.IAutomationPeerOverridesMethods.GetLevelCore(_objRef_global__Microsoft_UI_Xaml_Automation_Peers_IAutomationPeerOverrides);

        int IAutomationPeerOverrides.GetLevelCore() => GetLevelCore();
        protected virtual AutomationLandmarkType GetLandmarkTypeCore() => global::ABI.Microsoft.UI.Xaml.Automation.Peers.IAutomationPeerOverridesMethods.GetLandmarkTypeCore(_objRef_global__Microsoft_UI_Xaml_Automation_Peers_IAutomationPeerOverrides);

        AutomationLandmarkType IAutomationPeerOverrides.GetLandmarkTypeCore() => GetLandmarkTypeCore();
        protected virtual string GetLocalizedLandmarkTypeCore() => global::ABI.Microsoft.UI.Xaml.Automation.Peers.IAutomationPeerOverridesMethods.GetLocalizedLandmarkTypeCore(_objRef_global__Microsoft_UI_Xaml_Automation_Peers_IAutomationPeerOverrides);

        string IAutomationPeerOverrides.GetLocalizedLandmarkTypeCore() => GetLocalizedLandmarkTypeCore();
        protected virtual bool IsPeripheralCore() => global::ABI.Microsoft.UI.Xaml.Automation.Peers.IAutomationPeerOverridesMethods.IsPeripheralCore(_objRef_global__Microsoft_UI_Xaml_Automation_Peers_IAutomationPeerOverrides);

        bool IAutomationPeerOverrides.IsPeripheralCore() => IsPeripheralCore();
        protected virtual bool IsDataValidForFormCore() => global::ABI.Microsoft.UI.Xaml.Automation.Peers.IAutomationPeerOverridesMethods.IsDataValidForFormCore(_objRef_global__Microsoft_UI_Xaml_Automation_Peers_IAutomationPeerOverrides);

        bool IAutomationPeerOverrides.IsDataValidForFormCore() => IsDataValidForFormCore();
        protected virtual string GetFullDescriptionCore() => global::ABI.Microsoft.UI.Xaml.Automation.Peers.IAutomationPeerOverridesMethods.GetFullDescriptionCore(_objRef_global__Microsoft_UI_Xaml_Automation_Peers_IAutomationPeerOverrides);

        string IAutomationPeerOverrides.GetFullDescriptionCore() => GetFullDescriptionCore();
        protected virtual global::System.Collections.Generic.IEnumerable<AutomationPeer> GetDescribedByCore() => global::ABI.Microsoft.UI.Xaml.Automation.Peers.IAutomationPeerOverridesMethods.GetDescribedByCore(_objRef_global__Microsoft_UI_Xaml_Automation_Peers_IAutomationPeerOverrides);

        global::System.Collections.Generic.IEnumerable<AutomationPeer> IAutomationPeerOverrides.GetDescribedByCore() => GetDescribedByCore();
        protected virtual global::System.Collections.Generic.IEnumerable<AutomationPeer> GetFlowsToCore() => global::ABI.Microsoft.UI.Xaml.Automation.Peers.IAutomationPeerOverridesMethods.GetFlowsToCore(_objRef_global__Microsoft_UI_Xaml_Automation_Peers_IAutomationPeerOverrides);

        global::System.Collections.Generic.IEnumerable<AutomationPeer> IAutomationPeerOverrides.GetFlowsToCore() => GetFlowsToCore();
        protected virtual global::System.Collections.Generic.IEnumerable<AutomationPeer> GetFlowsFromCore() => global::ABI.Microsoft.UI.Xaml.Automation.Peers.IAutomationPeerOverridesMethods.GetFlowsFromCore(_objRef_global__Microsoft_UI_Xaml_Automation_Peers_IAutomationPeerOverrides);

        global::System.Collections.Generic.IEnumerable<AutomationPeer> IAutomationPeerOverrides.GetFlowsFromCore() => GetFlowsFromCore();
        protected virtual int GetCultureCore() => global::ABI.Microsoft.UI.Xaml.Automation.Peers.IAutomationPeerOverridesMethods.GetCultureCore(_objRef_global__Microsoft_UI_Xaml_Automation_Peers_IAutomationPeerOverrides);

        int IAutomationPeerOverrides.GetCultureCore() => GetCultureCore();
        protected virtual AutomationHeadingLevel GetHeadingLevelCore() => global::ABI.Microsoft.UI.Xaml.Automation.Peers.IAutomationPeerOverridesMethods.GetHeadingLevelCore(_objRef_global__Microsoft_UI_Xaml_Automation_Peers_IAutomationPeerOverrides);

        AutomationHeadingLevel IAutomationPeerOverrides.GetHeadingLevelCore() => GetHeadingLevelCore();
        protected virtual bool IsDialogCore() => global::ABI.Microsoft.UI.Xaml.Automation.Peers.IAutomationPeerOverridesMethods.IsDialogCore(_objRef_global__Microsoft_UI_Xaml_Automation_Peers_IAutomationPeerOverrides);

        bool IAutomationPeerOverrides.IsDialogCore() => IsDialogCore();
        public AutomationPeer EventsSource
        {
            get => global::ABI.Microsoft.UI.Xaml.Automation.Peers.IAutomationPeerMethods.get_EventsSource(_objRef_global__Microsoft_UI_Xaml_Automation_Peers_IAutomationPeer);
            set => global::ABI.Microsoft.UI.Xaml.Automation.Peers.IAutomationPeerMethods.set_EventsSource(_objRef_global__Microsoft_UI_Xaml_Automation_Peers_IAutomationPeer, value);
        }

        protected override bool IsOverridableInterface(Guid iid) => global::ABI.Microsoft.UI.Xaml.Automation.Peers.IAutomationPeerOverridesMethods.IID == iid || base.IsOverridableInterface(iid);

        global::System.Runtime.InteropServices.CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(ref Guid iid, out IntPtr ppv)
        {
            ppv = IntPtr.Zero;
            if (IsOverridableInterface(iid) || global::WinRT.Interop.IID.IID_IInspectable == iid)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
            }

            if (((IWinRTObject)this).NativeObject.TryAs(iid, out ppv) >= 0)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.Handled;
            }

            return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
        }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")]
    [global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Automation.Peers.AutomationPeerAnnotation))]
    [global::ABI.Microsoft.UI.Xaml.Automation.Peers.AutomationPeerAnnotationRcwFactory]
    [global::WinRT.ProjectedRuntimeClass(typeof(IAutomationPeerAnnotation))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    public sealed class AutomationPeerAnnotation : global::Microsoft.UI.Xaml.DependencyObject, global::System.Runtime.InteropServices.ICustomQueryInterface, IWinRTObject, IEquatable<AutomationPeerAnnotation>
    {
        private IntPtr ThisPtr => _inner == null ? (((IWinRTObject)this).NativeObject).ThisPtr : _inner.ThisPtr;

        private readonly IObjectReference _inner = null;



        private IObjectReference _objRef_global__Microsoft_UI_Xaml_Automation_Peers_IAutomationPeerAnnotation => _inner;


        private static volatile IObjectReference ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_AutomationPeerAnnotation;
        private static IObjectReference _objRef_global__Microsoft_UI_Xaml_Automation_Peers_AutomationPeerAnnotation
        {
            get
            { 
                var factory = ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_AutomationPeerAnnotation;
                if (factory != null && factory.IsInCurrentContext)
                {
                    return factory;
                }
                else
                {
                    return ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_AutomationPeerAnnotation = ActivationFactory.Get("Microsoft.UI.Xaml.Automation.Peers.AutomationPeerAnnotation");
                }
            }
        }

        public AutomationPeerAnnotation() :base(global::WinRT.DerivedComposed.Instance)
        {
            _inner = global::ABI.WinRT.Interop.IActivationFactoryMethods.ActivateInstanceUnsafe(_objRef_global__Microsoft_UI_Xaml_Automation_Peers_AutomationPeerAnnotation, global::ABI.Microsoft.UI.Xaml.Automation.Peers.IAutomationPeerAnnotationMethods.IID);
            ComWrappersSupport.RegisterObjectForInterface(this, ThisPtr);
            ComWrappersHelper.Init(_inner, false);

        }

        private static class _IAutomationPeerAnnotationFactoryMethods
        {
            public static unsafe IntPtr CreateInstance(IObjectReference _obj, global::Microsoft.UI.Xaml.Automation.AnnotationType type)
            {
                var ThisPtr = _obj.ThisPtr;

                IntPtr __retval = default;
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::Microsoft.UI.Xaml.Automation.AnnotationType, IntPtr*, int>**)ThisPtr)[6](ThisPtr, type, &__retval));
                global::System.GC.KeepAlive(_obj);
                return __retval;
            }

            public static unsafe IntPtr CreateWithPeerParameter(IObjectReference _obj, global::Microsoft.UI.Xaml.Automation.AnnotationType type, AutomationPeer peer)
            {
                var ThisPtr = _obj.ThisPtr;

                ObjectReferenceValue __peer = default;
                IntPtr __retval = default;
                try
                {
                    __peer = global::ABI.Microsoft.UI.Xaml.Automation.Peers.AutomationPeer.CreateMarshaler2(peer);
                    global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::Microsoft.UI.Xaml.Automation.AnnotationType, IntPtr, IntPtr*, int>**)ThisPtr)[7](ThisPtr, type, MarshalInspectable<object>.GetAbi(__peer), &__retval));
                    global::System.GC.KeepAlive(_obj);
                    return __retval;
                }
                finally
                {
                    MarshalInspectable<object>.DisposeMarshaler(__peer);
                }
            }
        }

        private static volatile IObjectReference ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IAutomationPeerAnnotationFactory;
        private static IObjectReference _objRef_global__Microsoft_UI_Xaml_Automation_Peers_IAutomationPeerAnnotationFactory
        {
            get
            { 
                var factory = ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IAutomationPeerAnnotationFactory;
                if (factory != null && factory.IsInCurrentContext)
                {
                    return factory;
                }
                else
                {
                    return ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IAutomationPeerAnnotationFactory = ActivationFactory.Get("Microsoft.UI.Xaml.Automation.Peers.AutomationPeerAnnotation", global::ABI.Microsoft.UI.Xaml.Automation.Peers.IAutomationPeerAnnotationFactoryMethods.IID);
                }
            }
        }

        public AutomationPeerAnnotation(global::Microsoft.UI.Xaml.Automation.AnnotationType type) :base(global::WinRT.DerivedComposed.Instance)
        { 
        IntPtr ptr = (_IAutomationPeerAnnotationFactoryMethods.CreateInstance(_objRef_global__Microsoft_UI_Xaml_Automation_Peers_IAutomationPeerAnnotationFactory, type)); 
        try 
        { 
        _inner = ComWrappersSupport.GetObjectReferenceForInterface(ptr, global::ABI.Microsoft.UI.Xaml.Automation.Peers.IAutomationPeerAnnotationMethods.IID, false); 

        } 
        finally 
        { 
        MarshalInspectable<object>.DisposeAbi(ptr); 
        }

        ComWrappersSupport.RegisterObjectForInterface(this, ThisPtr);
        ComWrappersHelper.Init(_inner, false);
        }

        public AutomationPeerAnnotation(global::Microsoft.UI.Xaml.Automation.AnnotationType type, AutomationPeer peer) :base(global::WinRT.DerivedComposed.Instance)
        { 
        IntPtr ptr = (_IAutomationPeerAnnotationFactoryMethods.CreateWithPeerParameter(_objRef_global__Microsoft_UI_Xaml_Automation_Peers_IAutomationPeerAnnotationFactory, type, peer)); 
        try 
        { 
        _inner = ComWrappersSupport.GetObjectReferenceForInterface(ptr, global::ABI.Microsoft.UI.Xaml.Automation.Peers.IAutomationPeerAnnotationMethods.IID, false); 

        } 
        finally 
        { 
        MarshalInspectable<object>.DisposeAbi(ptr); 
        }

        ComWrappersSupport.RegisterObjectForInterface(this, ThisPtr);
        ComWrappersHelper.Init(_inner, false);
        }

        public static I As<I>() => ActivationFactory.Get("Microsoft.UI.Xaml.Automation.Peers.AutomationPeerAnnotation").AsInterface<I>();

        private static volatile IObjectReference ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IAutomationPeerAnnotationStatics;
        private static IObjectReference _objRef_global__Microsoft_UI_Xaml_Automation_Peers_IAutomationPeerAnnotationStatics
        {
            get
            { 
                var factory = ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IAutomationPeerAnnotationStatics;
                if (factory != null && factory.IsInCurrentContext)
                {
                    return factory;
                }
                else
                {
                    return ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IAutomationPeerAnnotationStatics = ActivationFactory.Get("Microsoft.UI.Xaml.Automation.Peers.AutomationPeerAnnotation", global::ABI.Microsoft.UI.Xaml.Automation.Peers.IAutomationPeerAnnotationStaticsMethods.IID);
                }
            }
        }

        public static global::Microsoft.UI.Xaml.DependencyProperty PeerProperty => global::ABI.Microsoft.UI.Xaml.Automation.Peers.IAutomationPeerAnnotationStaticsMethods.get_PeerProperty(_objRef_global__Microsoft_UI_Xaml_Automation_Peers_IAutomationPeerAnnotationStatics);

        public static global::Microsoft.UI.Xaml.DependencyProperty TypeProperty => global::ABI.Microsoft.UI.Xaml.Automation.Peers.IAutomationPeerAnnotationStaticsMethods.get_TypeProperty(_objRef_global__Microsoft_UI_Xaml_Automation_Peers_IAutomationPeerAnnotationStatics);

        public static new AutomationPeerAnnotation FromAbi(IntPtr thisPtr)
        {
            if (thisPtr == IntPtr.Zero) return null;
            return MarshalInspectable<AutomationPeerAnnotation>.FromAbi(thisPtr);
        }

        internal AutomationPeerAnnotation(IObjectReference objRef)
            : base(global::WinRT.DerivedComposed.Instance)

        {
            _inner = objRef.As(global::ABI.Microsoft.UI.Xaml.Automation.Peers.IAutomationPeerAnnotationMethods.IID);

        }


        public static bool operator ==(AutomationPeerAnnotation x, AutomationPeerAnnotation y) => (x?.ThisPtr ?? IntPtr.Zero) == (y?.ThisPtr ?? IntPtr.Zero);
        public static bool operator !=(AutomationPeerAnnotation x, AutomationPeerAnnotation y) => !(x == y);
        public bool Equals(AutomationPeerAnnotation other) => this == other;
        public override bool Equals(object obj) => obj is AutomationPeerAnnotation that && this == that;
        public override int GetHashCode() => ThisPtr.GetHashCode();


        bool IWinRTObject.HasUnwrappableNativeObject => true;
        IObjectReference IWinRTObject.NativeObject => _inner;

        private struct InterfaceTag<I>{};


        public AutomationPeer Peer
        {
            get => global::ABI.Microsoft.UI.Xaml.Automation.Peers.IAutomationPeerAnnotationMethods.get_Peer(_objRef_global__Microsoft_UI_Xaml_Automation_Peers_IAutomationPeerAnnotation);
            set => global::ABI.Microsoft.UI.Xaml.Automation.Peers.IAutomationPeerAnnotationMethods.set_Peer(_objRef_global__Microsoft_UI_Xaml_Automation_Peers_IAutomationPeerAnnotation, value);
        }

        public global::Microsoft.UI.Xaml.Automation.AnnotationType Type
        {
            get => global::ABI.Microsoft.UI.Xaml.Automation.Peers.IAutomationPeerAnnotationMethods.get_Type(_objRef_global__Microsoft_UI_Xaml_Automation_Peers_IAutomationPeerAnnotation);
            set => global::ABI.Microsoft.UI.Xaml.Automation.Peers.IAutomationPeerAnnotationMethods.set_Type(_objRef_global__Microsoft_UI_Xaml_Automation_Peers_IAutomationPeerAnnotation, value);
        }

        protected override bool IsOverridableInterface(Guid iid) => base.IsOverridableInterface(iid);

        global::System.Runtime.InteropServices.CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(ref Guid iid, out IntPtr ppv)
        {
            ppv = IntPtr.Zero;
            if (IsOverridableInterface(iid) || global::WinRT.Interop.IID.IID_IInspectable == iid)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
            }

            if (((IWinRTObject)this).NativeObject.TryAs(iid, out ppv) >= 0)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.Handled;
            }

            return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
        }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")][global::WinRT.WinRTExposedType(typeof(global::WinRT.EnumTypeDetails<AutomationStructureChangeType>))][global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    public enum AutomationStructureChangeType : int
    {
        ChildAdded = unchecked((int)0),
        ChildRemoved = unchecked((int)0x1),
        ChildrenInvalidated = unchecked((int)0x2),
        ChildrenBulkAdded = unchecked((int)0x3),
        ChildrenBulkRemoved = unchecked((int)0x4),
        ChildrenReordered = unchecked((int)0x5),
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")]
    [global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Automation.Peers.BreadcrumbBarItemAutomationPeer))]
    [global::ABI.Microsoft.UI.Xaml.Automation.Peers.BreadcrumbBarItemAutomationPeerRcwFactory]
    [global::WinRT.ProjectedRuntimeClass(typeof(IBreadcrumbBarItemAutomationPeer))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.XamlContract), 65536u)]
    public class BreadcrumbBarItemAutomationPeer : FrameworkElementAutomationPeer, global::Microsoft.UI.Xaml.Automation.Provider.IInvokeProvider, global::System.Runtime.InteropServices.ICustomQueryInterface, IWinRTObject, IEquatable<BreadcrumbBarItemAutomationPeer>
    {
        private IntPtr ThisPtr => _inner == null ? (((IWinRTObject)this).NativeObject).ThisPtr : _inner.ThisPtr;

        private readonly IObjectReference _inner = null;




        private volatile IObjectReference ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IBreadcrumbBarItemAutomationPeer;
        private IObjectReference Make___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IBreadcrumbBarItemAutomationPeer()
        {
            global::System.Threading.Interlocked.CompareExchange(ref ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IBreadcrumbBarItemAutomationPeer, ((IWinRTObject)this).NativeObject.As<IUnknownVftbl>(global::ABI.Microsoft.UI.Xaml.Automation.Peers.IBreadcrumbBarItemAutomationPeerMethods.IID), null);
            return ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IBreadcrumbBarItemAutomationPeer;
        }
        private IObjectReference _objRef_global__Microsoft_UI_Xaml_Automation_Peers_IBreadcrumbBarItemAutomationPeer => ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IBreadcrumbBarItemAutomationPeer ?? Make___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IBreadcrumbBarItemAutomationPeer();

        private volatile IObjectReference ___objRef_global__Microsoft_UI_Xaml_Automation_Provider_IInvokeProvider;
        private IObjectReference Make___objRef_global__Microsoft_UI_Xaml_Automation_Provider_IInvokeProvider()
        {
            global::System.Threading.Interlocked.CompareExchange(ref ___objRef_global__Microsoft_UI_Xaml_Automation_Provider_IInvokeProvider, ((IWinRTObject)this).NativeObject.As<IUnknownVftbl>(global::ABI.Microsoft.UI.Xaml.Automation.Provider.IInvokeProviderMethods.IID), null);
            return ___objRef_global__Microsoft_UI_Xaml_Automation_Provider_IInvokeProvider;
        }
        private IObjectReference _objRef_global__Microsoft_UI_Xaml_Automation_Provider_IInvokeProvider => ___objRef_global__Microsoft_UI_Xaml_Automation_Provider_IInvokeProvider ?? Make___objRef_global__Microsoft_UI_Xaml_Automation_Provider_IInvokeProvider();



        private static class _IBreadcrumbBarItemAutomationPeerFactoryMethods
        {
            public static unsafe IntPtr CreateInstance(IObjectReference _obj, global::Microsoft.UI.Xaml.Controls.BreadcrumbBarItem owner, object baseInterface, out IntPtr innerInterface)
            {
                var ThisPtr = _obj.ThisPtr;

                ObjectReferenceValue __owner = default;
                ObjectReferenceValue __baseInterface = default;
                IntPtr __innerInterface = default;
                IntPtr __retval = default;
                try
                {
                    __owner = global::ABI.Microsoft.UI.Xaml.Controls.BreadcrumbBarItem.CreateMarshaler2(owner);
                    __baseInterface = MarshalInspectable<object>.CreateMarshaler2(baseInterface);
                    global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, IntPtr, IntPtr*, IntPtr*, int>**)ThisPtr)[6](ThisPtr, MarshalInspectable<object>.GetAbi(__owner), MarshalInspectable<object>.GetAbi(__baseInterface), &__innerInterface, &__retval));
                    global::System.GC.KeepAlive(_obj);
                    innerInterface = __innerInterface;
                    return __retval;
                }
                finally
                {
                    MarshalInspectable<object>.DisposeMarshaler(__owner);
                    MarshalInspectable<object>.DisposeMarshaler(__baseInterface);
                }
            }
        }

        private static volatile IObjectReference ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IBreadcrumbBarItemAutomationPeerFactory;
        private static IObjectReference _objRef_global__Microsoft_UI_Xaml_Automation_Peers_IBreadcrumbBarItemAutomationPeerFactory
        {
            get
            { 
                var factory = ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IBreadcrumbBarItemAutomationPeerFactory;
                if (factory != null && factory.IsInCurrentContext)
                {
                    return factory;
                }
                else
                {
                    return ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IBreadcrumbBarItemAutomationPeerFactory = ActivationFactory.Get("Microsoft.UI.Xaml.Automation.Peers.BreadcrumbBarItemAutomationPeer", global::ABI.Microsoft.UI.Xaml.Automation.Peers.IBreadcrumbBarItemAutomationPeerFactoryMethods.IID);
                }
            }
        }

        public BreadcrumbBarItemAutomationPeer(global::Microsoft.UI.Xaml.Controls.BreadcrumbBarItem owner):base(global::WinRT.DerivedComposed.Instance)
        {
            bool isAggregation = this.GetType() != typeof(BreadcrumbBarItemAutomationPeer);
            object baseInspectable = isAggregation ? this : null;
            IntPtr composed = _IBreadcrumbBarItemAutomationPeerFactoryMethods.CreateInstance(_objRef_global__Microsoft_UI_Xaml_Automation_Peers_IBreadcrumbBarItemAutomationPeerFactory, owner, baseInspectable, out IntPtr inner);
            try
            {
                ComWrappersHelper.Init(isAggregation, this, composed, inner, global::ABI.Microsoft.UI.Xaml.Automation.Peers.IBreadcrumbBarItemAutomationPeerMethods.IID, out _inner);

            }
            finally
            {
                Marshal.Release(inner);   
            }
        }

        public static new BreadcrumbBarItemAutomationPeer FromAbi(IntPtr thisPtr)
        {
            if (thisPtr == IntPtr.Zero) return null;
            return MarshalInspectable<BreadcrumbBarItemAutomationPeer>.FromAbi(thisPtr);
        }

        protected internal BreadcrumbBarItemAutomationPeer(IObjectReference objRef)
            : base(global::WinRT.DerivedComposed.Instance)

        {
            _inner = objRef.As(global::ABI.Microsoft.UI.Xaml.Automation.Peers.IBreadcrumbBarItemAutomationPeerMethods.IID);

        }


        public static bool operator ==(BreadcrumbBarItemAutomationPeer x, BreadcrumbBarItemAutomationPeer y) => (x?.ThisPtr ?? IntPtr.Zero) == (y?.ThisPtr ?? IntPtr.Zero);
        public static bool operator !=(BreadcrumbBarItemAutomationPeer x, BreadcrumbBarItemAutomationPeer y) => !(x == y);
        public bool Equals(BreadcrumbBarItemAutomationPeer other) => this == other;
        public override bool Equals(object obj) => obj is BreadcrumbBarItemAutomationPeer that && this == that;
        public override int GetHashCode() => ThisPtr.GetHashCode();


        protected BreadcrumbBarItemAutomationPeer(global::WinRT.DerivedComposed _):base(_)
        {

        }
        bool IWinRTObject.HasUnwrappableNativeObject => this.GetType() == typeof(BreadcrumbBarItemAutomationPeer);
        IObjectReference IWinRTObject.NativeObject => _inner;

        private struct InterfaceTag<I>{};


        public void Invoke() => global::ABI.Microsoft.UI.Xaml.Automation.Provider.IInvokeProviderMethods.Invoke(_objRef_global__Microsoft_UI_Xaml_Automation_Provider_IInvokeProvider);

        protected override bool IsOverridableInterface(Guid iid) => base.IsOverridableInterface(iid);

        global::System.Runtime.InteropServices.CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(ref Guid iid, out IntPtr ppv)
        {
            ppv = IntPtr.Zero;
            if (IsOverridableInterface(iid) || global::WinRT.Interop.IID.IID_IInspectable == iid)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
            }

            if (((IWinRTObject)this).NativeObject.TryAs(iid, out ppv) >= 0)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.Handled;
            }

            return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
        }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")]
    [global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Automation.Peers.ButtonAutomationPeer))]
    [global::ABI.Microsoft.UI.Xaml.Automation.Peers.ButtonAutomationPeerRcwFactory]
    [global::WinRT.ProjectedRuntimeClass(typeof(IButtonAutomationPeer))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    public class ButtonAutomationPeer : ButtonBaseAutomationPeer, global::Microsoft.UI.Xaml.Automation.Provider.IInvokeProvider, global::System.Runtime.InteropServices.ICustomQueryInterface, IWinRTObject, IEquatable<ButtonAutomationPeer>
    {
        private IntPtr ThisPtr => _inner == null ? (((IWinRTObject)this).NativeObject).ThisPtr : _inner.ThisPtr;

        private readonly IObjectReference _inner = null;




        private volatile IObjectReference ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IButtonAutomationPeer;
        private IObjectReference Make___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IButtonAutomationPeer()
        {
            global::System.Threading.Interlocked.CompareExchange(ref ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IButtonAutomationPeer, ((IWinRTObject)this).NativeObject.As<IUnknownVftbl>(global::ABI.Microsoft.UI.Xaml.Automation.Peers.IButtonAutomationPeerMethods.IID), null);
            return ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IButtonAutomationPeer;
        }
        private IObjectReference _objRef_global__Microsoft_UI_Xaml_Automation_Peers_IButtonAutomationPeer => ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IButtonAutomationPeer ?? Make___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IButtonAutomationPeer();

        private volatile IObjectReference ___objRef_global__Microsoft_UI_Xaml_Automation_Provider_IInvokeProvider;
        private IObjectReference Make___objRef_global__Microsoft_UI_Xaml_Automation_Provider_IInvokeProvider()
        {
            global::System.Threading.Interlocked.CompareExchange(ref ___objRef_global__Microsoft_UI_Xaml_Automation_Provider_IInvokeProvider, ((IWinRTObject)this).NativeObject.As<IUnknownVftbl>(global::ABI.Microsoft.UI.Xaml.Automation.Provider.IInvokeProviderMethods.IID), null);
            return ___objRef_global__Microsoft_UI_Xaml_Automation_Provider_IInvokeProvider;
        }
        private IObjectReference _objRef_global__Microsoft_UI_Xaml_Automation_Provider_IInvokeProvider => ___objRef_global__Microsoft_UI_Xaml_Automation_Provider_IInvokeProvider ?? Make___objRef_global__Microsoft_UI_Xaml_Automation_Provider_IInvokeProvider();



        private static class _IButtonAutomationPeerFactoryMethods
        {
            public static unsafe IntPtr CreateInstanceWithOwner(IObjectReference _obj, global::Microsoft.UI.Xaml.Controls.Button owner, object baseInterface, out IntPtr innerInterface)
            {
                var ThisPtr = _obj.ThisPtr;

                ObjectReferenceValue __owner = default;
                ObjectReferenceValue __baseInterface = default;
                IntPtr __innerInterface = default;
                IntPtr __retval = default;
                try
                {
                    __owner = global::ABI.Microsoft.UI.Xaml.Controls.Button.CreateMarshaler2(owner);
                    __baseInterface = MarshalInspectable<object>.CreateMarshaler2(baseInterface);
                    global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, IntPtr, IntPtr*, IntPtr*, int>**)ThisPtr)[6](ThisPtr, MarshalInspectable<object>.GetAbi(__owner), MarshalInspectable<object>.GetAbi(__baseInterface), &__innerInterface, &__retval));
                    global::System.GC.KeepAlive(_obj);
                    innerInterface = __innerInterface;
                    return __retval;
                }
                finally
                {
                    MarshalInspectable<object>.DisposeMarshaler(__owner);
                    MarshalInspectable<object>.DisposeMarshaler(__baseInterface);
                }
            }
        }

        private static volatile IObjectReference ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IButtonAutomationPeerFactory;
        private static IObjectReference _objRef_global__Microsoft_UI_Xaml_Automation_Peers_IButtonAutomationPeerFactory
        {
            get
            { 
                var factory = ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IButtonAutomationPeerFactory;
                if (factory != null && factory.IsInCurrentContext)
                {
                    return factory;
                }
                else
                {
                    return ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IButtonAutomationPeerFactory = ActivationFactory.Get("Microsoft.UI.Xaml.Automation.Peers.ButtonAutomationPeer", global::ABI.Microsoft.UI.Xaml.Automation.Peers.IButtonAutomationPeerFactoryMethods.IID);
                }
            }
        }

        public ButtonAutomationPeer(global::Microsoft.UI.Xaml.Controls.Button owner):base(global::WinRT.DerivedComposed.Instance)
        {
            bool isAggregation = this.GetType() != typeof(ButtonAutomationPeer);
            object baseInspectable = isAggregation ? this : null;
            IntPtr composed = _IButtonAutomationPeerFactoryMethods.CreateInstanceWithOwner(_objRef_global__Microsoft_UI_Xaml_Automation_Peers_IButtonAutomationPeerFactory, owner, baseInspectable, out IntPtr inner);
            try
            {
                ComWrappersHelper.Init(isAggregation, this, composed, inner, global::ABI.Microsoft.UI.Xaml.Automation.Peers.IButtonAutomationPeerMethods.IID, out _inner);

            }
            finally
            {
                Marshal.Release(inner);   
            }
        }

        public static new ButtonAutomationPeer FromAbi(IntPtr thisPtr)
        {
            if (thisPtr == IntPtr.Zero) return null;
            return MarshalInspectable<ButtonAutomationPeer>.FromAbi(thisPtr);
        }

        protected internal ButtonAutomationPeer(IObjectReference objRef)
            : base(global::WinRT.DerivedComposed.Instance)

        {
            _inner = objRef.As(global::ABI.Microsoft.UI.Xaml.Automation.Peers.IButtonAutomationPeerMethods.IID);

        }


        public static bool operator ==(ButtonAutomationPeer x, ButtonAutomationPeer y) => (x?.ThisPtr ?? IntPtr.Zero) == (y?.ThisPtr ?? IntPtr.Zero);
        public static bool operator !=(ButtonAutomationPeer x, ButtonAutomationPeer y) => !(x == y);
        public bool Equals(ButtonAutomationPeer other) => this == other;
        public override bool Equals(object obj) => obj is ButtonAutomationPeer that && this == that;
        public override int GetHashCode() => ThisPtr.GetHashCode();


        protected ButtonAutomationPeer(global::WinRT.DerivedComposed _):base(_)
        {

        }
        bool IWinRTObject.HasUnwrappableNativeObject => this.GetType() == typeof(ButtonAutomationPeer);
        IObjectReference IWinRTObject.NativeObject => _inner;

        private struct InterfaceTag<I>{};


        public void Invoke() => global::ABI.Microsoft.UI.Xaml.Automation.Provider.IInvokeProviderMethods.Invoke(_objRef_global__Microsoft_UI_Xaml_Automation_Provider_IInvokeProvider);

        protected override bool IsOverridableInterface(Guid iid) => base.IsOverridableInterface(iid);

        global::System.Runtime.InteropServices.CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(ref Guid iid, out IntPtr ppv)
        {
            ppv = IntPtr.Zero;
            if (IsOverridableInterface(iid) || global::WinRT.Interop.IID.IID_IInspectable == iid)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
            }

            if (((IWinRTObject)this).NativeObject.TryAs(iid, out ppv) >= 0)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.Handled;
            }

            return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
        }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")]
    [global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Automation.Peers.ButtonBaseAutomationPeer))]
    [global::ABI.Microsoft.UI.Xaml.Automation.Peers.ButtonBaseAutomationPeerRcwFactory]
    [global::WinRT.ProjectedRuntimeClass(typeof(IButtonBaseAutomationPeer))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    public class ButtonBaseAutomationPeer : FrameworkElementAutomationPeer, global::System.Runtime.InteropServices.ICustomQueryInterface, IWinRTObject, IEquatable<ButtonBaseAutomationPeer>
    {
        private IntPtr ThisPtr => _inner == null ? (((IWinRTObject)this).NativeObject).ThisPtr : _inner.ThisPtr;

        private readonly IObjectReference _inner = null;




        private volatile IObjectReference ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IButtonBaseAutomationPeer;
        private IObjectReference Make___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IButtonBaseAutomationPeer()
        {
            global::System.Threading.Interlocked.CompareExchange(ref ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IButtonBaseAutomationPeer, ((IWinRTObject)this).NativeObject.As<IUnknownVftbl>(global::ABI.Microsoft.UI.Xaml.Automation.Peers.IButtonBaseAutomationPeerMethods.IID), null);
            return ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IButtonBaseAutomationPeer;
        }
        private IObjectReference _objRef_global__Microsoft_UI_Xaml_Automation_Peers_IButtonBaseAutomationPeer => ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IButtonBaseAutomationPeer ?? Make___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IButtonBaseAutomationPeer();



        private static class _IButtonBaseAutomationPeerFactoryMethods
        {
            public static unsafe IntPtr CreateInstanceWithOwner(IObjectReference _obj, global::Microsoft.UI.Xaml.Controls.Primitives.ButtonBase owner, object baseInterface, out IntPtr innerInterface)
            {
                var ThisPtr = _obj.ThisPtr;

                ObjectReferenceValue __owner = default;
                ObjectReferenceValue __baseInterface = default;
                IntPtr __innerInterface = default;
                IntPtr __retval = default;
                try
                {
                    __owner = global::ABI.Microsoft.UI.Xaml.Controls.Primitives.ButtonBase.CreateMarshaler2(owner);
                    __baseInterface = MarshalInspectable<object>.CreateMarshaler2(baseInterface);
                    global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, IntPtr, IntPtr*, IntPtr*, int>**)ThisPtr)[6](ThisPtr, MarshalInspectable<object>.GetAbi(__owner), MarshalInspectable<object>.GetAbi(__baseInterface), &__innerInterface, &__retval));
                    global::System.GC.KeepAlive(_obj);
                    innerInterface = __innerInterface;
                    return __retval;
                }
                finally
                {
                    MarshalInspectable<object>.DisposeMarshaler(__owner);
                    MarshalInspectable<object>.DisposeMarshaler(__baseInterface);
                }
            }
        }

        private static volatile IObjectReference ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IButtonBaseAutomationPeerFactory;
        private static IObjectReference _objRef_global__Microsoft_UI_Xaml_Automation_Peers_IButtonBaseAutomationPeerFactory
        {
            get
            { 
                var factory = ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IButtonBaseAutomationPeerFactory;
                if (factory != null && factory.IsInCurrentContext)
                {
                    return factory;
                }
                else
                {
                    return ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IButtonBaseAutomationPeerFactory = ActivationFactory.Get("Microsoft.UI.Xaml.Automation.Peers.ButtonBaseAutomationPeer", global::ABI.Microsoft.UI.Xaml.Automation.Peers.IButtonBaseAutomationPeerFactoryMethods.IID);
                }
            }
        }

        protected ButtonBaseAutomationPeer(global::Microsoft.UI.Xaml.Controls.Primitives.ButtonBase owner):base(global::WinRT.DerivedComposed.Instance)
        {
            bool isAggregation = this.GetType() != typeof(ButtonBaseAutomationPeer);
            object baseInspectable = isAggregation ? this : null;
            IntPtr composed = _IButtonBaseAutomationPeerFactoryMethods.CreateInstanceWithOwner(_objRef_global__Microsoft_UI_Xaml_Automation_Peers_IButtonBaseAutomationPeerFactory, owner, baseInspectable, out IntPtr inner);
            try
            {
                ComWrappersHelper.Init(isAggregation, this, composed, inner, global::ABI.Microsoft.UI.Xaml.Automation.Peers.IButtonBaseAutomationPeerMethods.IID, out _inner);

            }
            finally
            {
                Marshal.Release(inner);   
            }
        }

        public static new ButtonBaseAutomationPeer FromAbi(IntPtr thisPtr)
        {
            if (thisPtr == IntPtr.Zero) return null;
            return MarshalInspectable<ButtonBaseAutomationPeer>.FromAbi(thisPtr);
        }

        protected internal ButtonBaseAutomationPeer(IObjectReference objRef)
            : base(global::WinRT.DerivedComposed.Instance)

        {
            _inner = objRef.As(global::ABI.Microsoft.UI.Xaml.Automation.Peers.IButtonBaseAutomationPeerMethods.IID);

        }


        public static bool operator ==(ButtonBaseAutomationPeer x, ButtonBaseAutomationPeer y) => (x?.ThisPtr ?? IntPtr.Zero) == (y?.ThisPtr ?? IntPtr.Zero);
        public static bool operator !=(ButtonBaseAutomationPeer x, ButtonBaseAutomationPeer y) => !(x == y);
        public bool Equals(ButtonBaseAutomationPeer other) => this == other;
        public override bool Equals(object obj) => obj is ButtonBaseAutomationPeer that && this == that;
        public override int GetHashCode() => ThisPtr.GetHashCode();


        protected ButtonBaseAutomationPeer(global::WinRT.DerivedComposed _):base(_)
        {

        }
        bool IWinRTObject.HasUnwrappableNativeObject => this.GetType() == typeof(ButtonBaseAutomationPeer);
        IObjectReference IWinRTObject.NativeObject => _inner;

        private struct InterfaceTag<I>{};


        protected override bool IsOverridableInterface(Guid iid) => base.IsOverridableInterface(iid);

        global::System.Runtime.InteropServices.CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(ref Guid iid, out IntPtr ppv)
        {
            ppv = IntPtr.Zero;
            if (IsOverridableInterface(iid) || global::WinRT.Interop.IID.IID_IInspectable == iid)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
            }

            if (((IWinRTObject)this).NativeObject.TryAs(iid, out ppv) >= 0)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.Handled;
            }

            return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
        }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")]
    [global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Automation.Peers.CalendarDatePickerAutomationPeer))]
    [global::ABI.Microsoft.UI.Xaml.Automation.Peers.CalendarDatePickerAutomationPeerRcwFactory]
    [global::WinRT.ProjectedRuntimeClass(typeof(ICalendarDatePickerAutomationPeer))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    public class CalendarDatePickerAutomationPeer : FrameworkElementAutomationPeer, global::Microsoft.UI.Xaml.Automation.Provider.IInvokeProvider, global::Microsoft.UI.Xaml.Automation.Provider.IValueProvider, global::System.Runtime.InteropServices.ICustomQueryInterface, IWinRTObject, IEquatable<CalendarDatePickerAutomationPeer>
    {
        private IntPtr ThisPtr => _inner == null ? (((IWinRTObject)this).NativeObject).ThisPtr : _inner.ThisPtr;

        private readonly IObjectReference _inner = null;




        private volatile IObjectReference ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_ICalendarDatePickerAutomationPeer;
        private IObjectReference Make___objRef_global__Microsoft_UI_Xaml_Automation_Peers_ICalendarDatePickerAutomationPeer()
        {
            global::System.Threading.Interlocked.CompareExchange(ref ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_ICalendarDatePickerAutomationPeer, ((IWinRTObject)this).NativeObject.As<IUnknownVftbl>(global::ABI.Microsoft.UI.Xaml.Automation.Peers.ICalendarDatePickerAutomationPeerMethods.IID), null);
            return ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_ICalendarDatePickerAutomationPeer;
        }
        private IObjectReference _objRef_global__Microsoft_UI_Xaml_Automation_Peers_ICalendarDatePickerAutomationPeer => ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_ICalendarDatePickerAutomationPeer ?? Make___objRef_global__Microsoft_UI_Xaml_Automation_Peers_ICalendarDatePickerAutomationPeer();

        private volatile IObjectReference ___objRef_global__Microsoft_UI_Xaml_Automation_Provider_IInvokeProvider;
        private IObjectReference Make___objRef_global__Microsoft_UI_Xaml_Automation_Provider_IInvokeProvider()
        {
            global::System.Threading.Interlocked.CompareExchange(ref ___objRef_global__Microsoft_UI_Xaml_Automation_Provider_IInvokeProvider, ((IWinRTObject)this).NativeObject.As<IUnknownVftbl>(global::ABI.Microsoft.UI.Xaml.Automation.Provider.IInvokeProviderMethods.IID), null);
            return ___objRef_global__Microsoft_UI_Xaml_Automation_Provider_IInvokeProvider;
        }
        private IObjectReference _objRef_global__Microsoft_UI_Xaml_Automation_Provider_IInvokeProvider => ___objRef_global__Microsoft_UI_Xaml_Automation_Provider_IInvokeProvider ?? Make___objRef_global__Microsoft_UI_Xaml_Automation_Provider_IInvokeProvider();

        private volatile IObjectReference ___objRef_global__Microsoft_UI_Xaml_Automation_Provider_IValueProvider;
        private IObjectReference Make___objRef_global__Microsoft_UI_Xaml_Automation_Provider_IValueProvider()
        {
            global::System.Threading.Interlocked.CompareExchange(ref ___objRef_global__Microsoft_UI_Xaml_Automation_Provider_IValueProvider, ((IWinRTObject)this).NativeObject.As<IUnknownVftbl>(global::ABI.Microsoft.UI.Xaml.Automation.Provider.IValueProviderMethods.IID), null);
            return ___objRef_global__Microsoft_UI_Xaml_Automation_Provider_IValueProvider;
        }
        private IObjectReference _objRef_global__Microsoft_UI_Xaml_Automation_Provider_IValueProvider => ___objRef_global__Microsoft_UI_Xaml_Automation_Provider_IValueProvider ?? Make___objRef_global__Microsoft_UI_Xaml_Automation_Provider_IValueProvider();



        private static class _ICalendarDatePickerAutomationPeerFactoryMethods
        {
            public static unsafe IntPtr CreateInstanceWithOwner(IObjectReference _obj, global::Microsoft.UI.Xaml.Controls.CalendarDatePicker owner, object baseInterface, out IntPtr innerInterface)
            {
                var ThisPtr = _obj.ThisPtr;

                ObjectReferenceValue __owner = default;
                ObjectReferenceValue __baseInterface = default;
                IntPtr __innerInterface = default;
                IntPtr __retval = default;
                try
                {
                    __owner = global::ABI.Microsoft.UI.Xaml.Controls.CalendarDatePicker.CreateMarshaler2(owner);
                    __baseInterface = MarshalInspectable<object>.CreateMarshaler2(baseInterface);
                    global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, IntPtr, IntPtr*, IntPtr*, int>**)ThisPtr)[6](ThisPtr, MarshalInspectable<object>.GetAbi(__owner), MarshalInspectable<object>.GetAbi(__baseInterface), &__innerInterface, &__retval));
                    global::System.GC.KeepAlive(_obj);
                    innerInterface = __innerInterface;
                    return __retval;
                }
                finally
                {
                    MarshalInspectable<object>.DisposeMarshaler(__owner);
                    MarshalInspectable<object>.DisposeMarshaler(__baseInterface);
                }
            }
        }

        private static volatile IObjectReference ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_ICalendarDatePickerAutomationPeerFactory;
        private static IObjectReference _objRef_global__Microsoft_UI_Xaml_Automation_Peers_ICalendarDatePickerAutomationPeerFactory
        {
            get
            { 
                var factory = ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_ICalendarDatePickerAutomationPeerFactory;
                if (factory != null && factory.IsInCurrentContext)
                {
                    return factory;
                }
                else
                {
                    return ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_ICalendarDatePickerAutomationPeerFactory = ActivationFactory.Get("Microsoft.UI.Xaml.Automation.Peers.CalendarDatePickerAutomationPeer", global::ABI.Microsoft.UI.Xaml.Automation.Peers.ICalendarDatePickerAutomationPeerFactoryMethods.IID);
                }
            }
        }

        public CalendarDatePickerAutomationPeer(global::Microsoft.UI.Xaml.Controls.CalendarDatePicker owner):base(global::WinRT.DerivedComposed.Instance)
        {
            bool isAggregation = this.GetType() != typeof(CalendarDatePickerAutomationPeer);
            object baseInspectable = isAggregation ? this : null;
            IntPtr composed = _ICalendarDatePickerAutomationPeerFactoryMethods.CreateInstanceWithOwner(_objRef_global__Microsoft_UI_Xaml_Automation_Peers_ICalendarDatePickerAutomationPeerFactory, owner, baseInspectable, out IntPtr inner);
            try
            {
                ComWrappersHelper.Init(isAggregation, this, composed, inner, global::ABI.Microsoft.UI.Xaml.Automation.Peers.ICalendarDatePickerAutomationPeerMethods.IID, out _inner);

            }
            finally
            {
                Marshal.Release(inner);   
            }
        }

        public static new CalendarDatePickerAutomationPeer FromAbi(IntPtr thisPtr)
        {
            if (thisPtr == IntPtr.Zero) return null;
            return MarshalInspectable<CalendarDatePickerAutomationPeer>.FromAbi(thisPtr);
        }

        protected internal CalendarDatePickerAutomationPeer(IObjectReference objRef)
            : base(global::WinRT.DerivedComposed.Instance)

        {
            _inner = objRef.As(global::ABI.Microsoft.UI.Xaml.Automation.Peers.ICalendarDatePickerAutomationPeerMethods.IID);

        }


        public static bool operator ==(CalendarDatePickerAutomationPeer x, CalendarDatePickerAutomationPeer y) => (x?.ThisPtr ?? IntPtr.Zero) == (y?.ThisPtr ?? IntPtr.Zero);
        public static bool operator !=(CalendarDatePickerAutomationPeer x, CalendarDatePickerAutomationPeer y) => !(x == y);
        public bool Equals(CalendarDatePickerAutomationPeer other) => this == other;
        public override bool Equals(object obj) => obj is CalendarDatePickerAutomationPeer that && this == that;
        public override int GetHashCode() => ThisPtr.GetHashCode();


        protected CalendarDatePickerAutomationPeer(global::WinRT.DerivedComposed _):base(_)
        {

        }
        bool IWinRTObject.HasUnwrappableNativeObject => this.GetType() == typeof(CalendarDatePickerAutomationPeer);
        IObjectReference IWinRTObject.NativeObject => _inner;

        private struct InterfaceTag<I>{};


        public void Invoke() => global::ABI.Microsoft.UI.Xaml.Automation.Provider.IInvokeProviderMethods.Invoke(_objRef_global__Microsoft_UI_Xaml_Automation_Provider_IInvokeProvider);

        public void SetValue(string value) => global::ABI.Microsoft.UI.Xaml.Automation.Provider.IValueProviderMethods.SetValue(_objRef_global__Microsoft_UI_Xaml_Automation_Provider_IValueProvider, value);

        public bool IsReadOnly => global::ABI.Microsoft.UI.Xaml.Automation.Provider.IValueProviderMethods.get_IsReadOnly(_objRef_global__Microsoft_UI_Xaml_Automation_Provider_IValueProvider);

        public string Value => global::ABI.Microsoft.UI.Xaml.Automation.Provider.IValueProviderMethods.get_Value(_objRef_global__Microsoft_UI_Xaml_Automation_Provider_IValueProvider);

        protected override bool IsOverridableInterface(Guid iid) => base.IsOverridableInterface(iid);

        global::System.Runtime.InteropServices.CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(ref Guid iid, out IntPtr ppv)
        {
            ppv = IntPtr.Zero;
            if (IsOverridableInterface(iid) || global::WinRT.Interop.IID.IID_IInspectable == iid)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
            }

            if (((IWinRTObject)this).NativeObject.TryAs(iid, out ppv) >= 0)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.Handled;
            }

            return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
        }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")]
    [global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Automation.Peers.CheckBoxAutomationPeer))]
    [global::ABI.Microsoft.UI.Xaml.Automation.Peers.CheckBoxAutomationPeerRcwFactory]
    [global::WinRT.ProjectedRuntimeClass(typeof(ICheckBoxAutomationPeer))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    public class CheckBoxAutomationPeer : ToggleButtonAutomationPeer, global::System.Runtime.InteropServices.ICustomQueryInterface, IWinRTObject, IEquatable<CheckBoxAutomationPeer>
    {
        private IntPtr ThisPtr => _inner == null ? (((IWinRTObject)this).NativeObject).ThisPtr : _inner.ThisPtr;

        private readonly IObjectReference _inner = null;




        private volatile IObjectReference ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_ICheckBoxAutomationPeer;
        private IObjectReference Make___objRef_global__Microsoft_UI_Xaml_Automation_Peers_ICheckBoxAutomationPeer()
        {
            global::System.Threading.Interlocked.CompareExchange(ref ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_ICheckBoxAutomationPeer, ((IWinRTObject)this).NativeObject.As<IUnknownVftbl>(global::ABI.Microsoft.UI.Xaml.Automation.Peers.ICheckBoxAutomationPeerMethods.IID), null);
            return ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_ICheckBoxAutomationPeer;
        }
        private IObjectReference _objRef_global__Microsoft_UI_Xaml_Automation_Peers_ICheckBoxAutomationPeer => ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_ICheckBoxAutomationPeer ?? Make___objRef_global__Microsoft_UI_Xaml_Automation_Peers_ICheckBoxAutomationPeer();



        private static class _ICheckBoxAutomationPeerFactoryMethods
        {
            public static unsafe IntPtr CreateInstanceWithOwner(IObjectReference _obj, global::Microsoft.UI.Xaml.Controls.CheckBox owner, object baseInterface, out IntPtr innerInterface)
            {
                var ThisPtr = _obj.ThisPtr;

                ObjectReferenceValue __owner = default;
                ObjectReferenceValue __baseInterface = default;
                IntPtr __innerInterface = default;
                IntPtr __retval = default;
                try
                {
                    __owner = global::ABI.Microsoft.UI.Xaml.Controls.CheckBox.CreateMarshaler2(owner);
                    __baseInterface = MarshalInspectable<object>.CreateMarshaler2(baseInterface);
                    global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, IntPtr, IntPtr*, IntPtr*, int>**)ThisPtr)[6](ThisPtr, MarshalInspectable<object>.GetAbi(__owner), MarshalInspectable<object>.GetAbi(__baseInterface), &__innerInterface, &__retval));
                    global::System.GC.KeepAlive(_obj);
                    innerInterface = __innerInterface;
                    return __retval;
                }
                finally
                {
                    MarshalInspectable<object>.DisposeMarshaler(__owner);
                    MarshalInspectable<object>.DisposeMarshaler(__baseInterface);
                }
            }
        }

        private static volatile IObjectReference ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_ICheckBoxAutomationPeerFactory;
        private static IObjectReference _objRef_global__Microsoft_UI_Xaml_Automation_Peers_ICheckBoxAutomationPeerFactory
        {
            get
            { 
                var factory = ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_ICheckBoxAutomationPeerFactory;
                if (factory != null && factory.IsInCurrentContext)
                {
                    return factory;
                }
                else
                {
                    return ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_ICheckBoxAutomationPeerFactory = ActivationFactory.Get("Microsoft.UI.Xaml.Automation.Peers.CheckBoxAutomationPeer", global::ABI.Microsoft.UI.Xaml.Automation.Peers.ICheckBoxAutomationPeerFactoryMethods.IID);
                }
            }
        }

        public CheckBoxAutomationPeer(global::Microsoft.UI.Xaml.Controls.CheckBox owner):base(global::WinRT.DerivedComposed.Instance)
        {
            bool isAggregation = this.GetType() != typeof(CheckBoxAutomationPeer);
            object baseInspectable = isAggregation ? this : null;
            IntPtr composed = _ICheckBoxAutomationPeerFactoryMethods.CreateInstanceWithOwner(_objRef_global__Microsoft_UI_Xaml_Automation_Peers_ICheckBoxAutomationPeerFactory, owner, baseInspectable, out IntPtr inner);
            try
            {
                ComWrappersHelper.Init(isAggregation, this, composed, inner, global::ABI.Microsoft.UI.Xaml.Automation.Peers.ICheckBoxAutomationPeerMethods.IID, out _inner);

            }
            finally
            {
                Marshal.Release(inner);   
            }
        }

        public static new CheckBoxAutomationPeer FromAbi(IntPtr thisPtr)
        {
            if (thisPtr == IntPtr.Zero) return null;
            return MarshalInspectable<CheckBoxAutomationPeer>.FromAbi(thisPtr);
        }

        protected internal CheckBoxAutomationPeer(IObjectReference objRef)
            : base(global::WinRT.DerivedComposed.Instance)

        {
            _inner = objRef.As(global::ABI.Microsoft.UI.Xaml.Automation.Peers.ICheckBoxAutomationPeerMethods.IID);

        }


        public static bool operator ==(CheckBoxAutomationPeer x, CheckBoxAutomationPeer y) => (x?.ThisPtr ?? IntPtr.Zero) == (y?.ThisPtr ?? IntPtr.Zero);
        public static bool operator !=(CheckBoxAutomationPeer x, CheckBoxAutomationPeer y) => !(x == y);
        public bool Equals(CheckBoxAutomationPeer other) => this == other;
        public override bool Equals(object obj) => obj is CheckBoxAutomationPeer that && this == that;
        public override int GetHashCode() => ThisPtr.GetHashCode();


        protected CheckBoxAutomationPeer(global::WinRT.DerivedComposed _):base(_)
        {

        }
        bool IWinRTObject.HasUnwrappableNativeObject => this.GetType() == typeof(CheckBoxAutomationPeer);
        IObjectReference IWinRTObject.NativeObject => _inner;

        private struct InterfaceTag<I>{};


        protected override bool IsOverridableInterface(Guid iid) => base.IsOverridableInterface(iid);

        global::System.Runtime.InteropServices.CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(ref Guid iid, out IntPtr ppv)
        {
            ppv = IntPtr.Zero;
            if (IsOverridableInterface(iid) || global::WinRT.Interop.IID.IID_IInspectable == iid)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
            }

            if (((IWinRTObject)this).NativeObject.TryAs(iid, out ppv) >= 0)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.Handled;
            }

            return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
        }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")]
    [global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Automation.Peers.ColorPickerSliderAutomationPeer))]
    [global::ABI.Microsoft.UI.Xaml.Automation.Peers.ColorPickerSliderAutomationPeerRcwFactory]
    [global::WinRT.ProjectedRuntimeClass(typeof(IColorPickerSliderAutomationPeer))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.XamlContract), 65536u)]
    public class ColorPickerSliderAutomationPeer : SliderAutomationPeer, global::System.Runtime.InteropServices.ICustomQueryInterface, IWinRTObject, IEquatable<ColorPickerSliderAutomationPeer>
    {
        private IntPtr ThisPtr => _inner == null ? (((IWinRTObject)this).NativeObject).ThisPtr : _inner.ThisPtr;

        private readonly IObjectReference _inner = null;




        private volatile IObjectReference ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IColorPickerSliderAutomationPeer;
        private IObjectReference Make___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IColorPickerSliderAutomationPeer()
        {
            global::System.Threading.Interlocked.CompareExchange(ref ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IColorPickerSliderAutomationPeer, ((IWinRTObject)this).NativeObject.As<IUnknownVftbl>(global::ABI.Microsoft.UI.Xaml.Automation.Peers.IColorPickerSliderAutomationPeerMethods.IID), null);
            return ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IColorPickerSliderAutomationPeer;
        }
        private IObjectReference _objRef_global__Microsoft_UI_Xaml_Automation_Peers_IColorPickerSliderAutomationPeer => ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IColorPickerSliderAutomationPeer ?? Make___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IColorPickerSliderAutomationPeer();



        private static class _IColorPickerSliderAutomationPeerFactoryMethods
        {
            public static unsafe IntPtr CreateInstanceWithOwner(IObjectReference _obj, global::Microsoft.UI.Xaml.Controls.Primitives.ColorPickerSlider owner, object baseInterface, out IntPtr innerInterface)
            {
                var ThisPtr = _obj.ThisPtr;

                ObjectReferenceValue __owner = default;
                ObjectReferenceValue __baseInterface = default;
                IntPtr __innerInterface = default;
                IntPtr __retval = default;
                try
                {
                    __owner = global::ABI.Microsoft.UI.Xaml.Controls.Primitives.ColorPickerSlider.CreateMarshaler2(owner);
                    __baseInterface = MarshalInspectable<object>.CreateMarshaler2(baseInterface);
                    global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, IntPtr, IntPtr*, IntPtr*, int>**)ThisPtr)[6](ThisPtr, MarshalInspectable<object>.GetAbi(__owner), MarshalInspectable<object>.GetAbi(__baseInterface), &__innerInterface, &__retval));
                    global::System.GC.KeepAlive(_obj);
                    innerInterface = __innerInterface;
                    return __retval;
                }
                finally
                {
                    MarshalInspectable<object>.DisposeMarshaler(__owner);
                    MarshalInspectable<object>.DisposeMarshaler(__baseInterface);
                }
            }
        }

        private static volatile IObjectReference ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IColorPickerSliderAutomationPeerFactory;
        private static IObjectReference _objRef_global__Microsoft_UI_Xaml_Automation_Peers_IColorPickerSliderAutomationPeerFactory
        {
            get
            { 
                var factory = ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IColorPickerSliderAutomationPeerFactory;
                if (factory != null && factory.IsInCurrentContext)
                {
                    return factory;
                }
                else
                {
                    return ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IColorPickerSliderAutomationPeerFactory = ActivationFactory.Get("Microsoft.UI.Xaml.Automation.Peers.ColorPickerSliderAutomationPeer", global::ABI.Microsoft.UI.Xaml.Automation.Peers.IColorPickerSliderAutomationPeerFactoryMethods.IID);
                }
            }
        }

        public ColorPickerSliderAutomationPeer(global::Microsoft.UI.Xaml.Controls.Primitives.ColorPickerSlider owner):base(global::WinRT.DerivedComposed.Instance)
        {
            bool isAggregation = this.GetType() != typeof(ColorPickerSliderAutomationPeer);
            object baseInspectable = isAggregation ? this : null;
            IntPtr composed = _IColorPickerSliderAutomationPeerFactoryMethods.CreateInstanceWithOwner(_objRef_global__Microsoft_UI_Xaml_Automation_Peers_IColorPickerSliderAutomationPeerFactory, owner, baseInspectable, out IntPtr inner);
            try
            {
                ComWrappersHelper.Init(isAggregation, this, composed, inner, global::ABI.Microsoft.UI.Xaml.Automation.Peers.IColorPickerSliderAutomationPeerMethods.IID, out _inner);

            }
            finally
            {
                Marshal.Release(inner);   
            }
        }

        public static new ColorPickerSliderAutomationPeer FromAbi(IntPtr thisPtr)
        {
            if (thisPtr == IntPtr.Zero) return null;
            return MarshalInspectable<ColorPickerSliderAutomationPeer>.FromAbi(thisPtr);
        }

        protected internal ColorPickerSliderAutomationPeer(IObjectReference objRef)
            : base(global::WinRT.DerivedComposed.Instance)

        {
            _inner = objRef.As(global::ABI.Microsoft.UI.Xaml.Automation.Peers.IColorPickerSliderAutomationPeerMethods.IID);

        }


        public static bool operator ==(ColorPickerSliderAutomationPeer x, ColorPickerSliderAutomationPeer y) => (x?.ThisPtr ?? IntPtr.Zero) == (y?.ThisPtr ?? IntPtr.Zero);
        public static bool operator !=(ColorPickerSliderAutomationPeer x, ColorPickerSliderAutomationPeer y) => !(x == y);
        public bool Equals(ColorPickerSliderAutomationPeer other) => this == other;
        public override bool Equals(object obj) => obj is ColorPickerSliderAutomationPeer that && this == that;
        public override int GetHashCode() => ThisPtr.GetHashCode();


        protected ColorPickerSliderAutomationPeer(global::WinRT.DerivedComposed _):base(_)
        {

        }
        bool IWinRTObject.HasUnwrappableNativeObject => this.GetType() == typeof(ColorPickerSliderAutomationPeer);
        IObjectReference IWinRTObject.NativeObject => _inner;

        private struct InterfaceTag<I>{};


        protected override bool IsOverridableInterface(Guid iid) => base.IsOverridableInterface(iid);

        global::System.Runtime.InteropServices.CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(ref Guid iid, out IntPtr ppv)
        {
            ppv = IntPtr.Zero;
            if (IsOverridableInterface(iid) || global::WinRT.Interop.IID.IID_IInspectable == iid)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
            }

            if (((IWinRTObject)this).NativeObject.TryAs(iid, out ppv) >= 0)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.Handled;
            }

            return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
        }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")]
    [global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Automation.Peers.ColorSpectrumAutomationPeer))]
    [global::ABI.Microsoft.UI.Xaml.Automation.Peers.ColorSpectrumAutomationPeerRcwFactory]
    [global::WinRT.ProjectedRuntimeClass(typeof(IColorSpectrumAutomationPeer))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.XamlContract), 65536u)]
    public class ColorSpectrumAutomationPeer : FrameworkElementAutomationPeer, global::System.Runtime.InteropServices.ICustomQueryInterface, IWinRTObject, IEquatable<ColorSpectrumAutomationPeer>
    {
        private IntPtr ThisPtr => _inner == null ? (((IWinRTObject)this).NativeObject).ThisPtr : _inner.ThisPtr;

        private readonly IObjectReference _inner = null;




        private volatile IObjectReference ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IColorSpectrumAutomationPeer;
        private IObjectReference Make___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IColorSpectrumAutomationPeer()
        {
            global::System.Threading.Interlocked.CompareExchange(ref ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IColorSpectrumAutomationPeer, ((IWinRTObject)this).NativeObject.As<IUnknownVftbl>(global::ABI.Microsoft.UI.Xaml.Automation.Peers.IColorSpectrumAutomationPeerMethods.IID), null);
            return ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IColorSpectrumAutomationPeer;
        }
        private IObjectReference _objRef_global__Microsoft_UI_Xaml_Automation_Peers_IColorSpectrumAutomationPeer => ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IColorSpectrumAutomationPeer ?? Make___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IColorSpectrumAutomationPeer();



        private static class _IColorSpectrumAutomationPeerFactoryMethods
        {
            public static unsafe IntPtr CreateInstanceWithOwner(IObjectReference _obj, global::Microsoft.UI.Xaml.Controls.Primitives.ColorSpectrum owner, object baseInterface, out IntPtr innerInterface)
            {
                var ThisPtr = _obj.ThisPtr;

                ObjectReferenceValue __owner = default;
                ObjectReferenceValue __baseInterface = default;
                IntPtr __innerInterface = default;
                IntPtr __retval = default;
                try
                {
                    __owner = global::ABI.Microsoft.UI.Xaml.Controls.Primitives.ColorSpectrum.CreateMarshaler2(owner);
                    __baseInterface = MarshalInspectable<object>.CreateMarshaler2(baseInterface);
                    global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, IntPtr, IntPtr*, IntPtr*, int>**)ThisPtr)[6](ThisPtr, MarshalInspectable<object>.GetAbi(__owner), MarshalInspectable<object>.GetAbi(__baseInterface), &__innerInterface, &__retval));
                    global::System.GC.KeepAlive(_obj);
                    innerInterface = __innerInterface;
                    return __retval;
                }
                finally
                {
                    MarshalInspectable<object>.DisposeMarshaler(__owner);
                    MarshalInspectable<object>.DisposeMarshaler(__baseInterface);
                }
            }
        }

        private static volatile IObjectReference ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IColorSpectrumAutomationPeerFactory;
        private static IObjectReference _objRef_global__Microsoft_UI_Xaml_Automation_Peers_IColorSpectrumAutomationPeerFactory
        {
            get
            { 
                var factory = ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IColorSpectrumAutomationPeerFactory;
                if (factory != null && factory.IsInCurrentContext)
                {
                    return factory;
                }
                else
                {
                    return ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IColorSpectrumAutomationPeerFactory = ActivationFactory.Get("Microsoft.UI.Xaml.Automation.Peers.ColorSpectrumAutomationPeer", global::ABI.Microsoft.UI.Xaml.Automation.Peers.IColorSpectrumAutomationPeerFactoryMethods.IID);
                }
            }
        }

        public ColorSpectrumAutomationPeer(global::Microsoft.UI.Xaml.Controls.Primitives.ColorSpectrum owner):base(global::WinRT.DerivedComposed.Instance)
        {
            bool isAggregation = this.GetType() != typeof(ColorSpectrumAutomationPeer);
            object baseInspectable = isAggregation ? this : null;
            IntPtr composed = _IColorSpectrumAutomationPeerFactoryMethods.CreateInstanceWithOwner(_objRef_global__Microsoft_UI_Xaml_Automation_Peers_IColorSpectrumAutomationPeerFactory, owner, baseInspectable, out IntPtr inner);
            try
            {
                ComWrappersHelper.Init(isAggregation, this, composed, inner, global::ABI.Microsoft.UI.Xaml.Automation.Peers.IColorSpectrumAutomationPeerMethods.IID, out _inner);

            }
            finally
            {
                Marshal.Release(inner);   
            }
        }

        public static new ColorSpectrumAutomationPeer FromAbi(IntPtr thisPtr)
        {
            if (thisPtr == IntPtr.Zero) return null;
            return MarshalInspectable<ColorSpectrumAutomationPeer>.FromAbi(thisPtr);
        }

        protected internal ColorSpectrumAutomationPeer(IObjectReference objRef)
            : base(global::WinRT.DerivedComposed.Instance)

        {
            _inner = objRef.As(global::ABI.Microsoft.UI.Xaml.Automation.Peers.IColorSpectrumAutomationPeerMethods.IID);

        }


        public static bool operator ==(ColorSpectrumAutomationPeer x, ColorSpectrumAutomationPeer y) => (x?.ThisPtr ?? IntPtr.Zero) == (y?.ThisPtr ?? IntPtr.Zero);
        public static bool operator !=(ColorSpectrumAutomationPeer x, ColorSpectrumAutomationPeer y) => !(x == y);
        public bool Equals(ColorSpectrumAutomationPeer other) => this == other;
        public override bool Equals(object obj) => obj is ColorSpectrumAutomationPeer that && this == that;
        public override int GetHashCode() => ThisPtr.GetHashCode();


        protected ColorSpectrumAutomationPeer(global::WinRT.DerivedComposed _):base(_)
        {

        }
        bool IWinRTObject.HasUnwrappableNativeObject => this.GetType() == typeof(ColorSpectrumAutomationPeer);
        IObjectReference IWinRTObject.NativeObject => _inner;

        private struct InterfaceTag<I>{};


        protected override bool IsOverridableInterface(Guid iid) => base.IsOverridableInterface(iid);

        global::System.Runtime.InteropServices.CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(ref Guid iid, out IntPtr ppv)
        {
            ppv = IntPtr.Zero;
            if (IsOverridableInterface(iid) || global::WinRT.Interop.IID.IID_IInspectable == iid)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
            }

            if (((IWinRTObject)this).NativeObject.TryAs(iid, out ppv) >= 0)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.Handled;
            }

            return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
        }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")]
    [global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Automation.Peers.ComboBoxAutomationPeer))]
    [global::ABI.Microsoft.UI.Xaml.Automation.Peers.ComboBoxAutomationPeerRcwFactory]
    [global::WinRT.ProjectedRuntimeClass(typeof(IComboBoxAutomationPeer))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    public class ComboBoxAutomationPeer : SelectorAutomationPeer, global::Microsoft.UI.Xaml.Automation.Provider.IValueProvider, global::Microsoft.UI.Xaml.Automation.Provider.IExpandCollapseProvider, global::Microsoft.UI.Xaml.Automation.Provider.IWindowProvider, global::System.Runtime.InteropServices.ICustomQueryInterface, IWinRTObject, IEquatable<ComboBoxAutomationPeer>
    {
        private IntPtr ThisPtr => _inner == null ? (((IWinRTObject)this).NativeObject).ThisPtr : _inner.ThisPtr;

        private readonly IObjectReference _inner = null;




        private volatile IObjectReference ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IComboBoxAutomationPeer;
        private IObjectReference Make___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IComboBoxAutomationPeer()
        {
            global::System.Threading.Interlocked.CompareExchange(ref ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IComboBoxAutomationPeer, ((IWinRTObject)this).NativeObject.As<IUnknownVftbl>(global::ABI.Microsoft.UI.Xaml.Automation.Peers.IComboBoxAutomationPeerMethods.IID), null);
            return ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IComboBoxAutomationPeer;
        }
        private IObjectReference _objRef_global__Microsoft_UI_Xaml_Automation_Peers_IComboBoxAutomationPeer => ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IComboBoxAutomationPeer ?? Make___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IComboBoxAutomationPeer();

        private volatile IObjectReference ___objRef_global__Microsoft_UI_Xaml_Automation_Provider_IValueProvider;
        private IObjectReference Make___objRef_global__Microsoft_UI_Xaml_Automation_Provider_IValueProvider()
        {
            global::System.Threading.Interlocked.CompareExchange(ref ___objRef_global__Microsoft_UI_Xaml_Automation_Provider_IValueProvider, ((IWinRTObject)this).NativeObject.As<IUnknownVftbl>(global::ABI.Microsoft.UI.Xaml.Automation.Provider.IValueProviderMethods.IID), null);
            return ___objRef_global__Microsoft_UI_Xaml_Automation_Provider_IValueProvider;
        }
        private IObjectReference _objRef_global__Microsoft_UI_Xaml_Automation_Provider_IValueProvider => ___objRef_global__Microsoft_UI_Xaml_Automation_Provider_IValueProvider ?? Make___objRef_global__Microsoft_UI_Xaml_Automation_Provider_IValueProvider();

        private volatile IObjectReference ___objRef_global__Microsoft_UI_Xaml_Automation_Provider_IExpandCollapseProvider;
        private IObjectReference Make___objRef_global__Microsoft_UI_Xaml_Automation_Provider_IExpandCollapseProvider()
        {
            global::System.Threading.Interlocked.CompareExchange(ref ___objRef_global__Microsoft_UI_Xaml_Automation_Provider_IExpandCollapseProvider, ((IWinRTObject)this).NativeObject.As<IUnknownVftbl>(global::ABI.Microsoft.UI.Xaml.Automation.Provider.IExpandCollapseProviderMethods.IID), null);
            return ___objRef_global__Microsoft_UI_Xaml_Automation_Provider_IExpandCollapseProvider;
        }
        private IObjectReference _objRef_global__Microsoft_UI_Xaml_Automation_Provider_IExpandCollapseProvider => ___objRef_global__Microsoft_UI_Xaml_Automation_Provider_IExpandCollapseProvider ?? Make___objRef_global__Microsoft_UI_Xaml_Automation_Provider_IExpandCollapseProvider();

        private volatile IObjectReference ___objRef_global__Microsoft_UI_Xaml_Automation_Provider_IWindowProvider;
        private IObjectReference Make___objRef_global__Microsoft_UI_Xaml_Automation_Provider_IWindowProvider()
        {
            global::System.Threading.Interlocked.CompareExchange(ref ___objRef_global__Microsoft_UI_Xaml_Automation_Provider_IWindowProvider, ((IWinRTObject)this).NativeObject.As<IUnknownVftbl>(global::ABI.Microsoft.UI.Xaml.Automation.Provider.IWindowProviderMethods.IID), null);
            return ___objRef_global__Microsoft_UI_Xaml_Automation_Provider_IWindowProvider;
        }
        private IObjectReference _objRef_global__Microsoft_UI_Xaml_Automation_Provider_IWindowProvider => ___objRef_global__Microsoft_UI_Xaml_Automation_Provider_IWindowProvider ?? Make___objRef_global__Microsoft_UI_Xaml_Automation_Provider_IWindowProvider();



        private static class _IComboBoxAutomationPeerFactoryMethods
        {
            public static unsafe IntPtr CreateInstanceWithOwner(IObjectReference _obj, global::Microsoft.UI.Xaml.Controls.ComboBox owner, object baseInterface, out IntPtr innerInterface)
            {
                var ThisPtr = _obj.ThisPtr;

                ObjectReferenceValue __owner = default;
                ObjectReferenceValue __baseInterface = default;
                IntPtr __innerInterface = default;
                IntPtr __retval = default;
                try
                {
                    __owner = global::ABI.Microsoft.UI.Xaml.Controls.ComboBox.CreateMarshaler2(owner);
                    __baseInterface = MarshalInspectable<object>.CreateMarshaler2(baseInterface);
                    global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, IntPtr, IntPtr*, IntPtr*, int>**)ThisPtr)[6](ThisPtr, MarshalInspectable<object>.GetAbi(__owner), MarshalInspectable<object>.GetAbi(__baseInterface), &__innerInterface, &__retval));
                    global::System.GC.KeepAlive(_obj);
                    innerInterface = __innerInterface;
                    return __retval;
                }
                finally
                {
                    MarshalInspectable<object>.DisposeMarshaler(__owner);
                    MarshalInspectable<object>.DisposeMarshaler(__baseInterface);
                }
            }
        }

        private static volatile IObjectReference ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IComboBoxAutomationPeerFactory;
        private static IObjectReference _objRef_global__Microsoft_UI_Xaml_Automation_Peers_IComboBoxAutomationPeerFactory
        {
            get
            { 
                var factory = ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IComboBoxAutomationPeerFactory;
                if (factory != null && factory.IsInCurrentContext)
                {
                    return factory;
                }
                else
                {
                    return ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IComboBoxAutomationPeerFactory = ActivationFactory.Get("Microsoft.UI.Xaml.Automation.Peers.ComboBoxAutomationPeer", global::ABI.Microsoft.UI.Xaml.Automation.Peers.IComboBoxAutomationPeerFactoryMethods.IID);
                }
            }
        }

        public ComboBoxAutomationPeer(global::Microsoft.UI.Xaml.Controls.ComboBox owner):base(global::WinRT.DerivedComposed.Instance)
        {
            bool isAggregation = this.GetType() != typeof(ComboBoxAutomationPeer);
            object baseInspectable = isAggregation ? this : null;
            IntPtr composed = _IComboBoxAutomationPeerFactoryMethods.CreateInstanceWithOwner(_objRef_global__Microsoft_UI_Xaml_Automation_Peers_IComboBoxAutomationPeerFactory, owner, baseInspectable, out IntPtr inner);
            try
            {
                ComWrappersHelper.Init(isAggregation, this, composed, inner, global::ABI.Microsoft.UI.Xaml.Automation.Peers.IComboBoxAutomationPeerMethods.IID, out _inner);

            }
            finally
            {
                Marshal.Release(inner);   
            }
        }

        public static new ComboBoxAutomationPeer FromAbi(IntPtr thisPtr)
        {
            if (thisPtr == IntPtr.Zero) return null;
            return MarshalInspectable<ComboBoxAutomationPeer>.FromAbi(thisPtr);
        }

        protected internal ComboBoxAutomationPeer(IObjectReference objRef)
            : base(global::WinRT.DerivedComposed.Instance)

        {
            _inner = objRef.As(global::ABI.Microsoft.UI.Xaml.Automation.Peers.IComboBoxAutomationPeerMethods.IID);

        }


        public static bool operator ==(ComboBoxAutomationPeer x, ComboBoxAutomationPeer y) => (x?.ThisPtr ?? IntPtr.Zero) == (y?.ThisPtr ?? IntPtr.Zero);
        public static bool operator !=(ComboBoxAutomationPeer x, ComboBoxAutomationPeer y) => !(x == y);
        public bool Equals(ComboBoxAutomationPeer other) => this == other;
        public override bool Equals(object obj) => obj is ComboBoxAutomationPeer that && this == that;
        public override int GetHashCode() => ThisPtr.GetHashCode();


        protected ComboBoxAutomationPeer(global::WinRT.DerivedComposed _):base(_)
        {

        }
        bool IWinRTObject.HasUnwrappableNativeObject => this.GetType() == typeof(ComboBoxAutomationPeer);
        IObjectReference IWinRTObject.NativeObject => _inner;

        private struct InterfaceTag<I>{};


        public void SetValue(string value) => global::ABI.Microsoft.UI.Xaml.Automation.Provider.IValueProviderMethods.SetValue(_objRef_global__Microsoft_UI_Xaml_Automation_Provider_IValueProvider, value);

        public void Collapse() => global::ABI.Microsoft.UI.Xaml.Automation.Provider.IExpandCollapseProviderMethods.Collapse(_objRef_global__Microsoft_UI_Xaml_Automation_Provider_IExpandCollapseProvider);

        public void Expand() => global::ABI.Microsoft.UI.Xaml.Automation.Provider.IExpandCollapseProviderMethods.Expand(_objRef_global__Microsoft_UI_Xaml_Automation_Provider_IExpandCollapseProvider);

        public void Close() => global::ABI.Microsoft.UI.Xaml.Automation.Provider.IWindowProviderMethods.Close(_objRef_global__Microsoft_UI_Xaml_Automation_Provider_IWindowProvider);

        public void SetVisualState(global::Microsoft.UI.Xaml.Automation.WindowVisualState state) => global::ABI.Microsoft.UI.Xaml.Automation.Provider.IWindowProviderMethods.SetVisualState(_objRef_global__Microsoft_UI_Xaml_Automation_Provider_IWindowProvider, state);

        public bool WaitForInputIdle(int milliseconds) => global::ABI.Microsoft.UI.Xaml.Automation.Provider.IWindowProviderMethods.WaitForInputIdle(_objRef_global__Microsoft_UI_Xaml_Automation_Provider_IWindowProvider, milliseconds);

        public global::Microsoft.UI.Xaml.Automation.ExpandCollapseState ExpandCollapseState => global::ABI.Microsoft.UI.Xaml.Automation.Provider.IExpandCollapseProviderMethods.get_ExpandCollapseState(_objRef_global__Microsoft_UI_Xaml_Automation_Provider_IExpandCollapseProvider);

        public global::Microsoft.UI.Xaml.Automation.WindowInteractionState InteractionState => global::ABI.Microsoft.UI.Xaml.Automation.Provider.IWindowProviderMethods.get_InteractionState(_objRef_global__Microsoft_UI_Xaml_Automation_Provider_IWindowProvider);

        public bool IsModal => global::ABI.Microsoft.UI.Xaml.Automation.Provider.IWindowProviderMethods.get_IsModal(_objRef_global__Microsoft_UI_Xaml_Automation_Provider_IWindowProvider);

        public bool IsReadOnly => global::ABI.Microsoft.UI.Xaml.Automation.Provider.IValueProviderMethods.get_IsReadOnly(_objRef_global__Microsoft_UI_Xaml_Automation_Provider_IValueProvider);

        public bool IsTopmost => global::ABI.Microsoft.UI.Xaml.Automation.Provider.IWindowProviderMethods.get_IsTopmost(_objRef_global__Microsoft_UI_Xaml_Automation_Provider_IWindowProvider);

        public bool Maximizable => global::ABI.Microsoft.UI.Xaml.Automation.Provider.IWindowProviderMethods.get_Maximizable(_objRef_global__Microsoft_UI_Xaml_Automation_Provider_IWindowProvider);

        public bool Minimizable => global::ABI.Microsoft.UI.Xaml.Automation.Provider.IWindowProviderMethods.get_Minimizable(_objRef_global__Microsoft_UI_Xaml_Automation_Provider_IWindowProvider);

        public string Value => global::ABI.Microsoft.UI.Xaml.Automation.Provider.IValueProviderMethods.get_Value(_objRef_global__Microsoft_UI_Xaml_Automation_Provider_IValueProvider);

        public global::Microsoft.UI.Xaml.Automation.WindowVisualState VisualState => global::ABI.Microsoft.UI.Xaml.Automation.Provider.IWindowProviderMethods.get_VisualState(_objRef_global__Microsoft_UI_Xaml_Automation_Provider_IWindowProvider);

        protected override bool IsOverridableInterface(Guid iid) => base.IsOverridableInterface(iid);

        global::System.Runtime.InteropServices.CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(ref Guid iid, out IntPtr ppv)
        {
            ppv = IntPtr.Zero;
            if (IsOverridableInterface(iid) || global::WinRT.Interop.IID.IID_IInspectable == iid)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
            }

            if (((IWinRTObject)this).NativeObject.TryAs(iid, out ppv) >= 0)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.Handled;
            }

            return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
        }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")]
    [global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Automation.Peers.ComboBoxItemAutomationPeer))]
    [global::ABI.Microsoft.UI.Xaml.Automation.Peers.ComboBoxItemAutomationPeerRcwFactory]
    [global::WinRT.ProjectedRuntimeClass(typeof(IComboBoxItemAutomationPeer))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    public class ComboBoxItemAutomationPeer : FrameworkElementAutomationPeer, global::System.Runtime.InteropServices.ICustomQueryInterface, IWinRTObject, IEquatable<ComboBoxItemAutomationPeer>
    {
        private IntPtr ThisPtr => _inner == null ? (((IWinRTObject)this).NativeObject).ThisPtr : _inner.ThisPtr;

        private readonly IObjectReference _inner = null;




        private volatile IObjectReference ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IComboBoxItemAutomationPeer;
        private IObjectReference Make___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IComboBoxItemAutomationPeer()
        {
            global::System.Threading.Interlocked.CompareExchange(ref ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IComboBoxItemAutomationPeer, ((IWinRTObject)this).NativeObject.As<IUnknownVftbl>(global::ABI.Microsoft.UI.Xaml.Automation.Peers.IComboBoxItemAutomationPeerMethods.IID), null);
            return ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IComboBoxItemAutomationPeer;
        }
        private IObjectReference _objRef_global__Microsoft_UI_Xaml_Automation_Peers_IComboBoxItemAutomationPeer => ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IComboBoxItemAutomationPeer ?? Make___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IComboBoxItemAutomationPeer();



        private static class _IComboBoxItemAutomationPeerFactoryMethods
        {
            public static unsafe IntPtr CreateInstanceWithOwner(IObjectReference _obj, global::Microsoft.UI.Xaml.Controls.ComboBoxItem owner, object baseInterface, out IntPtr innerInterface)
            {
                var ThisPtr = _obj.ThisPtr;

                ObjectReferenceValue __owner = default;
                ObjectReferenceValue __baseInterface = default;
                IntPtr __innerInterface = default;
                IntPtr __retval = default;
                try
                {
                    __owner = global::ABI.Microsoft.UI.Xaml.Controls.ComboBoxItem.CreateMarshaler2(owner);
                    __baseInterface = MarshalInspectable<object>.CreateMarshaler2(baseInterface);
                    global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, IntPtr, IntPtr*, IntPtr*, int>**)ThisPtr)[6](ThisPtr, MarshalInspectable<object>.GetAbi(__owner), MarshalInspectable<object>.GetAbi(__baseInterface), &__innerInterface, &__retval));
                    global::System.GC.KeepAlive(_obj);
                    innerInterface = __innerInterface;
                    return __retval;
                }
                finally
                {
                    MarshalInspectable<object>.DisposeMarshaler(__owner);
                    MarshalInspectable<object>.DisposeMarshaler(__baseInterface);
                }
            }
        }

        private static volatile IObjectReference ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IComboBoxItemAutomationPeerFactory;
        private static IObjectReference _objRef_global__Microsoft_UI_Xaml_Automation_Peers_IComboBoxItemAutomationPeerFactory
        {
            get
            { 
                var factory = ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IComboBoxItemAutomationPeerFactory;
                if (factory != null && factory.IsInCurrentContext)
                {
                    return factory;
                }
                else
                {
                    return ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IComboBoxItemAutomationPeerFactory = ActivationFactory.Get("Microsoft.UI.Xaml.Automation.Peers.ComboBoxItemAutomationPeer", global::ABI.Microsoft.UI.Xaml.Automation.Peers.IComboBoxItemAutomationPeerFactoryMethods.IID);
                }
            }
        }

        public ComboBoxItemAutomationPeer(global::Microsoft.UI.Xaml.Controls.ComboBoxItem owner):base(global::WinRT.DerivedComposed.Instance)
        {
            bool isAggregation = this.GetType() != typeof(ComboBoxItemAutomationPeer);
            object baseInspectable = isAggregation ? this : null;
            IntPtr composed = _IComboBoxItemAutomationPeerFactoryMethods.CreateInstanceWithOwner(_objRef_global__Microsoft_UI_Xaml_Automation_Peers_IComboBoxItemAutomationPeerFactory, owner, baseInspectable, out IntPtr inner);
            try
            {
                ComWrappersHelper.Init(isAggregation, this, composed, inner, global::ABI.Microsoft.UI.Xaml.Automation.Peers.IComboBoxItemAutomationPeerMethods.IID, out _inner);

            }
            finally
            {
                Marshal.Release(inner);   
            }
        }

        public static new ComboBoxItemAutomationPeer FromAbi(IntPtr thisPtr)
        {
            if (thisPtr == IntPtr.Zero) return null;
            return MarshalInspectable<ComboBoxItemAutomationPeer>.FromAbi(thisPtr);
        }

        protected internal ComboBoxItemAutomationPeer(IObjectReference objRef)
            : base(global::WinRT.DerivedComposed.Instance)

        {
            _inner = objRef.As(global::ABI.Microsoft.UI.Xaml.Automation.Peers.IComboBoxItemAutomationPeerMethods.IID);

        }


        public static bool operator ==(ComboBoxItemAutomationPeer x, ComboBoxItemAutomationPeer y) => (x?.ThisPtr ?? IntPtr.Zero) == (y?.ThisPtr ?? IntPtr.Zero);
        public static bool operator !=(ComboBoxItemAutomationPeer x, ComboBoxItemAutomationPeer y) => !(x == y);
        public bool Equals(ComboBoxItemAutomationPeer other) => this == other;
        public override bool Equals(object obj) => obj is ComboBoxItemAutomationPeer that && this == that;
        public override int GetHashCode() => ThisPtr.GetHashCode();


        protected ComboBoxItemAutomationPeer(global::WinRT.DerivedComposed _):base(_)
        {

        }
        bool IWinRTObject.HasUnwrappableNativeObject => this.GetType() == typeof(ComboBoxItemAutomationPeer);
        IObjectReference IWinRTObject.NativeObject => _inner;

        private struct InterfaceTag<I>{};


        protected override bool IsOverridableInterface(Guid iid) => base.IsOverridableInterface(iid);

        global::System.Runtime.InteropServices.CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(ref Guid iid, out IntPtr ppv)
        {
            ppv = IntPtr.Zero;
            if (IsOverridableInterface(iid) || global::WinRT.Interop.IID.IID_IInspectable == iid)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
            }

            if (((IWinRTObject)this).NativeObject.TryAs(iid, out ppv) >= 0)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.Handled;
            }

            return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
        }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")]
    [global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Automation.Peers.ComboBoxItemDataAutomationPeer))]
    [global::ABI.Microsoft.UI.Xaml.Automation.Peers.ComboBoxItemDataAutomationPeerRcwFactory]
    [global::WinRT.ProjectedRuntimeClass(typeof(IComboBoxItemDataAutomationPeer))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    public class ComboBoxItemDataAutomationPeer : SelectorItemAutomationPeer, global::Microsoft.UI.Xaml.Automation.Provider.IScrollItemProvider, global::System.Runtime.InteropServices.ICustomQueryInterface, IWinRTObject, IEquatable<ComboBoxItemDataAutomationPeer>
    {
        private IntPtr ThisPtr => _inner == null ? (((IWinRTObject)this).NativeObject).ThisPtr : _inner.ThisPtr;

        private readonly IObjectReference _inner = null;




        private volatile IObjectReference ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IComboBoxItemDataAutomationPeer;
        private IObjectReference Make___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IComboBoxItemDataAutomationPeer()
        {
            global::System.Threading.Interlocked.CompareExchange(ref ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IComboBoxItemDataAutomationPeer, ((IWinRTObject)this).NativeObject.As<IUnknownVftbl>(global::ABI.Microsoft.UI.Xaml.Automation.Peers.IComboBoxItemDataAutomationPeerMethods.IID), null);
            return ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IComboBoxItemDataAutomationPeer;
        }
        private IObjectReference _objRef_global__Microsoft_UI_Xaml_Automation_Peers_IComboBoxItemDataAutomationPeer => ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IComboBoxItemDataAutomationPeer ?? Make___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IComboBoxItemDataAutomationPeer();

        private volatile IObjectReference ___objRef_global__Microsoft_UI_Xaml_Automation_Provider_IScrollItemProvider;
        private IObjectReference Make___objRef_global__Microsoft_UI_Xaml_Automation_Provider_IScrollItemProvider()
        {
            global::System.Threading.Interlocked.CompareExchange(ref ___objRef_global__Microsoft_UI_Xaml_Automation_Provider_IScrollItemProvider, ((IWinRTObject)this).NativeObject.As<IUnknownVftbl>(global::ABI.Microsoft.UI.Xaml.Automation.Provider.IScrollItemProviderMethods.IID), null);
            return ___objRef_global__Microsoft_UI_Xaml_Automation_Provider_IScrollItemProvider;
        }
        private IObjectReference _objRef_global__Microsoft_UI_Xaml_Automation_Provider_IScrollItemProvider => ___objRef_global__Microsoft_UI_Xaml_Automation_Provider_IScrollItemProvider ?? Make___objRef_global__Microsoft_UI_Xaml_Automation_Provider_IScrollItemProvider();



        private static class _IComboBoxItemDataAutomationPeerFactoryMethods
        {
            public static unsafe IntPtr CreateInstanceWithParentAndItem(IObjectReference _obj, object item, ComboBoxAutomationPeer parent, object baseInterface, out IntPtr innerInterface)
            {
                var ThisPtr = _obj.ThisPtr;

                ObjectReferenceValue __item = default;
                ObjectReferenceValue __parent = default;
                ObjectReferenceValue __baseInterface = default;
                IntPtr __innerInterface = default;
                IntPtr __retval = default;
                try
                {
                    __item = MarshalInspectable<object>.CreateMarshaler2(item);
                    __parent = global::ABI.Microsoft.UI.Xaml.Automation.Peers.ComboBoxAutomationPeer.CreateMarshaler2(parent);
                    __baseInterface = MarshalInspectable<object>.CreateMarshaler2(baseInterface);
                    global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, IntPtr, IntPtr, IntPtr*, IntPtr*, int>**)ThisPtr)[6](ThisPtr, MarshalInspectable<object>.GetAbi(__item), MarshalInspectable<object>.GetAbi(__parent), MarshalInspectable<object>.GetAbi(__baseInterface), &__innerInterface, &__retval));
                    global::System.GC.KeepAlive(_obj);
                    innerInterface = __innerInterface;
                    return __retval;
                }
                finally
                {
                    MarshalInspectable<object>.DisposeMarshaler(__item);
                    MarshalInspectable<object>.DisposeMarshaler(__parent);
                    MarshalInspectable<object>.DisposeMarshaler(__baseInterface);
                }
            }
        }

        private static volatile IObjectReference ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IComboBoxItemDataAutomationPeerFactory;
        private static IObjectReference _objRef_global__Microsoft_UI_Xaml_Automation_Peers_IComboBoxItemDataAutomationPeerFactory
        {
            get
            { 
                var factory = ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IComboBoxItemDataAutomationPeerFactory;
                if (factory != null && factory.IsInCurrentContext)
                {
                    return factory;
                }
                else
                {
                    return ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IComboBoxItemDataAutomationPeerFactory = ActivationFactory.Get("Microsoft.UI.Xaml.Automation.Peers.ComboBoxItemDataAutomationPeer", global::ABI.Microsoft.UI.Xaml.Automation.Peers.IComboBoxItemDataAutomationPeerFactoryMethods.IID);
                }
            }
        }

        public ComboBoxItemDataAutomationPeer(object item, ComboBoxAutomationPeer parent):base(global::WinRT.DerivedComposed.Instance)
        {
            bool isAggregation = this.GetType() != typeof(ComboBoxItemDataAutomationPeer);
            object baseInspectable = isAggregation ? this : null;
            IntPtr composed = _IComboBoxItemDataAutomationPeerFactoryMethods.CreateInstanceWithParentAndItem(_objRef_global__Microsoft_UI_Xaml_Automation_Peers_IComboBoxItemDataAutomationPeerFactory, item, parent, baseInspectable, out IntPtr inner);
            try
            {
                ComWrappersHelper.Init(isAggregation, this, composed, inner, global::ABI.Microsoft.UI.Xaml.Automation.Peers.IComboBoxItemDataAutomationPeerMethods.IID, out _inner);

            }
            finally
            {
                Marshal.Release(inner);   
            }
        }

        public static new ComboBoxItemDataAutomationPeer FromAbi(IntPtr thisPtr)
        {
            if (thisPtr == IntPtr.Zero) return null;
            return MarshalInspectable<ComboBoxItemDataAutomationPeer>.FromAbi(thisPtr);
        }

        protected internal ComboBoxItemDataAutomationPeer(IObjectReference objRef)
            : base(global::WinRT.DerivedComposed.Instance)

        {
            _inner = objRef.As(global::ABI.Microsoft.UI.Xaml.Automation.Peers.IComboBoxItemDataAutomationPeerMethods.IID);

        }


        public static bool operator ==(ComboBoxItemDataAutomationPeer x, ComboBoxItemDataAutomationPeer y) => (x?.ThisPtr ?? IntPtr.Zero) == (y?.ThisPtr ?? IntPtr.Zero);
        public static bool operator !=(ComboBoxItemDataAutomationPeer x, ComboBoxItemDataAutomationPeer y) => !(x == y);
        public bool Equals(ComboBoxItemDataAutomationPeer other) => this == other;
        public override bool Equals(object obj) => obj is ComboBoxItemDataAutomationPeer that && this == that;
        public override int GetHashCode() => ThisPtr.GetHashCode();


        protected ComboBoxItemDataAutomationPeer(global::WinRT.DerivedComposed _):base(_)
        {

        }
        bool IWinRTObject.HasUnwrappableNativeObject => this.GetType() == typeof(ComboBoxItemDataAutomationPeer);
        IObjectReference IWinRTObject.NativeObject => _inner;

        private struct InterfaceTag<I>{};


        public void ScrollIntoView() => global::ABI.Microsoft.UI.Xaml.Automation.Provider.IScrollItemProviderMethods.ScrollIntoView(_objRef_global__Microsoft_UI_Xaml_Automation_Provider_IScrollItemProvider);

        protected override bool IsOverridableInterface(Guid iid) => base.IsOverridableInterface(iid);

        global::System.Runtime.InteropServices.CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(ref Guid iid, out IntPtr ppv)
        {
            ppv = IntPtr.Zero;
            if (IsOverridableInterface(iid) || global::WinRT.Interop.IID.IID_IInspectable == iid)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
            }

            if (((IWinRTObject)this).NativeObject.TryAs(iid, out ppv) >= 0)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.Handled;
            }

            return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
        }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")]
    [global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Automation.Peers.DatePickerAutomationPeer))]
    [global::ABI.Microsoft.UI.Xaml.Automation.Peers.DatePickerAutomationPeerRcwFactory]
    [global::WinRT.ProjectedRuntimeClass(typeof(IDatePickerAutomationPeer))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    public class DatePickerAutomationPeer : FrameworkElementAutomationPeer, global::System.Runtime.InteropServices.ICustomQueryInterface, IWinRTObject, IEquatable<DatePickerAutomationPeer>
    {
        private IntPtr ThisPtr => _inner == null ? (((IWinRTObject)this).NativeObject).ThisPtr : _inner.ThisPtr;

        private readonly IObjectReference _inner = null;




        private volatile IObjectReference ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IDatePickerAutomationPeer;
        private IObjectReference Make___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IDatePickerAutomationPeer()
        {
            global::System.Threading.Interlocked.CompareExchange(ref ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IDatePickerAutomationPeer, ((IWinRTObject)this).NativeObject.As<IUnknownVftbl>(global::ABI.Microsoft.UI.Xaml.Automation.Peers.IDatePickerAutomationPeerMethods.IID), null);
            return ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IDatePickerAutomationPeer;
        }
        private IObjectReference _objRef_global__Microsoft_UI_Xaml_Automation_Peers_IDatePickerAutomationPeer => ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IDatePickerAutomationPeer ?? Make___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IDatePickerAutomationPeer();



        private static class _IDatePickerAutomationPeerFactoryMethods
        {
            public static unsafe IntPtr CreateInstanceWithOwner(IObjectReference _obj, global::Microsoft.UI.Xaml.Controls.DatePicker owner, object baseInterface, out IntPtr innerInterface)
            {
                var ThisPtr = _obj.ThisPtr;

                ObjectReferenceValue __owner = default;
                ObjectReferenceValue __baseInterface = default;
                IntPtr __innerInterface = default;
                IntPtr __retval = default;
                try
                {
                    __owner = global::ABI.Microsoft.UI.Xaml.Controls.DatePicker.CreateMarshaler2(owner);
                    __baseInterface = MarshalInspectable<object>.CreateMarshaler2(baseInterface);
                    global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, IntPtr, IntPtr*, IntPtr*, int>**)ThisPtr)[6](ThisPtr, MarshalInspectable<object>.GetAbi(__owner), MarshalInspectable<object>.GetAbi(__baseInterface), &__innerInterface, &__retval));
                    global::System.GC.KeepAlive(_obj);
                    innerInterface = __innerInterface;
                    return __retval;
                }
                finally
                {
                    MarshalInspectable<object>.DisposeMarshaler(__owner);
                    MarshalInspectable<object>.DisposeMarshaler(__baseInterface);
                }
            }
        }

        private static volatile IObjectReference ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IDatePickerAutomationPeerFactory;
        private static IObjectReference _objRef_global__Microsoft_UI_Xaml_Automation_Peers_IDatePickerAutomationPeerFactory
        {
            get
            { 
                var factory = ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IDatePickerAutomationPeerFactory;
                if (factory != null && factory.IsInCurrentContext)
                {
                    return factory;
                }
                else
                {
                    return ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IDatePickerAutomationPeerFactory = ActivationFactory.Get("Microsoft.UI.Xaml.Automation.Peers.DatePickerAutomationPeer", global::ABI.Microsoft.UI.Xaml.Automation.Peers.IDatePickerAutomationPeerFactoryMethods.IID);
                }
            }
        }

        public DatePickerAutomationPeer(global::Microsoft.UI.Xaml.Controls.DatePicker owner):base(global::WinRT.DerivedComposed.Instance)
        {
            bool isAggregation = this.GetType() != typeof(DatePickerAutomationPeer);
            object baseInspectable = isAggregation ? this : null;
            IntPtr composed = _IDatePickerAutomationPeerFactoryMethods.CreateInstanceWithOwner(_objRef_global__Microsoft_UI_Xaml_Automation_Peers_IDatePickerAutomationPeerFactory, owner, baseInspectable, out IntPtr inner);
            try
            {
                ComWrappersHelper.Init(isAggregation, this, composed, inner, global::ABI.Microsoft.UI.Xaml.Automation.Peers.IDatePickerAutomationPeerMethods.IID, out _inner);

            }
            finally
            {
                Marshal.Release(inner);   
            }
        }

        public static new DatePickerAutomationPeer FromAbi(IntPtr thisPtr)
        {
            if (thisPtr == IntPtr.Zero) return null;
            return MarshalInspectable<DatePickerAutomationPeer>.FromAbi(thisPtr);
        }

        protected internal DatePickerAutomationPeer(IObjectReference objRef)
            : base(global::WinRT.DerivedComposed.Instance)

        {
            _inner = objRef.As(global::ABI.Microsoft.UI.Xaml.Automation.Peers.IDatePickerAutomationPeerMethods.IID);

        }


        public static bool operator ==(DatePickerAutomationPeer x, DatePickerAutomationPeer y) => (x?.ThisPtr ?? IntPtr.Zero) == (y?.ThisPtr ?? IntPtr.Zero);
        public static bool operator !=(DatePickerAutomationPeer x, DatePickerAutomationPeer y) => !(x == y);
        public bool Equals(DatePickerAutomationPeer other) => this == other;
        public override bool Equals(object obj) => obj is DatePickerAutomationPeer that && this == that;
        public override int GetHashCode() => ThisPtr.GetHashCode();


        protected DatePickerAutomationPeer(global::WinRT.DerivedComposed _):base(_)
        {

        }
        bool IWinRTObject.HasUnwrappableNativeObject => this.GetType() == typeof(DatePickerAutomationPeer);
        IObjectReference IWinRTObject.NativeObject => _inner;

        private struct InterfaceTag<I>{};


        protected override bool IsOverridableInterface(Guid iid) => base.IsOverridableInterface(iid);

        global::System.Runtime.InteropServices.CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(ref Guid iid, out IntPtr ppv)
        {
            ppv = IntPtr.Zero;
            if (IsOverridableInterface(iid) || global::WinRT.Interop.IID.IID_IInspectable == iid)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
            }

            if (((IWinRTObject)this).NativeObject.TryAs(iid, out ppv) >= 0)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.Handled;
            }

            return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
        }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")]
    [global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Automation.Peers.DatePickerFlyoutPresenterAutomationPeer))]
    [global::ABI.Microsoft.UI.Xaml.Automation.Peers.DatePickerFlyoutPresenterAutomationPeerRcwFactory]
    [global::WinRT.ProjectedRuntimeClass(typeof(IDatePickerFlyoutPresenterAutomationPeer))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    public sealed class DatePickerFlyoutPresenterAutomationPeer : FrameworkElementAutomationPeer, global::System.Runtime.InteropServices.ICustomQueryInterface, IWinRTObject, IEquatable<DatePickerFlyoutPresenterAutomationPeer>
    {
        private IntPtr ThisPtr => _inner == null ? (((IWinRTObject)this).NativeObject).ThisPtr : _inner.ThisPtr;

        private readonly IObjectReference _inner = null;



        private IObjectReference _objRef_global__Microsoft_UI_Xaml_Automation_Peers_IDatePickerFlyoutPresenterAutomationPeer => _inner;


        public static new DatePickerFlyoutPresenterAutomationPeer FromAbi(IntPtr thisPtr)
        {
            if (thisPtr == IntPtr.Zero) return null;
            return MarshalInspectable<DatePickerFlyoutPresenterAutomationPeer>.FromAbi(thisPtr);
        }

        internal DatePickerFlyoutPresenterAutomationPeer(IObjectReference objRef)
            : base(global::WinRT.DerivedComposed.Instance)

        {
            _inner = objRef.As(global::ABI.Microsoft.UI.Xaml.Automation.Peers.IDatePickerFlyoutPresenterAutomationPeerMethods.IID);

        }


        public static bool operator ==(DatePickerFlyoutPresenterAutomationPeer x, DatePickerFlyoutPresenterAutomationPeer y) => (x?.ThisPtr ?? IntPtr.Zero) == (y?.ThisPtr ?? IntPtr.Zero);
        public static bool operator !=(DatePickerFlyoutPresenterAutomationPeer x, DatePickerFlyoutPresenterAutomationPeer y) => !(x == y);
        public bool Equals(DatePickerFlyoutPresenterAutomationPeer other) => this == other;
        public override bool Equals(object obj) => obj is DatePickerFlyoutPresenterAutomationPeer that && this == that;
        public override int GetHashCode() => ThisPtr.GetHashCode();


        bool IWinRTObject.HasUnwrappableNativeObject => true;
        IObjectReference IWinRTObject.NativeObject => _inner;

        private struct InterfaceTag<I>{};


        protected override bool IsOverridableInterface(Guid iid) => base.IsOverridableInterface(iid);

        global::System.Runtime.InteropServices.CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(ref Guid iid, out IntPtr ppv)
        {
            ppv = IntPtr.Zero;
            if (IsOverridableInterface(iid) || global::WinRT.Interop.IID.IID_IInspectable == iid)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
            }

            if (((IWinRTObject)this).NativeObject.TryAs(iid, out ppv) >= 0)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.Handled;
            }

            return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
        }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")]
    [global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Automation.Peers.DropDownButtonAutomationPeer))]
    [global::ABI.Microsoft.UI.Xaml.Automation.Peers.DropDownButtonAutomationPeerRcwFactory]
    [global::WinRT.ProjectedRuntimeClass(typeof(IDropDownButtonAutomationPeer))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.XamlContract), 65536u)]
    public class DropDownButtonAutomationPeer : ButtonAutomationPeer, global::Microsoft.UI.Xaml.Automation.Provider.IExpandCollapseProvider, global::System.Runtime.InteropServices.ICustomQueryInterface, IWinRTObject, IEquatable<DropDownButtonAutomationPeer>
    {
        private IntPtr ThisPtr => _inner == null ? (((IWinRTObject)this).NativeObject).ThisPtr : _inner.ThisPtr;

        private readonly IObjectReference _inner = null;




        private volatile IObjectReference ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IDropDownButtonAutomationPeer;
        private IObjectReference Make___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IDropDownButtonAutomationPeer()
        {
            global::System.Threading.Interlocked.CompareExchange(ref ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IDropDownButtonAutomationPeer, ((IWinRTObject)this).NativeObject.As<IUnknownVftbl>(global::ABI.Microsoft.UI.Xaml.Automation.Peers.IDropDownButtonAutomationPeerMethods.IID), null);
            return ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IDropDownButtonAutomationPeer;
        }
        private IObjectReference _objRef_global__Microsoft_UI_Xaml_Automation_Peers_IDropDownButtonAutomationPeer => ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IDropDownButtonAutomationPeer ?? Make___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IDropDownButtonAutomationPeer();

        private volatile IObjectReference ___objRef_global__Microsoft_UI_Xaml_Automation_Provider_IExpandCollapseProvider;
        private IObjectReference Make___objRef_global__Microsoft_UI_Xaml_Automation_Provider_IExpandCollapseProvider()
        {
            global::System.Threading.Interlocked.CompareExchange(ref ___objRef_global__Microsoft_UI_Xaml_Automation_Provider_IExpandCollapseProvider, ((IWinRTObject)this).NativeObject.As<IUnknownVftbl>(global::ABI.Microsoft.UI.Xaml.Automation.Provider.IExpandCollapseProviderMethods.IID), null);
            return ___objRef_global__Microsoft_UI_Xaml_Automation_Provider_IExpandCollapseProvider;
        }
        private IObjectReference _objRef_global__Microsoft_UI_Xaml_Automation_Provider_IExpandCollapseProvider => ___objRef_global__Microsoft_UI_Xaml_Automation_Provider_IExpandCollapseProvider ?? Make___objRef_global__Microsoft_UI_Xaml_Automation_Provider_IExpandCollapseProvider();



        private static class _IDropDownButtonAutomationPeerFactoryMethods
        {
            public static unsafe IntPtr CreateInstance(IObjectReference _obj, global::Microsoft.UI.Xaml.Controls.DropDownButton owner, object baseInterface, out IntPtr innerInterface)
            {
                var ThisPtr = _obj.ThisPtr;

                ObjectReferenceValue __owner = default;
                ObjectReferenceValue __baseInterface = default;
                IntPtr __innerInterface = default;
                IntPtr __retval = default;
                try
                {
                    __owner = global::ABI.Microsoft.UI.Xaml.Controls.DropDownButton.CreateMarshaler2(owner);
                    __baseInterface = MarshalInspectable<object>.CreateMarshaler2(baseInterface);
                    global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, IntPtr, IntPtr*, IntPtr*, int>**)ThisPtr)[6](ThisPtr, MarshalInspectable<object>.GetAbi(__owner), MarshalInspectable<object>.GetAbi(__baseInterface), &__innerInterface, &__retval));
                    global::System.GC.KeepAlive(_obj);
                    innerInterface = __innerInterface;
                    return __retval;
                }
                finally
                {
                    MarshalInspectable<object>.DisposeMarshaler(__owner);
                    MarshalInspectable<object>.DisposeMarshaler(__baseInterface);
                }
            }
        }

        private static volatile IObjectReference ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IDropDownButtonAutomationPeerFactory;
        private static IObjectReference _objRef_global__Microsoft_UI_Xaml_Automation_Peers_IDropDownButtonAutomationPeerFactory
        {
            get
            { 
                var factory = ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IDropDownButtonAutomationPeerFactory;
                if (factory != null && factory.IsInCurrentContext)
                {
                    return factory;
                }
                else
                {
                    return ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IDropDownButtonAutomationPeerFactory = ActivationFactory.Get("Microsoft.UI.Xaml.Automation.Peers.DropDownButtonAutomationPeer", global::ABI.Microsoft.UI.Xaml.Automation.Peers.IDropDownButtonAutomationPeerFactoryMethods.IID);
                }
            }
        }

        public DropDownButtonAutomationPeer(global::Microsoft.UI.Xaml.Controls.DropDownButton owner):base(global::WinRT.DerivedComposed.Instance)
        {
            bool isAggregation = this.GetType() != typeof(DropDownButtonAutomationPeer);
            object baseInspectable = isAggregation ? this : null;
            IntPtr composed = _IDropDownButtonAutomationPeerFactoryMethods.CreateInstance(_objRef_global__Microsoft_UI_Xaml_Automation_Peers_IDropDownButtonAutomationPeerFactory, owner, baseInspectable, out IntPtr inner);
            try
            {
                ComWrappersHelper.Init(isAggregation, this, composed, inner, global::ABI.Microsoft.UI.Xaml.Automation.Peers.IDropDownButtonAutomationPeerMethods.IID, out _inner);

            }
            finally
            {
                Marshal.Release(inner);   
            }
        }

        public static new DropDownButtonAutomationPeer FromAbi(IntPtr thisPtr)
        {
            if (thisPtr == IntPtr.Zero) return null;
            return MarshalInspectable<DropDownButtonAutomationPeer>.FromAbi(thisPtr);
        }

        protected internal DropDownButtonAutomationPeer(IObjectReference objRef)
            : base(global::WinRT.DerivedComposed.Instance)

        {
            _inner = objRef.As(global::ABI.Microsoft.UI.Xaml.Automation.Peers.IDropDownButtonAutomationPeerMethods.IID);

        }


        public static bool operator ==(DropDownButtonAutomationPeer x, DropDownButtonAutomationPeer y) => (x?.ThisPtr ?? IntPtr.Zero) == (y?.ThisPtr ?? IntPtr.Zero);
        public static bool operator !=(DropDownButtonAutomationPeer x, DropDownButtonAutomationPeer y) => !(x == y);
        public bool Equals(DropDownButtonAutomationPeer other) => this == other;
        public override bool Equals(object obj) => obj is DropDownButtonAutomationPeer that && this == that;
        public override int GetHashCode() => ThisPtr.GetHashCode();


        protected DropDownButtonAutomationPeer(global::WinRT.DerivedComposed _):base(_)
        {

        }
        bool IWinRTObject.HasUnwrappableNativeObject => this.GetType() == typeof(DropDownButtonAutomationPeer);
        IObjectReference IWinRTObject.NativeObject => _inner;

        private struct InterfaceTag<I>{};


        public void Collapse() => global::ABI.Microsoft.UI.Xaml.Automation.Provider.IExpandCollapseProviderMethods.Collapse(_objRef_global__Microsoft_UI_Xaml_Automation_Provider_IExpandCollapseProvider);

        public void Expand() => global::ABI.Microsoft.UI.Xaml.Automation.Provider.IExpandCollapseProviderMethods.Expand(_objRef_global__Microsoft_UI_Xaml_Automation_Provider_IExpandCollapseProvider);

        public global::Microsoft.UI.Xaml.Automation.ExpandCollapseState ExpandCollapseState => global::ABI.Microsoft.UI.Xaml.Automation.Provider.IExpandCollapseProviderMethods.get_ExpandCollapseState(_objRef_global__Microsoft_UI_Xaml_Automation_Provider_IExpandCollapseProvider);

        protected override bool IsOverridableInterface(Guid iid) => base.IsOverridableInterface(iid);

        global::System.Runtime.InteropServices.CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(ref Guid iid, out IntPtr ppv)
        {
            ppv = IntPtr.Zero;
            if (IsOverridableInterface(iid) || global::WinRT.Interop.IID.IID_IInspectable == iid)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
            }

            if (((IWinRTObject)this).NativeObject.TryAs(iid, out ppv) >= 0)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.Handled;
            }

            return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
        }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")]
    [global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Automation.Peers.ExpanderAutomationPeer))]
    [global::ABI.Microsoft.UI.Xaml.Automation.Peers.ExpanderAutomationPeerRcwFactory]
    [global::WinRT.ProjectedRuntimeClass(typeof(IExpanderAutomationPeer))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.XamlContract), 65536u)]
    public class ExpanderAutomationPeer : FrameworkElementAutomationPeer, global::Microsoft.UI.Xaml.Automation.Provider.IExpandCollapseProvider, global::System.Runtime.InteropServices.ICustomQueryInterface, IWinRTObject, IEquatable<ExpanderAutomationPeer>
    {
        private IntPtr ThisPtr => _inner == null ? (((IWinRTObject)this).NativeObject).ThisPtr : _inner.ThisPtr;

        private readonly IObjectReference _inner = null;




        private volatile IObjectReference ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IExpanderAutomationPeer;
        private IObjectReference Make___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IExpanderAutomationPeer()
        {
            global::System.Threading.Interlocked.CompareExchange(ref ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IExpanderAutomationPeer, ((IWinRTObject)this).NativeObject.As<IUnknownVftbl>(global::ABI.Microsoft.UI.Xaml.Automation.Peers.IExpanderAutomationPeerMethods.IID), null);
            return ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IExpanderAutomationPeer;
        }
        private IObjectReference _objRef_global__Microsoft_UI_Xaml_Automation_Peers_IExpanderAutomationPeer => ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IExpanderAutomationPeer ?? Make___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IExpanderAutomationPeer();

        private volatile IObjectReference ___objRef_global__Microsoft_UI_Xaml_Automation_Provider_IExpandCollapseProvider;
        private IObjectReference Make___objRef_global__Microsoft_UI_Xaml_Automation_Provider_IExpandCollapseProvider()
        {
            global::System.Threading.Interlocked.CompareExchange(ref ___objRef_global__Microsoft_UI_Xaml_Automation_Provider_IExpandCollapseProvider, ((IWinRTObject)this).NativeObject.As<IUnknownVftbl>(global::ABI.Microsoft.UI.Xaml.Automation.Provider.IExpandCollapseProviderMethods.IID), null);
            return ___objRef_global__Microsoft_UI_Xaml_Automation_Provider_IExpandCollapseProvider;
        }
        private IObjectReference _objRef_global__Microsoft_UI_Xaml_Automation_Provider_IExpandCollapseProvider => ___objRef_global__Microsoft_UI_Xaml_Automation_Provider_IExpandCollapseProvider ?? Make___objRef_global__Microsoft_UI_Xaml_Automation_Provider_IExpandCollapseProvider();



        private static class _IExpanderAutomationPeerFactoryMethods
        {
            public static unsafe IntPtr CreateInstance(IObjectReference _obj, global::Microsoft.UI.Xaml.Controls.Expander owner, object baseInterface, out IntPtr innerInterface)
            {
                var ThisPtr = _obj.ThisPtr;

                ObjectReferenceValue __owner = default;
                ObjectReferenceValue __baseInterface = default;
                IntPtr __innerInterface = default;
                IntPtr __retval = default;
                try
                {
                    __owner = global::ABI.Microsoft.UI.Xaml.Controls.Expander.CreateMarshaler2(owner);
                    __baseInterface = MarshalInspectable<object>.CreateMarshaler2(baseInterface);
                    global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, IntPtr, IntPtr*, IntPtr*, int>**)ThisPtr)[6](ThisPtr, MarshalInspectable<object>.GetAbi(__owner), MarshalInspectable<object>.GetAbi(__baseInterface), &__innerInterface, &__retval));
                    global::System.GC.KeepAlive(_obj);
                    innerInterface = __innerInterface;
                    return __retval;
                }
                finally
                {
                    MarshalInspectable<object>.DisposeMarshaler(__owner);
                    MarshalInspectable<object>.DisposeMarshaler(__baseInterface);
                }
            }
        }

        private static volatile IObjectReference ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IExpanderAutomationPeerFactory;
        private static IObjectReference _objRef_global__Microsoft_UI_Xaml_Automation_Peers_IExpanderAutomationPeerFactory
        {
            get
            { 
                var factory = ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IExpanderAutomationPeerFactory;
                if (factory != null && factory.IsInCurrentContext)
                {
                    return factory;
                }
                else
                {
                    return ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IExpanderAutomationPeerFactory = ActivationFactory.Get("Microsoft.UI.Xaml.Automation.Peers.ExpanderAutomationPeer", global::ABI.Microsoft.UI.Xaml.Automation.Peers.IExpanderAutomationPeerFactoryMethods.IID);
                }
            }
        }

        public ExpanderAutomationPeer(global::Microsoft.UI.Xaml.Controls.Expander owner):base(global::WinRT.DerivedComposed.Instance)
        {
            bool isAggregation = this.GetType() != typeof(ExpanderAutomationPeer);
            object baseInspectable = isAggregation ? this : null;
            IntPtr composed = _IExpanderAutomationPeerFactoryMethods.CreateInstance(_objRef_global__Microsoft_UI_Xaml_Automation_Peers_IExpanderAutomationPeerFactory, owner, baseInspectable, out IntPtr inner);
            try
            {
                ComWrappersHelper.Init(isAggregation, this, composed, inner, global::ABI.Microsoft.UI.Xaml.Automation.Peers.IExpanderAutomationPeerMethods.IID, out _inner);

            }
            finally
            {
                Marshal.Release(inner);   
            }
        }

        public static new ExpanderAutomationPeer FromAbi(IntPtr thisPtr)
        {
            if (thisPtr == IntPtr.Zero) return null;
            return MarshalInspectable<ExpanderAutomationPeer>.FromAbi(thisPtr);
        }

        protected internal ExpanderAutomationPeer(IObjectReference objRef)
            : base(global::WinRT.DerivedComposed.Instance)

        {
            _inner = objRef.As(global::ABI.Microsoft.UI.Xaml.Automation.Peers.IExpanderAutomationPeerMethods.IID);

        }


        public static bool operator ==(ExpanderAutomationPeer x, ExpanderAutomationPeer y) => (x?.ThisPtr ?? IntPtr.Zero) == (y?.ThisPtr ?? IntPtr.Zero);
        public static bool operator !=(ExpanderAutomationPeer x, ExpanderAutomationPeer y) => !(x == y);
        public bool Equals(ExpanderAutomationPeer other) => this == other;
        public override bool Equals(object obj) => obj is ExpanderAutomationPeer that && this == that;
        public override int GetHashCode() => ThisPtr.GetHashCode();


        protected ExpanderAutomationPeer(global::WinRT.DerivedComposed _):base(_)
        {

        }
        bool IWinRTObject.HasUnwrappableNativeObject => this.GetType() == typeof(ExpanderAutomationPeer);
        IObjectReference IWinRTObject.NativeObject => _inner;

        private struct InterfaceTag<I>{};


        public void Collapse() => global::ABI.Microsoft.UI.Xaml.Automation.Provider.IExpandCollapseProviderMethods.Collapse(_objRef_global__Microsoft_UI_Xaml_Automation_Provider_IExpandCollapseProvider);

        public void Expand() => global::ABI.Microsoft.UI.Xaml.Automation.Provider.IExpandCollapseProviderMethods.Expand(_objRef_global__Microsoft_UI_Xaml_Automation_Provider_IExpandCollapseProvider);

        public global::Microsoft.UI.Xaml.Automation.ExpandCollapseState ExpandCollapseState => global::ABI.Microsoft.UI.Xaml.Automation.Provider.IExpandCollapseProviderMethods.get_ExpandCollapseState(_objRef_global__Microsoft_UI_Xaml_Automation_Provider_IExpandCollapseProvider);

        protected override bool IsOverridableInterface(Guid iid) => base.IsOverridableInterface(iid);

        global::System.Runtime.InteropServices.CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(ref Guid iid, out IntPtr ppv)
        {
            ppv = IntPtr.Zero;
            if (IsOverridableInterface(iid) || global::WinRT.Interop.IID.IID_IInspectable == iid)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
            }

            if (((IWinRTObject)this).NativeObject.TryAs(iid, out ppv) >= 0)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.Handled;
            }

            return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
        }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")]
    [global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Automation.Peers.FlipViewAutomationPeer))]
    [global::ABI.Microsoft.UI.Xaml.Automation.Peers.FlipViewAutomationPeerRcwFactory]
    [global::WinRT.ProjectedRuntimeClass(typeof(IFlipViewAutomationPeer))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    public class FlipViewAutomationPeer : SelectorAutomationPeer, global::System.Runtime.InteropServices.ICustomQueryInterface, IWinRTObject, IEquatable<FlipViewAutomationPeer>
    {
        private IntPtr ThisPtr => _inner == null ? (((IWinRTObject)this).NativeObject).ThisPtr : _inner.ThisPtr;

        private readonly IObjectReference _inner = null;




        private volatile IObjectReference ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IFlipViewAutomationPeer;
        private IObjectReference Make___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IFlipViewAutomationPeer()
        {
            global::System.Threading.Interlocked.CompareExchange(ref ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IFlipViewAutomationPeer, ((IWinRTObject)this).NativeObject.As<IUnknownVftbl>(global::ABI.Microsoft.UI.Xaml.Automation.Peers.IFlipViewAutomationPeerMethods.IID), null);
            return ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IFlipViewAutomationPeer;
        }
        private IObjectReference _objRef_global__Microsoft_UI_Xaml_Automation_Peers_IFlipViewAutomationPeer => ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IFlipViewAutomationPeer ?? Make___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IFlipViewAutomationPeer();



        private static class _IFlipViewAutomationPeerFactoryMethods
        {
            public static unsafe IntPtr CreateInstanceWithOwner(IObjectReference _obj, global::Microsoft.UI.Xaml.Controls.FlipView owner, object baseInterface, out IntPtr innerInterface)
            {
                var ThisPtr = _obj.ThisPtr;

                ObjectReferenceValue __owner = default;
                ObjectReferenceValue __baseInterface = default;
                IntPtr __innerInterface = default;
                IntPtr __retval = default;
                try
                {
                    __owner = global::ABI.Microsoft.UI.Xaml.Controls.FlipView.CreateMarshaler2(owner);
                    __baseInterface = MarshalInspectable<object>.CreateMarshaler2(baseInterface);
                    global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, IntPtr, IntPtr*, IntPtr*, int>**)ThisPtr)[6](ThisPtr, MarshalInspectable<object>.GetAbi(__owner), MarshalInspectable<object>.GetAbi(__baseInterface), &__innerInterface, &__retval));
                    global::System.GC.KeepAlive(_obj);
                    innerInterface = __innerInterface;
                    return __retval;
                }
                finally
                {
                    MarshalInspectable<object>.DisposeMarshaler(__owner);
                    MarshalInspectable<object>.DisposeMarshaler(__baseInterface);
                }
            }
        }

        private static volatile IObjectReference ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IFlipViewAutomationPeerFactory;
        private static IObjectReference _objRef_global__Microsoft_UI_Xaml_Automation_Peers_IFlipViewAutomationPeerFactory
        {
            get
            { 
                var factory = ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IFlipViewAutomationPeerFactory;
                if (factory != null && factory.IsInCurrentContext)
                {
                    return factory;
                }
                else
                {
                    return ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IFlipViewAutomationPeerFactory = ActivationFactory.Get("Microsoft.UI.Xaml.Automation.Peers.FlipViewAutomationPeer", global::ABI.Microsoft.UI.Xaml.Automation.Peers.IFlipViewAutomationPeerFactoryMethods.IID);
                }
            }
        }

        public FlipViewAutomationPeer(global::Microsoft.UI.Xaml.Controls.FlipView owner):base(global::WinRT.DerivedComposed.Instance)
        {
            bool isAggregation = this.GetType() != typeof(FlipViewAutomationPeer);
            object baseInspectable = isAggregation ? this : null;
            IntPtr composed = _IFlipViewAutomationPeerFactoryMethods.CreateInstanceWithOwner(_objRef_global__Microsoft_UI_Xaml_Automation_Peers_IFlipViewAutomationPeerFactory, owner, baseInspectable, out IntPtr inner);
            try
            {
                ComWrappersHelper.Init(isAggregation, this, composed, inner, global::ABI.Microsoft.UI.Xaml.Automation.Peers.IFlipViewAutomationPeerMethods.IID, out _inner);

            }
            finally
            {
                Marshal.Release(inner);   
            }
        }

        public static new FlipViewAutomationPeer FromAbi(IntPtr thisPtr)
        {
            if (thisPtr == IntPtr.Zero) return null;
            return MarshalInspectable<FlipViewAutomationPeer>.FromAbi(thisPtr);
        }

        protected internal FlipViewAutomationPeer(IObjectReference objRef)
            : base(global::WinRT.DerivedComposed.Instance)

        {
            _inner = objRef.As(global::ABI.Microsoft.UI.Xaml.Automation.Peers.IFlipViewAutomationPeerMethods.IID);

        }


        public static bool operator ==(FlipViewAutomationPeer x, FlipViewAutomationPeer y) => (x?.ThisPtr ?? IntPtr.Zero) == (y?.ThisPtr ?? IntPtr.Zero);
        public static bool operator !=(FlipViewAutomationPeer x, FlipViewAutomationPeer y) => !(x == y);
        public bool Equals(FlipViewAutomationPeer other) => this == other;
        public override bool Equals(object obj) => obj is FlipViewAutomationPeer that && this == that;
        public override int GetHashCode() => ThisPtr.GetHashCode();


        protected FlipViewAutomationPeer(global::WinRT.DerivedComposed _):base(_)
        {

        }
        bool IWinRTObject.HasUnwrappableNativeObject => this.GetType() == typeof(FlipViewAutomationPeer);
        IObjectReference IWinRTObject.NativeObject => _inner;

        private struct InterfaceTag<I>{};


        protected override bool IsOverridableInterface(Guid iid) => base.IsOverridableInterface(iid);

        global::System.Runtime.InteropServices.CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(ref Guid iid, out IntPtr ppv)
        {
            ppv = IntPtr.Zero;
            if (IsOverridableInterface(iid) || global::WinRT.Interop.IID.IID_IInspectable == iid)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
            }

            if (((IWinRTObject)this).NativeObject.TryAs(iid, out ppv) >= 0)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.Handled;
            }

            return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
        }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")]
    [global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Automation.Peers.FlipViewItemAutomationPeer))]
    [global::ABI.Microsoft.UI.Xaml.Automation.Peers.FlipViewItemAutomationPeerRcwFactory]
    [global::WinRT.ProjectedRuntimeClass(typeof(IFlipViewItemAutomationPeer))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    public class FlipViewItemAutomationPeer : FrameworkElementAutomationPeer, global::System.Runtime.InteropServices.ICustomQueryInterface, IWinRTObject, IEquatable<FlipViewItemAutomationPeer>
    {
        private IntPtr ThisPtr => _inner == null ? (((IWinRTObject)this).NativeObject).ThisPtr : _inner.ThisPtr;

        private readonly IObjectReference _inner = null;




        private volatile IObjectReference ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IFlipViewItemAutomationPeer;
        private IObjectReference Make___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IFlipViewItemAutomationPeer()
        {
            global::System.Threading.Interlocked.CompareExchange(ref ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IFlipViewItemAutomationPeer, ((IWinRTObject)this).NativeObject.As<IUnknownVftbl>(global::ABI.Microsoft.UI.Xaml.Automation.Peers.IFlipViewItemAutomationPeerMethods.IID), null);
            return ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IFlipViewItemAutomationPeer;
        }
        private IObjectReference _objRef_global__Microsoft_UI_Xaml_Automation_Peers_IFlipViewItemAutomationPeer => ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IFlipViewItemAutomationPeer ?? Make___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IFlipViewItemAutomationPeer();



        private static class _IFlipViewItemAutomationPeerFactoryMethods
        {
            public static unsafe IntPtr CreateInstanceWithOwner(IObjectReference _obj, global::Microsoft.UI.Xaml.Controls.FlipViewItem owner, object baseInterface, out IntPtr innerInterface)
            {
                var ThisPtr = _obj.ThisPtr;

                ObjectReferenceValue __owner = default;
                ObjectReferenceValue __baseInterface = default;
                IntPtr __innerInterface = default;
                IntPtr __retval = default;
                try
                {
                    __owner = global::ABI.Microsoft.UI.Xaml.Controls.FlipViewItem.CreateMarshaler2(owner);
                    __baseInterface = MarshalInspectable<object>.CreateMarshaler2(baseInterface);
                    global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, IntPtr, IntPtr*, IntPtr*, int>**)ThisPtr)[6](ThisPtr, MarshalInspectable<object>.GetAbi(__owner), MarshalInspectable<object>.GetAbi(__baseInterface), &__innerInterface, &__retval));
                    global::System.GC.KeepAlive(_obj);
                    innerInterface = __innerInterface;
                    return __retval;
                }
                finally
                {
                    MarshalInspectable<object>.DisposeMarshaler(__owner);
                    MarshalInspectable<object>.DisposeMarshaler(__baseInterface);
                }
            }
        }

        private static volatile IObjectReference ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IFlipViewItemAutomationPeerFactory;
        private static IObjectReference _objRef_global__Microsoft_UI_Xaml_Automation_Peers_IFlipViewItemAutomationPeerFactory
        {
            get
            { 
                var factory = ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IFlipViewItemAutomationPeerFactory;
                if (factory != null && factory.IsInCurrentContext)
                {
                    return factory;
                }
                else
                {
                    return ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IFlipViewItemAutomationPeerFactory = ActivationFactory.Get("Microsoft.UI.Xaml.Automation.Peers.FlipViewItemAutomationPeer", global::ABI.Microsoft.UI.Xaml.Automation.Peers.IFlipViewItemAutomationPeerFactoryMethods.IID);
                }
            }
        }

        public FlipViewItemAutomationPeer(global::Microsoft.UI.Xaml.Controls.FlipViewItem owner):base(global::WinRT.DerivedComposed.Instance)
        {
            bool isAggregation = this.GetType() != typeof(FlipViewItemAutomationPeer);
            object baseInspectable = isAggregation ? this : null;
            IntPtr composed = _IFlipViewItemAutomationPeerFactoryMethods.CreateInstanceWithOwner(_objRef_global__Microsoft_UI_Xaml_Automation_Peers_IFlipViewItemAutomationPeerFactory, owner, baseInspectable, out IntPtr inner);
            try
            {
                ComWrappersHelper.Init(isAggregation, this, composed, inner, global::ABI.Microsoft.UI.Xaml.Automation.Peers.IFlipViewItemAutomationPeerMethods.IID, out _inner);

            }
            finally
            {
                Marshal.Release(inner);   
            }
        }

        public static new FlipViewItemAutomationPeer FromAbi(IntPtr thisPtr)
        {
            if (thisPtr == IntPtr.Zero) return null;
            return MarshalInspectable<FlipViewItemAutomationPeer>.FromAbi(thisPtr);
        }

        protected internal FlipViewItemAutomationPeer(IObjectReference objRef)
            : base(global::WinRT.DerivedComposed.Instance)

        {
            _inner = objRef.As(global::ABI.Microsoft.UI.Xaml.Automation.Peers.IFlipViewItemAutomationPeerMethods.IID);

        }


        public static bool operator ==(FlipViewItemAutomationPeer x, FlipViewItemAutomationPeer y) => (x?.ThisPtr ?? IntPtr.Zero) == (y?.ThisPtr ?? IntPtr.Zero);
        public static bool operator !=(FlipViewItemAutomationPeer x, FlipViewItemAutomationPeer y) => !(x == y);
        public bool Equals(FlipViewItemAutomationPeer other) => this == other;
        public override bool Equals(object obj) => obj is FlipViewItemAutomationPeer that && this == that;
        public override int GetHashCode() => ThisPtr.GetHashCode();


        protected FlipViewItemAutomationPeer(global::WinRT.DerivedComposed _):base(_)
        {

        }
        bool IWinRTObject.HasUnwrappableNativeObject => this.GetType() == typeof(FlipViewItemAutomationPeer);
        IObjectReference IWinRTObject.NativeObject => _inner;

        private struct InterfaceTag<I>{};


        protected override bool IsOverridableInterface(Guid iid) => base.IsOverridableInterface(iid);

        global::System.Runtime.InteropServices.CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(ref Guid iid, out IntPtr ppv)
        {
            ppv = IntPtr.Zero;
            if (IsOverridableInterface(iid) || global::WinRT.Interop.IID.IID_IInspectable == iid)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
            }

            if (((IWinRTObject)this).NativeObject.TryAs(iid, out ppv) >= 0)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.Handled;
            }

            return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
        }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")]
    [global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Automation.Peers.FlipViewItemDataAutomationPeer))]
    [global::ABI.Microsoft.UI.Xaml.Automation.Peers.FlipViewItemDataAutomationPeerRcwFactory]
    [global::WinRT.ProjectedRuntimeClass(typeof(IFlipViewItemDataAutomationPeer))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    public class FlipViewItemDataAutomationPeer : SelectorItemAutomationPeer, global::Microsoft.UI.Xaml.Automation.Provider.IScrollItemProvider, global::System.Runtime.InteropServices.ICustomQueryInterface, IWinRTObject, IEquatable<FlipViewItemDataAutomationPeer>
    {
        private IntPtr ThisPtr => _inner == null ? (((IWinRTObject)this).NativeObject).ThisPtr : _inner.ThisPtr;

        private readonly IObjectReference _inner = null;




        private volatile IObjectReference ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IFlipViewItemDataAutomationPeer;
        private IObjectReference Make___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IFlipViewItemDataAutomationPeer()
        {
            global::System.Threading.Interlocked.CompareExchange(ref ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IFlipViewItemDataAutomationPeer, ((IWinRTObject)this).NativeObject.As<IUnknownVftbl>(global::ABI.Microsoft.UI.Xaml.Automation.Peers.IFlipViewItemDataAutomationPeerMethods.IID), null);
            return ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IFlipViewItemDataAutomationPeer;
        }
        private IObjectReference _objRef_global__Microsoft_UI_Xaml_Automation_Peers_IFlipViewItemDataAutomationPeer => ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IFlipViewItemDataAutomationPeer ?? Make___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IFlipViewItemDataAutomationPeer();

        private volatile IObjectReference ___objRef_global__Microsoft_UI_Xaml_Automation_Provider_IScrollItemProvider;
        private IObjectReference Make___objRef_global__Microsoft_UI_Xaml_Automation_Provider_IScrollItemProvider()
        {
            global::System.Threading.Interlocked.CompareExchange(ref ___objRef_global__Microsoft_UI_Xaml_Automation_Provider_IScrollItemProvider, ((IWinRTObject)this).NativeObject.As<IUnknownVftbl>(global::ABI.Microsoft.UI.Xaml.Automation.Provider.IScrollItemProviderMethods.IID), null);
            return ___objRef_global__Microsoft_UI_Xaml_Automation_Provider_IScrollItemProvider;
        }
        private IObjectReference _objRef_global__Microsoft_UI_Xaml_Automation_Provider_IScrollItemProvider => ___objRef_global__Microsoft_UI_Xaml_Automation_Provider_IScrollItemProvider ?? Make___objRef_global__Microsoft_UI_Xaml_Automation_Provider_IScrollItemProvider();



        private static class _IFlipViewItemDataAutomationPeerFactoryMethods
        {
            public static unsafe IntPtr CreateInstanceWithParentAndItem(IObjectReference _obj, object item, FlipViewAutomationPeer parent, object baseInterface, out IntPtr innerInterface)
            {
                var ThisPtr = _obj.ThisPtr;

                ObjectReferenceValue __item = default;
                ObjectReferenceValue __parent = default;
                ObjectReferenceValue __baseInterface = default;
                IntPtr __innerInterface = default;
                IntPtr __retval = default;
                try
                {
                    __item = MarshalInspectable<object>.CreateMarshaler2(item);
                    __parent = global::ABI.Microsoft.UI.Xaml.Automation.Peers.FlipViewAutomationPeer.CreateMarshaler2(parent);
                    __baseInterface = MarshalInspectable<object>.CreateMarshaler2(baseInterface);
                    global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, IntPtr, IntPtr, IntPtr*, IntPtr*, int>**)ThisPtr)[6](ThisPtr, MarshalInspectable<object>.GetAbi(__item), MarshalInspectable<object>.GetAbi(__parent), MarshalInspectable<object>.GetAbi(__baseInterface), &__innerInterface, &__retval));
                    global::System.GC.KeepAlive(_obj);
                    innerInterface = __innerInterface;
                    return __retval;
                }
                finally
                {
                    MarshalInspectable<object>.DisposeMarshaler(__item);
                    MarshalInspectable<object>.DisposeMarshaler(__parent);
                    MarshalInspectable<object>.DisposeMarshaler(__baseInterface);
                }
            }
        }

        private static volatile IObjectReference ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IFlipViewItemDataAutomationPeerFactory;
        private static IObjectReference _objRef_global__Microsoft_UI_Xaml_Automation_Peers_IFlipViewItemDataAutomationPeerFactory
        {
            get
            { 
                var factory = ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IFlipViewItemDataAutomationPeerFactory;
                if (factory != null && factory.IsInCurrentContext)
                {
                    return factory;
                }
                else
                {
                    return ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IFlipViewItemDataAutomationPeerFactory = ActivationFactory.Get("Microsoft.UI.Xaml.Automation.Peers.FlipViewItemDataAutomationPeer", global::ABI.Microsoft.UI.Xaml.Automation.Peers.IFlipViewItemDataAutomationPeerFactoryMethods.IID);
                }
            }
        }

        public FlipViewItemDataAutomationPeer(object item, FlipViewAutomationPeer parent):base(global::WinRT.DerivedComposed.Instance)
        {
            bool isAggregation = this.GetType() != typeof(FlipViewItemDataAutomationPeer);
            object baseInspectable = isAggregation ? this : null;
            IntPtr composed = _IFlipViewItemDataAutomationPeerFactoryMethods.CreateInstanceWithParentAndItem(_objRef_global__Microsoft_UI_Xaml_Automation_Peers_IFlipViewItemDataAutomationPeerFactory, item, parent, baseInspectable, out IntPtr inner);
            try
            {
                ComWrappersHelper.Init(isAggregation, this, composed, inner, global::ABI.Microsoft.UI.Xaml.Automation.Peers.IFlipViewItemDataAutomationPeerMethods.IID, out _inner);

            }
            finally
            {
                Marshal.Release(inner);   
            }
        }

        public static new FlipViewItemDataAutomationPeer FromAbi(IntPtr thisPtr)
        {
            if (thisPtr == IntPtr.Zero) return null;
            return MarshalInspectable<FlipViewItemDataAutomationPeer>.FromAbi(thisPtr);
        }

        protected internal FlipViewItemDataAutomationPeer(IObjectReference objRef)
            : base(global::WinRT.DerivedComposed.Instance)

        {
            _inner = objRef.As(global::ABI.Microsoft.UI.Xaml.Automation.Peers.IFlipViewItemDataAutomationPeerMethods.IID);

        }


        public static bool operator ==(FlipViewItemDataAutomationPeer x, FlipViewItemDataAutomationPeer y) => (x?.ThisPtr ?? IntPtr.Zero) == (y?.ThisPtr ?? IntPtr.Zero);
        public static bool operator !=(FlipViewItemDataAutomationPeer x, FlipViewItemDataAutomationPeer y) => !(x == y);
        public bool Equals(FlipViewItemDataAutomationPeer other) => this == other;
        public override bool Equals(object obj) => obj is FlipViewItemDataAutomationPeer that && this == that;
        public override int GetHashCode() => ThisPtr.GetHashCode();


        protected FlipViewItemDataAutomationPeer(global::WinRT.DerivedComposed _):base(_)
        {

        }
        bool IWinRTObject.HasUnwrappableNativeObject => this.GetType() == typeof(FlipViewItemDataAutomationPeer);
        IObjectReference IWinRTObject.NativeObject => _inner;

        private struct InterfaceTag<I>{};


        public void ScrollIntoView() => global::ABI.Microsoft.UI.Xaml.Automation.Provider.IScrollItemProviderMethods.ScrollIntoView(_objRef_global__Microsoft_UI_Xaml_Automation_Provider_IScrollItemProvider);

        protected override bool IsOverridableInterface(Guid iid) => base.IsOverridableInterface(iid);

        global::System.Runtime.InteropServices.CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(ref Guid iid, out IntPtr ppv)
        {
            ppv = IntPtr.Zero;
            if (IsOverridableInterface(iid) || global::WinRT.Interop.IID.IID_IInspectable == iid)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
            }

            if (((IWinRTObject)this).NativeObject.TryAs(iid, out ppv) >= 0)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.Handled;
            }

            return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
        }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")]
    [global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Automation.Peers.FlyoutPresenterAutomationPeer))]
    [global::ABI.Microsoft.UI.Xaml.Automation.Peers.FlyoutPresenterAutomationPeerRcwFactory]
    [global::WinRT.ProjectedRuntimeClass(typeof(IFlyoutPresenterAutomationPeer))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    public class FlyoutPresenterAutomationPeer : FrameworkElementAutomationPeer, global::System.Runtime.InteropServices.ICustomQueryInterface, IWinRTObject, IEquatable<FlyoutPresenterAutomationPeer>
    {
        private IntPtr ThisPtr => _inner == null ? (((IWinRTObject)this).NativeObject).ThisPtr : _inner.ThisPtr;

        private readonly IObjectReference _inner = null;




        private volatile IObjectReference ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IFlyoutPresenterAutomationPeer;
        private IObjectReference Make___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IFlyoutPresenterAutomationPeer()
        {
            global::System.Threading.Interlocked.CompareExchange(ref ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IFlyoutPresenterAutomationPeer, ((IWinRTObject)this).NativeObject.As<IUnknownVftbl>(global::ABI.Microsoft.UI.Xaml.Automation.Peers.IFlyoutPresenterAutomationPeerMethods.IID), null);
            return ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IFlyoutPresenterAutomationPeer;
        }
        private IObjectReference _objRef_global__Microsoft_UI_Xaml_Automation_Peers_IFlyoutPresenterAutomationPeer => ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IFlyoutPresenterAutomationPeer ?? Make___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IFlyoutPresenterAutomationPeer();



        private static class _IFlyoutPresenterAutomationPeerFactoryMethods
        {
            public static unsafe IntPtr CreateInstanceWithOwner(IObjectReference _obj, global::Microsoft.UI.Xaml.Controls.FlyoutPresenter owner, object baseInterface, out IntPtr innerInterface)
            {
                var ThisPtr = _obj.ThisPtr;

                ObjectReferenceValue __owner = default;
                ObjectReferenceValue __baseInterface = default;
                IntPtr __innerInterface = default;
                IntPtr __retval = default;
                try
                {
                    __owner = global::ABI.Microsoft.UI.Xaml.Controls.FlyoutPresenter.CreateMarshaler2(owner);
                    __baseInterface = MarshalInspectable<object>.CreateMarshaler2(baseInterface);
                    global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, IntPtr, IntPtr*, IntPtr*, int>**)ThisPtr)[6](ThisPtr, MarshalInspectable<object>.GetAbi(__owner), MarshalInspectable<object>.GetAbi(__baseInterface), &__innerInterface, &__retval));
                    global::System.GC.KeepAlive(_obj);
                    innerInterface = __innerInterface;
                    return __retval;
                }
                finally
                {
                    MarshalInspectable<object>.DisposeMarshaler(__owner);
                    MarshalInspectable<object>.DisposeMarshaler(__baseInterface);
                }
            }
        }

        private static volatile IObjectReference ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IFlyoutPresenterAutomationPeerFactory;
        private static IObjectReference _objRef_global__Microsoft_UI_Xaml_Automation_Peers_IFlyoutPresenterAutomationPeerFactory
        {
            get
            { 
                var factory = ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IFlyoutPresenterAutomationPeerFactory;
                if (factory != null && factory.IsInCurrentContext)
                {
                    return factory;
                }
                else
                {
                    return ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IFlyoutPresenterAutomationPeerFactory = ActivationFactory.Get("Microsoft.UI.Xaml.Automation.Peers.FlyoutPresenterAutomationPeer", global::ABI.Microsoft.UI.Xaml.Automation.Peers.IFlyoutPresenterAutomationPeerFactoryMethods.IID);
                }
            }
        }

        public FlyoutPresenterAutomationPeer(global::Microsoft.UI.Xaml.Controls.FlyoutPresenter owner):base(global::WinRT.DerivedComposed.Instance)
        {
            bool isAggregation = this.GetType() != typeof(FlyoutPresenterAutomationPeer);
            object baseInspectable = isAggregation ? this : null;
            IntPtr composed = _IFlyoutPresenterAutomationPeerFactoryMethods.CreateInstanceWithOwner(_objRef_global__Microsoft_UI_Xaml_Automation_Peers_IFlyoutPresenterAutomationPeerFactory, owner, baseInspectable, out IntPtr inner);
            try
            {
                ComWrappersHelper.Init(isAggregation, this, composed, inner, global::ABI.Microsoft.UI.Xaml.Automation.Peers.IFlyoutPresenterAutomationPeerMethods.IID, out _inner);

            }
            finally
            {
                Marshal.Release(inner);   
            }
        }

        public static new FlyoutPresenterAutomationPeer FromAbi(IntPtr thisPtr)
        {
            if (thisPtr == IntPtr.Zero) return null;
            return MarshalInspectable<FlyoutPresenterAutomationPeer>.FromAbi(thisPtr);
        }

        protected internal FlyoutPresenterAutomationPeer(IObjectReference objRef)
            : base(global::WinRT.DerivedComposed.Instance)

        {
            _inner = objRef.As(global::ABI.Microsoft.UI.Xaml.Automation.Peers.IFlyoutPresenterAutomationPeerMethods.IID);

        }


        public static bool operator ==(FlyoutPresenterAutomationPeer x, FlyoutPresenterAutomationPeer y) => (x?.ThisPtr ?? IntPtr.Zero) == (y?.ThisPtr ?? IntPtr.Zero);
        public static bool operator !=(FlyoutPresenterAutomationPeer x, FlyoutPresenterAutomationPeer y) => !(x == y);
        public bool Equals(FlyoutPresenterAutomationPeer other) => this == other;
        public override bool Equals(object obj) => obj is FlyoutPresenterAutomationPeer that && this == that;
        public override int GetHashCode() => ThisPtr.GetHashCode();


        protected FlyoutPresenterAutomationPeer(global::WinRT.DerivedComposed _):base(_)
        {

        }
        bool IWinRTObject.HasUnwrappableNativeObject => this.GetType() == typeof(FlyoutPresenterAutomationPeer);
        IObjectReference IWinRTObject.NativeObject => _inner;

        private struct InterfaceTag<I>{};


        protected override bool IsOverridableInterface(Guid iid) => base.IsOverridableInterface(iid);

        global::System.Runtime.InteropServices.CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(ref Guid iid, out IntPtr ppv)
        {
            ppv = IntPtr.Zero;
            if (IsOverridableInterface(iid) || global::WinRT.Interop.IID.IID_IInspectable == iid)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
            }

            if (((IWinRTObject)this).NativeObject.TryAs(iid, out ppv) >= 0)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.Handled;
            }

            return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
        }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")]
    [global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Automation.Peers.FrameworkElementAutomationPeer))]
    [global::ABI.Microsoft.UI.Xaml.Automation.Peers.FrameworkElementAutomationPeerRcwFactory]
    [global::WinRT.ProjectedRuntimeClass(typeof(IFrameworkElementAutomationPeer))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    public class FrameworkElementAutomationPeer : AutomationPeer, global::System.Runtime.InteropServices.ICustomQueryInterface, IWinRTObject, IEquatable<FrameworkElementAutomationPeer>
    {
        private IntPtr ThisPtr => _inner == null ? (((IWinRTObject)this).NativeObject).ThisPtr : _inner.ThisPtr;

        private readonly IObjectReference _inner = null;




        private volatile IObjectReference ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IFrameworkElementAutomationPeer;
        private IObjectReference Make___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IFrameworkElementAutomationPeer()
        {
            global::System.Threading.Interlocked.CompareExchange(ref ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IFrameworkElementAutomationPeer, ((IWinRTObject)this).NativeObject.As<IUnknownVftbl>(global::ABI.Microsoft.UI.Xaml.Automation.Peers.IFrameworkElementAutomationPeerMethods.IID), null);
            return ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IFrameworkElementAutomationPeer;
        }
        private IObjectReference _objRef_global__Microsoft_UI_Xaml_Automation_Peers_IFrameworkElementAutomationPeer => ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IFrameworkElementAutomationPeer ?? Make___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IFrameworkElementAutomationPeer();



        private static class _IFrameworkElementAutomationPeerFactoryMethods
        {
            public static unsafe IntPtr CreateInstanceWithOwner(IObjectReference _obj, global::Microsoft.UI.Xaml.FrameworkElement owner, object baseInterface, out IntPtr innerInterface)
            {
                var ThisPtr = _obj.ThisPtr;

                ObjectReferenceValue __owner = default;
                ObjectReferenceValue __baseInterface = default;
                IntPtr __innerInterface = default;
                IntPtr __retval = default;
                try
                {
                    __owner = global::ABI.Microsoft.UI.Xaml.FrameworkElement.CreateMarshaler2(owner);
                    __baseInterface = MarshalInspectable<object>.CreateMarshaler2(baseInterface);
                    global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, IntPtr, IntPtr*, IntPtr*, int>**)ThisPtr)[6](ThisPtr, MarshalInspectable<object>.GetAbi(__owner), MarshalInspectable<object>.GetAbi(__baseInterface), &__innerInterface, &__retval));
                    global::System.GC.KeepAlive(_obj);
                    innerInterface = __innerInterface;
                    return __retval;
                }
                finally
                {
                    MarshalInspectable<object>.DisposeMarshaler(__owner);
                    MarshalInspectable<object>.DisposeMarshaler(__baseInterface);
                }
            }
        }

        private static volatile IObjectReference ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IFrameworkElementAutomationPeerFactory;
        private static IObjectReference _objRef_global__Microsoft_UI_Xaml_Automation_Peers_IFrameworkElementAutomationPeerFactory
        {
            get
            { 
                var factory = ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IFrameworkElementAutomationPeerFactory;
                if (factory != null && factory.IsInCurrentContext)
                {
                    return factory;
                }
                else
                {
                    return ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IFrameworkElementAutomationPeerFactory = ActivationFactory.Get("Microsoft.UI.Xaml.Automation.Peers.FrameworkElementAutomationPeer", global::ABI.Microsoft.UI.Xaml.Automation.Peers.IFrameworkElementAutomationPeerFactoryMethods.IID);
                }
            }
        }

        public FrameworkElementAutomationPeer(global::Microsoft.UI.Xaml.FrameworkElement owner):base(global::WinRT.DerivedComposed.Instance)
        {
            bool isAggregation = this.GetType() != typeof(FrameworkElementAutomationPeer);
            object baseInspectable = isAggregation ? this : null;
            IntPtr composed = _IFrameworkElementAutomationPeerFactoryMethods.CreateInstanceWithOwner(_objRef_global__Microsoft_UI_Xaml_Automation_Peers_IFrameworkElementAutomationPeerFactory, owner, baseInspectable, out IntPtr inner);
            try
            {
                ComWrappersHelper.Init(isAggregation, this, composed, inner, global::ABI.Microsoft.UI.Xaml.Automation.Peers.IFrameworkElementAutomationPeerMethods.IID, out _inner);

            }
            finally
            {
                Marshal.Release(inner);   
            }
        }

        public static new I As<I>() => ActivationFactory.Get("Microsoft.UI.Xaml.Automation.Peers.FrameworkElementAutomationPeer").AsInterface<I>();

        private static volatile IObjectReference ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IFrameworkElementAutomationPeerStatics;
        private static IObjectReference _objRef_global__Microsoft_UI_Xaml_Automation_Peers_IFrameworkElementAutomationPeerStatics
        {
            get
            { 
                var factory = ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IFrameworkElementAutomationPeerStatics;
                if (factory != null && factory.IsInCurrentContext)
                {
                    return factory;
                }
                else
                {
                    return ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IFrameworkElementAutomationPeerStatics = ActivationFactory.Get("Microsoft.UI.Xaml.Automation.Peers.FrameworkElementAutomationPeer", global::ABI.Microsoft.UI.Xaml.Automation.Peers.IFrameworkElementAutomationPeerStaticsMethods.IID);
                }
            }
        }

        public static AutomationPeer FromElement(global::Microsoft.UI.Xaml.UIElement element) => global::ABI.Microsoft.UI.Xaml.Automation.Peers.IFrameworkElementAutomationPeerStaticsMethods.FromElement(_objRef_global__Microsoft_UI_Xaml_Automation_Peers_IFrameworkElementAutomationPeerStatics, element);

        public static AutomationPeer CreatePeerForElement(global::Microsoft.UI.Xaml.UIElement element) => global::ABI.Microsoft.UI.Xaml.Automation.Peers.IFrameworkElementAutomationPeerStaticsMethods.CreatePeerForElement(_objRef_global__Microsoft_UI_Xaml_Automation_Peers_IFrameworkElementAutomationPeerStatics, element);

        public static new FrameworkElementAutomationPeer FromAbi(IntPtr thisPtr)
        {
            if (thisPtr == IntPtr.Zero) return null;
            return MarshalInspectable<FrameworkElementAutomationPeer>.FromAbi(thisPtr);
        }

        protected internal FrameworkElementAutomationPeer(IObjectReference objRef)
            : base(global::WinRT.DerivedComposed.Instance)

        {
            _inner = objRef.As(global::ABI.Microsoft.UI.Xaml.Automation.Peers.IFrameworkElementAutomationPeerMethods.IID);

        }


        public static bool operator ==(FrameworkElementAutomationPeer x, FrameworkElementAutomationPeer y) => (x?.ThisPtr ?? IntPtr.Zero) == (y?.ThisPtr ?? IntPtr.Zero);
        public static bool operator !=(FrameworkElementAutomationPeer x, FrameworkElementAutomationPeer y) => !(x == y);
        public bool Equals(FrameworkElementAutomationPeer other) => this == other;
        public override bool Equals(object obj) => obj is FrameworkElementAutomationPeer that && this == that;
        public override int GetHashCode() => ThisPtr.GetHashCode();


        protected FrameworkElementAutomationPeer(global::WinRT.DerivedComposed _):base(_)
        {

        }
        bool IWinRTObject.HasUnwrappableNativeObject => this.GetType() == typeof(FrameworkElementAutomationPeer);
        IObjectReference IWinRTObject.NativeObject => _inner;

        private struct InterfaceTag<I>{};


        public global::Microsoft.UI.Xaml.UIElement Owner => global::ABI.Microsoft.UI.Xaml.Automation.Peers.IFrameworkElementAutomationPeerMethods.get_Owner(_objRef_global__Microsoft_UI_Xaml_Automation_Peers_IFrameworkElementAutomationPeer);

        protected override bool IsOverridableInterface(Guid iid) => base.IsOverridableInterface(iid);

        global::System.Runtime.InteropServices.CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(ref Guid iid, out IntPtr ppv)
        {
            ppv = IntPtr.Zero;
            if (IsOverridableInterface(iid) || global::WinRT.Interop.IID.IID_IInspectable == iid)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
            }

            if (((IWinRTObject)this).NativeObject.TryAs(iid, out ppv) >= 0)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.Handled;
            }

            return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
        }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")]
    [global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Automation.Peers.GridViewAutomationPeer))]
    [global::ABI.Microsoft.UI.Xaml.Automation.Peers.GridViewAutomationPeerRcwFactory]
    [global::WinRT.ProjectedRuntimeClass(typeof(IGridViewAutomationPeer))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    public class GridViewAutomationPeer : ListViewBaseAutomationPeer, global::System.Runtime.InteropServices.ICustomQueryInterface, IWinRTObject, IEquatable<GridViewAutomationPeer>
    {
        private IntPtr ThisPtr => _inner == null ? (((IWinRTObject)this).NativeObject).ThisPtr : _inner.ThisPtr;

        private readonly IObjectReference _inner = null;




        private volatile IObjectReference ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IGridViewAutomationPeer;
        private IObjectReference Make___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IGridViewAutomationPeer()
        {
            global::System.Threading.Interlocked.CompareExchange(ref ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IGridViewAutomationPeer, ((IWinRTObject)this).NativeObject.As<IUnknownVftbl>(global::ABI.Microsoft.UI.Xaml.Automation.Peers.IGridViewAutomationPeerMethods.IID), null);
            return ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IGridViewAutomationPeer;
        }
        private IObjectReference _objRef_global__Microsoft_UI_Xaml_Automation_Peers_IGridViewAutomationPeer => ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IGridViewAutomationPeer ?? Make___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IGridViewAutomationPeer();



        private static class _IGridViewAutomationPeerFactoryMethods
        {
            public static unsafe IntPtr CreateInstanceWithOwner(IObjectReference _obj, global::Microsoft.UI.Xaml.Controls.GridView owner, object baseInterface, out IntPtr innerInterface)
            {
                var ThisPtr = _obj.ThisPtr;

                ObjectReferenceValue __owner = default;
                ObjectReferenceValue __baseInterface = default;
                IntPtr __innerInterface = default;
                IntPtr __retval = default;
                try
                {
                    __owner = global::ABI.Microsoft.UI.Xaml.Controls.GridView.CreateMarshaler2(owner);
                    __baseInterface = MarshalInspectable<object>.CreateMarshaler2(baseInterface);
                    global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, IntPtr, IntPtr*, IntPtr*, int>**)ThisPtr)[6](ThisPtr, MarshalInspectable<object>.GetAbi(__owner), MarshalInspectable<object>.GetAbi(__baseInterface), &__innerInterface, &__retval));
                    global::System.GC.KeepAlive(_obj);
                    innerInterface = __innerInterface;
                    return __retval;
                }
                finally
                {
                    MarshalInspectable<object>.DisposeMarshaler(__owner);
                    MarshalInspectable<object>.DisposeMarshaler(__baseInterface);
                }
            }
        }

        private static volatile IObjectReference ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IGridViewAutomationPeerFactory;
        private static IObjectReference _objRef_global__Microsoft_UI_Xaml_Automation_Peers_IGridViewAutomationPeerFactory
        {
            get
            { 
                var factory = ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IGridViewAutomationPeerFactory;
                if (factory != null && factory.IsInCurrentContext)
                {
                    return factory;
                }
                else
                {
                    return ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IGridViewAutomationPeerFactory = ActivationFactory.Get("Microsoft.UI.Xaml.Automation.Peers.GridViewAutomationPeer", global::ABI.Microsoft.UI.Xaml.Automation.Peers.IGridViewAutomationPeerFactoryMethods.IID);
                }
            }
        }

        public GridViewAutomationPeer(global::Microsoft.UI.Xaml.Controls.GridView owner):base(global::WinRT.DerivedComposed.Instance)
        {
            bool isAggregation = this.GetType() != typeof(GridViewAutomationPeer);
            object baseInspectable = isAggregation ? this : null;
            IntPtr composed = _IGridViewAutomationPeerFactoryMethods.CreateInstanceWithOwner(_objRef_global__Microsoft_UI_Xaml_Automation_Peers_IGridViewAutomationPeerFactory, owner, baseInspectable, out IntPtr inner);
            try
            {
                ComWrappersHelper.Init(isAggregation, this, composed, inner, global::ABI.Microsoft.UI.Xaml.Automation.Peers.IGridViewAutomationPeerMethods.IID, out _inner);

            }
            finally
            {
                Marshal.Release(inner);   
            }
        }

        public static new GridViewAutomationPeer FromAbi(IntPtr thisPtr)
        {
            if (thisPtr == IntPtr.Zero) return null;
            return MarshalInspectable<GridViewAutomationPeer>.FromAbi(thisPtr);
        }

        protected internal GridViewAutomationPeer(IObjectReference objRef)
            : base(global::WinRT.DerivedComposed.Instance)

        {
            _inner = objRef.As(global::ABI.Microsoft.UI.Xaml.Automation.Peers.IGridViewAutomationPeerMethods.IID);

        }


        public static bool operator ==(GridViewAutomationPeer x, GridViewAutomationPeer y) => (x?.ThisPtr ?? IntPtr.Zero) == (y?.ThisPtr ?? IntPtr.Zero);
        public static bool operator !=(GridViewAutomationPeer x, GridViewAutomationPeer y) => !(x == y);
        public bool Equals(GridViewAutomationPeer other) => this == other;
        public override bool Equals(object obj) => obj is GridViewAutomationPeer that && this == that;
        public override int GetHashCode() => ThisPtr.GetHashCode();


        protected GridViewAutomationPeer(global::WinRT.DerivedComposed _):base(_)
        {

        }
        bool IWinRTObject.HasUnwrappableNativeObject => this.GetType() == typeof(GridViewAutomationPeer);
        IObjectReference IWinRTObject.NativeObject => _inner;

        private struct InterfaceTag<I>{};


        protected override bool IsOverridableInterface(Guid iid) => base.IsOverridableInterface(iid);

        global::System.Runtime.InteropServices.CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(ref Guid iid, out IntPtr ppv)
        {
            ppv = IntPtr.Zero;
            if (IsOverridableInterface(iid) || global::WinRT.Interop.IID.IID_IInspectable == iid)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
            }

            if (((IWinRTObject)this).NativeObject.TryAs(iid, out ppv) >= 0)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.Handled;
            }

            return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
        }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")]
    [global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Automation.Peers.GridViewHeaderItemAutomationPeer))]
    [global::ABI.Microsoft.UI.Xaml.Automation.Peers.GridViewHeaderItemAutomationPeerRcwFactory]
    [global::WinRT.ProjectedRuntimeClass(typeof(IGridViewHeaderItemAutomationPeer))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    public class GridViewHeaderItemAutomationPeer : ListViewBaseHeaderItemAutomationPeer, global::System.Runtime.InteropServices.ICustomQueryInterface, IWinRTObject, IEquatable<GridViewHeaderItemAutomationPeer>
    {
        private IntPtr ThisPtr => _inner == null ? (((IWinRTObject)this).NativeObject).ThisPtr : _inner.ThisPtr;

        private readonly IObjectReference _inner = null;




        private volatile IObjectReference ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IGridViewHeaderItemAutomationPeer;
        private IObjectReference Make___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IGridViewHeaderItemAutomationPeer()
        {
            global::System.Threading.Interlocked.CompareExchange(ref ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IGridViewHeaderItemAutomationPeer, ((IWinRTObject)this).NativeObject.As<IUnknownVftbl>(global::ABI.Microsoft.UI.Xaml.Automation.Peers.IGridViewHeaderItemAutomationPeerMethods.IID), null);
            return ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IGridViewHeaderItemAutomationPeer;
        }
        private IObjectReference _objRef_global__Microsoft_UI_Xaml_Automation_Peers_IGridViewHeaderItemAutomationPeer => ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IGridViewHeaderItemAutomationPeer ?? Make___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IGridViewHeaderItemAutomationPeer();



        private static class _IGridViewHeaderItemAutomationPeerFactoryMethods
        {
            public static unsafe IntPtr CreateInstanceWithOwner(IObjectReference _obj, global::Microsoft.UI.Xaml.Controls.GridViewHeaderItem owner, object baseInterface, out IntPtr innerInterface)
            {
                var ThisPtr = _obj.ThisPtr;

                ObjectReferenceValue __owner = default;
                ObjectReferenceValue __baseInterface = default;
                IntPtr __innerInterface = default;
                IntPtr __retval = default;
                try
                {
                    __owner = global::ABI.Microsoft.UI.Xaml.Controls.GridViewHeaderItem.CreateMarshaler2(owner);
                    __baseInterface = MarshalInspectable<object>.CreateMarshaler2(baseInterface);
                    global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, IntPtr, IntPtr*, IntPtr*, int>**)ThisPtr)[6](ThisPtr, MarshalInspectable<object>.GetAbi(__owner), MarshalInspectable<object>.GetAbi(__baseInterface), &__innerInterface, &__retval));
                    global::System.GC.KeepAlive(_obj);
                    innerInterface = __innerInterface;
                    return __retval;
                }
                finally
                {
                    MarshalInspectable<object>.DisposeMarshaler(__owner);
                    MarshalInspectable<object>.DisposeMarshaler(__baseInterface);
                }
            }
        }

        private static volatile IObjectReference ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IGridViewHeaderItemAutomationPeerFactory;
        private static IObjectReference _objRef_global__Microsoft_UI_Xaml_Automation_Peers_IGridViewHeaderItemAutomationPeerFactory
        {
            get
            { 
                var factory = ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IGridViewHeaderItemAutomationPeerFactory;
                if (factory != null && factory.IsInCurrentContext)
                {
                    return factory;
                }
                else
                {
                    return ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IGridViewHeaderItemAutomationPeerFactory = ActivationFactory.Get("Microsoft.UI.Xaml.Automation.Peers.GridViewHeaderItemAutomationPeer", global::ABI.Microsoft.UI.Xaml.Automation.Peers.IGridViewHeaderItemAutomationPeerFactoryMethods.IID);
                }
            }
        }

        public GridViewHeaderItemAutomationPeer(global::Microsoft.UI.Xaml.Controls.GridViewHeaderItem owner):base(global::WinRT.DerivedComposed.Instance)
        {
            bool isAggregation = this.GetType() != typeof(GridViewHeaderItemAutomationPeer);
            object baseInspectable = isAggregation ? this : null;
            IntPtr composed = _IGridViewHeaderItemAutomationPeerFactoryMethods.CreateInstanceWithOwner(_objRef_global__Microsoft_UI_Xaml_Automation_Peers_IGridViewHeaderItemAutomationPeerFactory, owner, baseInspectable, out IntPtr inner);
            try
            {
                ComWrappersHelper.Init(isAggregation, this, composed, inner, global::ABI.Microsoft.UI.Xaml.Automation.Peers.IGridViewHeaderItemAutomationPeerMethods.IID, out _inner);

            }
            finally
            {
                Marshal.Release(inner);   
            }
        }

        public static new GridViewHeaderItemAutomationPeer FromAbi(IntPtr thisPtr)
        {
            if (thisPtr == IntPtr.Zero) return null;
            return MarshalInspectable<GridViewHeaderItemAutomationPeer>.FromAbi(thisPtr);
        }

        protected internal GridViewHeaderItemAutomationPeer(IObjectReference objRef)
            : base(global::WinRT.DerivedComposed.Instance)

        {
            _inner = objRef.As(global::ABI.Microsoft.UI.Xaml.Automation.Peers.IGridViewHeaderItemAutomationPeerMethods.IID);

        }


        public static bool operator ==(GridViewHeaderItemAutomationPeer x, GridViewHeaderItemAutomationPeer y) => (x?.ThisPtr ?? IntPtr.Zero) == (y?.ThisPtr ?? IntPtr.Zero);
        public static bool operator !=(GridViewHeaderItemAutomationPeer x, GridViewHeaderItemAutomationPeer y) => !(x == y);
        public bool Equals(GridViewHeaderItemAutomationPeer other) => this == other;
        public override bool Equals(object obj) => obj is GridViewHeaderItemAutomationPeer that && this == that;
        public override int GetHashCode() => ThisPtr.GetHashCode();


        protected GridViewHeaderItemAutomationPeer(global::WinRT.DerivedComposed _):base(_)
        {

        }
        bool IWinRTObject.HasUnwrappableNativeObject => this.GetType() == typeof(GridViewHeaderItemAutomationPeer);
        IObjectReference IWinRTObject.NativeObject => _inner;

        private struct InterfaceTag<I>{};


        protected override bool IsOverridableInterface(Guid iid) => base.IsOverridableInterface(iid);

        global::System.Runtime.InteropServices.CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(ref Guid iid, out IntPtr ppv)
        {
            ppv = IntPtr.Zero;
            if (IsOverridableInterface(iid) || global::WinRT.Interop.IID.IID_IInspectable == iid)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
            }

            if (((IWinRTObject)this).NativeObject.TryAs(iid, out ppv) >= 0)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.Handled;
            }

            return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
        }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")]
    [global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Automation.Peers.GridViewItemAutomationPeer))]
    [global::ABI.Microsoft.UI.Xaml.Automation.Peers.GridViewItemAutomationPeerRcwFactory]
    [global::WinRT.ProjectedRuntimeClass(typeof(IGridViewItemAutomationPeer))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    public class GridViewItemAutomationPeer : FrameworkElementAutomationPeer, global::System.Runtime.InteropServices.ICustomQueryInterface, IWinRTObject, IEquatable<GridViewItemAutomationPeer>
    {
        private IntPtr ThisPtr => _inner == null ? (((IWinRTObject)this).NativeObject).ThisPtr : _inner.ThisPtr;

        private readonly IObjectReference _inner = null;




        private volatile IObjectReference ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IGridViewItemAutomationPeer;
        private IObjectReference Make___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IGridViewItemAutomationPeer()
        {
            global::System.Threading.Interlocked.CompareExchange(ref ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IGridViewItemAutomationPeer, ((IWinRTObject)this).NativeObject.As<IUnknownVftbl>(global::ABI.Microsoft.UI.Xaml.Automation.Peers.IGridViewItemAutomationPeerMethods.IID), null);
            return ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IGridViewItemAutomationPeer;
        }
        private IObjectReference _objRef_global__Microsoft_UI_Xaml_Automation_Peers_IGridViewItemAutomationPeer => ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IGridViewItemAutomationPeer ?? Make___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IGridViewItemAutomationPeer();



        private static class _IGridViewItemAutomationPeerFactoryMethods
        {
            public static unsafe IntPtr CreateInstanceWithOwner(IObjectReference _obj, global::Microsoft.UI.Xaml.Controls.GridViewItem owner, object baseInterface, out IntPtr innerInterface)
            {
                var ThisPtr = _obj.ThisPtr;

                ObjectReferenceValue __owner = default;
                ObjectReferenceValue __baseInterface = default;
                IntPtr __innerInterface = default;
                IntPtr __retval = default;
                try
                {
                    __owner = global::ABI.Microsoft.UI.Xaml.Controls.GridViewItem.CreateMarshaler2(owner);
                    __baseInterface = MarshalInspectable<object>.CreateMarshaler2(baseInterface);
                    global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, IntPtr, IntPtr*, IntPtr*, int>**)ThisPtr)[6](ThisPtr, MarshalInspectable<object>.GetAbi(__owner), MarshalInspectable<object>.GetAbi(__baseInterface), &__innerInterface, &__retval));
                    global::System.GC.KeepAlive(_obj);
                    innerInterface = __innerInterface;
                    return __retval;
                }
                finally
                {
                    MarshalInspectable<object>.DisposeMarshaler(__owner);
                    MarshalInspectable<object>.DisposeMarshaler(__baseInterface);
                }
            }
        }

        private static volatile IObjectReference ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IGridViewItemAutomationPeerFactory;
        private static IObjectReference _objRef_global__Microsoft_UI_Xaml_Automation_Peers_IGridViewItemAutomationPeerFactory
        {
            get
            { 
                var factory = ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IGridViewItemAutomationPeerFactory;
                if (factory != null && factory.IsInCurrentContext)
                {
                    return factory;
                }
                else
                {
                    return ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IGridViewItemAutomationPeerFactory = ActivationFactory.Get("Microsoft.UI.Xaml.Automation.Peers.GridViewItemAutomationPeer", global::ABI.Microsoft.UI.Xaml.Automation.Peers.IGridViewItemAutomationPeerFactoryMethods.IID);
                }
            }
        }

        public GridViewItemAutomationPeer(global::Microsoft.UI.Xaml.Controls.GridViewItem owner):base(global::WinRT.DerivedComposed.Instance)
        {
            bool isAggregation = this.GetType() != typeof(GridViewItemAutomationPeer);
            object baseInspectable = isAggregation ? this : null;
            IntPtr composed = _IGridViewItemAutomationPeerFactoryMethods.CreateInstanceWithOwner(_objRef_global__Microsoft_UI_Xaml_Automation_Peers_IGridViewItemAutomationPeerFactory, owner, baseInspectable, out IntPtr inner);
            try
            {
                ComWrappersHelper.Init(isAggregation, this, composed, inner, global::ABI.Microsoft.UI.Xaml.Automation.Peers.IGridViewItemAutomationPeerMethods.IID, out _inner);

            }
            finally
            {
                Marshal.Release(inner);   
            }
        }

        public static new GridViewItemAutomationPeer FromAbi(IntPtr thisPtr)
        {
            if (thisPtr == IntPtr.Zero) return null;
            return MarshalInspectable<GridViewItemAutomationPeer>.FromAbi(thisPtr);
        }

        protected internal GridViewItemAutomationPeer(IObjectReference objRef)
            : base(global::WinRT.DerivedComposed.Instance)

        {
            _inner = objRef.As(global::ABI.Microsoft.UI.Xaml.Automation.Peers.IGridViewItemAutomationPeerMethods.IID);

        }


        public static bool operator ==(GridViewItemAutomationPeer x, GridViewItemAutomationPeer y) => (x?.ThisPtr ?? IntPtr.Zero) == (y?.ThisPtr ?? IntPtr.Zero);
        public static bool operator !=(GridViewItemAutomationPeer x, GridViewItemAutomationPeer y) => !(x == y);
        public bool Equals(GridViewItemAutomationPeer other) => this == other;
        public override bool Equals(object obj) => obj is GridViewItemAutomationPeer that && this == that;
        public override int GetHashCode() => ThisPtr.GetHashCode();


        protected GridViewItemAutomationPeer(global::WinRT.DerivedComposed _):base(_)
        {

        }
        bool IWinRTObject.HasUnwrappableNativeObject => this.GetType() == typeof(GridViewItemAutomationPeer);
        IObjectReference IWinRTObject.NativeObject => _inner;

        private struct InterfaceTag<I>{};


        protected override bool IsOverridableInterface(Guid iid) => base.IsOverridableInterface(iid);

        global::System.Runtime.InteropServices.CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(ref Guid iid, out IntPtr ppv)
        {
            ppv = IntPtr.Zero;
            if (IsOverridableInterface(iid) || global::WinRT.Interop.IID.IID_IInspectable == iid)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
            }

            if (((IWinRTObject)this).NativeObject.TryAs(iid, out ppv) >= 0)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.Handled;
            }

            return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
        }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")]
    [global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Automation.Peers.GridViewItemDataAutomationPeer))]
    [global::ABI.Microsoft.UI.Xaml.Automation.Peers.GridViewItemDataAutomationPeerRcwFactory]
    [global::WinRT.ProjectedRuntimeClass(typeof(IGridViewItemDataAutomationPeer))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    public class GridViewItemDataAutomationPeer : SelectorItemAutomationPeer, global::Microsoft.UI.Xaml.Automation.Provider.IScrollItemProvider, global::System.Runtime.InteropServices.ICustomQueryInterface, IWinRTObject, IEquatable<GridViewItemDataAutomationPeer>
    {
        private IntPtr ThisPtr => _inner == null ? (((IWinRTObject)this).NativeObject).ThisPtr : _inner.ThisPtr;

        private readonly IObjectReference _inner = null;




        private volatile IObjectReference ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IGridViewItemDataAutomationPeer;
        private IObjectReference Make___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IGridViewItemDataAutomationPeer()
        {
            global::System.Threading.Interlocked.CompareExchange(ref ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IGridViewItemDataAutomationPeer, ((IWinRTObject)this).NativeObject.As<IUnknownVftbl>(global::ABI.Microsoft.UI.Xaml.Automation.Peers.IGridViewItemDataAutomationPeerMethods.IID), null);
            return ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IGridViewItemDataAutomationPeer;
        }
        private IObjectReference _objRef_global__Microsoft_UI_Xaml_Automation_Peers_IGridViewItemDataAutomationPeer => ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IGridViewItemDataAutomationPeer ?? Make___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IGridViewItemDataAutomationPeer();

        private volatile IObjectReference ___objRef_global__Microsoft_UI_Xaml_Automation_Provider_IScrollItemProvider;
        private IObjectReference Make___objRef_global__Microsoft_UI_Xaml_Automation_Provider_IScrollItemProvider()
        {
            global::System.Threading.Interlocked.CompareExchange(ref ___objRef_global__Microsoft_UI_Xaml_Automation_Provider_IScrollItemProvider, ((IWinRTObject)this).NativeObject.As<IUnknownVftbl>(global::ABI.Microsoft.UI.Xaml.Automation.Provider.IScrollItemProviderMethods.IID), null);
            return ___objRef_global__Microsoft_UI_Xaml_Automation_Provider_IScrollItemProvider;
        }
        private IObjectReference _objRef_global__Microsoft_UI_Xaml_Automation_Provider_IScrollItemProvider => ___objRef_global__Microsoft_UI_Xaml_Automation_Provider_IScrollItemProvider ?? Make___objRef_global__Microsoft_UI_Xaml_Automation_Provider_IScrollItemProvider();



        private static class _IGridViewItemDataAutomationPeerFactoryMethods
        {
            public static unsafe IntPtr CreateInstanceWithParentAndItem(IObjectReference _obj, object item, GridViewAutomationPeer parent, object baseInterface, out IntPtr innerInterface)
            {
                var ThisPtr = _obj.ThisPtr;

                ObjectReferenceValue __item = default;
                ObjectReferenceValue __parent = default;
                ObjectReferenceValue __baseInterface = default;
                IntPtr __innerInterface = default;
                IntPtr __retval = default;
                try
                {
                    __item = MarshalInspectable<object>.CreateMarshaler2(item);
                    __parent = global::ABI.Microsoft.UI.Xaml.Automation.Peers.GridViewAutomationPeer.CreateMarshaler2(parent);
                    __baseInterface = MarshalInspectable<object>.CreateMarshaler2(baseInterface);
                    global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, IntPtr, IntPtr, IntPtr*, IntPtr*, int>**)ThisPtr)[6](ThisPtr, MarshalInspectable<object>.GetAbi(__item), MarshalInspectable<object>.GetAbi(__parent), MarshalInspectable<object>.GetAbi(__baseInterface), &__innerInterface, &__retval));
                    global::System.GC.KeepAlive(_obj);
                    innerInterface = __innerInterface;
                    return __retval;
                }
                finally
                {
                    MarshalInspectable<object>.DisposeMarshaler(__item);
                    MarshalInspectable<object>.DisposeMarshaler(__parent);
                    MarshalInspectable<object>.DisposeMarshaler(__baseInterface);
                }
            }
        }

        private static volatile IObjectReference ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IGridViewItemDataAutomationPeerFactory;
        private static IObjectReference _objRef_global__Microsoft_UI_Xaml_Automation_Peers_IGridViewItemDataAutomationPeerFactory
        {
            get
            { 
                var factory = ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IGridViewItemDataAutomationPeerFactory;
                if (factory != null && factory.IsInCurrentContext)
                {
                    return factory;
                }
                else
                {
                    return ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IGridViewItemDataAutomationPeerFactory = ActivationFactory.Get("Microsoft.UI.Xaml.Automation.Peers.GridViewItemDataAutomationPeer", global::ABI.Microsoft.UI.Xaml.Automation.Peers.IGridViewItemDataAutomationPeerFactoryMethods.IID);
                }
            }
        }

        public GridViewItemDataAutomationPeer(object item, GridViewAutomationPeer parent):base(global::WinRT.DerivedComposed.Instance)
        {
            bool isAggregation = this.GetType() != typeof(GridViewItemDataAutomationPeer);
            object baseInspectable = isAggregation ? this : null;
            IntPtr composed = _IGridViewItemDataAutomationPeerFactoryMethods.CreateInstanceWithParentAndItem(_objRef_global__Microsoft_UI_Xaml_Automation_Peers_IGridViewItemDataAutomationPeerFactory, item, parent, baseInspectable, out IntPtr inner);
            try
            {
                ComWrappersHelper.Init(isAggregation, this, composed, inner, global::ABI.Microsoft.UI.Xaml.Automation.Peers.IGridViewItemDataAutomationPeerMethods.IID, out _inner);

            }
            finally
            {
                Marshal.Release(inner);   
            }
        }

        public static new GridViewItemDataAutomationPeer FromAbi(IntPtr thisPtr)
        {
            if (thisPtr == IntPtr.Zero) return null;
            return MarshalInspectable<GridViewItemDataAutomationPeer>.FromAbi(thisPtr);
        }

        protected internal GridViewItemDataAutomationPeer(IObjectReference objRef)
            : base(global::WinRT.DerivedComposed.Instance)

        {
            _inner = objRef.As(global::ABI.Microsoft.UI.Xaml.Automation.Peers.IGridViewItemDataAutomationPeerMethods.IID);

        }


        public static bool operator ==(GridViewItemDataAutomationPeer x, GridViewItemDataAutomationPeer y) => (x?.ThisPtr ?? IntPtr.Zero) == (y?.ThisPtr ?? IntPtr.Zero);
        public static bool operator !=(GridViewItemDataAutomationPeer x, GridViewItemDataAutomationPeer y) => !(x == y);
        public bool Equals(GridViewItemDataAutomationPeer other) => this == other;
        public override bool Equals(object obj) => obj is GridViewItemDataAutomationPeer that && this == that;
        public override int GetHashCode() => ThisPtr.GetHashCode();


        protected GridViewItemDataAutomationPeer(global::WinRT.DerivedComposed _):base(_)
        {

        }
        bool IWinRTObject.HasUnwrappableNativeObject => this.GetType() == typeof(GridViewItemDataAutomationPeer);
        IObjectReference IWinRTObject.NativeObject => _inner;

        private struct InterfaceTag<I>{};


        public void ScrollIntoView() => global::ABI.Microsoft.UI.Xaml.Automation.Provider.IScrollItemProviderMethods.ScrollIntoView(_objRef_global__Microsoft_UI_Xaml_Automation_Provider_IScrollItemProvider);

        protected override bool IsOverridableInterface(Guid iid) => base.IsOverridableInterface(iid);

        global::System.Runtime.InteropServices.CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(ref Guid iid, out IntPtr ppv)
        {
            ppv = IntPtr.Zero;
            if (IsOverridableInterface(iid) || global::WinRT.Interop.IID.IID_IInspectable == iid)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
            }

            if (((IWinRTObject)this).NativeObject.TryAs(iid, out ppv) >= 0)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.Handled;
            }

            return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
        }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")]
    [global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Automation.Peers.GroupItemAutomationPeer))]
    [global::ABI.Microsoft.UI.Xaml.Automation.Peers.GroupItemAutomationPeerRcwFactory]
    [global::WinRT.ProjectedRuntimeClass(typeof(IGroupItemAutomationPeer))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    public class GroupItemAutomationPeer : FrameworkElementAutomationPeer, global::System.Runtime.InteropServices.ICustomQueryInterface, IWinRTObject, IEquatable<GroupItemAutomationPeer>
    {
        private IntPtr ThisPtr => _inner == null ? (((IWinRTObject)this).NativeObject).ThisPtr : _inner.ThisPtr;

        private readonly IObjectReference _inner = null;




        private volatile IObjectReference ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IGroupItemAutomationPeer;
        private IObjectReference Make___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IGroupItemAutomationPeer()
        {
            global::System.Threading.Interlocked.CompareExchange(ref ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IGroupItemAutomationPeer, ((IWinRTObject)this).NativeObject.As<IUnknownVftbl>(global::ABI.Microsoft.UI.Xaml.Automation.Peers.IGroupItemAutomationPeerMethods.IID), null);
            return ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IGroupItemAutomationPeer;
        }
        private IObjectReference _objRef_global__Microsoft_UI_Xaml_Automation_Peers_IGroupItemAutomationPeer => ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IGroupItemAutomationPeer ?? Make___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IGroupItemAutomationPeer();



        private static class _IGroupItemAutomationPeerFactoryMethods
        {
            public static unsafe IntPtr CreateInstanceWithOwner(IObjectReference _obj, global::Microsoft.UI.Xaml.Controls.GroupItem owner, object baseInterface, out IntPtr innerInterface)
            {
                var ThisPtr = _obj.ThisPtr;

                ObjectReferenceValue __owner = default;
                ObjectReferenceValue __baseInterface = default;
                IntPtr __innerInterface = default;
                IntPtr __retval = default;
                try
                {
                    __owner = global::ABI.Microsoft.UI.Xaml.Controls.GroupItem.CreateMarshaler2(owner);
                    __baseInterface = MarshalInspectable<object>.CreateMarshaler2(baseInterface);
                    global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, IntPtr, IntPtr*, IntPtr*, int>**)ThisPtr)[6](ThisPtr, MarshalInspectable<object>.GetAbi(__owner), MarshalInspectable<object>.GetAbi(__baseInterface), &__innerInterface, &__retval));
                    global::System.GC.KeepAlive(_obj);
                    innerInterface = __innerInterface;
                    return __retval;
                }
                finally
                {
                    MarshalInspectable<object>.DisposeMarshaler(__owner);
                    MarshalInspectable<object>.DisposeMarshaler(__baseInterface);
                }
            }
        }

        private static volatile IObjectReference ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IGroupItemAutomationPeerFactory;
        private static IObjectReference _objRef_global__Microsoft_UI_Xaml_Automation_Peers_IGroupItemAutomationPeerFactory
        {
            get
            { 
                var factory = ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IGroupItemAutomationPeerFactory;
                if (factory != null && factory.IsInCurrentContext)
                {
                    return factory;
                }
                else
                {
                    return ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IGroupItemAutomationPeerFactory = ActivationFactory.Get("Microsoft.UI.Xaml.Automation.Peers.GroupItemAutomationPeer", global::ABI.Microsoft.UI.Xaml.Automation.Peers.IGroupItemAutomationPeerFactoryMethods.IID);
                }
            }
        }

        public GroupItemAutomationPeer(global::Microsoft.UI.Xaml.Controls.GroupItem owner):base(global::WinRT.DerivedComposed.Instance)
        {
            bool isAggregation = this.GetType() != typeof(GroupItemAutomationPeer);
            object baseInspectable = isAggregation ? this : null;
            IntPtr composed = _IGroupItemAutomationPeerFactoryMethods.CreateInstanceWithOwner(_objRef_global__Microsoft_UI_Xaml_Automation_Peers_IGroupItemAutomationPeerFactory, owner, baseInspectable, out IntPtr inner);
            try
            {
                ComWrappersHelper.Init(isAggregation, this, composed, inner, global::ABI.Microsoft.UI.Xaml.Automation.Peers.IGroupItemAutomationPeerMethods.IID, out _inner);

            }
            finally
            {
                Marshal.Release(inner);   
            }
        }

        public static new GroupItemAutomationPeer FromAbi(IntPtr thisPtr)
        {
            if (thisPtr == IntPtr.Zero) return null;
            return MarshalInspectable<GroupItemAutomationPeer>.FromAbi(thisPtr);
        }

        protected internal GroupItemAutomationPeer(IObjectReference objRef)
            : base(global::WinRT.DerivedComposed.Instance)

        {
            _inner = objRef.As(global::ABI.Microsoft.UI.Xaml.Automation.Peers.IGroupItemAutomationPeerMethods.IID);

        }


        public static bool operator ==(GroupItemAutomationPeer x, GroupItemAutomationPeer y) => (x?.ThisPtr ?? IntPtr.Zero) == (y?.ThisPtr ?? IntPtr.Zero);
        public static bool operator !=(GroupItemAutomationPeer x, GroupItemAutomationPeer y) => !(x == y);
        public bool Equals(GroupItemAutomationPeer other) => this == other;
        public override bool Equals(object obj) => obj is GroupItemAutomationPeer that && this == that;
        public override int GetHashCode() => ThisPtr.GetHashCode();


        protected GroupItemAutomationPeer(global::WinRT.DerivedComposed _):base(_)
        {

        }
        bool IWinRTObject.HasUnwrappableNativeObject => this.GetType() == typeof(GroupItemAutomationPeer);
        IObjectReference IWinRTObject.NativeObject => _inner;

        private struct InterfaceTag<I>{};


        protected override bool IsOverridableInterface(Guid iid) => base.IsOverridableInterface(iid);

        global::System.Runtime.InteropServices.CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(ref Guid iid, out IntPtr ppv)
        {
            ppv = IntPtr.Zero;
            if (IsOverridableInterface(iid) || global::WinRT.Interop.IID.IID_IInspectable == iid)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
            }

            if (((IWinRTObject)this).NativeObject.TryAs(iid, out ppv) >= 0)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.Handled;
            }

            return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
        }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")]
    [global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Automation.Peers.HubAutomationPeer))]
    [global::ABI.Microsoft.UI.Xaml.Automation.Peers.HubAutomationPeerRcwFactory]
    [global::WinRT.ProjectedRuntimeClass(typeof(IHubAutomationPeer))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    public class HubAutomationPeer : FrameworkElementAutomationPeer, global::System.Runtime.InteropServices.ICustomQueryInterface, IWinRTObject, IEquatable<HubAutomationPeer>
    {
        private IntPtr ThisPtr => _inner == null ? (((IWinRTObject)this).NativeObject).ThisPtr : _inner.ThisPtr;

        private readonly IObjectReference _inner = null;




        private volatile IObjectReference ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IHubAutomationPeer;
        private IObjectReference Make___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IHubAutomationPeer()
        {
            global::System.Threading.Interlocked.CompareExchange(ref ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IHubAutomationPeer, ((IWinRTObject)this).NativeObject.As<IUnknownVftbl>(global::ABI.Microsoft.UI.Xaml.Automation.Peers.IHubAutomationPeerMethods.IID), null);
            return ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IHubAutomationPeer;
        }
        private IObjectReference _objRef_global__Microsoft_UI_Xaml_Automation_Peers_IHubAutomationPeer => ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IHubAutomationPeer ?? Make___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IHubAutomationPeer();



        private static class _IHubAutomationPeerFactoryMethods
        {
            public static unsafe IntPtr CreateInstanceWithOwner(IObjectReference _obj, global::Microsoft.UI.Xaml.Controls.Hub owner, object baseInterface, out IntPtr innerInterface)
            {
                var ThisPtr = _obj.ThisPtr;

                ObjectReferenceValue __owner = default;
                ObjectReferenceValue __baseInterface = default;
                IntPtr __innerInterface = default;
                IntPtr __retval = default;
                try
                {
                    __owner = global::ABI.Microsoft.UI.Xaml.Controls.Hub.CreateMarshaler2(owner);
                    __baseInterface = MarshalInspectable<object>.CreateMarshaler2(baseInterface);
                    global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, IntPtr, IntPtr*, IntPtr*, int>**)ThisPtr)[6](ThisPtr, MarshalInspectable<object>.GetAbi(__owner), MarshalInspectable<object>.GetAbi(__baseInterface), &__innerInterface, &__retval));
                    global::System.GC.KeepAlive(_obj);
                    innerInterface = __innerInterface;
                    return __retval;
                }
                finally
                {
                    MarshalInspectable<object>.DisposeMarshaler(__owner);
                    MarshalInspectable<object>.DisposeMarshaler(__baseInterface);
                }
            }
        }

        private static volatile IObjectReference ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IHubAutomationPeerFactory;
        private static IObjectReference _objRef_global__Microsoft_UI_Xaml_Automation_Peers_IHubAutomationPeerFactory
        {
            get
            { 
                var factory = ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IHubAutomationPeerFactory;
                if (factory != null && factory.IsInCurrentContext)
                {
                    return factory;
                }
                else
                {
                    return ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IHubAutomationPeerFactory = ActivationFactory.Get("Microsoft.UI.Xaml.Automation.Peers.HubAutomationPeer", global::ABI.Microsoft.UI.Xaml.Automation.Peers.IHubAutomationPeerFactoryMethods.IID);
                }
            }
        }

        public HubAutomationPeer(global::Microsoft.UI.Xaml.Controls.Hub owner):base(global::WinRT.DerivedComposed.Instance)
        {
            bool isAggregation = this.GetType() != typeof(HubAutomationPeer);
            object baseInspectable = isAggregation ? this : null;
            IntPtr composed = _IHubAutomationPeerFactoryMethods.CreateInstanceWithOwner(_objRef_global__Microsoft_UI_Xaml_Automation_Peers_IHubAutomationPeerFactory, owner, baseInspectable, out IntPtr inner);
            try
            {
                ComWrappersHelper.Init(isAggregation, this, composed, inner, global::ABI.Microsoft.UI.Xaml.Automation.Peers.IHubAutomationPeerMethods.IID, out _inner);

            }
            finally
            {
                Marshal.Release(inner);   
            }
        }

        public static new HubAutomationPeer FromAbi(IntPtr thisPtr)
        {
            if (thisPtr == IntPtr.Zero) return null;
            return MarshalInspectable<HubAutomationPeer>.FromAbi(thisPtr);
        }

        protected internal HubAutomationPeer(IObjectReference objRef)
            : base(global::WinRT.DerivedComposed.Instance)

        {
            _inner = objRef.As(global::ABI.Microsoft.UI.Xaml.Automation.Peers.IHubAutomationPeerMethods.IID);

        }


        public static bool operator ==(HubAutomationPeer x, HubAutomationPeer y) => (x?.ThisPtr ?? IntPtr.Zero) == (y?.ThisPtr ?? IntPtr.Zero);
        public static bool operator !=(HubAutomationPeer x, HubAutomationPeer y) => !(x == y);
        public bool Equals(HubAutomationPeer other) => this == other;
        public override bool Equals(object obj) => obj is HubAutomationPeer that && this == that;
        public override int GetHashCode() => ThisPtr.GetHashCode();


        protected HubAutomationPeer(global::WinRT.DerivedComposed _):base(_)
        {

        }
        bool IWinRTObject.HasUnwrappableNativeObject => this.GetType() == typeof(HubAutomationPeer);
        IObjectReference IWinRTObject.NativeObject => _inner;

        private struct InterfaceTag<I>{};


        protected override bool IsOverridableInterface(Guid iid) => base.IsOverridableInterface(iid);

        global::System.Runtime.InteropServices.CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(ref Guid iid, out IntPtr ppv)
        {
            ppv = IntPtr.Zero;
            if (IsOverridableInterface(iid) || global::WinRT.Interop.IID.IID_IInspectable == iid)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
            }

            if (((IWinRTObject)this).NativeObject.TryAs(iid, out ppv) >= 0)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.Handled;
            }

            return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
        }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")]
    [global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Automation.Peers.HubSectionAutomationPeer))]
    [global::ABI.Microsoft.UI.Xaml.Automation.Peers.HubSectionAutomationPeerRcwFactory]
    [global::WinRT.ProjectedRuntimeClass(typeof(IHubSectionAutomationPeer))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    public class HubSectionAutomationPeer : FrameworkElementAutomationPeer, global::Microsoft.UI.Xaml.Automation.Provider.IScrollItemProvider, global::System.Runtime.InteropServices.ICustomQueryInterface, IWinRTObject, IEquatable<HubSectionAutomationPeer>
    {
        private IntPtr ThisPtr => _inner == null ? (((IWinRTObject)this).NativeObject).ThisPtr : _inner.ThisPtr;

        private readonly IObjectReference _inner = null;




        private volatile IObjectReference ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IHubSectionAutomationPeer;
        private IObjectReference Make___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IHubSectionAutomationPeer()
        {
            global::System.Threading.Interlocked.CompareExchange(ref ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IHubSectionAutomationPeer, ((IWinRTObject)this).NativeObject.As<IUnknownVftbl>(global::ABI.Microsoft.UI.Xaml.Automation.Peers.IHubSectionAutomationPeerMethods.IID), null);
            return ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IHubSectionAutomationPeer;
        }
        private IObjectReference _objRef_global__Microsoft_UI_Xaml_Automation_Peers_IHubSectionAutomationPeer => ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IHubSectionAutomationPeer ?? Make___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IHubSectionAutomationPeer();

        private volatile IObjectReference ___objRef_global__Microsoft_UI_Xaml_Automation_Provider_IScrollItemProvider;
        private IObjectReference Make___objRef_global__Microsoft_UI_Xaml_Automation_Provider_IScrollItemProvider()
        {
            global::System.Threading.Interlocked.CompareExchange(ref ___objRef_global__Microsoft_UI_Xaml_Automation_Provider_IScrollItemProvider, ((IWinRTObject)this).NativeObject.As<IUnknownVftbl>(global::ABI.Microsoft.UI.Xaml.Automation.Provider.IScrollItemProviderMethods.IID), null);
            return ___objRef_global__Microsoft_UI_Xaml_Automation_Provider_IScrollItemProvider;
        }
        private IObjectReference _objRef_global__Microsoft_UI_Xaml_Automation_Provider_IScrollItemProvider => ___objRef_global__Microsoft_UI_Xaml_Automation_Provider_IScrollItemProvider ?? Make___objRef_global__Microsoft_UI_Xaml_Automation_Provider_IScrollItemProvider();



        private static class _IHubSectionAutomationPeerFactoryMethods
        {
            public static unsafe IntPtr CreateInstanceWithOwner(IObjectReference _obj, global::Microsoft.UI.Xaml.Controls.HubSection owner, object baseInterface, out IntPtr innerInterface)
            {
                var ThisPtr = _obj.ThisPtr;

                ObjectReferenceValue __owner = default;
                ObjectReferenceValue __baseInterface = default;
                IntPtr __innerInterface = default;
                IntPtr __retval = default;
                try
                {
                    __owner = global::ABI.Microsoft.UI.Xaml.Controls.HubSection.CreateMarshaler2(owner);
                    __baseInterface = MarshalInspectable<object>.CreateMarshaler2(baseInterface);
                    global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, IntPtr, IntPtr*, IntPtr*, int>**)ThisPtr)[6](ThisPtr, MarshalInspectable<object>.GetAbi(__owner), MarshalInspectable<object>.GetAbi(__baseInterface), &__innerInterface, &__retval));
                    global::System.GC.KeepAlive(_obj);
                    innerInterface = __innerInterface;
                    return __retval;
                }
                finally
                {
                    MarshalInspectable<object>.DisposeMarshaler(__owner);
                    MarshalInspectable<object>.DisposeMarshaler(__baseInterface);
                }
            }
        }

        private static volatile IObjectReference ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IHubSectionAutomationPeerFactory;
        private static IObjectReference _objRef_global__Microsoft_UI_Xaml_Automation_Peers_IHubSectionAutomationPeerFactory
        {
            get
            { 
                var factory = ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IHubSectionAutomationPeerFactory;
                if (factory != null && factory.IsInCurrentContext)
                {
                    return factory;
                }
                else
                {
                    return ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IHubSectionAutomationPeerFactory = ActivationFactory.Get("Microsoft.UI.Xaml.Automation.Peers.HubSectionAutomationPeer", global::ABI.Microsoft.UI.Xaml.Automation.Peers.IHubSectionAutomationPeerFactoryMethods.IID);
                }
            }
        }

        public HubSectionAutomationPeer(global::Microsoft.UI.Xaml.Controls.HubSection owner):base(global::WinRT.DerivedComposed.Instance)
        {
            bool isAggregation = this.GetType() != typeof(HubSectionAutomationPeer);
            object baseInspectable = isAggregation ? this : null;
            IntPtr composed = _IHubSectionAutomationPeerFactoryMethods.CreateInstanceWithOwner(_objRef_global__Microsoft_UI_Xaml_Automation_Peers_IHubSectionAutomationPeerFactory, owner, baseInspectable, out IntPtr inner);
            try
            {
                ComWrappersHelper.Init(isAggregation, this, composed, inner, global::ABI.Microsoft.UI.Xaml.Automation.Peers.IHubSectionAutomationPeerMethods.IID, out _inner);

            }
            finally
            {
                Marshal.Release(inner);   
            }
        }

        public static new HubSectionAutomationPeer FromAbi(IntPtr thisPtr)
        {
            if (thisPtr == IntPtr.Zero) return null;
            return MarshalInspectable<HubSectionAutomationPeer>.FromAbi(thisPtr);
        }

        protected internal HubSectionAutomationPeer(IObjectReference objRef)
            : base(global::WinRT.DerivedComposed.Instance)

        {
            _inner = objRef.As(global::ABI.Microsoft.UI.Xaml.Automation.Peers.IHubSectionAutomationPeerMethods.IID);

        }


        public static bool operator ==(HubSectionAutomationPeer x, HubSectionAutomationPeer y) => (x?.ThisPtr ?? IntPtr.Zero) == (y?.ThisPtr ?? IntPtr.Zero);
        public static bool operator !=(HubSectionAutomationPeer x, HubSectionAutomationPeer y) => !(x == y);
        public bool Equals(HubSectionAutomationPeer other) => this == other;
        public override bool Equals(object obj) => obj is HubSectionAutomationPeer that && this == that;
        public override int GetHashCode() => ThisPtr.GetHashCode();


        protected HubSectionAutomationPeer(global::WinRT.DerivedComposed _):base(_)
        {

        }
        bool IWinRTObject.HasUnwrappableNativeObject => this.GetType() == typeof(HubSectionAutomationPeer);
        IObjectReference IWinRTObject.NativeObject => _inner;

        private struct InterfaceTag<I>{};


        public void ScrollIntoView() => global::ABI.Microsoft.UI.Xaml.Automation.Provider.IScrollItemProviderMethods.ScrollIntoView(_objRef_global__Microsoft_UI_Xaml_Automation_Provider_IScrollItemProvider);

        protected override bool IsOverridableInterface(Guid iid) => base.IsOverridableInterface(iid);

        global::System.Runtime.InteropServices.CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(ref Guid iid, out IntPtr ppv)
        {
            ppv = IntPtr.Zero;
            if (IsOverridableInterface(iid) || global::WinRT.Interop.IID.IID_IInspectable == iid)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
            }

            if (((IWinRTObject)this).NativeObject.TryAs(iid, out ppv) >= 0)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.Handled;
            }

            return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
        }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")]
    [global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Automation.Peers.HyperlinkButtonAutomationPeer))]
    [global::ABI.Microsoft.UI.Xaml.Automation.Peers.HyperlinkButtonAutomationPeerRcwFactory]
    [global::WinRT.ProjectedRuntimeClass(typeof(IHyperlinkButtonAutomationPeer))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    public class HyperlinkButtonAutomationPeer : ButtonBaseAutomationPeer, global::Microsoft.UI.Xaml.Automation.Provider.IInvokeProvider, global::System.Runtime.InteropServices.ICustomQueryInterface, IWinRTObject, IEquatable<HyperlinkButtonAutomationPeer>
    {
        private IntPtr ThisPtr => _inner == null ? (((IWinRTObject)this).NativeObject).ThisPtr : _inner.ThisPtr;

        private readonly IObjectReference _inner = null;




        private volatile IObjectReference ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IHyperlinkButtonAutomationPeer;
        private IObjectReference Make___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IHyperlinkButtonAutomationPeer()
        {
            global::System.Threading.Interlocked.CompareExchange(ref ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IHyperlinkButtonAutomationPeer, ((IWinRTObject)this).NativeObject.As<IUnknownVftbl>(global::ABI.Microsoft.UI.Xaml.Automation.Peers.IHyperlinkButtonAutomationPeerMethods.IID), null);
            return ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IHyperlinkButtonAutomationPeer;
        }
        private IObjectReference _objRef_global__Microsoft_UI_Xaml_Automation_Peers_IHyperlinkButtonAutomationPeer => ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IHyperlinkButtonAutomationPeer ?? Make___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IHyperlinkButtonAutomationPeer();

        private volatile IObjectReference ___objRef_global__Microsoft_UI_Xaml_Automation_Provider_IInvokeProvider;
        private IObjectReference Make___objRef_global__Microsoft_UI_Xaml_Automation_Provider_IInvokeProvider()
        {
            global::System.Threading.Interlocked.CompareExchange(ref ___objRef_global__Microsoft_UI_Xaml_Automation_Provider_IInvokeProvider, ((IWinRTObject)this).NativeObject.As<IUnknownVftbl>(global::ABI.Microsoft.UI.Xaml.Automation.Provider.IInvokeProviderMethods.IID), null);
            return ___objRef_global__Microsoft_UI_Xaml_Automation_Provider_IInvokeProvider;
        }
        private IObjectReference _objRef_global__Microsoft_UI_Xaml_Automation_Provider_IInvokeProvider => ___objRef_global__Microsoft_UI_Xaml_Automation_Provider_IInvokeProvider ?? Make___objRef_global__Microsoft_UI_Xaml_Automation_Provider_IInvokeProvider();



        private static class _IHyperlinkButtonAutomationPeerFactoryMethods
        {
            public static unsafe IntPtr CreateInstanceWithOwner(IObjectReference _obj, global::Microsoft.UI.Xaml.Controls.HyperlinkButton owner, object baseInterface, out IntPtr innerInterface)
            {
                var ThisPtr = _obj.ThisPtr;

                ObjectReferenceValue __owner = default;
                ObjectReferenceValue __baseInterface = default;
                IntPtr __innerInterface = default;
                IntPtr __retval = default;
                try
                {
                    __owner = global::ABI.Microsoft.UI.Xaml.Controls.HyperlinkButton.CreateMarshaler2(owner);
                    __baseInterface = MarshalInspectable<object>.CreateMarshaler2(baseInterface);
                    global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, IntPtr, IntPtr*, IntPtr*, int>**)ThisPtr)[6](ThisPtr, MarshalInspectable<object>.GetAbi(__owner), MarshalInspectable<object>.GetAbi(__baseInterface), &__innerInterface, &__retval));
                    global::System.GC.KeepAlive(_obj);
                    innerInterface = __innerInterface;
                    return __retval;
                }
                finally
                {
                    MarshalInspectable<object>.DisposeMarshaler(__owner);
                    MarshalInspectable<object>.DisposeMarshaler(__baseInterface);
                }
            }
        }

        private static volatile IObjectReference ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IHyperlinkButtonAutomationPeerFactory;
        private static IObjectReference _objRef_global__Microsoft_UI_Xaml_Automation_Peers_IHyperlinkButtonAutomationPeerFactory
        {
            get
            { 
                var factory = ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IHyperlinkButtonAutomationPeerFactory;
                if (factory != null && factory.IsInCurrentContext)
                {
                    return factory;
                }
                else
                {
                    return ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IHyperlinkButtonAutomationPeerFactory = ActivationFactory.Get("Microsoft.UI.Xaml.Automation.Peers.HyperlinkButtonAutomationPeer", global::ABI.Microsoft.UI.Xaml.Automation.Peers.IHyperlinkButtonAutomationPeerFactoryMethods.IID);
                }
            }
        }

        public HyperlinkButtonAutomationPeer(global::Microsoft.UI.Xaml.Controls.HyperlinkButton owner):base(global::WinRT.DerivedComposed.Instance)
        {
            bool isAggregation = this.GetType() != typeof(HyperlinkButtonAutomationPeer);
            object baseInspectable = isAggregation ? this : null;
            IntPtr composed = _IHyperlinkButtonAutomationPeerFactoryMethods.CreateInstanceWithOwner(_objRef_global__Microsoft_UI_Xaml_Automation_Peers_IHyperlinkButtonAutomationPeerFactory, owner, baseInspectable, out IntPtr inner);
            try
            {
                ComWrappersHelper.Init(isAggregation, this, composed, inner, global::ABI.Microsoft.UI.Xaml.Automation.Peers.IHyperlinkButtonAutomationPeerMethods.IID, out _inner);

            }
            finally
            {
                Marshal.Release(inner);   
            }
        }

        public static new HyperlinkButtonAutomationPeer FromAbi(IntPtr thisPtr)
        {
            if (thisPtr == IntPtr.Zero) return null;
            return MarshalInspectable<HyperlinkButtonAutomationPeer>.FromAbi(thisPtr);
        }

        protected internal HyperlinkButtonAutomationPeer(IObjectReference objRef)
            : base(global::WinRT.DerivedComposed.Instance)

        {
            _inner = objRef.As(global::ABI.Microsoft.UI.Xaml.Automation.Peers.IHyperlinkButtonAutomationPeerMethods.IID);

        }


        public static bool operator ==(HyperlinkButtonAutomationPeer x, HyperlinkButtonAutomationPeer y) => (x?.ThisPtr ?? IntPtr.Zero) == (y?.ThisPtr ?? IntPtr.Zero);
        public static bool operator !=(HyperlinkButtonAutomationPeer x, HyperlinkButtonAutomationPeer y) => !(x == y);
        public bool Equals(HyperlinkButtonAutomationPeer other) => this == other;
        public override bool Equals(object obj) => obj is HyperlinkButtonAutomationPeer that && this == that;
        public override int GetHashCode() => ThisPtr.GetHashCode();


        protected HyperlinkButtonAutomationPeer(global::WinRT.DerivedComposed _):base(_)
        {

        }
        bool IWinRTObject.HasUnwrappableNativeObject => this.GetType() == typeof(HyperlinkButtonAutomationPeer);
        IObjectReference IWinRTObject.NativeObject => _inner;

        private struct InterfaceTag<I>{};


        public void Invoke() => global::ABI.Microsoft.UI.Xaml.Automation.Provider.IInvokeProviderMethods.Invoke(_objRef_global__Microsoft_UI_Xaml_Automation_Provider_IInvokeProvider);

        protected override bool IsOverridableInterface(Guid iid) => base.IsOverridableInterface(iid);

        global::System.Runtime.InteropServices.CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(ref Guid iid, out IntPtr ppv)
        {
            ppv = IntPtr.Zero;
            if (IsOverridableInterface(iid) || global::WinRT.Interop.IID.IID_IInspectable == iid)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
            }

            if (((IWinRTObject)this).NativeObject.TryAs(iid, out ppv) >= 0)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.Handled;
            }

            return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
        }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")][Guid("F949EEB6-B3EA-58AD-B62B-B7255BCC04DF")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Automation.Peers.IAnimatedVisualPlayerAutomationPeer))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.XamlContract), 65536u)]
    internal interface IAnimatedVisualPlayerAutomationPeer
    {
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")][Guid("D2A49198-80BB-51D6-B495-3DC5AAB59589")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Automation.Peers.IAnimatedVisualPlayerAutomationPeerFactory))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.XamlContract), 65536u)]
    internal interface IAnimatedVisualPlayerAutomationPeerFactory
    {
        AnimatedVisualPlayerAutomationPeer CreateInstance(global::Microsoft.UI.Xaml.Controls.AnimatedVisualPlayer owner, object baseInterface, out object innerInterface);
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")][Guid("883A52E2-1810-5F1A-A9FD-1DB0F9C62B02")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Automation.Peers.IAppBarAutomationPeer))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    internal interface IAppBarAutomationPeer
    {
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")][Guid("64F68CE4-AD2D-5C18-ABC0-D0157CC63088")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Automation.Peers.IAppBarAutomationPeerFactory))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    internal interface IAppBarAutomationPeerFactory
    {
        AppBarAutomationPeer CreateInstanceWithOwner(global::Microsoft.UI.Xaml.Controls.AppBar owner, object baseInterface, out object innerInterface);
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")][Guid("439EFDB4-141B-5FFF-8723-03E6E69F6B36")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Automation.Peers.IAppBarButtonAutomationPeer))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    internal interface IAppBarButtonAutomationPeer
    {
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")][Guid("6F611433-7E50-5E2E-B192-D6A285962C74")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Automation.Peers.IAppBarButtonAutomationPeerFactory))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    internal interface IAppBarButtonAutomationPeerFactory
    {
        AppBarButtonAutomationPeer CreateInstanceWithOwner(global::Microsoft.UI.Xaml.Controls.AppBarButton owner, object baseInterface, out object innerInterface);
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")][Guid("17D28EB5-4635-5E2D-AF01-8DCD23A608C4")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Automation.Peers.IAppBarToggleButtonAutomationPeer))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    internal interface IAppBarToggleButtonAutomationPeer
    {
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")][Guid("3CB5EF43-AE92-5452-92E9-CD0CCCA26891")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Automation.Peers.IAppBarToggleButtonAutomationPeerFactory))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    internal interface IAppBarToggleButtonAutomationPeerFactory
    {
        AppBarToggleButtonAutomationPeer CreateInstanceWithOwner(global::Microsoft.UI.Xaml.Controls.AppBarToggleButton owner, object baseInterface, out object innerInterface);
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")][Guid("695236FC-0021-5936-BDF9-ED5991DB0D52")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Automation.Peers.IAutoSuggestBoxAutomationPeer))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    internal interface IAutoSuggestBoxAutomationPeer
    {
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")][Guid("C30950C9-B682-56DF-9CB2-DE6786FB8F90")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Automation.Peers.IAutoSuggestBoxAutomationPeerFactory))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    internal interface IAutoSuggestBoxAutomationPeerFactory
    {
        AutoSuggestBoxAutomationPeer CreateInstanceWithOwner(global::Microsoft.UI.Xaml.Controls.AutoSuggestBox owner);
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")][Guid("E51D3E4E-34F0-568C-999F-6277E2AFE6D7")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Automation.Peers.IAutomationPeer))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    internal interface IAutomationPeer
    {
        object GetPattern(PatternInterface patternInterface);
        void RaiseAutomationEvent(AutomationEvents eventId);
        void RaisePropertyChangedEvent(global::Microsoft.UI.Xaml.Automation.AutomationProperty automationProperty, object oldValue, object newValue);
        string GetAcceleratorKey();
        string GetAccessKey();
        AutomationControlType GetAutomationControlType();
        string GetAutomationId();
        global::Windows.Foundation.Rect GetBoundingRectangle();
        global::System.Collections.Generic.IList<AutomationPeer> GetChildren();
        object Navigate(AutomationNavigationDirection direction);
        string GetClassName();
        global::Windows.Foundation.Point GetClickablePoint();
        string GetHelpText();
        string GetItemStatus();
        string GetItemType();
        AutomationPeer GetLabeledBy();
        string GetLocalizedControlType();
        string GetName();
        AutomationOrientation GetOrientation();
        bool HasKeyboardFocus();
        bool IsContentElement();
        bool IsControlElement();
        bool IsEnabled();
        bool IsKeyboardFocusable();
        bool IsOffscreen();
        bool IsPassword();
        bool IsRequiredForForm();
        void SetFocus();
        AutomationPeer GetParent();
        void InvalidatePeer();
        AutomationPeer GetPeerFromPoint(global::Windows.Foundation.Point point);
        object GetElementFromPoint(global::Windows.Foundation.Point pointInWindowCoordinates);
        object GetFocusedElement();
        AutomationLiveSetting GetLiveSetting();
        void ShowContextMenu();
        global::System.Collections.Generic.IReadOnlyList<AutomationPeer> GetControlledPeers();
        global::System.Collections.Generic.IList<AutomationPeerAnnotation> GetAnnotations();
        void SetParent(AutomationPeer peer);
        void RaiseTextEditTextChangedEvent(global::Microsoft.UI.Xaml.Automation.AutomationTextEditChangeType automationTextEditChangeType, global::System.Collections.Generic.IReadOnlyList<string> changedData);
        int GetPositionInSet();
        int GetSizeOfSet();
        int GetLevel();
        void RaiseStructureChangedEvent(AutomationStructureChangeType structureChangeType, AutomationPeer child);
        AutomationLandmarkType GetLandmarkType();
        string GetLocalizedLandmarkType();
        bool IsPeripheral();
        bool IsDataValidForForm();
        string GetFullDescription();
        int GetCulture();
        void RaiseNotificationEvent(AutomationNotificationKind notificationKind, AutomationNotificationProcessing notificationProcessing, string displayString, string activityId);
        AutomationHeadingLevel GetHeadingLevel();
        bool IsDialog();
        AutomationPeer EventsSource { get; set; }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")][Guid("2738B92A-2528-5B63-973D-D29EB0593647")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Automation.Peers.IAutomationPeerAnnotation))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    internal interface IAutomationPeerAnnotation
    {
        AutomationPeer Peer { get; set; }
        global::Microsoft.UI.Xaml.Automation.AnnotationType Type { get; set; }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")][Guid("25A1A202-BD68-5D41-A311-F84AF9C8C440")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Automation.Peers.IAutomationPeerAnnotationFactory))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    internal interface IAutomationPeerAnnotationFactory
    {
        AutomationPeerAnnotation CreateInstance(global::Microsoft.UI.Xaml.Automation.AnnotationType type);
        AutomationPeerAnnotation CreateWithPeerParameter(global::Microsoft.UI.Xaml.Automation.AnnotationType type, AutomationPeer peer);
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")][Guid("C46105D7-8CA3-50E3-A1BC-B6BB2F9CE1CD")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Automation.Peers.IAutomationPeerAnnotationStatics))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    internal interface IAutomationPeerAnnotationStatics
    {
        global::Microsoft.UI.Xaml.DependencyProperty PeerProperty { get; }
        global::Microsoft.UI.Xaml.DependencyProperty TypeProperty { get; }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")][Guid("A1AF86A0-6EC6-5BE2-858F-72808BE6FDDD")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Automation.Peers.IAutomationPeerFactory))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    internal interface IAutomationPeerFactory
    {
        AutomationPeer CreateInstance(object baseInterface, out object innerInterface);
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")][Guid("44F8F6DF-1B60-512D-A295-DD8C276C4618")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Automation.Peers.IAutomationPeerOverrides))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    internal interface IAutomationPeerOverrides
    {
        object GetPatternCore(PatternInterface patternInterface);
        string GetAcceleratorKeyCore();
        string GetAccessKeyCore();
        AutomationControlType GetAutomationControlTypeCore();
        string GetAutomationIdCore();
        global::Windows.Foundation.Rect GetBoundingRectangleCore();
        global::System.Collections.Generic.IList<AutomationPeer> GetChildrenCore();
        object NavigateCore(AutomationNavigationDirection direction);
        string GetClassNameCore();
        global::Windows.Foundation.Point GetClickablePointCore();
        string GetHelpTextCore();
        string GetItemStatusCore();
        string GetItemTypeCore();
        AutomationPeer GetLabeledByCore();
        string GetLocalizedControlTypeCore();
        string GetNameCore();
        AutomationOrientation GetOrientationCore();
        bool HasKeyboardFocusCore();
        bool IsContentElementCore();
        bool IsControlElementCore();
        bool IsEnabledCore();
        bool IsKeyboardFocusableCore();
        bool IsOffscreenCore();
        bool IsPasswordCore();
        bool IsRequiredForFormCore();
        void SetFocusCore();
        AutomationPeer GetPeerFromPointCore(global::Windows.Foundation.Point point);
        object GetElementFromPointCore(global::Windows.Foundation.Point pointInWindowCoordinates);
        object GetFocusedElementCore();
        AutomationLiveSetting GetLiveSettingCore();
        void ShowContextMenuCore();
        global::System.Collections.Generic.IReadOnlyList<AutomationPeer> GetControlledPeersCore();
        global::System.Collections.Generic.IList<AutomationPeerAnnotation> GetAnnotationsCore();
        int GetPositionInSetCore();
        int GetSizeOfSetCore();
        int GetLevelCore();
        AutomationLandmarkType GetLandmarkTypeCore();
        string GetLocalizedLandmarkTypeCore();
        bool IsPeripheralCore();
        bool IsDataValidForFormCore();
        string GetFullDescriptionCore();
        global::System.Collections.Generic.IEnumerable<AutomationPeer> GetDescribedByCore();
        global::System.Collections.Generic.IEnumerable<AutomationPeer> GetFlowsToCore();
        global::System.Collections.Generic.IEnumerable<AutomationPeer> GetFlowsFromCore();
        int GetCultureCore();
        AutomationHeadingLevel GetHeadingLevelCore();
        bool IsDialogCore();
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")][Guid("9663B2C3-8C1F-56D4-ABD9-268082A9E8BC")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Automation.Peers.IAutomationPeerProtected))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    internal interface IAutomationPeerProtected
    {
        AutomationPeer PeerFromProvider(global::Microsoft.UI.Xaml.Automation.Provider.IRawElementProviderSimple provider);
        global::Microsoft.UI.Xaml.Automation.Provider.IRawElementProviderSimple ProviderFromPeer(AutomationPeer peer);
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")][Guid("90B157FF-18D5-5623-850C-612CEAE576BD")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Automation.Peers.IAutomationPeerStatics))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    internal interface IAutomationPeerStatics
    {
        bool ListenerExists(AutomationEvents eventId);
        RawElementProviderRuntimeId GenerateRawElementProviderRuntimeId();
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")][Guid("48E81612-7DE0-5065-B881-04EBFFF90497")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Automation.Peers.IBreadcrumbBarItemAutomationPeer))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.XamlContract), 65536u)]
    internal interface IBreadcrumbBarItemAutomationPeer
    {
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")][Guid("DFB02146-405F-52ED-A873-0ED4942850BE")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Automation.Peers.IBreadcrumbBarItemAutomationPeerFactory))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.XamlContract), 65536u)]
    internal interface IBreadcrumbBarItemAutomationPeerFactory
    {
        BreadcrumbBarItemAutomationPeer CreateInstance(global::Microsoft.UI.Xaml.Controls.BreadcrumbBarItem owner, object baseInterface, out object innerInterface);
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")][Guid("A3A2E96B-8A2D-50BF-9B3D-DFBC4653F5A6")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Automation.Peers.IButtonAutomationPeer))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    internal interface IButtonAutomationPeer
    {
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")][Guid("1C2F87B7-FBC1-56B0-A654-550D61C423D1")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Automation.Peers.IButtonAutomationPeerFactory))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    internal interface IButtonAutomationPeerFactory
    {
        ButtonAutomationPeer CreateInstanceWithOwner(global::Microsoft.UI.Xaml.Controls.Button owner, object baseInterface, out object innerInterface);
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")][Guid("7A88A2D8-F8DD-5526-8A40-E2E3888193BF")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Automation.Peers.IButtonBaseAutomationPeer))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    internal interface IButtonBaseAutomationPeer
    {
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")][Guid("D6E707BB-7299-5F7A-9C03-7FA10F939771")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Automation.Peers.IButtonBaseAutomationPeerFactory))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    internal interface IButtonBaseAutomationPeerFactory
    {
        ButtonBaseAutomationPeer CreateInstanceWithOwner(global::Microsoft.UI.Xaml.Controls.Primitives.ButtonBase owner, object baseInterface, out object innerInterface);
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")][Guid("246D63E3-812F-5F28-8D18-AF79409A4F95")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Automation.Peers.ICalendarDatePickerAutomationPeer))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    internal interface ICalendarDatePickerAutomationPeer
    {
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")][Guid("6D272C12-68A3-586E-879B-571E606803B4")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Automation.Peers.ICalendarDatePickerAutomationPeerFactory))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    internal interface ICalendarDatePickerAutomationPeerFactory
    {
        CalendarDatePickerAutomationPeer CreateInstanceWithOwner(global::Microsoft.UI.Xaml.Controls.CalendarDatePicker owner, object baseInterface, out object innerInterface);
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")][Guid("9B449814-2C1A-5BDC-9524-1DF91C06E992")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Automation.Peers.ICheckBoxAutomationPeer))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    internal interface ICheckBoxAutomationPeer
    {
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")][Guid("0F5B9E3C-6DE5-588E-835F-3228BE930FEA")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Automation.Peers.ICheckBoxAutomationPeerFactory))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    internal interface ICheckBoxAutomationPeerFactory
    {
        CheckBoxAutomationPeer CreateInstanceWithOwner(global::Microsoft.UI.Xaml.Controls.CheckBox owner, object baseInterface, out object innerInterface);
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")][Guid("793D35D4-4152-50FA-B5F4-F6C045C1339D")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Automation.Peers.IColorPickerSliderAutomationPeer))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.XamlContract), 65536u)]
    internal interface IColorPickerSliderAutomationPeer
    {
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")][Guid("E5F9093F-5E2C-5148-B5D1-1CDA4EB86913")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Automation.Peers.IColorPickerSliderAutomationPeerFactory))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.XamlContract), 65536u)]
    internal interface IColorPickerSliderAutomationPeerFactory
    {
        ColorPickerSliderAutomationPeer CreateInstanceWithOwner(global::Microsoft.UI.Xaml.Controls.Primitives.ColorPickerSlider owner, object baseInterface, out object innerInterface);
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")][Guid("005AC3D1-B031-58AB-918D-030FABAEAF87")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Automation.Peers.IColorSpectrumAutomationPeer))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.XamlContract), 65536u)]
    internal interface IColorSpectrumAutomationPeer
    {
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")][Guid("CFCCAE7E-FE0F-5C9C-9D1A-69E20E0232CF")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Automation.Peers.IColorSpectrumAutomationPeerFactory))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.XamlContract), 65536u)]
    internal interface IColorSpectrumAutomationPeerFactory
    {
        ColorSpectrumAutomationPeer CreateInstanceWithOwner(global::Microsoft.UI.Xaml.Controls.Primitives.ColorSpectrum owner, object baseInterface, out object innerInterface);
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")][Guid("459D2245-1FD2-5DDA-822C-BED13DF6776B")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Automation.Peers.IComboBoxAutomationPeer))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    internal interface IComboBoxAutomationPeer
    {
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")][Guid("D094829F-2A6F-5B1F-A0CE-0F682CC56C0F")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Automation.Peers.IComboBoxAutomationPeerFactory))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    internal interface IComboBoxAutomationPeerFactory
    {
        ComboBoxAutomationPeer CreateInstanceWithOwner(global::Microsoft.UI.Xaml.Controls.ComboBox owner, object baseInterface, out object innerInterface);
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")][Guid("3D4195BC-B579-5CDA-B56F-1E7399E14122")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Automation.Peers.IComboBoxItemAutomationPeer))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    internal interface IComboBoxItemAutomationPeer
    {
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")][Guid("EAD9D22D-112B-550E-8CAC-760614F979AA")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Automation.Peers.IComboBoxItemAutomationPeerFactory))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    internal interface IComboBoxItemAutomationPeerFactory
    {
        ComboBoxItemAutomationPeer CreateInstanceWithOwner(global::Microsoft.UI.Xaml.Controls.ComboBoxItem owner, object baseInterface, out object innerInterface);
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")][Guid("65B69B50-CBC3-5AE7-BF9C-2794FE56C6B3")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Automation.Peers.IComboBoxItemDataAutomationPeer))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    internal interface IComboBoxItemDataAutomationPeer
    {
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")][Guid("66778718-8757-56D5-BD3A-F2FF40E83A78")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Automation.Peers.IComboBoxItemDataAutomationPeerFactory))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    internal interface IComboBoxItemDataAutomationPeerFactory
    {
        ComboBoxItemDataAutomationPeer CreateInstanceWithParentAndItem(object item, ComboBoxAutomationPeer parent, object baseInterface, out object innerInterface);
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")][Guid("F3D7C3E5-C817-58A5-BB47-D9EB228F3BA0")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Automation.Peers.IDatePickerAutomationPeer))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    internal interface IDatePickerAutomationPeer
    {
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")][Guid("480F7825-B4A7-5C56-9F8A-FED84B9348AE")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Automation.Peers.IDatePickerAutomationPeerFactory))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    internal interface IDatePickerAutomationPeerFactory
    {
        DatePickerAutomationPeer CreateInstanceWithOwner(global::Microsoft.UI.Xaml.Controls.DatePicker owner, object baseInterface, out object innerInterface);
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")][Guid("600B7162-0529-5FD1-B6E4-41DC37EDA513")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Automation.Peers.IDatePickerFlyoutPresenterAutomationPeer))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    internal interface IDatePickerFlyoutPresenterAutomationPeer
    {
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")][Guid("7DC37DEC-0A0A-5C98-8A6F-9E47DBAB2F82")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Automation.Peers.IDropDownButtonAutomationPeer))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.XamlContract), 65536u)]
    internal interface IDropDownButtonAutomationPeer
    {
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")][Guid("68C4BFFA-1685-5936-B219-517E87FD591F")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Automation.Peers.IDropDownButtonAutomationPeerFactory))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.XamlContract), 65536u)]
    internal interface IDropDownButtonAutomationPeerFactory
    {
        DropDownButtonAutomationPeer CreateInstance(global::Microsoft.UI.Xaml.Controls.DropDownButton owner, object baseInterface, out object innerInterface);
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")][Guid("F7527408-CC89-5B65-BBDE-EAE6D66DC3E5")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Automation.Peers.IExpanderAutomationPeer))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.XamlContract), 65536u)]
    internal interface IExpanderAutomationPeer
    {
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")][Guid("2024523B-4A40-5976-AAAB-0F05664F7494")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Automation.Peers.IExpanderAutomationPeerFactory))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.XamlContract), 65536u)]
    internal interface IExpanderAutomationPeerFactory
    {
        ExpanderAutomationPeer CreateInstance(global::Microsoft.UI.Xaml.Controls.Expander owner, object baseInterface, out object innerInterface);
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")][Guid("9F2901EA-23CB-5CAC-87D4-7FA9C7FFBC60")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Automation.Peers.IFlipViewAutomationPeer))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    internal interface IFlipViewAutomationPeer
    {
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")][Guid("E73C7F75-ED47-522A-8A27-45FEDA1031F0")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Automation.Peers.IFlipViewAutomationPeerFactory))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    internal interface IFlipViewAutomationPeerFactory
    {
        FlipViewAutomationPeer CreateInstanceWithOwner(global::Microsoft.UI.Xaml.Controls.FlipView owner, object baseInterface, out object innerInterface);
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")][Guid("3569B1BB-7601-56DE-812A-171455D8AD32")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Automation.Peers.IFlipViewItemAutomationPeer))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    internal interface IFlipViewItemAutomationPeer
    {
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")][Guid("AA3B880F-62CB-5878-8F0B-7B3548C65080")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Automation.Peers.IFlipViewItemAutomationPeerFactory))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    internal interface IFlipViewItemAutomationPeerFactory
    {
        FlipViewItemAutomationPeer CreateInstanceWithOwner(global::Microsoft.UI.Xaml.Controls.FlipViewItem owner, object baseInterface, out object innerInterface);
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")][Guid("3BB31A93-E737-501D-B9A6-A11461C9BCF5")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Automation.Peers.IFlipViewItemDataAutomationPeer))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    internal interface IFlipViewItemDataAutomationPeer
    {
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")][Guid("6F892ACE-4467-587C-953C-C1C13B632E5F")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Automation.Peers.IFlipViewItemDataAutomationPeerFactory))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    internal interface IFlipViewItemDataAutomationPeerFactory
    {
        FlipViewItemDataAutomationPeer CreateInstanceWithParentAndItem(object item, FlipViewAutomationPeer parent, object baseInterface, out object innerInterface);
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")][Guid("E589B818-4A64-58C5-9C0B-5CEA0F867E9B")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Automation.Peers.IFlyoutPresenterAutomationPeer))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    internal interface IFlyoutPresenterAutomationPeer
    {
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")][Guid("E529E586-7AA3-50A6-B17E-678B54FEE127")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Automation.Peers.IFlyoutPresenterAutomationPeerFactory))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    internal interface IFlyoutPresenterAutomationPeerFactory
    {
        FlyoutPresenterAutomationPeer CreateInstanceWithOwner(global::Microsoft.UI.Xaml.Controls.FlyoutPresenter owner, object baseInterface, out object innerInterface);
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")][Guid("7DAB4F24-605C-51CB-87DB-3EED1B9FB37B")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Automation.Peers.IFrameworkElementAutomationPeer))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    internal interface IFrameworkElementAutomationPeer
    {
        global::Microsoft.UI.Xaml.UIElement Owner { get; }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")][Guid("1682C3F8-238D-5C7E-A5A5-08CC3C10AC7C")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Automation.Peers.IFrameworkElementAutomationPeerFactory))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    internal interface IFrameworkElementAutomationPeerFactory
    {
        FrameworkElementAutomationPeer CreateInstanceWithOwner(global::Microsoft.UI.Xaml.FrameworkElement owner, object baseInterface, out object innerInterface);
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")][Guid("081F6FBE-6500-528A-A506-F5A4D41DDF6C")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Automation.Peers.IFrameworkElementAutomationPeerStatics))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    internal interface IFrameworkElementAutomationPeerStatics
    {
        AutomationPeer FromElement(global::Microsoft.UI.Xaml.UIElement element);
        AutomationPeer CreatePeerForElement(global::Microsoft.UI.Xaml.UIElement element);
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")][Guid("7870992F-3328-53C2-B412-2914438975B4")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Automation.Peers.IGridViewAutomationPeer))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    internal interface IGridViewAutomationPeer
    {
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")][Guid("71B829E1-7D57-580B-B1A6-D780ED992248")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Automation.Peers.IGridViewAutomationPeerFactory))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    internal interface IGridViewAutomationPeerFactory
    {
        GridViewAutomationPeer CreateInstanceWithOwner(global::Microsoft.UI.Xaml.Controls.GridView owner, object baseInterface, out object innerInterface);
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")][Guid("C38AF4B0-2757-569B-BDC7-A5B7B74FFDBA")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Automation.Peers.IGridViewHeaderItemAutomationPeer))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    internal interface IGridViewHeaderItemAutomationPeer
    {
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")][Guid("6161999A-E042-5D9B-AA38-9FE1296BFB01")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Automation.Peers.IGridViewHeaderItemAutomationPeerFactory))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    internal interface IGridViewHeaderItemAutomationPeerFactory
    {
        GridViewHeaderItemAutomationPeer CreateInstanceWithOwner(global::Microsoft.UI.Xaml.Controls.GridViewHeaderItem owner, object baseInterface, out object innerInterface);
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")][Guid("DE249C2E-5419-5798-B625-CD2C05307572")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Automation.Peers.IGridViewItemAutomationPeer))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    internal interface IGridViewItemAutomationPeer
    {
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")][Guid("04735951-0F91-53F5-984B-75BF0ED41540")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Automation.Peers.IGridViewItemAutomationPeerFactory))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    internal interface IGridViewItemAutomationPeerFactory
    {
        GridViewItemAutomationPeer CreateInstanceWithOwner(global::Microsoft.UI.Xaml.Controls.GridViewItem owner, object baseInterface, out object innerInterface);
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")][Guid("0372C2A0-5094-5811-96BA-0DBE77187435")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Automation.Peers.IGridViewItemDataAutomationPeer))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    internal interface IGridViewItemDataAutomationPeer
    {
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")][Guid("44137B3E-C6F3-53CE-915D-FC8E60CCEE74")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Automation.Peers.IGridViewItemDataAutomationPeerFactory))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    internal interface IGridViewItemDataAutomationPeerFactory
    {
        GridViewItemDataAutomationPeer CreateInstanceWithParentAndItem(object item, GridViewAutomationPeer parent, object baseInterface, out object innerInterface);
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")][Guid("2FF50701-4164-511D-BB23-D21EB88D5EB9")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Automation.Peers.IGroupItemAutomationPeer))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    internal interface IGroupItemAutomationPeer
    {
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")][Guid("CDB10ED9-D1D3-5FAA-8772-70014DA666B3")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Automation.Peers.IGroupItemAutomationPeerFactory))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    internal interface IGroupItemAutomationPeerFactory
    {
        GroupItemAutomationPeer CreateInstanceWithOwner(global::Microsoft.UI.Xaml.Controls.GroupItem owner, object baseInterface, out object innerInterface);
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")][Guid("8FA20CB6-42C1-531E-B54F-FCAF33C943A9")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Automation.Peers.IHubAutomationPeer))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    internal interface IHubAutomationPeer
    {
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")][Guid("C1B1F1CF-3926-56C9-B690-530C8BC78806")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Automation.Peers.IHubAutomationPeerFactory))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    internal interface IHubAutomationPeerFactory
    {
        HubAutomationPeer CreateInstanceWithOwner(global::Microsoft.UI.Xaml.Controls.Hub owner, object baseInterface, out object innerInterface);
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")][Guid("174E94AB-C033-534A-895C-EAAF1DCC4352")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Automation.Peers.IHubSectionAutomationPeer))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    internal interface IHubSectionAutomationPeer
    {
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")][Guid("DC56CF08-2031-56B6-9AD5-7F8D7475D35D")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Automation.Peers.IHubSectionAutomationPeerFactory))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    internal interface IHubSectionAutomationPeerFactory
    {
        HubSectionAutomationPeer CreateInstanceWithOwner(global::Microsoft.UI.Xaml.Controls.HubSection owner, object baseInterface, out object innerInterface);
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")][Guid("6A770AB2-02D0-59BA-A28E-3DFBA1F10DD8")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Automation.Peers.IHyperlinkButtonAutomationPeer))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    internal interface IHyperlinkButtonAutomationPeer
    {
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")][Guid("2476E661-ABCE-5D35-B38B-6CEE2C4148F4")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Automation.Peers.IHyperlinkButtonAutomationPeerFactory))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    internal interface IHyperlinkButtonAutomationPeerFactory
    {
        HyperlinkButtonAutomationPeer CreateInstanceWithOwner(global::Microsoft.UI.Xaml.Controls.HyperlinkButton owner, object baseInterface, out object innerInterface);
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")][Guid("1F6EB184-8765-5455-BD1D-93C251C17F9B")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Automation.Peers.IImageAutomationPeer))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    internal interface IImageAutomationPeer
    {
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")][Guid("1B26001B-49A6-5FF4-B1B1-2D504D2EF133")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Automation.Peers.IImageAutomationPeerFactory))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    internal interface IImageAutomationPeerFactory
    {
        ImageAutomationPeer CreateInstanceWithOwner(global::Microsoft.UI.Xaml.Controls.Image owner, object baseInterface, out object innerInterface);
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")][Guid("AA2C40EB-DF80-5050-92C5-5FDA5ABFDEF2")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Automation.Peers.IInfoBarAutomationPeer))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.XamlContract), 65536u)]
    internal interface IInfoBarAutomationPeer
    {
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")][Guid("5FD3E590-68B9-5C9C-A572-0BC10167CE46")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Automation.Peers.IInfoBarAutomationPeerFactory))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.XamlContract), 65536u)]
    internal interface IInfoBarAutomationPeerFactory
    {
        InfoBarAutomationPeer CreateInstance(global::Microsoft.UI.Xaml.Controls.InfoBar owner, object baseInterface, out object innerInterface);
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")][Guid("BE8A71BB-3E36-54D2-920E-60722F1C62FF")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Automation.Peers.IItemAutomationPeer))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    internal interface IItemAutomationPeer
    {
        object Item { get; }
        ItemsControlAutomationPeer ItemsControlAutomationPeer { get; }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")][Guid("FFE08885-14AC-5859-B031-5F3A4C504E6D")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Automation.Peers.IItemAutomationPeerFactory))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    internal interface IItemAutomationPeerFactory
    {
        ItemAutomationPeer CreateInstanceWithParentAndItem(object item, ItemsControlAutomationPeer parent, object baseInterface, out object innerInterface);
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")][Guid("F915A1FB-754E-58C7-AD2A-B99528701793")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Automation.Peers.IItemContainerAutomationPeer))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.XamlContract), 327680u)]
    internal interface IItemContainerAutomationPeer
    {
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")][Guid("4600CFB3-72E1-5181-95EC-653F30B01C78")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Automation.Peers.IItemContainerAutomationPeerFactory))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.XamlContract), 327680u)]
    internal interface IItemContainerAutomationPeerFactory
    {
        ItemContainerAutomationPeer CreateInstance(global::Microsoft.UI.Xaml.Controls.ItemContainer owner, object baseInterface, out object innerInterface);
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")][Guid("0AE7BB7E-1407-5947-985F-9D542F433AB1")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Automation.Peers.IItemsControlAutomationPeer))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    internal interface IItemsControlAutomationPeer
    {
        ItemAutomationPeer CreateItemAutomationPeer(object item);
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")][Guid("9DE524CC-5E66-51A0-A7E0-A1742D28334B")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Automation.Peers.IItemsControlAutomationPeerFactory))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    internal interface IItemsControlAutomationPeerFactory
    {
        ItemsControlAutomationPeer CreateInstanceWithOwner(global::Microsoft.UI.Xaml.Controls.ItemsControl owner, object baseInterface, out object innerInterface);
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")][Guid("D751B35B-236E-5859-A834-52FA369CD3BD")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Automation.Peers.IItemsControlAutomationPeerOverrides))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    internal interface IItemsControlAutomationPeerOverrides
    {
        ItemAutomationPeer OnCreateItemAutomationPeer(object item);
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")][Guid("D456AD6D-18D5-51AE-A44E-95671F848184")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Automation.Peers.IItemsViewAutomationPeer))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.XamlContract), 327680u)]
    internal interface IItemsViewAutomationPeer
    {
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")][Guid("8FD329C7-EA9C-56A3-A79E-BFFF5CA74323")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Automation.Peers.IItemsViewAutomationPeerFactory))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.XamlContract), 327680u)]
    internal interface IItemsViewAutomationPeerFactory
    {
        ItemsViewAutomationPeer CreateInstance(global::Microsoft.UI.Xaml.Controls.ItemsView owner, object baseInterface, out object innerInterface);
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")][Guid("2BC1CA3F-3617-53A8-94B9-BEC91D573525")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Automation.Peers.IListBoxAutomationPeer))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    internal interface IListBoxAutomationPeer
    {
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")][Guid("004AAF6F-A12C-5FA4-A1F7-E3B0FBE45DDD")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Automation.Peers.IListBoxAutomationPeerFactory))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    internal interface IListBoxAutomationPeerFactory
    {
        ListBoxAutomationPeer CreateInstanceWithOwner(global::Microsoft.UI.Xaml.Controls.ListBox owner, object baseInterface, out object innerInterface);
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")][Guid("19A8C4B4-E63A-5B2E-8E2F-C834E6A08204")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Automation.Peers.IListBoxItemAutomationPeer))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    internal interface IListBoxItemAutomationPeer
    {
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")][Guid("936E36EF-0FAE-58A2-8FB2-313999793263")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Automation.Peers.IListBoxItemAutomationPeerFactory))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    internal interface IListBoxItemAutomationPeerFactory
    {
        ListBoxItemAutomationPeer CreateInstanceWithOwner(global::Microsoft.UI.Xaml.Controls.ListBoxItem owner, object baseInterface, out object innerInterface);
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")][Guid("2B81660F-46DC-5765-B10A-2269D12EBA42")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Automation.Peers.IListBoxItemDataAutomationPeer))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    internal interface IListBoxItemDataAutomationPeer
    {
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")][Guid("2CE97068-5280-5BEC-8BA5-785C58986DCF")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Automation.Peers.IListBoxItemDataAutomationPeerFactory))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    internal interface IListBoxItemDataAutomationPeerFactory
    {
        ListBoxItemDataAutomationPeer CreateInstanceWithParentAndItem(object item, ListBoxAutomationPeer parent, object baseInterface, out object innerInterface);
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")][Guid("16574767-E8CA-551A-A9E9-E5394DE33469")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Automation.Peers.IListPickerFlyoutPresenterAutomationPeer))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    internal interface IListPickerFlyoutPresenterAutomationPeer
    {
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")][Guid("8F2A3373-E305-55F3-923E-D9EEE8D1A6EE")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Automation.Peers.IListViewAutomationPeer))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    internal interface IListViewAutomationPeer
    {
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")][Guid("3C6D8FC2-57EA-584E-9A89-504C65251D0F")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Automation.Peers.IListViewAutomationPeerFactory))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    internal interface IListViewAutomationPeerFactory
    {
        ListViewAutomationPeer CreateInstanceWithOwner(global::Microsoft.UI.Xaml.Controls.ListView owner, object baseInterface, out object innerInterface);
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")][Guid("AD9A395C-5A96-5331-9636-EE4C53184986")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Automation.Peers.IListViewBaseAutomationPeer))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    internal interface IListViewBaseAutomationPeer
    {
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")][Guid("361ED030-7C93-5967-97CB-4A9693E34050")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Automation.Peers.IListViewBaseAutomationPeerFactory))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    internal interface IListViewBaseAutomationPeerFactory
    {
        ListViewBaseAutomationPeer CreateInstanceWithOwner(global::Microsoft.UI.Xaml.Controls.ListViewBase owner, object baseInterface, out object innerInterface);
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")][Guid("623314D2-C7F1-5003-9560-07D420A33A2A")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Automation.Peers.IListViewBaseHeaderItemAutomationPeer))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    internal interface IListViewBaseHeaderItemAutomationPeer
    {
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")][Guid("E6041212-904B-5D22-B856-D3EF53D16AA6")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Automation.Peers.IListViewBaseHeaderItemAutomationPeerFactory))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    internal interface IListViewBaseHeaderItemAutomationPeerFactory
    {
        ListViewBaseHeaderItemAutomationPeer CreateInstanceWithOwner(global::Microsoft.UI.Xaml.Controls.ListViewBaseHeaderItem owner, object baseInterface, out object innerInterface);
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")][Guid("0293EACA-F7DE-5A0D-9BEB-79DC1AC4A7DE")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Automation.Peers.IListViewHeaderItemAutomationPeer))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    internal interface IListViewHeaderItemAutomationPeer
    {
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")][Guid("F7B3480B-BFFF-5C1C-B9D5-8EEE544AEBF8")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Automation.Peers.IListViewHeaderItemAutomationPeerFactory))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    internal interface IListViewHeaderItemAutomationPeerFactory
    {
        ListViewHeaderItemAutomationPeer CreateInstanceWithOwner(global::Microsoft.UI.Xaml.Controls.ListViewHeaderItem owner, object baseInterface, out object innerInterface);
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")][Guid("DE487F2C-5A61-599E-B9FF-0FD7675D7AF3")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Automation.Peers.IListViewItemAutomationPeer))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    internal interface IListViewItemAutomationPeer
    {
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")][Guid("D6625BA7-1AE3-58B1-AF12-E5CD5AFC17FF")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Automation.Peers.IListViewItemAutomationPeerFactory))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    internal interface IListViewItemAutomationPeerFactory
    {
        ListViewItemAutomationPeer CreateInstanceWithOwner(global::Microsoft.UI.Xaml.Controls.ListViewItem owner, object baseInterface, out object innerInterface);
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")][Guid("88BB28D3-45ED-5415-825F-DD2DA536C968")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Automation.Peers.IListViewItemDataAutomationPeer))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    internal interface IListViewItemDataAutomationPeer
    {
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")][Guid("9B22E7EA-6F7A-5C05-8072-5BDDF54F9BDA")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Automation.Peers.IListViewItemDataAutomationPeerFactory))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    internal interface IListViewItemDataAutomationPeerFactory
    {
        ListViewItemDataAutomationPeer CreateInstanceWithParentAndItem(object item, ListViewBaseAutomationPeer parent, object baseInterface, out object innerInterface);
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")][Guid("00B612F4-8FAF-5C0C-92E4-4396E0F7B8D8")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Automation.Peers.ILoopingSelectorAutomationPeer))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    internal interface ILoopingSelectorAutomationPeer
    {
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")][Guid("9C108861-895F-5E92-84C1-FF12072E7EC0")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Automation.Peers.ILoopingSelectorItemAutomationPeer))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    internal interface ILoopingSelectorItemAutomationPeer
    {
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")][Guid("1F8362EB-A069-5121-A56B-619365B4515C")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Automation.Peers.ILoopingSelectorItemDataAutomationPeer))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    internal interface ILoopingSelectorItemDataAutomationPeer
    {
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")][Guid("F68B8CA2-4428-5C35-B6A8-1B2EA062C22C")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Automation.Peers.IMediaPlayerElementAutomationPeer))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 196608u)]
    internal interface IMediaPlayerElementAutomationPeer
    {
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")][Guid("2AE1AA11-7A7C-5580-A7D7-F7597859BDC2")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Automation.Peers.IMediaPlayerElementAutomationPeerFactory))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 196608u)]
    internal interface IMediaPlayerElementAutomationPeerFactory
    {
        MediaPlayerElementAutomationPeer CreateInstanceWithOwner(global::Microsoft.UI.Xaml.Controls.MediaPlayerElement owner, object baseInterface, out object innerInterface);
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")][Guid("DA850D4E-8715-5AE7-81A9-ABD10D17C1ED")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Automation.Peers.IMediaTransportControlsAutomationPeer))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 196608u)]
    internal interface IMediaTransportControlsAutomationPeer
    {
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")][Guid("77F281E1-CB51-5360-B74E-6FE4F8EE5028")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Automation.Peers.IMediaTransportControlsAutomationPeerFactory))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 196608u)]
    internal interface IMediaTransportControlsAutomationPeerFactory
    {
        MediaTransportControlsAutomationPeer CreateInstanceWithOwner(global::Microsoft.UI.Xaml.Controls.MediaTransportControls owner, object baseInterface, out object innerInterface);
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")][Guid("AE96E710-B9D3-59DD-973E-1BBC86CF0AFC")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Automation.Peers.IMenuBarAutomationPeer))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.XamlContract), 65536u)]
    internal interface IMenuBarAutomationPeer
    {
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")][Guid("D3E1CA3F-1702-5BD3-8ADB-E6F6CB9E7531")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Automation.Peers.IMenuBarAutomationPeerFactory))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.XamlContract), 65536u)]
    internal interface IMenuBarAutomationPeerFactory
    {
        MenuBarAutomationPeer CreateInstance(global::Microsoft.UI.Xaml.Controls.MenuBar owner, object baseInterface, out object innerInterface);
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")][Guid("2DA890CD-0AAE-53B9-8C12-81003F60ED14")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Automation.Peers.IMenuBarItemAutomationPeer))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.XamlContract), 65536u)]
    internal interface IMenuBarItemAutomationPeer
    {
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")][Guid("603B63C4-A626-50E6-9C1A-649699CA7AD6")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Automation.Peers.IMenuBarItemAutomationPeerFactory))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.XamlContract), 65536u)]
    internal interface IMenuBarItemAutomationPeerFactory
    {
        MenuBarItemAutomationPeer CreateInstance(global::Microsoft.UI.Xaml.Controls.MenuBarItem owner, object baseInterface, out object innerInterface);
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")][Guid("FDB57952-2A4F-5ED4-8ADA-320DEF75EA71")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Automation.Peers.IMenuFlyoutItemAutomationPeer))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    internal interface IMenuFlyoutItemAutomationPeer
    {
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")][Guid("FE125E46-7C1C-5A7C-98E0-C7AA3A00A6CD")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Automation.Peers.IMenuFlyoutItemAutomationPeerFactory))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    internal interface IMenuFlyoutItemAutomationPeerFactory
    {
        MenuFlyoutItemAutomationPeer CreateInstanceWithOwner(global::Microsoft.UI.Xaml.Controls.MenuFlyoutItem owner, object baseInterface, out object innerInterface);
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")][Guid("74D3FF77-1E92-5F96-99A1-697D74283BA7")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Automation.Peers.IMenuFlyoutPresenterAutomationPeer))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    internal interface IMenuFlyoutPresenterAutomationPeer
    {
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")][Guid("BEADFDFC-1035-5FFD-BAE6-03F754B05DCC")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Automation.Peers.IMenuFlyoutPresenterAutomationPeerFactory))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    internal interface IMenuFlyoutPresenterAutomationPeerFactory
    {
        MenuFlyoutPresenterAutomationPeer CreateInstanceWithOwner(global::Microsoft.UI.Xaml.Controls.MenuFlyoutPresenter owner, object baseInterface, out object innerInterface);
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")][Guid("72013EAE-B015-550D-BA8D-A05112B62731")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Automation.Peers.INavigationViewAutomationPeer))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.XamlContract), 65536u)]
    internal interface INavigationViewAutomationPeer
    {
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")][Guid("75075B03-A2F7-5869-B23C-63CBE5ACC43A")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Automation.Peers.INavigationViewAutomationPeerFactory))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.XamlContract), 65536u)]
    internal interface INavigationViewAutomationPeerFactory
    {
        NavigationViewAutomationPeer CreateInstance(global::Microsoft.UI.Xaml.Controls.NavigationView owner, object baseInterface, out object innerInterface);
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")][Guid("C7924C7A-739F-5251-9B86-DF6486EB08A7")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Automation.Peers.INavigationViewItemAutomationPeer))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.XamlContract), 65536u)]
    internal interface INavigationViewItemAutomationPeer
    {
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")][Guid("890516D0-5A62-528B-8873-4F7140B40489")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Automation.Peers.INavigationViewItemAutomationPeerFactory))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.XamlContract), 65536u)]
    internal interface INavigationViewItemAutomationPeerFactory
    {
        NavigationViewItemAutomationPeer CreateInstanceWithOwner(global::Microsoft.UI.Xaml.Controls.NavigationViewItem owner, object baseInterface, out object innerInterface);
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")][Guid("235BEFEB-6C98-5D35-A2E7-001EAE342509")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Automation.Peers.INumberBoxAutomationPeer))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.XamlContract), 65536u)]
    internal interface INumberBoxAutomationPeer
    {
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")][Guid("659719AC-4405-58F4-BDE2-EF61DFE64C21")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Automation.Peers.INumberBoxAutomationPeerFactory))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.XamlContract), 65536u)]
    internal interface INumberBoxAutomationPeerFactory
    {
        NumberBoxAutomationPeer CreateInstance(global::Microsoft.UI.Xaml.Controls.NumberBox owner, object baseInterface, out object innerInterface);
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")][Guid("49B18DBA-FA3B-5106-A1E8-1AAA3D24D5E1")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Automation.Peers.IPasswordBoxAutomationPeer))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    internal interface IPasswordBoxAutomationPeer
    {
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")][Guid("7B0D5CBA-C5B3-553E-989A-A10EE04144AF")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Automation.Peers.IPasswordBoxAutomationPeerFactory))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    internal interface IPasswordBoxAutomationPeerFactory
    {
        PasswordBoxAutomationPeer CreateInstanceWithOwner(global::Microsoft.UI.Xaml.Controls.PasswordBox owner, object baseInterface, out object innerInterface);
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")][Guid("2E71779B-ACA4-52C2-8A25-BC5F1EE3B0AE")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Automation.Peers.IPersonPictureAutomationPeer))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.XamlContract), 65536u)]
    internal interface IPersonPictureAutomationPeer
    {
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")][Guid("BD1709E5-1940-56FC-B5C3-85E4570951CC")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Automation.Peers.IPersonPictureAutomationPeerFactory))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.XamlContract), 65536u)]
    internal interface IPersonPictureAutomationPeerFactory
    {
        PersonPictureAutomationPeer CreateInstanceWithOwner(global::Microsoft.UI.Xaml.Controls.PersonPicture owner, object baseInterface, out object innerInterface);
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")][Guid("B29F6D28-154B-5C1D-A5E8-98604BB5CDF6")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Automation.Peers.IPickerFlyoutPresenterAutomationPeer))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    internal interface IPickerFlyoutPresenterAutomationPeer
    {
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")][Guid("93DE1BC2-CF84-5B5F-91BE-A7C781B2021A")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Automation.Peers.IPipsPagerAutomationPeer))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.XamlContract), 65536u)]
    internal interface IPipsPagerAutomationPeer
    {
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")][Guid("FB5248EF-E835-5997-BC36-D4E5DB4A1B5A")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Automation.Peers.IPipsPagerAutomationPeerFactory))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.XamlContract), 65536u)]
    internal interface IPipsPagerAutomationPeerFactory
    {
        PipsPagerAutomationPeer CreateInstance(global::Microsoft.UI.Xaml.Controls.PipsPager owner, object baseInterface, out object innerInterface);
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")][Guid("84225540-A6A3-5E65-A3DC-B31B81AB14C1")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Automation.Peers.IPivotAutomationPeer))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    internal interface IPivotAutomationPeer
    {
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")][Guid("B1DD0229-C14C-5AC0-8331-BE24FA2007F0")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Automation.Peers.IPivotAutomationPeerFactory))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    internal interface IPivotAutomationPeerFactory
    {
        PivotAutomationPeer CreateInstanceWithOwner(global::Microsoft.UI.Xaml.Controls.Pivot owner);
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")][Guid("BFE7FB7B-2D88-56E4-B50F-0A40DE6F52A1")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Automation.Peers.IPivotItemAutomationPeer))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    internal interface IPivotItemAutomationPeer
    {
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")][Guid("14966EE7-AFAF-5FCC-9346-F0E7192C220A")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Automation.Peers.IPivotItemAutomationPeerFactory))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    internal interface IPivotItemAutomationPeerFactory
    {
        PivotItemAutomationPeer CreateInstanceWithOwner(global::Microsoft.UI.Xaml.Controls.PivotItem owner);
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")][Guid("6758EBEE-B3E0-5FEB-AABA-B7F6C59FE49F")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Automation.Peers.IPivotItemDataAutomationPeer))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    internal interface IPivotItemDataAutomationPeer
    {
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")][Guid("26D7A6E9-CE6B-5690-9024-75CE5770B0D6")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Automation.Peers.IPivotItemDataAutomationPeerFactory))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    internal interface IPivotItemDataAutomationPeerFactory
    {
        PivotItemDataAutomationPeer CreateInstanceWithParentAndItem(object item, PivotAutomationPeer parent);
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")][Guid("8565EAD9-B877-52C7-A147-6FE1FEE767AF")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Automation.Peers.IProgressBarAutomationPeer))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.XamlContract), 65536u)]
    internal interface IProgressBarAutomationPeer
    {
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")][Guid("CEA28C0D-C4B3-5D18-AEF6-958031395878")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Automation.Peers.IProgressBarAutomationPeerFactory))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.XamlContract), 65536u)]
    internal interface IProgressBarAutomationPeerFactory
    {
        ProgressBarAutomationPeer CreateInstance(global::Microsoft.UI.Xaml.Controls.ProgressBar owner, object baseInterface, out object innerInterface);
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")][Guid("3B6952DA-9E44-52B0-91DF-39DA9DC1D8B0")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Automation.Peers.IProgressRingAutomationPeer))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.XamlContract), 65536u)]
    internal interface IProgressRingAutomationPeer
    {
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")][Guid("650F375C-3B29-5376-A7F7-C78082B82D13")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Automation.Peers.IProgressRingAutomationPeerFactory))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.XamlContract), 65536u)]
    internal interface IProgressRingAutomationPeerFactory
    {
        ProgressRingAutomationPeer CreateInstance(global::Microsoft.UI.Xaml.Controls.ProgressRing owner, object baseInterface, out object innerInterface);
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")][Guid("CCE147B7-574A-53B6-A5B2-CA2622A79B2C")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Automation.Peers.IRadioButtonAutomationPeer))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    internal interface IRadioButtonAutomationPeer
    {
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")][Guid("CA07C7EE-502A-509E-BC44-682E6828D1F8")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Automation.Peers.IRadioButtonAutomationPeerFactory))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    internal interface IRadioButtonAutomationPeerFactory
    {
        RadioButtonAutomationPeer CreateInstanceWithOwner(global::Microsoft.UI.Xaml.Controls.RadioButton owner, object baseInterface, out object innerInterface);
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")][Guid("FFF86275-0CDD-54DB-9D88-9C0E5F9BCB4D")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Automation.Peers.IRadioButtonsAutomationPeer))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.XamlContract), 65536u)]
    internal interface IRadioButtonsAutomationPeer
    {
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")][Guid("F13521D0-056E-598C-AD23-A7150049D80A")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Automation.Peers.IRadioButtonsAutomationPeerFactory))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.XamlContract), 65536u)]
    internal interface IRadioButtonsAutomationPeerFactory
    {
        RadioButtonsAutomationPeer CreateInstance(global::Microsoft.UI.Xaml.Controls.RadioButtons owner, object baseInterface, out object innerInterface);
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")][Guid("B5D50512-70A9-5B27-82FE-16F6BA67BAC5")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Automation.Peers.IRangeBaseAutomationPeer))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    internal interface IRangeBaseAutomationPeer
    {
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")][Guid("8C8F25E9-5194-54A9-B787-CE0293FD6721")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Automation.Peers.IRangeBaseAutomationPeerFactory))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    internal interface IRangeBaseAutomationPeerFactory
    {
        RangeBaseAutomationPeer CreateInstanceWithOwner(global::Microsoft.UI.Xaml.Controls.Primitives.RangeBase owner, object baseInterface, out object innerInterface);
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")][Guid("55493EC4-926B-595A-97A3-A7FA604188A4")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Automation.Peers.IRatingControlAutomationPeer))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.XamlContract), 65536u)]
    internal interface IRatingControlAutomationPeer
    {
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")][Guid("F87DACB6-E87E-59B3-8A40-331EA7AA747D")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Automation.Peers.IRatingControlAutomationPeerFactory))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.XamlContract), 65536u)]
    internal interface IRatingControlAutomationPeerFactory
    {
        RatingControlAutomationPeer CreateInstanceWithOwner(global::Microsoft.UI.Xaml.Controls.RatingControl owner, object baseInterface, out object innerInterface);
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")][Guid("E42A7CC2-ACE8-56EB-9967-9B7FD157C37F")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Automation.Peers.IRepeatButtonAutomationPeer))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    internal interface IRepeatButtonAutomationPeer
    {
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")][Guid("0FAD55A4-1C62-595E-A189-BB43A219C699")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Automation.Peers.IRepeatButtonAutomationPeerFactory))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    internal interface IRepeatButtonAutomationPeerFactory
    {
        RepeatButtonAutomationPeer CreateInstanceWithOwner(global::Microsoft.UI.Xaml.Controls.Primitives.RepeatButton owner, object baseInterface, out object innerInterface);
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")][Guid("03F2C315-FB55-54B2-9AAD-9723AAF5E2CF")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Automation.Peers.IRepeaterAutomationPeer))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.XamlContract), 65536u)]
    internal interface IRepeaterAutomationPeer
    {
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")][Guid("04526BC7-FA3E-55FE-A314-986E2F196A2F")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Automation.Peers.IRepeaterAutomationPeerFactory))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.XamlContract), 65536u)]
    internal interface IRepeaterAutomationPeerFactory
    {
        RepeaterAutomationPeer CreateInstance(global::Microsoft.UI.Xaml.Controls.ItemsRepeater owner, object baseInterface, out object innerInterface);
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")][Guid("193A43F1-129D-57E1-BCF9-BA966BCADACB")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Automation.Peers.IRichEditBoxAutomationPeer))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    internal interface IRichEditBoxAutomationPeer
    {
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")][Guid("84F0D84F-54CA-58F2-AC50-D379AAB75463")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Automation.Peers.IRichEditBoxAutomationPeerFactory))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    internal interface IRichEditBoxAutomationPeerFactory
    {
        RichEditBoxAutomationPeer CreateInstanceWithOwner(global::Microsoft.UI.Xaml.Controls.RichEditBox owner, object baseInterface, out object innerInterface);
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")][Guid("7080FF80-B3B8-5D3C-89B5-D989D561192F")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Automation.Peers.IRichTextBlockAutomationPeer))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    internal interface IRichTextBlockAutomationPeer
    {
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")][Guid("F8A4485B-2895-5886-8FF6-497E4F1A6E3D")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Automation.Peers.IRichTextBlockAutomationPeerFactory))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    internal interface IRichTextBlockAutomationPeerFactory
    {
        RichTextBlockAutomationPeer CreateInstanceWithOwner(global::Microsoft.UI.Xaml.Controls.RichTextBlock owner, object baseInterface, out object innerInterface);
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")][Guid("D0BF83C0-8CFB-5770-B26C-0706E51A9A3B")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Automation.Peers.IRichTextBlockOverflowAutomationPeer))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    internal interface IRichTextBlockOverflowAutomationPeer
    {
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")][Guid("3E7B3CED-BD1F-5851-97A4-1C318F60D641")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Automation.Peers.IRichTextBlockOverflowAutomationPeerFactory))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    internal interface IRichTextBlockOverflowAutomationPeerFactory
    {
        RichTextBlockOverflowAutomationPeer CreateInstanceWithOwner(global::Microsoft.UI.Xaml.Controls.RichTextBlockOverflow owner, object baseInterface, out object innerInterface);
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")][Guid("028A26C4-05F7-58B2-A81E-A7AC032F756F")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Automation.Peers.IScrollBarAutomationPeer))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    internal interface IScrollBarAutomationPeer
    {
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")][Guid("FC67A9CC-E914-532A-8717-0B383E2157F3")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Automation.Peers.IScrollBarAutomationPeerFactory))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    internal interface IScrollBarAutomationPeerFactory
    {
        ScrollBarAutomationPeer CreateInstanceWithOwner(global::Microsoft.UI.Xaml.Controls.Primitives.ScrollBar owner, object baseInterface, out object innerInterface);
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")][Guid("995A6964-607F-5D95-BDF9-1870A5E82A0C")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Automation.Peers.IScrollPresenterAutomationPeer))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.XamlContract), 458752u)]
    internal interface IScrollPresenterAutomationPeer
    {
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")][Guid("47E29168-5E30-5ABC-B844-7D89B5C3EEC0")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Automation.Peers.IScrollPresenterAutomationPeerFactory))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.XamlContract), 458752u)]
    internal interface IScrollPresenterAutomationPeerFactory
    {
        ScrollPresenterAutomationPeer CreateInstance(global::Microsoft.UI.Xaml.Controls.Primitives.ScrollPresenter owner, object baseInterface, out object innerInterface);
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")][Guid("25394BAD-6CA2-5E04-95FA-95412C1F80AC")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Automation.Peers.IScrollViewerAutomationPeer))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    internal interface IScrollViewerAutomationPeer
    {
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")][Guid("3F1578F9-60EC-5F7C-8D11-10C535A75A12")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Automation.Peers.IScrollViewerAutomationPeerFactory))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    internal interface IScrollViewerAutomationPeerFactory
    {
        ScrollViewerAutomationPeer CreateInstanceWithOwner(global::Microsoft.UI.Xaml.Controls.ScrollViewer owner, object baseInterface, out object innerInterface);
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")][Guid("4BAC62BA-FB33-5F8B-995E-0DD93431294F")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Automation.Peers.ISelectorAutomationPeer))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    internal interface ISelectorAutomationPeer
    {
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")][Guid("D84FE7B9-F5F5-5122-B41C-5575A799D581")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Automation.Peers.ISelectorAutomationPeerFactory))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    internal interface ISelectorAutomationPeerFactory
    {
        SelectorAutomationPeer CreateInstanceWithOwner(global::Microsoft.UI.Xaml.Controls.Primitives.Selector owner, object baseInterface, out object innerInterface);
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")][Guid("CDB1078E-1350-56FB-8728-8537B0F35C20")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Automation.Peers.ISelectorBarItemAutomationPeer))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.XamlContract), 393216u)]
    internal interface ISelectorBarItemAutomationPeer
    {
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")][Guid("4AAB3752-0DDB-5E2D-A614-0B5F7D4EFE9D")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Automation.Peers.ISelectorBarItemAutomationPeerFactory))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.XamlContract), 393216u)]
    internal interface ISelectorBarItemAutomationPeerFactory
    {
        SelectorBarItemAutomationPeer CreateInstanceWithOwner(global::Microsoft.UI.Xaml.Controls.SelectorBarItem owner, object baseInterface, out object innerInterface);
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")][Guid("70B85E53-E684-5068-91B7-2D84FEA8E9D7")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Automation.Peers.ISelectorItemAutomationPeer))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    internal interface ISelectorItemAutomationPeer
    {
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")][Guid("2691E85B-DC9C-5CE6-AEC9-21C8DA9A4AD1")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Automation.Peers.ISelectorItemAutomationPeerFactory))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    internal interface ISelectorItemAutomationPeerFactory
    {
        SelectorItemAutomationPeer CreateInstanceWithParentAndItem(object item, SelectorAutomationPeer parent, object baseInterface, out object innerInterface);
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")][Guid("7D7FBD09-112F-50FD-9654-0474CE760B5D")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Automation.Peers.ISemanticZoomAutomationPeer))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    internal interface ISemanticZoomAutomationPeer
    {
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")][Guid("0572C3C2-87DF-55D6-8FCC-032330108CD8")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Automation.Peers.ISemanticZoomAutomationPeerFactory))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    internal interface ISemanticZoomAutomationPeerFactory
    {
        SemanticZoomAutomationPeer CreateInstanceWithOwner(global::Microsoft.UI.Xaml.Controls.SemanticZoom owner, object baseInterface, out object innerInterface);
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")][Guid("C321C95F-C917-5714-9D16-AD706E38926A")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Automation.Peers.ISliderAutomationPeer))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    internal interface ISliderAutomationPeer
    {
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")][Guid("81459943-902A-5FE3-9C75-0F8B11F42658")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Automation.Peers.ISliderAutomationPeerFactory))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    internal interface ISliderAutomationPeerFactory
    {
        SliderAutomationPeer CreateInstanceWithOwner(global::Microsoft.UI.Xaml.Controls.Slider owner, object baseInterface, out object innerInterface);
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")][Guid("0182661C-0DF3-5C7D-8752-547804C4FA44")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Automation.Peers.ISplitButtonAutomationPeer))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.XamlContract), 65536u)]
    internal interface ISplitButtonAutomationPeer
    {
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")][Guid("E82DDC93-780E-5000-981E-9BE10EEDEB1F")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Automation.Peers.ISplitButtonAutomationPeerFactory))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.XamlContract), 65536u)]
    internal interface ISplitButtonAutomationPeerFactory
    {
        SplitButtonAutomationPeer CreateInstance(global::Microsoft.UI.Xaml.Controls.SplitButton owner, object baseInterface, out object innerInterface);
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")][Guid("EFB3F05B-2A25-5266-A1CB-5A0AA451CA32")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Automation.Peers.ITabViewAutomationPeer))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.XamlContract), 65536u)]
    internal interface ITabViewAutomationPeer
    {
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")][Guid("F8D8C7CB-47CC-5DA5-BD1A-E2E1BA0FD24D")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Automation.Peers.ITabViewAutomationPeerFactory))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.XamlContract), 65536u)]
    internal interface ITabViewAutomationPeerFactory
    {
        TabViewAutomationPeer CreateInstance(global::Microsoft.UI.Xaml.Controls.TabView owner, object baseInterface, out object innerInterface);
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")][Guid("58AFB1C3-A3FD-54A1-BE39-328DD8A6F8EC")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Automation.Peers.ITabViewItemAutomationPeer))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.XamlContract), 65536u)]
    internal interface ITabViewItemAutomationPeer
    {
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")][Guid("00218040-9C0D-5C52-B578-593B809047B3")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Automation.Peers.ITabViewItemAutomationPeerFactory))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.XamlContract), 65536u)]
    internal interface ITabViewItemAutomationPeerFactory
    {
        TabViewItemAutomationPeer CreateInstance(global::Microsoft.UI.Xaml.Controls.TabViewItem owner, object baseInterface, out object innerInterface);
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")][Guid("607994EC-A995-5B07-B535-8C913F0BC26C")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Automation.Peers.ITeachingTipAutomationPeer))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.XamlContract), 65536u)]
    internal interface ITeachingTipAutomationPeer
    {
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")][Guid("71A061C1-3D71-5548-98FD-62167F246085")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Automation.Peers.ITeachingTipAutomationPeerFactory))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.XamlContract), 65536u)]
    internal interface ITeachingTipAutomationPeerFactory
    {
        TeachingTipAutomationPeer CreateInstance(global::Microsoft.UI.Xaml.Controls.TeachingTip owner, object baseInterface, out object innerInterface);
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")][Guid("29521960-2EF2-5D15-BF6A-CF585EF8A571")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Automation.Peers.ITextBlockAutomationPeer))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    internal interface ITextBlockAutomationPeer
    {
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")][Guid("2A04C7BB-6D48-5F8E-9622-54DCCDF0A5CA")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Automation.Peers.ITextBlockAutomationPeerFactory))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    internal interface ITextBlockAutomationPeerFactory
    {
        TextBlockAutomationPeer CreateInstanceWithOwner(global::Microsoft.UI.Xaml.Controls.TextBlock owner, object baseInterface, out object innerInterface);
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")][Guid("9E26139A-0618-56FA-9916-8D5EDF564735")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Automation.Peers.ITextBoxAutomationPeer))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    internal interface ITextBoxAutomationPeer
    {
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")][Guid("1E84AC8F-9974-5BE1-B6EA-84F309C8B2B8")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Automation.Peers.ITextBoxAutomationPeerFactory))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    internal interface ITextBoxAutomationPeerFactory
    {
        TextBoxAutomationPeer CreateInstanceWithOwner(global::Microsoft.UI.Xaml.Controls.TextBox owner, object baseInterface, out object innerInterface);
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")][Guid("B05D6E5B-3586-5157-A497-4F15B87D89EB")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Automation.Peers.IThumbAutomationPeer))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    internal interface IThumbAutomationPeer
    {
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")][Guid("311B414A-7CC8-56D9-B581-149C8BF9D76D")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Automation.Peers.IThumbAutomationPeerFactory))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    internal interface IThumbAutomationPeerFactory
    {
        ThumbAutomationPeer CreateInstanceWithOwner(global::Microsoft.UI.Xaml.Controls.Primitives.Thumb owner, object baseInterface, out object innerInterface);
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")][Guid("6309D3BB-3387-5965-ACF5-47BFA9B92ED4")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Automation.Peers.ITimePickerAutomationPeer))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    internal interface ITimePickerAutomationPeer
    {
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")][Guid("7CDF2F82-7453-5D86-8EE3-60DAAF345F47")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Automation.Peers.ITimePickerAutomationPeerFactory))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    internal interface ITimePickerAutomationPeerFactory
    {
        TimePickerAutomationPeer CreateInstanceWithOwner(global::Microsoft.UI.Xaml.Controls.TimePicker owner, object baseInterface, out object innerInterface);
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")][Guid("2438268A-62E8-5D61-95D0-D36F6B42E652")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Automation.Peers.ITimePickerFlyoutPresenterAutomationPeer))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    internal interface ITimePickerFlyoutPresenterAutomationPeer
    {
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")][Guid("637D9B99-BCC2-5E26-B43F-BA6C26AF72C3")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Automation.Peers.IToggleButtonAutomationPeer))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    internal interface IToggleButtonAutomationPeer
    {
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")][Guid("2C272096-21E0-5714-9164-1F6A1E0B2181")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Automation.Peers.IToggleButtonAutomationPeerFactory))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    internal interface IToggleButtonAutomationPeerFactory
    {
        ToggleButtonAutomationPeer CreateInstanceWithOwner(global::Microsoft.UI.Xaml.Controls.Primitives.ToggleButton owner, object baseInterface, out object innerInterface);
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")][Guid("EA4E4C7E-1F12-56C0-A2A5-B59E9C25B06D")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Automation.Peers.IToggleMenuFlyoutItemAutomationPeer))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    internal interface IToggleMenuFlyoutItemAutomationPeer
    {
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")][Guid("7789F700-D565-5DC7-8BCC-D459A4C08FD6")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Automation.Peers.IToggleMenuFlyoutItemAutomationPeerFactory))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    internal interface IToggleMenuFlyoutItemAutomationPeerFactory
    {
        ToggleMenuFlyoutItemAutomationPeer CreateInstanceWithOwner(global::Microsoft.UI.Xaml.Controls.ToggleMenuFlyoutItem owner, object baseInterface, out object innerInterface);
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")][Guid("21356952-4C74-5273-B82D-E5CE1BBCD369")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Automation.Peers.IToggleSplitButtonAutomationPeer))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.XamlContract), 65536u)]
    internal interface IToggleSplitButtonAutomationPeer
    {
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")][Guid("61C214A5-605B-5E98-B85D-E3121D23EDAA")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Automation.Peers.IToggleSplitButtonAutomationPeerFactory))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.XamlContract), 65536u)]
    internal interface IToggleSplitButtonAutomationPeerFactory
    {
        ToggleSplitButtonAutomationPeer CreateInstance(global::Microsoft.UI.Xaml.Controls.ToggleSplitButton owner, object baseInterface, out object innerInterface);
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")][Guid("927D6091-5070-574F-9833-0EF89A9CBB4B")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Automation.Peers.IToggleSwitchAutomationPeer))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    internal interface IToggleSwitchAutomationPeer
    {
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")][Guid("03F5E3E4-4B61-5DCF-AFDC-FD23041A0374")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Automation.Peers.IToggleSwitchAutomationPeerFactory))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    internal interface IToggleSwitchAutomationPeerFactory
    {
        ToggleSwitchAutomationPeer CreateInstanceWithOwner(global::Microsoft.UI.Xaml.Controls.ToggleSwitch owner, object baseInterface, out object innerInterface);
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")][Guid("25B38166-B905-5480-8439-E459A5B77B8C")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Automation.Peers.ITreeViewItemAutomationPeer))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.XamlContract), 65536u)]
    internal interface ITreeViewItemAutomationPeer
    {
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")][Guid("0C993C78-981F-5DCF-93D3-A217AD9ACAB6")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Automation.Peers.ITreeViewItemAutomationPeerFactory))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.XamlContract), 65536u)]
    internal interface ITreeViewItemAutomationPeerFactory
    {
        TreeViewItemAutomationPeer CreateInstanceWithOwner(global::Microsoft.UI.Xaml.Controls.TreeViewItem owner, object baseInterface, out object innerInterface);
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")][Guid("20F74F77-EDFA-5C71-9DEB-530DCAF9C11D")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Automation.Peers.ITreeViewItemDataAutomationPeer))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.XamlContract), 65536u)]
    internal interface ITreeViewItemDataAutomationPeer
    {
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")][Guid("07FC8E59-55A2-58AB-8921-91E57DDF119F")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Automation.Peers.ITreeViewItemDataAutomationPeerFactory))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.XamlContract), 65536u)]
    internal interface ITreeViewItemDataAutomationPeerFactory
    {
        TreeViewItemDataAutomationPeer CreateInstanceWithOwner(object item, TreeViewListAutomationPeer parent, object baseInterface, out object innerInterface);
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")][Guid("1EBF0F7F-6111-50A5-8398-89C4FDD0DEDB")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Automation.Peers.ITreeViewListAutomationPeer))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.XamlContract), 65536u)]
    internal interface ITreeViewListAutomationPeer
    {
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")][Guid("51332D86-C414-5E7D-B57B-E479983C9E5D")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Automation.Peers.ITreeViewListAutomationPeerFactory))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.XamlContract), 65536u)]
    internal interface ITreeViewListAutomationPeerFactory
    {
        TreeViewListAutomationPeer CreateInstanceWithOwner(global::Microsoft.UI.Xaml.Controls.TreeViewList owner, object baseInterface, out object innerInterface);
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")][Guid("8E556ECA-B000-5E51-810F-7B7D80C39D56")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Automation.Peers.IWebView2AutomationPeer))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.XamlContract), 65536u)]
    internal interface IWebView2AutomationPeer
    {
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")][Guid("68512210-E61E-5B56-A6AF-C4FB14677155")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Automation.Peers.IWebView2AutomationPeerFactory))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.XamlContract), 65536u)]
    internal interface IWebView2AutomationPeerFactory
    {
        WebView2AutomationPeer CreateInstance(global::Microsoft.UI.Xaml.Controls.WebView2 owner, object baseInterface, out object innerInterface);
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")]
    [global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Automation.Peers.ImageAutomationPeer))]
    [global::ABI.Microsoft.UI.Xaml.Automation.Peers.ImageAutomationPeerRcwFactory]
    [global::WinRT.ProjectedRuntimeClass(typeof(IImageAutomationPeer))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    public class ImageAutomationPeer : FrameworkElementAutomationPeer, global::System.Runtime.InteropServices.ICustomQueryInterface, IWinRTObject, IEquatable<ImageAutomationPeer>
    {
        private IntPtr ThisPtr => _inner == null ? (((IWinRTObject)this).NativeObject).ThisPtr : _inner.ThisPtr;

        private readonly IObjectReference _inner = null;




        private volatile IObjectReference ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IImageAutomationPeer;
        private IObjectReference Make___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IImageAutomationPeer()
        {
            global::System.Threading.Interlocked.CompareExchange(ref ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IImageAutomationPeer, ((IWinRTObject)this).NativeObject.As<IUnknownVftbl>(global::ABI.Microsoft.UI.Xaml.Automation.Peers.IImageAutomationPeerMethods.IID), null);
            return ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IImageAutomationPeer;
        }
        private IObjectReference _objRef_global__Microsoft_UI_Xaml_Automation_Peers_IImageAutomationPeer => ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IImageAutomationPeer ?? Make___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IImageAutomationPeer();



        private static class _IImageAutomationPeerFactoryMethods
        {
            public static unsafe IntPtr CreateInstanceWithOwner(IObjectReference _obj, global::Microsoft.UI.Xaml.Controls.Image owner, object baseInterface, out IntPtr innerInterface)
            {
                var ThisPtr = _obj.ThisPtr;

                ObjectReferenceValue __owner = default;
                ObjectReferenceValue __baseInterface = default;
                IntPtr __innerInterface = default;
                IntPtr __retval = default;
                try
                {
                    __owner = global::ABI.Microsoft.UI.Xaml.Controls.Image.CreateMarshaler2(owner);
                    __baseInterface = MarshalInspectable<object>.CreateMarshaler2(baseInterface);
                    global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, IntPtr, IntPtr*, IntPtr*, int>**)ThisPtr)[6](ThisPtr, MarshalInspectable<object>.GetAbi(__owner), MarshalInspectable<object>.GetAbi(__baseInterface), &__innerInterface, &__retval));
                    global::System.GC.KeepAlive(_obj);
                    innerInterface = __innerInterface;
                    return __retval;
                }
                finally
                {
                    MarshalInspectable<object>.DisposeMarshaler(__owner);
                    MarshalInspectable<object>.DisposeMarshaler(__baseInterface);
                }
            }
        }

        private static volatile IObjectReference ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IImageAutomationPeerFactory;
        private static IObjectReference _objRef_global__Microsoft_UI_Xaml_Automation_Peers_IImageAutomationPeerFactory
        {
            get
            { 
                var factory = ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IImageAutomationPeerFactory;
                if (factory != null && factory.IsInCurrentContext)
                {
                    return factory;
                }
                else
                {
                    return ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IImageAutomationPeerFactory = ActivationFactory.Get("Microsoft.UI.Xaml.Automation.Peers.ImageAutomationPeer", global::ABI.Microsoft.UI.Xaml.Automation.Peers.IImageAutomationPeerFactoryMethods.IID);
                }
            }
        }

        public ImageAutomationPeer(global::Microsoft.UI.Xaml.Controls.Image owner):base(global::WinRT.DerivedComposed.Instance)
        {
            bool isAggregation = this.GetType() != typeof(ImageAutomationPeer);
            object baseInspectable = isAggregation ? this : null;
            IntPtr composed = _IImageAutomationPeerFactoryMethods.CreateInstanceWithOwner(_objRef_global__Microsoft_UI_Xaml_Automation_Peers_IImageAutomationPeerFactory, owner, baseInspectable, out IntPtr inner);
            try
            {
                ComWrappersHelper.Init(isAggregation, this, composed, inner, global::ABI.Microsoft.UI.Xaml.Automation.Peers.IImageAutomationPeerMethods.IID, out _inner);

            }
            finally
            {
                Marshal.Release(inner);   
            }
        }

        public static new ImageAutomationPeer FromAbi(IntPtr thisPtr)
        {
            if (thisPtr == IntPtr.Zero) return null;
            return MarshalInspectable<ImageAutomationPeer>.FromAbi(thisPtr);
        }

        protected internal ImageAutomationPeer(IObjectReference objRef)
            : base(global::WinRT.DerivedComposed.Instance)

        {
            _inner = objRef.As(global::ABI.Microsoft.UI.Xaml.Automation.Peers.IImageAutomationPeerMethods.IID);

        }


        public static bool operator ==(ImageAutomationPeer x, ImageAutomationPeer y) => (x?.ThisPtr ?? IntPtr.Zero) == (y?.ThisPtr ?? IntPtr.Zero);
        public static bool operator !=(ImageAutomationPeer x, ImageAutomationPeer y) => !(x == y);
        public bool Equals(ImageAutomationPeer other) => this == other;
        public override bool Equals(object obj) => obj is ImageAutomationPeer that && this == that;
        public override int GetHashCode() => ThisPtr.GetHashCode();


        protected ImageAutomationPeer(global::WinRT.DerivedComposed _):base(_)
        {

        }
        bool IWinRTObject.HasUnwrappableNativeObject => this.GetType() == typeof(ImageAutomationPeer);
        IObjectReference IWinRTObject.NativeObject => _inner;

        private struct InterfaceTag<I>{};


        protected override bool IsOverridableInterface(Guid iid) => base.IsOverridableInterface(iid);

        global::System.Runtime.InteropServices.CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(ref Guid iid, out IntPtr ppv)
        {
            ppv = IntPtr.Zero;
            if (IsOverridableInterface(iid) || global::WinRT.Interop.IID.IID_IInspectable == iid)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
            }

            if (((IWinRTObject)this).NativeObject.TryAs(iid, out ppv) >= 0)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.Handled;
            }

            return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
        }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")]
    [global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Automation.Peers.InfoBarAutomationPeer))]
    [global::ABI.Microsoft.UI.Xaml.Automation.Peers.InfoBarAutomationPeerRcwFactory]
    [global::WinRT.ProjectedRuntimeClass(typeof(IInfoBarAutomationPeer))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.XamlContract), 65536u)]
    public class InfoBarAutomationPeer : FrameworkElementAutomationPeer, global::System.Runtime.InteropServices.ICustomQueryInterface, IWinRTObject, IEquatable<InfoBarAutomationPeer>
    {
        private IntPtr ThisPtr => _inner == null ? (((IWinRTObject)this).NativeObject).ThisPtr : _inner.ThisPtr;

        private readonly IObjectReference _inner = null;




        private volatile IObjectReference ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IInfoBarAutomationPeer;
        private IObjectReference Make___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IInfoBarAutomationPeer()
        {
            global::System.Threading.Interlocked.CompareExchange(ref ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IInfoBarAutomationPeer, ((IWinRTObject)this).NativeObject.As<IUnknownVftbl>(global::ABI.Microsoft.UI.Xaml.Automation.Peers.IInfoBarAutomationPeerMethods.IID), null);
            return ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IInfoBarAutomationPeer;
        }
        private IObjectReference _objRef_global__Microsoft_UI_Xaml_Automation_Peers_IInfoBarAutomationPeer => ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IInfoBarAutomationPeer ?? Make___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IInfoBarAutomationPeer();



        private static class _IInfoBarAutomationPeerFactoryMethods
        {
            public static unsafe IntPtr CreateInstance(IObjectReference _obj, global::Microsoft.UI.Xaml.Controls.InfoBar owner, object baseInterface, out IntPtr innerInterface)
            {
                var ThisPtr = _obj.ThisPtr;

                ObjectReferenceValue __owner = default;
                ObjectReferenceValue __baseInterface = default;
                IntPtr __innerInterface = default;
                IntPtr __retval = default;
                try
                {
                    __owner = global::ABI.Microsoft.UI.Xaml.Controls.InfoBar.CreateMarshaler2(owner);
                    __baseInterface = MarshalInspectable<object>.CreateMarshaler2(baseInterface);
                    global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, IntPtr, IntPtr*, IntPtr*, int>**)ThisPtr)[6](ThisPtr, MarshalInspectable<object>.GetAbi(__owner), MarshalInspectable<object>.GetAbi(__baseInterface), &__innerInterface, &__retval));
                    global::System.GC.KeepAlive(_obj);
                    innerInterface = __innerInterface;
                    return __retval;
                }
                finally
                {
                    MarshalInspectable<object>.DisposeMarshaler(__owner);
                    MarshalInspectable<object>.DisposeMarshaler(__baseInterface);
                }
            }
        }

        private static volatile IObjectReference ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IInfoBarAutomationPeerFactory;
        private static IObjectReference _objRef_global__Microsoft_UI_Xaml_Automation_Peers_IInfoBarAutomationPeerFactory
        {
            get
            { 
                var factory = ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IInfoBarAutomationPeerFactory;
                if (factory != null && factory.IsInCurrentContext)
                {
                    return factory;
                }
                else
                {
                    return ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IInfoBarAutomationPeerFactory = ActivationFactory.Get("Microsoft.UI.Xaml.Automation.Peers.InfoBarAutomationPeer", global::ABI.Microsoft.UI.Xaml.Automation.Peers.IInfoBarAutomationPeerFactoryMethods.IID);
                }
            }
        }

        public InfoBarAutomationPeer(global::Microsoft.UI.Xaml.Controls.InfoBar owner):base(global::WinRT.DerivedComposed.Instance)
        {
            bool isAggregation = this.GetType() != typeof(InfoBarAutomationPeer);
            object baseInspectable = isAggregation ? this : null;
            IntPtr composed = _IInfoBarAutomationPeerFactoryMethods.CreateInstance(_objRef_global__Microsoft_UI_Xaml_Automation_Peers_IInfoBarAutomationPeerFactory, owner, baseInspectable, out IntPtr inner);
            try
            {
                ComWrappersHelper.Init(isAggregation, this, composed, inner, global::ABI.Microsoft.UI.Xaml.Automation.Peers.IInfoBarAutomationPeerMethods.IID, out _inner);

            }
            finally
            {
                Marshal.Release(inner);   
            }
        }

        public static new InfoBarAutomationPeer FromAbi(IntPtr thisPtr)
        {
            if (thisPtr == IntPtr.Zero) return null;
            return MarshalInspectable<InfoBarAutomationPeer>.FromAbi(thisPtr);
        }

        protected internal InfoBarAutomationPeer(IObjectReference objRef)
            : base(global::WinRT.DerivedComposed.Instance)

        {
            _inner = objRef.As(global::ABI.Microsoft.UI.Xaml.Automation.Peers.IInfoBarAutomationPeerMethods.IID);

        }


        public static bool operator ==(InfoBarAutomationPeer x, InfoBarAutomationPeer y) => (x?.ThisPtr ?? IntPtr.Zero) == (y?.ThisPtr ?? IntPtr.Zero);
        public static bool operator !=(InfoBarAutomationPeer x, InfoBarAutomationPeer y) => !(x == y);
        public bool Equals(InfoBarAutomationPeer other) => this == other;
        public override bool Equals(object obj) => obj is InfoBarAutomationPeer that && this == that;
        public override int GetHashCode() => ThisPtr.GetHashCode();


        protected InfoBarAutomationPeer(global::WinRT.DerivedComposed _):base(_)
        {

        }
        bool IWinRTObject.HasUnwrappableNativeObject => this.GetType() == typeof(InfoBarAutomationPeer);
        IObjectReference IWinRTObject.NativeObject => _inner;

        private struct InterfaceTag<I>{};


        protected override bool IsOverridableInterface(Guid iid) => base.IsOverridableInterface(iid);

        global::System.Runtime.InteropServices.CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(ref Guid iid, out IntPtr ppv)
        {
            ppv = IntPtr.Zero;
            if (IsOverridableInterface(iid) || global::WinRT.Interop.IID.IID_IInspectable == iid)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
            }

            if (((IWinRTObject)this).NativeObject.TryAs(iid, out ppv) >= 0)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.Handled;
            }

            return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
        }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")]
    [global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Automation.Peers.ItemAutomationPeer))]
    [global::ABI.Microsoft.UI.Xaml.Automation.Peers.ItemAutomationPeerRcwFactory]
    [global::WinRT.ProjectedRuntimeClass(typeof(IItemAutomationPeer))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    public class ItemAutomationPeer : AutomationPeer, global::Microsoft.UI.Xaml.Automation.Provider.IVirtualizedItemProvider, global::System.Runtime.InteropServices.ICustomQueryInterface, IWinRTObject, IEquatable<ItemAutomationPeer>
    {
        private IntPtr ThisPtr => _inner == null ? (((IWinRTObject)this).NativeObject).ThisPtr : _inner.ThisPtr;

        private readonly IObjectReference _inner = null;




        private volatile IObjectReference ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IItemAutomationPeer;
        private IObjectReference Make___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IItemAutomationPeer()
        {
            global::System.Threading.Interlocked.CompareExchange(ref ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IItemAutomationPeer, ((IWinRTObject)this).NativeObject.As<IUnknownVftbl>(global::ABI.Microsoft.UI.Xaml.Automation.Peers.IItemAutomationPeerMethods.IID), null);
            return ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IItemAutomationPeer;
        }
        private IObjectReference _objRef_global__Microsoft_UI_Xaml_Automation_Peers_IItemAutomationPeer => ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IItemAutomationPeer ?? Make___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IItemAutomationPeer();

        private volatile IObjectReference ___objRef_global__Microsoft_UI_Xaml_Automation_Provider_IVirtualizedItemProvider;
        private IObjectReference Make___objRef_global__Microsoft_UI_Xaml_Automation_Provider_IVirtualizedItemProvider()
        {
            global::System.Threading.Interlocked.CompareExchange(ref ___objRef_global__Microsoft_UI_Xaml_Automation_Provider_IVirtualizedItemProvider, ((IWinRTObject)this).NativeObject.As<IUnknownVftbl>(global::ABI.Microsoft.UI.Xaml.Automation.Provider.IVirtualizedItemProviderMethods.IID), null);
            return ___objRef_global__Microsoft_UI_Xaml_Automation_Provider_IVirtualizedItemProvider;
        }
        private IObjectReference _objRef_global__Microsoft_UI_Xaml_Automation_Provider_IVirtualizedItemProvider => ___objRef_global__Microsoft_UI_Xaml_Automation_Provider_IVirtualizedItemProvider ?? Make___objRef_global__Microsoft_UI_Xaml_Automation_Provider_IVirtualizedItemProvider();



        private static class _IItemAutomationPeerFactoryMethods
        {
            public static unsafe IntPtr CreateInstanceWithParentAndItem(IObjectReference _obj, object item, ItemsControlAutomationPeer parent, object baseInterface, out IntPtr innerInterface)
            {
                var ThisPtr = _obj.ThisPtr;

                ObjectReferenceValue __item = default;
                ObjectReferenceValue __parent = default;
                ObjectReferenceValue __baseInterface = default;
                IntPtr __innerInterface = default;
                IntPtr __retval = default;
                try
                {
                    __item = MarshalInspectable<object>.CreateMarshaler2(item);
                    __parent = global::ABI.Microsoft.UI.Xaml.Automation.Peers.ItemsControlAutomationPeer.CreateMarshaler2(parent);
                    __baseInterface = MarshalInspectable<object>.CreateMarshaler2(baseInterface);
                    global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, IntPtr, IntPtr, IntPtr*, IntPtr*, int>**)ThisPtr)[6](ThisPtr, MarshalInspectable<object>.GetAbi(__item), MarshalInspectable<object>.GetAbi(__parent), MarshalInspectable<object>.GetAbi(__baseInterface), &__innerInterface, &__retval));
                    global::System.GC.KeepAlive(_obj);
                    innerInterface = __innerInterface;
                    return __retval;
                }
                finally
                {
                    MarshalInspectable<object>.DisposeMarshaler(__item);
                    MarshalInspectable<object>.DisposeMarshaler(__parent);
                    MarshalInspectable<object>.DisposeMarshaler(__baseInterface);
                }
            }
        }

        private static volatile IObjectReference ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IItemAutomationPeerFactory;
        private static IObjectReference _objRef_global__Microsoft_UI_Xaml_Automation_Peers_IItemAutomationPeerFactory
        {
            get
            { 
                var factory = ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IItemAutomationPeerFactory;
                if (factory != null && factory.IsInCurrentContext)
                {
                    return factory;
                }
                else
                {
                    return ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IItemAutomationPeerFactory = ActivationFactory.Get("Microsoft.UI.Xaml.Automation.Peers.ItemAutomationPeer", global::ABI.Microsoft.UI.Xaml.Automation.Peers.IItemAutomationPeerFactoryMethods.IID);
                }
            }
        }

        public ItemAutomationPeer(object item, ItemsControlAutomationPeer parent):base(global::WinRT.DerivedComposed.Instance)
        {
            bool isAggregation = this.GetType() != typeof(ItemAutomationPeer);
            object baseInspectable = isAggregation ? this : null;
            IntPtr composed = _IItemAutomationPeerFactoryMethods.CreateInstanceWithParentAndItem(_objRef_global__Microsoft_UI_Xaml_Automation_Peers_IItemAutomationPeerFactory, item, parent, baseInspectable, out IntPtr inner);
            try
            {
                ComWrappersHelper.Init(isAggregation, this, composed, inner, global::ABI.Microsoft.UI.Xaml.Automation.Peers.IItemAutomationPeerMethods.IID, out _inner);

            }
            finally
            {
                Marshal.Release(inner);   
            }
        }

        public static new ItemAutomationPeer FromAbi(IntPtr thisPtr)
        {
            if (thisPtr == IntPtr.Zero) return null;
            return MarshalInspectable<ItemAutomationPeer>.FromAbi(thisPtr);
        }

        protected internal ItemAutomationPeer(IObjectReference objRef)
            : base(global::WinRT.DerivedComposed.Instance)

        {
            _inner = objRef.As(global::ABI.Microsoft.UI.Xaml.Automation.Peers.IItemAutomationPeerMethods.IID);

        }


        public static bool operator ==(ItemAutomationPeer x, ItemAutomationPeer y) => (x?.ThisPtr ?? IntPtr.Zero) == (y?.ThisPtr ?? IntPtr.Zero);
        public static bool operator !=(ItemAutomationPeer x, ItemAutomationPeer y) => !(x == y);
        public bool Equals(ItemAutomationPeer other) => this == other;
        public override bool Equals(object obj) => obj is ItemAutomationPeer that && this == that;
        public override int GetHashCode() => ThisPtr.GetHashCode();


        protected ItemAutomationPeer(global::WinRT.DerivedComposed _):base(_)
        {

        }
        bool IWinRTObject.HasUnwrappableNativeObject => this.GetType() == typeof(ItemAutomationPeer);
        IObjectReference IWinRTObject.NativeObject => _inner;

        private struct InterfaceTag<I>{};


        public void Realize() => global::ABI.Microsoft.UI.Xaml.Automation.Provider.IVirtualizedItemProviderMethods.Realize(_objRef_global__Microsoft_UI_Xaml_Automation_Provider_IVirtualizedItemProvider);

        public object Item => global::ABI.Microsoft.UI.Xaml.Automation.Peers.IItemAutomationPeerMethods.get_Item(_objRef_global__Microsoft_UI_Xaml_Automation_Peers_IItemAutomationPeer);

        public ItemsControlAutomationPeer ItemsControlAutomationPeer => global::ABI.Microsoft.UI.Xaml.Automation.Peers.IItemAutomationPeerMethods.get_ItemsControlAutomationPeer(_objRef_global__Microsoft_UI_Xaml_Automation_Peers_IItemAutomationPeer);

        protected override bool IsOverridableInterface(Guid iid) => base.IsOverridableInterface(iid);

        global::System.Runtime.InteropServices.CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(ref Guid iid, out IntPtr ppv)
        {
            ppv = IntPtr.Zero;
            if (IsOverridableInterface(iid) || global::WinRT.Interop.IID.IID_IInspectable == iid)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
            }

            if (((IWinRTObject)this).NativeObject.TryAs(iid, out ppv) >= 0)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.Handled;
            }

            return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
        }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")]
    [global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Automation.Peers.ItemContainerAutomationPeer))]
    [global::ABI.Microsoft.UI.Xaml.Automation.Peers.ItemContainerAutomationPeerRcwFactory]
    [global::WinRT.ProjectedRuntimeClass(typeof(IItemContainerAutomationPeer))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.XamlContract), 327680u)]
    public class ItemContainerAutomationPeer : FrameworkElementAutomationPeer, global::Microsoft.UI.Xaml.Automation.Provider.ISelectionItemProvider, global::Microsoft.UI.Xaml.Automation.Provider.IInvokeProvider, global::System.Runtime.InteropServices.ICustomQueryInterface, IWinRTObject, IEquatable<ItemContainerAutomationPeer>
    {
        private IntPtr ThisPtr => _inner == null ? (((IWinRTObject)this).NativeObject).ThisPtr : _inner.ThisPtr;

        private readonly IObjectReference _inner = null;




        private volatile IObjectReference ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IItemContainerAutomationPeer;
        private IObjectReference Make___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IItemContainerAutomationPeer()
        {
            global::System.Threading.Interlocked.CompareExchange(ref ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IItemContainerAutomationPeer, ((IWinRTObject)this).NativeObject.As<IUnknownVftbl>(global::ABI.Microsoft.UI.Xaml.Automation.Peers.IItemContainerAutomationPeerMethods.IID), null);
            return ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IItemContainerAutomationPeer;
        }
        private IObjectReference _objRef_global__Microsoft_UI_Xaml_Automation_Peers_IItemContainerAutomationPeer => ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IItemContainerAutomationPeer ?? Make___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IItemContainerAutomationPeer();

        private volatile IObjectReference ___objRef_global__Microsoft_UI_Xaml_Automation_Provider_ISelectionItemProvider;
        private IObjectReference Make___objRef_global__Microsoft_UI_Xaml_Automation_Provider_ISelectionItemProvider()
        {
            global::System.Threading.Interlocked.CompareExchange(ref ___objRef_global__Microsoft_UI_Xaml_Automation_Provider_ISelectionItemProvider, ((IWinRTObject)this).NativeObject.As<IUnknownVftbl>(global::ABI.Microsoft.UI.Xaml.Automation.Provider.ISelectionItemProviderMethods.IID), null);
            return ___objRef_global__Microsoft_UI_Xaml_Automation_Provider_ISelectionItemProvider;
        }
        private IObjectReference _objRef_global__Microsoft_UI_Xaml_Automation_Provider_ISelectionItemProvider => ___objRef_global__Microsoft_UI_Xaml_Automation_Provider_ISelectionItemProvider ?? Make___objRef_global__Microsoft_UI_Xaml_Automation_Provider_ISelectionItemProvider();

        private volatile IObjectReference ___objRef_global__Microsoft_UI_Xaml_Automation_Provider_IInvokeProvider;
        private IObjectReference Make___objRef_global__Microsoft_UI_Xaml_Automation_Provider_IInvokeProvider()
        {
            global::System.Threading.Interlocked.CompareExchange(ref ___objRef_global__Microsoft_UI_Xaml_Automation_Provider_IInvokeProvider, ((IWinRTObject)this).NativeObject.As<IUnknownVftbl>(global::ABI.Microsoft.UI.Xaml.Automation.Provider.IInvokeProviderMethods.IID), null);
            return ___objRef_global__Microsoft_UI_Xaml_Automation_Provider_IInvokeProvider;
        }
        private IObjectReference _objRef_global__Microsoft_UI_Xaml_Automation_Provider_IInvokeProvider => ___objRef_global__Microsoft_UI_Xaml_Automation_Provider_IInvokeProvider ?? Make___objRef_global__Microsoft_UI_Xaml_Automation_Provider_IInvokeProvider();



        private static class _IItemContainerAutomationPeerFactoryMethods
        {
            public static unsafe IntPtr CreateInstance(IObjectReference _obj, global::Microsoft.UI.Xaml.Controls.ItemContainer owner, object baseInterface, out IntPtr innerInterface)
            {
                var ThisPtr = _obj.ThisPtr;

                ObjectReferenceValue __owner = default;
                ObjectReferenceValue __baseInterface = default;
                IntPtr __innerInterface = default;
                IntPtr __retval = default;
                try
                {
                    __owner = global::ABI.Microsoft.UI.Xaml.Controls.ItemContainer.CreateMarshaler2(owner);
                    __baseInterface = MarshalInspectable<object>.CreateMarshaler2(baseInterface);
                    global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, IntPtr, IntPtr*, IntPtr*, int>**)ThisPtr)[6](ThisPtr, MarshalInspectable<object>.GetAbi(__owner), MarshalInspectable<object>.GetAbi(__baseInterface), &__innerInterface, &__retval));
                    global::System.GC.KeepAlive(_obj);
                    innerInterface = __innerInterface;
                    return __retval;
                }
                finally
                {
                    MarshalInspectable<object>.DisposeMarshaler(__owner);
                    MarshalInspectable<object>.DisposeMarshaler(__baseInterface);
                }
            }
        }

        private static volatile IObjectReference ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IItemContainerAutomationPeerFactory;
        private static IObjectReference _objRef_global__Microsoft_UI_Xaml_Automation_Peers_IItemContainerAutomationPeerFactory
        {
            get
            { 
                var factory = ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IItemContainerAutomationPeerFactory;
                if (factory != null && factory.IsInCurrentContext)
                {
                    return factory;
                }
                else
                {
                    return ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IItemContainerAutomationPeerFactory = ActivationFactory.Get("Microsoft.UI.Xaml.Automation.Peers.ItemContainerAutomationPeer", global::ABI.Microsoft.UI.Xaml.Automation.Peers.IItemContainerAutomationPeerFactoryMethods.IID);
                }
            }
        }

        public ItemContainerAutomationPeer(global::Microsoft.UI.Xaml.Controls.ItemContainer owner):base(global::WinRT.DerivedComposed.Instance)
        {
            bool isAggregation = this.GetType() != typeof(ItemContainerAutomationPeer);
            object baseInspectable = isAggregation ? this : null;
            IntPtr composed = _IItemContainerAutomationPeerFactoryMethods.CreateInstance(_objRef_global__Microsoft_UI_Xaml_Automation_Peers_IItemContainerAutomationPeerFactory, owner, baseInspectable, out IntPtr inner);
            try
            {
                ComWrappersHelper.Init(isAggregation, this, composed, inner, global::ABI.Microsoft.UI.Xaml.Automation.Peers.IItemContainerAutomationPeerMethods.IID, out _inner);

            }
            finally
            {
                Marshal.Release(inner);   
            }
        }

        public static new ItemContainerAutomationPeer FromAbi(IntPtr thisPtr)
        {
            if (thisPtr == IntPtr.Zero) return null;
            return MarshalInspectable<ItemContainerAutomationPeer>.FromAbi(thisPtr);
        }

        protected internal ItemContainerAutomationPeer(IObjectReference objRef)
            : base(global::WinRT.DerivedComposed.Instance)

        {
            _inner = objRef.As(global::ABI.Microsoft.UI.Xaml.Automation.Peers.IItemContainerAutomationPeerMethods.IID);

        }


        public static bool operator ==(ItemContainerAutomationPeer x, ItemContainerAutomationPeer y) => (x?.ThisPtr ?? IntPtr.Zero) == (y?.ThisPtr ?? IntPtr.Zero);
        public static bool operator !=(ItemContainerAutomationPeer x, ItemContainerAutomationPeer y) => !(x == y);
        public bool Equals(ItemContainerAutomationPeer other) => this == other;
        public override bool Equals(object obj) => obj is ItemContainerAutomationPeer that && this == that;
        public override int GetHashCode() => ThisPtr.GetHashCode();


        protected ItemContainerAutomationPeer(global::WinRT.DerivedComposed _):base(_)
        {

        }
        bool IWinRTObject.HasUnwrappableNativeObject => this.GetType() == typeof(ItemContainerAutomationPeer);
        IObjectReference IWinRTObject.NativeObject => _inner;

        private struct InterfaceTag<I>{};


        public void AddToSelection() => global::ABI.Microsoft.UI.Xaml.Automation.Provider.ISelectionItemProviderMethods.AddToSelection(_objRef_global__Microsoft_UI_Xaml_Automation_Provider_ISelectionItemProvider);

        public void RemoveFromSelection() => global::ABI.Microsoft.UI.Xaml.Automation.Provider.ISelectionItemProviderMethods.RemoveFromSelection(_objRef_global__Microsoft_UI_Xaml_Automation_Provider_ISelectionItemProvider);

        public void Select() => global::ABI.Microsoft.UI.Xaml.Automation.Provider.ISelectionItemProviderMethods.Select(_objRef_global__Microsoft_UI_Xaml_Automation_Provider_ISelectionItemProvider);

        public void Invoke() => global::ABI.Microsoft.UI.Xaml.Automation.Provider.IInvokeProviderMethods.Invoke(_objRef_global__Microsoft_UI_Xaml_Automation_Provider_IInvokeProvider);

        public bool IsSelected => global::ABI.Microsoft.UI.Xaml.Automation.Provider.ISelectionItemProviderMethods.get_IsSelected(_objRef_global__Microsoft_UI_Xaml_Automation_Provider_ISelectionItemProvider);

        public global::Microsoft.UI.Xaml.Automation.Provider.IRawElementProviderSimple SelectionContainer => global::ABI.Microsoft.UI.Xaml.Automation.Provider.ISelectionItemProviderMethods.get_SelectionContainer(_objRef_global__Microsoft_UI_Xaml_Automation_Provider_ISelectionItemProvider);

        protected override bool IsOverridableInterface(Guid iid) => base.IsOverridableInterface(iid);

        global::System.Runtime.InteropServices.CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(ref Guid iid, out IntPtr ppv)
        {
            ppv = IntPtr.Zero;
            if (IsOverridableInterface(iid) || global::WinRT.Interop.IID.IID_IInspectable == iid)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
            }

            if (((IWinRTObject)this).NativeObject.TryAs(iid, out ppv) >= 0)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.Handled;
            }

            return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
        }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")]
    [global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Automation.Peers.ItemsControlAutomationPeer))]
    [global::ABI.Microsoft.UI.Xaml.Automation.Peers.ItemsControlAutomationPeerRcwFactory]
    [global::WinRT.ProjectedRuntimeClass(typeof(IItemsControlAutomationPeer))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    public class ItemsControlAutomationPeer : FrameworkElementAutomationPeer, IItemsControlAutomationPeerOverrides, global::Microsoft.UI.Xaml.Automation.Provider.IItemContainerProvider, global::System.Runtime.InteropServices.ICustomQueryInterface, IWinRTObject, IEquatable<ItemsControlAutomationPeer>
    {
        private IntPtr ThisPtr => _inner == null ? (((IWinRTObject)this).NativeObject).ThisPtr : _inner.ThisPtr;

        private readonly IObjectReference _inner = null;




        private volatile IObjectReference ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IItemsControlAutomationPeer;
        private IObjectReference Make___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IItemsControlAutomationPeer()
        {
            global::System.Threading.Interlocked.CompareExchange(ref ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IItemsControlAutomationPeer, ((IWinRTObject)this).NativeObject.As<IUnknownVftbl>(global::ABI.Microsoft.UI.Xaml.Automation.Peers.IItemsControlAutomationPeerMethods.IID), null);
            return ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IItemsControlAutomationPeer;
        }
        private IObjectReference _objRef_global__Microsoft_UI_Xaml_Automation_Peers_IItemsControlAutomationPeer => ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IItemsControlAutomationPeer ?? Make___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IItemsControlAutomationPeer();

        private volatile IObjectReference ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IItemsControlAutomationPeerOverrides;
        private IObjectReference Make___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IItemsControlAutomationPeerOverrides()
        {
            global::System.Threading.Interlocked.CompareExchange(ref ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IItemsControlAutomationPeerOverrides, ((IWinRTObject)this).NativeObject.As<IUnknownVftbl>(global::ABI.Microsoft.UI.Xaml.Automation.Peers.IItemsControlAutomationPeerOverridesMethods.IID), null);
            return ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IItemsControlAutomationPeerOverrides;
        }
        private IObjectReference _objRef_global__Microsoft_UI_Xaml_Automation_Peers_IItemsControlAutomationPeerOverrides => ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IItemsControlAutomationPeerOverrides ?? Make___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IItemsControlAutomationPeerOverrides();

        private volatile IObjectReference ___objRef_global__Microsoft_UI_Xaml_Automation_Provider_IItemContainerProvider;
        private IObjectReference Make___objRef_global__Microsoft_UI_Xaml_Automation_Provider_IItemContainerProvider()
        {
            global::System.Threading.Interlocked.CompareExchange(ref ___objRef_global__Microsoft_UI_Xaml_Automation_Provider_IItemContainerProvider, ((IWinRTObject)this).NativeObject.As<IUnknownVftbl>(global::ABI.Microsoft.UI.Xaml.Automation.Provider.IItemContainerProviderMethods.IID), null);
            return ___objRef_global__Microsoft_UI_Xaml_Automation_Provider_IItemContainerProvider;
        }
        private IObjectReference _objRef_global__Microsoft_UI_Xaml_Automation_Provider_IItemContainerProvider => ___objRef_global__Microsoft_UI_Xaml_Automation_Provider_IItemContainerProvider ?? Make___objRef_global__Microsoft_UI_Xaml_Automation_Provider_IItemContainerProvider();



        private static class _IItemsControlAutomationPeerFactoryMethods
        {
            public static unsafe IntPtr CreateInstanceWithOwner(IObjectReference _obj, global::Microsoft.UI.Xaml.Controls.ItemsControl owner, object baseInterface, out IntPtr innerInterface)
            {
                var ThisPtr = _obj.ThisPtr;

                ObjectReferenceValue __owner = default;
                ObjectReferenceValue __baseInterface = default;
                IntPtr __innerInterface = default;
                IntPtr __retval = default;
                try
                {
                    __owner = global::ABI.Microsoft.UI.Xaml.Controls.ItemsControl.CreateMarshaler2(owner);
                    __baseInterface = MarshalInspectable<object>.CreateMarshaler2(baseInterface);
                    global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, IntPtr, IntPtr*, IntPtr*, int>**)ThisPtr)[6](ThisPtr, MarshalInspectable<object>.GetAbi(__owner), MarshalInspectable<object>.GetAbi(__baseInterface), &__innerInterface, &__retval));
                    global::System.GC.KeepAlive(_obj);
                    innerInterface = __innerInterface;
                    return __retval;
                }
                finally
                {
                    MarshalInspectable<object>.DisposeMarshaler(__owner);
                    MarshalInspectable<object>.DisposeMarshaler(__baseInterface);
                }
            }
        }

        private static volatile IObjectReference ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IItemsControlAutomationPeerFactory;
        private static IObjectReference _objRef_global__Microsoft_UI_Xaml_Automation_Peers_IItemsControlAutomationPeerFactory
        {
            get
            { 
                var factory = ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IItemsControlAutomationPeerFactory;
                if (factory != null && factory.IsInCurrentContext)
                {
                    return factory;
                }
                else
                {
                    return ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IItemsControlAutomationPeerFactory = ActivationFactory.Get("Microsoft.UI.Xaml.Automation.Peers.ItemsControlAutomationPeer", global::ABI.Microsoft.UI.Xaml.Automation.Peers.IItemsControlAutomationPeerFactoryMethods.IID);
                }
            }
        }

        public ItemsControlAutomationPeer(global::Microsoft.UI.Xaml.Controls.ItemsControl owner):base(global::WinRT.DerivedComposed.Instance)
        {
            bool isAggregation = this.GetType() != typeof(ItemsControlAutomationPeer);
            object baseInspectable = isAggregation ? this : null;
            IntPtr composed = _IItemsControlAutomationPeerFactoryMethods.CreateInstanceWithOwner(_objRef_global__Microsoft_UI_Xaml_Automation_Peers_IItemsControlAutomationPeerFactory, owner, baseInspectable, out IntPtr inner);
            try
            {
                ComWrappersHelper.Init(isAggregation, this, composed, inner, global::ABI.Microsoft.UI.Xaml.Automation.Peers.IItemsControlAutomationPeerMethods.IID, out _inner);

            }
            finally
            {
                Marshal.Release(inner);   
            }
        }

        public static new ItemsControlAutomationPeer FromAbi(IntPtr thisPtr)
        {
            if (thisPtr == IntPtr.Zero) return null;
            return MarshalInspectable<ItemsControlAutomationPeer>.FromAbi(thisPtr);
        }

        protected internal ItemsControlAutomationPeer(IObjectReference objRef)
            : base(global::WinRT.DerivedComposed.Instance)

        {
            _inner = objRef.As(global::ABI.Microsoft.UI.Xaml.Automation.Peers.IItemsControlAutomationPeerMethods.IID);

        }


        public static bool operator ==(ItemsControlAutomationPeer x, ItemsControlAutomationPeer y) => (x?.ThisPtr ?? IntPtr.Zero) == (y?.ThisPtr ?? IntPtr.Zero);
        public static bool operator !=(ItemsControlAutomationPeer x, ItemsControlAutomationPeer y) => !(x == y);
        public bool Equals(ItemsControlAutomationPeer other) => this == other;
        public override bool Equals(object obj) => obj is ItemsControlAutomationPeer that && this == that;
        public override int GetHashCode() => ThisPtr.GetHashCode();


        protected ItemsControlAutomationPeer(global::WinRT.DerivedComposed _):base(_)
        {

        }
        bool IWinRTObject.HasUnwrappableNativeObject => this.GetType() == typeof(ItemsControlAutomationPeer);
        IObjectReference IWinRTObject.NativeObject => _inner;

        private struct InterfaceTag<I>{};


        public ItemAutomationPeer CreateItemAutomationPeer(object item) => global::ABI.Microsoft.UI.Xaml.Automation.Peers.IItemsControlAutomationPeerMethods.CreateItemAutomationPeer(_objRef_global__Microsoft_UI_Xaml_Automation_Peers_IItemsControlAutomationPeer, item);

        protected virtual ItemAutomationPeer OnCreateItemAutomationPeer(object item) => global::ABI.Microsoft.UI.Xaml.Automation.Peers.IItemsControlAutomationPeerOverridesMethods.OnCreateItemAutomationPeer(_objRef_global__Microsoft_UI_Xaml_Automation_Peers_IItemsControlAutomationPeerOverrides, item);

        ItemAutomationPeer IItemsControlAutomationPeerOverrides.OnCreateItemAutomationPeer(object item) => OnCreateItemAutomationPeer(item);
        public global::Microsoft.UI.Xaml.Automation.Provider.IRawElementProviderSimple FindItemByProperty(global::Microsoft.UI.Xaml.Automation.Provider.IRawElementProviderSimple startAfter, global::Microsoft.UI.Xaml.Automation.AutomationProperty automationProperty, object value) => global::ABI.Microsoft.UI.Xaml.Automation.Provider.IItemContainerProviderMethods.FindItemByProperty(_objRef_global__Microsoft_UI_Xaml_Automation_Provider_IItemContainerProvider, startAfter, automationProperty, value);

        protected override bool IsOverridableInterface(Guid iid) => global::ABI.Microsoft.UI.Xaml.Automation.Peers.IItemsControlAutomationPeerOverridesMethods.IID == iid || base.IsOverridableInterface(iid);

        global::System.Runtime.InteropServices.CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(ref Guid iid, out IntPtr ppv)
        {
            ppv = IntPtr.Zero;
            if (IsOverridableInterface(iid) || global::WinRT.Interop.IID.IID_IInspectable == iid)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
            }

            if (((IWinRTObject)this).NativeObject.TryAs(iid, out ppv) >= 0)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.Handled;
            }

            return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
        }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")]
    [global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Automation.Peers.ItemsViewAutomationPeer))]
    [global::ABI.Microsoft.UI.Xaml.Automation.Peers.ItemsViewAutomationPeerRcwFactory]
    [global::WinRT.ProjectedRuntimeClass(typeof(IItemsViewAutomationPeer))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.XamlContract), 327680u)]
    public class ItemsViewAutomationPeer : FrameworkElementAutomationPeer, global::Microsoft.UI.Xaml.Automation.Provider.ISelectionProvider, global::System.Runtime.InteropServices.ICustomQueryInterface, IWinRTObject, IEquatable<ItemsViewAutomationPeer>
    {
        private IntPtr ThisPtr => _inner == null ? (((IWinRTObject)this).NativeObject).ThisPtr : _inner.ThisPtr;

        private readonly IObjectReference _inner = null;




        private volatile IObjectReference ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IItemsViewAutomationPeer;
        private IObjectReference Make___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IItemsViewAutomationPeer()
        {
            global::System.Threading.Interlocked.CompareExchange(ref ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IItemsViewAutomationPeer, ((IWinRTObject)this).NativeObject.As<IUnknownVftbl>(global::ABI.Microsoft.UI.Xaml.Automation.Peers.IItemsViewAutomationPeerMethods.IID), null);
            return ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IItemsViewAutomationPeer;
        }
        private IObjectReference _objRef_global__Microsoft_UI_Xaml_Automation_Peers_IItemsViewAutomationPeer => ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IItemsViewAutomationPeer ?? Make___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IItemsViewAutomationPeer();

        private volatile IObjectReference ___objRef_global__Microsoft_UI_Xaml_Automation_Provider_ISelectionProvider;
        private IObjectReference Make___objRef_global__Microsoft_UI_Xaml_Automation_Provider_ISelectionProvider()
        {
            global::System.Threading.Interlocked.CompareExchange(ref ___objRef_global__Microsoft_UI_Xaml_Automation_Provider_ISelectionProvider, ((IWinRTObject)this).NativeObject.As<IUnknownVftbl>(global::ABI.Microsoft.UI.Xaml.Automation.Provider.ISelectionProviderMethods.IID), null);
            return ___objRef_global__Microsoft_UI_Xaml_Automation_Provider_ISelectionProvider;
        }
        private IObjectReference _objRef_global__Microsoft_UI_Xaml_Automation_Provider_ISelectionProvider => ___objRef_global__Microsoft_UI_Xaml_Automation_Provider_ISelectionProvider ?? Make___objRef_global__Microsoft_UI_Xaml_Automation_Provider_ISelectionProvider();



        private static class _IItemsViewAutomationPeerFactoryMethods
        {
            public static unsafe IntPtr CreateInstance(IObjectReference _obj, global::Microsoft.UI.Xaml.Controls.ItemsView owner, object baseInterface, out IntPtr innerInterface)
            {
                var ThisPtr = _obj.ThisPtr;

                ObjectReferenceValue __owner = default;
                ObjectReferenceValue __baseInterface = default;
                IntPtr __innerInterface = default;
                IntPtr __retval = default;
                try
                {
                    __owner = global::ABI.Microsoft.UI.Xaml.Controls.ItemsView.CreateMarshaler2(owner);
                    __baseInterface = MarshalInspectable<object>.CreateMarshaler2(baseInterface);
                    global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, IntPtr, IntPtr*, IntPtr*, int>**)ThisPtr)[6](ThisPtr, MarshalInspectable<object>.GetAbi(__owner), MarshalInspectable<object>.GetAbi(__baseInterface), &__innerInterface, &__retval));
                    global::System.GC.KeepAlive(_obj);
                    innerInterface = __innerInterface;
                    return __retval;
                }
                finally
                {
                    MarshalInspectable<object>.DisposeMarshaler(__owner);
                    MarshalInspectable<object>.DisposeMarshaler(__baseInterface);
                }
            }
        }

        private static volatile IObjectReference ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IItemsViewAutomationPeerFactory;
        private static IObjectReference _objRef_global__Microsoft_UI_Xaml_Automation_Peers_IItemsViewAutomationPeerFactory
        {
            get
            { 
                var factory = ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IItemsViewAutomationPeerFactory;
                if (factory != null && factory.IsInCurrentContext)
                {
                    return factory;
                }
                else
                {
                    return ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IItemsViewAutomationPeerFactory = ActivationFactory.Get("Microsoft.UI.Xaml.Automation.Peers.ItemsViewAutomationPeer", global::ABI.Microsoft.UI.Xaml.Automation.Peers.IItemsViewAutomationPeerFactoryMethods.IID);
                }
            }
        }

        public ItemsViewAutomationPeer(global::Microsoft.UI.Xaml.Controls.ItemsView owner):base(global::WinRT.DerivedComposed.Instance)
        {
            bool isAggregation = this.GetType() != typeof(ItemsViewAutomationPeer);
            object baseInspectable = isAggregation ? this : null;
            IntPtr composed = _IItemsViewAutomationPeerFactoryMethods.CreateInstance(_objRef_global__Microsoft_UI_Xaml_Automation_Peers_IItemsViewAutomationPeerFactory, owner, baseInspectable, out IntPtr inner);
            try
            {
                ComWrappersHelper.Init(isAggregation, this, composed, inner, global::ABI.Microsoft.UI.Xaml.Automation.Peers.IItemsViewAutomationPeerMethods.IID, out _inner);

            }
            finally
            {
                Marshal.Release(inner);   
            }
        }

        public static new ItemsViewAutomationPeer FromAbi(IntPtr thisPtr)
        {
            if (thisPtr == IntPtr.Zero) return null;
            return MarshalInspectable<ItemsViewAutomationPeer>.FromAbi(thisPtr);
        }

        protected internal ItemsViewAutomationPeer(IObjectReference objRef)
            : base(global::WinRT.DerivedComposed.Instance)

        {
            _inner = objRef.As(global::ABI.Microsoft.UI.Xaml.Automation.Peers.IItemsViewAutomationPeerMethods.IID);

        }


        public static bool operator ==(ItemsViewAutomationPeer x, ItemsViewAutomationPeer y) => (x?.ThisPtr ?? IntPtr.Zero) == (y?.ThisPtr ?? IntPtr.Zero);
        public static bool operator !=(ItemsViewAutomationPeer x, ItemsViewAutomationPeer y) => !(x == y);
        public bool Equals(ItemsViewAutomationPeer other) => this == other;
        public override bool Equals(object obj) => obj is ItemsViewAutomationPeer that && this == that;
        public override int GetHashCode() => ThisPtr.GetHashCode();


        protected ItemsViewAutomationPeer(global::WinRT.DerivedComposed _):base(_)
        {

        }
        bool IWinRTObject.HasUnwrappableNativeObject => this.GetType() == typeof(ItemsViewAutomationPeer);
        IObjectReference IWinRTObject.NativeObject => _inner;

        private struct InterfaceTag<I>{};


        public global::Microsoft.UI.Xaml.Automation.Provider.IRawElementProviderSimple[] GetSelection() => global::ABI.Microsoft.UI.Xaml.Automation.Provider.ISelectionProviderMethods.GetSelection(_objRef_global__Microsoft_UI_Xaml_Automation_Provider_ISelectionProvider);

        public bool CanSelectMultiple => global::ABI.Microsoft.UI.Xaml.Automation.Provider.ISelectionProviderMethods.get_CanSelectMultiple(_objRef_global__Microsoft_UI_Xaml_Automation_Provider_ISelectionProvider);

        public bool IsSelectionRequired => global::ABI.Microsoft.UI.Xaml.Automation.Provider.ISelectionProviderMethods.get_IsSelectionRequired(_objRef_global__Microsoft_UI_Xaml_Automation_Provider_ISelectionProvider);

        protected override bool IsOverridableInterface(Guid iid) => base.IsOverridableInterface(iid);

        global::System.Runtime.InteropServices.CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(ref Guid iid, out IntPtr ppv)
        {
            ppv = IntPtr.Zero;
            if (IsOverridableInterface(iid) || global::WinRT.Interop.IID.IID_IInspectable == iid)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
            }

            if (((IWinRTObject)this).NativeObject.TryAs(iid, out ppv) >= 0)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.Handled;
            }

            return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
        }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")]
    [global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Automation.Peers.ListBoxAutomationPeer))]
    [global::ABI.Microsoft.UI.Xaml.Automation.Peers.ListBoxAutomationPeerRcwFactory]
    [global::WinRT.ProjectedRuntimeClass(typeof(IListBoxAutomationPeer))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    public class ListBoxAutomationPeer : SelectorAutomationPeer, global::System.Runtime.InteropServices.ICustomQueryInterface, IWinRTObject, IEquatable<ListBoxAutomationPeer>
    {
        private IntPtr ThisPtr => _inner == null ? (((IWinRTObject)this).NativeObject).ThisPtr : _inner.ThisPtr;

        private readonly IObjectReference _inner = null;




        private volatile IObjectReference ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IListBoxAutomationPeer;
        private IObjectReference Make___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IListBoxAutomationPeer()
        {
            global::System.Threading.Interlocked.CompareExchange(ref ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IListBoxAutomationPeer, ((IWinRTObject)this).NativeObject.As<IUnknownVftbl>(global::ABI.Microsoft.UI.Xaml.Automation.Peers.IListBoxAutomationPeerMethods.IID), null);
            return ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IListBoxAutomationPeer;
        }
        private IObjectReference _objRef_global__Microsoft_UI_Xaml_Automation_Peers_IListBoxAutomationPeer => ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IListBoxAutomationPeer ?? Make___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IListBoxAutomationPeer();



        private static class _IListBoxAutomationPeerFactoryMethods
        {
            public static unsafe IntPtr CreateInstanceWithOwner(IObjectReference _obj, global::Microsoft.UI.Xaml.Controls.ListBox owner, object baseInterface, out IntPtr innerInterface)
            {
                var ThisPtr = _obj.ThisPtr;

                ObjectReferenceValue __owner = default;
                ObjectReferenceValue __baseInterface = default;
                IntPtr __innerInterface = default;
                IntPtr __retval = default;
                try
                {
                    __owner = global::ABI.Microsoft.UI.Xaml.Controls.ListBox.CreateMarshaler2(owner);
                    __baseInterface = MarshalInspectable<object>.CreateMarshaler2(baseInterface);
                    global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, IntPtr, IntPtr*, IntPtr*, int>**)ThisPtr)[6](ThisPtr, MarshalInspectable<object>.GetAbi(__owner), MarshalInspectable<object>.GetAbi(__baseInterface), &__innerInterface, &__retval));
                    global::System.GC.KeepAlive(_obj);
                    innerInterface = __innerInterface;
                    return __retval;
                }
                finally
                {
                    MarshalInspectable<object>.DisposeMarshaler(__owner);
                    MarshalInspectable<object>.DisposeMarshaler(__baseInterface);
                }
            }
        }

        private static volatile IObjectReference ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IListBoxAutomationPeerFactory;
        private static IObjectReference _objRef_global__Microsoft_UI_Xaml_Automation_Peers_IListBoxAutomationPeerFactory
        {
            get
            { 
                var factory = ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IListBoxAutomationPeerFactory;
                if (factory != null && factory.IsInCurrentContext)
                {
                    return factory;
                }
                else
                {
                    return ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IListBoxAutomationPeerFactory = ActivationFactory.Get("Microsoft.UI.Xaml.Automation.Peers.ListBoxAutomationPeer", global::ABI.Microsoft.UI.Xaml.Automation.Peers.IListBoxAutomationPeerFactoryMethods.IID);
                }
            }
        }

        public ListBoxAutomationPeer(global::Microsoft.UI.Xaml.Controls.ListBox owner):base(global::WinRT.DerivedComposed.Instance)
        {
            bool isAggregation = this.GetType() != typeof(ListBoxAutomationPeer);
            object baseInspectable = isAggregation ? this : null;
            IntPtr composed = _IListBoxAutomationPeerFactoryMethods.CreateInstanceWithOwner(_objRef_global__Microsoft_UI_Xaml_Automation_Peers_IListBoxAutomationPeerFactory, owner, baseInspectable, out IntPtr inner);
            try
            {
                ComWrappersHelper.Init(isAggregation, this, composed, inner, global::ABI.Microsoft.UI.Xaml.Automation.Peers.IListBoxAutomationPeerMethods.IID, out _inner);

            }
            finally
            {
                Marshal.Release(inner);   
            }
        }

        public static new ListBoxAutomationPeer FromAbi(IntPtr thisPtr)
        {
            if (thisPtr == IntPtr.Zero) return null;
            return MarshalInspectable<ListBoxAutomationPeer>.FromAbi(thisPtr);
        }

        protected internal ListBoxAutomationPeer(IObjectReference objRef)
            : base(global::WinRT.DerivedComposed.Instance)

        {
            _inner = objRef.As(global::ABI.Microsoft.UI.Xaml.Automation.Peers.IListBoxAutomationPeerMethods.IID);

        }


        public static bool operator ==(ListBoxAutomationPeer x, ListBoxAutomationPeer y) => (x?.ThisPtr ?? IntPtr.Zero) == (y?.ThisPtr ?? IntPtr.Zero);
        public static bool operator !=(ListBoxAutomationPeer x, ListBoxAutomationPeer y) => !(x == y);
        public bool Equals(ListBoxAutomationPeer other) => this == other;
        public override bool Equals(object obj) => obj is ListBoxAutomationPeer that && this == that;
        public override int GetHashCode() => ThisPtr.GetHashCode();


        protected ListBoxAutomationPeer(global::WinRT.DerivedComposed _):base(_)
        {

        }
        bool IWinRTObject.HasUnwrappableNativeObject => this.GetType() == typeof(ListBoxAutomationPeer);
        IObjectReference IWinRTObject.NativeObject => _inner;

        private struct InterfaceTag<I>{};


        protected override bool IsOverridableInterface(Guid iid) => base.IsOverridableInterface(iid);

        global::System.Runtime.InteropServices.CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(ref Guid iid, out IntPtr ppv)
        {
            ppv = IntPtr.Zero;
            if (IsOverridableInterface(iid) || global::WinRT.Interop.IID.IID_IInspectable == iid)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
            }

            if (((IWinRTObject)this).NativeObject.TryAs(iid, out ppv) >= 0)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.Handled;
            }

            return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
        }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")]
    [global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Automation.Peers.ListBoxItemAutomationPeer))]
    [global::ABI.Microsoft.UI.Xaml.Automation.Peers.ListBoxItemAutomationPeerRcwFactory]
    [global::WinRT.ProjectedRuntimeClass(typeof(IListBoxItemAutomationPeer))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    public class ListBoxItemAutomationPeer : FrameworkElementAutomationPeer, global::System.Runtime.InteropServices.ICustomQueryInterface, IWinRTObject, IEquatable<ListBoxItemAutomationPeer>
    {
        private IntPtr ThisPtr => _inner == null ? (((IWinRTObject)this).NativeObject).ThisPtr : _inner.ThisPtr;

        private readonly IObjectReference _inner = null;




        private volatile IObjectReference ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IListBoxItemAutomationPeer;
        private IObjectReference Make___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IListBoxItemAutomationPeer()
        {
            global::System.Threading.Interlocked.CompareExchange(ref ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IListBoxItemAutomationPeer, ((IWinRTObject)this).NativeObject.As<IUnknownVftbl>(global::ABI.Microsoft.UI.Xaml.Automation.Peers.IListBoxItemAutomationPeerMethods.IID), null);
            return ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IListBoxItemAutomationPeer;
        }
        private IObjectReference _objRef_global__Microsoft_UI_Xaml_Automation_Peers_IListBoxItemAutomationPeer => ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IListBoxItemAutomationPeer ?? Make___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IListBoxItemAutomationPeer();



        private static class _IListBoxItemAutomationPeerFactoryMethods
        {
            public static unsafe IntPtr CreateInstanceWithOwner(IObjectReference _obj, global::Microsoft.UI.Xaml.Controls.ListBoxItem owner, object baseInterface, out IntPtr innerInterface)
            {
                var ThisPtr = _obj.ThisPtr;

                ObjectReferenceValue __owner = default;
                ObjectReferenceValue __baseInterface = default;
                IntPtr __innerInterface = default;
                IntPtr __retval = default;
                try
                {
                    __owner = global::ABI.Microsoft.UI.Xaml.Controls.ListBoxItem.CreateMarshaler2(owner);
                    __baseInterface = MarshalInspectable<object>.CreateMarshaler2(baseInterface);
                    global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, IntPtr, IntPtr*, IntPtr*, int>**)ThisPtr)[6](ThisPtr, MarshalInspectable<object>.GetAbi(__owner), MarshalInspectable<object>.GetAbi(__baseInterface), &__innerInterface, &__retval));
                    global::System.GC.KeepAlive(_obj);
                    innerInterface = __innerInterface;
                    return __retval;
                }
                finally
                {
                    MarshalInspectable<object>.DisposeMarshaler(__owner);
                    MarshalInspectable<object>.DisposeMarshaler(__baseInterface);
                }
            }
        }

        private static volatile IObjectReference ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IListBoxItemAutomationPeerFactory;
        private static IObjectReference _objRef_global__Microsoft_UI_Xaml_Automation_Peers_IListBoxItemAutomationPeerFactory
        {
            get
            { 
                var factory = ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IListBoxItemAutomationPeerFactory;
                if (factory != null && factory.IsInCurrentContext)
                {
                    return factory;
                }
                else
                {
                    return ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IListBoxItemAutomationPeerFactory = ActivationFactory.Get("Microsoft.UI.Xaml.Automation.Peers.ListBoxItemAutomationPeer", global::ABI.Microsoft.UI.Xaml.Automation.Peers.IListBoxItemAutomationPeerFactoryMethods.IID);
                }
            }
        }

        public ListBoxItemAutomationPeer(global::Microsoft.UI.Xaml.Controls.ListBoxItem owner):base(global::WinRT.DerivedComposed.Instance)
        {
            bool isAggregation = this.GetType() != typeof(ListBoxItemAutomationPeer);
            object baseInspectable = isAggregation ? this : null;
            IntPtr composed = _IListBoxItemAutomationPeerFactoryMethods.CreateInstanceWithOwner(_objRef_global__Microsoft_UI_Xaml_Automation_Peers_IListBoxItemAutomationPeerFactory, owner, baseInspectable, out IntPtr inner);
            try
            {
                ComWrappersHelper.Init(isAggregation, this, composed, inner, global::ABI.Microsoft.UI.Xaml.Automation.Peers.IListBoxItemAutomationPeerMethods.IID, out _inner);

            }
            finally
            {
                Marshal.Release(inner);   
            }
        }

        public static new ListBoxItemAutomationPeer FromAbi(IntPtr thisPtr)
        {
            if (thisPtr == IntPtr.Zero) return null;
            return MarshalInspectable<ListBoxItemAutomationPeer>.FromAbi(thisPtr);
        }

        protected internal ListBoxItemAutomationPeer(IObjectReference objRef)
            : base(global::WinRT.DerivedComposed.Instance)

        {
            _inner = objRef.As(global::ABI.Microsoft.UI.Xaml.Automation.Peers.IListBoxItemAutomationPeerMethods.IID);

        }


        public static bool operator ==(ListBoxItemAutomationPeer x, ListBoxItemAutomationPeer y) => (x?.ThisPtr ?? IntPtr.Zero) == (y?.ThisPtr ?? IntPtr.Zero);
        public static bool operator !=(ListBoxItemAutomationPeer x, ListBoxItemAutomationPeer y) => !(x == y);
        public bool Equals(ListBoxItemAutomationPeer other) => this == other;
        public override bool Equals(object obj) => obj is ListBoxItemAutomationPeer that && this == that;
        public override int GetHashCode() => ThisPtr.GetHashCode();


        protected ListBoxItemAutomationPeer(global::WinRT.DerivedComposed _):base(_)
        {

        }
        bool IWinRTObject.HasUnwrappableNativeObject => this.GetType() == typeof(ListBoxItemAutomationPeer);
        IObjectReference IWinRTObject.NativeObject => _inner;

        private struct InterfaceTag<I>{};


        protected override bool IsOverridableInterface(Guid iid) => base.IsOverridableInterface(iid);

        global::System.Runtime.InteropServices.CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(ref Guid iid, out IntPtr ppv)
        {
            ppv = IntPtr.Zero;
            if (IsOverridableInterface(iid) || global::WinRT.Interop.IID.IID_IInspectable == iid)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
            }

            if (((IWinRTObject)this).NativeObject.TryAs(iid, out ppv) >= 0)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.Handled;
            }

            return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
        }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")]
    [global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Automation.Peers.ListBoxItemDataAutomationPeer))]
    [global::ABI.Microsoft.UI.Xaml.Automation.Peers.ListBoxItemDataAutomationPeerRcwFactory]
    [global::WinRT.ProjectedRuntimeClass(typeof(IListBoxItemDataAutomationPeer))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    public class ListBoxItemDataAutomationPeer : SelectorItemAutomationPeer, global::Microsoft.UI.Xaml.Automation.Provider.IScrollItemProvider, global::System.Runtime.InteropServices.ICustomQueryInterface, IWinRTObject, IEquatable<ListBoxItemDataAutomationPeer>
    {
        private IntPtr ThisPtr => _inner == null ? (((IWinRTObject)this).NativeObject).ThisPtr : _inner.ThisPtr;

        private readonly IObjectReference _inner = null;




        private volatile IObjectReference ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IListBoxItemDataAutomationPeer;
        private IObjectReference Make___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IListBoxItemDataAutomationPeer()
        {
            global::System.Threading.Interlocked.CompareExchange(ref ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IListBoxItemDataAutomationPeer, ((IWinRTObject)this).NativeObject.As<IUnknownVftbl>(global::ABI.Microsoft.UI.Xaml.Automation.Peers.IListBoxItemDataAutomationPeerMethods.IID), null);
            return ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IListBoxItemDataAutomationPeer;
        }
        private IObjectReference _objRef_global__Microsoft_UI_Xaml_Automation_Peers_IListBoxItemDataAutomationPeer => ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IListBoxItemDataAutomationPeer ?? Make___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IListBoxItemDataAutomationPeer();

        private volatile IObjectReference ___objRef_global__Microsoft_UI_Xaml_Automation_Provider_IScrollItemProvider;
        private IObjectReference Make___objRef_global__Microsoft_UI_Xaml_Automation_Provider_IScrollItemProvider()
        {
            global::System.Threading.Interlocked.CompareExchange(ref ___objRef_global__Microsoft_UI_Xaml_Automation_Provider_IScrollItemProvider, ((IWinRTObject)this).NativeObject.As<IUnknownVftbl>(global::ABI.Microsoft.UI.Xaml.Automation.Provider.IScrollItemProviderMethods.IID), null);
            return ___objRef_global__Microsoft_UI_Xaml_Automation_Provider_IScrollItemProvider;
        }
        private IObjectReference _objRef_global__Microsoft_UI_Xaml_Automation_Provider_IScrollItemProvider => ___objRef_global__Microsoft_UI_Xaml_Automation_Provider_IScrollItemProvider ?? Make___objRef_global__Microsoft_UI_Xaml_Automation_Provider_IScrollItemProvider();



        private static class _IListBoxItemDataAutomationPeerFactoryMethods
        {
            public static unsafe IntPtr CreateInstanceWithParentAndItem(IObjectReference _obj, object item, ListBoxAutomationPeer parent, object baseInterface, out IntPtr innerInterface)
            {
                var ThisPtr = _obj.ThisPtr;

                ObjectReferenceValue __item = default;
                ObjectReferenceValue __parent = default;
                ObjectReferenceValue __baseInterface = default;
                IntPtr __innerInterface = default;
                IntPtr __retval = default;
                try
                {
                    __item = MarshalInspectable<object>.CreateMarshaler2(item);
                    __parent = global::ABI.Microsoft.UI.Xaml.Automation.Peers.ListBoxAutomationPeer.CreateMarshaler2(parent);
                    __baseInterface = MarshalInspectable<object>.CreateMarshaler2(baseInterface);
                    global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, IntPtr, IntPtr, IntPtr*, IntPtr*, int>**)ThisPtr)[6](ThisPtr, MarshalInspectable<object>.GetAbi(__item), MarshalInspectable<object>.GetAbi(__parent), MarshalInspectable<object>.GetAbi(__baseInterface), &__innerInterface, &__retval));
                    global::System.GC.KeepAlive(_obj);
                    innerInterface = __innerInterface;
                    return __retval;
                }
                finally
                {
                    MarshalInspectable<object>.DisposeMarshaler(__item);
                    MarshalInspectable<object>.DisposeMarshaler(__parent);
                    MarshalInspectable<object>.DisposeMarshaler(__baseInterface);
                }
            }
        }

        private static volatile IObjectReference ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IListBoxItemDataAutomationPeerFactory;
        private static IObjectReference _objRef_global__Microsoft_UI_Xaml_Automation_Peers_IListBoxItemDataAutomationPeerFactory
        {
            get
            { 
                var factory = ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IListBoxItemDataAutomationPeerFactory;
                if (factory != null && factory.IsInCurrentContext)
                {
                    return factory;
                }
                else
                {
                    return ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IListBoxItemDataAutomationPeerFactory = ActivationFactory.Get("Microsoft.UI.Xaml.Automation.Peers.ListBoxItemDataAutomationPeer", global::ABI.Microsoft.UI.Xaml.Automation.Peers.IListBoxItemDataAutomationPeerFactoryMethods.IID);
                }
            }
        }

        public ListBoxItemDataAutomationPeer(object item, ListBoxAutomationPeer parent):base(global::WinRT.DerivedComposed.Instance)
        {
            bool isAggregation = this.GetType() != typeof(ListBoxItemDataAutomationPeer);
            object baseInspectable = isAggregation ? this : null;
            IntPtr composed = _IListBoxItemDataAutomationPeerFactoryMethods.CreateInstanceWithParentAndItem(_objRef_global__Microsoft_UI_Xaml_Automation_Peers_IListBoxItemDataAutomationPeerFactory, item, parent, baseInspectable, out IntPtr inner);
            try
            {
                ComWrappersHelper.Init(isAggregation, this, composed, inner, global::ABI.Microsoft.UI.Xaml.Automation.Peers.IListBoxItemDataAutomationPeerMethods.IID, out _inner);

            }
            finally
            {
                Marshal.Release(inner);   
            }
        }

        public static new ListBoxItemDataAutomationPeer FromAbi(IntPtr thisPtr)
        {
            if (thisPtr == IntPtr.Zero) return null;
            return MarshalInspectable<ListBoxItemDataAutomationPeer>.FromAbi(thisPtr);
        }

        protected internal ListBoxItemDataAutomationPeer(IObjectReference objRef)
            : base(global::WinRT.DerivedComposed.Instance)

        {
            _inner = objRef.As(global::ABI.Microsoft.UI.Xaml.Automation.Peers.IListBoxItemDataAutomationPeerMethods.IID);

        }


        public static bool operator ==(ListBoxItemDataAutomationPeer x, ListBoxItemDataAutomationPeer y) => (x?.ThisPtr ?? IntPtr.Zero) == (y?.ThisPtr ?? IntPtr.Zero);
        public static bool operator !=(ListBoxItemDataAutomationPeer x, ListBoxItemDataAutomationPeer y) => !(x == y);
        public bool Equals(ListBoxItemDataAutomationPeer other) => this == other;
        public override bool Equals(object obj) => obj is ListBoxItemDataAutomationPeer that && this == that;
        public override int GetHashCode() => ThisPtr.GetHashCode();


        protected ListBoxItemDataAutomationPeer(global::WinRT.DerivedComposed _):base(_)
        {

        }
        bool IWinRTObject.HasUnwrappableNativeObject => this.GetType() == typeof(ListBoxItemDataAutomationPeer);
        IObjectReference IWinRTObject.NativeObject => _inner;

        private struct InterfaceTag<I>{};


        public void ScrollIntoView() => global::ABI.Microsoft.UI.Xaml.Automation.Provider.IScrollItemProviderMethods.ScrollIntoView(_objRef_global__Microsoft_UI_Xaml_Automation_Provider_IScrollItemProvider);

        protected override bool IsOverridableInterface(Guid iid) => base.IsOverridableInterface(iid);

        global::System.Runtime.InteropServices.CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(ref Guid iid, out IntPtr ppv)
        {
            ppv = IntPtr.Zero;
            if (IsOverridableInterface(iid) || global::WinRT.Interop.IID.IID_IInspectable == iid)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
            }

            if (((IWinRTObject)this).NativeObject.TryAs(iid, out ppv) >= 0)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.Handled;
            }

            return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
        }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")]
    [global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Automation.Peers.ListPickerFlyoutPresenterAutomationPeer))]
    [global::ABI.Microsoft.UI.Xaml.Automation.Peers.ListPickerFlyoutPresenterAutomationPeerRcwFactory]
    [global::WinRT.ProjectedRuntimeClass(typeof(IListPickerFlyoutPresenterAutomationPeer))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    public sealed class ListPickerFlyoutPresenterAutomationPeer : FrameworkElementAutomationPeer, global::System.Runtime.InteropServices.ICustomQueryInterface, IWinRTObject, IEquatable<ListPickerFlyoutPresenterAutomationPeer>
    {
        private IntPtr ThisPtr => _inner == null ? (((IWinRTObject)this).NativeObject).ThisPtr : _inner.ThisPtr;

        private readonly IObjectReference _inner = null;



        private IObjectReference _objRef_global__Microsoft_UI_Xaml_Automation_Peers_IListPickerFlyoutPresenterAutomationPeer => _inner;


        public static new ListPickerFlyoutPresenterAutomationPeer FromAbi(IntPtr thisPtr)
        {
            if (thisPtr == IntPtr.Zero) return null;
            return MarshalInspectable<ListPickerFlyoutPresenterAutomationPeer>.FromAbi(thisPtr);
        }

        internal ListPickerFlyoutPresenterAutomationPeer(IObjectReference objRef)
            : base(global::WinRT.DerivedComposed.Instance)

        {
            _inner = objRef.As(global::ABI.Microsoft.UI.Xaml.Automation.Peers.IListPickerFlyoutPresenterAutomationPeerMethods.IID);

        }


        public static bool operator ==(ListPickerFlyoutPresenterAutomationPeer x, ListPickerFlyoutPresenterAutomationPeer y) => (x?.ThisPtr ?? IntPtr.Zero) == (y?.ThisPtr ?? IntPtr.Zero);
        public static bool operator !=(ListPickerFlyoutPresenterAutomationPeer x, ListPickerFlyoutPresenterAutomationPeer y) => !(x == y);
        public bool Equals(ListPickerFlyoutPresenterAutomationPeer other) => this == other;
        public override bool Equals(object obj) => obj is ListPickerFlyoutPresenterAutomationPeer that && this == that;
        public override int GetHashCode() => ThisPtr.GetHashCode();


        bool IWinRTObject.HasUnwrappableNativeObject => true;
        IObjectReference IWinRTObject.NativeObject => _inner;

        private struct InterfaceTag<I>{};


        protected override bool IsOverridableInterface(Guid iid) => base.IsOverridableInterface(iid);

        global::System.Runtime.InteropServices.CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(ref Guid iid, out IntPtr ppv)
        {
            ppv = IntPtr.Zero;
            if (IsOverridableInterface(iid) || global::WinRT.Interop.IID.IID_IInspectable == iid)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
            }

            if (((IWinRTObject)this).NativeObject.TryAs(iid, out ppv) >= 0)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.Handled;
            }

            return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
        }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")]
    [global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Automation.Peers.ListViewAutomationPeer))]
    [global::ABI.Microsoft.UI.Xaml.Automation.Peers.ListViewAutomationPeerRcwFactory]
    [global::WinRT.ProjectedRuntimeClass(typeof(IListViewAutomationPeer))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    public class ListViewAutomationPeer : ListViewBaseAutomationPeer, global::System.Runtime.InteropServices.ICustomQueryInterface, IWinRTObject, IEquatable<ListViewAutomationPeer>
    {
        private IntPtr ThisPtr => _inner == null ? (((IWinRTObject)this).NativeObject).ThisPtr : _inner.ThisPtr;

        private readonly IObjectReference _inner = null;




        private volatile IObjectReference ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IListViewAutomationPeer;
        private IObjectReference Make___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IListViewAutomationPeer()
        {
            global::System.Threading.Interlocked.CompareExchange(ref ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IListViewAutomationPeer, ((IWinRTObject)this).NativeObject.As<IUnknownVftbl>(global::ABI.Microsoft.UI.Xaml.Automation.Peers.IListViewAutomationPeerMethods.IID), null);
            return ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IListViewAutomationPeer;
        }
        private IObjectReference _objRef_global__Microsoft_UI_Xaml_Automation_Peers_IListViewAutomationPeer => ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IListViewAutomationPeer ?? Make___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IListViewAutomationPeer();



        private static class _IListViewAutomationPeerFactoryMethods
        {
            public static unsafe IntPtr CreateInstanceWithOwner(IObjectReference _obj, global::Microsoft.UI.Xaml.Controls.ListView owner, object baseInterface, out IntPtr innerInterface)
            {
                var ThisPtr = _obj.ThisPtr;

                ObjectReferenceValue __owner = default;
                ObjectReferenceValue __baseInterface = default;
                IntPtr __innerInterface = default;
                IntPtr __retval = default;
                try
                {
                    __owner = global::ABI.Microsoft.UI.Xaml.Controls.ListView.CreateMarshaler2(owner);
                    __baseInterface = MarshalInspectable<object>.CreateMarshaler2(baseInterface);
                    global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, IntPtr, IntPtr*, IntPtr*, int>**)ThisPtr)[6](ThisPtr, MarshalInspectable<object>.GetAbi(__owner), MarshalInspectable<object>.GetAbi(__baseInterface), &__innerInterface, &__retval));
                    global::System.GC.KeepAlive(_obj);
                    innerInterface = __innerInterface;
                    return __retval;
                }
                finally
                {
                    MarshalInspectable<object>.DisposeMarshaler(__owner);
                    MarshalInspectable<object>.DisposeMarshaler(__baseInterface);
                }
            }
        }

        private static volatile IObjectReference ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IListViewAutomationPeerFactory;
        private static IObjectReference _objRef_global__Microsoft_UI_Xaml_Automation_Peers_IListViewAutomationPeerFactory
        {
            get
            { 
                var factory = ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IListViewAutomationPeerFactory;
                if (factory != null && factory.IsInCurrentContext)
                {
                    return factory;
                }
                else
                {
                    return ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IListViewAutomationPeerFactory = ActivationFactory.Get("Microsoft.UI.Xaml.Automation.Peers.ListViewAutomationPeer", global::ABI.Microsoft.UI.Xaml.Automation.Peers.IListViewAutomationPeerFactoryMethods.IID);
                }
            }
        }

        public ListViewAutomationPeer(global::Microsoft.UI.Xaml.Controls.ListView owner):base(global::WinRT.DerivedComposed.Instance)
        {
            bool isAggregation = this.GetType() != typeof(ListViewAutomationPeer);
            object baseInspectable = isAggregation ? this : null;
            IntPtr composed = _IListViewAutomationPeerFactoryMethods.CreateInstanceWithOwner(_objRef_global__Microsoft_UI_Xaml_Automation_Peers_IListViewAutomationPeerFactory, owner, baseInspectable, out IntPtr inner);
            try
            {
                ComWrappersHelper.Init(isAggregation, this, composed, inner, global::ABI.Microsoft.UI.Xaml.Automation.Peers.IListViewAutomationPeerMethods.IID, out _inner);

            }
            finally
            {
                Marshal.Release(inner);   
            }
        }

        public static new ListViewAutomationPeer FromAbi(IntPtr thisPtr)
        {
            if (thisPtr == IntPtr.Zero) return null;
            return MarshalInspectable<ListViewAutomationPeer>.FromAbi(thisPtr);
        }

        protected internal ListViewAutomationPeer(IObjectReference objRef)
            : base(global::WinRT.DerivedComposed.Instance)

        {
            _inner = objRef.As(global::ABI.Microsoft.UI.Xaml.Automation.Peers.IListViewAutomationPeerMethods.IID);

        }


        public static bool operator ==(ListViewAutomationPeer x, ListViewAutomationPeer y) => (x?.ThisPtr ?? IntPtr.Zero) == (y?.ThisPtr ?? IntPtr.Zero);
        public static bool operator !=(ListViewAutomationPeer x, ListViewAutomationPeer y) => !(x == y);
        public bool Equals(ListViewAutomationPeer other) => this == other;
        public override bool Equals(object obj) => obj is ListViewAutomationPeer that && this == that;
        public override int GetHashCode() => ThisPtr.GetHashCode();


        protected ListViewAutomationPeer(global::WinRT.DerivedComposed _):base(_)
        {

        }
        bool IWinRTObject.HasUnwrappableNativeObject => this.GetType() == typeof(ListViewAutomationPeer);
        IObjectReference IWinRTObject.NativeObject => _inner;

        private struct InterfaceTag<I>{};


        protected override bool IsOverridableInterface(Guid iid) => base.IsOverridableInterface(iid);

        global::System.Runtime.InteropServices.CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(ref Guid iid, out IntPtr ppv)
        {
            ppv = IntPtr.Zero;
            if (IsOverridableInterface(iid) || global::WinRT.Interop.IID.IID_IInspectable == iid)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
            }

            if (((IWinRTObject)this).NativeObject.TryAs(iid, out ppv) >= 0)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.Handled;
            }

            return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
        }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")]
    [global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Automation.Peers.ListViewBaseAutomationPeer))]
    [global::ABI.Microsoft.UI.Xaml.Automation.Peers.ListViewBaseAutomationPeerRcwFactory]
    [global::WinRT.ProjectedRuntimeClass(typeof(IListViewBaseAutomationPeer))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    public class ListViewBaseAutomationPeer : SelectorAutomationPeer, global::Microsoft.UI.Xaml.Automation.Provider.IDropTargetProvider, global::System.Runtime.InteropServices.ICustomQueryInterface, IWinRTObject, IEquatable<ListViewBaseAutomationPeer>
    {
        private IntPtr ThisPtr => _inner == null ? (((IWinRTObject)this).NativeObject).ThisPtr : _inner.ThisPtr;

        private readonly IObjectReference _inner = null;




        private volatile IObjectReference ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IListViewBaseAutomationPeer;
        private IObjectReference Make___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IListViewBaseAutomationPeer()
        {
            global::System.Threading.Interlocked.CompareExchange(ref ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IListViewBaseAutomationPeer, ((IWinRTObject)this).NativeObject.As<IUnknownVftbl>(global::ABI.Microsoft.UI.Xaml.Automation.Peers.IListViewBaseAutomationPeerMethods.IID), null);
            return ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IListViewBaseAutomationPeer;
        }
        private IObjectReference _objRef_global__Microsoft_UI_Xaml_Automation_Peers_IListViewBaseAutomationPeer => ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IListViewBaseAutomationPeer ?? Make___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IListViewBaseAutomationPeer();

        private volatile IObjectReference ___objRef_global__Microsoft_UI_Xaml_Automation_Provider_IDropTargetProvider;
        private IObjectReference Make___objRef_global__Microsoft_UI_Xaml_Automation_Provider_IDropTargetProvider()
        {
            global::System.Threading.Interlocked.CompareExchange(ref ___objRef_global__Microsoft_UI_Xaml_Automation_Provider_IDropTargetProvider, ((IWinRTObject)this).NativeObject.As<IUnknownVftbl>(global::ABI.Microsoft.UI.Xaml.Automation.Provider.IDropTargetProviderMethods.IID), null);
            return ___objRef_global__Microsoft_UI_Xaml_Automation_Provider_IDropTargetProvider;
        }
        private IObjectReference _objRef_global__Microsoft_UI_Xaml_Automation_Provider_IDropTargetProvider => ___objRef_global__Microsoft_UI_Xaml_Automation_Provider_IDropTargetProvider ?? Make___objRef_global__Microsoft_UI_Xaml_Automation_Provider_IDropTargetProvider();



        private static class _IListViewBaseAutomationPeerFactoryMethods
        {
            public static unsafe IntPtr CreateInstanceWithOwner(IObjectReference _obj, global::Microsoft.UI.Xaml.Controls.ListViewBase owner, object baseInterface, out IntPtr innerInterface)
            {
                var ThisPtr = _obj.ThisPtr;

                ObjectReferenceValue __owner = default;
                ObjectReferenceValue __baseInterface = default;
                IntPtr __innerInterface = default;
                IntPtr __retval = default;
                try
                {
                    __owner = global::ABI.Microsoft.UI.Xaml.Controls.ListViewBase.CreateMarshaler2(owner);
                    __baseInterface = MarshalInspectable<object>.CreateMarshaler2(baseInterface);
                    global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, IntPtr, IntPtr*, IntPtr*, int>**)ThisPtr)[6](ThisPtr, MarshalInspectable<object>.GetAbi(__owner), MarshalInspectable<object>.GetAbi(__baseInterface), &__innerInterface, &__retval));
                    global::System.GC.KeepAlive(_obj);
                    innerInterface = __innerInterface;
                    return __retval;
                }
                finally
                {
                    MarshalInspectable<object>.DisposeMarshaler(__owner);
                    MarshalInspectable<object>.DisposeMarshaler(__baseInterface);
                }
            }
        }

        private static volatile IObjectReference ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IListViewBaseAutomationPeerFactory;
        private static IObjectReference _objRef_global__Microsoft_UI_Xaml_Automation_Peers_IListViewBaseAutomationPeerFactory
        {
            get
            { 
                var factory = ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IListViewBaseAutomationPeerFactory;
                if (factory != null && factory.IsInCurrentContext)
                {
                    return factory;
                }
                else
                {
                    return ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IListViewBaseAutomationPeerFactory = ActivationFactory.Get("Microsoft.UI.Xaml.Automation.Peers.ListViewBaseAutomationPeer", global::ABI.Microsoft.UI.Xaml.Automation.Peers.IListViewBaseAutomationPeerFactoryMethods.IID);
                }
            }
        }

        public ListViewBaseAutomationPeer(global::Microsoft.UI.Xaml.Controls.ListViewBase owner):base(global::WinRT.DerivedComposed.Instance)
        {
            bool isAggregation = this.GetType() != typeof(ListViewBaseAutomationPeer);
            object baseInspectable = isAggregation ? this : null;
            IntPtr composed = _IListViewBaseAutomationPeerFactoryMethods.CreateInstanceWithOwner(_objRef_global__Microsoft_UI_Xaml_Automation_Peers_IListViewBaseAutomationPeerFactory, owner, baseInspectable, out IntPtr inner);
            try
            {
                ComWrappersHelper.Init(isAggregation, this, composed, inner, global::ABI.Microsoft.UI.Xaml.Automation.Peers.IListViewBaseAutomationPeerMethods.IID, out _inner);

            }
            finally
            {
                Marshal.Release(inner);   
            }
        }

        public static new ListViewBaseAutomationPeer FromAbi(IntPtr thisPtr)
        {
            if (thisPtr == IntPtr.Zero) return null;
            return MarshalInspectable<ListViewBaseAutomationPeer>.FromAbi(thisPtr);
        }

        protected internal ListViewBaseAutomationPeer(IObjectReference objRef)
            : base(global::WinRT.DerivedComposed.Instance)

        {
            _inner = objRef.As(global::ABI.Microsoft.UI.Xaml.Automation.Peers.IListViewBaseAutomationPeerMethods.IID);

        }


        public static bool operator ==(ListViewBaseAutomationPeer x, ListViewBaseAutomationPeer y) => (x?.ThisPtr ?? IntPtr.Zero) == (y?.ThisPtr ?? IntPtr.Zero);
        public static bool operator !=(ListViewBaseAutomationPeer x, ListViewBaseAutomationPeer y) => !(x == y);
        public bool Equals(ListViewBaseAutomationPeer other) => this == other;
        public override bool Equals(object obj) => obj is ListViewBaseAutomationPeer that && this == that;
        public override int GetHashCode() => ThisPtr.GetHashCode();


        protected ListViewBaseAutomationPeer(global::WinRT.DerivedComposed _):base(_)
        {

        }
        bool IWinRTObject.HasUnwrappableNativeObject => this.GetType() == typeof(ListViewBaseAutomationPeer);
        IObjectReference IWinRTObject.NativeObject => _inner;

        private struct InterfaceTag<I>{};


        public string DropEffect => global::ABI.Microsoft.UI.Xaml.Automation.Provider.IDropTargetProviderMethods.get_DropEffect(_objRef_global__Microsoft_UI_Xaml_Automation_Provider_IDropTargetProvider);

        public string[] DropEffects => global::ABI.Microsoft.UI.Xaml.Automation.Provider.IDropTargetProviderMethods.get_DropEffects(_objRef_global__Microsoft_UI_Xaml_Automation_Provider_IDropTargetProvider);

        protected override bool IsOverridableInterface(Guid iid) => base.IsOverridableInterface(iid);

        global::System.Runtime.InteropServices.CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(ref Guid iid, out IntPtr ppv)
        {
            ppv = IntPtr.Zero;
            if (IsOverridableInterface(iid) || global::WinRT.Interop.IID.IID_IInspectable == iid)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
            }

            if (((IWinRTObject)this).NativeObject.TryAs(iid, out ppv) >= 0)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.Handled;
            }

            return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
        }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")]
    [global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Automation.Peers.ListViewBaseHeaderItemAutomationPeer))]
    [global::ABI.Microsoft.UI.Xaml.Automation.Peers.ListViewBaseHeaderItemAutomationPeerRcwFactory]
    [global::WinRT.ProjectedRuntimeClass(typeof(IListViewBaseHeaderItemAutomationPeer))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    public class ListViewBaseHeaderItemAutomationPeer : FrameworkElementAutomationPeer, global::System.Runtime.InteropServices.ICustomQueryInterface, IWinRTObject, IEquatable<ListViewBaseHeaderItemAutomationPeer>
    {
        private IntPtr ThisPtr => _inner == null ? (((IWinRTObject)this).NativeObject).ThisPtr : _inner.ThisPtr;

        private readonly IObjectReference _inner = null;




        private volatile IObjectReference ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IListViewBaseHeaderItemAutomationPeer;
        private IObjectReference Make___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IListViewBaseHeaderItemAutomationPeer()
        {
            global::System.Threading.Interlocked.CompareExchange(ref ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IListViewBaseHeaderItemAutomationPeer, ((IWinRTObject)this).NativeObject.As<IUnknownVftbl>(global::ABI.Microsoft.UI.Xaml.Automation.Peers.IListViewBaseHeaderItemAutomationPeerMethods.IID), null);
            return ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IListViewBaseHeaderItemAutomationPeer;
        }
        private IObjectReference _objRef_global__Microsoft_UI_Xaml_Automation_Peers_IListViewBaseHeaderItemAutomationPeer => ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IListViewBaseHeaderItemAutomationPeer ?? Make___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IListViewBaseHeaderItemAutomationPeer();



        private static class _IListViewBaseHeaderItemAutomationPeerFactoryMethods
        {
            public static unsafe IntPtr CreateInstanceWithOwner(IObjectReference _obj, global::Microsoft.UI.Xaml.Controls.ListViewBaseHeaderItem owner, object baseInterface, out IntPtr innerInterface)
            {
                var ThisPtr = _obj.ThisPtr;

                ObjectReferenceValue __owner = default;
                ObjectReferenceValue __baseInterface = default;
                IntPtr __innerInterface = default;
                IntPtr __retval = default;
                try
                {
                    __owner = global::ABI.Microsoft.UI.Xaml.Controls.ListViewBaseHeaderItem.CreateMarshaler2(owner);
                    __baseInterface = MarshalInspectable<object>.CreateMarshaler2(baseInterface);
                    global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, IntPtr, IntPtr*, IntPtr*, int>**)ThisPtr)[6](ThisPtr, MarshalInspectable<object>.GetAbi(__owner), MarshalInspectable<object>.GetAbi(__baseInterface), &__innerInterface, &__retval));
                    global::System.GC.KeepAlive(_obj);
                    innerInterface = __innerInterface;
                    return __retval;
                }
                finally
                {
                    MarshalInspectable<object>.DisposeMarshaler(__owner);
                    MarshalInspectable<object>.DisposeMarshaler(__baseInterface);
                }
            }
        }

        private static volatile IObjectReference ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IListViewBaseHeaderItemAutomationPeerFactory;
        private static IObjectReference _objRef_global__Microsoft_UI_Xaml_Automation_Peers_IListViewBaseHeaderItemAutomationPeerFactory
        {
            get
            { 
                var factory = ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IListViewBaseHeaderItemAutomationPeerFactory;
                if (factory != null && factory.IsInCurrentContext)
                {
                    return factory;
                }
                else
                {
                    return ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IListViewBaseHeaderItemAutomationPeerFactory = ActivationFactory.Get("Microsoft.UI.Xaml.Automation.Peers.ListViewBaseHeaderItemAutomationPeer", global::ABI.Microsoft.UI.Xaml.Automation.Peers.IListViewBaseHeaderItemAutomationPeerFactoryMethods.IID);
                }
            }
        }

        protected ListViewBaseHeaderItemAutomationPeer(global::Microsoft.UI.Xaml.Controls.ListViewBaseHeaderItem owner):base(global::WinRT.DerivedComposed.Instance)
        {
            bool isAggregation = this.GetType() != typeof(ListViewBaseHeaderItemAutomationPeer);
            object baseInspectable = isAggregation ? this : null;
            IntPtr composed = _IListViewBaseHeaderItemAutomationPeerFactoryMethods.CreateInstanceWithOwner(_objRef_global__Microsoft_UI_Xaml_Automation_Peers_IListViewBaseHeaderItemAutomationPeerFactory, owner, baseInspectable, out IntPtr inner);
            try
            {
                ComWrappersHelper.Init(isAggregation, this, composed, inner, global::ABI.Microsoft.UI.Xaml.Automation.Peers.IListViewBaseHeaderItemAutomationPeerMethods.IID, out _inner);

            }
            finally
            {
                Marshal.Release(inner);   
            }
        }

        public static new ListViewBaseHeaderItemAutomationPeer FromAbi(IntPtr thisPtr)
        {
            if (thisPtr == IntPtr.Zero) return null;
            return MarshalInspectable<ListViewBaseHeaderItemAutomationPeer>.FromAbi(thisPtr);
        }

        protected internal ListViewBaseHeaderItemAutomationPeer(IObjectReference objRef)
            : base(global::WinRT.DerivedComposed.Instance)

        {
            _inner = objRef.As(global::ABI.Microsoft.UI.Xaml.Automation.Peers.IListViewBaseHeaderItemAutomationPeerMethods.IID);

        }


        public static bool operator ==(ListViewBaseHeaderItemAutomationPeer x, ListViewBaseHeaderItemAutomationPeer y) => (x?.ThisPtr ?? IntPtr.Zero) == (y?.ThisPtr ?? IntPtr.Zero);
        public static bool operator !=(ListViewBaseHeaderItemAutomationPeer x, ListViewBaseHeaderItemAutomationPeer y) => !(x == y);
        public bool Equals(ListViewBaseHeaderItemAutomationPeer other) => this == other;
        public override bool Equals(object obj) => obj is ListViewBaseHeaderItemAutomationPeer that && this == that;
        public override int GetHashCode() => ThisPtr.GetHashCode();


        protected ListViewBaseHeaderItemAutomationPeer(global::WinRT.DerivedComposed _):base(_)
        {

        }
        bool IWinRTObject.HasUnwrappableNativeObject => this.GetType() == typeof(ListViewBaseHeaderItemAutomationPeer);
        IObjectReference IWinRTObject.NativeObject => _inner;

        private struct InterfaceTag<I>{};


        protected override bool IsOverridableInterface(Guid iid) => base.IsOverridableInterface(iid);

        global::System.Runtime.InteropServices.CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(ref Guid iid, out IntPtr ppv)
        {
            ppv = IntPtr.Zero;
            if (IsOverridableInterface(iid) || global::WinRT.Interop.IID.IID_IInspectable == iid)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
            }

            if (((IWinRTObject)this).NativeObject.TryAs(iid, out ppv) >= 0)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.Handled;
            }

            return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
        }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")]
    [global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Automation.Peers.ListViewHeaderItemAutomationPeer))]
    [global::ABI.Microsoft.UI.Xaml.Automation.Peers.ListViewHeaderItemAutomationPeerRcwFactory]
    [global::WinRT.ProjectedRuntimeClass(typeof(IListViewHeaderItemAutomationPeer))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    public class ListViewHeaderItemAutomationPeer : ListViewBaseHeaderItemAutomationPeer, global::System.Runtime.InteropServices.ICustomQueryInterface, IWinRTObject, IEquatable<ListViewHeaderItemAutomationPeer>
    {
        private IntPtr ThisPtr => _inner == null ? (((IWinRTObject)this).NativeObject).ThisPtr : _inner.ThisPtr;

        private readonly IObjectReference _inner = null;




        private volatile IObjectReference ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IListViewHeaderItemAutomationPeer;
        private IObjectReference Make___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IListViewHeaderItemAutomationPeer()
        {
            global::System.Threading.Interlocked.CompareExchange(ref ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IListViewHeaderItemAutomationPeer, ((IWinRTObject)this).NativeObject.As<IUnknownVftbl>(global::ABI.Microsoft.UI.Xaml.Automation.Peers.IListViewHeaderItemAutomationPeerMethods.IID), null);
            return ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IListViewHeaderItemAutomationPeer;
        }
        private IObjectReference _objRef_global__Microsoft_UI_Xaml_Automation_Peers_IListViewHeaderItemAutomationPeer => ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IListViewHeaderItemAutomationPeer ?? Make___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IListViewHeaderItemAutomationPeer();



        private static class _IListViewHeaderItemAutomationPeerFactoryMethods
        {
            public static unsafe IntPtr CreateInstanceWithOwner(IObjectReference _obj, global::Microsoft.UI.Xaml.Controls.ListViewHeaderItem owner, object baseInterface, out IntPtr innerInterface)
            {
                var ThisPtr = _obj.ThisPtr;

                ObjectReferenceValue __owner = default;
                ObjectReferenceValue __baseInterface = default;
                IntPtr __innerInterface = default;
                IntPtr __retval = default;
                try
                {
                    __owner = global::ABI.Microsoft.UI.Xaml.Controls.ListViewHeaderItem.CreateMarshaler2(owner);
                    __baseInterface = MarshalInspectable<object>.CreateMarshaler2(baseInterface);
                    global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, IntPtr, IntPtr*, IntPtr*, int>**)ThisPtr)[6](ThisPtr, MarshalInspectable<object>.GetAbi(__owner), MarshalInspectable<object>.GetAbi(__baseInterface), &__innerInterface, &__retval));
                    global::System.GC.KeepAlive(_obj);
                    innerInterface = __innerInterface;
                    return __retval;
                }
                finally
                {
                    MarshalInspectable<object>.DisposeMarshaler(__owner);
                    MarshalInspectable<object>.DisposeMarshaler(__baseInterface);
                }
            }
        }

        private static volatile IObjectReference ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IListViewHeaderItemAutomationPeerFactory;
        private static IObjectReference _objRef_global__Microsoft_UI_Xaml_Automation_Peers_IListViewHeaderItemAutomationPeerFactory
        {
            get
            { 
                var factory = ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IListViewHeaderItemAutomationPeerFactory;
                if (factory != null && factory.IsInCurrentContext)
                {
                    return factory;
                }
                else
                {
                    return ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IListViewHeaderItemAutomationPeerFactory = ActivationFactory.Get("Microsoft.UI.Xaml.Automation.Peers.ListViewHeaderItemAutomationPeer", global::ABI.Microsoft.UI.Xaml.Automation.Peers.IListViewHeaderItemAutomationPeerFactoryMethods.IID);
                }
            }
        }

        public ListViewHeaderItemAutomationPeer(global::Microsoft.UI.Xaml.Controls.ListViewHeaderItem owner):base(global::WinRT.DerivedComposed.Instance)
        {
            bool isAggregation = this.GetType() != typeof(ListViewHeaderItemAutomationPeer);
            object baseInspectable = isAggregation ? this : null;
            IntPtr composed = _IListViewHeaderItemAutomationPeerFactoryMethods.CreateInstanceWithOwner(_objRef_global__Microsoft_UI_Xaml_Automation_Peers_IListViewHeaderItemAutomationPeerFactory, owner, baseInspectable, out IntPtr inner);
            try
            {
                ComWrappersHelper.Init(isAggregation, this, composed, inner, global::ABI.Microsoft.UI.Xaml.Automation.Peers.IListViewHeaderItemAutomationPeerMethods.IID, out _inner);

            }
            finally
            {
                Marshal.Release(inner);   
            }
        }

        public static new ListViewHeaderItemAutomationPeer FromAbi(IntPtr thisPtr)
        {
            if (thisPtr == IntPtr.Zero) return null;
            return MarshalInspectable<ListViewHeaderItemAutomationPeer>.FromAbi(thisPtr);
        }

        protected internal ListViewHeaderItemAutomationPeer(IObjectReference objRef)
            : base(global::WinRT.DerivedComposed.Instance)

        {
            _inner = objRef.As(global::ABI.Microsoft.UI.Xaml.Automation.Peers.IListViewHeaderItemAutomationPeerMethods.IID);

        }


        public static bool operator ==(ListViewHeaderItemAutomationPeer x, ListViewHeaderItemAutomationPeer y) => (x?.ThisPtr ?? IntPtr.Zero) == (y?.ThisPtr ?? IntPtr.Zero);
        public static bool operator !=(ListViewHeaderItemAutomationPeer x, ListViewHeaderItemAutomationPeer y) => !(x == y);
        public bool Equals(ListViewHeaderItemAutomationPeer other) => this == other;
        public override bool Equals(object obj) => obj is ListViewHeaderItemAutomationPeer that && this == that;
        public override int GetHashCode() => ThisPtr.GetHashCode();


        protected ListViewHeaderItemAutomationPeer(global::WinRT.DerivedComposed _):base(_)
        {

        }
        bool IWinRTObject.HasUnwrappableNativeObject => this.GetType() == typeof(ListViewHeaderItemAutomationPeer);
        IObjectReference IWinRTObject.NativeObject => _inner;

        private struct InterfaceTag<I>{};


        protected override bool IsOverridableInterface(Guid iid) => base.IsOverridableInterface(iid);

        global::System.Runtime.InteropServices.CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(ref Guid iid, out IntPtr ppv)
        {
            ppv = IntPtr.Zero;
            if (IsOverridableInterface(iid) || global::WinRT.Interop.IID.IID_IInspectable == iid)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
            }

            if (((IWinRTObject)this).NativeObject.TryAs(iid, out ppv) >= 0)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.Handled;
            }

            return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
        }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")]
    [global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Automation.Peers.ListViewItemAutomationPeer))]
    [global::ABI.Microsoft.UI.Xaml.Automation.Peers.ListViewItemAutomationPeerRcwFactory]
    [global::WinRT.ProjectedRuntimeClass(typeof(IListViewItemAutomationPeer))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    public class ListViewItemAutomationPeer : FrameworkElementAutomationPeer, global::System.Runtime.InteropServices.ICustomQueryInterface, IWinRTObject, IEquatable<ListViewItemAutomationPeer>
    {
        private IntPtr ThisPtr => _inner == null ? (((IWinRTObject)this).NativeObject).ThisPtr : _inner.ThisPtr;

        private readonly IObjectReference _inner = null;




        private volatile IObjectReference ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IListViewItemAutomationPeer;
        private IObjectReference Make___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IListViewItemAutomationPeer()
        {
            global::System.Threading.Interlocked.CompareExchange(ref ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IListViewItemAutomationPeer, ((IWinRTObject)this).NativeObject.As<IUnknownVftbl>(global::ABI.Microsoft.UI.Xaml.Automation.Peers.IListViewItemAutomationPeerMethods.IID), null);
            return ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IListViewItemAutomationPeer;
        }
        private IObjectReference _objRef_global__Microsoft_UI_Xaml_Automation_Peers_IListViewItemAutomationPeer => ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IListViewItemAutomationPeer ?? Make___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IListViewItemAutomationPeer();



        private static class _IListViewItemAutomationPeerFactoryMethods
        {
            public static unsafe IntPtr CreateInstanceWithOwner(IObjectReference _obj, global::Microsoft.UI.Xaml.Controls.ListViewItem owner, object baseInterface, out IntPtr innerInterface)
            {
                var ThisPtr = _obj.ThisPtr;

                ObjectReferenceValue __owner = default;
                ObjectReferenceValue __baseInterface = default;
                IntPtr __innerInterface = default;
                IntPtr __retval = default;
                try
                {
                    __owner = global::ABI.Microsoft.UI.Xaml.Controls.ListViewItem.CreateMarshaler2(owner);
                    __baseInterface = MarshalInspectable<object>.CreateMarshaler2(baseInterface);
                    global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, IntPtr, IntPtr*, IntPtr*, int>**)ThisPtr)[6](ThisPtr, MarshalInspectable<object>.GetAbi(__owner), MarshalInspectable<object>.GetAbi(__baseInterface), &__innerInterface, &__retval));
                    global::System.GC.KeepAlive(_obj);
                    innerInterface = __innerInterface;
                    return __retval;
                }
                finally
                {
                    MarshalInspectable<object>.DisposeMarshaler(__owner);
                    MarshalInspectable<object>.DisposeMarshaler(__baseInterface);
                }
            }
        }

        private static volatile IObjectReference ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IListViewItemAutomationPeerFactory;
        private static IObjectReference _objRef_global__Microsoft_UI_Xaml_Automation_Peers_IListViewItemAutomationPeerFactory
        {
            get
            { 
                var factory = ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IListViewItemAutomationPeerFactory;
                if (factory != null && factory.IsInCurrentContext)
                {
                    return factory;
                }
                else
                {
                    return ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IListViewItemAutomationPeerFactory = ActivationFactory.Get("Microsoft.UI.Xaml.Automation.Peers.ListViewItemAutomationPeer", global::ABI.Microsoft.UI.Xaml.Automation.Peers.IListViewItemAutomationPeerFactoryMethods.IID);
                }
            }
        }

        public ListViewItemAutomationPeer(global::Microsoft.UI.Xaml.Controls.ListViewItem owner):base(global::WinRT.DerivedComposed.Instance)
        {
            bool isAggregation = this.GetType() != typeof(ListViewItemAutomationPeer);
            object baseInspectable = isAggregation ? this : null;
            IntPtr composed = _IListViewItemAutomationPeerFactoryMethods.CreateInstanceWithOwner(_objRef_global__Microsoft_UI_Xaml_Automation_Peers_IListViewItemAutomationPeerFactory, owner, baseInspectable, out IntPtr inner);
            try
            {
                ComWrappersHelper.Init(isAggregation, this, composed, inner, global::ABI.Microsoft.UI.Xaml.Automation.Peers.IListViewItemAutomationPeerMethods.IID, out _inner);

            }
            finally
            {
                Marshal.Release(inner);   
            }
        }

        public static new ListViewItemAutomationPeer FromAbi(IntPtr thisPtr)
        {
            if (thisPtr == IntPtr.Zero) return null;
            return MarshalInspectable<ListViewItemAutomationPeer>.FromAbi(thisPtr);
        }

        protected internal ListViewItemAutomationPeer(IObjectReference objRef)
            : base(global::WinRT.DerivedComposed.Instance)

        {
            _inner = objRef.As(global::ABI.Microsoft.UI.Xaml.Automation.Peers.IListViewItemAutomationPeerMethods.IID);

        }


        public static bool operator ==(ListViewItemAutomationPeer x, ListViewItemAutomationPeer y) => (x?.ThisPtr ?? IntPtr.Zero) == (y?.ThisPtr ?? IntPtr.Zero);
        public static bool operator !=(ListViewItemAutomationPeer x, ListViewItemAutomationPeer y) => !(x == y);
        public bool Equals(ListViewItemAutomationPeer other) => this == other;
        public override bool Equals(object obj) => obj is ListViewItemAutomationPeer that && this == that;
        public override int GetHashCode() => ThisPtr.GetHashCode();


        protected ListViewItemAutomationPeer(global::WinRT.DerivedComposed _):base(_)
        {

        }
        bool IWinRTObject.HasUnwrappableNativeObject => this.GetType() == typeof(ListViewItemAutomationPeer);
        IObjectReference IWinRTObject.NativeObject => _inner;

        private struct InterfaceTag<I>{};


        protected override bool IsOverridableInterface(Guid iid) => base.IsOverridableInterface(iid);

        global::System.Runtime.InteropServices.CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(ref Guid iid, out IntPtr ppv)
        {
            ppv = IntPtr.Zero;
            if (IsOverridableInterface(iid) || global::WinRT.Interop.IID.IID_IInspectable == iid)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
            }

            if (((IWinRTObject)this).NativeObject.TryAs(iid, out ppv) >= 0)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.Handled;
            }

            return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
        }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")]
    [global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Automation.Peers.ListViewItemDataAutomationPeer))]
    [global::ABI.Microsoft.UI.Xaml.Automation.Peers.ListViewItemDataAutomationPeerRcwFactory]
    [global::WinRT.ProjectedRuntimeClass(typeof(IListViewItemDataAutomationPeer))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    public class ListViewItemDataAutomationPeer : SelectorItemAutomationPeer, global::Microsoft.UI.Xaml.Automation.Provider.IScrollItemProvider, global::System.Runtime.InteropServices.ICustomQueryInterface, IWinRTObject, IEquatable<ListViewItemDataAutomationPeer>
    {
        private IntPtr ThisPtr => _inner == null ? (((IWinRTObject)this).NativeObject).ThisPtr : _inner.ThisPtr;

        private readonly IObjectReference _inner = null;




        private volatile IObjectReference ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IListViewItemDataAutomationPeer;
        private IObjectReference Make___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IListViewItemDataAutomationPeer()
        {
            global::System.Threading.Interlocked.CompareExchange(ref ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IListViewItemDataAutomationPeer, ((IWinRTObject)this).NativeObject.As<IUnknownVftbl>(global::ABI.Microsoft.UI.Xaml.Automation.Peers.IListViewItemDataAutomationPeerMethods.IID), null);
            return ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IListViewItemDataAutomationPeer;
        }
        private IObjectReference _objRef_global__Microsoft_UI_Xaml_Automation_Peers_IListViewItemDataAutomationPeer => ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IListViewItemDataAutomationPeer ?? Make___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IListViewItemDataAutomationPeer();

        private volatile IObjectReference ___objRef_global__Microsoft_UI_Xaml_Automation_Provider_IScrollItemProvider;
        private IObjectReference Make___objRef_global__Microsoft_UI_Xaml_Automation_Provider_IScrollItemProvider()
        {
            global::System.Threading.Interlocked.CompareExchange(ref ___objRef_global__Microsoft_UI_Xaml_Automation_Provider_IScrollItemProvider, ((IWinRTObject)this).NativeObject.As<IUnknownVftbl>(global::ABI.Microsoft.UI.Xaml.Automation.Provider.IScrollItemProviderMethods.IID), null);
            return ___objRef_global__Microsoft_UI_Xaml_Automation_Provider_IScrollItemProvider;
        }
        private IObjectReference _objRef_global__Microsoft_UI_Xaml_Automation_Provider_IScrollItemProvider => ___objRef_global__Microsoft_UI_Xaml_Automation_Provider_IScrollItemProvider ?? Make___objRef_global__Microsoft_UI_Xaml_Automation_Provider_IScrollItemProvider();



        private static class _IListViewItemDataAutomationPeerFactoryMethods
        {
            public static unsafe IntPtr CreateInstanceWithParentAndItem(IObjectReference _obj, object item, ListViewBaseAutomationPeer parent, object baseInterface, out IntPtr innerInterface)
            {
                var ThisPtr = _obj.ThisPtr;

                ObjectReferenceValue __item = default;
                ObjectReferenceValue __parent = default;
                ObjectReferenceValue __baseInterface = default;
                IntPtr __innerInterface = default;
                IntPtr __retval = default;
                try
                {
                    __item = MarshalInspectable<object>.CreateMarshaler2(item);
                    __parent = global::ABI.Microsoft.UI.Xaml.Automation.Peers.ListViewBaseAutomationPeer.CreateMarshaler2(parent);
                    __baseInterface = MarshalInspectable<object>.CreateMarshaler2(baseInterface);
                    global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, IntPtr, IntPtr, IntPtr*, IntPtr*, int>**)ThisPtr)[6](ThisPtr, MarshalInspectable<object>.GetAbi(__item), MarshalInspectable<object>.GetAbi(__parent), MarshalInspectable<object>.GetAbi(__baseInterface), &__innerInterface, &__retval));
                    global::System.GC.KeepAlive(_obj);
                    innerInterface = __innerInterface;
                    return __retval;
                }
                finally
                {
                    MarshalInspectable<object>.DisposeMarshaler(__item);
                    MarshalInspectable<object>.DisposeMarshaler(__parent);
                    MarshalInspectable<object>.DisposeMarshaler(__baseInterface);
                }
            }
        }

        private static volatile IObjectReference ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IListViewItemDataAutomationPeerFactory;
        private static IObjectReference _objRef_global__Microsoft_UI_Xaml_Automation_Peers_IListViewItemDataAutomationPeerFactory
        {
            get
            { 
                var factory = ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IListViewItemDataAutomationPeerFactory;
                if (factory != null && factory.IsInCurrentContext)
                {
                    return factory;
                }
                else
                {
                    return ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IListViewItemDataAutomationPeerFactory = ActivationFactory.Get("Microsoft.UI.Xaml.Automation.Peers.ListViewItemDataAutomationPeer", global::ABI.Microsoft.UI.Xaml.Automation.Peers.IListViewItemDataAutomationPeerFactoryMethods.IID);
                }
            }
        }

        public ListViewItemDataAutomationPeer(object item, ListViewBaseAutomationPeer parent):base(global::WinRT.DerivedComposed.Instance)
        {
            bool isAggregation = this.GetType() != typeof(ListViewItemDataAutomationPeer);
            object baseInspectable = isAggregation ? this : null;
            IntPtr composed = _IListViewItemDataAutomationPeerFactoryMethods.CreateInstanceWithParentAndItem(_objRef_global__Microsoft_UI_Xaml_Automation_Peers_IListViewItemDataAutomationPeerFactory, item, parent, baseInspectable, out IntPtr inner);
            try
            {
                ComWrappersHelper.Init(isAggregation, this, composed, inner, global::ABI.Microsoft.UI.Xaml.Automation.Peers.IListViewItemDataAutomationPeerMethods.IID, out _inner);

            }
            finally
            {
                Marshal.Release(inner);   
            }
        }

        public static new ListViewItemDataAutomationPeer FromAbi(IntPtr thisPtr)
        {
            if (thisPtr == IntPtr.Zero) return null;
            return MarshalInspectable<ListViewItemDataAutomationPeer>.FromAbi(thisPtr);
        }

        protected internal ListViewItemDataAutomationPeer(IObjectReference objRef)
            : base(global::WinRT.DerivedComposed.Instance)

        {
            _inner = objRef.As(global::ABI.Microsoft.UI.Xaml.Automation.Peers.IListViewItemDataAutomationPeerMethods.IID);

        }


        public static bool operator ==(ListViewItemDataAutomationPeer x, ListViewItemDataAutomationPeer y) => (x?.ThisPtr ?? IntPtr.Zero) == (y?.ThisPtr ?? IntPtr.Zero);
        public static bool operator !=(ListViewItemDataAutomationPeer x, ListViewItemDataAutomationPeer y) => !(x == y);
        public bool Equals(ListViewItemDataAutomationPeer other) => this == other;
        public override bool Equals(object obj) => obj is ListViewItemDataAutomationPeer that && this == that;
        public override int GetHashCode() => ThisPtr.GetHashCode();


        protected ListViewItemDataAutomationPeer(global::WinRT.DerivedComposed _):base(_)
        {

        }
        bool IWinRTObject.HasUnwrappableNativeObject => this.GetType() == typeof(ListViewItemDataAutomationPeer);
        IObjectReference IWinRTObject.NativeObject => _inner;

        private struct InterfaceTag<I>{};


        public void ScrollIntoView() => global::ABI.Microsoft.UI.Xaml.Automation.Provider.IScrollItemProviderMethods.ScrollIntoView(_objRef_global__Microsoft_UI_Xaml_Automation_Provider_IScrollItemProvider);

        protected override bool IsOverridableInterface(Guid iid) => base.IsOverridableInterface(iid);

        global::System.Runtime.InteropServices.CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(ref Guid iid, out IntPtr ppv)
        {
            ppv = IntPtr.Zero;
            if (IsOverridableInterface(iid) || global::WinRT.Interop.IID.IID_IInspectable == iid)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
            }

            if (((IWinRTObject)this).NativeObject.TryAs(iid, out ppv) >= 0)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.Handled;
            }

            return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
        }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")]
    [global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Automation.Peers.LoopingSelectorAutomationPeer))]
    [global::ABI.Microsoft.UI.Xaml.Automation.Peers.LoopingSelectorAutomationPeerRcwFactory]
    [global::WinRT.ProjectedRuntimeClass(typeof(ILoopingSelectorAutomationPeer))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    public sealed class LoopingSelectorAutomationPeer : FrameworkElementAutomationPeer, global::Microsoft.UI.Xaml.Automation.Provider.ISelectionProvider, global::Microsoft.UI.Xaml.Automation.Provider.IItemContainerProvider, global::Microsoft.UI.Xaml.Automation.Provider.IScrollProvider, global::System.Runtime.InteropServices.ICustomQueryInterface, IWinRTObject, IEquatable<LoopingSelectorAutomationPeer>
    {
        private IntPtr ThisPtr => _inner == null ? (((IWinRTObject)this).NativeObject).ThisPtr : _inner.ThisPtr;

        private readonly IObjectReference _inner = null;



        private IObjectReference _objRef_global__Microsoft_UI_Xaml_Automation_Peers_ILoopingSelectorAutomationPeer => _inner;
        private volatile IObjectReference ___objRef_global__Microsoft_UI_Xaml_Automation_Provider_ISelectionProvider;
        private IObjectReference Make___objRef_global__Microsoft_UI_Xaml_Automation_Provider_ISelectionProvider()
        {
            global::System.Threading.Interlocked.CompareExchange(ref ___objRef_global__Microsoft_UI_Xaml_Automation_Provider_ISelectionProvider, ((IWinRTObject)this).NativeObject.As<IUnknownVftbl>(global::ABI.Microsoft.UI.Xaml.Automation.Provider.ISelectionProviderMethods.IID), null);
            return ___objRef_global__Microsoft_UI_Xaml_Automation_Provider_ISelectionProvider;
        }
        private IObjectReference _objRef_global__Microsoft_UI_Xaml_Automation_Provider_ISelectionProvider => ___objRef_global__Microsoft_UI_Xaml_Automation_Provider_ISelectionProvider ?? Make___objRef_global__Microsoft_UI_Xaml_Automation_Provider_ISelectionProvider();

        private volatile IObjectReference ___objRef_global__Microsoft_UI_Xaml_Automation_Provider_IItemContainerProvider;
        private IObjectReference Make___objRef_global__Microsoft_UI_Xaml_Automation_Provider_IItemContainerProvider()
        {
            global::System.Threading.Interlocked.CompareExchange(ref ___objRef_global__Microsoft_UI_Xaml_Automation_Provider_IItemContainerProvider, ((IWinRTObject)this).NativeObject.As<IUnknownVftbl>(global::ABI.Microsoft.UI.Xaml.Automation.Provider.IItemContainerProviderMethods.IID), null);
            return ___objRef_global__Microsoft_UI_Xaml_Automation_Provider_IItemContainerProvider;
        }
        private IObjectReference _objRef_global__Microsoft_UI_Xaml_Automation_Provider_IItemContainerProvider => ___objRef_global__Microsoft_UI_Xaml_Automation_Provider_IItemContainerProvider ?? Make___objRef_global__Microsoft_UI_Xaml_Automation_Provider_IItemContainerProvider();

        private volatile IObjectReference ___objRef_global__Microsoft_UI_Xaml_Automation_Provider_IScrollProvider;
        private IObjectReference Make___objRef_global__Microsoft_UI_Xaml_Automation_Provider_IScrollProvider()
        {
            global::System.Threading.Interlocked.CompareExchange(ref ___objRef_global__Microsoft_UI_Xaml_Automation_Provider_IScrollProvider, ((IWinRTObject)this).NativeObject.As<IUnknownVftbl>(global::ABI.Microsoft.UI.Xaml.Automation.Provider.IScrollProviderMethods.IID), null);
            return ___objRef_global__Microsoft_UI_Xaml_Automation_Provider_IScrollProvider;
        }
        private IObjectReference _objRef_global__Microsoft_UI_Xaml_Automation_Provider_IScrollProvider => ___objRef_global__Microsoft_UI_Xaml_Automation_Provider_IScrollProvider ?? Make___objRef_global__Microsoft_UI_Xaml_Automation_Provider_IScrollProvider();



        public static new LoopingSelectorAutomationPeer FromAbi(IntPtr thisPtr)
        {
            if (thisPtr == IntPtr.Zero) return null;
            return MarshalInspectable<LoopingSelectorAutomationPeer>.FromAbi(thisPtr);
        }

        internal LoopingSelectorAutomationPeer(IObjectReference objRef)
            : base(global::WinRT.DerivedComposed.Instance)

        {
            _inner = objRef.As(global::ABI.Microsoft.UI.Xaml.Automation.Peers.ILoopingSelectorAutomationPeerMethods.IID);

        }


        public static bool operator ==(LoopingSelectorAutomationPeer x, LoopingSelectorAutomationPeer y) => (x?.ThisPtr ?? IntPtr.Zero) == (y?.ThisPtr ?? IntPtr.Zero);
        public static bool operator !=(LoopingSelectorAutomationPeer x, LoopingSelectorAutomationPeer y) => !(x == y);
        public bool Equals(LoopingSelectorAutomationPeer other) => this == other;
        public override bool Equals(object obj) => obj is LoopingSelectorAutomationPeer that && this == that;
        public override int GetHashCode() => ThisPtr.GetHashCode();


        bool IWinRTObject.HasUnwrappableNativeObject => true;
        IObjectReference IWinRTObject.NativeObject => _inner;

        private struct InterfaceTag<I>{};


        public global::Microsoft.UI.Xaml.Automation.Provider.IRawElementProviderSimple[] GetSelection() => global::ABI.Microsoft.UI.Xaml.Automation.Provider.ISelectionProviderMethods.GetSelection(_objRef_global__Microsoft_UI_Xaml_Automation_Provider_ISelectionProvider);

        public global::Microsoft.UI.Xaml.Automation.Provider.IRawElementProviderSimple FindItemByProperty(global::Microsoft.UI.Xaml.Automation.Provider.IRawElementProviderSimple startAfter, global::Microsoft.UI.Xaml.Automation.AutomationProperty automationProperty, object value) => global::ABI.Microsoft.UI.Xaml.Automation.Provider.IItemContainerProviderMethods.FindItemByProperty(_objRef_global__Microsoft_UI_Xaml_Automation_Provider_IItemContainerProvider, startAfter, automationProperty, value);

        public void Scroll(global::Microsoft.UI.Xaml.Automation.ScrollAmount horizontalAmount, global::Microsoft.UI.Xaml.Automation.ScrollAmount verticalAmount) => global::ABI.Microsoft.UI.Xaml.Automation.Provider.IScrollProviderMethods.Scroll(_objRef_global__Microsoft_UI_Xaml_Automation_Provider_IScrollProvider, horizontalAmount, verticalAmount);

        public void SetScrollPercent(double horizontalPercent, double verticalPercent) => global::ABI.Microsoft.UI.Xaml.Automation.Provider.IScrollProviderMethods.SetScrollPercent(_objRef_global__Microsoft_UI_Xaml_Automation_Provider_IScrollProvider, horizontalPercent, verticalPercent);

        public bool CanSelectMultiple => global::ABI.Microsoft.UI.Xaml.Automation.Provider.ISelectionProviderMethods.get_CanSelectMultiple(_objRef_global__Microsoft_UI_Xaml_Automation_Provider_ISelectionProvider);

        public double HorizontalScrollPercent => global::ABI.Microsoft.UI.Xaml.Automation.Provider.IScrollProviderMethods.get_HorizontalScrollPercent(_objRef_global__Microsoft_UI_Xaml_Automation_Provider_IScrollProvider);

        public double HorizontalViewSize => global::ABI.Microsoft.UI.Xaml.Automation.Provider.IScrollProviderMethods.get_HorizontalViewSize(_objRef_global__Microsoft_UI_Xaml_Automation_Provider_IScrollProvider);

        public bool HorizontallyScrollable => global::ABI.Microsoft.UI.Xaml.Automation.Provider.IScrollProviderMethods.get_HorizontallyScrollable(_objRef_global__Microsoft_UI_Xaml_Automation_Provider_IScrollProvider);

        public bool IsSelectionRequired => global::ABI.Microsoft.UI.Xaml.Automation.Provider.ISelectionProviderMethods.get_IsSelectionRequired(_objRef_global__Microsoft_UI_Xaml_Automation_Provider_ISelectionProvider);

        public double VerticalScrollPercent => global::ABI.Microsoft.UI.Xaml.Automation.Provider.IScrollProviderMethods.get_VerticalScrollPercent(_objRef_global__Microsoft_UI_Xaml_Automation_Provider_IScrollProvider);

        public double VerticalViewSize => global::ABI.Microsoft.UI.Xaml.Automation.Provider.IScrollProviderMethods.get_VerticalViewSize(_objRef_global__Microsoft_UI_Xaml_Automation_Provider_IScrollProvider);

        public bool VerticallyScrollable => global::ABI.Microsoft.UI.Xaml.Automation.Provider.IScrollProviderMethods.get_VerticallyScrollable(_objRef_global__Microsoft_UI_Xaml_Automation_Provider_IScrollProvider);

        protected override bool IsOverridableInterface(Guid iid) => base.IsOverridableInterface(iid);

        global::System.Runtime.InteropServices.CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(ref Guid iid, out IntPtr ppv)
        {
            ppv = IntPtr.Zero;
            if (IsOverridableInterface(iid) || global::WinRT.Interop.IID.IID_IInspectable == iid)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
            }

            if (((IWinRTObject)this).NativeObject.TryAs(iid, out ppv) >= 0)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.Handled;
            }

            return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
        }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")]
    [global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Automation.Peers.LoopingSelectorItemAutomationPeer))]
    [global::ABI.Microsoft.UI.Xaml.Automation.Peers.LoopingSelectorItemAutomationPeerRcwFactory]
    [global::WinRT.ProjectedRuntimeClass(typeof(ILoopingSelectorItemAutomationPeer))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    public sealed class LoopingSelectorItemAutomationPeer : FrameworkElementAutomationPeer, global::Microsoft.UI.Xaml.Automation.Provider.IScrollItemProvider, global::Microsoft.UI.Xaml.Automation.Provider.ISelectionItemProvider, global::System.Runtime.InteropServices.ICustomQueryInterface, IWinRTObject, IEquatable<LoopingSelectorItemAutomationPeer>
    {
        private IntPtr ThisPtr => _inner == null ? (((IWinRTObject)this).NativeObject).ThisPtr : _inner.ThisPtr;

        private readonly IObjectReference _inner = null;



        private IObjectReference _objRef_global__Microsoft_UI_Xaml_Automation_Peers_ILoopingSelectorItemAutomationPeer => _inner;
        private volatile IObjectReference ___objRef_global__Microsoft_UI_Xaml_Automation_Provider_IScrollItemProvider;
        private IObjectReference Make___objRef_global__Microsoft_UI_Xaml_Automation_Provider_IScrollItemProvider()
        {
            global::System.Threading.Interlocked.CompareExchange(ref ___objRef_global__Microsoft_UI_Xaml_Automation_Provider_IScrollItemProvider, ((IWinRTObject)this).NativeObject.As<IUnknownVftbl>(global::ABI.Microsoft.UI.Xaml.Automation.Provider.IScrollItemProviderMethods.IID), null);
            return ___objRef_global__Microsoft_UI_Xaml_Automation_Provider_IScrollItemProvider;
        }
        private IObjectReference _objRef_global__Microsoft_UI_Xaml_Automation_Provider_IScrollItemProvider => ___objRef_global__Microsoft_UI_Xaml_Automation_Provider_IScrollItemProvider ?? Make___objRef_global__Microsoft_UI_Xaml_Automation_Provider_IScrollItemProvider();

        private volatile IObjectReference ___objRef_global__Microsoft_UI_Xaml_Automation_Provider_ISelectionItemProvider;
        private IObjectReference Make___objRef_global__Microsoft_UI_Xaml_Automation_Provider_ISelectionItemProvider()
        {
            global::System.Threading.Interlocked.CompareExchange(ref ___objRef_global__Microsoft_UI_Xaml_Automation_Provider_ISelectionItemProvider, ((IWinRTObject)this).NativeObject.As<IUnknownVftbl>(global::ABI.Microsoft.UI.Xaml.Automation.Provider.ISelectionItemProviderMethods.IID), null);
            return ___objRef_global__Microsoft_UI_Xaml_Automation_Provider_ISelectionItemProvider;
        }
        private IObjectReference _objRef_global__Microsoft_UI_Xaml_Automation_Provider_ISelectionItemProvider => ___objRef_global__Microsoft_UI_Xaml_Automation_Provider_ISelectionItemProvider ?? Make___objRef_global__Microsoft_UI_Xaml_Automation_Provider_ISelectionItemProvider();



        public static new LoopingSelectorItemAutomationPeer FromAbi(IntPtr thisPtr)
        {
            if (thisPtr == IntPtr.Zero) return null;
            return MarshalInspectable<LoopingSelectorItemAutomationPeer>.FromAbi(thisPtr);
        }

        internal LoopingSelectorItemAutomationPeer(IObjectReference objRef)
            : base(global::WinRT.DerivedComposed.Instance)

        {
            _inner = objRef.As(global::ABI.Microsoft.UI.Xaml.Automation.Peers.ILoopingSelectorItemAutomationPeerMethods.IID);

        }


        public static bool operator ==(LoopingSelectorItemAutomationPeer x, LoopingSelectorItemAutomationPeer y) => (x?.ThisPtr ?? IntPtr.Zero) == (y?.ThisPtr ?? IntPtr.Zero);
        public static bool operator !=(LoopingSelectorItemAutomationPeer x, LoopingSelectorItemAutomationPeer y) => !(x == y);
        public bool Equals(LoopingSelectorItemAutomationPeer other) => this == other;
        public override bool Equals(object obj) => obj is LoopingSelectorItemAutomationPeer that && this == that;
        public override int GetHashCode() => ThisPtr.GetHashCode();


        bool IWinRTObject.HasUnwrappableNativeObject => true;
        IObjectReference IWinRTObject.NativeObject => _inner;

        private struct InterfaceTag<I>{};


        public void ScrollIntoView() => global::ABI.Microsoft.UI.Xaml.Automation.Provider.IScrollItemProviderMethods.ScrollIntoView(_objRef_global__Microsoft_UI_Xaml_Automation_Provider_IScrollItemProvider);

        public void AddToSelection() => global::ABI.Microsoft.UI.Xaml.Automation.Provider.ISelectionItemProviderMethods.AddToSelection(_objRef_global__Microsoft_UI_Xaml_Automation_Provider_ISelectionItemProvider);

        public void RemoveFromSelection() => global::ABI.Microsoft.UI.Xaml.Automation.Provider.ISelectionItemProviderMethods.RemoveFromSelection(_objRef_global__Microsoft_UI_Xaml_Automation_Provider_ISelectionItemProvider);

        public void Select() => global::ABI.Microsoft.UI.Xaml.Automation.Provider.ISelectionItemProviderMethods.Select(_objRef_global__Microsoft_UI_Xaml_Automation_Provider_ISelectionItemProvider);

        public bool IsSelected => global::ABI.Microsoft.UI.Xaml.Automation.Provider.ISelectionItemProviderMethods.get_IsSelected(_objRef_global__Microsoft_UI_Xaml_Automation_Provider_ISelectionItemProvider);

        public global::Microsoft.UI.Xaml.Automation.Provider.IRawElementProviderSimple SelectionContainer => global::ABI.Microsoft.UI.Xaml.Automation.Provider.ISelectionItemProviderMethods.get_SelectionContainer(_objRef_global__Microsoft_UI_Xaml_Automation_Provider_ISelectionItemProvider);

        protected override bool IsOverridableInterface(Guid iid) => base.IsOverridableInterface(iid);

        global::System.Runtime.InteropServices.CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(ref Guid iid, out IntPtr ppv)
        {
            ppv = IntPtr.Zero;
            if (IsOverridableInterface(iid) || global::WinRT.Interop.IID.IID_IInspectable == iid)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
            }

            if (((IWinRTObject)this).NativeObject.TryAs(iid, out ppv) >= 0)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.Handled;
            }

            return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
        }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")]
    [global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Automation.Peers.LoopingSelectorItemDataAutomationPeer))]
    [global::ABI.Microsoft.UI.Xaml.Automation.Peers.LoopingSelectorItemDataAutomationPeerRcwFactory]
    [global::WinRT.ProjectedRuntimeClass(typeof(ILoopingSelectorItemDataAutomationPeer))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    public sealed class LoopingSelectorItemDataAutomationPeer : AutomationPeer, global::Microsoft.UI.Xaml.Automation.Provider.IVirtualizedItemProvider, global::System.Runtime.InteropServices.ICustomQueryInterface, IWinRTObject, IEquatable<LoopingSelectorItemDataAutomationPeer>
    {
        private IntPtr ThisPtr => _inner == null ? (((IWinRTObject)this).NativeObject).ThisPtr : _inner.ThisPtr;

        private readonly IObjectReference _inner = null;



        private IObjectReference _objRef_global__Microsoft_UI_Xaml_Automation_Peers_ILoopingSelectorItemDataAutomationPeer => _inner;
        private volatile IObjectReference ___objRef_global__Microsoft_UI_Xaml_Automation_Provider_IVirtualizedItemProvider;
        private IObjectReference Make___objRef_global__Microsoft_UI_Xaml_Automation_Provider_IVirtualizedItemProvider()
        {
            global::System.Threading.Interlocked.CompareExchange(ref ___objRef_global__Microsoft_UI_Xaml_Automation_Provider_IVirtualizedItemProvider, ((IWinRTObject)this).NativeObject.As<IUnknownVftbl>(global::ABI.Microsoft.UI.Xaml.Automation.Provider.IVirtualizedItemProviderMethods.IID), null);
            return ___objRef_global__Microsoft_UI_Xaml_Automation_Provider_IVirtualizedItemProvider;
        }
        private IObjectReference _objRef_global__Microsoft_UI_Xaml_Automation_Provider_IVirtualizedItemProvider => ___objRef_global__Microsoft_UI_Xaml_Automation_Provider_IVirtualizedItemProvider ?? Make___objRef_global__Microsoft_UI_Xaml_Automation_Provider_IVirtualizedItemProvider();



        public static new LoopingSelectorItemDataAutomationPeer FromAbi(IntPtr thisPtr)
        {
            if (thisPtr == IntPtr.Zero) return null;
            return MarshalInspectable<LoopingSelectorItemDataAutomationPeer>.FromAbi(thisPtr);
        }

        internal LoopingSelectorItemDataAutomationPeer(IObjectReference objRef)
            : base(global::WinRT.DerivedComposed.Instance)

        {
            _inner = objRef.As(global::ABI.Microsoft.UI.Xaml.Automation.Peers.ILoopingSelectorItemDataAutomationPeerMethods.IID);

        }


        public static bool operator ==(LoopingSelectorItemDataAutomationPeer x, LoopingSelectorItemDataAutomationPeer y) => (x?.ThisPtr ?? IntPtr.Zero) == (y?.ThisPtr ?? IntPtr.Zero);
        public static bool operator !=(LoopingSelectorItemDataAutomationPeer x, LoopingSelectorItemDataAutomationPeer y) => !(x == y);
        public bool Equals(LoopingSelectorItemDataAutomationPeer other) => this == other;
        public override bool Equals(object obj) => obj is LoopingSelectorItemDataAutomationPeer that && this == that;
        public override int GetHashCode() => ThisPtr.GetHashCode();


        bool IWinRTObject.HasUnwrappableNativeObject => true;
        IObjectReference IWinRTObject.NativeObject => _inner;

        private struct InterfaceTag<I>{};


        public void Realize() => global::ABI.Microsoft.UI.Xaml.Automation.Provider.IVirtualizedItemProviderMethods.Realize(_objRef_global__Microsoft_UI_Xaml_Automation_Provider_IVirtualizedItemProvider);

        protected override bool IsOverridableInterface(Guid iid) => base.IsOverridableInterface(iid);

        global::System.Runtime.InteropServices.CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(ref Guid iid, out IntPtr ppv)
        {
            ppv = IntPtr.Zero;
            if (IsOverridableInterface(iid) || global::WinRT.Interop.IID.IID_IInspectable == iid)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
            }

            if (((IWinRTObject)this).NativeObject.TryAs(iid, out ppv) >= 0)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.Handled;
            }

            return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
        }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")]
    [global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Automation.Peers.MediaPlayerElementAutomationPeer))]
    [global::ABI.Microsoft.UI.Xaml.Automation.Peers.MediaPlayerElementAutomationPeerRcwFactory]
    [global::WinRT.ProjectedRuntimeClass(typeof(IMediaPlayerElementAutomationPeer))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 196608u)]
    public class MediaPlayerElementAutomationPeer : FrameworkElementAutomationPeer, global::System.Runtime.InteropServices.ICustomQueryInterface, IWinRTObject, IEquatable<MediaPlayerElementAutomationPeer>
    {
        private IntPtr ThisPtr => _inner == null ? (((IWinRTObject)this).NativeObject).ThisPtr : _inner.ThisPtr;

        private readonly IObjectReference _inner = null;




        private volatile IObjectReference ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IMediaPlayerElementAutomationPeer;
        private IObjectReference Make___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IMediaPlayerElementAutomationPeer()
        {
            global::System.Threading.Interlocked.CompareExchange(ref ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IMediaPlayerElementAutomationPeer, ((IWinRTObject)this).NativeObject.As<IUnknownVftbl>(global::ABI.Microsoft.UI.Xaml.Automation.Peers.IMediaPlayerElementAutomationPeerMethods.IID), null);
            return ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IMediaPlayerElementAutomationPeer;
        }
        private IObjectReference _objRef_global__Microsoft_UI_Xaml_Automation_Peers_IMediaPlayerElementAutomationPeer => ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IMediaPlayerElementAutomationPeer ?? Make___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IMediaPlayerElementAutomationPeer();



        private static class _IMediaPlayerElementAutomationPeerFactoryMethods
        {
            public static unsafe IntPtr CreateInstanceWithOwner(IObjectReference _obj, global::Microsoft.UI.Xaml.Controls.MediaPlayerElement owner, object baseInterface, out IntPtr innerInterface)
            {
                var ThisPtr = _obj.ThisPtr;

                ObjectReferenceValue __owner = default;
                ObjectReferenceValue __baseInterface = default;
                IntPtr __innerInterface = default;
                IntPtr __retval = default;
                try
                {
                    __owner = global::ABI.Microsoft.UI.Xaml.Controls.MediaPlayerElement.CreateMarshaler2(owner);
                    __baseInterface = MarshalInspectable<object>.CreateMarshaler2(baseInterface);
                    global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, IntPtr, IntPtr*, IntPtr*, int>**)ThisPtr)[6](ThisPtr, MarshalInspectable<object>.GetAbi(__owner), MarshalInspectable<object>.GetAbi(__baseInterface), &__innerInterface, &__retval));
                    global::System.GC.KeepAlive(_obj);
                    innerInterface = __innerInterface;
                    return __retval;
                }
                finally
                {
                    MarshalInspectable<object>.DisposeMarshaler(__owner);
                    MarshalInspectable<object>.DisposeMarshaler(__baseInterface);
                }
            }
        }

        private static volatile IObjectReference ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IMediaPlayerElementAutomationPeerFactory;
        private static IObjectReference _objRef_global__Microsoft_UI_Xaml_Automation_Peers_IMediaPlayerElementAutomationPeerFactory
        {
            get
            { 
                var factory = ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IMediaPlayerElementAutomationPeerFactory;
                if (factory != null && factory.IsInCurrentContext)
                {
                    return factory;
                }
                else
                {
                    return ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IMediaPlayerElementAutomationPeerFactory = ActivationFactory.Get("Microsoft.UI.Xaml.Automation.Peers.MediaPlayerElementAutomationPeer", global::ABI.Microsoft.UI.Xaml.Automation.Peers.IMediaPlayerElementAutomationPeerFactoryMethods.IID);
                }
            }
        }

        public MediaPlayerElementAutomationPeer(global::Microsoft.UI.Xaml.Controls.MediaPlayerElement owner):base(global::WinRT.DerivedComposed.Instance)
        {
            bool isAggregation = this.GetType() != typeof(MediaPlayerElementAutomationPeer);
            object baseInspectable = isAggregation ? this : null;
            IntPtr composed = _IMediaPlayerElementAutomationPeerFactoryMethods.CreateInstanceWithOwner(_objRef_global__Microsoft_UI_Xaml_Automation_Peers_IMediaPlayerElementAutomationPeerFactory, owner, baseInspectable, out IntPtr inner);
            try
            {
                ComWrappersHelper.Init(isAggregation, this, composed, inner, global::ABI.Microsoft.UI.Xaml.Automation.Peers.IMediaPlayerElementAutomationPeerMethods.IID, out _inner);

            }
            finally
            {
                Marshal.Release(inner);   
            }
        }

        public static new MediaPlayerElementAutomationPeer FromAbi(IntPtr thisPtr)
        {
            if (thisPtr == IntPtr.Zero) return null;
            return MarshalInspectable<MediaPlayerElementAutomationPeer>.FromAbi(thisPtr);
        }

        protected internal MediaPlayerElementAutomationPeer(IObjectReference objRef)
            : base(global::WinRT.DerivedComposed.Instance)

        {
            _inner = objRef.As(global::ABI.Microsoft.UI.Xaml.Automation.Peers.IMediaPlayerElementAutomationPeerMethods.IID);

        }


        public static bool operator ==(MediaPlayerElementAutomationPeer x, MediaPlayerElementAutomationPeer y) => (x?.ThisPtr ?? IntPtr.Zero) == (y?.ThisPtr ?? IntPtr.Zero);
        public static bool operator !=(MediaPlayerElementAutomationPeer x, MediaPlayerElementAutomationPeer y) => !(x == y);
        public bool Equals(MediaPlayerElementAutomationPeer other) => this == other;
        public override bool Equals(object obj) => obj is MediaPlayerElementAutomationPeer that && this == that;
        public override int GetHashCode() => ThisPtr.GetHashCode();


        protected MediaPlayerElementAutomationPeer(global::WinRT.DerivedComposed _):base(_)
        {

        }
        bool IWinRTObject.HasUnwrappableNativeObject => this.GetType() == typeof(MediaPlayerElementAutomationPeer);
        IObjectReference IWinRTObject.NativeObject => _inner;

        private struct InterfaceTag<I>{};


        protected override bool IsOverridableInterface(Guid iid) => base.IsOverridableInterface(iid);

        global::System.Runtime.InteropServices.CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(ref Guid iid, out IntPtr ppv)
        {
            ppv = IntPtr.Zero;
            if (IsOverridableInterface(iid) || global::WinRT.Interop.IID.IID_IInspectable == iid)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
            }

            if (((IWinRTObject)this).NativeObject.TryAs(iid, out ppv) >= 0)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.Handled;
            }

            return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
        }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")]
    [global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Automation.Peers.MediaTransportControlsAutomationPeer))]
    [global::ABI.Microsoft.UI.Xaml.Automation.Peers.MediaTransportControlsAutomationPeerRcwFactory]
    [global::WinRT.ProjectedRuntimeClass(typeof(IMediaTransportControlsAutomationPeer))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 196608u)]
    public class MediaTransportControlsAutomationPeer : FrameworkElementAutomationPeer, global::System.Runtime.InteropServices.ICustomQueryInterface, IWinRTObject, IEquatable<MediaTransportControlsAutomationPeer>
    {
        private IntPtr ThisPtr => _inner == null ? (((IWinRTObject)this).NativeObject).ThisPtr : _inner.ThisPtr;

        private readonly IObjectReference _inner = null;




        private volatile IObjectReference ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IMediaTransportControlsAutomationPeer;
        private IObjectReference Make___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IMediaTransportControlsAutomationPeer()
        {
            global::System.Threading.Interlocked.CompareExchange(ref ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IMediaTransportControlsAutomationPeer, ((IWinRTObject)this).NativeObject.As<IUnknownVftbl>(global::ABI.Microsoft.UI.Xaml.Automation.Peers.IMediaTransportControlsAutomationPeerMethods.IID), null);
            return ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IMediaTransportControlsAutomationPeer;
        }
        private IObjectReference _objRef_global__Microsoft_UI_Xaml_Automation_Peers_IMediaTransportControlsAutomationPeer => ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IMediaTransportControlsAutomationPeer ?? Make___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IMediaTransportControlsAutomationPeer();



        private static class _IMediaTransportControlsAutomationPeerFactoryMethods
        {
            public static unsafe IntPtr CreateInstanceWithOwner(IObjectReference _obj, global::Microsoft.UI.Xaml.Controls.MediaTransportControls owner, object baseInterface, out IntPtr innerInterface)
            {
                var ThisPtr = _obj.ThisPtr;

                ObjectReferenceValue __owner = default;
                ObjectReferenceValue __baseInterface = default;
                IntPtr __innerInterface = default;
                IntPtr __retval = default;
                try
                {
                    __owner = global::ABI.Microsoft.UI.Xaml.Controls.MediaTransportControls.CreateMarshaler2(owner);
                    __baseInterface = MarshalInspectable<object>.CreateMarshaler2(baseInterface);
                    global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, IntPtr, IntPtr*, IntPtr*, int>**)ThisPtr)[6](ThisPtr, MarshalInspectable<object>.GetAbi(__owner), MarshalInspectable<object>.GetAbi(__baseInterface), &__innerInterface, &__retval));
                    global::System.GC.KeepAlive(_obj);
                    innerInterface = __innerInterface;
                    return __retval;
                }
                finally
                {
                    MarshalInspectable<object>.DisposeMarshaler(__owner);
                    MarshalInspectable<object>.DisposeMarshaler(__baseInterface);
                }
            }
        }

        private static volatile IObjectReference ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IMediaTransportControlsAutomationPeerFactory;
        private static IObjectReference _objRef_global__Microsoft_UI_Xaml_Automation_Peers_IMediaTransportControlsAutomationPeerFactory
        {
            get
            { 
                var factory = ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IMediaTransportControlsAutomationPeerFactory;
                if (factory != null && factory.IsInCurrentContext)
                {
                    return factory;
                }
                else
                {
                    return ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IMediaTransportControlsAutomationPeerFactory = ActivationFactory.Get("Microsoft.UI.Xaml.Automation.Peers.MediaTransportControlsAutomationPeer", global::ABI.Microsoft.UI.Xaml.Automation.Peers.IMediaTransportControlsAutomationPeerFactoryMethods.IID);
                }
            }
        }

        public MediaTransportControlsAutomationPeer(global::Microsoft.UI.Xaml.Controls.MediaTransportControls owner):base(global::WinRT.DerivedComposed.Instance)
        {
            bool isAggregation = this.GetType() != typeof(MediaTransportControlsAutomationPeer);
            object baseInspectable = isAggregation ? this : null;
            IntPtr composed = _IMediaTransportControlsAutomationPeerFactoryMethods.CreateInstanceWithOwner(_objRef_global__Microsoft_UI_Xaml_Automation_Peers_IMediaTransportControlsAutomationPeerFactory, owner, baseInspectable, out IntPtr inner);
            try
            {
                ComWrappersHelper.Init(isAggregation, this, composed, inner, global::ABI.Microsoft.UI.Xaml.Automation.Peers.IMediaTransportControlsAutomationPeerMethods.IID, out _inner);

            }
            finally
            {
                Marshal.Release(inner);   
            }
        }

        public static new MediaTransportControlsAutomationPeer FromAbi(IntPtr thisPtr)
        {
            if (thisPtr == IntPtr.Zero) return null;
            return MarshalInspectable<MediaTransportControlsAutomationPeer>.FromAbi(thisPtr);
        }

        protected internal MediaTransportControlsAutomationPeer(IObjectReference objRef)
            : base(global::WinRT.DerivedComposed.Instance)

        {
            _inner = objRef.As(global::ABI.Microsoft.UI.Xaml.Automation.Peers.IMediaTransportControlsAutomationPeerMethods.IID);

        }


        public static bool operator ==(MediaTransportControlsAutomationPeer x, MediaTransportControlsAutomationPeer y) => (x?.ThisPtr ?? IntPtr.Zero) == (y?.ThisPtr ?? IntPtr.Zero);
        public static bool operator !=(MediaTransportControlsAutomationPeer x, MediaTransportControlsAutomationPeer y) => !(x == y);
        public bool Equals(MediaTransportControlsAutomationPeer other) => this == other;
        public override bool Equals(object obj) => obj is MediaTransportControlsAutomationPeer that && this == that;
        public override int GetHashCode() => ThisPtr.GetHashCode();


        protected MediaTransportControlsAutomationPeer(global::WinRT.DerivedComposed _):base(_)
        {

        }
        bool IWinRTObject.HasUnwrappableNativeObject => this.GetType() == typeof(MediaTransportControlsAutomationPeer);
        IObjectReference IWinRTObject.NativeObject => _inner;

        private struct InterfaceTag<I>{};


        protected override bool IsOverridableInterface(Guid iid) => base.IsOverridableInterface(iid);

        global::System.Runtime.InteropServices.CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(ref Guid iid, out IntPtr ppv)
        {
            ppv = IntPtr.Zero;
            if (IsOverridableInterface(iid) || global::WinRT.Interop.IID.IID_IInspectable == iid)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
            }

            if (((IWinRTObject)this).NativeObject.TryAs(iid, out ppv) >= 0)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.Handled;
            }

            return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
        }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")]
    [global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Automation.Peers.MenuBarAutomationPeer))]
    [global::ABI.Microsoft.UI.Xaml.Automation.Peers.MenuBarAutomationPeerRcwFactory]
    [global::WinRT.ProjectedRuntimeClass(typeof(IMenuBarAutomationPeer))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.XamlContract), 65536u)]
    public class MenuBarAutomationPeer : FrameworkElementAutomationPeer, global::System.Runtime.InteropServices.ICustomQueryInterface, IWinRTObject, IEquatable<MenuBarAutomationPeer>
    {
        private IntPtr ThisPtr => _inner == null ? (((IWinRTObject)this).NativeObject).ThisPtr : _inner.ThisPtr;

        private readonly IObjectReference _inner = null;




        private volatile IObjectReference ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IMenuBarAutomationPeer;
        private IObjectReference Make___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IMenuBarAutomationPeer()
        {
            global::System.Threading.Interlocked.CompareExchange(ref ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IMenuBarAutomationPeer, ((IWinRTObject)this).NativeObject.As<IUnknownVftbl>(global::ABI.Microsoft.UI.Xaml.Automation.Peers.IMenuBarAutomationPeerMethods.IID), null);
            return ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IMenuBarAutomationPeer;
        }
        private IObjectReference _objRef_global__Microsoft_UI_Xaml_Automation_Peers_IMenuBarAutomationPeer => ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IMenuBarAutomationPeer ?? Make___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IMenuBarAutomationPeer();



        private static class _IMenuBarAutomationPeerFactoryMethods
        {
            public static unsafe IntPtr CreateInstance(IObjectReference _obj, global::Microsoft.UI.Xaml.Controls.MenuBar owner, object baseInterface, out IntPtr innerInterface)
            {
                var ThisPtr = _obj.ThisPtr;

                ObjectReferenceValue __owner = default;
                ObjectReferenceValue __baseInterface = default;
                IntPtr __innerInterface = default;
                IntPtr __retval = default;
                try
                {
                    __owner = global::ABI.Microsoft.UI.Xaml.Controls.MenuBar.CreateMarshaler2(owner);
                    __baseInterface = MarshalInspectable<object>.CreateMarshaler2(baseInterface);
                    global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, IntPtr, IntPtr*, IntPtr*, int>**)ThisPtr)[6](ThisPtr, MarshalInspectable<object>.GetAbi(__owner), MarshalInspectable<object>.GetAbi(__baseInterface), &__innerInterface, &__retval));
                    global::System.GC.KeepAlive(_obj);
                    innerInterface = __innerInterface;
                    return __retval;
                }
                finally
                {
                    MarshalInspectable<object>.DisposeMarshaler(__owner);
                    MarshalInspectable<object>.DisposeMarshaler(__baseInterface);
                }
            }
        }

        private static volatile IObjectReference ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IMenuBarAutomationPeerFactory;
        private static IObjectReference _objRef_global__Microsoft_UI_Xaml_Automation_Peers_IMenuBarAutomationPeerFactory
        {
            get
            { 
                var factory = ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IMenuBarAutomationPeerFactory;
                if (factory != null && factory.IsInCurrentContext)
                {
                    return factory;
                }
                else
                {
                    return ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IMenuBarAutomationPeerFactory = ActivationFactory.Get("Microsoft.UI.Xaml.Automation.Peers.MenuBarAutomationPeer", global::ABI.Microsoft.UI.Xaml.Automation.Peers.IMenuBarAutomationPeerFactoryMethods.IID);
                }
            }
        }

        public MenuBarAutomationPeer(global::Microsoft.UI.Xaml.Controls.MenuBar owner):base(global::WinRT.DerivedComposed.Instance)
        {
            bool isAggregation = this.GetType() != typeof(MenuBarAutomationPeer);
            object baseInspectable = isAggregation ? this : null;
            IntPtr composed = _IMenuBarAutomationPeerFactoryMethods.CreateInstance(_objRef_global__Microsoft_UI_Xaml_Automation_Peers_IMenuBarAutomationPeerFactory, owner, baseInspectable, out IntPtr inner);
            try
            {
                ComWrappersHelper.Init(isAggregation, this, composed, inner, global::ABI.Microsoft.UI.Xaml.Automation.Peers.IMenuBarAutomationPeerMethods.IID, out _inner);

            }
            finally
            {
                Marshal.Release(inner);   
            }
        }

        public static new MenuBarAutomationPeer FromAbi(IntPtr thisPtr)
        {
            if (thisPtr == IntPtr.Zero) return null;
            return MarshalInspectable<MenuBarAutomationPeer>.FromAbi(thisPtr);
        }

        protected internal MenuBarAutomationPeer(IObjectReference objRef)
            : base(global::WinRT.DerivedComposed.Instance)

        {
            _inner = objRef.As(global::ABI.Microsoft.UI.Xaml.Automation.Peers.IMenuBarAutomationPeerMethods.IID);

        }


        public static bool operator ==(MenuBarAutomationPeer x, MenuBarAutomationPeer y) => (x?.ThisPtr ?? IntPtr.Zero) == (y?.ThisPtr ?? IntPtr.Zero);
        public static bool operator !=(MenuBarAutomationPeer x, MenuBarAutomationPeer y) => !(x == y);
        public bool Equals(MenuBarAutomationPeer other) => this == other;
        public override bool Equals(object obj) => obj is MenuBarAutomationPeer that && this == that;
        public override int GetHashCode() => ThisPtr.GetHashCode();


        protected MenuBarAutomationPeer(global::WinRT.DerivedComposed _):base(_)
        {

        }
        bool IWinRTObject.HasUnwrappableNativeObject => this.GetType() == typeof(MenuBarAutomationPeer);
        IObjectReference IWinRTObject.NativeObject => _inner;

        private struct InterfaceTag<I>{};


        protected override bool IsOverridableInterface(Guid iid) => base.IsOverridableInterface(iid);

        global::System.Runtime.InteropServices.CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(ref Guid iid, out IntPtr ppv)
        {
            ppv = IntPtr.Zero;
            if (IsOverridableInterface(iid) || global::WinRT.Interop.IID.IID_IInspectable == iid)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
            }

            if (((IWinRTObject)this).NativeObject.TryAs(iid, out ppv) >= 0)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.Handled;
            }

            return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
        }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")]
    [global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Automation.Peers.MenuBarItemAutomationPeer))]
    [global::ABI.Microsoft.UI.Xaml.Automation.Peers.MenuBarItemAutomationPeerRcwFactory]
    [global::WinRT.ProjectedRuntimeClass(typeof(IMenuBarItemAutomationPeer))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.XamlContract), 65536u)]
    public class MenuBarItemAutomationPeer : FrameworkElementAutomationPeer, global::Microsoft.UI.Xaml.Automation.Provider.IExpandCollapseProvider, global::Microsoft.UI.Xaml.Automation.Provider.IInvokeProvider, global::System.Runtime.InteropServices.ICustomQueryInterface, IWinRTObject, IEquatable<MenuBarItemAutomationPeer>
    {
        private IntPtr ThisPtr => _inner == null ? (((IWinRTObject)this).NativeObject).ThisPtr : _inner.ThisPtr;

        private readonly IObjectReference _inner = null;




        private volatile IObjectReference ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IMenuBarItemAutomationPeer;
        private IObjectReference Make___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IMenuBarItemAutomationPeer()
        {
            global::System.Threading.Interlocked.CompareExchange(ref ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IMenuBarItemAutomationPeer, ((IWinRTObject)this).NativeObject.As<IUnknownVftbl>(global::ABI.Microsoft.UI.Xaml.Automation.Peers.IMenuBarItemAutomationPeerMethods.IID), null);
            return ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IMenuBarItemAutomationPeer;
        }
        private IObjectReference _objRef_global__Microsoft_UI_Xaml_Automation_Peers_IMenuBarItemAutomationPeer => ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IMenuBarItemAutomationPeer ?? Make___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IMenuBarItemAutomationPeer();

        private volatile IObjectReference ___objRef_global__Microsoft_UI_Xaml_Automation_Provider_IExpandCollapseProvider;
        private IObjectReference Make___objRef_global__Microsoft_UI_Xaml_Automation_Provider_IExpandCollapseProvider()
        {
            global::System.Threading.Interlocked.CompareExchange(ref ___objRef_global__Microsoft_UI_Xaml_Automation_Provider_IExpandCollapseProvider, ((IWinRTObject)this).NativeObject.As<IUnknownVftbl>(global::ABI.Microsoft.UI.Xaml.Automation.Provider.IExpandCollapseProviderMethods.IID), null);
            return ___objRef_global__Microsoft_UI_Xaml_Automation_Provider_IExpandCollapseProvider;
        }
        private IObjectReference _objRef_global__Microsoft_UI_Xaml_Automation_Provider_IExpandCollapseProvider => ___objRef_global__Microsoft_UI_Xaml_Automation_Provider_IExpandCollapseProvider ?? Make___objRef_global__Microsoft_UI_Xaml_Automation_Provider_IExpandCollapseProvider();

        private volatile IObjectReference ___objRef_global__Microsoft_UI_Xaml_Automation_Provider_IInvokeProvider;
        private IObjectReference Make___objRef_global__Microsoft_UI_Xaml_Automation_Provider_IInvokeProvider()
        {
            global::System.Threading.Interlocked.CompareExchange(ref ___objRef_global__Microsoft_UI_Xaml_Automation_Provider_IInvokeProvider, ((IWinRTObject)this).NativeObject.As<IUnknownVftbl>(global::ABI.Microsoft.UI.Xaml.Automation.Provider.IInvokeProviderMethods.IID), null);
            return ___objRef_global__Microsoft_UI_Xaml_Automation_Provider_IInvokeProvider;
        }
        private IObjectReference _objRef_global__Microsoft_UI_Xaml_Automation_Provider_IInvokeProvider => ___objRef_global__Microsoft_UI_Xaml_Automation_Provider_IInvokeProvider ?? Make___objRef_global__Microsoft_UI_Xaml_Automation_Provider_IInvokeProvider();



        private static class _IMenuBarItemAutomationPeerFactoryMethods
        {
            public static unsafe IntPtr CreateInstance(IObjectReference _obj, global::Microsoft.UI.Xaml.Controls.MenuBarItem owner, object baseInterface, out IntPtr innerInterface)
            {
                var ThisPtr = _obj.ThisPtr;

                ObjectReferenceValue __owner = default;
                ObjectReferenceValue __baseInterface = default;
                IntPtr __innerInterface = default;
                IntPtr __retval = default;
                try
                {
                    __owner = global::ABI.Microsoft.UI.Xaml.Controls.MenuBarItem.CreateMarshaler2(owner);
                    __baseInterface = MarshalInspectable<object>.CreateMarshaler2(baseInterface);
                    global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, IntPtr, IntPtr*, IntPtr*, int>**)ThisPtr)[6](ThisPtr, MarshalInspectable<object>.GetAbi(__owner), MarshalInspectable<object>.GetAbi(__baseInterface), &__innerInterface, &__retval));
                    global::System.GC.KeepAlive(_obj);
                    innerInterface = __innerInterface;
                    return __retval;
                }
                finally
                {
                    MarshalInspectable<object>.DisposeMarshaler(__owner);
                    MarshalInspectable<object>.DisposeMarshaler(__baseInterface);
                }
            }
        }

        private static volatile IObjectReference ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IMenuBarItemAutomationPeerFactory;
        private static IObjectReference _objRef_global__Microsoft_UI_Xaml_Automation_Peers_IMenuBarItemAutomationPeerFactory
        {
            get
            { 
                var factory = ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IMenuBarItemAutomationPeerFactory;
                if (factory != null && factory.IsInCurrentContext)
                {
                    return factory;
                }
                else
                {
                    return ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IMenuBarItemAutomationPeerFactory = ActivationFactory.Get("Microsoft.UI.Xaml.Automation.Peers.MenuBarItemAutomationPeer", global::ABI.Microsoft.UI.Xaml.Automation.Peers.IMenuBarItemAutomationPeerFactoryMethods.IID);
                }
            }
        }

        public MenuBarItemAutomationPeer(global::Microsoft.UI.Xaml.Controls.MenuBarItem owner):base(global::WinRT.DerivedComposed.Instance)
        {
            bool isAggregation = this.GetType() != typeof(MenuBarItemAutomationPeer);
            object baseInspectable = isAggregation ? this : null;
            IntPtr composed = _IMenuBarItemAutomationPeerFactoryMethods.CreateInstance(_objRef_global__Microsoft_UI_Xaml_Automation_Peers_IMenuBarItemAutomationPeerFactory, owner, baseInspectable, out IntPtr inner);
            try
            {
                ComWrappersHelper.Init(isAggregation, this, composed, inner, global::ABI.Microsoft.UI.Xaml.Automation.Peers.IMenuBarItemAutomationPeerMethods.IID, out _inner);

            }
            finally
            {
                Marshal.Release(inner);   
            }
        }

        public static new MenuBarItemAutomationPeer FromAbi(IntPtr thisPtr)
        {
            if (thisPtr == IntPtr.Zero) return null;
            return MarshalInspectable<MenuBarItemAutomationPeer>.FromAbi(thisPtr);
        }

        protected internal MenuBarItemAutomationPeer(IObjectReference objRef)
            : base(global::WinRT.DerivedComposed.Instance)

        {
            _inner = objRef.As(global::ABI.Microsoft.UI.Xaml.Automation.Peers.IMenuBarItemAutomationPeerMethods.IID);

        }


        public static bool operator ==(MenuBarItemAutomationPeer x, MenuBarItemAutomationPeer y) => (x?.ThisPtr ?? IntPtr.Zero) == (y?.ThisPtr ?? IntPtr.Zero);
        public static bool operator !=(MenuBarItemAutomationPeer x, MenuBarItemAutomationPeer y) => !(x == y);
        public bool Equals(MenuBarItemAutomationPeer other) => this == other;
        public override bool Equals(object obj) => obj is MenuBarItemAutomationPeer that && this == that;
        public override int GetHashCode() => ThisPtr.GetHashCode();


        protected MenuBarItemAutomationPeer(global::WinRT.DerivedComposed _):base(_)
        {

        }
        bool IWinRTObject.HasUnwrappableNativeObject => this.GetType() == typeof(MenuBarItemAutomationPeer);
        IObjectReference IWinRTObject.NativeObject => _inner;

        private struct InterfaceTag<I>{};


        public void Collapse() => global::ABI.Microsoft.UI.Xaml.Automation.Provider.IExpandCollapseProviderMethods.Collapse(_objRef_global__Microsoft_UI_Xaml_Automation_Provider_IExpandCollapseProvider);

        public void Expand() => global::ABI.Microsoft.UI.Xaml.Automation.Provider.IExpandCollapseProviderMethods.Expand(_objRef_global__Microsoft_UI_Xaml_Automation_Provider_IExpandCollapseProvider);

        public void Invoke() => global::ABI.Microsoft.UI.Xaml.Automation.Provider.IInvokeProviderMethods.Invoke(_objRef_global__Microsoft_UI_Xaml_Automation_Provider_IInvokeProvider);

        public global::Microsoft.UI.Xaml.Automation.ExpandCollapseState ExpandCollapseState => global::ABI.Microsoft.UI.Xaml.Automation.Provider.IExpandCollapseProviderMethods.get_ExpandCollapseState(_objRef_global__Microsoft_UI_Xaml_Automation_Provider_IExpandCollapseProvider);

        protected override bool IsOverridableInterface(Guid iid) => base.IsOverridableInterface(iid);

        global::System.Runtime.InteropServices.CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(ref Guid iid, out IntPtr ppv)
        {
            ppv = IntPtr.Zero;
            if (IsOverridableInterface(iid) || global::WinRT.Interop.IID.IID_IInspectable == iid)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
            }

            if (((IWinRTObject)this).NativeObject.TryAs(iid, out ppv) >= 0)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.Handled;
            }

            return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
        }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")]
    [global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Automation.Peers.MenuFlyoutItemAutomationPeer))]
    [global::ABI.Microsoft.UI.Xaml.Automation.Peers.MenuFlyoutItemAutomationPeerRcwFactory]
    [global::WinRT.ProjectedRuntimeClass(typeof(IMenuFlyoutItemAutomationPeer))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    public class MenuFlyoutItemAutomationPeer : FrameworkElementAutomationPeer, global::Microsoft.UI.Xaml.Automation.Provider.IInvokeProvider, global::System.Runtime.InteropServices.ICustomQueryInterface, IWinRTObject, IEquatable<MenuFlyoutItemAutomationPeer>
    {
        private IntPtr ThisPtr => _inner == null ? (((IWinRTObject)this).NativeObject).ThisPtr : _inner.ThisPtr;

        private readonly IObjectReference _inner = null;




        private volatile IObjectReference ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IMenuFlyoutItemAutomationPeer;
        private IObjectReference Make___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IMenuFlyoutItemAutomationPeer()
        {
            global::System.Threading.Interlocked.CompareExchange(ref ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IMenuFlyoutItemAutomationPeer, ((IWinRTObject)this).NativeObject.As<IUnknownVftbl>(global::ABI.Microsoft.UI.Xaml.Automation.Peers.IMenuFlyoutItemAutomationPeerMethods.IID), null);
            return ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IMenuFlyoutItemAutomationPeer;
        }
        private IObjectReference _objRef_global__Microsoft_UI_Xaml_Automation_Peers_IMenuFlyoutItemAutomationPeer => ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IMenuFlyoutItemAutomationPeer ?? Make___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IMenuFlyoutItemAutomationPeer();

        private volatile IObjectReference ___objRef_global__Microsoft_UI_Xaml_Automation_Provider_IInvokeProvider;
        private IObjectReference Make___objRef_global__Microsoft_UI_Xaml_Automation_Provider_IInvokeProvider()
        {
            global::System.Threading.Interlocked.CompareExchange(ref ___objRef_global__Microsoft_UI_Xaml_Automation_Provider_IInvokeProvider, ((IWinRTObject)this).NativeObject.As<IUnknownVftbl>(global::ABI.Microsoft.UI.Xaml.Automation.Provider.IInvokeProviderMethods.IID), null);
            return ___objRef_global__Microsoft_UI_Xaml_Automation_Provider_IInvokeProvider;
        }
        private IObjectReference _objRef_global__Microsoft_UI_Xaml_Automation_Provider_IInvokeProvider => ___objRef_global__Microsoft_UI_Xaml_Automation_Provider_IInvokeProvider ?? Make___objRef_global__Microsoft_UI_Xaml_Automation_Provider_IInvokeProvider();



        private static class _IMenuFlyoutItemAutomationPeerFactoryMethods
        {
            public static unsafe IntPtr CreateInstanceWithOwner(IObjectReference _obj, global::Microsoft.UI.Xaml.Controls.MenuFlyoutItem owner, object baseInterface, out IntPtr innerInterface)
            {
                var ThisPtr = _obj.ThisPtr;

                ObjectReferenceValue __owner = default;
                ObjectReferenceValue __baseInterface = default;
                IntPtr __innerInterface = default;
                IntPtr __retval = default;
                try
                {
                    __owner = global::ABI.Microsoft.UI.Xaml.Controls.MenuFlyoutItem.CreateMarshaler2(owner);
                    __baseInterface = MarshalInspectable<object>.CreateMarshaler2(baseInterface);
                    global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, IntPtr, IntPtr*, IntPtr*, int>**)ThisPtr)[6](ThisPtr, MarshalInspectable<object>.GetAbi(__owner), MarshalInspectable<object>.GetAbi(__baseInterface), &__innerInterface, &__retval));
                    global::System.GC.KeepAlive(_obj);
                    innerInterface = __innerInterface;
                    return __retval;
                }
                finally
                {
                    MarshalInspectable<object>.DisposeMarshaler(__owner);
                    MarshalInspectable<object>.DisposeMarshaler(__baseInterface);
                }
            }
        }

        private static volatile IObjectReference ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IMenuFlyoutItemAutomationPeerFactory;
        private static IObjectReference _objRef_global__Microsoft_UI_Xaml_Automation_Peers_IMenuFlyoutItemAutomationPeerFactory
        {
            get
            { 
                var factory = ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IMenuFlyoutItemAutomationPeerFactory;
                if (factory != null && factory.IsInCurrentContext)
                {
                    return factory;
                }
                else
                {
                    return ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IMenuFlyoutItemAutomationPeerFactory = ActivationFactory.Get("Microsoft.UI.Xaml.Automation.Peers.MenuFlyoutItemAutomationPeer", global::ABI.Microsoft.UI.Xaml.Automation.Peers.IMenuFlyoutItemAutomationPeerFactoryMethods.IID);
                }
            }
        }

        public MenuFlyoutItemAutomationPeer(global::Microsoft.UI.Xaml.Controls.MenuFlyoutItem owner):base(global::WinRT.DerivedComposed.Instance)
        {
            bool isAggregation = this.GetType() != typeof(MenuFlyoutItemAutomationPeer);
            object baseInspectable = isAggregation ? this : null;
            IntPtr composed = _IMenuFlyoutItemAutomationPeerFactoryMethods.CreateInstanceWithOwner(_objRef_global__Microsoft_UI_Xaml_Automation_Peers_IMenuFlyoutItemAutomationPeerFactory, owner, baseInspectable, out IntPtr inner);
            try
            {
                ComWrappersHelper.Init(isAggregation, this, composed, inner, global::ABI.Microsoft.UI.Xaml.Automation.Peers.IMenuFlyoutItemAutomationPeerMethods.IID, out _inner);

            }
            finally
            {
                Marshal.Release(inner);   
            }
        }

        public static new MenuFlyoutItemAutomationPeer FromAbi(IntPtr thisPtr)
        {
            if (thisPtr == IntPtr.Zero) return null;
            return MarshalInspectable<MenuFlyoutItemAutomationPeer>.FromAbi(thisPtr);
        }

        protected internal MenuFlyoutItemAutomationPeer(IObjectReference objRef)
            : base(global::WinRT.DerivedComposed.Instance)

        {
            _inner = objRef.As(global::ABI.Microsoft.UI.Xaml.Automation.Peers.IMenuFlyoutItemAutomationPeerMethods.IID);

        }


        public static bool operator ==(MenuFlyoutItemAutomationPeer x, MenuFlyoutItemAutomationPeer y) => (x?.ThisPtr ?? IntPtr.Zero) == (y?.ThisPtr ?? IntPtr.Zero);
        public static bool operator !=(MenuFlyoutItemAutomationPeer x, MenuFlyoutItemAutomationPeer y) => !(x == y);
        public bool Equals(MenuFlyoutItemAutomationPeer other) => this == other;
        public override bool Equals(object obj) => obj is MenuFlyoutItemAutomationPeer that && this == that;
        public override int GetHashCode() => ThisPtr.GetHashCode();


        protected MenuFlyoutItemAutomationPeer(global::WinRT.DerivedComposed _):base(_)
        {

        }
        bool IWinRTObject.HasUnwrappableNativeObject => this.GetType() == typeof(MenuFlyoutItemAutomationPeer);
        IObjectReference IWinRTObject.NativeObject => _inner;

        private struct InterfaceTag<I>{};


        public void Invoke() => global::ABI.Microsoft.UI.Xaml.Automation.Provider.IInvokeProviderMethods.Invoke(_objRef_global__Microsoft_UI_Xaml_Automation_Provider_IInvokeProvider);

        protected override bool IsOverridableInterface(Guid iid) => base.IsOverridableInterface(iid);

        global::System.Runtime.InteropServices.CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(ref Guid iid, out IntPtr ppv)
        {
            ppv = IntPtr.Zero;
            if (IsOverridableInterface(iid) || global::WinRT.Interop.IID.IID_IInspectable == iid)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
            }

            if (((IWinRTObject)this).NativeObject.TryAs(iid, out ppv) >= 0)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.Handled;
            }

            return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
        }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")]
    [global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Automation.Peers.MenuFlyoutPresenterAutomationPeer))]
    [global::ABI.Microsoft.UI.Xaml.Automation.Peers.MenuFlyoutPresenterAutomationPeerRcwFactory]
    [global::WinRT.ProjectedRuntimeClass(typeof(IMenuFlyoutPresenterAutomationPeer))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    public class MenuFlyoutPresenterAutomationPeer : ItemsControlAutomationPeer, global::System.Runtime.InteropServices.ICustomQueryInterface, IWinRTObject, IEquatable<MenuFlyoutPresenterAutomationPeer>
    {
        private IntPtr ThisPtr => _inner == null ? (((IWinRTObject)this).NativeObject).ThisPtr : _inner.ThisPtr;

        private readonly IObjectReference _inner = null;




        private volatile IObjectReference ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IMenuFlyoutPresenterAutomationPeer;
        private IObjectReference Make___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IMenuFlyoutPresenterAutomationPeer()
        {
            global::System.Threading.Interlocked.CompareExchange(ref ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IMenuFlyoutPresenterAutomationPeer, ((IWinRTObject)this).NativeObject.As<IUnknownVftbl>(global::ABI.Microsoft.UI.Xaml.Automation.Peers.IMenuFlyoutPresenterAutomationPeerMethods.IID), null);
            return ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IMenuFlyoutPresenterAutomationPeer;
        }
        private IObjectReference _objRef_global__Microsoft_UI_Xaml_Automation_Peers_IMenuFlyoutPresenterAutomationPeer => ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IMenuFlyoutPresenterAutomationPeer ?? Make___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IMenuFlyoutPresenterAutomationPeer();



        private static class _IMenuFlyoutPresenterAutomationPeerFactoryMethods
        {
            public static unsafe IntPtr CreateInstanceWithOwner(IObjectReference _obj, global::Microsoft.UI.Xaml.Controls.MenuFlyoutPresenter owner, object baseInterface, out IntPtr innerInterface)
            {
                var ThisPtr = _obj.ThisPtr;

                ObjectReferenceValue __owner = default;
                ObjectReferenceValue __baseInterface = default;
                IntPtr __innerInterface = default;
                IntPtr __retval = default;
                try
                {
                    __owner = global::ABI.Microsoft.UI.Xaml.Controls.MenuFlyoutPresenter.CreateMarshaler2(owner);
                    __baseInterface = MarshalInspectable<object>.CreateMarshaler2(baseInterface);
                    global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, IntPtr, IntPtr*, IntPtr*, int>**)ThisPtr)[6](ThisPtr, MarshalInspectable<object>.GetAbi(__owner), MarshalInspectable<object>.GetAbi(__baseInterface), &__innerInterface, &__retval));
                    global::System.GC.KeepAlive(_obj);
                    innerInterface = __innerInterface;
                    return __retval;
                }
                finally
                {
                    MarshalInspectable<object>.DisposeMarshaler(__owner);
                    MarshalInspectable<object>.DisposeMarshaler(__baseInterface);
                }
            }
        }

        private static volatile IObjectReference ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IMenuFlyoutPresenterAutomationPeerFactory;
        private static IObjectReference _objRef_global__Microsoft_UI_Xaml_Automation_Peers_IMenuFlyoutPresenterAutomationPeerFactory
        {
            get
            { 
                var factory = ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IMenuFlyoutPresenterAutomationPeerFactory;
                if (factory != null && factory.IsInCurrentContext)
                {
                    return factory;
                }
                else
                {
                    return ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IMenuFlyoutPresenterAutomationPeerFactory = ActivationFactory.Get("Microsoft.UI.Xaml.Automation.Peers.MenuFlyoutPresenterAutomationPeer", global::ABI.Microsoft.UI.Xaml.Automation.Peers.IMenuFlyoutPresenterAutomationPeerFactoryMethods.IID);
                }
            }
        }

        public MenuFlyoutPresenterAutomationPeer(global::Microsoft.UI.Xaml.Controls.MenuFlyoutPresenter owner):base(global::WinRT.DerivedComposed.Instance)
        {
            bool isAggregation = this.GetType() != typeof(MenuFlyoutPresenterAutomationPeer);
            object baseInspectable = isAggregation ? this : null;
            IntPtr composed = _IMenuFlyoutPresenterAutomationPeerFactoryMethods.CreateInstanceWithOwner(_objRef_global__Microsoft_UI_Xaml_Automation_Peers_IMenuFlyoutPresenterAutomationPeerFactory, owner, baseInspectable, out IntPtr inner);
            try
            {
                ComWrappersHelper.Init(isAggregation, this, composed, inner, global::ABI.Microsoft.UI.Xaml.Automation.Peers.IMenuFlyoutPresenterAutomationPeerMethods.IID, out _inner);

            }
            finally
            {
                Marshal.Release(inner);   
            }
        }

        public static new MenuFlyoutPresenterAutomationPeer FromAbi(IntPtr thisPtr)
        {
            if (thisPtr == IntPtr.Zero) return null;
            return MarshalInspectable<MenuFlyoutPresenterAutomationPeer>.FromAbi(thisPtr);
        }

        protected internal MenuFlyoutPresenterAutomationPeer(IObjectReference objRef)
            : base(global::WinRT.DerivedComposed.Instance)

        {
            _inner = objRef.As(global::ABI.Microsoft.UI.Xaml.Automation.Peers.IMenuFlyoutPresenterAutomationPeerMethods.IID);

        }


        public static bool operator ==(MenuFlyoutPresenterAutomationPeer x, MenuFlyoutPresenterAutomationPeer y) => (x?.ThisPtr ?? IntPtr.Zero) == (y?.ThisPtr ?? IntPtr.Zero);
        public static bool operator !=(MenuFlyoutPresenterAutomationPeer x, MenuFlyoutPresenterAutomationPeer y) => !(x == y);
        public bool Equals(MenuFlyoutPresenterAutomationPeer other) => this == other;
        public override bool Equals(object obj) => obj is MenuFlyoutPresenterAutomationPeer that && this == that;
        public override int GetHashCode() => ThisPtr.GetHashCode();


        protected MenuFlyoutPresenterAutomationPeer(global::WinRT.DerivedComposed _):base(_)
        {

        }
        bool IWinRTObject.HasUnwrappableNativeObject => this.GetType() == typeof(MenuFlyoutPresenterAutomationPeer);
        IObjectReference IWinRTObject.NativeObject => _inner;

        private struct InterfaceTag<I>{};


        protected override bool IsOverridableInterface(Guid iid) => base.IsOverridableInterface(iid);

        global::System.Runtime.InteropServices.CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(ref Guid iid, out IntPtr ppv)
        {
            ppv = IntPtr.Zero;
            if (IsOverridableInterface(iid) || global::WinRT.Interop.IID.IID_IInspectable == iid)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
            }

            if (((IWinRTObject)this).NativeObject.TryAs(iid, out ppv) >= 0)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.Handled;
            }

            return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
        }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")]
    [global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Automation.Peers.NavigationViewAutomationPeer))]
    [global::ABI.Microsoft.UI.Xaml.Automation.Peers.NavigationViewAutomationPeerRcwFactory]
    [global::WinRT.ProjectedRuntimeClass(typeof(INavigationViewAutomationPeer))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.XamlContract), 65536u)]
    public class NavigationViewAutomationPeer : FrameworkElementAutomationPeer, global::System.Runtime.InteropServices.ICustomQueryInterface, IWinRTObject, IEquatable<NavigationViewAutomationPeer>
    {
        private IntPtr ThisPtr => _inner == null ? (((IWinRTObject)this).NativeObject).ThisPtr : _inner.ThisPtr;

        private readonly IObjectReference _inner = null;




        private volatile IObjectReference ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_INavigationViewAutomationPeer;
        private IObjectReference Make___objRef_global__Microsoft_UI_Xaml_Automation_Peers_INavigationViewAutomationPeer()
        {
            global::System.Threading.Interlocked.CompareExchange(ref ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_INavigationViewAutomationPeer, ((IWinRTObject)this).NativeObject.As<IUnknownVftbl>(global::ABI.Microsoft.UI.Xaml.Automation.Peers.INavigationViewAutomationPeerMethods.IID), null);
            return ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_INavigationViewAutomationPeer;
        }
        private IObjectReference _objRef_global__Microsoft_UI_Xaml_Automation_Peers_INavigationViewAutomationPeer => ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_INavigationViewAutomationPeer ?? Make___objRef_global__Microsoft_UI_Xaml_Automation_Peers_INavigationViewAutomationPeer();



        private static class _INavigationViewAutomationPeerFactoryMethods
        {
            public static unsafe IntPtr CreateInstance(IObjectReference _obj, global::Microsoft.UI.Xaml.Controls.NavigationView owner, object baseInterface, out IntPtr innerInterface)
            {
                var ThisPtr = _obj.ThisPtr;

                ObjectReferenceValue __owner = default;
                ObjectReferenceValue __baseInterface = default;
                IntPtr __innerInterface = default;
                IntPtr __retval = default;
                try
                {
                    __owner = global::ABI.Microsoft.UI.Xaml.Controls.NavigationView.CreateMarshaler2(owner);
                    __baseInterface = MarshalInspectable<object>.CreateMarshaler2(baseInterface);
                    global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, IntPtr, IntPtr*, IntPtr*, int>**)ThisPtr)[6](ThisPtr, MarshalInspectable<object>.GetAbi(__owner), MarshalInspectable<object>.GetAbi(__baseInterface), &__innerInterface, &__retval));
                    global::System.GC.KeepAlive(_obj);
                    innerInterface = __innerInterface;
                    return __retval;
                }
                finally
                {
                    MarshalInspectable<object>.DisposeMarshaler(__owner);
                    MarshalInspectable<object>.DisposeMarshaler(__baseInterface);
                }
            }
        }

        private static volatile IObjectReference ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_INavigationViewAutomationPeerFactory;
        private static IObjectReference _objRef_global__Microsoft_UI_Xaml_Automation_Peers_INavigationViewAutomationPeerFactory
        {
            get
            { 
                var factory = ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_INavigationViewAutomationPeerFactory;
                if (factory != null && factory.IsInCurrentContext)
                {
                    return factory;
                }
                else
                {
                    return ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_INavigationViewAutomationPeerFactory = ActivationFactory.Get("Microsoft.UI.Xaml.Automation.Peers.NavigationViewAutomationPeer", global::ABI.Microsoft.UI.Xaml.Automation.Peers.INavigationViewAutomationPeerFactoryMethods.IID);
                }
            }
        }

        public NavigationViewAutomationPeer(global::Microsoft.UI.Xaml.Controls.NavigationView owner):base(global::WinRT.DerivedComposed.Instance)
        {
            bool isAggregation = this.GetType() != typeof(NavigationViewAutomationPeer);
            object baseInspectable = isAggregation ? this : null;
            IntPtr composed = _INavigationViewAutomationPeerFactoryMethods.CreateInstance(_objRef_global__Microsoft_UI_Xaml_Automation_Peers_INavigationViewAutomationPeerFactory, owner, baseInspectable, out IntPtr inner);
            try
            {
                ComWrappersHelper.Init(isAggregation, this, composed, inner, global::ABI.Microsoft.UI.Xaml.Automation.Peers.INavigationViewAutomationPeerMethods.IID, out _inner);

            }
            finally
            {
                Marshal.Release(inner);   
            }
        }

        public static new NavigationViewAutomationPeer FromAbi(IntPtr thisPtr)
        {
            if (thisPtr == IntPtr.Zero) return null;
            return MarshalInspectable<NavigationViewAutomationPeer>.FromAbi(thisPtr);
        }

        protected internal NavigationViewAutomationPeer(IObjectReference objRef)
            : base(global::WinRT.DerivedComposed.Instance)

        {
            _inner = objRef.As(global::ABI.Microsoft.UI.Xaml.Automation.Peers.INavigationViewAutomationPeerMethods.IID);

        }


        public static bool operator ==(NavigationViewAutomationPeer x, NavigationViewAutomationPeer y) => (x?.ThisPtr ?? IntPtr.Zero) == (y?.ThisPtr ?? IntPtr.Zero);
        public static bool operator !=(NavigationViewAutomationPeer x, NavigationViewAutomationPeer y) => !(x == y);
        public bool Equals(NavigationViewAutomationPeer other) => this == other;
        public override bool Equals(object obj) => obj is NavigationViewAutomationPeer that && this == that;
        public override int GetHashCode() => ThisPtr.GetHashCode();


        protected NavigationViewAutomationPeer(global::WinRT.DerivedComposed _):base(_)
        {

        }
        bool IWinRTObject.HasUnwrappableNativeObject => this.GetType() == typeof(NavigationViewAutomationPeer);
        IObjectReference IWinRTObject.NativeObject => _inner;

        private struct InterfaceTag<I>{};


        protected override bool IsOverridableInterface(Guid iid) => base.IsOverridableInterface(iid);

        global::System.Runtime.InteropServices.CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(ref Guid iid, out IntPtr ppv)
        {
            ppv = IntPtr.Zero;
            if (IsOverridableInterface(iid) || global::WinRT.Interop.IID.IID_IInspectable == iid)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
            }

            if (((IWinRTObject)this).NativeObject.TryAs(iid, out ppv) >= 0)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.Handled;
            }

            return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
        }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")]
    [global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Automation.Peers.NavigationViewItemAutomationPeer))]
    [global::ABI.Microsoft.UI.Xaml.Automation.Peers.NavigationViewItemAutomationPeerRcwFactory]
    [global::WinRT.ProjectedRuntimeClass(typeof(INavigationViewItemAutomationPeer))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.XamlContract), 65536u)]
    public class NavigationViewItemAutomationPeer : FrameworkElementAutomationPeer, global::Microsoft.UI.Xaml.Automation.Provider.IExpandCollapseProvider, global::System.Runtime.InteropServices.ICustomQueryInterface, IWinRTObject, IEquatable<NavigationViewItemAutomationPeer>
    {
        private IntPtr ThisPtr => _inner == null ? (((IWinRTObject)this).NativeObject).ThisPtr : _inner.ThisPtr;

        private readonly IObjectReference _inner = null;




        private volatile IObjectReference ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_INavigationViewItemAutomationPeer;
        private IObjectReference Make___objRef_global__Microsoft_UI_Xaml_Automation_Peers_INavigationViewItemAutomationPeer()
        {
            global::System.Threading.Interlocked.CompareExchange(ref ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_INavigationViewItemAutomationPeer, ((IWinRTObject)this).NativeObject.As<IUnknownVftbl>(global::ABI.Microsoft.UI.Xaml.Automation.Peers.INavigationViewItemAutomationPeerMethods.IID), null);
            return ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_INavigationViewItemAutomationPeer;
        }
        private IObjectReference _objRef_global__Microsoft_UI_Xaml_Automation_Peers_INavigationViewItemAutomationPeer => ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_INavigationViewItemAutomationPeer ?? Make___objRef_global__Microsoft_UI_Xaml_Automation_Peers_INavigationViewItemAutomationPeer();

        private volatile IObjectReference ___objRef_global__Microsoft_UI_Xaml_Automation_Provider_IExpandCollapseProvider;
        private IObjectReference Make___objRef_global__Microsoft_UI_Xaml_Automation_Provider_IExpandCollapseProvider()
        {
            global::System.Threading.Interlocked.CompareExchange(ref ___objRef_global__Microsoft_UI_Xaml_Automation_Provider_IExpandCollapseProvider, ((IWinRTObject)this).NativeObject.As<IUnknownVftbl>(global::ABI.Microsoft.UI.Xaml.Automation.Provider.IExpandCollapseProviderMethods.IID), null);
            return ___objRef_global__Microsoft_UI_Xaml_Automation_Provider_IExpandCollapseProvider;
        }
        private IObjectReference _objRef_global__Microsoft_UI_Xaml_Automation_Provider_IExpandCollapseProvider => ___objRef_global__Microsoft_UI_Xaml_Automation_Provider_IExpandCollapseProvider ?? Make___objRef_global__Microsoft_UI_Xaml_Automation_Provider_IExpandCollapseProvider();



        private static class _INavigationViewItemAutomationPeerFactoryMethods
        {
            public static unsafe IntPtr CreateInstanceWithOwner(IObjectReference _obj, global::Microsoft.UI.Xaml.Controls.NavigationViewItem owner, object baseInterface, out IntPtr innerInterface)
            {
                var ThisPtr = _obj.ThisPtr;

                ObjectReferenceValue __owner = default;
                ObjectReferenceValue __baseInterface = default;
                IntPtr __innerInterface = default;
                IntPtr __retval = default;
                try
                {
                    __owner = global::ABI.Microsoft.UI.Xaml.Controls.NavigationViewItem.CreateMarshaler2(owner);
                    __baseInterface = MarshalInspectable<object>.CreateMarshaler2(baseInterface);
                    global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, IntPtr, IntPtr*, IntPtr*, int>**)ThisPtr)[6](ThisPtr, MarshalInspectable<object>.GetAbi(__owner), MarshalInspectable<object>.GetAbi(__baseInterface), &__innerInterface, &__retval));
                    global::System.GC.KeepAlive(_obj);
                    innerInterface = __innerInterface;
                    return __retval;
                }
                finally
                {
                    MarshalInspectable<object>.DisposeMarshaler(__owner);
                    MarshalInspectable<object>.DisposeMarshaler(__baseInterface);
                }
            }
        }

        private static volatile IObjectReference ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_INavigationViewItemAutomationPeerFactory;
        private static IObjectReference _objRef_global__Microsoft_UI_Xaml_Automation_Peers_INavigationViewItemAutomationPeerFactory
        {
            get
            { 
                var factory = ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_INavigationViewItemAutomationPeerFactory;
                if (factory != null && factory.IsInCurrentContext)
                {
                    return factory;
                }
                else
                {
                    return ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_INavigationViewItemAutomationPeerFactory = ActivationFactory.Get("Microsoft.UI.Xaml.Automation.Peers.NavigationViewItemAutomationPeer", global::ABI.Microsoft.UI.Xaml.Automation.Peers.INavigationViewItemAutomationPeerFactoryMethods.IID);
                }
            }
        }

        public NavigationViewItemAutomationPeer(global::Microsoft.UI.Xaml.Controls.NavigationViewItem owner):base(global::WinRT.DerivedComposed.Instance)
        {
            bool isAggregation = this.GetType() != typeof(NavigationViewItemAutomationPeer);
            object baseInspectable = isAggregation ? this : null;
            IntPtr composed = _INavigationViewItemAutomationPeerFactoryMethods.CreateInstanceWithOwner(_objRef_global__Microsoft_UI_Xaml_Automation_Peers_INavigationViewItemAutomationPeerFactory, owner, baseInspectable, out IntPtr inner);
            try
            {
                ComWrappersHelper.Init(isAggregation, this, composed, inner, global::ABI.Microsoft.UI.Xaml.Automation.Peers.INavigationViewItemAutomationPeerMethods.IID, out _inner);

            }
            finally
            {
                Marshal.Release(inner);   
            }
        }

        public static new NavigationViewItemAutomationPeer FromAbi(IntPtr thisPtr)
        {
            if (thisPtr == IntPtr.Zero) return null;
            return MarshalInspectable<NavigationViewItemAutomationPeer>.FromAbi(thisPtr);
        }

        protected internal NavigationViewItemAutomationPeer(IObjectReference objRef)
            : base(global::WinRT.DerivedComposed.Instance)

        {
            _inner = objRef.As(global::ABI.Microsoft.UI.Xaml.Automation.Peers.INavigationViewItemAutomationPeerMethods.IID);

        }


        public static bool operator ==(NavigationViewItemAutomationPeer x, NavigationViewItemAutomationPeer y) => (x?.ThisPtr ?? IntPtr.Zero) == (y?.ThisPtr ?? IntPtr.Zero);
        public static bool operator !=(NavigationViewItemAutomationPeer x, NavigationViewItemAutomationPeer y) => !(x == y);
        public bool Equals(NavigationViewItemAutomationPeer other) => this == other;
        public override bool Equals(object obj) => obj is NavigationViewItemAutomationPeer that && this == that;
        public override int GetHashCode() => ThisPtr.GetHashCode();


        protected NavigationViewItemAutomationPeer(global::WinRT.DerivedComposed _):base(_)
        {

        }
        bool IWinRTObject.HasUnwrappableNativeObject => this.GetType() == typeof(NavigationViewItemAutomationPeer);
        IObjectReference IWinRTObject.NativeObject => _inner;

        private struct InterfaceTag<I>{};


        public void Collapse() => global::ABI.Microsoft.UI.Xaml.Automation.Provider.IExpandCollapseProviderMethods.Collapse(_objRef_global__Microsoft_UI_Xaml_Automation_Provider_IExpandCollapseProvider);

        public void Expand() => global::ABI.Microsoft.UI.Xaml.Automation.Provider.IExpandCollapseProviderMethods.Expand(_objRef_global__Microsoft_UI_Xaml_Automation_Provider_IExpandCollapseProvider);

        public global::Microsoft.UI.Xaml.Automation.ExpandCollapseState ExpandCollapseState => global::ABI.Microsoft.UI.Xaml.Automation.Provider.IExpandCollapseProviderMethods.get_ExpandCollapseState(_objRef_global__Microsoft_UI_Xaml_Automation_Provider_IExpandCollapseProvider);

        protected override bool IsOverridableInterface(Guid iid) => base.IsOverridableInterface(iid);

        global::System.Runtime.InteropServices.CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(ref Guid iid, out IntPtr ppv)
        {
            ppv = IntPtr.Zero;
            if (IsOverridableInterface(iid) || global::WinRT.Interop.IID.IID_IInspectable == iid)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
            }

            if (((IWinRTObject)this).NativeObject.TryAs(iid, out ppv) >= 0)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.Handled;
            }

            return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
        }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")]
    [global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Automation.Peers.NumberBoxAutomationPeer))]
    [global::ABI.Microsoft.UI.Xaml.Automation.Peers.NumberBoxAutomationPeerRcwFactory]
    [global::WinRT.ProjectedRuntimeClass(typeof(INumberBoxAutomationPeer))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.XamlContract), 65536u)]
    public class NumberBoxAutomationPeer : FrameworkElementAutomationPeer, global::System.Runtime.InteropServices.ICustomQueryInterface, IWinRTObject, IEquatable<NumberBoxAutomationPeer>
    {
        private IntPtr ThisPtr => _inner == null ? (((IWinRTObject)this).NativeObject).ThisPtr : _inner.ThisPtr;

        private readonly IObjectReference _inner = null;




        private volatile IObjectReference ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_INumberBoxAutomationPeer;
        private IObjectReference Make___objRef_global__Microsoft_UI_Xaml_Automation_Peers_INumberBoxAutomationPeer()
        {
            global::System.Threading.Interlocked.CompareExchange(ref ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_INumberBoxAutomationPeer, ((IWinRTObject)this).NativeObject.As<IUnknownVftbl>(global::ABI.Microsoft.UI.Xaml.Automation.Peers.INumberBoxAutomationPeerMethods.IID), null);
            return ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_INumberBoxAutomationPeer;
        }
        private IObjectReference _objRef_global__Microsoft_UI_Xaml_Automation_Peers_INumberBoxAutomationPeer => ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_INumberBoxAutomationPeer ?? Make___objRef_global__Microsoft_UI_Xaml_Automation_Peers_INumberBoxAutomationPeer();



        private static class _INumberBoxAutomationPeerFactoryMethods
        {
            public static unsafe IntPtr CreateInstance(IObjectReference _obj, global::Microsoft.UI.Xaml.Controls.NumberBox owner, object baseInterface, out IntPtr innerInterface)
            {
                var ThisPtr = _obj.ThisPtr;

                ObjectReferenceValue __owner = default;
                ObjectReferenceValue __baseInterface = default;
                IntPtr __innerInterface = default;
                IntPtr __retval = default;
                try
                {
                    __owner = global::ABI.Microsoft.UI.Xaml.Controls.NumberBox.CreateMarshaler2(owner);
                    __baseInterface = MarshalInspectable<object>.CreateMarshaler2(baseInterface);
                    global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, IntPtr, IntPtr*, IntPtr*, int>**)ThisPtr)[6](ThisPtr, MarshalInspectable<object>.GetAbi(__owner), MarshalInspectable<object>.GetAbi(__baseInterface), &__innerInterface, &__retval));
                    global::System.GC.KeepAlive(_obj);
                    innerInterface = __innerInterface;
                    return __retval;
                }
                finally
                {
                    MarshalInspectable<object>.DisposeMarshaler(__owner);
                    MarshalInspectable<object>.DisposeMarshaler(__baseInterface);
                }
            }
        }

        private static volatile IObjectReference ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_INumberBoxAutomationPeerFactory;
        private static IObjectReference _objRef_global__Microsoft_UI_Xaml_Automation_Peers_INumberBoxAutomationPeerFactory
        {
            get
            { 
                var factory = ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_INumberBoxAutomationPeerFactory;
                if (factory != null && factory.IsInCurrentContext)
                {
                    return factory;
                }
                else
                {
                    return ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_INumberBoxAutomationPeerFactory = ActivationFactory.Get("Microsoft.UI.Xaml.Automation.Peers.NumberBoxAutomationPeer", global::ABI.Microsoft.UI.Xaml.Automation.Peers.INumberBoxAutomationPeerFactoryMethods.IID);
                }
            }
        }

        public NumberBoxAutomationPeer(global::Microsoft.UI.Xaml.Controls.NumberBox owner):base(global::WinRT.DerivedComposed.Instance)
        {
            bool isAggregation = this.GetType() != typeof(NumberBoxAutomationPeer);
            object baseInspectable = isAggregation ? this : null;
            IntPtr composed = _INumberBoxAutomationPeerFactoryMethods.CreateInstance(_objRef_global__Microsoft_UI_Xaml_Automation_Peers_INumberBoxAutomationPeerFactory, owner, baseInspectable, out IntPtr inner);
            try
            {
                ComWrappersHelper.Init(isAggregation, this, composed, inner, global::ABI.Microsoft.UI.Xaml.Automation.Peers.INumberBoxAutomationPeerMethods.IID, out _inner);

            }
            finally
            {
                Marshal.Release(inner);   
            }
        }

        public static new NumberBoxAutomationPeer FromAbi(IntPtr thisPtr)
        {
            if (thisPtr == IntPtr.Zero) return null;
            return MarshalInspectable<NumberBoxAutomationPeer>.FromAbi(thisPtr);
        }

        protected internal NumberBoxAutomationPeer(IObjectReference objRef)
            : base(global::WinRT.DerivedComposed.Instance)

        {
            _inner = objRef.As(global::ABI.Microsoft.UI.Xaml.Automation.Peers.INumberBoxAutomationPeerMethods.IID);

        }


        public static bool operator ==(NumberBoxAutomationPeer x, NumberBoxAutomationPeer y) => (x?.ThisPtr ?? IntPtr.Zero) == (y?.ThisPtr ?? IntPtr.Zero);
        public static bool operator !=(NumberBoxAutomationPeer x, NumberBoxAutomationPeer y) => !(x == y);
        public bool Equals(NumberBoxAutomationPeer other) => this == other;
        public override bool Equals(object obj) => obj is NumberBoxAutomationPeer that && this == that;
        public override int GetHashCode() => ThisPtr.GetHashCode();


        protected NumberBoxAutomationPeer(global::WinRT.DerivedComposed _):base(_)
        {

        }
        bool IWinRTObject.HasUnwrappableNativeObject => this.GetType() == typeof(NumberBoxAutomationPeer);
        IObjectReference IWinRTObject.NativeObject => _inner;

        private struct InterfaceTag<I>{};


        protected override bool IsOverridableInterface(Guid iid) => base.IsOverridableInterface(iid);

        global::System.Runtime.InteropServices.CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(ref Guid iid, out IntPtr ppv)
        {
            ppv = IntPtr.Zero;
            if (IsOverridableInterface(iid) || global::WinRT.Interop.IID.IID_IInspectable == iid)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
            }

            if (((IWinRTObject)this).NativeObject.TryAs(iid, out ppv) >= 0)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.Handled;
            }

            return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
        }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")]
    [global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Automation.Peers.PasswordBoxAutomationPeer))]
    [global::ABI.Microsoft.UI.Xaml.Automation.Peers.PasswordBoxAutomationPeerRcwFactory]
    [global::WinRT.ProjectedRuntimeClass(typeof(IPasswordBoxAutomationPeer))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    public class PasswordBoxAutomationPeer : FrameworkElementAutomationPeer, global::System.Runtime.InteropServices.ICustomQueryInterface, IWinRTObject, IEquatable<PasswordBoxAutomationPeer>
    {
        private IntPtr ThisPtr => _inner == null ? (((IWinRTObject)this).NativeObject).ThisPtr : _inner.ThisPtr;

        private readonly IObjectReference _inner = null;




        private volatile IObjectReference ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IPasswordBoxAutomationPeer;
        private IObjectReference Make___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IPasswordBoxAutomationPeer()
        {
            global::System.Threading.Interlocked.CompareExchange(ref ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IPasswordBoxAutomationPeer, ((IWinRTObject)this).NativeObject.As<IUnknownVftbl>(global::ABI.Microsoft.UI.Xaml.Automation.Peers.IPasswordBoxAutomationPeerMethods.IID), null);
            return ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IPasswordBoxAutomationPeer;
        }
        private IObjectReference _objRef_global__Microsoft_UI_Xaml_Automation_Peers_IPasswordBoxAutomationPeer => ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IPasswordBoxAutomationPeer ?? Make___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IPasswordBoxAutomationPeer();



        private static class _IPasswordBoxAutomationPeerFactoryMethods
        {
            public static unsafe IntPtr CreateInstanceWithOwner(IObjectReference _obj, global::Microsoft.UI.Xaml.Controls.PasswordBox owner, object baseInterface, out IntPtr innerInterface)
            {
                var ThisPtr = _obj.ThisPtr;

                ObjectReferenceValue __owner = default;
                ObjectReferenceValue __baseInterface = default;
                IntPtr __innerInterface = default;
                IntPtr __retval = default;
                try
                {
                    __owner = global::ABI.Microsoft.UI.Xaml.Controls.PasswordBox.CreateMarshaler2(owner);
                    __baseInterface = MarshalInspectable<object>.CreateMarshaler2(baseInterface);
                    global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, IntPtr, IntPtr*, IntPtr*, int>**)ThisPtr)[6](ThisPtr, MarshalInspectable<object>.GetAbi(__owner), MarshalInspectable<object>.GetAbi(__baseInterface), &__innerInterface, &__retval));
                    global::System.GC.KeepAlive(_obj);
                    innerInterface = __innerInterface;
                    return __retval;
                }
                finally
                {
                    MarshalInspectable<object>.DisposeMarshaler(__owner);
                    MarshalInspectable<object>.DisposeMarshaler(__baseInterface);
                }
            }
        }

        private static volatile IObjectReference ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IPasswordBoxAutomationPeerFactory;
        private static IObjectReference _objRef_global__Microsoft_UI_Xaml_Automation_Peers_IPasswordBoxAutomationPeerFactory
        {
            get
            { 
                var factory = ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IPasswordBoxAutomationPeerFactory;
                if (factory != null && factory.IsInCurrentContext)
                {
                    return factory;
                }
                else
                {
                    return ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IPasswordBoxAutomationPeerFactory = ActivationFactory.Get("Microsoft.UI.Xaml.Automation.Peers.PasswordBoxAutomationPeer", global::ABI.Microsoft.UI.Xaml.Automation.Peers.IPasswordBoxAutomationPeerFactoryMethods.IID);
                }
            }
        }

        public PasswordBoxAutomationPeer(global::Microsoft.UI.Xaml.Controls.PasswordBox owner):base(global::WinRT.DerivedComposed.Instance)
        {
            bool isAggregation = this.GetType() != typeof(PasswordBoxAutomationPeer);
            object baseInspectable = isAggregation ? this : null;
            IntPtr composed = _IPasswordBoxAutomationPeerFactoryMethods.CreateInstanceWithOwner(_objRef_global__Microsoft_UI_Xaml_Automation_Peers_IPasswordBoxAutomationPeerFactory, owner, baseInspectable, out IntPtr inner);
            try
            {
                ComWrappersHelper.Init(isAggregation, this, composed, inner, global::ABI.Microsoft.UI.Xaml.Automation.Peers.IPasswordBoxAutomationPeerMethods.IID, out _inner);

            }
            finally
            {
                Marshal.Release(inner);   
            }
        }

        public static new PasswordBoxAutomationPeer FromAbi(IntPtr thisPtr)
        {
            if (thisPtr == IntPtr.Zero) return null;
            return MarshalInspectable<PasswordBoxAutomationPeer>.FromAbi(thisPtr);
        }

        protected internal PasswordBoxAutomationPeer(IObjectReference objRef)
            : base(global::WinRT.DerivedComposed.Instance)

        {
            _inner = objRef.As(global::ABI.Microsoft.UI.Xaml.Automation.Peers.IPasswordBoxAutomationPeerMethods.IID);

        }


        public static bool operator ==(PasswordBoxAutomationPeer x, PasswordBoxAutomationPeer y) => (x?.ThisPtr ?? IntPtr.Zero) == (y?.ThisPtr ?? IntPtr.Zero);
        public static bool operator !=(PasswordBoxAutomationPeer x, PasswordBoxAutomationPeer y) => !(x == y);
        public bool Equals(PasswordBoxAutomationPeer other) => this == other;
        public override bool Equals(object obj) => obj is PasswordBoxAutomationPeer that && this == that;
        public override int GetHashCode() => ThisPtr.GetHashCode();


        protected PasswordBoxAutomationPeer(global::WinRT.DerivedComposed _):base(_)
        {

        }
        bool IWinRTObject.HasUnwrappableNativeObject => this.GetType() == typeof(PasswordBoxAutomationPeer);
        IObjectReference IWinRTObject.NativeObject => _inner;

        private struct InterfaceTag<I>{};


        protected override bool IsOverridableInterface(Guid iid) => base.IsOverridableInterface(iid);

        global::System.Runtime.InteropServices.CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(ref Guid iid, out IntPtr ppv)
        {
            ppv = IntPtr.Zero;
            if (IsOverridableInterface(iid) || global::WinRT.Interop.IID.IID_IInspectable == iid)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
            }

            if (((IWinRTObject)this).NativeObject.TryAs(iid, out ppv) >= 0)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.Handled;
            }

            return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
        }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")][global::WinRT.WinRTExposedType(typeof(global::WinRT.EnumTypeDetails<PatternInterface>))][global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    public enum PatternInterface : int
    {
        Invoke = unchecked((int)0),
        Selection = unchecked((int)0x1),
        Value = unchecked((int)0x2),
        RangeValue = unchecked((int)0x3),
        Scroll = unchecked((int)0x4),
        ScrollItem = unchecked((int)0x5),
        ExpandCollapse = unchecked((int)0x6),
        Grid = unchecked((int)0x7),
        GridItem = unchecked((int)0x8),
        MultipleView = unchecked((int)0x9),
        Window = unchecked((int)0xa),
        SelectionItem = unchecked((int)0xb),
        Dock = unchecked((int)0xc),
        Table = unchecked((int)0xd),
        TableItem = unchecked((int)0xe),
        Toggle = unchecked((int)0xf),
        Transform = unchecked((int)0x10),
        Text = unchecked((int)0x11),
        ItemContainer = unchecked((int)0x12),
        VirtualizedItem = unchecked((int)0x13),
        Text2 = unchecked((int)0x14),
        TextChild = unchecked((int)0x15),
        TextRange = unchecked((int)0x16),
        Annotation = unchecked((int)0x17),
        Drag = unchecked((int)0x18),
        DropTarget = unchecked((int)0x19),
        ObjectModel = unchecked((int)0x1a),
        Spreadsheet = unchecked((int)0x1b),
        SpreadsheetItem = unchecked((int)0x1c),
        Styles = unchecked((int)0x1d),
        Transform2 = unchecked((int)0x1e),
        SynchronizedInput = unchecked((int)0x1f),
        TextEdit = unchecked((int)0x20),
        CustomNavigation = unchecked((int)0x21),
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")]
    [global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Automation.Peers.PersonPictureAutomationPeer))]
    [global::ABI.Microsoft.UI.Xaml.Automation.Peers.PersonPictureAutomationPeerRcwFactory]
    [global::WinRT.ProjectedRuntimeClass(typeof(IPersonPictureAutomationPeer))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.XamlContract), 65536u)]
    public class PersonPictureAutomationPeer : FrameworkElementAutomationPeer, global::System.Runtime.InteropServices.ICustomQueryInterface, IWinRTObject, IEquatable<PersonPictureAutomationPeer>
    {
        private IntPtr ThisPtr => _inner == null ? (((IWinRTObject)this).NativeObject).ThisPtr : _inner.ThisPtr;

        private readonly IObjectReference _inner = null;




        private volatile IObjectReference ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IPersonPictureAutomationPeer;
        private IObjectReference Make___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IPersonPictureAutomationPeer()
        {
            global::System.Threading.Interlocked.CompareExchange(ref ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IPersonPictureAutomationPeer, ((IWinRTObject)this).NativeObject.As<IUnknownVftbl>(global::ABI.Microsoft.UI.Xaml.Automation.Peers.IPersonPictureAutomationPeerMethods.IID), null);
            return ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IPersonPictureAutomationPeer;
        }
        private IObjectReference _objRef_global__Microsoft_UI_Xaml_Automation_Peers_IPersonPictureAutomationPeer => ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IPersonPictureAutomationPeer ?? Make___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IPersonPictureAutomationPeer();



        private static class _IPersonPictureAutomationPeerFactoryMethods
        {
            public static unsafe IntPtr CreateInstanceWithOwner(IObjectReference _obj, global::Microsoft.UI.Xaml.Controls.PersonPicture owner, object baseInterface, out IntPtr innerInterface)
            {
                var ThisPtr = _obj.ThisPtr;

                ObjectReferenceValue __owner = default;
                ObjectReferenceValue __baseInterface = default;
                IntPtr __innerInterface = default;
                IntPtr __retval = default;
                try
                {
                    __owner = global::ABI.Microsoft.UI.Xaml.Controls.PersonPicture.CreateMarshaler2(owner);
                    __baseInterface = MarshalInspectable<object>.CreateMarshaler2(baseInterface);
                    global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, IntPtr, IntPtr*, IntPtr*, int>**)ThisPtr)[6](ThisPtr, MarshalInspectable<object>.GetAbi(__owner), MarshalInspectable<object>.GetAbi(__baseInterface), &__innerInterface, &__retval));
                    global::System.GC.KeepAlive(_obj);
                    innerInterface = __innerInterface;
                    return __retval;
                }
                finally
                {
                    MarshalInspectable<object>.DisposeMarshaler(__owner);
                    MarshalInspectable<object>.DisposeMarshaler(__baseInterface);
                }
            }
        }

        private static volatile IObjectReference ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IPersonPictureAutomationPeerFactory;
        private static IObjectReference _objRef_global__Microsoft_UI_Xaml_Automation_Peers_IPersonPictureAutomationPeerFactory
        {
            get
            { 
                var factory = ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IPersonPictureAutomationPeerFactory;
                if (factory != null && factory.IsInCurrentContext)
                {
                    return factory;
                }
                else
                {
                    return ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IPersonPictureAutomationPeerFactory = ActivationFactory.Get("Microsoft.UI.Xaml.Automation.Peers.PersonPictureAutomationPeer", global::ABI.Microsoft.UI.Xaml.Automation.Peers.IPersonPictureAutomationPeerFactoryMethods.IID);
                }
            }
        }

        public PersonPictureAutomationPeer(global::Microsoft.UI.Xaml.Controls.PersonPicture owner):base(global::WinRT.DerivedComposed.Instance)
        {
            bool isAggregation = this.GetType() != typeof(PersonPictureAutomationPeer);
            object baseInspectable = isAggregation ? this : null;
            IntPtr composed = _IPersonPictureAutomationPeerFactoryMethods.CreateInstanceWithOwner(_objRef_global__Microsoft_UI_Xaml_Automation_Peers_IPersonPictureAutomationPeerFactory, owner, baseInspectable, out IntPtr inner);
            try
            {
                ComWrappersHelper.Init(isAggregation, this, composed, inner, global::ABI.Microsoft.UI.Xaml.Automation.Peers.IPersonPictureAutomationPeerMethods.IID, out _inner);

            }
            finally
            {
                Marshal.Release(inner);   
            }
        }

        public static new PersonPictureAutomationPeer FromAbi(IntPtr thisPtr)
        {
            if (thisPtr == IntPtr.Zero) return null;
            return MarshalInspectable<PersonPictureAutomationPeer>.FromAbi(thisPtr);
        }

        protected internal PersonPictureAutomationPeer(IObjectReference objRef)
            : base(global::WinRT.DerivedComposed.Instance)

        {
            _inner = objRef.As(global::ABI.Microsoft.UI.Xaml.Automation.Peers.IPersonPictureAutomationPeerMethods.IID);

        }


        public static bool operator ==(PersonPictureAutomationPeer x, PersonPictureAutomationPeer y) => (x?.ThisPtr ?? IntPtr.Zero) == (y?.ThisPtr ?? IntPtr.Zero);
        public static bool operator !=(PersonPictureAutomationPeer x, PersonPictureAutomationPeer y) => !(x == y);
        public bool Equals(PersonPictureAutomationPeer other) => this == other;
        public override bool Equals(object obj) => obj is PersonPictureAutomationPeer that && this == that;
        public override int GetHashCode() => ThisPtr.GetHashCode();


        protected PersonPictureAutomationPeer(global::WinRT.DerivedComposed _):base(_)
        {

        }
        bool IWinRTObject.HasUnwrappableNativeObject => this.GetType() == typeof(PersonPictureAutomationPeer);
        IObjectReference IWinRTObject.NativeObject => _inner;

        private struct InterfaceTag<I>{};


        protected override bool IsOverridableInterface(Guid iid) => base.IsOverridableInterface(iid);

        global::System.Runtime.InteropServices.CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(ref Guid iid, out IntPtr ppv)
        {
            ppv = IntPtr.Zero;
            if (IsOverridableInterface(iid) || global::WinRT.Interop.IID.IID_IInspectable == iid)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
            }

            if (((IWinRTObject)this).NativeObject.TryAs(iid, out ppv) >= 0)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.Handled;
            }

            return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
        }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")]
    [global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Automation.Peers.PickerFlyoutPresenterAutomationPeer))]
    [global::ABI.Microsoft.UI.Xaml.Automation.Peers.PickerFlyoutPresenterAutomationPeerRcwFactory]
    [global::WinRT.ProjectedRuntimeClass(typeof(IPickerFlyoutPresenterAutomationPeer))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    public sealed class PickerFlyoutPresenterAutomationPeer : FrameworkElementAutomationPeer, global::System.Runtime.InteropServices.ICustomQueryInterface, IWinRTObject, IEquatable<PickerFlyoutPresenterAutomationPeer>
    {
        private IntPtr ThisPtr => _inner == null ? (((IWinRTObject)this).NativeObject).ThisPtr : _inner.ThisPtr;

        private readonly IObjectReference _inner = null;



        private IObjectReference _objRef_global__Microsoft_UI_Xaml_Automation_Peers_IPickerFlyoutPresenterAutomationPeer => _inner;


        public static new PickerFlyoutPresenterAutomationPeer FromAbi(IntPtr thisPtr)
        {
            if (thisPtr == IntPtr.Zero) return null;
            return MarshalInspectable<PickerFlyoutPresenterAutomationPeer>.FromAbi(thisPtr);
        }

        internal PickerFlyoutPresenterAutomationPeer(IObjectReference objRef)
            : base(global::WinRT.DerivedComposed.Instance)

        {
            _inner = objRef.As(global::ABI.Microsoft.UI.Xaml.Automation.Peers.IPickerFlyoutPresenterAutomationPeerMethods.IID);

        }


        public static bool operator ==(PickerFlyoutPresenterAutomationPeer x, PickerFlyoutPresenterAutomationPeer y) => (x?.ThisPtr ?? IntPtr.Zero) == (y?.ThisPtr ?? IntPtr.Zero);
        public static bool operator !=(PickerFlyoutPresenterAutomationPeer x, PickerFlyoutPresenterAutomationPeer y) => !(x == y);
        public bool Equals(PickerFlyoutPresenterAutomationPeer other) => this == other;
        public override bool Equals(object obj) => obj is PickerFlyoutPresenterAutomationPeer that && this == that;
        public override int GetHashCode() => ThisPtr.GetHashCode();


        bool IWinRTObject.HasUnwrappableNativeObject => true;
        IObjectReference IWinRTObject.NativeObject => _inner;

        private struct InterfaceTag<I>{};


        protected override bool IsOverridableInterface(Guid iid) => base.IsOverridableInterface(iid);

        global::System.Runtime.InteropServices.CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(ref Guid iid, out IntPtr ppv)
        {
            ppv = IntPtr.Zero;
            if (IsOverridableInterface(iid) || global::WinRT.Interop.IID.IID_IInspectable == iid)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
            }

            if (((IWinRTObject)this).NativeObject.TryAs(iid, out ppv) >= 0)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.Handled;
            }

            return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
        }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")]
    [global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Automation.Peers.PipsPagerAutomationPeer))]
    [global::ABI.Microsoft.UI.Xaml.Automation.Peers.PipsPagerAutomationPeerRcwFactory]
    [global::WinRT.ProjectedRuntimeClass(typeof(IPipsPagerAutomationPeer))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.XamlContract), 65536u)]
    public class PipsPagerAutomationPeer : FrameworkElementAutomationPeer, global::System.Runtime.InteropServices.ICustomQueryInterface, IWinRTObject, IEquatable<PipsPagerAutomationPeer>
    {
        private IntPtr ThisPtr => _inner == null ? (((IWinRTObject)this).NativeObject).ThisPtr : _inner.ThisPtr;

        private readonly IObjectReference _inner = null;




        private volatile IObjectReference ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IPipsPagerAutomationPeer;
        private IObjectReference Make___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IPipsPagerAutomationPeer()
        {
            global::System.Threading.Interlocked.CompareExchange(ref ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IPipsPagerAutomationPeer, ((IWinRTObject)this).NativeObject.As<IUnknownVftbl>(global::ABI.Microsoft.UI.Xaml.Automation.Peers.IPipsPagerAutomationPeerMethods.IID), null);
            return ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IPipsPagerAutomationPeer;
        }
        private IObjectReference _objRef_global__Microsoft_UI_Xaml_Automation_Peers_IPipsPagerAutomationPeer => ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IPipsPagerAutomationPeer ?? Make___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IPipsPagerAutomationPeer();



        private static class _IPipsPagerAutomationPeerFactoryMethods
        {
            public static unsafe IntPtr CreateInstance(IObjectReference _obj, global::Microsoft.UI.Xaml.Controls.PipsPager owner, object baseInterface, out IntPtr innerInterface)
            {
                var ThisPtr = _obj.ThisPtr;

                ObjectReferenceValue __owner = default;
                ObjectReferenceValue __baseInterface = default;
                IntPtr __innerInterface = default;
                IntPtr __retval = default;
                try
                {
                    __owner = global::ABI.Microsoft.UI.Xaml.Controls.PipsPager.CreateMarshaler2(owner);
                    __baseInterface = MarshalInspectable<object>.CreateMarshaler2(baseInterface);
                    global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, IntPtr, IntPtr*, IntPtr*, int>**)ThisPtr)[6](ThisPtr, MarshalInspectable<object>.GetAbi(__owner), MarshalInspectable<object>.GetAbi(__baseInterface), &__innerInterface, &__retval));
                    global::System.GC.KeepAlive(_obj);
                    innerInterface = __innerInterface;
                    return __retval;
                }
                finally
                {
                    MarshalInspectable<object>.DisposeMarshaler(__owner);
                    MarshalInspectable<object>.DisposeMarshaler(__baseInterface);
                }
            }
        }

        private static volatile IObjectReference ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IPipsPagerAutomationPeerFactory;
        private static IObjectReference _objRef_global__Microsoft_UI_Xaml_Automation_Peers_IPipsPagerAutomationPeerFactory
        {
            get
            { 
                var factory = ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IPipsPagerAutomationPeerFactory;
                if (factory != null && factory.IsInCurrentContext)
                {
                    return factory;
                }
                else
                {
                    return ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IPipsPagerAutomationPeerFactory = ActivationFactory.Get("Microsoft.UI.Xaml.Automation.Peers.PipsPagerAutomationPeer", global::ABI.Microsoft.UI.Xaml.Automation.Peers.IPipsPagerAutomationPeerFactoryMethods.IID);
                }
            }
        }

        public PipsPagerAutomationPeer(global::Microsoft.UI.Xaml.Controls.PipsPager owner):base(global::WinRT.DerivedComposed.Instance)
        {
            bool isAggregation = this.GetType() != typeof(PipsPagerAutomationPeer);
            object baseInspectable = isAggregation ? this : null;
            IntPtr composed = _IPipsPagerAutomationPeerFactoryMethods.CreateInstance(_objRef_global__Microsoft_UI_Xaml_Automation_Peers_IPipsPagerAutomationPeerFactory, owner, baseInspectable, out IntPtr inner);
            try
            {
                ComWrappersHelper.Init(isAggregation, this, composed, inner, global::ABI.Microsoft.UI.Xaml.Automation.Peers.IPipsPagerAutomationPeerMethods.IID, out _inner);

            }
            finally
            {
                Marshal.Release(inner);   
            }
        }

        public static new PipsPagerAutomationPeer FromAbi(IntPtr thisPtr)
        {
            if (thisPtr == IntPtr.Zero) return null;
            return MarshalInspectable<PipsPagerAutomationPeer>.FromAbi(thisPtr);
        }

        protected internal PipsPagerAutomationPeer(IObjectReference objRef)
            : base(global::WinRT.DerivedComposed.Instance)

        {
            _inner = objRef.As(global::ABI.Microsoft.UI.Xaml.Automation.Peers.IPipsPagerAutomationPeerMethods.IID);

        }


        public static bool operator ==(PipsPagerAutomationPeer x, PipsPagerAutomationPeer y) => (x?.ThisPtr ?? IntPtr.Zero) == (y?.ThisPtr ?? IntPtr.Zero);
        public static bool operator !=(PipsPagerAutomationPeer x, PipsPagerAutomationPeer y) => !(x == y);
        public bool Equals(PipsPagerAutomationPeer other) => this == other;
        public override bool Equals(object obj) => obj is PipsPagerAutomationPeer that && this == that;
        public override int GetHashCode() => ThisPtr.GetHashCode();


        protected PipsPagerAutomationPeer(global::WinRT.DerivedComposed _):base(_)
        {

        }
        bool IWinRTObject.HasUnwrappableNativeObject => this.GetType() == typeof(PipsPagerAutomationPeer);
        IObjectReference IWinRTObject.NativeObject => _inner;

        private struct InterfaceTag<I>{};


        protected override bool IsOverridableInterface(Guid iid) => base.IsOverridableInterface(iid);

        global::System.Runtime.InteropServices.CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(ref Guid iid, out IntPtr ppv)
        {
            ppv = IntPtr.Zero;
            if (IsOverridableInterface(iid) || global::WinRT.Interop.IID.IID_IInspectable == iid)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
            }

            if (((IWinRTObject)this).NativeObject.TryAs(iid, out ppv) >= 0)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.Handled;
            }

            return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
        }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")]
    [global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Automation.Peers.PivotAutomationPeer))]
    [global::ABI.Microsoft.UI.Xaml.Automation.Peers.PivotAutomationPeerRcwFactory]
    [global::WinRT.ProjectedRuntimeClass(typeof(IPivotAutomationPeer))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    public sealed class PivotAutomationPeer : ItemsControlAutomationPeer, global::Microsoft.UI.Xaml.Automation.Provider.ISelectionProvider, global::Microsoft.UI.Xaml.Automation.Provider.IScrollProvider, global::System.Runtime.InteropServices.ICustomQueryInterface, IWinRTObject, IEquatable<PivotAutomationPeer>
    {
        private IntPtr ThisPtr => _inner == null ? (((IWinRTObject)this).NativeObject).ThisPtr : _inner.ThisPtr;

        private readonly IObjectReference _inner = null;



        private IObjectReference _objRef_global__Microsoft_UI_Xaml_Automation_Peers_IPivotAutomationPeer => _inner;
        private volatile IObjectReference ___objRef_global__Microsoft_UI_Xaml_Automation_Provider_ISelectionProvider;
        private IObjectReference Make___objRef_global__Microsoft_UI_Xaml_Automation_Provider_ISelectionProvider()
        {
            global::System.Threading.Interlocked.CompareExchange(ref ___objRef_global__Microsoft_UI_Xaml_Automation_Provider_ISelectionProvider, ((IWinRTObject)this).NativeObject.As<IUnknownVftbl>(global::ABI.Microsoft.UI.Xaml.Automation.Provider.ISelectionProviderMethods.IID), null);
            return ___objRef_global__Microsoft_UI_Xaml_Automation_Provider_ISelectionProvider;
        }
        private IObjectReference _objRef_global__Microsoft_UI_Xaml_Automation_Provider_ISelectionProvider => ___objRef_global__Microsoft_UI_Xaml_Automation_Provider_ISelectionProvider ?? Make___objRef_global__Microsoft_UI_Xaml_Automation_Provider_ISelectionProvider();

        private volatile IObjectReference ___objRef_global__Microsoft_UI_Xaml_Automation_Provider_IScrollProvider;
        private IObjectReference Make___objRef_global__Microsoft_UI_Xaml_Automation_Provider_IScrollProvider()
        {
            global::System.Threading.Interlocked.CompareExchange(ref ___objRef_global__Microsoft_UI_Xaml_Automation_Provider_IScrollProvider, ((IWinRTObject)this).NativeObject.As<IUnknownVftbl>(global::ABI.Microsoft.UI.Xaml.Automation.Provider.IScrollProviderMethods.IID), null);
            return ___objRef_global__Microsoft_UI_Xaml_Automation_Provider_IScrollProvider;
        }
        private IObjectReference _objRef_global__Microsoft_UI_Xaml_Automation_Provider_IScrollProvider => ___objRef_global__Microsoft_UI_Xaml_Automation_Provider_IScrollProvider ?? Make___objRef_global__Microsoft_UI_Xaml_Automation_Provider_IScrollProvider();



        private static class _IPivotAutomationPeerFactoryMethods
        {
            public static unsafe IntPtr CreateInstanceWithOwner(IObjectReference _obj, global::Microsoft.UI.Xaml.Controls.Pivot owner)
            {
                var ThisPtr = _obj.ThisPtr;

                ObjectReferenceValue __owner = default;
                IntPtr __retval = default;
                try
                {
                    __owner = global::ABI.Microsoft.UI.Xaml.Controls.Pivot.CreateMarshaler2(owner);
                    global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, IntPtr*, int>**)ThisPtr)[6](ThisPtr, MarshalInspectable<object>.GetAbi(__owner), &__retval));
                    global::System.GC.KeepAlive(_obj);
                    return __retval;
                }
                finally
                {
                    MarshalInspectable<object>.DisposeMarshaler(__owner);
                }
            }
        }

        private static volatile IObjectReference ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IPivotAutomationPeerFactory;
        private static IObjectReference _objRef_global__Microsoft_UI_Xaml_Automation_Peers_IPivotAutomationPeerFactory
        {
            get
            { 
                var factory = ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IPivotAutomationPeerFactory;
                if (factory != null && factory.IsInCurrentContext)
                {
                    return factory;
                }
                else
                {
                    return ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IPivotAutomationPeerFactory = ActivationFactory.Get("Microsoft.UI.Xaml.Automation.Peers.PivotAutomationPeer", global::ABI.Microsoft.UI.Xaml.Automation.Peers.IPivotAutomationPeerFactoryMethods.IID);
                }
            }
        }

        public PivotAutomationPeer(global::Microsoft.UI.Xaml.Controls.Pivot owner) :base(global::WinRT.DerivedComposed.Instance)
        { 
        IntPtr ptr = (_IPivotAutomationPeerFactoryMethods.CreateInstanceWithOwner(_objRef_global__Microsoft_UI_Xaml_Automation_Peers_IPivotAutomationPeerFactory, owner)); 
        try 
        { 
        _inner = ComWrappersSupport.GetObjectReferenceForInterface(ptr, global::ABI.Microsoft.UI.Xaml.Automation.Peers.IPivotAutomationPeerMethods.IID, false); 

        } 
        finally 
        { 
        MarshalInspectable<object>.DisposeAbi(ptr); 
        }

        ComWrappersSupport.RegisterObjectForInterface(this, ThisPtr);
        ComWrappersHelper.Init(_inner, false);
        }

        public static new PivotAutomationPeer FromAbi(IntPtr thisPtr)
        {
            if (thisPtr == IntPtr.Zero) return null;
            return MarshalInspectable<PivotAutomationPeer>.FromAbi(thisPtr);
        }

        internal PivotAutomationPeer(IObjectReference objRef)
            : base(global::WinRT.DerivedComposed.Instance)

        {
            _inner = objRef.As(global::ABI.Microsoft.UI.Xaml.Automation.Peers.IPivotAutomationPeerMethods.IID);

        }


        public static bool operator ==(PivotAutomationPeer x, PivotAutomationPeer y) => (x?.ThisPtr ?? IntPtr.Zero) == (y?.ThisPtr ?? IntPtr.Zero);
        public static bool operator !=(PivotAutomationPeer x, PivotAutomationPeer y) => !(x == y);
        public bool Equals(PivotAutomationPeer other) => this == other;
        public override bool Equals(object obj) => obj is PivotAutomationPeer that && this == that;
        public override int GetHashCode() => ThisPtr.GetHashCode();


        bool IWinRTObject.HasUnwrappableNativeObject => true;
        IObjectReference IWinRTObject.NativeObject => _inner;

        private struct InterfaceTag<I>{};


        public global::Microsoft.UI.Xaml.Automation.Provider.IRawElementProviderSimple[] GetSelection() => global::ABI.Microsoft.UI.Xaml.Automation.Provider.ISelectionProviderMethods.GetSelection(_objRef_global__Microsoft_UI_Xaml_Automation_Provider_ISelectionProvider);

        public void Scroll(global::Microsoft.UI.Xaml.Automation.ScrollAmount horizontalAmount, global::Microsoft.UI.Xaml.Automation.ScrollAmount verticalAmount) => global::ABI.Microsoft.UI.Xaml.Automation.Provider.IScrollProviderMethods.Scroll(_objRef_global__Microsoft_UI_Xaml_Automation_Provider_IScrollProvider, horizontalAmount, verticalAmount);

        public void SetScrollPercent(double horizontalPercent, double verticalPercent) => global::ABI.Microsoft.UI.Xaml.Automation.Provider.IScrollProviderMethods.SetScrollPercent(_objRef_global__Microsoft_UI_Xaml_Automation_Provider_IScrollProvider, horizontalPercent, verticalPercent);

        public bool CanSelectMultiple => global::ABI.Microsoft.UI.Xaml.Automation.Provider.ISelectionProviderMethods.get_CanSelectMultiple(_objRef_global__Microsoft_UI_Xaml_Automation_Provider_ISelectionProvider);

        public double HorizontalScrollPercent => global::ABI.Microsoft.UI.Xaml.Automation.Provider.IScrollProviderMethods.get_HorizontalScrollPercent(_objRef_global__Microsoft_UI_Xaml_Automation_Provider_IScrollProvider);

        public double HorizontalViewSize => global::ABI.Microsoft.UI.Xaml.Automation.Provider.IScrollProviderMethods.get_HorizontalViewSize(_objRef_global__Microsoft_UI_Xaml_Automation_Provider_IScrollProvider);

        public bool HorizontallyScrollable => global::ABI.Microsoft.UI.Xaml.Automation.Provider.IScrollProviderMethods.get_HorizontallyScrollable(_objRef_global__Microsoft_UI_Xaml_Automation_Provider_IScrollProvider);

        public bool IsSelectionRequired => global::ABI.Microsoft.UI.Xaml.Automation.Provider.ISelectionProviderMethods.get_IsSelectionRequired(_objRef_global__Microsoft_UI_Xaml_Automation_Provider_ISelectionProvider);

        public double VerticalScrollPercent => global::ABI.Microsoft.UI.Xaml.Automation.Provider.IScrollProviderMethods.get_VerticalScrollPercent(_objRef_global__Microsoft_UI_Xaml_Automation_Provider_IScrollProvider);

        public double VerticalViewSize => global::ABI.Microsoft.UI.Xaml.Automation.Provider.IScrollProviderMethods.get_VerticalViewSize(_objRef_global__Microsoft_UI_Xaml_Automation_Provider_IScrollProvider);

        public bool VerticallyScrollable => global::ABI.Microsoft.UI.Xaml.Automation.Provider.IScrollProviderMethods.get_VerticallyScrollable(_objRef_global__Microsoft_UI_Xaml_Automation_Provider_IScrollProvider);

        protected override bool IsOverridableInterface(Guid iid) => base.IsOverridableInterface(iid);

        global::System.Runtime.InteropServices.CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(ref Guid iid, out IntPtr ppv)
        {
            ppv = IntPtr.Zero;
            if (IsOverridableInterface(iid) || global::WinRT.Interop.IID.IID_IInspectable == iid)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
            }

            if (((IWinRTObject)this).NativeObject.TryAs(iid, out ppv) >= 0)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.Handled;
            }

            return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
        }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")]
    [global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Automation.Peers.PivotItemAutomationPeer))]
    [global::ABI.Microsoft.UI.Xaml.Automation.Peers.PivotItemAutomationPeerRcwFactory]
    [global::WinRT.ProjectedRuntimeClass(typeof(IPivotItemAutomationPeer))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    public sealed class PivotItemAutomationPeer : FrameworkElementAutomationPeer, global::System.Runtime.InteropServices.ICustomQueryInterface, IWinRTObject, IEquatable<PivotItemAutomationPeer>
    {
        private IntPtr ThisPtr => _inner == null ? (((IWinRTObject)this).NativeObject).ThisPtr : _inner.ThisPtr;

        private readonly IObjectReference _inner = null;



        private IObjectReference _objRef_global__Microsoft_UI_Xaml_Automation_Peers_IPivotItemAutomationPeer => _inner;


        private static class _IPivotItemAutomationPeerFactoryMethods
        {
            public static unsafe IntPtr CreateInstanceWithOwner(IObjectReference _obj, global::Microsoft.UI.Xaml.Controls.PivotItem owner)
            {
                var ThisPtr = _obj.ThisPtr;

                ObjectReferenceValue __owner = default;
                IntPtr __retval = default;
                try
                {
                    __owner = global::ABI.Microsoft.UI.Xaml.Controls.PivotItem.CreateMarshaler2(owner);
                    global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, IntPtr*, int>**)ThisPtr)[6](ThisPtr, MarshalInspectable<object>.GetAbi(__owner), &__retval));
                    global::System.GC.KeepAlive(_obj);
                    return __retval;
                }
                finally
                {
                    MarshalInspectable<object>.DisposeMarshaler(__owner);
                }
            }
        }

        private static volatile IObjectReference ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IPivotItemAutomationPeerFactory;
        private static IObjectReference _objRef_global__Microsoft_UI_Xaml_Automation_Peers_IPivotItemAutomationPeerFactory
        {
            get
            { 
                var factory = ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IPivotItemAutomationPeerFactory;
                if (factory != null && factory.IsInCurrentContext)
                {
                    return factory;
                }
                else
                {
                    return ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IPivotItemAutomationPeerFactory = ActivationFactory.Get("Microsoft.UI.Xaml.Automation.Peers.PivotItemAutomationPeer", global::ABI.Microsoft.UI.Xaml.Automation.Peers.IPivotItemAutomationPeerFactoryMethods.IID);
                }
            }
        }

        public PivotItemAutomationPeer(global::Microsoft.UI.Xaml.Controls.PivotItem owner) :base(global::WinRT.DerivedComposed.Instance)
        { 
        IntPtr ptr = (_IPivotItemAutomationPeerFactoryMethods.CreateInstanceWithOwner(_objRef_global__Microsoft_UI_Xaml_Automation_Peers_IPivotItemAutomationPeerFactory, owner)); 
        try 
        { 
        _inner = ComWrappersSupport.GetObjectReferenceForInterface(ptr, global::ABI.Microsoft.UI.Xaml.Automation.Peers.IPivotItemAutomationPeerMethods.IID, false); 

        } 
        finally 
        { 
        MarshalInspectable<object>.DisposeAbi(ptr); 
        }

        ComWrappersSupport.RegisterObjectForInterface(this, ThisPtr);
        ComWrappersHelper.Init(_inner, false);
        }

        public static new PivotItemAutomationPeer FromAbi(IntPtr thisPtr)
        {
            if (thisPtr == IntPtr.Zero) return null;
            return MarshalInspectable<PivotItemAutomationPeer>.FromAbi(thisPtr);
        }

        internal PivotItemAutomationPeer(IObjectReference objRef)
            : base(global::WinRT.DerivedComposed.Instance)

        {
            _inner = objRef.As(global::ABI.Microsoft.UI.Xaml.Automation.Peers.IPivotItemAutomationPeerMethods.IID);

        }


        public static bool operator ==(PivotItemAutomationPeer x, PivotItemAutomationPeer y) => (x?.ThisPtr ?? IntPtr.Zero) == (y?.ThisPtr ?? IntPtr.Zero);
        public static bool operator !=(PivotItemAutomationPeer x, PivotItemAutomationPeer y) => !(x == y);
        public bool Equals(PivotItemAutomationPeer other) => this == other;
        public override bool Equals(object obj) => obj is PivotItemAutomationPeer that && this == that;
        public override int GetHashCode() => ThisPtr.GetHashCode();


        bool IWinRTObject.HasUnwrappableNativeObject => true;
        IObjectReference IWinRTObject.NativeObject => _inner;

        private struct InterfaceTag<I>{};


        protected override bool IsOverridableInterface(Guid iid) => base.IsOverridableInterface(iid);

        global::System.Runtime.InteropServices.CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(ref Guid iid, out IntPtr ppv)
        {
            ppv = IntPtr.Zero;
            if (IsOverridableInterface(iid) || global::WinRT.Interop.IID.IID_IInspectable == iid)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
            }

            if (((IWinRTObject)this).NativeObject.TryAs(iid, out ppv) >= 0)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.Handled;
            }

            return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
        }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")]
    [global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Automation.Peers.PivotItemDataAutomationPeer))]
    [global::ABI.Microsoft.UI.Xaml.Automation.Peers.PivotItemDataAutomationPeerRcwFactory]
    [global::WinRT.ProjectedRuntimeClass(typeof(IPivotItemDataAutomationPeer))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    public sealed class PivotItemDataAutomationPeer : ItemAutomationPeer, global::Microsoft.UI.Xaml.Automation.Provider.IScrollItemProvider, global::Microsoft.UI.Xaml.Automation.Provider.ISelectionItemProvider, global::Microsoft.UI.Xaml.Automation.Provider.IVirtualizedItemProvider, global::System.Runtime.InteropServices.ICustomQueryInterface, IWinRTObject, IEquatable<PivotItemDataAutomationPeer>
    {
        private IntPtr ThisPtr => _inner == null ? (((IWinRTObject)this).NativeObject).ThisPtr : _inner.ThisPtr;

        private readonly IObjectReference _inner = null;



        private IObjectReference _objRef_global__Microsoft_UI_Xaml_Automation_Peers_IPivotItemDataAutomationPeer => _inner;
        private volatile IObjectReference ___objRef_global__Microsoft_UI_Xaml_Automation_Provider_IScrollItemProvider;
        private IObjectReference Make___objRef_global__Microsoft_UI_Xaml_Automation_Provider_IScrollItemProvider()
        {
            global::System.Threading.Interlocked.CompareExchange(ref ___objRef_global__Microsoft_UI_Xaml_Automation_Provider_IScrollItemProvider, ((IWinRTObject)this).NativeObject.As<IUnknownVftbl>(global::ABI.Microsoft.UI.Xaml.Automation.Provider.IScrollItemProviderMethods.IID), null);
            return ___objRef_global__Microsoft_UI_Xaml_Automation_Provider_IScrollItemProvider;
        }
        private IObjectReference _objRef_global__Microsoft_UI_Xaml_Automation_Provider_IScrollItemProvider => ___objRef_global__Microsoft_UI_Xaml_Automation_Provider_IScrollItemProvider ?? Make___objRef_global__Microsoft_UI_Xaml_Automation_Provider_IScrollItemProvider();

        private volatile IObjectReference ___objRef_global__Microsoft_UI_Xaml_Automation_Provider_ISelectionItemProvider;
        private IObjectReference Make___objRef_global__Microsoft_UI_Xaml_Automation_Provider_ISelectionItemProvider()
        {
            global::System.Threading.Interlocked.CompareExchange(ref ___objRef_global__Microsoft_UI_Xaml_Automation_Provider_ISelectionItemProvider, ((IWinRTObject)this).NativeObject.As<IUnknownVftbl>(global::ABI.Microsoft.UI.Xaml.Automation.Provider.ISelectionItemProviderMethods.IID), null);
            return ___objRef_global__Microsoft_UI_Xaml_Automation_Provider_ISelectionItemProvider;
        }
        private IObjectReference _objRef_global__Microsoft_UI_Xaml_Automation_Provider_ISelectionItemProvider => ___objRef_global__Microsoft_UI_Xaml_Automation_Provider_ISelectionItemProvider ?? Make___objRef_global__Microsoft_UI_Xaml_Automation_Provider_ISelectionItemProvider();

        private volatile IObjectReference ___objRef_global__Microsoft_UI_Xaml_Automation_Provider_IVirtualizedItemProvider;
        private IObjectReference Make___objRef_global__Microsoft_UI_Xaml_Automation_Provider_IVirtualizedItemProvider()
        {
            global::System.Threading.Interlocked.CompareExchange(ref ___objRef_global__Microsoft_UI_Xaml_Automation_Provider_IVirtualizedItemProvider, ((IWinRTObject)this).NativeObject.As<IUnknownVftbl>(global::ABI.Microsoft.UI.Xaml.Automation.Provider.IVirtualizedItemProviderMethods.IID), null);
            return ___objRef_global__Microsoft_UI_Xaml_Automation_Provider_IVirtualizedItemProvider;
        }
        private IObjectReference _objRef_global__Microsoft_UI_Xaml_Automation_Provider_IVirtualizedItemProvider => ___objRef_global__Microsoft_UI_Xaml_Automation_Provider_IVirtualizedItemProvider ?? Make___objRef_global__Microsoft_UI_Xaml_Automation_Provider_IVirtualizedItemProvider();



        private static class _IPivotItemDataAutomationPeerFactoryMethods
        {
            public static unsafe IntPtr CreateInstanceWithParentAndItem(IObjectReference _obj, object item, PivotAutomationPeer parent)
            {
                var ThisPtr = _obj.ThisPtr;

                ObjectReferenceValue __item = default;
                ObjectReferenceValue __parent = default;
                IntPtr __retval = default;
                try
                {
                    __item = MarshalInspectable<object>.CreateMarshaler2(item);
                    __parent = global::ABI.Microsoft.UI.Xaml.Automation.Peers.PivotAutomationPeer.CreateMarshaler2(parent);
                    global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, IntPtr, IntPtr*, int>**)ThisPtr)[6](ThisPtr, MarshalInspectable<object>.GetAbi(__item), MarshalInspectable<object>.GetAbi(__parent), &__retval));
                    global::System.GC.KeepAlive(_obj);
                    return __retval;
                }
                finally
                {
                    MarshalInspectable<object>.DisposeMarshaler(__item);
                    MarshalInspectable<object>.DisposeMarshaler(__parent);
                }
            }
        }

        private static volatile IObjectReference ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IPivotItemDataAutomationPeerFactory;
        private static IObjectReference _objRef_global__Microsoft_UI_Xaml_Automation_Peers_IPivotItemDataAutomationPeerFactory
        {
            get
            { 
                var factory = ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IPivotItemDataAutomationPeerFactory;
                if (factory != null && factory.IsInCurrentContext)
                {
                    return factory;
                }
                else
                {
                    return ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IPivotItemDataAutomationPeerFactory = ActivationFactory.Get("Microsoft.UI.Xaml.Automation.Peers.PivotItemDataAutomationPeer", global::ABI.Microsoft.UI.Xaml.Automation.Peers.IPivotItemDataAutomationPeerFactoryMethods.IID);
                }
            }
        }

        public PivotItemDataAutomationPeer(object item, PivotAutomationPeer parent) :base(global::WinRT.DerivedComposed.Instance)
        { 
        IntPtr ptr = (_IPivotItemDataAutomationPeerFactoryMethods.CreateInstanceWithParentAndItem(_objRef_global__Microsoft_UI_Xaml_Automation_Peers_IPivotItemDataAutomationPeerFactory, item, parent)); 
        try 
        { 
        _inner = ComWrappersSupport.GetObjectReferenceForInterface(ptr, global::ABI.Microsoft.UI.Xaml.Automation.Peers.IPivotItemDataAutomationPeerMethods.IID, false); 

        } 
        finally 
        { 
        MarshalInspectable<object>.DisposeAbi(ptr); 
        }

        ComWrappersSupport.RegisterObjectForInterface(this, ThisPtr);
        ComWrappersHelper.Init(_inner, false);
        }

        public static new PivotItemDataAutomationPeer FromAbi(IntPtr thisPtr)
        {
            if (thisPtr == IntPtr.Zero) return null;
            return MarshalInspectable<PivotItemDataAutomationPeer>.FromAbi(thisPtr);
        }

        internal PivotItemDataAutomationPeer(IObjectReference objRef)
            : base(global::WinRT.DerivedComposed.Instance)

        {
            _inner = objRef.As(global::ABI.Microsoft.UI.Xaml.Automation.Peers.IPivotItemDataAutomationPeerMethods.IID);

        }


        public static bool operator ==(PivotItemDataAutomationPeer x, PivotItemDataAutomationPeer y) => (x?.ThisPtr ?? IntPtr.Zero) == (y?.ThisPtr ?? IntPtr.Zero);
        public static bool operator !=(PivotItemDataAutomationPeer x, PivotItemDataAutomationPeer y) => !(x == y);
        public bool Equals(PivotItemDataAutomationPeer other) => this == other;
        public override bool Equals(object obj) => obj is PivotItemDataAutomationPeer that && this == that;
        public override int GetHashCode() => ThisPtr.GetHashCode();


        bool IWinRTObject.HasUnwrappableNativeObject => true;
        IObjectReference IWinRTObject.NativeObject => _inner;

        private struct InterfaceTag<I>{};


        public void ScrollIntoView() => global::ABI.Microsoft.UI.Xaml.Automation.Provider.IScrollItemProviderMethods.ScrollIntoView(_objRef_global__Microsoft_UI_Xaml_Automation_Provider_IScrollItemProvider);

        public void AddToSelection() => global::ABI.Microsoft.UI.Xaml.Automation.Provider.ISelectionItemProviderMethods.AddToSelection(_objRef_global__Microsoft_UI_Xaml_Automation_Provider_ISelectionItemProvider);

        public void RemoveFromSelection() => global::ABI.Microsoft.UI.Xaml.Automation.Provider.ISelectionItemProviderMethods.RemoveFromSelection(_objRef_global__Microsoft_UI_Xaml_Automation_Provider_ISelectionItemProvider);

        public void Select() => global::ABI.Microsoft.UI.Xaml.Automation.Provider.ISelectionItemProviderMethods.Select(_objRef_global__Microsoft_UI_Xaml_Automation_Provider_ISelectionItemProvider);

        public void Realize() => global::ABI.Microsoft.UI.Xaml.Automation.Provider.IVirtualizedItemProviderMethods.Realize(_objRef_global__Microsoft_UI_Xaml_Automation_Provider_IVirtualizedItemProvider);

        public bool IsSelected => global::ABI.Microsoft.UI.Xaml.Automation.Provider.ISelectionItemProviderMethods.get_IsSelected(_objRef_global__Microsoft_UI_Xaml_Automation_Provider_ISelectionItemProvider);

        public global::Microsoft.UI.Xaml.Automation.Provider.IRawElementProviderSimple SelectionContainer => global::ABI.Microsoft.UI.Xaml.Automation.Provider.ISelectionItemProviderMethods.get_SelectionContainer(_objRef_global__Microsoft_UI_Xaml_Automation_Provider_ISelectionItemProvider);

        protected override bool IsOverridableInterface(Guid iid) => base.IsOverridableInterface(iid);

        global::System.Runtime.InteropServices.CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(ref Guid iid, out IntPtr ppv)
        {
            ppv = IntPtr.Zero;
            if (IsOverridableInterface(iid) || global::WinRT.Interop.IID.IID_IInspectable == iid)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
            }

            if (((IWinRTObject)this).NativeObject.TryAs(iid, out ppv) >= 0)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.Handled;
            }

            return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
        }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")]
    [global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Automation.Peers.ProgressBarAutomationPeer))]
    [global::ABI.Microsoft.UI.Xaml.Automation.Peers.ProgressBarAutomationPeerRcwFactory]
    [global::WinRT.ProjectedRuntimeClass(typeof(IProgressBarAutomationPeer))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.XamlContract), 65536u)]
    public class ProgressBarAutomationPeer : RangeBaseAutomationPeer, global::System.Runtime.InteropServices.ICustomQueryInterface, IWinRTObject, IEquatable<ProgressBarAutomationPeer>
    {
        private IntPtr ThisPtr => _inner == null ? (((IWinRTObject)this).NativeObject).ThisPtr : _inner.ThisPtr;

        private readonly IObjectReference _inner = null;




        private volatile IObjectReference ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IProgressBarAutomationPeer;
        private IObjectReference Make___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IProgressBarAutomationPeer()
        {
            global::System.Threading.Interlocked.CompareExchange(ref ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IProgressBarAutomationPeer, ((IWinRTObject)this).NativeObject.As<IUnknownVftbl>(global::ABI.Microsoft.UI.Xaml.Automation.Peers.IProgressBarAutomationPeerMethods.IID), null);
            return ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IProgressBarAutomationPeer;
        }
        private IObjectReference _objRef_global__Microsoft_UI_Xaml_Automation_Peers_IProgressBarAutomationPeer => ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IProgressBarAutomationPeer ?? Make___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IProgressBarAutomationPeer();



        private static class _IProgressBarAutomationPeerFactoryMethods
        {
            public static unsafe IntPtr CreateInstance(IObjectReference _obj, global::Microsoft.UI.Xaml.Controls.ProgressBar owner, object baseInterface, out IntPtr innerInterface)
            {
                var ThisPtr = _obj.ThisPtr;

                ObjectReferenceValue __owner = default;
                ObjectReferenceValue __baseInterface = default;
                IntPtr __innerInterface = default;
                IntPtr __retval = default;
                try
                {
                    __owner = global::ABI.Microsoft.UI.Xaml.Controls.ProgressBar.CreateMarshaler2(owner);
                    __baseInterface = MarshalInspectable<object>.CreateMarshaler2(baseInterface);
                    global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, IntPtr, IntPtr*, IntPtr*, int>**)ThisPtr)[6](ThisPtr, MarshalInspectable<object>.GetAbi(__owner), MarshalInspectable<object>.GetAbi(__baseInterface), &__innerInterface, &__retval));
                    global::System.GC.KeepAlive(_obj);
                    innerInterface = __innerInterface;
                    return __retval;
                }
                finally
                {
                    MarshalInspectable<object>.DisposeMarshaler(__owner);
                    MarshalInspectable<object>.DisposeMarshaler(__baseInterface);
                }
            }
        }

        private static volatile IObjectReference ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IProgressBarAutomationPeerFactory;
        private static IObjectReference _objRef_global__Microsoft_UI_Xaml_Automation_Peers_IProgressBarAutomationPeerFactory
        {
            get
            { 
                var factory = ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IProgressBarAutomationPeerFactory;
                if (factory != null && factory.IsInCurrentContext)
                {
                    return factory;
                }
                else
                {
                    return ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IProgressBarAutomationPeerFactory = ActivationFactory.Get("Microsoft.UI.Xaml.Automation.Peers.ProgressBarAutomationPeer", global::ABI.Microsoft.UI.Xaml.Automation.Peers.IProgressBarAutomationPeerFactoryMethods.IID);
                }
            }
        }

        public ProgressBarAutomationPeer(global::Microsoft.UI.Xaml.Controls.ProgressBar owner):base(global::WinRT.DerivedComposed.Instance)
        {
            bool isAggregation = this.GetType() != typeof(ProgressBarAutomationPeer);
            object baseInspectable = isAggregation ? this : null;
            IntPtr composed = _IProgressBarAutomationPeerFactoryMethods.CreateInstance(_objRef_global__Microsoft_UI_Xaml_Automation_Peers_IProgressBarAutomationPeerFactory, owner, baseInspectable, out IntPtr inner);
            try
            {
                ComWrappersHelper.Init(isAggregation, this, composed, inner, global::ABI.Microsoft.UI.Xaml.Automation.Peers.IProgressBarAutomationPeerMethods.IID, out _inner);

            }
            finally
            {
                Marshal.Release(inner);   
            }
        }

        public static new ProgressBarAutomationPeer FromAbi(IntPtr thisPtr)
        {
            if (thisPtr == IntPtr.Zero) return null;
            return MarshalInspectable<ProgressBarAutomationPeer>.FromAbi(thisPtr);
        }

        protected internal ProgressBarAutomationPeer(IObjectReference objRef)
            : base(global::WinRT.DerivedComposed.Instance)

        {
            _inner = objRef.As(global::ABI.Microsoft.UI.Xaml.Automation.Peers.IProgressBarAutomationPeerMethods.IID);

        }


        public static bool operator ==(ProgressBarAutomationPeer x, ProgressBarAutomationPeer y) => (x?.ThisPtr ?? IntPtr.Zero) == (y?.ThisPtr ?? IntPtr.Zero);
        public static bool operator !=(ProgressBarAutomationPeer x, ProgressBarAutomationPeer y) => !(x == y);
        public bool Equals(ProgressBarAutomationPeer other) => this == other;
        public override bool Equals(object obj) => obj is ProgressBarAutomationPeer that && this == that;
        public override int GetHashCode() => ThisPtr.GetHashCode();


        protected ProgressBarAutomationPeer(global::WinRT.DerivedComposed _):base(_)
        {

        }
        bool IWinRTObject.HasUnwrappableNativeObject => this.GetType() == typeof(ProgressBarAutomationPeer);
        IObjectReference IWinRTObject.NativeObject => _inner;

        private struct InterfaceTag<I>{};


        protected override bool IsOverridableInterface(Guid iid) => base.IsOverridableInterface(iid);

        global::System.Runtime.InteropServices.CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(ref Guid iid, out IntPtr ppv)
        {
            ppv = IntPtr.Zero;
            if (IsOverridableInterface(iid) || global::WinRT.Interop.IID.IID_IInspectable == iid)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
            }

            if (((IWinRTObject)this).NativeObject.TryAs(iid, out ppv) >= 0)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.Handled;
            }

            return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
        }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")]
    [global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Automation.Peers.ProgressRingAutomationPeer))]
    [global::ABI.Microsoft.UI.Xaml.Automation.Peers.ProgressRingAutomationPeerRcwFactory]
    [global::WinRT.ProjectedRuntimeClass(typeof(IProgressRingAutomationPeer))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.XamlContract), 65536u)]
    public class ProgressRingAutomationPeer : FrameworkElementAutomationPeer, global::Microsoft.UI.Xaml.Automation.Provider.IRangeValueProvider, global::System.Runtime.InteropServices.ICustomQueryInterface, IWinRTObject, IEquatable<ProgressRingAutomationPeer>
    {
        private IntPtr ThisPtr => _inner == null ? (((IWinRTObject)this).NativeObject).ThisPtr : _inner.ThisPtr;

        private readonly IObjectReference _inner = null;




        private volatile IObjectReference ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IProgressRingAutomationPeer;
        private IObjectReference Make___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IProgressRingAutomationPeer()
        {
            global::System.Threading.Interlocked.CompareExchange(ref ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IProgressRingAutomationPeer, ((IWinRTObject)this).NativeObject.As<IUnknownVftbl>(global::ABI.Microsoft.UI.Xaml.Automation.Peers.IProgressRingAutomationPeerMethods.IID), null);
            return ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IProgressRingAutomationPeer;
        }
        private IObjectReference _objRef_global__Microsoft_UI_Xaml_Automation_Peers_IProgressRingAutomationPeer => ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IProgressRingAutomationPeer ?? Make___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IProgressRingAutomationPeer();

        private volatile IObjectReference ___objRef_global__Microsoft_UI_Xaml_Automation_Provider_IRangeValueProvider;
        private IObjectReference Make___objRef_global__Microsoft_UI_Xaml_Automation_Provider_IRangeValueProvider()
        {
            global::System.Threading.Interlocked.CompareExchange(ref ___objRef_global__Microsoft_UI_Xaml_Automation_Provider_IRangeValueProvider, ((IWinRTObject)this).NativeObject.As<IUnknownVftbl>(global::ABI.Microsoft.UI.Xaml.Automation.Provider.IRangeValueProviderMethods.IID), null);
            return ___objRef_global__Microsoft_UI_Xaml_Automation_Provider_IRangeValueProvider;
        }
        private IObjectReference _objRef_global__Microsoft_UI_Xaml_Automation_Provider_IRangeValueProvider => ___objRef_global__Microsoft_UI_Xaml_Automation_Provider_IRangeValueProvider ?? Make___objRef_global__Microsoft_UI_Xaml_Automation_Provider_IRangeValueProvider();



        private static class _IProgressRingAutomationPeerFactoryMethods
        {
            public static unsafe IntPtr CreateInstance(IObjectReference _obj, global::Microsoft.UI.Xaml.Controls.ProgressRing owner, object baseInterface, out IntPtr innerInterface)
            {
                var ThisPtr = _obj.ThisPtr;

                ObjectReferenceValue __owner = default;
                ObjectReferenceValue __baseInterface = default;
                IntPtr __innerInterface = default;
                IntPtr __retval = default;
                try
                {
                    __owner = global::ABI.Microsoft.UI.Xaml.Controls.ProgressRing.CreateMarshaler2(owner);
                    __baseInterface = MarshalInspectable<object>.CreateMarshaler2(baseInterface);
                    global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, IntPtr, IntPtr*, IntPtr*, int>**)ThisPtr)[6](ThisPtr, MarshalInspectable<object>.GetAbi(__owner), MarshalInspectable<object>.GetAbi(__baseInterface), &__innerInterface, &__retval));
                    global::System.GC.KeepAlive(_obj);
                    innerInterface = __innerInterface;
                    return __retval;
                }
                finally
                {
                    MarshalInspectable<object>.DisposeMarshaler(__owner);
                    MarshalInspectable<object>.DisposeMarshaler(__baseInterface);
                }
            }
        }

        private static volatile IObjectReference ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IProgressRingAutomationPeerFactory;
        private static IObjectReference _objRef_global__Microsoft_UI_Xaml_Automation_Peers_IProgressRingAutomationPeerFactory
        {
            get
            { 
                var factory = ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IProgressRingAutomationPeerFactory;
                if (factory != null && factory.IsInCurrentContext)
                {
                    return factory;
                }
                else
                {
                    return ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IProgressRingAutomationPeerFactory = ActivationFactory.Get("Microsoft.UI.Xaml.Automation.Peers.ProgressRingAutomationPeer", global::ABI.Microsoft.UI.Xaml.Automation.Peers.IProgressRingAutomationPeerFactoryMethods.IID);
                }
            }
        }

        public ProgressRingAutomationPeer(global::Microsoft.UI.Xaml.Controls.ProgressRing owner):base(global::WinRT.DerivedComposed.Instance)
        {
            bool isAggregation = this.GetType() != typeof(ProgressRingAutomationPeer);
            object baseInspectable = isAggregation ? this : null;
            IntPtr composed = _IProgressRingAutomationPeerFactoryMethods.CreateInstance(_objRef_global__Microsoft_UI_Xaml_Automation_Peers_IProgressRingAutomationPeerFactory, owner, baseInspectable, out IntPtr inner);
            try
            {
                ComWrappersHelper.Init(isAggregation, this, composed, inner, global::ABI.Microsoft.UI.Xaml.Automation.Peers.IProgressRingAutomationPeerMethods.IID, out _inner);

            }
            finally
            {
                Marshal.Release(inner);   
            }
        }

        public static new ProgressRingAutomationPeer FromAbi(IntPtr thisPtr)
        {
            if (thisPtr == IntPtr.Zero) return null;
            return MarshalInspectable<ProgressRingAutomationPeer>.FromAbi(thisPtr);
        }

        protected internal ProgressRingAutomationPeer(IObjectReference objRef)
            : base(global::WinRT.DerivedComposed.Instance)

        {
            _inner = objRef.As(global::ABI.Microsoft.UI.Xaml.Automation.Peers.IProgressRingAutomationPeerMethods.IID);

        }


        public static bool operator ==(ProgressRingAutomationPeer x, ProgressRingAutomationPeer y) => (x?.ThisPtr ?? IntPtr.Zero) == (y?.ThisPtr ?? IntPtr.Zero);
        public static bool operator !=(ProgressRingAutomationPeer x, ProgressRingAutomationPeer y) => !(x == y);
        public bool Equals(ProgressRingAutomationPeer other) => this == other;
        public override bool Equals(object obj) => obj is ProgressRingAutomationPeer that && this == that;
        public override int GetHashCode() => ThisPtr.GetHashCode();


        protected ProgressRingAutomationPeer(global::WinRT.DerivedComposed _):base(_)
        {

        }
        bool IWinRTObject.HasUnwrappableNativeObject => this.GetType() == typeof(ProgressRingAutomationPeer);
        IObjectReference IWinRTObject.NativeObject => _inner;

        private struct InterfaceTag<I>{};


        public void SetValue(double value) => global::ABI.Microsoft.UI.Xaml.Automation.Provider.IRangeValueProviderMethods.SetValue(_objRef_global__Microsoft_UI_Xaml_Automation_Provider_IRangeValueProvider, value);

        public bool IsReadOnly => global::ABI.Microsoft.UI.Xaml.Automation.Provider.IRangeValueProviderMethods.get_IsReadOnly(_objRef_global__Microsoft_UI_Xaml_Automation_Provider_IRangeValueProvider);

        public double LargeChange => global::ABI.Microsoft.UI.Xaml.Automation.Provider.IRangeValueProviderMethods.get_LargeChange(_objRef_global__Microsoft_UI_Xaml_Automation_Provider_IRangeValueProvider);

        public double Maximum => global::ABI.Microsoft.UI.Xaml.Automation.Provider.IRangeValueProviderMethods.get_Maximum(_objRef_global__Microsoft_UI_Xaml_Automation_Provider_IRangeValueProvider);

        public double Minimum => global::ABI.Microsoft.UI.Xaml.Automation.Provider.IRangeValueProviderMethods.get_Minimum(_objRef_global__Microsoft_UI_Xaml_Automation_Provider_IRangeValueProvider);

        public double SmallChange => global::ABI.Microsoft.UI.Xaml.Automation.Provider.IRangeValueProviderMethods.get_SmallChange(_objRef_global__Microsoft_UI_Xaml_Automation_Provider_IRangeValueProvider);

        public double Value => global::ABI.Microsoft.UI.Xaml.Automation.Provider.IRangeValueProviderMethods.get_Value(_objRef_global__Microsoft_UI_Xaml_Automation_Provider_IRangeValueProvider);

        protected override bool IsOverridableInterface(Guid iid) => base.IsOverridableInterface(iid);

        global::System.Runtime.InteropServices.CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(ref Guid iid, out IntPtr ppv)
        {
            ppv = IntPtr.Zero;
            if (IsOverridableInterface(iid) || global::WinRT.Interop.IID.IID_IInspectable == iid)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
            }

            if (((IWinRTObject)this).NativeObject.TryAs(iid, out ppv) >= 0)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.Handled;
            }

            return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
        }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")]
    [global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Automation.Peers.RadioButtonAutomationPeer))]
    [global::ABI.Microsoft.UI.Xaml.Automation.Peers.RadioButtonAutomationPeerRcwFactory]
    [global::WinRT.ProjectedRuntimeClass(typeof(IRadioButtonAutomationPeer))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    public class RadioButtonAutomationPeer : ToggleButtonAutomationPeer, global::Microsoft.UI.Xaml.Automation.Provider.ISelectionItemProvider, global::System.Runtime.InteropServices.ICustomQueryInterface, IWinRTObject, IEquatable<RadioButtonAutomationPeer>
    {
        private IntPtr ThisPtr => _inner == null ? (((IWinRTObject)this).NativeObject).ThisPtr : _inner.ThisPtr;

        private readonly IObjectReference _inner = null;




        private volatile IObjectReference ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IRadioButtonAutomationPeer;
        private IObjectReference Make___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IRadioButtonAutomationPeer()
        {
            global::System.Threading.Interlocked.CompareExchange(ref ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IRadioButtonAutomationPeer, ((IWinRTObject)this).NativeObject.As<IUnknownVftbl>(global::ABI.Microsoft.UI.Xaml.Automation.Peers.IRadioButtonAutomationPeerMethods.IID), null);
            return ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IRadioButtonAutomationPeer;
        }
        private IObjectReference _objRef_global__Microsoft_UI_Xaml_Automation_Peers_IRadioButtonAutomationPeer => ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IRadioButtonAutomationPeer ?? Make___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IRadioButtonAutomationPeer();

        private volatile IObjectReference ___objRef_global__Microsoft_UI_Xaml_Automation_Provider_ISelectionItemProvider;
        private IObjectReference Make___objRef_global__Microsoft_UI_Xaml_Automation_Provider_ISelectionItemProvider()
        {
            global::System.Threading.Interlocked.CompareExchange(ref ___objRef_global__Microsoft_UI_Xaml_Automation_Provider_ISelectionItemProvider, ((IWinRTObject)this).NativeObject.As<IUnknownVftbl>(global::ABI.Microsoft.UI.Xaml.Automation.Provider.ISelectionItemProviderMethods.IID), null);
            return ___objRef_global__Microsoft_UI_Xaml_Automation_Provider_ISelectionItemProvider;
        }
        private IObjectReference _objRef_global__Microsoft_UI_Xaml_Automation_Provider_ISelectionItemProvider => ___objRef_global__Microsoft_UI_Xaml_Automation_Provider_ISelectionItemProvider ?? Make___objRef_global__Microsoft_UI_Xaml_Automation_Provider_ISelectionItemProvider();



        private static class _IRadioButtonAutomationPeerFactoryMethods
        {
            public static unsafe IntPtr CreateInstanceWithOwner(IObjectReference _obj, global::Microsoft.UI.Xaml.Controls.RadioButton owner, object baseInterface, out IntPtr innerInterface)
            {
                var ThisPtr = _obj.ThisPtr;

                ObjectReferenceValue __owner = default;
                ObjectReferenceValue __baseInterface = default;
                IntPtr __innerInterface = default;
                IntPtr __retval = default;
                try
                {
                    __owner = global::ABI.Microsoft.UI.Xaml.Controls.RadioButton.CreateMarshaler2(owner);
                    __baseInterface = MarshalInspectable<object>.CreateMarshaler2(baseInterface);
                    global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, IntPtr, IntPtr*, IntPtr*, int>**)ThisPtr)[6](ThisPtr, MarshalInspectable<object>.GetAbi(__owner), MarshalInspectable<object>.GetAbi(__baseInterface), &__innerInterface, &__retval));
                    global::System.GC.KeepAlive(_obj);
                    innerInterface = __innerInterface;
                    return __retval;
                }
                finally
                {
                    MarshalInspectable<object>.DisposeMarshaler(__owner);
                    MarshalInspectable<object>.DisposeMarshaler(__baseInterface);
                }
            }
        }

        private static volatile IObjectReference ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IRadioButtonAutomationPeerFactory;
        private static IObjectReference _objRef_global__Microsoft_UI_Xaml_Automation_Peers_IRadioButtonAutomationPeerFactory
        {
            get
            { 
                var factory = ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IRadioButtonAutomationPeerFactory;
                if (factory != null && factory.IsInCurrentContext)
                {
                    return factory;
                }
                else
                {
                    return ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IRadioButtonAutomationPeerFactory = ActivationFactory.Get("Microsoft.UI.Xaml.Automation.Peers.RadioButtonAutomationPeer", global::ABI.Microsoft.UI.Xaml.Automation.Peers.IRadioButtonAutomationPeerFactoryMethods.IID);
                }
            }
        }

        public RadioButtonAutomationPeer(global::Microsoft.UI.Xaml.Controls.RadioButton owner):base(global::WinRT.DerivedComposed.Instance)
        {
            bool isAggregation = this.GetType() != typeof(RadioButtonAutomationPeer);
            object baseInspectable = isAggregation ? this : null;
            IntPtr composed = _IRadioButtonAutomationPeerFactoryMethods.CreateInstanceWithOwner(_objRef_global__Microsoft_UI_Xaml_Automation_Peers_IRadioButtonAutomationPeerFactory, owner, baseInspectable, out IntPtr inner);
            try
            {
                ComWrappersHelper.Init(isAggregation, this, composed, inner, global::ABI.Microsoft.UI.Xaml.Automation.Peers.IRadioButtonAutomationPeerMethods.IID, out _inner);

            }
            finally
            {
                Marshal.Release(inner);   
            }
        }

        public static new RadioButtonAutomationPeer FromAbi(IntPtr thisPtr)
        {
            if (thisPtr == IntPtr.Zero) return null;
            return MarshalInspectable<RadioButtonAutomationPeer>.FromAbi(thisPtr);
        }

        protected internal RadioButtonAutomationPeer(IObjectReference objRef)
            : base(global::WinRT.DerivedComposed.Instance)

        {
            _inner = objRef.As(global::ABI.Microsoft.UI.Xaml.Automation.Peers.IRadioButtonAutomationPeerMethods.IID);

        }


        public static bool operator ==(RadioButtonAutomationPeer x, RadioButtonAutomationPeer y) => (x?.ThisPtr ?? IntPtr.Zero) == (y?.ThisPtr ?? IntPtr.Zero);
        public static bool operator !=(RadioButtonAutomationPeer x, RadioButtonAutomationPeer y) => !(x == y);
        public bool Equals(RadioButtonAutomationPeer other) => this == other;
        public override bool Equals(object obj) => obj is RadioButtonAutomationPeer that && this == that;
        public override int GetHashCode() => ThisPtr.GetHashCode();


        protected RadioButtonAutomationPeer(global::WinRT.DerivedComposed _):base(_)
        {

        }
        bool IWinRTObject.HasUnwrappableNativeObject => this.GetType() == typeof(RadioButtonAutomationPeer);
        IObjectReference IWinRTObject.NativeObject => _inner;

        private struct InterfaceTag<I>{};


        public void AddToSelection() => global::ABI.Microsoft.UI.Xaml.Automation.Provider.ISelectionItemProviderMethods.AddToSelection(_objRef_global__Microsoft_UI_Xaml_Automation_Provider_ISelectionItemProvider);

        public void RemoveFromSelection() => global::ABI.Microsoft.UI.Xaml.Automation.Provider.ISelectionItemProviderMethods.RemoveFromSelection(_objRef_global__Microsoft_UI_Xaml_Automation_Provider_ISelectionItemProvider);

        public void Select() => global::ABI.Microsoft.UI.Xaml.Automation.Provider.ISelectionItemProviderMethods.Select(_objRef_global__Microsoft_UI_Xaml_Automation_Provider_ISelectionItemProvider);

        public bool IsSelected => global::ABI.Microsoft.UI.Xaml.Automation.Provider.ISelectionItemProviderMethods.get_IsSelected(_objRef_global__Microsoft_UI_Xaml_Automation_Provider_ISelectionItemProvider);

        public global::Microsoft.UI.Xaml.Automation.Provider.IRawElementProviderSimple SelectionContainer => global::ABI.Microsoft.UI.Xaml.Automation.Provider.ISelectionItemProviderMethods.get_SelectionContainer(_objRef_global__Microsoft_UI_Xaml_Automation_Provider_ISelectionItemProvider);

        protected override bool IsOverridableInterface(Guid iid) => base.IsOverridableInterface(iid);

        global::System.Runtime.InteropServices.CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(ref Guid iid, out IntPtr ppv)
        {
            ppv = IntPtr.Zero;
            if (IsOverridableInterface(iid) || global::WinRT.Interop.IID.IID_IInspectable == iid)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
            }

            if (((IWinRTObject)this).NativeObject.TryAs(iid, out ppv) >= 0)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.Handled;
            }

            return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
        }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")]
    [global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Automation.Peers.RadioButtonsAutomationPeer))]
    [global::ABI.Microsoft.UI.Xaml.Automation.Peers.RadioButtonsAutomationPeerRcwFactory]
    [global::WinRT.ProjectedRuntimeClass(typeof(IRadioButtonsAutomationPeer))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.XamlContract), 65536u)]
    public class RadioButtonsAutomationPeer : FrameworkElementAutomationPeer, global::System.Runtime.InteropServices.ICustomQueryInterface, IWinRTObject, IEquatable<RadioButtonsAutomationPeer>
    {
        private IntPtr ThisPtr => _inner == null ? (((IWinRTObject)this).NativeObject).ThisPtr : _inner.ThisPtr;

        private readonly IObjectReference _inner = null;




        private volatile IObjectReference ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IRadioButtonsAutomationPeer;
        private IObjectReference Make___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IRadioButtonsAutomationPeer()
        {
            global::System.Threading.Interlocked.CompareExchange(ref ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IRadioButtonsAutomationPeer, ((IWinRTObject)this).NativeObject.As<IUnknownVftbl>(global::ABI.Microsoft.UI.Xaml.Automation.Peers.IRadioButtonsAutomationPeerMethods.IID), null);
            return ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IRadioButtonsAutomationPeer;
        }
        private IObjectReference _objRef_global__Microsoft_UI_Xaml_Automation_Peers_IRadioButtonsAutomationPeer => ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IRadioButtonsAutomationPeer ?? Make___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IRadioButtonsAutomationPeer();



        private static class _IRadioButtonsAutomationPeerFactoryMethods
        {
            public static unsafe IntPtr CreateInstance(IObjectReference _obj, global::Microsoft.UI.Xaml.Controls.RadioButtons owner, object baseInterface, out IntPtr innerInterface)
            {
                var ThisPtr = _obj.ThisPtr;

                ObjectReferenceValue __owner = default;
                ObjectReferenceValue __baseInterface = default;
                IntPtr __innerInterface = default;
                IntPtr __retval = default;
                try
                {
                    __owner = global::ABI.Microsoft.UI.Xaml.Controls.RadioButtons.CreateMarshaler2(owner);
                    __baseInterface = MarshalInspectable<object>.CreateMarshaler2(baseInterface);
                    global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, IntPtr, IntPtr*, IntPtr*, int>**)ThisPtr)[6](ThisPtr, MarshalInspectable<object>.GetAbi(__owner), MarshalInspectable<object>.GetAbi(__baseInterface), &__innerInterface, &__retval));
                    global::System.GC.KeepAlive(_obj);
                    innerInterface = __innerInterface;
                    return __retval;
                }
                finally
                {
                    MarshalInspectable<object>.DisposeMarshaler(__owner);
                    MarshalInspectable<object>.DisposeMarshaler(__baseInterface);
                }
            }
        }

        private static volatile IObjectReference ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IRadioButtonsAutomationPeerFactory;
        private static IObjectReference _objRef_global__Microsoft_UI_Xaml_Automation_Peers_IRadioButtonsAutomationPeerFactory
        {
            get
            { 
                var factory = ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IRadioButtonsAutomationPeerFactory;
                if (factory != null && factory.IsInCurrentContext)
                {
                    return factory;
                }
                else
                {
                    return ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IRadioButtonsAutomationPeerFactory = ActivationFactory.Get("Microsoft.UI.Xaml.Automation.Peers.RadioButtonsAutomationPeer", global::ABI.Microsoft.UI.Xaml.Automation.Peers.IRadioButtonsAutomationPeerFactoryMethods.IID);
                }
            }
        }

        public RadioButtonsAutomationPeer(global::Microsoft.UI.Xaml.Controls.RadioButtons owner):base(global::WinRT.DerivedComposed.Instance)
        {
            bool isAggregation = this.GetType() != typeof(RadioButtonsAutomationPeer);
            object baseInspectable = isAggregation ? this : null;
            IntPtr composed = _IRadioButtonsAutomationPeerFactoryMethods.CreateInstance(_objRef_global__Microsoft_UI_Xaml_Automation_Peers_IRadioButtonsAutomationPeerFactory, owner, baseInspectable, out IntPtr inner);
            try
            {
                ComWrappersHelper.Init(isAggregation, this, composed, inner, global::ABI.Microsoft.UI.Xaml.Automation.Peers.IRadioButtonsAutomationPeerMethods.IID, out _inner);

            }
            finally
            {
                Marshal.Release(inner);   
            }
        }

        public static new RadioButtonsAutomationPeer FromAbi(IntPtr thisPtr)
        {
            if (thisPtr == IntPtr.Zero) return null;
            return MarshalInspectable<RadioButtonsAutomationPeer>.FromAbi(thisPtr);
        }

        protected internal RadioButtonsAutomationPeer(IObjectReference objRef)
            : base(global::WinRT.DerivedComposed.Instance)

        {
            _inner = objRef.As(global::ABI.Microsoft.UI.Xaml.Automation.Peers.IRadioButtonsAutomationPeerMethods.IID);

        }


        public static bool operator ==(RadioButtonsAutomationPeer x, RadioButtonsAutomationPeer y) => (x?.ThisPtr ?? IntPtr.Zero) == (y?.ThisPtr ?? IntPtr.Zero);
        public static bool operator !=(RadioButtonsAutomationPeer x, RadioButtonsAutomationPeer y) => !(x == y);
        public bool Equals(RadioButtonsAutomationPeer other) => this == other;
        public override bool Equals(object obj) => obj is RadioButtonsAutomationPeer that && this == that;
        public override int GetHashCode() => ThisPtr.GetHashCode();


        protected RadioButtonsAutomationPeer(global::WinRT.DerivedComposed _):base(_)
        {

        }
        bool IWinRTObject.HasUnwrappableNativeObject => this.GetType() == typeof(RadioButtonsAutomationPeer);
        IObjectReference IWinRTObject.NativeObject => _inner;

        private struct InterfaceTag<I>{};


        protected override bool IsOverridableInterface(Guid iid) => base.IsOverridableInterface(iid);

        global::System.Runtime.InteropServices.CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(ref Guid iid, out IntPtr ppv)
        {
            ppv = IntPtr.Zero;
            if (IsOverridableInterface(iid) || global::WinRT.Interop.IID.IID_IInspectable == iid)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
            }

            if (((IWinRTObject)this).NativeObject.TryAs(iid, out ppv) >= 0)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.Handled;
            }

            return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
        }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")]
    [global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Automation.Peers.RangeBaseAutomationPeer))]
    [global::ABI.Microsoft.UI.Xaml.Automation.Peers.RangeBaseAutomationPeerRcwFactory]
    [global::WinRT.ProjectedRuntimeClass(typeof(IRangeBaseAutomationPeer))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    public class RangeBaseAutomationPeer : FrameworkElementAutomationPeer, global::Microsoft.UI.Xaml.Automation.Provider.IRangeValueProvider, global::System.Runtime.InteropServices.ICustomQueryInterface, IWinRTObject, IEquatable<RangeBaseAutomationPeer>
    {
        private IntPtr ThisPtr => _inner == null ? (((IWinRTObject)this).NativeObject).ThisPtr : _inner.ThisPtr;

        private readonly IObjectReference _inner = null;




        private volatile IObjectReference ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IRangeBaseAutomationPeer;
        private IObjectReference Make___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IRangeBaseAutomationPeer()
        {
            global::System.Threading.Interlocked.CompareExchange(ref ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IRangeBaseAutomationPeer, ((IWinRTObject)this).NativeObject.As<IUnknownVftbl>(global::ABI.Microsoft.UI.Xaml.Automation.Peers.IRangeBaseAutomationPeerMethods.IID), null);
            return ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IRangeBaseAutomationPeer;
        }
        private IObjectReference _objRef_global__Microsoft_UI_Xaml_Automation_Peers_IRangeBaseAutomationPeer => ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IRangeBaseAutomationPeer ?? Make___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IRangeBaseAutomationPeer();

        private volatile IObjectReference ___objRef_global__Microsoft_UI_Xaml_Automation_Provider_IRangeValueProvider;
        private IObjectReference Make___objRef_global__Microsoft_UI_Xaml_Automation_Provider_IRangeValueProvider()
        {
            global::System.Threading.Interlocked.CompareExchange(ref ___objRef_global__Microsoft_UI_Xaml_Automation_Provider_IRangeValueProvider, ((IWinRTObject)this).NativeObject.As<IUnknownVftbl>(global::ABI.Microsoft.UI.Xaml.Automation.Provider.IRangeValueProviderMethods.IID), null);
            return ___objRef_global__Microsoft_UI_Xaml_Automation_Provider_IRangeValueProvider;
        }
        private IObjectReference _objRef_global__Microsoft_UI_Xaml_Automation_Provider_IRangeValueProvider => ___objRef_global__Microsoft_UI_Xaml_Automation_Provider_IRangeValueProvider ?? Make___objRef_global__Microsoft_UI_Xaml_Automation_Provider_IRangeValueProvider();



        private static class _IRangeBaseAutomationPeerFactoryMethods
        {
            public static unsafe IntPtr CreateInstanceWithOwner(IObjectReference _obj, global::Microsoft.UI.Xaml.Controls.Primitives.RangeBase owner, object baseInterface, out IntPtr innerInterface)
            {
                var ThisPtr = _obj.ThisPtr;

                ObjectReferenceValue __owner = default;
                ObjectReferenceValue __baseInterface = default;
                IntPtr __innerInterface = default;
                IntPtr __retval = default;
                try
                {
                    __owner = global::ABI.Microsoft.UI.Xaml.Controls.Primitives.RangeBase.CreateMarshaler2(owner);
                    __baseInterface = MarshalInspectable<object>.CreateMarshaler2(baseInterface);
                    global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, IntPtr, IntPtr*, IntPtr*, int>**)ThisPtr)[6](ThisPtr, MarshalInspectable<object>.GetAbi(__owner), MarshalInspectable<object>.GetAbi(__baseInterface), &__innerInterface, &__retval));
                    global::System.GC.KeepAlive(_obj);
                    innerInterface = __innerInterface;
                    return __retval;
                }
                finally
                {
                    MarshalInspectable<object>.DisposeMarshaler(__owner);
                    MarshalInspectable<object>.DisposeMarshaler(__baseInterface);
                }
            }
        }

        private static volatile IObjectReference ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IRangeBaseAutomationPeerFactory;
        private static IObjectReference _objRef_global__Microsoft_UI_Xaml_Automation_Peers_IRangeBaseAutomationPeerFactory
        {
            get
            { 
                var factory = ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IRangeBaseAutomationPeerFactory;
                if (factory != null && factory.IsInCurrentContext)
                {
                    return factory;
                }
                else
                {
                    return ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IRangeBaseAutomationPeerFactory = ActivationFactory.Get("Microsoft.UI.Xaml.Automation.Peers.RangeBaseAutomationPeer", global::ABI.Microsoft.UI.Xaml.Automation.Peers.IRangeBaseAutomationPeerFactoryMethods.IID);
                }
            }
        }

        public RangeBaseAutomationPeer(global::Microsoft.UI.Xaml.Controls.Primitives.RangeBase owner):base(global::WinRT.DerivedComposed.Instance)
        {
            bool isAggregation = this.GetType() != typeof(RangeBaseAutomationPeer);
            object baseInspectable = isAggregation ? this : null;
            IntPtr composed = _IRangeBaseAutomationPeerFactoryMethods.CreateInstanceWithOwner(_objRef_global__Microsoft_UI_Xaml_Automation_Peers_IRangeBaseAutomationPeerFactory, owner, baseInspectable, out IntPtr inner);
            try
            {
                ComWrappersHelper.Init(isAggregation, this, composed, inner, global::ABI.Microsoft.UI.Xaml.Automation.Peers.IRangeBaseAutomationPeerMethods.IID, out _inner);

            }
            finally
            {
                Marshal.Release(inner);   
            }
        }

        public static new RangeBaseAutomationPeer FromAbi(IntPtr thisPtr)
        {
            if (thisPtr == IntPtr.Zero) return null;
            return MarshalInspectable<RangeBaseAutomationPeer>.FromAbi(thisPtr);
        }

        protected internal RangeBaseAutomationPeer(IObjectReference objRef)
            : base(global::WinRT.DerivedComposed.Instance)

        {
            _inner = objRef.As(global::ABI.Microsoft.UI.Xaml.Automation.Peers.IRangeBaseAutomationPeerMethods.IID);

        }


        public static bool operator ==(RangeBaseAutomationPeer x, RangeBaseAutomationPeer y) => (x?.ThisPtr ?? IntPtr.Zero) == (y?.ThisPtr ?? IntPtr.Zero);
        public static bool operator !=(RangeBaseAutomationPeer x, RangeBaseAutomationPeer y) => !(x == y);
        public bool Equals(RangeBaseAutomationPeer other) => this == other;
        public override bool Equals(object obj) => obj is RangeBaseAutomationPeer that && this == that;
        public override int GetHashCode() => ThisPtr.GetHashCode();


        protected RangeBaseAutomationPeer(global::WinRT.DerivedComposed _):base(_)
        {

        }
        bool IWinRTObject.HasUnwrappableNativeObject => this.GetType() == typeof(RangeBaseAutomationPeer);
        IObjectReference IWinRTObject.NativeObject => _inner;

        private struct InterfaceTag<I>{};


        public void SetValue(double value) => global::ABI.Microsoft.UI.Xaml.Automation.Provider.IRangeValueProviderMethods.SetValue(_objRef_global__Microsoft_UI_Xaml_Automation_Provider_IRangeValueProvider, value);

        public bool IsReadOnly => global::ABI.Microsoft.UI.Xaml.Automation.Provider.IRangeValueProviderMethods.get_IsReadOnly(_objRef_global__Microsoft_UI_Xaml_Automation_Provider_IRangeValueProvider);

        public double LargeChange => global::ABI.Microsoft.UI.Xaml.Automation.Provider.IRangeValueProviderMethods.get_LargeChange(_objRef_global__Microsoft_UI_Xaml_Automation_Provider_IRangeValueProvider);

        public double Maximum => global::ABI.Microsoft.UI.Xaml.Automation.Provider.IRangeValueProviderMethods.get_Maximum(_objRef_global__Microsoft_UI_Xaml_Automation_Provider_IRangeValueProvider);

        public double Minimum => global::ABI.Microsoft.UI.Xaml.Automation.Provider.IRangeValueProviderMethods.get_Minimum(_objRef_global__Microsoft_UI_Xaml_Automation_Provider_IRangeValueProvider);

        public double SmallChange => global::ABI.Microsoft.UI.Xaml.Automation.Provider.IRangeValueProviderMethods.get_SmallChange(_objRef_global__Microsoft_UI_Xaml_Automation_Provider_IRangeValueProvider);

        public double Value => global::ABI.Microsoft.UI.Xaml.Automation.Provider.IRangeValueProviderMethods.get_Value(_objRef_global__Microsoft_UI_Xaml_Automation_Provider_IRangeValueProvider);

        protected override bool IsOverridableInterface(Guid iid) => base.IsOverridableInterface(iid);

        global::System.Runtime.InteropServices.CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(ref Guid iid, out IntPtr ppv)
        {
            ppv = IntPtr.Zero;
            if (IsOverridableInterface(iid) || global::WinRT.Interop.IID.IID_IInspectable == iid)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
            }

            if (((IWinRTObject)this).NativeObject.TryAs(iid, out ppv) >= 0)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.Handled;
            }

            return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
        }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")]
    [global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Automation.Peers.RatingControlAutomationPeer))]
    [global::ABI.Microsoft.UI.Xaml.Automation.Peers.RatingControlAutomationPeerRcwFactory]
    [global::WinRT.ProjectedRuntimeClass(typeof(IRatingControlAutomationPeer))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.XamlContract), 65536u)]
    public class RatingControlAutomationPeer : FrameworkElementAutomationPeer, global::System.Runtime.InteropServices.ICustomQueryInterface, IWinRTObject, IEquatable<RatingControlAutomationPeer>
    {
        private IntPtr ThisPtr => _inner == null ? (((IWinRTObject)this).NativeObject).ThisPtr : _inner.ThisPtr;

        private readonly IObjectReference _inner = null;




        private volatile IObjectReference ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IRatingControlAutomationPeer;
        private IObjectReference Make___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IRatingControlAutomationPeer()
        {
            global::System.Threading.Interlocked.CompareExchange(ref ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IRatingControlAutomationPeer, ((IWinRTObject)this).NativeObject.As<IUnknownVftbl>(global::ABI.Microsoft.UI.Xaml.Automation.Peers.IRatingControlAutomationPeerMethods.IID), null);
            return ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IRatingControlAutomationPeer;
        }
        private IObjectReference _objRef_global__Microsoft_UI_Xaml_Automation_Peers_IRatingControlAutomationPeer => ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IRatingControlAutomationPeer ?? Make___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IRatingControlAutomationPeer();



        private static class _IRatingControlAutomationPeerFactoryMethods
        {
            public static unsafe IntPtr CreateInstanceWithOwner(IObjectReference _obj, global::Microsoft.UI.Xaml.Controls.RatingControl owner, object baseInterface, out IntPtr innerInterface)
            {
                var ThisPtr = _obj.ThisPtr;

                ObjectReferenceValue __owner = default;
                ObjectReferenceValue __baseInterface = default;
                IntPtr __innerInterface = default;
                IntPtr __retval = default;
                try
                {
                    __owner = global::ABI.Microsoft.UI.Xaml.Controls.RatingControl.CreateMarshaler2(owner);
                    __baseInterface = MarshalInspectable<object>.CreateMarshaler2(baseInterface);
                    global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, IntPtr, IntPtr*, IntPtr*, int>**)ThisPtr)[6](ThisPtr, MarshalInspectable<object>.GetAbi(__owner), MarshalInspectable<object>.GetAbi(__baseInterface), &__innerInterface, &__retval));
                    global::System.GC.KeepAlive(_obj);
                    innerInterface = __innerInterface;
                    return __retval;
                }
                finally
                {
                    MarshalInspectable<object>.DisposeMarshaler(__owner);
                    MarshalInspectable<object>.DisposeMarshaler(__baseInterface);
                }
            }
        }

        private static volatile IObjectReference ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IRatingControlAutomationPeerFactory;
        private static IObjectReference _objRef_global__Microsoft_UI_Xaml_Automation_Peers_IRatingControlAutomationPeerFactory
        {
            get
            { 
                var factory = ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IRatingControlAutomationPeerFactory;
                if (factory != null && factory.IsInCurrentContext)
                {
                    return factory;
                }
                else
                {
                    return ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IRatingControlAutomationPeerFactory = ActivationFactory.Get("Microsoft.UI.Xaml.Automation.Peers.RatingControlAutomationPeer", global::ABI.Microsoft.UI.Xaml.Automation.Peers.IRatingControlAutomationPeerFactoryMethods.IID);
                }
            }
        }

        public RatingControlAutomationPeer(global::Microsoft.UI.Xaml.Controls.RatingControl owner):base(global::WinRT.DerivedComposed.Instance)
        {
            bool isAggregation = this.GetType() != typeof(RatingControlAutomationPeer);
            object baseInspectable = isAggregation ? this : null;
            IntPtr composed = _IRatingControlAutomationPeerFactoryMethods.CreateInstanceWithOwner(_objRef_global__Microsoft_UI_Xaml_Automation_Peers_IRatingControlAutomationPeerFactory, owner, baseInspectable, out IntPtr inner);
            try
            {
                ComWrappersHelper.Init(isAggregation, this, composed, inner, global::ABI.Microsoft.UI.Xaml.Automation.Peers.IRatingControlAutomationPeerMethods.IID, out _inner);

            }
            finally
            {
                Marshal.Release(inner);   
            }
        }

        public static new RatingControlAutomationPeer FromAbi(IntPtr thisPtr)
        {
            if (thisPtr == IntPtr.Zero) return null;
            return MarshalInspectable<RatingControlAutomationPeer>.FromAbi(thisPtr);
        }

        protected internal RatingControlAutomationPeer(IObjectReference objRef)
            : base(global::WinRT.DerivedComposed.Instance)

        {
            _inner = objRef.As(global::ABI.Microsoft.UI.Xaml.Automation.Peers.IRatingControlAutomationPeerMethods.IID);

        }


        public static bool operator ==(RatingControlAutomationPeer x, RatingControlAutomationPeer y) => (x?.ThisPtr ?? IntPtr.Zero) == (y?.ThisPtr ?? IntPtr.Zero);
        public static bool operator !=(RatingControlAutomationPeer x, RatingControlAutomationPeer y) => !(x == y);
        public bool Equals(RatingControlAutomationPeer other) => this == other;
        public override bool Equals(object obj) => obj is RatingControlAutomationPeer that && this == that;
        public override int GetHashCode() => ThisPtr.GetHashCode();


        protected RatingControlAutomationPeer(global::WinRT.DerivedComposed _):base(_)
        {

        }
        bool IWinRTObject.HasUnwrappableNativeObject => this.GetType() == typeof(RatingControlAutomationPeer);
        IObjectReference IWinRTObject.NativeObject => _inner;

        private struct InterfaceTag<I>{};


        protected override bool IsOverridableInterface(Guid iid) => base.IsOverridableInterface(iid);

        global::System.Runtime.InteropServices.CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(ref Guid iid, out IntPtr ppv)
        {
            ppv = IntPtr.Zero;
            if (IsOverridableInterface(iid) || global::WinRT.Interop.IID.IID_IInspectable == iid)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
            }

            if (((IWinRTObject)this).NativeObject.TryAs(iid, out ppv) >= 0)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.Handled;
            }

            return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
        }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml", "struct(Microsoft.UI.Xaml.Automation.Peers.RawElementProviderRuntimeId;u4;u4)")][global::WinRT.WindowsRuntimeHelperType][global::WinRT.WinRTExposedType(typeof(global::WinRT.StructTypeDetails<RawElementProviderRuntimeId, RawElementProviderRuntimeId>))][global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    public struct RawElementProviderRuntimeId: IEquatable<RawElementProviderRuntimeId>
    {
        public uint Part1;
        public uint Part2;

        public RawElementProviderRuntimeId(uint _Part1, uint _Part2)
        {
            Part1 = _Part1; Part2 = _Part2; 
        }

        public static bool operator ==(RawElementProviderRuntimeId x, RawElementProviderRuntimeId y) => x.Part1 == y.Part1 && x.Part2 == y.Part2;
        public static bool operator !=(RawElementProviderRuntimeId x, RawElementProviderRuntimeId y) => !(x == y);
        public bool Equals(RawElementProviderRuntimeId other) => this == other;
        public override bool Equals(object obj) => obj is RawElementProviderRuntimeId that && this == that;
        public override int GetHashCode() => Part1.GetHashCode() ^ Part2.GetHashCode();
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")]
    [global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Automation.Peers.RepeatButtonAutomationPeer))]
    [global::ABI.Microsoft.UI.Xaml.Automation.Peers.RepeatButtonAutomationPeerRcwFactory]
    [global::WinRT.ProjectedRuntimeClass(typeof(IRepeatButtonAutomationPeer))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    public class RepeatButtonAutomationPeer : ButtonBaseAutomationPeer, global::Microsoft.UI.Xaml.Automation.Provider.IInvokeProvider, global::System.Runtime.InteropServices.ICustomQueryInterface, IWinRTObject, IEquatable<RepeatButtonAutomationPeer>
    {
        private IntPtr ThisPtr => _inner == null ? (((IWinRTObject)this).NativeObject).ThisPtr : _inner.ThisPtr;

        private readonly IObjectReference _inner = null;




        private volatile IObjectReference ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IRepeatButtonAutomationPeer;
        private IObjectReference Make___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IRepeatButtonAutomationPeer()
        {
            global::System.Threading.Interlocked.CompareExchange(ref ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IRepeatButtonAutomationPeer, ((IWinRTObject)this).NativeObject.As<IUnknownVftbl>(global::ABI.Microsoft.UI.Xaml.Automation.Peers.IRepeatButtonAutomationPeerMethods.IID), null);
            return ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IRepeatButtonAutomationPeer;
        }
        private IObjectReference _objRef_global__Microsoft_UI_Xaml_Automation_Peers_IRepeatButtonAutomationPeer => ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IRepeatButtonAutomationPeer ?? Make___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IRepeatButtonAutomationPeer();

        private volatile IObjectReference ___objRef_global__Microsoft_UI_Xaml_Automation_Provider_IInvokeProvider;
        private IObjectReference Make___objRef_global__Microsoft_UI_Xaml_Automation_Provider_IInvokeProvider()
        {
            global::System.Threading.Interlocked.CompareExchange(ref ___objRef_global__Microsoft_UI_Xaml_Automation_Provider_IInvokeProvider, ((IWinRTObject)this).NativeObject.As<IUnknownVftbl>(global::ABI.Microsoft.UI.Xaml.Automation.Provider.IInvokeProviderMethods.IID), null);
            return ___objRef_global__Microsoft_UI_Xaml_Automation_Provider_IInvokeProvider;
        }
        private IObjectReference _objRef_global__Microsoft_UI_Xaml_Automation_Provider_IInvokeProvider => ___objRef_global__Microsoft_UI_Xaml_Automation_Provider_IInvokeProvider ?? Make___objRef_global__Microsoft_UI_Xaml_Automation_Provider_IInvokeProvider();



        private static class _IRepeatButtonAutomationPeerFactoryMethods
        {
            public static unsafe IntPtr CreateInstanceWithOwner(IObjectReference _obj, global::Microsoft.UI.Xaml.Controls.Primitives.RepeatButton owner, object baseInterface, out IntPtr innerInterface)
            {
                var ThisPtr = _obj.ThisPtr;

                ObjectReferenceValue __owner = default;
                ObjectReferenceValue __baseInterface = default;
                IntPtr __innerInterface = default;
                IntPtr __retval = default;
                try
                {
                    __owner = global::ABI.Microsoft.UI.Xaml.Controls.Primitives.RepeatButton.CreateMarshaler2(owner);
                    __baseInterface = MarshalInspectable<object>.CreateMarshaler2(baseInterface);
                    global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, IntPtr, IntPtr*, IntPtr*, int>**)ThisPtr)[6](ThisPtr, MarshalInspectable<object>.GetAbi(__owner), MarshalInspectable<object>.GetAbi(__baseInterface), &__innerInterface, &__retval));
                    global::System.GC.KeepAlive(_obj);
                    innerInterface = __innerInterface;
                    return __retval;
                }
                finally
                {
                    MarshalInspectable<object>.DisposeMarshaler(__owner);
                    MarshalInspectable<object>.DisposeMarshaler(__baseInterface);
                }
            }
        }

        private static volatile IObjectReference ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IRepeatButtonAutomationPeerFactory;
        private static IObjectReference _objRef_global__Microsoft_UI_Xaml_Automation_Peers_IRepeatButtonAutomationPeerFactory
        {
            get
            { 
                var factory = ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IRepeatButtonAutomationPeerFactory;
                if (factory != null && factory.IsInCurrentContext)
                {
                    return factory;
                }
                else
                {
                    return ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IRepeatButtonAutomationPeerFactory = ActivationFactory.Get("Microsoft.UI.Xaml.Automation.Peers.RepeatButtonAutomationPeer", global::ABI.Microsoft.UI.Xaml.Automation.Peers.IRepeatButtonAutomationPeerFactoryMethods.IID);
                }
            }
        }

        public RepeatButtonAutomationPeer(global::Microsoft.UI.Xaml.Controls.Primitives.RepeatButton owner):base(global::WinRT.DerivedComposed.Instance)
        {
            bool isAggregation = this.GetType() != typeof(RepeatButtonAutomationPeer);
            object baseInspectable = isAggregation ? this : null;
            IntPtr composed = _IRepeatButtonAutomationPeerFactoryMethods.CreateInstanceWithOwner(_objRef_global__Microsoft_UI_Xaml_Automation_Peers_IRepeatButtonAutomationPeerFactory, owner, baseInspectable, out IntPtr inner);
            try
            {
                ComWrappersHelper.Init(isAggregation, this, composed, inner, global::ABI.Microsoft.UI.Xaml.Automation.Peers.IRepeatButtonAutomationPeerMethods.IID, out _inner);

            }
            finally
            {
                Marshal.Release(inner);   
            }
        }

        public static new RepeatButtonAutomationPeer FromAbi(IntPtr thisPtr)
        {
            if (thisPtr == IntPtr.Zero) return null;
            return MarshalInspectable<RepeatButtonAutomationPeer>.FromAbi(thisPtr);
        }

        protected internal RepeatButtonAutomationPeer(IObjectReference objRef)
            : base(global::WinRT.DerivedComposed.Instance)

        {
            _inner = objRef.As(global::ABI.Microsoft.UI.Xaml.Automation.Peers.IRepeatButtonAutomationPeerMethods.IID);

        }


        public static bool operator ==(RepeatButtonAutomationPeer x, RepeatButtonAutomationPeer y) => (x?.ThisPtr ?? IntPtr.Zero) == (y?.ThisPtr ?? IntPtr.Zero);
        public static bool operator !=(RepeatButtonAutomationPeer x, RepeatButtonAutomationPeer y) => !(x == y);
        public bool Equals(RepeatButtonAutomationPeer other) => this == other;
        public override bool Equals(object obj) => obj is RepeatButtonAutomationPeer that && this == that;
        public override int GetHashCode() => ThisPtr.GetHashCode();


        protected RepeatButtonAutomationPeer(global::WinRT.DerivedComposed _):base(_)
        {

        }
        bool IWinRTObject.HasUnwrappableNativeObject => this.GetType() == typeof(RepeatButtonAutomationPeer);
        IObjectReference IWinRTObject.NativeObject => _inner;

        private struct InterfaceTag<I>{};


        public void Invoke() => global::ABI.Microsoft.UI.Xaml.Automation.Provider.IInvokeProviderMethods.Invoke(_objRef_global__Microsoft_UI_Xaml_Automation_Provider_IInvokeProvider);

        protected override bool IsOverridableInterface(Guid iid) => base.IsOverridableInterface(iid);

        global::System.Runtime.InteropServices.CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(ref Guid iid, out IntPtr ppv)
        {
            ppv = IntPtr.Zero;
            if (IsOverridableInterface(iid) || global::WinRT.Interop.IID.IID_IInspectable == iid)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
            }

            if (((IWinRTObject)this).NativeObject.TryAs(iid, out ppv) >= 0)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.Handled;
            }

            return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
        }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")]
    [global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Automation.Peers.RepeaterAutomationPeer))]
    [global::ABI.Microsoft.UI.Xaml.Automation.Peers.RepeaterAutomationPeerRcwFactory]
    [global::WinRT.ProjectedRuntimeClass(typeof(IRepeaterAutomationPeer))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.XamlContract), 65536u)]
    public class RepeaterAutomationPeer : FrameworkElementAutomationPeer, global::System.Runtime.InteropServices.ICustomQueryInterface, IWinRTObject, IEquatable<RepeaterAutomationPeer>
    {
        private IntPtr ThisPtr => _inner == null ? (((IWinRTObject)this).NativeObject).ThisPtr : _inner.ThisPtr;

        private readonly IObjectReference _inner = null;




        private volatile IObjectReference ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IRepeaterAutomationPeer;
        private IObjectReference Make___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IRepeaterAutomationPeer()
        {
            global::System.Threading.Interlocked.CompareExchange(ref ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IRepeaterAutomationPeer, ((IWinRTObject)this).NativeObject.As<IUnknownVftbl>(global::ABI.Microsoft.UI.Xaml.Automation.Peers.IRepeaterAutomationPeerMethods.IID), null);
            return ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IRepeaterAutomationPeer;
        }
        private IObjectReference _objRef_global__Microsoft_UI_Xaml_Automation_Peers_IRepeaterAutomationPeer => ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IRepeaterAutomationPeer ?? Make___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IRepeaterAutomationPeer();



        private static class _IRepeaterAutomationPeerFactoryMethods
        {
            public static unsafe IntPtr CreateInstance(IObjectReference _obj, global::Microsoft.UI.Xaml.Controls.ItemsRepeater owner, object baseInterface, out IntPtr innerInterface)
            {
                var ThisPtr = _obj.ThisPtr;

                ObjectReferenceValue __owner = default;
                ObjectReferenceValue __baseInterface = default;
                IntPtr __innerInterface = default;
                IntPtr __retval = default;
                try
                {
                    __owner = global::ABI.Microsoft.UI.Xaml.Controls.ItemsRepeater.CreateMarshaler2(owner);
                    __baseInterface = MarshalInspectable<object>.CreateMarshaler2(baseInterface);
                    global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, IntPtr, IntPtr*, IntPtr*, int>**)ThisPtr)[6](ThisPtr, MarshalInspectable<object>.GetAbi(__owner), MarshalInspectable<object>.GetAbi(__baseInterface), &__innerInterface, &__retval));
                    global::System.GC.KeepAlive(_obj);
                    innerInterface = __innerInterface;
                    return __retval;
                }
                finally
                {
                    MarshalInspectable<object>.DisposeMarshaler(__owner);
                    MarshalInspectable<object>.DisposeMarshaler(__baseInterface);
                }
            }
        }

        private static volatile IObjectReference ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IRepeaterAutomationPeerFactory;
        private static IObjectReference _objRef_global__Microsoft_UI_Xaml_Automation_Peers_IRepeaterAutomationPeerFactory
        {
            get
            { 
                var factory = ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IRepeaterAutomationPeerFactory;
                if (factory != null && factory.IsInCurrentContext)
                {
                    return factory;
                }
                else
                {
                    return ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IRepeaterAutomationPeerFactory = ActivationFactory.Get("Microsoft.UI.Xaml.Automation.Peers.RepeaterAutomationPeer", global::ABI.Microsoft.UI.Xaml.Automation.Peers.IRepeaterAutomationPeerFactoryMethods.IID);
                }
            }
        }

        public RepeaterAutomationPeer(global::Microsoft.UI.Xaml.Controls.ItemsRepeater owner):base(global::WinRT.DerivedComposed.Instance)
        {
            bool isAggregation = this.GetType() != typeof(RepeaterAutomationPeer);
            object baseInspectable = isAggregation ? this : null;
            IntPtr composed = _IRepeaterAutomationPeerFactoryMethods.CreateInstance(_objRef_global__Microsoft_UI_Xaml_Automation_Peers_IRepeaterAutomationPeerFactory, owner, baseInspectable, out IntPtr inner);
            try
            {
                ComWrappersHelper.Init(isAggregation, this, composed, inner, global::ABI.Microsoft.UI.Xaml.Automation.Peers.IRepeaterAutomationPeerMethods.IID, out _inner);

            }
            finally
            {
                Marshal.Release(inner);   
            }
        }

        public static new RepeaterAutomationPeer FromAbi(IntPtr thisPtr)
        {
            if (thisPtr == IntPtr.Zero) return null;
            return MarshalInspectable<RepeaterAutomationPeer>.FromAbi(thisPtr);
        }

        protected internal RepeaterAutomationPeer(IObjectReference objRef)
            : base(global::WinRT.DerivedComposed.Instance)

        {
            _inner = objRef.As(global::ABI.Microsoft.UI.Xaml.Automation.Peers.IRepeaterAutomationPeerMethods.IID);

        }


        public static bool operator ==(RepeaterAutomationPeer x, RepeaterAutomationPeer y) => (x?.ThisPtr ?? IntPtr.Zero) == (y?.ThisPtr ?? IntPtr.Zero);
        public static bool operator !=(RepeaterAutomationPeer x, RepeaterAutomationPeer y) => !(x == y);
        public bool Equals(RepeaterAutomationPeer other) => this == other;
        public override bool Equals(object obj) => obj is RepeaterAutomationPeer that && this == that;
        public override int GetHashCode() => ThisPtr.GetHashCode();


        protected RepeaterAutomationPeer(global::WinRT.DerivedComposed _):base(_)
        {

        }
        bool IWinRTObject.HasUnwrappableNativeObject => this.GetType() == typeof(RepeaterAutomationPeer);
        IObjectReference IWinRTObject.NativeObject => _inner;

        private struct InterfaceTag<I>{};


        protected override bool IsOverridableInterface(Guid iid) => base.IsOverridableInterface(iid);

        global::System.Runtime.InteropServices.CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(ref Guid iid, out IntPtr ppv)
        {
            ppv = IntPtr.Zero;
            if (IsOverridableInterface(iid) || global::WinRT.Interop.IID.IID_IInspectable == iid)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
            }

            if (((IWinRTObject)this).NativeObject.TryAs(iid, out ppv) >= 0)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.Handled;
            }

            return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
        }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")]
    [global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Automation.Peers.RichEditBoxAutomationPeer))]
    [global::ABI.Microsoft.UI.Xaml.Automation.Peers.RichEditBoxAutomationPeerRcwFactory]
    [global::WinRT.ProjectedRuntimeClass(typeof(IRichEditBoxAutomationPeer))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    public class RichEditBoxAutomationPeer : FrameworkElementAutomationPeer, global::System.Runtime.InteropServices.ICustomQueryInterface, IWinRTObject, IEquatable<RichEditBoxAutomationPeer>
    {
        private IntPtr ThisPtr => _inner == null ? (((IWinRTObject)this).NativeObject).ThisPtr : _inner.ThisPtr;

        private readonly IObjectReference _inner = null;




        private volatile IObjectReference ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IRichEditBoxAutomationPeer;
        private IObjectReference Make___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IRichEditBoxAutomationPeer()
        {
            global::System.Threading.Interlocked.CompareExchange(ref ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IRichEditBoxAutomationPeer, ((IWinRTObject)this).NativeObject.As<IUnknownVftbl>(global::ABI.Microsoft.UI.Xaml.Automation.Peers.IRichEditBoxAutomationPeerMethods.IID), null);
            return ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IRichEditBoxAutomationPeer;
        }
        private IObjectReference _objRef_global__Microsoft_UI_Xaml_Automation_Peers_IRichEditBoxAutomationPeer => ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IRichEditBoxAutomationPeer ?? Make___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IRichEditBoxAutomationPeer();



        private static class _IRichEditBoxAutomationPeerFactoryMethods
        {
            public static unsafe IntPtr CreateInstanceWithOwner(IObjectReference _obj, global::Microsoft.UI.Xaml.Controls.RichEditBox owner, object baseInterface, out IntPtr innerInterface)
            {
                var ThisPtr = _obj.ThisPtr;

                ObjectReferenceValue __owner = default;
                ObjectReferenceValue __baseInterface = default;
                IntPtr __innerInterface = default;
                IntPtr __retval = default;
                try
                {
                    __owner = global::ABI.Microsoft.UI.Xaml.Controls.RichEditBox.CreateMarshaler2(owner);
                    __baseInterface = MarshalInspectable<object>.CreateMarshaler2(baseInterface);
                    global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, IntPtr, IntPtr*, IntPtr*, int>**)ThisPtr)[6](ThisPtr, MarshalInspectable<object>.GetAbi(__owner), MarshalInspectable<object>.GetAbi(__baseInterface), &__innerInterface, &__retval));
                    global::System.GC.KeepAlive(_obj);
                    innerInterface = __innerInterface;
                    return __retval;
                }
                finally
                {
                    MarshalInspectable<object>.DisposeMarshaler(__owner);
                    MarshalInspectable<object>.DisposeMarshaler(__baseInterface);
                }
            }
        }

        private static volatile IObjectReference ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IRichEditBoxAutomationPeerFactory;
        private static IObjectReference _objRef_global__Microsoft_UI_Xaml_Automation_Peers_IRichEditBoxAutomationPeerFactory
        {
            get
            { 
                var factory = ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IRichEditBoxAutomationPeerFactory;
                if (factory != null && factory.IsInCurrentContext)
                {
                    return factory;
                }
                else
                {
                    return ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IRichEditBoxAutomationPeerFactory = ActivationFactory.Get("Microsoft.UI.Xaml.Automation.Peers.RichEditBoxAutomationPeer", global::ABI.Microsoft.UI.Xaml.Automation.Peers.IRichEditBoxAutomationPeerFactoryMethods.IID);
                }
            }
        }

        public RichEditBoxAutomationPeer(global::Microsoft.UI.Xaml.Controls.RichEditBox owner):base(global::WinRT.DerivedComposed.Instance)
        {
            bool isAggregation = this.GetType() != typeof(RichEditBoxAutomationPeer);
            object baseInspectable = isAggregation ? this : null;
            IntPtr composed = _IRichEditBoxAutomationPeerFactoryMethods.CreateInstanceWithOwner(_objRef_global__Microsoft_UI_Xaml_Automation_Peers_IRichEditBoxAutomationPeerFactory, owner, baseInspectable, out IntPtr inner);
            try
            {
                ComWrappersHelper.Init(isAggregation, this, composed, inner, global::ABI.Microsoft.UI.Xaml.Automation.Peers.IRichEditBoxAutomationPeerMethods.IID, out _inner);

            }
            finally
            {
                Marshal.Release(inner);   
            }
        }

        public static new RichEditBoxAutomationPeer FromAbi(IntPtr thisPtr)
        {
            if (thisPtr == IntPtr.Zero) return null;
            return MarshalInspectable<RichEditBoxAutomationPeer>.FromAbi(thisPtr);
        }

        protected internal RichEditBoxAutomationPeer(IObjectReference objRef)
            : base(global::WinRT.DerivedComposed.Instance)

        {
            _inner = objRef.As(global::ABI.Microsoft.UI.Xaml.Automation.Peers.IRichEditBoxAutomationPeerMethods.IID);

        }


        public static bool operator ==(RichEditBoxAutomationPeer x, RichEditBoxAutomationPeer y) => (x?.ThisPtr ?? IntPtr.Zero) == (y?.ThisPtr ?? IntPtr.Zero);
        public static bool operator !=(RichEditBoxAutomationPeer x, RichEditBoxAutomationPeer y) => !(x == y);
        public bool Equals(RichEditBoxAutomationPeer other) => this == other;
        public override bool Equals(object obj) => obj is RichEditBoxAutomationPeer that && this == that;
        public override int GetHashCode() => ThisPtr.GetHashCode();


        protected RichEditBoxAutomationPeer(global::WinRT.DerivedComposed _):base(_)
        {

        }
        bool IWinRTObject.HasUnwrappableNativeObject => this.GetType() == typeof(RichEditBoxAutomationPeer);
        IObjectReference IWinRTObject.NativeObject => _inner;

        private struct InterfaceTag<I>{};


        protected override bool IsOverridableInterface(Guid iid) => base.IsOverridableInterface(iid);

        global::System.Runtime.InteropServices.CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(ref Guid iid, out IntPtr ppv)
        {
            ppv = IntPtr.Zero;
            if (IsOverridableInterface(iid) || global::WinRT.Interop.IID.IID_IInspectable == iid)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
            }

            if (((IWinRTObject)this).NativeObject.TryAs(iid, out ppv) >= 0)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.Handled;
            }

            return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
        }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")]
    [global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Automation.Peers.RichTextBlockAutomationPeer))]
    [global::ABI.Microsoft.UI.Xaml.Automation.Peers.RichTextBlockAutomationPeerRcwFactory]
    [global::WinRT.ProjectedRuntimeClass(typeof(IRichTextBlockAutomationPeer))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    public class RichTextBlockAutomationPeer : FrameworkElementAutomationPeer, global::System.Runtime.InteropServices.ICustomQueryInterface, IWinRTObject, IEquatable<RichTextBlockAutomationPeer>
    {
        private IntPtr ThisPtr => _inner == null ? (((IWinRTObject)this).NativeObject).ThisPtr : _inner.ThisPtr;

        private readonly IObjectReference _inner = null;




        private volatile IObjectReference ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IRichTextBlockAutomationPeer;
        private IObjectReference Make___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IRichTextBlockAutomationPeer()
        {
            global::System.Threading.Interlocked.CompareExchange(ref ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IRichTextBlockAutomationPeer, ((IWinRTObject)this).NativeObject.As<IUnknownVftbl>(global::ABI.Microsoft.UI.Xaml.Automation.Peers.IRichTextBlockAutomationPeerMethods.IID), null);
            return ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IRichTextBlockAutomationPeer;
        }
        private IObjectReference _objRef_global__Microsoft_UI_Xaml_Automation_Peers_IRichTextBlockAutomationPeer => ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IRichTextBlockAutomationPeer ?? Make___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IRichTextBlockAutomationPeer();



        private static class _IRichTextBlockAutomationPeerFactoryMethods
        {
            public static unsafe IntPtr CreateInstanceWithOwner(IObjectReference _obj, global::Microsoft.UI.Xaml.Controls.RichTextBlock owner, object baseInterface, out IntPtr innerInterface)
            {
                var ThisPtr = _obj.ThisPtr;

                ObjectReferenceValue __owner = default;
                ObjectReferenceValue __baseInterface = default;
                IntPtr __innerInterface = default;
                IntPtr __retval = default;
                try
                {
                    __owner = global::ABI.Microsoft.UI.Xaml.Controls.RichTextBlock.CreateMarshaler2(owner);
                    __baseInterface = MarshalInspectable<object>.CreateMarshaler2(baseInterface);
                    global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, IntPtr, IntPtr*, IntPtr*, int>**)ThisPtr)[6](ThisPtr, MarshalInspectable<object>.GetAbi(__owner), MarshalInspectable<object>.GetAbi(__baseInterface), &__innerInterface, &__retval));
                    global::System.GC.KeepAlive(_obj);
                    innerInterface = __innerInterface;
                    return __retval;
                }
                finally
                {
                    MarshalInspectable<object>.DisposeMarshaler(__owner);
                    MarshalInspectable<object>.DisposeMarshaler(__baseInterface);
                }
            }
        }

        private static volatile IObjectReference ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IRichTextBlockAutomationPeerFactory;
        private static IObjectReference _objRef_global__Microsoft_UI_Xaml_Automation_Peers_IRichTextBlockAutomationPeerFactory
        {
            get
            { 
                var factory = ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IRichTextBlockAutomationPeerFactory;
                if (factory != null && factory.IsInCurrentContext)
                {
                    return factory;
                }
                else
                {
                    return ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IRichTextBlockAutomationPeerFactory = ActivationFactory.Get("Microsoft.UI.Xaml.Automation.Peers.RichTextBlockAutomationPeer", global::ABI.Microsoft.UI.Xaml.Automation.Peers.IRichTextBlockAutomationPeerFactoryMethods.IID);
                }
            }
        }

        public RichTextBlockAutomationPeer(global::Microsoft.UI.Xaml.Controls.RichTextBlock owner):base(global::WinRT.DerivedComposed.Instance)
        {
            bool isAggregation = this.GetType() != typeof(RichTextBlockAutomationPeer);
            object baseInspectable = isAggregation ? this : null;
            IntPtr composed = _IRichTextBlockAutomationPeerFactoryMethods.CreateInstanceWithOwner(_objRef_global__Microsoft_UI_Xaml_Automation_Peers_IRichTextBlockAutomationPeerFactory, owner, baseInspectable, out IntPtr inner);
            try
            {
                ComWrappersHelper.Init(isAggregation, this, composed, inner, global::ABI.Microsoft.UI.Xaml.Automation.Peers.IRichTextBlockAutomationPeerMethods.IID, out _inner);

            }
            finally
            {
                Marshal.Release(inner);   
            }
        }

        public static new RichTextBlockAutomationPeer FromAbi(IntPtr thisPtr)
        {
            if (thisPtr == IntPtr.Zero) return null;
            return MarshalInspectable<RichTextBlockAutomationPeer>.FromAbi(thisPtr);
        }

        protected internal RichTextBlockAutomationPeer(IObjectReference objRef)
            : base(global::WinRT.DerivedComposed.Instance)

        {
            _inner = objRef.As(global::ABI.Microsoft.UI.Xaml.Automation.Peers.IRichTextBlockAutomationPeerMethods.IID);

        }


        public static bool operator ==(RichTextBlockAutomationPeer x, RichTextBlockAutomationPeer y) => (x?.ThisPtr ?? IntPtr.Zero) == (y?.ThisPtr ?? IntPtr.Zero);
        public static bool operator !=(RichTextBlockAutomationPeer x, RichTextBlockAutomationPeer y) => !(x == y);
        public bool Equals(RichTextBlockAutomationPeer other) => this == other;
        public override bool Equals(object obj) => obj is RichTextBlockAutomationPeer that && this == that;
        public override int GetHashCode() => ThisPtr.GetHashCode();


        protected RichTextBlockAutomationPeer(global::WinRT.DerivedComposed _):base(_)
        {

        }
        bool IWinRTObject.HasUnwrappableNativeObject => this.GetType() == typeof(RichTextBlockAutomationPeer);
        IObjectReference IWinRTObject.NativeObject => _inner;

        private struct InterfaceTag<I>{};


        protected override bool IsOverridableInterface(Guid iid) => base.IsOverridableInterface(iid);

        global::System.Runtime.InteropServices.CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(ref Guid iid, out IntPtr ppv)
        {
            ppv = IntPtr.Zero;
            if (IsOverridableInterface(iid) || global::WinRT.Interop.IID.IID_IInspectable == iid)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
            }

            if (((IWinRTObject)this).NativeObject.TryAs(iid, out ppv) >= 0)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.Handled;
            }

            return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
        }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")]
    [global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Automation.Peers.RichTextBlockOverflowAutomationPeer))]
    [global::ABI.Microsoft.UI.Xaml.Automation.Peers.RichTextBlockOverflowAutomationPeerRcwFactory]
    [global::WinRT.ProjectedRuntimeClass(typeof(IRichTextBlockOverflowAutomationPeer))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    public class RichTextBlockOverflowAutomationPeer : FrameworkElementAutomationPeer, global::System.Runtime.InteropServices.ICustomQueryInterface, IWinRTObject, IEquatable<RichTextBlockOverflowAutomationPeer>
    {
        private IntPtr ThisPtr => _inner == null ? (((IWinRTObject)this).NativeObject).ThisPtr : _inner.ThisPtr;

        private readonly IObjectReference _inner = null;




        private volatile IObjectReference ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IRichTextBlockOverflowAutomationPeer;
        private IObjectReference Make___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IRichTextBlockOverflowAutomationPeer()
        {
            global::System.Threading.Interlocked.CompareExchange(ref ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IRichTextBlockOverflowAutomationPeer, ((IWinRTObject)this).NativeObject.As<IUnknownVftbl>(global::ABI.Microsoft.UI.Xaml.Automation.Peers.IRichTextBlockOverflowAutomationPeerMethods.IID), null);
            return ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IRichTextBlockOverflowAutomationPeer;
        }
        private IObjectReference _objRef_global__Microsoft_UI_Xaml_Automation_Peers_IRichTextBlockOverflowAutomationPeer => ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IRichTextBlockOverflowAutomationPeer ?? Make___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IRichTextBlockOverflowAutomationPeer();



        private static class _IRichTextBlockOverflowAutomationPeerFactoryMethods
        {
            public static unsafe IntPtr CreateInstanceWithOwner(IObjectReference _obj, global::Microsoft.UI.Xaml.Controls.RichTextBlockOverflow owner, object baseInterface, out IntPtr innerInterface)
            {
                var ThisPtr = _obj.ThisPtr;

                ObjectReferenceValue __owner = default;
                ObjectReferenceValue __baseInterface = default;
                IntPtr __innerInterface = default;
                IntPtr __retval = default;
                try
                {
                    __owner = global::ABI.Microsoft.UI.Xaml.Controls.RichTextBlockOverflow.CreateMarshaler2(owner);
                    __baseInterface = MarshalInspectable<object>.CreateMarshaler2(baseInterface);
                    global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, IntPtr, IntPtr*, IntPtr*, int>**)ThisPtr)[6](ThisPtr, MarshalInspectable<object>.GetAbi(__owner), MarshalInspectable<object>.GetAbi(__baseInterface), &__innerInterface, &__retval));
                    global::System.GC.KeepAlive(_obj);
                    innerInterface = __innerInterface;
                    return __retval;
                }
                finally
                {
                    MarshalInspectable<object>.DisposeMarshaler(__owner);
                    MarshalInspectable<object>.DisposeMarshaler(__baseInterface);
                }
            }
        }

        private static volatile IObjectReference ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IRichTextBlockOverflowAutomationPeerFactory;
        private static IObjectReference _objRef_global__Microsoft_UI_Xaml_Automation_Peers_IRichTextBlockOverflowAutomationPeerFactory
        {
            get
            { 
                var factory = ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IRichTextBlockOverflowAutomationPeerFactory;
                if (factory != null && factory.IsInCurrentContext)
                {
                    return factory;
                }
                else
                {
                    return ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IRichTextBlockOverflowAutomationPeerFactory = ActivationFactory.Get("Microsoft.UI.Xaml.Automation.Peers.RichTextBlockOverflowAutomationPeer", global::ABI.Microsoft.UI.Xaml.Automation.Peers.IRichTextBlockOverflowAutomationPeerFactoryMethods.IID);
                }
            }
        }

        public RichTextBlockOverflowAutomationPeer(global::Microsoft.UI.Xaml.Controls.RichTextBlockOverflow owner):base(global::WinRT.DerivedComposed.Instance)
        {
            bool isAggregation = this.GetType() != typeof(RichTextBlockOverflowAutomationPeer);
            object baseInspectable = isAggregation ? this : null;
            IntPtr composed = _IRichTextBlockOverflowAutomationPeerFactoryMethods.CreateInstanceWithOwner(_objRef_global__Microsoft_UI_Xaml_Automation_Peers_IRichTextBlockOverflowAutomationPeerFactory, owner, baseInspectable, out IntPtr inner);
            try
            {
                ComWrappersHelper.Init(isAggregation, this, composed, inner, global::ABI.Microsoft.UI.Xaml.Automation.Peers.IRichTextBlockOverflowAutomationPeerMethods.IID, out _inner);

            }
            finally
            {
                Marshal.Release(inner);   
            }
        }

        public static new RichTextBlockOverflowAutomationPeer FromAbi(IntPtr thisPtr)
        {
            if (thisPtr == IntPtr.Zero) return null;
            return MarshalInspectable<RichTextBlockOverflowAutomationPeer>.FromAbi(thisPtr);
        }

        protected internal RichTextBlockOverflowAutomationPeer(IObjectReference objRef)
            : base(global::WinRT.DerivedComposed.Instance)

        {
            _inner = objRef.As(global::ABI.Microsoft.UI.Xaml.Automation.Peers.IRichTextBlockOverflowAutomationPeerMethods.IID);

        }


        public static bool operator ==(RichTextBlockOverflowAutomationPeer x, RichTextBlockOverflowAutomationPeer y) => (x?.ThisPtr ?? IntPtr.Zero) == (y?.ThisPtr ?? IntPtr.Zero);
        public static bool operator !=(RichTextBlockOverflowAutomationPeer x, RichTextBlockOverflowAutomationPeer y) => !(x == y);
        public bool Equals(RichTextBlockOverflowAutomationPeer other) => this == other;
        public override bool Equals(object obj) => obj is RichTextBlockOverflowAutomationPeer that && this == that;
        public override int GetHashCode() => ThisPtr.GetHashCode();


        protected RichTextBlockOverflowAutomationPeer(global::WinRT.DerivedComposed _):base(_)
        {

        }
        bool IWinRTObject.HasUnwrappableNativeObject => this.GetType() == typeof(RichTextBlockOverflowAutomationPeer);
        IObjectReference IWinRTObject.NativeObject => _inner;

        private struct InterfaceTag<I>{};


        protected override bool IsOverridableInterface(Guid iid) => base.IsOverridableInterface(iid);

        global::System.Runtime.InteropServices.CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(ref Guid iid, out IntPtr ppv)
        {
            ppv = IntPtr.Zero;
            if (IsOverridableInterface(iid) || global::WinRT.Interop.IID.IID_IInspectable == iid)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
            }

            if (((IWinRTObject)this).NativeObject.TryAs(iid, out ppv) >= 0)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.Handled;
            }

            return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
        }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")]
    [global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Automation.Peers.ScrollBarAutomationPeer))]
    [global::ABI.Microsoft.UI.Xaml.Automation.Peers.ScrollBarAutomationPeerRcwFactory]
    [global::WinRT.ProjectedRuntimeClass(typeof(IScrollBarAutomationPeer))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    public class ScrollBarAutomationPeer : RangeBaseAutomationPeer, global::System.Runtime.InteropServices.ICustomQueryInterface, IWinRTObject, IEquatable<ScrollBarAutomationPeer>
    {
        private IntPtr ThisPtr => _inner == null ? (((IWinRTObject)this).NativeObject).ThisPtr : _inner.ThisPtr;

        private readonly IObjectReference _inner = null;




        private volatile IObjectReference ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IScrollBarAutomationPeer;
        private IObjectReference Make___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IScrollBarAutomationPeer()
        {
            global::System.Threading.Interlocked.CompareExchange(ref ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IScrollBarAutomationPeer, ((IWinRTObject)this).NativeObject.As<IUnknownVftbl>(global::ABI.Microsoft.UI.Xaml.Automation.Peers.IScrollBarAutomationPeerMethods.IID), null);
            return ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IScrollBarAutomationPeer;
        }
        private IObjectReference _objRef_global__Microsoft_UI_Xaml_Automation_Peers_IScrollBarAutomationPeer => ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IScrollBarAutomationPeer ?? Make___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IScrollBarAutomationPeer();



        private static class _IScrollBarAutomationPeerFactoryMethods
        {
            public static unsafe IntPtr CreateInstanceWithOwner(IObjectReference _obj, global::Microsoft.UI.Xaml.Controls.Primitives.ScrollBar owner, object baseInterface, out IntPtr innerInterface)
            {
                var ThisPtr = _obj.ThisPtr;

                ObjectReferenceValue __owner = default;
                ObjectReferenceValue __baseInterface = default;
                IntPtr __innerInterface = default;
                IntPtr __retval = default;
                try
                {
                    __owner = global::ABI.Microsoft.UI.Xaml.Controls.Primitives.ScrollBar.CreateMarshaler2(owner);
                    __baseInterface = MarshalInspectable<object>.CreateMarshaler2(baseInterface);
                    global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, IntPtr, IntPtr*, IntPtr*, int>**)ThisPtr)[6](ThisPtr, MarshalInspectable<object>.GetAbi(__owner), MarshalInspectable<object>.GetAbi(__baseInterface), &__innerInterface, &__retval));
                    global::System.GC.KeepAlive(_obj);
                    innerInterface = __innerInterface;
                    return __retval;
                }
                finally
                {
                    MarshalInspectable<object>.DisposeMarshaler(__owner);
                    MarshalInspectable<object>.DisposeMarshaler(__baseInterface);
                }
            }
        }

        private static volatile IObjectReference ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IScrollBarAutomationPeerFactory;
        private static IObjectReference _objRef_global__Microsoft_UI_Xaml_Automation_Peers_IScrollBarAutomationPeerFactory
        {
            get
            { 
                var factory = ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IScrollBarAutomationPeerFactory;
                if (factory != null && factory.IsInCurrentContext)
                {
                    return factory;
                }
                else
                {
                    return ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IScrollBarAutomationPeerFactory = ActivationFactory.Get("Microsoft.UI.Xaml.Automation.Peers.ScrollBarAutomationPeer", global::ABI.Microsoft.UI.Xaml.Automation.Peers.IScrollBarAutomationPeerFactoryMethods.IID);
                }
            }
        }

        public ScrollBarAutomationPeer(global::Microsoft.UI.Xaml.Controls.Primitives.ScrollBar owner):base(global::WinRT.DerivedComposed.Instance)
        {
            bool isAggregation = this.GetType() != typeof(ScrollBarAutomationPeer);
            object baseInspectable = isAggregation ? this : null;
            IntPtr composed = _IScrollBarAutomationPeerFactoryMethods.CreateInstanceWithOwner(_objRef_global__Microsoft_UI_Xaml_Automation_Peers_IScrollBarAutomationPeerFactory, owner, baseInspectable, out IntPtr inner);
            try
            {
                ComWrappersHelper.Init(isAggregation, this, composed, inner, global::ABI.Microsoft.UI.Xaml.Automation.Peers.IScrollBarAutomationPeerMethods.IID, out _inner);

            }
            finally
            {
                Marshal.Release(inner);   
            }
        }

        public static new ScrollBarAutomationPeer FromAbi(IntPtr thisPtr)
        {
            if (thisPtr == IntPtr.Zero) return null;
            return MarshalInspectable<ScrollBarAutomationPeer>.FromAbi(thisPtr);
        }

        protected internal ScrollBarAutomationPeer(IObjectReference objRef)
            : base(global::WinRT.DerivedComposed.Instance)

        {
            _inner = objRef.As(global::ABI.Microsoft.UI.Xaml.Automation.Peers.IScrollBarAutomationPeerMethods.IID);

        }


        public static bool operator ==(ScrollBarAutomationPeer x, ScrollBarAutomationPeer y) => (x?.ThisPtr ?? IntPtr.Zero) == (y?.ThisPtr ?? IntPtr.Zero);
        public static bool operator !=(ScrollBarAutomationPeer x, ScrollBarAutomationPeer y) => !(x == y);
        public bool Equals(ScrollBarAutomationPeer other) => this == other;
        public override bool Equals(object obj) => obj is ScrollBarAutomationPeer that && this == that;
        public override int GetHashCode() => ThisPtr.GetHashCode();


        protected ScrollBarAutomationPeer(global::WinRT.DerivedComposed _):base(_)
        {

        }
        bool IWinRTObject.HasUnwrappableNativeObject => this.GetType() == typeof(ScrollBarAutomationPeer);
        IObjectReference IWinRTObject.NativeObject => _inner;

        private struct InterfaceTag<I>{};


        protected override bool IsOverridableInterface(Guid iid) => base.IsOverridableInterface(iid);

        global::System.Runtime.InteropServices.CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(ref Guid iid, out IntPtr ppv)
        {
            ppv = IntPtr.Zero;
            if (IsOverridableInterface(iid) || global::WinRT.Interop.IID.IID_IInspectable == iid)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
            }

            if (((IWinRTObject)this).NativeObject.TryAs(iid, out ppv) >= 0)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.Handled;
            }

            return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
        }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")]
    [global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Automation.Peers.ScrollPresenterAutomationPeer))]
    [global::ABI.Microsoft.UI.Xaml.Automation.Peers.ScrollPresenterAutomationPeerRcwFactory]
    [global::WinRT.ProjectedRuntimeClass(typeof(IScrollPresenterAutomationPeer))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.XamlContract), 458752u)]
    public class ScrollPresenterAutomationPeer : FrameworkElementAutomationPeer, global::System.Runtime.InteropServices.ICustomQueryInterface, IWinRTObject, IEquatable<ScrollPresenterAutomationPeer>
    {
        private IntPtr ThisPtr => _inner == null ? (((IWinRTObject)this).NativeObject).ThisPtr : _inner.ThisPtr;

        private readonly IObjectReference _inner = null;




        private volatile IObjectReference ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IScrollPresenterAutomationPeer;
        private IObjectReference Make___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IScrollPresenterAutomationPeer()
        {
            global::System.Threading.Interlocked.CompareExchange(ref ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IScrollPresenterAutomationPeer, ((IWinRTObject)this).NativeObject.As<IUnknownVftbl>(global::ABI.Microsoft.UI.Xaml.Automation.Peers.IScrollPresenterAutomationPeerMethods.IID), null);
            return ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IScrollPresenterAutomationPeer;
        }
        private IObjectReference _objRef_global__Microsoft_UI_Xaml_Automation_Peers_IScrollPresenterAutomationPeer => ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IScrollPresenterAutomationPeer ?? Make___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IScrollPresenterAutomationPeer();



        private static class _IScrollPresenterAutomationPeerFactoryMethods
        {
            public static unsafe IntPtr CreateInstance(IObjectReference _obj, global::Microsoft.UI.Xaml.Controls.Primitives.ScrollPresenter owner, object baseInterface, out IntPtr innerInterface)
            {
                var ThisPtr = _obj.ThisPtr;

                ObjectReferenceValue __owner = default;
                ObjectReferenceValue __baseInterface = default;
                IntPtr __innerInterface = default;
                IntPtr __retval = default;
                try
                {
                    __owner = global::ABI.Microsoft.UI.Xaml.Controls.Primitives.ScrollPresenter.CreateMarshaler2(owner);
                    __baseInterface = MarshalInspectable<object>.CreateMarshaler2(baseInterface);
                    global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, IntPtr, IntPtr*, IntPtr*, int>**)ThisPtr)[6](ThisPtr, MarshalInspectable<object>.GetAbi(__owner), MarshalInspectable<object>.GetAbi(__baseInterface), &__innerInterface, &__retval));
                    global::System.GC.KeepAlive(_obj);
                    innerInterface = __innerInterface;
                    return __retval;
                }
                finally
                {
                    MarshalInspectable<object>.DisposeMarshaler(__owner);
                    MarshalInspectable<object>.DisposeMarshaler(__baseInterface);
                }
            }
        }

        private static volatile IObjectReference ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IScrollPresenterAutomationPeerFactory;
        private static IObjectReference _objRef_global__Microsoft_UI_Xaml_Automation_Peers_IScrollPresenterAutomationPeerFactory
        {
            get
            { 
                var factory = ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IScrollPresenterAutomationPeerFactory;
                if (factory != null && factory.IsInCurrentContext)
                {
                    return factory;
                }
                else
                {
                    return ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IScrollPresenterAutomationPeerFactory = ActivationFactory.Get("Microsoft.UI.Xaml.Automation.Peers.ScrollPresenterAutomationPeer", global::ABI.Microsoft.UI.Xaml.Automation.Peers.IScrollPresenterAutomationPeerFactoryMethods.IID);
                }
            }
        }

        public ScrollPresenterAutomationPeer(global::Microsoft.UI.Xaml.Controls.Primitives.ScrollPresenter owner):base(global::WinRT.DerivedComposed.Instance)
        {
            bool isAggregation = this.GetType() != typeof(ScrollPresenterAutomationPeer);
            object baseInspectable = isAggregation ? this : null;
            IntPtr composed = _IScrollPresenterAutomationPeerFactoryMethods.CreateInstance(_objRef_global__Microsoft_UI_Xaml_Automation_Peers_IScrollPresenterAutomationPeerFactory, owner, baseInspectable, out IntPtr inner);
            try
            {
                ComWrappersHelper.Init(isAggregation, this, composed, inner, global::ABI.Microsoft.UI.Xaml.Automation.Peers.IScrollPresenterAutomationPeerMethods.IID, out _inner);

            }
            finally
            {
                Marshal.Release(inner);   
            }
        }

        public static new ScrollPresenterAutomationPeer FromAbi(IntPtr thisPtr)
        {
            if (thisPtr == IntPtr.Zero) return null;
            return MarshalInspectable<ScrollPresenterAutomationPeer>.FromAbi(thisPtr);
        }

        protected internal ScrollPresenterAutomationPeer(IObjectReference objRef)
            : base(global::WinRT.DerivedComposed.Instance)

        {
            _inner = objRef.As(global::ABI.Microsoft.UI.Xaml.Automation.Peers.IScrollPresenterAutomationPeerMethods.IID);

        }


        public static bool operator ==(ScrollPresenterAutomationPeer x, ScrollPresenterAutomationPeer y) => (x?.ThisPtr ?? IntPtr.Zero) == (y?.ThisPtr ?? IntPtr.Zero);
        public static bool operator !=(ScrollPresenterAutomationPeer x, ScrollPresenterAutomationPeer y) => !(x == y);
        public bool Equals(ScrollPresenterAutomationPeer other) => this == other;
        public override bool Equals(object obj) => obj is ScrollPresenterAutomationPeer that && this == that;
        public override int GetHashCode() => ThisPtr.GetHashCode();


        protected ScrollPresenterAutomationPeer(global::WinRT.DerivedComposed _):base(_)
        {

        }
        bool IWinRTObject.HasUnwrappableNativeObject => this.GetType() == typeof(ScrollPresenterAutomationPeer);
        IObjectReference IWinRTObject.NativeObject => _inner;

        private struct InterfaceTag<I>{};


        protected override bool IsOverridableInterface(Guid iid) => base.IsOverridableInterface(iid);

        global::System.Runtime.InteropServices.CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(ref Guid iid, out IntPtr ppv)
        {
            ppv = IntPtr.Zero;
            if (IsOverridableInterface(iid) || global::WinRT.Interop.IID.IID_IInspectable == iid)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
            }

            if (((IWinRTObject)this).NativeObject.TryAs(iid, out ppv) >= 0)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.Handled;
            }

            return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
        }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")]
    [global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Automation.Peers.ScrollViewerAutomationPeer))]
    [global::ABI.Microsoft.UI.Xaml.Automation.Peers.ScrollViewerAutomationPeerRcwFactory]
    [global::WinRT.ProjectedRuntimeClass(typeof(IScrollViewerAutomationPeer))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    public class ScrollViewerAutomationPeer : FrameworkElementAutomationPeer, global::Microsoft.UI.Xaml.Automation.Provider.IScrollProvider, global::System.Runtime.InteropServices.ICustomQueryInterface, IWinRTObject, IEquatable<ScrollViewerAutomationPeer>
    {
        private IntPtr ThisPtr => _inner == null ? (((IWinRTObject)this).NativeObject).ThisPtr : _inner.ThisPtr;

        private readonly IObjectReference _inner = null;




        private volatile IObjectReference ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IScrollViewerAutomationPeer;
        private IObjectReference Make___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IScrollViewerAutomationPeer()
        {
            global::System.Threading.Interlocked.CompareExchange(ref ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IScrollViewerAutomationPeer, ((IWinRTObject)this).NativeObject.As<IUnknownVftbl>(global::ABI.Microsoft.UI.Xaml.Automation.Peers.IScrollViewerAutomationPeerMethods.IID), null);
            return ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IScrollViewerAutomationPeer;
        }
        private IObjectReference _objRef_global__Microsoft_UI_Xaml_Automation_Peers_IScrollViewerAutomationPeer => ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IScrollViewerAutomationPeer ?? Make___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IScrollViewerAutomationPeer();

        private volatile IObjectReference ___objRef_global__Microsoft_UI_Xaml_Automation_Provider_IScrollProvider;
        private IObjectReference Make___objRef_global__Microsoft_UI_Xaml_Automation_Provider_IScrollProvider()
        {
            global::System.Threading.Interlocked.CompareExchange(ref ___objRef_global__Microsoft_UI_Xaml_Automation_Provider_IScrollProvider, ((IWinRTObject)this).NativeObject.As<IUnknownVftbl>(global::ABI.Microsoft.UI.Xaml.Automation.Provider.IScrollProviderMethods.IID), null);
            return ___objRef_global__Microsoft_UI_Xaml_Automation_Provider_IScrollProvider;
        }
        private IObjectReference _objRef_global__Microsoft_UI_Xaml_Automation_Provider_IScrollProvider => ___objRef_global__Microsoft_UI_Xaml_Automation_Provider_IScrollProvider ?? Make___objRef_global__Microsoft_UI_Xaml_Automation_Provider_IScrollProvider();



        private static class _IScrollViewerAutomationPeerFactoryMethods
        {
            public static unsafe IntPtr CreateInstanceWithOwner(IObjectReference _obj, global::Microsoft.UI.Xaml.Controls.ScrollViewer owner, object baseInterface, out IntPtr innerInterface)
            {
                var ThisPtr = _obj.ThisPtr;

                ObjectReferenceValue __owner = default;
                ObjectReferenceValue __baseInterface = default;
                IntPtr __innerInterface = default;
                IntPtr __retval = default;
                try
                {
                    __owner = global::ABI.Microsoft.UI.Xaml.Controls.ScrollViewer.CreateMarshaler2(owner);
                    __baseInterface = MarshalInspectable<object>.CreateMarshaler2(baseInterface);
                    global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, IntPtr, IntPtr*, IntPtr*, int>**)ThisPtr)[6](ThisPtr, MarshalInspectable<object>.GetAbi(__owner), MarshalInspectable<object>.GetAbi(__baseInterface), &__innerInterface, &__retval));
                    global::System.GC.KeepAlive(_obj);
                    innerInterface = __innerInterface;
                    return __retval;
                }
                finally
                {
                    MarshalInspectable<object>.DisposeMarshaler(__owner);
                    MarshalInspectable<object>.DisposeMarshaler(__baseInterface);
                }
            }
        }

        private static volatile IObjectReference ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IScrollViewerAutomationPeerFactory;
        private static IObjectReference _objRef_global__Microsoft_UI_Xaml_Automation_Peers_IScrollViewerAutomationPeerFactory
        {
            get
            { 
                var factory = ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IScrollViewerAutomationPeerFactory;
                if (factory != null && factory.IsInCurrentContext)
                {
                    return factory;
                }
                else
                {
                    return ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IScrollViewerAutomationPeerFactory = ActivationFactory.Get("Microsoft.UI.Xaml.Automation.Peers.ScrollViewerAutomationPeer", global::ABI.Microsoft.UI.Xaml.Automation.Peers.IScrollViewerAutomationPeerFactoryMethods.IID);
                }
            }
        }

        public ScrollViewerAutomationPeer(global::Microsoft.UI.Xaml.Controls.ScrollViewer owner):base(global::WinRT.DerivedComposed.Instance)
        {
            bool isAggregation = this.GetType() != typeof(ScrollViewerAutomationPeer);
            object baseInspectable = isAggregation ? this : null;
            IntPtr composed = _IScrollViewerAutomationPeerFactoryMethods.CreateInstanceWithOwner(_objRef_global__Microsoft_UI_Xaml_Automation_Peers_IScrollViewerAutomationPeerFactory, owner, baseInspectable, out IntPtr inner);
            try
            {
                ComWrappersHelper.Init(isAggregation, this, composed, inner, global::ABI.Microsoft.UI.Xaml.Automation.Peers.IScrollViewerAutomationPeerMethods.IID, out _inner);

            }
            finally
            {
                Marshal.Release(inner);   
            }
        }

        public static new ScrollViewerAutomationPeer FromAbi(IntPtr thisPtr)
        {
            if (thisPtr == IntPtr.Zero) return null;
            return MarshalInspectable<ScrollViewerAutomationPeer>.FromAbi(thisPtr);
        }

        protected internal ScrollViewerAutomationPeer(IObjectReference objRef)
            : base(global::WinRT.DerivedComposed.Instance)

        {
            _inner = objRef.As(global::ABI.Microsoft.UI.Xaml.Automation.Peers.IScrollViewerAutomationPeerMethods.IID);

        }


        public static bool operator ==(ScrollViewerAutomationPeer x, ScrollViewerAutomationPeer y) => (x?.ThisPtr ?? IntPtr.Zero) == (y?.ThisPtr ?? IntPtr.Zero);
        public static bool operator !=(ScrollViewerAutomationPeer x, ScrollViewerAutomationPeer y) => !(x == y);
        public bool Equals(ScrollViewerAutomationPeer other) => this == other;
        public override bool Equals(object obj) => obj is ScrollViewerAutomationPeer that && this == that;
        public override int GetHashCode() => ThisPtr.GetHashCode();


        protected ScrollViewerAutomationPeer(global::WinRT.DerivedComposed _):base(_)
        {

        }
        bool IWinRTObject.HasUnwrappableNativeObject => this.GetType() == typeof(ScrollViewerAutomationPeer);
        IObjectReference IWinRTObject.NativeObject => _inner;

        private struct InterfaceTag<I>{};


        public void Scroll(global::Microsoft.UI.Xaml.Automation.ScrollAmount horizontalAmount, global::Microsoft.UI.Xaml.Automation.ScrollAmount verticalAmount) => global::ABI.Microsoft.UI.Xaml.Automation.Provider.IScrollProviderMethods.Scroll(_objRef_global__Microsoft_UI_Xaml_Automation_Provider_IScrollProvider, horizontalAmount, verticalAmount);

        public void SetScrollPercent(double horizontalPercent, double verticalPercent) => global::ABI.Microsoft.UI.Xaml.Automation.Provider.IScrollProviderMethods.SetScrollPercent(_objRef_global__Microsoft_UI_Xaml_Automation_Provider_IScrollProvider, horizontalPercent, verticalPercent);

        public double HorizontalScrollPercent => global::ABI.Microsoft.UI.Xaml.Automation.Provider.IScrollProviderMethods.get_HorizontalScrollPercent(_objRef_global__Microsoft_UI_Xaml_Automation_Provider_IScrollProvider);

        public double HorizontalViewSize => global::ABI.Microsoft.UI.Xaml.Automation.Provider.IScrollProviderMethods.get_HorizontalViewSize(_objRef_global__Microsoft_UI_Xaml_Automation_Provider_IScrollProvider);

        public bool HorizontallyScrollable => global::ABI.Microsoft.UI.Xaml.Automation.Provider.IScrollProviderMethods.get_HorizontallyScrollable(_objRef_global__Microsoft_UI_Xaml_Automation_Provider_IScrollProvider);

        public double VerticalScrollPercent => global::ABI.Microsoft.UI.Xaml.Automation.Provider.IScrollProviderMethods.get_VerticalScrollPercent(_objRef_global__Microsoft_UI_Xaml_Automation_Provider_IScrollProvider);

        public double VerticalViewSize => global::ABI.Microsoft.UI.Xaml.Automation.Provider.IScrollProviderMethods.get_VerticalViewSize(_objRef_global__Microsoft_UI_Xaml_Automation_Provider_IScrollProvider);

        public bool VerticallyScrollable => global::ABI.Microsoft.UI.Xaml.Automation.Provider.IScrollProviderMethods.get_VerticallyScrollable(_objRef_global__Microsoft_UI_Xaml_Automation_Provider_IScrollProvider);

        protected override bool IsOverridableInterface(Guid iid) => base.IsOverridableInterface(iid);

        global::System.Runtime.InteropServices.CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(ref Guid iid, out IntPtr ppv)
        {
            ppv = IntPtr.Zero;
            if (IsOverridableInterface(iid) || global::WinRT.Interop.IID.IID_IInspectable == iid)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
            }

            if (((IWinRTObject)this).NativeObject.TryAs(iid, out ppv) >= 0)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.Handled;
            }

            return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
        }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")]
    [global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Automation.Peers.SelectorAutomationPeer))]
    [global::ABI.Microsoft.UI.Xaml.Automation.Peers.SelectorAutomationPeerRcwFactory]
    [global::WinRT.ProjectedRuntimeClass(typeof(ISelectorAutomationPeer))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    public class SelectorAutomationPeer : ItemsControlAutomationPeer, global::Microsoft.UI.Xaml.Automation.Provider.ISelectionProvider, global::System.Runtime.InteropServices.ICustomQueryInterface, IWinRTObject, IEquatable<SelectorAutomationPeer>
    {
        private IntPtr ThisPtr => _inner == null ? (((IWinRTObject)this).NativeObject).ThisPtr : _inner.ThisPtr;

        private readonly IObjectReference _inner = null;




        private volatile IObjectReference ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_ISelectorAutomationPeer;
        private IObjectReference Make___objRef_global__Microsoft_UI_Xaml_Automation_Peers_ISelectorAutomationPeer()
        {
            global::System.Threading.Interlocked.CompareExchange(ref ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_ISelectorAutomationPeer, ((IWinRTObject)this).NativeObject.As<IUnknownVftbl>(global::ABI.Microsoft.UI.Xaml.Automation.Peers.ISelectorAutomationPeerMethods.IID), null);
            return ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_ISelectorAutomationPeer;
        }
        private IObjectReference _objRef_global__Microsoft_UI_Xaml_Automation_Peers_ISelectorAutomationPeer => ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_ISelectorAutomationPeer ?? Make___objRef_global__Microsoft_UI_Xaml_Automation_Peers_ISelectorAutomationPeer();

        private volatile IObjectReference ___objRef_global__Microsoft_UI_Xaml_Automation_Provider_ISelectionProvider;
        private IObjectReference Make___objRef_global__Microsoft_UI_Xaml_Automation_Provider_ISelectionProvider()
        {
            global::System.Threading.Interlocked.CompareExchange(ref ___objRef_global__Microsoft_UI_Xaml_Automation_Provider_ISelectionProvider, ((IWinRTObject)this).NativeObject.As<IUnknownVftbl>(global::ABI.Microsoft.UI.Xaml.Automation.Provider.ISelectionProviderMethods.IID), null);
            return ___objRef_global__Microsoft_UI_Xaml_Automation_Provider_ISelectionProvider;
        }
        private IObjectReference _objRef_global__Microsoft_UI_Xaml_Automation_Provider_ISelectionProvider => ___objRef_global__Microsoft_UI_Xaml_Automation_Provider_ISelectionProvider ?? Make___objRef_global__Microsoft_UI_Xaml_Automation_Provider_ISelectionProvider();



        private static class _ISelectorAutomationPeerFactoryMethods
        {
            public static unsafe IntPtr CreateInstanceWithOwner(IObjectReference _obj, global::Microsoft.UI.Xaml.Controls.Primitives.Selector owner, object baseInterface, out IntPtr innerInterface)
            {
                var ThisPtr = _obj.ThisPtr;

                ObjectReferenceValue __owner = default;
                ObjectReferenceValue __baseInterface = default;
                IntPtr __innerInterface = default;
                IntPtr __retval = default;
                try
                {
                    __owner = global::ABI.Microsoft.UI.Xaml.Controls.Primitives.Selector.CreateMarshaler2(owner);
                    __baseInterface = MarshalInspectable<object>.CreateMarshaler2(baseInterface);
                    global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, IntPtr, IntPtr*, IntPtr*, int>**)ThisPtr)[6](ThisPtr, MarshalInspectable<object>.GetAbi(__owner), MarshalInspectable<object>.GetAbi(__baseInterface), &__innerInterface, &__retval));
                    global::System.GC.KeepAlive(_obj);
                    innerInterface = __innerInterface;
                    return __retval;
                }
                finally
                {
                    MarshalInspectable<object>.DisposeMarshaler(__owner);
                    MarshalInspectable<object>.DisposeMarshaler(__baseInterface);
                }
            }
        }

        private static volatile IObjectReference ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_ISelectorAutomationPeerFactory;
        private static IObjectReference _objRef_global__Microsoft_UI_Xaml_Automation_Peers_ISelectorAutomationPeerFactory
        {
            get
            { 
                var factory = ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_ISelectorAutomationPeerFactory;
                if (factory != null && factory.IsInCurrentContext)
                {
                    return factory;
                }
                else
                {
                    return ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_ISelectorAutomationPeerFactory = ActivationFactory.Get("Microsoft.UI.Xaml.Automation.Peers.SelectorAutomationPeer", global::ABI.Microsoft.UI.Xaml.Automation.Peers.ISelectorAutomationPeerFactoryMethods.IID);
                }
            }
        }

        public SelectorAutomationPeer(global::Microsoft.UI.Xaml.Controls.Primitives.Selector owner):base(global::WinRT.DerivedComposed.Instance)
        {
            bool isAggregation = this.GetType() != typeof(SelectorAutomationPeer);
            object baseInspectable = isAggregation ? this : null;
            IntPtr composed = _ISelectorAutomationPeerFactoryMethods.CreateInstanceWithOwner(_objRef_global__Microsoft_UI_Xaml_Automation_Peers_ISelectorAutomationPeerFactory, owner, baseInspectable, out IntPtr inner);
            try
            {
                ComWrappersHelper.Init(isAggregation, this, composed, inner, global::ABI.Microsoft.UI.Xaml.Automation.Peers.ISelectorAutomationPeerMethods.IID, out _inner);

            }
            finally
            {
                Marshal.Release(inner);   
            }
        }

        public static new SelectorAutomationPeer FromAbi(IntPtr thisPtr)
        {
            if (thisPtr == IntPtr.Zero) return null;
            return MarshalInspectable<SelectorAutomationPeer>.FromAbi(thisPtr);
        }

        protected internal SelectorAutomationPeer(IObjectReference objRef)
            : base(global::WinRT.DerivedComposed.Instance)

        {
            _inner = objRef.As(global::ABI.Microsoft.UI.Xaml.Automation.Peers.ISelectorAutomationPeerMethods.IID);

        }


        public static bool operator ==(SelectorAutomationPeer x, SelectorAutomationPeer y) => (x?.ThisPtr ?? IntPtr.Zero) == (y?.ThisPtr ?? IntPtr.Zero);
        public static bool operator !=(SelectorAutomationPeer x, SelectorAutomationPeer y) => !(x == y);
        public bool Equals(SelectorAutomationPeer other) => this == other;
        public override bool Equals(object obj) => obj is SelectorAutomationPeer that && this == that;
        public override int GetHashCode() => ThisPtr.GetHashCode();


        protected SelectorAutomationPeer(global::WinRT.DerivedComposed _):base(_)
        {

        }
        bool IWinRTObject.HasUnwrappableNativeObject => this.GetType() == typeof(SelectorAutomationPeer);
        IObjectReference IWinRTObject.NativeObject => _inner;

        private struct InterfaceTag<I>{};


        public global::Microsoft.UI.Xaml.Automation.Provider.IRawElementProviderSimple[] GetSelection() => global::ABI.Microsoft.UI.Xaml.Automation.Provider.ISelectionProviderMethods.GetSelection(_objRef_global__Microsoft_UI_Xaml_Automation_Provider_ISelectionProvider);

        public bool CanSelectMultiple => global::ABI.Microsoft.UI.Xaml.Automation.Provider.ISelectionProviderMethods.get_CanSelectMultiple(_objRef_global__Microsoft_UI_Xaml_Automation_Provider_ISelectionProvider);

        public bool IsSelectionRequired => global::ABI.Microsoft.UI.Xaml.Automation.Provider.ISelectionProviderMethods.get_IsSelectionRequired(_objRef_global__Microsoft_UI_Xaml_Automation_Provider_ISelectionProvider);

        protected override bool IsOverridableInterface(Guid iid) => base.IsOverridableInterface(iid);

        global::System.Runtime.InteropServices.CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(ref Guid iid, out IntPtr ppv)
        {
            ppv = IntPtr.Zero;
            if (IsOverridableInterface(iid) || global::WinRT.Interop.IID.IID_IInspectable == iid)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
            }

            if (((IWinRTObject)this).NativeObject.TryAs(iid, out ppv) >= 0)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.Handled;
            }

            return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
        }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")]
    [global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Automation.Peers.SelectorBarItemAutomationPeer))]
    [global::ABI.Microsoft.UI.Xaml.Automation.Peers.SelectorBarItemAutomationPeerRcwFactory]
    [global::WinRT.ProjectedRuntimeClass(typeof(ISelectorBarItemAutomationPeer))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.XamlContract), 393216u)]
    public class SelectorBarItemAutomationPeer : ItemContainerAutomationPeer, global::System.Runtime.InteropServices.ICustomQueryInterface, IWinRTObject, IEquatable<SelectorBarItemAutomationPeer>
    {
        private IntPtr ThisPtr => _inner == null ? (((IWinRTObject)this).NativeObject).ThisPtr : _inner.ThisPtr;

        private readonly IObjectReference _inner = null;




        private volatile IObjectReference ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_ISelectorBarItemAutomationPeer;
        private IObjectReference Make___objRef_global__Microsoft_UI_Xaml_Automation_Peers_ISelectorBarItemAutomationPeer()
        {
            global::System.Threading.Interlocked.CompareExchange(ref ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_ISelectorBarItemAutomationPeer, ((IWinRTObject)this).NativeObject.As<IUnknownVftbl>(global::ABI.Microsoft.UI.Xaml.Automation.Peers.ISelectorBarItemAutomationPeerMethods.IID), null);
            return ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_ISelectorBarItemAutomationPeer;
        }
        private IObjectReference _objRef_global__Microsoft_UI_Xaml_Automation_Peers_ISelectorBarItemAutomationPeer => ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_ISelectorBarItemAutomationPeer ?? Make___objRef_global__Microsoft_UI_Xaml_Automation_Peers_ISelectorBarItemAutomationPeer();



        private static class _ISelectorBarItemAutomationPeerFactoryMethods
        {
            public static unsafe IntPtr CreateInstanceWithOwner(IObjectReference _obj, global::Microsoft.UI.Xaml.Controls.SelectorBarItem owner, object baseInterface, out IntPtr innerInterface)
            {
                var ThisPtr = _obj.ThisPtr;

                ObjectReferenceValue __owner = default;
                ObjectReferenceValue __baseInterface = default;
                IntPtr __innerInterface = default;
                IntPtr __retval = default;
                try
                {
                    __owner = global::ABI.Microsoft.UI.Xaml.Controls.SelectorBarItem.CreateMarshaler2(owner);
                    __baseInterface = MarshalInspectable<object>.CreateMarshaler2(baseInterface);
                    global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, IntPtr, IntPtr*, IntPtr*, int>**)ThisPtr)[6](ThisPtr, MarshalInspectable<object>.GetAbi(__owner), MarshalInspectable<object>.GetAbi(__baseInterface), &__innerInterface, &__retval));
                    global::System.GC.KeepAlive(_obj);
                    innerInterface = __innerInterface;
                    return __retval;
                }
                finally
                {
                    MarshalInspectable<object>.DisposeMarshaler(__owner);
                    MarshalInspectable<object>.DisposeMarshaler(__baseInterface);
                }
            }
        }

        private static volatile IObjectReference ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_ISelectorBarItemAutomationPeerFactory;
        private static IObjectReference _objRef_global__Microsoft_UI_Xaml_Automation_Peers_ISelectorBarItemAutomationPeerFactory
        {
            get
            { 
                var factory = ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_ISelectorBarItemAutomationPeerFactory;
                if (factory != null && factory.IsInCurrentContext)
                {
                    return factory;
                }
                else
                {
                    return ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_ISelectorBarItemAutomationPeerFactory = ActivationFactory.Get("Microsoft.UI.Xaml.Automation.Peers.SelectorBarItemAutomationPeer", global::ABI.Microsoft.UI.Xaml.Automation.Peers.ISelectorBarItemAutomationPeerFactoryMethods.IID);
                }
            }
        }

        public SelectorBarItemAutomationPeer(global::Microsoft.UI.Xaml.Controls.SelectorBarItem owner):base(global::WinRT.DerivedComposed.Instance)
        {
            bool isAggregation = this.GetType() != typeof(SelectorBarItemAutomationPeer);
            object baseInspectable = isAggregation ? this : null;
            IntPtr composed = _ISelectorBarItemAutomationPeerFactoryMethods.CreateInstanceWithOwner(_objRef_global__Microsoft_UI_Xaml_Automation_Peers_ISelectorBarItemAutomationPeerFactory, owner, baseInspectable, out IntPtr inner);
            try
            {
                ComWrappersHelper.Init(isAggregation, this, composed, inner, global::ABI.Microsoft.UI.Xaml.Automation.Peers.ISelectorBarItemAutomationPeerMethods.IID, out _inner);

            }
            finally
            {
                Marshal.Release(inner);   
            }
        }

        public static new SelectorBarItemAutomationPeer FromAbi(IntPtr thisPtr)
        {
            if (thisPtr == IntPtr.Zero) return null;
            return MarshalInspectable<SelectorBarItemAutomationPeer>.FromAbi(thisPtr);
        }

        protected internal SelectorBarItemAutomationPeer(IObjectReference objRef)
            : base(global::WinRT.DerivedComposed.Instance)

        {
            _inner = objRef.As(global::ABI.Microsoft.UI.Xaml.Automation.Peers.ISelectorBarItemAutomationPeerMethods.IID);

        }


        public static bool operator ==(SelectorBarItemAutomationPeer x, SelectorBarItemAutomationPeer y) => (x?.ThisPtr ?? IntPtr.Zero) == (y?.ThisPtr ?? IntPtr.Zero);
        public static bool operator !=(SelectorBarItemAutomationPeer x, SelectorBarItemAutomationPeer y) => !(x == y);
        public bool Equals(SelectorBarItemAutomationPeer other) => this == other;
        public override bool Equals(object obj) => obj is SelectorBarItemAutomationPeer that && this == that;
        public override int GetHashCode() => ThisPtr.GetHashCode();


        protected SelectorBarItemAutomationPeer(global::WinRT.DerivedComposed _):base(_)
        {

        }
        bool IWinRTObject.HasUnwrappableNativeObject => this.GetType() == typeof(SelectorBarItemAutomationPeer);
        IObjectReference IWinRTObject.NativeObject => _inner;

        private struct InterfaceTag<I>{};


        protected override bool IsOverridableInterface(Guid iid) => base.IsOverridableInterface(iid);

        global::System.Runtime.InteropServices.CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(ref Guid iid, out IntPtr ppv)
        {
            ppv = IntPtr.Zero;
            if (IsOverridableInterface(iid) || global::WinRT.Interop.IID.IID_IInspectable == iid)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
            }

            if (((IWinRTObject)this).NativeObject.TryAs(iid, out ppv) >= 0)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.Handled;
            }

            return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
        }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")]
    [global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Automation.Peers.SelectorItemAutomationPeer))]
    [global::ABI.Microsoft.UI.Xaml.Automation.Peers.SelectorItemAutomationPeerRcwFactory]
    [global::WinRT.ProjectedRuntimeClass(typeof(ISelectorItemAutomationPeer))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    public class SelectorItemAutomationPeer : ItemAutomationPeer, global::Microsoft.UI.Xaml.Automation.Provider.ISelectionItemProvider, global::System.Runtime.InteropServices.ICustomQueryInterface, IWinRTObject, IEquatable<SelectorItemAutomationPeer>
    {
        private IntPtr ThisPtr => _inner == null ? (((IWinRTObject)this).NativeObject).ThisPtr : _inner.ThisPtr;

        private readonly IObjectReference _inner = null;




        private volatile IObjectReference ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_ISelectorItemAutomationPeer;
        private IObjectReference Make___objRef_global__Microsoft_UI_Xaml_Automation_Peers_ISelectorItemAutomationPeer()
        {
            global::System.Threading.Interlocked.CompareExchange(ref ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_ISelectorItemAutomationPeer, ((IWinRTObject)this).NativeObject.As<IUnknownVftbl>(global::ABI.Microsoft.UI.Xaml.Automation.Peers.ISelectorItemAutomationPeerMethods.IID), null);
            return ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_ISelectorItemAutomationPeer;
        }
        private IObjectReference _objRef_global__Microsoft_UI_Xaml_Automation_Peers_ISelectorItemAutomationPeer => ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_ISelectorItemAutomationPeer ?? Make___objRef_global__Microsoft_UI_Xaml_Automation_Peers_ISelectorItemAutomationPeer();

        private volatile IObjectReference ___objRef_global__Microsoft_UI_Xaml_Automation_Provider_ISelectionItemProvider;
        private IObjectReference Make___objRef_global__Microsoft_UI_Xaml_Automation_Provider_ISelectionItemProvider()
        {
            global::System.Threading.Interlocked.CompareExchange(ref ___objRef_global__Microsoft_UI_Xaml_Automation_Provider_ISelectionItemProvider, ((IWinRTObject)this).NativeObject.As<IUnknownVftbl>(global::ABI.Microsoft.UI.Xaml.Automation.Provider.ISelectionItemProviderMethods.IID), null);
            return ___objRef_global__Microsoft_UI_Xaml_Automation_Provider_ISelectionItemProvider;
        }
        private IObjectReference _objRef_global__Microsoft_UI_Xaml_Automation_Provider_ISelectionItemProvider => ___objRef_global__Microsoft_UI_Xaml_Automation_Provider_ISelectionItemProvider ?? Make___objRef_global__Microsoft_UI_Xaml_Automation_Provider_ISelectionItemProvider();



        private static class _ISelectorItemAutomationPeerFactoryMethods
        {
            public static unsafe IntPtr CreateInstanceWithParentAndItem(IObjectReference _obj, object item, SelectorAutomationPeer parent, object baseInterface, out IntPtr innerInterface)
            {
                var ThisPtr = _obj.ThisPtr;

                ObjectReferenceValue __item = default;
                ObjectReferenceValue __parent = default;
                ObjectReferenceValue __baseInterface = default;
                IntPtr __innerInterface = default;
                IntPtr __retval = default;
                try
                {
                    __item = MarshalInspectable<object>.CreateMarshaler2(item);
                    __parent = global::ABI.Microsoft.UI.Xaml.Automation.Peers.SelectorAutomationPeer.CreateMarshaler2(parent);
                    __baseInterface = MarshalInspectable<object>.CreateMarshaler2(baseInterface);
                    global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, IntPtr, IntPtr, IntPtr*, IntPtr*, int>**)ThisPtr)[6](ThisPtr, MarshalInspectable<object>.GetAbi(__item), MarshalInspectable<object>.GetAbi(__parent), MarshalInspectable<object>.GetAbi(__baseInterface), &__innerInterface, &__retval));
                    global::System.GC.KeepAlive(_obj);
                    innerInterface = __innerInterface;
                    return __retval;
                }
                finally
                {
                    MarshalInspectable<object>.DisposeMarshaler(__item);
                    MarshalInspectable<object>.DisposeMarshaler(__parent);
                    MarshalInspectable<object>.DisposeMarshaler(__baseInterface);
                }
            }
        }

        private static volatile IObjectReference ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_ISelectorItemAutomationPeerFactory;
        private static IObjectReference _objRef_global__Microsoft_UI_Xaml_Automation_Peers_ISelectorItemAutomationPeerFactory
        {
            get
            { 
                var factory = ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_ISelectorItemAutomationPeerFactory;
                if (factory != null && factory.IsInCurrentContext)
                {
                    return factory;
                }
                else
                {
                    return ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_ISelectorItemAutomationPeerFactory = ActivationFactory.Get("Microsoft.UI.Xaml.Automation.Peers.SelectorItemAutomationPeer", global::ABI.Microsoft.UI.Xaml.Automation.Peers.ISelectorItemAutomationPeerFactoryMethods.IID);
                }
            }
        }

        public SelectorItemAutomationPeer(object item, SelectorAutomationPeer parent):base(global::WinRT.DerivedComposed.Instance)
        {
            bool isAggregation = this.GetType() != typeof(SelectorItemAutomationPeer);
            object baseInspectable = isAggregation ? this : null;
            IntPtr composed = _ISelectorItemAutomationPeerFactoryMethods.CreateInstanceWithParentAndItem(_objRef_global__Microsoft_UI_Xaml_Automation_Peers_ISelectorItemAutomationPeerFactory, item, parent, baseInspectable, out IntPtr inner);
            try
            {
                ComWrappersHelper.Init(isAggregation, this, composed, inner, global::ABI.Microsoft.UI.Xaml.Automation.Peers.ISelectorItemAutomationPeerMethods.IID, out _inner);

            }
            finally
            {
                Marshal.Release(inner);   
            }
        }

        public static new SelectorItemAutomationPeer FromAbi(IntPtr thisPtr)
        {
            if (thisPtr == IntPtr.Zero) return null;
            return MarshalInspectable<SelectorItemAutomationPeer>.FromAbi(thisPtr);
        }

        protected internal SelectorItemAutomationPeer(IObjectReference objRef)
            : base(global::WinRT.DerivedComposed.Instance)

        {
            _inner = objRef.As(global::ABI.Microsoft.UI.Xaml.Automation.Peers.ISelectorItemAutomationPeerMethods.IID);

        }


        public static bool operator ==(SelectorItemAutomationPeer x, SelectorItemAutomationPeer y) => (x?.ThisPtr ?? IntPtr.Zero) == (y?.ThisPtr ?? IntPtr.Zero);
        public static bool operator !=(SelectorItemAutomationPeer x, SelectorItemAutomationPeer y) => !(x == y);
        public bool Equals(SelectorItemAutomationPeer other) => this == other;
        public override bool Equals(object obj) => obj is SelectorItemAutomationPeer that && this == that;
        public override int GetHashCode() => ThisPtr.GetHashCode();


        protected SelectorItemAutomationPeer(global::WinRT.DerivedComposed _):base(_)
        {

        }
        bool IWinRTObject.HasUnwrappableNativeObject => this.GetType() == typeof(SelectorItemAutomationPeer);
        IObjectReference IWinRTObject.NativeObject => _inner;

        private struct InterfaceTag<I>{};


        public void AddToSelection() => global::ABI.Microsoft.UI.Xaml.Automation.Provider.ISelectionItemProviderMethods.AddToSelection(_objRef_global__Microsoft_UI_Xaml_Automation_Provider_ISelectionItemProvider);

        public void RemoveFromSelection() => global::ABI.Microsoft.UI.Xaml.Automation.Provider.ISelectionItemProviderMethods.RemoveFromSelection(_objRef_global__Microsoft_UI_Xaml_Automation_Provider_ISelectionItemProvider);

        public void Select() => global::ABI.Microsoft.UI.Xaml.Automation.Provider.ISelectionItemProviderMethods.Select(_objRef_global__Microsoft_UI_Xaml_Automation_Provider_ISelectionItemProvider);

        public bool IsSelected => global::ABI.Microsoft.UI.Xaml.Automation.Provider.ISelectionItemProviderMethods.get_IsSelected(_objRef_global__Microsoft_UI_Xaml_Automation_Provider_ISelectionItemProvider);

        public global::Microsoft.UI.Xaml.Automation.Provider.IRawElementProviderSimple SelectionContainer => global::ABI.Microsoft.UI.Xaml.Automation.Provider.ISelectionItemProviderMethods.get_SelectionContainer(_objRef_global__Microsoft_UI_Xaml_Automation_Provider_ISelectionItemProvider);

        protected override bool IsOverridableInterface(Guid iid) => base.IsOverridableInterface(iid);

        global::System.Runtime.InteropServices.CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(ref Guid iid, out IntPtr ppv)
        {
            ppv = IntPtr.Zero;
            if (IsOverridableInterface(iid) || global::WinRT.Interop.IID.IID_IInspectable == iid)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
            }

            if (((IWinRTObject)this).NativeObject.TryAs(iid, out ppv) >= 0)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.Handled;
            }

            return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
        }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")]
    [global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Automation.Peers.SemanticZoomAutomationPeer))]
    [global::ABI.Microsoft.UI.Xaml.Automation.Peers.SemanticZoomAutomationPeerRcwFactory]
    [global::WinRT.ProjectedRuntimeClass(typeof(ISemanticZoomAutomationPeer))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    public class SemanticZoomAutomationPeer : FrameworkElementAutomationPeer, global::Microsoft.UI.Xaml.Automation.Provider.IToggleProvider, global::System.Runtime.InteropServices.ICustomQueryInterface, IWinRTObject, IEquatable<SemanticZoomAutomationPeer>
    {
        private IntPtr ThisPtr => _inner == null ? (((IWinRTObject)this).NativeObject).ThisPtr : _inner.ThisPtr;

        private readonly IObjectReference _inner = null;




        private volatile IObjectReference ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_ISemanticZoomAutomationPeer;
        private IObjectReference Make___objRef_global__Microsoft_UI_Xaml_Automation_Peers_ISemanticZoomAutomationPeer()
        {
            global::System.Threading.Interlocked.CompareExchange(ref ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_ISemanticZoomAutomationPeer, ((IWinRTObject)this).NativeObject.As<IUnknownVftbl>(global::ABI.Microsoft.UI.Xaml.Automation.Peers.ISemanticZoomAutomationPeerMethods.IID), null);
            return ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_ISemanticZoomAutomationPeer;
        }
        private IObjectReference _objRef_global__Microsoft_UI_Xaml_Automation_Peers_ISemanticZoomAutomationPeer => ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_ISemanticZoomAutomationPeer ?? Make___objRef_global__Microsoft_UI_Xaml_Automation_Peers_ISemanticZoomAutomationPeer();

        private volatile IObjectReference ___objRef_global__Microsoft_UI_Xaml_Automation_Provider_IToggleProvider;
        private IObjectReference Make___objRef_global__Microsoft_UI_Xaml_Automation_Provider_IToggleProvider()
        {
            global::System.Threading.Interlocked.CompareExchange(ref ___objRef_global__Microsoft_UI_Xaml_Automation_Provider_IToggleProvider, ((IWinRTObject)this).NativeObject.As<IUnknownVftbl>(global::ABI.Microsoft.UI.Xaml.Automation.Provider.IToggleProviderMethods.IID), null);
            return ___objRef_global__Microsoft_UI_Xaml_Automation_Provider_IToggleProvider;
        }
        private IObjectReference _objRef_global__Microsoft_UI_Xaml_Automation_Provider_IToggleProvider => ___objRef_global__Microsoft_UI_Xaml_Automation_Provider_IToggleProvider ?? Make___objRef_global__Microsoft_UI_Xaml_Automation_Provider_IToggleProvider();



        private static class _ISemanticZoomAutomationPeerFactoryMethods
        {
            public static unsafe IntPtr CreateInstanceWithOwner(IObjectReference _obj, global::Microsoft.UI.Xaml.Controls.SemanticZoom owner, object baseInterface, out IntPtr innerInterface)
            {
                var ThisPtr = _obj.ThisPtr;

                ObjectReferenceValue __owner = default;
                ObjectReferenceValue __baseInterface = default;
                IntPtr __innerInterface = default;
                IntPtr __retval = default;
                try
                {
                    __owner = global::ABI.Microsoft.UI.Xaml.Controls.SemanticZoom.CreateMarshaler2(owner);
                    __baseInterface = MarshalInspectable<object>.CreateMarshaler2(baseInterface);
                    global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, IntPtr, IntPtr*, IntPtr*, int>**)ThisPtr)[6](ThisPtr, MarshalInspectable<object>.GetAbi(__owner), MarshalInspectable<object>.GetAbi(__baseInterface), &__innerInterface, &__retval));
                    global::System.GC.KeepAlive(_obj);
                    innerInterface = __innerInterface;
                    return __retval;
                }
                finally
                {
                    MarshalInspectable<object>.DisposeMarshaler(__owner);
                    MarshalInspectable<object>.DisposeMarshaler(__baseInterface);
                }
            }
        }

        private static volatile IObjectReference ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_ISemanticZoomAutomationPeerFactory;
        private static IObjectReference _objRef_global__Microsoft_UI_Xaml_Automation_Peers_ISemanticZoomAutomationPeerFactory
        {
            get
            { 
                var factory = ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_ISemanticZoomAutomationPeerFactory;
                if (factory != null && factory.IsInCurrentContext)
                {
                    return factory;
                }
                else
                {
                    return ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_ISemanticZoomAutomationPeerFactory = ActivationFactory.Get("Microsoft.UI.Xaml.Automation.Peers.SemanticZoomAutomationPeer", global::ABI.Microsoft.UI.Xaml.Automation.Peers.ISemanticZoomAutomationPeerFactoryMethods.IID);
                }
            }
        }

        public SemanticZoomAutomationPeer(global::Microsoft.UI.Xaml.Controls.SemanticZoom owner):base(global::WinRT.DerivedComposed.Instance)
        {
            bool isAggregation = this.GetType() != typeof(SemanticZoomAutomationPeer);
            object baseInspectable = isAggregation ? this : null;
            IntPtr composed = _ISemanticZoomAutomationPeerFactoryMethods.CreateInstanceWithOwner(_objRef_global__Microsoft_UI_Xaml_Automation_Peers_ISemanticZoomAutomationPeerFactory, owner, baseInspectable, out IntPtr inner);
            try
            {
                ComWrappersHelper.Init(isAggregation, this, composed, inner, global::ABI.Microsoft.UI.Xaml.Automation.Peers.ISemanticZoomAutomationPeerMethods.IID, out _inner);

            }
            finally
            {
                Marshal.Release(inner);   
            }
        }

        public static new SemanticZoomAutomationPeer FromAbi(IntPtr thisPtr)
        {
            if (thisPtr == IntPtr.Zero) return null;
            return MarshalInspectable<SemanticZoomAutomationPeer>.FromAbi(thisPtr);
        }

        protected internal SemanticZoomAutomationPeer(IObjectReference objRef)
            : base(global::WinRT.DerivedComposed.Instance)

        {
            _inner = objRef.As(global::ABI.Microsoft.UI.Xaml.Automation.Peers.ISemanticZoomAutomationPeerMethods.IID);

        }


        public static bool operator ==(SemanticZoomAutomationPeer x, SemanticZoomAutomationPeer y) => (x?.ThisPtr ?? IntPtr.Zero) == (y?.ThisPtr ?? IntPtr.Zero);
        public static bool operator !=(SemanticZoomAutomationPeer x, SemanticZoomAutomationPeer y) => !(x == y);
        public bool Equals(SemanticZoomAutomationPeer other) => this == other;
        public override bool Equals(object obj) => obj is SemanticZoomAutomationPeer that && this == that;
        public override int GetHashCode() => ThisPtr.GetHashCode();


        protected SemanticZoomAutomationPeer(global::WinRT.DerivedComposed _):base(_)
        {

        }
        bool IWinRTObject.HasUnwrappableNativeObject => this.GetType() == typeof(SemanticZoomAutomationPeer);
        IObjectReference IWinRTObject.NativeObject => _inner;

        private struct InterfaceTag<I>{};


        public void Toggle() => global::ABI.Microsoft.UI.Xaml.Automation.Provider.IToggleProviderMethods.Toggle(_objRef_global__Microsoft_UI_Xaml_Automation_Provider_IToggleProvider);

        public global::Microsoft.UI.Xaml.Automation.ToggleState ToggleState => global::ABI.Microsoft.UI.Xaml.Automation.Provider.IToggleProviderMethods.get_ToggleState(_objRef_global__Microsoft_UI_Xaml_Automation_Provider_IToggleProvider);

        protected override bool IsOverridableInterface(Guid iid) => base.IsOverridableInterface(iid);

        global::System.Runtime.InteropServices.CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(ref Guid iid, out IntPtr ppv)
        {
            ppv = IntPtr.Zero;
            if (IsOverridableInterface(iid) || global::WinRT.Interop.IID.IID_IInspectable == iid)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
            }

            if (((IWinRTObject)this).NativeObject.TryAs(iid, out ppv) >= 0)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.Handled;
            }

            return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
        }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")]
    [global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Automation.Peers.SliderAutomationPeer))]
    [global::ABI.Microsoft.UI.Xaml.Automation.Peers.SliderAutomationPeerRcwFactory]
    [global::WinRT.ProjectedRuntimeClass(typeof(ISliderAutomationPeer))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    public class SliderAutomationPeer : RangeBaseAutomationPeer, global::System.Runtime.InteropServices.ICustomQueryInterface, IWinRTObject, IEquatable<SliderAutomationPeer>
    {
        private IntPtr ThisPtr => _inner == null ? (((IWinRTObject)this).NativeObject).ThisPtr : _inner.ThisPtr;

        private readonly IObjectReference _inner = null;




        private volatile IObjectReference ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_ISliderAutomationPeer;
        private IObjectReference Make___objRef_global__Microsoft_UI_Xaml_Automation_Peers_ISliderAutomationPeer()
        {
            global::System.Threading.Interlocked.CompareExchange(ref ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_ISliderAutomationPeer, ((IWinRTObject)this).NativeObject.As<IUnknownVftbl>(global::ABI.Microsoft.UI.Xaml.Automation.Peers.ISliderAutomationPeerMethods.IID), null);
            return ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_ISliderAutomationPeer;
        }
        private IObjectReference _objRef_global__Microsoft_UI_Xaml_Automation_Peers_ISliderAutomationPeer => ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_ISliderAutomationPeer ?? Make___objRef_global__Microsoft_UI_Xaml_Automation_Peers_ISliderAutomationPeer();



        private static class _ISliderAutomationPeerFactoryMethods
        {
            public static unsafe IntPtr CreateInstanceWithOwner(IObjectReference _obj, global::Microsoft.UI.Xaml.Controls.Slider owner, object baseInterface, out IntPtr innerInterface)
            {
                var ThisPtr = _obj.ThisPtr;

                ObjectReferenceValue __owner = default;
                ObjectReferenceValue __baseInterface = default;
                IntPtr __innerInterface = default;
                IntPtr __retval = default;
                try
                {
                    __owner = global::ABI.Microsoft.UI.Xaml.Controls.Slider.CreateMarshaler2(owner);
                    __baseInterface = MarshalInspectable<object>.CreateMarshaler2(baseInterface);
                    global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, IntPtr, IntPtr*, IntPtr*, int>**)ThisPtr)[6](ThisPtr, MarshalInspectable<object>.GetAbi(__owner), MarshalInspectable<object>.GetAbi(__baseInterface), &__innerInterface, &__retval));
                    global::System.GC.KeepAlive(_obj);
                    innerInterface = __innerInterface;
                    return __retval;
                }
                finally
                {
                    MarshalInspectable<object>.DisposeMarshaler(__owner);
                    MarshalInspectable<object>.DisposeMarshaler(__baseInterface);
                }
            }
        }

        private static volatile IObjectReference ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_ISliderAutomationPeerFactory;
        private static IObjectReference _objRef_global__Microsoft_UI_Xaml_Automation_Peers_ISliderAutomationPeerFactory
        {
            get
            { 
                var factory = ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_ISliderAutomationPeerFactory;
                if (factory != null && factory.IsInCurrentContext)
                {
                    return factory;
                }
                else
                {
                    return ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_ISliderAutomationPeerFactory = ActivationFactory.Get("Microsoft.UI.Xaml.Automation.Peers.SliderAutomationPeer", global::ABI.Microsoft.UI.Xaml.Automation.Peers.ISliderAutomationPeerFactoryMethods.IID);
                }
            }
        }

        public SliderAutomationPeer(global::Microsoft.UI.Xaml.Controls.Slider owner):base(global::WinRT.DerivedComposed.Instance)
        {
            bool isAggregation = this.GetType() != typeof(SliderAutomationPeer);
            object baseInspectable = isAggregation ? this : null;
            IntPtr composed = _ISliderAutomationPeerFactoryMethods.CreateInstanceWithOwner(_objRef_global__Microsoft_UI_Xaml_Automation_Peers_ISliderAutomationPeerFactory, owner, baseInspectable, out IntPtr inner);
            try
            {
                ComWrappersHelper.Init(isAggregation, this, composed, inner, global::ABI.Microsoft.UI.Xaml.Automation.Peers.ISliderAutomationPeerMethods.IID, out _inner);

            }
            finally
            {
                Marshal.Release(inner);   
            }
        }

        public static new SliderAutomationPeer FromAbi(IntPtr thisPtr)
        {
            if (thisPtr == IntPtr.Zero) return null;
            return MarshalInspectable<SliderAutomationPeer>.FromAbi(thisPtr);
        }

        protected internal SliderAutomationPeer(IObjectReference objRef)
            : base(global::WinRT.DerivedComposed.Instance)

        {
            _inner = objRef.As(global::ABI.Microsoft.UI.Xaml.Automation.Peers.ISliderAutomationPeerMethods.IID);

        }


        public static bool operator ==(SliderAutomationPeer x, SliderAutomationPeer y) => (x?.ThisPtr ?? IntPtr.Zero) == (y?.ThisPtr ?? IntPtr.Zero);
        public static bool operator !=(SliderAutomationPeer x, SliderAutomationPeer y) => !(x == y);
        public bool Equals(SliderAutomationPeer other) => this == other;
        public override bool Equals(object obj) => obj is SliderAutomationPeer that && this == that;
        public override int GetHashCode() => ThisPtr.GetHashCode();


        protected SliderAutomationPeer(global::WinRT.DerivedComposed _):base(_)
        {

        }
        bool IWinRTObject.HasUnwrappableNativeObject => this.GetType() == typeof(SliderAutomationPeer);
        IObjectReference IWinRTObject.NativeObject => _inner;

        private struct InterfaceTag<I>{};


        protected override bool IsOverridableInterface(Guid iid) => base.IsOverridableInterface(iid);

        global::System.Runtime.InteropServices.CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(ref Guid iid, out IntPtr ppv)
        {
            ppv = IntPtr.Zero;
            if (IsOverridableInterface(iid) || global::WinRT.Interop.IID.IID_IInspectable == iid)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
            }

            if (((IWinRTObject)this).NativeObject.TryAs(iid, out ppv) >= 0)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.Handled;
            }

            return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
        }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")]
    [global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Automation.Peers.SplitButtonAutomationPeer))]
    [global::ABI.Microsoft.UI.Xaml.Automation.Peers.SplitButtonAutomationPeerRcwFactory]
    [global::WinRT.ProjectedRuntimeClass(typeof(ISplitButtonAutomationPeer))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.XamlContract), 65536u)]
    public class SplitButtonAutomationPeer : FrameworkElementAutomationPeer, global::Microsoft.UI.Xaml.Automation.Provider.IExpandCollapseProvider, global::Microsoft.UI.Xaml.Automation.Provider.IInvokeProvider, global::System.Runtime.InteropServices.ICustomQueryInterface, IWinRTObject, IEquatable<SplitButtonAutomationPeer>
    {
        private IntPtr ThisPtr => _inner == null ? (((IWinRTObject)this).NativeObject).ThisPtr : _inner.ThisPtr;

        private readonly IObjectReference _inner = null;




        private volatile IObjectReference ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_ISplitButtonAutomationPeer;
        private IObjectReference Make___objRef_global__Microsoft_UI_Xaml_Automation_Peers_ISplitButtonAutomationPeer()
        {
            global::System.Threading.Interlocked.CompareExchange(ref ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_ISplitButtonAutomationPeer, ((IWinRTObject)this).NativeObject.As<IUnknownVftbl>(global::ABI.Microsoft.UI.Xaml.Automation.Peers.ISplitButtonAutomationPeerMethods.IID), null);
            return ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_ISplitButtonAutomationPeer;
        }
        private IObjectReference _objRef_global__Microsoft_UI_Xaml_Automation_Peers_ISplitButtonAutomationPeer => ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_ISplitButtonAutomationPeer ?? Make___objRef_global__Microsoft_UI_Xaml_Automation_Peers_ISplitButtonAutomationPeer();

        private volatile IObjectReference ___objRef_global__Microsoft_UI_Xaml_Automation_Provider_IExpandCollapseProvider;
        private IObjectReference Make___objRef_global__Microsoft_UI_Xaml_Automation_Provider_IExpandCollapseProvider()
        {
            global::System.Threading.Interlocked.CompareExchange(ref ___objRef_global__Microsoft_UI_Xaml_Automation_Provider_IExpandCollapseProvider, ((IWinRTObject)this).NativeObject.As<IUnknownVftbl>(global::ABI.Microsoft.UI.Xaml.Automation.Provider.IExpandCollapseProviderMethods.IID), null);
            return ___objRef_global__Microsoft_UI_Xaml_Automation_Provider_IExpandCollapseProvider;
        }
        private IObjectReference _objRef_global__Microsoft_UI_Xaml_Automation_Provider_IExpandCollapseProvider => ___objRef_global__Microsoft_UI_Xaml_Automation_Provider_IExpandCollapseProvider ?? Make___objRef_global__Microsoft_UI_Xaml_Automation_Provider_IExpandCollapseProvider();

        private volatile IObjectReference ___objRef_global__Microsoft_UI_Xaml_Automation_Provider_IInvokeProvider;
        private IObjectReference Make___objRef_global__Microsoft_UI_Xaml_Automation_Provider_IInvokeProvider()
        {
            global::System.Threading.Interlocked.CompareExchange(ref ___objRef_global__Microsoft_UI_Xaml_Automation_Provider_IInvokeProvider, ((IWinRTObject)this).NativeObject.As<IUnknownVftbl>(global::ABI.Microsoft.UI.Xaml.Automation.Provider.IInvokeProviderMethods.IID), null);
            return ___objRef_global__Microsoft_UI_Xaml_Automation_Provider_IInvokeProvider;
        }
        private IObjectReference _objRef_global__Microsoft_UI_Xaml_Automation_Provider_IInvokeProvider => ___objRef_global__Microsoft_UI_Xaml_Automation_Provider_IInvokeProvider ?? Make___objRef_global__Microsoft_UI_Xaml_Automation_Provider_IInvokeProvider();



        private static class _ISplitButtonAutomationPeerFactoryMethods
        {
            public static unsafe IntPtr CreateInstance(IObjectReference _obj, global::Microsoft.UI.Xaml.Controls.SplitButton owner, object baseInterface, out IntPtr innerInterface)
            {
                var ThisPtr = _obj.ThisPtr;

                ObjectReferenceValue __owner = default;
                ObjectReferenceValue __baseInterface = default;
                IntPtr __innerInterface = default;
                IntPtr __retval = default;
                try
                {
                    __owner = global::ABI.Microsoft.UI.Xaml.Controls.SplitButton.CreateMarshaler2(owner);
                    __baseInterface = MarshalInspectable<object>.CreateMarshaler2(baseInterface);
                    global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, IntPtr, IntPtr*, IntPtr*, int>**)ThisPtr)[6](ThisPtr, MarshalInspectable<object>.GetAbi(__owner), MarshalInspectable<object>.GetAbi(__baseInterface), &__innerInterface, &__retval));
                    global::System.GC.KeepAlive(_obj);
                    innerInterface = __innerInterface;
                    return __retval;
                }
                finally
                {
                    MarshalInspectable<object>.DisposeMarshaler(__owner);
                    MarshalInspectable<object>.DisposeMarshaler(__baseInterface);
                }
            }
        }

        private static volatile IObjectReference ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_ISplitButtonAutomationPeerFactory;
        private static IObjectReference _objRef_global__Microsoft_UI_Xaml_Automation_Peers_ISplitButtonAutomationPeerFactory
        {
            get
            { 
                var factory = ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_ISplitButtonAutomationPeerFactory;
                if (factory != null && factory.IsInCurrentContext)
                {
                    return factory;
                }
                else
                {
                    return ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_ISplitButtonAutomationPeerFactory = ActivationFactory.Get("Microsoft.UI.Xaml.Automation.Peers.SplitButtonAutomationPeer", global::ABI.Microsoft.UI.Xaml.Automation.Peers.ISplitButtonAutomationPeerFactoryMethods.IID);
                }
            }
        }

        public SplitButtonAutomationPeer(global::Microsoft.UI.Xaml.Controls.SplitButton owner):base(global::WinRT.DerivedComposed.Instance)
        {
            bool isAggregation = this.GetType() != typeof(SplitButtonAutomationPeer);
            object baseInspectable = isAggregation ? this : null;
            IntPtr composed = _ISplitButtonAutomationPeerFactoryMethods.CreateInstance(_objRef_global__Microsoft_UI_Xaml_Automation_Peers_ISplitButtonAutomationPeerFactory, owner, baseInspectable, out IntPtr inner);
            try
            {
                ComWrappersHelper.Init(isAggregation, this, composed, inner, global::ABI.Microsoft.UI.Xaml.Automation.Peers.ISplitButtonAutomationPeerMethods.IID, out _inner);

            }
            finally
            {
                Marshal.Release(inner);   
            }
        }

        public static new SplitButtonAutomationPeer FromAbi(IntPtr thisPtr)
        {
            if (thisPtr == IntPtr.Zero) return null;
            return MarshalInspectable<SplitButtonAutomationPeer>.FromAbi(thisPtr);
        }

        protected internal SplitButtonAutomationPeer(IObjectReference objRef)
            : base(global::WinRT.DerivedComposed.Instance)

        {
            _inner = objRef.As(global::ABI.Microsoft.UI.Xaml.Automation.Peers.ISplitButtonAutomationPeerMethods.IID);

        }


        public static bool operator ==(SplitButtonAutomationPeer x, SplitButtonAutomationPeer y) => (x?.ThisPtr ?? IntPtr.Zero) == (y?.ThisPtr ?? IntPtr.Zero);
        public static bool operator !=(SplitButtonAutomationPeer x, SplitButtonAutomationPeer y) => !(x == y);
        public bool Equals(SplitButtonAutomationPeer other) => this == other;
        public override bool Equals(object obj) => obj is SplitButtonAutomationPeer that && this == that;
        public override int GetHashCode() => ThisPtr.GetHashCode();


        protected SplitButtonAutomationPeer(global::WinRT.DerivedComposed _):base(_)
        {

        }
        bool IWinRTObject.HasUnwrappableNativeObject => this.GetType() == typeof(SplitButtonAutomationPeer);
        IObjectReference IWinRTObject.NativeObject => _inner;

        private struct InterfaceTag<I>{};


        public void Collapse() => global::ABI.Microsoft.UI.Xaml.Automation.Provider.IExpandCollapseProviderMethods.Collapse(_objRef_global__Microsoft_UI_Xaml_Automation_Provider_IExpandCollapseProvider);

        public void Expand() => global::ABI.Microsoft.UI.Xaml.Automation.Provider.IExpandCollapseProviderMethods.Expand(_objRef_global__Microsoft_UI_Xaml_Automation_Provider_IExpandCollapseProvider);

        public void Invoke() => global::ABI.Microsoft.UI.Xaml.Automation.Provider.IInvokeProviderMethods.Invoke(_objRef_global__Microsoft_UI_Xaml_Automation_Provider_IInvokeProvider);

        public global::Microsoft.UI.Xaml.Automation.ExpandCollapseState ExpandCollapseState => global::ABI.Microsoft.UI.Xaml.Automation.Provider.IExpandCollapseProviderMethods.get_ExpandCollapseState(_objRef_global__Microsoft_UI_Xaml_Automation_Provider_IExpandCollapseProvider);

        protected override bool IsOverridableInterface(Guid iid) => base.IsOverridableInterface(iid);

        global::System.Runtime.InteropServices.CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(ref Guid iid, out IntPtr ppv)
        {
            ppv = IntPtr.Zero;
            if (IsOverridableInterface(iid) || global::WinRT.Interop.IID.IID_IInspectable == iid)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
            }

            if (((IWinRTObject)this).NativeObject.TryAs(iid, out ppv) >= 0)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.Handled;
            }

            return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
        }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")]
    [global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Automation.Peers.TabViewAutomationPeer))]
    [global::ABI.Microsoft.UI.Xaml.Automation.Peers.TabViewAutomationPeerRcwFactory]
    [global::WinRT.ProjectedRuntimeClass(typeof(ITabViewAutomationPeer))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.XamlContract), 65536u)]
    public class TabViewAutomationPeer : FrameworkElementAutomationPeer, global::System.Runtime.InteropServices.ICustomQueryInterface, IWinRTObject, IEquatable<TabViewAutomationPeer>
    {
        private IntPtr ThisPtr => _inner == null ? (((IWinRTObject)this).NativeObject).ThisPtr : _inner.ThisPtr;

        private readonly IObjectReference _inner = null;




        private volatile IObjectReference ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_ITabViewAutomationPeer;
        private IObjectReference Make___objRef_global__Microsoft_UI_Xaml_Automation_Peers_ITabViewAutomationPeer()
        {
            global::System.Threading.Interlocked.CompareExchange(ref ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_ITabViewAutomationPeer, ((IWinRTObject)this).NativeObject.As<IUnknownVftbl>(global::ABI.Microsoft.UI.Xaml.Automation.Peers.ITabViewAutomationPeerMethods.IID), null);
            return ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_ITabViewAutomationPeer;
        }
        private IObjectReference _objRef_global__Microsoft_UI_Xaml_Automation_Peers_ITabViewAutomationPeer => ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_ITabViewAutomationPeer ?? Make___objRef_global__Microsoft_UI_Xaml_Automation_Peers_ITabViewAutomationPeer();



        private static class _ITabViewAutomationPeerFactoryMethods
        {
            public static unsafe IntPtr CreateInstance(IObjectReference _obj, global::Microsoft.UI.Xaml.Controls.TabView owner, object baseInterface, out IntPtr innerInterface)
            {
                var ThisPtr = _obj.ThisPtr;

                ObjectReferenceValue __owner = default;
                ObjectReferenceValue __baseInterface = default;
                IntPtr __innerInterface = default;
                IntPtr __retval = default;
                try
                {
                    __owner = global::ABI.Microsoft.UI.Xaml.Controls.TabView.CreateMarshaler2(owner);
                    __baseInterface = MarshalInspectable<object>.CreateMarshaler2(baseInterface);
                    global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, IntPtr, IntPtr*, IntPtr*, int>**)ThisPtr)[6](ThisPtr, MarshalInspectable<object>.GetAbi(__owner), MarshalInspectable<object>.GetAbi(__baseInterface), &__innerInterface, &__retval));
                    global::System.GC.KeepAlive(_obj);
                    innerInterface = __innerInterface;
                    return __retval;
                }
                finally
                {
                    MarshalInspectable<object>.DisposeMarshaler(__owner);
                    MarshalInspectable<object>.DisposeMarshaler(__baseInterface);
                }
            }
        }

        private static volatile IObjectReference ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_ITabViewAutomationPeerFactory;
        private static IObjectReference _objRef_global__Microsoft_UI_Xaml_Automation_Peers_ITabViewAutomationPeerFactory
        {
            get
            { 
                var factory = ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_ITabViewAutomationPeerFactory;
                if (factory != null && factory.IsInCurrentContext)
                {
                    return factory;
                }
                else
                {
                    return ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_ITabViewAutomationPeerFactory = ActivationFactory.Get("Microsoft.UI.Xaml.Automation.Peers.TabViewAutomationPeer", global::ABI.Microsoft.UI.Xaml.Automation.Peers.ITabViewAutomationPeerFactoryMethods.IID);
                }
            }
        }

        public TabViewAutomationPeer(global::Microsoft.UI.Xaml.Controls.TabView owner):base(global::WinRT.DerivedComposed.Instance)
        {
            bool isAggregation = this.GetType() != typeof(TabViewAutomationPeer);
            object baseInspectable = isAggregation ? this : null;
            IntPtr composed = _ITabViewAutomationPeerFactoryMethods.CreateInstance(_objRef_global__Microsoft_UI_Xaml_Automation_Peers_ITabViewAutomationPeerFactory, owner, baseInspectable, out IntPtr inner);
            try
            {
                ComWrappersHelper.Init(isAggregation, this, composed, inner, global::ABI.Microsoft.UI.Xaml.Automation.Peers.ITabViewAutomationPeerMethods.IID, out _inner);

            }
            finally
            {
                Marshal.Release(inner);   
            }
        }

        public static new TabViewAutomationPeer FromAbi(IntPtr thisPtr)
        {
            if (thisPtr == IntPtr.Zero) return null;
            return MarshalInspectable<TabViewAutomationPeer>.FromAbi(thisPtr);
        }

        protected internal TabViewAutomationPeer(IObjectReference objRef)
            : base(global::WinRT.DerivedComposed.Instance)

        {
            _inner = objRef.As(global::ABI.Microsoft.UI.Xaml.Automation.Peers.ITabViewAutomationPeerMethods.IID);

        }


        public static bool operator ==(TabViewAutomationPeer x, TabViewAutomationPeer y) => (x?.ThisPtr ?? IntPtr.Zero) == (y?.ThisPtr ?? IntPtr.Zero);
        public static bool operator !=(TabViewAutomationPeer x, TabViewAutomationPeer y) => !(x == y);
        public bool Equals(TabViewAutomationPeer other) => this == other;
        public override bool Equals(object obj) => obj is TabViewAutomationPeer that && this == that;
        public override int GetHashCode() => ThisPtr.GetHashCode();


        protected TabViewAutomationPeer(global::WinRT.DerivedComposed _):base(_)
        {

        }
        bool IWinRTObject.HasUnwrappableNativeObject => this.GetType() == typeof(TabViewAutomationPeer);
        IObjectReference IWinRTObject.NativeObject => _inner;

        private struct InterfaceTag<I>{};


        protected override bool IsOverridableInterface(Guid iid) => base.IsOverridableInterface(iid);

        global::System.Runtime.InteropServices.CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(ref Guid iid, out IntPtr ppv)
        {
            ppv = IntPtr.Zero;
            if (IsOverridableInterface(iid) || global::WinRT.Interop.IID.IID_IInspectable == iid)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
            }

            if (((IWinRTObject)this).NativeObject.TryAs(iid, out ppv) >= 0)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.Handled;
            }

            return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
        }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")]
    [global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Automation.Peers.TabViewItemAutomationPeer))]
    [global::ABI.Microsoft.UI.Xaml.Automation.Peers.TabViewItemAutomationPeerRcwFactory]
    [global::WinRT.ProjectedRuntimeClass(typeof(ITabViewItemAutomationPeer))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.XamlContract), 65536u)]
    public class TabViewItemAutomationPeer : ListViewItemAutomationPeer, global::System.Runtime.InteropServices.ICustomQueryInterface, IWinRTObject, IEquatable<TabViewItemAutomationPeer>
    {
        private IntPtr ThisPtr => _inner == null ? (((IWinRTObject)this).NativeObject).ThisPtr : _inner.ThisPtr;

        private readonly IObjectReference _inner = null;




        private volatile IObjectReference ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_ITabViewItemAutomationPeer;
        private IObjectReference Make___objRef_global__Microsoft_UI_Xaml_Automation_Peers_ITabViewItemAutomationPeer()
        {
            global::System.Threading.Interlocked.CompareExchange(ref ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_ITabViewItemAutomationPeer, ((IWinRTObject)this).NativeObject.As<IUnknownVftbl>(global::ABI.Microsoft.UI.Xaml.Automation.Peers.ITabViewItemAutomationPeerMethods.IID), null);
            return ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_ITabViewItemAutomationPeer;
        }
        private IObjectReference _objRef_global__Microsoft_UI_Xaml_Automation_Peers_ITabViewItemAutomationPeer => ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_ITabViewItemAutomationPeer ?? Make___objRef_global__Microsoft_UI_Xaml_Automation_Peers_ITabViewItemAutomationPeer();



        private static class _ITabViewItemAutomationPeerFactoryMethods
        {
            public static unsafe IntPtr CreateInstance(IObjectReference _obj, global::Microsoft.UI.Xaml.Controls.TabViewItem owner, object baseInterface, out IntPtr innerInterface)
            {
                var ThisPtr = _obj.ThisPtr;

                ObjectReferenceValue __owner = default;
                ObjectReferenceValue __baseInterface = default;
                IntPtr __innerInterface = default;
                IntPtr __retval = default;
                try
                {
                    __owner = global::ABI.Microsoft.UI.Xaml.Controls.TabViewItem.CreateMarshaler2(owner);
                    __baseInterface = MarshalInspectable<object>.CreateMarshaler2(baseInterface);
                    global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, IntPtr, IntPtr*, IntPtr*, int>**)ThisPtr)[6](ThisPtr, MarshalInspectable<object>.GetAbi(__owner), MarshalInspectable<object>.GetAbi(__baseInterface), &__innerInterface, &__retval));
                    global::System.GC.KeepAlive(_obj);
                    innerInterface = __innerInterface;
                    return __retval;
                }
                finally
                {
                    MarshalInspectable<object>.DisposeMarshaler(__owner);
                    MarshalInspectable<object>.DisposeMarshaler(__baseInterface);
                }
            }
        }

        private static volatile IObjectReference ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_ITabViewItemAutomationPeerFactory;
        private static IObjectReference _objRef_global__Microsoft_UI_Xaml_Automation_Peers_ITabViewItemAutomationPeerFactory
        {
            get
            { 
                var factory = ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_ITabViewItemAutomationPeerFactory;
                if (factory != null && factory.IsInCurrentContext)
                {
                    return factory;
                }
                else
                {
                    return ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_ITabViewItemAutomationPeerFactory = ActivationFactory.Get("Microsoft.UI.Xaml.Automation.Peers.TabViewItemAutomationPeer", global::ABI.Microsoft.UI.Xaml.Automation.Peers.ITabViewItemAutomationPeerFactoryMethods.IID);
                }
            }
        }

        public TabViewItemAutomationPeer(global::Microsoft.UI.Xaml.Controls.TabViewItem owner):base(global::WinRT.DerivedComposed.Instance)
        {
            bool isAggregation = this.GetType() != typeof(TabViewItemAutomationPeer);
            object baseInspectable = isAggregation ? this : null;
            IntPtr composed = _ITabViewItemAutomationPeerFactoryMethods.CreateInstance(_objRef_global__Microsoft_UI_Xaml_Automation_Peers_ITabViewItemAutomationPeerFactory, owner, baseInspectable, out IntPtr inner);
            try
            {
                ComWrappersHelper.Init(isAggregation, this, composed, inner, global::ABI.Microsoft.UI.Xaml.Automation.Peers.ITabViewItemAutomationPeerMethods.IID, out _inner);

            }
            finally
            {
                Marshal.Release(inner);   
            }
        }

        public static new TabViewItemAutomationPeer FromAbi(IntPtr thisPtr)
        {
            if (thisPtr == IntPtr.Zero) return null;
            return MarshalInspectable<TabViewItemAutomationPeer>.FromAbi(thisPtr);
        }

        protected internal TabViewItemAutomationPeer(IObjectReference objRef)
            : base(global::WinRT.DerivedComposed.Instance)

        {
            _inner = objRef.As(global::ABI.Microsoft.UI.Xaml.Automation.Peers.ITabViewItemAutomationPeerMethods.IID);

        }


        public static bool operator ==(TabViewItemAutomationPeer x, TabViewItemAutomationPeer y) => (x?.ThisPtr ?? IntPtr.Zero) == (y?.ThisPtr ?? IntPtr.Zero);
        public static bool operator !=(TabViewItemAutomationPeer x, TabViewItemAutomationPeer y) => !(x == y);
        public bool Equals(TabViewItemAutomationPeer other) => this == other;
        public override bool Equals(object obj) => obj is TabViewItemAutomationPeer that && this == that;
        public override int GetHashCode() => ThisPtr.GetHashCode();


        protected TabViewItemAutomationPeer(global::WinRT.DerivedComposed _):base(_)
        {

        }
        bool IWinRTObject.HasUnwrappableNativeObject => this.GetType() == typeof(TabViewItemAutomationPeer);
        IObjectReference IWinRTObject.NativeObject => _inner;

        private struct InterfaceTag<I>{};


        protected override bool IsOverridableInterface(Guid iid) => base.IsOverridableInterface(iid);

        global::System.Runtime.InteropServices.CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(ref Guid iid, out IntPtr ppv)
        {
            ppv = IntPtr.Zero;
            if (IsOverridableInterface(iid) || global::WinRT.Interop.IID.IID_IInspectable == iid)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
            }

            if (((IWinRTObject)this).NativeObject.TryAs(iid, out ppv) >= 0)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.Handled;
            }

            return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
        }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")]
    [global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Automation.Peers.TeachingTipAutomationPeer))]
    [global::ABI.Microsoft.UI.Xaml.Automation.Peers.TeachingTipAutomationPeerRcwFactory]
    [global::WinRT.ProjectedRuntimeClass(typeof(ITeachingTipAutomationPeer))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.XamlContract), 65536u)]
    public class TeachingTipAutomationPeer : FrameworkElementAutomationPeer, global::System.Runtime.InteropServices.ICustomQueryInterface, IWinRTObject, IEquatable<TeachingTipAutomationPeer>
    {
        private IntPtr ThisPtr => _inner == null ? (((IWinRTObject)this).NativeObject).ThisPtr : _inner.ThisPtr;

        private readonly IObjectReference _inner = null;




        private volatile IObjectReference ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_ITeachingTipAutomationPeer;
        private IObjectReference Make___objRef_global__Microsoft_UI_Xaml_Automation_Peers_ITeachingTipAutomationPeer()
        {
            global::System.Threading.Interlocked.CompareExchange(ref ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_ITeachingTipAutomationPeer, ((IWinRTObject)this).NativeObject.As<IUnknownVftbl>(global::ABI.Microsoft.UI.Xaml.Automation.Peers.ITeachingTipAutomationPeerMethods.IID), null);
            return ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_ITeachingTipAutomationPeer;
        }
        private IObjectReference _objRef_global__Microsoft_UI_Xaml_Automation_Peers_ITeachingTipAutomationPeer => ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_ITeachingTipAutomationPeer ?? Make___objRef_global__Microsoft_UI_Xaml_Automation_Peers_ITeachingTipAutomationPeer();



        private static class _ITeachingTipAutomationPeerFactoryMethods
        {
            public static unsafe IntPtr CreateInstance(IObjectReference _obj, global::Microsoft.UI.Xaml.Controls.TeachingTip owner, object baseInterface, out IntPtr innerInterface)
            {
                var ThisPtr = _obj.ThisPtr;

                ObjectReferenceValue __owner = default;
                ObjectReferenceValue __baseInterface = default;
                IntPtr __innerInterface = default;
                IntPtr __retval = default;
                try
                {
                    __owner = global::ABI.Microsoft.UI.Xaml.Controls.TeachingTip.CreateMarshaler2(owner);
                    __baseInterface = MarshalInspectable<object>.CreateMarshaler2(baseInterface);
                    global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, IntPtr, IntPtr*, IntPtr*, int>**)ThisPtr)[6](ThisPtr, MarshalInspectable<object>.GetAbi(__owner), MarshalInspectable<object>.GetAbi(__baseInterface), &__innerInterface, &__retval));
                    global::System.GC.KeepAlive(_obj);
                    innerInterface = __innerInterface;
                    return __retval;
                }
                finally
                {
                    MarshalInspectable<object>.DisposeMarshaler(__owner);
                    MarshalInspectable<object>.DisposeMarshaler(__baseInterface);
                }
            }
        }

        private static volatile IObjectReference ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_ITeachingTipAutomationPeerFactory;
        private static IObjectReference _objRef_global__Microsoft_UI_Xaml_Automation_Peers_ITeachingTipAutomationPeerFactory
        {
            get
            { 
                var factory = ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_ITeachingTipAutomationPeerFactory;
                if (factory != null && factory.IsInCurrentContext)
                {
                    return factory;
                }
                else
                {
                    return ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_ITeachingTipAutomationPeerFactory = ActivationFactory.Get("Microsoft.UI.Xaml.Automation.Peers.TeachingTipAutomationPeer", global::ABI.Microsoft.UI.Xaml.Automation.Peers.ITeachingTipAutomationPeerFactoryMethods.IID);
                }
            }
        }

        public TeachingTipAutomationPeer(global::Microsoft.UI.Xaml.Controls.TeachingTip owner):base(global::WinRT.DerivedComposed.Instance)
        {
            bool isAggregation = this.GetType() != typeof(TeachingTipAutomationPeer);
            object baseInspectable = isAggregation ? this : null;
            IntPtr composed = _ITeachingTipAutomationPeerFactoryMethods.CreateInstance(_objRef_global__Microsoft_UI_Xaml_Automation_Peers_ITeachingTipAutomationPeerFactory, owner, baseInspectable, out IntPtr inner);
            try
            {
                ComWrappersHelper.Init(isAggregation, this, composed, inner, global::ABI.Microsoft.UI.Xaml.Automation.Peers.ITeachingTipAutomationPeerMethods.IID, out _inner);

            }
            finally
            {
                Marshal.Release(inner);   
            }
        }

        public static new TeachingTipAutomationPeer FromAbi(IntPtr thisPtr)
        {
            if (thisPtr == IntPtr.Zero) return null;
            return MarshalInspectable<TeachingTipAutomationPeer>.FromAbi(thisPtr);
        }

        protected internal TeachingTipAutomationPeer(IObjectReference objRef)
            : base(global::WinRT.DerivedComposed.Instance)

        {
            _inner = objRef.As(global::ABI.Microsoft.UI.Xaml.Automation.Peers.ITeachingTipAutomationPeerMethods.IID);

        }


        public static bool operator ==(TeachingTipAutomationPeer x, TeachingTipAutomationPeer y) => (x?.ThisPtr ?? IntPtr.Zero) == (y?.ThisPtr ?? IntPtr.Zero);
        public static bool operator !=(TeachingTipAutomationPeer x, TeachingTipAutomationPeer y) => !(x == y);
        public bool Equals(TeachingTipAutomationPeer other) => this == other;
        public override bool Equals(object obj) => obj is TeachingTipAutomationPeer that && this == that;
        public override int GetHashCode() => ThisPtr.GetHashCode();


        protected TeachingTipAutomationPeer(global::WinRT.DerivedComposed _):base(_)
        {

        }
        bool IWinRTObject.HasUnwrappableNativeObject => this.GetType() == typeof(TeachingTipAutomationPeer);
        IObjectReference IWinRTObject.NativeObject => _inner;

        private struct InterfaceTag<I>{};


        protected override bool IsOverridableInterface(Guid iid) => base.IsOverridableInterface(iid);

        global::System.Runtime.InteropServices.CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(ref Guid iid, out IntPtr ppv)
        {
            ppv = IntPtr.Zero;
            if (IsOverridableInterface(iid) || global::WinRT.Interop.IID.IID_IInspectable == iid)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
            }

            if (((IWinRTObject)this).NativeObject.TryAs(iid, out ppv) >= 0)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.Handled;
            }

            return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
        }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")]
    [global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Automation.Peers.TextBlockAutomationPeer))]
    [global::ABI.Microsoft.UI.Xaml.Automation.Peers.TextBlockAutomationPeerRcwFactory]
    [global::WinRT.ProjectedRuntimeClass(typeof(ITextBlockAutomationPeer))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    public class TextBlockAutomationPeer : FrameworkElementAutomationPeer, global::System.Runtime.InteropServices.ICustomQueryInterface, IWinRTObject, IEquatable<TextBlockAutomationPeer>
    {
        private IntPtr ThisPtr => _inner == null ? (((IWinRTObject)this).NativeObject).ThisPtr : _inner.ThisPtr;

        private readonly IObjectReference _inner = null;




        private volatile IObjectReference ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_ITextBlockAutomationPeer;
        private IObjectReference Make___objRef_global__Microsoft_UI_Xaml_Automation_Peers_ITextBlockAutomationPeer()
        {
            global::System.Threading.Interlocked.CompareExchange(ref ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_ITextBlockAutomationPeer, ((IWinRTObject)this).NativeObject.As<IUnknownVftbl>(global::ABI.Microsoft.UI.Xaml.Automation.Peers.ITextBlockAutomationPeerMethods.IID), null);
            return ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_ITextBlockAutomationPeer;
        }
        private IObjectReference _objRef_global__Microsoft_UI_Xaml_Automation_Peers_ITextBlockAutomationPeer => ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_ITextBlockAutomationPeer ?? Make___objRef_global__Microsoft_UI_Xaml_Automation_Peers_ITextBlockAutomationPeer();



        private static class _ITextBlockAutomationPeerFactoryMethods
        {
            public static unsafe IntPtr CreateInstanceWithOwner(IObjectReference _obj, global::Microsoft.UI.Xaml.Controls.TextBlock owner, object baseInterface, out IntPtr innerInterface)
            {
                var ThisPtr = _obj.ThisPtr;

                ObjectReferenceValue __owner = default;
                ObjectReferenceValue __baseInterface = default;
                IntPtr __innerInterface = default;
                IntPtr __retval = default;
                try
                {
                    __owner = global::ABI.Microsoft.UI.Xaml.Controls.TextBlock.CreateMarshaler2(owner);
                    __baseInterface = MarshalInspectable<object>.CreateMarshaler2(baseInterface);
                    global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, IntPtr, IntPtr*, IntPtr*, int>**)ThisPtr)[6](ThisPtr, MarshalInspectable<object>.GetAbi(__owner), MarshalInspectable<object>.GetAbi(__baseInterface), &__innerInterface, &__retval));
                    global::System.GC.KeepAlive(_obj);
                    innerInterface = __innerInterface;
                    return __retval;
                }
                finally
                {
                    MarshalInspectable<object>.DisposeMarshaler(__owner);
                    MarshalInspectable<object>.DisposeMarshaler(__baseInterface);
                }
            }
        }

        private static volatile IObjectReference ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_ITextBlockAutomationPeerFactory;
        private static IObjectReference _objRef_global__Microsoft_UI_Xaml_Automation_Peers_ITextBlockAutomationPeerFactory
        {
            get
            { 
                var factory = ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_ITextBlockAutomationPeerFactory;
                if (factory != null && factory.IsInCurrentContext)
                {
                    return factory;
                }
                else
                {
                    return ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_ITextBlockAutomationPeerFactory = ActivationFactory.Get("Microsoft.UI.Xaml.Automation.Peers.TextBlockAutomationPeer", global::ABI.Microsoft.UI.Xaml.Automation.Peers.ITextBlockAutomationPeerFactoryMethods.IID);
                }
            }
        }

        public TextBlockAutomationPeer(global::Microsoft.UI.Xaml.Controls.TextBlock owner):base(global::WinRT.DerivedComposed.Instance)
        {
            bool isAggregation = this.GetType() != typeof(TextBlockAutomationPeer);
            object baseInspectable = isAggregation ? this : null;
            IntPtr composed = _ITextBlockAutomationPeerFactoryMethods.CreateInstanceWithOwner(_objRef_global__Microsoft_UI_Xaml_Automation_Peers_ITextBlockAutomationPeerFactory, owner, baseInspectable, out IntPtr inner);
            try
            {
                ComWrappersHelper.Init(isAggregation, this, composed, inner, global::ABI.Microsoft.UI.Xaml.Automation.Peers.ITextBlockAutomationPeerMethods.IID, out _inner);

            }
            finally
            {
                Marshal.Release(inner);   
            }
        }

        public static new TextBlockAutomationPeer FromAbi(IntPtr thisPtr)
        {
            if (thisPtr == IntPtr.Zero) return null;
            return MarshalInspectable<TextBlockAutomationPeer>.FromAbi(thisPtr);
        }

        protected internal TextBlockAutomationPeer(IObjectReference objRef)
            : base(global::WinRT.DerivedComposed.Instance)

        {
            _inner = objRef.As(global::ABI.Microsoft.UI.Xaml.Automation.Peers.ITextBlockAutomationPeerMethods.IID);

        }


        public static bool operator ==(TextBlockAutomationPeer x, TextBlockAutomationPeer y) => (x?.ThisPtr ?? IntPtr.Zero) == (y?.ThisPtr ?? IntPtr.Zero);
        public static bool operator !=(TextBlockAutomationPeer x, TextBlockAutomationPeer y) => !(x == y);
        public bool Equals(TextBlockAutomationPeer other) => this == other;
        public override bool Equals(object obj) => obj is TextBlockAutomationPeer that && this == that;
        public override int GetHashCode() => ThisPtr.GetHashCode();


        protected TextBlockAutomationPeer(global::WinRT.DerivedComposed _):base(_)
        {

        }
        bool IWinRTObject.HasUnwrappableNativeObject => this.GetType() == typeof(TextBlockAutomationPeer);
        IObjectReference IWinRTObject.NativeObject => _inner;

        private struct InterfaceTag<I>{};


        protected override bool IsOverridableInterface(Guid iid) => base.IsOverridableInterface(iid);

        global::System.Runtime.InteropServices.CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(ref Guid iid, out IntPtr ppv)
        {
            ppv = IntPtr.Zero;
            if (IsOverridableInterface(iid) || global::WinRT.Interop.IID.IID_IInspectable == iid)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
            }

            if (((IWinRTObject)this).NativeObject.TryAs(iid, out ppv) >= 0)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.Handled;
            }

            return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
        }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")]
    [global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Automation.Peers.TextBoxAutomationPeer))]
    [global::ABI.Microsoft.UI.Xaml.Automation.Peers.TextBoxAutomationPeerRcwFactory]
    [global::WinRT.ProjectedRuntimeClass(typeof(ITextBoxAutomationPeer))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    public class TextBoxAutomationPeer : FrameworkElementAutomationPeer, global::System.Runtime.InteropServices.ICustomQueryInterface, IWinRTObject, IEquatable<TextBoxAutomationPeer>
    {
        private IntPtr ThisPtr => _inner == null ? (((IWinRTObject)this).NativeObject).ThisPtr : _inner.ThisPtr;

        private readonly IObjectReference _inner = null;




        private volatile IObjectReference ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_ITextBoxAutomationPeer;
        private IObjectReference Make___objRef_global__Microsoft_UI_Xaml_Automation_Peers_ITextBoxAutomationPeer()
        {
            global::System.Threading.Interlocked.CompareExchange(ref ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_ITextBoxAutomationPeer, ((IWinRTObject)this).NativeObject.As<IUnknownVftbl>(global::ABI.Microsoft.UI.Xaml.Automation.Peers.ITextBoxAutomationPeerMethods.IID), null);
            return ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_ITextBoxAutomationPeer;
        }
        private IObjectReference _objRef_global__Microsoft_UI_Xaml_Automation_Peers_ITextBoxAutomationPeer => ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_ITextBoxAutomationPeer ?? Make___objRef_global__Microsoft_UI_Xaml_Automation_Peers_ITextBoxAutomationPeer();



        private static class _ITextBoxAutomationPeerFactoryMethods
        {
            public static unsafe IntPtr CreateInstanceWithOwner(IObjectReference _obj, global::Microsoft.UI.Xaml.Controls.TextBox owner, object baseInterface, out IntPtr innerInterface)
            {
                var ThisPtr = _obj.ThisPtr;

                ObjectReferenceValue __owner = default;
                ObjectReferenceValue __baseInterface = default;
                IntPtr __innerInterface = default;
                IntPtr __retval = default;
                try
                {
                    __owner = global::ABI.Microsoft.UI.Xaml.Controls.TextBox.CreateMarshaler2(owner);
                    __baseInterface = MarshalInspectable<object>.CreateMarshaler2(baseInterface);
                    global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, IntPtr, IntPtr*, IntPtr*, int>**)ThisPtr)[6](ThisPtr, MarshalInspectable<object>.GetAbi(__owner), MarshalInspectable<object>.GetAbi(__baseInterface), &__innerInterface, &__retval));
                    global::System.GC.KeepAlive(_obj);
                    innerInterface = __innerInterface;
                    return __retval;
                }
                finally
                {
                    MarshalInspectable<object>.DisposeMarshaler(__owner);
                    MarshalInspectable<object>.DisposeMarshaler(__baseInterface);
                }
            }
        }

        private static volatile IObjectReference ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_ITextBoxAutomationPeerFactory;
        private static IObjectReference _objRef_global__Microsoft_UI_Xaml_Automation_Peers_ITextBoxAutomationPeerFactory
        {
            get
            { 
                var factory = ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_ITextBoxAutomationPeerFactory;
                if (factory != null && factory.IsInCurrentContext)
                {
                    return factory;
                }
                else
                {
                    return ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_ITextBoxAutomationPeerFactory = ActivationFactory.Get("Microsoft.UI.Xaml.Automation.Peers.TextBoxAutomationPeer", global::ABI.Microsoft.UI.Xaml.Automation.Peers.ITextBoxAutomationPeerFactoryMethods.IID);
                }
            }
        }

        public TextBoxAutomationPeer(global::Microsoft.UI.Xaml.Controls.TextBox owner):base(global::WinRT.DerivedComposed.Instance)
        {
            bool isAggregation = this.GetType() != typeof(TextBoxAutomationPeer);
            object baseInspectable = isAggregation ? this : null;
            IntPtr composed = _ITextBoxAutomationPeerFactoryMethods.CreateInstanceWithOwner(_objRef_global__Microsoft_UI_Xaml_Automation_Peers_ITextBoxAutomationPeerFactory, owner, baseInspectable, out IntPtr inner);
            try
            {
                ComWrappersHelper.Init(isAggregation, this, composed, inner, global::ABI.Microsoft.UI.Xaml.Automation.Peers.ITextBoxAutomationPeerMethods.IID, out _inner);

            }
            finally
            {
                Marshal.Release(inner);   
            }
        }

        public static new TextBoxAutomationPeer FromAbi(IntPtr thisPtr)
        {
            if (thisPtr == IntPtr.Zero) return null;
            return MarshalInspectable<TextBoxAutomationPeer>.FromAbi(thisPtr);
        }

        protected internal TextBoxAutomationPeer(IObjectReference objRef)
            : base(global::WinRT.DerivedComposed.Instance)

        {
            _inner = objRef.As(global::ABI.Microsoft.UI.Xaml.Automation.Peers.ITextBoxAutomationPeerMethods.IID);

        }


        public static bool operator ==(TextBoxAutomationPeer x, TextBoxAutomationPeer y) => (x?.ThisPtr ?? IntPtr.Zero) == (y?.ThisPtr ?? IntPtr.Zero);
        public static bool operator !=(TextBoxAutomationPeer x, TextBoxAutomationPeer y) => !(x == y);
        public bool Equals(TextBoxAutomationPeer other) => this == other;
        public override bool Equals(object obj) => obj is TextBoxAutomationPeer that && this == that;
        public override int GetHashCode() => ThisPtr.GetHashCode();


        protected TextBoxAutomationPeer(global::WinRT.DerivedComposed _):base(_)
        {

        }
        bool IWinRTObject.HasUnwrappableNativeObject => this.GetType() == typeof(TextBoxAutomationPeer);
        IObjectReference IWinRTObject.NativeObject => _inner;

        private struct InterfaceTag<I>{};


        protected override bool IsOverridableInterface(Guid iid) => base.IsOverridableInterface(iid);

        global::System.Runtime.InteropServices.CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(ref Guid iid, out IntPtr ppv)
        {
            ppv = IntPtr.Zero;
            if (IsOverridableInterface(iid) || global::WinRT.Interop.IID.IID_IInspectable == iid)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
            }

            if (((IWinRTObject)this).NativeObject.TryAs(iid, out ppv) >= 0)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.Handled;
            }

            return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
        }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")]
    [global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Automation.Peers.ThumbAutomationPeer))]
    [global::ABI.Microsoft.UI.Xaml.Automation.Peers.ThumbAutomationPeerRcwFactory]
    [global::WinRT.ProjectedRuntimeClass(typeof(IThumbAutomationPeer))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    public class ThumbAutomationPeer : FrameworkElementAutomationPeer, global::System.Runtime.InteropServices.ICustomQueryInterface, IWinRTObject, IEquatable<ThumbAutomationPeer>
    {
        private IntPtr ThisPtr => _inner == null ? (((IWinRTObject)this).NativeObject).ThisPtr : _inner.ThisPtr;

        private readonly IObjectReference _inner = null;




        private volatile IObjectReference ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IThumbAutomationPeer;
        private IObjectReference Make___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IThumbAutomationPeer()
        {
            global::System.Threading.Interlocked.CompareExchange(ref ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IThumbAutomationPeer, ((IWinRTObject)this).NativeObject.As<IUnknownVftbl>(global::ABI.Microsoft.UI.Xaml.Automation.Peers.IThumbAutomationPeerMethods.IID), null);
            return ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IThumbAutomationPeer;
        }
        private IObjectReference _objRef_global__Microsoft_UI_Xaml_Automation_Peers_IThumbAutomationPeer => ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IThumbAutomationPeer ?? Make___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IThumbAutomationPeer();



        private static class _IThumbAutomationPeerFactoryMethods
        {
            public static unsafe IntPtr CreateInstanceWithOwner(IObjectReference _obj, global::Microsoft.UI.Xaml.Controls.Primitives.Thumb owner, object baseInterface, out IntPtr innerInterface)
            {
                var ThisPtr = _obj.ThisPtr;

                ObjectReferenceValue __owner = default;
                ObjectReferenceValue __baseInterface = default;
                IntPtr __innerInterface = default;
                IntPtr __retval = default;
                try
                {
                    __owner = global::ABI.Microsoft.UI.Xaml.Controls.Primitives.Thumb.CreateMarshaler2(owner);
                    __baseInterface = MarshalInspectable<object>.CreateMarshaler2(baseInterface);
                    global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, IntPtr, IntPtr*, IntPtr*, int>**)ThisPtr)[6](ThisPtr, MarshalInspectable<object>.GetAbi(__owner), MarshalInspectable<object>.GetAbi(__baseInterface), &__innerInterface, &__retval));
                    global::System.GC.KeepAlive(_obj);
                    innerInterface = __innerInterface;
                    return __retval;
                }
                finally
                {
                    MarshalInspectable<object>.DisposeMarshaler(__owner);
                    MarshalInspectable<object>.DisposeMarshaler(__baseInterface);
                }
            }
        }

        private static volatile IObjectReference ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IThumbAutomationPeerFactory;
        private static IObjectReference _objRef_global__Microsoft_UI_Xaml_Automation_Peers_IThumbAutomationPeerFactory
        {
            get
            { 
                var factory = ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IThumbAutomationPeerFactory;
                if (factory != null && factory.IsInCurrentContext)
                {
                    return factory;
                }
                else
                {
                    return ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IThumbAutomationPeerFactory = ActivationFactory.Get("Microsoft.UI.Xaml.Automation.Peers.ThumbAutomationPeer", global::ABI.Microsoft.UI.Xaml.Automation.Peers.IThumbAutomationPeerFactoryMethods.IID);
                }
            }
        }

        public ThumbAutomationPeer(global::Microsoft.UI.Xaml.Controls.Primitives.Thumb owner):base(global::WinRT.DerivedComposed.Instance)
        {
            bool isAggregation = this.GetType() != typeof(ThumbAutomationPeer);
            object baseInspectable = isAggregation ? this : null;
            IntPtr composed = _IThumbAutomationPeerFactoryMethods.CreateInstanceWithOwner(_objRef_global__Microsoft_UI_Xaml_Automation_Peers_IThumbAutomationPeerFactory, owner, baseInspectable, out IntPtr inner);
            try
            {
                ComWrappersHelper.Init(isAggregation, this, composed, inner, global::ABI.Microsoft.UI.Xaml.Automation.Peers.IThumbAutomationPeerMethods.IID, out _inner);

            }
            finally
            {
                Marshal.Release(inner);   
            }
        }

        public static new ThumbAutomationPeer FromAbi(IntPtr thisPtr)
        {
            if (thisPtr == IntPtr.Zero) return null;
            return MarshalInspectable<ThumbAutomationPeer>.FromAbi(thisPtr);
        }

        protected internal ThumbAutomationPeer(IObjectReference objRef)
            : base(global::WinRT.DerivedComposed.Instance)

        {
            _inner = objRef.As(global::ABI.Microsoft.UI.Xaml.Automation.Peers.IThumbAutomationPeerMethods.IID);

        }


        public static bool operator ==(ThumbAutomationPeer x, ThumbAutomationPeer y) => (x?.ThisPtr ?? IntPtr.Zero) == (y?.ThisPtr ?? IntPtr.Zero);
        public static bool operator !=(ThumbAutomationPeer x, ThumbAutomationPeer y) => !(x == y);
        public bool Equals(ThumbAutomationPeer other) => this == other;
        public override bool Equals(object obj) => obj is ThumbAutomationPeer that && this == that;
        public override int GetHashCode() => ThisPtr.GetHashCode();


        protected ThumbAutomationPeer(global::WinRT.DerivedComposed _):base(_)
        {

        }
        bool IWinRTObject.HasUnwrappableNativeObject => this.GetType() == typeof(ThumbAutomationPeer);
        IObjectReference IWinRTObject.NativeObject => _inner;

        private struct InterfaceTag<I>{};


        protected override bool IsOverridableInterface(Guid iid) => base.IsOverridableInterface(iid);

        global::System.Runtime.InteropServices.CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(ref Guid iid, out IntPtr ppv)
        {
            ppv = IntPtr.Zero;
            if (IsOverridableInterface(iid) || global::WinRT.Interop.IID.IID_IInspectable == iid)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
            }

            if (((IWinRTObject)this).NativeObject.TryAs(iid, out ppv) >= 0)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.Handled;
            }

            return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
        }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")]
    [global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Automation.Peers.TimePickerAutomationPeer))]
    [global::ABI.Microsoft.UI.Xaml.Automation.Peers.TimePickerAutomationPeerRcwFactory]
    [global::WinRT.ProjectedRuntimeClass(typeof(ITimePickerAutomationPeer))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    public class TimePickerAutomationPeer : FrameworkElementAutomationPeer, global::System.Runtime.InteropServices.ICustomQueryInterface, IWinRTObject, IEquatable<TimePickerAutomationPeer>
    {
        private IntPtr ThisPtr => _inner == null ? (((IWinRTObject)this).NativeObject).ThisPtr : _inner.ThisPtr;

        private readonly IObjectReference _inner = null;




        private volatile IObjectReference ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_ITimePickerAutomationPeer;
        private IObjectReference Make___objRef_global__Microsoft_UI_Xaml_Automation_Peers_ITimePickerAutomationPeer()
        {
            global::System.Threading.Interlocked.CompareExchange(ref ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_ITimePickerAutomationPeer, ((IWinRTObject)this).NativeObject.As<IUnknownVftbl>(global::ABI.Microsoft.UI.Xaml.Automation.Peers.ITimePickerAutomationPeerMethods.IID), null);
            return ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_ITimePickerAutomationPeer;
        }
        private IObjectReference _objRef_global__Microsoft_UI_Xaml_Automation_Peers_ITimePickerAutomationPeer => ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_ITimePickerAutomationPeer ?? Make___objRef_global__Microsoft_UI_Xaml_Automation_Peers_ITimePickerAutomationPeer();



        private static class _ITimePickerAutomationPeerFactoryMethods
        {
            public static unsafe IntPtr CreateInstanceWithOwner(IObjectReference _obj, global::Microsoft.UI.Xaml.Controls.TimePicker owner, object baseInterface, out IntPtr innerInterface)
            {
                var ThisPtr = _obj.ThisPtr;

                ObjectReferenceValue __owner = default;
                ObjectReferenceValue __baseInterface = default;
                IntPtr __innerInterface = default;
                IntPtr __retval = default;
                try
                {
                    __owner = global::ABI.Microsoft.UI.Xaml.Controls.TimePicker.CreateMarshaler2(owner);
                    __baseInterface = MarshalInspectable<object>.CreateMarshaler2(baseInterface);
                    global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, IntPtr, IntPtr*, IntPtr*, int>**)ThisPtr)[6](ThisPtr, MarshalInspectable<object>.GetAbi(__owner), MarshalInspectable<object>.GetAbi(__baseInterface), &__innerInterface, &__retval));
                    global::System.GC.KeepAlive(_obj);
                    innerInterface = __innerInterface;
                    return __retval;
                }
                finally
                {
                    MarshalInspectable<object>.DisposeMarshaler(__owner);
                    MarshalInspectable<object>.DisposeMarshaler(__baseInterface);
                }
            }
        }

        private static volatile IObjectReference ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_ITimePickerAutomationPeerFactory;
        private static IObjectReference _objRef_global__Microsoft_UI_Xaml_Automation_Peers_ITimePickerAutomationPeerFactory
        {
            get
            { 
                var factory = ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_ITimePickerAutomationPeerFactory;
                if (factory != null && factory.IsInCurrentContext)
                {
                    return factory;
                }
                else
                {
                    return ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_ITimePickerAutomationPeerFactory = ActivationFactory.Get("Microsoft.UI.Xaml.Automation.Peers.TimePickerAutomationPeer", global::ABI.Microsoft.UI.Xaml.Automation.Peers.ITimePickerAutomationPeerFactoryMethods.IID);
                }
            }
        }

        public TimePickerAutomationPeer(global::Microsoft.UI.Xaml.Controls.TimePicker owner):base(global::WinRT.DerivedComposed.Instance)
        {
            bool isAggregation = this.GetType() != typeof(TimePickerAutomationPeer);
            object baseInspectable = isAggregation ? this : null;
            IntPtr composed = _ITimePickerAutomationPeerFactoryMethods.CreateInstanceWithOwner(_objRef_global__Microsoft_UI_Xaml_Automation_Peers_ITimePickerAutomationPeerFactory, owner, baseInspectable, out IntPtr inner);
            try
            {
                ComWrappersHelper.Init(isAggregation, this, composed, inner, global::ABI.Microsoft.UI.Xaml.Automation.Peers.ITimePickerAutomationPeerMethods.IID, out _inner);

            }
            finally
            {
                Marshal.Release(inner);   
            }
        }

        public static new TimePickerAutomationPeer FromAbi(IntPtr thisPtr)
        {
            if (thisPtr == IntPtr.Zero) return null;
            return MarshalInspectable<TimePickerAutomationPeer>.FromAbi(thisPtr);
        }

        protected internal TimePickerAutomationPeer(IObjectReference objRef)
            : base(global::WinRT.DerivedComposed.Instance)

        {
            _inner = objRef.As(global::ABI.Microsoft.UI.Xaml.Automation.Peers.ITimePickerAutomationPeerMethods.IID);

        }


        public static bool operator ==(TimePickerAutomationPeer x, TimePickerAutomationPeer y) => (x?.ThisPtr ?? IntPtr.Zero) == (y?.ThisPtr ?? IntPtr.Zero);
        public static bool operator !=(TimePickerAutomationPeer x, TimePickerAutomationPeer y) => !(x == y);
        public bool Equals(TimePickerAutomationPeer other) => this == other;
        public override bool Equals(object obj) => obj is TimePickerAutomationPeer that && this == that;
        public override int GetHashCode() => ThisPtr.GetHashCode();


        protected TimePickerAutomationPeer(global::WinRT.DerivedComposed _):base(_)
        {

        }
        bool IWinRTObject.HasUnwrappableNativeObject => this.GetType() == typeof(TimePickerAutomationPeer);
        IObjectReference IWinRTObject.NativeObject => _inner;

        private struct InterfaceTag<I>{};


        protected override bool IsOverridableInterface(Guid iid) => base.IsOverridableInterface(iid);

        global::System.Runtime.InteropServices.CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(ref Guid iid, out IntPtr ppv)
        {
            ppv = IntPtr.Zero;
            if (IsOverridableInterface(iid) || global::WinRT.Interop.IID.IID_IInspectable == iid)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
            }

            if (((IWinRTObject)this).NativeObject.TryAs(iid, out ppv) >= 0)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.Handled;
            }

            return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
        }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")]
    [global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Automation.Peers.TimePickerFlyoutPresenterAutomationPeer))]
    [global::ABI.Microsoft.UI.Xaml.Automation.Peers.TimePickerFlyoutPresenterAutomationPeerRcwFactory]
    [global::WinRT.ProjectedRuntimeClass(typeof(ITimePickerFlyoutPresenterAutomationPeer))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    public sealed class TimePickerFlyoutPresenterAutomationPeer : FrameworkElementAutomationPeer, global::System.Runtime.InteropServices.ICustomQueryInterface, IWinRTObject, IEquatable<TimePickerFlyoutPresenterAutomationPeer>
    {
        private IntPtr ThisPtr => _inner == null ? (((IWinRTObject)this).NativeObject).ThisPtr : _inner.ThisPtr;

        private readonly IObjectReference _inner = null;



        private IObjectReference _objRef_global__Microsoft_UI_Xaml_Automation_Peers_ITimePickerFlyoutPresenterAutomationPeer => _inner;


        public static new TimePickerFlyoutPresenterAutomationPeer FromAbi(IntPtr thisPtr)
        {
            if (thisPtr == IntPtr.Zero) return null;
            return MarshalInspectable<TimePickerFlyoutPresenterAutomationPeer>.FromAbi(thisPtr);
        }

        internal TimePickerFlyoutPresenterAutomationPeer(IObjectReference objRef)
            : base(global::WinRT.DerivedComposed.Instance)

        {
            _inner = objRef.As(global::ABI.Microsoft.UI.Xaml.Automation.Peers.ITimePickerFlyoutPresenterAutomationPeerMethods.IID);

        }


        public static bool operator ==(TimePickerFlyoutPresenterAutomationPeer x, TimePickerFlyoutPresenterAutomationPeer y) => (x?.ThisPtr ?? IntPtr.Zero) == (y?.ThisPtr ?? IntPtr.Zero);
        public static bool operator !=(TimePickerFlyoutPresenterAutomationPeer x, TimePickerFlyoutPresenterAutomationPeer y) => !(x == y);
        public bool Equals(TimePickerFlyoutPresenterAutomationPeer other) => this == other;
        public override bool Equals(object obj) => obj is TimePickerFlyoutPresenterAutomationPeer that && this == that;
        public override int GetHashCode() => ThisPtr.GetHashCode();


        bool IWinRTObject.HasUnwrappableNativeObject => true;
        IObjectReference IWinRTObject.NativeObject => _inner;

        private struct InterfaceTag<I>{};


        protected override bool IsOverridableInterface(Guid iid) => base.IsOverridableInterface(iid);

        global::System.Runtime.InteropServices.CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(ref Guid iid, out IntPtr ppv)
        {
            ppv = IntPtr.Zero;
            if (IsOverridableInterface(iid) || global::WinRT.Interop.IID.IID_IInspectable == iid)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
            }

            if (((IWinRTObject)this).NativeObject.TryAs(iid, out ppv) >= 0)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.Handled;
            }

            return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
        }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")]
    [global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Automation.Peers.ToggleButtonAutomationPeer))]
    [global::ABI.Microsoft.UI.Xaml.Automation.Peers.ToggleButtonAutomationPeerRcwFactory]
    [global::WinRT.ProjectedRuntimeClass(typeof(IToggleButtonAutomationPeer))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    public class ToggleButtonAutomationPeer : ButtonBaseAutomationPeer, global::Microsoft.UI.Xaml.Automation.Provider.IToggleProvider, global::System.Runtime.InteropServices.ICustomQueryInterface, IWinRTObject, IEquatable<ToggleButtonAutomationPeer>
    {
        private IntPtr ThisPtr => _inner == null ? (((IWinRTObject)this).NativeObject).ThisPtr : _inner.ThisPtr;

        private readonly IObjectReference _inner = null;




        private volatile IObjectReference ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IToggleButtonAutomationPeer;
        private IObjectReference Make___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IToggleButtonAutomationPeer()
        {
            global::System.Threading.Interlocked.CompareExchange(ref ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IToggleButtonAutomationPeer, ((IWinRTObject)this).NativeObject.As<IUnknownVftbl>(global::ABI.Microsoft.UI.Xaml.Automation.Peers.IToggleButtonAutomationPeerMethods.IID), null);
            return ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IToggleButtonAutomationPeer;
        }
        private IObjectReference _objRef_global__Microsoft_UI_Xaml_Automation_Peers_IToggleButtonAutomationPeer => ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IToggleButtonAutomationPeer ?? Make___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IToggleButtonAutomationPeer();

        private volatile IObjectReference ___objRef_global__Microsoft_UI_Xaml_Automation_Provider_IToggleProvider;
        private IObjectReference Make___objRef_global__Microsoft_UI_Xaml_Automation_Provider_IToggleProvider()
        {
            global::System.Threading.Interlocked.CompareExchange(ref ___objRef_global__Microsoft_UI_Xaml_Automation_Provider_IToggleProvider, ((IWinRTObject)this).NativeObject.As<IUnknownVftbl>(global::ABI.Microsoft.UI.Xaml.Automation.Provider.IToggleProviderMethods.IID), null);
            return ___objRef_global__Microsoft_UI_Xaml_Automation_Provider_IToggleProvider;
        }
        private IObjectReference _objRef_global__Microsoft_UI_Xaml_Automation_Provider_IToggleProvider => ___objRef_global__Microsoft_UI_Xaml_Automation_Provider_IToggleProvider ?? Make___objRef_global__Microsoft_UI_Xaml_Automation_Provider_IToggleProvider();



        private static class _IToggleButtonAutomationPeerFactoryMethods
        {
            public static unsafe IntPtr CreateInstanceWithOwner(IObjectReference _obj, global::Microsoft.UI.Xaml.Controls.Primitives.ToggleButton owner, object baseInterface, out IntPtr innerInterface)
            {
                var ThisPtr = _obj.ThisPtr;

                ObjectReferenceValue __owner = default;
                ObjectReferenceValue __baseInterface = default;
                IntPtr __innerInterface = default;
                IntPtr __retval = default;
                try
                {
                    __owner = global::ABI.Microsoft.UI.Xaml.Controls.Primitives.ToggleButton.CreateMarshaler2(owner);
                    __baseInterface = MarshalInspectable<object>.CreateMarshaler2(baseInterface);
                    global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, IntPtr, IntPtr*, IntPtr*, int>**)ThisPtr)[6](ThisPtr, MarshalInspectable<object>.GetAbi(__owner), MarshalInspectable<object>.GetAbi(__baseInterface), &__innerInterface, &__retval));
                    global::System.GC.KeepAlive(_obj);
                    innerInterface = __innerInterface;
                    return __retval;
                }
                finally
                {
                    MarshalInspectable<object>.DisposeMarshaler(__owner);
                    MarshalInspectable<object>.DisposeMarshaler(__baseInterface);
                }
            }
        }

        private static volatile IObjectReference ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IToggleButtonAutomationPeerFactory;
        private static IObjectReference _objRef_global__Microsoft_UI_Xaml_Automation_Peers_IToggleButtonAutomationPeerFactory
        {
            get
            { 
                var factory = ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IToggleButtonAutomationPeerFactory;
                if (factory != null && factory.IsInCurrentContext)
                {
                    return factory;
                }
                else
                {
                    return ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IToggleButtonAutomationPeerFactory = ActivationFactory.Get("Microsoft.UI.Xaml.Automation.Peers.ToggleButtonAutomationPeer", global::ABI.Microsoft.UI.Xaml.Automation.Peers.IToggleButtonAutomationPeerFactoryMethods.IID);
                }
            }
        }

        public ToggleButtonAutomationPeer(global::Microsoft.UI.Xaml.Controls.Primitives.ToggleButton owner):base(global::WinRT.DerivedComposed.Instance)
        {
            bool isAggregation = this.GetType() != typeof(ToggleButtonAutomationPeer);
            object baseInspectable = isAggregation ? this : null;
            IntPtr composed = _IToggleButtonAutomationPeerFactoryMethods.CreateInstanceWithOwner(_objRef_global__Microsoft_UI_Xaml_Automation_Peers_IToggleButtonAutomationPeerFactory, owner, baseInspectable, out IntPtr inner);
            try
            {
                ComWrappersHelper.Init(isAggregation, this, composed, inner, global::ABI.Microsoft.UI.Xaml.Automation.Peers.IToggleButtonAutomationPeerMethods.IID, out _inner);

            }
            finally
            {
                Marshal.Release(inner);   
            }
        }

        public static new ToggleButtonAutomationPeer FromAbi(IntPtr thisPtr)
        {
            if (thisPtr == IntPtr.Zero) return null;
            return MarshalInspectable<ToggleButtonAutomationPeer>.FromAbi(thisPtr);
        }

        protected internal ToggleButtonAutomationPeer(IObjectReference objRef)
            : base(global::WinRT.DerivedComposed.Instance)

        {
            _inner = objRef.As(global::ABI.Microsoft.UI.Xaml.Automation.Peers.IToggleButtonAutomationPeerMethods.IID);

        }


        public static bool operator ==(ToggleButtonAutomationPeer x, ToggleButtonAutomationPeer y) => (x?.ThisPtr ?? IntPtr.Zero) == (y?.ThisPtr ?? IntPtr.Zero);
        public static bool operator !=(ToggleButtonAutomationPeer x, ToggleButtonAutomationPeer y) => !(x == y);
        public bool Equals(ToggleButtonAutomationPeer other) => this == other;
        public override bool Equals(object obj) => obj is ToggleButtonAutomationPeer that && this == that;
        public override int GetHashCode() => ThisPtr.GetHashCode();


        protected ToggleButtonAutomationPeer(global::WinRT.DerivedComposed _):base(_)
        {

        }
        bool IWinRTObject.HasUnwrappableNativeObject => this.GetType() == typeof(ToggleButtonAutomationPeer);
        IObjectReference IWinRTObject.NativeObject => _inner;

        private struct InterfaceTag<I>{};


        public void Toggle() => global::ABI.Microsoft.UI.Xaml.Automation.Provider.IToggleProviderMethods.Toggle(_objRef_global__Microsoft_UI_Xaml_Automation_Provider_IToggleProvider);

        public global::Microsoft.UI.Xaml.Automation.ToggleState ToggleState => global::ABI.Microsoft.UI.Xaml.Automation.Provider.IToggleProviderMethods.get_ToggleState(_objRef_global__Microsoft_UI_Xaml_Automation_Provider_IToggleProvider);

        protected override bool IsOverridableInterface(Guid iid) => base.IsOverridableInterface(iid);

        global::System.Runtime.InteropServices.CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(ref Guid iid, out IntPtr ppv)
        {
            ppv = IntPtr.Zero;
            if (IsOverridableInterface(iid) || global::WinRT.Interop.IID.IID_IInspectable == iid)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
            }

            if (((IWinRTObject)this).NativeObject.TryAs(iid, out ppv) >= 0)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.Handled;
            }

            return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
        }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")]
    [global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Automation.Peers.ToggleMenuFlyoutItemAutomationPeer))]
    [global::ABI.Microsoft.UI.Xaml.Automation.Peers.ToggleMenuFlyoutItemAutomationPeerRcwFactory]
    [global::WinRT.ProjectedRuntimeClass(typeof(IToggleMenuFlyoutItemAutomationPeer))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    public class ToggleMenuFlyoutItemAutomationPeer : FrameworkElementAutomationPeer, global::Microsoft.UI.Xaml.Automation.Provider.IToggleProvider, global::System.Runtime.InteropServices.ICustomQueryInterface, IWinRTObject, IEquatable<ToggleMenuFlyoutItemAutomationPeer>
    {
        private IntPtr ThisPtr => _inner == null ? (((IWinRTObject)this).NativeObject).ThisPtr : _inner.ThisPtr;

        private readonly IObjectReference _inner = null;




        private volatile IObjectReference ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IToggleMenuFlyoutItemAutomationPeer;
        private IObjectReference Make___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IToggleMenuFlyoutItemAutomationPeer()
        {
            global::System.Threading.Interlocked.CompareExchange(ref ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IToggleMenuFlyoutItemAutomationPeer, ((IWinRTObject)this).NativeObject.As<IUnknownVftbl>(global::ABI.Microsoft.UI.Xaml.Automation.Peers.IToggleMenuFlyoutItemAutomationPeerMethods.IID), null);
            return ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IToggleMenuFlyoutItemAutomationPeer;
        }
        private IObjectReference _objRef_global__Microsoft_UI_Xaml_Automation_Peers_IToggleMenuFlyoutItemAutomationPeer => ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IToggleMenuFlyoutItemAutomationPeer ?? Make___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IToggleMenuFlyoutItemAutomationPeer();

        private volatile IObjectReference ___objRef_global__Microsoft_UI_Xaml_Automation_Provider_IToggleProvider;
        private IObjectReference Make___objRef_global__Microsoft_UI_Xaml_Automation_Provider_IToggleProvider()
        {
            global::System.Threading.Interlocked.CompareExchange(ref ___objRef_global__Microsoft_UI_Xaml_Automation_Provider_IToggleProvider, ((IWinRTObject)this).NativeObject.As<IUnknownVftbl>(global::ABI.Microsoft.UI.Xaml.Automation.Provider.IToggleProviderMethods.IID), null);
            return ___objRef_global__Microsoft_UI_Xaml_Automation_Provider_IToggleProvider;
        }
        private IObjectReference _objRef_global__Microsoft_UI_Xaml_Automation_Provider_IToggleProvider => ___objRef_global__Microsoft_UI_Xaml_Automation_Provider_IToggleProvider ?? Make___objRef_global__Microsoft_UI_Xaml_Automation_Provider_IToggleProvider();



        private static class _IToggleMenuFlyoutItemAutomationPeerFactoryMethods
        {
            public static unsafe IntPtr CreateInstanceWithOwner(IObjectReference _obj, global::Microsoft.UI.Xaml.Controls.ToggleMenuFlyoutItem owner, object baseInterface, out IntPtr innerInterface)
            {
                var ThisPtr = _obj.ThisPtr;

                ObjectReferenceValue __owner = default;
                ObjectReferenceValue __baseInterface = default;
                IntPtr __innerInterface = default;
                IntPtr __retval = default;
                try
                {
                    __owner = global::ABI.Microsoft.UI.Xaml.Controls.ToggleMenuFlyoutItem.CreateMarshaler2(owner);
                    __baseInterface = MarshalInspectable<object>.CreateMarshaler2(baseInterface);
                    global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, IntPtr, IntPtr*, IntPtr*, int>**)ThisPtr)[6](ThisPtr, MarshalInspectable<object>.GetAbi(__owner), MarshalInspectable<object>.GetAbi(__baseInterface), &__innerInterface, &__retval));
                    global::System.GC.KeepAlive(_obj);
                    innerInterface = __innerInterface;
                    return __retval;
                }
                finally
                {
                    MarshalInspectable<object>.DisposeMarshaler(__owner);
                    MarshalInspectable<object>.DisposeMarshaler(__baseInterface);
                }
            }
        }

        private static volatile IObjectReference ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IToggleMenuFlyoutItemAutomationPeerFactory;
        private static IObjectReference _objRef_global__Microsoft_UI_Xaml_Automation_Peers_IToggleMenuFlyoutItemAutomationPeerFactory
        {
            get
            { 
                var factory = ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IToggleMenuFlyoutItemAutomationPeerFactory;
                if (factory != null && factory.IsInCurrentContext)
                {
                    return factory;
                }
                else
                {
                    return ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IToggleMenuFlyoutItemAutomationPeerFactory = ActivationFactory.Get("Microsoft.UI.Xaml.Automation.Peers.ToggleMenuFlyoutItemAutomationPeer", global::ABI.Microsoft.UI.Xaml.Automation.Peers.IToggleMenuFlyoutItemAutomationPeerFactoryMethods.IID);
                }
            }
        }

        public ToggleMenuFlyoutItemAutomationPeer(global::Microsoft.UI.Xaml.Controls.ToggleMenuFlyoutItem owner):base(global::WinRT.DerivedComposed.Instance)
        {
            bool isAggregation = this.GetType() != typeof(ToggleMenuFlyoutItemAutomationPeer);
            object baseInspectable = isAggregation ? this : null;
            IntPtr composed = _IToggleMenuFlyoutItemAutomationPeerFactoryMethods.CreateInstanceWithOwner(_objRef_global__Microsoft_UI_Xaml_Automation_Peers_IToggleMenuFlyoutItemAutomationPeerFactory, owner, baseInspectable, out IntPtr inner);
            try
            {
                ComWrappersHelper.Init(isAggregation, this, composed, inner, global::ABI.Microsoft.UI.Xaml.Automation.Peers.IToggleMenuFlyoutItemAutomationPeerMethods.IID, out _inner);

            }
            finally
            {
                Marshal.Release(inner);   
            }
        }

        public static new ToggleMenuFlyoutItemAutomationPeer FromAbi(IntPtr thisPtr)
        {
            if (thisPtr == IntPtr.Zero) return null;
            return MarshalInspectable<ToggleMenuFlyoutItemAutomationPeer>.FromAbi(thisPtr);
        }

        protected internal ToggleMenuFlyoutItemAutomationPeer(IObjectReference objRef)
            : base(global::WinRT.DerivedComposed.Instance)

        {
            _inner = objRef.As(global::ABI.Microsoft.UI.Xaml.Automation.Peers.IToggleMenuFlyoutItemAutomationPeerMethods.IID);

        }


        public static bool operator ==(ToggleMenuFlyoutItemAutomationPeer x, ToggleMenuFlyoutItemAutomationPeer y) => (x?.ThisPtr ?? IntPtr.Zero) == (y?.ThisPtr ?? IntPtr.Zero);
        public static bool operator !=(ToggleMenuFlyoutItemAutomationPeer x, ToggleMenuFlyoutItemAutomationPeer y) => !(x == y);
        public bool Equals(ToggleMenuFlyoutItemAutomationPeer other) => this == other;
        public override bool Equals(object obj) => obj is ToggleMenuFlyoutItemAutomationPeer that && this == that;
        public override int GetHashCode() => ThisPtr.GetHashCode();


        protected ToggleMenuFlyoutItemAutomationPeer(global::WinRT.DerivedComposed _):base(_)
        {

        }
        bool IWinRTObject.HasUnwrappableNativeObject => this.GetType() == typeof(ToggleMenuFlyoutItemAutomationPeer);
        IObjectReference IWinRTObject.NativeObject => _inner;

        private struct InterfaceTag<I>{};


        public void Toggle() => global::ABI.Microsoft.UI.Xaml.Automation.Provider.IToggleProviderMethods.Toggle(_objRef_global__Microsoft_UI_Xaml_Automation_Provider_IToggleProvider);

        public global::Microsoft.UI.Xaml.Automation.ToggleState ToggleState => global::ABI.Microsoft.UI.Xaml.Automation.Provider.IToggleProviderMethods.get_ToggleState(_objRef_global__Microsoft_UI_Xaml_Automation_Provider_IToggleProvider);

        protected override bool IsOverridableInterface(Guid iid) => base.IsOverridableInterface(iid);

        global::System.Runtime.InteropServices.CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(ref Guid iid, out IntPtr ppv)
        {
            ppv = IntPtr.Zero;
            if (IsOverridableInterface(iid) || global::WinRT.Interop.IID.IID_IInspectable == iid)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
            }

            if (((IWinRTObject)this).NativeObject.TryAs(iid, out ppv) >= 0)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.Handled;
            }

            return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
        }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")]
    [global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Automation.Peers.ToggleSplitButtonAutomationPeer))]
    [global::ABI.Microsoft.UI.Xaml.Automation.Peers.ToggleSplitButtonAutomationPeerRcwFactory]
    [global::WinRT.ProjectedRuntimeClass(typeof(IToggleSplitButtonAutomationPeer))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.XamlContract), 65536u)]
    public class ToggleSplitButtonAutomationPeer : FrameworkElementAutomationPeer, global::Microsoft.UI.Xaml.Automation.Provider.IExpandCollapseProvider, global::Microsoft.UI.Xaml.Automation.Provider.IToggleProvider, global::System.Runtime.InteropServices.ICustomQueryInterface, IWinRTObject, IEquatable<ToggleSplitButtonAutomationPeer>
    {
        private IntPtr ThisPtr => _inner == null ? (((IWinRTObject)this).NativeObject).ThisPtr : _inner.ThisPtr;

        private readonly IObjectReference _inner = null;




        private volatile IObjectReference ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IToggleSplitButtonAutomationPeer;
        private IObjectReference Make___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IToggleSplitButtonAutomationPeer()
        {
            global::System.Threading.Interlocked.CompareExchange(ref ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IToggleSplitButtonAutomationPeer, ((IWinRTObject)this).NativeObject.As<IUnknownVftbl>(global::ABI.Microsoft.UI.Xaml.Automation.Peers.IToggleSplitButtonAutomationPeerMethods.IID), null);
            return ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IToggleSplitButtonAutomationPeer;
        }
        private IObjectReference _objRef_global__Microsoft_UI_Xaml_Automation_Peers_IToggleSplitButtonAutomationPeer => ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IToggleSplitButtonAutomationPeer ?? Make___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IToggleSplitButtonAutomationPeer();

        private volatile IObjectReference ___objRef_global__Microsoft_UI_Xaml_Automation_Provider_IExpandCollapseProvider;
        private IObjectReference Make___objRef_global__Microsoft_UI_Xaml_Automation_Provider_IExpandCollapseProvider()
        {
            global::System.Threading.Interlocked.CompareExchange(ref ___objRef_global__Microsoft_UI_Xaml_Automation_Provider_IExpandCollapseProvider, ((IWinRTObject)this).NativeObject.As<IUnknownVftbl>(global::ABI.Microsoft.UI.Xaml.Automation.Provider.IExpandCollapseProviderMethods.IID), null);
            return ___objRef_global__Microsoft_UI_Xaml_Automation_Provider_IExpandCollapseProvider;
        }
        private IObjectReference _objRef_global__Microsoft_UI_Xaml_Automation_Provider_IExpandCollapseProvider => ___objRef_global__Microsoft_UI_Xaml_Automation_Provider_IExpandCollapseProvider ?? Make___objRef_global__Microsoft_UI_Xaml_Automation_Provider_IExpandCollapseProvider();

        private volatile IObjectReference ___objRef_global__Microsoft_UI_Xaml_Automation_Provider_IToggleProvider;
        private IObjectReference Make___objRef_global__Microsoft_UI_Xaml_Automation_Provider_IToggleProvider()
        {
            global::System.Threading.Interlocked.CompareExchange(ref ___objRef_global__Microsoft_UI_Xaml_Automation_Provider_IToggleProvider, ((IWinRTObject)this).NativeObject.As<IUnknownVftbl>(global::ABI.Microsoft.UI.Xaml.Automation.Provider.IToggleProviderMethods.IID), null);
            return ___objRef_global__Microsoft_UI_Xaml_Automation_Provider_IToggleProvider;
        }
        private IObjectReference _objRef_global__Microsoft_UI_Xaml_Automation_Provider_IToggleProvider => ___objRef_global__Microsoft_UI_Xaml_Automation_Provider_IToggleProvider ?? Make___objRef_global__Microsoft_UI_Xaml_Automation_Provider_IToggleProvider();



        private static class _IToggleSplitButtonAutomationPeerFactoryMethods
        {
            public static unsafe IntPtr CreateInstance(IObjectReference _obj, global::Microsoft.UI.Xaml.Controls.ToggleSplitButton owner, object baseInterface, out IntPtr innerInterface)
            {
                var ThisPtr = _obj.ThisPtr;

                ObjectReferenceValue __owner = default;
                ObjectReferenceValue __baseInterface = default;
                IntPtr __innerInterface = default;
                IntPtr __retval = default;
                try
                {
                    __owner = global::ABI.Microsoft.UI.Xaml.Controls.ToggleSplitButton.CreateMarshaler2(owner);
                    __baseInterface = MarshalInspectable<object>.CreateMarshaler2(baseInterface);
                    global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, IntPtr, IntPtr*, IntPtr*, int>**)ThisPtr)[6](ThisPtr, MarshalInspectable<object>.GetAbi(__owner), MarshalInspectable<object>.GetAbi(__baseInterface), &__innerInterface, &__retval));
                    global::System.GC.KeepAlive(_obj);
                    innerInterface = __innerInterface;
                    return __retval;
                }
                finally
                {
                    MarshalInspectable<object>.DisposeMarshaler(__owner);
                    MarshalInspectable<object>.DisposeMarshaler(__baseInterface);
                }
            }
        }

        private static volatile IObjectReference ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IToggleSplitButtonAutomationPeerFactory;
        private static IObjectReference _objRef_global__Microsoft_UI_Xaml_Automation_Peers_IToggleSplitButtonAutomationPeerFactory
        {
            get
            { 
                var factory = ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IToggleSplitButtonAutomationPeerFactory;
                if (factory != null && factory.IsInCurrentContext)
                {
                    return factory;
                }
                else
                {
                    return ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IToggleSplitButtonAutomationPeerFactory = ActivationFactory.Get("Microsoft.UI.Xaml.Automation.Peers.ToggleSplitButtonAutomationPeer", global::ABI.Microsoft.UI.Xaml.Automation.Peers.IToggleSplitButtonAutomationPeerFactoryMethods.IID);
                }
            }
        }

        public ToggleSplitButtonAutomationPeer(global::Microsoft.UI.Xaml.Controls.ToggleSplitButton owner):base(global::WinRT.DerivedComposed.Instance)
        {
            bool isAggregation = this.GetType() != typeof(ToggleSplitButtonAutomationPeer);
            object baseInspectable = isAggregation ? this : null;
            IntPtr composed = _IToggleSplitButtonAutomationPeerFactoryMethods.CreateInstance(_objRef_global__Microsoft_UI_Xaml_Automation_Peers_IToggleSplitButtonAutomationPeerFactory, owner, baseInspectable, out IntPtr inner);
            try
            {
                ComWrappersHelper.Init(isAggregation, this, composed, inner, global::ABI.Microsoft.UI.Xaml.Automation.Peers.IToggleSplitButtonAutomationPeerMethods.IID, out _inner);

            }
            finally
            {
                Marshal.Release(inner);   
            }
        }

        public static new ToggleSplitButtonAutomationPeer FromAbi(IntPtr thisPtr)
        {
            if (thisPtr == IntPtr.Zero) return null;
            return MarshalInspectable<ToggleSplitButtonAutomationPeer>.FromAbi(thisPtr);
        }

        protected internal ToggleSplitButtonAutomationPeer(IObjectReference objRef)
            : base(global::WinRT.DerivedComposed.Instance)

        {
            _inner = objRef.As(global::ABI.Microsoft.UI.Xaml.Automation.Peers.IToggleSplitButtonAutomationPeerMethods.IID);

        }


        public static bool operator ==(ToggleSplitButtonAutomationPeer x, ToggleSplitButtonAutomationPeer y) => (x?.ThisPtr ?? IntPtr.Zero) == (y?.ThisPtr ?? IntPtr.Zero);
        public static bool operator !=(ToggleSplitButtonAutomationPeer x, ToggleSplitButtonAutomationPeer y) => !(x == y);
        public bool Equals(ToggleSplitButtonAutomationPeer other) => this == other;
        public override bool Equals(object obj) => obj is ToggleSplitButtonAutomationPeer that && this == that;
        public override int GetHashCode() => ThisPtr.GetHashCode();


        protected ToggleSplitButtonAutomationPeer(global::WinRT.DerivedComposed _):base(_)
        {

        }
        bool IWinRTObject.HasUnwrappableNativeObject => this.GetType() == typeof(ToggleSplitButtonAutomationPeer);
        IObjectReference IWinRTObject.NativeObject => _inner;

        private struct InterfaceTag<I>{};


        public void Collapse() => global::ABI.Microsoft.UI.Xaml.Automation.Provider.IExpandCollapseProviderMethods.Collapse(_objRef_global__Microsoft_UI_Xaml_Automation_Provider_IExpandCollapseProvider);

        public void Expand() => global::ABI.Microsoft.UI.Xaml.Automation.Provider.IExpandCollapseProviderMethods.Expand(_objRef_global__Microsoft_UI_Xaml_Automation_Provider_IExpandCollapseProvider);

        public void Toggle() => global::ABI.Microsoft.UI.Xaml.Automation.Provider.IToggleProviderMethods.Toggle(_objRef_global__Microsoft_UI_Xaml_Automation_Provider_IToggleProvider);

        public global::Microsoft.UI.Xaml.Automation.ExpandCollapseState ExpandCollapseState => global::ABI.Microsoft.UI.Xaml.Automation.Provider.IExpandCollapseProviderMethods.get_ExpandCollapseState(_objRef_global__Microsoft_UI_Xaml_Automation_Provider_IExpandCollapseProvider);

        public global::Microsoft.UI.Xaml.Automation.ToggleState ToggleState => global::ABI.Microsoft.UI.Xaml.Automation.Provider.IToggleProviderMethods.get_ToggleState(_objRef_global__Microsoft_UI_Xaml_Automation_Provider_IToggleProvider);

        protected override bool IsOverridableInterface(Guid iid) => base.IsOverridableInterface(iid);

        global::System.Runtime.InteropServices.CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(ref Guid iid, out IntPtr ppv)
        {
            ppv = IntPtr.Zero;
            if (IsOverridableInterface(iid) || global::WinRT.Interop.IID.IID_IInspectable == iid)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
            }

            if (((IWinRTObject)this).NativeObject.TryAs(iid, out ppv) >= 0)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.Handled;
            }

            return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
        }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")]
    [global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Automation.Peers.ToggleSwitchAutomationPeer))]
    [global::ABI.Microsoft.UI.Xaml.Automation.Peers.ToggleSwitchAutomationPeerRcwFactory]
    [global::WinRT.ProjectedRuntimeClass(typeof(IToggleSwitchAutomationPeer))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    public class ToggleSwitchAutomationPeer : FrameworkElementAutomationPeer, global::Microsoft.UI.Xaml.Automation.Provider.IToggleProvider, global::System.Runtime.InteropServices.ICustomQueryInterface, IWinRTObject, IEquatable<ToggleSwitchAutomationPeer>
    {
        private IntPtr ThisPtr => _inner == null ? (((IWinRTObject)this).NativeObject).ThisPtr : _inner.ThisPtr;

        private readonly IObjectReference _inner = null;




        private volatile IObjectReference ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IToggleSwitchAutomationPeer;
        private IObjectReference Make___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IToggleSwitchAutomationPeer()
        {
            global::System.Threading.Interlocked.CompareExchange(ref ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IToggleSwitchAutomationPeer, ((IWinRTObject)this).NativeObject.As<IUnknownVftbl>(global::ABI.Microsoft.UI.Xaml.Automation.Peers.IToggleSwitchAutomationPeerMethods.IID), null);
            return ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IToggleSwitchAutomationPeer;
        }
        private IObjectReference _objRef_global__Microsoft_UI_Xaml_Automation_Peers_IToggleSwitchAutomationPeer => ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IToggleSwitchAutomationPeer ?? Make___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IToggleSwitchAutomationPeer();

        private volatile IObjectReference ___objRef_global__Microsoft_UI_Xaml_Automation_Provider_IToggleProvider;
        private IObjectReference Make___objRef_global__Microsoft_UI_Xaml_Automation_Provider_IToggleProvider()
        {
            global::System.Threading.Interlocked.CompareExchange(ref ___objRef_global__Microsoft_UI_Xaml_Automation_Provider_IToggleProvider, ((IWinRTObject)this).NativeObject.As<IUnknownVftbl>(global::ABI.Microsoft.UI.Xaml.Automation.Provider.IToggleProviderMethods.IID), null);
            return ___objRef_global__Microsoft_UI_Xaml_Automation_Provider_IToggleProvider;
        }
        private IObjectReference _objRef_global__Microsoft_UI_Xaml_Automation_Provider_IToggleProvider => ___objRef_global__Microsoft_UI_Xaml_Automation_Provider_IToggleProvider ?? Make___objRef_global__Microsoft_UI_Xaml_Automation_Provider_IToggleProvider();



        private static class _IToggleSwitchAutomationPeerFactoryMethods
        {
            public static unsafe IntPtr CreateInstanceWithOwner(IObjectReference _obj, global::Microsoft.UI.Xaml.Controls.ToggleSwitch owner, object baseInterface, out IntPtr innerInterface)
            {
                var ThisPtr = _obj.ThisPtr;

                ObjectReferenceValue __owner = default;
                ObjectReferenceValue __baseInterface = default;
                IntPtr __innerInterface = default;
                IntPtr __retval = default;
                try
                {
                    __owner = global::ABI.Microsoft.UI.Xaml.Controls.ToggleSwitch.CreateMarshaler2(owner);
                    __baseInterface = MarshalInspectable<object>.CreateMarshaler2(baseInterface);
                    global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, IntPtr, IntPtr*, IntPtr*, int>**)ThisPtr)[6](ThisPtr, MarshalInspectable<object>.GetAbi(__owner), MarshalInspectable<object>.GetAbi(__baseInterface), &__innerInterface, &__retval));
                    global::System.GC.KeepAlive(_obj);
                    innerInterface = __innerInterface;
                    return __retval;
                }
                finally
                {
                    MarshalInspectable<object>.DisposeMarshaler(__owner);
                    MarshalInspectable<object>.DisposeMarshaler(__baseInterface);
                }
            }
        }

        private static volatile IObjectReference ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IToggleSwitchAutomationPeerFactory;
        private static IObjectReference _objRef_global__Microsoft_UI_Xaml_Automation_Peers_IToggleSwitchAutomationPeerFactory
        {
            get
            { 
                var factory = ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IToggleSwitchAutomationPeerFactory;
                if (factory != null && factory.IsInCurrentContext)
                {
                    return factory;
                }
                else
                {
                    return ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IToggleSwitchAutomationPeerFactory = ActivationFactory.Get("Microsoft.UI.Xaml.Automation.Peers.ToggleSwitchAutomationPeer", global::ABI.Microsoft.UI.Xaml.Automation.Peers.IToggleSwitchAutomationPeerFactoryMethods.IID);
                }
            }
        }

        public ToggleSwitchAutomationPeer(global::Microsoft.UI.Xaml.Controls.ToggleSwitch owner):base(global::WinRT.DerivedComposed.Instance)
        {
            bool isAggregation = this.GetType() != typeof(ToggleSwitchAutomationPeer);
            object baseInspectable = isAggregation ? this : null;
            IntPtr composed = _IToggleSwitchAutomationPeerFactoryMethods.CreateInstanceWithOwner(_objRef_global__Microsoft_UI_Xaml_Automation_Peers_IToggleSwitchAutomationPeerFactory, owner, baseInspectable, out IntPtr inner);
            try
            {
                ComWrappersHelper.Init(isAggregation, this, composed, inner, global::ABI.Microsoft.UI.Xaml.Automation.Peers.IToggleSwitchAutomationPeerMethods.IID, out _inner);

            }
            finally
            {
                Marshal.Release(inner);   
            }
        }

        public static new ToggleSwitchAutomationPeer FromAbi(IntPtr thisPtr)
        {
            if (thisPtr == IntPtr.Zero) return null;
            return MarshalInspectable<ToggleSwitchAutomationPeer>.FromAbi(thisPtr);
        }

        protected internal ToggleSwitchAutomationPeer(IObjectReference objRef)
            : base(global::WinRT.DerivedComposed.Instance)

        {
            _inner = objRef.As(global::ABI.Microsoft.UI.Xaml.Automation.Peers.IToggleSwitchAutomationPeerMethods.IID);

        }


        public static bool operator ==(ToggleSwitchAutomationPeer x, ToggleSwitchAutomationPeer y) => (x?.ThisPtr ?? IntPtr.Zero) == (y?.ThisPtr ?? IntPtr.Zero);
        public static bool operator !=(ToggleSwitchAutomationPeer x, ToggleSwitchAutomationPeer y) => !(x == y);
        public bool Equals(ToggleSwitchAutomationPeer other) => this == other;
        public override bool Equals(object obj) => obj is ToggleSwitchAutomationPeer that && this == that;
        public override int GetHashCode() => ThisPtr.GetHashCode();


        protected ToggleSwitchAutomationPeer(global::WinRT.DerivedComposed _):base(_)
        {

        }
        bool IWinRTObject.HasUnwrappableNativeObject => this.GetType() == typeof(ToggleSwitchAutomationPeer);
        IObjectReference IWinRTObject.NativeObject => _inner;

        private struct InterfaceTag<I>{};


        public void Toggle() => global::ABI.Microsoft.UI.Xaml.Automation.Provider.IToggleProviderMethods.Toggle(_objRef_global__Microsoft_UI_Xaml_Automation_Provider_IToggleProvider);

        public global::Microsoft.UI.Xaml.Automation.ToggleState ToggleState => global::ABI.Microsoft.UI.Xaml.Automation.Provider.IToggleProviderMethods.get_ToggleState(_objRef_global__Microsoft_UI_Xaml_Automation_Provider_IToggleProvider);

        protected override bool IsOverridableInterface(Guid iid) => base.IsOverridableInterface(iid);

        global::System.Runtime.InteropServices.CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(ref Guid iid, out IntPtr ppv)
        {
            ppv = IntPtr.Zero;
            if (IsOverridableInterface(iid) || global::WinRT.Interop.IID.IID_IInspectable == iid)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
            }

            if (((IWinRTObject)this).NativeObject.TryAs(iid, out ppv) >= 0)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.Handled;
            }

            return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
        }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")]
    [global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Automation.Peers.TreeViewItemAutomationPeer))]
    [global::ABI.Microsoft.UI.Xaml.Automation.Peers.TreeViewItemAutomationPeerRcwFactory]
    [global::WinRT.ProjectedRuntimeClass(typeof(ITreeViewItemAutomationPeer))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.XamlContract), 65536u)]
    public class TreeViewItemAutomationPeer : ListViewItemAutomationPeer, global::Microsoft.UI.Xaml.Automation.Provider.IExpandCollapseProvider, global::System.Runtime.InteropServices.ICustomQueryInterface, IWinRTObject, IEquatable<TreeViewItemAutomationPeer>
    {
        private IntPtr ThisPtr => _inner == null ? (((IWinRTObject)this).NativeObject).ThisPtr : _inner.ThisPtr;

        private readonly IObjectReference _inner = null;




        private volatile IObjectReference ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_ITreeViewItemAutomationPeer;
        private IObjectReference Make___objRef_global__Microsoft_UI_Xaml_Automation_Peers_ITreeViewItemAutomationPeer()
        {
            global::System.Threading.Interlocked.CompareExchange(ref ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_ITreeViewItemAutomationPeer, ((IWinRTObject)this).NativeObject.As<IUnknownVftbl>(global::ABI.Microsoft.UI.Xaml.Automation.Peers.ITreeViewItemAutomationPeerMethods.IID), null);
            return ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_ITreeViewItemAutomationPeer;
        }
        private IObjectReference _objRef_global__Microsoft_UI_Xaml_Automation_Peers_ITreeViewItemAutomationPeer => ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_ITreeViewItemAutomationPeer ?? Make___objRef_global__Microsoft_UI_Xaml_Automation_Peers_ITreeViewItemAutomationPeer();

        private volatile IObjectReference ___objRef_global__Microsoft_UI_Xaml_Automation_Provider_IExpandCollapseProvider;
        private IObjectReference Make___objRef_global__Microsoft_UI_Xaml_Automation_Provider_IExpandCollapseProvider()
        {
            global::System.Threading.Interlocked.CompareExchange(ref ___objRef_global__Microsoft_UI_Xaml_Automation_Provider_IExpandCollapseProvider, ((IWinRTObject)this).NativeObject.As<IUnknownVftbl>(global::ABI.Microsoft.UI.Xaml.Automation.Provider.IExpandCollapseProviderMethods.IID), null);
            return ___objRef_global__Microsoft_UI_Xaml_Automation_Provider_IExpandCollapseProvider;
        }
        private IObjectReference _objRef_global__Microsoft_UI_Xaml_Automation_Provider_IExpandCollapseProvider => ___objRef_global__Microsoft_UI_Xaml_Automation_Provider_IExpandCollapseProvider ?? Make___objRef_global__Microsoft_UI_Xaml_Automation_Provider_IExpandCollapseProvider();



        private static class _ITreeViewItemAutomationPeerFactoryMethods
        {
            public static unsafe IntPtr CreateInstanceWithOwner(IObjectReference _obj, global::Microsoft.UI.Xaml.Controls.TreeViewItem owner, object baseInterface, out IntPtr innerInterface)
            {
                var ThisPtr = _obj.ThisPtr;

                ObjectReferenceValue __owner = default;
                ObjectReferenceValue __baseInterface = default;
                IntPtr __innerInterface = default;
                IntPtr __retval = default;
                try
                {
                    __owner = global::ABI.Microsoft.UI.Xaml.Controls.TreeViewItem.CreateMarshaler2(owner);
                    __baseInterface = MarshalInspectable<object>.CreateMarshaler2(baseInterface);
                    global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, IntPtr, IntPtr*, IntPtr*, int>**)ThisPtr)[6](ThisPtr, MarshalInspectable<object>.GetAbi(__owner), MarshalInspectable<object>.GetAbi(__baseInterface), &__innerInterface, &__retval));
                    global::System.GC.KeepAlive(_obj);
                    innerInterface = __innerInterface;
                    return __retval;
                }
                finally
                {
                    MarshalInspectable<object>.DisposeMarshaler(__owner);
                    MarshalInspectable<object>.DisposeMarshaler(__baseInterface);
                }
            }
        }

        private static volatile IObjectReference ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_ITreeViewItemAutomationPeerFactory;
        private static IObjectReference _objRef_global__Microsoft_UI_Xaml_Automation_Peers_ITreeViewItemAutomationPeerFactory
        {
            get
            { 
                var factory = ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_ITreeViewItemAutomationPeerFactory;
                if (factory != null && factory.IsInCurrentContext)
                {
                    return factory;
                }
                else
                {
                    return ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_ITreeViewItemAutomationPeerFactory = ActivationFactory.Get("Microsoft.UI.Xaml.Automation.Peers.TreeViewItemAutomationPeer", global::ABI.Microsoft.UI.Xaml.Automation.Peers.ITreeViewItemAutomationPeerFactoryMethods.IID);
                }
            }
        }

        public TreeViewItemAutomationPeer(global::Microsoft.UI.Xaml.Controls.TreeViewItem owner):base(global::WinRT.DerivedComposed.Instance)
        {
            bool isAggregation = this.GetType() != typeof(TreeViewItemAutomationPeer);
            object baseInspectable = isAggregation ? this : null;
            IntPtr composed = _ITreeViewItemAutomationPeerFactoryMethods.CreateInstanceWithOwner(_objRef_global__Microsoft_UI_Xaml_Automation_Peers_ITreeViewItemAutomationPeerFactory, owner, baseInspectable, out IntPtr inner);
            try
            {
                ComWrappersHelper.Init(isAggregation, this, composed, inner, global::ABI.Microsoft.UI.Xaml.Automation.Peers.ITreeViewItemAutomationPeerMethods.IID, out _inner);

            }
            finally
            {
                Marshal.Release(inner);   
            }
        }

        public static new TreeViewItemAutomationPeer FromAbi(IntPtr thisPtr)
        {
            if (thisPtr == IntPtr.Zero) return null;
            return MarshalInspectable<TreeViewItemAutomationPeer>.FromAbi(thisPtr);
        }

        protected internal TreeViewItemAutomationPeer(IObjectReference objRef)
            : base(global::WinRT.DerivedComposed.Instance)

        {
            _inner = objRef.As(global::ABI.Microsoft.UI.Xaml.Automation.Peers.ITreeViewItemAutomationPeerMethods.IID);

        }


        public static bool operator ==(TreeViewItemAutomationPeer x, TreeViewItemAutomationPeer y) => (x?.ThisPtr ?? IntPtr.Zero) == (y?.ThisPtr ?? IntPtr.Zero);
        public static bool operator !=(TreeViewItemAutomationPeer x, TreeViewItemAutomationPeer y) => !(x == y);
        public bool Equals(TreeViewItemAutomationPeer other) => this == other;
        public override bool Equals(object obj) => obj is TreeViewItemAutomationPeer that && this == that;
        public override int GetHashCode() => ThisPtr.GetHashCode();


        protected TreeViewItemAutomationPeer(global::WinRT.DerivedComposed _):base(_)
        {

        }
        bool IWinRTObject.HasUnwrappableNativeObject => this.GetType() == typeof(TreeViewItemAutomationPeer);
        IObjectReference IWinRTObject.NativeObject => _inner;

        private struct InterfaceTag<I>{};


        public void Collapse() => global::ABI.Microsoft.UI.Xaml.Automation.Provider.IExpandCollapseProviderMethods.Collapse(_objRef_global__Microsoft_UI_Xaml_Automation_Provider_IExpandCollapseProvider);

        public void Expand() => global::ABI.Microsoft.UI.Xaml.Automation.Provider.IExpandCollapseProviderMethods.Expand(_objRef_global__Microsoft_UI_Xaml_Automation_Provider_IExpandCollapseProvider);

        public global::Microsoft.UI.Xaml.Automation.ExpandCollapseState ExpandCollapseState => global::ABI.Microsoft.UI.Xaml.Automation.Provider.IExpandCollapseProviderMethods.get_ExpandCollapseState(_objRef_global__Microsoft_UI_Xaml_Automation_Provider_IExpandCollapseProvider);

        protected override bool IsOverridableInterface(Guid iid) => base.IsOverridableInterface(iid);

        global::System.Runtime.InteropServices.CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(ref Guid iid, out IntPtr ppv)
        {
            ppv = IntPtr.Zero;
            if (IsOverridableInterface(iid) || global::WinRT.Interop.IID.IID_IInspectable == iid)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
            }

            if (((IWinRTObject)this).NativeObject.TryAs(iid, out ppv) >= 0)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.Handled;
            }

            return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
        }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")]
    [global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Automation.Peers.TreeViewItemDataAutomationPeer))]
    [global::ABI.Microsoft.UI.Xaml.Automation.Peers.TreeViewItemDataAutomationPeerRcwFactory]
    [global::WinRT.ProjectedRuntimeClass(typeof(ITreeViewItemDataAutomationPeer))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.XamlContract), 65536u)]
    public class TreeViewItemDataAutomationPeer : ItemAutomationPeer, global::Microsoft.UI.Xaml.Automation.Provider.IExpandCollapseProvider, global::System.Runtime.InteropServices.ICustomQueryInterface, IWinRTObject, IEquatable<TreeViewItemDataAutomationPeer>
    {
        private IntPtr ThisPtr => _inner == null ? (((IWinRTObject)this).NativeObject).ThisPtr : _inner.ThisPtr;

        private readonly IObjectReference _inner = null;




        private volatile IObjectReference ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_ITreeViewItemDataAutomationPeer;
        private IObjectReference Make___objRef_global__Microsoft_UI_Xaml_Automation_Peers_ITreeViewItemDataAutomationPeer()
        {
            global::System.Threading.Interlocked.CompareExchange(ref ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_ITreeViewItemDataAutomationPeer, ((IWinRTObject)this).NativeObject.As<IUnknownVftbl>(global::ABI.Microsoft.UI.Xaml.Automation.Peers.ITreeViewItemDataAutomationPeerMethods.IID), null);
            return ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_ITreeViewItemDataAutomationPeer;
        }
        private IObjectReference _objRef_global__Microsoft_UI_Xaml_Automation_Peers_ITreeViewItemDataAutomationPeer => ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_ITreeViewItemDataAutomationPeer ?? Make___objRef_global__Microsoft_UI_Xaml_Automation_Peers_ITreeViewItemDataAutomationPeer();

        private volatile IObjectReference ___objRef_global__Microsoft_UI_Xaml_Automation_Provider_IExpandCollapseProvider;
        private IObjectReference Make___objRef_global__Microsoft_UI_Xaml_Automation_Provider_IExpandCollapseProvider()
        {
            global::System.Threading.Interlocked.CompareExchange(ref ___objRef_global__Microsoft_UI_Xaml_Automation_Provider_IExpandCollapseProvider, ((IWinRTObject)this).NativeObject.As<IUnknownVftbl>(global::ABI.Microsoft.UI.Xaml.Automation.Provider.IExpandCollapseProviderMethods.IID), null);
            return ___objRef_global__Microsoft_UI_Xaml_Automation_Provider_IExpandCollapseProvider;
        }
        private IObjectReference _objRef_global__Microsoft_UI_Xaml_Automation_Provider_IExpandCollapseProvider => ___objRef_global__Microsoft_UI_Xaml_Automation_Provider_IExpandCollapseProvider ?? Make___objRef_global__Microsoft_UI_Xaml_Automation_Provider_IExpandCollapseProvider();



        private static class _ITreeViewItemDataAutomationPeerFactoryMethods
        {
            public static unsafe IntPtr CreateInstanceWithOwner(IObjectReference _obj, object item, TreeViewListAutomationPeer parent, object baseInterface, out IntPtr innerInterface)
            {
                var ThisPtr = _obj.ThisPtr;

                ObjectReferenceValue __item = default;
                ObjectReferenceValue __parent = default;
                ObjectReferenceValue __baseInterface = default;
                IntPtr __innerInterface = default;
                IntPtr __retval = default;
                try
                {
                    __item = MarshalInspectable<object>.CreateMarshaler2(item);
                    __parent = global::ABI.Microsoft.UI.Xaml.Automation.Peers.TreeViewListAutomationPeer.CreateMarshaler2(parent);
                    __baseInterface = MarshalInspectable<object>.CreateMarshaler2(baseInterface);
                    global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, IntPtr, IntPtr, IntPtr*, IntPtr*, int>**)ThisPtr)[6](ThisPtr, MarshalInspectable<object>.GetAbi(__item), MarshalInspectable<object>.GetAbi(__parent), MarshalInspectable<object>.GetAbi(__baseInterface), &__innerInterface, &__retval));
                    global::System.GC.KeepAlive(_obj);
                    innerInterface = __innerInterface;
                    return __retval;
                }
                finally
                {
                    MarshalInspectable<object>.DisposeMarshaler(__item);
                    MarshalInspectable<object>.DisposeMarshaler(__parent);
                    MarshalInspectable<object>.DisposeMarshaler(__baseInterface);
                }
            }
        }

        private static volatile IObjectReference ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_ITreeViewItemDataAutomationPeerFactory;
        private static IObjectReference _objRef_global__Microsoft_UI_Xaml_Automation_Peers_ITreeViewItemDataAutomationPeerFactory
        {
            get
            { 
                var factory = ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_ITreeViewItemDataAutomationPeerFactory;
                if (factory != null && factory.IsInCurrentContext)
                {
                    return factory;
                }
                else
                {
                    return ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_ITreeViewItemDataAutomationPeerFactory = ActivationFactory.Get("Microsoft.UI.Xaml.Automation.Peers.TreeViewItemDataAutomationPeer", global::ABI.Microsoft.UI.Xaml.Automation.Peers.ITreeViewItemDataAutomationPeerFactoryMethods.IID);
                }
            }
        }

        public TreeViewItemDataAutomationPeer(object item, TreeViewListAutomationPeer parent):base(global::WinRT.DerivedComposed.Instance)
        {
            bool isAggregation = this.GetType() != typeof(TreeViewItemDataAutomationPeer);
            object baseInspectable = isAggregation ? this : null;
            IntPtr composed = _ITreeViewItemDataAutomationPeerFactoryMethods.CreateInstanceWithOwner(_objRef_global__Microsoft_UI_Xaml_Automation_Peers_ITreeViewItemDataAutomationPeerFactory, item, parent, baseInspectable, out IntPtr inner);
            try
            {
                ComWrappersHelper.Init(isAggregation, this, composed, inner, global::ABI.Microsoft.UI.Xaml.Automation.Peers.ITreeViewItemDataAutomationPeerMethods.IID, out _inner);

            }
            finally
            {
                Marshal.Release(inner);   
            }
        }

        public static new TreeViewItemDataAutomationPeer FromAbi(IntPtr thisPtr)
        {
            if (thisPtr == IntPtr.Zero) return null;
            return MarshalInspectable<TreeViewItemDataAutomationPeer>.FromAbi(thisPtr);
        }

        protected internal TreeViewItemDataAutomationPeer(IObjectReference objRef)
            : base(global::WinRT.DerivedComposed.Instance)

        {
            _inner = objRef.As(global::ABI.Microsoft.UI.Xaml.Automation.Peers.ITreeViewItemDataAutomationPeerMethods.IID);

        }


        public static bool operator ==(TreeViewItemDataAutomationPeer x, TreeViewItemDataAutomationPeer y) => (x?.ThisPtr ?? IntPtr.Zero) == (y?.ThisPtr ?? IntPtr.Zero);
        public static bool operator !=(TreeViewItemDataAutomationPeer x, TreeViewItemDataAutomationPeer y) => !(x == y);
        public bool Equals(TreeViewItemDataAutomationPeer other) => this == other;
        public override bool Equals(object obj) => obj is TreeViewItemDataAutomationPeer that && this == that;
        public override int GetHashCode() => ThisPtr.GetHashCode();


        protected TreeViewItemDataAutomationPeer(global::WinRT.DerivedComposed _):base(_)
        {

        }
        bool IWinRTObject.HasUnwrappableNativeObject => this.GetType() == typeof(TreeViewItemDataAutomationPeer);
        IObjectReference IWinRTObject.NativeObject => _inner;

        private struct InterfaceTag<I>{};


        public void Collapse() => global::ABI.Microsoft.UI.Xaml.Automation.Provider.IExpandCollapseProviderMethods.Collapse(_objRef_global__Microsoft_UI_Xaml_Automation_Provider_IExpandCollapseProvider);

        public void Expand() => global::ABI.Microsoft.UI.Xaml.Automation.Provider.IExpandCollapseProviderMethods.Expand(_objRef_global__Microsoft_UI_Xaml_Automation_Provider_IExpandCollapseProvider);

        public global::Microsoft.UI.Xaml.Automation.ExpandCollapseState ExpandCollapseState => global::ABI.Microsoft.UI.Xaml.Automation.Provider.IExpandCollapseProviderMethods.get_ExpandCollapseState(_objRef_global__Microsoft_UI_Xaml_Automation_Provider_IExpandCollapseProvider);

        protected override bool IsOverridableInterface(Guid iid) => base.IsOverridableInterface(iid);

        global::System.Runtime.InteropServices.CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(ref Guid iid, out IntPtr ppv)
        {
            ppv = IntPtr.Zero;
            if (IsOverridableInterface(iid) || global::WinRT.Interop.IID.IID_IInspectable == iid)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
            }

            if (((IWinRTObject)this).NativeObject.TryAs(iid, out ppv) >= 0)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.Handled;
            }

            return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
        }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")]
    [global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Automation.Peers.TreeViewListAutomationPeer))]
    [global::ABI.Microsoft.UI.Xaml.Automation.Peers.TreeViewListAutomationPeerRcwFactory]
    [global::WinRT.ProjectedRuntimeClass(typeof(ITreeViewListAutomationPeer))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.XamlContract), 65536u)]
    public class TreeViewListAutomationPeer : ListViewAutomationPeer, global::System.Runtime.InteropServices.ICustomQueryInterface, IWinRTObject, IEquatable<TreeViewListAutomationPeer>
    {
        private IntPtr ThisPtr => _inner == null ? (((IWinRTObject)this).NativeObject).ThisPtr : _inner.ThisPtr;

        private readonly IObjectReference _inner = null;




        private volatile IObjectReference ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_ITreeViewListAutomationPeer;
        private IObjectReference Make___objRef_global__Microsoft_UI_Xaml_Automation_Peers_ITreeViewListAutomationPeer()
        {
            global::System.Threading.Interlocked.CompareExchange(ref ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_ITreeViewListAutomationPeer, ((IWinRTObject)this).NativeObject.As<IUnknownVftbl>(global::ABI.Microsoft.UI.Xaml.Automation.Peers.ITreeViewListAutomationPeerMethods.IID), null);
            return ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_ITreeViewListAutomationPeer;
        }
        private IObjectReference _objRef_global__Microsoft_UI_Xaml_Automation_Peers_ITreeViewListAutomationPeer => ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_ITreeViewListAutomationPeer ?? Make___objRef_global__Microsoft_UI_Xaml_Automation_Peers_ITreeViewListAutomationPeer();



        private static class _ITreeViewListAutomationPeerFactoryMethods
        {
            public static unsafe IntPtr CreateInstanceWithOwner(IObjectReference _obj, global::Microsoft.UI.Xaml.Controls.TreeViewList owner, object baseInterface, out IntPtr innerInterface)
            {
                var ThisPtr = _obj.ThisPtr;

                ObjectReferenceValue __owner = default;
                ObjectReferenceValue __baseInterface = default;
                IntPtr __innerInterface = default;
                IntPtr __retval = default;
                try
                {
                    __owner = global::ABI.Microsoft.UI.Xaml.Controls.TreeViewList.CreateMarshaler2(owner);
                    __baseInterface = MarshalInspectable<object>.CreateMarshaler2(baseInterface);
                    global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, IntPtr, IntPtr*, IntPtr*, int>**)ThisPtr)[6](ThisPtr, MarshalInspectable<object>.GetAbi(__owner), MarshalInspectable<object>.GetAbi(__baseInterface), &__innerInterface, &__retval));
                    global::System.GC.KeepAlive(_obj);
                    innerInterface = __innerInterface;
                    return __retval;
                }
                finally
                {
                    MarshalInspectable<object>.DisposeMarshaler(__owner);
                    MarshalInspectable<object>.DisposeMarshaler(__baseInterface);
                }
            }
        }

        private static volatile IObjectReference ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_ITreeViewListAutomationPeerFactory;
        private static IObjectReference _objRef_global__Microsoft_UI_Xaml_Automation_Peers_ITreeViewListAutomationPeerFactory
        {
            get
            { 
                var factory = ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_ITreeViewListAutomationPeerFactory;
                if (factory != null && factory.IsInCurrentContext)
                {
                    return factory;
                }
                else
                {
                    return ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_ITreeViewListAutomationPeerFactory = ActivationFactory.Get("Microsoft.UI.Xaml.Automation.Peers.TreeViewListAutomationPeer", global::ABI.Microsoft.UI.Xaml.Automation.Peers.ITreeViewListAutomationPeerFactoryMethods.IID);
                }
            }
        }

        public TreeViewListAutomationPeer(global::Microsoft.UI.Xaml.Controls.TreeViewList owner):base(global::WinRT.DerivedComposed.Instance)
        {
            bool isAggregation = this.GetType() != typeof(TreeViewListAutomationPeer);
            object baseInspectable = isAggregation ? this : null;
            IntPtr composed = _ITreeViewListAutomationPeerFactoryMethods.CreateInstanceWithOwner(_objRef_global__Microsoft_UI_Xaml_Automation_Peers_ITreeViewListAutomationPeerFactory, owner, baseInspectable, out IntPtr inner);
            try
            {
                ComWrappersHelper.Init(isAggregation, this, composed, inner, global::ABI.Microsoft.UI.Xaml.Automation.Peers.ITreeViewListAutomationPeerMethods.IID, out _inner);

            }
            finally
            {
                Marshal.Release(inner);   
            }
        }

        public static new TreeViewListAutomationPeer FromAbi(IntPtr thisPtr)
        {
            if (thisPtr == IntPtr.Zero) return null;
            return MarshalInspectable<TreeViewListAutomationPeer>.FromAbi(thisPtr);
        }

        protected internal TreeViewListAutomationPeer(IObjectReference objRef)
            : base(global::WinRT.DerivedComposed.Instance)

        {
            _inner = objRef.As(global::ABI.Microsoft.UI.Xaml.Automation.Peers.ITreeViewListAutomationPeerMethods.IID);

        }


        public static bool operator ==(TreeViewListAutomationPeer x, TreeViewListAutomationPeer y) => (x?.ThisPtr ?? IntPtr.Zero) == (y?.ThisPtr ?? IntPtr.Zero);
        public static bool operator !=(TreeViewListAutomationPeer x, TreeViewListAutomationPeer y) => !(x == y);
        public bool Equals(TreeViewListAutomationPeer other) => this == other;
        public override bool Equals(object obj) => obj is TreeViewListAutomationPeer that && this == that;
        public override int GetHashCode() => ThisPtr.GetHashCode();


        protected TreeViewListAutomationPeer(global::WinRT.DerivedComposed _):base(_)
        {

        }
        bool IWinRTObject.HasUnwrappableNativeObject => this.GetType() == typeof(TreeViewListAutomationPeer);
        IObjectReference IWinRTObject.NativeObject => _inner;

        private struct InterfaceTag<I>{};


        protected override bool IsOverridableInterface(Guid iid) => base.IsOverridableInterface(iid);

        global::System.Runtime.InteropServices.CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(ref Guid iid, out IntPtr ppv)
        {
            ppv = IntPtr.Zero;
            if (IsOverridableInterface(iid) || global::WinRT.Interop.IID.IID_IInspectable == iid)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
            }

            if (((IWinRTObject)this).NativeObject.TryAs(iid, out ppv) >= 0)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.Handled;
            }

            return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
        }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")]
    [global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Automation.Peers.WebView2AutomationPeer))]
    [global::ABI.Microsoft.UI.Xaml.Automation.Peers.WebView2AutomationPeerRcwFactory]
    [global::WinRT.ProjectedRuntimeClass(typeof(IWebView2AutomationPeer))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.XamlContract), 65536u)]
    public class WebView2AutomationPeer : FrameworkElementAutomationPeer, global::System.Runtime.InteropServices.ICustomQueryInterface, IWinRTObject, IEquatable<WebView2AutomationPeer>
    {
        private IntPtr ThisPtr => _inner == null ? (((IWinRTObject)this).NativeObject).ThisPtr : _inner.ThisPtr;

        private readonly IObjectReference _inner = null;




        private volatile IObjectReference ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IWebView2AutomationPeer;
        private IObjectReference Make___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IWebView2AutomationPeer()
        {
            global::System.Threading.Interlocked.CompareExchange(ref ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IWebView2AutomationPeer, ((IWinRTObject)this).NativeObject.As<IUnknownVftbl>(global::ABI.Microsoft.UI.Xaml.Automation.Peers.IWebView2AutomationPeerMethods.IID), null);
            return ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IWebView2AutomationPeer;
        }
        private IObjectReference _objRef_global__Microsoft_UI_Xaml_Automation_Peers_IWebView2AutomationPeer => ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IWebView2AutomationPeer ?? Make___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IWebView2AutomationPeer();



        private static class _IWebView2AutomationPeerFactoryMethods
        {
            public static unsafe IntPtr CreateInstance(IObjectReference _obj, global::Microsoft.UI.Xaml.Controls.WebView2 owner, object baseInterface, out IntPtr innerInterface)
            {
                var ThisPtr = _obj.ThisPtr;

                ObjectReferenceValue __owner = default;
                ObjectReferenceValue __baseInterface = default;
                IntPtr __innerInterface = default;
                IntPtr __retval = default;
                try
                {
                    __owner = global::ABI.Microsoft.UI.Xaml.Controls.WebView2.CreateMarshaler2(owner);
                    __baseInterface = MarshalInspectable<object>.CreateMarshaler2(baseInterface);
                    global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, IntPtr, IntPtr*, IntPtr*, int>**)ThisPtr)[6](ThisPtr, MarshalInspectable<object>.GetAbi(__owner), MarshalInspectable<object>.GetAbi(__baseInterface), &__innerInterface, &__retval));
                    global::System.GC.KeepAlive(_obj);
                    innerInterface = __innerInterface;
                    return __retval;
                }
                finally
                {
                    MarshalInspectable<object>.DisposeMarshaler(__owner);
                    MarshalInspectable<object>.DisposeMarshaler(__baseInterface);
                }
            }
        }

        private static volatile IObjectReference ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IWebView2AutomationPeerFactory;
        private static IObjectReference _objRef_global__Microsoft_UI_Xaml_Automation_Peers_IWebView2AutomationPeerFactory
        {
            get
            { 
                var factory = ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IWebView2AutomationPeerFactory;
                if (factory != null && factory.IsInCurrentContext)
                {
                    return factory;
                }
                else
                {
                    return ___objRef_global__Microsoft_UI_Xaml_Automation_Peers_IWebView2AutomationPeerFactory = ActivationFactory.Get("Microsoft.UI.Xaml.Automation.Peers.WebView2AutomationPeer", global::ABI.Microsoft.UI.Xaml.Automation.Peers.IWebView2AutomationPeerFactoryMethods.IID);
                }
            }
        }

        public WebView2AutomationPeer(global::Microsoft.UI.Xaml.Controls.WebView2 owner):base(global::WinRT.DerivedComposed.Instance)
        {
            bool isAggregation = this.GetType() != typeof(WebView2AutomationPeer);
            object baseInspectable = isAggregation ? this : null;
            IntPtr composed = _IWebView2AutomationPeerFactoryMethods.CreateInstance(_objRef_global__Microsoft_UI_Xaml_Automation_Peers_IWebView2AutomationPeerFactory, owner, baseInspectable, out IntPtr inner);
            try
            {
                ComWrappersHelper.Init(isAggregation, this, composed, inner, global::ABI.Microsoft.UI.Xaml.Automation.Peers.IWebView2AutomationPeerMethods.IID, out _inner);

            }
            finally
            {
                Marshal.Release(inner);   
            }
        }

        public static new WebView2AutomationPeer FromAbi(IntPtr thisPtr)
        {
            if (thisPtr == IntPtr.Zero) return null;
            return MarshalInspectable<WebView2AutomationPeer>.FromAbi(thisPtr);
        }

        protected internal WebView2AutomationPeer(IObjectReference objRef)
            : base(global::WinRT.DerivedComposed.Instance)

        {
            _inner = objRef.As(global::ABI.Microsoft.UI.Xaml.Automation.Peers.IWebView2AutomationPeerMethods.IID);

        }


        public static bool operator ==(WebView2AutomationPeer x, WebView2AutomationPeer y) => (x?.ThisPtr ?? IntPtr.Zero) == (y?.ThisPtr ?? IntPtr.Zero);
        public static bool operator !=(WebView2AutomationPeer x, WebView2AutomationPeer y) => !(x == y);
        public bool Equals(WebView2AutomationPeer other) => this == other;
        public override bool Equals(object obj) => obj is WebView2AutomationPeer that && this == that;
        public override int GetHashCode() => ThisPtr.GetHashCode();


        protected WebView2AutomationPeer(global::WinRT.DerivedComposed _):base(_)
        {

        }
        bool IWinRTObject.HasUnwrappableNativeObject => this.GetType() == typeof(WebView2AutomationPeer);
        IObjectReference IWinRTObject.NativeObject => _inner;

        private struct InterfaceTag<I>{};


        protected override bool IsOverridableInterface(Guid iid) => base.IsOverridableInterface(iid);

        global::System.Runtime.InteropServices.CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(ref Guid iid, out IntPtr ppv)
        {
            ppv = IntPtr.Zero;
            if (IsOverridableInterface(iid) || global::WinRT.Interop.IID.IID_IInspectable == iid)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
            }

            if (((IWinRTObject)this).NativeObject.TryAs(iid, out ppv) >= 0)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.Handled;
            }

            return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
        }
    }
}

#pragma warning disable CA1416
namespace ABI.Microsoft.UI.Xaml.Automation.Peers
{
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    public struct AnimatedVisualPlayerAutomationPeer
    {

        public static IObjectReference CreateMarshaler(global::Microsoft.UI.Xaml.Automation.Peers.AnimatedVisualPlayerAutomationPeer obj) => obj is null ? null : MarshalInspectable<global::Microsoft.UI.Xaml.Automation.Peers.AnimatedVisualPlayerAutomationPeer>.CreateMarshaler<IUnknownVftbl>(obj, global::ABI.Microsoft.UI.Xaml.Automation.Peers.IAnimatedVisualPlayerAutomationPeerMethods.IID);
        public static ObjectReferenceValue CreateMarshaler2(global::Microsoft.UI.Xaml.Automation.Peers.AnimatedVisualPlayerAutomationPeer obj) => MarshalInspectable<object>.CreateMarshaler2(obj, global::ABI.Microsoft.UI.Xaml.Automation.Peers.IAnimatedVisualPlayerAutomationPeerMethods.IID);
        public static IntPtr GetAbi(IObjectReference value) => value is null ? IntPtr.Zero : MarshalInterfaceHelper<object>.GetAbi(value);
        public static global::Microsoft.UI.Xaml.Automation.Peers.AnimatedVisualPlayerAutomationPeer FromAbi(IntPtr thisPtr) => global::Microsoft.UI.Xaml.Automation.Peers.AnimatedVisualPlayerAutomationPeer.FromAbi(thisPtr);
        public static IntPtr FromManaged(global::Microsoft.UI.Xaml.Automation.Peers.AnimatedVisualPlayerAutomationPeer obj) => obj is null ? IntPtr.Zero : CreateMarshaler2(obj).Detach();
        public static unsafe MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.AnimatedVisualPlayerAutomationPeer>.MarshalerArray CreateMarshalerArray(global::Microsoft.UI.Xaml.Automation.Peers.AnimatedVisualPlayerAutomationPeer[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.AnimatedVisualPlayerAutomationPeer>.CreateMarshalerArray2(array, (o) => CreateMarshaler2(o));
        public static (int length, IntPtr data) GetAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.AnimatedVisualPlayerAutomationPeer>.GetAbiArray(box);
        public static unsafe global::Microsoft.UI.Xaml.Automation.Peers.AnimatedVisualPlayerAutomationPeer[] FromAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.AnimatedVisualPlayerAutomationPeer>.FromAbiArray(box, FromAbi);
        public static void CopyAbiArray(global::Microsoft.UI.Xaml.Automation.Peers.AnimatedVisualPlayerAutomationPeer[] array, object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.AnimatedVisualPlayerAutomationPeer>.CopyAbiArray(array, box, FromAbi);
        public static (int length, IntPtr data) FromManagedArray(global::Microsoft.UI.Xaml.Automation.Peers.AnimatedVisualPlayerAutomationPeer[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.AnimatedVisualPlayerAutomationPeer>.FromManagedArray(array, (o) => FromManaged(o));
        public static void DisposeMarshaler(IObjectReference value) => MarshalInspectable<object>.DisposeMarshaler(value);
        public static void DisposeMarshalerArray(MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.AnimatedVisualPlayerAutomationPeer>.MarshalerArray array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.AnimatedVisualPlayerAutomationPeer>.DisposeMarshalerArray(array);
        public static void DisposeAbi(IntPtr abi) => MarshalInspectable<object>.DisposeAbi(abi);
        public static unsafe void DisposeAbiArray(object box) => MarshalInspectable<object>.DisposeAbiArray(box);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    internal sealed class AnimatedVisualPlayerAutomationPeerRcwFactoryAttribute : global::WinRT.WinRTImplementationTypeRcwFactoryAttribute
    {
        public override object CreateInstance(global::WinRT.IInspectable inspectable)
            => new global::Microsoft.UI.Xaml.Automation.Peers.AnimatedVisualPlayerAutomationPeer(inspectable.ObjRef);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    public struct AppBarAutomationPeer
    {

        public static IObjectReference CreateMarshaler(global::Microsoft.UI.Xaml.Automation.Peers.AppBarAutomationPeer obj) => obj is null ? null : MarshalInspectable<global::Microsoft.UI.Xaml.Automation.Peers.AppBarAutomationPeer>.CreateMarshaler<IUnknownVftbl>(obj, global::ABI.Microsoft.UI.Xaml.Automation.Peers.IAppBarAutomationPeerMethods.IID);
        public static ObjectReferenceValue CreateMarshaler2(global::Microsoft.UI.Xaml.Automation.Peers.AppBarAutomationPeer obj) => MarshalInspectable<object>.CreateMarshaler2(obj, global::ABI.Microsoft.UI.Xaml.Automation.Peers.IAppBarAutomationPeerMethods.IID);
        public static IntPtr GetAbi(IObjectReference value) => value is null ? IntPtr.Zero : MarshalInterfaceHelper<object>.GetAbi(value);
        public static global::Microsoft.UI.Xaml.Automation.Peers.AppBarAutomationPeer FromAbi(IntPtr thisPtr) => global::Microsoft.UI.Xaml.Automation.Peers.AppBarAutomationPeer.FromAbi(thisPtr);
        public static IntPtr FromManaged(global::Microsoft.UI.Xaml.Automation.Peers.AppBarAutomationPeer obj) => obj is null ? IntPtr.Zero : CreateMarshaler2(obj).Detach();
        public static unsafe MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.AppBarAutomationPeer>.MarshalerArray CreateMarshalerArray(global::Microsoft.UI.Xaml.Automation.Peers.AppBarAutomationPeer[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.AppBarAutomationPeer>.CreateMarshalerArray2(array, (o) => CreateMarshaler2(o));
        public static (int length, IntPtr data) GetAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.AppBarAutomationPeer>.GetAbiArray(box);
        public static unsafe global::Microsoft.UI.Xaml.Automation.Peers.AppBarAutomationPeer[] FromAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.AppBarAutomationPeer>.FromAbiArray(box, FromAbi);
        public static void CopyAbiArray(global::Microsoft.UI.Xaml.Automation.Peers.AppBarAutomationPeer[] array, object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.AppBarAutomationPeer>.CopyAbiArray(array, box, FromAbi);
        public static (int length, IntPtr data) FromManagedArray(global::Microsoft.UI.Xaml.Automation.Peers.AppBarAutomationPeer[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.AppBarAutomationPeer>.FromManagedArray(array, (o) => FromManaged(o));
        public static void DisposeMarshaler(IObjectReference value) => MarshalInspectable<object>.DisposeMarshaler(value);
        public static void DisposeMarshalerArray(MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.AppBarAutomationPeer>.MarshalerArray array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.AppBarAutomationPeer>.DisposeMarshalerArray(array);
        public static void DisposeAbi(IntPtr abi) => MarshalInspectable<object>.DisposeAbi(abi);
        public static unsafe void DisposeAbiArray(object box) => MarshalInspectable<object>.DisposeAbiArray(box);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    internal sealed class AppBarAutomationPeerRcwFactoryAttribute : global::WinRT.WinRTImplementationTypeRcwFactoryAttribute
    {
        public override object CreateInstance(global::WinRT.IInspectable inspectable)
            => new global::Microsoft.UI.Xaml.Automation.Peers.AppBarAutomationPeer(inspectable.ObjRef);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    public struct AppBarButtonAutomationPeer
    {

        public static IObjectReference CreateMarshaler(global::Microsoft.UI.Xaml.Automation.Peers.AppBarButtonAutomationPeer obj) => obj is null ? null : MarshalInspectable<global::Microsoft.UI.Xaml.Automation.Peers.AppBarButtonAutomationPeer>.CreateMarshaler<IUnknownVftbl>(obj, global::ABI.Microsoft.UI.Xaml.Automation.Peers.IAppBarButtonAutomationPeerMethods.IID);
        public static ObjectReferenceValue CreateMarshaler2(global::Microsoft.UI.Xaml.Automation.Peers.AppBarButtonAutomationPeer obj) => MarshalInspectable<object>.CreateMarshaler2(obj, global::ABI.Microsoft.UI.Xaml.Automation.Peers.IAppBarButtonAutomationPeerMethods.IID);
        public static IntPtr GetAbi(IObjectReference value) => value is null ? IntPtr.Zero : MarshalInterfaceHelper<object>.GetAbi(value);
        public static global::Microsoft.UI.Xaml.Automation.Peers.AppBarButtonAutomationPeer FromAbi(IntPtr thisPtr) => global::Microsoft.UI.Xaml.Automation.Peers.AppBarButtonAutomationPeer.FromAbi(thisPtr);
        public static IntPtr FromManaged(global::Microsoft.UI.Xaml.Automation.Peers.AppBarButtonAutomationPeer obj) => obj is null ? IntPtr.Zero : CreateMarshaler2(obj).Detach();
        public static unsafe MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.AppBarButtonAutomationPeer>.MarshalerArray CreateMarshalerArray(global::Microsoft.UI.Xaml.Automation.Peers.AppBarButtonAutomationPeer[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.AppBarButtonAutomationPeer>.CreateMarshalerArray2(array, (o) => CreateMarshaler2(o));
        public static (int length, IntPtr data) GetAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.AppBarButtonAutomationPeer>.GetAbiArray(box);
        public static unsafe global::Microsoft.UI.Xaml.Automation.Peers.AppBarButtonAutomationPeer[] FromAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.AppBarButtonAutomationPeer>.FromAbiArray(box, FromAbi);
        public static void CopyAbiArray(global::Microsoft.UI.Xaml.Automation.Peers.AppBarButtonAutomationPeer[] array, object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.AppBarButtonAutomationPeer>.CopyAbiArray(array, box, FromAbi);
        public static (int length, IntPtr data) FromManagedArray(global::Microsoft.UI.Xaml.Automation.Peers.AppBarButtonAutomationPeer[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.AppBarButtonAutomationPeer>.FromManagedArray(array, (o) => FromManaged(o));
        public static void DisposeMarshaler(IObjectReference value) => MarshalInspectable<object>.DisposeMarshaler(value);
        public static void DisposeMarshalerArray(MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.AppBarButtonAutomationPeer>.MarshalerArray array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.AppBarButtonAutomationPeer>.DisposeMarshalerArray(array);
        public static void DisposeAbi(IntPtr abi) => MarshalInspectable<object>.DisposeAbi(abi);
        public static unsafe void DisposeAbiArray(object box) => MarshalInspectable<object>.DisposeAbiArray(box);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    internal sealed class AppBarButtonAutomationPeerRcwFactoryAttribute : global::WinRT.WinRTImplementationTypeRcwFactoryAttribute
    {
        public override object CreateInstance(global::WinRT.IInspectable inspectable)
            => new global::Microsoft.UI.Xaml.Automation.Peers.AppBarButtonAutomationPeer(inspectable.ObjRef);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    public struct AppBarToggleButtonAutomationPeer
    {

        public static IObjectReference CreateMarshaler(global::Microsoft.UI.Xaml.Automation.Peers.AppBarToggleButtonAutomationPeer obj) => obj is null ? null : MarshalInspectable<global::Microsoft.UI.Xaml.Automation.Peers.AppBarToggleButtonAutomationPeer>.CreateMarshaler<IUnknownVftbl>(obj, global::ABI.Microsoft.UI.Xaml.Automation.Peers.IAppBarToggleButtonAutomationPeerMethods.IID);
        public static ObjectReferenceValue CreateMarshaler2(global::Microsoft.UI.Xaml.Automation.Peers.AppBarToggleButtonAutomationPeer obj) => MarshalInspectable<object>.CreateMarshaler2(obj, global::ABI.Microsoft.UI.Xaml.Automation.Peers.IAppBarToggleButtonAutomationPeerMethods.IID);
        public static IntPtr GetAbi(IObjectReference value) => value is null ? IntPtr.Zero : MarshalInterfaceHelper<object>.GetAbi(value);
        public static global::Microsoft.UI.Xaml.Automation.Peers.AppBarToggleButtonAutomationPeer FromAbi(IntPtr thisPtr) => global::Microsoft.UI.Xaml.Automation.Peers.AppBarToggleButtonAutomationPeer.FromAbi(thisPtr);
        public static IntPtr FromManaged(global::Microsoft.UI.Xaml.Automation.Peers.AppBarToggleButtonAutomationPeer obj) => obj is null ? IntPtr.Zero : CreateMarshaler2(obj).Detach();
        public static unsafe MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.AppBarToggleButtonAutomationPeer>.MarshalerArray CreateMarshalerArray(global::Microsoft.UI.Xaml.Automation.Peers.AppBarToggleButtonAutomationPeer[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.AppBarToggleButtonAutomationPeer>.CreateMarshalerArray2(array, (o) => CreateMarshaler2(o));
        public static (int length, IntPtr data) GetAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.AppBarToggleButtonAutomationPeer>.GetAbiArray(box);
        public static unsafe global::Microsoft.UI.Xaml.Automation.Peers.AppBarToggleButtonAutomationPeer[] FromAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.AppBarToggleButtonAutomationPeer>.FromAbiArray(box, FromAbi);
        public static void CopyAbiArray(global::Microsoft.UI.Xaml.Automation.Peers.AppBarToggleButtonAutomationPeer[] array, object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.AppBarToggleButtonAutomationPeer>.CopyAbiArray(array, box, FromAbi);
        public static (int length, IntPtr data) FromManagedArray(global::Microsoft.UI.Xaml.Automation.Peers.AppBarToggleButtonAutomationPeer[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.AppBarToggleButtonAutomationPeer>.FromManagedArray(array, (o) => FromManaged(o));
        public static void DisposeMarshaler(IObjectReference value) => MarshalInspectable<object>.DisposeMarshaler(value);
        public static void DisposeMarshalerArray(MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.AppBarToggleButtonAutomationPeer>.MarshalerArray array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.AppBarToggleButtonAutomationPeer>.DisposeMarshalerArray(array);
        public static void DisposeAbi(IntPtr abi) => MarshalInspectable<object>.DisposeAbi(abi);
        public static unsafe void DisposeAbiArray(object box) => MarshalInspectable<object>.DisposeAbiArray(box);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    internal sealed class AppBarToggleButtonAutomationPeerRcwFactoryAttribute : global::WinRT.WinRTImplementationTypeRcwFactoryAttribute
    {
        public override object CreateInstance(global::WinRT.IInspectable inspectable)
            => new global::Microsoft.UI.Xaml.Automation.Peers.AppBarToggleButtonAutomationPeer(inspectable.ObjRef);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    public struct AutoSuggestBoxAutomationPeer
    {

        public static IObjectReference CreateMarshaler(global::Microsoft.UI.Xaml.Automation.Peers.AutoSuggestBoxAutomationPeer obj) => obj is null ? null : MarshalInspectable<global::Microsoft.UI.Xaml.Automation.Peers.AutoSuggestBoxAutomationPeer>.CreateMarshaler<IUnknownVftbl>(obj, global::ABI.Microsoft.UI.Xaml.Automation.Peers.IAutoSuggestBoxAutomationPeerMethods.IID);
        public static ObjectReferenceValue CreateMarshaler2(global::Microsoft.UI.Xaml.Automation.Peers.AutoSuggestBoxAutomationPeer obj) => MarshalInspectable<object>.CreateMarshaler2(obj, global::ABI.Microsoft.UI.Xaml.Automation.Peers.IAutoSuggestBoxAutomationPeerMethods.IID);
        public static IntPtr GetAbi(IObjectReference value) => value is null ? IntPtr.Zero : MarshalInterfaceHelper<object>.GetAbi(value);
        public static global::Microsoft.UI.Xaml.Automation.Peers.AutoSuggestBoxAutomationPeer FromAbi(IntPtr thisPtr) => global::Microsoft.UI.Xaml.Automation.Peers.AutoSuggestBoxAutomationPeer.FromAbi(thisPtr);
        public static IntPtr FromManaged(global::Microsoft.UI.Xaml.Automation.Peers.AutoSuggestBoxAutomationPeer obj) => obj is null ? IntPtr.Zero : CreateMarshaler2(obj).Detach();
        public static unsafe MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.AutoSuggestBoxAutomationPeer>.MarshalerArray CreateMarshalerArray(global::Microsoft.UI.Xaml.Automation.Peers.AutoSuggestBoxAutomationPeer[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.AutoSuggestBoxAutomationPeer>.CreateMarshalerArray2(array, (o) => CreateMarshaler2(o));
        public static (int length, IntPtr data) GetAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.AutoSuggestBoxAutomationPeer>.GetAbiArray(box);
        public static unsafe global::Microsoft.UI.Xaml.Automation.Peers.AutoSuggestBoxAutomationPeer[] FromAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.AutoSuggestBoxAutomationPeer>.FromAbiArray(box, FromAbi);
        public static void CopyAbiArray(global::Microsoft.UI.Xaml.Automation.Peers.AutoSuggestBoxAutomationPeer[] array, object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.AutoSuggestBoxAutomationPeer>.CopyAbiArray(array, box, FromAbi);
        public static (int length, IntPtr data) FromManagedArray(global::Microsoft.UI.Xaml.Automation.Peers.AutoSuggestBoxAutomationPeer[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.AutoSuggestBoxAutomationPeer>.FromManagedArray(array, (o) => FromManaged(o));
        public static void DisposeMarshaler(IObjectReference value) => MarshalInspectable<object>.DisposeMarshaler(value);
        public static void DisposeMarshalerArray(MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.AutoSuggestBoxAutomationPeer>.MarshalerArray array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.AutoSuggestBoxAutomationPeer>.DisposeMarshalerArray(array);
        public static void DisposeAbi(IntPtr abi) => MarshalInspectable<object>.DisposeAbi(abi);
        public static unsafe void DisposeAbiArray(object box) => MarshalInspectable<object>.DisposeAbiArray(box);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    internal sealed class AutoSuggestBoxAutomationPeerRcwFactoryAttribute : global::WinRT.WinRTImplementationTypeRcwFactoryAttribute
    {
        public override object CreateInstance(global::WinRT.IInspectable inspectable)
            => new global::Microsoft.UI.Xaml.Automation.Peers.AutoSuggestBoxAutomationPeer(inspectable.ObjRef);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    public struct AutomationPeer
    {

        public static IObjectReference CreateMarshaler(global::Microsoft.UI.Xaml.Automation.Peers.AutomationPeer obj) => obj is null ? null : MarshalInspectable<global::Microsoft.UI.Xaml.Automation.Peers.AutomationPeer>.CreateMarshaler<IUnknownVftbl>(obj, global::ABI.Microsoft.UI.Xaml.Automation.Peers.IAutomationPeerMethods.IID);
        public static ObjectReferenceValue CreateMarshaler2(global::Microsoft.UI.Xaml.Automation.Peers.AutomationPeer obj) => MarshalInspectable<object>.CreateMarshaler2(obj, global::ABI.Microsoft.UI.Xaml.Automation.Peers.IAutomationPeerMethods.IID);
        public static IntPtr GetAbi(IObjectReference value) => value is null ? IntPtr.Zero : MarshalInterfaceHelper<object>.GetAbi(value);
        public static global::Microsoft.UI.Xaml.Automation.Peers.AutomationPeer FromAbi(IntPtr thisPtr) => global::Microsoft.UI.Xaml.Automation.Peers.AutomationPeer.FromAbi(thisPtr);
        public static IntPtr FromManaged(global::Microsoft.UI.Xaml.Automation.Peers.AutomationPeer obj) => obj is null ? IntPtr.Zero : CreateMarshaler2(obj).Detach();
        public static unsafe MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.AutomationPeer>.MarshalerArray CreateMarshalerArray(global::Microsoft.UI.Xaml.Automation.Peers.AutomationPeer[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.AutomationPeer>.CreateMarshalerArray2(array, (o) => CreateMarshaler2(o));
        public static (int length, IntPtr data) GetAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.AutomationPeer>.GetAbiArray(box);
        public static unsafe global::Microsoft.UI.Xaml.Automation.Peers.AutomationPeer[] FromAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.AutomationPeer>.FromAbiArray(box, FromAbi);
        public static void CopyAbiArray(global::Microsoft.UI.Xaml.Automation.Peers.AutomationPeer[] array, object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.AutomationPeer>.CopyAbiArray(array, box, FromAbi);
        public static (int length, IntPtr data) FromManagedArray(global::Microsoft.UI.Xaml.Automation.Peers.AutomationPeer[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.AutomationPeer>.FromManagedArray(array, (o) => FromManaged(o));
        public static void DisposeMarshaler(IObjectReference value) => MarshalInspectable<object>.DisposeMarshaler(value);
        public static void DisposeMarshalerArray(MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.AutomationPeer>.MarshalerArray array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.AutomationPeer>.DisposeMarshalerArray(array);
        public static void DisposeAbi(IntPtr abi) => MarshalInspectable<object>.DisposeAbi(abi);
        public static unsafe void DisposeAbiArray(object box) => MarshalInspectable<object>.DisposeAbiArray(box);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    internal sealed class AutomationPeerRcwFactoryAttribute : global::WinRT.WinRTImplementationTypeRcwFactoryAttribute
    {
        public override object CreateInstance(global::WinRT.IInspectable inspectable)
            => new global::Microsoft.UI.Xaml.Automation.Peers.AutomationPeer(inspectable.ObjRef);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    public struct AutomationPeerAnnotation
    {

        public static IObjectReference CreateMarshaler(global::Microsoft.UI.Xaml.Automation.Peers.AutomationPeerAnnotation obj) => obj is null ? null : MarshalInspectable<global::Microsoft.UI.Xaml.Automation.Peers.AutomationPeerAnnotation>.CreateMarshaler<IUnknownVftbl>(obj, global::ABI.Microsoft.UI.Xaml.Automation.Peers.IAutomationPeerAnnotationMethods.IID);
        public static ObjectReferenceValue CreateMarshaler2(global::Microsoft.UI.Xaml.Automation.Peers.AutomationPeerAnnotation obj) => MarshalInspectable<object>.CreateMarshaler2(obj, global::ABI.Microsoft.UI.Xaml.Automation.Peers.IAutomationPeerAnnotationMethods.IID);
        public static IntPtr GetAbi(IObjectReference value) => value is null ? IntPtr.Zero : MarshalInterfaceHelper<object>.GetAbi(value);
        public static global::Microsoft.UI.Xaml.Automation.Peers.AutomationPeerAnnotation FromAbi(IntPtr thisPtr) => global::Microsoft.UI.Xaml.Automation.Peers.AutomationPeerAnnotation.FromAbi(thisPtr);
        public static IntPtr FromManaged(global::Microsoft.UI.Xaml.Automation.Peers.AutomationPeerAnnotation obj) => obj is null ? IntPtr.Zero : CreateMarshaler2(obj).Detach();
        public static unsafe MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.AutomationPeerAnnotation>.MarshalerArray CreateMarshalerArray(global::Microsoft.UI.Xaml.Automation.Peers.AutomationPeerAnnotation[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.AutomationPeerAnnotation>.CreateMarshalerArray2(array, (o) => CreateMarshaler2(o));
        public static (int length, IntPtr data) GetAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.AutomationPeerAnnotation>.GetAbiArray(box);
        public static unsafe global::Microsoft.UI.Xaml.Automation.Peers.AutomationPeerAnnotation[] FromAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.AutomationPeerAnnotation>.FromAbiArray(box, FromAbi);
        public static void CopyAbiArray(global::Microsoft.UI.Xaml.Automation.Peers.AutomationPeerAnnotation[] array, object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.AutomationPeerAnnotation>.CopyAbiArray(array, box, FromAbi);
        public static (int length, IntPtr data) FromManagedArray(global::Microsoft.UI.Xaml.Automation.Peers.AutomationPeerAnnotation[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.AutomationPeerAnnotation>.FromManagedArray(array, (o) => FromManaged(o));
        public static void DisposeMarshaler(IObjectReference value) => MarshalInspectable<object>.DisposeMarshaler(value);
        public static void DisposeMarshalerArray(MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.AutomationPeerAnnotation>.MarshalerArray array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.AutomationPeerAnnotation>.DisposeMarshalerArray(array);
        public static void DisposeAbi(IntPtr abi) => MarshalInspectable<object>.DisposeAbi(abi);
        public static unsafe void DisposeAbiArray(object box) => MarshalInspectable<object>.DisposeAbiArray(box);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    internal sealed class AutomationPeerAnnotationRcwFactoryAttribute : global::WinRT.WinRTImplementationTypeRcwFactoryAttribute
    {
        public override object CreateInstance(global::WinRT.IInspectable inspectable)
            => new global::Microsoft.UI.Xaml.Automation.Peers.AutomationPeerAnnotation(inspectable.ObjRef);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    public struct BreadcrumbBarItemAutomationPeer
    {

        public static IObjectReference CreateMarshaler(global::Microsoft.UI.Xaml.Automation.Peers.BreadcrumbBarItemAutomationPeer obj) => obj is null ? null : MarshalInspectable<global::Microsoft.UI.Xaml.Automation.Peers.BreadcrumbBarItemAutomationPeer>.CreateMarshaler<IUnknownVftbl>(obj, global::ABI.Microsoft.UI.Xaml.Automation.Peers.IBreadcrumbBarItemAutomationPeerMethods.IID);
        public static ObjectReferenceValue CreateMarshaler2(global::Microsoft.UI.Xaml.Automation.Peers.BreadcrumbBarItemAutomationPeer obj) => MarshalInspectable<object>.CreateMarshaler2(obj, global::ABI.Microsoft.UI.Xaml.Automation.Peers.IBreadcrumbBarItemAutomationPeerMethods.IID);
        public static IntPtr GetAbi(IObjectReference value) => value is null ? IntPtr.Zero : MarshalInterfaceHelper<object>.GetAbi(value);
        public static global::Microsoft.UI.Xaml.Automation.Peers.BreadcrumbBarItemAutomationPeer FromAbi(IntPtr thisPtr) => global::Microsoft.UI.Xaml.Automation.Peers.BreadcrumbBarItemAutomationPeer.FromAbi(thisPtr);
        public static IntPtr FromManaged(global::Microsoft.UI.Xaml.Automation.Peers.BreadcrumbBarItemAutomationPeer obj) => obj is null ? IntPtr.Zero : CreateMarshaler2(obj).Detach();
        public static unsafe MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.BreadcrumbBarItemAutomationPeer>.MarshalerArray CreateMarshalerArray(global::Microsoft.UI.Xaml.Automation.Peers.BreadcrumbBarItemAutomationPeer[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.BreadcrumbBarItemAutomationPeer>.CreateMarshalerArray2(array, (o) => CreateMarshaler2(o));
        public static (int length, IntPtr data) GetAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.BreadcrumbBarItemAutomationPeer>.GetAbiArray(box);
        public static unsafe global::Microsoft.UI.Xaml.Automation.Peers.BreadcrumbBarItemAutomationPeer[] FromAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.BreadcrumbBarItemAutomationPeer>.FromAbiArray(box, FromAbi);
        public static void CopyAbiArray(global::Microsoft.UI.Xaml.Automation.Peers.BreadcrumbBarItemAutomationPeer[] array, object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.BreadcrumbBarItemAutomationPeer>.CopyAbiArray(array, box, FromAbi);
        public static (int length, IntPtr data) FromManagedArray(global::Microsoft.UI.Xaml.Automation.Peers.BreadcrumbBarItemAutomationPeer[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.BreadcrumbBarItemAutomationPeer>.FromManagedArray(array, (o) => FromManaged(o));
        public static void DisposeMarshaler(IObjectReference value) => MarshalInspectable<object>.DisposeMarshaler(value);
        public static void DisposeMarshalerArray(MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.BreadcrumbBarItemAutomationPeer>.MarshalerArray array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.BreadcrumbBarItemAutomationPeer>.DisposeMarshalerArray(array);
        public static void DisposeAbi(IntPtr abi) => MarshalInspectable<object>.DisposeAbi(abi);
        public static unsafe void DisposeAbiArray(object box) => MarshalInspectable<object>.DisposeAbiArray(box);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    internal sealed class BreadcrumbBarItemAutomationPeerRcwFactoryAttribute : global::WinRT.WinRTImplementationTypeRcwFactoryAttribute
    {
        public override object CreateInstance(global::WinRT.IInspectable inspectable)
            => new global::Microsoft.UI.Xaml.Automation.Peers.BreadcrumbBarItemAutomationPeer(inspectable.ObjRef);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    public struct ButtonAutomationPeer
    {

        public static IObjectReference CreateMarshaler(global::Microsoft.UI.Xaml.Automation.Peers.ButtonAutomationPeer obj) => obj is null ? null : MarshalInspectable<global::Microsoft.UI.Xaml.Automation.Peers.ButtonAutomationPeer>.CreateMarshaler<IUnknownVftbl>(obj, global::ABI.Microsoft.UI.Xaml.Automation.Peers.IButtonAutomationPeerMethods.IID);
        public static ObjectReferenceValue CreateMarshaler2(global::Microsoft.UI.Xaml.Automation.Peers.ButtonAutomationPeer obj) => MarshalInspectable<object>.CreateMarshaler2(obj, global::ABI.Microsoft.UI.Xaml.Automation.Peers.IButtonAutomationPeerMethods.IID);
        public static IntPtr GetAbi(IObjectReference value) => value is null ? IntPtr.Zero : MarshalInterfaceHelper<object>.GetAbi(value);
        public static global::Microsoft.UI.Xaml.Automation.Peers.ButtonAutomationPeer FromAbi(IntPtr thisPtr) => global::Microsoft.UI.Xaml.Automation.Peers.ButtonAutomationPeer.FromAbi(thisPtr);
        public static IntPtr FromManaged(global::Microsoft.UI.Xaml.Automation.Peers.ButtonAutomationPeer obj) => obj is null ? IntPtr.Zero : CreateMarshaler2(obj).Detach();
        public static unsafe MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.ButtonAutomationPeer>.MarshalerArray CreateMarshalerArray(global::Microsoft.UI.Xaml.Automation.Peers.ButtonAutomationPeer[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.ButtonAutomationPeer>.CreateMarshalerArray2(array, (o) => CreateMarshaler2(o));
        public static (int length, IntPtr data) GetAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.ButtonAutomationPeer>.GetAbiArray(box);
        public static unsafe global::Microsoft.UI.Xaml.Automation.Peers.ButtonAutomationPeer[] FromAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.ButtonAutomationPeer>.FromAbiArray(box, FromAbi);
        public static void CopyAbiArray(global::Microsoft.UI.Xaml.Automation.Peers.ButtonAutomationPeer[] array, object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.ButtonAutomationPeer>.CopyAbiArray(array, box, FromAbi);
        public static (int length, IntPtr data) FromManagedArray(global::Microsoft.UI.Xaml.Automation.Peers.ButtonAutomationPeer[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.ButtonAutomationPeer>.FromManagedArray(array, (o) => FromManaged(o));
        public static void DisposeMarshaler(IObjectReference value) => MarshalInspectable<object>.DisposeMarshaler(value);
        public static void DisposeMarshalerArray(MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.ButtonAutomationPeer>.MarshalerArray array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.ButtonAutomationPeer>.DisposeMarshalerArray(array);
        public static void DisposeAbi(IntPtr abi) => MarshalInspectable<object>.DisposeAbi(abi);
        public static unsafe void DisposeAbiArray(object box) => MarshalInspectable<object>.DisposeAbiArray(box);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    internal sealed class ButtonAutomationPeerRcwFactoryAttribute : global::WinRT.WinRTImplementationTypeRcwFactoryAttribute
    {
        public override object CreateInstance(global::WinRT.IInspectable inspectable)
            => new global::Microsoft.UI.Xaml.Automation.Peers.ButtonAutomationPeer(inspectable.ObjRef);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    public struct ButtonBaseAutomationPeer
    {

        public static IObjectReference CreateMarshaler(global::Microsoft.UI.Xaml.Automation.Peers.ButtonBaseAutomationPeer obj) => obj is null ? null : MarshalInspectable<global::Microsoft.UI.Xaml.Automation.Peers.ButtonBaseAutomationPeer>.CreateMarshaler<IUnknownVftbl>(obj, global::ABI.Microsoft.UI.Xaml.Automation.Peers.IButtonBaseAutomationPeerMethods.IID);
        public static ObjectReferenceValue CreateMarshaler2(global::Microsoft.UI.Xaml.Automation.Peers.ButtonBaseAutomationPeer obj) => MarshalInspectable<object>.CreateMarshaler2(obj, global::ABI.Microsoft.UI.Xaml.Automation.Peers.IButtonBaseAutomationPeerMethods.IID);
        public static IntPtr GetAbi(IObjectReference value) => value is null ? IntPtr.Zero : MarshalInterfaceHelper<object>.GetAbi(value);
        public static global::Microsoft.UI.Xaml.Automation.Peers.ButtonBaseAutomationPeer FromAbi(IntPtr thisPtr) => global::Microsoft.UI.Xaml.Automation.Peers.ButtonBaseAutomationPeer.FromAbi(thisPtr);
        public static IntPtr FromManaged(global::Microsoft.UI.Xaml.Automation.Peers.ButtonBaseAutomationPeer obj) => obj is null ? IntPtr.Zero : CreateMarshaler2(obj).Detach();
        public static unsafe MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.ButtonBaseAutomationPeer>.MarshalerArray CreateMarshalerArray(global::Microsoft.UI.Xaml.Automation.Peers.ButtonBaseAutomationPeer[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.ButtonBaseAutomationPeer>.CreateMarshalerArray2(array, (o) => CreateMarshaler2(o));
        public static (int length, IntPtr data) GetAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.ButtonBaseAutomationPeer>.GetAbiArray(box);
        public static unsafe global::Microsoft.UI.Xaml.Automation.Peers.ButtonBaseAutomationPeer[] FromAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.ButtonBaseAutomationPeer>.FromAbiArray(box, FromAbi);
        public static void CopyAbiArray(global::Microsoft.UI.Xaml.Automation.Peers.ButtonBaseAutomationPeer[] array, object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.ButtonBaseAutomationPeer>.CopyAbiArray(array, box, FromAbi);
        public static (int length, IntPtr data) FromManagedArray(global::Microsoft.UI.Xaml.Automation.Peers.ButtonBaseAutomationPeer[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.ButtonBaseAutomationPeer>.FromManagedArray(array, (o) => FromManaged(o));
        public static void DisposeMarshaler(IObjectReference value) => MarshalInspectable<object>.DisposeMarshaler(value);
        public static void DisposeMarshalerArray(MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.ButtonBaseAutomationPeer>.MarshalerArray array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.ButtonBaseAutomationPeer>.DisposeMarshalerArray(array);
        public static void DisposeAbi(IntPtr abi) => MarshalInspectable<object>.DisposeAbi(abi);
        public static unsafe void DisposeAbiArray(object box) => MarshalInspectable<object>.DisposeAbiArray(box);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    internal sealed class ButtonBaseAutomationPeerRcwFactoryAttribute : global::WinRT.WinRTImplementationTypeRcwFactoryAttribute
    {
        public override object CreateInstance(global::WinRT.IInspectable inspectable)
            => new global::Microsoft.UI.Xaml.Automation.Peers.ButtonBaseAutomationPeer(inspectable.ObjRef);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    public struct CalendarDatePickerAutomationPeer
    {

        public static IObjectReference CreateMarshaler(global::Microsoft.UI.Xaml.Automation.Peers.CalendarDatePickerAutomationPeer obj) => obj is null ? null : MarshalInspectable<global::Microsoft.UI.Xaml.Automation.Peers.CalendarDatePickerAutomationPeer>.CreateMarshaler<IUnknownVftbl>(obj, global::ABI.Microsoft.UI.Xaml.Automation.Peers.ICalendarDatePickerAutomationPeerMethods.IID);
        public static ObjectReferenceValue CreateMarshaler2(global::Microsoft.UI.Xaml.Automation.Peers.CalendarDatePickerAutomationPeer obj) => MarshalInspectable<object>.CreateMarshaler2(obj, global::ABI.Microsoft.UI.Xaml.Automation.Peers.ICalendarDatePickerAutomationPeerMethods.IID);
        public static IntPtr GetAbi(IObjectReference value) => value is null ? IntPtr.Zero : MarshalInterfaceHelper<object>.GetAbi(value);
        public static global::Microsoft.UI.Xaml.Automation.Peers.CalendarDatePickerAutomationPeer FromAbi(IntPtr thisPtr) => global::Microsoft.UI.Xaml.Automation.Peers.CalendarDatePickerAutomationPeer.FromAbi(thisPtr);
        public static IntPtr FromManaged(global::Microsoft.UI.Xaml.Automation.Peers.CalendarDatePickerAutomationPeer obj) => obj is null ? IntPtr.Zero : CreateMarshaler2(obj).Detach();
        public static unsafe MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.CalendarDatePickerAutomationPeer>.MarshalerArray CreateMarshalerArray(global::Microsoft.UI.Xaml.Automation.Peers.CalendarDatePickerAutomationPeer[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.CalendarDatePickerAutomationPeer>.CreateMarshalerArray2(array, (o) => CreateMarshaler2(o));
        public static (int length, IntPtr data) GetAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.CalendarDatePickerAutomationPeer>.GetAbiArray(box);
        public static unsafe global::Microsoft.UI.Xaml.Automation.Peers.CalendarDatePickerAutomationPeer[] FromAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.CalendarDatePickerAutomationPeer>.FromAbiArray(box, FromAbi);
        public static void CopyAbiArray(global::Microsoft.UI.Xaml.Automation.Peers.CalendarDatePickerAutomationPeer[] array, object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.CalendarDatePickerAutomationPeer>.CopyAbiArray(array, box, FromAbi);
        public static (int length, IntPtr data) FromManagedArray(global::Microsoft.UI.Xaml.Automation.Peers.CalendarDatePickerAutomationPeer[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.CalendarDatePickerAutomationPeer>.FromManagedArray(array, (o) => FromManaged(o));
        public static void DisposeMarshaler(IObjectReference value) => MarshalInspectable<object>.DisposeMarshaler(value);
        public static void DisposeMarshalerArray(MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.CalendarDatePickerAutomationPeer>.MarshalerArray array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.CalendarDatePickerAutomationPeer>.DisposeMarshalerArray(array);
        public static void DisposeAbi(IntPtr abi) => MarshalInspectable<object>.DisposeAbi(abi);
        public static unsafe void DisposeAbiArray(object box) => MarshalInspectable<object>.DisposeAbiArray(box);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    internal sealed class CalendarDatePickerAutomationPeerRcwFactoryAttribute : global::WinRT.WinRTImplementationTypeRcwFactoryAttribute
    {
        public override object CreateInstance(global::WinRT.IInspectable inspectable)
            => new global::Microsoft.UI.Xaml.Automation.Peers.CalendarDatePickerAutomationPeer(inspectable.ObjRef);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    public struct CheckBoxAutomationPeer
    {

        public static IObjectReference CreateMarshaler(global::Microsoft.UI.Xaml.Automation.Peers.CheckBoxAutomationPeer obj) => obj is null ? null : MarshalInspectable<global::Microsoft.UI.Xaml.Automation.Peers.CheckBoxAutomationPeer>.CreateMarshaler<IUnknownVftbl>(obj, global::ABI.Microsoft.UI.Xaml.Automation.Peers.ICheckBoxAutomationPeerMethods.IID);
        public static ObjectReferenceValue CreateMarshaler2(global::Microsoft.UI.Xaml.Automation.Peers.CheckBoxAutomationPeer obj) => MarshalInspectable<object>.CreateMarshaler2(obj, global::ABI.Microsoft.UI.Xaml.Automation.Peers.ICheckBoxAutomationPeerMethods.IID);
        public static IntPtr GetAbi(IObjectReference value) => value is null ? IntPtr.Zero : MarshalInterfaceHelper<object>.GetAbi(value);
        public static global::Microsoft.UI.Xaml.Automation.Peers.CheckBoxAutomationPeer FromAbi(IntPtr thisPtr) => global::Microsoft.UI.Xaml.Automation.Peers.CheckBoxAutomationPeer.FromAbi(thisPtr);
        public static IntPtr FromManaged(global::Microsoft.UI.Xaml.Automation.Peers.CheckBoxAutomationPeer obj) => obj is null ? IntPtr.Zero : CreateMarshaler2(obj).Detach();
        public static unsafe MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.CheckBoxAutomationPeer>.MarshalerArray CreateMarshalerArray(global::Microsoft.UI.Xaml.Automation.Peers.CheckBoxAutomationPeer[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.CheckBoxAutomationPeer>.CreateMarshalerArray2(array, (o) => CreateMarshaler2(o));
        public static (int length, IntPtr data) GetAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.CheckBoxAutomationPeer>.GetAbiArray(box);
        public static unsafe global::Microsoft.UI.Xaml.Automation.Peers.CheckBoxAutomationPeer[] FromAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.CheckBoxAutomationPeer>.FromAbiArray(box, FromAbi);
        public static void CopyAbiArray(global::Microsoft.UI.Xaml.Automation.Peers.CheckBoxAutomationPeer[] array, object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.CheckBoxAutomationPeer>.CopyAbiArray(array, box, FromAbi);
        public static (int length, IntPtr data) FromManagedArray(global::Microsoft.UI.Xaml.Automation.Peers.CheckBoxAutomationPeer[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.CheckBoxAutomationPeer>.FromManagedArray(array, (o) => FromManaged(o));
        public static void DisposeMarshaler(IObjectReference value) => MarshalInspectable<object>.DisposeMarshaler(value);
        public static void DisposeMarshalerArray(MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.CheckBoxAutomationPeer>.MarshalerArray array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.CheckBoxAutomationPeer>.DisposeMarshalerArray(array);
        public static void DisposeAbi(IntPtr abi) => MarshalInspectable<object>.DisposeAbi(abi);
        public static unsafe void DisposeAbiArray(object box) => MarshalInspectable<object>.DisposeAbiArray(box);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    internal sealed class CheckBoxAutomationPeerRcwFactoryAttribute : global::WinRT.WinRTImplementationTypeRcwFactoryAttribute
    {
        public override object CreateInstance(global::WinRT.IInspectable inspectable)
            => new global::Microsoft.UI.Xaml.Automation.Peers.CheckBoxAutomationPeer(inspectable.ObjRef);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    public struct ColorPickerSliderAutomationPeer
    {

        public static IObjectReference CreateMarshaler(global::Microsoft.UI.Xaml.Automation.Peers.ColorPickerSliderAutomationPeer obj) => obj is null ? null : MarshalInspectable<global::Microsoft.UI.Xaml.Automation.Peers.ColorPickerSliderAutomationPeer>.CreateMarshaler<IUnknownVftbl>(obj, global::ABI.Microsoft.UI.Xaml.Automation.Peers.IColorPickerSliderAutomationPeerMethods.IID);
        public static ObjectReferenceValue CreateMarshaler2(global::Microsoft.UI.Xaml.Automation.Peers.ColorPickerSliderAutomationPeer obj) => MarshalInspectable<object>.CreateMarshaler2(obj, global::ABI.Microsoft.UI.Xaml.Automation.Peers.IColorPickerSliderAutomationPeerMethods.IID);
        public static IntPtr GetAbi(IObjectReference value) => value is null ? IntPtr.Zero : MarshalInterfaceHelper<object>.GetAbi(value);
        public static global::Microsoft.UI.Xaml.Automation.Peers.ColorPickerSliderAutomationPeer FromAbi(IntPtr thisPtr) => global::Microsoft.UI.Xaml.Automation.Peers.ColorPickerSliderAutomationPeer.FromAbi(thisPtr);
        public static IntPtr FromManaged(global::Microsoft.UI.Xaml.Automation.Peers.ColorPickerSliderAutomationPeer obj) => obj is null ? IntPtr.Zero : CreateMarshaler2(obj).Detach();
        public static unsafe MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.ColorPickerSliderAutomationPeer>.MarshalerArray CreateMarshalerArray(global::Microsoft.UI.Xaml.Automation.Peers.ColorPickerSliderAutomationPeer[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.ColorPickerSliderAutomationPeer>.CreateMarshalerArray2(array, (o) => CreateMarshaler2(o));
        public static (int length, IntPtr data) GetAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.ColorPickerSliderAutomationPeer>.GetAbiArray(box);
        public static unsafe global::Microsoft.UI.Xaml.Automation.Peers.ColorPickerSliderAutomationPeer[] FromAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.ColorPickerSliderAutomationPeer>.FromAbiArray(box, FromAbi);
        public static void CopyAbiArray(global::Microsoft.UI.Xaml.Automation.Peers.ColorPickerSliderAutomationPeer[] array, object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.ColorPickerSliderAutomationPeer>.CopyAbiArray(array, box, FromAbi);
        public static (int length, IntPtr data) FromManagedArray(global::Microsoft.UI.Xaml.Automation.Peers.ColorPickerSliderAutomationPeer[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.ColorPickerSliderAutomationPeer>.FromManagedArray(array, (o) => FromManaged(o));
        public static void DisposeMarshaler(IObjectReference value) => MarshalInspectable<object>.DisposeMarshaler(value);
        public static void DisposeMarshalerArray(MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.ColorPickerSliderAutomationPeer>.MarshalerArray array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.ColorPickerSliderAutomationPeer>.DisposeMarshalerArray(array);
        public static void DisposeAbi(IntPtr abi) => MarshalInspectable<object>.DisposeAbi(abi);
        public static unsafe void DisposeAbiArray(object box) => MarshalInspectable<object>.DisposeAbiArray(box);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    internal sealed class ColorPickerSliderAutomationPeerRcwFactoryAttribute : global::WinRT.WinRTImplementationTypeRcwFactoryAttribute
    {
        public override object CreateInstance(global::WinRT.IInspectable inspectable)
            => new global::Microsoft.UI.Xaml.Automation.Peers.ColorPickerSliderAutomationPeer(inspectable.ObjRef);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    public struct ColorSpectrumAutomationPeer
    {

        public static IObjectReference CreateMarshaler(global::Microsoft.UI.Xaml.Automation.Peers.ColorSpectrumAutomationPeer obj) => obj is null ? null : MarshalInspectable<global::Microsoft.UI.Xaml.Automation.Peers.ColorSpectrumAutomationPeer>.CreateMarshaler<IUnknownVftbl>(obj, global::ABI.Microsoft.UI.Xaml.Automation.Peers.IColorSpectrumAutomationPeerMethods.IID);
        public static ObjectReferenceValue CreateMarshaler2(global::Microsoft.UI.Xaml.Automation.Peers.ColorSpectrumAutomationPeer obj) => MarshalInspectable<object>.CreateMarshaler2(obj, global::ABI.Microsoft.UI.Xaml.Automation.Peers.IColorSpectrumAutomationPeerMethods.IID);
        public static IntPtr GetAbi(IObjectReference value) => value is null ? IntPtr.Zero : MarshalInterfaceHelper<object>.GetAbi(value);
        public static global::Microsoft.UI.Xaml.Automation.Peers.ColorSpectrumAutomationPeer FromAbi(IntPtr thisPtr) => global::Microsoft.UI.Xaml.Automation.Peers.ColorSpectrumAutomationPeer.FromAbi(thisPtr);
        public static IntPtr FromManaged(global::Microsoft.UI.Xaml.Automation.Peers.ColorSpectrumAutomationPeer obj) => obj is null ? IntPtr.Zero : CreateMarshaler2(obj).Detach();
        public static unsafe MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.ColorSpectrumAutomationPeer>.MarshalerArray CreateMarshalerArray(global::Microsoft.UI.Xaml.Automation.Peers.ColorSpectrumAutomationPeer[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.ColorSpectrumAutomationPeer>.CreateMarshalerArray2(array, (o) => CreateMarshaler2(o));
        public static (int length, IntPtr data) GetAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.ColorSpectrumAutomationPeer>.GetAbiArray(box);
        public static unsafe global::Microsoft.UI.Xaml.Automation.Peers.ColorSpectrumAutomationPeer[] FromAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.ColorSpectrumAutomationPeer>.FromAbiArray(box, FromAbi);
        public static void CopyAbiArray(global::Microsoft.UI.Xaml.Automation.Peers.ColorSpectrumAutomationPeer[] array, object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.ColorSpectrumAutomationPeer>.CopyAbiArray(array, box, FromAbi);
        public static (int length, IntPtr data) FromManagedArray(global::Microsoft.UI.Xaml.Automation.Peers.ColorSpectrumAutomationPeer[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.ColorSpectrumAutomationPeer>.FromManagedArray(array, (o) => FromManaged(o));
        public static void DisposeMarshaler(IObjectReference value) => MarshalInspectable<object>.DisposeMarshaler(value);
        public static void DisposeMarshalerArray(MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.ColorSpectrumAutomationPeer>.MarshalerArray array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.ColorSpectrumAutomationPeer>.DisposeMarshalerArray(array);
        public static void DisposeAbi(IntPtr abi) => MarshalInspectable<object>.DisposeAbi(abi);
        public static unsafe void DisposeAbiArray(object box) => MarshalInspectable<object>.DisposeAbiArray(box);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    internal sealed class ColorSpectrumAutomationPeerRcwFactoryAttribute : global::WinRT.WinRTImplementationTypeRcwFactoryAttribute
    {
        public override object CreateInstance(global::WinRT.IInspectable inspectable)
            => new global::Microsoft.UI.Xaml.Automation.Peers.ColorSpectrumAutomationPeer(inspectable.ObjRef);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    public struct ComboBoxAutomationPeer
    {

        public static IObjectReference CreateMarshaler(global::Microsoft.UI.Xaml.Automation.Peers.ComboBoxAutomationPeer obj) => obj is null ? null : MarshalInspectable<global::Microsoft.UI.Xaml.Automation.Peers.ComboBoxAutomationPeer>.CreateMarshaler<IUnknownVftbl>(obj, global::ABI.Microsoft.UI.Xaml.Automation.Peers.IComboBoxAutomationPeerMethods.IID);
        public static ObjectReferenceValue CreateMarshaler2(global::Microsoft.UI.Xaml.Automation.Peers.ComboBoxAutomationPeer obj) => MarshalInspectable<object>.CreateMarshaler2(obj, global::ABI.Microsoft.UI.Xaml.Automation.Peers.IComboBoxAutomationPeerMethods.IID);
        public static IntPtr GetAbi(IObjectReference value) => value is null ? IntPtr.Zero : MarshalInterfaceHelper<object>.GetAbi(value);
        public static global::Microsoft.UI.Xaml.Automation.Peers.ComboBoxAutomationPeer FromAbi(IntPtr thisPtr) => global::Microsoft.UI.Xaml.Automation.Peers.ComboBoxAutomationPeer.FromAbi(thisPtr);
        public static IntPtr FromManaged(global::Microsoft.UI.Xaml.Automation.Peers.ComboBoxAutomationPeer obj) => obj is null ? IntPtr.Zero : CreateMarshaler2(obj).Detach();
        public static unsafe MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.ComboBoxAutomationPeer>.MarshalerArray CreateMarshalerArray(global::Microsoft.UI.Xaml.Automation.Peers.ComboBoxAutomationPeer[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.ComboBoxAutomationPeer>.CreateMarshalerArray2(array, (o) => CreateMarshaler2(o));
        public static (int length, IntPtr data) GetAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.ComboBoxAutomationPeer>.GetAbiArray(box);
        public static unsafe global::Microsoft.UI.Xaml.Automation.Peers.ComboBoxAutomationPeer[] FromAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.ComboBoxAutomationPeer>.FromAbiArray(box, FromAbi);
        public static void CopyAbiArray(global::Microsoft.UI.Xaml.Automation.Peers.ComboBoxAutomationPeer[] array, object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.ComboBoxAutomationPeer>.CopyAbiArray(array, box, FromAbi);
        public static (int length, IntPtr data) FromManagedArray(global::Microsoft.UI.Xaml.Automation.Peers.ComboBoxAutomationPeer[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.ComboBoxAutomationPeer>.FromManagedArray(array, (o) => FromManaged(o));
        public static void DisposeMarshaler(IObjectReference value) => MarshalInspectable<object>.DisposeMarshaler(value);
        public static void DisposeMarshalerArray(MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.ComboBoxAutomationPeer>.MarshalerArray array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.ComboBoxAutomationPeer>.DisposeMarshalerArray(array);
        public static void DisposeAbi(IntPtr abi) => MarshalInspectable<object>.DisposeAbi(abi);
        public static unsafe void DisposeAbiArray(object box) => MarshalInspectable<object>.DisposeAbiArray(box);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    internal sealed class ComboBoxAutomationPeerRcwFactoryAttribute : global::WinRT.WinRTImplementationTypeRcwFactoryAttribute
    {
        public override object CreateInstance(global::WinRT.IInspectable inspectable)
            => new global::Microsoft.UI.Xaml.Automation.Peers.ComboBoxAutomationPeer(inspectable.ObjRef);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    public struct ComboBoxItemAutomationPeer
    {

        public static IObjectReference CreateMarshaler(global::Microsoft.UI.Xaml.Automation.Peers.ComboBoxItemAutomationPeer obj) => obj is null ? null : MarshalInspectable<global::Microsoft.UI.Xaml.Automation.Peers.ComboBoxItemAutomationPeer>.CreateMarshaler<IUnknownVftbl>(obj, global::ABI.Microsoft.UI.Xaml.Automation.Peers.IComboBoxItemAutomationPeerMethods.IID);
        public static ObjectReferenceValue CreateMarshaler2(global::Microsoft.UI.Xaml.Automation.Peers.ComboBoxItemAutomationPeer obj) => MarshalInspectable<object>.CreateMarshaler2(obj, global::ABI.Microsoft.UI.Xaml.Automation.Peers.IComboBoxItemAutomationPeerMethods.IID);
        public static IntPtr GetAbi(IObjectReference value) => value is null ? IntPtr.Zero : MarshalInterfaceHelper<object>.GetAbi(value);
        public static global::Microsoft.UI.Xaml.Automation.Peers.ComboBoxItemAutomationPeer FromAbi(IntPtr thisPtr) => global::Microsoft.UI.Xaml.Automation.Peers.ComboBoxItemAutomationPeer.FromAbi(thisPtr);
        public static IntPtr FromManaged(global::Microsoft.UI.Xaml.Automation.Peers.ComboBoxItemAutomationPeer obj) => obj is null ? IntPtr.Zero : CreateMarshaler2(obj).Detach();
        public static unsafe MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.ComboBoxItemAutomationPeer>.MarshalerArray CreateMarshalerArray(global::Microsoft.UI.Xaml.Automation.Peers.ComboBoxItemAutomationPeer[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.ComboBoxItemAutomationPeer>.CreateMarshalerArray2(array, (o) => CreateMarshaler2(o));
        public static (int length, IntPtr data) GetAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.ComboBoxItemAutomationPeer>.GetAbiArray(box);
        public static unsafe global::Microsoft.UI.Xaml.Automation.Peers.ComboBoxItemAutomationPeer[] FromAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.ComboBoxItemAutomationPeer>.FromAbiArray(box, FromAbi);
        public static void CopyAbiArray(global::Microsoft.UI.Xaml.Automation.Peers.ComboBoxItemAutomationPeer[] array, object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.ComboBoxItemAutomationPeer>.CopyAbiArray(array, box, FromAbi);
        public static (int length, IntPtr data) FromManagedArray(global::Microsoft.UI.Xaml.Automation.Peers.ComboBoxItemAutomationPeer[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.ComboBoxItemAutomationPeer>.FromManagedArray(array, (o) => FromManaged(o));
        public static void DisposeMarshaler(IObjectReference value) => MarshalInspectable<object>.DisposeMarshaler(value);
        public static void DisposeMarshalerArray(MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.ComboBoxItemAutomationPeer>.MarshalerArray array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.ComboBoxItemAutomationPeer>.DisposeMarshalerArray(array);
        public static void DisposeAbi(IntPtr abi) => MarshalInspectable<object>.DisposeAbi(abi);
        public static unsafe void DisposeAbiArray(object box) => MarshalInspectable<object>.DisposeAbiArray(box);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    internal sealed class ComboBoxItemAutomationPeerRcwFactoryAttribute : global::WinRT.WinRTImplementationTypeRcwFactoryAttribute
    {
        public override object CreateInstance(global::WinRT.IInspectable inspectable)
            => new global::Microsoft.UI.Xaml.Automation.Peers.ComboBoxItemAutomationPeer(inspectable.ObjRef);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    public struct ComboBoxItemDataAutomationPeer
    {

        public static IObjectReference CreateMarshaler(global::Microsoft.UI.Xaml.Automation.Peers.ComboBoxItemDataAutomationPeer obj) => obj is null ? null : MarshalInspectable<global::Microsoft.UI.Xaml.Automation.Peers.ComboBoxItemDataAutomationPeer>.CreateMarshaler<IUnknownVftbl>(obj, global::ABI.Microsoft.UI.Xaml.Automation.Peers.IComboBoxItemDataAutomationPeerMethods.IID);
        public static ObjectReferenceValue CreateMarshaler2(global::Microsoft.UI.Xaml.Automation.Peers.ComboBoxItemDataAutomationPeer obj) => MarshalInspectable<object>.CreateMarshaler2(obj, global::ABI.Microsoft.UI.Xaml.Automation.Peers.IComboBoxItemDataAutomationPeerMethods.IID);
        public static IntPtr GetAbi(IObjectReference value) => value is null ? IntPtr.Zero : MarshalInterfaceHelper<object>.GetAbi(value);
        public static global::Microsoft.UI.Xaml.Automation.Peers.ComboBoxItemDataAutomationPeer FromAbi(IntPtr thisPtr) => global::Microsoft.UI.Xaml.Automation.Peers.ComboBoxItemDataAutomationPeer.FromAbi(thisPtr);
        public static IntPtr FromManaged(global::Microsoft.UI.Xaml.Automation.Peers.ComboBoxItemDataAutomationPeer obj) => obj is null ? IntPtr.Zero : CreateMarshaler2(obj).Detach();
        public static unsafe MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.ComboBoxItemDataAutomationPeer>.MarshalerArray CreateMarshalerArray(global::Microsoft.UI.Xaml.Automation.Peers.ComboBoxItemDataAutomationPeer[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.ComboBoxItemDataAutomationPeer>.CreateMarshalerArray2(array, (o) => CreateMarshaler2(o));
        public static (int length, IntPtr data) GetAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.ComboBoxItemDataAutomationPeer>.GetAbiArray(box);
        public static unsafe global::Microsoft.UI.Xaml.Automation.Peers.ComboBoxItemDataAutomationPeer[] FromAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.ComboBoxItemDataAutomationPeer>.FromAbiArray(box, FromAbi);
        public static void CopyAbiArray(global::Microsoft.UI.Xaml.Automation.Peers.ComboBoxItemDataAutomationPeer[] array, object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.ComboBoxItemDataAutomationPeer>.CopyAbiArray(array, box, FromAbi);
        public static (int length, IntPtr data) FromManagedArray(global::Microsoft.UI.Xaml.Automation.Peers.ComboBoxItemDataAutomationPeer[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.ComboBoxItemDataAutomationPeer>.FromManagedArray(array, (o) => FromManaged(o));
        public static void DisposeMarshaler(IObjectReference value) => MarshalInspectable<object>.DisposeMarshaler(value);
        public static void DisposeMarshalerArray(MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.ComboBoxItemDataAutomationPeer>.MarshalerArray array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.ComboBoxItemDataAutomationPeer>.DisposeMarshalerArray(array);
        public static void DisposeAbi(IntPtr abi) => MarshalInspectable<object>.DisposeAbi(abi);
        public static unsafe void DisposeAbiArray(object box) => MarshalInspectable<object>.DisposeAbiArray(box);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    internal sealed class ComboBoxItemDataAutomationPeerRcwFactoryAttribute : global::WinRT.WinRTImplementationTypeRcwFactoryAttribute
    {
        public override object CreateInstance(global::WinRT.IInspectable inspectable)
            => new global::Microsoft.UI.Xaml.Automation.Peers.ComboBoxItemDataAutomationPeer(inspectable.ObjRef);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    public struct DatePickerAutomationPeer
    {

        public static IObjectReference CreateMarshaler(global::Microsoft.UI.Xaml.Automation.Peers.DatePickerAutomationPeer obj) => obj is null ? null : MarshalInspectable<global::Microsoft.UI.Xaml.Automation.Peers.DatePickerAutomationPeer>.CreateMarshaler<IUnknownVftbl>(obj, global::ABI.Microsoft.UI.Xaml.Automation.Peers.IDatePickerAutomationPeerMethods.IID);
        public static ObjectReferenceValue CreateMarshaler2(global::Microsoft.UI.Xaml.Automation.Peers.DatePickerAutomationPeer obj) => MarshalInspectable<object>.CreateMarshaler2(obj, global::ABI.Microsoft.UI.Xaml.Automation.Peers.IDatePickerAutomationPeerMethods.IID);
        public static IntPtr GetAbi(IObjectReference value) => value is null ? IntPtr.Zero : MarshalInterfaceHelper<object>.GetAbi(value);
        public static global::Microsoft.UI.Xaml.Automation.Peers.DatePickerAutomationPeer FromAbi(IntPtr thisPtr) => global::Microsoft.UI.Xaml.Automation.Peers.DatePickerAutomationPeer.FromAbi(thisPtr);
        public static IntPtr FromManaged(global::Microsoft.UI.Xaml.Automation.Peers.DatePickerAutomationPeer obj) => obj is null ? IntPtr.Zero : CreateMarshaler2(obj).Detach();
        public static unsafe MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.DatePickerAutomationPeer>.MarshalerArray CreateMarshalerArray(global::Microsoft.UI.Xaml.Automation.Peers.DatePickerAutomationPeer[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.DatePickerAutomationPeer>.CreateMarshalerArray2(array, (o) => CreateMarshaler2(o));
        public static (int length, IntPtr data) GetAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.DatePickerAutomationPeer>.GetAbiArray(box);
        public static unsafe global::Microsoft.UI.Xaml.Automation.Peers.DatePickerAutomationPeer[] FromAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.DatePickerAutomationPeer>.FromAbiArray(box, FromAbi);
        public static void CopyAbiArray(global::Microsoft.UI.Xaml.Automation.Peers.DatePickerAutomationPeer[] array, object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.DatePickerAutomationPeer>.CopyAbiArray(array, box, FromAbi);
        public static (int length, IntPtr data) FromManagedArray(global::Microsoft.UI.Xaml.Automation.Peers.DatePickerAutomationPeer[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.DatePickerAutomationPeer>.FromManagedArray(array, (o) => FromManaged(o));
        public static void DisposeMarshaler(IObjectReference value) => MarshalInspectable<object>.DisposeMarshaler(value);
        public static void DisposeMarshalerArray(MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.DatePickerAutomationPeer>.MarshalerArray array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.DatePickerAutomationPeer>.DisposeMarshalerArray(array);
        public static void DisposeAbi(IntPtr abi) => MarshalInspectable<object>.DisposeAbi(abi);
        public static unsafe void DisposeAbiArray(object box) => MarshalInspectable<object>.DisposeAbiArray(box);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    internal sealed class DatePickerAutomationPeerRcwFactoryAttribute : global::WinRT.WinRTImplementationTypeRcwFactoryAttribute
    {
        public override object CreateInstance(global::WinRT.IInspectable inspectable)
            => new global::Microsoft.UI.Xaml.Automation.Peers.DatePickerAutomationPeer(inspectable.ObjRef);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    public struct DatePickerFlyoutPresenterAutomationPeer
    {

        public static IObjectReference CreateMarshaler(global::Microsoft.UI.Xaml.Automation.Peers.DatePickerFlyoutPresenterAutomationPeer obj) => obj is null ? null : MarshalInspectable<global::Microsoft.UI.Xaml.Automation.Peers.DatePickerFlyoutPresenterAutomationPeer>.CreateMarshaler<IUnknownVftbl>(obj, global::ABI.Microsoft.UI.Xaml.Automation.Peers.IDatePickerFlyoutPresenterAutomationPeerMethods.IID);
        public static ObjectReferenceValue CreateMarshaler2(global::Microsoft.UI.Xaml.Automation.Peers.DatePickerFlyoutPresenterAutomationPeer obj) => MarshalInspectable<object>.CreateMarshaler2(obj, global::ABI.Microsoft.UI.Xaml.Automation.Peers.IDatePickerFlyoutPresenterAutomationPeerMethods.IID);
        public static IntPtr GetAbi(IObjectReference value) => value is null ? IntPtr.Zero : MarshalInterfaceHelper<object>.GetAbi(value);
        public static global::Microsoft.UI.Xaml.Automation.Peers.DatePickerFlyoutPresenterAutomationPeer FromAbi(IntPtr thisPtr) => global::Microsoft.UI.Xaml.Automation.Peers.DatePickerFlyoutPresenterAutomationPeer.FromAbi(thisPtr);
        public static IntPtr FromManaged(global::Microsoft.UI.Xaml.Automation.Peers.DatePickerFlyoutPresenterAutomationPeer obj) => obj is null ? IntPtr.Zero : CreateMarshaler2(obj).Detach();
        public static unsafe MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.DatePickerFlyoutPresenterAutomationPeer>.MarshalerArray CreateMarshalerArray(global::Microsoft.UI.Xaml.Automation.Peers.DatePickerFlyoutPresenterAutomationPeer[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.DatePickerFlyoutPresenterAutomationPeer>.CreateMarshalerArray2(array, (o) => CreateMarshaler2(o));
        public static (int length, IntPtr data) GetAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.DatePickerFlyoutPresenterAutomationPeer>.GetAbiArray(box);
        public static unsafe global::Microsoft.UI.Xaml.Automation.Peers.DatePickerFlyoutPresenterAutomationPeer[] FromAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.DatePickerFlyoutPresenterAutomationPeer>.FromAbiArray(box, FromAbi);
        public static void CopyAbiArray(global::Microsoft.UI.Xaml.Automation.Peers.DatePickerFlyoutPresenterAutomationPeer[] array, object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.DatePickerFlyoutPresenterAutomationPeer>.CopyAbiArray(array, box, FromAbi);
        public static (int length, IntPtr data) FromManagedArray(global::Microsoft.UI.Xaml.Automation.Peers.DatePickerFlyoutPresenterAutomationPeer[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.DatePickerFlyoutPresenterAutomationPeer>.FromManagedArray(array, (o) => FromManaged(o));
        public static void DisposeMarshaler(IObjectReference value) => MarshalInspectable<object>.DisposeMarshaler(value);
        public static void DisposeMarshalerArray(MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.DatePickerFlyoutPresenterAutomationPeer>.MarshalerArray array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.DatePickerFlyoutPresenterAutomationPeer>.DisposeMarshalerArray(array);
        public static void DisposeAbi(IntPtr abi) => MarshalInspectable<object>.DisposeAbi(abi);
        public static unsafe void DisposeAbiArray(object box) => MarshalInspectable<object>.DisposeAbiArray(box);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    internal sealed class DatePickerFlyoutPresenterAutomationPeerRcwFactoryAttribute : global::WinRT.WinRTImplementationTypeRcwFactoryAttribute
    {
        public override object CreateInstance(global::WinRT.IInspectable inspectable)
            => new global::Microsoft.UI.Xaml.Automation.Peers.DatePickerFlyoutPresenterAutomationPeer(inspectable.ObjRef);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    public struct DropDownButtonAutomationPeer
    {

        public static IObjectReference CreateMarshaler(global::Microsoft.UI.Xaml.Automation.Peers.DropDownButtonAutomationPeer obj) => obj is null ? null : MarshalInspectable<global::Microsoft.UI.Xaml.Automation.Peers.DropDownButtonAutomationPeer>.CreateMarshaler<IUnknownVftbl>(obj, global::ABI.Microsoft.UI.Xaml.Automation.Peers.IDropDownButtonAutomationPeerMethods.IID);
        public static ObjectReferenceValue CreateMarshaler2(global::Microsoft.UI.Xaml.Automation.Peers.DropDownButtonAutomationPeer obj) => MarshalInspectable<object>.CreateMarshaler2(obj, global::ABI.Microsoft.UI.Xaml.Automation.Peers.IDropDownButtonAutomationPeerMethods.IID);
        public static IntPtr GetAbi(IObjectReference value) => value is null ? IntPtr.Zero : MarshalInterfaceHelper<object>.GetAbi(value);
        public static global::Microsoft.UI.Xaml.Automation.Peers.DropDownButtonAutomationPeer FromAbi(IntPtr thisPtr) => global::Microsoft.UI.Xaml.Automation.Peers.DropDownButtonAutomationPeer.FromAbi(thisPtr);
        public static IntPtr FromManaged(global::Microsoft.UI.Xaml.Automation.Peers.DropDownButtonAutomationPeer obj) => obj is null ? IntPtr.Zero : CreateMarshaler2(obj).Detach();
        public static unsafe MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.DropDownButtonAutomationPeer>.MarshalerArray CreateMarshalerArray(global::Microsoft.UI.Xaml.Automation.Peers.DropDownButtonAutomationPeer[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.DropDownButtonAutomationPeer>.CreateMarshalerArray2(array, (o) => CreateMarshaler2(o));
        public static (int length, IntPtr data) GetAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.DropDownButtonAutomationPeer>.GetAbiArray(box);
        public static unsafe global::Microsoft.UI.Xaml.Automation.Peers.DropDownButtonAutomationPeer[] FromAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.DropDownButtonAutomationPeer>.FromAbiArray(box, FromAbi);
        public static void CopyAbiArray(global::Microsoft.UI.Xaml.Automation.Peers.DropDownButtonAutomationPeer[] array, object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.DropDownButtonAutomationPeer>.CopyAbiArray(array, box, FromAbi);
        public static (int length, IntPtr data) FromManagedArray(global::Microsoft.UI.Xaml.Automation.Peers.DropDownButtonAutomationPeer[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.DropDownButtonAutomationPeer>.FromManagedArray(array, (o) => FromManaged(o));
        public static void DisposeMarshaler(IObjectReference value) => MarshalInspectable<object>.DisposeMarshaler(value);
        public static void DisposeMarshalerArray(MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.DropDownButtonAutomationPeer>.MarshalerArray array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.DropDownButtonAutomationPeer>.DisposeMarshalerArray(array);
        public static void DisposeAbi(IntPtr abi) => MarshalInspectable<object>.DisposeAbi(abi);
        public static unsafe void DisposeAbiArray(object box) => MarshalInspectable<object>.DisposeAbiArray(box);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    internal sealed class DropDownButtonAutomationPeerRcwFactoryAttribute : global::WinRT.WinRTImplementationTypeRcwFactoryAttribute
    {
        public override object CreateInstance(global::WinRT.IInspectable inspectable)
            => new global::Microsoft.UI.Xaml.Automation.Peers.DropDownButtonAutomationPeer(inspectable.ObjRef);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    public struct ExpanderAutomationPeer
    {

        public static IObjectReference CreateMarshaler(global::Microsoft.UI.Xaml.Automation.Peers.ExpanderAutomationPeer obj) => obj is null ? null : MarshalInspectable<global::Microsoft.UI.Xaml.Automation.Peers.ExpanderAutomationPeer>.CreateMarshaler<IUnknownVftbl>(obj, global::ABI.Microsoft.UI.Xaml.Automation.Peers.IExpanderAutomationPeerMethods.IID);
        public static ObjectReferenceValue CreateMarshaler2(global::Microsoft.UI.Xaml.Automation.Peers.ExpanderAutomationPeer obj) => MarshalInspectable<object>.CreateMarshaler2(obj, global::ABI.Microsoft.UI.Xaml.Automation.Peers.IExpanderAutomationPeerMethods.IID);
        public static IntPtr GetAbi(IObjectReference value) => value is null ? IntPtr.Zero : MarshalInterfaceHelper<object>.GetAbi(value);
        public static global::Microsoft.UI.Xaml.Automation.Peers.ExpanderAutomationPeer FromAbi(IntPtr thisPtr) => global::Microsoft.UI.Xaml.Automation.Peers.ExpanderAutomationPeer.FromAbi(thisPtr);
        public static IntPtr FromManaged(global::Microsoft.UI.Xaml.Automation.Peers.ExpanderAutomationPeer obj) => obj is null ? IntPtr.Zero : CreateMarshaler2(obj).Detach();
        public static unsafe MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.ExpanderAutomationPeer>.MarshalerArray CreateMarshalerArray(global::Microsoft.UI.Xaml.Automation.Peers.ExpanderAutomationPeer[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.ExpanderAutomationPeer>.CreateMarshalerArray2(array, (o) => CreateMarshaler2(o));
        public static (int length, IntPtr data) GetAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.ExpanderAutomationPeer>.GetAbiArray(box);
        public static unsafe global::Microsoft.UI.Xaml.Automation.Peers.ExpanderAutomationPeer[] FromAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.ExpanderAutomationPeer>.FromAbiArray(box, FromAbi);
        public static void CopyAbiArray(global::Microsoft.UI.Xaml.Automation.Peers.ExpanderAutomationPeer[] array, object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.ExpanderAutomationPeer>.CopyAbiArray(array, box, FromAbi);
        public static (int length, IntPtr data) FromManagedArray(global::Microsoft.UI.Xaml.Automation.Peers.ExpanderAutomationPeer[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.ExpanderAutomationPeer>.FromManagedArray(array, (o) => FromManaged(o));
        public static void DisposeMarshaler(IObjectReference value) => MarshalInspectable<object>.DisposeMarshaler(value);
        public static void DisposeMarshalerArray(MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.ExpanderAutomationPeer>.MarshalerArray array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.ExpanderAutomationPeer>.DisposeMarshalerArray(array);
        public static void DisposeAbi(IntPtr abi) => MarshalInspectable<object>.DisposeAbi(abi);
        public static unsafe void DisposeAbiArray(object box) => MarshalInspectable<object>.DisposeAbiArray(box);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    internal sealed class ExpanderAutomationPeerRcwFactoryAttribute : global::WinRT.WinRTImplementationTypeRcwFactoryAttribute
    {
        public override object CreateInstance(global::WinRT.IInspectable inspectable)
            => new global::Microsoft.UI.Xaml.Automation.Peers.ExpanderAutomationPeer(inspectable.ObjRef);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    public struct FlipViewAutomationPeer
    {

        public static IObjectReference CreateMarshaler(global::Microsoft.UI.Xaml.Automation.Peers.FlipViewAutomationPeer obj) => obj is null ? null : MarshalInspectable<global::Microsoft.UI.Xaml.Automation.Peers.FlipViewAutomationPeer>.CreateMarshaler<IUnknownVftbl>(obj, global::ABI.Microsoft.UI.Xaml.Automation.Peers.IFlipViewAutomationPeerMethods.IID);
        public static ObjectReferenceValue CreateMarshaler2(global::Microsoft.UI.Xaml.Automation.Peers.FlipViewAutomationPeer obj) => MarshalInspectable<object>.CreateMarshaler2(obj, global::ABI.Microsoft.UI.Xaml.Automation.Peers.IFlipViewAutomationPeerMethods.IID);
        public static IntPtr GetAbi(IObjectReference value) => value is null ? IntPtr.Zero : MarshalInterfaceHelper<object>.GetAbi(value);
        public static global::Microsoft.UI.Xaml.Automation.Peers.FlipViewAutomationPeer FromAbi(IntPtr thisPtr) => global::Microsoft.UI.Xaml.Automation.Peers.FlipViewAutomationPeer.FromAbi(thisPtr);
        public static IntPtr FromManaged(global::Microsoft.UI.Xaml.Automation.Peers.FlipViewAutomationPeer obj) => obj is null ? IntPtr.Zero : CreateMarshaler2(obj).Detach();
        public static unsafe MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.FlipViewAutomationPeer>.MarshalerArray CreateMarshalerArray(global::Microsoft.UI.Xaml.Automation.Peers.FlipViewAutomationPeer[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.FlipViewAutomationPeer>.CreateMarshalerArray2(array, (o) => CreateMarshaler2(o));
        public static (int length, IntPtr data) GetAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.FlipViewAutomationPeer>.GetAbiArray(box);
        public static unsafe global::Microsoft.UI.Xaml.Automation.Peers.FlipViewAutomationPeer[] FromAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.FlipViewAutomationPeer>.FromAbiArray(box, FromAbi);
        public static void CopyAbiArray(global::Microsoft.UI.Xaml.Automation.Peers.FlipViewAutomationPeer[] array, object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.FlipViewAutomationPeer>.CopyAbiArray(array, box, FromAbi);
        public static (int length, IntPtr data) FromManagedArray(global::Microsoft.UI.Xaml.Automation.Peers.FlipViewAutomationPeer[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.FlipViewAutomationPeer>.FromManagedArray(array, (o) => FromManaged(o));
        public static void DisposeMarshaler(IObjectReference value) => MarshalInspectable<object>.DisposeMarshaler(value);
        public static void DisposeMarshalerArray(MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.FlipViewAutomationPeer>.MarshalerArray array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.FlipViewAutomationPeer>.DisposeMarshalerArray(array);
        public static void DisposeAbi(IntPtr abi) => MarshalInspectable<object>.DisposeAbi(abi);
        public static unsafe void DisposeAbiArray(object box) => MarshalInspectable<object>.DisposeAbiArray(box);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    internal sealed class FlipViewAutomationPeerRcwFactoryAttribute : global::WinRT.WinRTImplementationTypeRcwFactoryAttribute
    {
        public override object CreateInstance(global::WinRT.IInspectable inspectable)
            => new global::Microsoft.UI.Xaml.Automation.Peers.FlipViewAutomationPeer(inspectable.ObjRef);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    public struct FlipViewItemAutomationPeer
    {

        public static IObjectReference CreateMarshaler(global::Microsoft.UI.Xaml.Automation.Peers.FlipViewItemAutomationPeer obj) => obj is null ? null : MarshalInspectable<global::Microsoft.UI.Xaml.Automation.Peers.FlipViewItemAutomationPeer>.CreateMarshaler<IUnknownVftbl>(obj, global::ABI.Microsoft.UI.Xaml.Automation.Peers.IFlipViewItemAutomationPeerMethods.IID);
        public static ObjectReferenceValue CreateMarshaler2(global::Microsoft.UI.Xaml.Automation.Peers.FlipViewItemAutomationPeer obj) => MarshalInspectable<object>.CreateMarshaler2(obj, global::ABI.Microsoft.UI.Xaml.Automation.Peers.IFlipViewItemAutomationPeerMethods.IID);
        public static IntPtr GetAbi(IObjectReference value) => value is null ? IntPtr.Zero : MarshalInterfaceHelper<object>.GetAbi(value);
        public static global::Microsoft.UI.Xaml.Automation.Peers.FlipViewItemAutomationPeer FromAbi(IntPtr thisPtr) => global::Microsoft.UI.Xaml.Automation.Peers.FlipViewItemAutomationPeer.FromAbi(thisPtr);
        public static IntPtr FromManaged(global::Microsoft.UI.Xaml.Automation.Peers.FlipViewItemAutomationPeer obj) => obj is null ? IntPtr.Zero : CreateMarshaler2(obj).Detach();
        public static unsafe MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.FlipViewItemAutomationPeer>.MarshalerArray CreateMarshalerArray(global::Microsoft.UI.Xaml.Automation.Peers.FlipViewItemAutomationPeer[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.FlipViewItemAutomationPeer>.CreateMarshalerArray2(array, (o) => CreateMarshaler2(o));
        public static (int length, IntPtr data) GetAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.FlipViewItemAutomationPeer>.GetAbiArray(box);
        public static unsafe global::Microsoft.UI.Xaml.Automation.Peers.FlipViewItemAutomationPeer[] FromAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.FlipViewItemAutomationPeer>.FromAbiArray(box, FromAbi);
        public static void CopyAbiArray(global::Microsoft.UI.Xaml.Automation.Peers.FlipViewItemAutomationPeer[] array, object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.FlipViewItemAutomationPeer>.CopyAbiArray(array, box, FromAbi);
        public static (int length, IntPtr data) FromManagedArray(global::Microsoft.UI.Xaml.Automation.Peers.FlipViewItemAutomationPeer[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.FlipViewItemAutomationPeer>.FromManagedArray(array, (o) => FromManaged(o));
        public static void DisposeMarshaler(IObjectReference value) => MarshalInspectable<object>.DisposeMarshaler(value);
        public static void DisposeMarshalerArray(MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.FlipViewItemAutomationPeer>.MarshalerArray array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.FlipViewItemAutomationPeer>.DisposeMarshalerArray(array);
        public static void DisposeAbi(IntPtr abi) => MarshalInspectable<object>.DisposeAbi(abi);
        public static unsafe void DisposeAbiArray(object box) => MarshalInspectable<object>.DisposeAbiArray(box);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    internal sealed class FlipViewItemAutomationPeerRcwFactoryAttribute : global::WinRT.WinRTImplementationTypeRcwFactoryAttribute
    {
        public override object CreateInstance(global::WinRT.IInspectable inspectable)
            => new global::Microsoft.UI.Xaml.Automation.Peers.FlipViewItemAutomationPeer(inspectable.ObjRef);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    public struct FlipViewItemDataAutomationPeer
    {

        public static IObjectReference CreateMarshaler(global::Microsoft.UI.Xaml.Automation.Peers.FlipViewItemDataAutomationPeer obj) => obj is null ? null : MarshalInspectable<global::Microsoft.UI.Xaml.Automation.Peers.FlipViewItemDataAutomationPeer>.CreateMarshaler<IUnknownVftbl>(obj, global::ABI.Microsoft.UI.Xaml.Automation.Peers.IFlipViewItemDataAutomationPeerMethods.IID);
        public static ObjectReferenceValue CreateMarshaler2(global::Microsoft.UI.Xaml.Automation.Peers.FlipViewItemDataAutomationPeer obj) => MarshalInspectable<object>.CreateMarshaler2(obj, global::ABI.Microsoft.UI.Xaml.Automation.Peers.IFlipViewItemDataAutomationPeerMethods.IID);
        public static IntPtr GetAbi(IObjectReference value) => value is null ? IntPtr.Zero : MarshalInterfaceHelper<object>.GetAbi(value);
        public static global::Microsoft.UI.Xaml.Automation.Peers.FlipViewItemDataAutomationPeer FromAbi(IntPtr thisPtr) => global::Microsoft.UI.Xaml.Automation.Peers.FlipViewItemDataAutomationPeer.FromAbi(thisPtr);
        public static IntPtr FromManaged(global::Microsoft.UI.Xaml.Automation.Peers.FlipViewItemDataAutomationPeer obj) => obj is null ? IntPtr.Zero : CreateMarshaler2(obj).Detach();
        public static unsafe MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.FlipViewItemDataAutomationPeer>.MarshalerArray CreateMarshalerArray(global::Microsoft.UI.Xaml.Automation.Peers.FlipViewItemDataAutomationPeer[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.FlipViewItemDataAutomationPeer>.CreateMarshalerArray2(array, (o) => CreateMarshaler2(o));
        public static (int length, IntPtr data) GetAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.FlipViewItemDataAutomationPeer>.GetAbiArray(box);
        public static unsafe global::Microsoft.UI.Xaml.Automation.Peers.FlipViewItemDataAutomationPeer[] FromAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.FlipViewItemDataAutomationPeer>.FromAbiArray(box, FromAbi);
        public static void CopyAbiArray(global::Microsoft.UI.Xaml.Automation.Peers.FlipViewItemDataAutomationPeer[] array, object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.FlipViewItemDataAutomationPeer>.CopyAbiArray(array, box, FromAbi);
        public static (int length, IntPtr data) FromManagedArray(global::Microsoft.UI.Xaml.Automation.Peers.FlipViewItemDataAutomationPeer[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.FlipViewItemDataAutomationPeer>.FromManagedArray(array, (o) => FromManaged(o));
        public static void DisposeMarshaler(IObjectReference value) => MarshalInspectable<object>.DisposeMarshaler(value);
        public static void DisposeMarshalerArray(MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.FlipViewItemDataAutomationPeer>.MarshalerArray array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.FlipViewItemDataAutomationPeer>.DisposeMarshalerArray(array);
        public static void DisposeAbi(IntPtr abi) => MarshalInspectable<object>.DisposeAbi(abi);
        public static unsafe void DisposeAbiArray(object box) => MarshalInspectable<object>.DisposeAbiArray(box);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    internal sealed class FlipViewItemDataAutomationPeerRcwFactoryAttribute : global::WinRT.WinRTImplementationTypeRcwFactoryAttribute
    {
        public override object CreateInstance(global::WinRT.IInspectable inspectable)
            => new global::Microsoft.UI.Xaml.Automation.Peers.FlipViewItemDataAutomationPeer(inspectable.ObjRef);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    public struct FlyoutPresenterAutomationPeer
    {

        public static IObjectReference CreateMarshaler(global::Microsoft.UI.Xaml.Automation.Peers.FlyoutPresenterAutomationPeer obj) => obj is null ? null : MarshalInspectable<global::Microsoft.UI.Xaml.Automation.Peers.FlyoutPresenterAutomationPeer>.CreateMarshaler<IUnknownVftbl>(obj, global::ABI.Microsoft.UI.Xaml.Automation.Peers.IFlyoutPresenterAutomationPeerMethods.IID);
        public static ObjectReferenceValue CreateMarshaler2(global::Microsoft.UI.Xaml.Automation.Peers.FlyoutPresenterAutomationPeer obj) => MarshalInspectable<object>.CreateMarshaler2(obj, global::ABI.Microsoft.UI.Xaml.Automation.Peers.IFlyoutPresenterAutomationPeerMethods.IID);
        public static IntPtr GetAbi(IObjectReference value) => value is null ? IntPtr.Zero : MarshalInterfaceHelper<object>.GetAbi(value);
        public static global::Microsoft.UI.Xaml.Automation.Peers.FlyoutPresenterAutomationPeer FromAbi(IntPtr thisPtr) => global::Microsoft.UI.Xaml.Automation.Peers.FlyoutPresenterAutomationPeer.FromAbi(thisPtr);
        public static IntPtr FromManaged(global::Microsoft.UI.Xaml.Automation.Peers.FlyoutPresenterAutomationPeer obj) => obj is null ? IntPtr.Zero : CreateMarshaler2(obj).Detach();
        public static unsafe MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.FlyoutPresenterAutomationPeer>.MarshalerArray CreateMarshalerArray(global::Microsoft.UI.Xaml.Automation.Peers.FlyoutPresenterAutomationPeer[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.FlyoutPresenterAutomationPeer>.CreateMarshalerArray2(array, (o) => CreateMarshaler2(o));
        public static (int length, IntPtr data) GetAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.FlyoutPresenterAutomationPeer>.GetAbiArray(box);
        public static unsafe global::Microsoft.UI.Xaml.Automation.Peers.FlyoutPresenterAutomationPeer[] FromAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.FlyoutPresenterAutomationPeer>.FromAbiArray(box, FromAbi);
        public static void CopyAbiArray(global::Microsoft.UI.Xaml.Automation.Peers.FlyoutPresenterAutomationPeer[] array, object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.FlyoutPresenterAutomationPeer>.CopyAbiArray(array, box, FromAbi);
        public static (int length, IntPtr data) FromManagedArray(global::Microsoft.UI.Xaml.Automation.Peers.FlyoutPresenterAutomationPeer[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.FlyoutPresenterAutomationPeer>.FromManagedArray(array, (o) => FromManaged(o));
        public static void DisposeMarshaler(IObjectReference value) => MarshalInspectable<object>.DisposeMarshaler(value);
        public static void DisposeMarshalerArray(MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.FlyoutPresenterAutomationPeer>.MarshalerArray array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.FlyoutPresenterAutomationPeer>.DisposeMarshalerArray(array);
        public static void DisposeAbi(IntPtr abi) => MarshalInspectable<object>.DisposeAbi(abi);
        public static unsafe void DisposeAbiArray(object box) => MarshalInspectable<object>.DisposeAbiArray(box);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    internal sealed class FlyoutPresenterAutomationPeerRcwFactoryAttribute : global::WinRT.WinRTImplementationTypeRcwFactoryAttribute
    {
        public override object CreateInstance(global::WinRT.IInspectable inspectable)
            => new global::Microsoft.UI.Xaml.Automation.Peers.FlyoutPresenterAutomationPeer(inspectable.ObjRef);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    public struct FrameworkElementAutomationPeer
    {

        public static IObjectReference CreateMarshaler(global::Microsoft.UI.Xaml.Automation.Peers.FrameworkElementAutomationPeer obj) => obj is null ? null : MarshalInspectable<global::Microsoft.UI.Xaml.Automation.Peers.FrameworkElementAutomationPeer>.CreateMarshaler<IUnknownVftbl>(obj, global::ABI.Microsoft.UI.Xaml.Automation.Peers.IFrameworkElementAutomationPeerMethods.IID);
        public static ObjectReferenceValue CreateMarshaler2(global::Microsoft.UI.Xaml.Automation.Peers.FrameworkElementAutomationPeer obj) => MarshalInspectable<object>.CreateMarshaler2(obj, global::ABI.Microsoft.UI.Xaml.Automation.Peers.IFrameworkElementAutomationPeerMethods.IID);
        public static IntPtr GetAbi(IObjectReference value) => value is null ? IntPtr.Zero : MarshalInterfaceHelper<object>.GetAbi(value);
        public static global::Microsoft.UI.Xaml.Automation.Peers.FrameworkElementAutomationPeer FromAbi(IntPtr thisPtr) => global::Microsoft.UI.Xaml.Automation.Peers.FrameworkElementAutomationPeer.FromAbi(thisPtr);
        public static IntPtr FromManaged(global::Microsoft.UI.Xaml.Automation.Peers.FrameworkElementAutomationPeer obj) => obj is null ? IntPtr.Zero : CreateMarshaler2(obj).Detach();
        public static unsafe MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.FrameworkElementAutomationPeer>.MarshalerArray CreateMarshalerArray(global::Microsoft.UI.Xaml.Automation.Peers.FrameworkElementAutomationPeer[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.FrameworkElementAutomationPeer>.CreateMarshalerArray2(array, (o) => CreateMarshaler2(o));
        public static (int length, IntPtr data) GetAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.FrameworkElementAutomationPeer>.GetAbiArray(box);
        public static unsafe global::Microsoft.UI.Xaml.Automation.Peers.FrameworkElementAutomationPeer[] FromAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.FrameworkElementAutomationPeer>.FromAbiArray(box, FromAbi);
        public static void CopyAbiArray(global::Microsoft.UI.Xaml.Automation.Peers.FrameworkElementAutomationPeer[] array, object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.FrameworkElementAutomationPeer>.CopyAbiArray(array, box, FromAbi);
        public static (int length, IntPtr data) FromManagedArray(global::Microsoft.UI.Xaml.Automation.Peers.FrameworkElementAutomationPeer[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.FrameworkElementAutomationPeer>.FromManagedArray(array, (o) => FromManaged(o));
        public static void DisposeMarshaler(IObjectReference value) => MarshalInspectable<object>.DisposeMarshaler(value);
        public static void DisposeMarshalerArray(MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.FrameworkElementAutomationPeer>.MarshalerArray array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.FrameworkElementAutomationPeer>.DisposeMarshalerArray(array);
        public static void DisposeAbi(IntPtr abi) => MarshalInspectable<object>.DisposeAbi(abi);
        public static unsafe void DisposeAbiArray(object box) => MarshalInspectable<object>.DisposeAbiArray(box);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    internal sealed class FrameworkElementAutomationPeerRcwFactoryAttribute : global::WinRT.WinRTImplementationTypeRcwFactoryAttribute
    {
        public override object CreateInstance(global::WinRT.IInspectable inspectable)
            => new global::Microsoft.UI.Xaml.Automation.Peers.FrameworkElementAutomationPeer(inspectable.ObjRef);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    public struct GridViewAutomationPeer
    {

        public static IObjectReference CreateMarshaler(global::Microsoft.UI.Xaml.Automation.Peers.GridViewAutomationPeer obj) => obj is null ? null : MarshalInspectable<global::Microsoft.UI.Xaml.Automation.Peers.GridViewAutomationPeer>.CreateMarshaler<IUnknownVftbl>(obj, global::ABI.Microsoft.UI.Xaml.Automation.Peers.IGridViewAutomationPeerMethods.IID);
        public static ObjectReferenceValue CreateMarshaler2(global::Microsoft.UI.Xaml.Automation.Peers.GridViewAutomationPeer obj) => MarshalInspectable<object>.CreateMarshaler2(obj, global::ABI.Microsoft.UI.Xaml.Automation.Peers.IGridViewAutomationPeerMethods.IID);
        public static IntPtr GetAbi(IObjectReference value) => value is null ? IntPtr.Zero : MarshalInterfaceHelper<object>.GetAbi(value);
        public static global::Microsoft.UI.Xaml.Automation.Peers.GridViewAutomationPeer FromAbi(IntPtr thisPtr) => global::Microsoft.UI.Xaml.Automation.Peers.GridViewAutomationPeer.FromAbi(thisPtr);
        public static IntPtr FromManaged(global::Microsoft.UI.Xaml.Automation.Peers.GridViewAutomationPeer obj) => obj is null ? IntPtr.Zero : CreateMarshaler2(obj).Detach();
        public static unsafe MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.GridViewAutomationPeer>.MarshalerArray CreateMarshalerArray(global::Microsoft.UI.Xaml.Automation.Peers.GridViewAutomationPeer[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.GridViewAutomationPeer>.CreateMarshalerArray2(array, (o) => CreateMarshaler2(o));
        public static (int length, IntPtr data) GetAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.GridViewAutomationPeer>.GetAbiArray(box);
        public static unsafe global::Microsoft.UI.Xaml.Automation.Peers.GridViewAutomationPeer[] FromAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.GridViewAutomationPeer>.FromAbiArray(box, FromAbi);
        public static void CopyAbiArray(global::Microsoft.UI.Xaml.Automation.Peers.GridViewAutomationPeer[] array, object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.GridViewAutomationPeer>.CopyAbiArray(array, box, FromAbi);
        public static (int length, IntPtr data) FromManagedArray(global::Microsoft.UI.Xaml.Automation.Peers.GridViewAutomationPeer[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.GridViewAutomationPeer>.FromManagedArray(array, (o) => FromManaged(o));
        public static void DisposeMarshaler(IObjectReference value) => MarshalInspectable<object>.DisposeMarshaler(value);
        public static void DisposeMarshalerArray(MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.GridViewAutomationPeer>.MarshalerArray array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.GridViewAutomationPeer>.DisposeMarshalerArray(array);
        public static void DisposeAbi(IntPtr abi) => MarshalInspectable<object>.DisposeAbi(abi);
        public static unsafe void DisposeAbiArray(object box) => MarshalInspectable<object>.DisposeAbiArray(box);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    internal sealed class GridViewAutomationPeerRcwFactoryAttribute : global::WinRT.WinRTImplementationTypeRcwFactoryAttribute
    {
        public override object CreateInstance(global::WinRT.IInspectable inspectable)
            => new global::Microsoft.UI.Xaml.Automation.Peers.GridViewAutomationPeer(inspectable.ObjRef);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    public struct GridViewHeaderItemAutomationPeer
    {

        public static IObjectReference CreateMarshaler(global::Microsoft.UI.Xaml.Automation.Peers.GridViewHeaderItemAutomationPeer obj) => obj is null ? null : MarshalInspectable<global::Microsoft.UI.Xaml.Automation.Peers.GridViewHeaderItemAutomationPeer>.CreateMarshaler<IUnknownVftbl>(obj, global::ABI.Microsoft.UI.Xaml.Automation.Peers.IGridViewHeaderItemAutomationPeerMethods.IID);
        public static ObjectReferenceValue CreateMarshaler2(global::Microsoft.UI.Xaml.Automation.Peers.GridViewHeaderItemAutomationPeer obj) => MarshalInspectable<object>.CreateMarshaler2(obj, global::ABI.Microsoft.UI.Xaml.Automation.Peers.IGridViewHeaderItemAutomationPeerMethods.IID);
        public static IntPtr GetAbi(IObjectReference value) => value is null ? IntPtr.Zero : MarshalInterfaceHelper<object>.GetAbi(value);
        public static global::Microsoft.UI.Xaml.Automation.Peers.GridViewHeaderItemAutomationPeer FromAbi(IntPtr thisPtr) => global::Microsoft.UI.Xaml.Automation.Peers.GridViewHeaderItemAutomationPeer.FromAbi(thisPtr);
        public static IntPtr FromManaged(global::Microsoft.UI.Xaml.Automation.Peers.GridViewHeaderItemAutomationPeer obj) => obj is null ? IntPtr.Zero : CreateMarshaler2(obj).Detach();
        public static unsafe MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.GridViewHeaderItemAutomationPeer>.MarshalerArray CreateMarshalerArray(global::Microsoft.UI.Xaml.Automation.Peers.GridViewHeaderItemAutomationPeer[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.GridViewHeaderItemAutomationPeer>.CreateMarshalerArray2(array, (o) => CreateMarshaler2(o));
        public static (int length, IntPtr data) GetAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.GridViewHeaderItemAutomationPeer>.GetAbiArray(box);
        public static unsafe global::Microsoft.UI.Xaml.Automation.Peers.GridViewHeaderItemAutomationPeer[] FromAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.GridViewHeaderItemAutomationPeer>.FromAbiArray(box, FromAbi);
        public static void CopyAbiArray(global::Microsoft.UI.Xaml.Automation.Peers.GridViewHeaderItemAutomationPeer[] array, object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.GridViewHeaderItemAutomationPeer>.CopyAbiArray(array, box, FromAbi);
        public static (int length, IntPtr data) FromManagedArray(global::Microsoft.UI.Xaml.Automation.Peers.GridViewHeaderItemAutomationPeer[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.GridViewHeaderItemAutomationPeer>.FromManagedArray(array, (o) => FromManaged(o));
        public static void DisposeMarshaler(IObjectReference value) => MarshalInspectable<object>.DisposeMarshaler(value);
        public static void DisposeMarshalerArray(MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.GridViewHeaderItemAutomationPeer>.MarshalerArray array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.GridViewHeaderItemAutomationPeer>.DisposeMarshalerArray(array);
        public static void DisposeAbi(IntPtr abi) => MarshalInspectable<object>.DisposeAbi(abi);
        public static unsafe void DisposeAbiArray(object box) => MarshalInspectable<object>.DisposeAbiArray(box);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    internal sealed class GridViewHeaderItemAutomationPeerRcwFactoryAttribute : global::WinRT.WinRTImplementationTypeRcwFactoryAttribute
    {
        public override object CreateInstance(global::WinRT.IInspectable inspectable)
            => new global::Microsoft.UI.Xaml.Automation.Peers.GridViewHeaderItemAutomationPeer(inspectable.ObjRef);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    public struct GridViewItemAutomationPeer
    {

        public static IObjectReference CreateMarshaler(global::Microsoft.UI.Xaml.Automation.Peers.GridViewItemAutomationPeer obj) => obj is null ? null : MarshalInspectable<global::Microsoft.UI.Xaml.Automation.Peers.GridViewItemAutomationPeer>.CreateMarshaler<IUnknownVftbl>(obj, global::ABI.Microsoft.UI.Xaml.Automation.Peers.IGridViewItemAutomationPeerMethods.IID);
        public static ObjectReferenceValue CreateMarshaler2(global::Microsoft.UI.Xaml.Automation.Peers.GridViewItemAutomationPeer obj) => MarshalInspectable<object>.CreateMarshaler2(obj, global::ABI.Microsoft.UI.Xaml.Automation.Peers.IGridViewItemAutomationPeerMethods.IID);
        public static IntPtr GetAbi(IObjectReference value) => value is null ? IntPtr.Zero : MarshalInterfaceHelper<object>.GetAbi(value);
        public static global::Microsoft.UI.Xaml.Automation.Peers.GridViewItemAutomationPeer FromAbi(IntPtr thisPtr) => global::Microsoft.UI.Xaml.Automation.Peers.GridViewItemAutomationPeer.FromAbi(thisPtr);
        public static IntPtr FromManaged(global::Microsoft.UI.Xaml.Automation.Peers.GridViewItemAutomationPeer obj) => obj is null ? IntPtr.Zero : CreateMarshaler2(obj).Detach();
        public static unsafe MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.GridViewItemAutomationPeer>.MarshalerArray CreateMarshalerArray(global::Microsoft.UI.Xaml.Automation.Peers.GridViewItemAutomationPeer[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.GridViewItemAutomationPeer>.CreateMarshalerArray2(array, (o) => CreateMarshaler2(o));
        public static (int length, IntPtr data) GetAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.GridViewItemAutomationPeer>.GetAbiArray(box);
        public static unsafe global::Microsoft.UI.Xaml.Automation.Peers.GridViewItemAutomationPeer[] FromAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.GridViewItemAutomationPeer>.FromAbiArray(box, FromAbi);
        public static void CopyAbiArray(global::Microsoft.UI.Xaml.Automation.Peers.GridViewItemAutomationPeer[] array, object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.GridViewItemAutomationPeer>.CopyAbiArray(array, box, FromAbi);
        public static (int length, IntPtr data) FromManagedArray(global::Microsoft.UI.Xaml.Automation.Peers.GridViewItemAutomationPeer[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.GridViewItemAutomationPeer>.FromManagedArray(array, (o) => FromManaged(o));
        public static void DisposeMarshaler(IObjectReference value) => MarshalInspectable<object>.DisposeMarshaler(value);
        public static void DisposeMarshalerArray(MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.GridViewItemAutomationPeer>.MarshalerArray array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.GridViewItemAutomationPeer>.DisposeMarshalerArray(array);
        public static void DisposeAbi(IntPtr abi) => MarshalInspectable<object>.DisposeAbi(abi);
        public static unsafe void DisposeAbiArray(object box) => MarshalInspectable<object>.DisposeAbiArray(box);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    internal sealed class GridViewItemAutomationPeerRcwFactoryAttribute : global::WinRT.WinRTImplementationTypeRcwFactoryAttribute
    {
        public override object CreateInstance(global::WinRT.IInspectable inspectable)
            => new global::Microsoft.UI.Xaml.Automation.Peers.GridViewItemAutomationPeer(inspectable.ObjRef);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    public struct GridViewItemDataAutomationPeer
    {

        public static IObjectReference CreateMarshaler(global::Microsoft.UI.Xaml.Automation.Peers.GridViewItemDataAutomationPeer obj) => obj is null ? null : MarshalInspectable<global::Microsoft.UI.Xaml.Automation.Peers.GridViewItemDataAutomationPeer>.CreateMarshaler<IUnknownVftbl>(obj, global::ABI.Microsoft.UI.Xaml.Automation.Peers.IGridViewItemDataAutomationPeerMethods.IID);
        public static ObjectReferenceValue CreateMarshaler2(global::Microsoft.UI.Xaml.Automation.Peers.GridViewItemDataAutomationPeer obj) => MarshalInspectable<object>.CreateMarshaler2(obj, global::ABI.Microsoft.UI.Xaml.Automation.Peers.IGridViewItemDataAutomationPeerMethods.IID);
        public static IntPtr GetAbi(IObjectReference value) => value is null ? IntPtr.Zero : MarshalInterfaceHelper<object>.GetAbi(value);
        public static global::Microsoft.UI.Xaml.Automation.Peers.GridViewItemDataAutomationPeer FromAbi(IntPtr thisPtr) => global::Microsoft.UI.Xaml.Automation.Peers.GridViewItemDataAutomationPeer.FromAbi(thisPtr);
        public static IntPtr FromManaged(global::Microsoft.UI.Xaml.Automation.Peers.GridViewItemDataAutomationPeer obj) => obj is null ? IntPtr.Zero : CreateMarshaler2(obj).Detach();
        public static unsafe MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.GridViewItemDataAutomationPeer>.MarshalerArray CreateMarshalerArray(global::Microsoft.UI.Xaml.Automation.Peers.GridViewItemDataAutomationPeer[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.GridViewItemDataAutomationPeer>.CreateMarshalerArray2(array, (o) => CreateMarshaler2(o));
        public static (int length, IntPtr data) GetAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.GridViewItemDataAutomationPeer>.GetAbiArray(box);
        public static unsafe global::Microsoft.UI.Xaml.Automation.Peers.GridViewItemDataAutomationPeer[] FromAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.GridViewItemDataAutomationPeer>.FromAbiArray(box, FromAbi);
        public static void CopyAbiArray(global::Microsoft.UI.Xaml.Automation.Peers.GridViewItemDataAutomationPeer[] array, object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.GridViewItemDataAutomationPeer>.CopyAbiArray(array, box, FromAbi);
        public static (int length, IntPtr data) FromManagedArray(global::Microsoft.UI.Xaml.Automation.Peers.GridViewItemDataAutomationPeer[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.GridViewItemDataAutomationPeer>.FromManagedArray(array, (o) => FromManaged(o));
        public static void DisposeMarshaler(IObjectReference value) => MarshalInspectable<object>.DisposeMarshaler(value);
        public static void DisposeMarshalerArray(MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.GridViewItemDataAutomationPeer>.MarshalerArray array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.GridViewItemDataAutomationPeer>.DisposeMarshalerArray(array);
        public static void DisposeAbi(IntPtr abi) => MarshalInspectable<object>.DisposeAbi(abi);
        public static unsafe void DisposeAbiArray(object box) => MarshalInspectable<object>.DisposeAbiArray(box);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    internal sealed class GridViewItemDataAutomationPeerRcwFactoryAttribute : global::WinRT.WinRTImplementationTypeRcwFactoryAttribute
    {
        public override object CreateInstance(global::WinRT.IInspectable inspectable)
            => new global::Microsoft.UI.Xaml.Automation.Peers.GridViewItemDataAutomationPeer(inspectable.ObjRef);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    public struct GroupItemAutomationPeer
    {

        public static IObjectReference CreateMarshaler(global::Microsoft.UI.Xaml.Automation.Peers.GroupItemAutomationPeer obj) => obj is null ? null : MarshalInspectable<global::Microsoft.UI.Xaml.Automation.Peers.GroupItemAutomationPeer>.CreateMarshaler<IUnknownVftbl>(obj, global::ABI.Microsoft.UI.Xaml.Automation.Peers.IGroupItemAutomationPeerMethods.IID);
        public static ObjectReferenceValue CreateMarshaler2(global::Microsoft.UI.Xaml.Automation.Peers.GroupItemAutomationPeer obj) => MarshalInspectable<object>.CreateMarshaler2(obj, global::ABI.Microsoft.UI.Xaml.Automation.Peers.IGroupItemAutomationPeerMethods.IID);
        public static IntPtr GetAbi(IObjectReference value) => value is null ? IntPtr.Zero : MarshalInterfaceHelper<object>.GetAbi(value);
        public static global::Microsoft.UI.Xaml.Automation.Peers.GroupItemAutomationPeer FromAbi(IntPtr thisPtr) => global::Microsoft.UI.Xaml.Automation.Peers.GroupItemAutomationPeer.FromAbi(thisPtr);
        public static IntPtr FromManaged(global::Microsoft.UI.Xaml.Automation.Peers.GroupItemAutomationPeer obj) => obj is null ? IntPtr.Zero : CreateMarshaler2(obj).Detach();
        public static unsafe MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.GroupItemAutomationPeer>.MarshalerArray CreateMarshalerArray(global::Microsoft.UI.Xaml.Automation.Peers.GroupItemAutomationPeer[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.GroupItemAutomationPeer>.CreateMarshalerArray2(array, (o) => CreateMarshaler2(o));
        public static (int length, IntPtr data) GetAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.GroupItemAutomationPeer>.GetAbiArray(box);
        public static unsafe global::Microsoft.UI.Xaml.Automation.Peers.GroupItemAutomationPeer[] FromAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.GroupItemAutomationPeer>.FromAbiArray(box, FromAbi);
        public static void CopyAbiArray(global::Microsoft.UI.Xaml.Automation.Peers.GroupItemAutomationPeer[] array, object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.GroupItemAutomationPeer>.CopyAbiArray(array, box, FromAbi);
        public static (int length, IntPtr data) FromManagedArray(global::Microsoft.UI.Xaml.Automation.Peers.GroupItemAutomationPeer[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.GroupItemAutomationPeer>.FromManagedArray(array, (o) => FromManaged(o));
        public static void DisposeMarshaler(IObjectReference value) => MarshalInspectable<object>.DisposeMarshaler(value);
        public static void DisposeMarshalerArray(MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.GroupItemAutomationPeer>.MarshalerArray array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.GroupItemAutomationPeer>.DisposeMarshalerArray(array);
        public static void DisposeAbi(IntPtr abi) => MarshalInspectable<object>.DisposeAbi(abi);
        public static unsafe void DisposeAbiArray(object box) => MarshalInspectable<object>.DisposeAbiArray(box);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    internal sealed class GroupItemAutomationPeerRcwFactoryAttribute : global::WinRT.WinRTImplementationTypeRcwFactoryAttribute
    {
        public override object CreateInstance(global::WinRT.IInspectable inspectable)
            => new global::Microsoft.UI.Xaml.Automation.Peers.GroupItemAutomationPeer(inspectable.ObjRef);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    public struct HubAutomationPeer
    {

        public static IObjectReference CreateMarshaler(global::Microsoft.UI.Xaml.Automation.Peers.HubAutomationPeer obj) => obj is null ? null : MarshalInspectable<global::Microsoft.UI.Xaml.Automation.Peers.HubAutomationPeer>.CreateMarshaler<IUnknownVftbl>(obj, global::ABI.Microsoft.UI.Xaml.Automation.Peers.IHubAutomationPeerMethods.IID);
        public static ObjectReferenceValue CreateMarshaler2(global::Microsoft.UI.Xaml.Automation.Peers.HubAutomationPeer obj) => MarshalInspectable<object>.CreateMarshaler2(obj, global::ABI.Microsoft.UI.Xaml.Automation.Peers.IHubAutomationPeerMethods.IID);
        public static IntPtr GetAbi(IObjectReference value) => value is null ? IntPtr.Zero : MarshalInterfaceHelper<object>.GetAbi(value);
        public static global::Microsoft.UI.Xaml.Automation.Peers.HubAutomationPeer FromAbi(IntPtr thisPtr) => global::Microsoft.UI.Xaml.Automation.Peers.HubAutomationPeer.FromAbi(thisPtr);
        public static IntPtr FromManaged(global::Microsoft.UI.Xaml.Automation.Peers.HubAutomationPeer obj) => obj is null ? IntPtr.Zero : CreateMarshaler2(obj).Detach();
        public static unsafe MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.HubAutomationPeer>.MarshalerArray CreateMarshalerArray(global::Microsoft.UI.Xaml.Automation.Peers.HubAutomationPeer[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.HubAutomationPeer>.CreateMarshalerArray2(array, (o) => CreateMarshaler2(o));
        public static (int length, IntPtr data) GetAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.HubAutomationPeer>.GetAbiArray(box);
        public static unsafe global::Microsoft.UI.Xaml.Automation.Peers.HubAutomationPeer[] FromAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.HubAutomationPeer>.FromAbiArray(box, FromAbi);
        public static void CopyAbiArray(global::Microsoft.UI.Xaml.Automation.Peers.HubAutomationPeer[] array, object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.HubAutomationPeer>.CopyAbiArray(array, box, FromAbi);
        public static (int length, IntPtr data) FromManagedArray(global::Microsoft.UI.Xaml.Automation.Peers.HubAutomationPeer[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.HubAutomationPeer>.FromManagedArray(array, (o) => FromManaged(o));
        public static void DisposeMarshaler(IObjectReference value) => MarshalInspectable<object>.DisposeMarshaler(value);
        public static void DisposeMarshalerArray(MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.HubAutomationPeer>.MarshalerArray array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.HubAutomationPeer>.DisposeMarshalerArray(array);
        public static void DisposeAbi(IntPtr abi) => MarshalInspectable<object>.DisposeAbi(abi);
        public static unsafe void DisposeAbiArray(object box) => MarshalInspectable<object>.DisposeAbiArray(box);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    internal sealed class HubAutomationPeerRcwFactoryAttribute : global::WinRT.WinRTImplementationTypeRcwFactoryAttribute
    {
        public override object CreateInstance(global::WinRT.IInspectable inspectable)
            => new global::Microsoft.UI.Xaml.Automation.Peers.HubAutomationPeer(inspectable.ObjRef);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    public struct HubSectionAutomationPeer
    {

        public static IObjectReference CreateMarshaler(global::Microsoft.UI.Xaml.Automation.Peers.HubSectionAutomationPeer obj) => obj is null ? null : MarshalInspectable<global::Microsoft.UI.Xaml.Automation.Peers.HubSectionAutomationPeer>.CreateMarshaler<IUnknownVftbl>(obj, global::ABI.Microsoft.UI.Xaml.Automation.Peers.IHubSectionAutomationPeerMethods.IID);
        public static ObjectReferenceValue CreateMarshaler2(global::Microsoft.UI.Xaml.Automation.Peers.HubSectionAutomationPeer obj) => MarshalInspectable<object>.CreateMarshaler2(obj, global::ABI.Microsoft.UI.Xaml.Automation.Peers.IHubSectionAutomationPeerMethods.IID);
        public static IntPtr GetAbi(IObjectReference value) => value is null ? IntPtr.Zero : MarshalInterfaceHelper<object>.GetAbi(value);
        public static global::Microsoft.UI.Xaml.Automation.Peers.HubSectionAutomationPeer FromAbi(IntPtr thisPtr) => global::Microsoft.UI.Xaml.Automation.Peers.HubSectionAutomationPeer.FromAbi(thisPtr);
        public static IntPtr FromManaged(global::Microsoft.UI.Xaml.Automation.Peers.HubSectionAutomationPeer obj) => obj is null ? IntPtr.Zero : CreateMarshaler2(obj).Detach();
        public static unsafe MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.HubSectionAutomationPeer>.MarshalerArray CreateMarshalerArray(global::Microsoft.UI.Xaml.Automation.Peers.HubSectionAutomationPeer[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.HubSectionAutomationPeer>.CreateMarshalerArray2(array, (o) => CreateMarshaler2(o));
        public static (int length, IntPtr data) GetAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.HubSectionAutomationPeer>.GetAbiArray(box);
        public static unsafe global::Microsoft.UI.Xaml.Automation.Peers.HubSectionAutomationPeer[] FromAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.HubSectionAutomationPeer>.FromAbiArray(box, FromAbi);
        public static void CopyAbiArray(global::Microsoft.UI.Xaml.Automation.Peers.HubSectionAutomationPeer[] array, object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.HubSectionAutomationPeer>.CopyAbiArray(array, box, FromAbi);
        public static (int length, IntPtr data) FromManagedArray(global::Microsoft.UI.Xaml.Automation.Peers.HubSectionAutomationPeer[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.HubSectionAutomationPeer>.FromManagedArray(array, (o) => FromManaged(o));
        public static void DisposeMarshaler(IObjectReference value) => MarshalInspectable<object>.DisposeMarshaler(value);
        public static void DisposeMarshalerArray(MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.HubSectionAutomationPeer>.MarshalerArray array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.HubSectionAutomationPeer>.DisposeMarshalerArray(array);
        public static void DisposeAbi(IntPtr abi) => MarshalInspectable<object>.DisposeAbi(abi);
        public static unsafe void DisposeAbiArray(object box) => MarshalInspectable<object>.DisposeAbiArray(box);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    internal sealed class HubSectionAutomationPeerRcwFactoryAttribute : global::WinRT.WinRTImplementationTypeRcwFactoryAttribute
    {
        public override object CreateInstance(global::WinRT.IInspectable inspectable)
            => new global::Microsoft.UI.Xaml.Automation.Peers.HubSectionAutomationPeer(inspectable.ObjRef);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    public struct HyperlinkButtonAutomationPeer
    {

        public static IObjectReference CreateMarshaler(global::Microsoft.UI.Xaml.Automation.Peers.HyperlinkButtonAutomationPeer obj) => obj is null ? null : MarshalInspectable<global::Microsoft.UI.Xaml.Automation.Peers.HyperlinkButtonAutomationPeer>.CreateMarshaler<IUnknownVftbl>(obj, global::ABI.Microsoft.UI.Xaml.Automation.Peers.IHyperlinkButtonAutomationPeerMethods.IID);
        public static ObjectReferenceValue CreateMarshaler2(global::Microsoft.UI.Xaml.Automation.Peers.HyperlinkButtonAutomationPeer obj) => MarshalInspectable<object>.CreateMarshaler2(obj, global::ABI.Microsoft.UI.Xaml.Automation.Peers.IHyperlinkButtonAutomationPeerMethods.IID);
        public static IntPtr GetAbi(IObjectReference value) => value is null ? IntPtr.Zero : MarshalInterfaceHelper<object>.GetAbi(value);
        public static global::Microsoft.UI.Xaml.Automation.Peers.HyperlinkButtonAutomationPeer FromAbi(IntPtr thisPtr) => global::Microsoft.UI.Xaml.Automation.Peers.HyperlinkButtonAutomationPeer.FromAbi(thisPtr);
        public static IntPtr FromManaged(global::Microsoft.UI.Xaml.Automation.Peers.HyperlinkButtonAutomationPeer obj) => obj is null ? IntPtr.Zero : CreateMarshaler2(obj).Detach();
        public static unsafe MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.HyperlinkButtonAutomationPeer>.MarshalerArray CreateMarshalerArray(global::Microsoft.UI.Xaml.Automation.Peers.HyperlinkButtonAutomationPeer[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.HyperlinkButtonAutomationPeer>.CreateMarshalerArray2(array, (o) => CreateMarshaler2(o));
        public static (int length, IntPtr data) GetAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.HyperlinkButtonAutomationPeer>.GetAbiArray(box);
        public static unsafe global::Microsoft.UI.Xaml.Automation.Peers.HyperlinkButtonAutomationPeer[] FromAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.HyperlinkButtonAutomationPeer>.FromAbiArray(box, FromAbi);
        public static void CopyAbiArray(global::Microsoft.UI.Xaml.Automation.Peers.HyperlinkButtonAutomationPeer[] array, object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.HyperlinkButtonAutomationPeer>.CopyAbiArray(array, box, FromAbi);
        public static (int length, IntPtr data) FromManagedArray(global::Microsoft.UI.Xaml.Automation.Peers.HyperlinkButtonAutomationPeer[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.HyperlinkButtonAutomationPeer>.FromManagedArray(array, (o) => FromManaged(o));
        public static void DisposeMarshaler(IObjectReference value) => MarshalInspectable<object>.DisposeMarshaler(value);
        public static void DisposeMarshalerArray(MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.HyperlinkButtonAutomationPeer>.MarshalerArray array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.HyperlinkButtonAutomationPeer>.DisposeMarshalerArray(array);
        public static void DisposeAbi(IntPtr abi) => MarshalInspectable<object>.DisposeAbi(abi);
        public static unsafe void DisposeAbiArray(object box) => MarshalInspectable<object>.DisposeAbiArray(box);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    internal sealed class HyperlinkButtonAutomationPeerRcwFactoryAttribute : global::WinRT.WinRTImplementationTypeRcwFactoryAttribute
    {
        public override object CreateInstance(global::WinRT.IInspectable inspectable)
            => new global::Microsoft.UI.Xaml.Automation.Peers.HyperlinkButtonAutomationPeer(inspectable.ObjRef);
    }
    internal static class IAnimatedVisualPlayerAutomationPeerMethods
    {



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0xB6, 0xEE, 0x49, 0xF9, 0xEA, 0xB3, 0xAD, 0x58, 0xB6, 0x2B, 0xB7, 0x25, 0x5B, 0xCC, 0x4, 0xDF };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("F949EEB6-B3EA-58AD-B62B-B7255BCC04DF")]
    internal interface IAnimatedVisualPlayerAutomationPeer : global::Microsoft.UI.Xaml.Automation.Peers.IAnimatedVisualPlayerAutomationPeer
    {
    }
    internal static class IAnimatedVisualPlayerAutomationPeerFactoryMethods
    {


        internal static unsafe global::Microsoft.UI.Xaml.Automation.Peers.AnimatedVisualPlayerAutomationPeer CreateInstance(IObjectReference _obj, global::Microsoft.UI.Xaml.Controls.AnimatedVisualPlayer owner, object baseInterface, out object innerInterface)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __owner = default;
            ObjectReferenceValue __baseInterface = default;
            IntPtr __innerInterface = default;
            IntPtr __retval = default;
            try
            {
                __owner = global::ABI.Microsoft.UI.Xaml.Controls.AnimatedVisualPlayer.CreateMarshaler2(owner);
                __baseInterface = MarshalInspectable<object>.CreateMarshaler2(baseInterface);
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, IntPtr, IntPtr*, IntPtr*, int>**)ThisPtr)[6](ThisPtr, MarshalInspectable<object>.GetAbi(__owner), MarshalInspectable<object>.GetAbi(__baseInterface), &__innerInterface, &__retval));
                global::System.GC.KeepAlive(_obj);
                innerInterface = MarshalInspectable<object>.FromAbi(__innerInterface);
                return global::ABI.Microsoft.UI.Xaml.Automation.Peers.AnimatedVisualPlayerAutomationPeer.FromAbi(__retval);
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__owner);
                MarshalInspectable<object>.DisposeMarshaler(__baseInterface);
                MarshalInspectable<object>.DisposeAbi(__innerInterface);
                global::ABI.Microsoft.UI.Xaml.Automation.Peers.AnimatedVisualPlayerAutomationPeer.DisposeAbi(__retval);
            }
        }


        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0x98, 0x91, 0xA4, 0xD2, 0xBB, 0x80, 0xD6, 0x51, 0xB4, 0x95, 0x3D, 0xC5, 0xAA, 0xB5, 0x95, 0x89 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("D2A49198-80BB-51D6-B495-3DC5AAB59589")]
    internal interface IAnimatedVisualPlayerAutomationPeerFactory : global::Microsoft.UI.Xaml.Automation.Peers.IAnimatedVisualPlayerAutomationPeerFactory
    {
    }
    internal static class IAppBarAutomationPeerMethods
    {



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0xE2, 0x52, 0x3A, 0x88, 0x10, 0x18, 0x1A, 0x5F, 0xA9, 0xFD, 0x1D, 0xB0, 0xF9, 0xC6, 0x2B, 0x2 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("883A52E2-1810-5F1A-A9FD-1DB0F9C62B02")]
    internal interface IAppBarAutomationPeer : global::Microsoft.UI.Xaml.Automation.Peers.IAppBarAutomationPeer
    {
    }
    internal static class IAppBarAutomationPeerFactoryMethods
    {


        internal static unsafe global::Microsoft.UI.Xaml.Automation.Peers.AppBarAutomationPeer CreateInstanceWithOwner(IObjectReference _obj, global::Microsoft.UI.Xaml.Controls.AppBar owner, object baseInterface, out object innerInterface)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __owner = default;
            ObjectReferenceValue __baseInterface = default;
            IntPtr __innerInterface = default;
            IntPtr __retval = default;
            try
            {
                __owner = global::ABI.Microsoft.UI.Xaml.Controls.AppBar.CreateMarshaler2(owner);
                __baseInterface = MarshalInspectable<object>.CreateMarshaler2(baseInterface);
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, IntPtr, IntPtr*, IntPtr*, int>**)ThisPtr)[6](ThisPtr, MarshalInspectable<object>.GetAbi(__owner), MarshalInspectable<object>.GetAbi(__baseInterface), &__innerInterface, &__retval));
                global::System.GC.KeepAlive(_obj);
                innerInterface = MarshalInspectable<object>.FromAbi(__innerInterface);
                return global::ABI.Microsoft.UI.Xaml.Automation.Peers.AppBarAutomationPeer.FromAbi(__retval);
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__owner);
                MarshalInspectable<object>.DisposeMarshaler(__baseInterface);
                MarshalInspectable<object>.DisposeAbi(__innerInterface);
                global::ABI.Microsoft.UI.Xaml.Automation.Peers.AppBarAutomationPeer.DisposeAbi(__retval);
            }
        }


        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0xE4, 0x8C, 0xF6, 0x64, 0x2D, 0xAD, 0x18, 0x5C, 0xAB, 0xC0, 0xD0, 0x15, 0x7C, 0xC6, 0x30, 0x88 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("64F68CE4-AD2D-5C18-ABC0-D0157CC63088")]
    internal interface IAppBarAutomationPeerFactory : global::Microsoft.UI.Xaml.Automation.Peers.IAppBarAutomationPeerFactory
    {
    }
    internal static class IAppBarButtonAutomationPeerMethods
    {



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0xB4, 0xFD, 0x9E, 0x43, 0x1B, 0x14, 0xFF, 0x5F, 0x87, 0x23, 0x3, 0xE6, 0xE6, 0x9F, 0x6B, 0x36 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("439EFDB4-141B-5FFF-8723-03E6E69F6B36")]
    internal interface IAppBarButtonAutomationPeer : global::Microsoft.UI.Xaml.Automation.Peers.IAppBarButtonAutomationPeer
    {
    }
    internal static class IAppBarButtonAutomationPeerFactoryMethods
    {


        internal static unsafe global::Microsoft.UI.Xaml.Automation.Peers.AppBarButtonAutomationPeer CreateInstanceWithOwner(IObjectReference _obj, global::Microsoft.UI.Xaml.Controls.AppBarButton owner, object baseInterface, out object innerInterface)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __owner = default;
            ObjectReferenceValue __baseInterface = default;
            IntPtr __innerInterface = default;
            IntPtr __retval = default;
            try
            {
                __owner = global::ABI.Microsoft.UI.Xaml.Controls.AppBarButton.CreateMarshaler2(owner);
                __baseInterface = MarshalInspectable<object>.CreateMarshaler2(baseInterface);
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, IntPtr, IntPtr*, IntPtr*, int>**)ThisPtr)[6](ThisPtr, MarshalInspectable<object>.GetAbi(__owner), MarshalInspectable<object>.GetAbi(__baseInterface), &__innerInterface, &__retval));
                global::System.GC.KeepAlive(_obj);
                innerInterface = MarshalInspectable<object>.FromAbi(__innerInterface);
                return global::ABI.Microsoft.UI.Xaml.Automation.Peers.AppBarButtonAutomationPeer.FromAbi(__retval);
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__owner);
                MarshalInspectable<object>.DisposeMarshaler(__baseInterface);
                MarshalInspectable<object>.DisposeAbi(__innerInterface);
                global::ABI.Microsoft.UI.Xaml.Automation.Peers.AppBarButtonAutomationPeer.DisposeAbi(__retval);
            }
        }


        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0x33, 0x14, 0x61, 0x6F, 0x50, 0x7E, 0x2E, 0x5E, 0xB1, 0x92, 0xD6, 0xA2, 0x85, 0x96, 0x2C, 0x74 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("6F611433-7E50-5E2E-B192-D6A285962C74")]
    internal interface IAppBarButtonAutomationPeerFactory : global::Microsoft.UI.Xaml.Automation.Peers.IAppBarButtonAutomationPeerFactory
    {
    }
    internal static class IAppBarToggleButtonAutomationPeerMethods
    {



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0xB5, 0x8E, 0xD2, 0x17, 0x35, 0x46, 0x2D, 0x5E, 0xAF, 0x1, 0x8D, 0xCD, 0x23, 0xA6, 0x8, 0xC4 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("17D28EB5-4635-5E2D-AF01-8DCD23A608C4")]
    internal interface IAppBarToggleButtonAutomationPeer : global::Microsoft.UI.Xaml.Automation.Peers.IAppBarToggleButtonAutomationPeer
    {
    }
    internal static class IAppBarToggleButtonAutomationPeerFactoryMethods
    {


        internal static unsafe global::Microsoft.UI.Xaml.Automation.Peers.AppBarToggleButtonAutomationPeer CreateInstanceWithOwner(IObjectReference _obj, global::Microsoft.UI.Xaml.Controls.AppBarToggleButton owner, object baseInterface, out object innerInterface)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __owner = default;
            ObjectReferenceValue __baseInterface = default;
            IntPtr __innerInterface = default;
            IntPtr __retval = default;
            try
            {
                __owner = global::ABI.Microsoft.UI.Xaml.Controls.AppBarToggleButton.CreateMarshaler2(owner);
                __baseInterface = MarshalInspectable<object>.CreateMarshaler2(baseInterface);
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, IntPtr, IntPtr*, IntPtr*, int>**)ThisPtr)[6](ThisPtr, MarshalInspectable<object>.GetAbi(__owner), MarshalInspectable<object>.GetAbi(__baseInterface), &__innerInterface, &__retval));
                global::System.GC.KeepAlive(_obj);
                innerInterface = MarshalInspectable<object>.FromAbi(__innerInterface);
                return global::ABI.Microsoft.UI.Xaml.Automation.Peers.AppBarToggleButtonAutomationPeer.FromAbi(__retval);
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__owner);
                MarshalInspectable<object>.DisposeMarshaler(__baseInterface);
                MarshalInspectable<object>.DisposeAbi(__innerInterface);
                global::ABI.Microsoft.UI.Xaml.Automation.Peers.AppBarToggleButtonAutomationPeer.DisposeAbi(__retval);
            }
        }


        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0x43, 0xEF, 0xB5, 0x3C, 0x92, 0xAE, 0x52, 0x54, 0x92, 0xE9, 0xCD, 0xC, 0xCC, 0xA2, 0x68, 0x91 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("3CB5EF43-AE92-5452-92E9-CD0CCCA26891")]
    internal interface IAppBarToggleButtonAutomationPeerFactory : global::Microsoft.UI.Xaml.Automation.Peers.IAppBarToggleButtonAutomationPeerFactory
    {
    }
    internal static class IAutoSuggestBoxAutomationPeerMethods
    {



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0xFC, 0x36, 0x52, 0x69, 0x21, 0x0, 0x36, 0x59, 0xBD, 0xF9, 0xED, 0x59, 0x91, 0xDB, 0xD, 0x52 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("695236FC-0021-5936-BDF9-ED5991DB0D52")]
    internal interface IAutoSuggestBoxAutomationPeer : global::Microsoft.UI.Xaml.Automation.Peers.IAutoSuggestBoxAutomationPeer
    {
    }
    internal static class IAutoSuggestBoxAutomationPeerFactoryMethods
    {


        internal static unsafe global::Microsoft.UI.Xaml.Automation.Peers.AutoSuggestBoxAutomationPeer CreateInstanceWithOwner(IObjectReference _obj, global::Microsoft.UI.Xaml.Controls.AutoSuggestBox owner)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __owner = default;
            IntPtr __retval = default;
            try
            {
                __owner = global::ABI.Microsoft.UI.Xaml.Controls.AutoSuggestBox.CreateMarshaler2(owner);
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, IntPtr*, int>**)ThisPtr)[6](ThisPtr, MarshalInspectable<object>.GetAbi(__owner), &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Xaml.Automation.Peers.AutoSuggestBoxAutomationPeer.FromAbi(__retval);
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__owner);
                global::ABI.Microsoft.UI.Xaml.Automation.Peers.AutoSuggestBoxAutomationPeer.DisposeAbi(__retval);
            }
        }


        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0xC9, 0x50, 0x9, 0xC3, 0x82, 0xB6, 0xDF, 0x56, 0x9C, 0xB2, 0xDE, 0x67, 0x86, 0xFB, 0x8F, 0x90 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("C30950C9-B682-56DF-9CB2-DE6786FB8F90")]
    internal interface IAutoSuggestBoxAutomationPeerFactory : global::Microsoft.UI.Xaml.Automation.Peers.IAutoSuggestBoxAutomationPeerFactory
    {
    }
    internal static class IAutomationPeerMethods
    {


        internal static unsafe object GetPattern(IObjectReference _obj, global::Microsoft.UI.Xaml.Automation.Peers.PatternInterface patternInterface)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::Microsoft.UI.Xaml.Automation.Peers.PatternInterface, IntPtr*, int>**)ThisPtr)[8](ThisPtr, patternInterface, &__retval));
                global::System.GC.KeepAlive(_obj);
                return MarshalInspectable<object>.FromAbi(__retval);
            }
            finally
            {
                MarshalInspectable<object>.DisposeAbi(__retval);
            }
        }

        internal static unsafe void RaiseAutomationEvent(IObjectReference _obj, global::Microsoft.UI.Xaml.Automation.Peers.AutomationEvents eventId)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::Microsoft.UI.Xaml.Automation.Peers.AutomationEvents, int>**)ThisPtr)[9](ThisPtr, eventId));
            global::System.GC.KeepAlive(_obj);
        }

        internal static unsafe void RaisePropertyChangedEvent(IObjectReference _obj, global::Microsoft.UI.Xaml.Automation.AutomationProperty automationProperty, object oldValue, object newValue)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __automationProperty = default;
            ObjectReferenceValue __oldValue = default;
            ObjectReferenceValue __newValue = default;
            try
            {
                __automationProperty = global::ABI.Microsoft.UI.Xaml.Automation.AutomationProperty.CreateMarshaler2(automationProperty);
                __oldValue = MarshalInspectable<object>.CreateMarshaler2(oldValue);
                __newValue = MarshalInspectable<object>.CreateMarshaler2(newValue);
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, IntPtr, IntPtr, int>**)ThisPtr)[10](ThisPtr, MarshalInspectable<object>.GetAbi(__automationProperty), MarshalInspectable<object>.GetAbi(__oldValue), MarshalInspectable<object>.GetAbi(__newValue)));
                global::System.GC.KeepAlive(_obj);
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__automationProperty);
                MarshalInspectable<object>.DisposeMarshaler(__oldValue);
                MarshalInspectable<object>.DisposeMarshaler(__newValue);
            }
        }

        internal static unsafe string GetAcceleratorKey(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[11](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return MarshalString.FromAbi(__retval);
            }
            finally
            {
                MarshalString.DisposeAbi(__retval);
            }
        }

        internal static unsafe string GetAccessKey(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[12](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return MarshalString.FromAbi(__retval);
            }
            finally
            {
                MarshalString.DisposeAbi(__retval);
            }
        }

        internal static unsafe global::Microsoft.UI.Xaml.Automation.Peers.AutomationControlType GetAutomationControlType(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::Microsoft.UI.Xaml.Automation.Peers.AutomationControlType __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::Microsoft.UI.Xaml.Automation.Peers.AutomationControlType*, int>**)ThisPtr)[13](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }

        internal static unsafe string GetAutomationId(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[14](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return MarshalString.FromAbi(__retval);
            }
            finally
            {
                MarshalString.DisposeAbi(__retval);
            }
        }

        internal static unsafe global::Windows.Foundation.Rect GetBoundingRectangle(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::Windows.Foundation.Rect __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::Windows.Foundation.Rect*, int>**)ThisPtr)[15](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }

        internal static unsafe global::System.Collections.Generic.IList<global::Microsoft.UI.Xaml.Automation.Peers.AutomationPeer> GetChildren(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[16](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                _ = global::WinRT.GenericTypeInstantiations.Windows_Foundation_Collections_IVector_1_Microsoft_UI_Xaml_Automation_Peers_AutomationPeer.EnsureInitialized();
                return MarshalInterface<global::System.Collections.Generic.IList<global::Microsoft.UI.Xaml.Automation.Peers.AutomationPeer>>.FromAbi(__retval);
            }
            finally
            {
                MarshalInterface<global::System.Collections.Generic.IList<global::Microsoft.UI.Xaml.Automation.Peers.AutomationPeer>>.DisposeAbi(__retval);
            }
        }

        internal static unsafe object Navigate(IObjectReference _obj, global::Microsoft.UI.Xaml.Automation.Peers.AutomationNavigationDirection direction)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::Microsoft.UI.Xaml.Automation.Peers.AutomationNavigationDirection, IntPtr*, int>**)ThisPtr)[17](ThisPtr, direction, &__retval));
                global::System.GC.KeepAlive(_obj);
                return MarshalInspectable<object>.FromAbi(__retval);
            }
            finally
            {
                MarshalInspectable<object>.DisposeAbi(__retval);
            }
        }

        internal static unsafe string GetClassName(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[18](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return MarshalString.FromAbi(__retval);
            }
            finally
            {
                MarshalString.DisposeAbi(__retval);
            }
        }

        internal static unsafe global::Windows.Foundation.Point GetClickablePoint(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::Windows.Foundation.Point __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::Windows.Foundation.Point*, int>**)ThisPtr)[19](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }

        internal static unsafe string GetHelpText(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[20](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return MarshalString.FromAbi(__retval);
            }
            finally
            {
                MarshalString.DisposeAbi(__retval);
            }
        }

        internal static unsafe string GetItemStatus(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[21](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return MarshalString.FromAbi(__retval);
            }
            finally
            {
                MarshalString.DisposeAbi(__retval);
            }
        }

        internal static unsafe string GetItemType(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[22](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return MarshalString.FromAbi(__retval);
            }
            finally
            {
                MarshalString.DisposeAbi(__retval);
            }
        }

        internal static unsafe global::Microsoft.UI.Xaml.Automation.Peers.AutomationPeer GetLabeledBy(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[23](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Xaml.Automation.Peers.AutomationPeer.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.UI.Xaml.Automation.Peers.AutomationPeer.DisposeAbi(__retval);
            }
        }

        internal static unsafe string GetLocalizedControlType(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[24](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return MarshalString.FromAbi(__retval);
            }
            finally
            {
                MarshalString.DisposeAbi(__retval);
            }
        }

        internal static unsafe string GetName(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[25](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return MarshalString.FromAbi(__retval);
            }
            finally
            {
                MarshalString.DisposeAbi(__retval);
            }
        }

        internal static unsafe global::Microsoft.UI.Xaml.Automation.Peers.AutomationOrientation GetOrientation(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::Microsoft.UI.Xaml.Automation.Peers.AutomationOrientation __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::Microsoft.UI.Xaml.Automation.Peers.AutomationOrientation*, int>**)ThisPtr)[26](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }

        internal static unsafe bool HasKeyboardFocus(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            byte __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, byte*, int>**)ThisPtr)[27](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval != 0;
        }

        internal static unsafe bool IsContentElement(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            byte __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, byte*, int>**)ThisPtr)[28](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval != 0;
        }

        internal static unsafe bool IsControlElement(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            byte __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, byte*, int>**)ThisPtr)[29](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval != 0;
        }

        internal static unsafe bool IsEnabled(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            byte __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, byte*, int>**)ThisPtr)[30](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval != 0;
        }

        internal static unsafe bool IsKeyboardFocusable(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            byte __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, byte*, int>**)ThisPtr)[31](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval != 0;
        }

        internal static unsafe bool IsOffscreen(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            byte __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, byte*, int>**)ThisPtr)[32](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval != 0;
        }

        internal static unsafe bool IsPassword(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            byte __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, byte*, int>**)ThisPtr)[33](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval != 0;
        }

        internal static unsafe bool IsRequiredForForm(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            byte __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, byte*, int>**)ThisPtr)[34](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval != 0;
        }

        internal static unsafe void SetFocus(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, int>**)ThisPtr)[35](ThisPtr));
            global::System.GC.KeepAlive(_obj);
        }

        internal static unsafe global::Microsoft.UI.Xaml.Automation.Peers.AutomationPeer GetParent(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[36](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Xaml.Automation.Peers.AutomationPeer.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.UI.Xaml.Automation.Peers.AutomationPeer.DisposeAbi(__retval);
            }
        }

        internal static unsafe void InvalidatePeer(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, int>**)ThisPtr)[37](ThisPtr));
            global::System.GC.KeepAlive(_obj);
        }

        internal static unsafe global::Microsoft.UI.Xaml.Automation.Peers.AutomationPeer GetPeerFromPoint(IObjectReference _obj, global::Windows.Foundation.Point point)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::Windows.Foundation.Point, IntPtr*, int>**)ThisPtr)[38](ThisPtr, point, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Xaml.Automation.Peers.AutomationPeer.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.UI.Xaml.Automation.Peers.AutomationPeer.DisposeAbi(__retval);
            }
        }

        internal static unsafe object GetElementFromPoint(IObjectReference _obj, global::Windows.Foundation.Point pointInWindowCoordinates)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::Windows.Foundation.Point, IntPtr*, int>**)ThisPtr)[39](ThisPtr, pointInWindowCoordinates, &__retval));
                global::System.GC.KeepAlive(_obj);
                return MarshalInspectable<object>.FromAbi(__retval);
            }
            finally
            {
                MarshalInspectable<object>.DisposeAbi(__retval);
            }
        }

        internal static unsafe object GetFocusedElement(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[40](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return MarshalInspectable<object>.FromAbi(__retval);
            }
            finally
            {
                MarshalInspectable<object>.DisposeAbi(__retval);
            }
        }

        internal static unsafe global::Microsoft.UI.Xaml.Automation.Peers.AutomationLiveSetting GetLiveSetting(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::Microsoft.UI.Xaml.Automation.Peers.AutomationLiveSetting __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::Microsoft.UI.Xaml.Automation.Peers.AutomationLiveSetting*, int>**)ThisPtr)[41](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }

        internal static unsafe void ShowContextMenu(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, int>**)ThisPtr)[42](ThisPtr));
            global::System.GC.KeepAlive(_obj);
        }

        internal static unsafe global::System.Collections.Generic.IReadOnlyList<global::Microsoft.UI.Xaml.Automation.Peers.AutomationPeer> GetControlledPeers(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[43](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                _ = global::WinRT.GenericTypeInstantiations.Windows_Foundation_Collections_IVectorView_1_Microsoft_UI_Xaml_Automation_Peers_AutomationPeer.EnsureInitialized();
                return MarshalInterface<global::System.Collections.Generic.IReadOnlyList<global::Microsoft.UI.Xaml.Automation.Peers.AutomationPeer>>.FromAbi(__retval);
            }
            finally
            {
                MarshalInterface<global::System.Collections.Generic.IReadOnlyList<global::Microsoft.UI.Xaml.Automation.Peers.AutomationPeer>>.DisposeAbi(__retval);
            }
        }

        internal static unsafe global::System.Collections.Generic.IList<global::Microsoft.UI.Xaml.Automation.Peers.AutomationPeerAnnotation> GetAnnotations(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[44](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                _ = global::WinRT.GenericTypeInstantiations.Windows_Foundation_Collections_IVector_1_Microsoft_UI_Xaml_Automation_Peers_AutomationPeerAnnotation.EnsureInitialized();
                return MarshalInterface<global::System.Collections.Generic.IList<global::Microsoft.UI.Xaml.Automation.Peers.AutomationPeerAnnotation>>.FromAbi(__retval);
            }
            finally
            {
                MarshalInterface<global::System.Collections.Generic.IList<global::Microsoft.UI.Xaml.Automation.Peers.AutomationPeerAnnotation>>.DisposeAbi(__retval);
            }
        }

        internal static unsafe void SetParent(IObjectReference _obj, global::Microsoft.UI.Xaml.Automation.Peers.AutomationPeer peer)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __peer = default;
            try
            {
                __peer = global::ABI.Microsoft.UI.Xaml.Automation.Peers.AutomationPeer.CreateMarshaler2(peer);
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, int>**)ThisPtr)[45](ThisPtr, MarshalInspectable<object>.GetAbi(__peer)));
                global::System.GC.KeepAlive(_obj);
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__peer);
            }
        }

        internal static unsafe void RaiseTextEditTextChangedEvent(IObjectReference _obj, global::Microsoft.UI.Xaml.Automation.AutomationTextEditChangeType automationTextEditChangeType, global::System.Collections.Generic.IReadOnlyList<string> changedData)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __changedData = default;
            try
            {
                __changedData = MarshalInterface<global::System.Collections.Generic.IReadOnlyList<string>>.CreateMarshaler2(changedData, global::ABI.System.Collections.Generic.IReadOnlyListMethods<string>.IID);
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::Microsoft.UI.Xaml.Automation.AutomationTextEditChangeType, IntPtr, int>**)ThisPtr)[46](ThisPtr, automationTextEditChangeType, MarshalInspectable<object>.GetAbi(__changedData)));
                global::System.GC.KeepAlive(_obj);
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__changedData);
            }
        }

        internal static unsafe int GetPositionInSet(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            int __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, int*, int>**)ThisPtr)[47](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }

        internal static unsafe int GetSizeOfSet(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            int __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, int*, int>**)ThisPtr)[48](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }

        internal static unsafe int GetLevel(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            int __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, int*, int>**)ThisPtr)[49](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }

        internal static unsafe void RaiseStructureChangedEvent(IObjectReference _obj, global::Microsoft.UI.Xaml.Automation.Peers.AutomationStructureChangeType structureChangeType, global::Microsoft.UI.Xaml.Automation.Peers.AutomationPeer child)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __child = default;
            try
            {
                __child = global::ABI.Microsoft.UI.Xaml.Automation.Peers.AutomationPeer.CreateMarshaler2(child);
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::Microsoft.UI.Xaml.Automation.Peers.AutomationStructureChangeType, IntPtr, int>**)ThisPtr)[50](ThisPtr, structureChangeType, MarshalInspectable<object>.GetAbi(__child)));
                global::System.GC.KeepAlive(_obj);
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__child);
            }
        }

        internal static unsafe global::Microsoft.UI.Xaml.Automation.Peers.AutomationLandmarkType GetLandmarkType(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::Microsoft.UI.Xaml.Automation.Peers.AutomationLandmarkType __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::Microsoft.UI.Xaml.Automation.Peers.AutomationLandmarkType*, int>**)ThisPtr)[51](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }

        internal static unsafe string GetLocalizedLandmarkType(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[52](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return MarshalString.FromAbi(__retval);
            }
            finally
            {
                MarshalString.DisposeAbi(__retval);
            }
        }

        internal static unsafe bool IsPeripheral(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            byte __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, byte*, int>**)ThisPtr)[53](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval != 0;
        }

        internal static unsafe bool IsDataValidForForm(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            byte __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, byte*, int>**)ThisPtr)[54](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval != 0;
        }

        internal static unsafe string GetFullDescription(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[55](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return MarshalString.FromAbi(__retval);
            }
            finally
            {
                MarshalString.DisposeAbi(__retval);
            }
        }

        internal static unsafe int GetCulture(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            int __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, int*, int>**)ThisPtr)[56](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }

        internal static unsafe void RaiseNotificationEvent(IObjectReference _obj, global::Microsoft.UI.Xaml.Automation.Peers.AutomationNotificationKind notificationKind, global::Microsoft.UI.Xaml.Automation.Peers.AutomationNotificationProcessing notificationProcessing, string displayString, string activityId)
        {
            var ThisPtr = _obj.ThisPtr;

            MarshalString.Pinnable __displayString = new(displayString);
            MarshalString.Pinnable __activityId = new(activityId);
            fixed(void* ___displayString = __displayString, ___activityId = __activityId)
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::Microsoft.UI.Xaml.Automation.Peers.AutomationNotificationKind, global::Microsoft.UI.Xaml.Automation.Peers.AutomationNotificationProcessing, IntPtr, IntPtr, int>**)ThisPtr)[57](ThisPtr, notificationKind, notificationProcessing, MarshalString.GetAbi(ref __displayString), MarshalString.GetAbi(ref __activityId)));
                global::System.GC.KeepAlive(_obj);
            }
        }

        internal static unsafe global::Microsoft.UI.Xaml.Automation.Peers.AutomationHeadingLevel GetHeadingLevel(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::Microsoft.UI.Xaml.Automation.Peers.AutomationHeadingLevel __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::Microsoft.UI.Xaml.Automation.Peers.AutomationHeadingLevel*, int>**)ThisPtr)[58](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }

        internal static unsafe bool IsDialog(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            byte __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, byte*, int>**)ThisPtr)[59](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval != 0;
        }
        internal static unsafe global::Microsoft.UI.Xaml.Automation.Peers.AutomationPeer get_EventsSource(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[6](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Xaml.Automation.Peers.AutomationPeer.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.UI.Xaml.Automation.Peers.AutomationPeer.DisposeAbi(__retval);
            }
        }
        internal static unsafe void set_EventsSource(IObjectReference _obj, global::Microsoft.UI.Xaml.Automation.Peers.AutomationPeer value)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __value = default;
            try
            {
                __value = global::ABI.Microsoft.UI.Xaml.Automation.Peers.AutomationPeer.CreateMarshaler2(value);
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, int>**)ThisPtr)[7](ThisPtr, MarshalInspectable<object>.GetAbi(__value)));
                global::System.GC.KeepAlive(_obj);
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__value);
            }
        }



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0x4E, 0x3E, 0x1D, 0xE5, 0xF0, 0x34, 0x8C, 0x56, 0x99, 0x9F, 0x62, 0x77, 0xE2, 0xAF, 0xE6, 0xD7 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("E51D3E4E-34F0-568C-999F-6277E2AFE6D7")]
    internal interface IAutomationPeer : global::Microsoft.UI.Xaml.Automation.Peers.IAutomationPeer
    {
    }
    internal static class IAutomationPeerAnnotationMethods
    {

        internal static unsafe global::Microsoft.UI.Xaml.Automation.Peers.AutomationPeer get_Peer(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[8](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Xaml.Automation.Peers.AutomationPeer.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.UI.Xaml.Automation.Peers.AutomationPeer.DisposeAbi(__retval);
            }
        }
        internal static unsafe void set_Peer(IObjectReference _obj, global::Microsoft.UI.Xaml.Automation.Peers.AutomationPeer value)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __value = default;
            try
            {
                __value = global::ABI.Microsoft.UI.Xaml.Automation.Peers.AutomationPeer.CreateMarshaler2(value);
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, int>**)ThisPtr)[9](ThisPtr, MarshalInspectable<object>.GetAbi(__value)));
                global::System.GC.KeepAlive(_obj);
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__value);
            }
        }

        internal static unsafe global::Microsoft.UI.Xaml.Automation.AnnotationType get_Type(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::Microsoft.UI.Xaml.Automation.AnnotationType __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::Microsoft.UI.Xaml.Automation.AnnotationType*, int>**)ThisPtr)[6](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }
        internal static unsafe void set_Type(IObjectReference _obj, global::Microsoft.UI.Xaml.Automation.AnnotationType value)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::Microsoft.UI.Xaml.Automation.AnnotationType, int>**)ThisPtr)[7](ThisPtr, value));
            global::System.GC.KeepAlive(_obj);
        }



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0x2A, 0xB9, 0x38, 0x27, 0x28, 0x25, 0x63, 0x5B, 0x97, 0x3D, 0xD2, 0x9E, 0xB0, 0x59, 0x36, 0x47 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("2738B92A-2528-5B63-973D-D29EB0593647")]
    internal interface IAutomationPeerAnnotation : global::Microsoft.UI.Xaml.Automation.Peers.IAutomationPeerAnnotation
    {
    }
    internal static class IAutomationPeerAnnotationFactoryMethods
    {


        internal static unsafe global::Microsoft.UI.Xaml.Automation.Peers.AutomationPeerAnnotation CreateInstance(IObjectReference _obj, global::Microsoft.UI.Xaml.Automation.AnnotationType type)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::Microsoft.UI.Xaml.Automation.AnnotationType, IntPtr*, int>**)ThisPtr)[6](ThisPtr, type, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Xaml.Automation.Peers.AutomationPeerAnnotation.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.UI.Xaml.Automation.Peers.AutomationPeerAnnotation.DisposeAbi(__retval);
            }
        }

        internal static unsafe global::Microsoft.UI.Xaml.Automation.Peers.AutomationPeerAnnotation CreateWithPeerParameter(IObjectReference _obj, global::Microsoft.UI.Xaml.Automation.AnnotationType type, global::Microsoft.UI.Xaml.Automation.Peers.AutomationPeer peer)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __peer = default;
            IntPtr __retval = default;
            try
            {
                __peer = global::ABI.Microsoft.UI.Xaml.Automation.Peers.AutomationPeer.CreateMarshaler2(peer);
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::Microsoft.UI.Xaml.Automation.AnnotationType, IntPtr, IntPtr*, int>**)ThisPtr)[7](ThisPtr, type, MarshalInspectable<object>.GetAbi(__peer), &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Xaml.Automation.Peers.AutomationPeerAnnotation.FromAbi(__retval);
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__peer);
                global::ABI.Microsoft.UI.Xaml.Automation.Peers.AutomationPeerAnnotation.DisposeAbi(__retval);
            }
        }


        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0x2, 0xA2, 0xA1, 0x25, 0x68, 0xBD, 0x41, 0x5D, 0xA3, 0x11, 0xF8, 0x4A, 0xF9, 0xC8, 0xC4, 0x40 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("25A1A202-BD68-5D41-A311-F84AF9C8C440")]
    internal interface IAutomationPeerAnnotationFactory : global::Microsoft.UI.Xaml.Automation.Peers.IAutomationPeerAnnotationFactory
    {
    }
    internal static class IAutomationPeerAnnotationStaticsMethods
    {

        internal static unsafe global::Microsoft.UI.Xaml.DependencyProperty get_PeerProperty(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[7](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Xaml.DependencyProperty.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.UI.Xaml.DependencyProperty.DisposeAbi(__retval);
            }
        }

        internal static unsafe global::Microsoft.UI.Xaml.DependencyProperty get_TypeProperty(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[6](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Xaml.DependencyProperty.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.UI.Xaml.DependencyProperty.DisposeAbi(__retval);
            }
        }



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0xD7, 0x5, 0x61, 0xC4, 0xA3, 0x8C, 0xE3, 0x50, 0xA1, 0xBC, 0xB6, 0xBB, 0x2F, 0x9C, 0xE1, 0xCD };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("C46105D7-8CA3-50E3-A1BC-B6BB2F9CE1CD")]
    internal interface IAutomationPeerAnnotationStatics : global::Microsoft.UI.Xaml.Automation.Peers.IAutomationPeerAnnotationStatics
    {
    }
    internal static class IAutomationPeerFactoryMethods
    {


        internal static unsafe global::Microsoft.UI.Xaml.Automation.Peers.AutomationPeer CreateInstance(IObjectReference _obj, object baseInterface, out object innerInterface)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __baseInterface = default;
            IntPtr __innerInterface = default;
            IntPtr __retval = default;
            try
            {
                __baseInterface = MarshalInspectable<object>.CreateMarshaler2(baseInterface);
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, IntPtr*, IntPtr*, int>**)ThisPtr)[6](ThisPtr, MarshalInspectable<object>.GetAbi(__baseInterface), &__innerInterface, &__retval));
                global::System.GC.KeepAlive(_obj);
                innerInterface = MarshalInspectable<object>.FromAbi(__innerInterface);
                return global::ABI.Microsoft.UI.Xaml.Automation.Peers.AutomationPeer.FromAbi(__retval);
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__baseInterface);
                MarshalInspectable<object>.DisposeAbi(__innerInterface);
                global::ABI.Microsoft.UI.Xaml.Automation.Peers.AutomationPeer.DisposeAbi(__retval);
            }
        }


        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0xA0, 0x86, 0xAF, 0xA1, 0xC6, 0x6E, 0xE2, 0x5B, 0x85, 0x8F, 0x72, 0x80, 0x8B, 0xE6, 0xFD, 0xDD };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("A1AF86A0-6EC6-5BE2-858F-72808BE6FDDD")]
    internal interface IAutomationPeerFactory : global::Microsoft.UI.Xaml.Automation.Peers.IAutomationPeerFactory
    {
    }
    public static class IAutomationPeerOverridesMethods
    {


        internal static unsafe object GetPatternCore(IObjectReference _obj, global::Microsoft.UI.Xaml.Automation.Peers.PatternInterface patternInterface)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::Microsoft.UI.Xaml.Automation.Peers.PatternInterface, IntPtr*, int>**)ThisPtr)[6](ThisPtr, patternInterface, &__retval));
                global::System.GC.KeepAlive(_obj);
                return MarshalInspectable<object>.FromAbi(__retval);
            }
            finally
            {
                MarshalInspectable<object>.DisposeAbi(__retval);
            }
        }

        internal static unsafe string GetAcceleratorKeyCore(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[7](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return MarshalString.FromAbi(__retval);
            }
            finally
            {
                MarshalString.DisposeAbi(__retval);
            }
        }

        internal static unsafe string GetAccessKeyCore(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[8](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return MarshalString.FromAbi(__retval);
            }
            finally
            {
                MarshalString.DisposeAbi(__retval);
            }
        }

        internal static unsafe global::Microsoft.UI.Xaml.Automation.Peers.AutomationControlType GetAutomationControlTypeCore(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::Microsoft.UI.Xaml.Automation.Peers.AutomationControlType __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::Microsoft.UI.Xaml.Automation.Peers.AutomationControlType*, int>**)ThisPtr)[9](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }

        internal static unsafe string GetAutomationIdCore(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[10](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return MarshalString.FromAbi(__retval);
            }
            finally
            {
                MarshalString.DisposeAbi(__retval);
            }
        }

        internal static unsafe global::Windows.Foundation.Rect GetBoundingRectangleCore(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::Windows.Foundation.Rect __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::Windows.Foundation.Rect*, int>**)ThisPtr)[11](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }

        internal static unsafe global::System.Collections.Generic.IList<global::Microsoft.UI.Xaml.Automation.Peers.AutomationPeer> GetChildrenCore(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[12](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                _ = global::WinRT.GenericTypeInstantiations.Windows_Foundation_Collections_IVector_1_Microsoft_UI_Xaml_Automation_Peers_AutomationPeer.EnsureInitialized();
                return MarshalInterface<global::System.Collections.Generic.IList<global::Microsoft.UI.Xaml.Automation.Peers.AutomationPeer>>.FromAbi(__retval);
            }
            finally
            {
                MarshalInterface<global::System.Collections.Generic.IList<global::Microsoft.UI.Xaml.Automation.Peers.AutomationPeer>>.DisposeAbi(__retval);
            }
        }

        internal static unsafe object NavigateCore(IObjectReference _obj, global::Microsoft.UI.Xaml.Automation.Peers.AutomationNavigationDirection direction)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::Microsoft.UI.Xaml.Automation.Peers.AutomationNavigationDirection, IntPtr*, int>**)ThisPtr)[13](ThisPtr, direction, &__retval));
                global::System.GC.KeepAlive(_obj);
                return MarshalInspectable<object>.FromAbi(__retval);
            }
            finally
            {
                MarshalInspectable<object>.DisposeAbi(__retval);
            }
        }

        internal static unsafe string GetClassNameCore(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[14](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return MarshalString.FromAbi(__retval);
            }
            finally
            {
                MarshalString.DisposeAbi(__retval);
            }
        }

        internal static unsafe global::Windows.Foundation.Point GetClickablePointCore(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::Windows.Foundation.Point __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::Windows.Foundation.Point*, int>**)ThisPtr)[15](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }

        internal static unsafe string GetHelpTextCore(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[16](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return MarshalString.FromAbi(__retval);
            }
            finally
            {
                MarshalString.DisposeAbi(__retval);
            }
        }

        internal static unsafe string GetItemStatusCore(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[17](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return MarshalString.FromAbi(__retval);
            }
            finally
            {
                MarshalString.DisposeAbi(__retval);
            }
        }

        internal static unsafe string GetItemTypeCore(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[18](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return MarshalString.FromAbi(__retval);
            }
            finally
            {
                MarshalString.DisposeAbi(__retval);
            }
        }

        internal static unsafe global::Microsoft.UI.Xaml.Automation.Peers.AutomationPeer GetLabeledByCore(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[19](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Xaml.Automation.Peers.AutomationPeer.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.UI.Xaml.Automation.Peers.AutomationPeer.DisposeAbi(__retval);
            }
        }

        internal static unsafe string GetLocalizedControlTypeCore(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[20](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return MarshalString.FromAbi(__retval);
            }
            finally
            {
                MarshalString.DisposeAbi(__retval);
            }
        }

        internal static unsafe string GetNameCore(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[21](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return MarshalString.FromAbi(__retval);
            }
            finally
            {
                MarshalString.DisposeAbi(__retval);
            }
        }

        internal static unsafe global::Microsoft.UI.Xaml.Automation.Peers.AutomationOrientation GetOrientationCore(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::Microsoft.UI.Xaml.Automation.Peers.AutomationOrientation __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::Microsoft.UI.Xaml.Automation.Peers.AutomationOrientation*, int>**)ThisPtr)[22](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }

        internal static unsafe bool HasKeyboardFocusCore(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            byte __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, byte*, int>**)ThisPtr)[23](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval != 0;
        }

        internal static unsafe bool IsContentElementCore(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            byte __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, byte*, int>**)ThisPtr)[24](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval != 0;
        }

        internal static unsafe bool IsControlElementCore(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            byte __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, byte*, int>**)ThisPtr)[25](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval != 0;
        }

        internal static unsafe bool IsEnabledCore(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            byte __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, byte*, int>**)ThisPtr)[26](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval != 0;
        }

        internal static unsafe bool IsKeyboardFocusableCore(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            byte __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, byte*, int>**)ThisPtr)[27](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval != 0;
        }

        internal static unsafe bool IsOffscreenCore(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            byte __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, byte*, int>**)ThisPtr)[28](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval != 0;
        }

        internal static unsafe bool IsPasswordCore(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            byte __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, byte*, int>**)ThisPtr)[29](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval != 0;
        }

        internal static unsafe bool IsRequiredForFormCore(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            byte __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, byte*, int>**)ThisPtr)[30](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval != 0;
        }

        internal static unsafe void SetFocusCore(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, int>**)ThisPtr)[31](ThisPtr));
            global::System.GC.KeepAlive(_obj);
        }

        internal static unsafe global::Microsoft.UI.Xaml.Automation.Peers.AutomationPeer GetPeerFromPointCore(IObjectReference _obj, global::Windows.Foundation.Point point)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::Windows.Foundation.Point, IntPtr*, int>**)ThisPtr)[32](ThisPtr, point, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Xaml.Automation.Peers.AutomationPeer.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.UI.Xaml.Automation.Peers.AutomationPeer.DisposeAbi(__retval);
            }
        }

        internal static unsafe object GetElementFromPointCore(IObjectReference _obj, global::Windows.Foundation.Point pointInWindowCoordinates)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::Windows.Foundation.Point, IntPtr*, int>**)ThisPtr)[33](ThisPtr, pointInWindowCoordinates, &__retval));
                global::System.GC.KeepAlive(_obj);
                return MarshalInspectable<object>.FromAbi(__retval);
            }
            finally
            {
                MarshalInspectable<object>.DisposeAbi(__retval);
            }
        }

        internal static unsafe object GetFocusedElementCore(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[34](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return MarshalInspectable<object>.FromAbi(__retval);
            }
            finally
            {
                MarshalInspectable<object>.DisposeAbi(__retval);
            }
        }

        internal static unsafe global::Microsoft.UI.Xaml.Automation.Peers.AutomationLiveSetting GetLiveSettingCore(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::Microsoft.UI.Xaml.Automation.Peers.AutomationLiveSetting __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::Microsoft.UI.Xaml.Automation.Peers.AutomationLiveSetting*, int>**)ThisPtr)[35](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }

        internal static unsafe void ShowContextMenuCore(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, int>**)ThisPtr)[36](ThisPtr));
            global::System.GC.KeepAlive(_obj);
        }

        internal static unsafe global::System.Collections.Generic.IReadOnlyList<global::Microsoft.UI.Xaml.Automation.Peers.AutomationPeer> GetControlledPeersCore(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[37](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                _ = global::WinRT.GenericTypeInstantiations.Windows_Foundation_Collections_IVectorView_1_Microsoft_UI_Xaml_Automation_Peers_AutomationPeer.EnsureInitialized();
                return MarshalInterface<global::System.Collections.Generic.IReadOnlyList<global::Microsoft.UI.Xaml.Automation.Peers.AutomationPeer>>.FromAbi(__retval);
            }
            finally
            {
                MarshalInterface<global::System.Collections.Generic.IReadOnlyList<global::Microsoft.UI.Xaml.Automation.Peers.AutomationPeer>>.DisposeAbi(__retval);
            }
        }

        internal static unsafe global::System.Collections.Generic.IList<global::Microsoft.UI.Xaml.Automation.Peers.AutomationPeerAnnotation> GetAnnotationsCore(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[38](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                _ = global::WinRT.GenericTypeInstantiations.Windows_Foundation_Collections_IVector_1_Microsoft_UI_Xaml_Automation_Peers_AutomationPeerAnnotation.EnsureInitialized();
                return MarshalInterface<global::System.Collections.Generic.IList<global::Microsoft.UI.Xaml.Automation.Peers.AutomationPeerAnnotation>>.FromAbi(__retval);
            }
            finally
            {
                MarshalInterface<global::System.Collections.Generic.IList<global::Microsoft.UI.Xaml.Automation.Peers.AutomationPeerAnnotation>>.DisposeAbi(__retval);
            }
        }

        internal static unsafe int GetPositionInSetCore(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            int __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, int*, int>**)ThisPtr)[39](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }

        internal static unsafe int GetSizeOfSetCore(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            int __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, int*, int>**)ThisPtr)[40](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }

        internal static unsafe int GetLevelCore(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            int __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, int*, int>**)ThisPtr)[41](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }

        internal static unsafe global::Microsoft.UI.Xaml.Automation.Peers.AutomationLandmarkType GetLandmarkTypeCore(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::Microsoft.UI.Xaml.Automation.Peers.AutomationLandmarkType __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::Microsoft.UI.Xaml.Automation.Peers.AutomationLandmarkType*, int>**)ThisPtr)[42](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }

        internal static unsafe string GetLocalizedLandmarkTypeCore(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[43](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return MarshalString.FromAbi(__retval);
            }
            finally
            {
                MarshalString.DisposeAbi(__retval);
            }
        }

        internal static unsafe bool IsPeripheralCore(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            byte __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, byte*, int>**)ThisPtr)[44](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval != 0;
        }

        internal static unsafe bool IsDataValidForFormCore(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            byte __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, byte*, int>**)ThisPtr)[45](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval != 0;
        }

        internal static unsafe string GetFullDescriptionCore(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[46](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return MarshalString.FromAbi(__retval);
            }
            finally
            {
                MarshalString.DisposeAbi(__retval);
            }
        }

        internal static unsafe global::System.Collections.Generic.IEnumerable<global::Microsoft.UI.Xaml.Automation.Peers.AutomationPeer> GetDescribedByCore(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[47](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                _ = global::WinRT.GenericTypeInstantiations.Windows_Foundation_Collections_IIterable_1_Microsoft_UI_Xaml_Automation_Peers_AutomationPeer.EnsureInitialized();
                return MarshalInterface<global::System.Collections.Generic.IEnumerable<global::Microsoft.UI.Xaml.Automation.Peers.AutomationPeer>>.FromAbi(__retval);
            }
            finally
            {
                MarshalInterface<global::System.Collections.Generic.IEnumerable<global::Microsoft.UI.Xaml.Automation.Peers.AutomationPeer>>.DisposeAbi(__retval);
            }
        }

        internal static unsafe global::System.Collections.Generic.IEnumerable<global::Microsoft.UI.Xaml.Automation.Peers.AutomationPeer> GetFlowsToCore(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[48](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                _ = global::WinRT.GenericTypeInstantiations.Windows_Foundation_Collections_IIterable_1_Microsoft_UI_Xaml_Automation_Peers_AutomationPeer.EnsureInitialized();
                return MarshalInterface<global::System.Collections.Generic.IEnumerable<global::Microsoft.UI.Xaml.Automation.Peers.AutomationPeer>>.FromAbi(__retval);
            }
            finally
            {
                MarshalInterface<global::System.Collections.Generic.IEnumerable<global::Microsoft.UI.Xaml.Automation.Peers.AutomationPeer>>.DisposeAbi(__retval);
            }
        }

        internal static unsafe global::System.Collections.Generic.IEnumerable<global::Microsoft.UI.Xaml.Automation.Peers.AutomationPeer> GetFlowsFromCore(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[49](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                _ = global::WinRT.GenericTypeInstantiations.Windows_Foundation_Collections_IIterable_1_Microsoft_UI_Xaml_Automation_Peers_AutomationPeer.EnsureInitialized();
                return MarshalInterface<global::System.Collections.Generic.IEnumerable<global::Microsoft.UI.Xaml.Automation.Peers.AutomationPeer>>.FromAbi(__retval);
            }
            finally
            {
                MarshalInterface<global::System.Collections.Generic.IEnumerable<global::Microsoft.UI.Xaml.Automation.Peers.AutomationPeer>>.DisposeAbi(__retval);
            }
        }

        internal static unsafe int GetCultureCore(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            int __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, int*, int>**)ThisPtr)[50](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }

        internal static unsafe global::Microsoft.UI.Xaml.Automation.Peers.AutomationHeadingLevel GetHeadingLevelCore(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::Microsoft.UI.Xaml.Automation.Peers.AutomationHeadingLevel __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::Microsoft.UI.Xaml.Automation.Peers.AutomationHeadingLevel*, int>**)ThisPtr)[51](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }

        internal static unsafe bool IsDialogCore(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            byte __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, byte*, int>**)ThisPtr)[52](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval != 0;
        }


        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0xDF, 0xF6, 0xF8, 0x44, 0x60, 0x1B, 0x2D, 0x51, 0xA2, 0x95, 0xDD, 0x8C, 0x27, 0x6C, 0x46, 0x18 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

        public static global::System.IntPtr AbiToProjectionVftablePtr => IAutomationPeerOverrides.AbiToProjectionVftablePtr;

    }

    [Guid("44F8F6DF-1B60-512D-A295-DD8C276C4618")]
    internal unsafe interface IAutomationPeerOverrides : global::Microsoft.UI.Xaml.Automation.Peers.IAutomationPeerOverrides
    {

        public static readonly IntPtr AbiToProjectionVftablePtr;
        static unsafe IAutomationPeerOverrides()
        {
            AbiToProjectionVftablePtr = ComWrappersSupport.AllocateVtableMemory(typeof(IAutomationPeerOverrides), sizeof(IInspectable.Vftbl) + sizeof(IntPtr) * 47);
            *(IInspectable.Vftbl*)AbiToProjectionVftablePtr = IInspectable.Vftbl.AbiToProjectionVftable;
            ((delegate* unmanaged[Stdcall]<IntPtr, global::Microsoft.UI.Xaml.Automation.Peers.PatternInterface, IntPtr*, int>*)AbiToProjectionVftablePtr)[6] = &Do_Abi_GetPatternCore_0;
            ((delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>*)AbiToProjectionVftablePtr)[7] = &Do_Abi_GetAcceleratorKeyCore_1;
            ((delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>*)AbiToProjectionVftablePtr)[8] = &Do_Abi_GetAccessKeyCore_2;
            ((delegate* unmanaged[Stdcall]<IntPtr, global::Microsoft.UI.Xaml.Automation.Peers.AutomationControlType*, int>*)AbiToProjectionVftablePtr)[9] = &Do_Abi_GetAutomationControlTypeCore_3;
            ((delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>*)AbiToProjectionVftablePtr)[10] = &Do_Abi_GetAutomationIdCore_4;
            ((delegate* unmanaged[Stdcall]<IntPtr, global::Windows.Foundation.Rect*, int>*)AbiToProjectionVftablePtr)[11] = &Do_Abi_GetBoundingRectangleCore_5;
            ((delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>*)AbiToProjectionVftablePtr)[12] = &Do_Abi_GetChildrenCore_6;
            ((delegate* unmanaged[Stdcall]<IntPtr, global::Microsoft.UI.Xaml.Automation.Peers.AutomationNavigationDirection, IntPtr*, int>*)AbiToProjectionVftablePtr)[13] = &Do_Abi_NavigateCore_7;
            ((delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>*)AbiToProjectionVftablePtr)[14] = &Do_Abi_GetClassNameCore_8;
            ((delegate* unmanaged[Stdcall]<IntPtr, global::Windows.Foundation.Point*, int>*)AbiToProjectionVftablePtr)[15] = &Do_Abi_GetClickablePointCore_9;
            ((delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>*)AbiToProjectionVftablePtr)[16] = &Do_Abi_GetHelpTextCore_10;
            ((delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>*)AbiToProjectionVftablePtr)[17] = &Do_Abi_GetItemStatusCore_11;
            ((delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>*)AbiToProjectionVftablePtr)[18] = &Do_Abi_GetItemTypeCore_12;
            ((delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>*)AbiToProjectionVftablePtr)[19] = &Do_Abi_GetLabeledByCore_13;
            ((delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>*)AbiToProjectionVftablePtr)[20] = &Do_Abi_GetLocalizedControlTypeCore_14;
            ((delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>*)AbiToProjectionVftablePtr)[21] = &Do_Abi_GetNameCore_15;
            ((delegate* unmanaged[Stdcall]<IntPtr, global::Microsoft.UI.Xaml.Automation.Peers.AutomationOrientation*, int>*)AbiToProjectionVftablePtr)[22] = &Do_Abi_GetOrientationCore_16;
            ((delegate* unmanaged[Stdcall]<IntPtr, byte*, int>*)AbiToProjectionVftablePtr)[23] = &Do_Abi_HasKeyboardFocusCore_17;
            ((delegate* unmanaged[Stdcall]<IntPtr, byte*, int>*)AbiToProjectionVftablePtr)[24] = &Do_Abi_IsContentElementCore_18;
            ((delegate* unmanaged[Stdcall]<IntPtr, byte*, int>*)AbiToProjectionVftablePtr)[25] = &Do_Abi_IsControlElementCore_19;
            ((delegate* unmanaged[Stdcall]<IntPtr, byte*, int>*)AbiToProjectionVftablePtr)[26] = &Do_Abi_IsEnabledCore_20;
            ((delegate* unmanaged[Stdcall]<IntPtr, byte*, int>*)AbiToProjectionVftablePtr)[27] = &Do_Abi_IsKeyboardFocusableCore_21;
            ((delegate* unmanaged[Stdcall]<IntPtr, byte*, int>*)AbiToProjectionVftablePtr)[28] = &Do_Abi_IsOffscreenCore_22;
            ((delegate* unmanaged[Stdcall]<IntPtr, byte*, int>*)AbiToProjectionVftablePtr)[29] = &Do_Abi_IsPasswordCore_23;
            ((delegate* unmanaged[Stdcall]<IntPtr, byte*, int>*)AbiToProjectionVftablePtr)[30] = &Do_Abi_IsRequiredForFormCore_24;
            ((delegate* unmanaged[Stdcall]<IntPtr, int>*)AbiToProjectionVftablePtr)[31] = &Do_Abi_SetFocusCore_25;
            ((delegate* unmanaged[Stdcall]<IntPtr, global::Windows.Foundation.Point, IntPtr*, int>*)AbiToProjectionVftablePtr)[32] = &Do_Abi_GetPeerFromPointCore_26;
            ((delegate* unmanaged[Stdcall]<IntPtr, global::Windows.Foundation.Point, IntPtr*, int>*)AbiToProjectionVftablePtr)[33] = &Do_Abi_GetElementFromPointCore_27;
            ((delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>*)AbiToProjectionVftablePtr)[34] = &Do_Abi_GetFocusedElementCore_28;
            ((delegate* unmanaged[Stdcall]<IntPtr, global::Microsoft.UI.Xaml.Automation.Peers.AutomationLiveSetting*, int>*)AbiToProjectionVftablePtr)[35] = &Do_Abi_GetLiveSettingCore_29;
            ((delegate* unmanaged[Stdcall]<IntPtr, int>*)AbiToProjectionVftablePtr)[36] = &Do_Abi_ShowContextMenuCore_30;
            ((delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>*)AbiToProjectionVftablePtr)[37] = &Do_Abi_GetControlledPeersCore_31;
            ((delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>*)AbiToProjectionVftablePtr)[38] = &Do_Abi_GetAnnotationsCore_32;
            ((delegate* unmanaged[Stdcall]<IntPtr, int*, int>*)AbiToProjectionVftablePtr)[39] = &Do_Abi_GetPositionInSetCore_33;
            ((delegate* unmanaged[Stdcall]<IntPtr, int*, int>*)AbiToProjectionVftablePtr)[40] = &Do_Abi_GetSizeOfSetCore_34;
            ((delegate* unmanaged[Stdcall]<IntPtr, int*, int>*)AbiToProjectionVftablePtr)[41] = &Do_Abi_GetLevelCore_35;
            ((delegate* unmanaged[Stdcall]<IntPtr, global::Microsoft.UI.Xaml.Automation.Peers.AutomationLandmarkType*, int>*)AbiToProjectionVftablePtr)[42] = &Do_Abi_GetLandmarkTypeCore_36;
            ((delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>*)AbiToProjectionVftablePtr)[43] = &Do_Abi_GetLocalizedLandmarkTypeCore_37;
            ((delegate* unmanaged[Stdcall]<IntPtr, byte*, int>*)AbiToProjectionVftablePtr)[44] = &Do_Abi_IsPeripheralCore_38;
            ((delegate* unmanaged[Stdcall]<IntPtr, byte*, int>*)AbiToProjectionVftablePtr)[45] = &Do_Abi_IsDataValidForFormCore_39;
            ((delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>*)AbiToProjectionVftablePtr)[46] = &Do_Abi_GetFullDescriptionCore_40;
            ((delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>*)AbiToProjectionVftablePtr)[47] = &Do_Abi_GetDescribedByCore_41;
            ((delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>*)AbiToProjectionVftablePtr)[48] = &Do_Abi_GetFlowsToCore_42;
            ((delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>*)AbiToProjectionVftablePtr)[49] = &Do_Abi_GetFlowsFromCore_43;
            ((delegate* unmanaged[Stdcall]<IntPtr, int*, int>*)AbiToProjectionVftablePtr)[50] = &Do_Abi_GetCultureCore_44;
            ((delegate* unmanaged[Stdcall]<IntPtr, global::Microsoft.UI.Xaml.Automation.Peers.AutomationHeadingLevel*, int>*)AbiToProjectionVftablePtr)[51] = &Do_Abi_GetHeadingLevelCore_45;
            ((delegate* unmanaged[Stdcall]<IntPtr, byte*, int>*)AbiToProjectionVftablePtr)[52] = &Do_Abi_IsDialogCore_46;
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvStdcall) })]
        private static unsafe int Do_Abi_GetPatternCore_0(IntPtr thisPtr, global::Microsoft.UI.Xaml.Automation.Peers.PatternInterface patternInterface, IntPtr* result)
        {

            object __result = default;

            *result = default;

            try
            {
                __result = global::WinRT.ComWrappersSupport.FindObject<global::Microsoft.UI.Xaml.Automation.Peers.IAutomationPeerOverrides>(thisPtr).GetPatternCore(patternInterface);
                *result = MarshalInspectable<object>.FromManaged(__result);

            }
            catch (Exception __exception__)
            {
                global::WinRT.ExceptionHelpers.SetErrorInfo(__exception__);
                return global::WinRT.ExceptionHelpers.GetHRForException(__exception__);
            }
            return 0;
        }
        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvStdcall) })]
        private static unsafe int Do_Abi_GetAcceleratorKeyCore_1(IntPtr thisPtr, IntPtr* result)
        {

            string __result = default;

            *result = default;

            try
            {
                __result = global::WinRT.ComWrappersSupport.FindObject<global::Microsoft.UI.Xaml.Automation.Peers.IAutomationPeerOverrides>(thisPtr).GetAcceleratorKeyCore();
                *result = MarshalString.FromManaged(__result);

            }
            catch (Exception __exception__)
            {
                global::WinRT.ExceptionHelpers.SetErrorInfo(__exception__);
                return global::WinRT.ExceptionHelpers.GetHRForException(__exception__);
            }
            return 0;
        }
        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvStdcall) })]
        private static unsafe int Do_Abi_GetAccessKeyCore_2(IntPtr thisPtr, IntPtr* result)
        {

            string __result = default;

            *result = default;

            try
            {
                __result = global::WinRT.ComWrappersSupport.FindObject<global::Microsoft.UI.Xaml.Automation.Peers.IAutomationPeerOverrides>(thisPtr).GetAccessKeyCore();
                *result = MarshalString.FromManaged(__result);

            }
            catch (Exception __exception__)
            {
                global::WinRT.ExceptionHelpers.SetErrorInfo(__exception__);
                return global::WinRT.ExceptionHelpers.GetHRForException(__exception__);
            }
            return 0;
        }
        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvStdcall) })]
        private static unsafe int Do_Abi_GetAutomationControlTypeCore_3(IntPtr thisPtr, global::Microsoft.UI.Xaml.Automation.Peers.AutomationControlType* result)
        {

            global::Microsoft.UI.Xaml.Automation.Peers.AutomationControlType __result = default;

            *result = default;

            try
            {
                __result = global::WinRT.ComWrappersSupport.FindObject<global::Microsoft.UI.Xaml.Automation.Peers.IAutomationPeerOverrides>(thisPtr).GetAutomationControlTypeCore();
                *result = __result;

            }
            catch (Exception __exception__)
            {
                global::WinRT.ExceptionHelpers.SetErrorInfo(__exception__);
                return global::WinRT.ExceptionHelpers.GetHRForException(__exception__);
            }
            return 0;
        }
        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvStdcall) })]
        private static unsafe int Do_Abi_GetAutomationIdCore_4(IntPtr thisPtr, IntPtr* result)
        {

            string __result = default;

            *result = default;

            try
            {
                __result = global::WinRT.ComWrappersSupport.FindObject<global::Microsoft.UI.Xaml.Automation.Peers.IAutomationPeerOverrides>(thisPtr).GetAutomationIdCore();
                *result = MarshalString.FromManaged(__result);

            }
            catch (Exception __exception__)
            {
                global::WinRT.ExceptionHelpers.SetErrorInfo(__exception__);
                return global::WinRT.ExceptionHelpers.GetHRForException(__exception__);
            }
            return 0;
        }
        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvStdcall) })]
        private static unsafe int Do_Abi_GetBoundingRectangleCore_5(IntPtr thisPtr, global::Windows.Foundation.Rect* result)
        {

            global::Windows.Foundation.Rect __result = default;

            *result = default;

            try
            {
                __result = global::WinRT.ComWrappersSupport.FindObject<global::Microsoft.UI.Xaml.Automation.Peers.IAutomationPeerOverrides>(thisPtr).GetBoundingRectangleCore();
                *result = __result;

            }
            catch (Exception __exception__)
            {
                global::WinRT.ExceptionHelpers.SetErrorInfo(__exception__);
                return global::WinRT.ExceptionHelpers.GetHRForException(__exception__);
            }
            return 0;
        }
        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvStdcall) })]
        private static unsafe int Do_Abi_GetChildrenCore_6(IntPtr thisPtr, IntPtr* result)
        {
            _ = global::WinRT.GenericTypeInstantiations.Windows_Foundation_Collections_IVector_1_Microsoft_UI_Xaml_Automation_Peers_AutomationPeer.EnsureInitialized();

            global::System.Collections.Generic.IList<global::Microsoft.UI.Xaml.Automation.Peers.AutomationPeer> __result = default;

            *result = default;

            try
            {
                __result = global::WinRT.ComWrappersSupport.FindObject<global::Microsoft.UI.Xaml.Automation.Peers.IAutomationPeerOverrides>(thisPtr).GetChildrenCore();
                *result = MarshalInterface<global::System.Collections.Generic.IList<global::Microsoft.UI.Xaml.Automation.Peers.AutomationPeer>>.FromManaged(__result);

            }
            catch (Exception __exception__)
            {
                global::WinRT.ExceptionHelpers.SetErrorInfo(__exception__);
                return global::WinRT.ExceptionHelpers.GetHRForException(__exception__);
            }
            return 0;
        }
        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvStdcall) })]
        private static unsafe int Do_Abi_NavigateCore_7(IntPtr thisPtr, global::Microsoft.UI.Xaml.Automation.Peers.AutomationNavigationDirection direction, IntPtr* result)
        {

            object __result = default;

            *result = default;

            try
            {
                __result = global::WinRT.ComWrappersSupport.FindObject<global::Microsoft.UI.Xaml.Automation.Peers.IAutomationPeerOverrides>(thisPtr).NavigateCore(direction);
                *result = MarshalInspectable<object>.FromManaged(__result);

            }
            catch (Exception __exception__)
            {
                global::WinRT.ExceptionHelpers.SetErrorInfo(__exception__);
                return global::WinRT.ExceptionHelpers.GetHRForException(__exception__);
            }
            return 0;
        }
        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvStdcall) })]
        private static unsafe int Do_Abi_GetClassNameCore_8(IntPtr thisPtr, IntPtr* result)
        {

            string __result = default;

            *result = default;

            try
            {
                __result = global::WinRT.ComWrappersSupport.FindObject<global::Microsoft.UI.Xaml.Automation.Peers.IAutomationPeerOverrides>(thisPtr).GetClassNameCore();
                *result = MarshalString.FromManaged(__result);

            }
            catch (Exception __exception__)
            {
                global::WinRT.ExceptionHelpers.SetErrorInfo(__exception__);
                return global::WinRT.ExceptionHelpers.GetHRForException(__exception__);
            }
            return 0;
        }
        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvStdcall) })]
        private static unsafe int Do_Abi_GetClickablePointCore_9(IntPtr thisPtr, global::Windows.Foundation.Point* result)
        {

            global::Windows.Foundation.Point __result = default;

            *result = default;

            try
            {
                __result = global::WinRT.ComWrappersSupport.FindObject<global::Microsoft.UI.Xaml.Automation.Peers.IAutomationPeerOverrides>(thisPtr).GetClickablePointCore();
                *result = __result;

            }
            catch (Exception __exception__)
            {
                global::WinRT.ExceptionHelpers.SetErrorInfo(__exception__);
                return global::WinRT.ExceptionHelpers.GetHRForException(__exception__);
            }
            return 0;
        }
        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvStdcall) })]
        private static unsafe int Do_Abi_GetHelpTextCore_10(IntPtr thisPtr, IntPtr* result)
        {

            string __result = default;

            *result = default;

            try
            {
                __result = global::WinRT.ComWrappersSupport.FindObject<global::Microsoft.UI.Xaml.Automation.Peers.IAutomationPeerOverrides>(thisPtr).GetHelpTextCore();
                *result = MarshalString.FromManaged(__result);

            }
            catch (Exception __exception__)
            {
                global::WinRT.ExceptionHelpers.SetErrorInfo(__exception__);
                return global::WinRT.ExceptionHelpers.GetHRForException(__exception__);
            }
            return 0;
        }
        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvStdcall) })]
        private static unsafe int Do_Abi_GetItemStatusCore_11(IntPtr thisPtr, IntPtr* result)
        {

            string __result = default;

            *result = default;

            try
            {
                __result = global::WinRT.ComWrappersSupport.FindObject<global::Microsoft.UI.Xaml.Automation.Peers.IAutomationPeerOverrides>(thisPtr).GetItemStatusCore();
                *result = MarshalString.FromManaged(__result);

            }
            catch (Exception __exception__)
            {
                global::WinRT.ExceptionHelpers.SetErrorInfo(__exception__);
                return global::WinRT.ExceptionHelpers.GetHRForException(__exception__);
            }
            return 0;
        }
        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvStdcall) })]
        private static unsafe int Do_Abi_GetItemTypeCore_12(IntPtr thisPtr, IntPtr* result)
        {

            string __result = default;

            *result = default;

            try
            {
                __result = global::WinRT.ComWrappersSupport.FindObject<global::Microsoft.UI.Xaml.Automation.Peers.IAutomationPeerOverrides>(thisPtr).GetItemTypeCore();
                *result = MarshalString.FromManaged(__result);

            }
            catch (Exception __exception__)
            {
                global::WinRT.ExceptionHelpers.SetErrorInfo(__exception__);
                return global::WinRT.ExceptionHelpers.GetHRForException(__exception__);
            }
            return 0;
        }
        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvStdcall) })]
        private static unsafe int Do_Abi_GetLabeledByCore_13(IntPtr thisPtr, IntPtr* result)
        {

            global::Microsoft.UI.Xaml.Automation.Peers.AutomationPeer __result = default;

            *result = default;

            try
            {
                __result = global::WinRT.ComWrappersSupport.FindObject<global::Microsoft.UI.Xaml.Automation.Peers.IAutomationPeerOverrides>(thisPtr).GetLabeledByCore();
                *result = global::ABI.Microsoft.UI.Xaml.Automation.Peers.AutomationPeer.FromManaged(__result);

            }
            catch (Exception __exception__)
            {
                global::WinRT.ExceptionHelpers.SetErrorInfo(__exception__);
                return global::WinRT.ExceptionHelpers.GetHRForException(__exception__);
            }
            return 0;
        }
        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvStdcall) })]
        private static unsafe int Do_Abi_GetLocalizedControlTypeCore_14(IntPtr thisPtr, IntPtr* result)
        {

            string __result = default;

            *result = default;

            try
            {
                __result = global::WinRT.ComWrappersSupport.FindObject<global::Microsoft.UI.Xaml.Automation.Peers.IAutomationPeerOverrides>(thisPtr).GetLocalizedControlTypeCore();
                *result = MarshalString.FromManaged(__result);

            }
            catch (Exception __exception__)
            {
                global::WinRT.ExceptionHelpers.SetErrorInfo(__exception__);
                return global::WinRT.ExceptionHelpers.GetHRForException(__exception__);
            }
            return 0;
        }
        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvStdcall) })]
        private static unsafe int Do_Abi_GetNameCore_15(IntPtr thisPtr, IntPtr* result)
        {

            string __result = default;

            *result = default;

            try
            {
                __result = global::WinRT.ComWrappersSupport.FindObject<global::Microsoft.UI.Xaml.Automation.Peers.IAutomationPeerOverrides>(thisPtr).GetNameCore();
                *result = MarshalString.FromManaged(__result);

            }
            catch (Exception __exception__)
            {
                global::WinRT.ExceptionHelpers.SetErrorInfo(__exception__);
                return global::WinRT.ExceptionHelpers.GetHRForException(__exception__);
            }
            return 0;
        }
        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvStdcall) })]
        private static unsafe int Do_Abi_GetOrientationCore_16(IntPtr thisPtr, global::Microsoft.UI.Xaml.Automation.Peers.AutomationOrientation* result)
        {

            global::Microsoft.UI.Xaml.Automation.Peers.AutomationOrientation __result = default;

            *result = default;

            try
            {
                __result = global::WinRT.ComWrappersSupport.FindObject<global::Microsoft.UI.Xaml.Automation.Peers.IAutomationPeerOverrides>(thisPtr).GetOrientationCore();
                *result = __result;

            }
            catch (Exception __exception__)
            {
                global::WinRT.ExceptionHelpers.SetErrorInfo(__exception__);
                return global::WinRT.ExceptionHelpers.GetHRForException(__exception__);
            }
            return 0;
        }
        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvStdcall) })]
        private static unsafe int Do_Abi_HasKeyboardFocusCore_17(IntPtr thisPtr, byte* result)
        {

            bool __result = default;

            *result = default;

            try
            {
                __result = global::WinRT.ComWrappersSupport.FindObject<global::Microsoft.UI.Xaml.Automation.Peers.IAutomationPeerOverrides>(thisPtr).HasKeyboardFocusCore();
                *result = (byte)(__result ? 1 : 0);

            }
            catch (Exception __exception__)
            {
                global::WinRT.ExceptionHelpers.SetErrorInfo(__exception__);
                return global::WinRT.ExceptionHelpers.GetHRForException(__exception__);
            }
            return 0;
        }
        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvStdcall) })]
        private static unsafe int Do_Abi_IsContentElementCore_18(IntPtr thisPtr, byte* result)
        {

            bool __result = default;

            *result = default;

            try
            {
                __result = global::WinRT.ComWrappersSupport.FindObject<global::Microsoft.UI.Xaml.Automation.Peers.IAutomationPeerOverrides>(thisPtr).IsContentElementCore();
                *result = (byte)(__result ? 1 : 0);

            }
            catch (Exception __exception__)
            {
                global::WinRT.ExceptionHelpers.SetErrorInfo(__exception__);
                return global::WinRT.ExceptionHelpers.GetHRForException(__exception__);
            }
            return 0;
        }
        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvStdcall) })]
        private static unsafe int Do_Abi_IsControlElementCore_19(IntPtr thisPtr, byte* result)
        {

            bool __result = default;

            *result = default;

            try
            {
                __result = global::WinRT.ComWrappersSupport.FindObject<global::Microsoft.UI.Xaml.Automation.Peers.IAutomationPeerOverrides>(thisPtr).IsControlElementCore();
                *result = (byte)(__result ? 1 : 0);

            }
            catch (Exception __exception__)
            {
                global::WinRT.ExceptionHelpers.SetErrorInfo(__exception__);
                return global::WinRT.ExceptionHelpers.GetHRForException(__exception__);
            }
            return 0;
        }
        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvStdcall) })]
        private static unsafe int Do_Abi_IsEnabledCore_20(IntPtr thisPtr, byte* result)
        {

            bool __result = default;

            *result = default;

            try
            {
                __result = global::WinRT.ComWrappersSupport.FindObject<global::Microsoft.UI.Xaml.Automation.Peers.IAutomationPeerOverrides>(thisPtr).IsEnabledCore();
                *result = (byte)(__result ? 1 : 0);

            }
            catch (Exception __exception__)
            {
                global::WinRT.ExceptionHelpers.SetErrorInfo(__exception__);
                return global::WinRT.ExceptionHelpers.GetHRForException(__exception__);
            }
            return 0;
        }
        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvStdcall) })]
        private static unsafe int Do_Abi_IsKeyboardFocusableCore_21(IntPtr thisPtr, byte* result)
        {

            bool __result = default;

            *result = default;

            try
            {
                __result = global::WinRT.ComWrappersSupport.FindObject<global::Microsoft.UI.Xaml.Automation.Peers.IAutomationPeerOverrides>(thisPtr).IsKeyboardFocusableCore();
                *result = (byte)(__result ? 1 : 0);

            }
            catch (Exception __exception__)
            {
                global::WinRT.ExceptionHelpers.SetErrorInfo(__exception__);
                return global::WinRT.ExceptionHelpers.GetHRForException(__exception__);
            }
            return 0;
        }
        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvStdcall) })]
        private static unsafe int Do_Abi_IsOffscreenCore_22(IntPtr thisPtr, byte* result)
        {

            bool __result = default;

            *result = default;

            try
            {
                __result = global::WinRT.ComWrappersSupport.FindObject<global::Microsoft.UI.Xaml.Automation.Peers.IAutomationPeerOverrides>(thisPtr).IsOffscreenCore();
                *result = (byte)(__result ? 1 : 0);

            }
            catch (Exception __exception__)
            {
                global::WinRT.ExceptionHelpers.SetErrorInfo(__exception__);
                return global::WinRT.ExceptionHelpers.GetHRForException(__exception__);
            }
            return 0;
        }
        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvStdcall) })]
        private static unsafe int Do_Abi_IsPasswordCore_23(IntPtr thisPtr, byte* result)
        {

            bool __result = default;

            *result = default;

            try
            {
                __result = global::WinRT.ComWrappersSupport.FindObject<global::Microsoft.UI.Xaml.Automation.Peers.IAutomationPeerOverrides>(thisPtr).IsPasswordCore();
                *result = (byte)(__result ? 1 : 0);

            }
            catch (Exception __exception__)
            {
                global::WinRT.ExceptionHelpers.SetErrorInfo(__exception__);
                return global::WinRT.ExceptionHelpers.GetHRForException(__exception__);
            }
            return 0;
        }
        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvStdcall) })]
        private static unsafe int Do_Abi_IsRequiredForFormCore_24(IntPtr thisPtr, byte* result)
        {

            bool __result = default;

            *result = default;

            try
            {
                __result = global::WinRT.ComWrappersSupport.FindObject<global::Microsoft.UI.Xaml.Automation.Peers.IAutomationPeerOverrides>(thisPtr).IsRequiredForFormCore();
                *result = (byte)(__result ? 1 : 0);

            }
            catch (Exception __exception__)
            {
                global::WinRT.ExceptionHelpers.SetErrorInfo(__exception__);
                return global::WinRT.ExceptionHelpers.GetHRForException(__exception__);
            }
            return 0;
        }
        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvStdcall) })]
        private static unsafe int Do_Abi_SetFocusCore_25(IntPtr thisPtr)
        {



            try
            {
                global::WinRT.ComWrappersSupport.FindObject<global::Microsoft.UI.Xaml.Automation.Peers.IAutomationPeerOverrides>(thisPtr).SetFocusCore();

            }
            catch (Exception __exception__)
            {
                global::WinRT.ExceptionHelpers.SetErrorInfo(__exception__);
                return global::WinRT.ExceptionHelpers.GetHRForException(__exception__);
            }
            return 0;
        }
        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvStdcall) })]
        private static unsafe int Do_Abi_GetPeerFromPointCore_26(IntPtr thisPtr, global::Windows.Foundation.Point point, IntPtr* result)
        {

            global::Microsoft.UI.Xaml.Automation.Peers.AutomationPeer __result = default;

            *result = default;

            try
            {
                __result = global::WinRT.ComWrappersSupport.FindObject<global::Microsoft.UI.Xaml.Automation.Peers.IAutomationPeerOverrides>(thisPtr).GetPeerFromPointCore(point);
                *result = global::ABI.Microsoft.UI.Xaml.Automation.Peers.AutomationPeer.FromManaged(__result);

            }
            catch (Exception __exception__)
            {
                global::WinRT.ExceptionHelpers.SetErrorInfo(__exception__);
                return global::WinRT.ExceptionHelpers.GetHRForException(__exception__);
            }
            return 0;
        }
        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvStdcall) })]
        private static unsafe int Do_Abi_GetElementFromPointCore_27(IntPtr thisPtr, global::Windows.Foundation.Point pointInWindowCoordinates, IntPtr* result)
        {

            object __result = default;

            *result = default;

            try
            {
                __result = global::WinRT.ComWrappersSupport.FindObject<global::Microsoft.UI.Xaml.Automation.Peers.IAutomationPeerOverrides>(thisPtr).GetElementFromPointCore(pointInWindowCoordinates);
                *result = MarshalInspectable<object>.FromManaged(__result);

            }
            catch (Exception __exception__)
            {
                global::WinRT.ExceptionHelpers.SetErrorInfo(__exception__);
                return global::WinRT.ExceptionHelpers.GetHRForException(__exception__);
            }
            return 0;
        }
        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvStdcall) })]
        private static unsafe int Do_Abi_GetFocusedElementCore_28(IntPtr thisPtr, IntPtr* result)
        {

            object __result = default;

            *result = default;

            try
            {
                __result = global::WinRT.ComWrappersSupport.FindObject<global::Microsoft.UI.Xaml.Automation.Peers.IAutomationPeerOverrides>(thisPtr).GetFocusedElementCore();
                *result = MarshalInspectable<object>.FromManaged(__result);

            }
            catch (Exception __exception__)
            {
                global::WinRT.ExceptionHelpers.SetErrorInfo(__exception__);
                return global::WinRT.ExceptionHelpers.GetHRForException(__exception__);
            }
            return 0;
        }
        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvStdcall) })]
        private static unsafe int Do_Abi_GetLiveSettingCore_29(IntPtr thisPtr, global::Microsoft.UI.Xaml.Automation.Peers.AutomationLiveSetting* result)
        {

            global::Microsoft.UI.Xaml.Automation.Peers.AutomationLiveSetting __result = default;

            *result = default;

            try
            {
                __result = global::WinRT.ComWrappersSupport.FindObject<global::Microsoft.UI.Xaml.Automation.Peers.IAutomationPeerOverrides>(thisPtr).GetLiveSettingCore();
                *result = __result;

            }
            catch (Exception __exception__)
            {
                global::WinRT.ExceptionHelpers.SetErrorInfo(__exception__);
                return global::WinRT.ExceptionHelpers.GetHRForException(__exception__);
            }
            return 0;
        }
        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvStdcall) })]
        private static unsafe int Do_Abi_ShowContextMenuCore_30(IntPtr thisPtr)
        {



            try
            {
                global::WinRT.ComWrappersSupport.FindObject<global::Microsoft.UI.Xaml.Automation.Peers.IAutomationPeerOverrides>(thisPtr).ShowContextMenuCore();

            }
            catch (Exception __exception__)
            {
                global::WinRT.ExceptionHelpers.SetErrorInfo(__exception__);
                return global::WinRT.ExceptionHelpers.GetHRForException(__exception__);
            }
            return 0;
        }
        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvStdcall) })]
        private static unsafe int Do_Abi_GetControlledPeersCore_31(IntPtr thisPtr, IntPtr* result)
        {
            _ = global::WinRT.GenericTypeInstantiations.Windows_Foundation_Collections_IVectorView_1_Microsoft_UI_Xaml_Automation_Peers_AutomationPeer.EnsureInitialized();

            global::System.Collections.Generic.IReadOnlyList<global::Microsoft.UI.Xaml.Automation.Peers.AutomationPeer> __result = default;

            *result = default;

            try
            {
                __result = global::WinRT.ComWrappersSupport.FindObject<global::Microsoft.UI.Xaml.Automation.Peers.IAutomationPeerOverrides>(thisPtr).GetControlledPeersCore();
                *result = MarshalInterface<global::System.Collections.Generic.IReadOnlyList<global::Microsoft.UI.Xaml.Automation.Peers.AutomationPeer>>.FromManaged(__result);

            }
            catch (Exception __exception__)
            {
                global::WinRT.ExceptionHelpers.SetErrorInfo(__exception__);
                return global::WinRT.ExceptionHelpers.GetHRForException(__exception__);
            }
            return 0;
        }
        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvStdcall) })]
        private static unsafe int Do_Abi_GetAnnotationsCore_32(IntPtr thisPtr, IntPtr* result)
        {
            _ = global::WinRT.GenericTypeInstantiations.Windows_Foundation_Collections_IVector_1_Microsoft_UI_Xaml_Automation_Peers_AutomationPeerAnnotation.EnsureInitialized();

            global::System.Collections.Generic.IList<global::Microsoft.UI.Xaml.Automation.Peers.AutomationPeerAnnotation> __result = default;

            *result = default;

            try
            {
                __result = global::WinRT.ComWrappersSupport.FindObject<global::Microsoft.UI.Xaml.Automation.Peers.IAutomationPeerOverrides>(thisPtr).GetAnnotationsCore();
                *result = MarshalInterface<global::System.Collections.Generic.IList<global::Microsoft.UI.Xaml.Automation.Peers.AutomationPeerAnnotation>>.FromManaged(__result);

            }
            catch (Exception __exception__)
            {
                global::WinRT.ExceptionHelpers.SetErrorInfo(__exception__);
                return global::WinRT.ExceptionHelpers.GetHRForException(__exception__);
            }
            return 0;
        }
        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvStdcall) })]
        private static unsafe int Do_Abi_GetPositionInSetCore_33(IntPtr thisPtr, int* result)
        {

            int __result = default;

            *result = default;

            try
            {
                __result = global::WinRT.ComWrappersSupport.FindObject<global::Microsoft.UI.Xaml.Automation.Peers.IAutomationPeerOverrides>(thisPtr).GetPositionInSetCore();
                *result = __result;

            }
            catch (Exception __exception__)
            {
                global::WinRT.ExceptionHelpers.SetErrorInfo(__exception__);
                return global::WinRT.ExceptionHelpers.GetHRForException(__exception__);
            }
            return 0;
        }
        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvStdcall) })]
        private static unsafe int Do_Abi_GetSizeOfSetCore_34(IntPtr thisPtr, int* result)
        {

            int __result = default;

            *result = default;

            try
            {
                __result = global::WinRT.ComWrappersSupport.FindObject<global::Microsoft.UI.Xaml.Automation.Peers.IAutomationPeerOverrides>(thisPtr).GetSizeOfSetCore();
                *result = __result;

            }
            catch (Exception __exception__)
            {
                global::WinRT.ExceptionHelpers.SetErrorInfo(__exception__);
                return global::WinRT.ExceptionHelpers.GetHRForException(__exception__);
            }
            return 0;
        }
        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvStdcall) })]
        private static unsafe int Do_Abi_GetLevelCore_35(IntPtr thisPtr, int* result)
        {

            int __result = default;

            *result = default;

            try
            {
                __result = global::WinRT.ComWrappersSupport.FindObject<global::Microsoft.UI.Xaml.Automation.Peers.IAutomationPeerOverrides>(thisPtr).GetLevelCore();
                *result = __result;

            }
            catch (Exception __exception__)
            {
                global::WinRT.ExceptionHelpers.SetErrorInfo(__exception__);
                return global::WinRT.ExceptionHelpers.GetHRForException(__exception__);
            }
            return 0;
        }
        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvStdcall) })]
        private static unsafe int Do_Abi_GetLandmarkTypeCore_36(IntPtr thisPtr, global::Microsoft.UI.Xaml.Automation.Peers.AutomationLandmarkType* result)
        {

            global::Microsoft.UI.Xaml.Automation.Peers.AutomationLandmarkType __result = default;

            *result = default;

            try
            {
                __result = global::WinRT.ComWrappersSupport.FindObject<global::Microsoft.UI.Xaml.Automation.Peers.IAutomationPeerOverrides>(thisPtr).GetLandmarkTypeCore();
                *result = __result;

            }
            catch (Exception __exception__)
            {
                global::WinRT.ExceptionHelpers.SetErrorInfo(__exception__);
                return global::WinRT.ExceptionHelpers.GetHRForException(__exception__);
            }
            return 0;
        }
        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvStdcall) })]
        private static unsafe int Do_Abi_GetLocalizedLandmarkTypeCore_37(IntPtr thisPtr, IntPtr* result)
        {

            string __result = default;

            *result = default;

            try
            {
                __result = global::WinRT.ComWrappersSupport.FindObject<global::Microsoft.UI.Xaml.Automation.Peers.IAutomationPeerOverrides>(thisPtr).GetLocalizedLandmarkTypeCore();
                *result = MarshalString.FromManaged(__result);

            }
            catch (Exception __exception__)
            {
                global::WinRT.ExceptionHelpers.SetErrorInfo(__exception__);
                return global::WinRT.ExceptionHelpers.GetHRForException(__exception__);
            }
            return 0;
        }
        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvStdcall) })]
        private static unsafe int Do_Abi_IsPeripheralCore_38(IntPtr thisPtr, byte* result)
        {

            bool __result = default;

            *result = default;

            try
            {
                __result = global::WinRT.ComWrappersSupport.FindObject<global::Microsoft.UI.Xaml.Automation.Peers.IAutomationPeerOverrides>(thisPtr).IsPeripheralCore();
                *result = (byte)(__result ? 1 : 0);

            }
            catch (Exception __exception__)
            {
                global::WinRT.ExceptionHelpers.SetErrorInfo(__exception__);
                return global::WinRT.ExceptionHelpers.GetHRForException(__exception__);
            }
            return 0;
        }
        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvStdcall) })]
        private static unsafe int Do_Abi_IsDataValidForFormCore_39(IntPtr thisPtr, byte* result)
        {

            bool __result = default;

            *result = default;

            try
            {
                __result = global::WinRT.ComWrappersSupport.FindObject<global::Microsoft.UI.Xaml.Automation.Peers.IAutomationPeerOverrides>(thisPtr).IsDataValidForFormCore();
                *result = (byte)(__result ? 1 : 0);

            }
            catch (Exception __exception__)
            {
                global::WinRT.ExceptionHelpers.SetErrorInfo(__exception__);
                return global::WinRT.ExceptionHelpers.GetHRForException(__exception__);
            }
            return 0;
        }
        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvStdcall) })]
        private static unsafe int Do_Abi_GetFullDescriptionCore_40(IntPtr thisPtr, IntPtr* result)
        {

            string __result = default;

            *result = default;

            try
            {
                __result = global::WinRT.ComWrappersSupport.FindObject<global::Microsoft.UI.Xaml.Automation.Peers.IAutomationPeerOverrides>(thisPtr).GetFullDescriptionCore();
                *result = MarshalString.FromManaged(__result);

            }
            catch (Exception __exception__)
            {
                global::WinRT.ExceptionHelpers.SetErrorInfo(__exception__);
                return global::WinRT.ExceptionHelpers.GetHRForException(__exception__);
            }
            return 0;
        }
        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvStdcall) })]
        private static unsafe int Do_Abi_GetDescribedByCore_41(IntPtr thisPtr, IntPtr* result)
        {
            _ = global::WinRT.GenericTypeInstantiations.Windows_Foundation_Collections_IIterable_1_Microsoft_UI_Xaml_Automation_Peers_AutomationPeer.EnsureInitialized();

            global::System.Collections.Generic.IEnumerable<global::Microsoft.UI.Xaml.Automation.Peers.AutomationPeer> __result = default;

            *result = default;

            try
            {
                __result = global::WinRT.ComWrappersSupport.FindObject<global::Microsoft.UI.Xaml.Automation.Peers.IAutomationPeerOverrides>(thisPtr).GetDescribedByCore();
                *result = MarshalInterface<global::System.Collections.Generic.IEnumerable<global::Microsoft.UI.Xaml.Automation.Peers.AutomationPeer>>.FromManaged(__result);

            }
            catch (Exception __exception__)
            {
                global::WinRT.ExceptionHelpers.SetErrorInfo(__exception__);
                return global::WinRT.ExceptionHelpers.GetHRForException(__exception__);
            }
            return 0;
        }
        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvStdcall) })]
        private static unsafe int Do_Abi_GetFlowsToCore_42(IntPtr thisPtr, IntPtr* result)
        {
            _ = global::WinRT.GenericTypeInstantiations.Windows_Foundation_Collections_IIterable_1_Microsoft_UI_Xaml_Automation_Peers_AutomationPeer.EnsureInitialized();

            global::System.Collections.Generic.IEnumerable<global::Microsoft.UI.Xaml.Automation.Peers.AutomationPeer> __result = default;

            *result = default;

            try
            {
                __result = global::WinRT.ComWrappersSupport.FindObject<global::Microsoft.UI.Xaml.Automation.Peers.IAutomationPeerOverrides>(thisPtr).GetFlowsToCore();
                *result = MarshalInterface<global::System.Collections.Generic.IEnumerable<global::Microsoft.UI.Xaml.Automation.Peers.AutomationPeer>>.FromManaged(__result);

            }
            catch (Exception __exception__)
            {
                global::WinRT.ExceptionHelpers.SetErrorInfo(__exception__);
                return global::WinRT.ExceptionHelpers.GetHRForException(__exception__);
            }
            return 0;
        }
        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvStdcall) })]
        private static unsafe int Do_Abi_GetFlowsFromCore_43(IntPtr thisPtr, IntPtr* result)
        {
            _ = global::WinRT.GenericTypeInstantiations.Windows_Foundation_Collections_IIterable_1_Microsoft_UI_Xaml_Automation_Peers_AutomationPeer.EnsureInitialized();

            global::System.Collections.Generic.IEnumerable<global::Microsoft.UI.Xaml.Automation.Peers.AutomationPeer> __result = default;

            *result = default;

            try
            {
                __result = global::WinRT.ComWrappersSupport.FindObject<global::Microsoft.UI.Xaml.Automation.Peers.IAutomationPeerOverrides>(thisPtr).GetFlowsFromCore();
                *result = MarshalInterface<global::System.Collections.Generic.IEnumerable<global::Microsoft.UI.Xaml.Automation.Peers.AutomationPeer>>.FromManaged(__result);

            }
            catch (Exception __exception__)
            {
                global::WinRT.ExceptionHelpers.SetErrorInfo(__exception__);
                return global::WinRT.ExceptionHelpers.GetHRForException(__exception__);
            }
            return 0;
        }
        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvStdcall) })]
        private static unsafe int Do_Abi_GetCultureCore_44(IntPtr thisPtr, int* result)
        {

            int __result = default;

            *result = default;

            try
            {
                __result = global::WinRT.ComWrappersSupport.FindObject<global::Microsoft.UI.Xaml.Automation.Peers.IAutomationPeerOverrides>(thisPtr).GetCultureCore();
                *result = __result;

            }
            catch (Exception __exception__)
            {
                global::WinRT.ExceptionHelpers.SetErrorInfo(__exception__);
                return global::WinRT.ExceptionHelpers.GetHRForException(__exception__);
            }
            return 0;
        }
        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvStdcall) })]
        private static unsafe int Do_Abi_GetHeadingLevelCore_45(IntPtr thisPtr, global::Microsoft.UI.Xaml.Automation.Peers.AutomationHeadingLevel* result)
        {

            global::Microsoft.UI.Xaml.Automation.Peers.AutomationHeadingLevel __result = default;

            *result = default;

            try
            {
                __result = global::WinRT.ComWrappersSupport.FindObject<global::Microsoft.UI.Xaml.Automation.Peers.IAutomationPeerOverrides>(thisPtr).GetHeadingLevelCore();
                *result = __result;

            }
            catch (Exception __exception__)
            {
                global::WinRT.ExceptionHelpers.SetErrorInfo(__exception__);
                return global::WinRT.ExceptionHelpers.GetHRForException(__exception__);
            }
            return 0;
        }
        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvStdcall) })]
        private static unsafe int Do_Abi_IsDialogCore_46(IntPtr thisPtr, byte* result)
        {

            bool __result = default;

            *result = default;

            try
            {
                __result = global::WinRT.ComWrappersSupport.FindObject<global::Microsoft.UI.Xaml.Automation.Peers.IAutomationPeerOverrides>(thisPtr).IsDialogCore();
                *result = (byte)(__result ? 1 : 0);

            }
            catch (Exception __exception__)
            {
                global::WinRT.ExceptionHelpers.SetErrorInfo(__exception__);
                return global::WinRT.ExceptionHelpers.GetHRForException(__exception__);
            }
            return 0;
        }
    }

    internal static class IAutomationPeerProtectedMethods
    {


        internal static unsafe global::Microsoft.UI.Xaml.Automation.Peers.AutomationPeer PeerFromProvider(IObjectReference _obj, global::Microsoft.UI.Xaml.Automation.Provider.IRawElementProviderSimple provider)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __provider = default;
            IntPtr __retval = default;
            try
            {
                __provider = global::ABI.Microsoft.UI.Xaml.Automation.Provider.IRawElementProviderSimple.CreateMarshaler2(provider);
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, IntPtr*, int>**)ThisPtr)[6](ThisPtr, MarshalInspectable<object>.GetAbi(__provider), &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Xaml.Automation.Peers.AutomationPeer.FromAbi(__retval);
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__provider);
                global::ABI.Microsoft.UI.Xaml.Automation.Peers.AutomationPeer.DisposeAbi(__retval);
            }
        }

        internal static unsafe global::Microsoft.UI.Xaml.Automation.Provider.IRawElementProviderSimple ProviderFromPeer(IObjectReference _obj, global::Microsoft.UI.Xaml.Automation.Peers.AutomationPeer peer)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __peer = default;
            IntPtr __retval = default;
            try
            {
                __peer = global::ABI.Microsoft.UI.Xaml.Automation.Peers.AutomationPeer.CreateMarshaler2(peer);
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, IntPtr*, int>**)ThisPtr)[7](ThisPtr, MarshalInspectable<object>.GetAbi(__peer), &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Xaml.Automation.Provider.IRawElementProviderSimple.FromAbi(__retval);
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__peer);
                global::ABI.Microsoft.UI.Xaml.Automation.Provider.IRawElementProviderSimple.DisposeAbi(__retval);
            }
        }


        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0xC3, 0xB2, 0x63, 0x96, 0x1F, 0x8C, 0xD4, 0x56, 0xAB, 0xD9, 0x26, 0x80, 0x82, 0xA9, 0xE8, 0xBC };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("9663B2C3-8C1F-56D4-ABD9-268082A9E8BC")]
    internal interface IAutomationPeerProtected : global::Microsoft.UI.Xaml.Automation.Peers.IAutomationPeerProtected
    {
    }
    internal static class IAutomationPeerStaticsMethods
    {


        internal static unsafe bool ListenerExists(IObjectReference _obj, global::Microsoft.UI.Xaml.Automation.Peers.AutomationEvents eventId)
        {
            var ThisPtr = _obj.ThisPtr;

            byte __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::Microsoft.UI.Xaml.Automation.Peers.AutomationEvents, byte*, int>**)ThisPtr)[6](ThisPtr, eventId, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval != 0;
        }

        internal static unsafe global::Microsoft.UI.Xaml.Automation.Peers.RawElementProviderRuntimeId GenerateRawElementProviderRuntimeId(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::Microsoft.UI.Xaml.Automation.Peers.RawElementProviderRuntimeId __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::Microsoft.UI.Xaml.Automation.Peers.RawElementProviderRuntimeId*, int>**)ThisPtr)[7](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }


        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0xFF, 0x57, 0xB1, 0x90, 0xD5, 0x18, 0x23, 0x56, 0x85, 0xC, 0x61, 0x2C, 0xEA, 0xE5, 0x76, 0xBD };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("90B157FF-18D5-5623-850C-612CEAE576BD")]
    internal interface IAutomationPeerStatics : global::Microsoft.UI.Xaml.Automation.Peers.IAutomationPeerStatics
    {
    }
    internal static class IBreadcrumbBarItemAutomationPeerMethods
    {



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0x12, 0x16, 0xE8, 0x48, 0xE0, 0x7D, 0x65, 0x50, 0xB8, 0x81, 0x4, 0xEB, 0xFF, 0xF9, 0x4, 0x97 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("48E81612-7DE0-5065-B881-04EBFFF90497")]
    internal interface IBreadcrumbBarItemAutomationPeer : global::Microsoft.UI.Xaml.Automation.Peers.IBreadcrumbBarItemAutomationPeer
    {
    }
    internal static class IBreadcrumbBarItemAutomationPeerFactoryMethods
    {


        internal static unsafe global::Microsoft.UI.Xaml.Automation.Peers.BreadcrumbBarItemAutomationPeer CreateInstance(IObjectReference _obj, global::Microsoft.UI.Xaml.Controls.BreadcrumbBarItem owner, object baseInterface, out object innerInterface)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __owner = default;
            ObjectReferenceValue __baseInterface = default;
            IntPtr __innerInterface = default;
            IntPtr __retval = default;
            try
            {
                __owner = global::ABI.Microsoft.UI.Xaml.Controls.BreadcrumbBarItem.CreateMarshaler2(owner);
                __baseInterface = MarshalInspectable<object>.CreateMarshaler2(baseInterface);
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, IntPtr, IntPtr*, IntPtr*, int>**)ThisPtr)[6](ThisPtr, MarshalInspectable<object>.GetAbi(__owner), MarshalInspectable<object>.GetAbi(__baseInterface), &__innerInterface, &__retval));
                global::System.GC.KeepAlive(_obj);
                innerInterface = MarshalInspectable<object>.FromAbi(__innerInterface);
                return global::ABI.Microsoft.UI.Xaml.Automation.Peers.BreadcrumbBarItemAutomationPeer.FromAbi(__retval);
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__owner);
                MarshalInspectable<object>.DisposeMarshaler(__baseInterface);
                MarshalInspectable<object>.DisposeAbi(__innerInterface);
                global::ABI.Microsoft.UI.Xaml.Automation.Peers.BreadcrumbBarItemAutomationPeer.DisposeAbi(__retval);
            }
        }


        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0x46, 0x21, 0xB0, 0xDF, 0x5F, 0x40, 0xED, 0x52, 0xA8, 0x73, 0xE, 0xD4, 0x94, 0x28, 0x50, 0xBE };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("DFB02146-405F-52ED-A873-0ED4942850BE")]
    internal interface IBreadcrumbBarItemAutomationPeerFactory : global::Microsoft.UI.Xaml.Automation.Peers.IBreadcrumbBarItemAutomationPeerFactory
    {
    }
    internal static class IButtonAutomationPeerMethods
    {



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0x6B, 0xE9, 0xA2, 0xA3, 0x2D, 0x8A, 0xBF, 0x50, 0x9B, 0x3D, 0xDF, 0xBC, 0x46, 0x53, 0xF5, 0xA6 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("A3A2E96B-8A2D-50BF-9B3D-DFBC4653F5A6")]
    internal interface IButtonAutomationPeer : global::Microsoft.UI.Xaml.Automation.Peers.IButtonAutomationPeer
    {
    }
    internal static class IButtonAutomationPeerFactoryMethods
    {


        internal static unsafe global::Microsoft.UI.Xaml.Automation.Peers.ButtonAutomationPeer CreateInstanceWithOwner(IObjectReference _obj, global::Microsoft.UI.Xaml.Controls.Button owner, object baseInterface, out object innerInterface)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __owner = default;
            ObjectReferenceValue __baseInterface = default;
            IntPtr __innerInterface = default;
            IntPtr __retval = default;
            try
            {
                __owner = global::ABI.Microsoft.UI.Xaml.Controls.Button.CreateMarshaler2(owner);
                __baseInterface = MarshalInspectable<object>.CreateMarshaler2(baseInterface);
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, IntPtr, IntPtr*, IntPtr*, int>**)ThisPtr)[6](ThisPtr, MarshalInspectable<object>.GetAbi(__owner), MarshalInspectable<object>.GetAbi(__baseInterface), &__innerInterface, &__retval));
                global::System.GC.KeepAlive(_obj);
                innerInterface = MarshalInspectable<object>.FromAbi(__innerInterface);
                return global::ABI.Microsoft.UI.Xaml.Automation.Peers.ButtonAutomationPeer.FromAbi(__retval);
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__owner);
                MarshalInspectable<object>.DisposeMarshaler(__baseInterface);
                MarshalInspectable<object>.DisposeAbi(__innerInterface);
                global::ABI.Microsoft.UI.Xaml.Automation.Peers.ButtonAutomationPeer.DisposeAbi(__retval);
            }
        }


        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0xB7, 0x87, 0x2F, 0x1C, 0xC1, 0xFB, 0xB0, 0x56, 0xA6, 0x54, 0x55, 0xD, 0x61, 0xC4, 0x23, 0xD1 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("1C2F87B7-FBC1-56B0-A654-550D61C423D1")]
    internal interface IButtonAutomationPeerFactory : global::Microsoft.UI.Xaml.Automation.Peers.IButtonAutomationPeerFactory
    {
    }
    internal static class IButtonBaseAutomationPeerMethods
    {



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0xD8, 0xA2, 0x88, 0x7A, 0xDD, 0xF8, 0x26, 0x55, 0x8A, 0x40, 0xE2, 0xE3, 0x88, 0x81, 0x93, 0xBF };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("7A88A2D8-F8DD-5526-8A40-E2E3888193BF")]
    internal interface IButtonBaseAutomationPeer : global::Microsoft.UI.Xaml.Automation.Peers.IButtonBaseAutomationPeer
    {
    }
    internal static class IButtonBaseAutomationPeerFactoryMethods
    {


        internal static unsafe global::Microsoft.UI.Xaml.Automation.Peers.ButtonBaseAutomationPeer CreateInstanceWithOwner(IObjectReference _obj, global::Microsoft.UI.Xaml.Controls.Primitives.ButtonBase owner, object baseInterface, out object innerInterface)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __owner = default;
            ObjectReferenceValue __baseInterface = default;
            IntPtr __innerInterface = default;
            IntPtr __retval = default;
            try
            {
                __owner = global::ABI.Microsoft.UI.Xaml.Controls.Primitives.ButtonBase.CreateMarshaler2(owner);
                __baseInterface = MarshalInspectable<object>.CreateMarshaler2(baseInterface);
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, IntPtr, IntPtr*, IntPtr*, int>**)ThisPtr)[6](ThisPtr, MarshalInspectable<object>.GetAbi(__owner), MarshalInspectable<object>.GetAbi(__baseInterface), &__innerInterface, &__retval));
                global::System.GC.KeepAlive(_obj);
                innerInterface = MarshalInspectable<object>.FromAbi(__innerInterface);
                return global::ABI.Microsoft.UI.Xaml.Automation.Peers.ButtonBaseAutomationPeer.FromAbi(__retval);
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__owner);
                MarshalInspectable<object>.DisposeMarshaler(__baseInterface);
                MarshalInspectable<object>.DisposeAbi(__innerInterface);
                global::ABI.Microsoft.UI.Xaml.Automation.Peers.ButtonBaseAutomationPeer.DisposeAbi(__retval);
            }
        }


        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0xBB, 0x7, 0xE7, 0xD6, 0x99, 0x72, 0x7A, 0x5F, 0x9C, 0x3, 0x7F, 0xA1, 0xF, 0x93, 0x97, 0x71 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("D6E707BB-7299-5F7A-9C03-7FA10F939771")]
    internal interface IButtonBaseAutomationPeerFactory : global::Microsoft.UI.Xaml.Automation.Peers.IButtonBaseAutomationPeerFactory
    {
    }
    internal static class ICalendarDatePickerAutomationPeerMethods
    {



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0xE3, 0x63, 0x6D, 0x24, 0x2F, 0x81, 0x28, 0x5F, 0x8D, 0x18, 0xAF, 0x79, 0x40, 0x9A, 0x4F, 0x95 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("246D63E3-812F-5F28-8D18-AF79409A4F95")]
    internal interface ICalendarDatePickerAutomationPeer : global::Microsoft.UI.Xaml.Automation.Peers.ICalendarDatePickerAutomationPeer
    {
    }
    internal static class ICalendarDatePickerAutomationPeerFactoryMethods
    {


        internal static unsafe global::Microsoft.UI.Xaml.Automation.Peers.CalendarDatePickerAutomationPeer CreateInstanceWithOwner(IObjectReference _obj, global::Microsoft.UI.Xaml.Controls.CalendarDatePicker owner, object baseInterface, out object innerInterface)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __owner = default;
            ObjectReferenceValue __baseInterface = default;
            IntPtr __innerInterface = default;
            IntPtr __retval = default;
            try
            {
                __owner = global::ABI.Microsoft.UI.Xaml.Controls.CalendarDatePicker.CreateMarshaler2(owner);
                __baseInterface = MarshalInspectable<object>.CreateMarshaler2(baseInterface);
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, IntPtr, IntPtr*, IntPtr*, int>**)ThisPtr)[6](ThisPtr, MarshalInspectable<object>.GetAbi(__owner), MarshalInspectable<object>.GetAbi(__baseInterface), &__innerInterface, &__retval));
                global::System.GC.KeepAlive(_obj);
                innerInterface = MarshalInspectable<object>.FromAbi(__innerInterface);
                return global::ABI.Microsoft.UI.Xaml.Automation.Peers.CalendarDatePickerAutomationPeer.FromAbi(__retval);
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__owner);
                MarshalInspectable<object>.DisposeMarshaler(__baseInterface);
                MarshalInspectable<object>.DisposeAbi(__innerInterface);
                global::ABI.Microsoft.UI.Xaml.Automation.Peers.CalendarDatePickerAutomationPeer.DisposeAbi(__retval);
            }
        }


        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0x12, 0x2C, 0x27, 0x6D, 0xA3, 0x68, 0x6E, 0x58, 0x87, 0x9B, 0x57, 0x1E, 0x60, 0x68, 0x3, 0xB4 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("6D272C12-68A3-586E-879B-571E606803B4")]
    internal interface ICalendarDatePickerAutomationPeerFactory : global::Microsoft.UI.Xaml.Automation.Peers.ICalendarDatePickerAutomationPeerFactory
    {
    }
    internal static class ICheckBoxAutomationPeerMethods
    {



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0x14, 0x98, 0x44, 0x9B, 0x1A, 0x2C, 0xDC, 0x5B, 0x95, 0x24, 0x1D, 0xF9, 0x1C, 0x6, 0xE9, 0x92 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("9B449814-2C1A-5BDC-9524-1DF91C06E992")]
    internal interface ICheckBoxAutomationPeer : global::Microsoft.UI.Xaml.Automation.Peers.ICheckBoxAutomationPeer
    {
    }
    internal static class ICheckBoxAutomationPeerFactoryMethods
    {


        internal static unsafe global::Microsoft.UI.Xaml.Automation.Peers.CheckBoxAutomationPeer CreateInstanceWithOwner(IObjectReference _obj, global::Microsoft.UI.Xaml.Controls.CheckBox owner, object baseInterface, out object innerInterface)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __owner = default;
            ObjectReferenceValue __baseInterface = default;
            IntPtr __innerInterface = default;
            IntPtr __retval = default;
            try
            {
                __owner = global::ABI.Microsoft.UI.Xaml.Controls.CheckBox.CreateMarshaler2(owner);
                __baseInterface = MarshalInspectable<object>.CreateMarshaler2(baseInterface);
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, IntPtr, IntPtr*, IntPtr*, int>**)ThisPtr)[6](ThisPtr, MarshalInspectable<object>.GetAbi(__owner), MarshalInspectable<object>.GetAbi(__baseInterface), &__innerInterface, &__retval));
                global::System.GC.KeepAlive(_obj);
                innerInterface = MarshalInspectable<object>.FromAbi(__innerInterface);
                return global::ABI.Microsoft.UI.Xaml.Automation.Peers.CheckBoxAutomationPeer.FromAbi(__retval);
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__owner);
                MarshalInspectable<object>.DisposeMarshaler(__baseInterface);
                MarshalInspectable<object>.DisposeAbi(__innerInterface);
                global::ABI.Microsoft.UI.Xaml.Automation.Peers.CheckBoxAutomationPeer.DisposeAbi(__retval);
            }
        }


        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0x3C, 0x9E, 0x5B, 0xF, 0xE5, 0x6D, 0x8E, 0x58, 0x83, 0x5F, 0x32, 0x28, 0xBE, 0x93, 0xF, 0xEA };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("0F5B9E3C-6DE5-588E-835F-3228BE930FEA")]
    internal interface ICheckBoxAutomationPeerFactory : global::Microsoft.UI.Xaml.Automation.Peers.ICheckBoxAutomationPeerFactory
    {
    }
    internal static class IColorPickerSliderAutomationPeerMethods
    {



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0xD4, 0x35, 0x3D, 0x79, 0x52, 0x41, 0xFA, 0x50, 0xB5, 0xF4, 0xF6, 0xC0, 0x45, 0xC1, 0x33, 0x9D };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("793D35D4-4152-50FA-B5F4-F6C045C1339D")]
    internal interface IColorPickerSliderAutomationPeer : global::Microsoft.UI.Xaml.Automation.Peers.IColorPickerSliderAutomationPeer
    {
    }
    internal static class IColorPickerSliderAutomationPeerFactoryMethods
    {


        internal static unsafe global::Microsoft.UI.Xaml.Automation.Peers.ColorPickerSliderAutomationPeer CreateInstanceWithOwner(IObjectReference _obj, global::Microsoft.UI.Xaml.Controls.Primitives.ColorPickerSlider owner, object baseInterface, out object innerInterface)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __owner = default;
            ObjectReferenceValue __baseInterface = default;
            IntPtr __innerInterface = default;
            IntPtr __retval = default;
            try
            {
                __owner = global::ABI.Microsoft.UI.Xaml.Controls.Primitives.ColorPickerSlider.CreateMarshaler2(owner);
                __baseInterface = MarshalInspectable<object>.CreateMarshaler2(baseInterface);
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, IntPtr, IntPtr*, IntPtr*, int>**)ThisPtr)[6](ThisPtr, MarshalInspectable<object>.GetAbi(__owner), MarshalInspectable<object>.GetAbi(__baseInterface), &__innerInterface, &__retval));
                global::System.GC.KeepAlive(_obj);
                innerInterface = MarshalInspectable<object>.FromAbi(__innerInterface);
                return global::ABI.Microsoft.UI.Xaml.Automation.Peers.ColorPickerSliderAutomationPeer.FromAbi(__retval);
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__owner);
                MarshalInspectable<object>.DisposeMarshaler(__baseInterface);
                MarshalInspectable<object>.DisposeAbi(__innerInterface);
                global::ABI.Microsoft.UI.Xaml.Automation.Peers.ColorPickerSliderAutomationPeer.DisposeAbi(__retval);
            }
        }


        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0x3F, 0x9, 0xF9, 0xE5, 0x2C, 0x5E, 0x48, 0x51, 0xB5, 0xD1, 0x1C, 0xDA, 0x4E, 0xB8, 0x69, 0x13 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("E5F9093F-5E2C-5148-B5D1-1CDA4EB86913")]
    internal interface IColorPickerSliderAutomationPeerFactory : global::Microsoft.UI.Xaml.Automation.Peers.IColorPickerSliderAutomationPeerFactory
    {
    }
    internal static class IColorSpectrumAutomationPeerMethods
    {



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0xD1, 0xC3, 0x5A, 0x0, 0x31, 0xB0, 0xAB, 0x58, 0x91, 0x8D, 0x3, 0xF, 0xAB, 0xAE, 0xAF, 0x87 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("005AC3D1-B031-58AB-918D-030FABAEAF87")]
    internal interface IColorSpectrumAutomationPeer : global::Microsoft.UI.Xaml.Automation.Peers.IColorSpectrumAutomationPeer
    {
    }
    internal static class IColorSpectrumAutomationPeerFactoryMethods
    {


        internal static unsafe global::Microsoft.UI.Xaml.Automation.Peers.ColorSpectrumAutomationPeer CreateInstanceWithOwner(IObjectReference _obj, global::Microsoft.UI.Xaml.Controls.Primitives.ColorSpectrum owner, object baseInterface, out object innerInterface)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __owner = default;
            ObjectReferenceValue __baseInterface = default;
            IntPtr __innerInterface = default;
            IntPtr __retval = default;
            try
            {
                __owner = global::ABI.Microsoft.UI.Xaml.Controls.Primitives.ColorSpectrum.CreateMarshaler2(owner);
                __baseInterface = MarshalInspectable<object>.CreateMarshaler2(baseInterface);
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, IntPtr, IntPtr*, IntPtr*, int>**)ThisPtr)[6](ThisPtr, MarshalInspectable<object>.GetAbi(__owner), MarshalInspectable<object>.GetAbi(__baseInterface), &__innerInterface, &__retval));
                global::System.GC.KeepAlive(_obj);
                innerInterface = MarshalInspectable<object>.FromAbi(__innerInterface);
                return global::ABI.Microsoft.UI.Xaml.Automation.Peers.ColorSpectrumAutomationPeer.FromAbi(__retval);
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__owner);
                MarshalInspectable<object>.DisposeMarshaler(__baseInterface);
                MarshalInspectable<object>.DisposeAbi(__innerInterface);
                global::ABI.Microsoft.UI.Xaml.Automation.Peers.ColorSpectrumAutomationPeer.DisposeAbi(__retval);
            }
        }


        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0x7E, 0xAE, 0xCC, 0xCF, 0xF, 0xFE, 0x9C, 0x5C, 0x9D, 0x1A, 0x69, 0xE2, 0xE, 0x2, 0x32, 0xCF };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("CFCCAE7E-FE0F-5C9C-9D1A-69E20E0232CF")]
    internal interface IColorSpectrumAutomationPeerFactory : global::Microsoft.UI.Xaml.Automation.Peers.IColorSpectrumAutomationPeerFactory
    {
    }
    internal static class IComboBoxAutomationPeerMethods
    {



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0x45, 0x22, 0x9D, 0x45, 0xD2, 0x1F, 0xDA, 0x5D, 0x82, 0x2C, 0xBE, 0xD1, 0x3D, 0xF6, 0x77, 0x6B };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("459D2245-1FD2-5DDA-822C-BED13DF6776B")]
    internal interface IComboBoxAutomationPeer : global::Microsoft.UI.Xaml.Automation.Peers.IComboBoxAutomationPeer
    {
    }
    internal static class IComboBoxAutomationPeerFactoryMethods
    {


        internal static unsafe global::Microsoft.UI.Xaml.Automation.Peers.ComboBoxAutomationPeer CreateInstanceWithOwner(IObjectReference _obj, global::Microsoft.UI.Xaml.Controls.ComboBox owner, object baseInterface, out object innerInterface)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __owner = default;
            ObjectReferenceValue __baseInterface = default;
            IntPtr __innerInterface = default;
            IntPtr __retval = default;
            try
            {
                __owner = global::ABI.Microsoft.UI.Xaml.Controls.ComboBox.CreateMarshaler2(owner);
                __baseInterface = MarshalInspectable<object>.CreateMarshaler2(baseInterface);
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, IntPtr, IntPtr*, IntPtr*, int>**)ThisPtr)[6](ThisPtr, MarshalInspectable<object>.GetAbi(__owner), MarshalInspectable<object>.GetAbi(__baseInterface), &__innerInterface, &__retval));
                global::System.GC.KeepAlive(_obj);
                innerInterface = MarshalInspectable<object>.FromAbi(__innerInterface);
                return global::ABI.Microsoft.UI.Xaml.Automation.Peers.ComboBoxAutomationPeer.FromAbi(__retval);
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__owner);
                MarshalInspectable<object>.DisposeMarshaler(__baseInterface);
                MarshalInspectable<object>.DisposeAbi(__innerInterface);
                global::ABI.Microsoft.UI.Xaml.Automation.Peers.ComboBoxAutomationPeer.DisposeAbi(__retval);
            }
        }


        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0x9F, 0x82, 0x94, 0xD0, 0x6F, 0x2A, 0x1F, 0x5B, 0xA0, 0xCE, 0xF, 0x68, 0x2C, 0xC5, 0x6C, 0xF };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("D094829F-2A6F-5B1F-A0CE-0F682CC56C0F")]
    internal interface IComboBoxAutomationPeerFactory : global::Microsoft.UI.Xaml.Automation.Peers.IComboBoxAutomationPeerFactory
    {
    }
    internal static class IComboBoxItemAutomationPeerMethods
    {



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0xBC, 0x95, 0x41, 0x3D, 0x79, 0xB5, 0xDA, 0x5C, 0xB5, 0x6F, 0x1E, 0x73, 0x99, 0xE1, 0x41, 0x22 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("3D4195BC-B579-5CDA-B56F-1E7399E14122")]
    internal interface IComboBoxItemAutomationPeer : global::Microsoft.UI.Xaml.Automation.Peers.IComboBoxItemAutomationPeer
    {
    }
    internal static class IComboBoxItemAutomationPeerFactoryMethods
    {


        internal static unsafe global::Microsoft.UI.Xaml.Automation.Peers.ComboBoxItemAutomationPeer CreateInstanceWithOwner(IObjectReference _obj, global::Microsoft.UI.Xaml.Controls.ComboBoxItem owner, object baseInterface, out object innerInterface)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __owner = default;
            ObjectReferenceValue __baseInterface = default;
            IntPtr __innerInterface = default;
            IntPtr __retval = default;
            try
            {
                __owner = global::ABI.Microsoft.UI.Xaml.Controls.ComboBoxItem.CreateMarshaler2(owner);
                __baseInterface = MarshalInspectable<object>.CreateMarshaler2(baseInterface);
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, IntPtr, IntPtr*, IntPtr*, int>**)ThisPtr)[6](ThisPtr, MarshalInspectable<object>.GetAbi(__owner), MarshalInspectable<object>.GetAbi(__baseInterface), &__innerInterface, &__retval));
                global::System.GC.KeepAlive(_obj);
                innerInterface = MarshalInspectable<object>.FromAbi(__innerInterface);
                return global::ABI.Microsoft.UI.Xaml.Automation.Peers.ComboBoxItemAutomationPeer.FromAbi(__retval);
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__owner);
                MarshalInspectable<object>.DisposeMarshaler(__baseInterface);
                MarshalInspectable<object>.DisposeAbi(__innerInterface);
                global::ABI.Microsoft.UI.Xaml.Automation.Peers.ComboBoxItemAutomationPeer.DisposeAbi(__retval);
            }
        }


        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0x2D, 0xD2, 0xD9, 0xEA, 0x2B, 0x11, 0xE, 0x55, 0x8C, 0xAC, 0x76, 0x6, 0x14, 0xF9, 0x79, 0xAA };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("EAD9D22D-112B-550E-8CAC-760614F979AA")]
    internal interface IComboBoxItemAutomationPeerFactory : global::Microsoft.UI.Xaml.Automation.Peers.IComboBoxItemAutomationPeerFactory
    {
    }
    internal static class IComboBoxItemDataAutomationPeerMethods
    {



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0x50, 0x9B, 0xB6, 0x65, 0xC3, 0xCB, 0xE7, 0x5A, 0xBF, 0x9C, 0x27, 0x94, 0xFE, 0x56, 0xC6, 0xB3 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("65B69B50-CBC3-5AE7-BF9C-2794FE56C6B3")]
    internal interface IComboBoxItemDataAutomationPeer : global::Microsoft.UI.Xaml.Automation.Peers.IComboBoxItemDataAutomationPeer
    {
    }
    internal static class IComboBoxItemDataAutomationPeerFactoryMethods
    {


        internal static unsafe global::Microsoft.UI.Xaml.Automation.Peers.ComboBoxItemDataAutomationPeer CreateInstanceWithParentAndItem(IObjectReference _obj, object item, global::Microsoft.UI.Xaml.Automation.Peers.ComboBoxAutomationPeer parent, object baseInterface, out object innerInterface)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __item = default;
            ObjectReferenceValue __parent = default;
            ObjectReferenceValue __baseInterface = default;
            IntPtr __innerInterface = default;
            IntPtr __retval = default;
            try
            {
                __item = MarshalInspectable<object>.CreateMarshaler2(item);
                __parent = global::ABI.Microsoft.UI.Xaml.Automation.Peers.ComboBoxAutomationPeer.CreateMarshaler2(parent);
                __baseInterface = MarshalInspectable<object>.CreateMarshaler2(baseInterface);
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, IntPtr, IntPtr, IntPtr*, IntPtr*, int>**)ThisPtr)[6](ThisPtr, MarshalInspectable<object>.GetAbi(__item), MarshalInspectable<object>.GetAbi(__parent), MarshalInspectable<object>.GetAbi(__baseInterface), &__innerInterface, &__retval));
                global::System.GC.KeepAlive(_obj);
                innerInterface = MarshalInspectable<object>.FromAbi(__innerInterface);
                return global::ABI.Microsoft.UI.Xaml.Automation.Peers.ComboBoxItemDataAutomationPeer.FromAbi(__retval);
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__item);
                MarshalInspectable<object>.DisposeMarshaler(__parent);
                MarshalInspectable<object>.DisposeMarshaler(__baseInterface);
                MarshalInspectable<object>.DisposeAbi(__innerInterface);
                global::ABI.Microsoft.UI.Xaml.Automation.Peers.ComboBoxItemDataAutomationPeer.DisposeAbi(__retval);
            }
        }


        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0x18, 0x87, 0x77, 0x66, 0x57, 0x87, 0xD5, 0x56, 0xBD, 0x3A, 0xF2, 0xFF, 0x40, 0xE8, 0x3A, 0x78 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("66778718-8757-56D5-BD3A-F2FF40E83A78")]
    internal interface IComboBoxItemDataAutomationPeerFactory : global::Microsoft.UI.Xaml.Automation.Peers.IComboBoxItemDataAutomationPeerFactory
    {
    }
    internal static class IDatePickerAutomationPeerMethods
    {



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0xE5, 0xC3, 0xD7, 0xF3, 0x17, 0xC8, 0xA5, 0x58, 0xBB, 0x47, 0xD9, 0xEB, 0x22, 0x8F, 0x3B, 0xA0 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("F3D7C3E5-C817-58A5-BB47-D9EB228F3BA0")]
    internal interface IDatePickerAutomationPeer : global::Microsoft.UI.Xaml.Automation.Peers.IDatePickerAutomationPeer
    {
    }
    internal static class IDatePickerAutomationPeerFactoryMethods
    {


        internal static unsafe global::Microsoft.UI.Xaml.Automation.Peers.DatePickerAutomationPeer CreateInstanceWithOwner(IObjectReference _obj, global::Microsoft.UI.Xaml.Controls.DatePicker owner, object baseInterface, out object innerInterface)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __owner = default;
            ObjectReferenceValue __baseInterface = default;
            IntPtr __innerInterface = default;
            IntPtr __retval = default;
            try
            {
                __owner = global::ABI.Microsoft.UI.Xaml.Controls.DatePicker.CreateMarshaler2(owner);
                __baseInterface = MarshalInspectable<object>.CreateMarshaler2(baseInterface);
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, IntPtr, IntPtr*, IntPtr*, int>**)ThisPtr)[6](ThisPtr, MarshalInspectable<object>.GetAbi(__owner), MarshalInspectable<object>.GetAbi(__baseInterface), &__innerInterface, &__retval));
                global::System.GC.KeepAlive(_obj);
                innerInterface = MarshalInspectable<object>.FromAbi(__innerInterface);
                return global::ABI.Microsoft.UI.Xaml.Automation.Peers.DatePickerAutomationPeer.FromAbi(__retval);
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__owner);
                MarshalInspectable<object>.DisposeMarshaler(__baseInterface);
                MarshalInspectable<object>.DisposeAbi(__innerInterface);
                global::ABI.Microsoft.UI.Xaml.Automation.Peers.DatePickerAutomationPeer.DisposeAbi(__retval);
            }
        }


        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0x25, 0x78, 0xF, 0x48, 0xA7, 0xB4, 0x56, 0x5C, 0x9F, 0x8A, 0xFE, 0xD8, 0x4B, 0x93, 0x48, 0xAE };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("480F7825-B4A7-5C56-9F8A-FED84B9348AE")]
    internal interface IDatePickerAutomationPeerFactory : global::Microsoft.UI.Xaml.Automation.Peers.IDatePickerAutomationPeerFactory
    {
    }
    internal static class IDatePickerFlyoutPresenterAutomationPeerMethods
    {



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0x62, 0x71, 0xB, 0x60, 0x29, 0x5, 0xD1, 0x5F, 0xB6, 0xE4, 0x41, 0xDC, 0x37, 0xED, 0xA5, 0x13 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("600B7162-0529-5FD1-B6E4-41DC37EDA513")]
    internal interface IDatePickerFlyoutPresenterAutomationPeer : global::Microsoft.UI.Xaml.Automation.Peers.IDatePickerFlyoutPresenterAutomationPeer
    {
    }
    internal static class IDropDownButtonAutomationPeerMethods
    {



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0xEC, 0x7D, 0xC3, 0x7D, 0xA, 0xA, 0x98, 0x5C, 0x8A, 0x6F, 0x9E, 0x47, 0xDB, 0xAB, 0x2F, 0x82 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("7DC37DEC-0A0A-5C98-8A6F-9E47DBAB2F82")]
    internal interface IDropDownButtonAutomationPeer : global::Microsoft.UI.Xaml.Automation.Peers.IDropDownButtonAutomationPeer
    {
    }
    internal static class IDropDownButtonAutomationPeerFactoryMethods
    {


        internal static unsafe global::Microsoft.UI.Xaml.Automation.Peers.DropDownButtonAutomationPeer CreateInstance(IObjectReference _obj, global::Microsoft.UI.Xaml.Controls.DropDownButton owner, object baseInterface, out object innerInterface)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __owner = default;
            ObjectReferenceValue __baseInterface = default;
            IntPtr __innerInterface = default;
            IntPtr __retval = default;
            try
            {
                __owner = global::ABI.Microsoft.UI.Xaml.Controls.DropDownButton.CreateMarshaler2(owner);
                __baseInterface = MarshalInspectable<object>.CreateMarshaler2(baseInterface);
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, IntPtr, IntPtr*, IntPtr*, int>**)ThisPtr)[6](ThisPtr, MarshalInspectable<object>.GetAbi(__owner), MarshalInspectable<object>.GetAbi(__baseInterface), &__innerInterface, &__retval));
                global::System.GC.KeepAlive(_obj);
                innerInterface = MarshalInspectable<object>.FromAbi(__innerInterface);
                return global::ABI.Microsoft.UI.Xaml.Automation.Peers.DropDownButtonAutomationPeer.FromAbi(__retval);
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__owner);
                MarshalInspectable<object>.DisposeMarshaler(__baseInterface);
                MarshalInspectable<object>.DisposeAbi(__innerInterface);
                global::ABI.Microsoft.UI.Xaml.Automation.Peers.DropDownButtonAutomationPeer.DisposeAbi(__retval);
            }
        }


        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0xFA, 0xBF, 0xC4, 0x68, 0x85, 0x16, 0x36, 0x59, 0xB2, 0x19, 0x51, 0x7E, 0x87, 0xFD, 0x59, 0x1F };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("68C4BFFA-1685-5936-B219-517E87FD591F")]
    internal interface IDropDownButtonAutomationPeerFactory : global::Microsoft.UI.Xaml.Automation.Peers.IDropDownButtonAutomationPeerFactory
    {
    }
    internal static class IExpanderAutomationPeerMethods
    {



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0x8, 0x74, 0x52, 0xF7, 0x89, 0xCC, 0x65, 0x5B, 0xBB, 0xDE, 0xEA, 0xE6, 0xD6, 0x6D, 0xC3, 0xE5 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("F7527408-CC89-5B65-BBDE-EAE6D66DC3E5")]
    internal interface IExpanderAutomationPeer : global::Microsoft.UI.Xaml.Automation.Peers.IExpanderAutomationPeer
    {
    }
    internal static class IExpanderAutomationPeerFactoryMethods
    {


        internal static unsafe global::Microsoft.UI.Xaml.Automation.Peers.ExpanderAutomationPeer CreateInstance(IObjectReference _obj, global::Microsoft.UI.Xaml.Controls.Expander owner, object baseInterface, out object innerInterface)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __owner = default;
            ObjectReferenceValue __baseInterface = default;
            IntPtr __innerInterface = default;
            IntPtr __retval = default;
            try
            {
                __owner = global::ABI.Microsoft.UI.Xaml.Controls.Expander.CreateMarshaler2(owner);
                __baseInterface = MarshalInspectable<object>.CreateMarshaler2(baseInterface);
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, IntPtr, IntPtr*, IntPtr*, int>**)ThisPtr)[6](ThisPtr, MarshalInspectable<object>.GetAbi(__owner), MarshalInspectable<object>.GetAbi(__baseInterface), &__innerInterface, &__retval));
                global::System.GC.KeepAlive(_obj);
                innerInterface = MarshalInspectable<object>.FromAbi(__innerInterface);
                return global::ABI.Microsoft.UI.Xaml.Automation.Peers.ExpanderAutomationPeer.FromAbi(__retval);
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__owner);
                MarshalInspectable<object>.DisposeMarshaler(__baseInterface);
                MarshalInspectable<object>.DisposeAbi(__innerInterface);
                global::ABI.Microsoft.UI.Xaml.Automation.Peers.ExpanderAutomationPeer.DisposeAbi(__retval);
            }
        }


        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0x3B, 0x52, 0x24, 0x20, 0x40, 0x4A, 0x76, 0x59, 0xAA, 0xAB, 0xF, 0x5, 0x66, 0x4F, 0x74, 0x94 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("2024523B-4A40-5976-AAAB-0F05664F7494")]
    internal interface IExpanderAutomationPeerFactory : global::Microsoft.UI.Xaml.Automation.Peers.IExpanderAutomationPeerFactory
    {
    }
    internal static class IFlipViewAutomationPeerMethods
    {



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0xEA, 0x1, 0x29, 0x9F, 0xCB, 0x23, 0xAC, 0x5C, 0x87, 0xD4, 0x7F, 0xA9, 0xC7, 0xFF, 0xBC, 0x60 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("9F2901EA-23CB-5CAC-87D4-7FA9C7FFBC60")]
    internal interface IFlipViewAutomationPeer : global::Microsoft.UI.Xaml.Automation.Peers.IFlipViewAutomationPeer
    {
    }
    internal static class IFlipViewAutomationPeerFactoryMethods
    {


        internal static unsafe global::Microsoft.UI.Xaml.Automation.Peers.FlipViewAutomationPeer CreateInstanceWithOwner(IObjectReference _obj, global::Microsoft.UI.Xaml.Controls.FlipView owner, object baseInterface, out object innerInterface)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __owner = default;
            ObjectReferenceValue __baseInterface = default;
            IntPtr __innerInterface = default;
            IntPtr __retval = default;
            try
            {
                __owner = global::ABI.Microsoft.UI.Xaml.Controls.FlipView.CreateMarshaler2(owner);
                __baseInterface = MarshalInspectable<object>.CreateMarshaler2(baseInterface);
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, IntPtr, IntPtr*, IntPtr*, int>**)ThisPtr)[6](ThisPtr, MarshalInspectable<object>.GetAbi(__owner), MarshalInspectable<object>.GetAbi(__baseInterface), &__innerInterface, &__retval));
                global::System.GC.KeepAlive(_obj);
                innerInterface = MarshalInspectable<object>.FromAbi(__innerInterface);
                return global::ABI.Microsoft.UI.Xaml.Automation.Peers.FlipViewAutomationPeer.FromAbi(__retval);
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__owner);
                MarshalInspectable<object>.DisposeMarshaler(__baseInterface);
                MarshalInspectable<object>.DisposeAbi(__innerInterface);
                global::ABI.Microsoft.UI.Xaml.Automation.Peers.FlipViewAutomationPeer.DisposeAbi(__retval);
            }
        }


        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0x75, 0x7F, 0x3C, 0xE7, 0x47, 0xED, 0x2A, 0x52, 0x8A, 0x27, 0x45, 0xFE, 0xDA, 0x10, 0x31, 0xF0 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("E73C7F75-ED47-522A-8A27-45FEDA1031F0")]
    internal interface IFlipViewAutomationPeerFactory : global::Microsoft.UI.Xaml.Automation.Peers.IFlipViewAutomationPeerFactory
    {
    }
    internal static class IFlipViewItemAutomationPeerMethods
    {



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0xBB, 0xB1, 0x69, 0x35, 0x1, 0x76, 0xDE, 0x56, 0x81, 0x2A, 0x17, 0x14, 0x55, 0xD8, 0xAD, 0x32 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("3569B1BB-7601-56DE-812A-171455D8AD32")]
    internal interface IFlipViewItemAutomationPeer : global::Microsoft.UI.Xaml.Automation.Peers.IFlipViewItemAutomationPeer
    {
    }
    internal static class IFlipViewItemAutomationPeerFactoryMethods
    {


        internal static unsafe global::Microsoft.UI.Xaml.Automation.Peers.FlipViewItemAutomationPeer CreateInstanceWithOwner(IObjectReference _obj, global::Microsoft.UI.Xaml.Controls.FlipViewItem owner, object baseInterface, out object innerInterface)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __owner = default;
            ObjectReferenceValue __baseInterface = default;
            IntPtr __innerInterface = default;
            IntPtr __retval = default;
            try
            {
                __owner = global::ABI.Microsoft.UI.Xaml.Controls.FlipViewItem.CreateMarshaler2(owner);
                __baseInterface = MarshalInspectable<object>.CreateMarshaler2(baseInterface);
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, IntPtr, IntPtr*, IntPtr*, int>**)ThisPtr)[6](ThisPtr, MarshalInspectable<object>.GetAbi(__owner), MarshalInspectable<object>.GetAbi(__baseInterface), &__innerInterface, &__retval));
                global::System.GC.KeepAlive(_obj);
                innerInterface = MarshalInspectable<object>.FromAbi(__innerInterface);
                return global::ABI.Microsoft.UI.Xaml.Automation.Peers.FlipViewItemAutomationPeer.FromAbi(__retval);
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__owner);
                MarshalInspectable<object>.DisposeMarshaler(__baseInterface);
                MarshalInspectable<object>.DisposeAbi(__innerInterface);
                global::ABI.Microsoft.UI.Xaml.Automation.Peers.FlipViewItemAutomationPeer.DisposeAbi(__retval);
            }
        }


        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0xF, 0x88, 0x3B, 0xAA, 0xCB, 0x62, 0x78, 0x58, 0x8F, 0xB, 0x7B, 0x35, 0x48, 0xC6, 0x50, 0x80 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("AA3B880F-62CB-5878-8F0B-7B3548C65080")]
    internal interface IFlipViewItemAutomationPeerFactory : global::Microsoft.UI.Xaml.Automation.Peers.IFlipViewItemAutomationPeerFactory
    {
    }
    internal static class IFlipViewItemDataAutomationPeerMethods
    {



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0x93, 0x1A, 0xB3, 0x3B, 0x37, 0xE7, 0x1D, 0x50, 0xB9, 0xA6, 0xA1, 0x14, 0x61, 0xC9, 0xBC, 0xF5 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("3BB31A93-E737-501D-B9A6-A11461C9BCF5")]
    internal interface IFlipViewItemDataAutomationPeer : global::Microsoft.UI.Xaml.Automation.Peers.IFlipViewItemDataAutomationPeer
    {
    }
    internal static class IFlipViewItemDataAutomationPeerFactoryMethods
    {


        internal static unsafe global::Microsoft.UI.Xaml.Automation.Peers.FlipViewItemDataAutomationPeer CreateInstanceWithParentAndItem(IObjectReference _obj, object item, global::Microsoft.UI.Xaml.Automation.Peers.FlipViewAutomationPeer parent, object baseInterface, out object innerInterface)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __item = default;
            ObjectReferenceValue __parent = default;
            ObjectReferenceValue __baseInterface = default;
            IntPtr __innerInterface = default;
            IntPtr __retval = default;
            try
            {
                __item = MarshalInspectable<object>.CreateMarshaler2(item);
                __parent = global::ABI.Microsoft.UI.Xaml.Automation.Peers.FlipViewAutomationPeer.CreateMarshaler2(parent);
                __baseInterface = MarshalInspectable<object>.CreateMarshaler2(baseInterface);
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, IntPtr, IntPtr, IntPtr*, IntPtr*, int>**)ThisPtr)[6](ThisPtr, MarshalInspectable<object>.GetAbi(__item), MarshalInspectable<object>.GetAbi(__parent), MarshalInspectable<object>.GetAbi(__baseInterface), &__innerInterface, &__retval));
                global::System.GC.KeepAlive(_obj);
                innerInterface = MarshalInspectable<object>.FromAbi(__innerInterface);
                return global::ABI.Microsoft.UI.Xaml.Automation.Peers.FlipViewItemDataAutomationPeer.FromAbi(__retval);
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__item);
                MarshalInspectable<object>.DisposeMarshaler(__parent);
                MarshalInspectable<object>.DisposeMarshaler(__baseInterface);
                MarshalInspectable<object>.DisposeAbi(__innerInterface);
                global::ABI.Microsoft.UI.Xaml.Automation.Peers.FlipViewItemDataAutomationPeer.DisposeAbi(__retval);
            }
        }


        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0xCE, 0x2A, 0x89, 0x6F, 0x67, 0x44, 0x7C, 0x58, 0x95, 0x3C, 0xC1, 0xC1, 0x3B, 0x63, 0x2E, 0x5F };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("6F892ACE-4467-587C-953C-C1C13B632E5F")]
    internal interface IFlipViewItemDataAutomationPeerFactory : global::Microsoft.UI.Xaml.Automation.Peers.IFlipViewItemDataAutomationPeerFactory
    {
    }
    internal static class IFlyoutPresenterAutomationPeerMethods
    {



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0x18, 0xB8, 0x89, 0xE5, 0x64, 0x4A, 0xC5, 0x58, 0x9C, 0xB, 0x5C, 0xEA, 0xF, 0x86, 0x7E, 0x9B };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("E589B818-4A64-58C5-9C0B-5CEA0F867E9B")]
    internal interface IFlyoutPresenterAutomationPeer : global::Microsoft.UI.Xaml.Automation.Peers.IFlyoutPresenterAutomationPeer
    {
    }
    internal static class IFlyoutPresenterAutomationPeerFactoryMethods
    {


        internal static unsafe global::Microsoft.UI.Xaml.Automation.Peers.FlyoutPresenterAutomationPeer CreateInstanceWithOwner(IObjectReference _obj, global::Microsoft.UI.Xaml.Controls.FlyoutPresenter owner, object baseInterface, out object innerInterface)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __owner = default;
            ObjectReferenceValue __baseInterface = default;
            IntPtr __innerInterface = default;
            IntPtr __retval = default;
            try
            {
                __owner = global::ABI.Microsoft.UI.Xaml.Controls.FlyoutPresenter.CreateMarshaler2(owner);
                __baseInterface = MarshalInspectable<object>.CreateMarshaler2(baseInterface);
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, IntPtr, IntPtr*, IntPtr*, int>**)ThisPtr)[6](ThisPtr, MarshalInspectable<object>.GetAbi(__owner), MarshalInspectable<object>.GetAbi(__baseInterface), &__innerInterface, &__retval));
                global::System.GC.KeepAlive(_obj);
                innerInterface = MarshalInspectable<object>.FromAbi(__innerInterface);
                return global::ABI.Microsoft.UI.Xaml.Automation.Peers.FlyoutPresenterAutomationPeer.FromAbi(__retval);
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__owner);
                MarshalInspectable<object>.DisposeMarshaler(__baseInterface);
                MarshalInspectable<object>.DisposeAbi(__innerInterface);
                global::ABI.Microsoft.UI.Xaml.Automation.Peers.FlyoutPresenterAutomationPeer.DisposeAbi(__retval);
            }
        }


        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0x86, 0xE5, 0x29, 0xE5, 0xA3, 0x7A, 0xA6, 0x50, 0xB1, 0x7E, 0x67, 0x8B, 0x54, 0xFE, 0xE1, 0x27 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("E529E586-7AA3-50A6-B17E-678B54FEE127")]
    internal interface IFlyoutPresenterAutomationPeerFactory : global::Microsoft.UI.Xaml.Automation.Peers.IFlyoutPresenterAutomationPeerFactory
    {
    }
    internal static class IFrameworkElementAutomationPeerMethods
    {

        internal static unsafe global::Microsoft.UI.Xaml.UIElement get_Owner(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[6](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Xaml.UIElement.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.UI.Xaml.UIElement.DisposeAbi(__retval);
            }
        }



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0x24, 0x4F, 0xAB, 0x7D, 0x5C, 0x60, 0xCB, 0x51, 0x87, 0xDB, 0x3E, 0xED, 0x1B, 0x9F, 0xB3, 0x7B };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("7DAB4F24-605C-51CB-87DB-3EED1B9FB37B")]
    internal interface IFrameworkElementAutomationPeer : global::Microsoft.UI.Xaml.Automation.Peers.IFrameworkElementAutomationPeer
    {
    }
    internal static class IFrameworkElementAutomationPeerFactoryMethods
    {


        internal static unsafe global::Microsoft.UI.Xaml.Automation.Peers.FrameworkElementAutomationPeer CreateInstanceWithOwner(IObjectReference _obj, global::Microsoft.UI.Xaml.FrameworkElement owner, object baseInterface, out object innerInterface)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __owner = default;
            ObjectReferenceValue __baseInterface = default;
            IntPtr __innerInterface = default;
            IntPtr __retval = default;
            try
            {
                __owner = global::ABI.Microsoft.UI.Xaml.FrameworkElement.CreateMarshaler2(owner);
                __baseInterface = MarshalInspectable<object>.CreateMarshaler2(baseInterface);
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, IntPtr, IntPtr*, IntPtr*, int>**)ThisPtr)[6](ThisPtr, MarshalInspectable<object>.GetAbi(__owner), MarshalInspectable<object>.GetAbi(__baseInterface), &__innerInterface, &__retval));
                global::System.GC.KeepAlive(_obj);
                innerInterface = MarshalInspectable<object>.FromAbi(__innerInterface);
                return global::ABI.Microsoft.UI.Xaml.Automation.Peers.FrameworkElementAutomationPeer.FromAbi(__retval);
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__owner);
                MarshalInspectable<object>.DisposeMarshaler(__baseInterface);
                MarshalInspectable<object>.DisposeAbi(__innerInterface);
                global::ABI.Microsoft.UI.Xaml.Automation.Peers.FrameworkElementAutomationPeer.DisposeAbi(__retval);
            }
        }


        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0xF8, 0xC3, 0x82, 0x16, 0x8D, 0x23, 0x7E, 0x5C, 0xA5, 0xA5, 0x8, 0xCC, 0x3C, 0x10, 0xAC, 0x7C };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("1682C3F8-238D-5C7E-A5A5-08CC3C10AC7C")]
    internal interface IFrameworkElementAutomationPeerFactory : global::Microsoft.UI.Xaml.Automation.Peers.IFrameworkElementAutomationPeerFactory
    {
    }
    internal static class IFrameworkElementAutomationPeerStaticsMethods
    {


        internal static unsafe global::Microsoft.UI.Xaml.Automation.Peers.AutomationPeer FromElement(IObjectReference _obj, global::Microsoft.UI.Xaml.UIElement element)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __element = default;
            IntPtr __retval = default;
            try
            {
                __element = global::ABI.Microsoft.UI.Xaml.UIElement.CreateMarshaler2(element);
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, IntPtr*, int>**)ThisPtr)[6](ThisPtr, MarshalInspectable<object>.GetAbi(__element), &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Xaml.Automation.Peers.AutomationPeer.FromAbi(__retval);
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__element);
                global::ABI.Microsoft.UI.Xaml.Automation.Peers.AutomationPeer.DisposeAbi(__retval);
            }
        }

        internal static unsafe global::Microsoft.UI.Xaml.Automation.Peers.AutomationPeer CreatePeerForElement(IObjectReference _obj, global::Microsoft.UI.Xaml.UIElement element)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __element = default;
            IntPtr __retval = default;
            try
            {
                __element = global::ABI.Microsoft.UI.Xaml.UIElement.CreateMarshaler2(element);
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, IntPtr*, int>**)ThisPtr)[7](ThisPtr, MarshalInspectable<object>.GetAbi(__element), &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Xaml.Automation.Peers.AutomationPeer.FromAbi(__retval);
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__element);
                global::ABI.Microsoft.UI.Xaml.Automation.Peers.AutomationPeer.DisposeAbi(__retval);
            }
        }


        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0xBE, 0x6F, 0x1F, 0x8, 0x0, 0x65, 0x8A, 0x52, 0xA5, 0x6, 0xF5, 0xA4, 0xD4, 0x1D, 0xDF, 0x6C };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("081F6FBE-6500-528A-A506-F5A4D41DDF6C")]
    internal interface IFrameworkElementAutomationPeerStatics : global::Microsoft.UI.Xaml.Automation.Peers.IFrameworkElementAutomationPeerStatics
    {
    }
    internal static class IGridViewAutomationPeerMethods
    {



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0x2F, 0x99, 0x70, 0x78, 0x28, 0x33, 0xC2, 0x53, 0xB4, 0x12, 0x29, 0x14, 0x43, 0x89, 0x75, 0xB4 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("7870992F-3328-53C2-B412-2914438975B4")]
    internal interface IGridViewAutomationPeer : global::Microsoft.UI.Xaml.Automation.Peers.IGridViewAutomationPeer
    {
    }
    internal static class IGridViewAutomationPeerFactoryMethods
    {


        internal static unsafe global::Microsoft.UI.Xaml.Automation.Peers.GridViewAutomationPeer CreateInstanceWithOwner(IObjectReference _obj, global::Microsoft.UI.Xaml.Controls.GridView owner, object baseInterface, out object innerInterface)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __owner = default;
            ObjectReferenceValue __baseInterface = default;
            IntPtr __innerInterface = default;
            IntPtr __retval = default;
            try
            {
                __owner = global::ABI.Microsoft.UI.Xaml.Controls.GridView.CreateMarshaler2(owner);
                __baseInterface = MarshalInspectable<object>.CreateMarshaler2(baseInterface);
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, IntPtr, IntPtr*, IntPtr*, int>**)ThisPtr)[6](ThisPtr, MarshalInspectable<object>.GetAbi(__owner), MarshalInspectable<object>.GetAbi(__baseInterface), &__innerInterface, &__retval));
                global::System.GC.KeepAlive(_obj);
                innerInterface = MarshalInspectable<object>.FromAbi(__innerInterface);
                return global::ABI.Microsoft.UI.Xaml.Automation.Peers.GridViewAutomationPeer.FromAbi(__retval);
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__owner);
                MarshalInspectable<object>.DisposeMarshaler(__baseInterface);
                MarshalInspectable<object>.DisposeAbi(__innerInterface);
                global::ABI.Microsoft.UI.Xaml.Automation.Peers.GridViewAutomationPeer.DisposeAbi(__retval);
            }
        }


        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0xE1, 0x29, 0xB8, 0x71, 0x57, 0x7D, 0xB, 0x58, 0xB1, 0xA6, 0xD7, 0x80, 0xED, 0x99, 0x22, 0x48 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("71B829E1-7D57-580B-B1A6-D780ED992248")]
    internal interface IGridViewAutomationPeerFactory : global::Microsoft.UI.Xaml.Automation.Peers.IGridViewAutomationPeerFactory
    {
    }
    internal static class IGridViewHeaderItemAutomationPeerMethods
    {



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0xB0, 0xF4, 0x8A, 0xC3, 0x57, 0x27, 0x9B, 0x56, 0xBD, 0xC7, 0xA5, 0xB7, 0xB7, 0x4F, 0xFD, 0xBA };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("C38AF4B0-2757-569B-BDC7-A5B7B74FFDBA")]
    internal interface IGridViewHeaderItemAutomationPeer : global::Microsoft.UI.Xaml.Automation.Peers.IGridViewHeaderItemAutomationPeer
    {
    }
    internal static class IGridViewHeaderItemAutomationPeerFactoryMethods
    {


        internal static unsafe global::Microsoft.UI.Xaml.Automation.Peers.GridViewHeaderItemAutomationPeer CreateInstanceWithOwner(IObjectReference _obj, global::Microsoft.UI.Xaml.Controls.GridViewHeaderItem owner, object baseInterface, out object innerInterface)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __owner = default;
            ObjectReferenceValue __baseInterface = default;
            IntPtr __innerInterface = default;
            IntPtr __retval = default;
            try
            {
                __owner = global::ABI.Microsoft.UI.Xaml.Controls.GridViewHeaderItem.CreateMarshaler2(owner);
                __baseInterface = MarshalInspectable<object>.CreateMarshaler2(baseInterface);
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, IntPtr, IntPtr*, IntPtr*, int>**)ThisPtr)[6](ThisPtr, MarshalInspectable<object>.GetAbi(__owner), MarshalInspectable<object>.GetAbi(__baseInterface), &__innerInterface, &__retval));
                global::System.GC.KeepAlive(_obj);
                innerInterface = MarshalInspectable<object>.FromAbi(__innerInterface);
                return global::ABI.Microsoft.UI.Xaml.Automation.Peers.GridViewHeaderItemAutomationPeer.FromAbi(__retval);
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__owner);
                MarshalInspectable<object>.DisposeMarshaler(__baseInterface);
                MarshalInspectable<object>.DisposeAbi(__innerInterface);
                global::ABI.Microsoft.UI.Xaml.Automation.Peers.GridViewHeaderItemAutomationPeer.DisposeAbi(__retval);
            }
        }


        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0x9A, 0x99, 0x61, 0x61, 0x42, 0xE0, 0x9B, 0x5D, 0xAA, 0x38, 0x9F, 0xE1, 0x29, 0x6B, 0xFB, 0x1 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("6161999A-E042-5D9B-AA38-9FE1296BFB01")]
    internal interface IGridViewHeaderItemAutomationPeerFactory : global::Microsoft.UI.Xaml.Automation.Peers.IGridViewHeaderItemAutomationPeerFactory
    {
    }
    internal static class IGridViewItemAutomationPeerMethods
    {



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0x2E, 0x9C, 0x24, 0xDE, 0x19, 0x54, 0x98, 0x57, 0xB6, 0x25, 0xCD, 0x2C, 0x5, 0x30, 0x75, 0x72 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("DE249C2E-5419-5798-B625-CD2C05307572")]
    internal interface IGridViewItemAutomationPeer : global::Microsoft.UI.Xaml.Automation.Peers.IGridViewItemAutomationPeer
    {
    }
    internal static class IGridViewItemAutomationPeerFactoryMethods
    {


        internal static unsafe global::Microsoft.UI.Xaml.Automation.Peers.GridViewItemAutomationPeer CreateInstanceWithOwner(IObjectReference _obj, global::Microsoft.UI.Xaml.Controls.GridViewItem owner, object baseInterface, out object innerInterface)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __owner = default;
            ObjectReferenceValue __baseInterface = default;
            IntPtr __innerInterface = default;
            IntPtr __retval = default;
            try
            {
                __owner = global::ABI.Microsoft.UI.Xaml.Controls.GridViewItem.CreateMarshaler2(owner);
                __baseInterface = MarshalInspectable<object>.CreateMarshaler2(baseInterface);
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, IntPtr, IntPtr*, IntPtr*, int>**)ThisPtr)[6](ThisPtr, MarshalInspectable<object>.GetAbi(__owner), MarshalInspectable<object>.GetAbi(__baseInterface), &__innerInterface, &__retval));
                global::System.GC.KeepAlive(_obj);
                innerInterface = MarshalInspectable<object>.FromAbi(__innerInterface);
                return global::ABI.Microsoft.UI.Xaml.Automation.Peers.GridViewItemAutomationPeer.FromAbi(__retval);
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__owner);
                MarshalInspectable<object>.DisposeMarshaler(__baseInterface);
                MarshalInspectable<object>.DisposeAbi(__innerInterface);
                global::ABI.Microsoft.UI.Xaml.Automation.Peers.GridViewItemAutomationPeer.DisposeAbi(__retval);
            }
        }


        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0x51, 0x59, 0x73, 0x4, 0x91, 0xF, 0xF5, 0x53, 0x98, 0x4B, 0x75, 0xBF, 0xE, 0xD4, 0x15, 0x40 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("04735951-0F91-53F5-984B-75BF0ED41540")]
    internal interface IGridViewItemAutomationPeerFactory : global::Microsoft.UI.Xaml.Automation.Peers.IGridViewItemAutomationPeerFactory
    {
    }
    internal static class IGridViewItemDataAutomationPeerMethods
    {



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0xA0, 0xC2, 0x72, 0x3, 0x94, 0x50, 0x11, 0x58, 0x96, 0xBA, 0xD, 0xBE, 0x77, 0x18, 0x74, 0x35 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("0372C2A0-5094-5811-96BA-0DBE77187435")]
    internal interface IGridViewItemDataAutomationPeer : global::Microsoft.UI.Xaml.Automation.Peers.IGridViewItemDataAutomationPeer
    {
    }
    internal static class IGridViewItemDataAutomationPeerFactoryMethods
    {


        internal static unsafe global::Microsoft.UI.Xaml.Automation.Peers.GridViewItemDataAutomationPeer CreateInstanceWithParentAndItem(IObjectReference _obj, object item, global::Microsoft.UI.Xaml.Automation.Peers.GridViewAutomationPeer parent, object baseInterface, out object innerInterface)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __item = default;
            ObjectReferenceValue __parent = default;
            ObjectReferenceValue __baseInterface = default;
            IntPtr __innerInterface = default;
            IntPtr __retval = default;
            try
            {
                __item = MarshalInspectable<object>.CreateMarshaler2(item);
                __parent = global::ABI.Microsoft.UI.Xaml.Automation.Peers.GridViewAutomationPeer.CreateMarshaler2(parent);
                __baseInterface = MarshalInspectable<object>.CreateMarshaler2(baseInterface);
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, IntPtr, IntPtr, IntPtr*, IntPtr*, int>**)ThisPtr)[6](ThisPtr, MarshalInspectable<object>.GetAbi(__item), MarshalInspectable<object>.GetAbi(__parent), MarshalInspectable<object>.GetAbi(__baseInterface), &__innerInterface, &__retval));
                global::System.GC.KeepAlive(_obj);
                innerInterface = MarshalInspectable<object>.FromAbi(__innerInterface);
                return global::ABI.Microsoft.UI.Xaml.Automation.Peers.GridViewItemDataAutomationPeer.FromAbi(__retval);
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__item);
                MarshalInspectable<object>.DisposeMarshaler(__parent);
                MarshalInspectable<object>.DisposeMarshaler(__baseInterface);
                MarshalInspectable<object>.DisposeAbi(__innerInterface);
                global::ABI.Microsoft.UI.Xaml.Automation.Peers.GridViewItemDataAutomationPeer.DisposeAbi(__retval);
            }
        }


        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0x3E, 0x7B, 0x13, 0x44, 0xF3, 0xC6, 0xCE, 0x53, 0x91, 0x5D, 0xFC, 0x8E, 0x60, 0xCC, 0xEE, 0x74 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("44137B3E-C6F3-53CE-915D-FC8E60CCEE74")]
    internal interface IGridViewItemDataAutomationPeerFactory : global::Microsoft.UI.Xaml.Automation.Peers.IGridViewItemDataAutomationPeerFactory
    {
    }
    internal static class IGroupItemAutomationPeerMethods
    {



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0x1, 0x7, 0xF5, 0x2F, 0x64, 0x41, 0x1D, 0x51, 0xBB, 0x23, 0xD2, 0x1E, 0xB8, 0x8D, 0x5E, 0xB9 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("2FF50701-4164-511D-BB23-D21EB88D5EB9")]
    internal interface IGroupItemAutomationPeer : global::Microsoft.UI.Xaml.Automation.Peers.IGroupItemAutomationPeer
    {
    }
    internal static class IGroupItemAutomationPeerFactoryMethods
    {


        internal static unsafe global::Microsoft.UI.Xaml.Automation.Peers.GroupItemAutomationPeer CreateInstanceWithOwner(IObjectReference _obj, global::Microsoft.UI.Xaml.Controls.GroupItem owner, object baseInterface, out object innerInterface)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __owner = default;
            ObjectReferenceValue __baseInterface = default;
            IntPtr __innerInterface = default;
            IntPtr __retval = default;
            try
            {
                __owner = global::ABI.Microsoft.UI.Xaml.Controls.GroupItem.CreateMarshaler2(owner);
                __baseInterface = MarshalInspectable<object>.CreateMarshaler2(baseInterface);
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, IntPtr, IntPtr*, IntPtr*, int>**)ThisPtr)[6](ThisPtr, MarshalInspectable<object>.GetAbi(__owner), MarshalInspectable<object>.GetAbi(__baseInterface), &__innerInterface, &__retval));
                global::System.GC.KeepAlive(_obj);
                innerInterface = MarshalInspectable<object>.FromAbi(__innerInterface);
                return global::ABI.Microsoft.UI.Xaml.Automation.Peers.GroupItemAutomationPeer.FromAbi(__retval);
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__owner);
                MarshalInspectable<object>.DisposeMarshaler(__baseInterface);
                MarshalInspectable<object>.DisposeAbi(__innerInterface);
                global::ABI.Microsoft.UI.Xaml.Automation.Peers.GroupItemAutomationPeer.DisposeAbi(__retval);
            }
        }


        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0xD9, 0xE, 0xB1, 0xCD, 0xD3, 0xD1, 0xAA, 0x5F, 0x87, 0x72, 0x70, 0x1, 0x4D, 0xA6, 0x66, 0xB3 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("CDB10ED9-D1D3-5FAA-8772-70014DA666B3")]
    internal interface IGroupItemAutomationPeerFactory : global::Microsoft.UI.Xaml.Automation.Peers.IGroupItemAutomationPeerFactory
    {
    }
    internal static class IHubAutomationPeerMethods
    {



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0xB6, 0xC, 0xA2, 0x8F, 0xC1, 0x42, 0x1E, 0x53, 0xB5, 0x4F, 0xFC, 0xAF, 0x33, 0xC9, 0x43, 0xA9 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("8FA20CB6-42C1-531E-B54F-FCAF33C943A9")]
    internal interface IHubAutomationPeer : global::Microsoft.UI.Xaml.Automation.Peers.IHubAutomationPeer
    {
    }
    internal static class IHubAutomationPeerFactoryMethods
    {


        internal static unsafe global::Microsoft.UI.Xaml.Automation.Peers.HubAutomationPeer CreateInstanceWithOwner(IObjectReference _obj, global::Microsoft.UI.Xaml.Controls.Hub owner, object baseInterface, out object innerInterface)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __owner = default;
            ObjectReferenceValue __baseInterface = default;
            IntPtr __innerInterface = default;
            IntPtr __retval = default;
            try
            {
                __owner = global::ABI.Microsoft.UI.Xaml.Controls.Hub.CreateMarshaler2(owner);
                __baseInterface = MarshalInspectable<object>.CreateMarshaler2(baseInterface);
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, IntPtr, IntPtr*, IntPtr*, int>**)ThisPtr)[6](ThisPtr, MarshalInspectable<object>.GetAbi(__owner), MarshalInspectable<object>.GetAbi(__baseInterface), &__innerInterface, &__retval));
                global::System.GC.KeepAlive(_obj);
                innerInterface = MarshalInspectable<object>.FromAbi(__innerInterface);
                return global::ABI.Microsoft.UI.Xaml.Automation.Peers.HubAutomationPeer.FromAbi(__retval);
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__owner);
                MarshalInspectable<object>.DisposeMarshaler(__baseInterface);
                MarshalInspectable<object>.DisposeAbi(__innerInterface);
                global::ABI.Microsoft.UI.Xaml.Automation.Peers.HubAutomationPeer.DisposeAbi(__retval);
            }
        }


        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0xCF, 0xF1, 0xB1, 0xC1, 0x26, 0x39, 0xC9, 0x56, 0xB6, 0x90, 0x53, 0xC, 0x8B, 0xC7, 0x88, 0x6 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("C1B1F1CF-3926-56C9-B690-530C8BC78806")]
    internal interface IHubAutomationPeerFactory : global::Microsoft.UI.Xaml.Automation.Peers.IHubAutomationPeerFactory
    {
    }
    internal static class IHubSectionAutomationPeerMethods
    {



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0xAB, 0x94, 0x4E, 0x17, 0x33, 0xC0, 0x4A, 0x53, 0x89, 0x5C, 0xEA, 0xAF, 0x1D, 0xCC, 0x43, 0x52 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("174E94AB-C033-534A-895C-EAAF1DCC4352")]
    internal interface IHubSectionAutomationPeer : global::Microsoft.UI.Xaml.Automation.Peers.IHubSectionAutomationPeer
    {
    }
    internal static class IHubSectionAutomationPeerFactoryMethods
    {


        internal static unsafe global::Microsoft.UI.Xaml.Automation.Peers.HubSectionAutomationPeer CreateInstanceWithOwner(IObjectReference _obj, global::Microsoft.UI.Xaml.Controls.HubSection owner, object baseInterface, out object innerInterface)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __owner = default;
            ObjectReferenceValue __baseInterface = default;
            IntPtr __innerInterface = default;
            IntPtr __retval = default;
            try
            {
                __owner = global::ABI.Microsoft.UI.Xaml.Controls.HubSection.CreateMarshaler2(owner);
                __baseInterface = MarshalInspectable<object>.CreateMarshaler2(baseInterface);
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, IntPtr, IntPtr*, IntPtr*, int>**)ThisPtr)[6](ThisPtr, MarshalInspectable<object>.GetAbi(__owner), MarshalInspectable<object>.GetAbi(__baseInterface), &__innerInterface, &__retval));
                global::System.GC.KeepAlive(_obj);
                innerInterface = MarshalInspectable<object>.FromAbi(__innerInterface);
                return global::ABI.Microsoft.UI.Xaml.Automation.Peers.HubSectionAutomationPeer.FromAbi(__retval);
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__owner);
                MarshalInspectable<object>.DisposeMarshaler(__baseInterface);
                MarshalInspectable<object>.DisposeAbi(__innerInterface);
                global::ABI.Microsoft.UI.Xaml.Automation.Peers.HubSectionAutomationPeer.DisposeAbi(__retval);
            }
        }


        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0x8, 0xCF, 0x56, 0xDC, 0x31, 0x20, 0xB6, 0x56, 0x9A, 0xD5, 0x7F, 0x8D, 0x74, 0x75, 0xD3, 0x5D };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("DC56CF08-2031-56B6-9AD5-7F8D7475D35D")]
    internal interface IHubSectionAutomationPeerFactory : global::Microsoft.UI.Xaml.Automation.Peers.IHubSectionAutomationPeerFactory
    {
    }
    internal static class IHyperlinkButtonAutomationPeerMethods
    {



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0xB2, 0xA, 0x77, 0x6A, 0xD0, 0x2, 0xBA, 0x59, 0xA2, 0x8E, 0x3D, 0xFB, 0xA1, 0xF1, 0xD, 0xD8 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("6A770AB2-02D0-59BA-A28E-3DFBA1F10DD8")]
    internal interface IHyperlinkButtonAutomationPeer : global::Microsoft.UI.Xaml.Automation.Peers.IHyperlinkButtonAutomationPeer
    {
    }
    internal static class IHyperlinkButtonAutomationPeerFactoryMethods
    {


        internal static unsafe global::Microsoft.UI.Xaml.Automation.Peers.HyperlinkButtonAutomationPeer CreateInstanceWithOwner(IObjectReference _obj, global::Microsoft.UI.Xaml.Controls.HyperlinkButton owner, object baseInterface, out object innerInterface)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __owner = default;
            ObjectReferenceValue __baseInterface = default;
            IntPtr __innerInterface = default;
            IntPtr __retval = default;
            try
            {
                __owner = global::ABI.Microsoft.UI.Xaml.Controls.HyperlinkButton.CreateMarshaler2(owner);
                __baseInterface = MarshalInspectable<object>.CreateMarshaler2(baseInterface);
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, IntPtr, IntPtr*, IntPtr*, int>**)ThisPtr)[6](ThisPtr, MarshalInspectable<object>.GetAbi(__owner), MarshalInspectable<object>.GetAbi(__baseInterface), &__innerInterface, &__retval));
                global::System.GC.KeepAlive(_obj);
                innerInterface = MarshalInspectable<object>.FromAbi(__innerInterface);
                return global::ABI.Microsoft.UI.Xaml.Automation.Peers.HyperlinkButtonAutomationPeer.FromAbi(__retval);
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__owner);
                MarshalInspectable<object>.DisposeMarshaler(__baseInterface);
                MarshalInspectable<object>.DisposeAbi(__innerInterface);
                global::ABI.Microsoft.UI.Xaml.Automation.Peers.HyperlinkButtonAutomationPeer.DisposeAbi(__retval);
            }
        }


        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0x61, 0xE6, 0x76, 0x24, 0xCE, 0xAB, 0x35, 0x5D, 0xB3, 0x8B, 0x6C, 0xEE, 0x2C, 0x41, 0x48, 0xF4 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("2476E661-ABCE-5D35-B38B-6CEE2C4148F4")]
    internal interface IHyperlinkButtonAutomationPeerFactory : global::Microsoft.UI.Xaml.Automation.Peers.IHyperlinkButtonAutomationPeerFactory
    {
    }
    internal static class IImageAutomationPeerMethods
    {



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0x84, 0xB1, 0x6E, 0x1F, 0x65, 0x87, 0x55, 0x54, 0xBD, 0x1D, 0x93, 0xC2, 0x51, 0xC1, 0x7F, 0x9B };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("1F6EB184-8765-5455-BD1D-93C251C17F9B")]
    internal interface IImageAutomationPeer : global::Microsoft.UI.Xaml.Automation.Peers.IImageAutomationPeer
    {
    }
    internal static class IImageAutomationPeerFactoryMethods
    {


        internal static unsafe global::Microsoft.UI.Xaml.Automation.Peers.ImageAutomationPeer CreateInstanceWithOwner(IObjectReference _obj, global::Microsoft.UI.Xaml.Controls.Image owner, object baseInterface, out object innerInterface)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __owner = default;
            ObjectReferenceValue __baseInterface = default;
            IntPtr __innerInterface = default;
            IntPtr __retval = default;
            try
            {
                __owner = global::ABI.Microsoft.UI.Xaml.Controls.Image.CreateMarshaler2(owner);
                __baseInterface = MarshalInspectable<object>.CreateMarshaler2(baseInterface);
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, IntPtr, IntPtr*, IntPtr*, int>**)ThisPtr)[6](ThisPtr, MarshalInspectable<object>.GetAbi(__owner), MarshalInspectable<object>.GetAbi(__baseInterface), &__innerInterface, &__retval));
                global::System.GC.KeepAlive(_obj);
                innerInterface = MarshalInspectable<object>.FromAbi(__innerInterface);
                return global::ABI.Microsoft.UI.Xaml.Automation.Peers.ImageAutomationPeer.FromAbi(__retval);
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__owner);
                MarshalInspectable<object>.DisposeMarshaler(__baseInterface);
                MarshalInspectable<object>.DisposeAbi(__innerInterface);
                global::ABI.Microsoft.UI.Xaml.Automation.Peers.ImageAutomationPeer.DisposeAbi(__retval);
            }
        }


        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0x1B, 0x0, 0x26, 0x1B, 0xA6, 0x49, 0xF4, 0x5F, 0xB1, 0xB1, 0x2D, 0x50, 0x4D, 0x2E, 0xF1, 0x33 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("1B26001B-49A6-5FF4-B1B1-2D504D2EF133")]
    internal interface IImageAutomationPeerFactory : global::Microsoft.UI.Xaml.Automation.Peers.IImageAutomationPeerFactory
    {
    }
    internal static class IInfoBarAutomationPeerMethods
    {



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0xEB, 0x40, 0x2C, 0xAA, 0x80, 0xDF, 0x50, 0x50, 0x92, 0xC5, 0x5F, 0xDA, 0x5A, 0xBF, 0xDE, 0xF2 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("AA2C40EB-DF80-5050-92C5-5FDA5ABFDEF2")]
    internal interface IInfoBarAutomationPeer : global::Microsoft.UI.Xaml.Automation.Peers.IInfoBarAutomationPeer
    {
    }
    internal static class IInfoBarAutomationPeerFactoryMethods
    {


        internal static unsafe global::Microsoft.UI.Xaml.Automation.Peers.InfoBarAutomationPeer CreateInstance(IObjectReference _obj, global::Microsoft.UI.Xaml.Controls.InfoBar owner, object baseInterface, out object innerInterface)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __owner = default;
            ObjectReferenceValue __baseInterface = default;
            IntPtr __innerInterface = default;
            IntPtr __retval = default;
            try
            {
                __owner = global::ABI.Microsoft.UI.Xaml.Controls.InfoBar.CreateMarshaler2(owner);
                __baseInterface = MarshalInspectable<object>.CreateMarshaler2(baseInterface);
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, IntPtr, IntPtr*, IntPtr*, int>**)ThisPtr)[6](ThisPtr, MarshalInspectable<object>.GetAbi(__owner), MarshalInspectable<object>.GetAbi(__baseInterface), &__innerInterface, &__retval));
                global::System.GC.KeepAlive(_obj);
                innerInterface = MarshalInspectable<object>.FromAbi(__innerInterface);
                return global::ABI.Microsoft.UI.Xaml.Automation.Peers.InfoBarAutomationPeer.FromAbi(__retval);
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__owner);
                MarshalInspectable<object>.DisposeMarshaler(__baseInterface);
                MarshalInspectable<object>.DisposeAbi(__innerInterface);
                global::ABI.Microsoft.UI.Xaml.Automation.Peers.InfoBarAutomationPeer.DisposeAbi(__retval);
            }
        }


        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0x90, 0xE5, 0xD3, 0x5F, 0xB9, 0x68, 0x9C, 0x5C, 0xA5, 0x72, 0xB, 0xC1, 0x1, 0x67, 0xCE, 0x46 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("5FD3E590-68B9-5C9C-A572-0BC10167CE46")]
    internal interface IInfoBarAutomationPeerFactory : global::Microsoft.UI.Xaml.Automation.Peers.IInfoBarAutomationPeerFactory
    {
    }
    internal static class IItemAutomationPeerMethods
    {

        internal static unsafe object get_Item(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[6](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return MarshalInspectable<object>.FromAbi(__retval);
            }
            finally
            {
                MarshalInspectable<object>.DisposeAbi(__retval);
            }
        }

        internal static unsafe global::Microsoft.UI.Xaml.Automation.Peers.ItemsControlAutomationPeer get_ItemsControlAutomationPeer(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[7](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Xaml.Automation.Peers.ItemsControlAutomationPeer.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.UI.Xaml.Automation.Peers.ItemsControlAutomationPeer.DisposeAbi(__retval);
            }
        }



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0xBB, 0x71, 0x8A, 0xBE, 0x36, 0x3E, 0xD2, 0x54, 0x92, 0xE, 0x60, 0x72, 0x2F, 0x1C, 0x62, 0xFF };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("BE8A71BB-3E36-54D2-920E-60722F1C62FF")]
    internal interface IItemAutomationPeer : global::Microsoft.UI.Xaml.Automation.Peers.IItemAutomationPeer
    {
    }
    internal static class IItemAutomationPeerFactoryMethods
    {


        internal static unsafe global::Microsoft.UI.Xaml.Automation.Peers.ItemAutomationPeer CreateInstanceWithParentAndItem(IObjectReference _obj, object item, global::Microsoft.UI.Xaml.Automation.Peers.ItemsControlAutomationPeer parent, object baseInterface, out object innerInterface)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __item = default;
            ObjectReferenceValue __parent = default;
            ObjectReferenceValue __baseInterface = default;
            IntPtr __innerInterface = default;
            IntPtr __retval = default;
            try
            {
                __item = MarshalInspectable<object>.CreateMarshaler2(item);
                __parent = global::ABI.Microsoft.UI.Xaml.Automation.Peers.ItemsControlAutomationPeer.CreateMarshaler2(parent);
                __baseInterface = MarshalInspectable<object>.CreateMarshaler2(baseInterface);
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, IntPtr, IntPtr, IntPtr*, IntPtr*, int>**)ThisPtr)[6](ThisPtr, MarshalInspectable<object>.GetAbi(__item), MarshalInspectable<object>.GetAbi(__parent), MarshalInspectable<object>.GetAbi(__baseInterface), &__innerInterface, &__retval));
                global::System.GC.KeepAlive(_obj);
                innerInterface = MarshalInspectable<object>.FromAbi(__innerInterface);
                return global::ABI.Microsoft.UI.Xaml.Automation.Peers.ItemAutomationPeer.FromAbi(__retval);
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__item);
                MarshalInspectable<object>.DisposeMarshaler(__parent);
                MarshalInspectable<object>.DisposeMarshaler(__baseInterface);
                MarshalInspectable<object>.DisposeAbi(__innerInterface);
                global::ABI.Microsoft.UI.Xaml.Automation.Peers.ItemAutomationPeer.DisposeAbi(__retval);
            }
        }


        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0x85, 0x88, 0xE0, 0xFF, 0xAC, 0x14, 0x59, 0x58, 0xB0, 0x31, 0x5F, 0x3A, 0x4C, 0x50, 0x4E, 0x6D };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("FFE08885-14AC-5859-B031-5F3A4C504E6D")]
    internal interface IItemAutomationPeerFactory : global::Microsoft.UI.Xaml.Automation.Peers.IItemAutomationPeerFactory
    {
    }
    internal static class IItemContainerAutomationPeerMethods
    {



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0xFB, 0xA1, 0x15, 0xF9, 0x4E, 0x75, 0xC7, 0x58, 0xAD, 0x2A, 0xB9, 0x95, 0x28, 0x70, 0x17, 0x93 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("F915A1FB-754E-58C7-AD2A-B99528701793")]
    internal interface IItemContainerAutomationPeer : global::Microsoft.UI.Xaml.Automation.Peers.IItemContainerAutomationPeer
    {
    }
    internal static class IItemContainerAutomationPeerFactoryMethods
    {


        internal static unsafe global::Microsoft.UI.Xaml.Automation.Peers.ItemContainerAutomationPeer CreateInstance(IObjectReference _obj, global::Microsoft.UI.Xaml.Controls.ItemContainer owner, object baseInterface, out object innerInterface)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __owner = default;
            ObjectReferenceValue __baseInterface = default;
            IntPtr __innerInterface = default;
            IntPtr __retval = default;
            try
            {
                __owner = global::ABI.Microsoft.UI.Xaml.Controls.ItemContainer.CreateMarshaler2(owner);
                __baseInterface = MarshalInspectable<object>.CreateMarshaler2(baseInterface);
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, IntPtr, IntPtr*, IntPtr*, int>**)ThisPtr)[6](ThisPtr, MarshalInspectable<object>.GetAbi(__owner), MarshalInspectable<object>.GetAbi(__baseInterface), &__innerInterface, &__retval));
                global::System.GC.KeepAlive(_obj);
                innerInterface = MarshalInspectable<object>.FromAbi(__innerInterface);
                return global::ABI.Microsoft.UI.Xaml.Automation.Peers.ItemContainerAutomationPeer.FromAbi(__retval);
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__owner);
                MarshalInspectable<object>.DisposeMarshaler(__baseInterface);
                MarshalInspectable<object>.DisposeAbi(__innerInterface);
                global::ABI.Microsoft.UI.Xaml.Automation.Peers.ItemContainerAutomationPeer.DisposeAbi(__retval);
            }
        }


        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0xB3, 0xCF, 0x0, 0x46, 0xE1, 0x72, 0x81, 0x51, 0x95, 0xEC, 0x65, 0x3F, 0x30, 0xB0, 0x1C, 0x78 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("4600CFB3-72E1-5181-95EC-653F30B01C78")]
    internal interface IItemContainerAutomationPeerFactory : global::Microsoft.UI.Xaml.Automation.Peers.IItemContainerAutomationPeerFactory
    {
    }
    internal static class IItemsControlAutomationPeerMethods
    {


        internal static unsafe global::Microsoft.UI.Xaml.Automation.Peers.ItemAutomationPeer CreateItemAutomationPeer(IObjectReference _obj, object item)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __item = default;
            IntPtr __retval = default;
            try
            {
                __item = MarshalInspectable<object>.CreateMarshaler2(item);
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, IntPtr*, int>**)ThisPtr)[6](ThisPtr, MarshalInspectable<object>.GetAbi(__item), &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Xaml.Automation.Peers.ItemAutomationPeer.FromAbi(__retval);
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__item);
                global::ABI.Microsoft.UI.Xaml.Automation.Peers.ItemAutomationPeer.DisposeAbi(__retval);
            }
        }


        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0x7E, 0xBB, 0xE7, 0xA, 0x7, 0x14, 0x47, 0x59, 0x98, 0x5F, 0x9D, 0x54, 0x2F, 0x43, 0x3A, 0xB1 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("0AE7BB7E-1407-5947-985F-9D542F433AB1")]
    internal interface IItemsControlAutomationPeer : global::Microsoft.UI.Xaml.Automation.Peers.IItemsControlAutomationPeer
    {
    }
    internal static class IItemsControlAutomationPeerFactoryMethods
    {


        internal static unsafe global::Microsoft.UI.Xaml.Automation.Peers.ItemsControlAutomationPeer CreateInstanceWithOwner(IObjectReference _obj, global::Microsoft.UI.Xaml.Controls.ItemsControl owner, object baseInterface, out object innerInterface)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __owner = default;
            ObjectReferenceValue __baseInterface = default;
            IntPtr __innerInterface = default;
            IntPtr __retval = default;
            try
            {
                __owner = global::ABI.Microsoft.UI.Xaml.Controls.ItemsControl.CreateMarshaler2(owner);
                __baseInterface = MarshalInspectable<object>.CreateMarshaler2(baseInterface);
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, IntPtr, IntPtr*, IntPtr*, int>**)ThisPtr)[6](ThisPtr, MarshalInspectable<object>.GetAbi(__owner), MarshalInspectable<object>.GetAbi(__baseInterface), &__innerInterface, &__retval));
                global::System.GC.KeepAlive(_obj);
                innerInterface = MarshalInspectable<object>.FromAbi(__innerInterface);
                return global::ABI.Microsoft.UI.Xaml.Automation.Peers.ItemsControlAutomationPeer.FromAbi(__retval);
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__owner);
                MarshalInspectable<object>.DisposeMarshaler(__baseInterface);
                MarshalInspectable<object>.DisposeAbi(__innerInterface);
                global::ABI.Microsoft.UI.Xaml.Automation.Peers.ItemsControlAutomationPeer.DisposeAbi(__retval);
            }
        }


        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0xCC, 0x24, 0xE5, 0x9D, 0x66, 0x5E, 0xA0, 0x51, 0xA7, 0xE0, 0xA1, 0x74, 0x2D, 0x28, 0x33, 0x4B };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("9DE524CC-5E66-51A0-A7E0-A1742D28334B")]
    internal interface IItemsControlAutomationPeerFactory : global::Microsoft.UI.Xaml.Automation.Peers.IItemsControlAutomationPeerFactory
    {
    }
    public static class IItemsControlAutomationPeerOverridesMethods
    {


        internal static unsafe global::Microsoft.UI.Xaml.Automation.Peers.ItemAutomationPeer OnCreateItemAutomationPeer(IObjectReference _obj, object item)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __item = default;
            IntPtr __retval = default;
            try
            {
                __item = MarshalInspectable<object>.CreateMarshaler2(item);
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, IntPtr*, int>**)ThisPtr)[6](ThisPtr, MarshalInspectable<object>.GetAbi(__item), &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Xaml.Automation.Peers.ItemAutomationPeer.FromAbi(__retval);
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__item);
                global::ABI.Microsoft.UI.Xaml.Automation.Peers.ItemAutomationPeer.DisposeAbi(__retval);
            }
        }


        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0x5B, 0xB3, 0x51, 0xD7, 0x6E, 0x23, 0x59, 0x58, 0xA8, 0x34, 0x52, 0xFA, 0x36, 0x9C, 0xD3, 0xBD };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

        public static global::System.IntPtr AbiToProjectionVftablePtr => IItemsControlAutomationPeerOverrides.AbiToProjectionVftablePtr;

    }

    [Guid("D751B35B-236E-5859-A834-52FA369CD3BD")]
    internal unsafe interface IItemsControlAutomationPeerOverrides : global::Microsoft.UI.Xaml.Automation.Peers.IItemsControlAutomationPeerOverrides
    {

        public static readonly IntPtr AbiToProjectionVftablePtr;
        static unsafe IItemsControlAutomationPeerOverrides()
        {
            AbiToProjectionVftablePtr = ComWrappersSupport.AllocateVtableMemory(typeof(IItemsControlAutomationPeerOverrides), sizeof(IInspectable.Vftbl) + sizeof(IntPtr) * 1);
            *(IInspectable.Vftbl*)AbiToProjectionVftablePtr = IInspectable.Vftbl.AbiToProjectionVftable;
            ((delegate* unmanaged[Stdcall]<IntPtr, IntPtr, IntPtr*, int>*)AbiToProjectionVftablePtr)[6] = &Do_Abi_OnCreateItemAutomationPeer_0;
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvStdcall) })]
        private static unsafe int Do_Abi_OnCreateItemAutomationPeer_0(IntPtr thisPtr, IntPtr item, IntPtr* result)
        {

            global::Microsoft.UI.Xaml.Automation.Peers.ItemAutomationPeer __result = default;

            *result = default;

            try
            {
                __result = global::WinRT.ComWrappersSupport.FindObject<global::Microsoft.UI.Xaml.Automation.Peers.IItemsControlAutomationPeerOverrides>(thisPtr).OnCreateItemAutomationPeer(MarshalInspectable<object>.FromAbi(item));
                *result = global::ABI.Microsoft.UI.Xaml.Automation.Peers.ItemAutomationPeer.FromManaged(__result);

            }
            catch (Exception __exception__)
            {
                global::WinRT.ExceptionHelpers.SetErrorInfo(__exception__);
                return global::WinRT.ExceptionHelpers.GetHRForException(__exception__);
            }
            return 0;
        }
    }

    internal static class IItemsViewAutomationPeerMethods
    {



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0x6D, 0xAD, 0x56, 0xD4, 0xD5, 0x18, 0xAE, 0x51, 0xA4, 0x4E, 0x95, 0x67, 0x1F, 0x84, 0x81, 0x84 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("D456AD6D-18D5-51AE-A44E-95671F848184")]
    internal interface IItemsViewAutomationPeer : global::Microsoft.UI.Xaml.Automation.Peers.IItemsViewAutomationPeer
    {
    }
    internal static class IItemsViewAutomationPeerFactoryMethods
    {


        internal static unsafe global::Microsoft.UI.Xaml.Automation.Peers.ItemsViewAutomationPeer CreateInstance(IObjectReference _obj, global::Microsoft.UI.Xaml.Controls.ItemsView owner, object baseInterface, out object innerInterface)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __owner = default;
            ObjectReferenceValue __baseInterface = default;
            IntPtr __innerInterface = default;
            IntPtr __retval = default;
            try
            {
                __owner = global::ABI.Microsoft.UI.Xaml.Controls.ItemsView.CreateMarshaler2(owner);
                __baseInterface = MarshalInspectable<object>.CreateMarshaler2(baseInterface);
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, IntPtr, IntPtr*, IntPtr*, int>**)ThisPtr)[6](ThisPtr, MarshalInspectable<object>.GetAbi(__owner), MarshalInspectable<object>.GetAbi(__baseInterface), &__innerInterface, &__retval));
                global::System.GC.KeepAlive(_obj);
                innerInterface = MarshalInspectable<object>.FromAbi(__innerInterface);
                return global::ABI.Microsoft.UI.Xaml.Automation.Peers.ItemsViewAutomationPeer.FromAbi(__retval);
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__owner);
                MarshalInspectable<object>.DisposeMarshaler(__baseInterface);
                MarshalInspectable<object>.DisposeAbi(__innerInterface);
                global::ABI.Microsoft.UI.Xaml.Automation.Peers.ItemsViewAutomationPeer.DisposeAbi(__retval);
            }
        }


        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0xC7, 0x29, 0xD3, 0x8F, 0x9C, 0xEA, 0xA3, 0x56, 0xA7, 0x9E, 0xBF, 0xFF, 0x5C, 0xA7, 0x43, 0x23 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("8FD329C7-EA9C-56A3-A79E-BFFF5CA74323")]
    internal interface IItemsViewAutomationPeerFactory : global::Microsoft.UI.Xaml.Automation.Peers.IItemsViewAutomationPeerFactory
    {
    }
    internal static class IListBoxAutomationPeerMethods
    {



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0x3F, 0xCA, 0xC1, 0x2B, 0x17, 0x36, 0xA8, 0x53, 0x94, 0xB9, 0xBE, 0xC9, 0x1D, 0x57, 0x35, 0x25 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("2BC1CA3F-3617-53A8-94B9-BEC91D573525")]
    internal interface IListBoxAutomationPeer : global::Microsoft.UI.Xaml.Automation.Peers.IListBoxAutomationPeer
    {
    }
    internal static class IListBoxAutomationPeerFactoryMethods
    {


        internal static unsafe global::Microsoft.UI.Xaml.Automation.Peers.ListBoxAutomationPeer CreateInstanceWithOwner(IObjectReference _obj, global::Microsoft.UI.Xaml.Controls.ListBox owner, object baseInterface, out object innerInterface)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __owner = default;
            ObjectReferenceValue __baseInterface = default;
            IntPtr __innerInterface = default;
            IntPtr __retval = default;
            try
            {
                __owner = global::ABI.Microsoft.UI.Xaml.Controls.ListBox.CreateMarshaler2(owner);
                __baseInterface = MarshalInspectable<object>.CreateMarshaler2(baseInterface);
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, IntPtr, IntPtr*, IntPtr*, int>**)ThisPtr)[6](ThisPtr, MarshalInspectable<object>.GetAbi(__owner), MarshalInspectable<object>.GetAbi(__baseInterface), &__innerInterface, &__retval));
                global::System.GC.KeepAlive(_obj);
                innerInterface = MarshalInspectable<object>.FromAbi(__innerInterface);
                return global::ABI.Microsoft.UI.Xaml.Automation.Peers.ListBoxAutomationPeer.FromAbi(__retval);
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__owner);
                MarshalInspectable<object>.DisposeMarshaler(__baseInterface);
                MarshalInspectable<object>.DisposeAbi(__innerInterface);
                global::ABI.Microsoft.UI.Xaml.Automation.Peers.ListBoxAutomationPeer.DisposeAbi(__retval);
            }
        }


        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0x6F, 0xAF, 0x4A, 0x0, 0x2C, 0xA1, 0xA4, 0x5F, 0xA1, 0xF7, 0xE3, 0xB0, 0xFB, 0xE4, 0x5D, 0xDD };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("004AAF6F-A12C-5FA4-A1F7-E3B0FBE45DDD")]
    internal interface IListBoxAutomationPeerFactory : global::Microsoft.UI.Xaml.Automation.Peers.IListBoxAutomationPeerFactory
    {
    }
    internal static class IListBoxItemAutomationPeerMethods
    {



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0xB4, 0xC4, 0xA8, 0x19, 0x3A, 0xE6, 0x2E, 0x5B, 0x8E, 0x2F, 0xC8, 0x34, 0xE6, 0xA0, 0x82, 0x4 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("19A8C4B4-E63A-5B2E-8E2F-C834E6A08204")]
    internal interface IListBoxItemAutomationPeer : global::Microsoft.UI.Xaml.Automation.Peers.IListBoxItemAutomationPeer
    {
    }
    internal static class IListBoxItemAutomationPeerFactoryMethods
    {


        internal static unsafe global::Microsoft.UI.Xaml.Automation.Peers.ListBoxItemAutomationPeer CreateInstanceWithOwner(IObjectReference _obj, global::Microsoft.UI.Xaml.Controls.ListBoxItem owner, object baseInterface, out object innerInterface)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __owner = default;
            ObjectReferenceValue __baseInterface = default;
            IntPtr __innerInterface = default;
            IntPtr __retval = default;
            try
            {
                __owner = global::ABI.Microsoft.UI.Xaml.Controls.ListBoxItem.CreateMarshaler2(owner);
                __baseInterface = MarshalInspectable<object>.CreateMarshaler2(baseInterface);
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, IntPtr, IntPtr*, IntPtr*, int>**)ThisPtr)[6](ThisPtr, MarshalInspectable<object>.GetAbi(__owner), MarshalInspectable<object>.GetAbi(__baseInterface), &__innerInterface, &__retval));
                global::System.GC.KeepAlive(_obj);
                innerInterface = MarshalInspectable<object>.FromAbi(__innerInterface);
                return global::ABI.Microsoft.UI.Xaml.Automation.Peers.ListBoxItemAutomationPeer.FromAbi(__retval);
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__owner);
                MarshalInspectable<object>.DisposeMarshaler(__baseInterface);
                MarshalInspectable<object>.DisposeAbi(__innerInterface);
                global::ABI.Microsoft.UI.Xaml.Automation.Peers.ListBoxItemAutomationPeer.DisposeAbi(__retval);
            }
        }


        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0xEF, 0x36, 0x6E, 0x93, 0xAE, 0xF, 0xA2, 0x58, 0x8F, 0xB2, 0x31, 0x39, 0x99, 0x79, 0x32, 0x63 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("936E36EF-0FAE-58A2-8FB2-313999793263")]
    internal interface IListBoxItemAutomationPeerFactory : global::Microsoft.UI.Xaml.Automation.Peers.IListBoxItemAutomationPeerFactory
    {
    }
    internal static class IListBoxItemDataAutomationPeerMethods
    {



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0xF, 0x66, 0x81, 0x2B, 0xDC, 0x46, 0x65, 0x57, 0xB1, 0xA, 0x22, 0x69, 0xD1, 0x2E, 0xBA, 0x42 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("2B81660F-46DC-5765-B10A-2269D12EBA42")]
    internal interface IListBoxItemDataAutomationPeer : global::Microsoft.UI.Xaml.Automation.Peers.IListBoxItemDataAutomationPeer
    {
    }
    internal static class IListBoxItemDataAutomationPeerFactoryMethods
    {


        internal static unsafe global::Microsoft.UI.Xaml.Automation.Peers.ListBoxItemDataAutomationPeer CreateInstanceWithParentAndItem(IObjectReference _obj, object item, global::Microsoft.UI.Xaml.Automation.Peers.ListBoxAutomationPeer parent, object baseInterface, out object innerInterface)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __item = default;
            ObjectReferenceValue __parent = default;
            ObjectReferenceValue __baseInterface = default;
            IntPtr __innerInterface = default;
            IntPtr __retval = default;
            try
            {
                __item = MarshalInspectable<object>.CreateMarshaler2(item);
                __parent = global::ABI.Microsoft.UI.Xaml.Automation.Peers.ListBoxAutomationPeer.CreateMarshaler2(parent);
                __baseInterface = MarshalInspectable<object>.CreateMarshaler2(baseInterface);
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, IntPtr, IntPtr, IntPtr*, IntPtr*, int>**)ThisPtr)[6](ThisPtr, MarshalInspectable<object>.GetAbi(__item), MarshalInspectable<object>.GetAbi(__parent), MarshalInspectable<object>.GetAbi(__baseInterface), &__innerInterface, &__retval));
                global::System.GC.KeepAlive(_obj);
                innerInterface = MarshalInspectable<object>.FromAbi(__innerInterface);
                return global::ABI.Microsoft.UI.Xaml.Automation.Peers.ListBoxItemDataAutomationPeer.FromAbi(__retval);
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__item);
                MarshalInspectable<object>.DisposeMarshaler(__parent);
                MarshalInspectable<object>.DisposeMarshaler(__baseInterface);
                MarshalInspectable<object>.DisposeAbi(__innerInterface);
                global::ABI.Microsoft.UI.Xaml.Automation.Peers.ListBoxItemDataAutomationPeer.DisposeAbi(__retval);
            }
        }


        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0x68, 0x70, 0xE9, 0x2C, 0x80, 0x52, 0xEC, 0x5B, 0x8B, 0xA5, 0x78, 0x5C, 0x58, 0x98, 0x6D, 0xCF };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("2CE97068-5280-5BEC-8BA5-785C58986DCF")]
    internal interface IListBoxItemDataAutomationPeerFactory : global::Microsoft.UI.Xaml.Automation.Peers.IListBoxItemDataAutomationPeerFactory
    {
    }
    internal static class IListPickerFlyoutPresenterAutomationPeerMethods
    {



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0x67, 0x47, 0x57, 0x16, 0xCA, 0xE8, 0x1A, 0x55, 0xA9, 0xE9, 0xE5, 0x39, 0x4D, 0xE3, 0x34, 0x69 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("16574767-E8CA-551A-A9E9-E5394DE33469")]
    internal interface IListPickerFlyoutPresenterAutomationPeer : global::Microsoft.UI.Xaml.Automation.Peers.IListPickerFlyoutPresenterAutomationPeer
    {
    }
    internal static class IListViewAutomationPeerMethods
    {



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0x73, 0x33, 0x2A, 0x8F, 0x5, 0xE3, 0xF3, 0x55, 0x92, 0x3E, 0xD9, 0xEE, 0xE8, 0xD1, 0xA6, 0xEE };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("8F2A3373-E305-55F3-923E-D9EEE8D1A6EE")]
    internal interface IListViewAutomationPeer : global::Microsoft.UI.Xaml.Automation.Peers.IListViewAutomationPeer
    {
    }
    internal static class IListViewAutomationPeerFactoryMethods
    {


        internal static unsafe global::Microsoft.UI.Xaml.Automation.Peers.ListViewAutomationPeer CreateInstanceWithOwner(IObjectReference _obj, global::Microsoft.UI.Xaml.Controls.ListView owner, object baseInterface, out object innerInterface)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __owner = default;
            ObjectReferenceValue __baseInterface = default;
            IntPtr __innerInterface = default;
            IntPtr __retval = default;
            try
            {
                __owner = global::ABI.Microsoft.UI.Xaml.Controls.ListView.CreateMarshaler2(owner);
                __baseInterface = MarshalInspectable<object>.CreateMarshaler2(baseInterface);
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, IntPtr, IntPtr*, IntPtr*, int>**)ThisPtr)[6](ThisPtr, MarshalInspectable<object>.GetAbi(__owner), MarshalInspectable<object>.GetAbi(__baseInterface), &__innerInterface, &__retval));
                global::System.GC.KeepAlive(_obj);
                innerInterface = MarshalInspectable<object>.FromAbi(__innerInterface);
                return global::ABI.Microsoft.UI.Xaml.Automation.Peers.ListViewAutomationPeer.FromAbi(__retval);
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__owner);
                MarshalInspectable<object>.DisposeMarshaler(__baseInterface);
                MarshalInspectable<object>.DisposeAbi(__innerInterface);
                global::ABI.Microsoft.UI.Xaml.Automation.Peers.ListViewAutomationPeer.DisposeAbi(__retval);
            }
        }


        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0xC2, 0x8F, 0x6D, 0x3C, 0xEA, 0x57, 0x4E, 0x58, 0x9A, 0x89, 0x50, 0x4C, 0x65, 0x25, 0x1D, 0xF };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("3C6D8FC2-57EA-584E-9A89-504C65251D0F")]
    internal interface IListViewAutomationPeerFactory : global::Microsoft.UI.Xaml.Automation.Peers.IListViewAutomationPeerFactory
    {
    }
    internal static class IListViewBaseAutomationPeerMethods
    {



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0x5C, 0x39, 0x9A, 0xAD, 0x96, 0x5A, 0x31, 0x53, 0x96, 0x36, 0xEE, 0x4C, 0x53, 0x18, 0x49, 0x86 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("AD9A395C-5A96-5331-9636-EE4C53184986")]
    internal interface IListViewBaseAutomationPeer : global::Microsoft.UI.Xaml.Automation.Peers.IListViewBaseAutomationPeer
    {
    }
    internal static class IListViewBaseAutomationPeerFactoryMethods
    {


        internal static unsafe global::Microsoft.UI.Xaml.Automation.Peers.ListViewBaseAutomationPeer CreateInstanceWithOwner(IObjectReference _obj, global::Microsoft.UI.Xaml.Controls.ListViewBase owner, object baseInterface, out object innerInterface)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __owner = default;
            ObjectReferenceValue __baseInterface = default;
            IntPtr __innerInterface = default;
            IntPtr __retval = default;
            try
            {
                __owner = global::ABI.Microsoft.UI.Xaml.Controls.ListViewBase.CreateMarshaler2(owner);
                __baseInterface = MarshalInspectable<object>.CreateMarshaler2(baseInterface);
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, IntPtr, IntPtr*, IntPtr*, int>**)ThisPtr)[6](ThisPtr, MarshalInspectable<object>.GetAbi(__owner), MarshalInspectable<object>.GetAbi(__baseInterface), &__innerInterface, &__retval));
                global::System.GC.KeepAlive(_obj);
                innerInterface = MarshalInspectable<object>.FromAbi(__innerInterface);
                return global::ABI.Microsoft.UI.Xaml.Automation.Peers.ListViewBaseAutomationPeer.FromAbi(__retval);
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__owner);
                MarshalInspectable<object>.DisposeMarshaler(__baseInterface);
                MarshalInspectable<object>.DisposeAbi(__innerInterface);
                global::ABI.Microsoft.UI.Xaml.Automation.Peers.ListViewBaseAutomationPeer.DisposeAbi(__retval);
            }
        }


        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0x30, 0xD0, 0x1E, 0x36, 0x93, 0x7C, 0x67, 0x59, 0x97, 0xCB, 0x4A, 0x96, 0x93, 0xE3, 0x40, 0x50 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("361ED030-7C93-5967-97CB-4A9693E34050")]
    internal interface IListViewBaseAutomationPeerFactory : global::Microsoft.UI.Xaml.Automation.Peers.IListViewBaseAutomationPeerFactory
    {
    }
    internal static class IListViewBaseHeaderItemAutomationPeerMethods
    {



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0xD2, 0x14, 0x33, 0x62, 0xF1, 0xC7, 0x3, 0x50, 0x95, 0x60, 0x7, 0xD4, 0x20, 0xA3, 0x3A, 0x2A };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("623314D2-C7F1-5003-9560-07D420A33A2A")]
    internal interface IListViewBaseHeaderItemAutomationPeer : global::Microsoft.UI.Xaml.Automation.Peers.IListViewBaseHeaderItemAutomationPeer
    {
    }
    internal static class IListViewBaseHeaderItemAutomationPeerFactoryMethods
    {


        internal static unsafe global::Microsoft.UI.Xaml.Automation.Peers.ListViewBaseHeaderItemAutomationPeer CreateInstanceWithOwner(IObjectReference _obj, global::Microsoft.UI.Xaml.Controls.ListViewBaseHeaderItem owner, object baseInterface, out object innerInterface)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __owner = default;
            ObjectReferenceValue __baseInterface = default;
            IntPtr __innerInterface = default;
            IntPtr __retval = default;
            try
            {
                __owner = global::ABI.Microsoft.UI.Xaml.Controls.ListViewBaseHeaderItem.CreateMarshaler2(owner);
                __baseInterface = MarshalInspectable<object>.CreateMarshaler2(baseInterface);
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, IntPtr, IntPtr*, IntPtr*, int>**)ThisPtr)[6](ThisPtr, MarshalInspectable<object>.GetAbi(__owner), MarshalInspectable<object>.GetAbi(__baseInterface), &__innerInterface, &__retval));
                global::System.GC.KeepAlive(_obj);
                innerInterface = MarshalInspectable<object>.FromAbi(__innerInterface);
                return global::ABI.Microsoft.UI.Xaml.Automation.Peers.ListViewBaseHeaderItemAutomationPeer.FromAbi(__retval);
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__owner);
                MarshalInspectable<object>.DisposeMarshaler(__baseInterface);
                MarshalInspectable<object>.DisposeAbi(__innerInterface);
                global::ABI.Microsoft.UI.Xaml.Automation.Peers.ListViewBaseHeaderItemAutomationPeer.DisposeAbi(__retval);
            }
        }


        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0x12, 0x12, 0x4, 0xE6, 0x4B, 0x90, 0x22, 0x5D, 0xB8, 0x56, 0xD3, 0xEF, 0x53, 0xD1, 0x6A, 0xA6 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("E6041212-904B-5D22-B856-D3EF53D16AA6")]
    internal interface IListViewBaseHeaderItemAutomationPeerFactory : global::Microsoft.UI.Xaml.Automation.Peers.IListViewBaseHeaderItemAutomationPeerFactory
    {
    }
    internal static class IListViewHeaderItemAutomationPeerMethods
    {



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0xCA, 0xEA, 0x93, 0x2, 0xDE, 0xF7, 0xD, 0x5A, 0x9B, 0xEB, 0x79, 0xDC, 0x1A, 0xC4, 0xA7, 0xDE };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("0293EACA-F7DE-5A0D-9BEB-79DC1AC4A7DE")]
    internal interface IListViewHeaderItemAutomationPeer : global::Microsoft.UI.Xaml.Automation.Peers.IListViewHeaderItemAutomationPeer
    {
    }
    internal static class IListViewHeaderItemAutomationPeerFactoryMethods
    {


        internal static unsafe global::Microsoft.UI.Xaml.Automation.Peers.ListViewHeaderItemAutomationPeer CreateInstanceWithOwner(IObjectReference _obj, global::Microsoft.UI.Xaml.Controls.ListViewHeaderItem owner, object baseInterface, out object innerInterface)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __owner = default;
            ObjectReferenceValue __baseInterface = default;
            IntPtr __innerInterface = default;
            IntPtr __retval = default;
            try
            {
                __owner = global::ABI.Microsoft.UI.Xaml.Controls.ListViewHeaderItem.CreateMarshaler2(owner);
                __baseInterface = MarshalInspectable<object>.CreateMarshaler2(baseInterface);
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, IntPtr, IntPtr*, IntPtr*, int>**)ThisPtr)[6](ThisPtr, MarshalInspectable<object>.GetAbi(__owner), MarshalInspectable<object>.GetAbi(__baseInterface), &__innerInterface, &__retval));
                global::System.GC.KeepAlive(_obj);
                innerInterface = MarshalInspectable<object>.FromAbi(__innerInterface);
                return global::ABI.Microsoft.UI.Xaml.Automation.Peers.ListViewHeaderItemAutomationPeer.FromAbi(__retval);
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__owner);
                MarshalInspectable<object>.DisposeMarshaler(__baseInterface);
                MarshalInspectable<object>.DisposeAbi(__innerInterface);
                global::ABI.Microsoft.UI.Xaml.Automation.Peers.ListViewHeaderItemAutomationPeer.DisposeAbi(__retval);
            }
        }


        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0xB, 0x48, 0xB3, 0xF7, 0xFF, 0xBF, 0x1C, 0x5C, 0xB9, 0xD5, 0x8E, 0xEE, 0x54, 0x4A, 0xEB, 0xF8 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("F7B3480B-BFFF-5C1C-B9D5-8EEE544AEBF8")]
    internal interface IListViewHeaderItemAutomationPeerFactory : global::Microsoft.UI.Xaml.Automation.Peers.IListViewHeaderItemAutomationPeerFactory
    {
    }
    internal static class IListViewItemAutomationPeerMethods
    {



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0x2C, 0x7F, 0x48, 0xDE, 0x61, 0x5A, 0x9E, 0x59, 0xB9, 0xFF, 0xF, 0xD7, 0x67, 0x5D, 0x7A, 0xF3 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("DE487F2C-5A61-599E-B9FF-0FD7675D7AF3")]
    internal interface IListViewItemAutomationPeer : global::Microsoft.UI.Xaml.Automation.Peers.IListViewItemAutomationPeer
    {
    }
    internal static class IListViewItemAutomationPeerFactoryMethods
    {


        internal static unsafe global::Microsoft.UI.Xaml.Automation.Peers.ListViewItemAutomationPeer CreateInstanceWithOwner(IObjectReference _obj, global::Microsoft.UI.Xaml.Controls.ListViewItem owner, object baseInterface, out object innerInterface)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __owner = default;
            ObjectReferenceValue __baseInterface = default;
            IntPtr __innerInterface = default;
            IntPtr __retval = default;
            try
            {
                __owner = global::ABI.Microsoft.UI.Xaml.Controls.ListViewItem.CreateMarshaler2(owner);
                __baseInterface = MarshalInspectable<object>.CreateMarshaler2(baseInterface);
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, IntPtr, IntPtr*, IntPtr*, int>**)ThisPtr)[6](ThisPtr, MarshalInspectable<object>.GetAbi(__owner), MarshalInspectable<object>.GetAbi(__baseInterface), &__innerInterface, &__retval));
                global::System.GC.KeepAlive(_obj);
                innerInterface = MarshalInspectable<object>.FromAbi(__innerInterface);
                return global::ABI.Microsoft.UI.Xaml.Automation.Peers.ListViewItemAutomationPeer.FromAbi(__retval);
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__owner);
                MarshalInspectable<object>.DisposeMarshaler(__baseInterface);
                MarshalInspectable<object>.DisposeAbi(__innerInterface);
                global::ABI.Microsoft.UI.Xaml.Automation.Peers.ListViewItemAutomationPeer.DisposeAbi(__retval);
            }
        }


        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0xA7, 0x5B, 0x62, 0xD6, 0xE3, 0x1A, 0xB1, 0x58, 0xAF, 0x12, 0xE5, 0xCD, 0x5A, 0xFC, 0x17, 0xFF };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("D6625BA7-1AE3-58B1-AF12-E5CD5AFC17FF")]
    internal interface IListViewItemAutomationPeerFactory : global::Microsoft.UI.Xaml.Automation.Peers.IListViewItemAutomationPeerFactory
    {
    }
    internal static class IListViewItemDataAutomationPeerMethods
    {



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0xD3, 0x28, 0xBB, 0x88, 0xED, 0x45, 0x15, 0x54, 0x82, 0x5F, 0xDD, 0x2D, 0xA5, 0x36, 0xC9, 0x68 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("88BB28D3-45ED-5415-825F-DD2DA536C968")]
    internal interface IListViewItemDataAutomationPeer : global::Microsoft.UI.Xaml.Automation.Peers.IListViewItemDataAutomationPeer
    {
    }
    internal static class IListViewItemDataAutomationPeerFactoryMethods
    {


        internal static unsafe global::Microsoft.UI.Xaml.Automation.Peers.ListViewItemDataAutomationPeer CreateInstanceWithParentAndItem(IObjectReference _obj, object item, global::Microsoft.UI.Xaml.Automation.Peers.ListViewBaseAutomationPeer parent, object baseInterface, out object innerInterface)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __item = default;
            ObjectReferenceValue __parent = default;
            ObjectReferenceValue __baseInterface = default;
            IntPtr __innerInterface = default;
            IntPtr __retval = default;
            try
            {
                __item = MarshalInspectable<object>.CreateMarshaler2(item);
                __parent = global::ABI.Microsoft.UI.Xaml.Automation.Peers.ListViewBaseAutomationPeer.CreateMarshaler2(parent);
                __baseInterface = MarshalInspectable<object>.CreateMarshaler2(baseInterface);
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, IntPtr, IntPtr, IntPtr*, IntPtr*, int>**)ThisPtr)[6](ThisPtr, MarshalInspectable<object>.GetAbi(__item), MarshalInspectable<object>.GetAbi(__parent), MarshalInspectable<object>.GetAbi(__baseInterface), &__innerInterface, &__retval));
                global::System.GC.KeepAlive(_obj);
                innerInterface = MarshalInspectable<object>.FromAbi(__innerInterface);
                return global::ABI.Microsoft.UI.Xaml.Automation.Peers.ListViewItemDataAutomationPeer.FromAbi(__retval);
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__item);
                MarshalInspectable<object>.DisposeMarshaler(__parent);
                MarshalInspectable<object>.DisposeMarshaler(__baseInterface);
                MarshalInspectable<object>.DisposeAbi(__innerInterface);
                global::ABI.Microsoft.UI.Xaml.Automation.Peers.ListViewItemDataAutomationPeer.DisposeAbi(__retval);
            }
        }


        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0xEA, 0xE7, 0x22, 0x9B, 0x7A, 0x6F, 0x5, 0x5C, 0x80, 0x72, 0x5B, 0xDD, 0xF5, 0x4F, 0x9B, 0xDA };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("9B22E7EA-6F7A-5C05-8072-5BDDF54F9BDA")]
    internal interface IListViewItemDataAutomationPeerFactory : global::Microsoft.UI.Xaml.Automation.Peers.IListViewItemDataAutomationPeerFactory
    {
    }
    internal static class ILoopingSelectorAutomationPeerMethods
    {



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0xF4, 0x12, 0xB6, 0x0, 0xAF, 0x8F, 0xC, 0x5C, 0x92, 0xE4, 0x43, 0x96, 0xE0, 0xF7, 0xB8, 0xD8 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("00B612F4-8FAF-5C0C-92E4-4396E0F7B8D8")]
    internal interface ILoopingSelectorAutomationPeer : global::Microsoft.UI.Xaml.Automation.Peers.ILoopingSelectorAutomationPeer
    {
    }
    internal static class ILoopingSelectorItemAutomationPeerMethods
    {



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0x61, 0x88, 0x10, 0x9C, 0x5F, 0x89, 0x92, 0x5E, 0x84, 0xC1, 0xFF, 0x12, 0x7, 0x2E, 0x7E, 0xC0 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("9C108861-895F-5E92-84C1-FF12072E7EC0")]
    internal interface ILoopingSelectorItemAutomationPeer : global::Microsoft.UI.Xaml.Automation.Peers.ILoopingSelectorItemAutomationPeer
    {
    }
    internal static class ILoopingSelectorItemDataAutomationPeerMethods
    {



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0xEB, 0x62, 0x83, 0x1F, 0x69, 0xA0, 0x21, 0x51, 0xA5, 0x6B, 0x61, 0x93, 0x65, 0xB4, 0x51, 0x5C };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("1F8362EB-A069-5121-A56B-619365B4515C")]
    internal interface ILoopingSelectorItemDataAutomationPeer : global::Microsoft.UI.Xaml.Automation.Peers.ILoopingSelectorItemDataAutomationPeer
    {
    }
    internal static class IMediaPlayerElementAutomationPeerMethods
    {



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0xA2, 0x8C, 0x8B, 0xF6, 0x28, 0x44, 0x35, 0x5C, 0xB6, 0xA8, 0x1B, 0x2E, 0xA0, 0x62, 0xC2, 0x2C };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("F68B8CA2-4428-5C35-B6A8-1B2EA062C22C")]
    internal interface IMediaPlayerElementAutomationPeer : global::Microsoft.UI.Xaml.Automation.Peers.IMediaPlayerElementAutomationPeer
    {
    }
    internal static class IMediaPlayerElementAutomationPeerFactoryMethods
    {


        internal static unsafe global::Microsoft.UI.Xaml.Automation.Peers.MediaPlayerElementAutomationPeer CreateInstanceWithOwner(IObjectReference _obj, global::Microsoft.UI.Xaml.Controls.MediaPlayerElement owner, object baseInterface, out object innerInterface)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __owner = default;
            ObjectReferenceValue __baseInterface = default;
            IntPtr __innerInterface = default;
            IntPtr __retval = default;
            try
            {
                __owner = global::ABI.Microsoft.UI.Xaml.Controls.MediaPlayerElement.CreateMarshaler2(owner);
                __baseInterface = MarshalInspectable<object>.CreateMarshaler2(baseInterface);
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, IntPtr, IntPtr*, IntPtr*, int>**)ThisPtr)[6](ThisPtr, MarshalInspectable<object>.GetAbi(__owner), MarshalInspectable<object>.GetAbi(__baseInterface), &__innerInterface, &__retval));
                global::System.GC.KeepAlive(_obj);
                innerInterface = MarshalInspectable<object>.FromAbi(__innerInterface);
                return global::ABI.Microsoft.UI.Xaml.Automation.Peers.MediaPlayerElementAutomationPeer.FromAbi(__retval);
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__owner);
                MarshalInspectable<object>.DisposeMarshaler(__baseInterface);
                MarshalInspectable<object>.DisposeAbi(__innerInterface);
                global::ABI.Microsoft.UI.Xaml.Automation.Peers.MediaPlayerElementAutomationPeer.DisposeAbi(__retval);
            }
        }


        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0x11, 0xAA, 0xE1, 0x2A, 0x7C, 0x7A, 0x80, 0x55, 0xA7, 0xD7, 0xF7, 0x59, 0x78, 0x59, 0xBD, 0xC2 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("2AE1AA11-7A7C-5580-A7D7-F7597859BDC2")]
    internal interface IMediaPlayerElementAutomationPeerFactory : global::Microsoft.UI.Xaml.Automation.Peers.IMediaPlayerElementAutomationPeerFactory
    {
    }
    internal static class IMediaTransportControlsAutomationPeerMethods
    {



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0x4E, 0xD, 0x85, 0xDA, 0x15, 0x87, 0xE7, 0x5A, 0x81, 0xA9, 0xAB, 0xD1, 0xD, 0x17, 0xC1, 0xED };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("DA850D4E-8715-5AE7-81A9-ABD10D17C1ED")]
    internal interface IMediaTransportControlsAutomationPeer : global::Microsoft.UI.Xaml.Automation.Peers.IMediaTransportControlsAutomationPeer
    {
    }
    internal static class IMediaTransportControlsAutomationPeerFactoryMethods
    {


        internal static unsafe global::Microsoft.UI.Xaml.Automation.Peers.MediaTransportControlsAutomationPeer CreateInstanceWithOwner(IObjectReference _obj, global::Microsoft.UI.Xaml.Controls.MediaTransportControls owner, object baseInterface, out object innerInterface)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __owner = default;
            ObjectReferenceValue __baseInterface = default;
            IntPtr __innerInterface = default;
            IntPtr __retval = default;
            try
            {
                __owner = global::ABI.Microsoft.UI.Xaml.Controls.MediaTransportControls.CreateMarshaler2(owner);
                __baseInterface = MarshalInspectable<object>.CreateMarshaler2(baseInterface);
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, IntPtr, IntPtr*, IntPtr*, int>**)ThisPtr)[6](ThisPtr, MarshalInspectable<object>.GetAbi(__owner), MarshalInspectable<object>.GetAbi(__baseInterface), &__innerInterface, &__retval));
                global::System.GC.KeepAlive(_obj);
                innerInterface = MarshalInspectable<object>.FromAbi(__innerInterface);
                return global::ABI.Microsoft.UI.Xaml.Automation.Peers.MediaTransportControlsAutomationPeer.FromAbi(__retval);
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__owner);
                MarshalInspectable<object>.DisposeMarshaler(__baseInterface);
                MarshalInspectable<object>.DisposeAbi(__innerInterface);
                global::ABI.Microsoft.UI.Xaml.Automation.Peers.MediaTransportControlsAutomationPeer.DisposeAbi(__retval);
            }
        }


        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0xE1, 0x81, 0xF2, 0x77, 0x51, 0xCB, 0x60, 0x53, 0xB7, 0x4E, 0x6F, 0xE4, 0xF8, 0xEE, 0x50, 0x28 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("77F281E1-CB51-5360-B74E-6FE4F8EE5028")]
    internal interface IMediaTransportControlsAutomationPeerFactory : global::Microsoft.UI.Xaml.Automation.Peers.IMediaTransportControlsAutomationPeerFactory
    {
    }
    internal static class IMenuBarAutomationPeerMethods
    {



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0x10, 0xE7, 0x96, 0xAE, 0xD3, 0xB9, 0xDD, 0x59, 0x97, 0x3E, 0x1B, 0xBC, 0x86, 0xCF, 0xA, 0xFC };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("AE96E710-B9D3-59DD-973E-1BBC86CF0AFC")]
    internal interface IMenuBarAutomationPeer : global::Microsoft.UI.Xaml.Automation.Peers.IMenuBarAutomationPeer
    {
    }
    internal static class IMenuBarAutomationPeerFactoryMethods
    {


        internal static unsafe global::Microsoft.UI.Xaml.Automation.Peers.MenuBarAutomationPeer CreateInstance(IObjectReference _obj, global::Microsoft.UI.Xaml.Controls.MenuBar owner, object baseInterface, out object innerInterface)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __owner = default;
            ObjectReferenceValue __baseInterface = default;
            IntPtr __innerInterface = default;
            IntPtr __retval = default;
            try
            {
                __owner = global::ABI.Microsoft.UI.Xaml.Controls.MenuBar.CreateMarshaler2(owner);
                __baseInterface = MarshalInspectable<object>.CreateMarshaler2(baseInterface);
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, IntPtr, IntPtr*, IntPtr*, int>**)ThisPtr)[6](ThisPtr, MarshalInspectable<object>.GetAbi(__owner), MarshalInspectable<object>.GetAbi(__baseInterface), &__innerInterface, &__retval));
                global::System.GC.KeepAlive(_obj);
                innerInterface = MarshalInspectable<object>.FromAbi(__innerInterface);
                return global::ABI.Microsoft.UI.Xaml.Automation.Peers.MenuBarAutomationPeer.FromAbi(__retval);
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__owner);
                MarshalInspectable<object>.DisposeMarshaler(__baseInterface);
                MarshalInspectable<object>.DisposeAbi(__innerInterface);
                global::ABI.Microsoft.UI.Xaml.Automation.Peers.MenuBarAutomationPeer.DisposeAbi(__retval);
            }
        }


        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0x3F, 0xCA, 0xE1, 0xD3, 0x2, 0x17, 0xD3, 0x5B, 0x8A, 0xDB, 0xE6, 0xF6, 0xCB, 0x9E, 0x75, 0x31 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("D3E1CA3F-1702-5BD3-8ADB-E6F6CB9E7531")]
    internal interface IMenuBarAutomationPeerFactory : global::Microsoft.UI.Xaml.Automation.Peers.IMenuBarAutomationPeerFactory
    {
    }
    internal static class IMenuBarItemAutomationPeerMethods
    {



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0xCD, 0x90, 0xA8, 0x2D, 0xAE, 0xA, 0xB9, 0x53, 0x8C, 0x12, 0x81, 0x0, 0x3F, 0x60, 0xED, 0x14 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("2DA890CD-0AAE-53B9-8C12-81003F60ED14")]
    internal interface IMenuBarItemAutomationPeer : global::Microsoft.UI.Xaml.Automation.Peers.IMenuBarItemAutomationPeer
    {
    }
    internal static class IMenuBarItemAutomationPeerFactoryMethods
    {


        internal static unsafe global::Microsoft.UI.Xaml.Automation.Peers.MenuBarItemAutomationPeer CreateInstance(IObjectReference _obj, global::Microsoft.UI.Xaml.Controls.MenuBarItem owner, object baseInterface, out object innerInterface)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __owner = default;
            ObjectReferenceValue __baseInterface = default;
            IntPtr __innerInterface = default;
            IntPtr __retval = default;
            try
            {
                __owner = global::ABI.Microsoft.UI.Xaml.Controls.MenuBarItem.CreateMarshaler2(owner);
                __baseInterface = MarshalInspectable<object>.CreateMarshaler2(baseInterface);
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, IntPtr, IntPtr*, IntPtr*, int>**)ThisPtr)[6](ThisPtr, MarshalInspectable<object>.GetAbi(__owner), MarshalInspectable<object>.GetAbi(__baseInterface), &__innerInterface, &__retval));
                global::System.GC.KeepAlive(_obj);
                innerInterface = MarshalInspectable<object>.FromAbi(__innerInterface);
                return global::ABI.Microsoft.UI.Xaml.Automation.Peers.MenuBarItemAutomationPeer.FromAbi(__retval);
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__owner);
                MarshalInspectable<object>.DisposeMarshaler(__baseInterface);
                MarshalInspectable<object>.DisposeAbi(__innerInterface);
                global::ABI.Microsoft.UI.Xaml.Automation.Peers.MenuBarItemAutomationPeer.DisposeAbi(__retval);
            }
        }


        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0xC4, 0x63, 0x3B, 0x60, 0x26, 0xA6, 0xE6, 0x50, 0x9C, 0x1A, 0x64, 0x96, 0x99, 0xCA, 0x7A, 0xD6 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("603B63C4-A626-50E6-9C1A-649699CA7AD6")]
    internal interface IMenuBarItemAutomationPeerFactory : global::Microsoft.UI.Xaml.Automation.Peers.IMenuBarItemAutomationPeerFactory
    {
    }
    internal static class IMenuFlyoutItemAutomationPeerMethods
    {



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0x52, 0x79, 0xB5, 0xFD, 0x4F, 0x2A, 0xD4, 0x5E, 0x8A, 0xDA, 0x32, 0xD, 0xEF, 0x75, 0xEA, 0x71 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("FDB57952-2A4F-5ED4-8ADA-320DEF75EA71")]
    internal interface IMenuFlyoutItemAutomationPeer : global::Microsoft.UI.Xaml.Automation.Peers.IMenuFlyoutItemAutomationPeer
    {
    }
    internal static class IMenuFlyoutItemAutomationPeerFactoryMethods
    {


        internal static unsafe global::Microsoft.UI.Xaml.Automation.Peers.MenuFlyoutItemAutomationPeer CreateInstanceWithOwner(IObjectReference _obj, global::Microsoft.UI.Xaml.Controls.MenuFlyoutItem owner, object baseInterface, out object innerInterface)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __owner = default;
            ObjectReferenceValue __baseInterface = default;
            IntPtr __innerInterface = default;
            IntPtr __retval = default;
            try
            {
                __owner = global::ABI.Microsoft.UI.Xaml.Controls.MenuFlyoutItem.CreateMarshaler2(owner);
                __baseInterface = MarshalInspectable<object>.CreateMarshaler2(baseInterface);
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, IntPtr, IntPtr*, IntPtr*, int>**)ThisPtr)[6](ThisPtr, MarshalInspectable<object>.GetAbi(__owner), MarshalInspectable<object>.GetAbi(__baseInterface), &__innerInterface, &__retval));
                global::System.GC.KeepAlive(_obj);
                innerInterface = MarshalInspectable<object>.FromAbi(__innerInterface);
                return global::ABI.Microsoft.UI.Xaml.Automation.Peers.MenuFlyoutItemAutomationPeer.FromAbi(__retval);
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__owner);
                MarshalInspectable<object>.DisposeMarshaler(__baseInterface);
                MarshalInspectable<object>.DisposeAbi(__innerInterface);
                global::ABI.Microsoft.UI.Xaml.Automation.Peers.MenuFlyoutItemAutomationPeer.DisposeAbi(__retval);
            }
        }


        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0x46, 0x5E, 0x12, 0xFE, 0x1C, 0x7C, 0x7C, 0x5A, 0x98, 0xE0, 0xC7, 0xAA, 0x3A, 0x0, 0xA6, 0xCD };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("FE125E46-7C1C-5A7C-98E0-C7AA3A00A6CD")]
    internal interface IMenuFlyoutItemAutomationPeerFactory : global::Microsoft.UI.Xaml.Automation.Peers.IMenuFlyoutItemAutomationPeerFactory
    {
    }
    internal static class IMenuFlyoutPresenterAutomationPeerMethods
    {



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0x77, 0xFF, 0xD3, 0x74, 0x92, 0x1E, 0x96, 0x5F, 0x99, 0xA1, 0x69, 0x7D, 0x74, 0x28, 0x3B, 0xA7 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("74D3FF77-1E92-5F96-99A1-697D74283BA7")]
    internal interface IMenuFlyoutPresenterAutomationPeer : global::Microsoft.UI.Xaml.Automation.Peers.IMenuFlyoutPresenterAutomationPeer
    {
    }
    internal static class IMenuFlyoutPresenterAutomationPeerFactoryMethods
    {


        internal static unsafe global::Microsoft.UI.Xaml.Automation.Peers.MenuFlyoutPresenterAutomationPeer CreateInstanceWithOwner(IObjectReference _obj, global::Microsoft.UI.Xaml.Controls.MenuFlyoutPresenter owner, object baseInterface, out object innerInterface)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __owner = default;
            ObjectReferenceValue __baseInterface = default;
            IntPtr __innerInterface = default;
            IntPtr __retval = default;
            try
            {
                __owner = global::ABI.Microsoft.UI.Xaml.Controls.MenuFlyoutPresenter.CreateMarshaler2(owner);
                __baseInterface = MarshalInspectable<object>.CreateMarshaler2(baseInterface);
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, IntPtr, IntPtr*, IntPtr*, int>**)ThisPtr)[6](ThisPtr, MarshalInspectable<object>.GetAbi(__owner), MarshalInspectable<object>.GetAbi(__baseInterface), &__innerInterface, &__retval));
                global::System.GC.KeepAlive(_obj);
                innerInterface = MarshalInspectable<object>.FromAbi(__innerInterface);
                return global::ABI.Microsoft.UI.Xaml.Automation.Peers.MenuFlyoutPresenterAutomationPeer.FromAbi(__retval);
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__owner);
                MarshalInspectable<object>.DisposeMarshaler(__baseInterface);
                MarshalInspectable<object>.DisposeAbi(__innerInterface);
                global::ABI.Microsoft.UI.Xaml.Automation.Peers.MenuFlyoutPresenterAutomationPeer.DisposeAbi(__retval);
            }
        }


        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0xFC, 0xFD, 0xAD, 0xBE, 0x35, 0x10, 0xFD, 0x5F, 0xBA, 0xE6, 0x3, 0xF7, 0x54, 0xB0, 0x5D, 0xCC };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("BEADFDFC-1035-5FFD-BAE6-03F754B05DCC")]
    internal interface IMenuFlyoutPresenterAutomationPeerFactory : global::Microsoft.UI.Xaml.Automation.Peers.IMenuFlyoutPresenterAutomationPeerFactory
    {
    }
    internal static class INavigationViewAutomationPeerMethods
    {



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0xAE, 0x3E, 0x1, 0x72, 0x15, 0xB0, 0xD, 0x55, 0xBA, 0x8D, 0xA0, 0x51, 0x12, 0xB6, 0x27, 0x31 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("72013EAE-B015-550D-BA8D-A05112B62731")]
    internal interface INavigationViewAutomationPeer : global::Microsoft.UI.Xaml.Automation.Peers.INavigationViewAutomationPeer
    {
    }
    internal static class INavigationViewAutomationPeerFactoryMethods
    {


        internal static unsafe global::Microsoft.UI.Xaml.Automation.Peers.NavigationViewAutomationPeer CreateInstance(IObjectReference _obj, global::Microsoft.UI.Xaml.Controls.NavigationView owner, object baseInterface, out object innerInterface)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __owner = default;
            ObjectReferenceValue __baseInterface = default;
            IntPtr __innerInterface = default;
            IntPtr __retval = default;
            try
            {
                __owner = global::ABI.Microsoft.UI.Xaml.Controls.NavigationView.CreateMarshaler2(owner);
                __baseInterface = MarshalInspectable<object>.CreateMarshaler2(baseInterface);
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, IntPtr, IntPtr*, IntPtr*, int>**)ThisPtr)[6](ThisPtr, MarshalInspectable<object>.GetAbi(__owner), MarshalInspectable<object>.GetAbi(__baseInterface), &__innerInterface, &__retval));
                global::System.GC.KeepAlive(_obj);
                innerInterface = MarshalInspectable<object>.FromAbi(__innerInterface);
                return global::ABI.Microsoft.UI.Xaml.Automation.Peers.NavigationViewAutomationPeer.FromAbi(__retval);
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__owner);
                MarshalInspectable<object>.DisposeMarshaler(__baseInterface);
                MarshalInspectable<object>.DisposeAbi(__innerInterface);
                global::ABI.Microsoft.UI.Xaml.Automation.Peers.NavigationViewAutomationPeer.DisposeAbi(__retval);
            }
        }


        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0x3, 0x5B, 0x7, 0x75, 0xF7, 0xA2, 0x69, 0x58, 0xB2, 0x3C, 0x63, 0xCB, 0xE5, 0xAC, 0xC4, 0x3A };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("75075B03-A2F7-5869-B23C-63CBE5ACC43A")]
    internal interface INavigationViewAutomationPeerFactory : global::Microsoft.UI.Xaml.Automation.Peers.INavigationViewAutomationPeerFactory
    {
    }
    internal static class INavigationViewItemAutomationPeerMethods
    {



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0x7A, 0x4C, 0x92, 0xC7, 0x9F, 0x73, 0x51, 0x52, 0x9B, 0x86, 0xDF, 0x64, 0x86, 0xEB, 0x8, 0xA7 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("C7924C7A-739F-5251-9B86-DF6486EB08A7")]
    internal interface INavigationViewItemAutomationPeer : global::Microsoft.UI.Xaml.Automation.Peers.INavigationViewItemAutomationPeer
    {
    }
    internal static class INavigationViewItemAutomationPeerFactoryMethods
    {


        internal static unsafe global::Microsoft.UI.Xaml.Automation.Peers.NavigationViewItemAutomationPeer CreateInstanceWithOwner(IObjectReference _obj, global::Microsoft.UI.Xaml.Controls.NavigationViewItem owner, object baseInterface, out object innerInterface)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __owner = default;
            ObjectReferenceValue __baseInterface = default;
            IntPtr __innerInterface = default;
            IntPtr __retval = default;
            try
            {
                __owner = global::ABI.Microsoft.UI.Xaml.Controls.NavigationViewItem.CreateMarshaler2(owner);
                __baseInterface = MarshalInspectable<object>.CreateMarshaler2(baseInterface);
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, IntPtr, IntPtr*, IntPtr*, int>**)ThisPtr)[6](ThisPtr, MarshalInspectable<object>.GetAbi(__owner), MarshalInspectable<object>.GetAbi(__baseInterface), &__innerInterface, &__retval));
                global::System.GC.KeepAlive(_obj);
                innerInterface = MarshalInspectable<object>.FromAbi(__innerInterface);
                return global::ABI.Microsoft.UI.Xaml.Automation.Peers.NavigationViewItemAutomationPeer.FromAbi(__retval);
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__owner);
                MarshalInspectable<object>.DisposeMarshaler(__baseInterface);
                MarshalInspectable<object>.DisposeAbi(__innerInterface);
                global::ABI.Microsoft.UI.Xaml.Automation.Peers.NavigationViewItemAutomationPeer.DisposeAbi(__retval);
            }
        }


        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0xD0, 0x16, 0x5, 0x89, 0x62, 0x5A, 0x8B, 0x52, 0x88, 0x73, 0x4F, 0x71, 0x40, 0xB4, 0x4, 0x89 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("890516D0-5A62-528B-8873-4F7140B40489")]
    internal interface INavigationViewItemAutomationPeerFactory : global::Microsoft.UI.Xaml.Automation.Peers.INavigationViewItemAutomationPeerFactory
    {
    }
    internal static class INumberBoxAutomationPeerMethods
    {



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0xEB, 0xEF, 0x5B, 0x23, 0x98, 0x6C, 0x35, 0x5D, 0xA2, 0xE7, 0x0, 0x1E, 0xAE, 0x34, 0x25, 0x9 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("235BEFEB-6C98-5D35-A2E7-001EAE342509")]
    internal interface INumberBoxAutomationPeer : global::Microsoft.UI.Xaml.Automation.Peers.INumberBoxAutomationPeer
    {
    }
    internal static class INumberBoxAutomationPeerFactoryMethods
    {


        internal static unsafe global::Microsoft.UI.Xaml.Automation.Peers.NumberBoxAutomationPeer CreateInstance(IObjectReference _obj, global::Microsoft.UI.Xaml.Controls.NumberBox owner, object baseInterface, out object innerInterface)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __owner = default;
            ObjectReferenceValue __baseInterface = default;
            IntPtr __innerInterface = default;
            IntPtr __retval = default;
            try
            {
                __owner = global::ABI.Microsoft.UI.Xaml.Controls.NumberBox.CreateMarshaler2(owner);
                __baseInterface = MarshalInspectable<object>.CreateMarshaler2(baseInterface);
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, IntPtr, IntPtr*, IntPtr*, int>**)ThisPtr)[6](ThisPtr, MarshalInspectable<object>.GetAbi(__owner), MarshalInspectable<object>.GetAbi(__baseInterface), &__innerInterface, &__retval));
                global::System.GC.KeepAlive(_obj);
                innerInterface = MarshalInspectable<object>.FromAbi(__innerInterface);
                return global::ABI.Microsoft.UI.Xaml.Automation.Peers.NumberBoxAutomationPeer.FromAbi(__retval);
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__owner);
                MarshalInspectable<object>.DisposeMarshaler(__baseInterface);
                MarshalInspectable<object>.DisposeAbi(__innerInterface);
                global::ABI.Microsoft.UI.Xaml.Automation.Peers.NumberBoxAutomationPeer.DisposeAbi(__retval);
            }
        }


        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0xAC, 0x19, 0x97, 0x65, 0x5, 0x44, 0xF4, 0x58, 0xBD, 0xE2, 0xEF, 0x61, 0xDF, 0xE6, 0x4C, 0x21 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("659719AC-4405-58F4-BDE2-EF61DFE64C21")]
    internal interface INumberBoxAutomationPeerFactory : global::Microsoft.UI.Xaml.Automation.Peers.INumberBoxAutomationPeerFactory
    {
    }
    internal static class IPasswordBoxAutomationPeerMethods
    {



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0xBA, 0x8D, 0xB1, 0x49, 0x3B, 0xFA, 0x6, 0x51, 0xA1, 0xE8, 0x1A, 0xAA, 0x3D, 0x24, 0xD5, 0xE1 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("49B18DBA-FA3B-5106-A1E8-1AAA3D24D5E1")]
    internal interface IPasswordBoxAutomationPeer : global::Microsoft.UI.Xaml.Automation.Peers.IPasswordBoxAutomationPeer
    {
    }
    internal static class IPasswordBoxAutomationPeerFactoryMethods
    {


        internal static unsafe global::Microsoft.UI.Xaml.Automation.Peers.PasswordBoxAutomationPeer CreateInstanceWithOwner(IObjectReference _obj, global::Microsoft.UI.Xaml.Controls.PasswordBox owner, object baseInterface, out object innerInterface)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __owner = default;
            ObjectReferenceValue __baseInterface = default;
            IntPtr __innerInterface = default;
            IntPtr __retval = default;
            try
            {
                __owner = global::ABI.Microsoft.UI.Xaml.Controls.PasswordBox.CreateMarshaler2(owner);
                __baseInterface = MarshalInspectable<object>.CreateMarshaler2(baseInterface);
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, IntPtr, IntPtr*, IntPtr*, int>**)ThisPtr)[6](ThisPtr, MarshalInspectable<object>.GetAbi(__owner), MarshalInspectable<object>.GetAbi(__baseInterface), &__innerInterface, &__retval));
                global::System.GC.KeepAlive(_obj);
                innerInterface = MarshalInspectable<object>.FromAbi(__innerInterface);
                return global::ABI.Microsoft.UI.Xaml.Automation.Peers.PasswordBoxAutomationPeer.FromAbi(__retval);
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__owner);
                MarshalInspectable<object>.DisposeMarshaler(__baseInterface);
                MarshalInspectable<object>.DisposeAbi(__innerInterface);
                global::ABI.Microsoft.UI.Xaml.Automation.Peers.PasswordBoxAutomationPeer.DisposeAbi(__retval);
            }
        }


        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0xBA, 0x5C, 0xD, 0x7B, 0xB3, 0xC5, 0x3E, 0x55, 0x98, 0x9A, 0xA1, 0xE, 0xE0, 0x41, 0x44, 0xAF };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("7B0D5CBA-C5B3-553E-989A-A10EE04144AF")]
    internal interface IPasswordBoxAutomationPeerFactory : global::Microsoft.UI.Xaml.Automation.Peers.IPasswordBoxAutomationPeerFactory
    {
    }
    internal static class IPersonPictureAutomationPeerMethods
    {



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0x9B, 0x77, 0x71, 0x2E, 0xA4, 0xAC, 0xC2, 0x52, 0x8A, 0x25, 0xBC, 0x5F, 0x1E, 0xE3, 0xB0, 0xAE };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("2E71779B-ACA4-52C2-8A25-BC5F1EE3B0AE")]
    internal interface IPersonPictureAutomationPeer : global::Microsoft.UI.Xaml.Automation.Peers.IPersonPictureAutomationPeer
    {
    }
    internal static class IPersonPictureAutomationPeerFactoryMethods
    {


        internal static unsafe global::Microsoft.UI.Xaml.Automation.Peers.PersonPictureAutomationPeer CreateInstanceWithOwner(IObjectReference _obj, global::Microsoft.UI.Xaml.Controls.PersonPicture owner, object baseInterface, out object innerInterface)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __owner = default;
            ObjectReferenceValue __baseInterface = default;
            IntPtr __innerInterface = default;
            IntPtr __retval = default;
            try
            {
                __owner = global::ABI.Microsoft.UI.Xaml.Controls.PersonPicture.CreateMarshaler2(owner);
                __baseInterface = MarshalInspectable<object>.CreateMarshaler2(baseInterface);
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, IntPtr, IntPtr*, IntPtr*, int>**)ThisPtr)[6](ThisPtr, MarshalInspectable<object>.GetAbi(__owner), MarshalInspectable<object>.GetAbi(__baseInterface), &__innerInterface, &__retval));
                global::System.GC.KeepAlive(_obj);
                innerInterface = MarshalInspectable<object>.FromAbi(__innerInterface);
                return global::ABI.Microsoft.UI.Xaml.Automation.Peers.PersonPictureAutomationPeer.FromAbi(__retval);
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__owner);
                MarshalInspectable<object>.DisposeMarshaler(__baseInterface);
                MarshalInspectable<object>.DisposeAbi(__innerInterface);
                global::ABI.Microsoft.UI.Xaml.Automation.Peers.PersonPictureAutomationPeer.DisposeAbi(__retval);
            }
        }


        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0xE5, 0x9, 0x17, 0xBD, 0x40, 0x19, 0xFC, 0x56, 0xB5, 0xC3, 0x85, 0xE4, 0x57, 0x9, 0x51, 0xCC };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("BD1709E5-1940-56FC-B5C3-85E4570951CC")]
    internal interface IPersonPictureAutomationPeerFactory : global::Microsoft.UI.Xaml.Automation.Peers.IPersonPictureAutomationPeerFactory
    {
    }
    internal static class IPickerFlyoutPresenterAutomationPeerMethods
    {



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0x28, 0x6D, 0x9F, 0xB2, 0x4B, 0x15, 0x1D, 0x5C, 0xA5, 0xE8, 0x98, 0x60, 0x4B, 0xB5, 0xCD, 0xF6 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("B29F6D28-154B-5C1D-A5E8-98604BB5CDF6")]
    internal interface IPickerFlyoutPresenterAutomationPeer : global::Microsoft.UI.Xaml.Automation.Peers.IPickerFlyoutPresenterAutomationPeer
    {
    }
    internal static class IPipsPagerAutomationPeerMethods
    {



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0xC2, 0x1B, 0xDE, 0x93, 0x84, 0xCF, 0x5F, 0x5B, 0x91, 0xBE, 0xA7, 0xC7, 0x81, 0xB2, 0x2, 0x1A };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("93DE1BC2-CF84-5B5F-91BE-A7C781B2021A")]
    internal interface IPipsPagerAutomationPeer : global::Microsoft.UI.Xaml.Automation.Peers.IPipsPagerAutomationPeer
    {
    }
    internal static class IPipsPagerAutomationPeerFactoryMethods
    {


        internal static unsafe global::Microsoft.UI.Xaml.Automation.Peers.PipsPagerAutomationPeer CreateInstance(IObjectReference _obj, global::Microsoft.UI.Xaml.Controls.PipsPager owner, object baseInterface, out object innerInterface)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __owner = default;
            ObjectReferenceValue __baseInterface = default;
            IntPtr __innerInterface = default;
            IntPtr __retval = default;
            try
            {
                __owner = global::ABI.Microsoft.UI.Xaml.Controls.PipsPager.CreateMarshaler2(owner);
                __baseInterface = MarshalInspectable<object>.CreateMarshaler2(baseInterface);
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, IntPtr, IntPtr*, IntPtr*, int>**)ThisPtr)[6](ThisPtr, MarshalInspectable<object>.GetAbi(__owner), MarshalInspectable<object>.GetAbi(__baseInterface), &__innerInterface, &__retval));
                global::System.GC.KeepAlive(_obj);
                innerInterface = MarshalInspectable<object>.FromAbi(__innerInterface);
                return global::ABI.Microsoft.UI.Xaml.Automation.Peers.PipsPagerAutomationPeer.FromAbi(__retval);
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__owner);
                MarshalInspectable<object>.DisposeMarshaler(__baseInterface);
                MarshalInspectable<object>.DisposeAbi(__innerInterface);
                global::ABI.Microsoft.UI.Xaml.Automation.Peers.PipsPagerAutomationPeer.DisposeAbi(__retval);
            }
        }


        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0xEF, 0x48, 0x52, 0xFB, 0x35, 0xE8, 0x97, 0x59, 0xBC, 0x36, 0xD4, 0xE5, 0xDB, 0x4A, 0x1B, 0x5A };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("FB5248EF-E835-5997-BC36-D4E5DB4A1B5A")]
    internal interface IPipsPagerAutomationPeerFactory : global::Microsoft.UI.Xaml.Automation.Peers.IPipsPagerAutomationPeerFactory
    {
    }
    internal static class IPivotAutomationPeerMethods
    {



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0x40, 0x55, 0x22, 0x84, 0xA3, 0xA6, 0x65, 0x5E, 0xA3, 0xDC, 0xB3, 0x1B, 0x81, 0xAB, 0x14, 0xC1 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("84225540-A6A3-5E65-A3DC-B31B81AB14C1")]
    internal interface IPivotAutomationPeer : global::Microsoft.UI.Xaml.Automation.Peers.IPivotAutomationPeer
    {
    }
    internal static class IPivotAutomationPeerFactoryMethods
    {


        internal static unsafe global::Microsoft.UI.Xaml.Automation.Peers.PivotAutomationPeer CreateInstanceWithOwner(IObjectReference _obj, global::Microsoft.UI.Xaml.Controls.Pivot owner)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __owner = default;
            IntPtr __retval = default;
            try
            {
                __owner = global::ABI.Microsoft.UI.Xaml.Controls.Pivot.CreateMarshaler2(owner);
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, IntPtr*, int>**)ThisPtr)[6](ThisPtr, MarshalInspectable<object>.GetAbi(__owner), &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Xaml.Automation.Peers.PivotAutomationPeer.FromAbi(__retval);
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__owner);
                global::ABI.Microsoft.UI.Xaml.Automation.Peers.PivotAutomationPeer.DisposeAbi(__retval);
            }
        }


        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0x29, 0x2, 0xDD, 0xB1, 0x4C, 0xC1, 0xC0, 0x5A, 0x83, 0x31, 0xBE, 0x24, 0xFA, 0x20, 0x7, 0xF0 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("B1DD0229-C14C-5AC0-8331-BE24FA2007F0")]
    internal interface IPivotAutomationPeerFactory : global::Microsoft.UI.Xaml.Automation.Peers.IPivotAutomationPeerFactory
    {
    }
    internal static class IPivotItemAutomationPeerMethods
    {



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0x7B, 0xFB, 0xE7, 0xBF, 0x88, 0x2D, 0xE4, 0x56, 0xB5, 0xF, 0xA, 0x40, 0xDE, 0x6F, 0x52, 0xA1 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("BFE7FB7B-2D88-56E4-B50F-0A40DE6F52A1")]
    internal interface IPivotItemAutomationPeer : global::Microsoft.UI.Xaml.Automation.Peers.IPivotItemAutomationPeer
    {
    }
    internal static class IPivotItemAutomationPeerFactoryMethods
    {


        internal static unsafe global::Microsoft.UI.Xaml.Automation.Peers.PivotItemAutomationPeer CreateInstanceWithOwner(IObjectReference _obj, global::Microsoft.UI.Xaml.Controls.PivotItem owner)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __owner = default;
            IntPtr __retval = default;
            try
            {
                __owner = global::ABI.Microsoft.UI.Xaml.Controls.PivotItem.CreateMarshaler2(owner);
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, IntPtr*, int>**)ThisPtr)[6](ThisPtr, MarshalInspectable<object>.GetAbi(__owner), &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Xaml.Automation.Peers.PivotItemAutomationPeer.FromAbi(__retval);
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__owner);
                global::ABI.Microsoft.UI.Xaml.Automation.Peers.PivotItemAutomationPeer.DisposeAbi(__retval);
            }
        }


        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0xE7, 0x6E, 0x96, 0x14, 0xAF, 0xAF, 0xCC, 0x5F, 0x93, 0x46, 0xF0, 0xE7, 0x19, 0x2C, 0x22, 0xA };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("14966EE7-AFAF-5FCC-9346-F0E7192C220A")]
    internal interface IPivotItemAutomationPeerFactory : global::Microsoft.UI.Xaml.Automation.Peers.IPivotItemAutomationPeerFactory
    {
    }
    internal static class IPivotItemDataAutomationPeerMethods
    {



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0xEE, 0xEB, 0x58, 0x67, 0xE0, 0xB3, 0xEB, 0x5F, 0xAA, 0xBA, 0xB7, 0xF6, 0xC5, 0x9F, 0xE4, 0x9F };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("6758EBEE-B3E0-5FEB-AABA-B7F6C59FE49F")]
    internal interface IPivotItemDataAutomationPeer : global::Microsoft.UI.Xaml.Automation.Peers.IPivotItemDataAutomationPeer
    {
    }
    internal static class IPivotItemDataAutomationPeerFactoryMethods
    {


        internal static unsafe global::Microsoft.UI.Xaml.Automation.Peers.PivotItemDataAutomationPeer CreateInstanceWithParentAndItem(IObjectReference _obj, object item, global::Microsoft.UI.Xaml.Automation.Peers.PivotAutomationPeer parent)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __item = default;
            ObjectReferenceValue __parent = default;
            IntPtr __retval = default;
            try
            {
                __item = MarshalInspectable<object>.CreateMarshaler2(item);
                __parent = global::ABI.Microsoft.UI.Xaml.Automation.Peers.PivotAutomationPeer.CreateMarshaler2(parent);
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, IntPtr, IntPtr*, int>**)ThisPtr)[6](ThisPtr, MarshalInspectable<object>.GetAbi(__item), MarshalInspectable<object>.GetAbi(__parent), &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Xaml.Automation.Peers.PivotItemDataAutomationPeer.FromAbi(__retval);
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__item);
                MarshalInspectable<object>.DisposeMarshaler(__parent);
                global::ABI.Microsoft.UI.Xaml.Automation.Peers.PivotItemDataAutomationPeer.DisposeAbi(__retval);
            }
        }


        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0xE9, 0xA6, 0xD7, 0x26, 0x6B, 0xCE, 0x90, 0x56, 0x90, 0x24, 0x75, 0xCE, 0x57, 0x70, 0xB0, 0xD6 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("26D7A6E9-CE6B-5690-9024-75CE5770B0D6")]
    internal interface IPivotItemDataAutomationPeerFactory : global::Microsoft.UI.Xaml.Automation.Peers.IPivotItemDataAutomationPeerFactory
    {
    }
    internal static class IProgressBarAutomationPeerMethods
    {



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0xD9, 0xEA, 0x65, 0x85, 0x77, 0xB8, 0xC7, 0x52, 0xA1, 0x47, 0x6F, 0xE1, 0xFE, 0xE7, 0x67, 0xAF };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("8565EAD9-B877-52C7-A147-6FE1FEE767AF")]
    internal interface IProgressBarAutomationPeer : global::Microsoft.UI.Xaml.Automation.Peers.IProgressBarAutomationPeer
    {
    }
    internal static class IProgressBarAutomationPeerFactoryMethods
    {


        internal static unsafe global::Microsoft.UI.Xaml.Automation.Peers.ProgressBarAutomationPeer CreateInstance(IObjectReference _obj, global::Microsoft.UI.Xaml.Controls.ProgressBar owner, object baseInterface, out object innerInterface)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __owner = default;
            ObjectReferenceValue __baseInterface = default;
            IntPtr __innerInterface = default;
            IntPtr __retval = default;
            try
            {
                __owner = global::ABI.Microsoft.UI.Xaml.Controls.ProgressBar.CreateMarshaler2(owner);
                __baseInterface = MarshalInspectable<object>.CreateMarshaler2(baseInterface);
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, IntPtr, IntPtr*, IntPtr*, int>**)ThisPtr)[6](ThisPtr, MarshalInspectable<object>.GetAbi(__owner), MarshalInspectable<object>.GetAbi(__baseInterface), &__innerInterface, &__retval));
                global::System.GC.KeepAlive(_obj);
                innerInterface = MarshalInspectable<object>.FromAbi(__innerInterface);
                return global::ABI.Microsoft.UI.Xaml.Automation.Peers.ProgressBarAutomationPeer.FromAbi(__retval);
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__owner);
                MarshalInspectable<object>.DisposeMarshaler(__baseInterface);
                MarshalInspectable<object>.DisposeAbi(__innerInterface);
                global::ABI.Microsoft.UI.Xaml.Automation.Peers.ProgressBarAutomationPeer.DisposeAbi(__retval);
            }
        }


        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0xD, 0x8C, 0xA2, 0xCE, 0xB3, 0xC4, 0x18, 0x5D, 0xAE, 0xF6, 0x95, 0x80, 0x31, 0x39, 0x58, 0x78 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("CEA28C0D-C4B3-5D18-AEF6-958031395878")]
    internal interface IProgressBarAutomationPeerFactory : global::Microsoft.UI.Xaml.Automation.Peers.IProgressBarAutomationPeerFactory
    {
    }
    internal static class IProgressRingAutomationPeerMethods
    {



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0xDA, 0x52, 0x69, 0x3B, 0x44, 0x9E, 0xB0, 0x52, 0x91, 0xDF, 0x39, 0xDA, 0x9D, 0xC1, 0xD8, 0xB0 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("3B6952DA-9E44-52B0-91DF-39DA9DC1D8B0")]
    internal interface IProgressRingAutomationPeer : global::Microsoft.UI.Xaml.Automation.Peers.IProgressRingAutomationPeer
    {
    }
    internal static class IProgressRingAutomationPeerFactoryMethods
    {


        internal static unsafe global::Microsoft.UI.Xaml.Automation.Peers.ProgressRingAutomationPeer CreateInstance(IObjectReference _obj, global::Microsoft.UI.Xaml.Controls.ProgressRing owner, object baseInterface, out object innerInterface)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __owner = default;
            ObjectReferenceValue __baseInterface = default;
            IntPtr __innerInterface = default;
            IntPtr __retval = default;
            try
            {
                __owner = global::ABI.Microsoft.UI.Xaml.Controls.ProgressRing.CreateMarshaler2(owner);
                __baseInterface = MarshalInspectable<object>.CreateMarshaler2(baseInterface);
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, IntPtr, IntPtr*, IntPtr*, int>**)ThisPtr)[6](ThisPtr, MarshalInspectable<object>.GetAbi(__owner), MarshalInspectable<object>.GetAbi(__baseInterface), &__innerInterface, &__retval));
                global::System.GC.KeepAlive(_obj);
                innerInterface = MarshalInspectable<object>.FromAbi(__innerInterface);
                return global::ABI.Microsoft.UI.Xaml.Automation.Peers.ProgressRingAutomationPeer.FromAbi(__retval);
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__owner);
                MarshalInspectable<object>.DisposeMarshaler(__baseInterface);
                MarshalInspectable<object>.DisposeAbi(__innerInterface);
                global::ABI.Microsoft.UI.Xaml.Automation.Peers.ProgressRingAutomationPeer.DisposeAbi(__retval);
            }
        }


        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0x5C, 0x37, 0xF, 0x65, 0x29, 0x3B, 0x76, 0x53, 0xA7, 0xF7, 0xC7, 0x80, 0x82, 0xB8, 0x2D, 0x13 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("650F375C-3B29-5376-A7F7-C78082B82D13")]
    internal interface IProgressRingAutomationPeerFactory : global::Microsoft.UI.Xaml.Automation.Peers.IProgressRingAutomationPeerFactory
    {
    }
    internal static class IRadioButtonAutomationPeerMethods
    {



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0xB7, 0x47, 0xE1, 0xCC, 0x4A, 0x57, 0xB6, 0x53, 0xA5, 0xB2, 0xCA, 0x26, 0x22, 0xA7, 0x9B, 0x2C };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("CCE147B7-574A-53B6-A5B2-CA2622A79B2C")]
    internal interface IRadioButtonAutomationPeer : global::Microsoft.UI.Xaml.Automation.Peers.IRadioButtonAutomationPeer
    {
    }
    internal static class IRadioButtonAutomationPeerFactoryMethods
    {


        internal static unsafe global::Microsoft.UI.Xaml.Automation.Peers.RadioButtonAutomationPeer CreateInstanceWithOwner(IObjectReference _obj, global::Microsoft.UI.Xaml.Controls.RadioButton owner, object baseInterface, out object innerInterface)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __owner = default;
            ObjectReferenceValue __baseInterface = default;
            IntPtr __innerInterface = default;
            IntPtr __retval = default;
            try
            {
                __owner = global::ABI.Microsoft.UI.Xaml.Controls.RadioButton.CreateMarshaler2(owner);
                __baseInterface = MarshalInspectable<object>.CreateMarshaler2(baseInterface);
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, IntPtr, IntPtr*, IntPtr*, int>**)ThisPtr)[6](ThisPtr, MarshalInspectable<object>.GetAbi(__owner), MarshalInspectable<object>.GetAbi(__baseInterface), &__innerInterface, &__retval));
                global::System.GC.KeepAlive(_obj);
                innerInterface = MarshalInspectable<object>.FromAbi(__innerInterface);
                return global::ABI.Microsoft.UI.Xaml.Automation.Peers.RadioButtonAutomationPeer.FromAbi(__retval);
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__owner);
                MarshalInspectable<object>.DisposeMarshaler(__baseInterface);
                MarshalInspectable<object>.DisposeAbi(__innerInterface);
                global::ABI.Microsoft.UI.Xaml.Automation.Peers.RadioButtonAutomationPeer.DisposeAbi(__retval);
            }
        }


        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0xEE, 0xC7, 0x7, 0xCA, 0x2A, 0x50, 0x9E, 0x50, 0xBC, 0x44, 0x68, 0x2E, 0x68, 0x28, 0xD1, 0xF8 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("CA07C7EE-502A-509E-BC44-682E6828D1F8")]
    internal interface IRadioButtonAutomationPeerFactory : global::Microsoft.UI.Xaml.Automation.Peers.IRadioButtonAutomationPeerFactory
    {
    }
    internal static class IRadioButtonsAutomationPeerMethods
    {



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0x75, 0x62, 0xF8, 0xFF, 0xDD, 0xC, 0xDB, 0x54, 0x9D, 0x88, 0x9C, 0xE, 0x5F, 0x9B, 0xCB, 0x4D };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("FFF86275-0CDD-54DB-9D88-9C0E5F9BCB4D")]
    internal interface IRadioButtonsAutomationPeer : global::Microsoft.UI.Xaml.Automation.Peers.IRadioButtonsAutomationPeer
    {
    }
    internal static class IRadioButtonsAutomationPeerFactoryMethods
    {


        internal static unsafe global::Microsoft.UI.Xaml.Automation.Peers.RadioButtonsAutomationPeer CreateInstance(IObjectReference _obj, global::Microsoft.UI.Xaml.Controls.RadioButtons owner, object baseInterface, out object innerInterface)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __owner = default;
            ObjectReferenceValue __baseInterface = default;
            IntPtr __innerInterface = default;
            IntPtr __retval = default;
            try
            {
                __owner = global::ABI.Microsoft.UI.Xaml.Controls.RadioButtons.CreateMarshaler2(owner);
                __baseInterface = MarshalInspectable<object>.CreateMarshaler2(baseInterface);
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, IntPtr, IntPtr*, IntPtr*, int>**)ThisPtr)[6](ThisPtr, MarshalInspectable<object>.GetAbi(__owner), MarshalInspectable<object>.GetAbi(__baseInterface), &__innerInterface, &__retval));
                global::System.GC.KeepAlive(_obj);
                innerInterface = MarshalInspectable<object>.FromAbi(__innerInterface);
                return global::ABI.Microsoft.UI.Xaml.Automation.Peers.RadioButtonsAutomationPeer.FromAbi(__retval);
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__owner);
                MarshalInspectable<object>.DisposeMarshaler(__baseInterface);
                MarshalInspectable<object>.DisposeAbi(__innerInterface);
                global::ABI.Microsoft.UI.Xaml.Automation.Peers.RadioButtonsAutomationPeer.DisposeAbi(__retval);
            }
        }


        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0xD0, 0x21, 0x35, 0xF1, 0x6E, 0x5, 0x8C, 0x59, 0xAD, 0x23, 0xA7, 0x15, 0x0, 0x49, 0xD8, 0xA };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("F13521D0-056E-598C-AD23-A7150049D80A")]
    internal interface IRadioButtonsAutomationPeerFactory : global::Microsoft.UI.Xaml.Automation.Peers.IRadioButtonsAutomationPeerFactory
    {
    }
    internal static class IRangeBaseAutomationPeerMethods
    {



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0x12, 0x5, 0xD5, 0xB5, 0xA9, 0x70, 0x27, 0x5B, 0x82, 0xFE, 0x16, 0xF6, 0xBA, 0x67, 0xBA, 0xC5 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("B5D50512-70A9-5B27-82FE-16F6BA67BAC5")]
    internal interface IRangeBaseAutomationPeer : global::Microsoft.UI.Xaml.Automation.Peers.IRangeBaseAutomationPeer
    {
    }
    internal static class IRangeBaseAutomationPeerFactoryMethods
    {


        internal static unsafe global::Microsoft.UI.Xaml.Automation.Peers.RangeBaseAutomationPeer CreateInstanceWithOwner(IObjectReference _obj, global::Microsoft.UI.Xaml.Controls.Primitives.RangeBase owner, object baseInterface, out object innerInterface)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __owner = default;
            ObjectReferenceValue __baseInterface = default;
            IntPtr __innerInterface = default;
            IntPtr __retval = default;
            try
            {
                __owner = global::ABI.Microsoft.UI.Xaml.Controls.Primitives.RangeBase.CreateMarshaler2(owner);
                __baseInterface = MarshalInspectable<object>.CreateMarshaler2(baseInterface);
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, IntPtr, IntPtr*, IntPtr*, int>**)ThisPtr)[6](ThisPtr, MarshalInspectable<object>.GetAbi(__owner), MarshalInspectable<object>.GetAbi(__baseInterface), &__innerInterface, &__retval));
                global::System.GC.KeepAlive(_obj);
                innerInterface = MarshalInspectable<object>.FromAbi(__innerInterface);
                return global::ABI.Microsoft.UI.Xaml.Automation.Peers.RangeBaseAutomationPeer.FromAbi(__retval);
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__owner);
                MarshalInspectable<object>.DisposeMarshaler(__baseInterface);
                MarshalInspectable<object>.DisposeAbi(__innerInterface);
                global::ABI.Microsoft.UI.Xaml.Automation.Peers.RangeBaseAutomationPeer.DisposeAbi(__retval);
            }
        }


        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0xE9, 0x25, 0x8F, 0x8C, 0x94, 0x51, 0xA9, 0x54, 0xB7, 0x87, 0xCE, 0x2, 0x93, 0xFD, 0x67, 0x21 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("8C8F25E9-5194-54A9-B787-CE0293FD6721")]
    internal interface IRangeBaseAutomationPeerFactory : global::Microsoft.UI.Xaml.Automation.Peers.IRangeBaseAutomationPeerFactory
    {
    }
    internal static class IRatingControlAutomationPeerMethods
    {



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0xC4, 0x3E, 0x49, 0x55, 0x6B, 0x92, 0x5A, 0x59, 0x97, 0xA3, 0xA7, 0xFA, 0x60, 0x41, 0x88, 0xA4 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("55493EC4-926B-595A-97A3-A7FA604188A4")]
    internal interface IRatingControlAutomationPeer : global::Microsoft.UI.Xaml.Automation.Peers.IRatingControlAutomationPeer
    {
    }
    internal static class IRatingControlAutomationPeerFactoryMethods
    {


        internal static unsafe global::Microsoft.UI.Xaml.Automation.Peers.RatingControlAutomationPeer CreateInstanceWithOwner(IObjectReference _obj, global::Microsoft.UI.Xaml.Controls.RatingControl owner, object baseInterface, out object innerInterface)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __owner = default;
            ObjectReferenceValue __baseInterface = default;
            IntPtr __innerInterface = default;
            IntPtr __retval = default;
            try
            {
                __owner = global::ABI.Microsoft.UI.Xaml.Controls.RatingControl.CreateMarshaler2(owner);
                __baseInterface = MarshalInspectable<object>.CreateMarshaler2(baseInterface);
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, IntPtr, IntPtr*, IntPtr*, int>**)ThisPtr)[6](ThisPtr, MarshalInspectable<object>.GetAbi(__owner), MarshalInspectable<object>.GetAbi(__baseInterface), &__innerInterface, &__retval));
                global::System.GC.KeepAlive(_obj);
                innerInterface = MarshalInspectable<object>.FromAbi(__innerInterface);
                return global::ABI.Microsoft.UI.Xaml.Automation.Peers.RatingControlAutomationPeer.FromAbi(__retval);
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__owner);
                MarshalInspectable<object>.DisposeMarshaler(__baseInterface);
                MarshalInspectable<object>.DisposeAbi(__innerInterface);
                global::ABI.Microsoft.UI.Xaml.Automation.Peers.RatingControlAutomationPeer.DisposeAbi(__retval);
            }
        }


        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0xB6, 0xAC, 0x7D, 0xF8, 0x7E, 0xE8, 0xB3, 0x59, 0x8A, 0x40, 0x33, 0x1E, 0xA7, 0xAA, 0x74, 0x7D };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("F87DACB6-E87E-59B3-8A40-331EA7AA747D")]
    internal interface IRatingControlAutomationPeerFactory : global::Microsoft.UI.Xaml.Automation.Peers.IRatingControlAutomationPeerFactory
    {
    }
    internal static class IRepeatButtonAutomationPeerMethods
    {



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0xC2, 0x7C, 0x2A, 0xE4, 0xE8, 0xAC, 0xEB, 0x56, 0x99, 0x67, 0x9B, 0x7F, 0xD1, 0x57, 0xC3, 0x7F };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("E42A7CC2-ACE8-56EB-9967-9B7FD157C37F")]
    internal interface IRepeatButtonAutomationPeer : global::Microsoft.UI.Xaml.Automation.Peers.IRepeatButtonAutomationPeer
    {
    }
    internal static class IRepeatButtonAutomationPeerFactoryMethods
    {


        internal static unsafe global::Microsoft.UI.Xaml.Automation.Peers.RepeatButtonAutomationPeer CreateInstanceWithOwner(IObjectReference _obj, global::Microsoft.UI.Xaml.Controls.Primitives.RepeatButton owner, object baseInterface, out object innerInterface)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __owner = default;
            ObjectReferenceValue __baseInterface = default;
            IntPtr __innerInterface = default;
            IntPtr __retval = default;
            try
            {
                __owner = global::ABI.Microsoft.UI.Xaml.Controls.Primitives.RepeatButton.CreateMarshaler2(owner);
                __baseInterface = MarshalInspectable<object>.CreateMarshaler2(baseInterface);
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, IntPtr, IntPtr*, IntPtr*, int>**)ThisPtr)[6](ThisPtr, MarshalInspectable<object>.GetAbi(__owner), MarshalInspectable<object>.GetAbi(__baseInterface), &__innerInterface, &__retval));
                global::System.GC.KeepAlive(_obj);
                innerInterface = MarshalInspectable<object>.FromAbi(__innerInterface);
                return global::ABI.Microsoft.UI.Xaml.Automation.Peers.RepeatButtonAutomationPeer.FromAbi(__retval);
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__owner);
                MarshalInspectable<object>.DisposeMarshaler(__baseInterface);
                MarshalInspectable<object>.DisposeAbi(__innerInterface);
                global::ABI.Microsoft.UI.Xaml.Automation.Peers.RepeatButtonAutomationPeer.DisposeAbi(__retval);
            }
        }


        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0xA4, 0x55, 0xAD, 0xF, 0x62, 0x1C, 0x5E, 0x59, 0xA1, 0x89, 0xBB, 0x43, 0xA2, 0x19, 0xC6, 0x99 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("0FAD55A4-1C62-595E-A189-BB43A219C699")]
    internal interface IRepeatButtonAutomationPeerFactory : global::Microsoft.UI.Xaml.Automation.Peers.IRepeatButtonAutomationPeerFactory
    {
    }
    internal static class IRepeaterAutomationPeerMethods
    {



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0x15, 0xC3, 0xF2, 0x3, 0x55, 0xFB, 0xB2, 0x54, 0x9A, 0xAD, 0x97, 0x23, 0xAA, 0xF5, 0xE2, 0xCF };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("03F2C315-FB55-54B2-9AAD-9723AAF5E2CF")]
    internal interface IRepeaterAutomationPeer : global::Microsoft.UI.Xaml.Automation.Peers.IRepeaterAutomationPeer
    {
    }
    internal static class IRepeaterAutomationPeerFactoryMethods
    {


        internal static unsafe global::Microsoft.UI.Xaml.Automation.Peers.RepeaterAutomationPeer CreateInstance(IObjectReference _obj, global::Microsoft.UI.Xaml.Controls.ItemsRepeater owner, object baseInterface, out object innerInterface)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __owner = default;
            ObjectReferenceValue __baseInterface = default;
            IntPtr __innerInterface = default;
            IntPtr __retval = default;
            try
            {
                __owner = global::ABI.Microsoft.UI.Xaml.Controls.ItemsRepeater.CreateMarshaler2(owner);
                __baseInterface = MarshalInspectable<object>.CreateMarshaler2(baseInterface);
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, IntPtr, IntPtr*, IntPtr*, int>**)ThisPtr)[6](ThisPtr, MarshalInspectable<object>.GetAbi(__owner), MarshalInspectable<object>.GetAbi(__baseInterface), &__innerInterface, &__retval));
                global::System.GC.KeepAlive(_obj);
                innerInterface = MarshalInspectable<object>.FromAbi(__innerInterface);
                return global::ABI.Microsoft.UI.Xaml.Automation.Peers.RepeaterAutomationPeer.FromAbi(__retval);
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__owner);
                MarshalInspectable<object>.DisposeMarshaler(__baseInterface);
                MarshalInspectable<object>.DisposeAbi(__innerInterface);
                global::ABI.Microsoft.UI.Xaml.Automation.Peers.RepeaterAutomationPeer.DisposeAbi(__retval);
            }
        }


        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0xC7, 0x6B, 0x52, 0x4, 0x3E, 0xFA, 0xFE, 0x55, 0xA3, 0x14, 0x98, 0x6E, 0x2F, 0x19, 0x6A, 0x2F };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("04526BC7-FA3E-55FE-A314-986E2F196A2F")]
    internal interface IRepeaterAutomationPeerFactory : global::Microsoft.UI.Xaml.Automation.Peers.IRepeaterAutomationPeerFactory
    {
    }
    internal static class IRichEditBoxAutomationPeerMethods
    {



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0xF1, 0x43, 0x3A, 0x19, 0x9D, 0x12, 0xE1, 0x57, 0xBC, 0xF9, 0xBA, 0x96, 0x6B, 0xCA, 0xDA, 0xCB };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("193A43F1-129D-57E1-BCF9-BA966BCADACB")]
    internal interface IRichEditBoxAutomationPeer : global::Microsoft.UI.Xaml.Automation.Peers.IRichEditBoxAutomationPeer
    {
    }
    internal static class IRichEditBoxAutomationPeerFactoryMethods
    {


        internal static unsafe global::Microsoft.UI.Xaml.Automation.Peers.RichEditBoxAutomationPeer CreateInstanceWithOwner(IObjectReference _obj, global::Microsoft.UI.Xaml.Controls.RichEditBox owner, object baseInterface, out object innerInterface)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __owner = default;
            ObjectReferenceValue __baseInterface = default;
            IntPtr __innerInterface = default;
            IntPtr __retval = default;
            try
            {
                __owner = global::ABI.Microsoft.UI.Xaml.Controls.RichEditBox.CreateMarshaler2(owner);
                __baseInterface = MarshalInspectable<object>.CreateMarshaler2(baseInterface);
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, IntPtr, IntPtr*, IntPtr*, int>**)ThisPtr)[6](ThisPtr, MarshalInspectable<object>.GetAbi(__owner), MarshalInspectable<object>.GetAbi(__baseInterface), &__innerInterface, &__retval));
                global::System.GC.KeepAlive(_obj);
                innerInterface = MarshalInspectable<object>.FromAbi(__innerInterface);
                return global::ABI.Microsoft.UI.Xaml.Automation.Peers.RichEditBoxAutomationPeer.FromAbi(__retval);
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__owner);
                MarshalInspectable<object>.DisposeMarshaler(__baseInterface);
                MarshalInspectable<object>.DisposeAbi(__innerInterface);
                global::ABI.Microsoft.UI.Xaml.Automation.Peers.RichEditBoxAutomationPeer.DisposeAbi(__retval);
            }
        }


        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0x4F, 0xD8, 0xF0, 0x84, 0xCA, 0x54, 0xF2, 0x58, 0xAC, 0x50, 0xD3, 0x79, 0xAA, 0xB7, 0x54, 0x63 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("84F0D84F-54CA-58F2-AC50-D379AAB75463")]
    internal interface IRichEditBoxAutomationPeerFactory : global::Microsoft.UI.Xaml.Automation.Peers.IRichEditBoxAutomationPeerFactory
    {
    }
    internal static class IRichTextBlockAutomationPeerMethods
    {



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0x80, 0xFF, 0x80, 0x70, 0xB8, 0xB3, 0x3C, 0x5D, 0x89, 0xB5, 0xD9, 0x89, 0xD5, 0x61, 0x19, 0x2F };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("7080FF80-B3B8-5D3C-89B5-D989D561192F")]
    internal interface IRichTextBlockAutomationPeer : global::Microsoft.UI.Xaml.Automation.Peers.IRichTextBlockAutomationPeer
    {
    }
    internal static class IRichTextBlockAutomationPeerFactoryMethods
    {


        internal static unsafe global::Microsoft.UI.Xaml.Automation.Peers.RichTextBlockAutomationPeer CreateInstanceWithOwner(IObjectReference _obj, global::Microsoft.UI.Xaml.Controls.RichTextBlock owner, object baseInterface, out object innerInterface)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __owner = default;
            ObjectReferenceValue __baseInterface = default;
            IntPtr __innerInterface = default;
            IntPtr __retval = default;
            try
            {
                __owner = global::ABI.Microsoft.UI.Xaml.Controls.RichTextBlock.CreateMarshaler2(owner);
                __baseInterface = MarshalInspectable<object>.CreateMarshaler2(baseInterface);
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, IntPtr, IntPtr*, IntPtr*, int>**)ThisPtr)[6](ThisPtr, MarshalInspectable<object>.GetAbi(__owner), MarshalInspectable<object>.GetAbi(__baseInterface), &__innerInterface, &__retval));
                global::System.GC.KeepAlive(_obj);
                innerInterface = MarshalInspectable<object>.FromAbi(__innerInterface);
                return global::ABI.Microsoft.UI.Xaml.Automation.Peers.RichTextBlockAutomationPeer.FromAbi(__retval);
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__owner);
                MarshalInspectable<object>.DisposeMarshaler(__baseInterface);
                MarshalInspectable<object>.DisposeAbi(__innerInterface);
                global::ABI.Microsoft.UI.Xaml.Automation.Peers.RichTextBlockAutomationPeer.DisposeAbi(__retval);
            }
        }


        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0x5B, 0x48, 0xA4, 0xF8, 0x95, 0x28, 0x86, 0x58, 0x8F, 0xF6, 0x49, 0x7E, 0x4F, 0x1A, 0x6E, 0x3D };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("F8A4485B-2895-5886-8FF6-497E4F1A6E3D")]
    internal interface IRichTextBlockAutomationPeerFactory : global::Microsoft.UI.Xaml.Automation.Peers.IRichTextBlockAutomationPeerFactory
    {
    }
    internal static class IRichTextBlockOverflowAutomationPeerMethods
    {



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0xC0, 0x83, 0xBF, 0xD0, 0xFB, 0x8C, 0x70, 0x57, 0xB2, 0x6C, 0x7, 0x6, 0xE5, 0x1A, 0x9A, 0x3B };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("D0BF83C0-8CFB-5770-B26C-0706E51A9A3B")]
    internal interface IRichTextBlockOverflowAutomationPeer : global::Microsoft.UI.Xaml.Automation.Peers.IRichTextBlockOverflowAutomationPeer
    {
    }
    internal static class IRichTextBlockOverflowAutomationPeerFactoryMethods
    {


        internal static unsafe global::Microsoft.UI.Xaml.Automation.Peers.RichTextBlockOverflowAutomationPeer CreateInstanceWithOwner(IObjectReference _obj, global::Microsoft.UI.Xaml.Controls.RichTextBlockOverflow owner, object baseInterface, out object innerInterface)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __owner = default;
            ObjectReferenceValue __baseInterface = default;
            IntPtr __innerInterface = default;
            IntPtr __retval = default;
            try
            {
                __owner = global::ABI.Microsoft.UI.Xaml.Controls.RichTextBlockOverflow.CreateMarshaler2(owner);
                __baseInterface = MarshalInspectable<object>.CreateMarshaler2(baseInterface);
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, IntPtr, IntPtr*, IntPtr*, int>**)ThisPtr)[6](ThisPtr, MarshalInspectable<object>.GetAbi(__owner), MarshalInspectable<object>.GetAbi(__baseInterface), &__innerInterface, &__retval));
                global::System.GC.KeepAlive(_obj);
                innerInterface = MarshalInspectable<object>.FromAbi(__innerInterface);
                return global::ABI.Microsoft.UI.Xaml.Automation.Peers.RichTextBlockOverflowAutomationPeer.FromAbi(__retval);
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__owner);
                MarshalInspectable<object>.DisposeMarshaler(__baseInterface);
                MarshalInspectable<object>.DisposeAbi(__innerInterface);
                global::ABI.Microsoft.UI.Xaml.Automation.Peers.RichTextBlockOverflowAutomationPeer.DisposeAbi(__retval);
            }
        }


        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0xED, 0x3C, 0x7B, 0x3E, 0x1F, 0xBD, 0x51, 0x58, 0x97, 0xA4, 0x1C, 0x31, 0x8F, 0x60, 0xD6, 0x41 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("3E7B3CED-BD1F-5851-97A4-1C318F60D641")]
    internal interface IRichTextBlockOverflowAutomationPeerFactory : global::Microsoft.UI.Xaml.Automation.Peers.IRichTextBlockOverflowAutomationPeerFactory
    {
    }
    internal static class IScrollBarAutomationPeerMethods
    {



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0xC4, 0x26, 0x8A, 0x2, 0xF7, 0x5, 0xB2, 0x58, 0xA8, 0x1E, 0xA7, 0xAC, 0x3, 0x2F, 0x75, 0x6F };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("028A26C4-05F7-58B2-A81E-A7AC032F756F")]
    internal interface IScrollBarAutomationPeer : global::Microsoft.UI.Xaml.Automation.Peers.IScrollBarAutomationPeer
    {
    }
    internal static class IScrollBarAutomationPeerFactoryMethods
    {


        internal static unsafe global::Microsoft.UI.Xaml.Automation.Peers.ScrollBarAutomationPeer CreateInstanceWithOwner(IObjectReference _obj, global::Microsoft.UI.Xaml.Controls.Primitives.ScrollBar owner, object baseInterface, out object innerInterface)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __owner = default;
            ObjectReferenceValue __baseInterface = default;
            IntPtr __innerInterface = default;
            IntPtr __retval = default;
            try
            {
                __owner = global::ABI.Microsoft.UI.Xaml.Controls.Primitives.ScrollBar.CreateMarshaler2(owner);
                __baseInterface = MarshalInspectable<object>.CreateMarshaler2(baseInterface);
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, IntPtr, IntPtr*, IntPtr*, int>**)ThisPtr)[6](ThisPtr, MarshalInspectable<object>.GetAbi(__owner), MarshalInspectable<object>.GetAbi(__baseInterface), &__innerInterface, &__retval));
                global::System.GC.KeepAlive(_obj);
                innerInterface = MarshalInspectable<object>.FromAbi(__innerInterface);
                return global::ABI.Microsoft.UI.Xaml.Automation.Peers.ScrollBarAutomationPeer.FromAbi(__retval);
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__owner);
                MarshalInspectable<object>.DisposeMarshaler(__baseInterface);
                MarshalInspectable<object>.DisposeAbi(__innerInterface);
                global::ABI.Microsoft.UI.Xaml.Automation.Peers.ScrollBarAutomationPeer.DisposeAbi(__retval);
            }
        }


        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0xCC, 0xA9, 0x67, 0xFC, 0x14, 0xE9, 0x2A, 0x53, 0x87, 0x17, 0xB, 0x38, 0x3E, 0x21, 0x57, 0xF3 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("FC67A9CC-E914-532A-8717-0B383E2157F3")]
    internal interface IScrollBarAutomationPeerFactory : global::Microsoft.UI.Xaml.Automation.Peers.IScrollBarAutomationPeerFactory
    {
    }
    internal static class IScrollPresenterAutomationPeerMethods
    {



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0x64, 0x69, 0x5A, 0x99, 0x7F, 0x60, 0x95, 0x5D, 0xBD, 0xF9, 0x18, 0x70, 0xA5, 0xE8, 0x2A, 0xC };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("995A6964-607F-5D95-BDF9-1870A5E82A0C")]
    internal interface IScrollPresenterAutomationPeer : global::Microsoft.UI.Xaml.Automation.Peers.IScrollPresenterAutomationPeer
    {
    }
    internal static class IScrollPresenterAutomationPeerFactoryMethods
    {


        internal static unsafe global::Microsoft.UI.Xaml.Automation.Peers.ScrollPresenterAutomationPeer CreateInstance(IObjectReference _obj, global::Microsoft.UI.Xaml.Controls.Primitives.ScrollPresenter owner, object baseInterface, out object innerInterface)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __owner = default;
            ObjectReferenceValue __baseInterface = default;
            IntPtr __innerInterface = default;
            IntPtr __retval = default;
            try
            {
                __owner = global::ABI.Microsoft.UI.Xaml.Controls.Primitives.ScrollPresenter.CreateMarshaler2(owner);
                __baseInterface = MarshalInspectable<object>.CreateMarshaler2(baseInterface);
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, IntPtr, IntPtr*, IntPtr*, int>**)ThisPtr)[6](ThisPtr, MarshalInspectable<object>.GetAbi(__owner), MarshalInspectable<object>.GetAbi(__baseInterface), &__innerInterface, &__retval));
                global::System.GC.KeepAlive(_obj);
                innerInterface = MarshalInspectable<object>.FromAbi(__innerInterface);
                return global::ABI.Microsoft.UI.Xaml.Automation.Peers.ScrollPresenterAutomationPeer.FromAbi(__retval);
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__owner);
                MarshalInspectable<object>.DisposeMarshaler(__baseInterface);
                MarshalInspectable<object>.DisposeAbi(__innerInterface);
                global::ABI.Microsoft.UI.Xaml.Automation.Peers.ScrollPresenterAutomationPeer.DisposeAbi(__retval);
            }
        }


        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0x68, 0x91, 0xE2, 0x47, 0x30, 0x5E, 0xBC, 0x5A, 0xB8, 0x44, 0x7D, 0x89, 0xB5, 0xC3, 0xEE, 0xC0 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("47E29168-5E30-5ABC-B844-7D89B5C3EEC0")]
    internal interface IScrollPresenterAutomationPeerFactory : global::Microsoft.UI.Xaml.Automation.Peers.IScrollPresenterAutomationPeerFactory
    {
    }
    internal static class IScrollViewerAutomationPeerMethods
    {



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0xAD, 0x4B, 0x39, 0x25, 0xA2, 0x6C, 0x4, 0x5E, 0x95, 0xFA, 0x95, 0x41, 0x2C, 0x1F, 0x80, 0xAC };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("25394BAD-6CA2-5E04-95FA-95412C1F80AC")]
    internal interface IScrollViewerAutomationPeer : global::Microsoft.UI.Xaml.Automation.Peers.IScrollViewerAutomationPeer
    {
    }
    internal static class IScrollViewerAutomationPeerFactoryMethods
    {


        internal static unsafe global::Microsoft.UI.Xaml.Automation.Peers.ScrollViewerAutomationPeer CreateInstanceWithOwner(IObjectReference _obj, global::Microsoft.UI.Xaml.Controls.ScrollViewer owner, object baseInterface, out object innerInterface)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __owner = default;
            ObjectReferenceValue __baseInterface = default;
            IntPtr __innerInterface = default;
            IntPtr __retval = default;
            try
            {
                __owner = global::ABI.Microsoft.UI.Xaml.Controls.ScrollViewer.CreateMarshaler2(owner);
                __baseInterface = MarshalInspectable<object>.CreateMarshaler2(baseInterface);
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, IntPtr, IntPtr*, IntPtr*, int>**)ThisPtr)[6](ThisPtr, MarshalInspectable<object>.GetAbi(__owner), MarshalInspectable<object>.GetAbi(__baseInterface), &__innerInterface, &__retval));
                global::System.GC.KeepAlive(_obj);
                innerInterface = MarshalInspectable<object>.FromAbi(__innerInterface);
                return global::ABI.Microsoft.UI.Xaml.Automation.Peers.ScrollViewerAutomationPeer.FromAbi(__retval);
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__owner);
                MarshalInspectable<object>.DisposeMarshaler(__baseInterface);
                MarshalInspectable<object>.DisposeAbi(__innerInterface);
                global::ABI.Microsoft.UI.Xaml.Automation.Peers.ScrollViewerAutomationPeer.DisposeAbi(__retval);
            }
        }


        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0xF9, 0x78, 0x15, 0x3F, 0xEC, 0x60, 0x7C, 0x5F, 0x8D, 0x11, 0x10, 0xC5, 0x35, 0xA7, 0x5A, 0x12 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("3F1578F9-60EC-5F7C-8D11-10C535A75A12")]
    internal interface IScrollViewerAutomationPeerFactory : global::Microsoft.UI.Xaml.Automation.Peers.IScrollViewerAutomationPeerFactory
    {
    }
    internal static class ISelectorAutomationPeerMethods
    {



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0xBA, 0x62, 0xAC, 0x4B, 0x33, 0xFB, 0x8B, 0x5F, 0x99, 0x5E, 0xD, 0xD9, 0x34, 0x31, 0x29, 0x4F };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("4BAC62BA-FB33-5F8B-995E-0DD93431294F")]
    internal interface ISelectorAutomationPeer : global::Microsoft.UI.Xaml.Automation.Peers.ISelectorAutomationPeer
    {
    }
    internal static class ISelectorAutomationPeerFactoryMethods
    {


        internal static unsafe global::Microsoft.UI.Xaml.Automation.Peers.SelectorAutomationPeer CreateInstanceWithOwner(IObjectReference _obj, global::Microsoft.UI.Xaml.Controls.Primitives.Selector owner, object baseInterface, out object innerInterface)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __owner = default;
            ObjectReferenceValue __baseInterface = default;
            IntPtr __innerInterface = default;
            IntPtr __retval = default;
            try
            {
                __owner = global::ABI.Microsoft.UI.Xaml.Controls.Primitives.Selector.CreateMarshaler2(owner);
                __baseInterface = MarshalInspectable<object>.CreateMarshaler2(baseInterface);
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, IntPtr, IntPtr*, IntPtr*, int>**)ThisPtr)[6](ThisPtr, MarshalInspectable<object>.GetAbi(__owner), MarshalInspectable<object>.GetAbi(__baseInterface), &__innerInterface, &__retval));
                global::System.GC.KeepAlive(_obj);
                innerInterface = MarshalInspectable<object>.FromAbi(__innerInterface);
                return global::ABI.Microsoft.UI.Xaml.Automation.Peers.SelectorAutomationPeer.FromAbi(__retval);
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__owner);
                MarshalInspectable<object>.DisposeMarshaler(__baseInterface);
                MarshalInspectable<object>.DisposeAbi(__innerInterface);
                global::ABI.Microsoft.UI.Xaml.Automation.Peers.SelectorAutomationPeer.DisposeAbi(__retval);
            }
        }


        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0xB9, 0xE7, 0x4F, 0xD8, 0xF5, 0xF5, 0x22, 0x51, 0xB4, 0x1C, 0x55, 0x75, 0xA7, 0x99, 0xD5, 0x81 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("D84FE7B9-F5F5-5122-B41C-5575A799D581")]
    internal interface ISelectorAutomationPeerFactory : global::Microsoft.UI.Xaml.Automation.Peers.ISelectorAutomationPeerFactory
    {
    }
    internal static class ISelectorBarItemAutomationPeerMethods
    {



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0x8E, 0x7, 0xB1, 0xCD, 0x50, 0x13, 0xFB, 0x56, 0x87, 0x28, 0x85, 0x37, 0xB0, 0xF3, 0x5C, 0x20 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("CDB1078E-1350-56FB-8728-8537B0F35C20")]
    internal interface ISelectorBarItemAutomationPeer : global::Microsoft.UI.Xaml.Automation.Peers.ISelectorBarItemAutomationPeer
    {
    }
    internal static class ISelectorBarItemAutomationPeerFactoryMethods
    {


        internal static unsafe global::Microsoft.UI.Xaml.Automation.Peers.SelectorBarItemAutomationPeer CreateInstanceWithOwner(IObjectReference _obj, global::Microsoft.UI.Xaml.Controls.SelectorBarItem owner, object baseInterface, out object innerInterface)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __owner = default;
            ObjectReferenceValue __baseInterface = default;
            IntPtr __innerInterface = default;
            IntPtr __retval = default;
            try
            {
                __owner = global::ABI.Microsoft.UI.Xaml.Controls.SelectorBarItem.CreateMarshaler2(owner);
                __baseInterface = MarshalInspectable<object>.CreateMarshaler2(baseInterface);
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, IntPtr, IntPtr*, IntPtr*, int>**)ThisPtr)[6](ThisPtr, MarshalInspectable<object>.GetAbi(__owner), MarshalInspectable<object>.GetAbi(__baseInterface), &__innerInterface, &__retval));
                global::System.GC.KeepAlive(_obj);
                innerInterface = MarshalInspectable<object>.FromAbi(__innerInterface);
                return global::ABI.Microsoft.UI.Xaml.Automation.Peers.SelectorBarItemAutomationPeer.FromAbi(__retval);
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__owner);
                MarshalInspectable<object>.DisposeMarshaler(__baseInterface);
                MarshalInspectable<object>.DisposeAbi(__innerInterface);
                global::ABI.Microsoft.UI.Xaml.Automation.Peers.SelectorBarItemAutomationPeer.DisposeAbi(__retval);
            }
        }


        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0x52, 0x37, 0xAB, 0x4A, 0xDB, 0xD, 0x2D, 0x5E, 0xA6, 0x14, 0xB, 0x5F, 0x7D, 0x4E, 0xFE, 0x9D };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("4AAB3752-0DDB-5E2D-A614-0B5F7D4EFE9D")]
    internal interface ISelectorBarItemAutomationPeerFactory : global::Microsoft.UI.Xaml.Automation.Peers.ISelectorBarItemAutomationPeerFactory
    {
    }
    internal static class ISelectorItemAutomationPeerMethods
    {



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0x53, 0x5E, 0xB8, 0x70, 0x84, 0xE6, 0x68, 0x50, 0x91, 0xB7, 0x2D, 0x84, 0xFE, 0xA8, 0xE9, 0xD7 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("70B85E53-E684-5068-91B7-2D84FEA8E9D7")]
    internal interface ISelectorItemAutomationPeer : global::Microsoft.UI.Xaml.Automation.Peers.ISelectorItemAutomationPeer
    {
    }
    internal static class ISelectorItemAutomationPeerFactoryMethods
    {


        internal static unsafe global::Microsoft.UI.Xaml.Automation.Peers.SelectorItemAutomationPeer CreateInstanceWithParentAndItem(IObjectReference _obj, object item, global::Microsoft.UI.Xaml.Automation.Peers.SelectorAutomationPeer parent, object baseInterface, out object innerInterface)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __item = default;
            ObjectReferenceValue __parent = default;
            ObjectReferenceValue __baseInterface = default;
            IntPtr __innerInterface = default;
            IntPtr __retval = default;
            try
            {
                __item = MarshalInspectable<object>.CreateMarshaler2(item);
                __parent = global::ABI.Microsoft.UI.Xaml.Automation.Peers.SelectorAutomationPeer.CreateMarshaler2(parent);
                __baseInterface = MarshalInspectable<object>.CreateMarshaler2(baseInterface);
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, IntPtr, IntPtr, IntPtr*, IntPtr*, int>**)ThisPtr)[6](ThisPtr, MarshalInspectable<object>.GetAbi(__item), MarshalInspectable<object>.GetAbi(__parent), MarshalInspectable<object>.GetAbi(__baseInterface), &__innerInterface, &__retval));
                global::System.GC.KeepAlive(_obj);
                innerInterface = MarshalInspectable<object>.FromAbi(__innerInterface);
                return global::ABI.Microsoft.UI.Xaml.Automation.Peers.SelectorItemAutomationPeer.FromAbi(__retval);
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__item);
                MarshalInspectable<object>.DisposeMarshaler(__parent);
                MarshalInspectable<object>.DisposeMarshaler(__baseInterface);
                MarshalInspectable<object>.DisposeAbi(__innerInterface);
                global::ABI.Microsoft.UI.Xaml.Automation.Peers.SelectorItemAutomationPeer.DisposeAbi(__retval);
            }
        }


        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0x5B, 0xE8, 0x91, 0x26, 0x9C, 0xDC, 0xE6, 0x5C, 0xAE, 0xC9, 0x21, 0xC8, 0xDA, 0x9A, 0x4A, 0xD1 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("2691E85B-DC9C-5CE6-AEC9-21C8DA9A4AD1")]
    internal interface ISelectorItemAutomationPeerFactory : global::Microsoft.UI.Xaml.Automation.Peers.ISelectorItemAutomationPeerFactory
    {
    }
    internal static class ISemanticZoomAutomationPeerMethods
    {



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0x9, 0xBD, 0x7F, 0x7D, 0x2F, 0x11, 0xFD, 0x50, 0x96, 0x54, 0x4, 0x74, 0xCE, 0x76, 0xB, 0x5D };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("7D7FBD09-112F-50FD-9654-0474CE760B5D")]
    internal interface ISemanticZoomAutomationPeer : global::Microsoft.UI.Xaml.Automation.Peers.ISemanticZoomAutomationPeer
    {
    }
    internal static class ISemanticZoomAutomationPeerFactoryMethods
    {


        internal static unsafe global::Microsoft.UI.Xaml.Automation.Peers.SemanticZoomAutomationPeer CreateInstanceWithOwner(IObjectReference _obj, global::Microsoft.UI.Xaml.Controls.SemanticZoom owner, object baseInterface, out object innerInterface)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __owner = default;
            ObjectReferenceValue __baseInterface = default;
            IntPtr __innerInterface = default;
            IntPtr __retval = default;
            try
            {
                __owner = global::ABI.Microsoft.UI.Xaml.Controls.SemanticZoom.CreateMarshaler2(owner);
                __baseInterface = MarshalInspectable<object>.CreateMarshaler2(baseInterface);
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, IntPtr, IntPtr*, IntPtr*, int>**)ThisPtr)[6](ThisPtr, MarshalInspectable<object>.GetAbi(__owner), MarshalInspectable<object>.GetAbi(__baseInterface), &__innerInterface, &__retval));
                global::System.GC.KeepAlive(_obj);
                innerInterface = MarshalInspectable<object>.FromAbi(__innerInterface);
                return global::ABI.Microsoft.UI.Xaml.Automation.Peers.SemanticZoomAutomationPeer.FromAbi(__retval);
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__owner);
                MarshalInspectable<object>.DisposeMarshaler(__baseInterface);
                MarshalInspectable<object>.DisposeAbi(__innerInterface);
                global::ABI.Microsoft.UI.Xaml.Automation.Peers.SemanticZoomAutomationPeer.DisposeAbi(__retval);
            }
        }


        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0xC2, 0xC3, 0x72, 0x5, 0xDF, 0x87, 0xD6, 0x55, 0x8F, 0xCC, 0x3, 0x23, 0x30, 0x10, 0x8C, 0xD8 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("0572C3C2-87DF-55D6-8FCC-032330108CD8")]
    internal interface ISemanticZoomAutomationPeerFactory : global::Microsoft.UI.Xaml.Automation.Peers.ISemanticZoomAutomationPeerFactory
    {
    }
    internal static class ISliderAutomationPeerMethods
    {



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0x5F, 0xC9, 0x21, 0xC3, 0x17, 0xC9, 0x14, 0x57, 0x9D, 0x16, 0xAD, 0x70, 0x6E, 0x38, 0x92, 0x6A };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("C321C95F-C917-5714-9D16-AD706E38926A")]
    internal interface ISliderAutomationPeer : global::Microsoft.UI.Xaml.Automation.Peers.ISliderAutomationPeer
    {
    }
    internal static class ISliderAutomationPeerFactoryMethods
    {


        internal static unsafe global::Microsoft.UI.Xaml.Automation.Peers.SliderAutomationPeer CreateInstanceWithOwner(IObjectReference _obj, global::Microsoft.UI.Xaml.Controls.Slider owner, object baseInterface, out object innerInterface)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __owner = default;
            ObjectReferenceValue __baseInterface = default;
            IntPtr __innerInterface = default;
            IntPtr __retval = default;
            try
            {
                __owner = global::ABI.Microsoft.UI.Xaml.Controls.Slider.CreateMarshaler2(owner);
                __baseInterface = MarshalInspectable<object>.CreateMarshaler2(baseInterface);
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, IntPtr, IntPtr*, IntPtr*, int>**)ThisPtr)[6](ThisPtr, MarshalInspectable<object>.GetAbi(__owner), MarshalInspectable<object>.GetAbi(__baseInterface), &__innerInterface, &__retval));
                global::System.GC.KeepAlive(_obj);
                innerInterface = MarshalInspectable<object>.FromAbi(__innerInterface);
                return global::ABI.Microsoft.UI.Xaml.Automation.Peers.SliderAutomationPeer.FromAbi(__retval);
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__owner);
                MarshalInspectable<object>.DisposeMarshaler(__baseInterface);
                MarshalInspectable<object>.DisposeAbi(__innerInterface);
                global::ABI.Microsoft.UI.Xaml.Automation.Peers.SliderAutomationPeer.DisposeAbi(__retval);
            }
        }


        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0x43, 0x99, 0x45, 0x81, 0x2A, 0x90, 0xE3, 0x5F, 0x9C, 0x75, 0xF, 0x8B, 0x11, 0xF4, 0x26, 0x58 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("81459943-902A-5FE3-9C75-0F8B11F42658")]
    internal interface ISliderAutomationPeerFactory : global::Microsoft.UI.Xaml.Automation.Peers.ISliderAutomationPeerFactory
    {
    }
    internal static class ISplitButtonAutomationPeerMethods
    {



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0x1C, 0x66, 0x82, 0x1, 0xF3, 0xD, 0x7D, 0x5C, 0x87, 0x52, 0x54, 0x78, 0x4, 0xC4, 0xFA, 0x44 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("0182661C-0DF3-5C7D-8752-547804C4FA44")]
    internal interface ISplitButtonAutomationPeer : global::Microsoft.UI.Xaml.Automation.Peers.ISplitButtonAutomationPeer
    {
    }
    internal static class ISplitButtonAutomationPeerFactoryMethods
    {


        internal static unsafe global::Microsoft.UI.Xaml.Automation.Peers.SplitButtonAutomationPeer CreateInstance(IObjectReference _obj, global::Microsoft.UI.Xaml.Controls.SplitButton owner, object baseInterface, out object innerInterface)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __owner = default;
            ObjectReferenceValue __baseInterface = default;
            IntPtr __innerInterface = default;
            IntPtr __retval = default;
            try
            {
                __owner = global::ABI.Microsoft.UI.Xaml.Controls.SplitButton.CreateMarshaler2(owner);
                __baseInterface = MarshalInspectable<object>.CreateMarshaler2(baseInterface);
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, IntPtr, IntPtr*, IntPtr*, int>**)ThisPtr)[6](ThisPtr, MarshalInspectable<object>.GetAbi(__owner), MarshalInspectable<object>.GetAbi(__baseInterface), &__innerInterface, &__retval));
                global::System.GC.KeepAlive(_obj);
                innerInterface = MarshalInspectable<object>.FromAbi(__innerInterface);
                return global::ABI.Microsoft.UI.Xaml.Automation.Peers.SplitButtonAutomationPeer.FromAbi(__retval);
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__owner);
                MarshalInspectable<object>.DisposeMarshaler(__baseInterface);
                MarshalInspectable<object>.DisposeAbi(__innerInterface);
                global::ABI.Microsoft.UI.Xaml.Automation.Peers.SplitButtonAutomationPeer.DisposeAbi(__retval);
            }
        }


        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0x93, 0xDC, 0x2D, 0xE8, 0xE, 0x78, 0x0, 0x50, 0x98, 0x1E, 0x9B, 0xE1, 0xE, 0xED, 0xEB, 0x1F };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("E82DDC93-780E-5000-981E-9BE10EEDEB1F")]
    internal interface ISplitButtonAutomationPeerFactory : global::Microsoft.UI.Xaml.Automation.Peers.ISplitButtonAutomationPeerFactory
    {
    }
    internal static class ITabViewAutomationPeerMethods
    {



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0x5B, 0xF0, 0xB3, 0xEF, 0x25, 0x2A, 0x66, 0x52, 0xA1, 0xCB, 0x5A, 0xA, 0xA4, 0x51, 0xCA, 0x32 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("EFB3F05B-2A25-5266-A1CB-5A0AA451CA32")]
    internal interface ITabViewAutomationPeer : global::Microsoft.UI.Xaml.Automation.Peers.ITabViewAutomationPeer
    {
    }
    internal static class ITabViewAutomationPeerFactoryMethods
    {


        internal static unsafe global::Microsoft.UI.Xaml.Automation.Peers.TabViewAutomationPeer CreateInstance(IObjectReference _obj, global::Microsoft.UI.Xaml.Controls.TabView owner, object baseInterface, out object innerInterface)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __owner = default;
            ObjectReferenceValue __baseInterface = default;
            IntPtr __innerInterface = default;
            IntPtr __retval = default;
            try
            {
                __owner = global::ABI.Microsoft.UI.Xaml.Controls.TabView.CreateMarshaler2(owner);
                __baseInterface = MarshalInspectable<object>.CreateMarshaler2(baseInterface);
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, IntPtr, IntPtr*, IntPtr*, int>**)ThisPtr)[6](ThisPtr, MarshalInspectable<object>.GetAbi(__owner), MarshalInspectable<object>.GetAbi(__baseInterface), &__innerInterface, &__retval));
                global::System.GC.KeepAlive(_obj);
                innerInterface = MarshalInspectable<object>.FromAbi(__innerInterface);
                return global::ABI.Microsoft.UI.Xaml.Automation.Peers.TabViewAutomationPeer.FromAbi(__retval);
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__owner);
                MarshalInspectable<object>.DisposeMarshaler(__baseInterface);
                MarshalInspectable<object>.DisposeAbi(__innerInterface);
                global::ABI.Microsoft.UI.Xaml.Automation.Peers.TabViewAutomationPeer.DisposeAbi(__retval);
            }
        }


        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0xCB, 0xC7, 0xD8, 0xF8, 0xCC, 0x47, 0xA5, 0x5D, 0xBD, 0x1A, 0xE2, 0xE1, 0xBA, 0xF, 0xD2, 0x4D };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("F8D8C7CB-47CC-5DA5-BD1A-E2E1BA0FD24D")]
    internal interface ITabViewAutomationPeerFactory : global::Microsoft.UI.Xaml.Automation.Peers.ITabViewAutomationPeerFactory
    {
    }
    internal static class ITabViewItemAutomationPeerMethods
    {



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0xC3, 0xB1, 0xAF, 0x58, 0xFD, 0xA3, 0xA1, 0x54, 0xBE, 0x39, 0x32, 0x8D, 0xD8, 0xA6, 0xF8, 0xEC };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("58AFB1C3-A3FD-54A1-BE39-328DD8A6F8EC")]
    internal interface ITabViewItemAutomationPeer : global::Microsoft.UI.Xaml.Automation.Peers.ITabViewItemAutomationPeer
    {
    }
    internal static class ITabViewItemAutomationPeerFactoryMethods
    {


        internal static unsafe global::Microsoft.UI.Xaml.Automation.Peers.TabViewItemAutomationPeer CreateInstance(IObjectReference _obj, global::Microsoft.UI.Xaml.Controls.TabViewItem owner, object baseInterface, out object innerInterface)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __owner = default;
            ObjectReferenceValue __baseInterface = default;
            IntPtr __innerInterface = default;
            IntPtr __retval = default;
            try
            {
                __owner = global::ABI.Microsoft.UI.Xaml.Controls.TabViewItem.CreateMarshaler2(owner);
                __baseInterface = MarshalInspectable<object>.CreateMarshaler2(baseInterface);
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, IntPtr, IntPtr*, IntPtr*, int>**)ThisPtr)[6](ThisPtr, MarshalInspectable<object>.GetAbi(__owner), MarshalInspectable<object>.GetAbi(__baseInterface), &__innerInterface, &__retval));
                global::System.GC.KeepAlive(_obj);
                innerInterface = MarshalInspectable<object>.FromAbi(__innerInterface);
                return global::ABI.Microsoft.UI.Xaml.Automation.Peers.TabViewItemAutomationPeer.FromAbi(__retval);
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__owner);
                MarshalInspectable<object>.DisposeMarshaler(__baseInterface);
                MarshalInspectable<object>.DisposeAbi(__innerInterface);
                global::ABI.Microsoft.UI.Xaml.Automation.Peers.TabViewItemAutomationPeer.DisposeAbi(__retval);
            }
        }


        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0x40, 0x80, 0x21, 0x0, 0xD, 0x9C, 0x52, 0x5C, 0xB5, 0x78, 0x59, 0x3B, 0x80, 0x90, 0x47, 0xB3 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("00218040-9C0D-5C52-B578-593B809047B3")]
    internal interface ITabViewItemAutomationPeerFactory : global::Microsoft.UI.Xaml.Automation.Peers.ITabViewItemAutomationPeerFactory
    {
    }
    internal static class ITeachingTipAutomationPeerMethods
    {



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0xEC, 0x94, 0x79, 0x60, 0x95, 0xA9, 0x7, 0x5B, 0xB5, 0x35, 0x8C, 0x91, 0x3F, 0xB, 0xC2, 0x6C };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("607994EC-A995-5B07-B535-8C913F0BC26C")]
    internal interface ITeachingTipAutomationPeer : global::Microsoft.UI.Xaml.Automation.Peers.ITeachingTipAutomationPeer
    {
    }
    internal static class ITeachingTipAutomationPeerFactoryMethods
    {


        internal static unsafe global::Microsoft.UI.Xaml.Automation.Peers.TeachingTipAutomationPeer CreateInstance(IObjectReference _obj, global::Microsoft.UI.Xaml.Controls.TeachingTip owner, object baseInterface, out object innerInterface)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __owner = default;
            ObjectReferenceValue __baseInterface = default;
            IntPtr __innerInterface = default;
            IntPtr __retval = default;
            try
            {
                __owner = global::ABI.Microsoft.UI.Xaml.Controls.TeachingTip.CreateMarshaler2(owner);
                __baseInterface = MarshalInspectable<object>.CreateMarshaler2(baseInterface);
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, IntPtr, IntPtr*, IntPtr*, int>**)ThisPtr)[6](ThisPtr, MarshalInspectable<object>.GetAbi(__owner), MarshalInspectable<object>.GetAbi(__baseInterface), &__innerInterface, &__retval));
                global::System.GC.KeepAlive(_obj);
                innerInterface = MarshalInspectable<object>.FromAbi(__innerInterface);
                return global::ABI.Microsoft.UI.Xaml.Automation.Peers.TeachingTipAutomationPeer.FromAbi(__retval);
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__owner);
                MarshalInspectable<object>.DisposeMarshaler(__baseInterface);
                MarshalInspectable<object>.DisposeAbi(__innerInterface);
                global::ABI.Microsoft.UI.Xaml.Automation.Peers.TeachingTipAutomationPeer.DisposeAbi(__retval);
            }
        }


        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0xC1, 0x61, 0xA0, 0x71, 0x71, 0x3D, 0x48, 0x55, 0x98, 0xFD, 0x62, 0x16, 0x7F, 0x24, 0x60, 0x85 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("71A061C1-3D71-5548-98FD-62167F246085")]
    internal interface ITeachingTipAutomationPeerFactory : global::Microsoft.UI.Xaml.Automation.Peers.ITeachingTipAutomationPeerFactory
    {
    }
    internal static class ITextBlockAutomationPeerMethods
    {



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0x60, 0x19, 0x52, 0x29, 0xF2, 0x2E, 0x15, 0x5D, 0xBF, 0x6A, 0xCF, 0x58, 0x5E, 0xF8, 0xA5, 0x71 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("29521960-2EF2-5D15-BF6A-CF585EF8A571")]
    internal interface ITextBlockAutomationPeer : global::Microsoft.UI.Xaml.Automation.Peers.ITextBlockAutomationPeer
    {
    }
    internal static class ITextBlockAutomationPeerFactoryMethods
    {


        internal static unsafe global::Microsoft.UI.Xaml.Automation.Peers.TextBlockAutomationPeer CreateInstanceWithOwner(IObjectReference _obj, global::Microsoft.UI.Xaml.Controls.TextBlock owner, object baseInterface, out object innerInterface)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __owner = default;
            ObjectReferenceValue __baseInterface = default;
            IntPtr __innerInterface = default;
            IntPtr __retval = default;
            try
            {
                __owner = global::ABI.Microsoft.UI.Xaml.Controls.TextBlock.CreateMarshaler2(owner);
                __baseInterface = MarshalInspectable<object>.CreateMarshaler2(baseInterface);
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, IntPtr, IntPtr*, IntPtr*, int>**)ThisPtr)[6](ThisPtr, MarshalInspectable<object>.GetAbi(__owner), MarshalInspectable<object>.GetAbi(__baseInterface), &__innerInterface, &__retval));
                global::System.GC.KeepAlive(_obj);
                innerInterface = MarshalInspectable<object>.FromAbi(__innerInterface);
                return global::ABI.Microsoft.UI.Xaml.Automation.Peers.TextBlockAutomationPeer.FromAbi(__retval);
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__owner);
                MarshalInspectable<object>.DisposeMarshaler(__baseInterface);
                MarshalInspectable<object>.DisposeAbi(__innerInterface);
                global::ABI.Microsoft.UI.Xaml.Automation.Peers.TextBlockAutomationPeer.DisposeAbi(__retval);
            }
        }


        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0xBB, 0xC7, 0x4, 0x2A, 0x48, 0x6D, 0x8E, 0x5F, 0x96, 0x22, 0x54, 0xDC, 0xCD, 0xF0, 0xA5, 0xCA };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("2A04C7BB-6D48-5F8E-9622-54DCCDF0A5CA")]
    internal interface ITextBlockAutomationPeerFactory : global::Microsoft.UI.Xaml.Automation.Peers.ITextBlockAutomationPeerFactory
    {
    }
    internal static class ITextBoxAutomationPeerMethods
    {



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0x9A, 0x13, 0x26, 0x9E, 0x18, 0x6, 0xFA, 0x56, 0x99, 0x16, 0x8D, 0x5E, 0xDF, 0x56, 0x47, 0x35 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("9E26139A-0618-56FA-9916-8D5EDF564735")]
    internal interface ITextBoxAutomationPeer : global::Microsoft.UI.Xaml.Automation.Peers.ITextBoxAutomationPeer
    {
    }
    internal static class ITextBoxAutomationPeerFactoryMethods
    {


        internal static unsafe global::Microsoft.UI.Xaml.Automation.Peers.TextBoxAutomationPeer CreateInstanceWithOwner(IObjectReference _obj, global::Microsoft.UI.Xaml.Controls.TextBox owner, object baseInterface, out object innerInterface)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __owner = default;
            ObjectReferenceValue __baseInterface = default;
            IntPtr __innerInterface = default;
            IntPtr __retval = default;
            try
            {
                __owner = global::ABI.Microsoft.UI.Xaml.Controls.TextBox.CreateMarshaler2(owner);
                __baseInterface = MarshalInspectable<object>.CreateMarshaler2(baseInterface);
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, IntPtr, IntPtr*, IntPtr*, int>**)ThisPtr)[6](ThisPtr, MarshalInspectable<object>.GetAbi(__owner), MarshalInspectable<object>.GetAbi(__baseInterface), &__innerInterface, &__retval));
                global::System.GC.KeepAlive(_obj);
                innerInterface = MarshalInspectable<object>.FromAbi(__innerInterface);
                return global::ABI.Microsoft.UI.Xaml.Automation.Peers.TextBoxAutomationPeer.FromAbi(__retval);
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__owner);
                MarshalInspectable<object>.DisposeMarshaler(__baseInterface);
                MarshalInspectable<object>.DisposeAbi(__innerInterface);
                global::ABI.Microsoft.UI.Xaml.Automation.Peers.TextBoxAutomationPeer.DisposeAbi(__retval);
            }
        }


        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0x8F, 0xAC, 0x84, 0x1E, 0x74, 0x99, 0xE1, 0x5B, 0xB6, 0xEA, 0x84, 0xF3, 0x9, 0xC8, 0xB2, 0xB8 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("1E84AC8F-9974-5BE1-B6EA-84F309C8B2B8")]
    internal interface ITextBoxAutomationPeerFactory : global::Microsoft.UI.Xaml.Automation.Peers.ITextBoxAutomationPeerFactory
    {
    }
    internal static class IThumbAutomationPeerMethods
    {



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0x5B, 0x6E, 0x5D, 0xB0, 0x86, 0x35, 0x57, 0x51, 0xA4, 0x97, 0x4F, 0x15, 0xB8, 0x7D, 0x89, 0xEB };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("B05D6E5B-3586-5157-A497-4F15B87D89EB")]
    internal interface IThumbAutomationPeer : global::Microsoft.UI.Xaml.Automation.Peers.IThumbAutomationPeer
    {
    }
    internal static class IThumbAutomationPeerFactoryMethods
    {


        internal static unsafe global::Microsoft.UI.Xaml.Automation.Peers.ThumbAutomationPeer CreateInstanceWithOwner(IObjectReference _obj, global::Microsoft.UI.Xaml.Controls.Primitives.Thumb owner, object baseInterface, out object innerInterface)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __owner = default;
            ObjectReferenceValue __baseInterface = default;
            IntPtr __innerInterface = default;
            IntPtr __retval = default;
            try
            {
                __owner = global::ABI.Microsoft.UI.Xaml.Controls.Primitives.Thumb.CreateMarshaler2(owner);
                __baseInterface = MarshalInspectable<object>.CreateMarshaler2(baseInterface);
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, IntPtr, IntPtr*, IntPtr*, int>**)ThisPtr)[6](ThisPtr, MarshalInspectable<object>.GetAbi(__owner), MarshalInspectable<object>.GetAbi(__baseInterface), &__innerInterface, &__retval));
                global::System.GC.KeepAlive(_obj);
                innerInterface = MarshalInspectable<object>.FromAbi(__innerInterface);
                return global::ABI.Microsoft.UI.Xaml.Automation.Peers.ThumbAutomationPeer.FromAbi(__retval);
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__owner);
                MarshalInspectable<object>.DisposeMarshaler(__baseInterface);
                MarshalInspectable<object>.DisposeAbi(__innerInterface);
                global::ABI.Microsoft.UI.Xaml.Automation.Peers.ThumbAutomationPeer.DisposeAbi(__retval);
            }
        }


        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0x4A, 0x41, 0x1B, 0x31, 0xC8, 0x7C, 0xD9, 0x56, 0xB5, 0x81, 0x14, 0x9C, 0x8B, 0xF9, 0xD7, 0x6D };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("311B414A-7CC8-56D9-B581-149C8BF9D76D")]
    internal interface IThumbAutomationPeerFactory : global::Microsoft.UI.Xaml.Automation.Peers.IThumbAutomationPeerFactory
    {
    }
    internal static class ITimePickerAutomationPeerMethods
    {



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0xBB, 0xD3, 0x9, 0x63, 0x87, 0x33, 0x65, 0x59, 0xAC, 0xF5, 0x47, 0xBF, 0xA9, 0xB9, 0x2E, 0xD4 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("6309D3BB-3387-5965-ACF5-47BFA9B92ED4")]
    internal interface ITimePickerAutomationPeer : global::Microsoft.UI.Xaml.Automation.Peers.ITimePickerAutomationPeer
    {
    }
    internal static class ITimePickerAutomationPeerFactoryMethods
    {


        internal static unsafe global::Microsoft.UI.Xaml.Automation.Peers.TimePickerAutomationPeer CreateInstanceWithOwner(IObjectReference _obj, global::Microsoft.UI.Xaml.Controls.TimePicker owner, object baseInterface, out object innerInterface)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __owner = default;
            ObjectReferenceValue __baseInterface = default;
            IntPtr __innerInterface = default;
            IntPtr __retval = default;
            try
            {
                __owner = global::ABI.Microsoft.UI.Xaml.Controls.TimePicker.CreateMarshaler2(owner);
                __baseInterface = MarshalInspectable<object>.CreateMarshaler2(baseInterface);
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, IntPtr, IntPtr*, IntPtr*, int>**)ThisPtr)[6](ThisPtr, MarshalInspectable<object>.GetAbi(__owner), MarshalInspectable<object>.GetAbi(__baseInterface), &__innerInterface, &__retval));
                global::System.GC.KeepAlive(_obj);
                innerInterface = MarshalInspectable<object>.FromAbi(__innerInterface);
                return global::ABI.Microsoft.UI.Xaml.Automation.Peers.TimePickerAutomationPeer.FromAbi(__retval);
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__owner);
                MarshalInspectable<object>.DisposeMarshaler(__baseInterface);
                MarshalInspectable<object>.DisposeAbi(__innerInterface);
                global::ABI.Microsoft.UI.Xaml.Automation.Peers.TimePickerAutomationPeer.DisposeAbi(__retval);
            }
        }


        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0x82, 0x2F, 0xDF, 0x7C, 0x53, 0x74, 0x86, 0x5D, 0x8E, 0xE3, 0x60, 0xDA, 0xAF, 0x34, 0x5F, 0x47 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("7CDF2F82-7453-5D86-8EE3-60DAAF345F47")]
    internal interface ITimePickerAutomationPeerFactory : global::Microsoft.UI.Xaml.Automation.Peers.ITimePickerAutomationPeerFactory
    {
    }
    internal static class ITimePickerFlyoutPresenterAutomationPeerMethods
    {



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0x8A, 0x26, 0x38, 0x24, 0xE8, 0x62, 0x61, 0x5D, 0x95, 0xD0, 0xD3, 0x6F, 0x6B, 0x42, 0xE6, 0x52 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("2438268A-62E8-5D61-95D0-D36F6B42E652")]
    internal interface ITimePickerFlyoutPresenterAutomationPeer : global::Microsoft.UI.Xaml.Automation.Peers.ITimePickerFlyoutPresenterAutomationPeer
    {
    }
    internal static class IToggleButtonAutomationPeerMethods
    {



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0x99, 0x9B, 0x7D, 0x63, 0xC2, 0xBC, 0x26, 0x5E, 0xB4, 0x3F, 0xBA, 0x6C, 0x26, 0xAF, 0x72, 0xC3 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("637D9B99-BCC2-5E26-B43F-BA6C26AF72C3")]
    internal interface IToggleButtonAutomationPeer : global::Microsoft.UI.Xaml.Automation.Peers.IToggleButtonAutomationPeer
    {
    }
    internal static class IToggleButtonAutomationPeerFactoryMethods
    {


        internal static unsafe global::Microsoft.UI.Xaml.Automation.Peers.ToggleButtonAutomationPeer CreateInstanceWithOwner(IObjectReference _obj, global::Microsoft.UI.Xaml.Controls.Primitives.ToggleButton owner, object baseInterface, out object innerInterface)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __owner = default;
            ObjectReferenceValue __baseInterface = default;
            IntPtr __innerInterface = default;
            IntPtr __retval = default;
            try
            {
                __owner = global::ABI.Microsoft.UI.Xaml.Controls.Primitives.ToggleButton.CreateMarshaler2(owner);
                __baseInterface = MarshalInspectable<object>.CreateMarshaler2(baseInterface);
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, IntPtr, IntPtr*, IntPtr*, int>**)ThisPtr)[6](ThisPtr, MarshalInspectable<object>.GetAbi(__owner), MarshalInspectable<object>.GetAbi(__baseInterface), &__innerInterface, &__retval));
                global::System.GC.KeepAlive(_obj);
                innerInterface = MarshalInspectable<object>.FromAbi(__innerInterface);
                return global::ABI.Microsoft.UI.Xaml.Automation.Peers.ToggleButtonAutomationPeer.FromAbi(__retval);
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__owner);
                MarshalInspectable<object>.DisposeMarshaler(__baseInterface);
                MarshalInspectable<object>.DisposeAbi(__innerInterface);
                global::ABI.Microsoft.UI.Xaml.Automation.Peers.ToggleButtonAutomationPeer.DisposeAbi(__retval);
            }
        }


        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0x96, 0x20, 0x27, 0x2C, 0xE0, 0x21, 0x14, 0x57, 0x91, 0x64, 0x1F, 0x6A, 0x1E, 0xB, 0x21, 0x81 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("2C272096-21E0-5714-9164-1F6A1E0B2181")]
    internal interface IToggleButtonAutomationPeerFactory : global::Microsoft.UI.Xaml.Automation.Peers.IToggleButtonAutomationPeerFactory
    {
    }
    internal static class IToggleMenuFlyoutItemAutomationPeerMethods
    {



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0x7E, 0x4C, 0x4E, 0xEA, 0x12, 0x1F, 0xC0, 0x56, 0xA2, 0xA5, 0xB5, 0x9E, 0x9C, 0x25, 0xB0, 0x6D };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("EA4E4C7E-1F12-56C0-A2A5-B59E9C25B06D")]
    internal interface IToggleMenuFlyoutItemAutomationPeer : global::Microsoft.UI.Xaml.Automation.Peers.IToggleMenuFlyoutItemAutomationPeer
    {
    }
    internal static class IToggleMenuFlyoutItemAutomationPeerFactoryMethods
    {


        internal static unsafe global::Microsoft.UI.Xaml.Automation.Peers.ToggleMenuFlyoutItemAutomationPeer CreateInstanceWithOwner(IObjectReference _obj, global::Microsoft.UI.Xaml.Controls.ToggleMenuFlyoutItem owner, object baseInterface, out object innerInterface)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __owner = default;
            ObjectReferenceValue __baseInterface = default;
            IntPtr __innerInterface = default;
            IntPtr __retval = default;
            try
            {
                __owner = global::ABI.Microsoft.UI.Xaml.Controls.ToggleMenuFlyoutItem.CreateMarshaler2(owner);
                __baseInterface = MarshalInspectable<object>.CreateMarshaler2(baseInterface);
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, IntPtr, IntPtr*, IntPtr*, int>**)ThisPtr)[6](ThisPtr, MarshalInspectable<object>.GetAbi(__owner), MarshalInspectable<object>.GetAbi(__baseInterface), &__innerInterface, &__retval));
                global::System.GC.KeepAlive(_obj);
                innerInterface = MarshalInspectable<object>.FromAbi(__innerInterface);
                return global::ABI.Microsoft.UI.Xaml.Automation.Peers.ToggleMenuFlyoutItemAutomationPeer.FromAbi(__retval);
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__owner);
                MarshalInspectable<object>.DisposeMarshaler(__baseInterface);
                MarshalInspectable<object>.DisposeAbi(__innerInterface);
                global::ABI.Microsoft.UI.Xaml.Automation.Peers.ToggleMenuFlyoutItemAutomationPeer.DisposeAbi(__retval);
            }
        }


        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0x0, 0xF7, 0x89, 0x77, 0x65, 0xD5, 0xC7, 0x5D, 0x8B, 0xCC, 0xD4, 0x59, 0xA4, 0xC0, 0x8F, 0xD6 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("7789F700-D565-5DC7-8BCC-D459A4C08FD6")]
    internal interface IToggleMenuFlyoutItemAutomationPeerFactory : global::Microsoft.UI.Xaml.Automation.Peers.IToggleMenuFlyoutItemAutomationPeerFactory
    {
    }
    internal static class IToggleSplitButtonAutomationPeerMethods
    {



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0x52, 0x69, 0x35, 0x21, 0x74, 0x4C, 0x73, 0x52, 0xB8, 0x2D, 0xE5, 0xCE, 0x1B, 0xBC, 0xD3, 0x69 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("21356952-4C74-5273-B82D-E5CE1BBCD369")]
    internal interface IToggleSplitButtonAutomationPeer : global::Microsoft.UI.Xaml.Automation.Peers.IToggleSplitButtonAutomationPeer
    {
    }
    internal static class IToggleSplitButtonAutomationPeerFactoryMethods
    {


        internal static unsafe global::Microsoft.UI.Xaml.Automation.Peers.ToggleSplitButtonAutomationPeer CreateInstance(IObjectReference _obj, global::Microsoft.UI.Xaml.Controls.ToggleSplitButton owner, object baseInterface, out object innerInterface)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __owner = default;
            ObjectReferenceValue __baseInterface = default;
            IntPtr __innerInterface = default;
            IntPtr __retval = default;
            try
            {
                __owner = global::ABI.Microsoft.UI.Xaml.Controls.ToggleSplitButton.CreateMarshaler2(owner);
                __baseInterface = MarshalInspectable<object>.CreateMarshaler2(baseInterface);
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, IntPtr, IntPtr*, IntPtr*, int>**)ThisPtr)[6](ThisPtr, MarshalInspectable<object>.GetAbi(__owner), MarshalInspectable<object>.GetAbi(__baseInterface), &__innerInterface, &__retval));
                global::System.GC.KeepAlive(_obj);
                innerInterface = MarshalInspectable<object>.FromAbi(__innerInterface);
                return global::ABI.Microsoft.UI.Xaml.Automation.Peers.ToggleSplitButtonAutomationPeer.FromAbi(__retval);
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__owner);
                MarshalInspectable<object>.DisposeMarshaler(__baseInterface);
                MarshalInspectable<object>.DisposeAbi(__innerInterface);
                global::ABI.Microsoft.UI.Xaml.Automation.Peers.ToggleSplitButtonAutomationPeer.DisposeAbi(__retval);
            }
        }


        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0xA5, 0x14, 0xC2, 0x61, 0x5B, 0x60, 0x98, 0x5E, 0xB8, 0x5D, 0xE3, 0x12, 0x1D, 0x23, 0xED, 0xAA };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("61C214A5-605B-5E98-B85D-E3121D23EDAA")]
    internal interface IToggleSplitButtonAutomationPeerFactory : global::Microsoft.UI.Xaml.Automation.Peers.IToggleSplitButtonAutomationPeerFactory
    {
    }
    internal static class IToggleSwitchAutomationPeerMethods
    {



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0x91, 0x60, 0x7D, 0x92, 0x70, 0x50, 0x4F, 0x57, 0x98, 0x33, 0xE, 0xF8, 0x9A, 0x9C, 0xBB, 0x4B };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("927D6091-5070-574F-9833-0EF89A9CBB4B")]
    internal interface IToggleSwitchAutomationPeer : global::Microsoft.UI.Xaml.Automation.Peers.IToggleSwitchAutomationPeer
    {
    }
    internal static class IToggleSwitchAutomationPeerFactoryMethods
    {


        internal static unsafe global::Microsoft.UI.Xaml.Automation.Peers.ToggleSwitchAutomationPeer CreateInstanceWithOwner(IObjectReference _obj, global::Microsoft.UI.Xaml.Controls.ToggleSwitch owner, object baseInterface, out object innerInterface)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __owner = default;
            ObjectReferenceValue __baseInterface = default;
            IntPtr __innerInterface = default;
            IntPtr __retval = default;
            try
            {
                __owner = global::ABI.Microsoft.UI.Xaml.Controls.ToggleSwitch.CreateMarshaler2(owner);
                __baseInterface = MarshalInspectable<object>.CreateMarshaler2(baseInterface);
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, IntPtr, IntPtr*, IntPtr*, int>**)ThisPtr)[6](ThisPtr, MarshalInspectable<object>.GetAbi(__owner), MarshalInspectable<object>.GetAbi(__baseInterface), &__innerInterface, &__retval));
                global::System.GC.KeepAlive(_obj);
                innerInterface = MarshalInspectable<object>.FromAbi(__innerInterface);
                return global::ABI.Microsoft.UI.Xaml.Automation.Peers.ToggleSwitchAutomationPeer.FromAbi(__retval);
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__owner);
                MarshalInspectable<object>.DisposeMarshaler(__baseInterface);
                MarshalInspectable<object>.DisposeAbi(__innerInterface);
                global::ABI.Microsoft.UI.Xaml.Automation.Peers.ToggleSwitchAutomationPeer.DisposeAbi(__retval);
            }
        }


        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0xE4, 0xE3, 0xF5, 0x3, 0x61, 0x4B, 0xCF, 0x5D, 0xAF, 0xDC, 0xFD, 0x23, 0x4, 0x1A, 0x3, 0x74 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("03F5E3E4-4B61-5DCF-AFDC-FD23041A0374")]
    internal interface IToggleSwitchAutomationPeerFactory : global::Microsoft.UI.Xaml.Automation.Peers.IToggleSwitchAutomationPeerFactory
    {
    }
    internal static class ITreeViewItemAutomationPeerMethods
    {



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0x66, 0x81, 0xB3, 0x25, 0x5, 0xB9, 0x80, 0x54, 0x84, 0x39, 0xE4, 0x59, 0xA5, 0xB7, 0x7B, 0x8C };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("25B38166-B905-5480-8439-E459A5B77B8C")]
    internal interface ITreeViewItemAutomationPeer : global::Microsoft.UI.Xaml.Automation.Peers.ITreeViewItemAutomationPeer
    {
    }
    internal static class ITreeViewItemAutomationPeerFactoryMethods
    {


        internal static unsafe global::Microsoft.UI.Xaml.Automation.Peers.TreeViewItemAutomationPeer CreateInstanceWithOwner(IObjectReference _obj, global::Microsoft.UI.Xaml.Controls.TreeViewItem owner, object baseInterface, out object innerInterface)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __owner = default;
            ObjectReferenceValue __baseInterface = default;
            IntPtr __innerInterface = default;
            IntPtr __retval = default;
            try
            {
                __owner = global::ABI.Microsoft.UI.Xaml.Controls.TreeViewItem.CreateMarshaler2(owner);
                __baseInterface = MarshalInspectable<object>.CreateMarshaler2(baseInterface);
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, IntPtr, IntPtr*, IntPtr*, int>**)ThisPtr)[6](ThisPtr, MarshalInspectable<object>.GetAbi(__owner), MarshalInspectable<object>.GetAbi(__baseInterface), &__innerInterface, &__retval));
                global::System.GC.KeepAlive(_obj);
                innerInterface = MarshalInspectable<object>.FromAbi(__innerInterface);
                return global::ABI.Microsoft.UI.Xaml.Automation.Peers.TreeViewItemAutomationPeer.FromAbi(__retval);
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__owner);
                MarshalInspectable<object>.DisposeMarshaler(__baseInterface);
                MarshalInspectable<object>.DisposeAbi(__innerInterface);
                global::ABI.Microsoft.UI.Xaml.Automation.Peers.TreeViewItemAutomationPeer.DisposeAbi(__retval);
            }
        }


        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0x78, 0x3C, 0x99, 0xC, 0x1F, 0x98, 0xCF, 0x5D, 0x93, 0xD3, 0xA2, 0x17, 0xAD, 0x9A, 0xCA, 0xB6 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("0C993C78-981F-5DCF-93D3-A217AD9ACAB6")]
    internal interface ITreeViewItemAutomationPeerFactory : global::Microsoft.UI.Xaml.Automation.Peers.ITreeViewItemAutomationPeerFactory
    {
    }
    internal static class ITreeViewItemDataAutomationPeerMethods
    {



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0x77, 0x4F, 0xF7, 0x20, 0xFA, 0xED, 0x71, 0x5C, 0x9D, 0xEB, 0x53, 0xD, 0xCA, 0xF9, 0xC1, 0x1D };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("20F74F77-EDFA-5C71-9DEB-530DCAF9C11D")]
    internal interface ITreeViewItemDataAutomationPeer : global::Microsoft.UI.Xaml.Automation.Peers.ITreeViewItemDataAutomationPeer
    {
    }
    internal static class ITreeViewItemDataAutomationPeerFactoryMethods
    {


        internal static unsafe global::Microsoft.UI.Xaml.Automation.Peers.TreeViewItemDataAutomationPeer CreateInstanceWithOwner(IObjectReference _obj, object item, global::Microsoft.UI.Xaml.Automation.Peers.TreeViewListAutomationPeer parent, object baseInterface, out object innerInterface)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __item = default;
            ObjectReferenceValue __parent = default;
            ObjectReferenceValue __baseInterface = default;
            IntPtr __innerInterface = default;
            IntPtr __retval = default;
            try
            {
                __item = MarshalInspectable<object>.CreateMarshaler2(item);
                __parent = global::ABI.Microsoft.UI.Xaml.Automation.Peers.TreeViewListAutomationPeer.CreateMarshaler2(parent);
                __baseInterface = MarshalInspectable<object>.CreateMarshaler2(baseInterface);
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, IntPtr, IntPtr, IntPtr*, IntPtr*, int>**)ThisPtr)[6](ThisPtr, MarshalInspectable<object>.GetAbi(__item), MarshalInspectable<object>.GetAbi(__parent), MarshalInspectable<object>.GetAbi(__baseInterface), &__innerInterface, &__retval));
                global::System.GC.KeepAlive(_obj);
                innerInterface = MarshalInspectable<object>.FromAbi(__innerInterface);
                return global::ABI.Microsoft.UI.Xaml.Automation.Peers.TreeViewItemDataAutomationPeer.FromAbi(__retval);
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__item);
                MarshalInspectable<object>.DisposeMarshaler(__parent);
                MarshalInspectable<object>.DisposeMarshaler(__baseInterface);
                MarshalInspectable<object>.DisposeAbi(__innerInterface);
                global::ABI.Microsoft.UI.Xaml.Automation.Peers.TreeViewItemDataAutomationPeer.DisposeAbi(__retval);
            }
        }


        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0x59, 0x8E, 0xFC, 0x7, 0xA2, 0x55, 0xAB, 0x58, 0x89, 0x21, 0x91, 0xE5, 0x7D, 0xDF, 0x11, 0x9F };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("07FC8E59-55A2-58AB-8921-91E57DDF119F")]
    internal interface ITreeViewItemDataAutomationPeerFactory : global::Microsoft.UI.Xaml.Automation.Peers.ITreeViewItemDataAutomationPeerFactory
    {
    }
    internal static class ITreeViewListAutomationPeerMethods
    {



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0x7F, 0xF, 0xBF, 0x1E, 0x11, 0x61, 0xA5, 0x50, 0x83, 0x98, 0x89, 0xC4, 0xFD, 0xD0, 0xDE, 0xDB };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("1EBF0F7F-6111-50A5-8398-89C4FDD0DEDB")]
    internal interface ITreeViewListAutomationPeer : global::Microsoft.UI.Xaml.Automation.Peers.ITreeViewListAutomationPeer
    {
    }
    internal static class ITreeViewListAutomationPeerFactoryMethods
    {


        internal static unsafe global::Microsoft.UI.Xaml.Automation.Peers.TreeViewListAutomationPeer CreateInstanceWithOwner(IObjectReference _obj, global::Microsoft.UI.Xaml.Controls.TreeViewList owner, object baseInterface, out object innerInterface)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __owner = default;
            ObjectReferenceValue __baseInterface = default;
            IntPtr __innerInterface = default;
            IntPtr __retval = default;
            try
            {
                __owner = global::ABI.Microsoft.UI.Xaml.Controls.TreeViewList.CreateMarshaler2(owner);
                __baseInterface = MarshalInspectable<object>.CreateMarshaler2(baseInterface);
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, IntPtr, IntPtr*, IntPtr*, int>**)ThisPtr)[6](ThisPtr, MarshalInspectable<object>.GetAbi(__owner), MarshalInspectable<object>.GetAbi(__baseInterface), &__innerInterface, &__retval));
                global::System.GC.KeepAlive(_obj);
                innerInterface = MarshalInspectable<object>.FromAbi(__innerInterface);
                return global::ABI.Microsoft.UI.Xaml.Automation.Peers.TreeViewListAutomationPeer.FromAbi(__retval);
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__owner);
                MarshalInspectable<object>.DisposeMarshaler(__baseInterface);
                MarshalInspectable<object>.DisposeAbi(__innerInterface);
                global::ABI.Microsoft.UI.Xaml.Automation.Peers.TreeViewListAutomationPeer.DisposeAbi(__retval);
            }
        }


        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0x86, 0x2D, 0x33, 0x51, 0x14, 0xC4, 0x7D, 0x5E, 0xB5, 0x7B, 0xE4, 0x79, 0x98, 0x3C, 0x9E, 0x5D };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("51332D86-C414-5E7D-B57B-E479983C9E5D")]
    internal interface ITreeViewListAutomationPeerFactory : global::Microsoft.UI.Xaml.Automation.Peers.ITreeViewListAutomationPeerFactory
    {
    }
    internal static class IWebView2AutomationPeerMethods
    {



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0xCA, 0x6E, 0x55, 0x8E, 0x0, 0xB0, 0x51, 0x5E, 0x81, 0xF, 0x7B, 0x7D, 0x80, 0xC3, 0x9D, 0x56 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("8E556ECA-B000-5E51-810F-7B7D80C39D56")]
    internal interface IWebView2AutomationPeer : global::Microsoft.UI.Xaml.Automation.Peers.IWebView2AutomationPeer
    {
    }
    internal static class IWebView2AutomationPeerFactoryMethods
    {


        internal static unsafe global::Microsoft.UI.Xaml.Automation.Peers.WebView2AutomationPeer CreateInstance(IObjectReference _obj, global::Microsoft.UI.Xaml.Controls.WebView2 owner, object baseInterface, out object innerInterface)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __owner = default;
            ObjectReferenceValue __baseInterface = default;
            IntPtr __innerInterface = default;
            IntPtr __retval = default;
            try
            {
                __owner = global::ABI.Microsoft.UI.Xaml.Controls.WebView2.CreateMarshaler2(owner);
                __baseInterface = MarshalInspectable<object>.CreateMarshaler2(baseInterface);
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, IntPtr, IntPtr*, IntPtr*, int>**)ThisPtr)[6](ThisPtr, MarshalInspectable<object>.GetAbi(__owner), MarshalInspectable<object>.GetAbi(__baseInterface), &__innerInterface, &__retval));
                global::System.GC.KeepAlive(_obj);
                innerInterface = MarshalInspectable<object>.FromAbi(__innerInterface);
                return global::ABI.Microsoft.UI.Xaml.Automation.Peers.WebView2AutomationPeer.FromAbi(__retval);
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__owner);
                MarshalInspectable<object>.DisposeMarshaler(__baseInterface);
                MarshalInspectable<object>.DisposeAbi(__innerInterface);
                global::ABI.Microsoft.UI.Xaml.Automation.Peers.WebView2AutomationPeer.DisposeAbi(__retval);
            }
        }


        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0x10, 0x22, 0x51, 0x68, 0x1E, 0xE6, 0x56, 0x5B, 0xA6, 0xAF, 0xC4, 0xFB, 0x14, 0x67, 0x71, 0x55 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("68512210-E61E-5B56-A6AF-C4FB14677155")]
    internal interface IWebView2AutomationPeerFactory : global::Microsoft.UI.Xaml.Automation.Peers.IWebView2AutomationPeerFactory
    {
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    public struct ImageAutomationPeer
    {

        public static IObjectReference CreateMarshaler(global::Microsoft.UI.Xaml.Automation.Peers.ImageAutomationPeer obj) => obj is null ? null : MarshalInspectable<global::Microsoft.UI.Xaml.Automation.Peers.ImageAutomationPeer>.CreateMarshaler<IUnknownVftbl>(obj, global::ABI.Microsoft.UI.Xaml.Automation.Peers.IImageAutomationPeerMethods.IID);
        public static ObjectReferenceValue CreateMarshaler2(global::Microsoft.UI.Xaml.Automation.Peers.ImageAutomationPeer obj) => MarshalInspectable<object>.CreateMarshaler2(obj, global::ABI.Microsoft.UI.Xaml.Automation.Peers.IImageAutomationPeerMethods.IID);
        public static IntPtr GetAbi(IObjectReference value) => value is null ? IntPtr.Zero : MarshalInterfaceHelper<object>.GetAbi(value);
        public static global::Microsoft.UI.Xaml.Automation.Peers.ImageAutomationPeer FromAbi(IntPtr thisPtr) => global::Microsoft.UI.Xaml.Automation.Peers.ImageAutomationPeer.FromAbi(thisPtr);
        public static IntPtr FromManaged(global::Microsoft.UI.Xaml.Automation.Peers.ImageAutomationPeer obj) => obj is null ? IntPtr.Zero : CreateMarshaler2(obj).Detach();
        public static unsafe MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.ImageAutomationPeer>.MarshalerArray CreateMarshalerArray(global::Microsoft.UI.Xaml.Automation.Peers.ImageAutomationPeer[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.ImageAutomationPeer>.CreateMarshalerArray2(array, (o) => CreateMarshaler2(o));
        public static (int length, IntPtr data) GetAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.ImageAutomationPeer>.GetAbiArray(box);
        public static unsafe global::Microsoft.UI.Xaml.Automation.Peers.ImageAutomationPeer[] FromAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.ImageAutomationPeer>.FromAbiArray(box, FromAbi);
        public static void CopyAbiArray(global::Microsoft.UI.Xaml.Automation.Peers.ImageAutomationPeer[] array, object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.ImageAutomationPeer>.CopyAbiArray(array, box, FromAbi);
        public static (int length, IntPtr data) FromManagedArray(global::Microsoft.UI.Xaml.Automation.Peers.ImageAutomationPeer[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.ImageAutomationPeer>.FromManagedArray(array, (o) => FromManaged(o));
        public static void DisposeMarshaler(IObjectReference value) => MarshalInspectable<object>.DisposeMarshaler(value);
        public static void DisposeMarshalerArray(MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.ImageAutomationPeer>.MarshalerArray array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.ImageAutomationPeer>.DisposeMarshalerArray(array);
        public static void DisposeAbi(IntPtr abi) => MarshalInspectable<object>.DisposeAbi(abi);
        public static unsafe void DisposeAbiArray(object box) => MarshalInspectable<object>.DisposeAbiArray(box);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    internal sealed class ImageAutomationPeerRcwFactoryAttribute : global::WinRT.WinRTImplementationTypeRcwFactoryAttribute
    {
        public override object CreateInstance(global::WinRT.IInspectable inspectable)
            => new global::Microsoft.UI.Xaml.Automation.Peers.ImageAutomationPeer(inspectable.ObjRef);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    public struct InfoBarAutomationPeer
    {

        public static IObjectReference CreateMarshaler(global::Microsoft.UI.Xaml.Automation.Peers.InfoBarAutomationPeer obj) => obj is null ? null : MarshalInspectable<global::Microsoft.UI.Xaml.Automation.Peers.InfoBarAutomationPeer>.CreateMarshaler<IUnknownVftbl>(obj, global::ABI.Microsoft.UI.Xaml.Automation.Peers.IInfoBarAutomationPeerMethods.IID);
        public static ObjectReferenceValue CreateMarshaler2(global::Microsoft.UI.Xaml.Automation.Peers.InfoBarAutomationPeer obj) => MarshalInspectable<object>.CreateMarshaler2(obj, global::ABI.Microsoft.UI.Xaml.Automation.Peers.IInfoBarAutomationPeerMethods.IID);
        public static IntPtr GetAbi(IObjectReference value) => value is null ? IntPtr.Zero : MarshalInterfaceHelper<object>.GetAbi(value);
        public static global::Microsoft.UI.Xaml.Automation.Peers.InfoBarAutomationPeer FromAbi(IntPtr thisPtr) => global::Microsoft.UI.Xaml.Automation.Peers.InfoBarAutomationPeer.FromAbi(thisPtr);
        public static IntPtr FromManaged(global::Microsoft.UI.Xaml.Automation.Peers.InfoBarAutomationPeer obj) => obj is null ? IntPtr.Zero : CreateMarshaler2(obj).Detach();
        public static unsafe MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.InfoBarAutomationPeer>.MarshalerArray CreateMarshalerArray(global::Microsoft.UI.Xaml.Automation.Peers.InfoBarAutomationPeer[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.InfoBarAutomationPeer>.CreateMarshalerArray2(array, (o) => CreateMarshaler2(o));
        public static (int length, IntPtr data) GetAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.InfoBarAutomationPeer>.GetAbiArray(box);
        public static unsafe global::Microsoft.UI.Xaml.Automation.Peers.InfoBarAutomationPeer[] FromAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.InfoBarAutomationPeer>.FromAbiArray(box, FromAbi);
        public static void CopyAbiArray(global::Microsoft.UI.Xaml.Automation.Peers.InfoBarAutomationPeer[] array, object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.InfoBarAutomationPeer>.CopyAbiArray(array, box, FromAbi);
        public static (int length, IntPtr data) FromManagedArray(global::Microsoft.UI.Xaml.Automation.Peers.InfoBarAutomationPeer[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.InfoBarAutomationPeer>.FromManagedArray(array, (o) => FromManaged(o));
        public static void DisposeMarshaler(IObjectReference value) => MarshalInspectable<object>.DisposeMarshaler(value);
        public static void DisposeMarshalerArray(MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.InfoBarAutomationPeer>.MarshalerArray array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.InfoBarAutomationPeer>.DisposeMarshalerArray(array);
        public static void DisposeAbi(IntPtr abi) => MarshalInspectable<object>.DisposeAbi(abi);
        public static unsafe void DisposeAbiArray(object box) => MarshalInspectable<object>.DisposeAbiArray(box);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    internal sealed class InfoBarAutomationPeerRcwFactoryAttribute : global::WinRT.WinRTImplementationTypeRcwFactoryAttribute
    {
        public override object CreateInstance(global::WinRT.IInspectable inspectable)
            => new global::Microsoft.UI.Xaml.Automation.Peers.InfoBarAutomationPeer(inspectable.ObjRef);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    public struct ItemAutomationPeer
    {

        public static IObjectReference CreateMarshaler(global::Microsoft.UI.Xaml.Automation.Peers.ItemAutomationPeer obj) => obj is null ? null : MarshalInspectable<global::Microsoft.UI.Xaml.Automation.Peers.ItemAutomationPeer>.CreateMarshaler<IUnknownVftbl>(obj, global::ABI.Microsoft.UI.Xaml.Automation.Peers.IItemAutomationPeerMethods.IID);
        public static ObjectReferenceValue CreateMarshaler2(global::Microsoft.UI.Xaml.Automation.Peers.ItemAutomationPeer obj) => MarshalInspectable<object>.CreateMarshaler2(obj, global::ABI.Microsoft.UI.Xaml.Automation.Peers.IItemAutomationPeerMethods.IID);
        public static IntPtr GetAbi(IObjectReference value) => value is null ? IntPtr.Zero : MarshalInterfaceHelper<object>.GetAbi(value);
        public static global::Microsoft.UI.Xaml.Automation.Peers.ItemAutomationPeer FromAbi(IntPtr thisPtr) => global::Microsoft.UI.Xaml.Automation.Peers.ItemAutomationPeer.FromAbi(thisPtr);
        public static IntPtr FromManaged(global::Microsoft.UI.Xaml.Automation.Peers.ItemAutomationPeer obj) => obj is null ? IntPtr.Zero : CreateMarshaler2(obj).Detach();
        public static unsafe MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.ItemAutomationPeer>.MarshalerArray CreateMarshalerArray(global::Microsoft.UI.Xaml.Automation.Peers.ItemAutomationPeer[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.ItemAutomationPeer>.CreateMarshalerArray2(array, (o) => CreateMarshaler2(o));
        public static (int length, IntPtr data) GetAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.ItemAutomationPeer>.GetAbiArray(box);
        public static unsafe global::Microsoft.UI.Xaml.Automation.Peers.ItemAutomationPeer[] FromAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.ItemAutomationPeer>.FromAbiArray(box, FromAbi);
        public static void CopyAbiArray(global::Microsoft.UI.Xaml.Automation.Peers.ItemAutomationPeer[] array, object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.ItemAutomationPeer>.CopyAbiArray(array, box, FromAbi);
        public static (int length, IntPtr data) FromManagedArray(global::Microsoft.UI.Xaml.Automation.Peers.ItemAutomationPeer[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.ItemAutomationPeer>.FromManagedArray(array, (o) => FromManaged(o));
        public static void DisposeMarshaler(IObjectReference value) => MarshalInspectable<object>.DisposeMarshaler(value);
        public static void DisposeMarshalerArray(MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.ItemAutomationPeer>.MarshalerArray array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.ItemAutomationPeer>.DisposeMarshalerArray(array);
        public static void DisposeAbi(IntPtr abi) => MarshalInspectable<object>.DisposeAbi(abi);
        public static unsafe void DisposeAbiArray(object box) => MarshalInspectable<object>.DisposeAbiArray(box);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    internal sealed class ItemAutomationPeerRcwFactoryAttribute : global::WinRT.WinRTImplementationTypeRcwFactoryAttribute
    {
        public override object CreateInstance(global::WinRT.IInspectable inspectable)
            => new global::Microsoft.UI.Xaml.Automation.Peers.ItemAutomationPeer(inspectable.ObjRef);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    public struct ItemContainerAutomationPeer
    {

        public static IObjectReference CreateMarshaler(global::Microsoft.UI.Xaml.Automation.Peers.ItemContainerAutomationPeer obj) => obj is null ? null : MarshalInspectable<global::Microsoft.UI.Xaml.Automation.Peers.ItemContainerAutomationPeer>.CreateMarshaler<IUnknownVftbl>(obj, global::ABI.Microsoft.UI.Xaml.Automation.Peers.IItemContainerAutomationPeerMethods.IID);
        public static ObjectReferenceValue CreateMarshaler2(global::Microsoft.UI.Xaml.Automation.Peers.ItemContainerAutomationPeer obj) => MarshalInspectable<object>.CreateMarshaler2(obj, global::ABI.Microsoft.UI.Xaml.Automation.Peers.IItemContainerAutomationPeerMethods.IID);
        public static IntPtr GetAbi(IObjectReference value) => value is null ? IntPtr.Zero : MarshalInterfaceHelper<object>.GetAbi(value);
        public static global::Microsoft.UI.Xaml.Automation.Peers.ItemContainerAutomationPeer FromAbi(IntPtr thisPtr) => global::Microsoft.UI.Xaml.Automation.Peers.ItemContainerAutomationPeer.FromAbi(thisPtr);
        public static IntPtr FromManaged(global::Microsoft.UI.Xaml.Automation.Peers.ItemContainerAutomationPeer obj) => obj is null ? IntPtr.Zero : CreateMarshaler2(obj).Detach();
        public static unsafe MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.ItemContainerAutomationPeer>.MarshalerArray CreateMarshalerArray(global::Microsoft.UI.Xaml.Automation.Peers.ItemContainerAutomationPeer[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.ItemContainerAutomationPeer>.CreateMarshalerArray2(array, (o) => CreateMarshaler2(o));
        public static (int length, IntPtr data) GetAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.ItemContainerAutomationPeer>.GetAbiArray(box);
        public static unsafe global::Microsoft.UI.Xaml.Automation.Peers.ItemContainerAutomationPeer[] FromAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.ItemContainerAutomationPeer>.FromAbiArray(box, FromAbi);
        public static void CopyAbiArray(global::Microsoft.UI.Xaml.Automation.Peers.ItemContainerAutomationPeer[] array, object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.ItemContainerAutomationPeer>.CopyAbiArray(array, box, FromAbi);
        public static (int length, IntPtr data) FromManagedArray(global::Microsoft.UI.Xaml.Automation.Peers.ItemContainerAutomationPeer[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.ItemContainerAutomationPeer>.FromManagedArray(array, (o) => FromManaged(o));
        public static void DisposeMarshaler(IObjectReference value) => MarshalInspectable<object>.DisposeMarshaler(value);
        public static void DisposeMarshalerArray(MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.ItemContainerAutomationPeer>.MarshalerArray array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.ItemContainerAutomationPeer>.DisposeMarshalerArray(array);
        public static void DisposeAbi(IntPtr abi) => MarshalInspectable<object>.DisposeAbi(abi);
        public static unsafe void DisposeAbiArray(object box) => MarshalInspectable<object>.DisposeAbiArray(box);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    internal sealed class ItemContainerAutomationPeerRcwFactoryAttribute : global::WinRT.WinRTImplementationTypeRcwFactoryAttribute
    {
        public override object CreateInstance(global::WinRT.IInspectable inspectable)
            => new global::Microsoft.UI.Xaml.Automation.Peers.ItemContainerAutomationPeer(inspectable.ObjRef);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    public struct ItemsControlAutomationPeer
    {

        public static IObjectReference CreateMarshaler(global::Microsoft.UI.Xaml.Automation.Peers.ItemsControlAutomationPeer obj) => obj is null ? null : MarshalInspectable<global::Microsoft.UI.Xaml.Automation.Peers.ItemsControlAutomationPeer>.CreateMarshaler<IUnknownVftbl>(obj, global::ABI.Microsoft.UI.Xaml.Automation.Peers.IItemsControlAutomationPeerMethods.IID);
        public static ObjectReferenceValue CreateMarshaler2(global::Microsoft.UI.Xaml.Automation.Peers.ItemsControlAutomationPeer obj) => MarshalInspectable<object>.CreateMarshaler2(obj, global::ABI.Microsoft.UI.Xaml.Automation.Peers.IItemsControlAutomationPeerMethods.IID);
        public static IntPtr GetAbi(IObjectReference value) => value is null ? IntPtr.Zero : MarshalInterfaceHelper<object>.GetAbi(value);
        public static global::Microsoft.UI.Xaml.Automation.Peers.ItemsControlAutomationPeer FromAbi(IntPtr thisPtr) => global::Microsoft.UI.Xaml.Automation.Peers.ItemsControlAutomationPeer.FromAbi(thisPtr);
        public static IntPtr FromManaged(global::Microsoft.UI.Xaml.Automation.Peers.ItemsControlAutomationPeer obj) => obj is null ? IntPtr.Zero : CreateMarshaler2(obj).Detach();
        public static unsafe MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.ItemsControlAutomationPeer>.MarshalerArray CreateMarshalerArray(global::Microsoft.UI.Xaml.Automation.Peers.ItemsControlAutomationPeer[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.ItemsControlAutomationPeer>.CreateMarshalerArray2(array, (o) => CreateMarshaler2(o));
        public static (int length, IntPtr data) GetAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.ItemsControlAutomationPeer>.GetAbiArray(box);
        public static unsafe global::Microsoft.UI.Xaml.Automation.Peers.ItemsControlAutomationPeer[] FromAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.ItemsControlAutomationPeer>.FromAbiArray(box, FromAbi);
        public static void CopyAbiArray(global::Microsoft.UI.Xaml.Automation.Peers.ItemsControlAutomationPeer[] array, object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.ItemsControlAutomationPeer>.CopyAbiArray(array, box, FromAbi);
        public static (int length, IntPtr data) FromManagedArray(global::Microsoft.UI.Xaml.Automation.Peers.ItemsControlAutomationPeer[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.ItemsControlAutomationPeer>.FromManagedArray(array, (o) => FromManaged(o));
        public static void DisposeMarshaler(IObjectReference value) => MarshalInspectable<object>.DisposeMarshaler(value);
        public static void DisposeMarshalerArray(MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.ItemsControlAutomationPeer>.MarshalerArray array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.ItemsControlAutomationPeer>.DisposeMarshalerArray(array);
        public static void DisposeAbi(IntPtr abi) => MarshalInspectable<object>.DisposeAbi(abi);
        public static unsafe void DisposeAbiArray(object box) => MarshalInspectable<object>.DisposeAbiArray(box);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    internal sealed class ItemsControlAutomationPeerRcwFactoryAttribute : global::WinRT.WinRTImplementationTypeRcwFactoryAttribute
    {
        public override object CreateInstance(global::WinRT.IInspectable inspectable)
            => new global::Microsoft.UI.Xaml.Automation.Peers.ItemsControlAutomationPeer(inspectable.ObjRef);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    public struct ItemsViewAutomationPeer
    {

        public static IObjectReference CreateMarshaler(global::Microsoft.UI.Xaml.Automation.Peers.ItemsViewAutomationPeer obj) => obj is null ? null : MarshalInspectable<global::Microsoft.UI.Xaml.Automation.Peers.ItemsViewAutomationPeer>.CreateMarshaler<IUnknownVftbl>(obj, global::ABI.Microsoft.UI.Xaml.Automation.Peers.IItemsViewAutomationPeerMethods.IID);
        public static ObjectReferenceValue CreateMarshaler2(global::Microsoft.UI.Xaml.Automation.Peers.ItemsViewAutomationPeer obj) => MarshalInspectable<object>.CreateMarshaler2(obj, global::ABI.Microsoft.UI.Xaml.Automation.Peers.IItemsViewAutomationPeerMethods.IID);
        public static IntPtr GetAbi(IObjectReference value) => value is null ? IntPtr.Zero : MarshalInterfaceHelper<object>.GetAbi(value);
        public static global::Microsoft.UI.Xaml.Automation.Peers.ItemsViewAutomationPeer FromAbi(IntPtr thisPtr) => global::Microsoft.UI.Xaml.Automation.Peers.ItemsViewAutomationPeer.FromAbi(thisPtr);
        public static IntPtr FromManaged(global::Microsoft.UI.Xaml.Automation.Peers.ItemsViewAutomationPeer obj) => obj is null ? IntPtr.Zero : CreateMarshaler2(obj).Detach();
        public static unsafe MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.ItemsViewAutomationPeer>.MarshalerArray CreateMarshalerArray(global::Microsoft.UI.Xaml.Automation.Peers.ItemsViewAutomationPeer[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.ItemsViewAutomationPeer>.CreateMarshalerArray2(array, (o) => CreateMarshaler2(o));
        public static (int length, IntPtr data) GetAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.ItemsViewAutomationPeer>.GetAbiArray(box);
        public static unsafe global::Microsoft.UI.Xaml.Automation.Peers.ItemsViewAutomationPeer[] FromAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.ItemsViewAutomationPeer>.FromAbiArray(box, FromAbi);
        public static void CopyAbiArray(global::Microsoft.UI.Xaml.Automation.Peers.ItemsViewAutomationPeer[] array, object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.ItemsViewAutomationPeer>.CopyAbiArray(array, box, FromAbi);
        public static (int length, IntPtr data) FromManagedArray(global::Microsoft.UI.Xaml.Automation.Peers.ItemsViewAutomationPeer[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.ItemsViewAutomationPeer>.FromManagedArray(array, (o) => FromManaged(o));
        public static void DisposeMarshaler(IObjectReference value) => MarshalInspectable<object>.DisposeMarshaler(value);
        public static void DisposeMarshalerArray(MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.ItemsViewAutomationPeer>.MarshalerArray array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.ItemsViewAutomationPeer>.DisposeMarshalerArray(array);
        public static void DisposeAbi(IntPtr abi) => MarshalInspectable<object>.DisposeAbi(abi);
        public static unsafe void DisposeAbiArray(object box) => MarshalInspectable<object>.DisposeAbiArray(box);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    internal sealed class ItemsViewAutomationPeerRcwFactoryAttribute : global::WinRT.WinRTImplementationTypeRcwFactoryAttribute
    {
        public override object CreateInstance(global::WinRT.IInspectable inspectable)
            => new global::Microsoft.UI.Xaml.Automation.Peers.ItemsViewAutomationPeer(inspectable.ObjRef);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    public struct ListBoxAutomationPeer
    {

        public static IObjectReference CreateMarshaler(global::Microsoft.UI.Xaml.Automation.Peers.ListBoxAutomationPeer obj) => obj is null ? null : MarshalInspectable<global::Microsoft.UI.Xaml.Automation.Peers.ListBoxAutomationPeer>.CreateMarshaler<IUnknownVftbl>(obj, global::ABI.Microsoft.UI.Xaml.Automation.Peers.IListBoxAutomationPeerMethods.IID);
        public static ObjectReferenceValue CreateMarshaler2(global::Microsoft.UI.Xaml.Automation.Peers.ListBoxAutomationPeer obj) => MarshalInspectable<object>.CreateMarshaler2(obj, global::ABI.Microsoft.UI.Xaml.Automation.Peers.IListBoxAutomationPeerMethods.IID);
        public static IntPtr GetAbi(IObjectReference value) => value is null ? IntPtr.Zero : MarshalInterfaceHelper<object>.GetAbi(value);
        public static global::Microsoft.UI.Xaml.Automation.Peers.ListBoxAutomationPeer FromAbi(IntPtr thisPtr) => global::Microsoft.UI.Xaml.Automation.Peers.ListBoxAutomationPeer.FromAbi(thisPtr);
        public static IntPtr FromManaged(global::Microsoft.UI.Xaml.Automation.Peers.ListBoxAutomationPeer obj) => obj is null ? IntPtr.Zero : CreateMarshaler2(obj).Detach();
        public static unsafe MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.ListBoxAutomationPeer>.MarshalerArray CreateMarshalerArray(global::Microsoft.UI.Xaml.Automation.Peers.ListBoxAutomationPeer[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.ListBoxAutomationPeer>.CreateMarshalerArray2(array, (o) => CreateMarshaler2(o));
        public static (int length, IntPtr data) GetAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.ListBoxAutomationPeer>.GetAbiArray(box);
        public static unsafe global::Microsoft.UI.Xaml.Automation.Peers.ListBoxAutomationPeer[] FromAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.ListBoxAutomationPeer>.FromAbiArray(box, FromAbi);
        public static void CopyAbiArray(global::Microsoft.UI.Xaml.Automation.Peers.ListBoxAutomationPeer[] array, object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.ListBoxAutomationPeer>.CopyAbiArray(array, box, FromAbi);
        public static (int length, IntPtr data) FromManagedArray(global::Microsoft.UI.Xaml.Automation.Peers.ListBoxAutomationPeer[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.ListBoxAutomationPeer>.FromManagedArray(array, (o) => FromManaged(o));
        public static void DisposeMarshaler(IObjectReference value) => MarshalInspectable<object>.DisposeMarshaler(value);
        public static void DisposeMarshalerArray(MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.ListBoxAutomationPeer>.MarshalerArray array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.ListBoxAutomationPeer>.DisposeMarshalerArray(array);
        public static void DisposeAbi(IntPtr abi) => MarshalInspectable<object>.DisposeAbi(abi);
        public static unsafe void DisposeAbiArray(object box) => MarshalInspectable<object>.DisposeAbiArray(box);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    internal sealed class ListBoxAutomationPeerRcwFactoryAttribute : global::WinRT.WinRTImplementationTypeRcwFactoryAttribute
    {
        public override object CreateInstance(global::WinRT.IInspectable inspectable)
            => new global::Microsoft.UI.Xaml.Automation.Peers.ListBoxAutomationPeer(inspectable.ObjRef);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    public struct ListBoxItemAutomationPeer
    {

        public static IObjectReference CreateMarshaler(global::Microsoft.UI.Xaml.Automation.Peers.ListBoxItemAutomationPeer obj) => obj is null ? null : MarshalInspectable<global::Microsoft.UI.Xaml.Automation.Peers.ListBoxItemAutomationPeer>.CreateMarshaler<IUnknownVftbl>(obj, global::ABI.Microsoft.UI.Xaml.Automation.Peers.IListBoxItemAutomationPeerMethods.IID);
        public static ObjectReferenceValue CreateMarshaler2(global::Microsoft.UI.Xaml.Automation.Peers.ListBoxItemAutomationPeer obj) => MarshalInspectable<object>.CreateMarshaler2(obj, global::ABI.Microsoft.UI.Xaml.Automation.Peers.IListBoxItemAutomationPeerMethods.IID);
        public static IntPtr GetAbi(IObjectReference value) => value is null ? IntPtr.Zero : MarshalInterfaceHelper<object>.GetAbi(value);
        public static global::Microsoft.UI.Xaml.Automation.Peers.ListBoxItemAutomationPeer FromAbi(IntPtr thisPtr) => global::Microsoft.UI.Xaml.Automation.Peers.ListBoxItemAutomationPeer.FromAbi(thisPtr);
        public static IntPtr FromManaged(global::Microsoft.UI.Xaml.Automation.Peers.ListBoxItemAutomationPeer obj) => obj is null ? IntPtr.Zero : CreateMarshaler2(obj).Detach();
        public static unsafe MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.ListBoxItemAutomationPeer>.MarshalerArray CreateMarshalerArray(global::Microsoft.UI.Xaml.Automation.Peers.ListBoxItemAutomationPeer[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.ListBoxItemAutomationPeer>.CreateMarshalerArray2(array, (o) => CreateMarshaler2(o));
        public static (int length, IntPtr data) GetAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.ListBoxItemAutomationPeer>.GetAbiArray(box);
        public static unsafe global::Microsoft.UI.Xaml.Automation.Peers.ListBoxItemAutomationPeer[] FromAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.ListBoxItemAutomationPeer>.FromAbiArray(box, FromAbi);
        public static void CopyAbiArray(global::Microsoft.UI.Xaml.Automation.Peers.ListBoxItemAutomationPeer[] array, object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.ListBoxItemAutomationPeer>.CopyAbiArray(array, box, FromAbi);
        public static (int length, IntPtr data) FromManagedArray(global::Microsoft.UI.Xaml.Automation.Peers.ListBoxItemAutomationPeer[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.ListBoxItemAutomationPeer>.FromManagedArray(array, (o) => FromManaged(o));
        public static void DisposeMarshaler(IObjectReference value) => MarshalInspectable<object>.DisposeMarshaler(value);
        public static void DisposeMarshalerArray(MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.ListBoxItemAutomationPeer>.MarshalerArray array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.ListBoxItemAutomationPeer>.DisposeMarshalerArray(array);
        public static void DisposeAbi(IntPtr abi) => MarshalInspectable<object>.DisposeAbi(abi);
        public static unsafe void DisposeAbiArray(object box) => MarshalInspectable<object>.DisposeAbiArray(box);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    internal sealed class ListBoxItemAutomationPeerRcwFactoryAttribute : global::WinRT.WinRTImplementationTypeRcwFactoryAttribute
    {
        public override object CreateInstance(global::WinRT.IInspectable inspectable)
            => new global::Microsoft.UI.Xaml.Automation.Peers.ListBoxItemAutomationPeer(inspectable.ObjRef);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    public struct ListBoxItemDataAutomationPeer
    {

        public static IObjectReference CreateMarshaler(global::Microsoft.UI.Xaml.Automation.Peers.ListBoxItemDataAutomationPeer obj) => obj is null ? null : MarshalInspectable<global::Microsoft.UI.Xaml.Automation.Peers.ListBoxItemDataAutomationPeer>.CreateMarshaler<IUnknownVftbl>(obj, global::ABI.Microsoft.UI.Xaml.Automation.Peers.IListBoxItemDataAutomationPeerMethods.IID);
        public static ObjectReferenceValue CreateMarshaler2(global::Microsoft.UI.Xaml.Automation.Peers.ListBoxItemDataAutomationPeer obj) => MarshalInspectable<object>.CreateMarshaler2(obj, global::ABI.Microsoft.UI.Xaml.Automation.Peers.IListBoxItemDataAutomationPeerMethods.IID);
        public static IntPtr GetAbi(IObjectReference value) => value is null ? IntPtr.Zero : MarshalInterfaceHelper<object>.GetAbi(value);
        public static global::Microsoft.UI.Xaml.Automation.Peers.ListBoxItemDataAutomationPeer FromAbi(IntPtr thisPtr) => global::Microsoft.UI.Xaml.Automation.Peers.ListBoxItemDataAutomationPeer.FromAbi(thisPtr);
        public static IntPtr FromManaged(global::Microsoft.UI.Xaml.Automation.Peers.ListBoxItemDataAutomationPeer obj) => obj is null ? IntPtr.Zero : CreateMarshaler2(obj).Detach();
        public static unsafe MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.ListBoxItemDataAutomationPeer>.MarshalerArray CreateMarshalerArray(global::Microsoft.UI.Xaml.Automation.Peers.ListBoxItemDataAutomationPeer[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.ListBoxItemDataAutomationPeer>.CreateMarshalerArray2(array, (o) => CreateMarshaler2(o));
        public static (int length, IntPtr data) GetAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.ListBoxItemDataAutomationPeer>.GetAbiArray(box);
        public static unsafe global::Microsoft.UI.Xaml.Automation.Peers.ListBoxItemDataAutomationPeer[] FromAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.ListBoxItemDataAutomationPeer>.FromAbiArray(box, FromAbi);
        public static void CopyAbiArray(global::Microsoft.UI.Xaml.Automation.Peers.ListBoxItemDataAutomationPeer[] array, object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.ListBoxItemDataAutomationPeer>.CopyAbiArray(array, box, FromAbi);
        public static (int length, IntPtr data) FromManagedArray(global::Microsoft.UI.Xaml.Automation.Peers.ListBoxItemDataAutomationPeer[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.ListBoxItemDataAutomationPeer>.FromManagedArray(array, (o) => FromManaged(o));
        public static void DisposeMarshaler(IObjectReference value) => MarshalInspectable<object>.DisposeMarshaler(value);
        public static void DisposeMarshalerArray(MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.ListBoxItemDataAutomationPeer>.MarshalerArray array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.ListBoxItemDataAutomationPeer>.DisposeMarshalerArray(array);
        public static void DisposeAbi(IntPtr abi) => MarshalInspectable<object>.DisposeAbi(abi);
        public static unsafe void DisposeAbiArray(object box) => MarshalInspectable<object>.DisposeAbiArray(box);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    internal sealed class ListBoxItemDataAutomationPeerRcwFactoryAttribute : global::WinRT.WinRTImplementationTypeRcwFactoryAttribute
    {
        public override object CreateInstance(global::WinRT.IInspectable inspectable)
            => new global::Microsoft.UI.Xaml.Automation.Peers.ListBoxItemDataAutomationPeer(inspectable.ObjRef);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    public struct ListPickerFlyoutPresenterAutomationPeer
    {

        public static IObjectReference CreateMarshaler(global::Microsoft.UI.Xaml.Automation.Peers.ListPickerFlyoutPresenterAutomationPeer obj) => obj is null ? null : MarshalInspectable<global::Microsoft.UI.Xaml.Automation.Peers.ListPickerFlyoutPresenterAutomationPeer>.CreateMarshaler<IUnknownVftbl>(obj, global::ABI.Microsoft.UI.Xaml.Automation.Peers.IListPickerFlyoutPresenterAutomationPeerMethods.IID);
        public static ObjectReferenceValue CreateMarshaler2(global::Microsoft.UI.Xaml.Automation.Peers.ListPickerFlyoutPresenterAutomationPeer obj) => MarshalInspectable<object>.CreateMarshaler2(obj, global::ABI.Microsoft.UI.Xaml.Automation.Peers.IListPickerFlyoutPresenterAutomationPeerMethods.IID);
        public static IntPtr GetAbi(IObjectReference value) => value is null ? IntPtr.Zero : MarshalInterfaceHelper<object>.GetAbi(value);
        public static global::Microsoft.UI.Xaml.Automation.Peers.ListPickerFlyoutPresenterAutomationPeer FromAbi(IntPtr thisPtr) => global::Microsoft.UI.Xaml.Automation.Peers.ListPickerFlyoutPresenterAutomationPeer.FromAbi(thisPtr);
        public static IntPtr FromManaged(global::Microsoft.UI.Xaml.Automation.Peers.ListPickerFlyoutPresenterAutomationPeer obj) => obj is null ? IntPtr.Zero : CreateMarshaler2(obj).Detach();
        public static unsafe MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.ListPickerFlyoutPresenterAutomationPeer>.MarshalerArray CreateMarshalerArray(global::Microsoft.UI.Xaml.Automation.Peers.ListPickerFlyoutPresenterAutomationPeer[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.ListPickerFlyoutPresenterAutomationPeer>.CreateMarshalerArray2(array, (o) => CreateMarshaler2(o));
        public static (int length, IntPtr data) GetAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.ListPickerFlyoutPresenterAutomationPeer>.GetAbiArray(box);
        public static unsafe global::Microsoft.UI.Xaml.Automation.Peers.ListPickerFlyoutPresenterAutomationPeer[] FromAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.ListPickerFlyoutPresenterAutomationPeer>.FromAbiArray(box, FromAbi);
        public static void CopyAbiArray(global::Microsoft.UI.Xaml.Automation.Peers.ListPickerFlyoutPresenterAutomationPeer[] array, object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.ListPickerFlyoutPresenterAutomationPeer>.CopyAbiArray(array, box, FromAbi);
        public static (int length, IntPtr data) FromManagedArray(global::Microsoft.UI.Xaml.Automation.Peers.ListPickerFlyoutPresenterAutomationPeer[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.ListPickerFlyoutPresenterAutomationPeer>.FromManagedArray(array, (o) => FromManaged(o));
        public static void DisposeMarshaler(IObjectReference value) => MarshalInspectable<object>.DisposeMarshaler(value);
        public static void DisposeMarshalerArray(MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.ListPickerFlyoutPresenterAutomationPeer>.MarshalerArray array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.ListPickerFlyoutPresenterAutomationPeer>.DisposeMarshalerArray(array);
        public static void DisposeAbi(IntPtr abi) => MarshalInspectable<object>.DisposeAbi(abi);
        public static unsafe void DisposeAbiArray(object box) => MarshalInspectable<object>.DisposeAbiArray(box);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    internal sealed class ListPickerFlyoutPresenterAutomationPeerRcwFactoryAttribute : global::WinRT.WinRTImplementationTypeRcwFactoryAttribute
    {
        public override object CreateInstance(global::WinRT.IInspectable inspectable)
            => new global::Microsoft.UI.Xaml.Automation.Peers.ListPickerFlyoutPresenterAutomationPeer(inspectable.ObjRef);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    public struct ListViewAutomationPeer
    {

        public static IObjectReference CreateMarshaler(global::Microsoft.UI.Xaml.Automation.Peers.ListViewAutomationPeer obj) => obj is null ? null : MarshalInspectable<global::Microsoft.UI.Xaml.Automation.Peers.ListViewAutomationPeer>.CreateMarshaler<IUnknownVftbl>(obj, global::ABI.Microsoft.UI.Xaml.Automation.Peers.IListViewAutomationPeerMethods.IID);
        public static ObjectReferenceValue CreateMarshaler2(global::Microsoft.UI.Xaml.Automation.Peers.ListViewAutomationPeer obj) => MarshalInspectable<object>.CreateMarshaler2(obj, global::ABI.Microsoft.UI.Xaml.Automation.Peers.IListViewAutomationPeerMethods.IID);
        public static IntPtr GetAbi(IObjectReference value) => value is null ? IntPtr.Zero : MarshalInterfaceHelper<object>.GetAbi(value);
        public static global::Microsoft.UI.Xaml.Automation.Peers.ListViewAutomationPeer FromAbi(IntPtr thisPtr) => global::Microsoft.UI.Xaml.Automation.Peers.ListViewAutomationPeer.FromAbi(thisPtr);
        public static IntPtr FromManaged(global::Microsoft.UI.Xaml.Automation.Peers.ListViewAutomationPeer obj) => obj is null ? IntPtr.Zero : CreateMarshaler2(obj).Detach();
        public static unsafe MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.ListViewAutomationPeer>.MarshalerArray CreateMarshalerArray(global::Microsoft.UI.Xaml.Automation.Peers.ListViewAutomationPeer[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.ListViewAutomationPeer>.CreateMarshalerArray2(array, (o) => CreateMarshaler2(o));
        public static (int length, IntPtr data) GetAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.ListViewAutomationPeer>.GetAbiArray(box);
        public static unsafe global::Microsoft.UI.Xaml.Automation.Peers.ListViewAutomationPeer[] FromAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.ListViewAutomationPeer>.FromAbiArray(box, FromAbi);
        public static void CopyAbiArray(global::Microsoft.UI.Xaml.Automation.Peers.ListViewAutomationPeer[] array, object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.ListViewAutomationPeer>.CopyAbiArray(array, box, FromAbi);
        public static (int length, IntPtr data) FromManagedArray(global::Microsoft.UI.Xaml.Automation.Peers.ListViewAutomationPeer[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.ListViewAutomationPeer>.FromManagedArray(array, (o) => FromManaged(o));
        public static void DisposeMarshaler(IObjectReference value) => MarshalInspectable<object>.DisposeMarshaler(value);
        public static void DisposeMarshalerArray(MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.ListViewAutomationPeer>.MarshalerArray array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.ListViewAutomationPeer>.DisposeMarshalerArray(array);
        public static void DisposeAbi(IntPtr abi) => MarshalInspectable<object>.DisposeAbi(abi);
        public static unsafe void DisposeAbiArray(object box) => MarshalInspectable<object>.DisposeAbiArray(box);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    internal sealed class ListViewAutomationPeerRcwFactoryAttribute : global::WinRT.WinRTImplementationTypeRcwFactoryAttribute
    {
        public override object CreateInstance(global::WinRT.IInspectable inspectable)
            => new global::Microsoft.UI.Xaml.Automation.Peers.ListViewAutomationPeer(inspectable.ObjRef);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    public struct ListViewBaseAutomationPeer
    {

        public static IObjectReference CreateMarshaler(global::Microsoft.UI.Xaml.Automation.Peers.ListViewBaseAutomationPeer obj) => obj is null ? null : MarshalInspectable<global::Microsoft.UI.Xaml.Automation.Peers.ListViewBaseAutomationPeer>.CreateMarshaler<IUnknownVftbl>(obj, global::ABI.Microsoft.UI.Xaml.Automation.Peers.IListViewBaseAutomationPeerMethods.IID);
        public static ObjectReferenceValue CreateMarshaler2(global::Microsoft.UI.Xaml.Automation.Peers.ListViewBaseAutomationPeer obj) => MarshalInspectable<object>.CreateMarshaler2(obj, global::ABI.Microsoft.UI.Xaml.Automation.Peers.IListViewBaseAutomationPeerMethods.IID);
        public static IntPtr GetAbi(IObjectReference value) => value is null ? IntPtr.Zero : MarshalInterfaceHelper<object>.GetAbi(value);
        public static global::Microsoft.UI.Xaml.Automation.Peers.ListViewBaseAutomationPeer FromAbi(IntPtr thisPtr) => global::Microsoft.UI.Xaml.Automation.Peers.ListViewBaseAutomationPeer.FromAbi(thisPtr);
        public static IntPtr FromManaged(global::Microsoft.UI.Xaml.Automation.Peers.ListViewBaseAutomationPeer obj) => obj is null ? IntPtr.Zero : CreateMarshaler2(obj).Detach();
        public static unsafe MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.ListViewBaseAutomationPeer>.MarshalerArray CreateMarshalerArray(global::Microsoft.UI.Xaml.Automation.Peers.ListViewBaseAutomationPeer[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.ListViewBaseAutomationPeer>.CreateMarshalerArray2(array, (o) => CreateMarshaler2(o));
        public static (int length, IntPtr data) GetAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.ListViewBaseAutomationPeer>.GetAbiArray(box);
        public static unsafe global::Microsoft.UI.Xaml.Automation.Peers.ListViewBaseAutomationPeer[] FromAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.ListViewBaseAutomationPeer>.FromAbiArray(box, FromAbi);
        public static void CopyAbiArray(global::Microsoft.UI.Xaml.Automation.Peers.ListViewBaseAutomationPeer[] array, object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.ListViewBaseAutomationPeer>.CopyAbiArray(array, box, FromAbi);
        public static (int length, IntPtr data) FromManagedArray(global::Microsoft.UI.Xaml.Automation.Peers.ListViewBaseAutomationPeer[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.ListViewBaseAutomationPeer>.FromManagedArray(array, (o) => FromManaged(o));
        public static void DisposeMarshaler(IObjectReference value) => MarshalInspectable<object>.DisposeMarshaler(value);
        public static void DisposeMarshalerArray(MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.ListViewBaseAutomationPeer>.MarshalerArray array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.ListViewBaseAutomationPeer>.DisposeMarshalerArray(array);
        public static void DisposeAbi(IntPtr abi) => MarshalInspectable<object>.DisposeAbi(abi);
        public static unsafe void DisposeAbiArray(object box) => MarshalInspectable<object>.DisposeAbiArray(box);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    internal sealed class ListViewBaseAutomationPeerRcwFactoryAttribute : global::WinRT.WinRTImplementationTypeRcwFactoryAttribute
    {
        public override object CreateInstance(global::WinRT.IInspectable inspectable)
            => new global::Microsoft.UI.Xaml.Automation.Peers.ListViewBaseAutomationPeer(inspectable.ObjRef);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    public struct ListViewBaseHeaderItemAutomationPeer
    {

        public static IObjectReference CreateMarshaler(global::Microsoft.UI.Xaml.Automation.Peers.ListViewBaseHeaderItemAutomationPeer obj) => obj is null ? null : MarshalInspectable<global::Microsoft.UI.Xaml.Automation.Peers.ListViewBaseHeaderItemAutomationPeer>.CreateMarshaler<IUnknownVftbl>(obj, global::ABI.Microsoft.UI.Xaml.Automation.Peers.IListViewBaseHeaderItemAutomationPeerMethods.IID);
        public static ObjectReferenceValue CreateMarshaler2(global::Microsoft.UI.Xaml.Automation.Peers.ListViewBaseHeaderItemAutomationPeer obj) => MarshalInspectable<object>.CreateMarshaler2(obj, global::ABI.Microsoft.UI.Xaml.Automation.Peers.IListViewBaseHeaderItemAutomationPeerMethods.IID);
        public static IntPtr GetAbi(IObjectReference value) => value is null ? IntPtr.Zero : MarshalInterfaceHelper<object>.GetAbi(value);
        public static global::Microsoft.UI.Xaml.Automation.Peers.ListViewBaseHeaderItemAutomationPeer FromAbi(IntPtr thisPtr) => global::Microsoft.UI.Xaml.Automation.Peers.ListViewBaseHeaderItemAutomationPeer.FromAbi(thisPtr);
        public static IntPtr FromManaged(global::Microsoft.UI.Xaml.Automation.Peers.ListViewBaseHeaderItemAutomationPeer obj) => obj is null ? IntPtr.Zero : CreateMarshaler2(obj).Detach();
        public static unsafe MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.ListViewBaseHeaderItemAutomationPeer>.MarshalerArray CreateMarshalerArray(global::Microsoft.UI.Xaml.Automation.Peers.ListViewBaseHeaderItemAutomationPeer[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.ListViewBaseHeaderItemAutomationPeer>.CreateMarshalerArray2(array, (o) => CreateMarshaler2(o));
        public static (int length, IntPtr data) GetAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.ListViewBaseHeaderItemAutomationPeer>.GetAbiArray(box);
        public static unsafe global::Microsoft.UI.Xaml.Automation.Peers.ListViewBaseHeaderItemAutomationPeer[] FromAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.ListViewBaseHeaderItemAutomationPeer>.FromAbiArray(box, FromAbi);
        public static void CopyAbiArray(global::Microsoft.UI.Xaml.Automation.Peers.ListViewBaseHeaderItemAutomationPeer[] array, object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.ListViewBaseHeaderItemAutomationPeer>.CopyAbiArray(array, box, FromAbi);
        public static (int length, IntPtr data) FromManagedArray(global::Microsoft.UI.Xaml.Automation.Peers.ListViewBaseHeaderItemAutomationPeer[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.ListViewBaseHeaderItemAutomationPeer>.FromManagedArray(array, (o) => FromManaged(o));
        public static void DisposeMarshaler(IObjectReference value) => MarshalInspectable<object>.DisposeMarshaler(value);
        public static void DisposeMarshalerArray(MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.ListViewBaseHeaderItemAutomationPeer>.MarshalerArray array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.ListViewBaseHeaderItemAutomationPeer>.DisposeMarshalerArray(array);
        public static void DisposeAbi(IntPtr abi) => MarshalInspectable<object>.DisposeAbi(abi);
        public static unsafe void DisposeAbiArray(object box) => MarshalInspectable<object>.DisposeAbiArray(box);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    internal sealed class ListViewBaseHeaderItemAutomationPeerRcwFactoryAttribute : global::WinRT.WinRTImplementationTypeRcwFactoryAttribute
    {
        public override object CreateInstance(global::WinRT.IInspectable inspectable)
            => new global::Microsoft.UI.Xaml.Automation.Peers.ListViewBaseHeaderItemAutomationPeer(inspectable.ObjRef);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    public struct ListViewHeaderItemAutomationPeer
    {

        public static IObjectReference CreateMarshaler(global::Microsoft.UI.Xaml.Automation.Peers.ListViewHeaderItemAutomationPeer obj) => obj is null ? null : MarshalInspectable<global::Microsoft.UI.Xaml.Automation.Peers.ListViewHeaderItemAutomationPeer>.CreateMarshaler<IUnknownVftbl>(obj, global::ABI.Microsoft.UI.Xaml.Automation.Peers.IListViewHeaderItemAutomationPeerMethods.IID);
        public static ObjectReferenceValue CreateMarshaler2(global::Microsoft.UI.Xaml.Automation.Peers.ListViewHeaderItemAutomationPeer obj) => MarshalInspectable<object>.CreateMarshaler2(obj, global::ABI.Microsoft.UI.Xaml.Automation.Peers.IListViewHeaderItemAutomationPeerMethods.IID);
        public static IntPtr GetAbi(IObjectReference value) => value is null ? IntPtr.Zero : MarshalInterfaceHelper<object>.GetAbi(value);
        public static global::Microsoft.UI.Xaml.Automation.Peers.ListViewHeaderItemAutomationPeer FromAbi(IntPtr thisPtr) => global::Microsoft.UI.Xaml.Automation.Peers.ListViewHeaderItemAutomationPeer.FromAbi(thisPtr);
        public static IntPtr FromManaged(global::Microsoft.UI.Xaml.Automation.Peers.ListViewHeaderItemAutomationPeer obj) => obj is null ? IntPtr.Zero : CreateMarshaler2(obj).Detach();
        public static unsafe MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.ListViewHeaderItemAutomationPeer>.MarshalerArray CreateMarshalerArray(global::Microsoft.UI.Xaml.Automation.Peers.ListViewHeaderItemAutomationPeer[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.ListViewHeaderItemAutomationPeer>.CreateMarshalerArray2(array, (o) => CreateMarshaler2(o));
        public static (int length, IntPtr data) GetAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.ListViewHeaderItemAutomationPeer>.GetAbiArray(box);
        public static unsafe global::Microsoft.UI.Xaml.Automation.Peers.ListViewHeaderItemAutomationPeer[] FromAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.ListViewHeaderItemAutomationPeer>.FromAbiArray(box, FromAbi);
        public static void CopyAbiArray(global::Microsoft.UI.Xaml.Automation.Peers.ListViewHeaderItemAutomationPeer[] array, object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.ListViewHeaderItemAutomationPeer>.CopyAbiArray(array, box, FromAbi);
        public static (int length, IntPtr data) FromManagedArray(global::Microsoft.UI.Xaml.Automation.Peers.ListViewHeaderItemAutomationPeer[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.ListViewHeaderItemAutomationPeer>.FromManagedArray(array, (o) => FromManaged(o));
        public static void DisposeMarshaler(IObjectReference value) => MarshalInspectable<object>.DisposeMarshaler(value);
        public static void DisposeMarshalerArray(MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.ListViewHeaderItemAutomationPeer>.MarshalerArray array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.ListViewHeaderItemAutomationPeer>.DisposeMarshalerArray(array);
        public static void DisposeAbi(IntPtr abi) => MarshalInspectable<object>.DisposeAbi(abi);
        public static unsafe void DisposeAbiArray(object box) => MarshalInspectable<object>.DisposeAbiArray(box);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    internal sealed class ListViewHeaderItemAutomationPeerRcwFactoryAttribute : global::WinRT.WinRTImplementationTypeRcwFactoryAttribute
    {
        public override object CreateInstance(global::WinRT.IInspectable inspectable)
            => new global::Microsoft.UI.Xaml.Automation.Peers.ListViewHeaderItemAutomationPeer(inspectable.ObjRef);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    public struct ListViewItemAutomationPeer
    {

        public static IObjectReference CreateMarshaler(global::Microsoft.UI.Xaml.Automation.Peers.ListViewItemAutomationPeer obj) => obj is null ? null : MarshalInspectable<global::Microsoft.UI.Xaml.Automation.Peers.ListViewItemAutomationPeer>.CreateMarshaler<IUnknownVftbl>(obj, global::ABI.Microsoft.UI.Xaml.Automation.Peers.IListViewItemAutomationPeerMethods.IID);
        public static ObjectReferenceValue CreateMarshaler2(global::Microsoft.UI.Xaml.Automation.Peers.ListViewItemAutomationPeer obj) => MarshalInspectable<object>.CreateMarshaler2(obj, global::ABI.Microsoft.UI.Xaml.Automation.Peers.IListViewItemAutomationPeerMethods.IID);
        public static IntPtr GetAbi(IObjectReference value) => value is null ? IntPtr.Zero : MarshalInterfaceHelper<object>.GetAbi(value);
        public static global::Microsoft.UI.Xaml.Automation.Peers.ListViewItemAutomationPeer FromAbi(IntPtr thisPtr) => global::Microsoft.UI.Xaml.Automation.Peers.ListViewItemAutomationPeer.FromAbi(thisPtr);
        public static IntPtr FromManaged(global::Microsoft.UI.Xaml.Automation.Peers.ListViewItemAutomationPeer obj) => obj is null ? IntPtr.Zero : CreateMarshaler2(obj).Detach();
        public static unsafe MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.ListViewItemAutomationPeer>.MarshalerArray CreateMarshalerArray(global::Microsoft.UI.Xaml.Automation.Peers.ListViewItemAutomationPeer[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.ListViewItemAutomationPeer>.CreateMarshalerArray2(array, (o) => CreateMarshaler2(o));
        public static (int length, IntPtr data) GetAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.ListViewItemAutomationPeer>.GetAbiArray(box);
        public static unsafe global::Microsoft.UI.Xaml.Automation.Peers.ListViewItemAutomationPeer[] FromAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.ListViewItemAutomationPeer>.FromAbiArray(box, FromAbi);
        public static void CopyAbiArray(global::Microsoft.UI.Xaml.Automation.Peers.ListViewItemAutomationPeer[] array, object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.ListViewItemAutomationPeer>.CopyAbiArray(array, box, FromAbi);
        public static (int length, IntPtr data) FromManagedArray(global::Microsoft.UI.Xaml.Automation.Peers.ListViewItemAutomationPeer[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.ListViewItemAutomationPeer>.FromManagedArray(array, (o) => FromManaged(o));
        public static void DisposeMarshaler(IObjectReference value) => MarshalInspectable<object>.DisposeMarshaler(value);
        public static void DisposeMarshalerArray(MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.ListViewItemAutomationPeer>.MarshalerArray array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.ListViewItemAutomationPeer>.DisposeMarshalerArray(array);
        public static void DisposeAbi(IntPtr abi) => MarshalInspectable<object>.DisposeAbi(abi);
        public static unsafe void DisposeAbiArray(object box) => MarshalInspectable<object>.DisposeAbiArray(box);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    internal sealed class ListViewItemAutomationPeerRcwFactoryAttribute : global::WinRT.WinRTImplementationTypeRcwFactoryAttribute
    {
        public override object CreateInstance(global::WinRT.IInspectable inspectable)
            => new global::Microsoft.UI.Xaml.Automation.Peers.ListViewItemAutomationPeer(inspectable.ObjRef);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    public struct ListViewItemDataAutomationPeer
    {

        public static IObjectReference CreateMarshaler(global::Microsoft.UI.Xaml.Automation.Peers.ListViewItemDataAutomationPeer obj) => obj is null ? null : MarshalInspectable<global::Microsoft.UI.Xaml.Automation.Peers.ListViewItemDataAutomationPeer>.CreateMarshaler<IUnknownVftbl>(obj, global::ABI.Microsoft.UI.Xaml.Automation.Peers.IListViewItemDataAutomationPeerMethods.IID);
        public static ObjectReferenceValue CreateMarshaler2(global::Microsoft.UI.Xaml.Automation.Peers.ListViewItemDataAutomationPeer obj) => MarshalInspectable<object>.CreateMarshaler2(obj, global::ABI.Microsoft.UI.Xaml.Automation.Peers.IListViewItemDataAutomationPeerMethods.IID);
        public static IntPtr GetAbi(IObjectReference value) => value is null ? IntPtr.Zero : MarshalInterfaceHelper<object>.GetAbi(value);
        public static global::Microsoft.UI.Xaml.Automation.Peers.ListViewItemDataAutomationPeer FromAbi(IntPtr thisPtr) => global::Microsoft.UI.Xaml.Automation.Peers.ListViewItemDataAutomationPeer.FromAbi(thisPtr);
        public static IntPtr FromManaged(global::Microsoft.UI.Xaml.Automation.Peers.ListViewItemDataAutomationPeer obj) => obj is null ? IntPtr.Zero : CreateMarshaler2(obj).Detach();
        public static unsafe MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.ListViewItemDataAutomationPeer>.MarshalerArray CreateMarshalerArray(global::Microsoft.UI.Xaml.Automation.Peers.ListViewItemDataAutomationPeer[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.ListViewItemDataAutomationPeer>.CreateMarshalerArray2(array, (o) => CreateMarshaler2(o));
        public static (int length, IntPtr data) GetAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.ListViewItemDataAutomationPeer>.GetAbiArray(box);
        public static unsafe global::Microsoft.UI.Xaml.Automation.Peers.ListViewItemDataAutomationPeer[] FromAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.ListViewItemDataAutomationPeer>.FromAbiArray(box, FromAbi);
        public static void CopyAbiArray(global::Microsoft.UI.Xaml.Automation.Peers.ListViewItemDataAutomationPeer[] array, object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.ListViewItemDataAutomationPeer>.CopyAbiArray(array, box, FromAbi);
        public static (int length, IntPtr data) FromManagedArray(global::Microsoft.UI.Xaml.Automation.Peers.ListViewItemDataAutomationPeer[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.ListViewItemDataAutomationPeer>.FromManagedArray(array, (o) => FromManaged(o));
        public static void DisposeMarshaler(IObjectReference value) => MarshalInspectable<object>.DisposeMarshaler(value);
        public static void DisposeMarshalerArray(MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.ListViewItemDataAutomationPeer>.MarshalerArray array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.ListViewItemDataAutomationPeer>.DisposeMarshalerArray(array);
        public static void DisposeAbi(IntPtr abi) => MarshalInspectable<object>.DisposeAbi(abi);
        public static unsafe void DisposeAbiArray(object box) => MarshalInspectable<object>.DisposeAbiArray(box);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    internal sealed class ListViewItemDataAutomationPeerRcwFactoryAttribute : global::WinRT.WinRTImplementationTypeRcwFactoryAttribute
    {
        public override object CreateInstance(global::WinRT.IInspectable inspectable)
            => new global::Microsoft.UI.Xaml.Automation.Peers.ListViewItemDataAutomationPeer(inspectable.ObjRef);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    public struct LoopingSelectorAutomationPeer
    {

        public static IObjectReference CreateMarshaler(global::Microsoft.UI.Xaml.Automation.Peers.LoopingSelectorAutomationPeer obj) => obj is null ? null : MarshalInspectable<global::Microsoft.UI.Xaml.Automation.Peers.LoopingSelectorAutomationPeer>.CreateMarshaler<IUnknownVftbl>(obj, global::ABI.Microsoft.UI.Xaml.Automation.Peers.ILoopingSelectorAutomationPeerMethods.IID);
        public static ObjectReferenceValue CreateMarshaler2(global::Microsoft.UI.Xaml.Automation.Peers.LoopingSelectorAutomationPeer obj) => MarshalInspectable<object>.CreateMarshaler2(obj, global::ABI.Microsoft.UI.Xaml.Automation.Peers.ILoopingSelectorAutomationPeerMethods.IID);
        public static IntPtr GetAbi(IObjectReference value) => value is null ? IntPtr.Zero : MarshalInterfaceHelper<object>.GetAbi(value);
        public static global::Microsoft.UI.Xaml.Automation.Peers.LoopingSelectorAutomationPeer FromAbi(IntPtr thisPtr) => global::Microsoft.UI.Xaml.Automation.Peers.LoopingSelectorAutomationPeer.FromAbi(thisPtr);
        public static IntPtr FromManaged(global::Microsoft.UI.Xaml.Automation.Peers.LoopingSelectorAutomationPeer obj) => obj is null ? IntPtr.Zero : CreateMarshaler2(obj).Detach();
        public static unsafe MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.LoopingSelectorAutomationPeer>.MarshalerArray CreateMarshalerArray(global::Microsoft.UI.Xaml.Automation.Peers.LoopingSelectorAutomationPeer[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.LoopingSelectorAutomationPeer>.CreateMarshalerArray2(array, (o) => CreateMarshaler2(o));
        public static (int length, IntPtr data) GetAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.LoopingSelectorAutomationPeer>.GetAbiArray(box);
        public static unsafe global::Microsoft.UI.Xaml.Automation.Peers.LoopingSelectorAutomationPeer[] FromAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.LoopingSelectorAutomationPeer>.FromAbiArray(box, FromAbi);
        public static void CopyAbiArray(global::Microsoft.UI.Xaml.Automation.Peers.LoopingSelectorAutomationPeer[] array, object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.LoopingSelectorAutomationPeer>.CopyAbiArray(array, box, FromAbi);
        public static (int length, IntPtr data) FromManagedArray(global::Microsoft.UI.Xaml.Automation.Peers.LoopingSelectorAutomationPeer[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.LoopingSelectorAutomationPeer>.FromManagedArray(array, (o) => FromManaged(o));
        public static void DisposeMarshaler(IObjectReference value) => MarshalInspectable<object>.DisposeMarshaler(value);
        public static void DisposeMarshalerArray(MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.LoopingSelectorAutomationPeer>.MarshalerArray array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.LoopingSelectorAutomationPeer>.DisposeMarshalerArray(array);
        public static void DisposeAbi(IntPtr abi) => MarshalInspectable<object>.DisposeAbi(abi);
        public static unsafe void DisposeAbiArray(object box) => MarshalInspectable<object>.DisposeAbiArray(box);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    internal sealed class LoopingSelectorAutomationPeerRcwFactoryAttribute : global::WinRT.WinRTImplementationTypeRcwFactoryAttribute
    {
        public override object CreateInstance(global::WinRT.IInspectable inspectable)
            => new global::Microsoft.UI.Xaml.Automation.Peers.LoopingSelectorAutomationPeer(inspectable.ObjRef);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    public struct LoopingSelectorItemAutomationPeer
    {

        public static IObjectReference CreateMarshaler(global::Microsoft.UI.Xaml.Automation.Peers.LoopingSelectorItemAutomationPeer obj) => obj is null ? null : MarshalInspectable<global::Microsoft.UI.Xaml.Automation.Peers.LoopingSelectorItemAutomationPeer>.CreateMarshaler<IUnknownVftbl>(obj, global::ABI.Microsoft.UI.Xaml.Automation.Peers.ILoopingSelectorItemAutomationPeerMethods.IID);
        public static ObjectReferenceValue CreateMarshaler2(global::Microsoft.UI.Xaml.Automation.Peers.LoopingSelectorItemAutomationPeer obj) => MarshalInspectable<object>.CreateMarshaler2(obj, global::ABI.Microsoft.UI.Xaml.Automation.Peers.ILoopingSelectorItemAutomationPeerMethods.IID);
        public static IntPtr GetAbi(IObjectReference value) => value is null ? IntPtr.Zero : MarshalInterfaceHelper<object>.GetAbi(value);
        public static global::Microsoft.UI.Xaml.Automation.Peers.LoopingSelectorItemAutomationPeer FromAbi(IntPtr thisPtr) => global::Microsoft.UI.Xaml.Automation.Peers.LoopingSelectorItemAutomationPeer.FromAbi(thisPtr);
        public static IntPtr FromManaged(global::Microsoft.UI.Xaml.Automation.Peers.LoopingSelectorItemAutomationPeer obj) => obj is null ? IntPtr.Zero : CreateMarshaler2(obj).Detach();
        public static unsafe MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.LoopingSelectorItemAutomationPeer>.MarshalerArray CreateMarshalerArray(global::Microsoft.UI.Xaml.Automation.Peers.LoopingSelectorItemAutomationPeer[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.LoopingSelectorItemAutomationPeer>.CreateMarshalerArray2(array, (o) => CreateMarshaler2(o));
        public static (int length, IntPtr data) GetAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.LoopingSelectorItemAutomationPeer>.GetAbiArray(box);
        public static unsafe global::Microsoft.UI.Xaml.Automation.Peers.LoopingSelectorItemAutomationPeer[] FromAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.LoopingSelectorItemAutomationPeer>.FromAbiArray(box, FromAbi);
        public static void CopyAbiArray(global::Microsoft.UI.Xaml.Automation.Peers.LoopingSelectorItemAutomationPeer[] array, object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.LoopingSelectorItemAutomationPeer>.CopyAbiArray(array, box, FromAbi);
        public static (int length, IntPtr data) FromManagedArray(global::Microsoft.UI.Xaml.Automation.Peers.LoopingSelectorItemAutomationPeer[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.LoopingSelectorItemAutomationPeer>.FromManagedArray(array, (o) => FromManaged(o));
        public static void DisposeMarshaler(IObjectReference value) => MarshalInspectable<object>.DisposeMarshaler(value);
        public static void DisposeMarshalerArray(MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.LoopingSelectorItemAutomationPeer>.MarshalerArray array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.LoopingSelectorItemAutomationPeer>.DisposeMarshalerArray(array);
        public static void DisposeAbi(IntPtr abi) => MarshalInspectable<object>.DisposeAbi(abi);
        public static unsafe void DisposeAbiArray(object box) => MarshalInspectable<object>.DisposeAbiArray(box);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    internal sealed class LoopingSelectorItemAutomationPeerRcwFactoryAttribute : global::WinRT.WinRTImplementationTypeRcwFactoryAttribute
    {
        public override object CreateInstance(global::WinRT.IInspectable inspectable)
            => new global::Microsoft.UI.Xaml.Automation.Peers.LoopingSelectorItemAutomationPeer(inspectable.ObjRef);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    public struct LoopingSelectorItemDataAutomationPeer
    {

        public static IObjectReference CreateMarshaler(global::Microsoft.UI.Xaml.Automation.Peers.LoopingSelectorItemDataAutomationPeer obj) => obj is null ? null : MarshalInspectable<global::Microsoft.UI.Xaml.Automation.Peers.LoopingSelectorItemDataAutomationPeer>.CreateMarshaler<IUnknownVftbl>(obj, global::ABI.Microsoft.UI.Xaml.Automation.Peers.ILoopingSelectorItemDataAutomationPeerMethods.IID);
        public static ObjectReferenceValue CreateMarshaler2(global::Microsoft.UI.Xaml.Automation.Peers.LoopingSelectorItemDataAutomationPeer obj) => MarshalInspectable<object>.CreateMarshaler2(obj, global::ABI.Microsoft.UI.Xaml.Automation.Peers.ILoopingSelectorItemDataAutomationPeerMethods.IID);
        public static IntPtr GetAbi(IObjectReference value) => value is null ? IntPtr.Zero : MarshalInterfaceHelper<object>.GetAbi(value);
        public static global::Microsoft.UI.Xaml.Automation.Peers.LoopingSelectorItemDataAutomationPeer FromAbi(IntPtr thisPtr) => global::Microsoft.UI.Xaml.Automation.Peers.LoopingSelectorItemDataAutomationPeer.FromAbi(thisPtr);
        public static IntPtr FromManaged(global::Microsoft.UI.Xaml.Automation.Peers.LoopingSelectorItemDataAutomationPeer obj) => obj is null ? IntPtr.Zero : CreateMarshaler2(obj).Detach();
        public static unsafe MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.LoopingSelectorItemDataAutomationPeer>.MarshalerArray CreateMarshalerArray(global::Microsoft.UI.Xaml.Automation.Peers.LoopingSelectorItemDataAutomationPeer[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.LoopingSelectorItemDataAutomationPeer>.CreateMarshalerArray2(array, (o) => CreateMarshaler2(o));
        public static (int length, IntPtr data) GetAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.LoopingSelectorItemDataAutomationPeer>.GetAbiArray(box);
        public static unsafe global::Microsoft.UI.Xaml.Automation.Peers.LoopingSelectorItemDataAutomationPeer[] FromAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.LoopingSelectorItemDataAutomationPeer>.FromAbiArray(box, FromAbi);
        public static void CopyAbiArray(global::Microsoft.UI.Xaml.Automation.Peers.LoopingSelectorItemDataAutomationPeer[] array, object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.LoopingSelectorItemDataAutomationPeer>.CopyAbiArray(array, box, FromAbi);
        public static (int length, IntPtr data) FromManagedArray(global::Microsoft.UI.Xaml.Automation.Peers.LoopingSelectorItemDataAutomationPeer[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.LoopingSelectorItemDataAutomationPeer>.FromManagedArray(array, (o) => FromManaged(o));
        public static void DisposeMarshaler(IObjectReference value) => MarshalInspectable<object>.DisposeMarshaler(value);
        public static void DisposeMarshalerArray(MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.LoopingSelectorItemDataAutomationPeer>.MarshalerArray array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.LoopingSelectorItemDataAutomationPeer>.DisposeMarshalerArray(array);
        public static void DisposeAbi(IntPtr abi) => MarshalInspectable<object>.DisposeAbi(abi);
        public static unsafe void DisposeAbiArray(object box) => MarshalInspectable<object>.DisposeAbiArray(box);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    internal sealed class LoopingSelectorItemDataAutomationPeerRcwFactoryAttribute : global::WinRT.WinRTImplementationTypeRcwFactoryAttribute
    {
        public override object CreateInstance(global::WinRT.IInspectable inspectable)
            => new global::Microsoft.UI.Xaml.Automation.Peers.LoopingSelectorItemDataAutomationPeer(inspectable.ObjRef);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    public struct MediaPlayerElementAutomationPeer
    {

        public static IObjectReference CreateMarshaler(global::Microsoft.UI.Xaml.Automation.Peers.MediaPlayerElementAutomationPeer obj) => obj is null ? null : MarshalInspectable<global::Microsoft.UI.Xaml.Automation.Peers.MediaPlayerElementAutomationPeer>.CreateMarshaler<IUnknownVftbl>(obj, global::ABI.Microsoft.UI.Xaml.Automation.Peers.IMediaPlayerElementAutomationPeerMethods.IID);
        public static ObjectReferenceValue CreateMarshaler2(global::Microsoft.UI.Xaml.Automation.Peers.MediaPlayerElementAutomationPeer obj) => MarshalInspectable<object>.CreateMarshaler2(obj, global::ABI.Microsoft.UI.Xaml.Automation.Peers.IMediaPlayerElementAutomationPeerMethods.IID);
        public static IntPtr GetAbi(IObjectReference value) => value is null ? IntPtr.Zero : MarshalInterfaceHelper<object>.GetAbi(value);
        public static global::Microsoft.UI.Xaml.Automation.Peers.MediaPlayerElementAutomationPeer FromAbi(IntPtr thisPtr) => global::Microsoft.UI.Xaml.Automation.Peers.MediaPlayerElementAutomationPeer.FromAbi(thisPtr);
        public static IntPtr FromManaged(global::Microsoft.UI.Xaml.Automation.Peers.MediaPlayerElementAutomationPeer obj) => obj is null ? IntPtr.Zero : CreateMarshaler2(obj).Detach();
        public static unsafe MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.MediaPlayerElementAutomationPeer>.MarshalerArray CreateMarshalerArray(global::Microsoft.UI.Xaml.Automation.Peers.MediaPlayerElementAutomationPeer[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.MediaPlayerElementAutomationPeer>.CreateMarshalerArray2(array, (o) => CreateMarshaler2(o));
        public static (int length, IntPtr data) GetAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.MediaPlayerElementAutomationPeer>.GetAbiArray(box);
        public static unsafe global::Microsoft.UI.Xaml.Automation.Peers.MediaPlayerElementAutomationPeer[] FromAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.MediaPlayerElementAutomationPeer>.FromAbiArray(box, FromAbi);
        public static void CopyAbiArray(global::Microsoft.UI.Xaml.Automation.Peers.MediaPlayerElementAutomationPeer[] array, object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.MediaPlayerElementAutomationPeer>.CopyAbiArray(array, box, FromAbi);
        public static (int length, IntPtr data) FromManagedArray(global::Microsoft.UI.Xaml.Automation.Peers.MediaPlayerElementAutomationPeer[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.MediaPlayerElementAutomationPeer>.FromManagedArray(array, (o) => FromManaged(o));
        public static void DisposeMarshaler(IObjectReference value) => MarshalInspectable<object>.DisposeMarshaler(value);
        public static void DisposeMarshalerArray(MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.MediaPlayerElementAutomationPeer>.MarshalerArray array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.MediaPlayerElementAutomationPeer>.DisposeMarshalerArray(array);
        public static void DisposeAbi(IntPtr abi) => MarshalInspectable<object>.DisposeAbi(abi);
        public static unsafe void DisposeAbiArray(object box) => MarshalInspectable<object>.DisposeAbiArray(box);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    internal sealed class MediaPlayerElementAutomationPeerRcwFactoryAttribute : global::WinRT.WinRTImplementationTypeRcwFactoryAttribute
    {
        public override object CreateInstance(global::WinRT.IInspectable inspectable)
            => new global::Microsoft.UI.Xaml.Automation.Peers.MediaPlayerElementAutomationPeer(inspectable.ObjRef);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    public struct MediaTransportControlsAutomationPeer
    {

        public static IObjectReference CreateMarshaler(global::Microsoft.UI.Xaml.Automation.Peers.MediaTransportControlsAutomationPeer obj) => obj is null ? null : MarshalInspectable<global::Microsoft.UI.Xaml.Automation.Peers.MediaTransportControlsAutomationPeer>.CreateMarshaler<IUnknownVftbl>(obj, global::ABI.Microsoft.UI.Xaml.Automation.Peers.IMediaTransportControlsAutomationPeerMethods.IID);
        public static ObjectReferenceValue CreateMarshaler2(global::Microsoft.UI.Xaml.Automation.Peers.MediaTransportControlsAutomationPeer obj) => MarshalInspectable<object>.CreateMarshaler2(obj, global::ABI.Microsoft.UI.Xaml.Automation.Peers.IMediaTransportControlsAutomationPeerMethods.IID);
        public static IntPtr GetAbi(IObjectReference value) => value is null ? IntPtr.Zero : MarshalInterfaceHelper<object>.GetAbi(value);
        public static global::Microsoft.UI.Xaml.Automation.Peers.MediaTransportControlsAutomationPeer FromAbi(IntPtr thisPtr) => global::Microsoft.UI.Xaml.Automation.Peers.MediaTransportControlsAutomationPeer.FromAbi(thisPtr);
        public static IntPtr FromManaged(global::Microsoft.UI.Xaml.Automation.Peers.MediaTransportControlsAutomationPeer obj) => obj is null ? IntPtr.Zero : CreateMarshaler2(obj).Detach();
        public static unsafe MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.MediaTransportControlsAutomationPeer>.MarshalerArray CreateMarshalerArray(global::Microsoft.UI.Xaml.Automation.Peers.MediaTransportControlsAutomationPeer[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.MediaTransportControlsAutomationPeer>.CreateMarshalerArray2(array, (o) => CreateMarshaler2(o));
        public static (int length, IntPtr data) GetAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.MediaTransportControlsAutomationPeer>.GetAbiArray(box);
        public static unsafe global::Microsoft.UI.Xaml.Automation.Peers.MediaTransportControlsAutomationPeer[] FromAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.MediaTransportControlsAutomationPeer>.FromAbiArray(box, FromAbi);
        public static void CopyAbiArray(global::Microsoft.UI.Xaml.Automation.Peers.MediaTransportControlsAutomationPeer[] array, object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.MediaTransportControlsAutomationPeer>.CopyAbiArray(array, box, FromAbi);
        public static (int length, IntPtr data) FromManagedArray(global::Microsoft.UI.Xaml.Automation.Peers.MediaTransportControlsAutomationPeer[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.MediaTransportControlsAutomationPeer>.FromManagedArray(array, (o) => FromManaged(o));
        public static void DisposeMarshaler(IObjectReference value) => MarshalInspectable<object>.DisposeMarshaler(value);
        public static void DisposeMarshalerArray(MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.MediaTransportControlsAutomationPeer>.MarshalerArray array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.MediaTransportControlsAutomationPeer>.DisposeMarshalerArray(array);
        public static void DisposeAbi(IntPtr abi) => MarshalInspectable<object>.DisposeAbi(abi);
        public static unsafe void DisposeAbiArray(object box) => MarshalInspectable<object>.DisposeAbiArray(box);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    internal sealed class MediaTransportControlsAutomationPeerRcwFactoryAttribute : global::WinRT.WinRTImplementationTypeRcwFactoryAttribute
    {
        public override object CreateInstance(global::WinRT.IInspectable inspectable)
            => new global::Microsoft.UI.Xaml.Automation.Peers.MediaTransportControlsAutomationPeer(inspectable.ObjRef);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    public struct MenuBarAutomationPeer
    {

        public static IObjectReference CreateMarshaler(global::Microsoft.UI.Xaml.Automation.Peers.MenuBarAutomationPeer obj) => obj is null ? null : MarshalInspectable<global::Microsoft.UI.Xaml.Automation.Peers.MenuBarAutomationPeer>.CreateMarshaler<IUnknownVftbl>(obj, global::ABI.Microsoft.UI.Xaml.Automation.Peers.IMenuBarAutomationPeerMethods.IID);
        public static ObjectReferenceValue CreateMarshaler2(global::Microsoft.UI.Xaml.Automation.Peers.MenuBarAutomationPeer obj) => MarshalInspectable<object>.CreateMarshaler2(obj, global::ABI.Microsoft.UI.Xaml.Automation.Peers.IMenuBarAutomationPeerMethods.IID);
        public static IntPtr GetAbi(IObjectReference value) => value is null ? IntPtr.Zero : MarshalInterfaceHelper<object>.GetAbi(value);
        public static global::Microsoft.UI.Xaml.Automation.Peers.MenuBarAutomationPeer FromAbi(IntPtr thisPtr) => global::Microsoft.UI.Xaml.Automation.Peers.MenuBarAutomationPeer.FromAbi(thisPtr);
        public static IntPtr FromManaged(global::Microsoft.UI.Xaml.Automation.Peers.MenuBarAutomationPeer obj) => obj is null ? IntPtr.Zero : CreateMarshaler2(obj).Detach();
        public static unsafe MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.MenuBarAutomationPeer>.MarshalerArray CreateMarshalerArray(global::Microsoft.UI.Xaml.Automation.Peers.MenuBarAutomationPeer[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.MenuBarAutomationPeer>.CreateMarshalerArray2(array, (o) => CreateMarshaler2(o));
        public static (int length, IntPtr data) GetAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.MenuBarAutomationPeer>.GetAbiArray(box);
        public static unsafe global::Microsoft.UI.Xaml.Automation.Peers.MenuBarAutomationPeer[] FromAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.MenuBarAutomationPeer>.FromAbiArray(box, FromAbi);
        public static void CopyAbiArray(global::Microsoft.UI.Xaml.Automation.Peers.MenuBarAutomationPeer[] array, object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.MenuBarAutomationPeer>.CopyAbiArray(array, box, FromAbi);
        public static (int length, IntPtr data) FromManagedArray(global::Microsoft.UI.Xaml.Automation.Peers.MenuBarAutomationPeer[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.MenuBarAutomationPeer>.FromManagedArray(array, (o) => FromManaged(o));
        public static void DisposeMarshaler(IObjectReference value) => MarshalInspectable<object>.DisposeMarshaler(value);
        public static void DisposeMarshalerArray(MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.MenuBarAutomationPeer>.MarshalerArray array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.MenuBarAutomationPeer>.DisposeMarshalerArray(array);
        public static void DisposeAbi(IntPtr abi) => MarshalInspectable<object>.DisposeAbi(abi);
        public static unsafe void DisposeAbiArray(object box) => MarshalInspectable<object>.DisposeAbiArray(box);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    internal sealed class MenuBarAutomationPeerRcwFactoryAttribute : global::WinRT.WinRTImplementationTypeRcwFactoryAttribute
    {
        public override object CreateInstance(global::WinRT.IInspectable inspectable)
            => new global::Microsoft.UI.Xaml.Automation.Peers.MenuBarAutomationPeer(inspectable.ObjRef);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    public struct MenuBarItemAutomationPeer
    {

        public static IObjectReference CreateMarshaler(global::Microsoft.UI.Xaml.Automation.Peers.MenuBarItemAutomationPeer obj) => obj is null ? null : MarshalInspectable<global::Microsoft.UI.Xaml.Automation.Peers.MenuBarItemAutomationPeer>.CreateMarshaler<IUnknownVftbl>(obj, global::ABI.Microsoft.UI.Xaml.Automation.Peers.IMenuBarItemAutomationPeerMethods.IID);
        public static ObjectReferenceValue CreateMarshaler2(global::Microsoft.UI.Xaml.Automation.Peers.MenuBarItemAutomationPeer obj) => MarshalInspectable<object>.CreateMarshaler2(obj, global::ABI.Microsoft.UI.Xaml.Automation.Peers.IMenuBarItemAutomationPeerMethods.IID);
        public static IntPtr GetAbi(IObjectReference value) => value is null ? IntPtr.Zero : MarshalInterfaceHelper<object>.GetAbi(value);
        public static global::Microsoft.UI.Xaml.Automation.Peers.MenuBarItemAutomationPeer FromAbi(IntPtr thisPtr) => global::Microsoft.UI.Xaml.Automation.Peers.MenuBarItemAutomationPeer.FromAbi(thisPtr);
        public static IntPtr FromManaged(global::Microsoft.UI.Xaml.Automation.Peers.MenuBarItemAutomationPeer obj) => obj is null ? IntPtr.Zero : CreateMarshaler2(obj).Detach();
        public static unsafe MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.MenuBarItemAutomationPeer>.MarshalerArray CreateMarshalerArray(global::Microsoft.UI.Xaml.Automation.Peers.MenuBarItemAutomationPeer[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.MenuBarItemAutomationPeer>.CreateMarshalerArray2(array, (o) => CreateMarshaler2(o));
        public static (int length, IntPtr data) GetAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.MenuBarItemAutomationPeer>.GetAbiArray(box);
        public static unsafe global::Microsoft.UI.Xaml.Automation.Peers.MenuBarItemAutomationPeer[] FromAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.MenuBarItemAutomationPeer>.FromAbiArray(box, FromAbi);
        public static void CopyAbiArray(global::Microsoft.UI.Xaml.Automation.Peers.MenuBarItemAutomationPeer[] array, object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.MenuBarItemAutomationPeer>.CopyAbiArray(array, box, FromAbi);
        public static (int length, IntPtr data) FromManagedArray(global::Microsoft.UI.Xaml.Automation.Peers.MenuBarItemAutomationPeer[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.MenuBarItemAutomationPeer>.FromManagedArray(array, (o) => FromManaged(o));
        public static void DisposeMarshaler(IObjectReference value) => MarshalInspectable<object>.DisposeMarshaler(value);
        public static void DisposeMarshalerArray(MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.MenuBarItemAutomationPeer>.MarshalerArray array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.MenuBarItemAutomationPeer>.DisposeMarshalerArray(array);
        public static void DisposeAbi(IntPtr abi) => MarshalInspectable<object>.DisposeAbi(abi);
        public static unsafe void DisposeAbiArray(object box) => MarshalInspectable<object>.DisposeAbiArray(box);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    internal sealed class MenuBarItemAutomationPeerRcwFactoryAttribute : global::WinRT.WinRTImplementationTypeRcwFactoryAttribute
    {
        public override object CreateInstance(global::WinRT.IInspectable inspectable)
            => new global::Microsoft.UI.Xaml.Automation.Peers.MenuBarItemAutomationPeer(inspectable.ObjRef);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    public struct MenuFlyoutItemAutomationPeer
    {

        public static IObjectReference CreateMarshaler(global::Microsoft.UI.Xaml.Automation.Peers.MenuFlyoutItemAutomationPeer obj) => obj is null ? null : MarshalInspectable<global::Microsoft.UI.Xaml.Automation.Peers.MenuFlyoutItemAutomationPeer>.CreateMarshaler<IUnknownVftbl>(obj, global::ABI.Microsoft.UI.Xaml.Automation.Peers.IMenuFlyoutItemAutomationPeerMethods.IID);
        public static ObjectReferenceValue CreateMarshaler2(global::Microsoft.UI.Xaml.Automation.Peers.MenuFlyoutItemAutomationPeer obj) => MarshalInspectable<object>.CreateMarshaler2(obj, global::ABI.Microsoft.UI.Xaml.Automation.Peers.IMenuFlyoutItemAutomationPeerMethods.IID);
        public static IntPtr GetAbi(IObjectReference value) => value is null ? IntPtr.Zero : MarshalInterfaceHelper<object>.GetAbi(value);
        public static global::Microsoft.UI.Xaml.Automation.Peers.MenuFlyoutItemAutomationPeer FromAbi(IntPtr thisPtr) => global::Microsoft.UI.Xaml.Automation.Peers.MenuFlyoutItemAutomationPeer.FromAbi(thisPtr);
        public static IntPtr FromManaged(global::Microsoft.UI.Xaml.Automation.Peers.MenuFlyoutItemAutomationPeer obj) => obj is null ? IntPtr.Zero : CreateMarshaler2(obj).Detach();
        public static unsafe MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.MenuFlyoutItemAutomationPeer>.MarshalerArray CreateMarshalerArray(global::Microsoft.UI.Xaml.Automation.Peers.MenuFlyoutItemAutomationPeer[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.MenuFlyoutItemAutomationPeer>.CreateMarshalerArray2(array, (o) => CreateMarshaler2(o));
        public static (int length, IntPtr data) GetAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.MenuFlyoutItemAutomationPeer>.GetAbiArray(box);
        public static unsafe global::Microsoft.UI.Xaml.Automation.Peers.MenuFlyoutItemAutomationPeer[] FromAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.MenuFlyoutItemAutomationPeer>.FromAbiArray(box, FromAbi);
        public static void CopyAbiArray(global::Microsoft.UI.Xaml.Automation.Peers.MenuFlyoutItemAutomationPeer[] array, object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.MenuFlyoutItemAutomationPeer>.CopyAbiArray(array, box, FromAbi);
        public static (int length, IntPtr data) FromManagedArray(global::Microsoft.UI.Xaml.Automation.Peers.MenuFlyoutItemAutomationPeer[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.MenuFlyoutItemAutomationPeer>.FromManagedArray(array, (o) => FromManaged(o));
        public static void DisposeMarshaler(IObjectReference value) => MarshalInspectable<object>.DisposeMarshaler(value);
        public static void DisposeMarshalerArray(MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.MenuFlyoutItemAutomationPeer>.MarshalerArray array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.MenuFlyoutItemAutomationPeer>.DisposeMarshalerArray(array);
        public static void DisposeAbi(IntPtr abi) => MarshalInspectable<object>.DisposeAbi(abi);
        public static unsafe void DisposeAbiArray(object box) => MarshalInspectable<object>.DisposeAbiArray(box);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    internal sealed class MenuFlyoutItemAutomationPeerRcwFactoryAttribute : global::WinRT.WinRTImplementationTypeRcwFactoryAttribute
    {
        public override object CreateInstance(global::WinRT.IInspectable inspectable)
            => new global::Microsoft.UI.Xaml.Automation.Peers.MenuFlyoutItemAutomationPeer(inspectable.ObjRef);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    public struct MenuFlyoutPresenterAutomationPeer
    {

        public static IObjectReference CreateMarshaler(global::Microsoft.UI.Xaml.Automation.Peers.MenuFlyoutPresenterAutomationPeer obj) => obj is null ? null : MarshalInspectable<global::Microsoft.UI.Xaml.Automation.Peers.MenuFlyoutPresenterAutomationPeer>.CreateMarshaler<IUnknownVftbl>(obj, global::ABI.Microsoft.UI.Xaml.Automation.Peers.IMenuFlyoutPresenterAutomationPeerMethods.IID);
        public static ObjectReferenceValue CreateMarshaler2(global::Microsoft.UI.Xaml.Automation.Peers.MenuFlyoutPresenterAutomationPeer obj) => MarshalInspectable<object>.CreateMarshaler2(obj, global::ABI.Microsoft.UI.Xaml.Automation.Peers.IMenuFlyoutPresenterAutomationPeerMethods.IID);
        public static IntPtr GetAbi(IObjectReference value) => value is null ? IntPtr.Zero : MarshalInterfaceHelper<object>.GetAbi(value);
        public static global::Microsoft.UI.Xaml.Automation.Peers.MenuFlyoutPresenterAutomationPeer FromAbi(IntPtr thisPtr) => global::Microsoft.UI.Xaml.Automation.Peers.MenuFlyoutPresenterAutomationPeer.FromAbi(thisPtr);
        public static IntPtr FromManaged(global::Microsoft.UI.Xaml.Automation.Peers.MenuFlyoutPresenterAutomationPeer obj) => obj is null ? IntPtr.Zero : CreateMarshaler2(obj).Detach();
        public static unsafe MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.MenuFlyoutPresenterAutomationPeer>.MarshalerArray CreateMarshalerArray(global::Microsoft.UI.Xaml.Automation.Peers.MenuFlyoutPresenterAutomationPeer[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.MenuFlyoutPresenterAutomationPeer>.CreateMarshalerArray2(array, (o) => CreateMarshaler2(o));
        public static (int length, IntPtr data) GetAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.MenuFlyoutPresenterAutomationPeer>.GetAbiArray(box);
        public static unsafe global::Microsoft.UI.Xaml.Automation.Peers.MenuFlyoutPresenterAutomationPeer[] FromAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.MenuFlyoutPresenterAutomationPeer>.FromAbiArray(box, FromAbi);
        public static void CopyAbiArray(global::Microsoft.UI.Xaml.Automation.Peers.MenuFlyoutPresenterAutomationPeer[] array, object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.MenuFlyoutPresenterAutomationPeer>.CopyAbiArray(array, box, FromAbi);
        public static (int length, IntPtr data) FromManagedArray(global::Microsoft.UI.Xaml.Automation.Peers.MenuFlyoutPresenterAutomationPeer[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.MenuFlyoutPresenterAutomationPeer>.FromManagedArray(array, (o) => FromManaged(o));
        public static void DisposeMarshaler(IObjectReference value) => MarshalInspectable<object>.DisposeMarshaler(value);
        public static void DisposeMarshalerArray(MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.MenuFlyoutPresenterAutomationPeer>.MarshalerArray array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.MenuFlyoutPresenterAutomationPeer>.DisposeMarshalerArray(array);
        public static void DisposeAbi(IntPtr abi) => MarshalInspectable<object>.DisposeAbi(abi);
        public static unsafe void DisposeAbiArray(object box) => MarshalInspectable<object>.DisposeAbiArray(box);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    internal sealed class MenuFlyoutPresenterAutomationPeerRcwFactoryAttribute : global::WinRT.WinRTImplementationTypeRcwFactoryAttribute
    {
        public override object CreateInstance(global::WinRT.IInspectable inspectable)
            => new global::Microsoft.UI.Xaml.Automation.Peers.MenuFlyoutPresenterAutomationPeer(inspectable.ObjRef);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    public struct NavigationViewAutomationPeer
    {

        public static IObjectReference CreateMarshaler(global::Microsoft.UI.Xaml.Automation.Peers.NavigationViewAutomationPeer obj) => obj is null ? null : MarshalInspectable<global::Microsoft.UI.Xaml.Automation.Peers.NavigationViewAutomationPeer>.CreateMarshaler<IUnknownVftbl>(obj, global::ABI.Microsoft.UI.Xaml.Automation.Peers.INavigationViewAutomationPeerMethods.IID);
        public static ObjectReferenceValue CreateMarshaler2(global::Microsoft.UI.Xaml.Automation.Peers.NavigationViewAutomationPeer obj) => MarshalInspectable<object>.CreateMarshaler2(obj, global::ABI.Microsoft.UI.Xaml.Automation.Peers.INavigationViewAutomationPeerMethods.IID);
        public static IntPtr GetAbi(IObjectReference value) => value is null ? IntPtr.Zero : MarshalInterfaceHelper<object>.GetAbi(value);
        public static global::Microsoft.UI.Xaml.Automation.Peers.NavigationViewAutomationPeer FromAbi(IntPtr thisPtr) => global::Microsoft.UI.Xaml.Automation.Peers.NavigationViewAutomationPeer.FromAbi(thisPtr);
        public static IntPtr FromManaged(global::Microsoft.UI.Xaml.Automation.Peers.NavigationViewAutomationPeer obj) => obj is null ? IntPtr.Zero : CreateMarshaler2(obj).Detach();
        public static unsafe MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.NavigationViewAutomationPeer>.MarshalerArray CreateMarshalerArray(global::Microsoft.UI.Xaml.Automation.Peers.NavigationViewAutomationPeer[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.NavigationViewAutomationPeer>.CreateMarshalerArray2(array, (o) => CreateMarshaler2(o));
        public static (int length, IntPtr data) GetAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.NavigationViewAutomationPeer>.GetAbiArray(box);
        public static unsafe global::Microsoft.UI.Xaml.Automation.Peers.NavigationViewAutomationPeer[] FromAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.NavigationViewAutomationPeer>.FromAbiArray(box, FromAbi);
        public static void CopyAbiArray(global::Microsoft.UI.Xaml.Automation.Peers.NavigationViewAutomationPeer[] array, object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.NavigationViewAutomationPeer>.CopyAbiArray(array, box, FromAbi);
        public static (int length, IntPtr data) FromManagedArray(global::Microsoft.UI.Xaml.Automation.Peers.NavigationViewAutomationPeer[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.NavigationViewAutomationPeer>.FromManagedArray(array, (o) => FromManaged(o));
        public static void DisposeMarshaler(IObjectReference value) => MarshalInspectable<object>.DisposeMarshaler(value);
        public static void DisposeMarshalerArray(MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.NavigationViewAutomationPeer>.MarshalerArray array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.NavigationViewAutomationPeer>.DisposeMarshalerArray(array);
        public static void DisposeAbi(IntPtr abi) => MarshalInspectable<object>.DisposeAbi(abi);
        public static unsafe void DisposeAbiArray(object box) => MarshalInspectable<object>.DisposeAbiArray(box);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    internal sealed class NavigationViewAutomationPeerRcwFactoryAttribute : global::WinRT.WinRTImplementationTypeRcwFactoryAttribute
    {
        public override object CreateInstance(global::WinRT.IInspectable inspectable)
            => new global::Microsoft.UI.Xaml.Automation.Peers.NavigationViewAutomationPeer(inspectable.ObjRef);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    public struct NavigationViewItemAutomationPeer
    {

        public static IObjectReference CreateMarshaler(global::Microsoft.UI.Xaml.Automation.Peers.NavigationViewItemAutomationPeer obj) => obj is null ? null : MarshalInspectable<global::Microsoft.UI.Xaml.Automation.Peers.NavigationViewItemAutomationPeer>.CreateMarshaler<IUnknownVftbl>(obj, global::ABI.Microsoft.UI.Xaml.Automation.Peers.INavigationViewItemAutomationPeerMethods.IID);
        public static ObjectReferenceValue CreateMarshaler2(global::Microsoft.UI.Xaml.Automation.Peers.NavigationViewItemAutomationPeer obj) => MarshalInspectable<object>.CreateMarshaler2(obj, global::ABI.Microsoft.UI.Xaml.Automation.Peers.INavigationViewItemAutomationPeerMethods.IID);
        public static IntPtr GetAbi(IObjectReference value) => value is null ? IntPtr.Zero : MarshalInterfaceHelper<object>.GetAbi(value);
        public static global::Microsoft.UI.Xaml.Automation.Peers.NavigationViewItemAutomationPeer FromAbi(IntPtr thisPtr) => global::Microsoft.UI.Xaml.Automation.Peers.NavigationViewItemAutomationPeer.FromAbi(thisPtr);
        public static IntPtr FromManaged(global::Microsoft.UI.Xaml.Automation.Peers.NavigationViewItemAutomationPeer obj) => obj is null ? IntPtr.Zero : CreateMarshaler2(obj).Detach();
        public static unsafe MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.NavigationViewItemAutomationPeer>.MarshalerArray CreateMarshalerArray(global::Microsoft.UI.Xaml.Automation.Peers.NavigationViewItemAutomationPeer[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.NavigationViewItemAutomationPeer>.CreateMarshalerArray2(array, (o) => CreateMarshaler2(o));
        public static (int length, IntPtr data) GetAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.NavigationViewItemAutomationPeer>.GetAbiArray(box);
        public static unsafe global::Microsoft.UI.Xaml.Automation.Peers.NavigationViewItemAutomationPeer[] FromAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.NavigationViewItemAutomationPeer>.FromAbiArray(box, FromAbi);
        public static void CopyAbiArray(global::Microsoft.UI.Xaml.Automation.Peers.NavigationViewItemAutomationPeer[] array, object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.NavigationViewItemAutomationPeer>.CopyAbiArray(array, box, FromAbi);
        public static (int length, IntPtr data) FromManagedArray(global::Microsoft.UI.Xaml.Automation.Peers.NavigationViewItemAutomationPeer[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.NavigationViewItemAutomationPeer>.FromManagedArray(array, (o) => FromManaged(o));
        public static void DisposeMarshaler(IObjectReference value) => MarshalInspectable<object>.DisposeMarshaler(value);
        public static void DisposeMarshalerArray(MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.NavigationViewItemAutomationPeer>.MarshalerArray array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.NavigationViewItemAutomationPeer>.DisposeMarshalerArray(array);
        public static void DisposeAbi(IntPtr abi) => MarshalInspectable<object>.DisposeAbi(abi);
        public static unsafe void DisposeAbiArray(object box) => MarshalInspectable<object>.DisposeAbiArray(box);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    internal sealed class NavigationViewItemAutomationPeerRcwFactoryAttribute : global::WinRT.WinRTImplementationTypeRcwFactoryAttribute
    {
        public override object CreateInstance(global::WinRT.IInspectable inspectable)
            => new global::Microsoft.UI.Xaml.Automation.Peers.NavigationViewItemAutomationPeer(inspectable.ObjRef);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    public struct NumberBoxAutomationPeer
    {

        public static IObjectReference CreateMarshaler(global::Microsoft.UI.Xaml.Automation.Peers.NumberBoxAutomationPeer obj) => obj is null ? null : MarshalInspectable<global::Microsoft.UI.Xaml.Automation.Peers.NumberBoxAutomationPeer>.CreateMarshaler<IUnknownVftbl>(obj, global::ABI.Microsoft.UI.Xaml.Automation.Peers.INumberBoxAutomationPeerMethods.IID);
        public static ObjectReferenceValue CreateMarshaler2(global::Microsoft.UI.Xaml.Automation.Peers.NumberBoxAutomationPeer obj) => MarshalInspectable<object>.CreateMarshaler2(obj, global::ABI.Microsoft.UI.Xaml.Automation.Peers.INumberBoxAutomationPeerMethods.IID);
        public static IntPtr GetAbi(IObjectReference value) => value is null ? IntPtr.Zero : MarshalInterfaceHelper<object>.GetAbi(value);
        public static global::Microsoft.UI.Xaml.Automation.Peers.NumberBoxAutomationPeer FromAbi(IntPtr thisPtr) => global::Microsoft.UI.Xaml.Automation.Peers.NumberBoxAutomationPeer.FromAbi(thisPtr);
        public static IntPtr FromManaged(global::Microsoft.UI.Xaml.Automation.Peers.NumberBoxAutomationPeer obj) => obj is null ? IntPtr.Zero : CreateMarshaler2(obj).Detach();
        public static unsafe MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.NumberBoxAutomationPeer>.MarshalerArray CreateMarshalerArray(global::Microsoft.UI.Xaml.Automation.Peers.NumberBoxAutomationPeer[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.NumberBoxAutomationPeer>.CreateMarshalerArray2(array, (o) => CreateMarshaler2(o));
        public static (int length, IntPtr data) GetAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.NumberBoxAutomationPeer>.GetAbiArray(box);
        public static unsafe global::Microsoft.UI.Xaml.Automation.Peers.NumberBoxAutomationPeer[] FromAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.NumberBoxAutomationPeer>.FromAbiArray(box, FromAbi);
        public static void CopyAbiArray(global::Microsoft.UI.Xaml.Automation.Peers.NumberBoxAutomationPeer[] array, object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.NumberBoxAutomationPeer>.CopyAbiArray(array, box, FromAbi);
        public static (int length, IntPtr data) FromManagedArray(global::Microsoft.UI.Xaml.Automation.Peers.NumberBoxAutomationPeer[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.NumberBoxAutomationPeer>.FromManagedArray(array, (o) => FromManaged(o));
        public static void DisposeMarshaler(IObjectReference value) => MarshalInspectable<object>.DisposeMarshaler(value);
        public static void DisposeMarshalerArray(MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.NumberBoxAutomationPeer>.MarshalerArray array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.NumberBoxAutomationPeer>.DisposeMarshalerArray(array);
        public static void DisposeAbi(IntPtr abi) => MarshalInspectable<object>.DisposeAbi(abi);
        public static unsafe void DisposeAbiArray(object box) => MarshalInspectable<object>.DisposeAbiArray(box);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    internal sealed class NumberBoxAutomationPeerRcwFactoryAttribute : global::WinRT.WinRTImplementationTypeRcwFactoryAttribute
    {
        public override object CreateInstance(global::WinRT.IInspectable inspectable)
            => new global::Microsoft.UI.Xaml.Automation.Peers.NumberBoxAutomationPeer(inspectable.ObjRef);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    public struct PasswordBoxAutomationPeer
    {

        public static IObjectReference CreateMarshaler(global::Microsoft.UI.Xaml.Automation.Peers.PasswordBoxAutomationPeer obj) => obj is null ? null : MarshalInspectable<global::Microsoft.UI.Xaml.Automation.Peers.PasswordBoxAutomationPeer>.CreateMarshaler<IUnknownVftbl>(obj, global::ABI.Microsoft.UI.Xaml.Automation.Peers.IPasswordBoxAutomationPeerMethods.IID);
        public static ObjectReferenceValue CreateMarshaler2(global::Microsoft.UI.Xaml.Automation.Peers.PasswordBoxAutomationPeer obj) => MarshalInspectable<object>.CreateMarshaler2(obj, global::ABI.Microsoft.UI.Xaml.Automation.Peers.IPasswordBoxAutomationPeerMethods.IID);
        public static IntPtr GetAbi(IObjectReference value) => value is null ? IntPtr.Zero : MarshalInterfaceHelper<object>.GetAbi(value);
        public static global::Microsoft.UI.Xaml.Automation.Peers.PasswordBoxAutomationPeer FromAbi(IntPtr thisPtr) => global::Microsoft.UI.Xaml.Automation.Peers.PasswordBoxAutomationPeer.FromAbi(thisPtr);
        public static IntPtr FromManaged(global::Microsoft.UI.Xaml.Automation.Peers.PasswordBoxAutomationPeer obj) => obj is null ? IntPtr.Zero : CreateMarshaler2(obj).Detach();
        public static unsafe MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.PasswordBoxAutomationPeer>.MarshalerArray CreateMarshalerArray(global::Microsoft.UI.Xaml.Automation.Peers.PasswordBoxAutomationPeer[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.PasswordBoxAutomationPeer>.CreateMarshalerArray2(array, (o) => CreateMarshaler2(o));
        public static (int length, IntPtr data) GetAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.PasswordBoxAutomationPeer>.GetAbiArray(box);
        public static unsafe global::Microsoft.UI.Xaml.Automation.Peers.PasswordBoxAutomationPeer[] FromAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.PasswordBoxAutomationPeer>.FromAbiArray(box, FromAbi);
        public static void CopyAbiArray(global::Microsoft.UI.Xaml.Automation.Peers.PasswordBoxAutomationPeer[] array, object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.PasswordBoxAutomationPeer>.CopyAbiArray(array, box, FromAbi);
        public static (int length, IntPtr data) FromManagedArray(global::Microsoft.UI.Xaml.Automation.Peers.PasswordBoxAutomationPeer[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.PasswordBoxAutomationPeer>.FromManagedArray(array, (o) => FromManaged(o));
        public static void DisposeMarshaler(IObjectReference value) => MarshalInspectable<object>.DisposeMarshaler(value);
        public static void DisposeMarshalerArray(MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.PasswordBoxAutomationPeer>.MarshalerArray array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.PasswordBoxAutomationPeer>.DisposeMarshalerArray(array);
        public static void DisposeAbi(IntPtr abi) => MarshalInspectable<object>.DisposeAbi(abi);
        public static unsafe void DisposeAbiArray(object box) => MarshalInspectable<object>.DisposeAbiArray(box);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    internal sealed class PasswordBoxAutomationPeerRcwFactoryAttribute : global::WinRT.WinRTImplementationTypeRcwFactoryAttribute
    {
        public override object CreateInstance(global::WinRT.IInspectable inspectable)
            => new global::Microsoft.UI.Xaml.Automation.Peers.PasswordBoxAutomationPeer(inspectable.ObjRef);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    public struct PersonPictureAutomationPeer
    {

        public static IObjectReference CreateMarshaler(global::Microsoft.UI.Xaml.Automation.Peers.PersonPictureAutomationPeer obj) => obj is null ? null : MarshalInspectable<global::Microsoft.UI.Xaml.Automation.Peers.PersonPictureAutomationPeer>.CreateMarshaler<IUnknownVftbl>(obj, global::ABI.Microsoft.UI.Xaml.Automation.Peers.IPersonPictureAutomationPeerMethods.IID);
        public static ObjectReferenceValue CreateMarshaler2(global::Microsoft.UI.Xaml.Automation.Peers.PersonPictureAutomationPeer obj) => MarshalInspectable<object>.CreateMarshaler2(obj, global::ABI.Microsoft.UI.Xaml.Automation.Peers.IPersonPictureAutomationPeerMethods.IID);
        public static IntPtr GetAbi(IObjectReference value) => value is null ? IntPtr.Zero : MarshalInterfaceHelper<object>.GetAbi(value);
        public static global::Microsoft.UI.Xaml.Automation.Peers.PersonPictureAutomationPeer FromAbi(IntPtr thisPtr) => global::Microsoft.UI.Xaml.Automation.Peers.PersonPictureAutomationPeer.FromAbi(thisPtr);
        public static IntPtr FromManaged(global::Microsoft.UI.Xaml.Automation.Peers.PersonPictureAutomationPeer obj) => obj is null ? IntPtr.Zero : CreateMarshaler2(obj).Detach();
        public static unsafe MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.PersonPictureAutomationPeer>.MarshalerArray CreateMarshalerArray(global::Microsoft.UI.Xaml.Automation.Peers.PersonPictureAutomationPeer[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.PersonPictureAutomationPeer>.CreateMarshalerArray2(array, (o) => CreateMarshaler2(o));
        public static (int length, IntPtr data) GetAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.PersonPictureAutomationPeer>.GetAbiArray(box);
        public static unsafe global::Microsoft.UI.Xaml.Automation.Peers.PersonPictureAutomationPeer[] FromAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.PersonPictureAutomationPeer>.FromAbiArray(box, FromAbi);
        public static void CopyAbiArray(global::Microsoft.UI.Xaml.Automation.Peers.PersonPictureAutomationPeer[] array, object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.PersonPictureAutomationPeer>.CopyAbiArray(array, box, FromAbi);
        public static (int length, IntPtr data) FromManagedArray(global::Microsoft.UI.Xaml.Automation.Peers.PersonPictureAutomationPeer[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.PersonPictureAutomationPeer>.FromManagedArray(array, (o) => FromManaged(o));
        public static void DisposeMarshaler(IObjectReference value) => MarshalInspectable<object>.DisposeMarshaler(value);
        public static void DisposeMarshalerArray(MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.PersonPictureAutomationPeer>.MarshalerArray array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.PersonPictureAutomationPeer>.DisposeMarshalerArray(array);
        public static void DisposeAbi(IntPtr abi) => MarshalInspectable<object>.DisposeAbi(abi);
        public static unsafe void DisposeAbiArray(object box) => MarshalInspectable<object>.DisposeAbiArray(box);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    internal sealed class PersonPictureAutomationPeerRcwFactoryAttribute : global::WinRT.WinRTImplementationTypeRcwFactoryAttribute
    {
        public override object CreateInstance(global::WinRT.IInspectable inspectable)
            => new global::Microsoft.UI.Xaml.Automation.Peers.PersonPictureAutomationPeer(inspectable.ObjRef);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    public struct PickerFlyoutPresenterAutomationPeer
    {

        public static IObjectReference CreateMarshaler(global::Microsoft.UI.Xaml.Automation.Peers.PickerFlyoutPresenterAutomationPeer obj) => obj is null ? null : MarshalInspectable<global::Microsoft.UI.Xaml.Automation.Peers.PickerFlyoutPresenterAutomationPeer>.CreateMarshaler<IUnknownVftbl>(obj, global::ABI.Microsoft.UI.Xaml.Automation.Peers.IPickerFlyoutPresenterAutomationPeerMethods.IID);
        public static ObjectReferenceValue CreateMarshaler2(global::Microsoft.UI.Xaml.Automation.Peers.PickerFlyoutPresenterAutomationPeer obj) => MarshalInspectable<object>.CreateMarshaler2(obj, global::ABI.Microsoft.UI.Xaml.Automation.Peers.IPickerFlyoutPresenterAutomationPeerMethods.IID);
        public static IntPtr GetAbi(IObjectReference value) => value is null ? IntPtr.Zero : MarshalInterfaceHelper<object>.GetAbi(value);
        public static global::Microsoft.UI.Xaml.Automation.Peers.PickerFlyoutPresenterAutomationPeer FromAbi(IntPtr thisPtr) => global::Microsoft.UI.Xaml.Automation.Peers.PickerFlyoutPresenterAutomationPeer.FromAbi(thisPtr);
        public static IntPtr FromManaged(global::Microsoft.UI.Xaml.Automation.Peers.PickerFlyoutPresenterAutomationPeer obj) => obj is null ? IntPtr.Zero : CreateMarshaler2(obj).Detach();
        public static unsafe MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.PickerFlyoutPresenterAutomationPeer>.MarshalerArray CreateMarshalerArray(global::Microsoft.UI.Xaml.Automation.Peers.PickerFlyoutPresenterAutomationPeer[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.PickerFlyoutPresenterAutomationPeer>.CreateMarshalerArray2(array, (o) => CreateMarshaler2(o));
        public static (int length, IntPtr data) GetAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.PickerFlyoutPresenterAutomationPeer>.GetAbiArray(box);
        public static unsafe global::Microsoft.UI.Xaml.Automation.Peers.PickerFlyoutPresenterAutomationPeer[] FromAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.PickerFlyoutPresenterAutomationPeer>.FromAbiArray(box, FromAbi);
        public static void CopyAbiArray(global::Microsoft.UI.Xaml.Automation.Peers.PickerFlyoutPresenterAutomationPeer[] array, object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.PickerFlyoutPresenterAutomationPeer>.CopyAbiArray(array, box, FromAbi);
        public static (int length, IntPtr data) FromManagedArray(global::Microsoft.UI.Xaml.Automation.Peers.PickerFlyoutPresenterAutomationPeer[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.PickerFlyoutPresenterAutomationPeer>.FromManagedArray(array, (o) => FromManaged(o));
        public static void DisposeMarshaler(IObjectReference value) => MarshalInspectable<object>.DisposeMarshaler(value);
        public static void DisposeMarshalerArray(MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.PickerFlyoutPresenterAutomationPeer>.MarshalerArray array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.PickerFlyoutPresenterAutomationPeer>.DisposeMarshalerArray(array);
        public static void DisposeAbi(IntPtr abi) => MarshalInspectable<object>.DisposeAbi(abi);
        public static unsafe void DisposeAbiArray(object box) => MarshalInspectable<object>.DisposeAbiArray(box);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    internal sealed class PickerFlyoutPresenterAutomationPeerRcwFactoryAttribute : global::WinRT.WinRTImplementationTypeRcwFactoryAttribute
    {
        public override object CreateInstance(global::WinRT.IInspectable inspectable)
            => new global::Microsoft.UI.Xaml.Automation.Peers.PickerFlyoutPresenterAutomationPeer(inspectable.ObjRef);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    public struct PipsPagerAutomationPeer
    {

        public static IObjectReference CreateMarshaler(global::Microsoft.UI.Xaml.Automation.Peers.PipsPagerAutomationPeer obj) => obj is null ? null : MarshalInspectable<global::Microsoft.UI.Xaml.Automation.Peers.PipsPagerAutomationPeer>.CreateMarshaler<IUnknownVftbl>(obj, global::ABI.Microsoft.UI.Xaml.Automation.Peers.IPipsPagerAutomationPeerMethods.IID);
        public static ObjectReferenceValue CreateMarshaler2(global::Microsoft.UI.Xaml.Automation.Peers.PipsPagerAutomationPeer obj) => MarshalInspectable<object>.CreateMarshaler2(obj, global::ABI.Microsoft.UI.Xaml.Automation.Peers.IPipsPagerAutomationPeerMethods.IID);
        public static IntPtr GetAbi(IObjectReference value) => value is null ? IntPtr.Zero : MarshalInterfaceHelper<object>.GetAbi(value);
        public static global::Microsoft.UI.Xaml.Automation.Peers.PipsPagerAutomationPeer FromAbi(IntPtr thisPtr) => global::Microsoft.UI.Xaml.Automation.Peers.PipsPagerAutomationPeer.FromAbi(thisPtr);
        public static IntPtr FromManaged(global::Microsoft.UI.Xaml.Automation.Peers.PipsPagerAutomationPeer obj) => obj is null ? IntPtr.Zero : CreateMarshaler2(obj).Detach();
        public static unsafe MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.PipsPagerAutomationPeer>.MarshalerArray CreateMarshalerArray(global::Microsoft.UI.Xaml.Automation.Peers.PipsPagerAutomationPeer[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.PipsPagerAutomationPeer>.CreateMarshalerArray2(array, (o) => CreateMarshaler2(o));
        public static (int length, IntPtr data) GetAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.PipsPagerAutomationPeer>.GetAbiArray(box);
        public static unsafe global::Microsoft.UI.Xaml.Automation.Peers.PipsPagerAutomationPeer[] FromAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.PipsPagerAutomationPeer>.FromAbiArray(box, FromAbi);
        public static void CopyAbiArray(global::Microsoft.UI.Xaml.Automation.Peers.PipsPagerAutomationPeer[] array, object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.PipsPagerAutomationPeer>.CopyAbiArray(array, box, FromAbi);
        public static (int length, IntPtr data) FromManagedArray(global::Microsoft.UI.Xaml.Automation.Peers.PipsPagerAutomationPeer[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.PipsPagerAutomationPeer>.FromManagedArray(array, (o) => FromManaged(o));
        public static void DisposeMarshaler(IObjectReference value) => MarshalInspectable<object>.DisposeMarshaler(value);
        public static void DisposeMarshalerArray(MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.PipsPagerAutomationPeer>.MarshalerArray array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.PipsPagerAutomationPeer>.DisposeMarshalerArray(array);
        public static void DisposeAbi(IntPtr abi) => MarshalInspectable<object>.DisposeAbi(abi);
        public static unsafe void DisposeAbiArray(object box) => MarshalInspectable<object>.DisposeAbiArray(box);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    internal sealed class PipsPagerAutomationPeerRcwFactoryAttribute : global::WinRT.WinRTImplementationTypeRcwFactoryAttribute
    {
        public override object CreateInstance(global::WinRT.IInspectable inspectable)
            => new global::Microsoft.UI.Xaml.Automation.Peers.PipsPagerAutomationPeer(inspectable.ObjRef);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    public struct PivotAutomationPeer
    {

        public static IObjectReference CreateMarshaler(global::Microsoft.UI.Xaml.Automation.Peers.PivotAutomationPeer obj) => obj is null ? null : MarshalInspectable<global::Microsoft.UI.Xaml.Automation.Peers.PivotAutomationPeer>.CreateMarshaler<IUnknownVftbl>(obj, global::ABI.Microsoft.UI.Xaml.Automation.Peers.IPivotAutomationPeerMethods.IID);
        public static ObjectReferenceValue CreateMarshaler2(global::Microsoft.UI.Xaml.Automation.Peers.PivotAutomationPeer obj) => MarshalInspectable<object>.CreateMarshaler2(obj, global::ABI.Microsoft.UI.Xaml.Automation.Peers.IPivotAutomationPeerMethods.IID);
        public static IntPtr GetAbi(IObjectReference value) => value is null ? IntPtr.Zero : MarshalInterfaceHelper<object>.GetAbi(value);
        public static global::Microsoft.UI.Xaml.Automation.Peers.PivotAutomationPeer FromAbi(IntPtr thisPtr) => global::Microsoft.UI.Xaml.Automation.Peers.PivotAutomationPeer.FromAbi(thisPtr);
        public static IntPtr FromManaged(global::Microsoft.UI.Xaml.Automation.Peers.PivotAutomationPeer obj) => obj is null ? IntPtr.Zero : CreateMarshaler2(obj).Detach();
        public static unsafe MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.PivotAutomationPeer>.MarshalerArray CreateMarshalerArray(global::Microsoft.UI.Xaml.Automation.Peers.PivotAutomationPeer[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.PivotAutomationPeer>.CreateMarshalerArray2(array, (o) => CreateMarshaler2(o));
        public static (int length, IntPtr data) GetAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.PivotAutomationPeer>.GetAbiArray(box);
        public static unsafe global::Microsoft.UI.Xaml.Automation.Peers.PivotAutomationPeer[] FromAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.PivotAutomationPeer>.FromAbiArray(box, FromAbi);
        public static void CopyAbiArray(global::Microsoft.UI.Xaml.Automation.Peers.PivotAutomationPeer[] array, object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.PivotAutomationPeer>.CopyAbiArray(array, box, FromAbi);
        public static (int length, IntPtr data) FromManagedArray(global::Microsoft.UI.Xaml.Automation.Peers.PivotAutomationPeer[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.PivotAutomationPeer>.FromManagedArray(array, (o) => FromManaged(o));
        public static void DisposeMarshaler(IObjectReference value) => MarshalInspectable<object>.DisposeMarshaler(value);
        public static void DisposeMarshalerArray(MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.PivotAutomationPeer>.MarshalerArray array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.PivotAutomationPeer>.DisposeMarshalerArray(array);
        public static void DisposeAbi(IntPtr abi) => MarshalInspectable<object>.DisposeAbi(abi);
        public static unsafe void DisposeAbiArray(object box) => MarshalInspectable<object>.DisposeAbiArray(box);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    internal sealed class PivotAutomationPeerRcwFactoryAttribute : global::WinRT.WinRTImplementationTypeRcwFactoryAttribute
    {
        public override object CreateInstance(global::WinRT.IInspectable inspectable)
            => new global::Microsoft.UI.Xaml.Automation.Peers.PivotAutomationPeer(inspectable.ObjRef);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    public struct PivotItemAutomationPeer
    {

        public static IObjectReference CreateMarshaler(global::Microsoft.UI.Xaml.Automation.Peers.PivotItemAutomationPeer obj) => obj is null ? null : MarshalInspectable<global::Microsoft.UI.Xaml.Automation.Peers.PivotItemAutomationPeer>.CreateMarshaler<IUnknownVftbl>(obj, global::ABI.Microsoft.UI.Xaml.Automation.Peers.IPivotItemAutomationPeerMethods.IID);
        public static ObjectReferenceValue CreateMarshaler2(global::Microsoft.UI.Xaml.Automation.Peers.PivotItemAutomationPeer obj) => MarshalInspectable<object>.CreateMarshaler2(obj, global::ABI.Microsoft.UI.Xaml.Automation.Peers.IPivotItemAutomationPeerMethods.IID);
        public static IntPtr GetAbi(IObjectReference value) => value is null ? IntPtr.Zero : MarshalInterfaceHelper<object>.GetAbi(value);
        public static global::Microsoft.UI.Xaml.Automation.Peers.PivotItemAutomationPeer FromAbi(IntPtr thisPtr) => global::Microsoft.UI.Xaml.Automation.Peers.PivotItemAutomationPeer.FromAbi(thisPtr);
        public static IntPtr FromManaged(global::Microsoft.UI.Xaml.Automation.Peers.PivotItemAutomationPeer obj) => obj is null ? IntPtr.Zero : CreateMarshaler2(obj).Detach();
        public static unsafe MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.PivotItemAutomationPeer>.MarshalerArray CreateMarshalerArray(global::Microsoft.UI.Xaml.Automation.Peers.PivotItemAutomationPeer[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.PivotItemAutomationPeer>.CreateMarshalerArray2(array, (o) => CreateMarshaler2(o));
        public static (int length, IntPtr data) GetAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.PivotItemAutomationPeer>.GetAbiArray(box);
        public static unsafe global::Microsoft.UI.Xaml.Automation.Peers.PivotItemAutomationPeer[] FromAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.PivotItemAutomationPeer>.FromAbiArray(box, FromAbi);
        public static void CopyAbiArray(global::Microsoft.UI.Xaml.Automation.Peers.PivotItemAutomationPeer[] array, object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.PivotItemAutomationPeer>.CopyAbiArray(array, box, FromAbi);
        public static (int length, IntPtr data) FromManagedArray(global::Microsoft.UI.Xaml.Automation.Peers.PivotItemAutomationPeer[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.PivotItemAutomationPeer>.FromManagedArray(array, (o) => FromManaged(o));
        public static void DisposeMarshaler(IObjectReference value) => MarshalInspectable<object>.DisposeMarshaler(value);
        public static void DisposeMarshalerArray(MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.PivotItemAutomationPeer>.MarshalerArray array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.PivotItemAutomationPeer>.DisposeMarshalerArray(array);
        public static void DisposeAbi(IntPtr abi) => MarshalInspectable<object>.DisposeAbi(abi);
        public static unsafe void DisposeAbiArray(object box) => MarshalInspectable<object>.DisposeAbiArray(box);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    internal sealed class PivotItemAutomationPeerRcwFactoryAttribute : global::WinRT.WinRTImplementationTypeRcwFactoryAttribute
    {
        public override object CreateInstance(global::WinRT.IInspectable inspectable)
            => new global::Microsoft.UI.Xaml.Automation.Peers.PivotItemAutomationPeer(inspectable.ObjRef);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    public struct PivotItemDataAutomationPeer
    {

        public static IObjectReference CreateMarshaler(global::Microsoft.UI.Xaml.Automation.Peers.PivotItemDataAutomationPeer obj) => obj is null ? null : MarshalInspectable<global::Microsoft.UI.Xaml.Automation.Peers.PivotItemDataAutomationPeer>.CreateMarshaler<IUnknownVftbl>(obj, global::ABI.Microsoft.UI.Xaml.Automation.Peers.IPivotItemDataAutomationPeerMethods.IID);
        public static ObjectReferenceValue CreateMarshaler2(global::Microsoft.UI.Xaml.Automation.Peers.PivotItemDataAutomationPeer obj) => MarshalInspectable<object>.CreateMarshaler2(obj, global::ABI.Microsoft.UI.Xaml.Automation.Peers.IPivotItemDataAutomationPeerMethods.IID);
        public static IntPtr GetAbi(IObjectReference value) => value is null ? IntPtr.Zero : MarshalInterfaceHelper<object>.GetAbi(value);
        public static global::Microsoft.UI.Xaml.Automation.Peers.PivotItemDataAutomationPeer FromAbi(IntPtr thisPtr) => global::Microsoft.UI.Xaml.Automation.Peers.PivotItemDataAutomationPeer.FromAbi(thisPtr);
        public static IntPtr FromManaged(global::Microsoft.UI.Xaml.Automation.Peers.PivotItemDataAutomationPeer obj) => obj is null ? IntPtr.Zero : CreateMarshaler2(obj).Detach();
        public static unsafe MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.PivotItemDataAutomationPeer>.MarshalerArray CreateMarshalerArray(global::Microsoft.UI.Xaml.Automation.Peers.PivotItemDataAutomationPeer[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.PivotItemDataAutomationPeer>.CreateMarshalerArray2(array, (o) => CreateMarshaler2(o));
        public static (int length, IntPtr data) GetAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.PivotItemDataAutomationPeer>.GetAbiArray(box);
        public static unsafe global::Microsoft.UI.Xaml.Automation.Peers.PivotItemDataAutomationPeer[] FromAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.PivotItemDataAutomationPeer>.FromAbiArray(box, FromAbi);
        public static void CopyAbiArray(global::Microsoft.UI.Xaml.Automation.Peers.PivotItemDataAutomationPeer[] array, object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.PivotItemDataAutomationPeer>.CopyAbiArray(array, box, FromAbi);
        public static (int length, IntPtr data) FromManagedArray(global::Microsoft.UI.Xaml.Automation.Peers.PivotItemDataAutomationPeer[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.PivotItemDataAutomationPeer>.FromManagedArray(array, (o) => FromManaged(o));
        public static void DisposeMarshaler(IObjectReference value) => MarshalInspectable<object>.DisposeMarshaler(value);
        public static void DisposeMarshalerArray(MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.PivotItemDataAutomationPeer>.MarshalerArray array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.PivotItemDataAutomationPeer>.DisposeMarshalerArray(array);
        public static void DisposeAbi(IntPtr abi) => MarshalInspectable<object>.DisposeAbi(abi);
        public static unsafe void DisposeAbiArray(object box) => MarshalInspectable<object>.DisposeAbiArray(box);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    internal sealed class PivotItemDataAutomationPeerRcwFactoryAttribute : global::WinRT.WinRTImplementationTypeRcwFactoryAttribute
    {
        public override object CreateInstance(global::WinRT.IInspectable inspectable)
            => new global::Microsoft.UI.Xaml.Automation.Peers.PivotItemDataAutomationPeer(inspectable.ObjRef);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    public struct ProgressBarAutomationPeer
    {

        public static IObjectReference CreateMarshaler(global::Microsoft.UI.Xaml.Automation.Peers.ProgressBarAutomationPeer obj) => obj is null ? null : MarshalInspectable<global::Microsoft.UI.Xaml.Automation.Peers.ProgressBarAutomationPeer>.CreateMarshaler<IUnknownVftbl>(obj, global::ABI.Microsoft.UI.Xaml.Automation.Peers.IProgressBarAutomationPeerMethods.IID);
        public static ObjectReferenceValue CreateMarshaler2(global::Microsoft.UI.Xaml.Automation.Peers.ProgressBarAutomationPeer obj) => MarshalInspectable<object>.CreateMarshaler2(obj, global::ABI.Microsoft.UI.Xaml.Automation.Peers.IProgressBarAutomationPeerMethods.IID);
        public static IntPtr GetAbi(IObjectReference value) => value is null ? IntPtr.Zero : MarshalInterfaceHelper<object>.GetAbi(value);
        public static global::Microsoft.UI.Xaml.Automation.Peers.ProgressBarAutomationPeer FromAbi(IntPtr thisPtr) => global::Microsoft.UI.Xaml.Automation.Peers.ProgressBarAutomationPeer.FromAbi(thisPtr);
        public static IntPtr FromManaged(global::Microsoft.UI.Xaml.Automation.Peers.ProgressBarAutomationPeer obj) => obj is null ? IntPtr.Zero : CreateMarshaler2(obj).Detach();
        public static unsafe MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.ProgressBarAutomationPeer>.MarshalerArray CreateMarshalerArray(global::Microsoft.UI.Xaml.Automation.Peers.ProgressBarAutomationPeer[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.ProgressBarAutomationPeer>.CreateMarshalerArray2(array, (o) => CreateMarshaler2(o));
        public static (int length, IntPtr data) GetAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.ProgressBarAutomationPeer>.GetAbiArray(box);
        public static unsafe global::Microsoft.UI.Xaml.Automation.Peers.ProgressBarAutomationPeer[] FromAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.ProgressBarAutomationPeer>.FromAbiArray(box, FromAbi);
        public static void CopyAbiArray(global::Microsoft.UI.Xaml.Automation.Peers.ProgressBarAutomationPeer[] array, object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.ProgressBarAutomationPeer>.CopyAbiArray(array, box, FromAbi);
        public static (int length, IntPtr data) FromManagedArray(global::Microsoft.UI.Xaml.Automation.Peers.ProgressBarAutomationPeer[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.ProgressBarAutomationPeer>.FromManagedArray(array, (o) => FromManaged(o));
        public static void DisposeMarshaler(IObjectReference value) => MarshalInspectable<object>.DisposeMarshaler(value);
        public static void DisposeMarshalerArray(MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.ProgressBarAutomationPeer>.MarshalerArray array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.ProgressBarAutomationPeer>.DisposeMarshalerArray(array);
        public static void DisposeAbi(IntPtr abi) => MarshalInspectable<object>.DisposeAbi(abi);
        public static unsafe void DisposeAbiArray(object box) => MarshalInspectable<object>.DisposeAbiArray(box);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    internal sealed class ProgressBarAutomationPeerRcwFactoryAttribute : global::WinRT.WinRTImplementationTypeRcwFactoryAttribute
    {
        public override object CreateInstance(global::WinRT.IInspectable inspectable)
            => new global::Microsoft.UI.Xaml.Automation.Peers.ProgressBarAutomationPeer(inspectable.ObjRef);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    public struct ProgressRingAutomationPeer
    {

        public static IObjectReference CreateMarshaler(global::Microsoft.UI.Xaml.Automation.Peers.ProgressRingAutomationPeer obj) => obj is null ? null : MarshalInspectable<global::Microsoft.UI.Xaml.Automation.Peers.ProgressRingAutomationPeer>.CreateMarshaler<IUnknownVftbl>(obj, global::ABI.Microsoft.UI.Xaml.Automation.Peers.IProgressRingAutomationPeerMethods.IID);
        public static ObjectReferenceValue CreateMarshaler2(global::Microsoft.UI.Xaml.Automation.Peers.ProgressRingAutomationPeer obj) => MarshalInspectable<object>.CreateMarshaler2(obj, global::ABI.Microsoft.UI.Xaml.Automation.Peers.IProgressRingAutomationPeerMethods.IID);
        public static IntPtr GetAbi(IObjectReference value) => value is null ? IntPtr.Zero : MarshalInterfaceHelper<object>.GetAbi(value);
        public static global::Microsoft.UI.Xaml.Automation.Peers.ProgressRingAutomationPeer FromAbi(IntPtr thisPtr) => global::Microsoft.UI.Xaml.Automation.Peers.ProgressRingAutomationPeer.FromAbi(thisPtr);
        public static IntPtr FromManaged(global::Microsoft.UI.Xaml.Automation.Peers.ProgressRingAutomationPeer obj) => obj is null ? IntPtr.Zero : CreateMarshaler2(obj).Detach();
        public static unsafe MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.ProgressRingAutomationPeer>.MarshalerArray CreateMarshalerArray(global::Microsoft.UI.Xaml.Automation.Peers.ProgressRingAutomationPeer[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.ProgressRingAutomationPeer>.CreateMarshalerArray2(array, (o) => CreateMarshaler2(o));
        public static (int length, IntPtr data) GetAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.ProgressRingAutomationPeer>.GetAbiArray(box);
        public static unsafe global::Microsoft.UI.Xaml.Automation.Peers.ProgressRingAutomationPeer[] FromAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.ProgressRingAutomationPeer>.FromAbiArray(box, FromAbi);
        public static void CopyAbiArray(global::Microsoft.UI.Xaml.Automation.Peers.ProgressRingAutomationPeer[] array, object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.ProgressRingAutomationPeer>.CopyAbiArray(array, box, FromAbi);
        public static (int length, IntPtr data) FromManagedArray(global::Microsoft.UI.Xaml.Automation.Peers.ProgressRingAutomationPeer[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.ProgressRingAutomationPeer>.FromManagedArray(array, (o) => FromManaged(o));
        public static void DisposeMarshaler(IObjectReference value) => MarshalInspectable<object>.DisposeMarshaler(value);
        public static void DisposeMarshalerArray(MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.ProgressRingAutomationPeer>.MarshalerArray array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.ProgressRingAutomationPeer>.DisposeMarshalerArray(array);
        public static void DisposeAbi(IntPtr abi) => MarshalInspectable<object>.DisposeAbi(abi);
        public static unsafe void DisposeAbiArray(object box) => MarshalInspectable<object>.DisposeAbiArray(box);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    internal sealed class ProgressRingAutomationPeerRcwFactoryAttribute : global::WinRT.WinRTImplementationTypeRcwFactoryAttribute
    {
        public override object CreateInstance(global::WinRT.IInspectable inspectable)
            => new global::Microsoft.UI.Xaml.Automation.Peers.ProgressRingAutomationPeer(inspectable.ObjRef);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    public struct RadioButtonAutomationPeer
    {

        public static IObjectReference CreateMarshaler(global::Microsoft.UI.Xaml.Automation.Peers.RadioButtonAutomationPeer obj) => obj is null ? null : MarshalInspectable<global::Microsoft.UI.Xaml.Automation.Peers.RadioButtonAutomationPeer>.CreateMarshaler<IUnknownVftbl>(obj, global::ABI.Microsoft.UI.Xaml.Automation.Peers.IRadioButtonAutomationPeerMethods.IID);
        public static ObjectReferenceValue CreateMarshaler2(global::Microsoft.UI.Xaml.Automation.Peers.RadioButtonAutomationPeer obj) => MarshalInspectable<object>.CreateMarshaler2(obj, global::ABI.Microsoft.UI.Xaml.Automation.Peers.IRadioButtonAutomationPeerMethods.IID);
        public static IntPtr GetAbi(IObjectReference value) => value is null ? IntPtr.Zero : MarshalInterfaceHelper<object>.GetAbi(value);
        public static global::Microsoft.UI.Xaml.Automation.Peers.RadioButtonAutomationPeer FromAbi(IntPtr thisPtr) => global::Microsoft.UI.Xaml.Automation.Peers.RadioButtonAutomationPeer.FromAbi(thisPtr);
        public static IntPtr FromManaged(global::Microsoft.UI.Xaml.Automation.Peers.RadioButtonAutomationPeer obj) => obj is null ? IntPtr.Zero : CreateMarshaler2(obj).Detach();
        public static unsafe MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.RadioButtonAutomationPeer>.MarshalerArray CreateMarshalerArray(global::Microsoft.UI.Xaml.Automation.Peers.RadioButtonAutomationPeer[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.RadioButtonAutomationPeer>.CreateMarshalerArray2(array, (o) => CreateMarshaler2(o));
        public static (int length, IntPtr data) GetAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.RadioButtonAutomationPeer>.GetAbiArray(box);
        public static unsafe global::Microsoft.UI.Xaml.Automation.Peers.RadioButtonAutomationPeer[] FromAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.RadioButtonAutomationPeer>.FromAbiArray(box, FromAbi);
        public static void CopyAbiArray(global::Microsoft.UI.Xaml.Automation.Peers.RadioButtonAutomationPeer[] array, object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.RadioButtonAutomationPeer>.CopyAbiArray(array, box, FromAbi);
        public static (int length, IntPtr data) FromManagedArray(global::Microsoft.UI.Xaml.Automation.Peers.RadioButtonAutomationPeer[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.RadioButtonAutomationPeer>.FromManagedArray(array, (o) => FromManaged(o));
        public static void DisposeMarshaler(IObjectReference value) => MarshalInspectable<object>.DisposeMarshaler(value);
        public static void DisposeMarshalerArray(MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.RadioButtonAutomationPeer>.MarshalerArray array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.RadioButtonAutomationPeer>.DisposeMarshalerArray(array);
        public static void DisposeAbi(IntPtr abi) => MarshalInspectable<object>.DisposeAbi(abi);
        public static unsafe void DisposeAbiArray(object box) => MarshalInspectable<object>.DisposeAbiArray(box);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    internal sealed class RadioButtonAutomationPeerRcwFactoryAttribute : global::WinRT.WinRTImplementationTypeRcwFactoryAttribute
    {
        public override object CreateInstance(global::WinRT.IInspectable inspectable)
            => new global::Microsoft.UI.Xaml.Automation.Peers.RadioButtonAutomationPeer(inspectable.ObjRef);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    public struct RadioButtonsAutomationPeer
    {

        public static IObjectReference CreateMarshaler(global::Microsoft.UI.Xaml.Automation.Peers.RadioButtonsAutomationPeer obj) => obj is null ? null : MarshalInspectable<global::Microsoft.UI.Xaml.Automation.Peers.RadioButtonsAutomationPeer>.CreateMarshaler<IUnknownVftbl>(obj, global::ABI.Microsoft.UI.Xaml.Automation.Peers.IRadioButtonsAutomationPeerMethods.IID);
        public static ObjectReferenceValue CreateMarshaler2(global::Microsoft.UI.Xaml.Automation.Peers.RadioButtonsAutomationPeer obj) => MarshalInspectable<object>.CreateMarshaler2(obj, global::ABI.Microsoft.UI.Xaml.Automation.Peers.IRadioButtonsAutomationPeerMethods.IID);
        public static IntPtr GetAbi(IObjectReference value) => value is null ? IntPtr.Zero : MarshalInterfaceHelper<object>.GetAbi(value);
        public static global::Microsoft.UI.Xaml.Automation.Peers.RadioButtonsAutomationPeer FromAbi(IntPtr thisPtr) => global::Microsoft.UI.Xaml.Automation.Peers.RadioButtonsAutomationPeer.FromAbi(thisPtr);
        public static IntPtr FromManaged(global::Microsoft.UI.Xaml.Automation.Peers.RadioButtonsAutomationPeer obj) => obj is null ? IntPtr.Zero : CreateMarshaler2(obj).Detach();
        public static unsafe MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.RadioButtonsAutomationPeer>.MarshalerArray CreateMarshalerArray(global::Microsoft.UI.Xaml.Automation.Peers.RadioButtonsAutomationPeer[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.RadioButtonsAutomationPeer>.CreateMarshalerArray2(array, (o) => CreateMarshaler2(o));
        public static (int length, IntPtr data) GetAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.RadioButtonsAutomationPeer>.GetAbiArray(box);
        public static unsafe global::Microsoft.UI.Xaml.Automation.Peers.RadioButtonsAutomationPeer[] FromAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.RadioButtonsAutomationPeer>.FromAbiArray(box, FromAbi);
        public static void CopyAbiArray(global::Microsoft.UI.Xaml.Automation.Peers.RadioButtonsAutomationPeer[] array, object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.RadioButtonsAutomationPeer>.CopyAbiArray(array, box, FromAbi);
        public static (int length, IntPtr data) FromManagedArray(global::Microsoft.UI.Xaml.Automation.Peers.RadioButtonsAutomationPeer[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.RadioButtonsAutomationPeer>.FromManagedArray(array, (o) => FromManaged(o));
        public static void DisposeMarshaler(IObjectReference value) => MarshalInspectable<object>.DisposeMarshaler(value);
        public static void DisposeMarshalerArray(MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.RadioButtonsAutomationPeer>.MarshalerArray array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.RadioButtonsAutomationPeer>.DisposeMarshalerArray(array);
        public static void DisposeAbi(IntPtr abi) => MarshalInspectable<object>.DisposeAbi(abi);
        public static unsafe void DisposeAbiArray(object box) => MarshalInspectable<object>.DisposeAbiArray(box);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    internal sealed class RadioButtonsAutomationPeerRcwFactoryAttribute : global::WinRT.WinRTImplementationTypeRcwFactoryAttribute
    {
        public override object CreateInstance(global::WinRT.IInspectable inspectable)
            => new global::Microsoft.UI.Xaml.Automation.Peers.RadioButtonsAutomationPeer(inspectable.ObjRef);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    public struct RangeBaseAutomationPeer
    {

        public static IObjectReference CreateMarshaler(global::Microsoft.UI.Xaml.Automation.Peers.RangeBaseAutomationPeer obj) => obj is null ? null : MarshalInspectable<global::Microsoft.UI.Xaml.Automation.Peers.RangeBaseAutomationPeer>.CreateMarshaler<IUnknownVftbl>(obj, global::ABI.Microsoft.UI.Xaml.Automation.Peers.IRangeBaseAutomationPeerMethods.IID);
        public static ObjectReferenceValue CreateMarshaler2(global::Microsoft.UI.Xaml.Automation.Peers.RangeBaseAutomationPeer obj) => MarshalInspectable<object>.CreateMarshaler2(obj, global::ABI.Microsoft.UI.Xaml.Automation.Peers.IRangeBaseAutomationPeerMethods.IID);
        public static IntPtr GetAbi(IObjectReference value) => value is null ? IntPtr.Zero : MarshalInterfaceHelper<object>.GetAbi(value);
        public static global::Microsoft.UI.Xaml.Automation.Peers.RangeBaseAutomationPeer FromAbi(IntPtr thisPtr) => global::Microsoft.UI.Xaml.Automation.Peers.RangeBaseAutomationPeer.FromAbi(thisPtr);
        public static IntPtr FromManaged(global::Microsoft.UI.Xaml.Automation.Peers.RangeBaseAutomationPeer obj) => obj is null ? IntPtr.Zero : CreateMarshaler2(obj).Detach();
        public static unsafe MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.RangeBaseAutomationPeer>.MarshalerArray CreateMarshalerArray(global::Microsoft.UI.Xaml.Automation.Peers.RangeBaseAutomationPeer[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.RangeBaseAutomationPeer>.CreateMarshalerArray2(array, (o) => CreateMarshaler2(o));
        public static (int length, IntPtr data) GetAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.RangeBaseAutomationPeer>.GetAbiArray(box);
        public static unsafe global::Microsoft.UI.Xaml.Automation.Peers.RangeBaseAutomationPeer[] FromAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.RangeBaseAutomationPeer>.FromAbiArray(box, FromAbi);
        public static void CopyAbiArray(global::Microsoft.UI.Xaml.Automation.Peers.RangeBaseAutomationPeer[] array, object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.RangeBaseAutomationPeer>.CopyAbiArray(array, box, FromAbi);
        public static (int length, IntPtr data) FromManagedArray(global::Microsoft.UI.Xaml.Automation.Peers.RangeBaseAutomationPeer[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.RangeBaseAutomationPeer>.FromManagedArray(array, (o) => FromManaged(o));
        public static void DisposeMarshaler(IObjectReference value) => MarshalInspectable<object>.DisposeMarshaler(value);
        public static void DisposeMarshalerArray(MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.RangeBaseAutomationPeer>.MarshalerArray array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.RangeBaseAutomationPeer>.DisposeMarshalerArray(array);
        public static void DisposeAbi(IntPtr abi) => MarshalInspectable<object>.DisposeAbi(abi);
        public static unsafe void DisposeAbiArray(object box) => MarshalInspectable<object>.DisposeAbiArray(box);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    internal sealed class RangeBaseAutomationPeerRcwFactoryAttribute : global::WinRT.WinRTImplementationTypeRcwFactoryAttribute
    {
        public override object CreateInstance(global::WinRT.IInspectable inspectable)
            => new global::Microsoft.UI.Xaml.Automation.Peers.RangeBaseAutomationPeer(inspectable.ObjRef);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    public struct RatingControlAutomationPeer
    {

        public static IObjectReference CreateMarshaler(global::Microsoft.UI.Xaml.Automation.Peers.RatingControlAutomationPeer obj) => obj is null ? null : MarshalInspectable<global::Microsoft.UI.Xaml.Automation.Peers.RatingControlAutomationPeer>.CreateMarshaler<IUnknownVftbl>(obj, global::ABI.Microsoft.UI.Xaml.Automation.Peers.IRatingControlAutomationPeerMethods.IID);
        public static ObjectReferenceValue CreateMarshaler2(global::Microsoft.UI.Xaml.Automation.Peers.RatingControlAutomationPeer obj) => MarshalInspectable<object>.CreateMarshaler2(obj, global::ABI.Microsoft.UI.Xaml.Automation.Peers.IRatingControlAutomationPeerMethods.IID);
        public static IntPtr GetAbi(IObjectReference value) => value is null ? IntPtr.Zero : MarshalInterfaceHelper<object>.GetAbi(value);
        public static global::Microsoft.UI.Xaml.Automation.Peers.RatingControlAutomationPeer FromAbi(IntPtr thisPtr) => global::Microsoft.UI.Xaml.Automation.Peers.RatingControlAutomationPeer.FromAbi(thisPtr);
        public static IntPtr FromManaged(global::Microsoft.UI.Xaml.Automation.Peers.RatingControlAutomationPeer obj) => obj is null ? IntPtr.Zero : CreateMarshaler2(obj).Detach();
        public static unsafe MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.RatingControlAutomationPeer>.MarshalerArray CreateMarshalerArray(global::Microsoft.UI.Xaml.Automation.Peers.RatingControlAutomationPeer[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.RatingControlAutomationPeer>.CreateMarshalerArray2(array, (o) => CreateMarshaler2(o));
        public static (int length, IntPtr data) GetAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.RatingControlAutomationPeer>.GetAbiArray(box);
        public static unsafe global::Microsoft.UI.Xaml.Automation.Peers.RatingControlAutomationPeer[] FromAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.RatingControlAutomationPeer>.FromAbiArray(box, FromAbi);
        public static void CopyAbiArray(global::Microsoft.UI.Xaml.Automation.Peers.RatingControlAutomationPeer[] array, object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.RatingControlAutomationPeer>.CopyAbiArray(array, box, FromAbi);
        public static (int length, IntPtr data) FromManagedArray(global::Microsoft.UI.Xaml.Automation.Peers.RatingControlAutomationPeer[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.RatingControlAutomationPeer>.FromManagedArray(array, (o) => FromManaged(o));
        public static void DisposeMarshaler(IObjectReference value) => MarshalInspectable<object>.DisposeMarshaler(value);
        public static void DisposeMarshalerArray(MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.RatingControlAutomationPeer>.MarshalerArray array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.RatingControlAutomationPeer>.DisposeMarshalerArray(array);
        public static void DisposeAbi(IntPtr abi) => MarshalInspectable<object>.DisposeAbi(abi);
        public static unsafe void DisposeAbiArray(object box) => MarshalInspectable<object>.DisposeAbiArray(box);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    internal sealed class RatingControlAutomationPeerRcwFactoryAttribute : global::WinRT.WinRTImplementationTypeRcwFactoryAttribute
    {
        public override object CreateInstance(global::WinRT.IInspectable inspectable)
            => new global::Microsoft.UI.Xaml.Automation.Peers.RatingControlAutomationPeer(inspectable.ObjRef);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    public struct RepeatButtonAutomationPeer
    {

        public static IObjectReference CreateMarshaler(global::Microsoft.UI.Xaml.Automation.Peers.RepeatButtonAutomationPeer obj) => obj is null ? null : MarshalInspectable<global::Microsoft.UI.Xaml.Automation.Peers.RepeatButtonAutomationPeer>.CreateMarshaler<IUnknownVftbl>(obj, global::ABI.Microsoft.UI.Xaml.Automation.Peers.IRepeatButtonAutomationPeerMethods.IID);
        public static ObjectReferenceValue CreateMarshaler2(global::Microsoft.UI.Xaml.Automation.Peers.RepeatButtonAutomationPeer obj) => MarshalInspectable<object>.CreateMarshaler2(obj, global::ABI.Microsoft.UI.Xaml.Automation.Peers.IRepeatButtonAutomationPeerMethods.IID);
        public static IntPtr GetAbi(IObjectReference value) => value is null ? IntPtr.Zero : MarshalInterfaceHelper<object>.GetAbi(value);
        public static global::Microsoft.UI.Xaml.Automation.Peers.RepeatButtonAutomationPeer FromAbi(IntPtr thisPtr) => global::Microsoft.UI.Xaml.Automation.Peers.RepeatButtonAutomationPeer.FromAbi(thisPtr);
        public static IntPtr FromManaged(global::Microsoft.UI.Xaml.Automation.Peers.RepeatButtonAutomationPeer obj) => obj is null ? IntPtr.Zero : CreateMarshaler2(obj).Detach();
        public static unsafe MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.RepeatButtonAutomationPeer>.MarshalerArray CreateMarshalerArray(global::Microsoft.UI.Xaml.Automation.Peers.RepeatButtonAutomationPeer[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.RepeatButtonAutomationPeer>.CreateMarshalerArray2(array, (o) => CreateMarshaler2(o));
        public static (int length, IntPtr data) GetAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.RepeatButtonAutomationPeer>.GetAbiArray(box);
        public static unsafe global::Microsoft.UI.Xaml.Automation.Peers.RepeatButtonAutomationPeer[] FromAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.RepeatButtonAutomationPeer>.FromAbiArray(box, FromAbi);
        public static void CopyAbiArray(global::Microsoft.UI.Xaml.Automation.Peers.RepeatButtonAutomationPeer[] array, object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.RepeatButtonAutomationPeer>.CopyAbiArray(array, box, FromAbi);
        public static (int length, IntPtr data) FromManagedArray(global::Microsoft.UI.Xaml.Automation.Peers.RepeatButtonAutomationPeer[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.RepeatButtonAutomationPeer>.FromManagedArray(array, (o) => FromManaged(o));
        public static void DisposeMarshaler(IObjectReference value) => MarshalInspectable<object>.DisposeMarshaler(value);
        public static void DisposeMarshalerArray(MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.RepeatButtonAutomationPeer>.MarshalerArray array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.RepeatButtonAutomationPeer>.DisposeMarshalerArray(array);
        public static void DisposeAbi(IntPtr abi) => MarshalInspectable<object>.DisposeAbi(abi);
        public static unsafe void DisposeAbiArray(object box) => MarshalInspectable<object>.DisposeAbiArray(box);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    internal sealed class RepeatButtonAutomationPeerRcwFactoryAttribute : global::WinRT.WinRTImplementationTypeRcwFactoryAttribute
    {
        public override object CreateInstance(global::WinRT.IInspectable inspectable)
            => new global::Microsoft.UI.Xaml.Automation.Peers.RepeatButtonAutomationPeer(inspectable.ObjRef);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    public struct RepeaterAutomationPeer
    {

        public static IObjectReference CreateMarshaler(global::Microsoft.UI.Xaml.Automation.Peers.RepeaterAutomationPeer obj) => obj is null ? null : MarshalInspectable<global::Microsoft.UI.Xaml.Automation.Peers.RepeaterAutomationPeer>.CreateMarshaler<IUnknownVftbl>(obj, global::ABI.Microsoft.UI.Xaml.Automation.Peers.IRepeaterAutomationPeerMethods.IID);
        public static ObjectReferenceValue CreateMarshaler2(global::Microsoft.UI.Xaml.Automation.Peers.RepeaterAutomationPeer obj) => MarshalInspectable<object>.CreateMarshaler2(obj, global::ABI.Microsoft.UI.Xaml.Automation.Peers.IRepeaterAutomationPeerMethods.IID);
        public static IntPtr GetAbi(IObjectReference value) => value is null ? IntPtr.Zero : MarshalInterfaceHelper<object>.GetAbi(value);
        public static global::Microsoft.UI.Xaml.Automation.Peers.RepeaterAutomationPeer FromAbi(IntPtr thisPtr) => global::Microsoft.UI.Xaml.Automation.Peers.RepeaterAutomationPeer.FromAbi(thisPtr);
        public static IntPtr FromManaged(global::Microsoft.UI.Xaml.Automation.Peers.RepeaterAutomationPeer obj) => obj is null ? IntPtr.Zero : CreateMarshaler2(obj).Detach();
        public static unsafe MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.RepeaterAutomationPeer>.MarshalerArray CreateMarshalerArray(global::Microsoft.UI.Xaml.Automation.Peers.RepeaterAutomationPeer[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.RepeaterAutomationPeer>.CreateMarshalerArray2(array, (o) => CreateMarshaler2(o));
        public static (int length, IntPtr data) GetAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.RepeaterAutomationPeer>.GetAbiArray(box);
        public static unsafe global::Microsoft.UI.Xaml.Automation.Peers.RepeaterAutomationPeer[] FromAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.RepeaterAutomationPeer>.FromAbiArray(box, FromAbi);
        public static void CopyAbiArray(global::Microsoft.UI.Xaml.Automation.Peers.RepeaterAutomationPeer[] array, object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.RepeaterAutomationPeer>.CopyAbiArray(array, box, FromAbi);
        public static (int length, IntPtr data) FromManagedArray(global::Microsoft.UI.Xaml.Automation.Peers.RepeaterAutomationPeer[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.RepeaterAutomationPeer>.FromManagedArray(array, (o) => FromManaged(o));
        public static void DisposeMarshaler(IObjectReference value) => MarshalInspectable<object>.DisposeMarshaler(value);
        public static void DisposeMarshalerArray(MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.RepeaterAutomationPeer>.MarshalerArray array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.RepeaterAutomationPeer>.DisposeMarshalerArray(array);
        public static void DisposeAbi(IntPtr abi) => MarshalInspectable<object>.DisposeAbi(abi);
        public static unsafe void DisposeAbiArray(object box) => MarshalInspectable<object>.DisposeAbiArray(box);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    internal sealed class RepeaterAutomationPeerRcwFactoryAttribute : global::WinRT.WinRTImplementationTypeRcwFactoryAttribute
    {
        public override object CreateInstance(global::WinRT.IInspectable inspectable)
            => new global::Microsoft.UI.Xaml.Automation.Peers.RepeaterAutomationPeer(inspectable.ObjRef);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    public struct RichEditBoxAutomationPeer
    {

        public static IObjectReference CreateMarshaler(global::Microsoft.UI.Xaml.Automation.Peers.RichEditBoxAutomationPeer obj) => obj is null ? null : MarshalInspectable<global::Microsoft.UI.Xaml.Automation.Peers.RichEditBoxAutomationPeer>.CreateMarshaler<IUnknownVftbl>(obj, global::ABI.Microsoft.UI.Xaml.Automation.Peers.IRichEditBoxAutomationPeerMethods.IID);
        public static ObjectReferenceValue CreateMarshaler2(global::Microsoft.UI.Xaml.Automation.Peers.RichEditBoxAutomationPeer obj) => MarshalInspectable<object>.CreateMarshaler2(obj, global::ABI.Microsoft.UI.Xaml.Automation.Peers.IRichEditBoxAutomationPeerMethods.IID);
        public static IntPtr GetAbi(IObjectReference value) => value is null ? IntPtr.Zero : MarshalInterfaceHelper<object>.GetAbi(value);
        public static global::Microsoft.UI.Xaml.Automation.Peers.RichEditBoxAutomationPeer FromAbi(IntPtr thisPtr) => global::Microsoft.UI.Xaml.Automation.Peers.RichEditBoxAutomationPeer.FromAbi(thisPtr);
        public static IntPtr FromManaged(global::Microsoft.UI.Xaml.Automation.Peers.RichEditBoxAutomationPeer obj) => obj is null ? IntPtr.Zero : CreateMarshaler2(obj).Detach();
        public static unsafe MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.RichEditBoxAutomationPeer>.MarshalerArray CreateMarshalerArray(global::Microsoft.UI.Xaml.Automation.Peers.RichEditBoxAutomationPeer[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.RichEditBoxAutomationPeer>.CreateMarshalerArray2(array, (o) => CreateMarshaler2(o));
        public static (int length, IntPtr data) GetAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.RichEditBoxAutomationPeer>.GetAbiArray(box);
        public static unsafe global::Microsoft.UI.Xaml.Automation.Peers.RichEditBoxAutomationPeer[] FromAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.RichEditBoxAutomationPeer>.FromAbiArray(box, FromAbi);
        public static void CopyAbiArray(global::Microsoft.UI.Xaml.Automation.Peers.RichEditBoxAutomationPeer[] array, object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.RichEditBoxAutomationPeer>.CopyAbiArray(array, box, FromAbi);
        public static (int length, IntPtr data) FromManagedArray(global::Microsoft.UI.Xaml.Automation.Peers.RichEditBoxAutomationPeer[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.RichEditBoxAutomationPeer>.FromManagedArray(array, (o) => FromManaged(o));
        public static void DisposeMarshaler(IObjectReference value) => MarshalInspectable<object>.DisposeMarshaler(value);
        public static void DisposeMarshalerArray(MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.RichEditBoxAutomationPeer>.MarshalerArray array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.RichEditBoxAutomationPeer>.DisposeMarshalerArray(array);
        public static void DisposeAbi(IntPtr abi) => MarshalInspectable<object>.DisposeAbi(abi);
        public static unsafe void DisposeAbiArray(object box) => MarshalInspectable<object>.DisposeAbiArray(box);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    internal sealed class RichEditBoxAutomationPeerRcwFactoryAttribute : global::WinRT.WinRTImplementationTypeRcwFactoryAttribute
    {
        public override object CreateInstance(global::WinRT.IInspectable inspectable)
            => new global::Microsoft.UI.Xaml.Automation.Peers.RichEditBoxAutomationPeer(inspectable.ObjRef);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    public struct RichTextBlockAutomationPeer
    {

        public static IObjectReference CreateMarshaler(global::Microsoft.UI.Xaml.Automation.Peers.RichTextBlockAutomationPeer obj) => obj is null ? null : MarshalInspectable<global::Microsoft.UI.Xaml.Automation.Peers.RichTextBlockAutomationPeer>.CreateMarshaler<IUnknownVftbl>(obj, global::ABI.Microsoft.UI.Xaml.Automation.Peers.IRichTextBlockAutomationPeerMethods.IID);
        public static ObjectReferenceValue CreateMarshaler2(global::Microsoft.UI.Xaml.Automation.Peers.RichTextBlockAutomationPeer obj) => MarshalInspectable<object>.CreateMarshaler2(obj, global::ABI.Microsoft.UI.Xaml.Automation.Peers.IRichTextBlockAutomationPeerMethods.IID);
        public static IntPtr GetAbi(IObjectReference value) => value is null ? IntPtr.Zero : MarshalInterfaceHelper<object>.GetAbi(value);
        public static global::Microsoft.UI.Xaml.Automation.Peers.RichTextBlockAutomationPeer FromAbi(IntPtr thisPtr) => global::Microsoft.UI.Xaml.Automation.Peers.RichTextBlockAutomationPeer.FromAbi(thisPtr);
        public static IntPtr FromManaged(global::Microsoft.UI.Xaml.Automation.Peers.RichTextBlockAutomationPeer obj) => obj is null ? IntPtr.Zero : CreateMarshaler2(obj).Detach();
        public static unsafe MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.RichTextBlockAutomationPeer>.MarshalerArray CreateMarshalerArray(global::Microsoft.UI.Xaml.Automation.Peers.RichTextBlockAutomationPeer[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.RichTextBlockAutomationPeer>.CreateMarshalerArray2(array, (o) => CreateMarshaler2(o));
        public static (int length, IntPtr data) GetAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.RichTextBlockAutomationPeer>.GetAbiArray(box);
        public static unsafe global::Microsoft.UI.Xaml.Automation.Peers.RichTextBlockAutomationPeer[] FromAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.RichTextBlockAutomationPeer>.FromAbiArray(box, FromAbi);
        public static void CopyAbiArray(global::Microsoft.UI.Xaml.Automation.Peers.RichTextBlockAutomationPeer[] array, object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.RichTextBlockAutomationPeer>.CopyAbiArray(array, box, FromAbi);
        public static (int length, IntPtr data) FromManagedArray(global::Microsoft.UI.Xaml.Automation.Peers.RichTextBlockAutomationPeer[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.RichTextBlockAutomationPeer>.FromManagedArray(array, (o) => FromManaged(o));
        public static void DisposeMarshaler(IObjectReference value) => MarshalInspectable<object>.DisposeMarshaler(value);
        public static void DisposeMarshalerArray(MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.RichTextBlockAutomationPeer>.MarshalerArray array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.RichTextBlockAutomationPeer>.DisposeMarshalerArray(array);
        public static void DisposeAbi(IntPtr abi) => MarshalInspectable<object>.DisposeAbi(abi);
        public static unsafe void DisposeAbiArray(object box) => MarshalInspectable<object>.DisposeAbiArray(box);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    internal sealed class RichTextBlockAutomationPeerRcwFactoryAttribute : global::WinRT.WinRTImplementationTypeRcwFactoryAttribute
    {
        public override object CreateInstance(global::WinRT.IInspectable inspectable)
            => new global::Microsoft.UI.Xaml.Automation.Peers.RichTextBlockAutomationPeer(inspectable.ObjRef);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    public struct RichTextBlockOverflowAutomationPeer
    {

        public static IObjectReference CreateMarshaler(global::Microsoft.UI.Xaml.Automation.Peers.RichTextBlockOverflowAutomationPeer obj) => obj is null ? null : MarshalInspectable<global::Microsoft.UI.Xaml.Automation.Peers.RichTextBlockOverflowAutomationPeer>.CreateMarshaler<IUnknownVftbl>(obj, global::ABI.Microsoft.UI.Xaml.Automation.Peers.IRichTextBlockOverflowAutomationPeerMethods.IID);
        public static ObjectReferenceValue CreateMarshaler2(global::Microsoft.UI.Xaml.Automation.Peers.RichTextBlockOverflowAutomationPeer obj) => MarshalInspectable<object>.CreateMarshaler2(obj, global::ABI.Microsoft.UI.Xaml.Automation.Peers.IRichTextBlockOverflowAutomationPeerMethods.IID);
        public static IntPtr GetAbi(IObjectReference value) => value is null ? IntPtr.Zero : MarshalInterfaceHelper<object>.GetAbi(value);
        public static global::Microsoft.UI.Xaml.Automation.Peers.RichTextBlockOverflowAutomationPeer FromAbi(IntPtr thisPtr) => global::Microsoft.UI.Xaml.Automation.Peers.RichTextBlockOverflowAutomationPeer.FromAbi(thisPtr);
        public static IntPtr FromManaged(global::Microsoft.UI.Xaml.Automation.Peers.RichTextBlockOverflowAutomationPeer obj) => obj is null ? IntPtr.Zero : CreateMarshaler2(obj).Detach();
        public static unsafe MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.RichTextBlockOverflowAutomationPeer>.MarshalerArray CreateMarshalerArray(global::Microsoft.UI.Xaml.Automation.Peers.RichTextBlockOverflowAutomationPeer[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.RichTextBlockOverflowAutomationPeer>.CreateMarshalerArray2(array, (o) => CreateMarshaler2(o));
        public static (int length, IntPtr data) GetAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.RichTextBlockOverflowAutomationPeer>.GetAbiArray(box);
        public static unsafe global::Microsoft.UI.Xaml.Automation.Peers.RichTextBlockOverflowAutomationPeer[] FromAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.RichTextBlockOverflowAutomationPeer>.FromAbiArray(box, FromAbi);
        public static void CopyAbiArray(global::Microsoft.UI.Xaml.Automation.Peers.RichTextBlockOverflowAutomationPeer[] array, object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.RichTextBlockOverflowAutomationPeer>.CopyAbiArray(array, box, FromAbi);
        public static (int length, IntPtr data) FromManagedArray(global::Microsoft.UI.Xaml.Automation.Peers.RichTextBlockOverflowAutomationPeer[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.RichTextBlockOverflowAutomationPeer>.FromManagedArray(array, (o) => FromManaged(o));
        public static void DisposeMarshaler(IObjectReference value) => MarshalInspectable<object>.DisposeMarshaler(value);
        public static void DisposeMarshalerArray(MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.RichTextBlockOverflowAutomationPeer>.MarshalerArray array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.RichTextBlockOverflowAutomationPeer>.DisposeMarshalerArray(array);
        public static void DisposeAbi(IntPtr abi) => MarshalInspectable<object>.DisposeAbi(abi);
        public static unsafe void DisposeAbiArray(object box) => MarshalInspectable<object>.DisposeAbiArray(box);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    internal sealed class RichTextBlockOverflowAutomationPeerRcwFactoryAttribute : global::WinRT.WinRTImplementationTypeRcwFactoryAttribute
    {
        public override object CreateInstance(global::WinRT.IInspectable inspectable)
            => new global::Microsoft.UI.Xaml.Automation.Peers.RichTextBlockOverflowAutomationPeer(inspectable.ObjRef);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    public struct ScrollBarAutomationPeer
    {

        public static IObjectReference CreateMarshaler(global::Microsoft.UI.Xaml.Automation.Peers.ScrollBarAutomationPeer obj) => obj is null ? null : MarshalInspectable<global::Microsoft.UI.Xaml.Automation.Peers.ScrollBarAutomationPeer>.CreateMarshaler<IUnknownVftbl>(obj, global::ABI.Microsoft.UI.Xaml.Automation.Peers.IScrollBarAutomationPeerMethods.IID);
        public static ObjectReferenceValue CreateMarshaler2(global::Microsoft.UI.Xaml.Automation.Peers.ScrollBarAutomationPeer obj) => MarshalInspectable<object>.CreateMarshaler2(obj, global::ABI.Microsoft.UI.Xaml.Automation.Peers.IScrollBarAutomationPeerMethods.IID);
        public static IntPtr GetAbi(IObjectReference value) => value is null ? IntPtr.Zero : MarshalInterfaceHelper<object>.GetAbi(value);
        public static global::Microsoft.UI.Xaml.Automation.Peers.ScrollBarAutomationPeer FromAbi(IntPtr thisPtr) => global::Microsoft.UI.Xaml.Automation.Peers.ScrollBarAutomationPeer.FromAbi(thisPtr);
        public static IntPtr FromManaged(global::Microsoft.UI.Xaml.Automation.Peers.ScrollBarAutomationPeer obj) => obj is null ? IntPtr.Zero : CreateMarshaler2(obj).Detach();
        public static unsafe MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.ScrollBarAutomationPeer>.MarshalerArray CreateMarshalerArray(global::Microsoft.UI.Xaml.Automation.Peers.ScrollBarAutomationPeer[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.ScrollBarAutomationPeer>.CreateMarshalerArray2(array, (o) => CreateMarshaler2(o));
        public static (int length, IntPtr data) GetAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.ScrollBarAutomationPeer>.GetAbiArray(box);
        public static unsafe global::Microsoft.UI.Xaml.Automation.Peers.ScrollBarAutomationPeer[] FromAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.ScrollBarAutomationPeer>.FromAbiArray(box, FromAbi);
        public static void CopyAbiArray(global::Microsoft.UI.Xaml.Automation.Peers.ScrollBarAutomationPeer[] array, object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.ScrollBarAutomationPeer>.CopyAbiArray(array, box, FromAbi);
        public static (int length, IntPtr data) FromManagedArray(global::Microsoft.UI.Xaml.Automation.Peers.ScrollBarAutomationPeer[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.ScrollBarAutomationPeer>.FromManagedArray(array, (o) => FromManaged(o));
        public static void DisposeMarshaler(IObjectReference value) => MarshalInspectable<object>.DisposeMarshaler(value);
        public static void DisposeMarshalerArray(MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.ScrollBarAutomationPeer>.MarshalerArray array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.ScrollBarAutomationPeer>.DisposeMarshalerArray(array);
        public static void DisposeAbi(IntPtr abi) => MarshalInspectable<object>.DisposeAbi(abi);
        public static unsafe void DisposeAbiArray(object box) => MarshalInspectable<object>.DisposeAbiArray(box);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    internal sealed class ScrollBarAutomationPeerRcwFactoryAttribute : global::WinRT.WinRTImplementationTypeRcwFactoryAttribute
    {
        public override object CreateInstance(global::WinRT.IInspectable inspectable)
            => new global::Microsoft.UI.Xaml.Automation.Peers.ScrollBarAutomationPeer(inspectable.ObjRef);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    public struct ScrollPresenterAutomationPeer
    {

        public static IObjectReference CreateMarshaler(global::Microsoft.UI.Xaml.Automation.Peers.ScrollPresenterAutomationPeer obj) => obj is null ? null : MarshalInspectable<global::Microsoft.UI.Xaml.Automation.Peers.ScrollPresenterAutomationPeer>.CreateMarshaler<IUnknownVftbl>(obj, global::ABI.Microsoft.UI.Xaml.Automation.Peers.IScrollPresenterAutomationPeerMethods.IID);
        public static ObjectReferenceValue CreateMarshaler2(global::Microsoft.UI.Xaml.Automation.Peers.ScrollPresenterAutomationPeer obj) => MarshalInspectable<object>.CreateMarshaler2(obj, global::ABI.Microsoft.UI.Xaml.Automation.Peers.IScrollPresenterAutomationPeerMethods.IID);
        public static IntPtr GetAbi(IObjectReference value) => value is null ? IntPtr.Zero : MarshalInterfaceHelper<object>.GetAbi(value);
        public static global::Microsoft.UI.Xaml.Automation.Peers.ScrollPresenterAutomationPeer FromAbi(IntPtr thisPtr) => global::Microsoft.UI.Xaml.Automation.Peers.ScrollPresenterAutomationPeer.FromAbi(thisPtr);
        public static IntPtr FromManaged(global::Microsoft.UI.Xaml.Automation.Peers.ScrollPresenterAutomationPeer obj) => obj is null ? IntPtr.Zero : CreateMarshaler2(obj).Detach();
        public static unsafe MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.ScrollPresenterAutomationPeer>.MarshalerArray CreateMarshalerArray(global::Microsoft.UI.Xaml.Automation.Peers.ScrollPresenterAutomationPeer[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.ScrollPresenterAutomationPeer>.CreateMarshalerArray2(array, (o) => CreateMarshaler2(o));
        public static (int length, IntPtr data) GetAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.ScrollPresenterAutomationPeer>.GetAbiArray(box);
        public static unsafe global::Microsoft.UI.Xaml.Automation.Peers.ScrollPresenterAutomationPeer[] FromAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.ScrollPresenterAutomationPeer>.FromAbiArray(box, FromAbi);
        public static void CopyAbiArray(global::Microsoft.UI.Xaml.Automation.Peers.ScrollPresenterAutomationPeer[] array, object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.ScrollPresenterAutomationPeer>.CopyAbiArray(array, box, FromAbi);
        public static (int length, IntPtr data) FromManagedArray(global::Microsoft.UI.Xaml.Automation.Peers.ScrollPresenterAutomationPeer[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.ScrollPresenterAutomationPeer>.FromManagedArray(array, (o) => FromManaged(o));
        public static void DisposeMarshaler(IObjectReference value) => MarshalInspectable<object>.DisposeMarshaler(value);
        public static void DisposeMarshalerArray(MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.ScrollPresenterAutomationPeer>.MarshalerArray array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.ScrollPresenterAutomationPeer>.DisposeMarshalerArray(array);
        public static void DisposeAbi(IntPtr abi) => MarshalInspectable<object>.DisposeAbi(abi);
        public static unsafe void DisposeAbiArray(object box) => MarshalInspectable<object>.DisposeAbiArray(box);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    internal sealed class ScrollPresenterAutomationPeerRcwFactoryAttribute : global::WinRT.WinRTImplementationTypeRcwFactoryAttribute
    {
        public override object CreateInstance(global::WinRT.IInspectable inspectable)
            => new global::Microsoft.UI.Xaml.Automation.Peers.ScrollPresenterAutomationPeer(inspectable.ObjRef);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    public struct ScrollViewerAutomationPeer
    {

        public static IObjectReference CreateMarshaler(global::Microsoft.UI.Xaml.Automation.Peers.ScrollViewerAutomationPeer obj) => obj is null ? null : MarshalInspectable<global::Microsoft.UI.Xaml.Automation.Peers.ScrollViewerAutomationPeer>.CreateMarshaler<IUnknownVftbl>(obj, global::ABI.Microsoft.UI.Xaml.Automation.Peers.IScrollViewerAutomationPeerMethods.IID);
        public static ObjectReferenceValue CreateMarshaler2(global::Microsoft.UI.Xaml.Automation.Peers.ScrollViewerAutomationPeer obj) => MarshalInspectable<object>.CreateMarshaler2(obj, global::ABI.Microsoft.UI.Xaml.Automation.Peers.IScrollViewerAutomationPeerMethods.IID);
        public static IntPtr GetAbi(IObjectReference value) => value is null ? IntPtr.Zero : MarshalInterfaceHelper<object>.GetAbi(value);
        public static global::Microsoft.UI.Xaml.Automation.Peers.ScrollViewerAutomationPeer FromAbi(IntPtr thisPtr) => global::Microsoft.UI.Xaml.Automation.Peers.ScrollViewerAutomationPeer.FromAbi(thisPtr);
        public static IntPtr FromManaged(global::Microsoft.UI.Xaml.Automation.Peers.ScrollViewerAutomationPeer obj) => obj is null ? IntPtr.Zero : CreateMarshaler2(obj).Detach();
        public static unsafe MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.ScrollViewerAutomationPeer>.MarshalerArray CreateMarshalerArray(global::Microsoft.UI.Xaml.Automation.Peers.ScrollViewerAutomationPeer[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.ScrollViewerAutomationPeer>.CreateMarshalerArray2(array, (o) => CreateMarshaler2(o));
        public static (int length, IntPtr data) GetAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.ScrollViewerAutomationPeer>.GetAbiArray(box);
        public static unsafe global::Microsoft.UI.Xaml.Automation.Peers.ScrollViewerAutomationPeer[] FromAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.ScrollViewerAutomationPeer>.FromAbiArray(box, FromAbi);
        public static void CopyAbiArray(global::Microsoft.UI.Xaml.Automation.Peers.ScrollViewerAutomationPeer[] array, object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.ScrollViewerAutomationPeer>.CopyAbiArray(array, box, FromAbi);
        public static (int length, IntPtr data) FromManagedArray(global::Microsoft.UI.Xaml.Automation.Peers.ScrollViewerAutomationPeer[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.ScrollViewerAutomationPeer>.FromManagedArray(array, (o) => FromManaged(o));
        public static void DisposeMarshaler(IObjectReference value) => MarshalInspectable<object>.DisposeMarshaler(value);
        public static void DisposeMarshalerArray(MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.ScrollViewerAutomationPeer>.MarshalerArray array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.ScrollViewerAutomationPeer>.DisposeMarshalerArray(array);
        public static void DisposeAbi(IntPtr abi) => MarshalInspectable<object>.DisposeAbi(abi);
        public static unsafe void DisposeAbiArray(object box) => MarshalInspectable<object>.DisposeAbiArray(box);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    internal sealed class ScrollViewerAutomationPeerRcwFactoryAttribute : global::WinRT.WinRTImplementationTypeRcwFactoryAttribute
    {
        public override object CreateInstance(global::WinRT.IInspectable inspectable)
            => new global::Microsoft.UI.Xaml.Automation.Peers.ScrollViewerAutomationPeer(inspectable.ObjRef);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    public struct SelectorAutomationPeer
    {

        public static IObjectReference CreateMarshaler(global::Microsoft.UI.Xaml.Automation.Peers.SelectorAutomationPeer obj) => obj is null ? null : MarshalInspectable<global::Microsoft.UI.Xaml.Automation.Peers.SelectorAutomationPeer>.CreateMarshaler<IUnknownVftbl>(obj, global::ABI.Microsoft.UI.Xaml.Automation.Peers.ISelectorAutomationPeerMethods.IID);
        public static ObjectReferenceValue CreateMarshaler2(global::Microsoft.UI.Xaml.Automation.Peers.SelectorAutomationPeer obj) => MarshalInspectable<object>.CreateMarshaler2(obj, global::ABI.Microsoft.UI.Xaml.Automation.Peers.ISelectorAutomationPeerMethods.IID);
        public static IntPtr GetAbi(IObjectReference value) => value is null ? IntPtr.Zero : MarshalInterfaceHelper<object>.GetAbi(value);
        public static global::Microsoft.UI.Xaml.Automation.Peers.SelectorAutomationPeer FromAbi(IntPtr thisPtr) => global::Microsoft.UI.Xaml.Automation.Peers.SelectorAutomationPeer.FromAbi(thisPtr);
        public static IntPtr FromManaged(global::Microsoft.UI.Xaml.Automation.Peers.SelectorAutomationPeer obj) => obj is null ? IntPtr.Zero : CreateMarshaler2(obj).Detach();
        public static unsafe MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.SelectorAutomationPeer>.MarshalerArray CreateMarshalerArray(global::Microsoft.UI.Xaml.Automation.Peers.SelectorAutomationPeer[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.SelectorAutomationPeer>.CreateMarshalerArray2(array, (o) => CreateMarshaler2(o));
        public static (int length, IntPtr data) GetAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.SelectorAutomationPeer>.GetAbiArray(box);
        public static unsafe global::Microsoft.UI.Xaml.Automation.Peers.SelectorAutomationPeer[] FromAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.SelectorAutomationPeer>.FromAbiArray(box, FromAbi);
        public static void CopyAbiArray(global::Microsoft.UI.Xaml.Automation.Peers.SelectorAutomationPeer[] array, object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.SelectorAutomationPeer>.CopyAbiArray(array, box, FromAbi);
        public static (int length, IntPtr data) FromManagedArray(global::Microsoft.UI.Xaml.Automation.Peers.SelectorAutomationPeer[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.SelectorAutomationPeer>.FromManagedArray(array, (o) => FromManaged(o));
        public static void DisposeMarshaler(IObjectReference value) => MarshalInspectable<object>.DisposeMarshaler(value);
        public static void DisposeMarshalerArray(MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.SelectorAutomationPeer>.MarshalerArray array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.SelectorAutomationPeer>.DisposeMarshalerArray(array);
        public static void DisposeAbi(IntPtr abi) => MarshalInspectable<object>.DisposeAbi(abi);
        public static unsafe void DisposeAbiArray(object box) => MarshalInspectable<object>.DisposeAbiArray(box);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    internal sealed class SelectorAutomationPeerRcwFactoryAttribute : global::WinRT.WinRTImplementationTypeRcwFactoryAttribute
    {
        public override object CreateInstance(global::WinRT.IInspectable inspectable)
            => new global::Microsoft.UI.Xaml.Automation.Peers.SelectorAutomationPeer(inspectable.ObjRef);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    public struct SelectorBarItemAutomationPeer
    {

        public static IObjectReference CreateMarshaler(global::Microsoft.UI.Xaml.Automation.Peers.SelectorBarItemAutomationPeer obj) => obj is null ? null : MarshalInspectable<global::Microsoft.UI.Xaml.Automation.Peers.SelectorBarItemAutomationPeer>.CreateMarshaler<IUnknownVftbl>(obj, global::ABI.Microsoft.UI.Xaml.Automation.Peers.ISelectorBarItemAutomationPeerMethods.IID);
        public static ObjectReferenceValue CreateMarshaler2(global::Microsoft.UI.Xaml.Automation.Peers.SelectorBarItemAutomationPeer obj) => MarshalInspectable<object>.CreateMarshaler2(obj, global::ABI.Microsoft.UI.Xaml.Automation.Peers.ISelectorBarItemAutomationPeerMethods.IID);
        public static IntPtr GetAbi(IObjectReference value) => value is null ? IntPtr.Zero : MarshalInterfaceHelper<object>.GetAbi(value);
        public static global::Microsoft.UI.Xaml.Automation.Peers.SelectorBarItemAutomationPeer FromAbi(IntPtr thisPtr) => global::Microsoft.UI.Xaml.Automation.Peers.SelectorBarItemAutomationPeer.FromAbi(thisPtr);
        public static IntPtr FromManaged(global::Microsoft.UI.Xaml.Automation.Peers.SelectorBarItemAutomationPeer obj) => obj is null ? IntPtr.Zero : CreateMarshaler2(obj).Detach();
        public static unsafe MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.SelectorBarItemAutomationPeer>.MarshalerArray CreateMarshalerArray(global::Microsoft.UI.Xaml.Automation.Peers.SelectorBarItemAutomationPeer[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.SelectorBarItemAutomationPeer>.CreateMarshalerArray2(array, (o) => CreateMarshaler2(o));
        public static (int length, IntPtr data) GetAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.SelectorBarItemAutomationPeer>.GetAbiArray(box);
        public static unsafe global::Microsoft.UI.Xaml.Automation.Peers.SelectorBarItemAutomationPeer[] FromAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.SelectorBarItemAutomationPeer>.FromAbiArray(box, FromAbi);
        public static void CopyAbiArray(global::Microsoft.UI.Xaml.Automation.Peers.SelectorBarItemAutomationPeer[] array, object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.SelectorBarItemAutomationPeer>.CopyAbiArray(array, box, FromAbi);
        public static (int length, IntPtr data) FromManagedArray(global::Microsoft.UI.Xaml.Automation.Peers.SelectorBarItemAutomationPeer[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.SelectorBarItemAutomationPeer>.FromManagedArray(array, (o) => FromManaged(o));
        public static void DisposeMarshaler(IObjectReference value) => MarshalInspectable<object>.DisposeMarshaler(value);
        public static void DisposeMarshalerArray(MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.SelectorBarItemAutomationPeer>.MarshalerArray array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.SelectorBarItemAutomationPeer>.DisposeMarshalerArray(array);
        public static void DisposeAbi(IntPtr abi) => MarshalInspectable<object>.DisposeAbi(abi);
        public static unsafe void DisposeAbiArray(object box) => MarshalInspectable<object>.DisposeAbiArray(box);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    internal sealed class SelectorBarItemAutomationPeerRcwFactoryAttribute : global::WinRT.WinRTImplementationTypeRcwFactoryAttribute
    {
        public override object CreateInstance(global::WinRT.IInspectable inspectable)
            => new global::Microsoft.UI.Xaml.Automation.Peers.SelectorBarItemAutomationPeer(inspectable.ObjRef);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    public struct SelectorItemAutomationPeer
    {

        public static IObjectReference CreateMarshaler(global::Microsoft.UI.Xaml.Automation.Peers.SelectorItemAutomationPeer obj) => obj is null ? null : MarshalInspectable<global::Microsoft.UI.Xaml.Automation.Peers.SelectorItemAutomationPeer>.CreateMarshaler<IUnknownVftbl>(obj, global::ABI.Microsoft.UI.Xaml.Automation.Peers.ISelectorItemAutomationPeerMethods.IID);
        public static ObjectReferenceValue CreateMarshaler2(global::Microsoft.UI.Xaml.Automation.Peers.SelectorItemAutomationPeer obj) => MarshalInspectable<object>.CreateMarshaler2(obj, global::ABI.Microsoft.UI.Xaml.Automation.Peers.ISelectorItemAutomationPeerMethods.IID);
        public static IntPtr GetAbi(IObjectReference value) => value is null ? IntPtr.Zero : MarshalInterfaceHelper<object>.GetAbi(value);
        public static global::Microsoft.UI.Xaml.Automation.Peers.SelectorItemAutomationPeer FromAbi(IntPtr thisPtr) => global::Microsoft.UI.Xaml.Automation.Peers.SelectorItemAutomationPeer.FromAbi(thisPtr);
        public static IntPtr FromManaged(global::Microsoft.UI.Xaml.Automation.Peers.SelectorItemAutomationPeer obj) => obj is null ? IntPtr.Zero : CreateMarshaler2(obj).Detach();
        public static unsafe MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.SelectorItemAutomationPeer>.MarshalerArray CreateMarshalerArray(global::Microsoft.UI.Xaml.Automation.Peers.SelectorItemAutomationPeer[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.SelectorItemAutomationPeer>.CreateMarshalerArray2(array, (o) => CreateMarshaler2(o));
        public static (int length, IntPtr data) GetAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.SelectorItemAutomationPeer>.GetAbiArray(box);
        public static unsafe global::Microsoft.UI.Xaml.Automation.Peers.SelectorItemAutomationPeer[] FromAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.SelectorItemAutomationPeer>.FromAbiArray(box, FromAbi);
        public static void CopyAbiArray(global::Microsoft.UI.Xaml.Automation.Peers.SelectorItemAutomationPeer[] array, object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.SelectorItemAutomationPeer>.CopyAbiArray(array, box, FromAbi);
        public static (int length, IntPtr data) FromManagedArray(global::Microsoft.UI.Xaml.Automation.Peers.SelectorItemAutomationPeer[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.SelectorItemAutomationPeer>.FromManagedArray(array, (o) => FromManaged(o));
        public static void DisposeMarshaler(IObjectReference value) => MarshalInspectable<object>.DisposeMarshaler(value);
        public static void DisposeMarshalerArray(MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.SelectorItemAutomationPeer>.MarshalerArray array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.SelectorItemAutomationPeer>.DisposeMarshalerArray(array);
        public static void DisposeAbi(IntPtr abi) => MarshalInspectable<object>.DisposeAbi(abi);
        public static unsafe void DisposeAbiArray(object box) => MarshalInspectable<object>.DisposeAbiArray(box);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    internal sealed class SelectorItemAutomationPeerRcwFactoryAttribute : global::WinRT.WinRTImplementationTypeRcwFactoryAttribute
    {
        public override object CreateInstance(global::WinRT.IInspectable inspectable)
            => new global::Microsoft.UI.Xaml.Automation.Peers.SelectorItemAutomationPeer(inspectable.ObjRef);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    public struct SemanticZoomAutomationPeer
    {

        public static IObjectReference CreateMarshaler(global::Microsoft.UI.Xaml.Automation.Peers.SemanticZoomAutomationPeer obj) => obj is null ? null : MarshalInspectable<global::Microsoft.UI.Xaml.Automation.Peers.SemanticZoomAutomationPeer>.CreateMarshaler<IUnknownVftbl>(obj, global::ABI.Microsoft.UI.Xaml.Automation.Peers.ISemanticZoomAutomationPeerMethods.IID);
        public static ObjectReferenceValue CreateMarshaler2(global::Microsoft.UI.Xaml.Automation.Peers.SemanticZoomAutomationPeer obj) => MarshalInspectable<object>.CreateMarshaler2(obj, global::ABI.Microsoft.UI.Xaml.Automation.Peers.ISemanticZoomAutomationPeerMethods.IID);
        public static IntPtr GetAbi(IObjectReference value) => value is null ? IntPtr.Zero : MarshalInterfaceHelper<object>.GetAbi(value);
        public static global::Microsoft.UI.Xaml.Automation.Peers.SemanticZoomAutomationPeer FromAbi(IntPtr thisPtr) => global::Microsoft.UI.Xaml.Automation.Peers.SemanticZoomAutomationPeer.FromAbi(thisPtr);
        public static IntPtr FromManaged(global::Microsoft.UI.Xaml.Automation.Peers.SemanticZoomAutomationPeer obj) => obj is null ? IntPtr.Zero : CreateMarshaler2(obj).Detach();
        public static unsafe MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.SemanticZoomAutomationPeer>.MarshalerArray CreateMarshalerArray(global::Microsoft.UI.Xaml.Automation.Peers.SemanticZoomAutomationPeer[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.SemanticZoomAutomationPeer>.CreateMarshalerArray2(array, (o) => CreateMarshaler2(o));
        public static (int length, IntPtr data) GetAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.SemanticZoomAutomationPeer>.GetAbiArray(box);
        public static unsafe global::Microsoft.UI.Xaml.Automation.Peers.SemanticZoomAutomationPeer[] FromAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.SemanticZoomAutomationPeer>.FromAbiArray(box, FromAbi);
        public static void CopyAbiArray(global::Microsoft.UI.Xaml.Automation.Peers.SemanticZoomAutomationPeer[] array, object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.SemanticZoomAutomationPeer>.CopyAbiArray(array, box, FromAbi);
        public static (int length, IntPtr data) FromManagedArray(global::Microsoft.UI.Xaml.Automation.Peers.SemanticZoomAutomationPeer[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.SemanticZoomAutomationPeer>.FromManagedArray(array, (o) => FromManaged(o));
        public static void DisposeMarshaler(IObjectReference value) => MarshalInspectable<object>.DisposeMarshaler(value);
        public static void DisposeMarshalerArray(MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.SemanticZoomAutomationPeer>.MarshalerArray array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.SemanticZoomAutomationPeer>.DisposeMarshalerArray(array);
        public static void DisposeAbi(IntPtr abi) => MarshalInspectable<object>.DisposeAbi(abi);
        public static unsafe void DisposeAbiArray(object box) => MarshalInspectable<object>.DisposeAbiArray(box);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    internal sealed class SemanticZoomAutomationPeerRcwFactoryAttribute : global::WinRT.WinRTImplementationTypeRcwFactoryAttribute
    {
        public override object CreateInstance(global::WinRT.IInspectable inspectable)
            => new global::Microsoft.UI.Xaml.Automation.Peers.SemanticZoomAutomationPeer(inspectable.ObjRef);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    public struct SliderAutomationPeer
    {

        public static IObjectReference CreateMarshaler(global::Microsoft.UI.Xaml.Automation.Peers.SliderAutomationPeer obj) => obj is null ? null : MarshalInspectable<global::Microsoft.UI.Xaml.Automation.Peers.SliderAutomationPeer>.CreateMarshaler<IUnknownVftbl>(obj, global::ABI.Microsoft.UI.Xaml.Automation.Peers.ISliderAutomationPeerMethods.IID);
        public static ObjectReferenceValue CreateMarshaler2(global::Microsoft.UI.Xaml.Automation.Peers.SliderAutomationPeer obj) => MarshalInspectable<object>.CreateMarshaler2(obj, global::ABI.Microsoft.UI.Xaml.Automation.Peers.ISliderAutomationPeerMethods.IID);
        public static IntPtr GetAbi(IObjectReference value) => value is null ? IntPtr.Zero : MarshalInterfaceHelper<object>.GetAbi(value);
        public static global::Microsoft.UI.Xaml.Automation.Peers.SliderAutomationPeer FromAbi(IntPtr thisPtr) => global::Microsoft.UI.Xaml.Automation.Peers.SliderAutomationPeer.FromAbi(thisPtr);
        public static IntPtr FromManaged(global::Microsoft.UI.Xaml.Automation.Peers.SliderAutomationPeer obj) => obj is null ? IntPtr.Zero : CreateMarshaler2(obj).Detach();
        public static unsafe MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.SliderAutomationPeer>.MarshalerArray CreateMarshalerArray(global::Microsoft.UI.Xaml.Automation.Peers.SliderAutomationPeer[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.SliderAutomationPeer>.CreateMarshalerArray2(array, (o) => CreateMarshaler2(o));
        public static (int length, IntPtr data) GetAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.SliderAutomationPeer>.GetAbiArray(box);
        public static unsafe global::Microsoft.UI.Xaml.Automation.Peers.SliderAutomationPeer[] FromAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.SliderAutomationPeer>.FromAbiArray(box, FromAbi);
        public static void CopyAbiArray(global::Microsoft.UI.Xaml.Automation.Peers.SliderAutomationPeer[] array, object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.SliderAutomationPeer>.CopyAbiArray(array, box, FromAbi);
        public static (int length, IntPtr data) FromManagedArray(global::Microsoft.UI.Xaml.Automation.Peers.SliderAutomationPeer[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.SliderAutomationPeer>.FromManagedArray(array, (o) => FromManaged(o));
        public static void DisposeMarshaler(IObjectReference value) => MarshalInspectable<object>.DisposeMarshaler(value);
        public static void DisposeMarshalerArray(MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.SliderAutomationPeer>.MarshalerArray array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.SliderAutomationPeer>.DisposeMarshalerArray(array);
        public static void DisposeAbi(IntPtr abi) => MarshalInspectable<object>.DisposeAbi(abi);
        public static unsafe void DisposeAbiArray(object box) => MarshalInspectable<object>.DisposeAbiArray(box);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    internal sealed class SliderAutomationPeerRcwFactoryAttribute : global::WinRT.WinRTImplementationTypeRcwFactoryAttribute
    {
        public override object CreateInstance(global::WinRT.IInspectable inspectable)
            => new global::Microsoft.UI.Xaml.Automation.Peers.SliderAutomationPeer(inspectable.ObjRef);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    public struct SplitButtonAutomationPeer
    {

        public static IObjectReference CreateMarshaler(global::Microsoft.UI.Xaml.Automation.Peers.SplitButtonAutomationPeer obj) => obj is null ? null : MarshalInspectable<global::Microsoft.UI.Xaml.Automation.Peers.SplitButtonAutomationPeer>.CreateMarshaler<IUnknownVftbl>(obj, global::ABI.Microsoft.UI.Xaml.Automation.Peers.ISplitButtonAutomationPeerMethods.IID);
        public static ObjectReferenceValue CreateMarshaler2(global::Microsoft.UI.Xaml.Automation.Peers.SplitButtonAutomationPeer obj) => MarshalInspectable<object>.CreateMarshaler2(obj, global::ABI.Microsoft.UI.Xaml.Automation.Peers.ISplitButtonAutomationPeerMethods.IID);
        public static IntPtr GetAbi(IObjectReference value) => value is null ? IntPtr.Zero : MarshalInterfaceHelper<object>.GetAbi(value);
        public static global::Microsoft.UI.Xaml.Automation.Peers.SplitButtonAutomationPeer FromAbi(IntPtr thisPtr) => global::Microsoft.UI.Xaml.Automation.Peers.SplitButtonAutomationPeer.FromAbi(thisPtr);
        public static IntPtr FromManaged(global::Microsoft.UI.Xaml.Automation.Peers.SplitButtonAutomationPeer obj) => obj is null ? IntPtr.Zero : CreateMarshaler2(obj).Detach();
        public static unsafe MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.SplitButtonAutomationPeer>.MarshalerArray CreateMarshalerArray(global::Microsoft.UI.Xaml.Automation.Peers.SplitButtonAutomationPeer[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.SplitButtonAutomationPeer>.CreateMarshalerArray2(array, (o) => CreateMarshaler2(o));
        public static (int length, IntPtr data) GetAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.SplitButtonAutomationPeer>.GetAbiArray(box);
        public static unsafe global::Microsoft.UI.Xaml.Automation.Peers.SplitButtonAutomationPeer[] FromAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.SplitButtonAutomationPeer>.FromAbiArray(box, FromAbi);
        public static void CopyAbiArray(global::Microsoft.UI.Xaml.Automation.Peers.SplitButtonAutomationPeer[] array, object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.SplitButtonAutomationPeer>.CopyAbiArray(array, box, FromAbi);
        public static (int length, IntPtr data) FromManagedArray(global::Microsoft.UI.Xaml.Automation.Peers.SplitButtonAutomationPeer[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.SplitButtonAutomationPeer>.FromManagedArray(array, (o) => FromManaged(o));
        public static void DisposeMarshaler(IObjectReference value) => MarshalInspectable<object>.DisposeMarshaler(value);
        public static void DisposeMarshalerArray(MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.SplitButtonAutomationPeer>.MarshalerArray array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.SplitButtonAutomationPeer>.DisposeMarshalerArray(array);
        public static void DisposeAbi(IntPtr abi) => MarshalInspectable<object>.DisposeAbi(abi);
        public static unsafe void DisposeAbiArray(object box) => MarshalInspectable<object>.DisposeAbiArray(box);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    internal sealed class SplitButtonAutomationPeerRcwFactoryAttribute : global::WinRT.WinRTImplementationTypeRcwFactoryAttribute
    {
        public override object CreateInstance(global::WinRT.IInspectable inspectable)
            => new global::Microsoft.UI.Xaml.Automation.Peers.SplitButtonAutomationPeer(inspectable.ObjRef);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    public struct TabViewAutomationPeer
    {

        public static IObjectReference CreateMarshaler(global::Microsoft.UI.Xaml.Automation.Peers.TabViewAutomationPeer obj) => obj is null ? null : MarshalInspectable<global::Microsoft.UI.Xaml.Automation.Peers.TabViewAutomationPeer>.CreateMarshaler<IUnknownVftbl>(obj, global::ABI.Microsoft.UI.Xaml.Automation.Peers.ITabViewAutomationPeerMethods.IID);
        public static ObjectReferenceValue CreateMarshaler2(global::Microsoft.UI.Xaml.Automation.Peers.TabViewAutomationPeer obj) => MarshalInspectable<object>.CreateMarshaler2(obj, global::ABI.Microsoft.UI.Xaml.Automation.Peers.ITabViewAutomationPeerMethods.IID);
        public static IntPtr GetAbi(IObjectReference value) => value is null ? IntPtr.Zero : MarshalInterfaceHelper<object>.GetAbi(value);
        public static global::Microsoft.UI.Xaml.Automation.Peers.TabViewAutomationPeer FromAbi(IntPtr thisPtr) => global::Microsoft.UI.Xaml.Automation.Peers.TabViewAutomationPeer.FromAbi(thisPtr);
        public static IntPtr FromManaged(global::Microsoft.UI.Xaml.Automation.Peers.TabViewAutomationPeer obj) => obj is null ? IntPtr.Zero : CreateMarshaler2(obj).Detach();
        public static unsafe MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.TabViewAutomationPeer>.MarshalerArray CreateMarshalerArray(global::Microsoft.UI.Xaml.Automation.Peers.TabViewAutomationPeer[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.TabViewAutomationPeer>.CreateMarshalerArray2(array, (o) => CreateMarshaler2(o));
        public static (int length, IntPtr data) GetAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.TabViewAutomationPeer>.GetAbiArray(box);
        public static unsafe global::Microsoft.UI.Xaml.Automation.Peers.TabViewAutomationPeer[] FromAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.TabViewAutomationPeer>.FromAbiArray(box, FromAbi);
        public static void CopyAbiArray(global::Microsoft.UI.Xaml.Automation.Peers.TabViewAutomationPeer[] array, object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.TabViewAutomationPeer>.CopyAbiArray(array, box, FromAbi);
        public static (int length, IntPtr data) FromManagedArray(global::Microsoft.UI.Xaml.Automation.Peers.TabViewAutomationPeer[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.TabViewAutomationPeer>.FromManagedArray(array, (o) => FromManaged(o));
        public static void DisposeMarshaler(IObjectReference value) => MarshalInspectable<object>.DisposeMarshaler(value);
        public static void DisposeMarshalerArray(MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.TabViewAutomationPeer>.MarshalerArray array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.TabViewAutomationPeer>.DisposeMarshalerArray(array);
        public static void DisposeAbi(IntPtr abi) => MarshalInspectable<object>.DisposeAbi(abi);
        public static unsafe void DisposeAbiArray(object box) => MarshalInspectable<object>.DisposeAbiArray(box);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    internal sealed class TabViewAutomationPeerRcwFactoryAttribute : global::WinRT.WinRTImplementationTypeRcwFactoryAttribute
    {
        public override object CreateInstance(global::WinRT.IInspectable inspectable)
            => new global::Microsoft.UI.Xaml.Automation.Peers.TabViewAutomationPeer(inspectable.ObjRef);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    public struct TabViewItemAutomationPeer
    {

        public static IObjectReference CreateMarshaler(global::Microsoft.UI.Xaml.Automation.Peers.TabViewItemAutomationPeer obj) => obj is null ? null : MarshalInspectable<global::Microsoft.UI.Xaml.Automation.Peers.TabViewItemAutomationPeer>.CreateMarshaler<IUnknownVftbl>(obj, global::ABI.Microsoft.UI.Xaml.Automation.Peers.ITabViewItemAutomationPeerMethods.IID);
        public static ObjectReferenceValue CreateMarshaler2(global::Microsoft.UI.Xaml.Automation.Peers.TabViewItemAutomationPeer obj) => MarshalInspectable<object>.CreateMarshaler2(obj, global::ABI.Microsoft.UI.Xaml.Automation.Peers.ITabViewItemAutomationPeerMethods.IID);
        public static IntPtr GetAbi(IObjectReference value) => value is null ? IntPtr.Zero : MarshalInterfaceHelper<object>.GetAbi(value);
        public static global::Microsoft.UI.Xaml.Automation.Peers.TabViewItemAutomationPeer FromAbi(IntPtr thisPtr) => global::Microsoft.UI.Xaml.Automation.Peers.TabViewItemAutomationPeer.FromAbi(thisPtr);
        public static IntPtr FromManaged(global::Microsoft.UI.Xaml.Automation.Peers.TabViewItemAutomationPeer obj) => obj is null ? IntPtr.Zero : CreateMarshaler2(obj).Detach();
        public static unsafe MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.TabViewItemAutomationPeer>.MarshalerArray CreateMarshalerArray(global::Microsoft.UI.Xaml.Automation.Peers.TabViewItemAutomationPeer[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.TabViewItemAutomationPeer>.CreateMarshalerArray2(array, (o) => CreateMarshaler2(o));
        public static (int length, IntPtr data) GetAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.TabViewItemAutomationPeer>.GetAbiArray(box);
        public static unsafe global::Microsoft.UI.Xaml.Automation.Peers.TabViewItemAutomationPeer[] FromAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.TabViewItemAutomationPeer>.FromAbiArray(box, FromAbi);
        public static void CopyAbiArray(global::Microsoft.UI.Xaml.Automation.Peers.TabViewItemAutomationPeer[] array, object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.TabViewItemAutomationPeer>.CopyAbiArray(array, box, FromAbi);
        public static (int length, IntPtr data) FromManagedArray(global::Microsoft.UI.Xaml.Automation.Peers.TabViewItemAutomationPeer[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.TabViewItemAutomationPeer>.FromManagedArray(array, (o) => FromManaged(o));
        public static void DisposeMarshaler(IObjectReference value) => MarshalInspectable<object>.DisposeMarshaler(value);
        public static void DisposeMarshalerArray(MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.TabViewItemAutomationPeer>.MarshalerArray array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.TabViewItemAutomationPeer>.DisposeMarshalerArray(array);
        public static void DisposeAbi(IntPtr abi) => MarshalInspectable<object>.DisposeAbi(abi);
        public static unsafe void DisposeAbiArray(object box) => MarshalInspectable<object>.DisposeAbiArray(box);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    internal sealed class TabViewItemAutomationPeerRcwFactoryAttribute : global::WinRT.WinRTImplementationTypeRcwFactoryAttribute
    {
        public override object CreateInstance(global::WinRT.IInspectable inspectable)
            => new global::Microsoft.UI.Xaml.Automation.Peers.TabViewItemAutomationPeer(inspectable.ObjRef);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    public struct TeachingTipAutomationPeer
    {

        public static IObjectReference CreateMarshaler(global::Microsoft.UI.Xaml.Automation.Peers.TeachingTipAutomationPeer obj) => obj is null ? null : MarshalInspectable<global::Microsoft.UI.Xaml.Automation.Peers.TeachingTipAutomationPeer>.CreateMarshaler<IUnknownVftbl>(obj, global::ABI.Microsoft.UI.Xaml.Automation.Peers.ITeachingTipAutomationPeerMethods.IID);
        public static ObjectReferenceValue CreateMarshaler2(global::Microsoft.UI.Xaml.Automation.Peers.TeachingTipAutomationPeer obj) => MarshalInspectable<object>.CreateMarshaler2(obj, global::ABI.Microsoft.UI.Xaml.Automation.Peers.ITeachingTipAutomationPeerMethods.IID);
        public static IntPtr GetAbi(IObjectReference value) => value is null ? IntPtr.Zero : MarshalInterfaceHelper<object>.GetAbi(value);
        public static global::Microsoft.UI.Xaml.Automation.Peers.TeachingTipAutomationPeer FromAbi(IntPtr thisPtr) => global::Microsoft.UI.Xaml.Automation.Peers.TeachingTipAutomationPeer.FromAbi(thisPtr);
        public static IntPtr FromManaged(global::Microsoft.UI.Xaml.Automation.Peers.TeachingTipAutomationPeer obj) => obj is null ? IntPtr.Zero : CreateMarshaler2(obj).Detach();
        public static unsafe MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.TeachingTipAutomationPeer>.MarshalerArray CreateMarshalerArray(global::Microsoft.UI.Xaml.Automation.Peers.TeachingTipAutomationPeer[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.TeachingTipAutomationPeer>.CreateMarshalerArray2(array, (o) => CreateMarshaler2(o));
        public static (int length, IntPtr data) GetAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.TeachingTipAutomationPeer>.GetAbiArray(box);
        public static unsafe global::Microsoft.UI.Xaml.Automation.Peers.TeachingTipAutomationPeer[] FromAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.TeachingTipAutomationPeer>.FromAbiArray(box, FromAbi);
        public static void CopyAbiArray(global::Microsoft.UI.Xaml.Automation.Peers.TeachingTipAutomationPeer[] array, object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.TeachingTipAutomationPeer>.CopyAbiArray(array, box, FromAbi);
        public static (int length, IntPtr data) FromManagedArray(global::Microsoft.UI.Xaml.Automation.Peers.TeachingTipAutomationPeer[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.TeachingTipAutomationPeer>.FromManagedArray(array, (o) => FromManaged(o));
        public static void DisposeMarshaler(IObjectReference value) => MarshalInspectable<object>.DisposeMarshaler(value);
        public static void DisposeMarshalerArray(MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.TeachingTipAutomationPeer>.MarshalerArray array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.TeachingTipAutomationPeer>.DisposeMarshalerArray(array);
        public static void DisposeAbi(IntPtr abi) => MarshalInspectable<object>.DisposeAbi(abi);
        public static unsafe void DisposeAbiArray(object box) => MarshalInspectable<object>.DisposeAbiArray(box);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    internal sealed class TeachingTipAutomationPeerRcwFactoryAttribute : global::WinRT.WinRTImplementationTypeRcwFactoryAttribute
    {
        public override object CreateInstance(global::WinRT.IInspectable inspectable)
            => new global::Microsoft.UI.Xaml.Automation.Peers.TeachingTipAutomationPeer(inspectable.ObjRef);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    public struct TextBlockAutomationPeer
    {

        public static IObjectReference CreateMarshaler(global::Microsoft.UI.Xaml.Automation.Peers.TextBlockAutomationPeer obj) => obj is null ? null : MarshalInspectable<global::Microsoft.UI.Xaml.Automation.Peers.TextBlockAutomationPeer>.CreateMarshaler<IUnknownVftbl>(obj, global::ABI.Microsoft.UI.Xaml.Automation.Peers.ITextBlockAutomationPeerMethods.IID);
        public static ObjectReferenceValue CreateMarshaler2(global::Microsoft.UI.Xaml.Automation.Peers.TextBlockAutomationPeer obj) => MarshalInspectable<object>.CreateMarshaler2(obj, global::ABI.Microsoft.UI.Xaml.Automation.Peers.ITextBlockAutomationPeerMethods.IID);
        public static IntPtr GetAbi(IObjectReference value) => value is null ? IntPtr.Zero : MarshalInterfaceHelper<object>.GetAbi(value);
        public static global::Microsoft.UI.Xaml.Automation.Peers.TextBlockAutomationPeer FromAbi(IntPtr thisPtr) => global::Microsoft.UI.Xaml.Automation.Peers.TextBlockAutomationPeer.FromAbi(thisPtr);
        public static IntPtr FromManaged(global::Microsoft.UI.Xaml.Automation.Peers.TextBlockAutomationPeer obj) => obj is null ? IntPtr.Zero : CreateMarshaler2(obj).Detach();
        public static unsafe MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.TextBlockAutomationPeer>.MarshalerArray CreateMarshalerArray(global::Microsoft.UI.Xaml.Automation.Peers.TextBlockAutomationPeer[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.TextBlockAutomationPeer>.CreateMarshalerArray2(array, (o) => CreateMarshaler2(o));
        public static (int length, IntPtr data) GetAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.TextBlockAutomationPeer>.GetAbiArray(box);
        public static unsafe global::Microsoft.UI.Xaml.Automation.Peers.TextBlockAutomationPeer[] FromAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.TextBlockAutomationPeer>.FromAbiArray(box, FromAbi);
        public static void CopyAbiArray(global::Microsoft.UI.Xaml.Automation.Peers.TextBlockAutomationPeer[] array, object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.TextBlockAutomationPeer>.CopyAbiArray(array, box, FromAbi);
        public static (int length, IntPtr data) FromManagedArray(global::Microsoft.UI.Xaml.Automation.Peers.TextBlockAutomationPeer[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.TextBlockAutomationPeer>.FromManagedArray(array, (o) => FromManaged(o));
        public static void DisposeMarshaler(IObjectReference value) => MarshalInspectable<object>.DisposeMarshaler(value);
        public static void DisposeMarshalerArray(MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.TextBlockAutomationPeer>.MarshalerArray array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.TextBlockAutomationPeer>.DisposeMarshalerArray(array);
        public static void DisposeAbi(IntPtr abi) => MarshalInspectable<object>.DisposeAbi(abi);
        public static unsafe void DisposeAbiArray(object box) => MarshalInspectable<object>.DisposeAbiArray(box);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    internal sealed class TextBlockAutomationPeerRcwFactoryAttribute : global::WinRT.WinRTImplementationTypeRcwFactoryAttribute
    {
        public override object CreateInstance(global::WinRT.IInspectable inspectable)
            => new global::Microsoft.UI.Xaml.Automation.Peers.TextBlockAutomationPeer(inspectable.ObjRef);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    public struct TextBoxAutomationPeer
    {

        public static IObjectReference CreateMarshaler(global::Microsoft.UI.Xaml.Automation.Peers.TextBoxAutomationPeer obj) => obj is null ? null : MarshalInspectable<global::Microsoft.UI.Xaml.Automation.Peers.TextBoxAutomationPeer>.CreateMarshaler<IUnknownVftbl>(obj, global::ABI.Microsoft.UI.Xaml.Automation.Peers.ITextBoxAutomationPeerMethods.IID);
        public static ObjectReferenceValue CreateMarshaler2(global::Microsoft.UI.Xaml.Automation.Peers.TextBoxAutomationPeer obj) => MarshalInspectable<object>.CreateMarshaler2(obj, global::ABI.Microsoft.UI.Xaml.Automation.Peers.ITextBoxAutomationPeerMethods.IID);
        public static IntPtr GetAbi(IObjectReference value) => value is null ? IntPtr.Zero : MarshalInterfaceHelper<object>.GetAbi(value);
        public static global::Microsoft.UI.Xaml.Automation.Peers.TextBoxAutomationPeer FromAbi(IntPtr thisPtr) => global::Microsoft.UI.Xaml.Automation.Peers.TextBoxAutomationPeer.FromAbi(thisPtr);
        public static IntPtr FromManaged(global::Microsoft.UI.Xaml.Automation.Peers.TextBoxAutomationPeer obj) => obj is null ? IntPtr.Zero : CreateMarshaler2(obj).Detach();
        public static unsafe MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.TextBoxAutomationPeer>.MarshalerArray CreateMarshalerArray(global::Microsoft.UI.Xaml.Automation.Peers.TextBoxAutomationPeer[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.TextBoxAutomationPeer>.CreateMarshalerArray2(array, (o) => CreateMarshaler2(o));
        public static (int length, IntPtr data) GetAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.TextBoxAutomationPeer>.GetAbiArray(box);
        public static unsafe global::Microsoft.UI.Xaml.Automation.Peers.TextBoxAutomationPeer[] FromAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.TextBoxAutomationPeer>.FromAbiArray(box, FromAbi);
        public static void CopyAbiArray(global::Microsoft.UI.Xaml.Automation.Peers.TextBoxAutomationPeer[] array, object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.TextBoxAutomationPeer>.CopyAbiArray(array, box, FromAbi);
        public static (int length, IntPtr data) FromManagedArray(global::Microsoft.UI.Xaml.Automation.Peers.TextBoxAutomationPeer[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.TextBoxAutomationPeer>.FromManagedArray(array, (o) => FromManaged(o));
        public static void DisposeMarshaler(IObjectReference value) => MarshalInspectable<object>.DisposeMarshaler(value);
        public static void DisposeMarshalerArray(MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.TextBoxAutomationPeer>.MarshalerArray array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.TextBoxAutomationPeer>.DisposeMarshalerArray(array);
        public static void DisposeAbi(IntPtr abi) => MarshalInspectable<object>.DisposeAbi(abi);
        public static unsafe void DisposeAbiArray(object box) => MarshalInspectable<object>.DisposeAbiArray(box);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    internal sealed class TextBoxAutomationPeerRcwFactoryAttribute : global::WinRT.WinRTImplementationTypeRcwFactoryAttribute
    {
        public override object CreateInstance(global::WinRT.IInspectable inspectable)
            => new global::Microsoft.UI.Xaml.Automation.Peers.TextBoxAutomationPeer(inspectable.ObjRef);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    public struct ThumbAutomationPeer
    {

        public static IObjectReference CreateMarshaler(global::Microsoft.UI.Xaml.Automation.Peers.ThumbAutomationPeer obj) => obj is null ? null : MarshalInspectable<global::Microsoft.UI.Xaml.Automation.Peers.ThumbAutomationPeer>.CreateMarshaler<IUnknownVftbl>(obj, global::ABI.Microsoft.UI.Xaml.Automation.Peers.IThumbAutomationPeerMethods.IID);
        public static ObjectReferenceValue CreateMarshaler2(global::Microsoft.UI.Xaml.Automation.Peers.ThumbAutomationPeer obj) => MarshalInspectable<object>.CreateMarshaler2(obj, global::ABI.Microsoft.UI.Xaml.Automation.Peers.IThumbAutomationPeerMethods.IID);
        public static IntPtr GetAbi(IObjectReference value) => value is null ? IntPtr.Zero : MarshalInterfaceHelper<object>.GetAbi(value);
        public static global::Microsoft.UI.Xaml.Automation.Peers.ThumbAutomationPeer FromAbi(IntPtr thisPtr) => global::Microsoft.UI.Xaml.Automation.Peers.ThumbAutomationPeer.FromAbi(thisPtr);
        public static IntPtr FromManaged(global::Microsoft.UI.Xaml.Automation.Peers.ThumbAutomationPeer obj) => obj is null ? IntPtr.Zero : CreateMarshaler2(obj).Detach();
        public static unsafe MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.ThumbAutomationPeer>.MarshalerArray CreateMarshalerArray(global::Microsoft.UI.Xaml.Automation.Peers.ThumbAutomationPeer[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.ThumbAutomationPeer>.CreateMarshalerArray2(array, (o) => CreateMarshaler2(o));
        public static (int length, IntPtr data) GetAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.ThumbAutomationPeer>.GetAbiArray(box);
        public static unsafe global::Microsoft.UI.Xaml.Automation.Peers.ThumbAutomationPeer[] FromAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.ThumbAutomationPeer>.FromAbiArray(box, FromAbi);
        public static void CopyAbiArray(global::Microsoft.UI.Xaml.Automation.Peers.ThumbAutomationPeer[] array, object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.ThumbAutomationPeer>.CopyAbiArray(array, box, FromAbi);
        public static (int length, IntPtr data) FromManagedArray(global::Microsoft.UI.Xaml.Automation.Peers.ThumbAutomationPeer[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.ThumbAutomationPeer>.FromManagedArray(array, (o) => FromManaged(o));
        public static void DisposeMarshaler(IObjectReference value) => MarshalInspectable<object>.DisposeMarshaler(value);
        public static void DisposeMarshalerArray(MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.ThumbAutomationPeer>.MarshalerArray array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.ThumbAutomationPeer>.DisposeMarshalerArray(array);
        public static void DisposeAbi(IntPtr abi) => MarshalInspectable<object>.DisposeAbi(abi);
        public static unsafe void DisposeAbiArray(object box) => MarshalInspectable<object>.DisposeAbiArray(box);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    internal sealed class ThumbAutomationPeerRcwFactoryAttribute : global::WinRT.WinRTImplementationTypeRcwFactoryAttribute
    {
        public override object CreateInstance(global::WinRT.IInspectable inspectable)
            => new global::Microsoft.UI.Xaml.Automation.Peers.ThumbAutomationPeer(inspectable.ObjRef);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    public struct TimePickerAutomationPeer
    {

        public static IObjectReference CreateMarshaler(global::Microsoft.UI.Xaml.Automation.Peers.TimePickerAutomationPeer obj) => obj is null ? null : MarshalInspectable<global::Microsoft.UI.Xaml.Automation.Peers.TimePickerAutomationPeer>.CreateMarshaler<IUnknownVftbl>(obj, global::ABI.Microsoft.UI.Xaml.Automation.Peers.ITimePickerAutomationPeerMethods.IID);
        public static ObjectReferenceValue CreateMarshaler2(global::Microsoft.UI.Xaml.Automation.Peers.TimePickerAutomationPeer obj) => MarshalInspectable<object>.CreateMarshaler2(obj, global::ABI.Microsoft.UI.Xaml.Automation.Peers.ITimePickerAutomationPeerMethods.IID);
        public static IntPtr GetAbi(IObjectReference value) => value is null ? IntPtr.Zero : MarshalInterfaceHelper<object>.GetAbi(value);
        public static global::Microsoft.UI.Xaml.Automation.Peers.TimePickerAutomationPeer FromAbi(IntPtr thisPtr) => global::Microsoft.UI.Xaml.Automation.Peers.TimePickerAutomationPeer.FromAbi(thisPtr);
        public static IntPtr FromManaged(global::Microsoft.UI.Xaml.Automation.Peers.TimePickerAutomationPeer obj) => obj is null ? IntPtr.Zero : CreateMarshaler2(obj).Detach();
        public static unsafe MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.TimePickerAutomationPeer>.MarshalerArray CreateMarshalerArray(global::Microsoft.UI.Xaml.Automation.Peers.TimePickerAutomationPeer[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.TimePickerAutomationPeer>.CreateMarshalerArray2(array, (o) => CreateMarshaler2(o));
        public static (int length, IntPtr data) GetAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.TimePickerAutomationPeer>.GetAbiArray(box);
        public static unsafe global::Microsoft.UI.Xaml.Automation.Peers.TimePickerAutomationPeer[] FromAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.TimePickerAutomationPeer>.FromAbiArray(box, FromAbi);
        public static void CopyAbiArray(global::Microsoft.UI.Xaml.Automation.Peers.TimePickerAutomationPeer[] array, object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.TimePickerAutomationPeer>.CopyAbiArray(array, box, FromAbi);
        public static (int length, IntPtr data) FromManagedArray(global::Microsoft.UI.Xaml.Automation.Peers.TimePickerAutomationPeer[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.TimePickerAutomationPeer>.FromManagedArray(array, (o) => FromManaged(o));
        public static void DisposeMarshaler(IObjectReference value) => MarshalInspectable<object>.DisposeMarshaler(value);
        public static void DisposeMarshalerArray(MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.TimePickerAutomationPeer>.MarshalerArray array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.TimePickerAutomationPeer>.DisposeMarshalerArray(array);
        public static void DisposeAbi(IntPtr abi) => MarshalInspectable<object>.DisposeAbi(abi);
        public static unsafe void DisposeAbiArray(object box) => MarshalInspectable<object>.DisposeAbiArray(box);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    internal sealed class TimePickerAutomationPeerRcwFactoryAttribute : global::WinRT.WinRTImplementationTypeRcwFactoryAttribute
    {
        public override object CreateInstance(global::WinRT.IInspectable inspectable)
            => new global::Microsoft.UI.Xaml.Automation.Peers.TimePickerAutomationPeer(inspectable.ObjRef);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    public struct TimePickerFlyoutPresenterAutomationPeer
    {

        public static IObjectReference CreateMarshaler(global::Microsoft.UI.Xaml.Automation.Peers.TimePickerFlyoutPresenterAutomationPeer obj) => obj is null ? null : MarshalInspectable<global::Microsoft.UI.Xaml.Automation.Peers.TimePickerFlyoutPresenterAutomationPeer>.CreateMarshaler<IUnknownVftbl>(obj, global::ABI.Microsoft.UI.Xaml.Automation.Peers.ITimePickerFlyoutPresenterAutomationPeerMethods.IID);
        public static ObjectReferenceValue CreateMarshaler2(global::Microsoft.UI.Xaml.Automation.Peers.TimePickerFlyoutPresenterAutomationPeer obj) => MarshalInspectable<object>.CreateMarshaler2(obj, global::ABI.Microsoft.UI.Xaml.Automation.Peers.ITimePickerFlyoutPresenterAutomationPeerMethods.IID);
        public static IntPtr GetAbi(IObjectReference value) => value is null ? IntPtr.Zero : MarshalInterfaceHelper<object>.GetAbi(value);
        public static global::Microsoft.UI.Xaml.Automation.Peers.TimePickerFlyoutPresenterAutomationPeer FromAbi(IntPtr thisPtr) => global::Microsoft.UI.Xaml.Automation.Peers.TimePickerFlyoutPresenterAutomationPeer.FromAbi(thisPtr);
        public static IntPtr FromManaged(global::Microsoft.UI.Xaml.Automation.Peers.TimePickerFlyoutPresenterAutomationPeer obj) => obj is null ? IntPtr.Zero : CreateMarshaler2(obj).Detach();
        public static unsafe MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.TimePickerFlyoutPresenterAutomationPeer>.MarshalerArray CreateMarshalerArray(global::Microsoft.UI.Xaml.Automation.Peers.TimePickerFlyoutPresenterAutomationPeer[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.TimePickerFlyoutPresenterAutomationPeer>.CreateMarshalerArray2(array, (o) => CreateMarshaler2(o));
        public static (int length, IntPtr data) GetAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.TimePickerFlyoutPresenterAutomationPeer>.GetAbiArray(box);
        public static unsafe global::Microsoft.UI.Xaml.Automation.Peers.TimePickerFlyoutPresenterAutomationPeer[] FromAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.TimePickerFlyoutPresenterAutomationPeer>.FromAbiArray(box, FromAbi);
        public static void CopyAbiArray(global::Microsoft.UI.Xaml.Automation.Peers.TimePickerFlyoutPresenterAutomationPeer[] array, object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.TimePickerFlyoutPresenterAutomationPeer>.CopyAbiArray(array, box, FromAbi);
        public static (int length, IntPtr data) FromManagedArray(global::Microsoft.UI.Xaml.Automation.Peers.TimePickerFlyoutPresenterAutomationPeer[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.TimePickerFlyoutPresenterAutomationPeer>.FromManagedArray(array, (o) => FromManaged(o));
        public static void DisposeMarshaler(IObjectReference value) => MarshalInspectable<object>.DisposeMarshaler(value);
        public static void DisposeMarshalerArray(MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.TimePickerFlyoutPresenterAutomationPeer>.MarshalerArray array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.TimePickerFlyoutPresenterAutomationPeer>.DisposeMarshalerArray(array);
        public static void DisposeAbi(IntPtr abi) => MarshalInspectable<object>.DisposeAbi(abi);
        public static unsafe void DisposeAbiArray(object box) => MarshalInspectable<object>.DisposeAbiArray(box);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    internal sealed class TimePickerFlyoutPresenterAutomationPeerRcwFactoryAttribute : global::WinRT.WinRTImplementationTypeRcwFactoryAttribute
    {
        public override object CreateInstance(global::WinRT.IInspectable inspectable)
            => new global::Microsoft.UI.Xaml.Automation.Peers.TimePickerFlyoutPresenterAutomationPeer(inspectable.ObjRef);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    public struct ToggleButtonAutomationPeer
    {

        public static IObjectReference CreateMarshaler(global::Microsoft.UI.Xaml.Automation.Peers.ToggleButtonAutomationPeer obj) => obj is null ? null : MarshalInspectable<global::Microsoft.UI.Xaml.Automation.Peers.ToggleButtonAutomationPeer>.CreateMarshaler<IUnknownVftbl>(obj, global::ABI.Microsoft.UI.Xaml.Automation.Peers.IToggleButtonAutomationPeerMethods.IID);
        public static ObjectReferenceValue CreateMarshaler2(global::Microsoft.UI.Xaml.Automation.Peers.ToggleButtonAutomationPeer obj) => MarshalInspectable<object>.CreateMarshaler2(obj, global::ABI.Microsoft.UI.Xaml.Automation.Peers.IToggleButtonAutomationPeerMethods.IID);
        public static IntPtr GetAbi(IObjectReference value) => value is null ? IntPtr.Zero : MarshalInterfaceHelper<object>.GetAbi(value);
        public static global::Microsoft.UI.Xaml.Automation.Peers.ToggleButtonAutomationPeer FromAbi(IntPtr thisPtr) => global::Microsoft.UI.Xaml.Automation.Peers.ToggleButtonAutomationPeer.FromAbi(thisPtr);
        public static IntPtr FromManaged(global::Microsoft.UI.Xaml.Automation.Peers.ToggleButtonAutomationPeer obj) => obj is null ? IntPtr.Zero : CreateMarshaler2(obj).Detach();
        public static unsafe MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.ToggleButtonAutomationPeer>.MarshalerArray CreateMarshalerArray(global::Microsoft.UI.Xaml.Automation.Peers.ToggleButtonAutomationPeer[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.ToggleButtonAutomationPeer>.CreateMarshalerArray2(array, (o) => CreateMarshaler2(o));
        public static (int length, IntPtr data) GetAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.ToggleButtonAutomationPeer>.GetAbiArray(box);
        public static unsafe global::Microsoft.UI.Xaml.Automation.Peers.ToggleButtonAutomationPeer[] FromAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.ToggleButtonAutomationPeer>.FromAbiArray(box, FromAbi);
        public static void CopyAbiArray(global::Microsoft.UI.Xaml.Automation.Peers.ToggleButtonAutomationPeer[] array, object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.ToggleButtonAutomationPeer>.CopyAbiArray(array, box, FromAbi);
        public static (int length, IntPtr data) FromManagedArray(global::Microsoft.UI.Xaml.Automation.Peers.ToggleButtonAutomationPeer[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.ToggleButtonAutomationPeer>.FromManagedArray(array, (o) => FromManaged(o));
        public static void DisposeMarshaler(IObjectReference value) => MarshalInspectable<object>.DisposeMarshaler(value);
        public static void DisposeMarshalerArray(MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.ToggleButtonAutomationPeer>.MarshalerArray array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.ToggleButtonAutomationPeer>.DisposeMarshalerArray(array);
        public static void DisposeAbi(IntPtr abi) => MarshalInspectable<object>.DisposeAbi(abi);
        public static unsafe void DisposeAbiArray(object box) => MarshalInspectable<object>.DisposeAbiArray(box);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    internal sealed class ToggleButtonAutomationPeerRcwFactoryAttribute : global::WinRT.WinRTImplementationTypeRcwFactoryAttribute
    {
        public override object CreateInstance(global::WinRT.IInspectable inspectable)
            => new global::Microsoft.UI.Xaml.Automation.Peers.ToggleButtonAutomationPeer(inspectable.ObjRef);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    public struct ToggleMenuFlyoutItemAutomationPeer
    {

        public static IObjectReference CreateMarshaler(global::Microsoft.UI.Xaml.Automation.Peers.ToggleMenuFlyoutItemAutomationPeer obj) => obj is null ? null : MarshalInspectable<global::Microsoft.UI.Xaml.Automation.Peers.ToggleMenuFlyoutItemAutomationPeer>.CreateMarshaler<IUnknownVftbl>(obj, global::ABI.Microsoft.UI.Xaml.Automation.Peers.IToggleMenuFlyoutItemAutomationPeerMethods.IID);
        public static ObjectReferenceValue CreateMarshaler2(global::Microsoft.UI.Xaml.Automation.Peers.ToggleMenuFlyoutItemAutomationPeer obj) => MarshalInspectable<object>.CreateMarshaler2(obj, global::ABI.Microsoft.UI.Xaml.Automation.Peers.IToggleMenuFlyoutItemAutomationPeerMethods.IID);
        public static IntPtr GetAbi(IObjectReference value) => value is null ? IntPtr.Zero : MarshalInterfaceHelper<object>.GetAbi(value);
        public static global::Microsoft.UI.Xaml.Automation.Peers.ToggleMenuFlyoutItemAutomationPeer FromAbi(IntPtr thisPtr) => global::Microsoft.UI.Xaml.Automation.Peers.ToggleMenuFlyoutItemAutomationPeer.FromAbi(thisPtr);
        public static IntPtr FromManaged(global::Microsoft.UI.Xaml.Automation.Peers.ToggleMenuFlyoutItemAutomationPeer obj) => obj is null ? IntPtr.Zero : CreateMarshaler2(obj).Detach();
        public static unsafe MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.ToggleMenuFlyoutItemAutomationPeer>.MarshalerArray CreateMarshalerArray(global::Microsoft.UI.Xaml.Automation.Peers.ToggleMenuFlyoutItemAutomationPeer[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.ToggleMenuFlyoutItemAutomationPeer>.CreateMarshalerArray2(array, (o) => CreateMarshaler2(o));
        public static (int length, IntPtr data) GetAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.ToggleMenuFlyoutItemAutomationPeer>.GetAbiArray(box);
        public static unsafe global::Microsoft.UI.Xaml.Automation.Peers.ToggleMenuFlyoutItemAutomationPeer[] FromAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.ToggleMenuFlyoutItemAutomationPeer>.FromAbiArray(box, FromAbi);
        public static void CopyAbiArray(global::Microsoft.UI.Xaml.Automation.Peers.ToggleMenuFlyoutItemAutomationPeer[] array, object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.ToggleMenuFlyoutItemAutomationPeer>.CopyAbiArray(array, box, FromAbi);
        public static (int length, IntPtr data) FromManagedArray(global::Microsoft.UI.Xaml.Automation.Peers.ToggleMenuFlyoutItemAutomationPeer[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.ToggleMenuFlyoutItemAutomationPeer>.FromManagedArray(array, (o) => FromManaged(o));
        public static void DisposeMarshaler(IObjectReference value) => MarshalInspectable<object>.DisposeMarshaler(value);
        public static void DisposeMarshalerArray(MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.ToggleMenuFlyoutItemAutomationPeer>.MarshalerArray array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.ToggleMenuFlyoutItemAutomationPeer>.DisposeMarshalerArray(array);
        public static void DisposeAbi(IntPtr abi) => MarshalInspectable<object>.DisposeAbi(abi);
        public static unsafe void DisposeAbiArray(object box) => MarshalInspectable<object>.DisposeAbiArray(box);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    internal sealed class ToggleMenuFlyoutItemAutomationPeerRcwFactoryAttribute : global::WinRT.WinRTImplementationTypeRcwFactoryAttribute
    {
        public override object CreateInstance(global::WinRT.IInspectable inspectable)
            => new global::Microsoft.UI.Xaml.Automation.Peers.ToggleMenuFlyoutItemAutomationPeer(inspectable.ObjRef);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    public struct ToggleSplitButtonAutomationPeer
    {

        public static IObjectReference CreateMarshaler(global::Microsoft.UI.Xaml.Automation.Peers.ToggleSplitButtonAutomationPeer obj) => obj is null ? null : MarshalInspectable<global::Microsoft.UI.Xaml.Automation.Peers.ToggleSplitButtonAutomationPeer>.CreateMarshaler<IUnknownVftbl>(obj, global::ABI.Microsoft.UI.Xaml.Automation.Peers.IToggleSplitButtonAutomationPeerMethods.IID);
        public static ObjectReferenceValue CreateMarshaler2(global::Microsoft.UI.Xaml.Automation.Peers.ToggleSplitButtonAutomationPeer obj) => MarshalInspectable<object>.CreateMarshaler2(obj, global::ABI.Microsoft.UI.Xaml.Automation.Peers.IToggleSplitButtonAutomationPeerMethods.IID);
        public static IntPtr GetAbi(IObjectReference value) => value is null ? IntPtr.Zero : MarshalInterfaceHelper<object>.GetAbi(value);
        public static global::Microsoft.UI.Xaml.Automation.Peers.ToggleSplitButtonAutomationPeer FromAbi(IntPtr thisPtr) => global::Microsoft.UI.Xaml.Automation.Peers.ToggleSplitButtonAutomationPeer.FromAbi(thisPtr);
        public static IntPtr FromManaged(global::Microsoft.UI.Xaml.Automation.Peers.ToggleSplitButtonAutomationPeer obj) => obj is null ? IntPtr.Zero : CreateMarshaler2(obj).Detach();
        public static unsafe MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.ToggleSplitButtonAutomationPeer>.MarshalerArray CreateMarshalerArray(global::Microsoft.UI.Xaml.Automation.Peers.ToggleSplitButtonAutomationPeer[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.ToggleSplitButtonAutomationPeer>.CreateMarshalerArray2(array, (o) => CreateMarshaler2(o));
        public static (int length, IntPtr data) GetAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.ToggleSplitButtonAutomationPeer>.GetAbiArray(box);
        public static unsafe global::Microsoft.UI.Xaml.Automation.Peers.ToggleSplitButtonAutomationPeer[] FromAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.ToggleSplitButtonAutomationPeer>.FromAbiArray(box, FromAbi);
        public static void CopyAbiArray(global::Microsoft.UI.Xaml.Automation.Peers.ToggleSplitButtonAutomationPeer[] array, object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.ToggleSplitButtonAutomationPeer>.CopyAbiArray(array, box, FromAbi);
        public static (int length, IntPtr data) FromManagedArray(global::Microsoft.UI.Xaml.Automation.Peers.ToggleSplitButtonAutomationPeer[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.ToggleSplitButtonAutomationPeer>.FromManagedArray(array, (o) => FromManaged(o));
        public static void DisposeMarshaler(IObjectReference value) => MarshalInspectable<object>.DisposeMarshaler(value);
        public static void DisposeMarshalerArray(MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.ToggleSplitButtonAutomationPeer>.MarshalerArray array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.ToggleSplitButtonAutomationPeer>.DisposeMarshalerArray(array);
        public static void DisposeAbi(IntPtr abi) => MarshalInspectable<object>.DisposeAbi(abi);
        public static unsafe void DisposeAbiArray(object box) => MarshalInspectable<object>.DisposeAbiArray(box);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    internal sealed class ToggleSplitButtonAutomationPeerRcwFactoryAttribute : global::WinRT.WinRTImplementationTypeRcwFactoryAttribute
    {
        public override object CreateInstance(global::WinRT.IInspectable inspectable)
            => new global::Microsoft.UI.Xaml.Automation.Peers.ToggleSplitButtonAutomationPeer(inspectable.ObjRef);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    public struct ToggleSwitchAutomationPeer
    {

        public static IObjectReference CreateMarshaler(global::Microsoft.UI.Xaml.Automation.Peers.ToggleSwitchAutomationPeer obj) => obj is null ? null : MarshalInspectable<global::Microsoft.UI.Xaml.Automation.Peers.ToggleSwitchAutomationPeer>.CreateMarshaler<IUnknownVftbl>(obj, global::ABI.Microsoft.UI.Xaml.Automation.Peers.IToggleSwitchAutomationPeerMethods.IID);
        public static ObjectReferenceValue CreateMarshaler2(global::Microsoft.UI.Xaml.Automation.Peers.ToggleSwitchAutomationPeer obj) => MarshalInspectable<object>.CreateMarshaler2(obj, global::ABI.Microsoft.UI.Xaml.Automation.Peers.IToggleSwitchAutomationPeerMethods.IID);
        public static IntPtr GetAbi(IObjectReference value) => value is null ? IntPtr.Zero : MarshalInterfaceHelper<object>.GetAbi(value);
        public static global::Microsoft.UI.Xaml.Automation.Peers.ToggleSwitchAutomationPeer FromAbi(IntPtr thisPtr) => global::Microsoft.UI.Xaml.Automation.Peers.ToggleSwitchAutomationPeer.FromAbi(thisPtr);
        public static IntPtr FromManaged(global::Microsoft.UI.Xaml.Automation.Peers.ToggleSwitchAutomationPeer obj) => obj is null ? IntPtr.Zero : CreateMarshaler2(obj).Detach();
        public static unsafe MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.ToggleSwitchAutomationPeer>.MarshalerArray CreateMarshalerArray(global::Microsoft.UI.Xaml.Automation.Peers.ToggleSwitchAutomationPeer[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.ToggleSwitchAutomationPeer>.CreateMarshalerArray2(array, (o) => CreateMarshaler2(o));
        public static (int length, IntPtr data) GetAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.ToggleSwitchAutomationPeer>.GetAbiArray(box);
        public static unsafe global::Microsoft.UI.Xaml.Automation.Peers.ToggleSwitchAutomationPeer[] FromAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.ToggleSwitchAutomationPeer>.FromAbiArray(box, FromAbi);
        public static void CopyAbiArray(global::Microsoft.UI.Xaml.Automation.Peers.ToggleSwitchAutomationPeer[] array, object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.ToggleSwitchAutomationPeer>.CopyAbiArray(array, box, FromAbi);
        public static (int length, IntPtr data) FromManagedArray(global::Microsoft.UI.Xaml.Automation.Peers.ToggleSwitchAutomationPeer[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.ToggleSwitchAutomationPeer>.FromManagedArray(array, (o) => FromManaged(o));
        public static void DisposeMarshaler(IObjectReference value) => MarshalInspectable<object>.DisposeMarshaler(value);
        public static void DisposeMarshalerArray(MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.ToggleSwitchAutomationPeer>.MarshalerArray array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.ToggleSwitchAutomationPeer>.DisposeMarshalerArray(array);
        public static void DisposeAbi(IntPtr abi) => MarshalInspectable<object>.DisposeAbi(abi);
        public static unsafe void DisposeAbiArray(object box) => MarshalInspectable<object>.DisposeAbiArray(box);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    internal sealed class ToggleSwitchAutomationPeerRcwFactoryAttribute : global::WinRT.WinRTImplementationTypeRcwFactoryAttribute
    {
        public override object CreateInstance(global::WinRT.IInspectable inspectable)
            => new global::Microsoft.UI.Xaml.Automation.Peers.ToggleSwitchAutomationPeer(inspectable.ObjRef);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    public struct TreeViewItemAutomationPeer
    {

        public static IObjectReference CreateMarshaler(global::Microsoft.UI.Xaml.Automation.Peers.TreeViewItemAutomationPeer obj) => obj is null ? null : MarshalInspectable<global::Microsoft.UI.Xaml.Automation.Peers.TreeViewItemAutomationPeer>.CreateMarshaler<IUnknownVftbl>(obj, global::ABI.Microsoft.UI.Xaml.Automation.Peers.ITreeViewItemAutomationPeerMethods.IID);
        public static ObjectReferenceValue CreateMarshaler2(global::Microsoft.UI.Xaml.Automation.Peers.TreeViewItemAutomationPeer obj) => MarshalInspectable<object>.CreateMarshaler2(obj, global::ABI.Microsoft.UI.Xaml.Automation.Peers.ITreeViewItemAutomationPeerMethods.IID);
        public static IntPtr GetAbi(IObjectReference value) => value is null ? IntPtr.Zero : MarshalInterfaceHelper<object>.GetAbi(value);
        public static global::Microsoft.UI.Xaml.Automation.Peers.TreeViewItemAutomationPeer FromAbi(IntPtr thisPtr) => global::Microsoft.UI.Xaml.Automation.Peers.TreeViewItemAutomationPeer.FromAbi(thisPtr);
        public static IntPtr FromManaged(global::Microsoft.UI.Xaml.Automation.Peers.TreeViewItemAutomationPeer obj) => obj is null ? IntPtr.Zero : CreateMarshaler2(obj).Detach();
        public static unsafe MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.TreeViewItemAutomationPeer>.MarshalerArray CreateMarshalerArray(global::Microsoft.UI.Xaml.Automation.Peers.TreeViewItemAutomationPeer[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.TreeViewItemAutomationPeer>.CreateMarshalerArray2(array, (o) => CreateMarshaler2(o));
        public static (int length, IntPtr data) GetAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.TreeViewItemAutomationPeer>.GetAbiArray(box);
        public static unsafe global::Microsoft.UI.Xaml.Automation.Peers.TreeViewItemAutomationPeer[] FromAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.TreeViewItemAutomationPeer>.FromAbiArray(box, FromAbi);
        public static void CopyAbiArray(global::Microsoft.UI.Xaml.Automation.Peers.TreeViewItemAutomationPeer[] array, object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.TreeViewItemAutomationPeer>.CopyAbiArray(array, box, FromAbi);
        public static (int length, IntPtr data) FromManagedArray(global::Microsoft.UI.Xaml.Automation.Peers.TreeViewItemAutomationPeer[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.TreeViewItemAutomationPeer>.FromManagedArray(array, (o) => FromManaged(o));
        public static void DisposeMarshaler(IObjectReference value) => MarshalInspectable<object>.DisposeMarshaler(value);
        public static void DisposeMarshalerArray(MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.TreeViewItemAutomationPeer>.MarshalerArray array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.TreeViewItemAutomationPeer>.DisposeMarshalerArray(array);
        public static void DisposeAbi(IntPtr abi) => MarshalInspectable<object>.DisposeAbi(abi);
        public static unsafe void DisposeAbiArray(object box) => MarshalInspectable<object>.DisposeAbiArray(box);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    internal sealed class TreeViewItemAutomationPeerRcwFactoryAttribute : global::WinRT.WinRTImplementationTypeRcwFactoryAttribute
    {
        public override object CreateInstance(global::WinRT.IInspectable inspectable)
            => new global::Microsoft.UI.Xaml.Automation.Peers.TreeViewItemAutomationPeer(inspectable.ObjRef);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    public struct TreeViewItemDataAutomationPeer
    {

        public static IObjectReference CreateMarshaler(global::Microsoft.UI.Xaml.Automation.Peers.TreeViewItemDataAutomationPeer obj) => obj is null ? null : MarshalInspectable<global::Microsoft.UI.Xaml.Automation.Peers.TreeViewItemDataAutomationPeer>.CreateMarshaler<IUnknownVftbl>(obj, global::ABI.Microsoft.UI.Xaml.Automation.Peers.ITreeViewItemDataAutomationPeerMethods.IID);
        public static ObjectReferenceValue CreateMarshaler2(global::Microsoft.UI.Xaml.Automation.Peers.TreeViewItemDataAutomationPeer obj) => MarshalInspectable<object>.CreateMarshaler2(obj, global::ABI.Microsoft.UI.Xaml.Automation.Peers.ITreeViewItemDataAutomationPeerMethods.IID);
        public static IntPtr GetAbi(IObjectReference value) => value is null ? IntPtr.Zero : MarshalInterfaceHelper<object>.GetAbi(value);
        public static global::Microsoft.UI.Xaml.Automation.Peers.TreeViewItemDataAutomationPeer FromAbi(IntPtr thisPtr) => global::Microsoft.UI.Xaml.Automation.Peers.TreeViewItemDataAutomationPeer.FromAbi(thisPtr);
        public static IntPtr FromManaged(global::Microsoft.UI.Xaml.Automation.Peers.TreeViewItemDataAutomationPeer obj) => obj is null ? IntPtr.Zero : CreateMarshaler2(obj).Detach();
        public static unsafe MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.TreeViewItemDataAutomationPeer>.MarshalerArray CreateMarshalerArray(global::Microsoft.UI.Xaml.Automation.Peers.TreeViewItemDataAutomationPeer[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.TreeViewItemDataAutomationPeer>.CreateMarshalerArray2(array, (o) => CreateMarshaler2(o));
        public static (int length, IntPtr data) GetAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.TreeViewItemDataAutomationPeer>.GetAbiArray(box);
        public static unsafe global::Microsoft.UI.Xaml.Automation.Peers.TreeViewItemDataAutomationPeer[] FromAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.TreeViewItemDataAutomationPeer>.FromAbiArray(box, FromAbi);
        public static void CopyAbiArray(global::Microsoft.UI.Xaml.Automation.Peers.TreeViewItemDataAutomationPeer[] array, object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.TreeViewItemDataAutomationPeer>.CopyAbiArray(array, box, FromAbi);
        public static (int length, IntPtr data) FromManagedArray(global::Microsoft.UI.Xaml.Automation.Peers.TreeViewItemDataAutomationPeer[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.TreeViewItemDataAutomationPeer>.FromManagedArray(array, (o) => FromManaged(o));
        public static void DisposeMarshaler(IObjectReference value) => MarshalInspectable<object>.DisposeMarshaler(value);
        public static void DisposeMarshalerArray(MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.TreeViewItemDataAutomationPeer>.MarshalerArray array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.TreeViewItemDataAutomationPeer>.DisposeMarshalerArray(array);
        public static void DisposeAbi(IntPtr abi) => MarshalInspectable<object>.DisposeAbi(abi);
        public static unsafe void DisposeAbiArray(object box) => MarshalInspectable<object>.DisposeAbiArray(box);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    internal sealed class TreeViewItemDataAutomationPeerRcwFactoryAttribute : global::WinRT.WinRTImplementationTypeRcwFactoryAttribute
    {
        public override object CreateInstance(global::WinRT.IInspectable inspectable)
            => new global::Microsoft.UI.Xaml.Automation.Peers.TreeViewItemDataAutomationPeer(inspectable.ObjRef);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    public struct TreeViewListAutomationPeer
    {

        public static IObjectReference CreateMarshaler(global::Microsoft.UI.Xaml.Automation.Peers.TreeViewListAutomationPeer obj) => obj is null ? null : MarshalInspectable<global::Microsoft.UI.Xaml.Automation.Peers.TreeViewListAutomationPeer>.CreateMarshaler<IUnknownVftbl>(obj, global::ABI.Microsoft.UI.Xaml.Automation.Peers.ITreeViewListAutomationPeerMethods.IID);
        public static ObjectReferenceValue CreateMarshaler2(global::Microsoft.UI.Xaml.Automation.Peers.TreeViewListAutomationPeer obj) => MarshalInspectable<object>.CreateMarshaler2(obj, global::ABI.Microsoft.UI.Xaml.Automation.Peers.ITreeViewListAutomationPeerMethods.IID);
        public static IntPtr GetAbi(IObjectReference value) => value is null ? IntPtr.Zero : MarshalInterfaceHelper<object>.GetAbi(value);
        public static global::Microsoft.UI.Xaml.Automation.Peers.TreeViewListAutomationPeer FromAbi(IntPtr thisPtr) => global::Microsoft.UI.Xaml.Automation.Peers.TreeViewListAutomationPeer.FromAbi(thisPtr);
        public static IntPtr FromManaged(global::Microsoft.UI.Xaml.Automation.Peers.TreeViewListAutomationPeer obj) => obj is null ? IntPtr.Zero : CreateMarshaler2(obj).Detach();
        public static unsafe MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.TreeViewListAutomationPeer>.MarshalerArray CreateMarshalerArray(global::Microsoft.UI.Xaml.Automation.Peers.TreeViewListAutomationPeer[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.TreeViewListAutomationPeer>.CreateMarshalerArray2(array, (o) => CreateMarshaler2(o));
        public static (int length, IntPtr data) GetAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.TreeViewListAutomationPeer>.GetAbiArray(box);
        public static unsafe global::Microsoft.UI.Xaml.Automation.Peers.TreeViewListAutomationPeer[] FromAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.TreeViewListAutomationPeer>.FromAbiArray(box, FromAbi);
        public static void CopyAbiArray(global::Microsoft.UI.Xaml.Automation.Peers.TreeViewListAutomationPeer[] array, object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.TreeViewListAutomationPeer>.CopyAbiArray(array, box, FromAbi);
        public static (int length, IntPtr data) FromManagedArray(global::Microsoft.UI.Xaml.Automation.Peers.TreeViewListAutomationPeer[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.TreeViewListAutomationPeer>.FromManagedArray(array, (o) => FromManaged(o));
        public static void DisposeMarshaler(IObjectReference value) => MarshalInspectable<object>.DisposeMarshaler(value);
        public static void DisposeMarshalerArray(MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.TreeViewListAutomationPeer>.MarshalerArray array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.TreeViewListAutomationPeer>.DisposeMarshalerArray(array);
        public static void DisposeAbi(IntPtr abi) => MarshalInspectable<object>.DisposeAbi(abi);
        public static unsafe void DisposeAbiArray(object box) => MarshalInspectable<object>.DisposeAbiArray(box);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    internal sealed class TreeViewListAutomationPeerRcwFactoryAttribute : global::WinRT.WinRTImplementationTypeRcwFactoryAttribute
    {
        public override object CreateInstance(global::WinRT.IInspectable inspectable)
            => new global::Microsoft.UI.Xaml.Automation.Peers.TreeViewListAutomationPeer(inspectable.ObjRef);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    public struct WebView2AutomationPeer
    {

        public static IObjectReference CreateMarshaler(global::Microsoft.UI.Xaml.Automation.Peers.WebView2AutomationPeer obj) => obj is null ? null : MarshalInspectable<global::Microsoft.UI.Xaml.Automation.Peers.WebView2AutomationPeer>.CreateMarshaler<IUnknownVftbl>(obj, global::ABI.Microsoft.UI.Xaml.Automation.Peers.IWebView2AutomationPeerMethods.IID);
        public static ObjectReferenceValue CreateMarshaler2(global::Microsoft.UI.Xaml.Automation.Peers.WebView2AutomationPeer obj) => MarshalInspectable<object>.CreateMarshaler2(obj, global::ABI.Microsoft.UI.Xaml.Automation.Peers.IWebView2AutomationPeerMethods.IID);
        public static IntPtr GetAbi(IObjectReference value) => value is null ? IntPtr.Zero : MarshalInterfaceHelper<object>.GetAbi(value);
        public static global::Microsoft.UI.Xaml.Automation.Peers.WebView2AutomationPeer FromAbi(IntPtr thisPtr) => global::Microsoft.UI.Xaml.Automation.Peers.WebView2AutomationPeer.FromAbi(thisPtr);
        public static IntPtr FromManaged(global::Microsoft.UI.Xaml.Automation.Peers.WebView2AutomationPeer obj) => obj is null ? IntPtr.Zero : CreateMarshaler2(obj).Detach();
        public static unsafe MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.WebView2AutomationPeer>.MarshalerArray CreateMarshalerArray(global::Microsoft.UI.Xaml.Automation.Peers.WebView2AutomationPeer[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.WebView2AutomationPeer>.CreateMarshalerArray2(array, (o) => CreateMarshaler2(o));
        public static (int length, IntPtr data) GetAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.WebView2AutomationPeer>.GetAbiArray(box);
        public static unsafe global::Microsoft.UI.Xaml.Automation.Peers.WebView2AutomationPeer[] FromAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.WebView2AutomationPeer>.FromAbiArray(box, FromAbi);
        public static void CopyAbiArray(global::Microsoft.UI.Xaml.Automation.Peers.WebView2AutomationPeer[] array, object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.WebView2AutomationPeer>.CopyAbiArray(array, box, FromAbi);
        public static (int length, IntPtr data) FromManagedArray(global::Microsoft.UI.Xaml.Automation.Peers.WebView2AutomationPeer[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.WebView2AutomationPeer>.FromManagedArray(array, (o) => FromManaged(o));
        public static void DisposeMarshaler(IObjectReference value) => MarshalInspectable<object>.DisposeMarshaler(value);
        public static void DisposeMarshalerArray(MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.WebView2AutomationPeer>.MarshalerArray array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Peers.WebView2AutomationPeer>.DisposeMarshalerArray(array);
        public static void DisposeAbi(IntPtr abi) => MarshalInspectable<object>.DisposeAbi(abi);
        public static unsafe void DisposeAbiArray(object box) => MarshalInspectable<object>.DisposeAbiArray(box);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    internal sealed class WebView2AutomationPeerRcwFactoryAttribute : global::WinRT.WinRTImplementationTypeRcwFactoryAttribute
    {
        public override object CreateInstance(global::WinRT.IInspectable inspectable)
            => new global::Microsoft.UI.Xaml.Automation.Peers.WebView2AutomationPeer(inspectable.ObjRef);
    }
}
#pragma warning restore CA1416
