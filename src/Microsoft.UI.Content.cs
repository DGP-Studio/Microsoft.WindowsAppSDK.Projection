//------------------------------------------------------------------------------
// <auto-generated>
//     This file was generated by cswinrt.exe version 2.2.0.241111.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Diagnostics;
using System.Diagnostics.CodeAnalysis;
using System.Linq.Expressions;
using System.Reflection;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;
using WinRT;
using WinRT.Interop;


#pragma warning disable 0169 // warning CS0169: The field '...' is never used
#pragma warning disable 0649 // warning CS0169: Field '...' is never assigned to
#pragma warning disable CA2207, CA1063, CA1033, CA1001, CA2213

namespace Microsoft.UI.Content
{
    [global::WinRT.WindowsRuntimeType("Microsoft.UI")]
    [global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Content.ChildSiteLink))]
    [global::ABI.Microsoft.UI.Content.ChildSiteLinkRcwFactory]
    [global::WinRT.ProjectedRuntimeClass(typeof(IChildSiteLink))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.Foundation.WindowsAppSDKContract), 65543u)]
    public sealed class ChildSiteLink : global::System.IDisposable, global::Microsoft.UI.IClosableNotifier, IContentSiteAutomation, IContentSiteInput, IContentSiteLink, global::System.Runtime.InteropServices.ICustomQueryInterface, IWinRTObject, IEquatable<ChildSiteLink>
    {
        private IntPtr ThisPtr => _inner == null ? (((IWinRTObject)this).NativeObject).ThisPtr : _inner.ThisPtr;

        private readonly IObjectReference _inner = null;



        private IObjectReference _objRef_global__Microsoft_UI_Content_IChildSiteLink => _inner;
        private volatile IObjectReference ___objRef_global__System_IDisposable;
        private IObjectReference Make___objRef_global__System_IDisposable()
        {
            global::System.Threading.Interlocked.CompareExchange(ref ___objRef_global__System_IDisposable, ((IWinRTObject)this).NativeObject.As<IUnknownVftbl>(global::ABI.System.IDisposableMethods.IID), null);
            return ___objRef_global__System_IDisposable;
        }
        private IObjectReference _objRef_global__System_IDisposable => ___objRef_global__System_IDisposable ?? Make___objRef_global__System_IDisposable();

        private volatile IObjectReference ___objRef_global__Microsoft_UI_IClosableNotifier;
        private IObjectReference Make___objRef_global__Microsoft_UI_IClosableNotifier()
        {
            global::System.Threading.Interlocked.CompareExchange(ref ___objRef_global__Microsoft_UI_IClosableNotifier, ((IWinRTObject)this).NativeObject.As<IUnknownVftbl>(global::ABI.Microsoft.UI.IClosableNotifierMethods.IID), null);
            return ___objRef_global__Microsoft_UI_IClosableNotifier;
        }
        private IObjectReference _objRef_global__Microsoft_UI_IClosableNotifier => ___objRef_global__Microsoft_UI_IClosableNotifier ?? Make___objRef_global__Microsoft_UI_IClosableNotifier();

        private volatile IObjectReference ___objRef_global__Microsoft_UI_Content_IContentSiteAutomation;
        private IObjectReference Make___objRef_global__Microsoft_UI_Content_IContentSiteAutomation()
        {
            global::System.Threading.Interlocked.CompareExchange(ref ___objRef_global__Microsoft_UI_Content_IContentSiteAutomation, ((IWinRTObject)this).NativeObject.As<IUnknownVftbl>(global::ABI.Microsoft.UI.Content.IContentSiteAutomationMethods.IID), null);
            return ___objRef_global__Microsoft_UI_Content_IContentSiteAutomation;
        }
        private IObjectReference _objRef_global__Microsoft_UI_Content_IContentSiteAutomation => ___objRef_global__Microsoft_UI_Content_IContentSiteAutomation ?? Make___objRef_global__Microsoft_UI_Content_IContentSiteAutomation();

        private volatile IObjectReference ___objRef_global__Microsoft_UI_Content_IContentSiteInput;
        private IObjectReference Make___objRef_global__Microsoft_UI_Content_IContentSiteInput()
        {
            global::System.Threading.Interlocked.CompareExchange(ref ___objRef_global__Microsoft_UI_Content_IContentSiteInput, ((IWinRTObject)this).NativeObject.As<IUnknownVftbl>(global::ABI.Microsoft.UI.Content.IContentSiteInputMethods.IID), null);
            return ___objRef_global__Microsoft_UI_Content_IContentSiteInput;
        }
        private IObjectReference _objRef_global__Microsoft_UI_Content_IContentSiteInput => ___objRef_global__Microsoft_UI_Content_IContentSiteInput ?? Make___objRef_global__Microsoft_UI_Content_IContentSiteInput();

        private volatile IObjectReference ___objRef_global__Microsoft_UI_Content_IContentSiteLink;
        private IObjectReference Make___objRef_global__Microsoft_UI_Content_IContentSiteLink()
        {
            global::System.Threading.Interlocked.CompareExchange(ref ___objRef_global__Microsoft_UI_Content_IContentSiteLink, ((IWinRTObject)this).NativeObject.As<IUnknownVftbl>(global::ABI.Microsoft.UI.Content.IContentSiteLinkMethods.IID), null);
            return ___objRef_global__Microsoft_UI_Content_IContentSiteLink;
        }
        private IObjectReference _objRef_global__Microsoft_UI_Content_IContentSiteLink => ___objRef_global__Microsoft_UI_Content_IContentSiteLink ?? Make___objRef_global__Microsoft_UI_Content_IContentSiteLink();



        public static I As<I>() => ActivationFactory.Get("Microsoft.UI.Content.ChildSiteLink").AsInterface<I>();

        private static volatile IObjectReference ___objRef_global__Microsoft_UI_Content_IChildSiteLinkStatics;
        private static IObjectReference _objRef_global__Microsoft_UI_Content_IChildSiteLinkStatics
        {
            get
            { 
                var factory = ___objRef_global__Microsoft_UI_Content_IChildSiteLinkStatics;
                if (factory != null && factory.IsInCurrentContext)
                {
                    return factory;
                }
                else
                {
                    return ___objRef_global__Microsoft_UI_Content_IChildSiteLinkStatics = ActivationFactory.Get("Microsoft.UI.Content.ChildSiteLink", global::ABI.Microsoft.UI.Content.IChildSiteLinkStaticsMethods.IID);
                }
            }
        }

        public static ChildSiteLink Create(ContentIsland parent, global::Microsoft.UI.Composition.ContainerVisual placementVisual) => global::ABI.Microsoft.UI.Content.IChildSiteLinkStaticsMethods.Create(_objRef_global__Microsoft_UI_Content_IChildSiteLinkStatics, parent, placementVisual);

        public static ChildSiteLink CreateForSystemVisual(ContentIsland parent, global::Windows.UI.Composition.ContainerVisual placementVisual) => global::ABI.Microsoft.UI.Content.IChildSiteLinkStaticsMethods.CreateForSystemVisual(_objRef_global__Microsoft_UI_Content_IChildSiteLinkStatics, parent, placementVisual);

        public static ChildSiteLink FromAbi(IntPtr thisPtr)
        {
            if (thisPtr == IntPtr.Zero) return null;
            return MarshalInspectable<ChildSiteLink>.FromAbi(thisPtr);
        }

        internal ChildSiteLink(IObjectReference objRef)
        {
            _inner = objRef.As(global::ABI.Microsoft.UI.Content.IChildSiteLinkMethods.IID);

        }


        public static bool operator ==(ChildSiteLink x, ChildSiteLink y) => (x?.ThisPtr ?? IntPtr.Zero) == (y?.ThisPtr ?? IntPtr.Zero);
        public static bool operator !=(ChildSiteLink x, ChildSiteLink y) => !(x == y);
        public bool Equals(ChildSiteLink other) => this == other;
        public override bool Equals(object obj) => obj is ChildSiteLink that && this == that;
        public override int GetHashCode() => ThisPtr.GetHashCode();


        bool IWinRTObject.HasUnwrappableNativeObject => true;
        IObjectReference IWinRTObject.NativeObject => _inner;
        private volatile global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> _queryInterfaceCache;
        private global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> MakeQueryInterfaceCache()
        {
            global::System.Threading.Interlocked.CompareExchange(ref _queryInterfaceCache, new global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference>(), null); 
            return _queryInterfaceCache;
        }
        global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> IWinRTObject.QueryInterfaceCache => _queryInterfaceCache ?? MakeQueryInterfaceCache();
        private volatile global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> _additionalTypeData;
        private global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> MakeAdditionalTypeData()
        {
            global::System.Threading.Interlocked.CompareExchange(ref _additionalTypeData, new global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object>(), null); 
            return _additionalTypeData;
        }
        global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> IWinRTObject.AdditionalTypeData => _additionalTypeData ?? MakeAdditionalTypeData();

        private struct InterfaceTag<I>{};


        public void Connect(ContentIsland content) => global::ABI.Microsoft.UI.Content.IChildSiteLinkMethods.Connect(_objRef_global__Microsoft_UI_Content_IChildSiteLink, content);

        public void Dispose() => global::ABI.System.IDisposableMethods.Dispose(_objRef_global__System_IDisposable);

        public event global::Microsoft.UI.ClosableNotifierHandler Closed
        {
            add => global::ABI.Microsoft.UI.IClosableNotifierMethods.Get_Closed2(_objRef_global__Microsoft_UI_IClosableNotifier, (IWinRTObject)this).Subscribe(value);
            remove => global::ABI.Microsoft.UI.IClosableNotifierMethods.Get_Closed2(_objRef_global__Microsoft_UI_IClosableNotifier, (IWinRTObject)this).Unsubscribe(value);
        }

        public event global::Microsoft.UI.ClosableNotifierHandler FrameworkClosed
        {
            add => global::ABI.Microsoft.UI.IClosableNotifierMethods.Get_FrameworkClosed2(_objRef_global__Microsoft_UI_IClosableNotifier, (IWinRTObject)this).Subscribe(value);
            remove => global::ABI.Microsoft.UI.IClosableNotifierMethods.Get_FrameworkClosed2(_objRef_global__Microsoft_UI_IClosableNotifier, (IWinRTObject)this).Unsubscribe(value);
        }

        public event global::Windows.Foundation.TypedEventHandler<IContentSiteAutomation, ContentSiteAutomationProviderRequestedEventArgs> FragmentRootAutomationProviderRequested
        {
            add => global::ABI.Microsoft.UI.Content.IContentSiteAutomationMethods.Get_FragmentRootAutomationProviderRequested2(_objRef_global__Microsoft_UI_Content_IContentSiteAutomation, (IWinRTObject)this).Subscribe(value);
            remove => global::ABI.Microsoft.UI.Content.IContentSiteAutomationMethods.Get_FragmentRootAutomationProviderRequested2(_objRef_global__Microsoft_UI_Content_IContentSiteAutomation, (IWinRTObject)this).Unsubscribe(value);
        }

        public event global::Windows.Foundation.TypedEventHandler<IContentSiteAutomation, ContentSiteAutomationProviderRequestedEventArgs> NextSiblingAutomationProviderRequested
        {
            add => global::ABI.Microsoft.UI.Content.IContentSiteAutomationMethods.Get_NextSiblingAutomationProviderRequested2(_objRef_global__Microsoft_UI_Content_IContentSiteAutomation, (IWinRTObject)this).Subscribe(value);
            remove => global::ABI.Microsoft.UI.Content.IContentSiteAutomationMethods.Get_NextSiblingAutomationProviderRequested2(_objRef_global__Microsoft_UI_Content_IContentSiteAutomation, (IWinRTObject)this).Unsubscribe(value);
        }

        public event global::Windows.Foundation.TypedEventHandler<IContentSiteAutomation, ContentSiteAutomationProviderRequestedEventArgs> ParentAutomationProviderRequested
        {
            add => global::ABI.Microsoft.UI.Content.IContentSiteAutomationMethods.Get_ParentAutomationProviderRequested2(_objRef_global__Microsoft_UI_Content_IContentSiteAutomation, (IWinRTObject)this).Subscribe(value);
            remove => global::ABI.Microsoft.UI.Content.IContentSiteAutomationMethods.Get_ParentAutomationProviderRequested2(_objRef_global__Microsoft_UI_Content_IContentSiteAutomation, (IWinRTObject)this).Unsubscribe(value);
        }

        public event global::Windows.Foundation.TypedEventHandler<IContentSiteAutomation, ContentSiteAutomationProviderRequestedEventArgs> PreviousSiblingAutomationProviderRequested
        {
            add => global::ABI.Microsoft.UI.Content.IContentSiteAutomationMethods.Get_PreviousSiblingAutomationProviderRequested2(_objRef_global__Microsoft_UI_Content_IContentSiteAutomation, (IWinRTObject)this).Subscribe(value);
            remove => global::ABI.Microsoft.UI.Content.IContentSiteAutomationMethods.Get_PreviousSiblingAutomationProviderRequested2(_objRef_global__Microsoft_UI_Content_IContentSiteAutomation, (IWinRTObject)this).Unsubscribe(value);
        }

        public global::System.Numerics.Vector2 ActualSize
        {
            get => global::ABI.Microsoft.UI.Content.IChildSiteLinkMethods.get_ActualSize(_objRef_global__Microsoft_UI_Content_IChildSiteLink);
            set => global::ABI.Microsoft.UI.Content.IChildSiteLinkMethods.set_ActualSize(_objRef_global__Microsoft_UI_Content_IChildSiteLink, value);
        }

        public ContentAutomationOptions AutomationOption
        {
            get => global::ABI.Microsoft.UI.Content.IContentSiteAutomationMethods.get_AutomationOption(_objRef_global__Microsoft_UI_Content_IContentSiteAutomation);
            set => global::ABI.Microsoft.UI.Content.IContentSiteAutomationMethods.set_AutomationOption(_objRef_global__Microsoft_UI_Content_IContentSiteAutomation, value);
        }

        public object AutomationProvider => global::ABI.Microsoft.UI.Content.IContentSiteAutomationMethods.get_AutomationProvider(_objRef_global__Microsoft_UI_Content_IContentSiteAutomation);

        public global::Microsoft.UI.Dispatching.DispatcherQueue DispatcherQueue => global::ABI.Microsoft.UI.Content.IChildSiteLinkMethods.get_DispatcherQueue(_objRef_global__Microsoft_UI_Content_IChildSiteLink);

        public bool IsClosed => global::ABI.Microsoft.UI.IClosableNotifierMethods.get_IsClosed(_objRef_global__Microsoft_UI_IClosableNotifier);

        public global::System.Numerics.Matrix4x4 LocalToParentTransformMatrix
        {
            get => global::ABI.Microsoft.UI.Content.IChildSiteLinkMethods.get_LocalToParentTransformMatrix(_objRef_global__Microsoft_UI_Content_IChildSiteLink);
            set => global::ABI.Microsoft.UI.Content.IChildSiteLinkMethods.set_LocalToParentTransformMatrix(_objRef_global__Microsoft_UI_Content_IChildSiteLink, value);
        }

        public ContentIsland Parent => global::ABI.Microsoft.UI.Content.IContentSiteLinkMethods.get_Parent(_objRef_global__Microsoft_UI_Content_IContentSiteLink);

        public bool ProcessesKeyboardInput
        {
            get => global::ABI.Microsoft.UI.Content.IContentSiteInputMethods.get_ProcessesKeyboardInput(_objRef_global__Microsoft_UI_Content_IContentSiteInput);
            set => global::ABI.Microsoft.UI.Content.IContentSiteInputMethods.set_ProcessesKeyboardInput(_objRef_global__Microsoft_UI_Content_IContentSiteInput, value);
        }

        public bool ProcessesPointerInput
        {
            get => global::ABI.Microsoft.UI.Content.IContentSiteInputMethods.get_ProcessesPointerInput(_objRef_global__Microsoft_UI_Content_IContentSiteInput);
            set => global::ABI.Microsoft.UI.Content.IContentSiteInputMethods.set_ProcessesPointerInput(_objRef_global__Microsoft_UI_Content_IContentSiteInput, value);
        }

        public ContentSiteView SiteView => global::ABI.Microsoft.UI.Content.IChildSiteLinkMethods.get_SiteView(_objRef_global__Microsoft_UI_Content_IChildSiteLink);

        private bool IsOverridableInterface(Guid iid) => false;

        global::System.Runtime.InteropServices.CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(ref Guid iid, out IntPtr ppv)
        {
            ppv = IntPtr.Zero;
            if (IsOverridableInterface(iid) || global::WinRT.Interop.IID.IID_IInspectable == iid)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
            }

            if (((IWinRTObject)this).NativeObject.TryAs(iid, out ppv) >= 0)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.Handled;
            }

            return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
        }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI")]
    [global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Content.ContentAppWindowBridge))]
    [global::ABI.Microsoft.UI.Content.ContentAppWindowBridgeRcwFactory]
    [global::WinRT.ProjectedRuntimeClass(typeof(IContentAppWindowBridge))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.Foundation.WindowsAppSDKContract), 65543u)]
    [global::Windows.Foundation.Metadata.Experimental]
    public sealed class ContentAppWindowBridge : IContentNodeOwner, global::System.Runtime.InteropServices.ICustomQueryInterface, IWinRTObject, IEquatable<ContentAppWindowBridge>
    {
        private IntPtr ThisPtr => _inner == null ? (((IWinRTObject)this).NativeObject).ThisPtr : _inner.ThisPtr;

        private readonly IObjectReference _inner = null;



        private IObjectReference _objRef_global__Microsoft_UI_Content_IContentAppWindowBridge => _inner;
        private volatile IObjectReference ___objRef_global__Microsoft_UI_Content_IContentNodeOwner;
        private IObjectReference Make___objRef_global__Microsoft_UI_Content_IContentNodeOwner()
        {
            global::System.Threading.Interlocked.CompareExchange(ref ___objRef_global__Microsoft_UI_Content_IContentNodeOwner, ((IWinRTObject)this).NativeObject.As<IUnknownVftbl>(global::ABI.Microsoft.UI.Content.IContentNodeOwnerMethods.IID), null);
            return ___objRef_global__Microsoft_UI_Content_IContentNodeOwner;
        }
        private IObjectReference _objRef_global__Microsoft_UI_Content_IContentNodeOwner => ___objRef_global__Microsoft_UI_Content_IContentNodeOwner ?? Make___objRef_global__Microsoft_UI_Content_IContentNodeOwner();



        public static I As<I>() => ActivationFactory.Get("Microsoft.UI.Content.ContentAppWindowBridge").AsInterface<I>();

        private static volatile IObjectReference ___objRef_global__Microsoft_UI_Content_IContentAppWindowBridgeStatics;
        private static IObjectReference _objRef_global__Microsoft_UI_Content_IContentAppWindowBridgeStatics
        {
            get
            { 
                var factory = ___objRef_global__Microsoft_UI_Content_IContentAppWindowBridgeStatics;
                if (factory != null && factory.IsInCurrentContext)
                {
                    return factory;
                }
                else
                {
                    return ___objRef_global__Microsoft_UI_Content_IContentAppWindowBridgeStatics = ActivationFactory.Get("Microsoft.UI.Content.ContentAppWindowBridge", global::ABI.Microsoft.UI.Content.IContentAppWindowBridgeStaticsMethods.IID);
                }
            }
        }

        public static ContentAppWindowBridge GetForWindowId(global::Microsoft.UI.WindowId childWindowId) => global::ABI.Microsoft.UI.Content.IContentAppWindowBridgeStaticsMethods.GetForWindowId(_objRef_global__Microsoft_UI_Content_IContentAppWindowBridgeStatics, childWindowId);

        public static ContentAppWindowBridge FromAbi(IntPtr thisPtr)
        {
            if (thisPtr == IntPtr.Zero) return null;
            return MarshalInspectable<ContentAppWindowBridge>.FromAbi(thisPtr);
        }

        internal ContentAppWindowBridge(IObjectReference objRef)
        {
            _inner = objRef.As(global::ABI.Microsoft.UI.Content.IContentAppWindowBridgeMethods.IID);

        }


        public static bool operator ==(ContentAppWindowBridge x, ContentAppWindowBridge y) => (x?.ThisPtr ?? IntPtr.Zero) == (y?.ThisPtr ?? IntPtr.Zero);
        public static bool operator !=(ContentAppWindowBridge x, ContentAppWindowBridge y) => !(x == y);
        public bool Equals(ContentAppWindowBridge other) => this == other;
        public override bool Equals(object obj) => obj is ContentAppWindowBridge that && this == that;
        public override int GetHashCode() => ThisPtr.GetHashCode();


        bool IWinRTObject.HasUnwrappableNativeObject => true;
        IObjectReference IWinRTObject.NativeObject => _inner;
        private volatile global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> _queryInterfaceCache;
        private global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> MakeQueryInterfaceCache()
        {
            global::System.Threading.Interlocked.CompareExchange(ref _queryInterfaceCache, new global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference>(), null); 
            return _queryInterfaceCache;
        }
        global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> IWinRTObject.QueryInterfaceCache => _queryInterfaceCache ?? MakeQueryInterfaceCache();
        private volatile global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> _additionalTypeData;
        private global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> MakeAdditionalTypeData()
        {
            global::System.Threading.Interlocked.CompareExchange(ref _additionalTypeData, new global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object>(), null); 
            return _additionalTypeData;
        }
        global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> IWinRTObject.AdditionalTypeData => _additionalTypeData ?? MakeAdditionalTypeData();

        private struct InterfaceTag<I>{};


        private bool IsOverridableInterface(Guid iid) => false;

        global::System.Runtime.InteropServices.CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(ref Guid iid, out IntPtr ppv)
        {
            ppv = IntPtr.Zero;
            if (IsOverridableInterface(iid) || global::WinRT.Interop.IID.IID_IInspectable == iid)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
            }

            if (((IWinRTObject)this).NativeObject.TryAs(iid, out ppv) >= 0)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.Handled;
            }

            return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
        }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI")][global::WinRT.WinRTExposedType(typeof(global::WinRT.EnumTypeDetails<ContentAutomationOptions>))][global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.Foundation.WindowsAppSDKContract), 65543u)]
    public enum ContentAutomationOptions : int
    {
        None = unchecked((int)0),
        FrameworkBased = unchecked((int)0x1),
        FragmentBased = unchecked((int)0x2),
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI")]
    [global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Content.ContentCoordinateConverter))]
    [global::ABI.Microsoft.UI.Content.ContentCoordinateConverterRcwFactory]
    [global::WinRT.ProjectedRuntimeClass(typeof(IContentCoordinateConverter))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.Foundation.WindowsAppSDKContract), 65540u)]
    public class ContentCoordinateConverter : global::System.Runtime.InteropServices.ICustomQueryInterface, IWinRTObject, IEquatable<ContentCoordinateConverter>
    {
        private IntPtr ThisPtr => _inner == null ? (((IWinRTObject)this).NativeObject).ThisPtr : _inner.ThisPtr;

        private readonly IObjectReference _inner = null;




        private volatile IObjectReference ___objRef_global__Microsoft_UI_Content_IContentCoordinateConverter;
        private IObjectReference Make___objRef_global__Microsoft_UI_Content_IContentCoordinateConverter()
        {
            global::System.Threading.Interlocked.CompareExchange(ref ___objRef_global__Microsoft_UI_Content_IContentCoordinateConverter, ((IWinRTObject)this).NativeObject.As<IUnknownVftbl>(global::ABI.Microsoft.UI.Content.IContentCoordinateConverterMethods.IID), null);
            return ___objRef_global__Microsoft_UI_Content_IContentCoordinateConverter;
        }
        private IObjectReference _objRef_global__Microsoft_UI_Content_IContentCoordinateConverter => ___objRef_global__Microsoft_UI_Content_IContentCoordinateConverter ?? Make___objRef_global__Microsoft_UI_Content_IContentCoordinateConverter();



        private static class _IContentCoordinateConverterFactoryMethods
        {}

        private static volatile IObjectReference ___objRef_global__Microsoft_UI_Content_IContentCoordinateConverterFactory;
        private static IObjectReference _objRef_global__Microsoft_UI_Content_IContentCoordinateConverterFactory
        {
            get
            { 
                var factory = ___objRef_global__Microsoft_UI_Content_IContentCoordinateConverterFactory;
                if (factory != null && factory.IsInCurrentContext)
                {
                    return factory;
                }
                else
                {
                    return ___objRef_global__Microsoft_UI_Content_IContentCoordinateConverterFactory = ActivationFactory.Get("Microsoft.UI.Content.ContentCoordinateConverter", global::ABI.Microsoft.UI.Content.IContentCoordinateConverterFactoryMethods.IID);
                }
            }
        }

        public static I As<I>() => ActivationFactory.Get("Microsoft.UI.Content.ContentCoordinateConverter").AsInterface<I>();

        private static volatile IObjectReference ___objRef_global__Microsoft_UI_Content_IContentCoordinateConverterStatics;
        private static IObjectReference _objRef_global__Microsoft_UI_Content_IContentCoordinateConverterStatics
        {
            get
            { 
                var factory = ___objRef_global__Microsoft_UI_Content_IContentCoordinateConverterStatics;
                if (factory != null && factory.IsInCurrentContext)
                {
                    return factory;
                }
                else
                {
                    return ___objRef_global__Microsoft_UI_Content_IContentCoordinateConverterStatics = ActivationFactory.Get("Microsoft.UI.Content.ContentCoordinateConverter", global::ABI.Microsoft.UI.Content.IContentCoordinateConverterStaticsMethods.IID);
                }
            }
        }

        public static ContentCoordinateConverter CreateForWindowId(global::Microsoft.UI.WindowId windowId) => global::ABI.Microsoft.UI.Content.IContentCoordinateConverterStaticsMethods.CreateForWindowId(_objRef_global__Microsoft_UI_Content_IContentCoordinateConverterStatics, windowId);

        public static ContentCoordinateConverter FromAbi(IntPtr thisPtr)
        {
            if (thisPtr == IntPtr.Zero) return null;
            return MarshalInspectable<ContentCoordinateConverter>.FromAbi(thisPtr);
        }

        protected internal ContentCoordinateConverter(IObjectReference objRef)
        {
            _inner = objRef.As(global::ABI.Microsoft.UI.Content.IContentCoordinateConverterMethods.IID);

        }


        public static bool operator ==(ContentCoordinateConverter x, ContentCoordinateConverter y) => (x?.ThisPtr ?? IntPtr.Zero) == (y?.ThisPtr ?? IntPtr.Zero);
        public static bool operator !=(ContentCoordinateConverter x, ContentCoordinateConverter y) => !(x == y);
        public bool Equals(ContentCoordinateConverter other) => this == other;
        public override bool Equals(object obj) => obj is ContentCoordinateConverter that && this == that;
        public override int GetHashCode() => ThisPtr.GetHashCode();


        protected ContentCoordinateConverter(global::WinRT.DerivedComposed _)
        {

        }
        bool IWinRTObject.HasUnwrappableNativeObject => this.GetType() == typeof(ContentCoordinateConverter);
        IObjectReference IWinRTObject.NativeObject => _inner;
        private volatile global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> _queryInterfaceCache;
        private global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> MakeQueryInterfaceCache()
        {
            global::System.Threading.Interlocked.CompareExchange(ref _queryInterfaceCache, new global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference>(), null); 
            return _queryInterfaceCache;
        }
        global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> IWinRTObject.QueryInterfaceCache => _queryInterfaceCache ?? MakeQueryInterfaceCache();
        private volatile global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> _additionalTypeData;
        private global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> MakeAdditionalTypeData()
        {
            global::System.Threading.Interlocked.CompareExchange(ref _additionalTypeData, new global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object>(), null); 
            return _additionalTypeData;
        }
        global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> IWinRTObject.AdditionalTypeData => _additionalTypeData ?? MakeAdditionalTypeData();

        private struct InterfaceTag<I>{};


        public global::Windows.Graphics.PointInt32 ConvertLocalToScreen(global::Windows.Foundation.Point localPoint) => global::ABI.Microsoft.UI.Content.IContentCoordinateConverterMethods.ConvertLocalToScreen(_objRef_global__Microsoft_UI_Content_IContentCoordinateConverter, localPoint);

        public global::Windows.Graphics.PointInt32[] ConvertLocalToScreen(global::Windows.Foundation.Point[] localPoints) => global::ABI.Microsoft.UI.Content.IContentCoordinateConverterMethods.ConvertLocalToScreen(_objRef_global__Microsoft_UI_Content_IContentCoordinateConverter, localPoints);

        public global::Windows.Graphics.PointInt32[] ConvertLocalToScreen(global::Windows.Foundation.Point[] localPoints, ContentCoordinateRoundingMode roundingMode) => global::ABI.Microsoft.UI.Content.IContentCoordinateConverterMethods.ConvertLocalToScreen(_objRef_global__Microsoft_UI_Content_IContentCoordinateConverter, localPoints, roundingMode);

        public global::Windows.Graphics.RectInt32 ConvertLocalToScreen(global::Windows.Foundation.Rect localRect) => global::ABI.Microsoft.UI.Content.IContentCoordinateConverterMethods.ConvertLocalToScreen(_objRef_global__Microsoft_UI_Content_IContentCoordinateConverter, localRect);

        public global::Windows.Foundation.Point ConvertScreenToLocal(global::Windows.Graphics.PointInt32 screenPoint) => global::ABI.Microsoft.UI.Content.IContentCoordinateConverterMethods.ConvertScreenToLocal(_objRef_global__Microsoft_UI_Content_IContentCoordinateConverter, screenPoint);

        public global::Windows.Foundation.Point[] ConvertScreenToLocal(global::Windows.Graphics.PointInt32[] screenPoints) => global::ABI.Microsoft.UI.Content.IContentCoordinateConverterMethods.ConvertScreenToLocal(_objRef_global__Microsoft_UI_Content_IContentCoordinateConverter, screenPoints);

        public global::Windows.Foundation.Rect ConvertScreenToLocal(global::Windows.Graphics.RectInt32 screenRect) => global::ABI.Microsoft.UI.Content.IContentCoordinateConverterMethods.ConvertScreenToLocal(_objRef_global__Microsoft_UI_Content_IContentCoordinateConverter, screenRect);

        protected virtual bool IsOverridableInterface(Guid iid) => false;

        global::System.Runtime.InteropServices.CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(ref Guid iid, out IntPtr ppv)
        {
            ppv = IntPtr.Zero;
            if (IsOverridableInterface(iid) || global::WinRT.Interop.IID.IID_IInspectable == iid)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
            }

            if (((IWinRTObject)this).NativeObject.TryAs(iid, out ppv) >= 0)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.Handled;
            }

            return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
        }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI")][global::WinRT.WinRTExposedType(typeof(global::WinRT.EnumTypeDetails<ContentCoordinateRoundingMode>))][global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.Foundation.WindowsAppSDKContract), 65540u)]
    public enum ContentCoordinateRoundingMode : int
    {
        Auto = unchecked((int)0),
        Floor = unchecked((int)0x1),
        Round = unchecked((int)0x2),
        Ceiling = unchecked((int)0x3),
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI")]
    [global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Content.ContentDeferral))]
    [global::ABI.Microsoft.UI.Content.ContentDeferralRcwFactory]
    [global::WinRT.ProjectedRuntimeClass(typeof(IContentDeferral))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.Foundation.WindowsAppSDKContract), 65540u)]
    public sealed class ContentDeferral : global::System.Runtime.InteropServices.ICustomQueryInterface, IWinRTObject, IEquatable<ContentDeferral>
    {
        private IntPtr ThisPtr => _inner == null ? (((IWinRTObject)this).NativeObject).ThisPtr : _inner.ThisPtr;

        private readonly IObjectReference _inner = null;



        private IObjectReference _objRef_global__Microsoft_UI_Content_IContentDeferral => _inner;


        public static ContentDeferral FromAbi(IntPtr thisPtr)
        {
            if (thisPtr == IntPtr.Zero) return null;
            return MarshalInspectable<ContentDeferral>.FromAbi(thisPtr);
        }

        internal ContentDeferral(IObjectReference objRef)
        {
            _inner = objRef.As(global::ABI.Microsoft.UI.Content.IContentDeferralMethods.IID);

        }


        public static bool operator ==(ContentDeferral x, ContentDeferral y) => (x?.ThisPtr ?? IntPtr.Zero) == (y?.ThisPtr ?? IntPtr.Zero);
        public static bool operator !=(ContentDeferral x, ContentDeferral y) => !(x == y);
        public bool Equals(ContentDeferral other) => this == other;
        public override bool Equals(object obj) => obj is ContentDeferral that && this == that;
        public override int GetHashCode() => ThisPtr.GetHashCode();


        bool IWinRTObject.HasUnwrappableNativeObject => true;
        IObjectReference IWinRTObject.NativeObject => _inner;
        private volatile global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> _queryInterfaceCache;
        private global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> MakeQueryInterfaceCache()
        {
            global::System.Threading.Interlocked.CompareExchange(ref _queryInterfaceCache, new global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference>(), null); 
            return _queryInterfaceCache;
        }
        global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> IWinRTObject.QueryInterfaceCache => _queryInterfaceCache ?? MakeQueryInterfaceCache();
        private volatile global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> _additionalTypeData;
        private global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> MakeAdditionalTypeData()
        {
            global::System.Threading.Interlocked.CompareExchange(ref _additionalTypeData, new global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object>(), null); 
            return _additionalTypeData;
        }
        global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> IWinRTObject.AdditionalTypeData => _additionalTypeData ?? MakeAdditionalTypeData();

        private struct InterfaceTag<I>{};


        public void Complete() => global::ABI.Microsoft.UI.Content.IContentDeferralMethods.Complete(_objRef_global__Microsoft_UI_Content_IContentDeferral);

        private bool IsOverridableInterface(Guid iid) => false;

        global::System.Runtime.InteropServices.CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(ref Guid iid, out IntPtr ppv)
        {
            ppv = IntPtr.Zero;
            if (IsOverridableInterface(iid) || global::WinRT.Interop.IID.IID_IInspectable == iid)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
            }

            if (((IWinRTObject)this).NativeObject.TryAs(iid, out ppv) >= 0)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.Handled;
            }

            return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
        }
    }
    [FlagsAttribute]
    [global::WinRT.WindowsRuntimeType("Microsoft.UI")][global::WinRT.WinRTExposedType(typeof(global::WinRT.EnumTypeDetails<ContentDisplayOrientations>))][global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.Foundation.WindowsAppSDKContract), 65543u)]
    [global::Windows.Foundation.Metadata.Experimental]
    public enum ContentDisplayOrientations : uint
    {
        None = unchecked((uint)0),
        Landscape = unchecked((uint)0x1),
        Portrait = unchecked((uint)0x2),
        LandscapeFlipped = unchecked((uint)0x4),
        PortraitFlipped = unchecked((uint)0x8),
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI")]
    [global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Content.ContentEnvironmentSettingChangedEventArgs))]
    [global::ABI.Microsoft.UI.Content.ContentEnvironmentSettingChangedEventArgsRcwFactory]
    [global::WinRT.ProjectedRuntimeClass(typeof(IContentEnvironmentSettingChangedEventArgs))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.Foundation.WindowsAppSDKContract), 65540u)]
    public sealed class ContentEnvironmentSettingChangedEventArgs : global::System.Runtime.InteropServices.ICustomQueryInterface, IWinRTObject, IEquatable<ContentEnvironmentSettingChangedEventArgs>
    {
        private IntPtr ThisPtr => _inner == null ? (((IWinRTObject)this).NativeObject).ThisPtr : _inner.ThisPtr;

        private readonly IObjectReference _inner = null;



        private IObjectReference _objRef_global__Microsoft_UI_Content_IContentEnvironmentSettingChangedEventArgs => _inner;


        public static ContentEnvironmentSettingChangedEventArgs FromAbi(IntPtr thisPtr)
        {
            if (thisPtr == IntPtr.Zero) return null;
            return MarshalInspectable<ContentEnvironmentSettingChangedEventArgs>.FromAbi(thisPtr);
        }

        internal ContentEnvironmentSettingChangedEventArgs(IObjectReference objRef)
        {
            _inner = objRef.As(global::ABI.Microsoft.UI.Content.IContentEnvironmentSettingChangedEventArgsMethods.IID);

        }


        public static bool operator ==(ContentEnvironmentSettingChangedEventArgs x, ContentEnvironmentSettingChangedEventArgs y) => (x?.ThisPtr ?? IntPtr.Zero) == (y?.ThisPtr ?? IntPtr.Zero);
        public static bool operator !=(ContentEnvironmentSettingChangedEventArgs x, ContentEnvironmentSettingChangedEventArgs y) => !(x == y);
        public bool Equals(ContentEnvironmentSettingChangedEventArgs other) => this == other;
        public override bool Equals(object obj) => obj is ContentEnvironmentSettingChangedEventArgs that && this == that;
        public override int GetHashCode() => ThisPtr.GetHashCode();


        bool IWinRTObject.HasUnwrappableNativeObject => true;
        IObjectReference IWinRTObject.NativeObject => _inner;
        private volatile global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> _queryInterfaceCache;
        private global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> MakeQueryInterfaceCache()
        {
            global::System.Threading.Interlocked.CompareExchange(ref _queryInterfaceCache, new global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference>(), null); 
            return _queryInterfaceCache;
        }
        global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> IWinRTObject.QueryInterfaceCache => _queryInterfaceCache ?? MakeQueryInterfaceCache();
        private volatile global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> _additionalTypeData;
        private global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> MakeAdditionalTypeData()
        {
            global::System.Threading.Interlocked.CompareExchange(ref _additionalTypeData, new global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object>(), null); 
            return _additionalTypeData;
        }
        global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> IWinRTObject.AdditionalTypeData => _additionalTypeData ?? MakeAdditionalTypeData();

        private struct InterfaceTag<I>{};


        public string SettingName => global::ABI.Microsoft.UI.Content.IContentEnvironmentSettingChangedEventArgsMethods.get_SettingName(_objRef_global__Microsoft_UI_Content_IContentEnvironmentSettingChangedEventArgs);

        private bool IsOverridableInterface(Guid iid) => false;

        global::System.Runtime.InteropServices.CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(ref Guid iid, out IntPtr ppv)
        {
            ppv = IntPtr.Zero;
            if (IsOverridableInterface(iid) || global::WinRT.Interop.IID.IID_IInspectable == iid)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
            }

            if (((IWinRTObject)this).NativeObject.TryAs(iid, out ppv) >= 0)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.Handled;
            }

            return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
        }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI")]
    [global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Content.ContentEnvironmentStateChangedEventArgs))]
    [global::ABI.Microsoft.UI.Content.ContentEnvironmentStateChangedEventArgsRcwFactory]
    [global::WinRT.ProjectedRuntimeClass(typeof(IContentEnvironmentStateChangedEventArgs))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.Foundation.WindowsAppSDKContract), 65540u)]
    public sealed class ContentEnvironmentStateChangedEventArgs : global::System.Runtime.InteropServices.ICustomQueryInterface, IWinRTObject, IEquatable<ContentEnvironmentStateChangedEventArgs>
    {
        private IntPtr ThisPtr => _inner == null ? (((IWinRTObject)this).NativeObject).ThisPtr : _inner.ThisPtr;

        private readonly IObjectReference _inner = null;



        private IObjectReference _objRef_global__Microsoft_UI_Content_IContentEnvironmentStateChangedEventArgs => _inner;
        private volatile IObjectReference ___objRef_global__Microsoft_UI_Content_IContentEnvironmentStateChangedEventArgs2;
        private IObjectReference Make___objRef_global__Microsoft_UI_Content_IContentEnvironmentStateChangedEventArgs2()
        {
            global::System.Threading.Interlocked.CompareExchange(ref ___objRef_global__Microsoft_UI_Content_IContentEnvironmentStateChangedEventArgs2, ((IWinRTObject)this).NativeObject.As<IUnknownVftbl>(global::ABI.Microsoft.UI.Content.IContentEnvironmentStateChangedEventArgs2Methods.IID), null);
            return ___objRef_global__Microsoft_UI_Content_IContentEnvironmentStateChangedEventArgs2;
        }
        private IObjectReference _objRef_global__Microsoft_UI_Content_IContentEnvironmentStateChangedEventArgs2 => ___objRef_global__Microsoft_UI_Content_IContentEnvironmentStateChangedEventArgs2 ?? Make___objRef_global__Microsoft_UI_Content_IContentEnvironmentStateChangedEventArgs2();



        public static ContentEnvironmentStateChangedEventArgs FromAbi(IntPtr thisPtr)
        {
            if (thisPtr == IntPtr.Zero) return null;
            return MarshalInspectable<ContentEnvironmentStateChangedEventArgs>.FromAbi(thisPtr);
        }

        internal ContentEnvironmentStateChangedEventArgs(IObjectReference objRef)
        {
            _inner = objRef.As(global::ABI.Microsoft.UI.Content.IContentEnvironmentStateChangedEventArgsMethods.IID);

        }


        public static bool operator ==(ContentEnvironmentStateChangedEventArgs x, ContentEnvironmentStateChangedEventArgs y) => (x?.ThisPtr ?? IntPtr.Zero) == (y?.ThisPtr ?? IntPtr.Zero);
        public static bool operator !=(ContentEnvironmentStateChangedEventArgs x, ContentEnvironmentStateChangedEventArgs y) => !(x == y);
        public bool Equals(ContentEnvironmentStateChangedEventArgs other) => this == other;
        public override bool Equals(object obj) => obj is ContentEnvironmentStateChangedEventArgs that && this == that;
        public override int GetHashCode() => ThisPtr.GetHashCode();


        bool IWinRTObject.HasUnwrappableNativeObject => true;
        IObjectReference IWinRTObject.NativeObject => _inner;
        private volatile global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> _queryInterfaceCache;
        private global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> MakeQueryInterfaceCache()
        {
            global::System.Threading.Interlocked.CompareExchange(ref _queryInterfaceCache, new global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference>(), null); 
            return _queryInterfaceCache;
        }
        global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> IWinRTObject.QueryInterfaceCache => _queryInterfaceCache ?? MakeQueryInterfaceCache();
        private volatile global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> _additionalTypeData;
        private global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> MakeAdditionalTypeData()
        {
            global::System.Threading.Interlocked.CompareExchange(ref _additionalTypeData, new global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object>(), null); 
            return _additionalTypeData;
        }
        global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> IWinRTObject.AdditionalTypeData => _additionalTypeData ?? MakeAdditionalTypeData();

        private struct InterfaceTag<I>{};


        public bool DidAppWindowIdChange => global::ABI.Microsoft.UI.Content.IContentEnvironmentStateChangedEventArgsMethods.get_DidAppWindowIdChange(_objRef_global__Microsoft_UI_Content_IContentEnvironmentStateChangedEventArgs);

        public bool DidDisplayIdChange => global::ABI.Microsoft.UI.Content.IContentEnvironmentStateChangedEventArgsMethods.get_DidDisplayIdChange(_objRef_global__Microsoft_UI_Content_IContentEnvironmentStateChangedEventArgs);

        public bool DidDisplayScaleChange => global::ABI.Microsoft.UI.Content.IContentEnvironmentStateChangedEventArgs2Methods.get_DidDisplayScaleChange(_objRef_global__Microsoft_UI_Content_IContentEnvironmentStateChangedEventArgs2);

        private bool IsOverridableInterface(Guid iid) => false;

        global::System.Runtime.InteropServices.CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(ref Guid iid, out IntPtr ppv)
        {
            ppv = IntPtr.Zero;
            if (IsOverridableInterface(iid) || global::WinRT.Interop.IID.IID_IInspectable == iid)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
            }

            if (((IWinRTObject)this).NativeObject.TryAs(iid, out ppv) >= 0)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.Handled;
            }

            return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
        }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI")]
    [global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Content.ContentExternalBackdropLink))]
    [global::ABI.Microsoft.UI.Content.ContentExternalBackdropLinkRcwFactory]
    [global::WinRT.ProjectedRuntimeClass(typeof(IContentExternalBackdropLink))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.Foundation.WindowsAppSDKContract), 65543u)]
    [global::Windows.Foundation.Metadata.Experimental]
    public sealed class ContentExternalBackdropLink : global::System.IDisposable, global::Microsoft.UI.Composition.ICompositionSupportsSystemBackdrop, global::System.Runtime.InteropServices.ICustomQueryInterface, IWinRTObject, IEquatable<ContentExternalBackdropLink>
    {
        private IntPtr ThisPtr => _inner == null ? (((IWinRTObject)this).NativeObject).ThisPtr : _inner.ThisPtr;

        private readonly IObjectReference _inner = null;



        private IObjectReference _objRef_global__Microsoft_UI_Content_IContentExternalBackdropLink => _inner;
        private volatile IObjectReference ___objRef_global__System_IDisposable;
        private IObjectReference Make___objRef_global__System_IDisposable()
        {
            global::System.Threading.Interlocked.CompareExchange(ref ___objRef_global__System_IDisposable, ((IWinRTObject)this).NativeObject.As<IUnknownVftbl>(global::ABI.System.IDisposableMethods.IID), null);
            return ___objRef_global__System_IDisposable;
        }
        private IObjectReference _objRef_global__System_IDisposable => ___objRef_global__System_IDisposable ?? Make___objRef_global__System_IDisposable();

        private volatile IObjectReference ___objRef_global__Microsoft_UI_Composition_ICompositionSupportsSystemBackdrop;
        private IObjectReference Make___objRef_global__Microsoft_UI_Composition_ICompositionSupportsSystemBackdrop()
        {
            global::System.Threading.Interlocked.CompareExchange(ref ___objRef_global__Microsoft_UI_Composition_ICompositionSupportsSystemBackdrop, ((IWinRTObject)this).NativeObject.As<IUnknownVftbl>(global::ABI.Microsoft.UI.Composition.ICompositionSupportsSystemBackdropMethods.IID), null);
            return ___objRef_global__Microsoft_UI_Composition_ICompositionSupportsSystemBackdrop;
        }
        private IObjectReference _objRef_global__Microsoft_UI_Composition_ICompositionSupportsSystemBackdrop => ___objRef_global__Microsoft_UI_Composition_ICompositionSupportsSystemBackdrop ?? Make___objRef_global__Microsoft_UI_Composition_ICompositionSupportsSystemBackdrop();



        public static I As<I>() => ActivationFactory.Get("Microsoft.UI.Content.ContentExternalBackdropLink").AsInterface<I>();

        private static volatile IObjectReference ___objRef_global__Microsoft_UI_Content_IContentExternalBackdropLinkStatics;
        private static IObjectReference _objRef_global__Microsoft_UI_Content_IContentExternalBackdropLinkStatics
        {
            get
            { 
                var factory = ___objRef_global__Microsoft_UI_Content_IContentExternalBackdropLinkStatics;
                if (factory != null && factory.IsInCurrentContext)
                {
                    return factory;
                }
                else
                {
                    return ___objRef_global__Microsoft_UI_Content_IContentExternalBackdropLinkStatics = ActivationFactory.Get("Microsoft.UI.Content.ContentExternalBackdropLink", global::ABI.Microsoft.UI.Content.IContentExternalBackdropLinkStaticsMethods.IID);
                }
            }
        }

        public static ContentExternalBackdropLink Create(global::Microsoft.UI.Composition.Compositor compositor) => global::ABI.Microsoft.UI.Content.IContentExternalBackdropLinkStaticsMethods.Create(_objRef_global__Microsoft_UI_Content_IContentExternalBackdropLinkStatics, compositor);

        public static ContentExternalBackdropLink FromAbi(IntPtr thisPtr)
        {
            if (thisPtr == IntPtr.Zero) return null;
            return MarshalInspectable<ContentExternalBackdropLink>.FromAbi(thisPtr);
        }

        internal ContentExternalBackdropLink(IObjectReference objRef)
        {
            _inner = objRef.As(global::ABI.Microsoft.UI.Content.IContentExternalBackdropLinkMethods.IID);

        }


        public static bool operator ==(ContentExternalBackdropLink x, ContentExternalBackdropLink y) => (x?.ThisPtr ?? IntPtr.Zero) == (y?.ThisPtr ?? IntPtr.Zero);
        public static bool operator !=(ContentExternalBackdropLink x, ContentExternalBackdropLink y) => !(x == y);
        public bool Equals(ContentExternalBackdropLink other) => this == other;
        public override bool Equals(object obj) => obj is ContentExternalBackdropLink that && this == that;
        public override int GetHashCode() => ThisPtr.GetHashCode();


        bool IWinRTObject.HasUnwrappableNativeObject => true;
        IObjectReference IWinRTObject.NativeObject => _inner;
        private volatile global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> _queryInterfaceCache;
        private global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> MakeQueryInterfaceCache()
        {
            global::System.Threading.Interlocked.CompareExchange(ref _queryInterfaceCache, new global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference>(), null); 
            return _queryInterfaceCache;
        }
        global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> IWinRTObject.QueryInterfaceCache => _queryInterfaceCache ?? MakeQueryInterfaceCache();
        private volatile global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> _additionalTypeData;
        private global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> MakeAdditionalTypeData()
        {
            global::System.Threading.Interlocked.CompareExchange(ref _additionalTypeData, new global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object>(), null); 
            return _additionalTypeData;
        }
        global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> IWinRTObject.AdditionalTypeData => _additionalTypeData ?? MakeAdditionalTypeData();

        private struct InterfaceTag<I>{};


        public void Dispose() => global::ABI.System.IDisposableMethods.Dispose(_objRef_global__System_IDisposable);

        public global::Microsoft.UI.Dispatching.DispatcherQueue DispatcherQueue => global::ABI.Microsoft.UI.Content.IContentExternalBackdropLinkMethods.get_DispatcherQueue(_objRef_global__Microsoft_UI_Content_IContentExternalBackdropLink);

        public global::Microsoft.UI.Composition.CompositionBorderMode ExternalBackdropBorderMode
        {
            get => global::ABI.Microsoft.UI.Content.IContentExternalBackdropLinkMethods.get_ExternalBackdropBorderMode(_objRef_global__Microsoft_UI_Content_IContentExternalBackdropLink);
            set => global::ABI.Microsoft.UI.Content.IContentExternalBackdropLinkMethods.set_ExternalBackdropBorderMode(_objRef_global__Microsoft_UI_Content_IContentExternalBackdropLink, value);
        }

        public global::Microsoft.UI.Composition.Visual PlacementVisual => global::ABI.Microsoft.UI.Content.IContentExternalBackdropLinkMethods.get_PlacementVisual(_objRef_global__Microsoft_UI_Content_IContentExternalBackdropLink);

        public global::Windows.UI.Composition.CompositionBrush SystemBackdrop
        {
            get => global::ABI.Microsoft.UI.Composition.ICompositionSupportsSystemBackdropMethods.get_SystemBackdrop(_objRef_global__Microsoft_UI_Composition_ICompositionSupportsSystemBackdrop);
            set => global::ABI.Microsoft.UI.Composition.ICompositionSupportsSystemBackdropMethods.set_SystemBackdrop(_objRef_global__Microsoft_UI_Composition_ICompositionSupportsSystemBackdrop, value);
        }

        private bool IsOverridableInterface(Guid iid) => false;

        global::System.Runtime.InteropServices.CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(ref Guid iid, out IntPtr ppv)
        {
            ppv = IntPtr.Zero;
            if (IsOverridableInterface(iid) || global::WinRT.Interop.IID.IID_IInspectable == iid)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
            }

            if (((IWinRTObject)this).NativeObject.TryAs(iid, out ppv) >= 0)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.Handled;
            }

            return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
        }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI")]
    [global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Content.ContentExternalOutputLink))]
    [global::ABI.Microsoft.UI.Content.ContentExternalOutputLinkRcwFactory]
    [global::WinRT.ProjectedRuntimeClass(typeof(IContentExternalOutputLink))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.Foundation.WindowsAppSDKContract), 65543u)]
    [global::Windows.Foundation.Metadata.Experimental]
    public sealed class ContentExternalOutputLink : global::System.IDisposable, global::System.Runtime.InteropServices.ICustomQueryInterface, IWinRTObject, IEquatable<ContentExternalOutputLink>
    {
        private IntPtr ThisPtr => _inner == null ? (((IWinRTObject)this).NativeObject).ThisPtr : _inner.ThisPtr;

        private readonly IObjectReference _inner = null;



        private IObjectReference _objRef_global__Microsoft_UI_Content_IContentExternalOutputLink => _inner;
        private volatile IObjectReference ___objRef_global__System_IDisposable;
        private IObjectReference Make___objRef_global__System_IDisposable()
        {
            global::System.Threading.Interlocked.CompareExchange(ref ___objRef_global__System_IDisposable, ((IWinRTObject)this).NativeObject.As<IUnknownVftbl>(global::ABI.System.IDisposableMethods.IID), null);
            return ___objRef_global__System_IDisposable;
        }
        private IObjectReference _objRef_global__System_IDisposable => ___objRef_global__System_IDisposable ?? Make___objRef_global__System_IDisposable();



        public static I As<I>() => ActivationFactory.Get("Microsoft.UI.Content.ContentExternalOutputLink").AsInterface<I>();

        private static volatile IObjectReference ___objRef_global__Microsoft_UI_Content_IContentExternalOutputLinkStatics;
        private static IObjectReference _objRef_global__Microsoft_UI_Content_IContentExternalOutputLinkStatics
        {
            get
            { 
                var factory = ___objRef_global__Microsoft_UI_Content_IContentExternalOutputLinkStatics;
                if (factory != null && factory.IsInCurrentContext)
                {
                    return factory;
                }
                else
                {
                    return ___objRef_global__Microsoft_UI_Content_IContentExternalOutputLinkStatics = ActivationFactory.Get("Microsoft.UI.Content.ContentExternalOutputLink", global::ABI.Microsoft.UI.Content.IContentExternalOutputLinkStaticsMethods.IID);
                }
            }
        }

        public static ContentExternalOutputLink Create(global::Microsoft.UI.Composition.Compositor compositor) => global::ABI.Microsoft.UI.Content.IContentExternalOutputLinkStaticsMethods.Create(_objRef_global__Microsoft_UI_Content_IContentExternalOutputLinkStatics, compositor);

        public static bool IsSupported() => global::ABI.Microsoft.UI.Content.IContentExternalOutputLinkStaticsMethods.IsSupported(_objRef_global__Microsoft_UI_Content_IContentExternalOutputLinkStatics);

        public static ContentExternalOutputLink FromAbi(IntPtr thisPtr)
        {
            if (thisPtr == IntPtr.Zero) return null;
            return MarshalInspectable<ContentExternalOutputLink>.FromAbi(thisPtr);
        }

        internal ContentExternalOutputLink(IObjectReference objRef)
        {
            _inner = objRef.As(global::ABI.Microsoft.UI.Content.IContentExternalOutputLinkMethods.IID);

        }


        public static bool operator ==(ContentExternalOutputLink x, ContentExternalOutputLink y) => (x?.ThisPtr ?? IntPtr.Zero) == (y?.ThisPtr ?? IntPtr.Zero);
        public static bool operator !=(ContentExternalOutputLink x, ContentExternalOutputLink y) => !(x == y);
        public bool Equals(ContentExternalOutputLink other) => this == other;
        public override bool Equals(object obj) => obj is ContentExternalOutputLink that && this == that;
        public override int GetHashCode() => ThisPtr.GetHashCode();


        bool IWinRTObject.HasUnwrappableNativeObject => true;
        IObjectReference IWinRTObject.NativeObject => _inner;
        private volatile global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> _queryInterfaceCache;
        private global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> MakeQueryInterfaceCache()
        {
            global::System.Threading.Interlocked.CompareExchange(ref _queryInterfaceCache, new global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference>(), null); 
            return _queryInterfaceCache;
        }
        global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> IWinRTObject.QueryInterfaceCache => _queryInterfaceCache ?? MakeQueryInterfaceCache();
        private volatile global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> _additionalTypeData;
        private global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> MakeAdditionalTypeData()
        {
            global::System.Threading.Interlocked.CompareExchange(ref _additionalTypeData, new global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object>(), null); 
            return _additionalTypeData;
        }
        global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> IWinRTObject.AdditionalTypeData => _additionalTypeData ?? MakeAdditionalTypeData();

        private struct InterfaceTag<I>{};


        public void Dispose() => global::ABI.System.IDisposableMethods.Dispose(_objRef_global__System_IDisposable);

        public global::Windows.UI.Color BackgroundColor
        {
            get => global::ABI.Microsoft.UI.Content.IContentExternalOutputLinkMethods.get_BackgroundColor(_objRef_global__Microsoft_UI_Content_IContentExternalOutputLink);
            set => global::ABI.Microsoft.UI.Content.IContentExternalOutputLinkMethods.set_BackgroundColor(_objRef_global__Microsoft_UI_Content_IContentExternalOutputLink, value);
        }

        public global::Microsoft.UI.Dispatching.DispatcherQueue DispatcherQueue => global::ABI.Microsoft.UI.Content.IContentExternalOutputLinkMethods.get_DispatcherQueue(_objRef_global__Microsoft_UI_Content_IContentExternalOutputLink);

        public global::Microsoft.UI.Composition.CompositionBorderMode ExternalOutputBorderMode
        {
            get => global::ABI.Microsoft.UI.Content.IContentExternalOutputLinkMethods.get_ExternalOutputBorderMode(_objRef_global__Microsoft_UI_Content_IContentExternalOutputLink);
            set => global::ABI.Microsoft.UI.Content.IContentExternalOutputLinkMethods.set_ExternalOutputBorderMode(_objRef_global__Microsoft_UI_Content_IContentExternalOutputLink, value);
        }

        public bool IsAboveContent
        {
            get => global::ABI.Microsoft.UI.Content.IContentExternalOutputLinkMethods.get_IsAboveContent(_objRef_global__Microsoft_UI_Content_IContentExternalOutputLink);
            set => global::ABI.Microsoft.UI.Content.IContentExternalOutputLinkMethods.set_IsAboveContent(_objRef_global__Microsoft_UI_Content_IContentExternalOutputLink, value);
        }

        public global::Microsoft.UI.Composition.Visual PlacementVisual => global::ABI.Microsoft.UI.Content.IContentExternalOutputLinkMethods.get_PlacementVisual(_objRef_global__Microsoft_UI_Content_IContentExternalOutputLink);

        private bool IsOverridableInterface(Guid iid) => false;

        global::System.Runtime.InteropServices.CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(ref Guid iid, out IntPtr ppv)
        {
            ppv = IntPtr.Zero;
            if (IsOverridableInterface(iid) || global::WinRT.Interop.IID.IID_IInspectable == iid)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
            }

            if (((IWinRTObject)this).NativeObject.TryAs(iid, out ppv) >= 0)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.Handled;
            }

            return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
        }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI")]
    [global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Content.ContentIsland))]
    [global::ABI.Microsoft.UI.Content.ContentIslandRcwFactory]
    [global::WinRT.ProjectedRuntimeClass(typeof(IContentIsland))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.Foundation.WindowsAppSDKContract), 65540u)]
    public class ContentIsland : global::System.IDisposable, global::Microsoft.UI.IClosableNotifier, global::Microsoft.UI.Composition.ICompositionSupportsSystemBackdrop, IContentIslandEndpointConnectionPrivate, global::System.Runtime.InteropServices.ICustomQueryInterface, IWinRTObject, IEquatable<ContentIsland>
    {
        private IntPtr ThisPtr => _inner == null ? (((IWinRTObject)this).NativeObject).ThisPtr : _inner.ThisPtr;

        private readonly IObjectReference _inner = null;




        private volatile IObjectReference ___objRef_global__Microsoft_UI_Content_IContentIsland;
        private IObjectReference Make___objRef_global__Microsoft_UI_Content_IContentIsland()
        {
            global::System.Threading.Interlocked.CompareExchange(ref ___objRef_global__Microsoft_UI_Content_IContentIsland, ((IWinRTObject)this).NativeObject.As<IUnknownVftbl>(global::ABI.Microsoft.UI.Content.IContentIslandMethods.IID), null);
            return ___objRef_global__Microsoft_UI_Content_IContentIsland;
        }
        private IObjectReference _objRef_global__Microsoft_UI_Content_IContentIsland => ___objRef_global__Microsoft_UI_Content_IContentIsland ?? Make___objRef_global__Microsoft_UI_Content_IContentIsland();

        private volatile IObjectReference ___objRef_global__Microsoft_UI_Content_IContentIsland2;
        private IObjectReference Make___objRef_global__Microsoft_UI_Content_IContentIsland2()
        {
            global::System.Threading.Interlocked.CompareExchange(ref ___objRef_global__Microsoft_UI_Content_IContentIsland2, ((IWinRTObject)this).NativeObject.As<IUnknownVftbl>(global::ABI.Microsoft.UI.Content.IContentIsland2Methods.IID), null);
            return ___objRef_global__Microsoft_UI_Content_IContentIsland2;
        }
        private IObjectReference _objRef_global__Microsoft_UI_Content_IContentIsland2 => ___objRef_global__Microsoft_UI_Content_IContentIsland2 ?? Make___objRef_global__Microsoft_UI_Content_IContentIsland2();

        private volatile IObjectReference ___objRef_global__Microsoft_UI_Content_IContentIslandAutomation;
        private IObjectReference Make___objRef_global__Microsoft_UI_Content_IContentIslandAutomation()
        {
            global::System.Threading.Interlocked.CompareExchange(ref ___objRef_global__Microsoft_UI_Content_IContentIslandAutomation, ((IWinRTObject)this).NativeObject.As<IUnknownVftbl>(global::ABI.Microsoft.UI.Content.IContentIslandAutomationMethods.IID), null);
            return ___objRef_global__Microsoft_UI_Content_IContentIslandAutomation;
        }
        private IObjectReference _objRef_global__Microsoft_UI_Content_IContentIslandAutomation => ___objRef_global__Microsoft_UI_Content_IContentIslandAutomation ?? Make___objRef_global__Microsoft_UI_Content_IContentIslandAutomation();

        private volatile IObjectReference ___objRef_global__Microsoft_UI_Content_IContentIslandExperimental;
        private IObjectReference Make___objRef_global__Microsoft_UI_Content_IContentIslandExperimental()
        {
            global::System.Threading.Interlocked.CompareExchange(ref ___objRef_global__Microsoft_UI_Content_IContentIslandExperimental, ((IWinRTObject)this).NativeObject.As<IUnknownVftbl>(global::ABI.Microsoft.UI.Content.IContentIslandExperimentalMethods.IID), null);
            return ___objRef_global__Microsoft_UI_Content_IContentIslandExperimental;
        }
        private IObjectReference _objRef_global__Microsoft_UI_Content_IContentIslandExperimental => ___objRef_global__Microsoft_UI_Content_IContentIslandExperimental ?? Make___objRef_global__Microsoft_UI_Content_IContentIslandExperimental();

        private volatile IObjectReference ___objRef_global__System_IDisposable;
        private IObjectReference Make___objRef_global__System_IDisposable()
        {
            global::System.Threading.Interlocked.CompareExchange(ref ___objRef_global__System_IDisposable, ((IWinRTObject)this).NativeObject.As<IUnknownVftbl>(global::ABI.System.IDisposableMethods.IID), null);
            return ___objRef_global__System_IDisposable;
        }
        private IObjectReference _objRef_global__System_IDisposable => ___objRef_global__System_IDisposable ?? Make___objRef_global__System_IDisposable();

        private volatile IObjectReference ___objRef_global__Microsoft_UI_IClosableNotifier;
        private IObjectReference Make___objRef_global__Microsoft_UI_IClosableNotifier()
        {
            global::System.Threading.Interlocked.CompareExchange(ref ___objRef_global__Microsoft_UI_IClosableNotifier, ((IWinRTObject)this).NativeObject.As<IUnknownVftbl>(global::ABI.Microsoft.UI.IClosableNotifierMethods.IID), null);
            return ___objRef_global__Microsoft_UI_IClosableNotifier;
        }
        private IObjectReference _objRef_global__Microsoft_UI_IClosableNotifier => ___objRef_global__Microsoft_UI_IClosableNotifier ?? Make___objRef_global__Microsoft_UI_IClosableNotifier();

        private volatile IObjectReference ___objRef_global__Microsoft_UI_Composition_ICompositionSupportsSystemBackdrop;
        private IObjectReference Make___objRef_global__Microsoft_UI_Composition_ICompositionSupportsSystemBackdrop()
        {
            global::System.Threading.Interlocked.CompareExchange(ref ___objRef_global__Microsoft_UI_Composition_ICompositionSupportsSystemBackdrop, ((IWinRTObject)this).NativeObject.As<IUnknownVftbl>(global::ABI.Microsoft.UI.Composition.ICompositionSupportsSystemBackdropMethods.IID), null);
            return ___objRef_global__Microsoft_UI_Composition_ICompositionSupportsSystemBackdrop;
        }
        private IObjectReference _objRef_global__Microsoft_UI_Composition_ICompositionSupportsSystemBackdrop => ___objRef_global__Microsoft_UI_Composition_ICompositionSupportsSystemBackdrop ?? Make___objRef_global__Microsoft_UI_Composition_ICompositionSupportsSystemBackdrop();

        private volatile IObjectReference ___objRef_global__Microsoft_UI_Content_IContentIslandEndpointConnectionPrivate;
        private IObjectReference Make___objRef_global__Microsoft_UI_Content_IContentIslandEndpointConnectionPrivate()
        {
            global::System.Threading.Interlocked.CompareExchange(ref ___objRef_global__Microsoft_UI_Content_IContentIslandEndpointConnectionPrivate, ((IWinRTObject)this).NativeObject.As<IUnknownVftbl>(global::ABI.Microsoft.UI.Content.IContentIslandEndpointConnectionPrivateMethods.IID), null);
            return ___objRef_global__Microsoft_UI_Content_IContentIslandEndpointConnectionPrivate;
        }
        private IObjectReference _objRef_global__Microsoft_UI_Content_IContentIslandEndpointConnectionPrivate => ___objRef_global__Microsoft_UI_Content_IContentIslandEndpointConnectionPrivate ?? Make___objRef_global__Microsoft_UI_Content_IContentIslandEndpointConnectionPrivate();



        private static class _IContentIslandFactoryMethods
        {}

        private static volatile IObjectReference ___objRef_global__Microsoft_UI_Content_IContentIslandFactory;
        private static IObjectReference _objRef_global__Microsoft_UI_Content_IContentIslandFactory
        {
            get
            { 
                var factory = ___objRef_global__Microsoft_UI_Content_IContentIslandFactory;
                if (factory != null && factory.IsInCurrentContext)
                {
                    return factory;
                }
                else
                {
                    return ___objRef_global__Microsoft_UI_Content_IContentIslandFactory = ActivationFactory.Get("Microsoft.UI.Content.ContentIsland", global::ABI.Microsoft.UI.Content.IContentIslandFactoryMethods.IID);
                }
            }
        }

        public static I As<I>() => ActivationFactory.Get("Microsoft.UI.Content.ContentIsland").AsInterface<I>();

        private static volatile IObjectReference ___objRef_global__Microsoft_UI_Content_IContentIslandStatics;
        private static IObjectReference _objRef_global__Microsoft_UI_Content_IContentIslandStatics
        {
            get
            { 
                var factory = ___objRef_global__Microsoft_UI_Content_IContentIslandStatics;
                if (factory != null && factory.IsInCurrentContext)
                {
                    return factory;
                }
                else
                {
                    return ___objRef_global__Microsoft_UI_Content_IContentIslandStatics = ActivationFactory.Get("Microsoft.UI.Content.ContentIsland", global::ABI.Microsoft.UI.Content.IContentIslandStaticsMethods.IID);
                }
            }
        }

        public static ContentIsland Create(global::Microsoft.UI.Composition.Visual Root) => global::ABI.Microsoft.UI.Content.IContentIslandStaticsMethods.Create(_objRef_global__Microsoft_UI_Content_IContentIslandStatics, Root);

        public static ContentIsland[] FindAllForCompositor(global::Microsoft.UI.Composition.Compositor compositor) => global::ABI.Microsoft.UI.Content.IContentIslandStaticsMethods.FindAllForCompositor(_objRef_global__Microsoft_UI_Content_IContentIslandStatics, compositor);

        public static ContentIsland[] FindAllForCurrentThread() => global::ABI.Microsoft.UI.Content.IContentIslandStaticsMethods.FindAllForCurrentThread(_objRef_global__Microsoft_UI_Content_IContentIslandStatics);

        public static ContentIsland GetByVisual(global::Microsoft.UI.Composition.Visual child) => global::ABI.Microsoft.UI.Content.IContentIslandStaticsMethods.GetByVisual(_objRef_global__Microsoft_UI_Content_IContentIslandStatics, child);

        public static ContentIsland GetFromId(ulong id) => global::ABI.Microsoft.UI.Content.IContentIslandStaticsMethods.GetFromId(_objRef_global__Microsoft_UI_Content_IContentIslandStatics, id);

        private static volatile IObjectReference ___objRef_global__Microsoft_UI_Content_IContentIslandStatics2;
        private static IObjectReference _objRef_global__Microsoft_UI_Content_IContentIslandStatics2
        {
            get
            { 
                var factory = ___objRef_global__Microsoft_UI_Content_IContentIslandStatics2;
                if (factory != null && factory.IsInCurrentContext)
                {
                    return factory;
                }
                else
                {
                    return ___objRef_global__Microsoft_UI_Content_IContentIslandStatics2 = ActivationFactory.Get("Microsoft.UI.Content.ContentIsland", global::ABI.Microsoft.UI.Content.IContentIslandStatics2Methods.IID);
                }
            }
        }

        public static ContentIsland CreateForSystemVisual(global::Microsoft.UI.Dispatching.DispatcherQueue queue, global::Windows.UI.Composition.Visual root) => global::ABI.Microsoft.UI.Content.IContentIslandStatics2Methods.CreateForSystemVisual(_objRef_global__Microsoft_UI_Content_IContentIslandStatics2, queue, root);

        public static ContentIsland[] FindAllForSystemCompositor(global::Windows.UI.Composition.Compositor compositor) => global::ABI.Microsoft.UI.Content.IContentIslandStatics2Methods.FindAllForSystemCompositor(_objRef_global__Microsoft_UI_Content_IContentIslandStatics2, compositor);

        public static ContentIsland GetBySystemVisual(global::Windows.UI.Composition.Visual child) => global::ABI.Microsoft.UI.Content.IContentIslandStatics2Methods.GetBySystemVisual(_objRef_global__Microsoft_UI_Content_IContentIslandStatics2, child);

        public static ContentIsland FromAbi(IntPtr thisPtr)
        {
            if (thisPtr == IntPtr.Zero) return null;
            return MarshalInspectable<ContentIsland>.FromAbi(thisPtr);
        }

        protected internal ContentIsland(IObjectReference objRef)
        {
            _inner = objRef.As(global::ABI.Microsoft.UI.Content.IContentIslandMethods.IID);

        }


        public static bool operator ==(ContentIsland x, ContentIsland y) => (x?.ThisPtr ?? IntPtr.Zero) == (y?.ThisPtr ?? IntPtr.Zero);
        public static bool operator !=(ContentIsland x, ContentIsland y) => !(x == y);
        public bool Equals(ContentIsland other) => this == other;
        public override bool Equals(object obj) => obj is ContentIsland that && this == that;
        public override int GetHashCode() => ThisPtr.GetHashCode();


        protected ContentIsland(global::WinRT.DerivedComposed _)
        {

        }
        bool IWinRTObject.HasUnwrappableNativeObject => this.GetType() == typeof(ContentIsland);
        IObjectReference IWinRTObject.NativeObject => _inner;
        private volatile global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> _queryInterfaceCache;
        private global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> MakeQueryInterfaceCache()
        {
            global::System.Threading.Interlocked.CompareExchange(ref _queryInterfaceCache, new global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference>(), null); 
            return _queryInterfaceCache;
        }
        global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> IWinRTObject.QueryInterfaceCache => _queryInterfaceCache ?? MakeQueryInterfaceCache();
        private volatile global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> _additionalTypeData;
        private global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> MakeAdditionalTypeData()
        {
            global::System.Threading.Interlocked.CompareExchange(ref _additionalTypeData, new global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object>(), null); 
            return _additionalTypeData;
        }
        global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> IWinRTObject.AdditionalTypeData => _additionalTypeData ?? MakeAdditionalTypeData();

        private struct InterfaceTag<I>{};


        public object GetAutomationHostProvider() => global::ABI.Microsoft.UI.Content.IContentIslandMethods.GetAutomationHostProvider(_objRef_global__Microsoft_UI_Content_IContentIsland);

        public ContentDeferral GetStateChangeDeferral() => global::ABI.Microsoft.UI.Content.IContentIslandMethods.GetStateChangeDeferral(_objRef_global__Microsoft_UI_Content_IContentIsland);

        public void RequestSize(global::System.Numerics.Vector2 size) => global::ABI.Microsoft.UI.Content.IContentIslandMethods.RequestSize(_objRef_global__Microsoft_UI_Content_IContentIsland, size);

        public event global::Windows.Foundation.TypedEventHandler<ContentIsland, ContentIslandAutomationProviderRequestedEventArgs> AutomationProviderRequested
        {
            add => global::ABI.Microsoft.UI.Content.IContentIslandMethods.Get_AutomationProviderRequested2(_objRef_global__Microsoft_UI_Content_IContentIsland, (IWinRTObject)this).Subscribe(value);
            remove => global::ABI.Microsoft.UI.Content.IContentIslandMethods.Get_AutomationProviderRequested2(_objRef_global__Microsoft_UI_Content_IContentIsland, (IWinRTObject)this).Unsubscribe(value);
        }

        public event global::Windows.Foundation.TypedEventHandler<ContentIsland, ContentIslandStateChangedEventArgs> StateChanged
        {
            add => global::ABI.Microsoft.UI.Content.IContentIslandMethods.Get_StateChanged2(_objRef_global__Microsoft_UI_Content_IContentIsland, (IWinRTObject)this).Subscribe(value);
            remove => global::ABI.Microsoft.UI.Content.IContentIslandMethods.Get_StateChanged2(_objRef_global__Microsoft_UI_Content_IContentIsland, (IWinRTObject)this).Unsubscribe(value);
        }

        public event global::System.EventHandler<ContentIsland> Connected
        {
            add => global::ABI.Microsoft.UI.Content.IContentIslandExperimentalMethods.Get_Connected2(_objRef_global__Microsoft_UI_Content_IContentIslandExperimental, (IWinRTObject)this).Subscribe(value);
            remove => global::ABI.Microsoft.UI.Content.IContentIslandExperimentalMethods.Get_Connected2(_objRef_global__Microsoft_UI_Content_IContentIslandExperimental, (IWinRTObject)this).Unsubscribe(value);
        }

        public event global::System.EventHandler<ContentIsland> Disconnected
        {
            add => global::ABI.Microsoft.UI.Content.IContentIslandExperimentalMethods.Get_Disconnected2(_objRef_global__Microsoft_UI_Content_IContentIslandExperimental, (IWinRTObject)this).Subscribe(value);
            remove => global::ABI.Microsoft.UI.Content.IContentIslandExperimentalMethods.Get_Disconnected2(_objRef_global__Microsoft_UI_Content_IContentIslandExperimental, (IWinRTObject)this).Unsubscribe(value);
        }

        public void Dispose() => global::ABI.System.IDisposableMethods.Dispose(_objRef_global__System_IDisposable);

        public event global::Microsoft.UI.ClosableNotifierHandler Closed
        {
            add => global::ABI.Microsoft.UI.IClosableNotifierMethods.Get_Closed2(_objRef_global__Microsoft_UI_IClosableNotifier, (IWinRTObject)this).Subscribe(value);
            remove => global::ABI.Microsoft.UI.IClosableNotifierMethods.Get_Closed2(_objRef_global__Microsoft_UI_IClosableNotifier, (IWinRTObject)this).Unsubscribe(value);
        }

        public event global::Microsoft.UI.ClosableNotifierHandler FrameworkClosed
        {
            add => global::ABI.Microsoft.UI.IClosableNotifierMethods.Get_FrameworkClosed2(_objRef_global__Microsoft_UI_IClosableNotifier, (IWinRTObject)this).Subscribe(value);
            remove => global::ABI.Microsoft.UI.IClosableNotifierMethods.Get_FrameworkClosed2(_objRef_global__Microsoft_UI_IClosableNotifier, (IWinRTObject)this).Unsubscribe(value);
        }

        public void ConnectRemoteEndpoint(string siteConnectionInfo) => global::ABI.Microsoft.UI.Content.IContentIslandEndpointConnectionPrivateMethods.ConnectRemoteEndpoint(_objRef_global__Microsoft_UI_Content_IContentIslandEndpointConnectionPrivate, siteConnectionInfo);

        public global::System.Numerics.Vector2 ActualSize => global::ABI.Microsoft.UI.Content.IContentIslandMethods.get_ActualSize(_objRef_global__Microsoft_UI_Content_IContentIsland);

        public object AppData
        {
            get => global::ABI.Microsoft.UI.Content.IContentIslandMethods.get_AppData(_objRef_global__Microsoft_UI_Content_IContentIsland);
            set => global::ABI.Microsoft.UI.Content.IContentIslandMethods.set_AppData(_objRef_global__Microsoft_UI_Content_IContentIsland, value);
        }

        public ContentAutomationOptions AutomationOption => global::ABI.Microsoft.UI.Content.IContentIslandAutomationMethods.get_AutomationOption(_objRef_global__Microsoft_UI_Content_IContentIslandAutomation);

        public global::System.Collections.Generic.IEnumerable<ChildSiteLink> Children => global::ABI.Microsoft.UI.Content.IContentIsland2Methods.get_Children(_objRef_global__Microsoft_UI_Content_IContentIsland2);

        public string ConnectionInfo => global::ABI.Microsoft.UI.Content.IContentIslandEndpointConnectionPrivateMethods.get_ConnectionInfo(_objRef_global__Microsoft_UI_Content_IContentIslandEndpointConnectionPrivate);

        public ContentCoordinateConverter CoordinateConverter => global::ABI.Microsoft.UI.Content.IContentIslandMethods.get_CoordinateConverter(_objRef_global__Microsoft_UI_Content_IContentIsland);

        public global::Windows.Foundation.Collections.IPropertySet CustomProperties => global::ABI.Microsoft.UI.Content.IContentIslandMethods.get_CustomProperties(_objRef_global__Microsoft_UI_Content_IContentIsland);

        public global::Microsoft.UI.Dispatching.DispatcherQueue DispatcherQueue => global::ABI.Microsoft.UI.Content.IContentIslandMethods.get_DispatcherQueue(_objRef_global__Microsoft_UI_Content_IContentIsland);

        public ContentIslandEnvironment Environment => global::ABI.Microsoft.UI.Content.IContentIslandMethods.get_Environment(_objRef_global__Microsoft_UI_Content_IContentIsland);

        public object FragmentRootAutomationProvider => global::ABI.Microsoft.UI.Content.IContentIslandAutomationMethods.get_FragmentRootAutomationProvider(_objRef_global__Microsoft_UI_Content_IContentIslandAutomation);

        public ulong Id => global::ABI.Microsoft.UI.Content.IContentIslandMethods.get_Id(_objRef_global__Microsoft_UI_Content_IContentIsland);

        public bool IsClosed => global::ABI.Microsoft.UI.IClosableNotifierMethods.get_IsClosed(_objRef_global__Microsoft_UI_IClosableNotifier);

        public bool IsConnected => global::ABI.Microsoft.UI.Content.IContentIslandMethods.get_IsConnected(_objRef_global__Microsoft_UI_Content_IContentIsland);

        public bool IsHitTestVisibleWhenTransparent
        {
            get => global::ABI.Microsoft.UI.Content.IContentIslandMethods.get_IsHitTestVisibleWhenTransparent(_objRef_global__Microsoft_UI_Content_IContentIsland);
            set => global::ABI.Microsoft.UI.Content.IContentIslandMethods.set_IsHitTestVisibleWhenTransparent(_objRef_global__Microsoft_UI_Content_IContentIsland, value);
        }

        public bool IsIslandEnabled
        {
            get => global::ABI.Microsoft.UI.Content.IContentIslandMethods.get_IsIslandEnabled(_objRef_global__Microsoft_UI_Content_IContentIsland);
            set => global::ABI.Microsoft.UI.Content.IContentIslandMethods.set_IsIslandEnabled(_objRef_global__Microsoft_UI_Content_IContentIsland, value);
        }

        public bool IsIslandVisible
        {
            get => global::ABI.Microsoft.UI.Content.IContentIslandMethods.get_IsIslandVisible(_objRef_global__Microsoft_UI_Content_IContentIsland);
            set => global::ABI.Microsoft.UI.Content.IContentIslandMethods.set_IsIslandVisible(_objRef_global__Microsoft_UI_Content_IContentIsland, value);
        }

        public bool IsRemoteEndpointConnected => global::ABI.Microsoft.UI.Content.IContentIslandEndpointConnectionPrivateMethods.get_IsRemoteEndpointConnected(_objRef_global__Microsoft_UI_Content_IContentIslandEndpointConnectionPrivate);

        public bool IsSiteEnabled => global::ABI.Microsoft.UI.Content.IContentIslandMethods.get_IsSiteEnabled(_objRef_global__Microsoft_UI_Content_IContentIsland);

        public bool IsSiteVisible => global::ABI.Microsoft.UI.Content.IContentIslandMethods.get_IsSiteVisible(_objRef_global__Microsoft_UI_Content_IContentIsland);

        public ContentLayoutDirection LayoutDirection => global::ABI.Microsoft.UI.Content.IContentIslandMethods.get_LayoutDirection(_objRef_global__Microsoft_UI_Content_IContentIsland);

        public global::System.Numerics.Matrix4x4 LocalToClientTransformMatrix => global::ABI.Microsoft.UI.Content.IContentIsland2Methods.get_LocalToClientTransformMatrix(_objRef_global__Microsoft_UI_Content_IContentIsland2);

        public global::System.Numerics.Matrix4x4 LocalToParentTransformMatrix => global::ABI.Microsoft.UI.Content.IContentIsland2Methods.get_LocalToParentTransformMatrix(_objRef_global__Microsoft_UI_Content_IContentIsland2);

        public object NextSiblingAutomationProvider => global::ABI.Microsoft.UI.Content.IContentIslandAutomationMethods.get_NextSiblingAutomationProvider(_objRef_global__Microsoft_UI_Content_IContentIslandAutomation);

        public object ParentAutomationProvider => global::ABI.Microsoft.UI.Content.IContentIslandAutomationMethods.get_ParentAutomationProvider(_objRef_global__Microsoft_UI_Content_IContentIslandAutomation);

        public global::System.Collections.Generic.IEnumerable<DesktopPopupSiteBridge> Popups => global::ABI.Microsoft.UI.Content.IContentIsland2Methods.get_Popups(_objRef_global__Microsoft_UI_Content_IContentIsland2);

        public object PreviousSiblingAutomationProvider => global::ABI.Microsoft.UI.Content.IContentIslandAutomationMethods.get_PreviousSiblingAutomationProvider(_objRef_global__Microsoft_UI_Content_IContentIslandAutomation);

        public bool ProcessesKeyboardInput => global::ABI.Microsoft.UI.Content.IContentIsland2Methods.get_ProcessesKeyboardInput(_objRef_global__Microsoft_UI_Content_IContentIsland2);

        public bool ProcessesPointerInput => global::ABI.Microsoft.UI.Content.IContentIsland2Methods.get_ProcessesPointerInput(_objRef_global__Microsoft_UI_Content_IContentIsland2);

        public float RasterizationScale => global::ABI.Microsoft.UI.Content.IContentIslandMethods.get_RasterizationScale(_objRef_global__Microsoft_UI_Content_IContentIsland);

        public global::Microsoft.UI.Composition.Visual Root
        {
            get => global::ABI.Microsoft.UI.Content.IContentIslandExperimentalMethods.get_Root(_objRef_global__Microsoft_UI_Content_IContentIslandExperimental);
            set => global::ABI.Microsoft.UI.Content.IContentIslandExperimentalMethods.set_Root(_objRef_global__Microsoft_UI_Content_IContentIslandExperimental, value);
        }

        public global::Windows.UI.Composition.CompositionBrush SystemBackdrop
        {
            get => global::ABI.Microsoft.UI.Composition.ICompositionSupportsSystemBackdropMethods.get_SystemBackdrop(_objRef_global__Microsoft_UI_Composition_ICompositionSupportsSystemBackdrop);
            set => global::ABI.Microsoft.UI.Composition.ICompositionSupportsSystemBackdropMethods.set_SystemBackdrop(_objRef_global__Microsoft_UI_Composition_ICompositionSupportsSystemBackdrop, value);
        }

        protected virtual bool IsOverridableInterface(Guid iid) => false;

        global::System.Runtime.InteropServices.CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(ref Guid iid, out IntPtr ppv)
        {
            ppv = IntPtr.Zero;
            if (IsOverridableInterface(iid) || global::WinRT.Interop.IID.IID_IInspectable == iid)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
            }

            if (((IWinRTObject)this).NativeObject.TryAs(iid, out ppv) >= 0)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.Handled;
            }

            return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
        }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI")]
    [global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Content.ContentIslandAutomationProviderRequestedEventArgs))]
    [global::ABI.Microsoft.UI.Content.ContentIslandAutomationProviderRequestedEventArgsRcwFactory]
    [global::WinRT.ProjectedRuntimeClass(typeof(IContentIslandAutomationProviderRequestedEventArgs))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.Foundation.WindowsAppSDKContract), 65540u)]
    public sealed class ContentIslandAutomationProviderRequestedEventArgs : global::System.Runtime.InteropServices.ICustomQueryInterface, IWinRTObject, IEquatable<ContentIslandAutomationProviderRequestedEventArgs>
    {
        private IntPtr ThisPtr => _inner == null ? (((IWinRTObject)this).NativeObject).ThisPtr : _inner.ThisPtr;

        private readonly IObjectReference _inner = null;



        private IObjectReference _objRef_global__Microsoft_UI_Content_IContentIslandAutomationProviderRequestedEventArgs => _inner;


        public static ContentIslandAutomationProviderRequestedEventArgs FromAbi(IntPtr thisPtr)
        {
            if (thisPtr == IntPtr.Zero) return null;
            return MarshalInspectable<ContentIslandAutomationProviderRequestedEventArgs>.FromAbi(thisPtr);
        }

        internal ContentIslandAutomationProviderRequestedEventArgs(IObjectReference objRef)
        {
            _inner = objRef.As(global::ABI.Microsoft.UI.Content.IContentIslandAutomationProviderRequestedEventArgsMethods.IID);

        }


        public static bool operator ==(ContentIslandAutomationProviderRequestedEventArgs x, ContentIslandAutomationProviderRequestedEventArgs y) => (x?.ThisPtr ?? IntPtr.Zero) == (y?.ThisPtr ?? IntPtr.Zero);
        public static bool operator !=(ContentIslandAutomationProviderRequestedEventArgs x, ContentIslandAutomationProviderRequestedEventArgs y) => !(x == y);
        public bool Equals(ContentIslandAutomationProviderRequestedEventArgs other) => this == other;
        public override bool Equals(object obj) => obj is ContentIslandAutomationProviderRequestedEventArgs that && this == that;
        public override int GetHashCode() => ThisPtr.GetHashCode();


        bool IWinRTObject.HasUnwrappableNativeObject => true;
        IObjectReference IWinRTObject.NativeObject => _inner;
        private volatile global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> _queryInterfaceCache;
        private global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> MakeQueryInterfaceCache()
        {
            global::System.Threading.Interlocked.CompareExchange(ref _queryInterfaceCache, new global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference>(), null); 
            return _queryInterfaceCache;
        }
        global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> IWinRTObject.QueryInterfaceCache => _queryInterfaceCache ?? MakeQueryInterfaceCache();
        private volatile global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> _additionalTypeData;
        private global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> MakeAdditionalTypeData()
        {
            global::System.Threading.Interlocked.CompareExchange(ref _additionalTypeData, new global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object>(), null); 
            return _additionalTypeData;
        }
        global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> IWinRTObject.AdditionalTypeData => _additionalTypeData ?? MakeAdditionalTypeData();

        private struct InterfaceTag<I>{};


        public object AutomationProvider
        {
            get => global::ABI.Microsoft.UI.Content.IContentIslandAutomationProviderRequestedEventArgsMethods.get_AutomationProvider(_objRef_global__Microsoft_UI_Content_IContentIslandAutomationProviderRequestedEventArgs);
            set => global::ABI.Microsoft.UI.Content.IContentIslandAutomationProviderRequestedEventArgsMethods.set_AutomationProvider(_objRef_global__Microsoft_UI_Content_IContentIslandAutomationProviderRequestedEventArgs, value);
        }

        public bool Handled
        {
            get => global::ABI.Microsoft.UI.Content.IContentIslandAutomationProviderRequestedEventArgsMethods.get_Handled(_objRef_global__Microsoft_UI_Content_IContentIslandAutomationProviderRequestedEventArgs);
            set => global::ABI.Microsoft.UI.Content.IContentIslandAutomationProviderRequestedEventArgsMethods.set_Handled(_objRef_global__Microsoft_UI_Content_IContentIslandAutomationProviderRequestedEventArgs, value);
        }

        private bool IsOverridableInterface(Guid iid) => false;

        global::System.Runtime.InteropServices.CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(ref Guid iid, out IntPtr ppv)
        {
            ppv = IntPtr.Zero;
            if (IsOverridableInterface(iid) || global::WinRT.Interop.IID.IID_IInspectable == iid)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
            }

            if (((IWinRTObject)this).NativeObject.TryAs(iid, out ppv) >= 0)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.Handled;
            }

            return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
        }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI")]
    [global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Content.ContentIslandEnvironment))]
    [global::ABI.Microsoft.UI.Content.ContentIslandEnvironmentRcwFactory]
    [global::WinRT.ProjectedRuntimeClass(typeof(IContentIslandEnvironment))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.Foundation.WindowsAppSDKContract), 65540u)]
    public class ContentIslandEnvironment : global::System.Runtime.InteropServices.ICustomQueryInterface, IWinRTObject, IEquatable<ContentIslandEnvironment>
    {
        private IntPtr ThisPtr => _inner == null ? (((IWinRTObject)this).NativeObject).ThisPtr : _inner.ThisPtr;

        private readonly IObjectReference _inner = null;




        private volatile IObjectReference ___objRef_global__Microsoft_UI_Content_IContentIslandEnvironment;
        private IObjectReference Make___objRef_global__Microsoft_UI_Content_IContentIslandEnvironment()
        {
            global::System.Threading.Interlocked.CompareExchange(ref ___objRef_global__Microsoft_UI_Content_IContentIslandEnvironment, ((IWinRTObject)this).NativeObject.As<IUnknownVftbl>(global::ABI.Microsoft.UI.Content.IContentIslandEnvironmentMethods.IID), null);
            return ___objRef_global__Microsoft_UI_Content_IContentIslandEnvironment;
        }
        private IObjectReference _objRef_global__Microsoft_UI_Content_IContentIslandEnvironment => ___objRef_global__Microsoft_UI_Content_IContentIslandEnvironment ?? Make___objRef_global__Microsoft_UI_Content_IContentIslandEnvironment();

        private volatile IObjectReference ___objRef_global__Microsoft_UI_Content_IContentIslandEnvironment2;
        private IObjectReference Make___objRef_global__Microsoft_UI_Content_IContentIslandEnvironment2()
        {
            global::System.Threading.Interlocked.CompareExchange(ref ___objRef_global__Microsoft_UI_Content_IContentIslandEnvironment2, ((IWinRTObject)this).NativeObject.As<IUnknownVftbl>(global::ABI.Microsoft.UI.Content.IContentIslandEnvironment2Methods.IID), null);
            return ___objRef_global__Microsoft_UI_Content_IContentIslandEnvironment2;
        }
        private IObjectReference _objRef_global__Microsoft_UI_Content_IContentIslandEnvironment2 => ___objRef_global__Microsoft_UI_Content_IContentIslandEnvironment2 ?? Make___objRef_global__Microsoft_UI_Content_IContentIslandEnvironment2();

        private volatile IObjectReference ___objRef_global__Microsoft_UI_Content_IContentIslandEnvironmentExperimental;
        private IObjectReference Make___objRef_global__Microsoft_UI_Content_IContentIslandEnvironmentExperimental()
        {
            global::System.Threading.Interlocked.CompareExchange(ref ___objRef_global__Microsoft_UI_Content_IContentIslandEnvironmentExperimental, ((IWinRTObject)this).NativeObject.As<IUnknownVftbl>(global::ABI.Microsoft.UI.Content.IContentIslandEnvironmentExperimentalMethods.IID), null);
            return ___objRef_global__Microsoft_UI_Content_IContentIslandEnvironmentExperimental;
        }
        private IObjectReference _objRef_global__Microsoft_UI_Content_IContentIslandEnvironmentExperimental => ___objRef_global__Microsoft_UI_Content_IContentIslandEnvironmentExperimental ?? Make___objRef_global__Microsoft_UI_Content_IContentIslandEnvironmentExperimental();



        private static class _IContentIslandEnvironmentFactoryMethods
        {}

        private static volatile IObjectReference ___objRef_global__Microsoft_UI_Content_IContentIslandEnvironmentFactory;
        private static IObjectReference _objRef_global__Microsoft_UI_Content_IContentIslandEnvironmentFactory
        {
            get
            { 
                var factory = ___objRef_global__Microsoft_UI_Content_IContentIslandEnvironmentFactory;
                if (factory != null && factory.IsInCurrentContext)
                {
                    return factory;
                }
                else
                {
                    return ___objRef_global__Microsoft_UI_Content_IContentIslandEnvironmentFactory = ActivationFactory.Get("Microsoft.UI.Content.ContentIslandEnvironment", global::ABI.Microsoft.UI.Content.IContentIslandEnvironmentFactoryMethods.IID);
                }
            }
        }

        public static ContentIslandEnvironment FromAbi(IntPtr thisPtr)
        {
            if (thisPtr == IntPtr.Zero) return null;
            return MarshalInspectable<ContentIslandEnvironment>.FromAbi(thisPtr);
        }

        protected internal ContentIslandEnvironment(IObjectReference objRef)
        {
            _inner = objRef.As(global::ABI.Microsoft.UI.Content.IContentIslandEnvironmentMethods.IID);

        }


        public static bool operator ==(ContentIslandEnvironment x, ContentIslandEnvironment y) => (x?.ThisPtr ?? IntPtr.Zero) == (y?.ThisPtr ?? IntPtr.Zero);
        public static bool operator !=(ContentIslandEnvironment x, ContentIslandEnvironment y) => !(x == y);
        public bool Equals(ContentIslandEnvironment other) => this == other;
        public override bool Equals(object obj) => obj is ContentIslandEnvironment that && this == that;
        public override int GetHashCode() => ThisPtr.GetHashCode();


        protected ContentIslandEnvironment(global::WinRT.DerivedComposed _)
        {

        }
        bool IWinRTObject.HasUnwrappableNativeObject => this.GetType() == typeof(ContentIslandEnvironment);
        IObjectReference IWinRTObject.NativeObject => _inner;
        private volatile global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> _queryInterfaceCache;
        private global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> MakeQueryInterfaceCache()
        {
            global::System.Threading.Interlocked.CompareExchange(ref _queryInterfaceCache, new global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference>(), null); 
            return _queryInterfaceCache;
        }
        global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> IWinRTObject.QueryInterfaceCache => _queryInterfaceCache ?? MakeQueryInterfaceCache();
        private volatile global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> _additionalTypeData;
        private global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> MakeAdditionalTypeData()
        {
            global::System.Threading.Interlocked.CompareExchange(ref _additionalTypeData, new global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object>(), null); 
            return _additionalTypeData;
        }
        global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> IWinRTObject.AdditionalTypeData => _additionalTypeData ?? MakeAdditionalTypeData();

        private struct InterfaceTag<I>{};


        public event global::Windows.Foundation.TypedEventHandler<ContentIslandEnvironment, ContentEnvironmentSettingChangedEventArgs> SettingChanged
        {
            add => global::ABI.Microsoft.UI.Content.IContentIslandEnvironmentMethods.Get_SettingChanged2(_objRef_global__Microsoft_UI_Content_IContentIslandEnvironment, (IWinRTObject)this).Subscribe(value);
            remove => global::ABI.Microsoft.UI.Content.IContentIslandEnvironmentMethods.Get_SettingChanged2(_objRef_global__Microsoft_UI_Content_IContentIslandEnvironment, (IWinRTObject)this).Unsubscribe(value);
        }

        public event global::Windows.Foundation.TypedEventHandler<ContentIslandEnvironment, ContentEnvironmentStateChangedEventArgs> StateChanged
        {
            add => global::ABI.Microsoft.UI.Content.IContentIslandEnvironmentMethods.Get_StateChanged2(_objRef_global__Microsoft_UI_Content_IContentIslandEnvironment, (IWinRTObject)this).Subscribe(value);
            remove => global::ABI.Microsoft.UI.Content.IContentIslandEnvironmentMethods.Get_StateChanged2(_objRef_global__Microsoft_UI_Content_IContentIslandEnvironment, (IWinRTObject)this).Unsubscribe(value);
        }

        public event global::Windows.Foundation.TypedEventHandler<ContentIslandEnvironment, object> ThemeChanged
        {
            add => global::ABI.Microsoft.UI.Content.IContentIslandEnvironmentExperimentalMethods.Get_ThemeChanged2(_objRef_global__Microsoft_UI_Content_IContentIslandEnvironmentExperimental, (IWinRTObject)this).Subscribe(value);
            remove => global::ABI.Microsoft.UI.Content.IContentIslandEnvironmentExperimentalMethods.Get_ThemeChanged2(_objRef_global__Microsoft_UI_Content_IContentIslandEnvironmentExperimental, (IWinRTObject)this).Unsubscribe(value);
        }

        public global::Microsoft.UI.WindowId AppWindowId => global::ABI.Microsoft.UI.Content.IContentIslandEnvironmentMethods.get_AppWindowId(_objRef_global__Microsoft_UI_Content_IContentIslandEnvironment);

        public ContentDisplayOrientations CurrentOrientation => global::ABI.Microsoft.UI.Content.IContentIslandEnvironmentExperimentalMethods.get_CurrentOrientation(_objRef_global__Microsoft_UI_Content_IContentIslandEnvironmentExperimental);

        public global::Microsoft.UI.DisplayId DisplayId => global::ABI.Microsoft.UI.Content.IContentIslandEnvironmentMethods.get_DisplayId(_objRef_global__Microsoft_UI_Content_IContentIslandEnvironment);

        public float DisplayScale => global::ABI.Microsoft.UI.Content.IContentIslandEnvironment2Methods.get_DisplayScale(_objRef_global__Microsoft_UI_Content_IContentIslandEnvironment2);

        public ContentDisplayOrientations NativeOrientation => global::ABI.Microsoft.UI.Content.IContentIslandEnvironmentExperimentalMethods.get_NativeOrientation(_objRef_global__Microsoft_UI_Content_IContentIslandEnvironmentExperimental);

        protected virtual bool IsOverridableInterface(Guid iid) => false;

        global::System.Runtime.InteropServices.CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(ref Guid iid, out IntPtr ppv)
        {
            ppv = IntPtr.Zero;
            if (IsOverridableInterface(iid) || global::WinRT.Interop.IID.IID_IInspectable == iid)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
            }

            if (((IWinRTObject)this).NativeObject.TryAs(iid, out ppv) >= 0)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.Handled;
            }

            return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
        }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI")]
    [global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Content.ContentIslandStateChangedEventArgs))]
    [global::ABI.Microsoft.UI.Content.ContentIslandStateChangedEventArgsRcwFactory]
    [global::WinRT.ProjectedRuntimeClass(typeof(IContentIslandStateChangedEventArgs))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.Foundation.WindowsAppSDKContract), 65540u)]
    public sealed class ContentIslandStateChangedEventArgs : global::System.Runtime.InteropServices.ICustomQueryInterface, IWinRTObject, IEquatable<ContentIslandStateChangedEventArgs>
    {
        private IntPtr ThisPtr => _inner == null ? (((IWinRTObject)this).NativeObject).ThisPtr : _inner.ThisPtr;

        private readonly IObjectReference _inner = null;



        private IObjectReference _objRef_global__Microsoft_UI_Content_IContentIslandStateChangedEventArgs => _inner;
        private volatile IObjectReference ___objRef_global__Microsoft_UI_Content_IContentIslandStateChangedEventArgs2;
        private IObjectReference Make___objRef_global__Microsoft_UI_Content_IContentIslandStateChangedEventArgs2()
        {
            global::System.Threading.Interlocked.CompareExchange(ref ___objRef_global__Microsoft_UI_Content_IContentIslandStateChangedEventArgs2, ((IWinRTObject)this).NativeObject.As<IUnknownVftbl>(global::ABI.Microsoft.UI.Content.IContentIslandStateChangedEventArgs2Methods.IID), null);
            return ___objRef_global__Microsoft_UI_Content_IContentIslandStateChangedEventArgs2;
        }
        private IObjectReference _objRef_global__Microsoft_UI_Content_IContentIslandStateChangedEventArgs2 => ___objRef_global__Microsoft_UI_Content_IContentIslandStateChangedEventArgs2 ?? Make___objRef_global__Microsoft_UI_Content_IContentIslandStateChangedEventArgs2();



        public static ContentIslandStateChangedEventArgs FromAbi(IntPtr thisPtr)
        {
            if (thisPtr == IntPtr.Zero) return null;
            return MarshalInspectable<ContentIslandStateChangedEventArgs>.FromAbi(thisPtr);
        }

        internal ContentIslandStateChangedEventArgs(IObjectReference objRef)
        {
            _inner = objRef.As(global::ABI.Microsoft.UI.Content.IContentIslandStateChangedEventArgsMethods.IID);

        }


        public static bool operator ==(ContentIslandStateChangedEventArgs x, ContentIslandStateChangedEventArgs y) => (x?.ThisPtr ?? IntPtr.Zero) == (y?.ThisPtr ?? IntPtr.Zero);
        public static bool operator !=(ContentIslandStateChangedEventArgs x, ContentIslandStateChangedEventArgs y) => !(x == y);
        public bool Equals(ContentIslandStateChangedEventArgs other) => this == other;
        public override bool Equals(object obj) => obj is ContentIslandStateChangedEventArgs that && this == that;
        public override int GetHashCode() => ThisPtr.GetHashCode();


        bool IWinRTObject.HasUnwrappableNativeObject => true;
        IObjectReference IWinRTObject.NativeObject => _inner;
        private volatile global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> _queryInterfaceCache;
        private global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> MakeQueryInterfaceCache()
        {
            global::System.Threading.Interlocked.CompareExchange(ref _queryInterfaceCache, new global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference>(), null); 
            return _queryInterfaceCache;
        }
        global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> IWinRTObject.QueryInterfaceCache => _queryInterfaceCache ?? MakeQueryInterfaceCache();
        private volatile global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> _additionalTypeData;
        private global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> MakeAdditionalTypeData()
        {
            global::System.Threading.Interlocked.CompareExchange(ref _additionalTypeData, new global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object>(), null); 
            return _additionalTypeData;
        }
        global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> IWinRTObject.AdditionalTypeData => _additionalTypeData ?? MakeAdditionalTypeData();

        private struct InterfaceTag<I>{};


        public bool DidActualSizeChange => global::ABI.Microsoft.UI.Content.IContentIslandStateChangedEventArgsMethods.get_DidActualSizeChange(_objRef_global__Microsoft_UI_Content_IContentIslandStateChangedEventArgs);

        public bool DidLayoutDirectionChange => global::ABI.Microsoft.UI.Content.IContentIslandStateChangedEventArgsMethods.get_DidLayoutDirectionChange(_objRef_global__Microsoft_UI_Content_IContentIslandStateChangedEventArgs);

        public bool DidLocalToClientTransformMatrixChange => global::ABI.Microsoft.UI.Content.IContentIslandStateChangedEventArgs2Methods.get_DidLocalToClientTransformMatrixChange(_objRef_global__Microsoft_UI_Content_IContentIslandStateChangedEventArgs2);

        public bool DidLocalToParentTransformMatrixChange => global::ABI.Microsoft.UI.Content.IContentIslandStateChangedEventArgs2Methods.get_DidLocalToParentTransformMatrixChange(_objRef_global__Microsoft_UI_Content_IContentIslandStateChangedEventArgs2);

        public bool DidRasterizationScaleChange => global::ABI.Microsoft.UI.Content.IContentIslandStateChangedEventArgsMethods.get_DidRasterizationScaleChange(_objRef_global__Microsoft_UI_Content_IContentIslandStateChangedEventArgs);

        public bool DidSiteEnabledChange => global::ABI.Microsoft.UI.Content.IContentIslandStateChangedEventArgsMethods.get_DidSiteEnabledChange(_objRef_global__Microsoft_UI_Content_IContentIslandStateChangedEventArgs);

        public bool DidSiteVisibleChange => global::ABI.Microsoft.UI.Content.IContentIslandStateChangedEventArgsMethods.get_DidSiteVisibleChange(_objRef_global__Microsoft_UI_Content_IContentIslandStateChangedEventArgs);

        private bool IsOverridableInterface(Guid iid) => false;

        global::System.Runtime.InteropServices.CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(ref Guid iid, out IntPtr ppv)
        {
            ppv = IntPtr.Zero;
            if (IsOverridableInterface(iid) || global::WinRT.Interop.IID.IID_IInspectable == iid)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
            }

            if (((IWinRTObject)this).NativeObject.TryAs(iid, out ppv) >= 0)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.Handled;
            }

            return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
        }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI")][global::WinRT.WinRTExposedType(typeof(global::WinRT.EnumTypeDetails<ContentLayoutDirection>))][global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.Foundation.WindowsAppSDKContract), 65540u)]
    public enum ContentLayoutDirection : int
    {
        LeftToRight = unchecked((int)0),
        RightToLeft = unchecked((int)0x1),
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI")]
    [global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Content.ContentSite))]
    [global::ABI.Microsoft.UI.Content.ContentSiteRcwFactory]
    [global::WinRT.ProjectedRuntimeClass(typeof(IContentSite))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.Foundation.WindowsAppSDKContract), 65540u)]
    public class ContentSite : global::System.IDisposable, global::Microsoft.UI.IClosableNotifier, global::System.Runtime.InteropServices.ICustomQueryInterface, IWinRTObject, IEquatable<ContentSite>
    {
        private IntPtr ThisPtr => _inner == null ? (((IWinRTObject)this).NativeObject).ThisPtr : _inner.ThisPtr;

        private readonly IObjectReference _inner = null;




        private volatile IObjectReference ___objRef_global__Microsoft_UI_Content_IContentSite;
        private IObjectReference Make___objRef_global__Microsoft_UI_Content_IContentSite()
        {
            global::System.Threading.Interlocked.CompareExchange(ref ___objRef_global__Microsoft_UI_Content_IContentSite, ((IWinRTObject)this).NativeObject.As<IUnknownVftbl>(global::ABI.Microsoft.UI.Content.IContentSiteMethods.IID), null);
            return ___objRef_global__Microsoft_UI_Content_IContentSite;
        }
        private IObjectReference _objRef_global__Microsoft_UI_Content_IContentSite => ___objRef_global__Microsoft_UI_Content_IContentSite ?? Make___objRef_global__Microsoft_UI_Content_IContentSite();

        private volatile IObjectReference ___objRef_global__Microsoft_UI_Content_IContentSite2;
        private IObjectReference Make___objRef_global__Microsoft_UI_Content_IContentSite2()
        {
            global::System.Threading.Interlocked.CompareExchange(ref ___objRef_global__Microsoft_UI_Content_IContentSite2, ((IWinRTObject)this).NativeObject.As<IUnknownVftbl>(global::ABI.Microsoft.UI.Content.IContentSite2Methods.IID), null);
            return ___objRef_global__Microsoft_UI_Content_IContentSite2;
        }
        private IObjectReference _objRef_global__Microsoft_UI_Content_IContentSite2 => ___objRef_global__Microsoft_UI_Content_IContentSite2 ?? Make___objRef_global__Microsoft_UI_Content_IContentSite2();

        private volatile IObjectReference ___objRef_global__Microsoft_UI_Content_IContentSiteExperimental;
        private IObjectReference Make___objRef_global__Microsoft_UI_Content_IContentSiteExperimental()
        {
            global::System.Threading.Interlocked.CompareExchange(ref ___objRef_global__Microsoft_UI_Content_IContentSiteExperimental, ((IWinRTObject)this).NativeObject.As<IUnknownVftbl>(global::ABI.Microsoft.UI.Content.IContentSiteExperimentalMethods.IID), null);
            return ___objRef_global__Microsoft_UI_Content_IContentSiteExperimental;
        }
        private IObjectReference _objRef_global__Microsoft_UI_Content_IContentSiteExperimental => ___objRef_global__Microsoft_UI_Content_IContentSiteExperimental ?? Make___objRef_global__Microsoft_UI_Content_IContentSiteExperimental();

        private volatile IObjectReference ___objRef_global__System_IDisposable;
        private IObjectReference Make___objRef_global__System_IDisposable()
        {
            global::System.Threading.Interlocked.CompareExchange(ref ___objRef_global__System_IDisposable, ((IWinRTObject)this).NativeObject.As<IUnknownVftbl>(global::ABI.System.IDisposableMethods.IID), null);
            return ___objRef_global__System_IDisposable;
        }
        private IObjectReference _objRef_global__System_IDisposable => ___objRef_global__System_IDisposable ?? Make___objRef_global__System_IDisposable();

        private volatile IObjectReference ___objRef_global__Microsoft_UI_IClosableNotifier;
        private IObjectReference Make___objRef_global__Microsoft_UI_IClosableNotifier()
        {
            global::System.Threading.Interlocked.CompareExchange(ref ___objRef_global__Microsoft_UI_IClosableNotifier, ((IWinRTObject)this).NativeObject.As<IUnknownVftbl>(global::ABI.Microsoft.UI.IClosableNotifierMethods.IID), null);
            return ___objRef_global__Microsoft_UI_IClosableNotifier;
        }
        private IObjectReference _objRef_global__Microsoft_UI_IClosableNotifier => ___objRef_global__Microsoft_UI_IClosableNotifier ?? Make___objRef_global__Microsoft_UI_IClosableNotifier();



        private static class _IContentSiteFactoryMethods
        {}

        private static volatile IObjectReference ___objRef_global__Microsoft_UI_Content_IContentSiteFactory;
        private static IObjectReference _objRef_global__Microsoft_UI_Content_IContentSiteFactory
        {
            get
            { 
                var factory = ___objRef_global__Microsoft_UI_Content_IContentSiteFactory;
                if (factory != null && factory.IsInCurrentContext)
                {
                    return factory;
                }
                else
                {
                    return ___objRef_global__Microsoft_UI_Content_IContentSiteFactory = ActivationFactory.Get("Microsoft.UI.Content.ContentSite", global::ABI.Microsoft.UI.Content.IContentSiteFactoryMethods.IID);
                }
            }
        }

        public static ContentSite FromAbi(IntPtr thisPtr)
        {
            if (thisPtr == IntPtr.Zero) return null;
            return MarshalInspectable<ContentSite>.FromAbi(thisPtr);
        }

        protected internal ContentSite(IObjectReference objRef)
        {
            _inner = objRef.As(global::ABI.Microsoft.UI.Content.IContentSiteMethods.IID);

        }


        public static bool operator ==(ContentSite x, ContentSite y) => (x?.ThisPtr ?? IntPtr.Zero) == (y?.ThisPtr ?? IntPtr.Zero);
        public static bool operator !=(ContentSite x, ContentSite y) => !(x == y);
        public bool Equals(ContentSite other) => this == other;
        public override bool Equals(object obj) => obj is ContentSite that && this == that;
        public override int GetHashCode() => ThisPtr.GetHashCode();


        protected ContentSite(global::WinRT.DerivedComposed _)
        {

        }
        bool IWinRTObject.HasUnwrappableNativeObject => this.GetType() == typeof(ContentSite);
        IObjectReference IWinRTObject.NativeObject => _inner;
        private volatile global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> _queryInterfaceCache;
        private global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> MakeQueryInterfaceCache()
        {
            global::System.Threading.Interlocked.CompareExchange(ref _queryInterfaceCache, new global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference>(), null); 
            return _queryInterfaceCache;
        }
        global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> IWinRTObject.QueryInterfaceCache => _queryInterfaceCache ?? MakeQueryInterfaceCache();
        private volatile global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> _additionalTypeData;
        private global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> MakeAdditionalTypeData()
        {
            global::System.Threading.Interlocked.CompareExchange(ref _additionalTypeData, new global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object>(), null); 
            return _additionalTypeData;
        }
        global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> IWinRTObject.AdditionalTypeData => _additionalTypeData ?? MakeAdditionalTypeData();

        private struct InterfaceTag<I>{};


        public ContentDeferral GetIslandStateChangeDeferral() => global::ABI.Microsoft.UI.Content.IContentSiteMethods.GetIslandStateChangeDeferral(_objRef_global__Microsoft_UI_Content_IContentSite);

        public event global::Windows.Foundation.TypedEventHandler<ContentSite, ContentSiteRequestedStateChangedEventArgs> RequestedStateChanged
        {
            add => global::ABI.Microsoft.UI.Content.IContentSiteMethods.Get_RequestedStateChanged2(_objRef_global__Microsoft_UI_Content_IContentSite, (IWinRTObject)this).Subscribe(value);
            remove => global::ABI.Microsoft.UI.Content.IContentSiteMethods.Get_RequestedStateChanged2(_objRef_global__Microsoft_UI_Content_IContentSite, (IWinRTObject)this).Unsubscribe(value);
        }

        public void SetContentNodeParent(IContentNodeOwner value) => global::ABI.Microsoft.UI.Content.IContentSiteExperimentalMethods.SetContentNodeParent(_objRef_global__Microsoft_UI_Content_IContentSiteExperimental, value);

        public bool TryGetAutomationProvider(out object provider) => global::ABI.Microsoft.UI.Content.IContentSiteExperimentalMethods.TryGetAutomationProvider(_objRef_global__Microsoft_UI_Content_IContentSiteExperimental, out provider);

        public void Dispose() => global::ABI.System.IDisposableMethods.Dispose(_objRef_global__System_IDisposable);

        public event global::Microsoft.UI.ClosableNotifierHandler Closed
        {
            add => global::ABI.Microsoft.UI.IClosableNotifierMethods.Get_Closed2(_objRef_global__Microsoft_UI_IClosableNotifier, (IWinRTObject)this).Subscribe(value);
            remove => global::ABI.Microsoft.UI.IClosableNotifierMethods.Get_Closed2(_objRef_global__Microsoft_UI_IClosableNotifier, (IWinRTObject)this).Unsubscribe(value);
        }

        public event global::Microsoft.UI.ClosableNotifierHandler FrameworkClosed
        {
            add => global::ABI.Microsoft.UI.IClosableNotifierMethods.Get_FrameworkClosed2(_objRef_global__Microsoft_UI_IClosableNotifier, (IWinRTObject)this).Subscribe(value);
            remove => global::ABI.Microsoft.UI.IClosableNotifierMethods.Get_FrameworkClosed2(_objRef_global__Microsoft_UI_IClosableNotifier, (IWinRTObject)this).Unsubscribe(value);
        }

        public global::System.Numerics.Vector2 ActualSize
        {
            get => global::ABI.Microsoft.UI.Content.IContentSiteMethods.get_ActualSize(_objRef_global__Microsoft_UI_Content_IContentSite);
            set => global::ABI.Microsoft.UI.Content.IContentSiteMethods.set_ActualSize(_objRef_global__Microsoft_UI_Content_IContentSite, value);
        }

        public global::Windows.Graphics.SizeInt32 ClientSize
        {
            get => global::ABI.Microsoft.UI.Content.IContentSiteMethods.get_ClientSize(_objRef_global__Microsoft_UI_Content_IContentSite);
            set => global::ABI.Microsoft.UI.Content.IContentSiteMethods.set_ClientSize(_objRef_global__Microsoft_UI_Content_IContentSite, value);
        }

        public ContentCoordinateConverter CoordinateConverter => global::ABI.Microsoft.UI.Content.IContentSiteMethods.get_CoordinateConverter(_objRef_global__Microsoft_UI_Content_IContentSite);

        public global::Microsoft.UI.Dispatching.DispatcherQueue DispatcherQueue => global::ABI.Microsoft.UI.Content.IContentSiteMethods.get_DispatcherQueue(_objRef_global__Microsoft_UI_Content_IContentSite);

        public ContentSiteEnvironment Environment => global::ABI.Microsoft.UI.Content.IContentSiteMethods.get_Environment(_objRef_global__Microsoft_UI_Content_IContentSite);

        public bool IsClosed => global::ABI.Microsoft.UI.IClosableNotifierMethods.get_IsClosed(_objRef_global__Microsoft_UI_IClosableNotifier);

        public bool IsConnected => global::ABI.Microsoft.UI.Content.IContentSiteMethods.get_IsConnected(_objRef_global__Microsoft_UI_Content_IContentSite);

        public bool IsSiteEnabled
        {
            get => global::ABI.Microsoft.UI.Content.IContentSiteMethods.get_IsSiteEnabled(_objRef_global__Microsoft_UI_Content_IContentSite);
            set => global::ABI.Microsoft.UI.Content.IContentSiteMethods.set_IsSiteEnabled(_objRef_global__Microsoft_UI_Content_IContentSite, value);
        }

        public bool IsSiteVisible
        {
            get => global::ABI.Microsoft.UI.Content.IContentSiteMethods.get_IsSiteVisible(_objRef_global__Microsoft_UI_Content_IContentSite);
            set => global::ABI.Microsoft.UI.Content.IContentSiteMethods.set_IsSiteVisible(_objRef_global__Microsoft_UI_Content_IContentSite, value);
        }

        public ContentLayoutDirection LayoutDirection
        {
            get => global::ABI.Microsoft.UI.Content.IContentSiteMethods.get_LayoutDirection(_objRef_global__Microsoft_UI_Content_IContentSite);
            set => global::ABI.Microsoft.UI.Content.IContentSiteMethods.set_LayoutDirection(_objRef_global__Microsoft_UI_Content_IContentSite, value);
        }

        public global::System.Numerics.Matrix4x4 LocalToClientTransformMatrix => global::ABI.Microsoft.UI.Content.IContentSite2Methods.get_LocalToClientTransformMatrix(_objRef_global__Microsoft_UI_Content_IContentSite2);

        public global::System.Numerics.Matrix4x4 LocalToParentTransformMatrix
        {
            get => global::ABI.Microsoft.UI.Content.IContentSite2Methods.get_LocalToParentTransformMatrix(_objRef_global__Microsoft_UI_Content_IContentSite2);
            set => global::ABI.Microsoft.UI.Content.IContentSite2Methods.set_LocalToParentTransformMatrix(_objRef_global__Microsoft_UI_Content_IContentSite2, value);
        }

        public float OverrideScale
        {
            get => global::ABI.Microsoft.UI.Content.IContentSiteMethods.get_OverrideScale(_objRef_global__Microsoft_UI_Content_IContentSite);
            set => global::ABI.Microsoft.UI.Content.IContentSiteMethods.set_OverrideScale(_objRef_global__Microsoft_UI_Content_IContentSite, value);
        }

        public float ParentScale
        {
            get => global::ABI.Microsoft.UI.Content.IContentSiteMethods.get_ParentScale(_objRef_global__Microsoft_UI_Content_IContentSite);
            set => global::ABI.Microsoft.UI.Content.IContentSiteMethods.set_ParentScale(_objRef_global__Microsoft_UI_Content_IContentSite, value);
        }

        public bool ProcessesKeyboardInput
        {
            get => global::ABI.Microsoft.UI.Content.IContentSite2Methods.get_ProcessesKeyboardInput(_objRef_global__Microsoft_UI_Content_IContentSite2);
            set => global::ABI.Microsoft.UI.Content.IContentSite2Methods.set_ProcessesKeyboardInput(_objRef_global__Microsoft_UI_Content_IContentSite2, value);
        }

        public bool ProcessesPointerInput
        {
            get => global::ABI.Microsoft.UI.Content.IContentSite2Methods.get_ProcessesPointerInput(_objRef_global__Microsoft_UI_Content_IContentSite2);
            set => global::ABI.Microsoft.UI.Content.IContentSite2Methods.set_ProcessesPointerInput(_objRef_global__Microsoft_UI_Content_IContentSite2, value);
        }

        public float RasterizationScale => global::ABI.Microsoft.UI.Content.IContentSiteMethods.get_RasterizationScale(_objRef_global__Microsoft_UI_Content_IContentSite);

        public global::System.Numerics.Vector2 RequestedSize => global::ABI.Microsoft.UI.Content.IContentSiteMethods.get_RequestedSize(_objRef_global__Microsoft_UI_Content_IContentSite);

        public bool ShouldApplyRasterizationScale
        {
            get => global::ABI.Microsoft.UI.Content.IContentSiteMethods.get_ShouldApplyRasterizationScale(_objRef_global__Microsoft_UI_Content_IContentSite);
            set => global::ABI.Microsoft.UI.Content.IContentSiteMethods.set_ShouldApplyRasterizationScale(_objRef_global__Microsoft_UI_Content_IContentSite, value);
        }

        public ContentSiteView View => global::ABI.Microsoft.UI.Content.IContentSiteMethods.get_View(_objRef_global__Microsoft_UI_Content_IContentSite);

        protected virtual bool IsOverridableInterface(Guid iid) => false;

        global::System.Runtime.InteropServices.CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(ref Guid iid, out IntPtr ppv)
        {
            ppv = IntPtr.Zero;
            if (IsOverridableInterface(iid) || global::WinRT.Interop.IID.IID_IInspectable == iid)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
            }

            if (((IWinRTObject)this).NativeObject.TryAs(iid, out ppv) >= 0)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.Handled;
            }

            return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
        }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI")]
    [global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Content.ContentSiteAutomationProviderRequestedEventArgs))]
    [global::ABI.Microsoft.UI.Content.ContentSiteAutomationProviderRequestedEventArgsRcwFactory]
    [global::WinRT.ProjectedRuntimeClass(typeof(IContentSiteAutomationProviderRequestedEventArgs))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.Foundation.WindowsAppSDKContract), 65543u)]
    public sealed class ContentSiteAutomationProviderRequestedEventArgs : global::System.Runtime.InteropServices.ICustomQueryInterface, IWinRTObject, IEquatable<ContentSiteAutomationProviderRequestedEventArgs>
    {
        private IntPtr ThisPtr => _inner == null ? (((IWinRTObject)this).NativeObject).ThisPtr : _inner.ThisPtr;

        private readonly IObjectReference _inner = null;



        private IObjectReference _objRef_global__Microsoft_UI_Content_IContentSiteAutomationProviderRequestedEventArgs => _inner;


        public static ContentSiteAutomationProviderRequestedEventArgs FromAbi(IntPtr thisPtr)
        {
            if (thisPtr == IntPtr.Zero) return null;
            return MarshalInspectable<ContentSiteAutomationProviderRequestedEventArgs>.FromAbi(thisPtr);
        }

        internal ContentSiteAutomationProviderRequestedEventArgs(IObjectReference objRef)
        {
            _inner = objRef.As(global::ABI.Microsoft.UI.Content.IContentSiteAutomationProviderRequestedEventArgsMethods.IID);

        }


        public static bool operator ==(ContentSiteAutomationProviderRequestedEventArgs x, ContentSiteAutomationProviderRequestedEventArgs y) => (x?.ThisPtr ?? IntPtr.Zero) == (y?.ThisPtr ?? IntPtr.Zero);
        public static bool operator !=(ContentSiteAutomationProviderRequestedEventArgs x, ContentSiteAutomationProviderRequestedEventArgs y) => !(x == y);
        public bool Equals(ContentSiteAutomationProviderRequestedEventArgs other) => this == other;
        public override bool Equals(object obj) => obj is ContentSiteAutomationProviderRequestedEventArgs that && this == that;
        public override int GetHashCode() => ThisPtr.GetHashCode();


        bool IWinRTObject.HasUnwrappableNativeObject => true;
        IObjectReference IWinRTObject.NativeObject => _inner;
        private volatile global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> _queryInterfaceCache;
        private global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> MakeQueryInterfaceCache()
        {
            global::System.Threading.Interlocked.CompareExchange(ref _queryInterfaceCache, new global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference>(), null); 
            return _queryInterfaceCache;
        }
        global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> IWinRTObject.QueryInterfaceCache => _queryInterfaceCache ?? MakeQueryInterfaceCache();
        private volatile global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> _additionalTypeData;
        private global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> MakeAdditionalTypeData()
        {
            global::System.Threading.Interlocked.CompareExchange(ref _additionalTypeData, new global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object>(), null); 
            return _additionalTypeData;
        }
        global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> IWinRTObject.AdditionalTypeData => _additionalTypeData ?? MakeAdditionalTypeData();

        private struct InterfaceTag<I>{};


        public object AutomationProvider
        {
            get => global::ABI.Microsoft.UI.Content.IContentSiteAutomationProviderRequestedEventArgsMethods.get_AutomationProvider(_objRef_global__Microsoft_UI_Content_IContentSiteAutomationProviderRequestedEventArgs);
            set => global::ABI.Microsoft.UI.Content.IContentSiteAutomationProviderRequestedEventArgsMethods.set_AutomationProvider(_objRef_global__Microsoft_UI_Content_IContentSiteAutomationProviderRequestedEventArgs, value);
        }

        public bool Handled
        {
            get => global::ABI.Microsoft.UI.Content.IContentSiteAutomationProviderRequestedEventArgsMethods.get_Handled(_objRef_global__Microsoft_UI_Content_IContentSiteAutomationProviderRequestedEventArgs);
            set => global::ABI.Microsoft.UI.Content.IContentSiteAutomationProviderRequestedEventArgsMethods.set_Handled(_objRef_global__Microsoft_UI_Content_IContentSiteAutomationProviderRequestedEventArgs, value);
        }

        private bool IsOverridableInterface(Guid iid) => false;

        global::System.Runtime.InteropServices.CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(ref Guid iid, out IntPtr ppv)
        {
            ppv = IntPtr.Zero;
            if (IsOverridableInterface(iid) || global::WinRT.Interop.IID.IID_IInspectable == iid)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
            }

            if (((IWinRTObject)this).NativeObject.TryAs(iid, out ppv) >= 0)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.Handled;
            }

            return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
        }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI")]
    [global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Content.ContentSiteEnvironment))]
    [global::ABI.Microsoft.UI.Content.ContentSiteEnvironmentRcwFactory]
    [global::WinRT.ProjectedRuntimeClass(typeof(IContentSiteEnvironment))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.Foundation.WindowsAppSDKContract), 65540u)]
    public class ContentSiteEnvironment : global::System.Runtime.InteropServices.ICustomQueryInterface, IWinRTObject, IEquatable<ContentSiteEnvironment>
    {
        private IntPtr ThisPtr => _inner == null ? (((IWinRTObject)this).NativeObject).ThisPtr : _inner.ThisPtr;

        private readonly IObjectReference _inner = null;




        private volatile IObjectReference ___objRef_global__Microsoft_UI_Content_IContentSiteEnvironment;
        private IObjectReference Make___objRef_global__Microsoft_UI_Content_IContentSiteEnvironment()
        {
            global::System.Threading.Interlocked.CompareExchange(ref ___objRef_global__Microsoft_UI_Content_IContentSiteEnvironment, ((IWinRTObject)this).NativeObject.As<IUnknownVftbl>(global::ABI.Microsoft.UI.Content.IContentSiteEnvironmentMethods.IID), null);
            return ___objRef_global__Microsoft_UI_Content_IContentSiteEnvironment;
        }
        private IObjectReference _objRef_global__Microsoft_UI_Content_IContentSiteEnvironment => ___objRef_global__Microsoft_UI_Content_IContentSiteEnvironment ?? Make___objRef_global__Microsoft_UI_Content_IContentSiteEnvironment();

        private volatile IObjectReference ___objRef_global__Microsoft_UI_Content_IContentSiteEnvironment2;
        private IObjectReference Make___objRef_global__Microsoft_UI_Content_IContentSiteEnvironment2()
        {
            global::System.Threading.Interlocked.CompareExchange(ref ___objRef_global__Microsoft_UI_Content_IContentSiteEnvironment2, ((IWinRTObject)this).NativeObject.As<IUnknownVftbl>(global::ABI.Microsoft.UI.Content.IContentSiteEnvironment2Methods.IID), null);
            return ___objRef_global__Microsoft_UI_Content_IContentSiteEnvironment2;
        }
        private IObjectReference _objRef_global__Microsoft_UI_Content_IContentSiteEnvironment2 => ___objRef_global__Microsoft_UI_Content_IContentSiteEnvironment2 ?? Make___objRef_global__Microsoft_UI_Content_IContentSiteEnvironment2();

        private volatile IObjectReference ___objRef_global__Microsoft_UI_Content_IContentSiteEnvironmentExperimental;
        private IObjectReference Make___objRef_global__Microsoft_UI_Content_IContentSiteEnvironmentExperimental()
        {
            global::System.Threading.Interlocked.CompareExchange(ref ___objRef_global__Microsoft_UI_Content_IContentSiteEnvironmentExperimental, ((IWinRTObject)this).NativeObject.As<IUnknownVftbl>(global::ABI.Microsoft.UI.Content.IContentSiteEnvironmentExperimentalMethods.IID), null);
            return ___objRef_global__Microsoft_UI_Content_IContentSiteEnvironmentExperimental;
        }
        private IObjectReference _objRef_global__Microsoft_UI_Content_IContentSiteEnvironmentExperimental => ___objRef_global__Microsoft_UI_Content_IContentSiteEnvironmentExperimental ?? Make___objRef_global__Microsoft_UI_Content_IContentSiteEnvironmentExperimental();



        private static class _IContentSiteEnvironmentFactoryMethods
        {}

        private static volatile IObjectReference ___objRef_global__Microsoft_UI_Content_IContentSiteEnvironmentFactory;
        private static IObjectReference _objRef_global__Microsoft_UI_Content_IContentSiteEnvironmentFactory
        {
            get
            { 
                var factory = ___objRef_global__Microsoft_UI_Content_IContentSiteEnvironmentFactory;
                if (factory != null && factory.IsInCurrentContext)
                {
                    return factory;
                }
                else
                {
                    return ___objRef_global__Microsoft_UI_Content_IContentSiteEnvironmentFactory = ActivationFactory.Get("Microsoft.UI.Content.ContentSiteEnvironment", global::ABI.Microsoft.UI.Content.IContentSiteEnvironmentFactoryMethods.IID);
                }
            }
        }

        public static ContentSiteEnvironment FromAbi(IntPtr thisPtr)
        {
            if (thisPtr == IntPtr.Zero) return null;
            return MarshalInspectable<ContentSiteEnvironment>.FromAbi(thisPtr);
        }

        protected internal ContentSiteEnvironment(IObjectReference objRef)
        {
            _inner = objRef.As(global::ABI.Microsoft.UI.Content.IContentSiteEnvironmentMethods.IID);

        }


        public static bool operator ==(ContentSiteEnvironment x, ContentSiteEnvironment y) => (x?.ThisPtr ?? IntPtr.Zero) == (y?.ThisPtr ?? IntPtr.Zero);
        public static bool operator !=(ContentSiteEnvironment x, ContentSiteEnvironment y) => !(x == y);
        public bool Equals(ContentSiteEnvironment other) => this == other;
        public override bool Equals(object obj) => obj is ContentSiteEnvironment that && this == that;
        public override int GetHashCode() => ThisPtr.GetHashCode();


        protected ContentSiteEnvironment(global::WinRT.DerivedComposed _)
        {

        }
        bool IWinRTObject.HasUnwrappableNativeObject => this.GetType() == typeof(ContentSiteEnvironment);
        IObjectReference IWinRTObject.NativeObject => _inner;
        private volatile global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> _queryInterfaceCache;
        private global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> MakeQueryInterfaceCache()
        {
            global::System.Threading.Interlocked.CompareExchange(ref _queryInterfaceCache, new global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference>(), null); 
            return _queryInterfaceCache;
        }
        global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> IWinRTObject.QueryInterfaceCache => _queryInterfaceCache ?? MakeQueryInterfaceCache();
        private volatile global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> _additionalTypeData;
        private global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> MakeAdditionalTypeData()
        {
            global::System.Threading.Interlocked.CompareExchange(ref _additionalTypeData, new global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object>(), null); 
            return _additionalTypeData;
        }
        global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> IWinRTObject.AdditionalTypeData => _additionalTypeData ?? MakeAdditionalTypeData();

        private struct InterfaceTag<I>{};


        public void NotifySettingChanged(string setting) => global::ABI.Microsoft.UI.Content.IContentSiteEnvironmentMethods.NotifySettingChanged(_objRef_global__Microsoft_UI_Content_IContentSiteEnvironment, setting);

        public void NotifyThemeChanged() => global::ABI.Microsoft.UI.Content.IContentSiteEnvironmentExperimentalMethods.NotifyThemeChanged(_objRef_global__Microsoft_UI_Content_IContentSiteEnvironmentExperimental);

        public global::Microsoft.UI.WindowId AppWindowId
        {
            get => global::ABI.Microsoft.UI.Content.IContentSiteEnvironmentMethods.get_AppWindowId(_objRef_global__Microsoft_UI_Content_IContentSiteEnvironment);
            set => global::ABI.Microsoft.UI.Content.IContentSiteEnvironmentMethods.set_AppWindowId(_objRef_global__Microsoft_UI_Content_IContentSiteEnvironment, value);
        }

        public ContentDisplayOrientations CurrentOrientation
        {
            get => global::ABI.Microsoft.UI.Content.IContentSiteEnvironmentExperimentalMethods.get_CurrentOrientation(_objRef_global__Microsoft_UI_Content_IContentSiteEnvironmentExperimental);
            set => global::ABI.Microsoft.UI.Content.IContentSiteEnvironmentExperimentalMethods.set_CurrentOrientation(_objRef_global__Microsoft_UI_Content_IContentSiteEnvironmentExperimental, value);
        }

        public global::Microsoft.UI.DisplayId DisplayId
        {
            get => global::ABI.Microsoft.UI.Content.IContentSiteEnvironmentMethods.get_DisplayId(_objRef_global__Microsoft_UI_Content_IContentSiteEnvironment);
            set => global::ABI.Microsoft.UI.Content.IContentSiteEnvironmentMethods.set_DisplayId(_objRef_global__Microsoft_UI_Content_IContentSiteEnvironment, value);
        }

        public float DisplayScale
        {
            get => global::ABI.Microsoft.UI.Content.IContentSiteEnvironment2Methods.get_DisplayScale(_objRef_global__Microsoft_UI_Content_IContentSiteEnvironment2);
            set => global::ABI.Microsoft.UI.Content.IContentSiteEnvironment2Methods.set_DisplayScale(_objRef_global__Microsoft_UI_Content_IContentSiteEnvironment2, value);
        }

        public ContentDisplayOrientations NativeOrientation
        {
            get => global::ABI.Microsoft.UI.Content.IContentSiteEnvironmentExperimentalMethods.get_NativeOrientation(_objRef_global__Microsoft_UI_Content_IContentSiteEnvironmentExperimental);
            set => global::ABI.Microsoft.UI.Content.IContentSiteEnvironmentExperimentalMethods.set_NativeOrientation(_objRef_global__Microsoft_UI_Content_IContentSiteEnvironmentExperimental, value);
        }

        public ContentSiteEnvironmentView View => global::ABI.Microsoft.UI.Content.IContentSiteEnvironmentMethods.get_View(_objRef_global__Microsoft_UI_Content_IContentSiteEnvironment);

        protected virtual bool IsOverridableInterface(Guid iid) => false;

        global::System.Runtime.InteropServices.CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(ref Guid iid, out IntPtr ppv)
        {
            ppv = IntPtr.Zero;
            if (IsOverridableInterface(iid) || global::WinRT.Interop.IID.IID_IInspectable == iid)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
            }

            if (((IWinRTObject)this).NativeObject.TryAs(iid, out ppv) >= 0)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.Handled;
            }

            return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
        }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI")]
    [global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Content.ContentSiteEnvironmentView))]
    [global::ABI.Microsoft.UI.Content.ContentSiteEnvironmentViewRcwFactory]
    [global::WinRT.ProjectedRuntimeClass(typeof(IContentSiteEnvironmentView))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.Foundation.WindowsAppSDKContract), 65540u)]
    public class ContentSiteEnvironmentView : global::System.Runtime.InteropServices.ICustomQueryInterface, IWinRTObject, IEquatable<ContentSiteEnvironmentView>
    {
        private IntPtr ThisPtr => _inner == null ? (((IWinRTObject)this).NativeObject).ThisPtr : _inner.ThisPtr;

        private readonly IObjectReference _inner = null;




        private volatile IObjectReference ___objRef_global__Microsoft_UI_Content_IContentSiteEnvironmentView;
        private IObjectReference Make___objRef_global__Microsoft_UI_Content_IContentSiteEnvironmentView()
        {
            global::System.Threading.Interlocked.CompareExchange(ref ___objRef_global__Microsoft_UI_Content_IContentSiteEnvironmentView, ((IWinRTObject)this).NativeObject.As<IUnknownVftbl>(global::ABI.Microsoft.UI.Content.IContentSiteEnvironmentViewMethods.IID), null);
            return ___objRef_global__Microsoft_UI_Content_IContentSiteEnvironmentView;
        }
        private IObjectReference _objRef_global__Microsoft_UI_Content_IContentSiteEnvironmentView => ___objRef_global__Microsoft_UI_Content_IContentSiteEnvironmentView ?? Make___objRef_global__Microsoft_UI_Content_IContentSiteEnvironmentView();

        private volatile IObjectReference ___objRef_global__Microsoft_UI_Content_IContentSiteEnvironmentView2;
        private IObjectReference Make___objRef_global__Microsoft_UI_Content_IContentSiteEnvironmentView2()
        {
            global::System.Threading.Interlocked.CompareExchange(ref ___objRef_global__Microsoft_UI_Content_IContentSiteEnvironmentView2, ((IWinRTObject)this).NativeObject.As<IUnknownVftbl>(global::ABI.Microsoft.UI.Content.IContentSiteEnvironmentView2Methods.IID), null);
            return ___objRef_global__Microsoft_UI_Content_IContentSiteEnvironmentView2;
        }
        private IObjectReference _objRef_global__Microsoft_UI_Content_IContentSiteEnvironmentView2 => ___objRef_global__Microsoft_UI_Content_IContentSiteEnvironmentView2 ?? Make___objRef_global__Microsoft_UI_Content_IContentSiteEnvironmentView2();



        private static class _IContentSiteEnvironmentViewFactoryMethods
        {}

        private static volatile IObjectReference ___objRef_global__Microsoft_UI_Content_IContentSiteEnvironmentViewFactory;
        private static IObjectReference _objRef_global__Microsoft_UI_Content_IContentSiteEnvironmentViewFactory
        {
            get
            { 
                var factory = ___objRef_global__Microsoft_UI_Content_IContentSiteEnvironmentViewFactory;
                if (factory != null && factory.IsInCurrentContext)
                {
                    return factory;
                }
                else
                {
                    return ___objRef_global__Microsoft_UI_Content_IContentSiteEnvironmentViewFactory = ActivationFactory.Get("Microsoft.UI.Content.ContentSiteEnvironmentView", global::ABI.Microsoft.UI.Content.IContentSiteEnvironmentViewFactoryMethods.IID);
                }
            }
        }

        public static ContentSiteEnvironmentView FromAbi(IntPtr thisPtr)
        {
            if (thisPtr == IntPtr.Zero) return null;
            return MarshalInspectable<ContentSiteEnvironmentView>.FromAbi(thisPtr);
        }

        protected internal ContentSiteEnvironmentView(IObjectReference objRef)
        {
            _inner = objRef.As(global::ABI.Microsoft.UI.Content.IContentSiteEnvironmentViewMethods.IID);

        }


        public static bool operator ==(ContentSiteEnvironmentView x, ContentSiteEnvironmentView y) => (x?.ThisPtr ?? IntPtr.Zero) == (y?.ThisPtr ?? IntPtr.Zero);
        public static bool operator !=(ContentSiteEnvironmentView x, ContentSiteEnvironmentView y) => !(x == y);
        public bool Equals(ContentSiteEnvironmentView other) => this == other;
        public override bool Equals(object obj) => obj is ContentSiteEnvironmentView that && this == that;
        public override int GetHashCode() => ThisPtr.GetHashCode();


        protected ContentSiteEnvironmentView(global::WinRT.DerivedComposed _)
        {

        }
        bool IWinRTObject.HasUnwrappableNativeObject => this.GetType() == typeof(ContentSiteEnvironmentView);
        IObjectReference IWinRTObject.NativeObject => _inner;
        private volatile global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> _queryInterfaceCache;
        private global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> MakeQueryInterfaceCache()
        {
            global::System.Threading.Interlocked.CompareExchange(ref _queryInterfaceCache, new global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference>(), null); 
            return _queryInterfaceCache;
        }
        global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> IWinRTObject.QueryInterfaceCache => _queryInterfaceCache ?? MakeQueryInterfaceCache();
        private volatile global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> _additionalTypeData;
        private global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> MakeAdditionalTypeData()
        {
            global::System.Threading.Interlocked.CompareExchange(ref _additionalTypeData, new global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object>(), null); 
            return _additionalTypeData;
        }
        global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> IWinRTObject.AdditionalTypeData => _additionalTypeData ?? MakeAdditionalTypeData();

        private struct InterfaceTag<I>{};


        public global::Microsoft.UI.WindowId AppWindowId => global::ABI.Microsoft.UI.Content.IContentSiteEnvironmentViewMethods.get_AppWindowId(_objRef_global__Microsoft_UI_Content_IContentSiteEnvironmentView);

        public global::Microsoft.UI.DisplayId DisplayId => global::ABI.Microsoft.UI.Content.IContentSiteEnvironmentViewMethods.get_DisplayId(_objRef_global__Microsoft_UI_Content_IContentSiteEnvironmentView);

        public float DisplayScale => global::ABI.Microsoft.UI.Content.IContentSiteEnvironmentView2Methods.get_DisplayScale(_objRef_global__Microsoft_UI_Content_IContentSiteEnvironmentView2);

        protected virtual bool IsOverridableInterface(Guid iid) => false;

        global::System.Runtime.InteropServices.CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(ref Guid iid, out IntPtr ppv)
        {
            ppv = IntPtr.Zero;
            if (IsOverridableInterface(iid) || global::WinRT.Interop.IID.IID_IInspectable == iid)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
            }

            if (((IWinRTObject)this).NativeObject.TryAs(iid, out ppv) >= 0)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.Handled;
            }

            return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
        }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI")]
    [global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Content.ContentSiteRequestedStateChangedEventArgs))]
    [global::ABI.Microsoft.UI.Content.ContentSiteRequestedStateChangedEventArgsRcwFactory]
    [global::WinRT.ProjectedRuntimeClass(typeof(IContentSiteRequestedStateChangedEventArgs))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.Foundation.WindowsAppSDKContract), 65540u)]
    public sealed class ContentSiteRequestedStateChangedEventArgs : global::System.Runtime.InteropServices.ICustomQueryInterface, IWinRTObject, IEquatable<ContentSiteRequestedStateChangedEventArgs>
    {
        private IntPtr ThisPtr => _inner == null ? (((IWinRTObject)this).NativeObject).ThisPtr : _inner.ThisPtr;

        private readonly IObjectReference _inner = null;



        private IObjectReference _objRef_global__Microsoft_UI_Content_IContentSiteRequestedStateChangedEventArgs => _inner;


        public static ContentSiteRequestedStateChangedEventArgs FromAbi(IntPtr thisPtr)
        {
            if (thisPtr == IntPtr.Zero) return null;
            return MarshalInspectable<ContentSiteRequestedStateChangedEventArgs>.FromAbi(thisPtr);
        }

        internal ContentSiteRequestedStateChangedEventArgs(IObjectReference objRef)
        {
            _inner = objRef.As(global::ABI.Microsoft.UI.Content.IContentSiteRequestedStateChangedEventArgsMethods.IID);

        }


        public static bool operator ==(ContentSiteRequestedStateChangedEventArgs x, ContentSiteRequestedStateChangedEventArgs y) => (x?.ThisPtr ?? IntPtr.Zero) == (y?.ThisPtr ?? IntPtr.Zero);
        public static bool operator !=(ContentSiteRequestedStateChangedEventArgs x, ContentSiteRequestedStateChangedEventArgs y) => !(x == y);
        public bool Equals(ContentSiteRequestedStateChangedEventArgs other) => this == other;
        public override bool Equals(object obj) => obj is ContentSiteRequestedStateChangedEventArgs that && this == that;
        public override int GetHashCode() => ThisPtr.GetHashCode();


        bool IWinRTObject.HasUnwrappableNativeObject => true;
        IObjectReference IWinRTObject.NativeObject => _inner;
        private volatile global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> _queryInterfaceCache;
        private global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> MakeQueryInterfaceCache()
        {
            global::System.Threading.Interlocked.CompareExchange(ref _queryInterfaceCache, new global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference>(), null); 
            return _queryInterfaceCache;
        }
        global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> IWinRTObject.QueryInterfaceCache => _queryInterfaceCache ?? MakeQueryInterfaceCache();
        private volatile global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> _additionalTypeData;
        private global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> MakeAdditionalTypeData()
        {
            global::System.Threading.Interlocked.CompareExchange(ref _additionalTypeData, new global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object>(), null); 
            return _additionalTypeData;
        }
        global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> IWinRTObject.AdditionalTypeData => _additionalTypeData ?? MakeAdditionalTypeData();

        private struct InterfaceTag<I>{};


        public bool DidRequestedSizeChange => global::ABI.Microsoft.UI.Content.IContentSiteRequestedStateChangedEventArgsMethods.get_DidRequestedSizeChange(_objRef_global__Microsoft_UI_Content_IContentSiteRequestedStateChangedEventArgs);

        private bool IsOverridableInterface(Guid iid) => false;

        global::System.Runtime.InteropServices.CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(ref Guid iid, out IntPtr ppv)
        {
            ppv = IntPtr.Zero;
            if (IsOverridableInterface(iid) || global::WinRT.Interop.IID.IID_IInspectable == iid)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
            }

            if (((IWinRTObject)this).NativeObject.TryAs(iid, out ppv) >= 0)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.Handled;
            }

            return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
        }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI")]
    [global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Content.ContentSiteView))]
    [global::ABI.Microsoft.UI.Content.ContentSiteViewRcwFactory]
    [global::WinRT.ProjectedRuntimeClass(typeof(IContentSiteView))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.Foundation.WindowsAppSDKContract), 65540u)]
    public class ContentSiteView : global::System.Runtime.InteropServices.ICustomQueryInterface, IWinRTObject, IEquatable<ContentSiteView>
    {
        private IntPtr ThisPtr => _inner == null ? (((IWinRTObject)this).NativeObject).ThisPtr : _inner.ThisPtr;

        private readonly IObjectReference _inner = null;




        private volatile IObjectReference ___objRef_global__Microsoft_UI_Content_IContentSiteView;
        private IObjectReference Make___objRef_global__Microsoft_UI_Content_IContentSiteView()
        {
            global::System.Threading.Interlocked.CompareExchange(ref ___objRef_global__Microsoft_UI_Content_IContentSiteView, ((IWinRTObject)this).NativeObject.As<IUnknownVftbl>(global::ABI.Microsoft.UI.Content.IContentSiteViewMethods.IID), null);
            return ___objRef_global__Microsoft_UI_Content_IContentSiteView;
        }
        private IObjectReference _objRef_global__Microsoft_UI_Content_IContentSiteView => ___objRef_global__Microsoft_UI_Content_IContentSiteView ?? Make___objRef_global__Microsoft_UI_Content_IContentSiteView();

        private volatile IObjectReference ___objRef_global__Microsoft_UI_Content_IContentSiteView2;
        private IObjectReference Make___objRef_global__Microsoft_UI_Content_IContentSiteView2()
        {
            global::System.Threading.Interlocked.CompareExchange(ref ___objRef_global__Microsoft_UI_Content_IContentSiteView2, ((IWinRTObject)this).NativeObject.As<IUnknownVftbl>(global::ABI.Microsoft.UI.Content.IContentSiteView2Methods.IID), null);
            return ___objRef_global__Microsoft_UI_Content_IContentSiteView2;
        }
        private IObjectReference _objRef_global__Microsoft_UI_Content_IContentSiteView2 => ___objRef_global__Microsoft_UI_Content_IContentSiteView2 ?? Make___objRef_global__Microsoft_UI_Content_IContentSiteView2();

        private volatile IObjectReference ___objRef_global__Microsoft_UI_Content_IContentSiteViewAutomation;
        private IObjectReference Make___objRef_global__Microsoft_UI_Content_IContentSiteViewAutomation()
        {
            global::System.Threading.Interlocked.CompareExchange(ref ___objRef_global__Microsoft_UI_Content_IContentSiteViewAutomation, ((IWinRTObject)this).NativeObject.As<IUnknownVftbl>(global::ABI.Microsoft.UI.Content.IContentSiteViewAutomationMethods.IID), null);
            return ___objRef_global__Microsoft_UI_Content_IContentSiteViewAutomation;
        }
        private IObjectReference _objRef_global__Microsoft_UI_Content_IContentSiteViewAutomation => ___objRef_global__Microsoft_UI_Content_IContentSiteViewAutomation ?? Make___objRef_global__Microsoft_UI_Content_IContentSiteViewAutomation();



        private static class _IContentSiteViewFactoryMethods
        {}

        private static volatile IObjectReference ___objRef_global__Microsoft_UI_Content_IContentSiteViewFactory;
        private static IObjectReference _objRef_global__Microsoft_UI_Content_IContentSiteViewFactory
        {
            get
            { 
                var factory = ___objRef_global__Microsoft_UI_Content_IContentSiteViewFactory;
                if (factory != null && factory.IsInCurrentContext)
                {
                    return factory;
                }
                else
                {
                    return ___objRef_global__Microsoft_UI_Content_IContentSiteViewFactory = ActivationFactory.Get("Microsoft.UI.Content.ContentSiteView", global::ABI.Microsoft.UI.Content.IContentSiteViewFactoryMethods.IID);
                }
            }
        }

        public static ContentSiteView FromAbi(IntPtr thisPtr)
        {
            if (thisPtr == IntPtr.Zero) return null;
            return MarshalInspectable<ContentSiteView>.FromAbi(thisPtr);
        }

        protected internal ContentSiteView(IObjectReference objRef)
        {
            _inner = objRef.As(global::ABI.Microsoft.UI.Content.IContentSiteViewMethods.IID);

        }


        public static bool operator ==(ContentSiteView x, ContentSiteView y) => (x?.ThisPtr ?? IntPtr.Zero) == (y?.ThisPtr ?? IntPtr.Zero);
        public static bool operator !=(ContentSiteView x, ContentSiteView y) => !(x == y);
        public bool Equals(ContentSiteView other) => this == other;
        public override bool Equals(object obj) => obj is ContentSiteView that && this == that;
        public override int GetHashCode() => ThisPtr.GetHashCode();


        protected ContentSiteView(global::WinRT.DerivedComposed _)
        {

        }
        bool IWinRTObject.HasUnwrappableNativeObject => this.GetType() == typeof(ContentSiteView);
        IObjectReference IWinRTObject.NativeObject => _inner;
        private volatile global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> _queryInterfaceCache;
        private global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> MakeQueryInterfaceCache()
        {
            global::System.Threading.Interlocked.CompareExchange(ref _queryInterfaceCache, new global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference>(), null); 
            return _queryInterfaceCache;
        }
        global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> IWinRTObject.QueryInterfaceCache => _queryInterfaceCache ?? MakeQueryInterfaceCache();
        private volatile global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> _additionalTypeData;
        private global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> MakeAdditionalTypeData()
        {
            global::System.Threading.Interlocked.CompareExchange(ref _additionalTypeData, new global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object>(), null); 
            return _additionalTypeData;
        }
        global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> IWinRTObject.AdditionalTypeData => _additionalTypeData ?? MakeAdditionalTypeData();

        private struct InterfaceTag<I>{};


        public global::System.Numerics.Vector2 ActualSize => global::ABI.Microsoft.UI.Content.IContentSiteViewMethods.get_ActualSize(_objRef_global__Microsoft_UI_Content_IContentSiteView);

        public ContentAutomationOptions AutomationOption => global::ABI.Microsoft.UI.Content.IContentSiteViewAutomationMethods.get_AutomationOption(_objRef_global__Microsoft_UI_Content_IContentSiteViewAutomation);

        public global::Windows.Graphics.SizeInt32 ClientSize => global::ABI.Microsoft.UI.Content.IContentSiteViewMethods.get_ClientSize(_objRef_global__Microsoft_UI_Content_IContentSiteView);

        public ContentCoordinateConverter CoordinateConverter => global::ABI.Microsoft.UI.Content.IContentSiteViewMethods.get_CoordinateConverter(_objRef_global__Microsoft_UI_Content_IContentSiteView);

        public global::Microsoft.UI.Dispatching.DispatcherQueue DispatcherQueue => global::ABI.Microsoft.UI.Content.IContentSiteViewMethods.get_DispatcherQueue(_objRef_global__Microsoft_UI_Content_IContentSiteView);

        public ContentSiteEnvironmentView EnvironmentView => global::ABI.Microsoft.UI.Content.IContentSiteViewMethods.get_EnvironmentView(_objRef_global__Microsoft_UI_Content_IContentSiteView);

        public bool IsConnected => global::ABI.Microsoft.UI.Content.IContentSiteViewMethods.get_IsConnected(_objRef_global__Microsoft_UI_Content_IContentSiteView);

        public bool IsSiteEnabled => global::ABI.Microsoft.UI.Content.IContentSiteViewMethods.get_IsSiteEnabled(_objRef_global__Microsoft_UI_Content_IContentSiteView);

        public bool IsSiteVisible => global::ABI.Microsoft.UI.Content.IContentSiteViewMethods.get_IsSiteVisible(_objRef_global__Microsoft_UI_Content_IContentSiteView);

        public ContentLayoutDirection LayoutDirection => global::ABI.Microsoft.UI.Content.IContentSiteViewMethods.get_LayoutDirection(_objRef_global__Microsoft_UI_Content_IContentSiteView);

        public global::System.Numerics.Matrix4x4 LocalToClientTransformMatrix => global::ABI.Microsoft.UI.Content.IContentSiteView2Methods.get_LocalToClientTransformMatrix(_objRef_global__Microsoft_UI_Content_IContentSiteView2);

        public global::System.Numerics.Matrix4x4 LocalToParentTransformMatrix => global::ABI.Microsoft.UI.Content.IContentSiteView2Methods.get_LocalToParentTransformMatrix(_objRef_global__Microsoft_UI_Content_IContentSiteView2);

        public float OverrideScale => global::ABI.Microsoft.UI.Content.IContentSiteViewMethods.get_OverrideScale(_objRef_global__Microsoft_UI_Content_IContentSiteView);

        public float ParentScale => global::ABI.Microsoft.UI.Content.IContentSiteViewMethods.get_ParentScale(_objRef_global__Microsoft_UI_Content_IContentSiteView);

        public bool ProcessesKeyboardInput => global::ABI.Microsoft.UI.Content.IContentSiteView2Methods.get_ProcessesKeyboardInput(_objRef_global__Microsoft_UI_Content_IContentSiteView2);

        public bool ProcessesPointerInput => global::ABI.Microsoft.UI.Content.IContentSiteView2Methods.get_ProcessesPointerInput(_objRef_global__Microsoft_UI_Content_IContentSiteView2);

        public float RasterizationScale => global::ABI.Microsoft.UI.Content.IContentSiteViewMethods.get_RasterizationScale(_objRef_global__Microsoft_UI_Content_IContentSiteView);

        public global::System.Numerics.Vector2 RequestedSize => global::ABI.Microsoft.UI.Content.IContentSiteViewMethods.get_RequestedSize(_objRef_global__Microsoft_UI_Content_IContentSiteView);

        public bool ShouldApplyRasterizationScale => global::ABI.Microsoft.UI.Content.IContentSiteViewMethods.get_ShouldApplyRasterizationScale(_objRef_global__Microsoft_UI_Content_IContentSiteView);

        protected virtual bool IsOverridableInterface(Guid iid) => false;

        global::System.Runtime.InteropServices.CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(ref Guid iid, out IntPtr ppv)
        {
            ppv = IntPtr.Zero;
            if (IsOverridableInterface(iid) || global::WinRT.Interop.IID.IID_IInspectable == iid)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
            }

            if (((IWinRTObject)this).NativeObject.TryAs(iid, out ppv) >= 0)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.Handled;
            }

            return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
        }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI")][global::WinRT.WinRTExposedType(typeof(global::WinRT.EnumTypeDetails<ContentSizePolicy>))][global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.Foundation.WindowsAppSDKContract), 65540u)]
    public enum ContentSizePolicy : int
    {
        None = unchecked((int)0),
        ResizeContentToParentWindow = unchecked((int)0x1),
        ResizeParentWindowToContent = unchecked((int)0x2),
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI")]
    [global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Content.CoreWindowSiteBridge))]
    [global::ABI.Microsoft.UI.Content.CoreWindowSiteBridgeRcwFactory]
    [global::WinRT.ProjectedRuntimeClass(typeof(ICoreWindowSiteBridge))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.Foundation.WindowsAppSDKContract), 65543u)]
    [global::Windows.Foundation.Metadata.Experimental]
    public sealed class CoreWindowSiteBridge : IContentSiteBridge, global::System.IDisposable, global::System.Runtime.InteropServices.ICustomQueryInterface, IWinRTObject, IEquatable<CoreWindowSiteBridge>
    {
        private IntPtr ThisPtr => _inner == null ? (((IWinRTObject)this).NativeObject).ThisPtr : _inner.ThisPtr;

        private readonly IObjectReference _inner = null;



        private IObjectReference _objRef_global__Microsoft_UI_Content_ICoreWindowSiteBridge => _inner;
        private volatile IObjectReference ___objRef_global__Microsoft_UI_Content_IContentSiteBridge;
        private IObjectReference Make___objRef_global__Microsoft_UI_Content_IContentSiteBridge()
        {
            global::System.Threading.Interlocked.CompareExchange(ref ___objRef_global__Microsoft_UI_Content_IContentSiteBridge, ((IWinRTObject)this).NativeObject.As<IUnknownVftbl>(global::ABI.Microsoft.UI.Content.IContentSiteBridgeMethods.IID), null);
            return ___objRef_global__Microsoft_UI_Content_IContentSiteBridge;
        }
        private IObjectReference _objRef_global__Microsoft_UI_Content_IContentSiteBridge => ___objRef_global__Microsoft_UI_Content_IContentSiteBridge ?? Make___objRef_global__Microsoft_UI_Content_IContentSiteBridge();

        private volatile IObjectReference ___objRef_global__System_IDisposable;
        private IObjectReference Make___objRef_global__System_IDisposable()
        {
            global::System.Threading.Interlocked.CompareExchange(ref ___objRef_global__System_IDisposable, ((IWinRTObject)this).NativeObject.As<IUnknownVftbl>(global::ABI.System.IDisposableMethods.IID), null);
            return ___objRef_global__System_IDisposable;
        }
        private IObjectReference _objRef_global__System_IDisposable => ___objRef_global__System_IDisposable ?? Make___objRef_global__System_IDisposable();



        public static I As<I>() => ActivationFactory.Get("Microsoft.UI.Content.CoreWindowSiteBridge").AsInterface<I>();

        private static volatile IObjectReference ___objRef_global__Microsoft_UI_Content_ICoreWindowSiteBridgeStatics;
        private static IObjectReference _objRef_global__Microsoft_UI_Content_ICoreWindowSiteBridgeStatics
        {
            get
            { 
                var factory = ___objRef_global__Microsoft_UI_Content_ICoreWindowSiteBridgeStatics;
                if (factory != null && factory.IsInCurrentContext)
                {
                    return factory;
                }
                else
                {
                    return ___objRef_global__Microsoft_UI_Content_ICoreWindowSiteBridgeStatics = ActivationFactory.Get("Microsoft.UI.Content.CoreWindowSiteBridge", global::ABI.Microsoft.UI.Content.ICoreWindowSiteBridgeStaticsMethods.IID);
                }
            }
        }

        public static CoreWindowSiteBridge Create(global::Microsoft.UI.Composition.Compositor compositor, global::Windows.UI.Core.CoreWindow coreWindow) => global::ABI.Microsoft.UI.Content.ICoreWindowSiteBridgeStaticsMethods.Create(_objRef_global__Microsoft_UI_Content_ICoreWindowSiteBridgeStatics, compositor, coreWindow);

        public static bool IsSupported() => global::ABI.Microsoft.UI.Content.ICoreWindowSiteBridgeStaticsMethods.IsSupported(_objRef_global__Microsoft_UI_Content_ICoreWindowSiteBridgeStatics);

        public static CoreWindowSiteBridge FromAbi(IntPtr thisPtr)
        {
            if (thisPtr == IntPtr.Zero) return null;
            return MarshalInspectable<CoreWindowSiteBridge>.FromAbi(thisPtr);
        }

        internal CoreWindowSiteBridge(IObjectReference objRef)
        {
            _inner = objRef.As(global::ABI.Microsoft.UI.Content.ICoreWindowSiteBridgeMethods.IID);

        }


        public static bool operator ==(CoreWindowSiteBridge x, CoreWindowSiteBridge y) => (x?.ThisPtr ?? IntPtr.Zero) == (y?.ThisPtr ?? IntPtr.Zero);
        public static bool operator !=(CoreWindowSiteBridge x, CoreWindowSiteBridge y) => !(x == y);
        public bool Equals(CoreWindowSiteBridge other) => this == other;
        public override bool Equals(object obj) => obj is CoreWindowSiteBridge that && this == that;
        public override int GetHashCode() => ThisPtr.GetHashCode();


        bool IWinRTObject.HasUnwrappableNativeObject => true;
        IObjectReference IWinRTObject.NativeObject => _inner;
        private volatile global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> _queryInterfaceCache;
        private global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> MakeQueryInterfaceCache()
        {
            global::System.Threading.Interlocked.CompareExchange(ref _queryInterfaceCache, new global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference>(), null); 
            return _queryInterfaceCache;
        }
        global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> IWinRTObject.QueryInterfaceCache => _queryInterfaceCache ?? MakeQueryInterfaceCache();
        private volatile global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> _additionalTypeData;
        private global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> MakeAdditionalTypeData()
        {
            global::System.Threading.Interlocked.CompareExchange(ref _additionalTypeData, new global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object>(), null); 
            return _additionalTypeData;
        }
        global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> IWinRTObject.AdditionalTypeData => _additionalTypeData ?? MakeAdditionalTypeData();

        private struct InterfaceTag<I>{};


        public void Connect(ContentIsland content) => global::ABI.Microsoft.UI.Content.ICoreWindowSiteBridgeMethods.Connect(_objRef_global__Microsoft_UI_Content_ICoreWindowSiteBridge, content);

        public void Dispose() => global::ABI.System.IDisposableMethods.Dispose(_objRef_global__System_IDisposable);

        public global::Microsoft.UI.Dispatching.DispatcherQueue DispatcherQueue => global::ABI.Microsoft.UI.Content.IContentSiteBridgeMethods.get_DispatcherQueue(_objRef_global__Microsoft_UI_Content_IContentSiteBridge);

        public global::System.Nullable<ContentLayoutDirection> LayoutDirectionOverride
        {
            get => global::ABI.Microsoft.UI.Content.IContentSiteBridgeMethods.get_LayoutDirectionOverride(_objRef_global__Microsoft_UI_Content_IContentSiteBridge);
            set => global::ABI.Microsoft.UI.Content.IContentSiteBridgeMethods.set_LayoutDirectionOverride(_objRef_global__Microsoft_UI_Content_IContentSiteBridge, value);
        }

        public float OverrideScale
        {
            get => global::ABI.Microsoft.UI.Content.IContentSiteBridgeMethods.get_OverrideScale(_objRef_global__Microsoft_UI_Content_IContentSiteBridge);
            set => global::ABI.Microsoft.UI.Content.IContentSiteBridgeMethods.set_OverrideScale(_objRef_global__Microsoft_UI_Content_IContentSiteBridge, value);
        }

        private bool IsOverridableInterface(Guid iid) => false;

        global::System.Runtime.InteropServices.CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(ref Guid iid, out IntPtr ppv)
        {
            ppv = IntPtr.Zero;
            if (IsOverridableInterface(iid) || global::WinRT.Interop.IID.IID_IInspectable == iid)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
            }

            if (((IWinRTObject)this).NativeObject.TryAs(iid, out ppv) >= 0)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.Handled;
            }

            return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
        }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI")]
    [global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Content.CoreWindowTopLevelWindowBridge))]
    [global::ABI.Microsoft.UI.Content.CoreWindowTopLevelWindowBridgeRcwFactory]
    [global::WinRT.ProjectedRuntimeClass(typeof(IContentNodeOwner))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.Foundation.WindowsAppSDKContract), 65543u)]
    [global::Windows.Foundation.Metadata.Experimental]
    public sealed class CoreWindowTopLevelWindowBridge : IContentNodeOwner, global::System.Runtime.InteropServices.ICustomQueryInterface, IWinRTObject, IEquatable<CoreWindowTopLevelWindowBridge>
    {
        private IntPtr ThisPtr => _inner == null ? (((IWinRTObject)this).NativeObject).ThisPtr : _inner.ThisPtr;

        private readonly IObjectReference _inner = null;



        private IObjectReference _objRef_global__Microsoft_UI_Content_IContentNodeOwner => _inner;


        public static CoreWindowTopLevelWindowBridge FromAbi(IntPtr thisPtr)
        {
            if (thisPtr == IntPtr.Zero) return null;
            return MarshalInspectable<CoreWindowTopLevelWindowBridge>.FromAbi(thisPtr);
        }

        internal CoreWindowTopLevelWindowBridge(IObjectReference objRef)
        {
            _inner = objRef.As(global::ABI.Microsoft.UI.Content.IContentNodeOwnerMethods.IID);

        }


        public static bool operator ==(CoreWindowTopLevelWindowBridge x, CoreWindowTopLevelWindowBridge y) => (x?.ThisPtr ?? IntPtr.Zero) == (y?.ThisPtr ?? IntPtr.Zero);
        public static bool operator !=(CoreWindowTopLevelWindowBridge x, CoreWindowTopLevelWindowBridge y) => !(x == y);
        public bool Equals(CoreWindowTopLevelWindowBridge other) => this == other;
        public override bool Equals(object obj) => obj is CoreWindowTopLevelWindowBridge that && this == that;
        public override int GetHashCode() => ThisPtr.GetHashCode();


        bool IWinRTObject.HasUnwrappableNativeObject => true;
        IObjectReference IWinRTObject.NativeObject => _inner;
        private volatile global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> _queryInterfaceCache;
        private global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> MakeQueryInterfaceCache()
        {
            global::System.Threading.Interlocked.CompareExchange(ref _queryInterfaceCache, new global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference>(), null); 
            return _queryInterfaceCache;
        }
        global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> IWinRTObject.QueryInterfaceCache => _queryInterfaceCache ?? MakeQueryInterfaceCache();
        private volatile global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> _additionalTypeData;
        private global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> MakeAdditionalTypeData()
        {
            global::System.Threading.Interlocked.CompareExchange(ref _additionalTypeData, new global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object>(), null); 
            return _additionalTypeData;
        }
        global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> IWinRTObject.AdditionalTypeData => _additionalTypeData ?? MakeAdditionalTypeData();

        private struct InterfaceTag<I>{};


        private bool IsOverridableInterface(Guid iid) => false;

        global::System.Runtime.InteropServices.CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(ref Guid iid, out IntPtr ppv)
        {
            ppv = IntPtr.Zero;
            if (IsOverridableInterface(iid) || global::WinRT.Interop.IID.IID_IInspectable == iid)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
            }

            if (((IWinRTObject)this).NativeObject.TryAs(iid, out ppv) >= 0)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.Handled;
            }

            return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
        }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI")]
    [global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Content.DesktopAttachedSiteBridge))]
    [global::ABI.Microsoft.UI.Content.DesktopAttachedSiteBridgeRcwFactory]
    [global::WinRT.ProjectedRuntimeClass(typeof(IDesktopAttachedSiteBridge))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.Foundation.WindowsAppSDKContract), 65543u)]
    public sealed class DesktopAttachedSiteBridge : global::System.IDisposable, global::Microsoft.UI.IClosableNotifier, IContentSiteBridge, IContentSiteInput, global::System.Runtime.InteropServices.ICustomQueryInterface, IWinRTObject, IEquatable<DesktopAttachedSiteBridge>
    {
        private IntPtr ThisPtr => _inner == null ? (((IWinRTObject)this).NativeObject).ThisPtr : _inner.ThisPtr;

        private readonly IObjectReference _inner = null;



        private IObjectReference _objRef_global__Microsoft_UI_Content_IDesktopAttachedSiteBridge => _inner;
        private volatile IObjectReference ___objRef_global__System_IDisposable;
        private IObjectReference Make___objRef_global__System_IDisposable()
        {
            global::System.Threading.Interlocked.CompareExchange(ref ___objRef_global__System_IDisposable, ((IWinRTObject)this).NativeObject.As<IUnknownVftbl>(global::ABI.System.IDisposableMethods.IID), null);
            return ___objRef_global__System_IDisposable;
        }
        private IObjectReference _objRef_global__System_IDisposable => ___objRef_global__System_IDisposable ?? Make___objRef_global__System_IDisposable();

        private volatile IObjectReference ___objRef_global__Microsoft_UI_IClosableNotifier;
        private IObjectReference Make___objRef_global__Microsoft_UI_IClosableNotifier()
        {
            global::System.Threading.Interlocked.CompareExchange(ref ___objRef_global__Microsoft_UI_IClosableNotifier, ((IWinRTObject)this).NativeObject.As<IUnknownVftbl>(global::ABI.Microsoft.UI.IClosableNotifierMethods.IID), null);
            return ___objRef_global__Microsoft_UI_IClosableNotifier;
        }
        private IObjectReference _objRef_global__Microsoft_UI_IClosableNotifier => ___objRef_global__Microsoft_UI_IClosableNotifier ?? Make___objRef_global__Microsoft_UI_IClosableNotifier();

        private volatile IObjectReference ___objRef_global__Microsoft_UI_Content_IContentSiteBridge;
        private IObjectReference Make___objRef_global__Microsoft_UI_Content_IContentSiteBridge()
        {
            global::System.Threading.Interlocked.CompareExchange(ref ___objRef_global__Microsoft_UI_Content_IContentSiteBridge, ((IWinRTObject)this).NativeObject.As<IUnknownVftbl>(global::ABI.Microsoft.UI.Content.IContentSiteBridgeMethods.IID), null);
            return ___objRef_global__Microsoft_UI_Content_IContentSiteBridge;
        }
        private IObjectReference _objRef_global__Microsoft_UI_Content_IContentSiteBridge => ___objRef_global__Microsoft_UI_Content_IContentSiteBridge ?? Make___objRef_global__Microsoft_UI_Content_IContentSiteBridge();

        private volatile IObjectReference ___objRef_global__Microsoft_UI_Content_IContentSiteInput;
        private IObjectReference Make___objRef_global__Microsoft_UI_Content_IContentSiteInput()
        {
            global::System.Threading.Interlocked.CompareExchange(ref ___objRef_global__Microsoft_UI_Content_IContentSiteInput, ((IWinRTObject)this).NativeObject.As<IUnknownVftbl>(global::ABI.Microsoft.UI.Content.IContentSiteInputMethods.IID), null);
            return ___objRef_global__Microsoft_UI_Content_IContentSiteInput;
        }
        private IObjectReference _objRef_global__Microsoft_UI_Content_IContentSiteInput => ___objRef_global__Microsoft_UI_Content_IContentSiteInput ?? Make___objRef_global__Microsoft_UI_Content_IContentSiteInput();



        public static I As<I>() => ActivationFactory.Get("Microsoft.UI.Content.DesktopAttachedSiteBridge").AsInterface<I>();

        private static volatile IObjectReference ___objRef_global__Microsoft_UI_Content_IDesktopAttachedSiteBridgeStatics;
        private static IObjectReference _objRef_global__Microsoft_UI_Content_IDesktopAttachedSiteBridgeStatics
        {
            get
            { 
                var factory = ___objRef_global__Microsoft_UI_Content_IDesktopAttachedSiteBridgeStatics;
                if (factory != null && factory.IsInCurrentContext)
                {
                    return factory;
                }
                else
                {
                    return ___objRef_global__Microsoft_UI_Content_IDesktopAttachedSiteBridgeStatics = ActivationFactory.Get("Microsoft.UI.Content.DesktopAttachedSiteBridge", global::ABI.Microsoft.UI.Content.IDesktopAttachedSiteBridgeStaticsMethods.IID);
                }
            }
        }

        public static DesktopAttachedSiteBridge CreateFromWindowId(global::Microsoft.UI.Dispatching.DispatcherQueue queue, global::Microsoft.UI.WindowId windowId) => global::ABI.Microsoft.UI.Content.IDesktopAttachedSiteBridgeStaticsMethods.CreateFromWindowId(_objRef_global__Microsoft_UI_Content_IDesktopAttachedSiteBridgeStatics, queue, windowId);

        public static DesktopAttachedSiteBridge FromAbi(IntPtr thisPtr)
        {
            if (thisPtr == IntPtr.Zero) return null;
            return MarshalInspectable<DesktopAttachedSiteBridge>.FromAbi(thisPtr);
        }

        internal DesktopAttachedSiteBridge(IObjectReference objRef)
        {
            _inner = objRef.As(global::ABI.Microsoft.UI.Content.IDesktopAttachedSiteBridgeMethods.IID);

        }


        public static bool operator ==(DesktopAttachedSiteBridge x, DesktopAttachedSiteBridge y) => (x?.ThisPtr ?? IntPtr.Zero) == (y?.ThisPtr ?? IntPtr.Zero);
        public static bool operator !=(DesktopAttachedSiteBridge x, DesktopAttachedSiteBridge y) => !(x == y);
        public bool Equals(DesktopAttachedSiteBridge other) => this == other;
        public override bool Equals(object obj) => obj is DesktopAttachedSiteBridge that && this == that;
        public override int GetHashCode() => ThisPtr.GetHashCode();


        bool IWinRTObject.HasUnwrappableNativeObject => true;
        IObjectReference IWinRTObject.NativeObject => _inner;
        private volatile global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> _queryInterfaceCache;
        private global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> MakeQueryInterfaceCache()
        {
            global::System.Threading.Interlocked.CompareExchange(ref _queryInterfaceCache, new global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference>(), null); 
            return _queryInterfaceCache;
        }
        global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> IWinRTObject.QueryInterfaceCache => _queryInterfaceCache ?? MakeQueryInterfaceCache();
        private volatile global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> _additionalTypeData;
        private global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> MakeAdditionalTypeData()
        {
            global::System.Threading.Interlocked.CompareExchange(ref _additionalTypeData, new global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object>(), null); 
            return _additionalTypeData;
        }
        global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> IWinRTObject.AdditionalTypeData => _additionalTypeData ?? MakeAdditionalTypeData();

        private struct InterfaceTag<I>{};


        public void Connect(ContentIsland content) => global::ABI.Microsoft.UI.Content.IDesktopAttachedSiteBridgeMethods.Connect(_objRef_global__Microsoft_UI_Content_IDesktopAttachedSiteBridge, content);

        public void Dispose() => global::ABI.System.IDisposableMethods.Dispose(_objRef_global__System_IDisposable);

        public event global::Microsoft.UI.ClosableNotifierHandler Closed
        {
            add => global::ABI.Microsoft.UI.IClosableNotifierMethods.Get_Closed2(_objRef_global__Microsoft_UI_IClosableNotifier, (IWinRTObject)this).Subscribe(value);
            remove => global::ABI.Microsoft.UI.IClosableNotifierMethods.Get_Closed2(_objRef_global__Microsoft_UI_IClosableNotifier, (IWinRTObject)this).Unsubscribe(value);
        }

        public event global::Microsoft.UI.ClosableNotifierHandler FrameworkClosed
        {
            add => global::ABI.Microsoft.UI.IClosableNotifierMethods.Get_FrameworkClosed2(_objRef_global__Microsoft_UI_IClosableNotifier, (IWinRTObject)this).Subscribe(value);
            remove => global::ABI.Microsoft.UI.IClosableNotifierMethods.Get_FrameworkClosed2(_objRef_global__Microsoft_UI_IClosableNotifier, (IWinRTObject)this).Unsubscribe(value);
        }

        public global::Microsoft.UI.Dispatching.DispatcherQueue DispatcherQueue => global::ABI.Microsoft.UI.Content.IContentSiteBridgeMethods.get_DispatcherQueue(_objRef_global__Microsoft_UI_Content_IContentSiteBridge);

        public bool IsClosed => global::ABI.Microsoft.UI.IClosableNotifierMethods.get_IsClosed(_objRef_global__Microsoft_UI_IClosableNotifier);

        public global::System.Nullable<ContentLayoutDirection> LayoutDirectionOverride
        {
            get => global::ABI.Microsoft.UI.Content.IContentSiteBridgeMethods.get_LayoutDirectionOverride(_objRef_global__Microsoft_UI_Content_IContentSiteBridge);
            set => global::ABI.Microsoft.UI.Content.IContentSiteBridgeMethods.set_LayoutDirectionOverride(_objRef_global__Microsoft_UI_Content_IContentSiteBridge, value);
        }

        public float OverrideScale
        {
            get => global::ABI.Microsoft.UI.Content.IContentSiteBridgeMethods.get_OverrideScale(_objRef_global__Microsoft_UI_Content_IContentSiteBridge);
            set => global::ABI.Microsoft.UI.Content.IContentSiteBridgeMethods.set_OverrideScale(_objRef_global__Microsoft_UI_Content_IContentSiteBridge, value);
        }

        public bool ProcessesKeyboardInput
        {
            get => global::ABI.Microsoft.UI.Content.IContentSiteInputMethods.get_ProcessesKeyboardInput(_objRef_global__Microsoft_UI_Content_IContentSiteInput);
            set => global::ABI.Microsoft.UI.Content.IContentSiteInputMethods.set_ProcessesKeyboardInput(_objRef_global__Microsoft_UI_Content_IContentSiteInput, value);
        }

        public bool ProcessesPointerInput
        {
            get => global::ABI.Microsoft.UI.Content.IContentSiteInputMethods.get_ProcessesPointerInput(_objRef_global__Microsoft_UI_Content_IContentSiteInput);
            set => global::ABI.Microsoft.UI.Content.IContentSiteInputMethods.set_ProcessesPointerInput(_objRef_global__Microsoft_UI_Content_IContentSiteInput, value);
        }

        public ContentSiteView SiteView => global::ABI.Microsoft.UI.Content.IDesktopAttachedSiteBridgeMethods.get_SiteView(_objRef_global__Microsoft_UI_Content_IDesktopAttachedSiteBridge);

        public global::Microsoft.UI.WindowId WindowId => global::ABI.Microsoft.UI.Content.IDesktopAttachedSiteBridgeMethods.get_WindowId(_objRef_global__Microsoft_UI_Content_IDesktopAttachedSiteBridge);

        private bool IsOverridableInterface(Guid iid) => false;

        global::System.Runtime.InteropServices.CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(ref Guid iid, out IntPtr ppv)
        {
            ppv = IntPtr.Zero;
            if (IsOverridableInterface(iid) || global::WinRT.Interop.IID.IID_IInspectable == iid)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
            }

            if (((IWinRTObject)this).NativeObject.TryAs(iid, out ppv) >= 0)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.Handled;
            }

            return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
        }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI")]
    [global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Content.DesktopChildSiteBridge))]
    [global::ABI.Microsoft.UI.Content.DesktopChildSiteBridgeRcwFactory]
    [global::WinRT.ProjectedRuntimeClass(typeof(IDesktopChildSiteBridge))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.Foundation.WindowsAppSDKContract), 65540u)]
    public sealed class DesktopChildSiteBridge : DesktopSiteBridge, IContentSiteBridgeEndpointConnectionPrivate, global::System.Runtime.InteropServices.ICustomQueryInterface, IWinRTObject, IEquatable<DesktopChildSiteBridge>
    {
        private IntPtr ThisPtr => _inner == null ? (((IWinRTObject)this).NativeObject).ThisPtr : _inner.ThisPtr;

        private readonly IObjectReference _inner = null;



        private IObjectReference _objRef_global__Microsoft_UI_Content_IDesktopChildSiteBridge => _inner;
        private volatile IObjectReference ___objRef_global__Microsoft_UI_Content_IContentSiteBridgeEndpointConnectionPrivate;
        private IObjectReference Make___objRef_global__Microsoft_UI_Content_IContentSiteBridgeEndpointConnectionPrivate()
        {
            global::System.Threading.Interlocked.CompareExchange(ref ___objRef_global__Microsoft_UI_Content_IContentSiteBridgeEndpointConnectionPrivate, ((IWinRTObject)this).NativeObject.As<IUnknownVftbl>(global::ABI.Microsoft.UI.Content.IContentSiteBridgeEndpointConnectionPrivateMethods.IID), null);
            return ___objRef_global__Microsoft_UI_Content_IContentSiteBridgeEndpointConnectionPrivate;
        }
        private IObjectReference _objRef_global__Microsoft_UI_Content_IContentSiteBridgeEndpointConnectionPrivate => ___objRef_global__Microsoft_UI_Content_IContentSiteBridgeEndpointConnectionPrivate ?? Make___objRef_global__Microsoft_UI_Content_IContentSiteBridgeEndpointConnectionPrivate();



        public static new I As<I>() => ActivationFactory.Get("Microsoft.UI.Content.DesktopChildSiteBridge").AsInterface<I>();

        private static volatile IObjectReference ___objRef_global__Microsoft_UI_Content_IDesktopChildSiteBridgeStatics;
        private static IObjectReference _objRef_global__Microsoft_UI_Content_IDesktopChildSiteBridgeStatics
        {
            get
            { 
                var factory = ___objRef_global__Microsoft_UI_Content_IDesktopChildSiteBridgeStatics;
                if (factory != null && factory.IsInCurrentContext)
                {
                    return factory;
                }
                else
                {
                    return ___objRef_global__Microsoft_UI_Content_IDesktopChildSiteBridgeStatics = ActivationFactory.Get("Microsoft.UI.Content.DesktopChildSiteBridge", global::ABI.Microsoft.UI.Content.IDesktopChildSiteBridgeStaticsMethods.IID);
                }
            }
        }

        public static DesktopChildSiteBridge Create(global::Microsoft.UI.Composition.Compositor compositor, global::Microsoft.UI.WindowId parentWindowId) => global::ABI.Microsoft.UI.Content.IDesktopChildSiteBridgeStaticsMethods.Create(_objRef_global__Microsoft_UI_Content_IDesktopChildSiteBridgeStatics, compositor, parentWindowId);

        private static volatile IObjectReference ___objRef_global__Microsoft_UI_Content_IDesktopChildSiteBridgeStatics2;
        private static IObjectReference _objRef_global__Microsoft_UI_Content_IDesktopChildSiteBridgeStatics2
        {
            get
            { 
                var factory = ___objRef_global__Microsoft_UI_Content_IDesktopChildSiteBridgeStatics2;
                if (factory != null && factory.IsInCurrentContext)
                {
                    return factory;
                }
                else
                {
                    return ___objRef_global__Microsoft_UI_Content_IDesktopChildSiteBridgeStatics2 = ActivationFactory.Get("Microsoft.UI.Content.DesktopChildSiteBridge", global::ABI.Microsoft.UI.Content.IDesktopChildSiteBridgeStatics2Methods.IID);
                }
            }
        }

        public static DesktopChildSiteBridge CreateWithDispatcherQueue(global::Microsoft.UI.Dispatching.DispatcherQueue queue, global::Microsoft.UI.WindowId parentWindowId) => global::ABI.Microsoft.UI.Content.IDesktopChildSiteBridgeStatics2Methods.CreateWithDispatcherQueue(_objRef_global__Microsoft_UI_Content_IDesktopChildSiteBridgeStatics2, queue, parentWindowId);

        public static new DesktopChildSiteBridge FromAbi(IntPtr thisPtr)
        {
            if (thisPtr == IntPtr.Zero) return null;
            return MarshalInspectable<DesktopChildSiteBridge>.FromAbi(thisPtr);
        }

        internal DesktopChildSiteBridge(IObjectReference objRef)
            : base(global::WinRT.DerivedComposed.Instance)

        {
            _inner = objRef.As(global::ABI.Microsoft.UI.Content.IDesktopChildSiteBridgeMethods.IID);

        }


        public static bool operator ==(DesktopChildSiteBridge x, DesktopChildSiteBridge y) => (x?.ThisPtr ?? IntPtr.Zero) == (y?.ThisPtr ?? IntPtr.Zero);
        public static bool operator !=(DesktopChildSiteBridge x, DesktopChildSiteBridge y) => !(x == y);
        public bool Equals(DesktopChildSiteBridge other) => this == other;
        public override bool Equals(object obj) => obj is DesktopChildSiteBridge that && this == that;
        public override int GetHashCode() => ThisPtr.GetHashCode();


        bool IWinRTObject.HasUnwrappableNativeObject => true;
        IObjectReference IWinRTObject.NativeObject => _inner;

        private struct InterfaceTag<I>{};


        public void AcceptRemoteEndpoint(string islandConnectionInfo) => global::ABI.Microsoft.UI.Content.IContentSiteBridgeEndpointConnectionPrivateMethods.AcceptRemoteEndpoint(_objRef_global__Microsoft_UI_Content_IContentSiteBridgeEndpointConnectionPrivate, islandConnectionInfo);

        public event global::Windows.Foundation.TypedEventHandler<IContentSiteBridgeEndpointConnectionPrivate, EndpointConnectionEventArgs> RemoteEndpointConnecting
        {
            add => global::ABI.Microsoft.UI.Content.IContentSiteBridgeEndpointConnectionPrivateMethods.Get_RemoteEndpointConnecting2(_objRef_global__Microsoft_UI_Content_IContentSiteBridgeEndpointConnectionPrivate, (IWinRTObject)this).Subscribe(value);
            remove => global::ABI.Microsoft.UI.Content.IContentSiteBridgeEndpointConnectionPrivateMethods.Get_RemoteEndpointConnecting2(_objRef_global__Microsoft_UI_Content_IContentSiteBridgeEndpointConnectionPrivate, (IWinRTObject)this).Unsubscribe(value);
        }

        public event global::Windows.Foundation.TypedEventHandler<IContentSiteBridgeEndpointConnectionPrivate, EndpointConnectionEventArgs> RemoteEndpointDisconnected
        {
            add => global::ABI.Microsoft.UI.Content.IContentSiteBridgeEndpointConnectionPrivateMethods.Get_RemoteEndpointDisconnected2(_objRef_global__Microsoft_UI_Content_IContentSiteBridgeEndpointConnectionPrivate, (IWinRTObject)this).Subscribe(value);
            remove => global::ABI.Microsoft.UI.Content.IContentSiteBridgeEndpointConnectionPrivateMethods.Get_RemoteEndpointDisconnected2(_objRef_global__Microsoft_UI_Content_IContentSiteBridgeEndpointConnectionPrivate, (IWinRTObject)this).Unsubscribe(value);
        }

        public event global::Windows.Foundation.TypedEventHandler<IContentSiteBridgeEndpointConnectionPrivate, EndpointRequestedStateChangedEventArgs> RemoteEndpointRequestedStateChanged
        {
            add => global::ABI.Microsoft.UI.Content.IContentSiteBridgeEndpointConnectionPrivateMethods.Get_RemoteEndpointRequestedStateChanged2(_objRef_global__Microsoft_UI_Content_IContentSiteBridgeEndpointConnectionPrivate, (IWinRTObject)this).Subscribe(value);
            remove => global::ABI.Microsoft.UI.Content.IContentSiteBridgeEndpointConnectionPrivateMethods.Get_RemoteEndpointRequestedStateChanged2(_objRef_global__Microsoft_UI_Content_IContentSiteBridgeEndpointConnectionPrivate, (IWinRTObject)this).Unsubscribe(value);
        }

        public string ConnectionInfo => global::ABI.Microsoft.UI.Content.IContentSiteBridgeEndpointConnectionPrivateMethods.get_ConnectionInfo(_objRef_global__Microsoft_UI_Content_IContentSiteBridgeEndpointConnectionPrivate);

        public bool IsRemoteEndpointConnected => global::ABI.Microsoft.UI.Content.IContentSiteBridgeEndpointConnectionPrivateMethods.get_IsRemoteEndpointConnected(_objRef_global__Microsoft_UI_Content_IContentSiteBridgeEndpointConnectionPrivate);

        public ContentSizePolicy ResizePolicy
        {
            get => global::ABI.Microsoft.UI.Content.IDesktopChildSiteBridgeMethods.get_ResizePolicy(_objRef_global__Microsoft_UI_Content_IDesktopChildSiteBridge);
            set => global::ABI.Microsoft.UI.Content.IDesktopChildSiteBridgeMethods.set_ResizePolicy(_objRef_global__Microsoft_UI_Content_IDesktopChildSiteBridge, value);
        }

        public ContentSiteView SiteView => global::ABI.Microsoft.UI.Content.IDesktopChildSiteBridgeMethods.get_SiteView(_objRef_global__Microsoft_UI_Content_IDesktopChildSiteBridge);

        protected override bool IsOverridableInterface(Guid iid) => base.IsOverridableInterface(iid);

        global::System.Runtime.InteropServices.CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(ref Guid iid, out IntPtr ppv)
        {
            ppv = IntPtr.Zero;
            if (IsOverridableInterface(iid) || global::WinRT.Interop.IID.IID_IInspectable == iid)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
            }

            if (((IWinRTObject)this).NativeObject.TryAs(iid, out ppv) >= 0)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.Handled;
            }

            return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
        }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI")]
    [global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Content.DesktopPopupSiteBridge))]
    [global::ABI.Microsoft.UI.Content.DesktopPopupSiteBridgeRcwFactory]
    [global::WinRT.ProjectedRuntimeClass(typeof(IDesktopPopupSiteBridge))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.Foundation.WindowsAppSDKContract), 65543u)]
    public sealed class DesktopPopupSiteBridge : global::System.IDisposable, global::Microsoft.UI.IClosableNotifier, IContentSiteAutomation, IContentSiteBridge, IContentSiteLink, global::System.Runtime.InteropServices.ICustomQueryInterface, IWinRTObject, IEquatable<DesktopPopupSiteBridge>
    {
        private IntPtr ThisPtr => _inner == null ? (((IWinRTObject)this).NativeObject).ThisPtr : _inner.ThisPtr;

        private readonly IObjectReference _inner = null;



        private IObjectReference _objRef_global__Microsoft_UI_Content_IDesktopPopupSiteBridge => _inner;
        private volatile IObjectReference ___objRef_global__System_IDisposable;
        private IObjectReference Make___objRef_global__System_IDisposable()
        {
            global::System.Threading.Interlocked.CompareExchange(ref ___objRef_global__System_IDisposable, ((IWinRTObject)this).NativeObject.As<IUnknownVftbl>(global::ABI.System.IDisposableMethods.IID), null);
            return ___objRef_global__System_IDisposable;
        }
        private IObjectReference _objRef_global__System_IDisposable => ___objRef_global__System_IDisposable ?? Make___objRef_global__System_IDisposable();

        private volatile IObjectReference ___objRef_global__Microsoft_UI_IClosableNotifier;
        private IObjectReference Make___objRef_global__Microsoft_UI_IClosableNotifier()
        {
            global::System.Threading.Interlocked.CompareExchange(ref ___objRef_global__Microsoft_UI_IClosableNotifier, ((IWinRTObject)this).NativeObject.As<IUnknownVftbl>(global::ABI.Microsoft.UI.IClosableNotifierMethods.IID), null);
            return ___objRef_global__Microsoft_UI_IClosableNotifier;
        }
        private IObjectReference _objRef_global__Microsoft_UI_IClosableNotifier => ___objRef_global__Microsoft_UI_IClosableNotifier ?? Make___objRef_global__Microsoft_UI_IClosableNotifier();

        private volatile IObjectReference ___objRef_global__Microsoft_UI_Content_IContentSiteAutomation;
        private IObjectReference Make___objRef_global__Microsoft_UI_Content_IContentSiteAutomation()
        {
            global::System.Threading.Interlocked.CompareExchange(ref ___objRef_global__Microsoft_UI_Content_IContentSiteAutomation, ((IWinRTObject)this).NativeObject.As<IUnknownVftbl>(global::ABI.Microsoft.UI.Content.IContentSiteAutomationMethods.IID), null);
            return ___objRef_global__Microsoft_UI_Content_IContentSiteAutomation;
        }
        private IObjectReference _objRef_global__Microsoft_UI_Content_IContentSiteAutomation => ___objRef_global__Microsoft_UI_Content_IContentSiteAutomation ?? Make___objRef_global__Microsoft_UI_Content_IContentSiteAutomation();

        private volatile IObjectReference ___objRef_global__Microsoft_UI_Content_IContentSiteBridge;
        private IObjectReference Make___objRef_global__Microsoft_UI_Content_IContentSiteBridge()
        {
            global::System.Threading.Interlocked.CompareExchange(ref ___objRef_global__Microsoft_UI_Content_IContentSiteBridge, ((IWinRTObject)this).NativeObject.As<IUnknownVftbl>(global::ABI.Microsoft.UI.Content.IContentSiteBridgeMethods.IID), null);
            return ___objRef_global__Microsoft_UI_Content_IContentSiteBridge;
        }
        private IObjectReference _objRef_global__Microsoft_UI_Content_IContentSiteBridge => ___objRef_global__Microsoft_UI_Content_IContentSiteBridge ?? Make___objRef_global__Microsoft_UI_Content_IContentSiteBridge();

        private volatile IObjectReference ___objRef_global__Microsoft_UI_Content_IContentSiteLink;
        private IObjectReference Make___objRef_global__Microsoft_UI_Content_IContentSiteLink()
        {
            global::System.Threading.Interlocked.CompareExchange(ref ___objRef_global__Microsoft_UI_Content_IContentSiteLink, ((IWinRTObject)this).NativeObject.As<IUnknownVftbl>(global::ABI.Microsoft.UI.Content.IContentSiteLinkMethods.IID), null);
            return ___objRef_global__Microsoft_UI_Content_IContentSiteLink;
        }
        private IObjectReference _objRef_global__Microsoft_UI_Content_IContentSiteLink => ___objRef_global__Microsoft_UI_Content_IContentSiteLink ?? Make___objRef_global__Microsoft_UI_Content_IContentSiteLink();



        public static I As<I>() => ActivationFactory.Get("Microsoft.UI.Content.DesktopPopupSiteBridge").AsInterface<I>();

        private static volatile IObjectReference ___objRef_global__Microsoft_UI_Content_IDesktopPopupSiteBridgeStatics;
        private static IObjectReference _objRef_global__Microsoft_UI_Content_IDesktopPopupSiteBridgeStatics
        {
            get
            { 
                var factory = ___objRef_global__Microsoft_UI_Content_IDesktopPopupSiteBridgeStatics;
                if (factory != null && factory.IsInCurrentContext)
                {
                    return factory;
                }
                else
                {
                    return ___objRef_global__Microsoft_UI_Content_IDesktopPopupSiteBridgeStatics = ActivationFactory.Get("Microsoft.UI.Content.DesktopPopupSiteBridge", global::ABI.Microsoft.UI.Content.IDesktopPopupSiteBridgeStaticsMethods.IID);
                }
            }
        }

        public static DesktopPopupSiteBridge Create(ContentIsland parent) => global::ABI.Microsoft.UI.Content.IDesktopPopupSiteBridgeStaticsMethods.Create(_objRef_global__Microsoft_UI_Content_IDesktopPopupSiteBridgeStatics, parent);

        public static DesktopPopupSiteBridge FromAbi(IntPtr thisPtr)
        {
            if (thisPtr == IntPtr.Zero) return null;
            return MarshalInspectable<DesktopPopupSiteBridge>.FromAbi(thisPtr);
        }

        internal DesktopPopupSiteBridge(IObjectReference objRef)
        {
            _inner = objRef.As(global::ABI.Microsoft.UI.Content.IDesktopPopupSiteBridgeMethods.IID);

        }


        public static bool operator ==(DesktopPopupSiteBridge x, DesktopPopupSiteBridge y) => (x?.ThisPtr ?? IntPtr.Zero) == (y?.ThisPtr ?? IntPtr.Zero);
        public static bool operator !=(DesktopPopupSiteBridge x, DesktopPopupSiteBridge y) => !(x == y);
        public bool Equals(DesktopPopupSiteBridge other) => this == other;
        public override bool Equals(object obj) => obj is DesktopPopupSiteBridge that && this == that;
        public override int GetHashCode() => ThisPtr.GetHashCode();


        bool IWinRTObject.HasUnwrappableNativeObject => true;
        IObjectReference IWinRTObject.NativeObject => _inner;
        private volatile global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> _queryInterfaceCache;
        private global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> MakeQueryInterfaceCache()
        {
            global::System.Threading.Interlocked.CompareExchange(ref _queryInterfaceCache, new global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference>(), null); 
            return _queryInterfaceCache;
        }
        global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> IWinRTObject.QueryInterfaceCache => _queryInterfaceCache ?? MakeQueryInterfaceCache();
        private volatile global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> _additionalTypeData;
        private global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> MakeAdditionalTypeData()
        {
            global::System.Threading.Interlocked.CompareExchange(ref _additionalTypeData, new global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object>(), null); 
            return _additionalTypeData;
        }
        global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> IWinRTObject.AdditionalTypeData => _additionalTypeData ?? MakeAdditionalTypeData();

        private struct InterfaceTag<I>{};


        public void Connect(ContentIsland content) => global::ABI.Microsoft.UI.Content.IDesktopPopupSiteBridgeMethods.Connect(_objRef_global__Microsoft_UI_Content_IDesktopPopupSiteBridge, content);

        public void Disable() => global::ABI.Microsoft.UI.Content.IDesktopPopupSiteBridgeMethods.Disable(_objRef_global__Microsoft_UI_Content_IDesktopPopupSiteBridge);

        public void Enable() => global::ABI.Microsoft.UI.Content.IDesktopPopupSiteBridgeMethods.Enable(_objRef_global__Microsoft_UI_Content_IDesktopPopupSiteBridge);

        public void Hide() => global::ABI.Microsoft.UI.Content.IDesktopPopupSiteBridgeMethods.Hide(_objRef_global__Microsoft_UI_Content_IDesktopPopupSiteBridge);

        public void MoveAndResize(global::Windows.Graphics.RectInt32 rect) => global::ABI.Microsoft.UI.Content.IDesktopPopupSiteBridgeMethods.MoveAndResize(_objRef_global__Microsoft_UI_Content_IDesktopPopupSiteBridge, rect);

        public void MoveInZOrderAtBottom() => global::ABI.Microsoft.UI.Content.IDesktopPopupSiteBridgeMethods.MoveInZOrderAtBottom(_objRef_global__Microsoft_UI_Content_IDesktopPopupSiteBridge);

        public void MoveInZOrderAtTop() => global::ABI.Microsoft.UI.Content.IDesktopPopupSiteBridgeMethods.MoveInZOrderAtTop(_objRef_global__Microsoft_UI_Content_IDesktopPopupSiteBridge);

        public void MoveInZOrderBelow(global::Microsoft.UI.WindowId windowId) => global::ABI.Microsoft.UI.Content.IDesktopPopupSiteBridgeMethods.MoveInZOrderBelow(_objRef_global__Microsoft_UI_Content_IDesktopPopupSiteBridge, windowId);

        public void Show() => global::ABI.Microsoft.UI.Content.IDesktopPopupSiteBridgeMethods.Show(_objRef_global__Microsoft_UI_Content_IDesktopPopupSiteBridge);

        public void Dispose() => global::ABI.System.IDisposableMethods.Dispose(_objRef_global__System_IDisposable);

        public event global::Microsoft.UI.ClosableNotifierHandler Closed
        {
            add => global::ABI.Microsoft.UI.IClosableNotifierMethods.Get_Closed2(_objRef_global__Microsoft_UI_IClosableNotifier, (IWinRTObject)this).Subscribe(value);
            remove => global::ABI.Microsoft.UI.IClosableNotifierMethods.Get_Closed2(_objRef_global__Microsoft_UI_IClosableNotifier, (IWinRTObject)this).Unsubscribe(value);
        }

        public event global::Microsoft.UI.ClosableNotifierHandler FrameworkClosed
        {
            add => global::ABI.Microsoft.UI.IClosableNotifierMethods.Get_FrameworkClosed2(_objRef_global__Microsoft_UI_IClosableNotifier, (IWinRTObject)this).Subscribe(value);
            remove => global::ABI.Microsoft.UI.IClosableNotifierMethods.Get_FrameworkClosed2(_objRef_global__Microsoft_UI_IClosableNotifier, (IWinRTObject)this).Unsubscribe(value);
        }

        public event global::Windows.Foundation.TypedEventHandler<IContentSiteAutomation, ContentSiteAutomationProviderRequestedEventArgs> FragmentRootAutomationProviderRequested
        {
            add => global::ABI.Microsoft.UI.Content.IContentSiteAutomationMethods.Get_FragmentRootAutomationProviderRequested2(_objRef_global__Microsoft_UI_Content_IContentSiteAutomation, (IWinRTObject)this).Subscribe(value);
            remove => global::ABI.Microsoft.UI.Content.IContentSiteAutomationMethods.Get_FragmentRootAutomationProviderRequested2(_objRef_global__Microsoft_UI_Content_IContentSiteAutomation, (IWinRTObject)this).Unsubscribe(value);
        }

        public event global::Windows.Foundation.TypedEventHandler<IContentSiteAutomation, ContentSiteAutomationProviderRequestedEventArgs> NextSiblingAutomationProviderRequested
        {
            add => global::ABI.Microsoft.UI.Content.IContentSiteAutomationMethods.Get_NextSiblingAutomationProviderRequested2(_objRef_global__Microsoft_UI_Content_IContentSiteAutomation, (IWinRTObject)this).Subscribe(value);
            remove => global::ABI.Microsoft.UI.Content.IContentSiteAutomationMethods.Get_NextSiblingAutomationProviderRequested2(_objRef_global__Microsoft_UI_Content_IContentSiteAutomation, (IWinRTObject)this).Unsubscribe(value);
        }

        public event global::Windows.Foundation.TypedEventHandler<IContentSiteAutomation, ContentSiteAutomationProviderRequestedEventArgs> ParentAutomationProviderRequested
        {
            add => global::ABI.Microsoft.UI.Content.IContentSiteAutomationMethods.Get_ParentAutomationProviderRequested2(_objRef_global__Microsoft_UI_Content_IContentSiteAutomation, (IWinRTObject)this).Subscribe(value);
            remove => global::ABI.Microsoft.UI.Content.IContentSiteAutomationMethods.Get_ParentAutomationProviderRequested2(_objRef_global__Microsoft_UI_Content_IContentSiteAutomation, (IWinRTObject)this).Unsubscribe(value);
        }

        public event global::Windows.Foundation.TypedEventHandler<IContentSiteAutomation, ContentSiteAutomationProviderRequestedEventArgs> PreviousSiblingAutomationProviderRequested
        {
            add => global::ABI.Microsoft.UI.Content.IContentSiteAutomationMethods.Get_PreviousSiblingAutomationProviderRequested2(_objRef_global__Microsoft_UI_Content_IContentSiteAutomation, (IWinRTObject)this).Subscribe(value);
            remove => global::ABI.Microsoft.UI.Content.IContentSiteAutomationMethods.Get_PreviousSiblingAutomationProviderRequested2(_objRef_global__Microsoft_UI_Content_IContentSiteAutomation, (IWinRTObject)this).Unsubscribe(value);
        }

        public ContentAutomationOptions AutomationOption
        {
            get => global::ABI.Microsoft.UI.Content.IContentSiteAutomationMethods.get_AutomationOption(_objRef_global__Microsoft_UI_Content_IContentSiteAutomation);
            set => global::ABI.Microsoft.UI.Content.IContentSiteAutomationMethods.set_AutomationOption(_objRef_global__Microsoft_UI_Content_IContentSiteAutomation, value);
        }

        public object AutomationProvider => global::ABI.Microsoft.UI.Content.IContentSiteAutomationMethods.get_AutomationProvider(_objRef_global__Microsoft_UI_Content_IContentSiteAutomation);

        public global::Microsoft.UI.Dispatching.DispatcherQueue DispatcherQueue => global::ABI.Microsoft.UI.Content.IContentSiteBridgeMethods.get_DispatcherQueue(_objRef_global__Microsoft_UI_Content_IContentSiteBridge);

        public bool IsClosed => global::ABI.Microsoft.UI.IClosableNotifierMethods.get_IsClosed(_objRef_global__Microsoft_UI_IClosableNotifier);

        public bool IsEnabled => global::ABI.Microsoft.UI.Content.IDesktopPopupSiteBridgeMethods.get_IsEnabled(_objRef_global__Microsoft_UI_Content_IDesktopPopupSiteBridge);

        public bool IsVisible => global::ABI.Microsoft.UI.Content.IDesktopPopupSiteBridgeMethods.get_IsVisible(_objRef_global__Microsoft_UI_Content_IDesktopPopupSiteBridge);

        public global::System.Nullable<ContentLayoutDirection> LayoutDirectionOverride
        {
            get => global::ABI.Microsoft.UI.Content.IContentSiteBridgeMethods.get_LayoutDirectionOverride(_objRef_global__Microsoft_UI_Content_IContentSiteBridge);
            set => global::ABI.Microsoft.UI.Content.IContentSiteBridgeMethods.set_LayoutDirectionOverride(_objRef_global__Microsoft_UI_Content_IContentSiteBridge, value);
        }

        public float OverrideScale
        {
            get => global::ABI.Microsoft.UI.Content.IContentSiteBridgeMethods.get_OverrideScale(_objRef_global__Microsoft_UI_Content_IContentSiteBridge);
            set => global::ABI.Microsoft.UI.Content.IContentSiteBridgeMethods.set_OverrideScale(_objRef_global__Microsoft_UI_Content_IContentSiteBridge, value);
        }

        public ContentIsland Parent => global::ABI.Microsoft.UI.Content.IContentSiteLinkMethods.get_Parent(_objRef_global__Microsoft_UI_Content_IContentSiteLink);

        public ContentSiteView SiteView => global::ABI.Microsoft.UI.Content.IDesktopPopupSiteBridgeMethods.get_SiteView(_objRef_global__Microsoft_UI_Content_IDesktopPopupSiteBridge);

        public global::Microsoft.UI.WindowId WindowId => global::ABI.Microsoft.UI.Content.IDesktopPopupSiteBridgeMethods.get_WindowId(_objRef_global__Microsoft_UI_Content_IDesktopPopupSiteBridge);

        private bool IsOverridableInterface(Guid iid) => false;

        global::System.Runtime.InteropServices.CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(ref Guid iid, out IntPtr ppv)
        {
            ppv = IntPtr.Zero;
            if (IsOverridableInterface(iid) || global::WinRT.Interop.IID.IID_IInspectable == iid)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
            }

            if (((IWinRTObject)this).NativeObject.TryAs(iid, out ppv) >= 0)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.Handled;
            }

            return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
        }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI")]
    [global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Content.DesktopSiteBridge))]
    [global::ABI.Microsoft.UI.Content.DesktopSiteBridgeRcwFactory]
    [global::WinRT.ProjectedRuntimeClass(typeof(IDesktopSiteBridge))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.Foundation.WindowsAppSDKContract), 65540u)]
    public class DesktopSiteBridge : global::Microsoft.UI.IClosableNotifier, IContentSiteBridge, global::System.IDisposable, global::System.Runtime.InteropServices.ICustomQueryInterface, IWinRTObject, IEquatable<DesktopSiteBridge>
    {
        private IntPtr ThisPtr => _inner == null ? (((IWinRTObject)this).NativeObject).ThisPtr : _inner.ThisPtr;

        private readonly IObjectReference _inner = null;




        private volatile IObjectReference ___objRef_global__Microsoft_UI_Content_IDesktopSiteBridge;
        private IObjectReference Make___objRef_global__Microsoft_UI_Content_IDesktopSiteBridge()
        {
            global::System.Threading.Interlocked.CompareExchange(ref ___objRef_global__Microsoft_UI_Content_IDesktopSiteBridge, ((IWinRTObject)this).NativeObject.As<IUnknownVftbl>(global::ABI.Microsoft.UI.Content.IDesktopSiteBridgeMethods.IID), null);
            return ___objRef_global__Microsoft_UI_Content_IDesktopSiteBridge;
        }
        private IObjectReference _objRef_global__Microsoft_UI_Content_IDesktopSiteBridge => ___objRef_global__Microsoft_UI_Content_IDesktopSiteBridge ?? Make___objRef_global__Microsoft_UI_Content_IDesktopSiteBridge();

        private volatile IObjectReference ___objRef_global__Microsoft_UI_Content_IDesktopSiteBridge2;
        private IObjectReference Make___objRef_global__Microsoft_UI_Content_IDesktopSiteBridge2()
        {
            global::System.Threading.Interlocked.CompareExchange(ref ___objRef_global__Microsoft_UI_Content_IDesktopSiteBridge2, ((IWinRTObject)this).NativeObject.As<IUnknownVftbl>(global::ABI.Microsoft.UI.Content.IDesktopSiteBridge2Methods.IID), null);
            return ___objRef_global__Microsoft_UI_Content_IDesktopSiteBridge2;
        }
        private IObjectReference _objRef_global__Microsoft_UI_Content_IDesktopSiteBridge2 => ___objRef_global__Microsoft_UI_Content_IDesktopSiteBridge2 ?? Make___objRef_global__Microsoft_UI_Content_IDesktopSiteBridge2();

        private volatile IObjectReference ___objRef_global__Microsoft_UI_IClosableNotifier;
        private IObjectReference Make___objRef_global__Microsoft_UI_IClosableNotifier()
        {
            global::System.Threading.Interlocked.CompareExchange(ref ___objRef_global__Microsoft_UI_IClosableNotifier, ((IWinRTObject)this).NativeObject.As<IUnknownVftbl>(global::ABI.Microsoft.UI.IClosableNotifierMethods.IID), null);
            return ___objRef_global__Microsoft_UI_IClosableNotifier;
        }
        private IObjectReference _objRef_global__Microsoft_UI_IClosableNotifier => ___objRef_global__Microsoft_UI_IClosableNotifier ?? Make___objRef_global__Microsoft_UI_IClosableNotifier();

        private volatile IObjectReference ___objRef_global__Microsoft_UI_Content_IContentSiteBridge;
        private IObjectReference Make___objRef_global__Microsoft_UI_Content_IContentSiteBridge()
        {
            global::System.Threading.Interlocked.CompareExchange(ref ___objRef_global__Microsoft_UI_Content_IContentSiteBridge, ((IWinRTObject)this).NativeObject.As<IUnknownVftbl>(global::ABI.Microsoft.UI.Content.IContentSiteBridgeMethods.IID), null);
            return ___objRef_global__Microsoft_UI_Content_IContentSiteBridge;
        }
        private IObjectReference _objRef_global__Microsoft_UI_Content_IContentSiteBridge => ___objRef_global__Microsoft_UI_Content_IContentSiteBridge ?? Make___objRef_global__Microsoft_UI_Content_IContentSiteBridge();

        private volatile IObjectReference ___objRef_global__System_IDisposable;
        private IObjectReference Make___objRef_global__System_IDisposable()
        {
            global::System.Threading.Interlocked.CompareExchange(ref ___objRef_global__System_IDisposable, ((IWinRTObject)this).NativeObject.As<IUnknownVftbl>(global::ABI.System.IDisposableMethods.IID), null);
            return ___objRef_global__System_IDisposable;
        }
        private IObjectReference _objRef_global__System_IDisposable => ___objRef_global__System_IDisposable ?? Make___objRef_global__System_IDisposable();



        private static class _IDesktopSiteBridgeFactoryMethods
        {}

        private static volatile IObjectReference ___objRef_global__Microsoft_UI_Content_IDesktopSiteBridgeFactory;
        private static IObjectReference _objRef_global__Microsoft_UI_Content_IDesktopSiteBridgeFactory
        {
            get
            { 
                var factory = ___objRef_global__Microsoft_UI_Content_IDesktopSiteBridgeFactory;
                if (factory != null && factory.IsInCurrentContext)
                {
                    return factory;
                }
                else
                {
                    return ___objRef_global__Microsoft_UI_Content_IDesktopSiteBridgeFactory = ActivationFactory.Get("Microsoft.UI.Content.DesktopSiteBridge", global::ABI.Microsoft.UI.Content.IDesktopSiteBridgeFactoryMethods.IID);
                }
            }
        }

        public static I As<I>() => ActivationFactory.Get("Microsoft.UI.Content.DesktopSiteBridge").AsInterface<I>();

        private static volatile IObjectReference ___objRef_global__Microsoft_UI_Content_IDesktopSiteBridgeStatics;
        private static IObjectReference _objRef_global__Microsoft_UI_Content_IDesktopSiteBridgeStatics
        {
            get
            { 
                var factory = ___objRef_global__Microsoft_UI_Content_IDesktopSiteBridgeStatics;
                if (factory != null && factory.IsInCurrentContext)
                {
                    return factory;
                }
                else
                {
                    return ___objRef_global__Microsoft_UI_Content_IDesktopSiteBridgeStatics = ActivationFactory.Get("Microsoft.UI.Content.DesktopSiteBridge", global::ABI.Microsoft.UI.Content.IDesktopSiteBridgeStaticsMethods.IID);
                }
            }
        }

        public static bool IsSupported() => global::ABI.Microsoft.UI.Content.IDesktopSiteBridgeStaticsMethods.IsSupported(_objRef_global__Microsoft_UI_Content_IDesktopSiteBridgeStatics);

        public static DesktopSiteBridge FromAbi(IntPtr thisPtr)
        {
            if (thisPtr == IntPtr.Zero) return null;
            return MarshalInspectable<DesktopSiteBridge>.FromAbi(thisPtr);
        }

        protected internal DesktopSiteBridge(IObjectReference objRef)
        {
            _inner = objRef.As(global::ABI.Microsoft.UI.Content.IDesktopSiteBridgeMethods.IID);

        }


        public static bool operator ==(DesktopSiteBridge x, DesktopSiteBridge y) => (x?.ThisPtr ?? IntPtr.Zero) == (y?.ThisPtr ?? IntPtr.Zero);
        public static bool operator !=(DesktopSiteBridge x, DesktopSiteBridge y) => !(x == y);
        public bool Equals(DesktopSiteBridge other) => this == other;
        public override bool Equals(object obj) => obj is DesktopSiteBridge that && this == that;
        public override int GetHashCode() => ThisPtr.GetHashCode();


        protected DesktopSiteBridge(global::WinRT.DerivedComposed _)
        {

        }
        bool IWinRTObject.HasUnwrappableNativeObject => this.GetType() == typeof(DesktopSiteBridge);
        IObjectReference IWinRTObject.NativeObject => _inner;
        private volatile global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> _queryInterfaceCache;
        private global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> MakeQueryInterfaceCache()
        {
            global::System.Threading.Interlocked.CompareExchange(ref _queryInterfaceCache, new global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference>(), null); 
            return _queryInterfaceCache;
        }
        global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> IWinRTObject.QueryInterfaceCache => _queryInterfaceCache ?? MakeQueryInterfaceCache();
        private volatile global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> _additionalTypeData;
        private global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> MakeAdditionalTypeData()
        {
            global::System.Threading.Interlocked.CompareExchange(ref _additionalTypeData, new global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object>(), null); 
            return _additionalTypeData;
        }
        global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> IWinRTObject.AdditionalTypeData => _additionalTypeData ?? MakeAdditionalTypeData();

        private struct InterfaceTag<I>{};


        public void Connect(ContentIsland content) => global::ABI.Microsoft.UI.Content.IDesktopSiteBridgeMethods.Connect(_objRef_global__Microsoft_UI_Content_IDesktopSiteBridge, content);

        public void Disable() => global::ABI.Microsoft.UI.Content.IDesktopSiteBridgeMethods.Disable(_objRef_global__Microsoft_UI_Content_IDesktopSiteBridge);

        public void Enable() => global::ABI.Microsoft.UI.Content.IDesktopSiteBridgeMethods.Enable(_objRef_global__Microsoft_UI_Content_IDesktopSiteBridge);

        public void Hide() => global::ABI.Microsoft.UI.Content.IDesktopSiteBridgeMethods.Hide(_objRef_global__Microsoft_UI_Content_IDesktopSiteBridge);

        public void MoveAndResize(global::Windows.Graphics.RectInt32 rect) => global::ABI.Microsoft.UI.Content.IDesktopSiteBridgeMethods.MoveAndResize(_objRef_global__Microsoft_UI_Content_IDesktopSiteBridge, rect);

        public void MoveInZOrderAtBottom() => global::ABI.Microsoft.UI.Content.IDesktopSiteBridgeMethods.MoveInZOrderAtBottom(_objRef_global__Microsoft_UI_Content_IDesktopSiteBridge);

        public void MoveInZOrderAtTop() => global::ABI.Microsoft.UI.Content.IDesktopSiteBridgeMethods.MoveInZOrderAtTop(_objRef_global__Microsoft_UI_Content_IDesktopSiteBridge);

        public void MoveInZOrderBelow(global::Microsoft.UI.WindowId windowId) => global::ABI.Microsoft.UI.Content.IDesktopSiteBridgeMethods.MoveInZOrderBelow(_objRef_global__Microsoft_UI_Content_IDesktopSiteBridge, windowId);

        public void Show() => global::ABI.Microsoft.UI.Content.IDesktopSiteBridgeMethods.Show(_objRef_global__Microsoft_UI_Content_IDesktopSiteBridge);

        public PopupWindowSiteBridge TryCreatePopupSiteBridge() => global::ABI.Microsoft.UI.Content.IDesktopSiteBridge2Methods.TryCreatePopupSiteBridge(_objRef_global__Microsoft_UI_Content_IDesktopSiteBridge2);

        public event global::Microsoft.UI.ClosableNotifierHandler Closed
        {
            add => global::ABI.Microsoft.UI.IClosableNotifierMethods.Get_Closed2(_objRef_global__Microsoft_UI_IClosableNotifier, (IWinRTObject)this).Subscribe(value);
            remove => global::ABI.Microsoft.UI.IClosableNotifierMethods.Get_Closed2(_objRef_global__Microsoft_UI_IClosableNotifier, (IWinRTObject)this).Unsubscribe(value);
        }

        public event global::Microsoft.UI.ClosableNotifierHandler FrameworkClosed
        {
            add => global::ABI.Microsoft.UI.IClosableNotifierMethods.Get_FrameworkClosed2(_objRef_global__Microsoft_UI_IClosableNotifier, (IWinRTObject)this).Subscribe(value);
            remove => global::ABI.Microsoft.UI.IClosableNotifierMethods.Get_FrameworkClosed2(_objRef_global__Microsoft_UI_IClosableNotifier, (IWinRTObject)this).Unsubscribe(value);
        }

        public void Dispose() => global::ABI.System.IDisposableMethods.Dispose(_objRef_global__System_IDisposable);

        public global::Microsoft.UI.Dispatching.DispatcherQueue DispatcherQueue => global::ABI.Microsoft.UI.Content.IContentSiteBridgeMethods.get_DispatcherQueue(_objRef_global__Microsoft_UI_Content_IContentSiteBridge);

        public bool IsClosed => global::ABI.Microsoft.UI.IClosableNotifierMethods.get_IsClosed(_objRef_global__Microsoft_UI_IClosableNotifier);

        public bool IsEnabled => global::ABI.Microsoft.UI.Content.IDesktopSiteBridgeMethods.get_IsEnabled(_objRef_global__Microsoft_UI_Content_IDesktopSiteBridge);

        public bool IsVisible => global::ABI.Microsoft.UI.Content.IDesktopSiteBridgeMethods.get_IsVisible(_objRef_global__Microsoft_UI_Content_IDesktopSiteBridge);

        public global::System.Nullable<ContentLayoutDirection> LayoutDirectionOverride
        {
            get => global::ABI.Microsoft.UI.Content.IContentSiteBridgeMethods.get_LayoutDirectionOverride(_objRef_global__Microsoft_UI_Content_IContentSiteBridge);
            set => global::ABI.Microsoft.UI.Content.IContentSiteBridgeMethods.set_LayoutDirectionOverride(_objRef_global__Microsoft_UI_Content_IContentSiteBridge, value);
        }

        public float OverrideScale
        {
            get => global::ABI.Microsoft.UI.Content.IContentSiteBridgeMethods.get_OverrideScale(_objRef_global__Microsoft_UI_Content_IContentSiteBridge);
            set => global::ABI.Microsoft.UI.Content.IContentSiteBridgeMethods.set_OverrideScale(_objRef_global__Microsoft_UI_Content_IContentSiteBridge, value);
        }

        public global::Microsoft.UI.WindowId WindowId => global::ABI.Microsoft.UI.Content.IDesktopSiteBridgeMethods.get_WindowId(_objRef_global__Microsoft_UI_Content_IDesktopSiteBridge);

        protected virtual bool IsOverridableInterface(Guid iid) => false;

        global::System.Runtime.InteropServices.CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(ref Guid iid, out IntPtr ppv)
        {
            ppv = IntPtr.Zero;
            if (IsOverridableInterface(iid) || global::WinRT.Interop.IID.IID_IInspectable == iid)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
            }

            if (((IWinRTObject)this).NativeObject.TryAs(iid, out ppv) >= 0)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.Handled;
            }

            return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
        }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI")]
    [global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Content.EndpointConnectionEventArgs))]
    [global::ABI.Microsoft.UI.Content.EndpointConnectionEventArgsRcwFactory]
    [global::WinRT.ProjectedRuntimeClass(typeof(IEndpointConnectionEventArgs))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.Foundation.WindowsAppSDKContract), 65543u)]
    [global::Windows.Foundation.Metadata.Experimental]
    public sealed class EndpointConnectionEventArgs : global::System.Runtime.InteropServices.ICustomQueryInterface, IWinRTObject, IEquatable<EndpointConnectionEventArgs>
    {
        private IntPtr ThisPtr => _inner == null ? (((IWinRTObject)this).NativeObject).ThisPtr : _inner.ThisPtr;

        private readonly IObjectReference _inner = null;



        private IObjectReference _objRef_global__Microsoft_UI_Content_IEndpointConnectionEventArgs => _inner;


        public static EndpointConnectionEventArgs FromAbi(IntPtr thisPtr)
        {
            if (thisPtr == IntPtr.Zero) return null;
            return MarshalInspectable<EndpointConnectionEventArgs>.FromAbi(thisPtr);
        }

        internal EndpointConnectionEventArgs(IObjectReference objRef)
        {
            _inner = objRef.As(global::ABI.Microsoft.UI.Content.IEndpointConnectionEventArgsMethods.IID);

        }


        public static bool operator ==(EndpointConnectionEventArgs x, EndpointConnectionEventArgs y) => (x?.ThisPtr ?? IntPtr.Zero) == (y?.ThisPtr ?? IntPtr.Zero);
        public static bool operator !=(EndpointConnectionEventArgs x, EndpointConnectionEventArgs y) => !(x == y);
        public bool Equals(EndpointConnectionEventArgs other) => this == other;
        public override bool Equals(object obj) => obj is EndpointConnectionEventArgs that && this == that;
        public override int GetHashCode() => ThisPtr.GetHashCode();


        bool IWinRTObject.HasUnwrappableNativeObject => true;
        IObjectReference IWinRTObject.NativeObject => _inner;
        private volatile global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> _queryInterfaceCache;
        private global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> MakeQueryInterfaceCache()
        {
            global::System.Threading.Interlocked.CompareExchange(ref _queryInterfaceCache, new global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference>(), null); 
            return _queryInterfaceCache;
        }
        global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> IWinRTObject.QueryInterfaceCache => _queryInterfaceCache ?? MakeQueryInterfaceCache();
        private volatile global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> _additionalTypeData;
        private global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> MakeAdditionalTypeData()
        {
            global::System.Threading.Interlocked.CompareExchange(ref _additionalTypeData, new global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object>(), null); 
            return _additionalTypeData;
        }
        global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> IWinRTObject.AdditionalTypeData => _additionalTypeData ?? MakeAdditionalTypeData();

        private struct InterfaceTag<I>{};


        public string ConnectionInfo => global::ABI.Microsoft.UI.Content.IEndpointConnectionEventArgsMethods.get_ConnectionInfo(_objRef_global__Microsoft_UI_Content_IEndpointConnectionEventArgs);

        private bool IsOverridableInterface(Guid iid) => false;

        global::System.Runtime.InteropServices.CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(ref Guid iid, out IntPtr ppv)
        {
            ppv = IntPtr.Zero;
            if (IsOverridableInterface(iid) || global::WinRT.Interop.IID.IID_IInspectable == iid)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
            }

            if (((IWinRTObject)this).NativeObject.TryAs(iid, out ppv) >= 0)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.Handled;
            }

            return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
        }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI")]
    [global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Content.EndpointRequestedStateChangedEventArgs))]
    [global::ABI.Microsoft.UI.Content.EndpointRequestedStateChangedEventArgsRcwFactory]
    [global::WinRT.ProjectedRuntimeClass(typeof(IEndpointRequestedStateChangedEventArgs))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.Foundation.WindowsAppSDKContract), 65543u)]
    [global::Windows.Foundation.Metadata.Experimental]
    public sealed class EndpointRequestedStateChangedEventArgs : global::System.Runtime.InteropServices.ICustomQueryInterface, IWinRTObject, IEquatable<EndpointRequestedStateChangedEventArgs>
    {
        private IntPtr ThisPtr => _inner == null ? (((IWinRTObject)this).NativeObject).ThisPtr : _inner.ThisPtr;

        private readonly IObjectReference _inner = null;



        private IObjectReference _objRef_global__Microsoft_UI_Content_IEndpointRequestedStateChangedEventArgs => _inner;


        public static EndpointRequestedStateChangedEventArgs FromAbi(IntPtr thisPtr)
        {
            if (thisPtr == IntPtr.Zero) return null;
            return MarshalInspectable<EndpointRequestedStateChangedEventArgs>.FromAbi(thisPtr);
        }

        internal EndpointRequestedStateChangedEventArgs(IObjectReference objRef)
        {
            _inner = objRef.As(global::ABI.Microsoft.UI.Content.IEndpointRequestedStateChangedEventArgsMethods.IID);

        }


        public static bool operator ==(EndpointRequestedStateChangedEventArgs x, EndpointRequestedStateChangedEventArgs y) => (x?.ThisPtr ?? IntPtr.Zero) == (y?.ThisPtr ?? IntPtr.Zero);
        public static bool operator !=(EndpointRequestedStateChangedEventArgs x, EndpointRequestedStateChangedEventArgs y) => !(x == y);
        public bool Equals(EndpointRequestedStateChangedEventArgs other) => this == other;
        public override bool Equals(object obj) => obj is EndpointRequestedStateChangedEventArgs that && this == that;
        public override int GetHashCode() => ThisPtr.GetHashCode();


        bool IWinRTObject.HasUnwrappableNativeObject => true;
        IObjectReference IWinRTObject.NativeObject => _inner;
        private volatile global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> _queryInterfaceCache;
        private global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> MakeQueryInterfaceCache()
        {
            global::System.Threading.Interlocked.CompareExchange(ref _queryInterfaceCache, new global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference>(), null); 
            return _queryInterfaceCache;
        }
        global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> IWinRTObject.QueryInterfaceCache => _queryInterfaceCache ?? MakeQueryInterfaceCache();
        private volatile global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> _additionalTypeData;
        private global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> MakeAdditionalTypeData()
        {
            global::System.Threading.Interlocked.CompareExchange(ref _additionalTypeData, new global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object>(), null); 
            return _additionalTypeData;
        }
        global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> IWinRTObject.AdditionalTypeData => _additionalTypeData ?? MakeAdditionalTypeData();

        private struct InterfaceTag<I>{};


        public bool DidRequestedSizeChange => global::ABI.Microsoft.UI.Content.IEndpointRequestedStateChangedEventArgsMethods.get_DidRequestedSizeChange(_objRef_global__Microsoft_UI_Content_IEndpointRequestedStateChangedEventArgs);

        private bool IsOverridableInterface(Guid iid) => false;

        global::System.Runtime.InteropServices.CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(ref Guid iid, out IntPtr ppv)
        {
            ppv = IntPtr.Zero;
            if (IsOverridableInterface(iid) || global::WinRT.Interop.IID.IID_IInspectable == iid)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
            }

            if (((IWinRTObject)this).NativeObject.TryAs(iid, out ppv) >= 0)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.Handled;
            }

            return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
        }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI")][Guid("B5A64814-608B-5FB7-A7CB-EB628FD588CD")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Content.IChildSiteLink))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.Foundation.WindowsAppSDKContract), 65543u)]
    internal interface IChildSiteLink
    {
        void Connect(ContentIsland content);
        global::System.Numerics.Vector2 ActualSize { get; set; }
        global::Microsoft.UI.Dispatching.DispatcherQueue DispatcherQueue { get; }
        global::System.Numerics.Matrix4x4 LocalToParentTransformMatrix { get; set; }
        ContentSiteView SiteView { get; }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI")][Guid("28EDC98A-4F94-50B1-8A87-9E7169EBF4B7")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Content.IChildSiteLinkStatics))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.Foundation.WindowsAppSDKContract), 65543u)]
    internal interface IChildSiteLinkStatics
    {
        ChildSiteLink Create(ContentIsland parent, global::Microsoft.UI.Composition.ContainerVisual placementVisual);
        ChildSiteLink CreateForSystemVisual(ContentIsland parent, global::Windows.UI.Composition.ContainerVisual placementVisual);
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI")][Guid("A17D6B39-5B52-5974-88E5-60CDE3967B5E")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Content.IContentAppWindowBridge))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.Foundation.WindowsAppSDKContract), 65543u)]
    [global::Windows.Foundation.Metadata.Experimental]
    internal interface IContentAppWindowBridge
    {
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI")][Guid("84B9CD9C-E822-5F12-B21D-31A409B804F5")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Content.IContentAppWindowBridgeStatics))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.Foundation.WindowsAppSDKContract), 65543u)]
    [global::Windows.Foundation.Metadata.Experimental]
    internal interface IContentAppWindowBridgeStatics
    {
        ContentAppWindowBridge GetForWindowId(global::Microsoft.UI.WindowId childWindowId);
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI")][Guid("10A11230-5EB4-5840-A346-570F4A49040F")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Content.IContentCoordinateConverter))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.Foundation.WindowsAppSDKContract), 65540u)]
    internal interface IContentCoordinateConverter
    {
        [global::Windows.Foundation.Metadata.DefaultOverload]
        [global::Windows.Foundation.Metadata.Overload(@"ConvertLocalToScreenWithPoint")]
        global::Windows.Graphics.PointInt32 ConvertLocalToScreen(global::Windows.Foundation.Point localPoint);
        [global::Windows.Foundation.Metadata.Overload(@"ConvertLocalToScreenWithPoints")]
        global::Windows.Graphics.PointInt32[] ConvertLocalToScreen(global::Windows.Foundation.Point[] localPoints);
        [global::Windows.Foundation.Metadata.Overload(@"ConvertLocalToScreenWithPointsAndRoundingMode")]
        global::Windows.Graphics.PointInt32[] ConvertLocalToScreen(global::Windows.Foundation.Point[] localPoints, ContentCoordinateRoundingMode roundingMode);
        [global::Windows.Foundation.Metadata.Overload(@"ConvertLocalToScreenWithRect")]
        global::Windows.Graphics.RectInt32 ConvertLocalToScreen(global::Windows.Foundation.Rect localRect);
        [global::Windows.Foundation.Metadata.DefaultOverload]
        [global::Windows.Foundation.Metadata.Overload(@"ConvertScreenToLocalWithPoint")]
        global::Windows.Foundation.Point ConvertScreenToLocal(global::Windows.Graphics.PointInt32 screenPoint);
        [global::Windows.Foundation.Metadata.Overload(@"ConvertScreenToLocalWithPoints")]
        global::Windows.Foundation.Point[] ConvertScreenToLocal(global::Windows.Graphics.PointInt32[] screenPoints);
        [global::Windows.Foundation.Metadata.Overload(@"ConvertScreenToLocalWithRect")]
        global::Windows.Foundation.Rect ConvertScreenToLocal(global::Windows.Graphics.RectInt32 screenRect);
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI")][Guid("A4B216EE-0E26-56BD-9209-A75CF9D80F27")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Content.IContentCoordinateConverterFactory))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.Foundation.WindowsAppSDKContract), 65540u)]
    internal interface IContentCoordinateConverterFactory
    {
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI")][Guid("F56374CE-B6DF-5B42-A58F-4E3BB039E3A9")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Content.IContentCoordinateConverterStatics))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.Foundation.WindowsAppSDKContract), 65540u)]
    internal interface IContentCoordinateConverterStatics
    {
        ContentCoordinateConverter CreateForWindowId(global::Microsoft.UI.WindowId windowId);
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI")][Guid("470529F5-CD93-599B-968E-F8A689BC3A07")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Content.IContentDeferral))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.Foundation.WindowsAppSDKContract), 65540u)]
    internal interface IContentDeferral
    {
        void Complete();
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI")][Guid("76478051-FC80-5EEC-A3F3-62606ABE06B7")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Content.IContentEnvironmentSettingChangedEventArgs))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.Foundation.WindowsAppSDKContract), 65540u)]
    internal interface IContentEnvironmentSettingChangedEventArgs
    {
        string SettingName { get; }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI")][Guid("8970FA4F-10BA-5F67-970B-8C72BC009B67")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Content.IContentEnvironmentStateChangedEventArgs))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.Foundation.WindowsAppSDKContract), 65540u)]
    internal interface IContentEnvironmentStateChangedEventArgs
    {
        bool DidAppWindowIdChange { get; }
        bool DidDisplayIdChange { get; }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI")][Guid("CEC0497D-76C7-544B-BF6E-816C9B16C99F")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Content.IContentEnvironmentStateChangedEventArgs2))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.Foundation.WindowsAppSDKContract), 65543u)]
    internal interface IContentEnvironmentStateChangedEventArgs2
    {
        bool DidDisplayScaleChange { get; }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI")][Guid("1054BF83-B35B-5FDE-8DD7-AC3BB3E6CE27")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Content.IContentExternalBackdropLink))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.Foundation.WindowsAppSDKContract), 65543u)]
    [global::Windows.Foundation.Metadata.Experimental]
    internal interface IContentExternalBackdropLink
    {
        global::Microsoft.UI.Dispatching.DispatcherQueue DispatcherQueue { get; }
        global::Microsoft.UI.Composition.CompositionBorderMode ExternalBackdropBorderMode { get; set; }
        global::Microsoft.UI.Composition.Visual PlacementVisual { get; }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI")][Guid("46CAC6FB-BB51-510A-958D-E0EB4160F678")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Content.IContentExternalBackdropLinkStatics))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.Foundation.WindowsAppSDKContract), 65543u)]
    [global::Windows.Foundation.Metadata.Experimental]
    internal interface IContentExternalBackdropLinkStatics
    {
        ContentExternalBackdropLink Create(global::Microsoft.UI.Composition.Compositor compositor);
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI")][Guid("3DAC8EC8-011F-5AD2-8DB7-B73C4452F755")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Content.IContentExternalOutputLink))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.Foundation.WindowsAppSDKContract), 65543u)]
    [global::Windows.Foundation.Metadata.Experimental]
    internal interface IContentExternalOutputLink
    {
        global::Windows.UI.Color BackgroundColor { get; set; }
        global::Microsoft.UI.Dispatching.DispatcherQueue DispatcherQueue { get; }
        global::Microsoft.UI.Composition.CompositionBorderMode ExternalOutputBorderMode { get; set; }
        bool IsAboveContent { get; set; }
        global::Microsoft.UI.Composition.Visual PlacementVisual { get; }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI")][Guid("B758F401-833E-587D-B0CD-A3934EBA3721")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Content.IContentExternalOutputLinkStatics))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.Foundation.WindowsAppSDKContract), 65543u)]
    [global::Windows.Foundation.Metadata.Experimental]
    internal interface IContentExternalOutputLinkStatics
    {
        ContentExternalOutputLink Create(global::Microsoft.UI.Composition.Compositor compositor);
        bool IsSupported();
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI")][Guid("5B2504BA-361C-50AA-BD6E-4122C6D93889")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Content.IContentIsland))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.Foundation.WindowsAppSDKContract), 65540u)]
    internal interface IContentIsland
    {
        object GetAutomationHostProvider();
        ContentDeferral GetStateChangeDeferral();
        void RequestSize(global::System.Numerics.Vector2 size);
        global::System.Numerics.Vector2 ActualSize { get; }
        object AppData { get; set; }
        ContentCoordinateConverter CoordinateConverter { get; }
        global::Windows.Foundation.Collections.IPropertySet CustomProperties { get; }
        global::Microsoft.UI.Dispatching.DispatcherQueue DispatcherQueue { get; }
        ContentIslandEnvironment Environment { get; }
        ulong Id { get; }
        bool IsConnected { get; }
        bool IsHitTestVisibleWhenTransparent { get; set; }
        bool IsIslandEnabled { get; set; }
        bool IsIslandVisible { get; set; }
        bool IsSiteEnabled { get; }
        bool IsSiteVisible { get; }
        ContentLayoutDirection LayoutDirection { get; }
        float RasterizationScale { get; }
        event global::Windows.Foundation.TypedEventHandler<ContentIsland, ContentIslandAutomationProviderRequestedEventArgs> AutomationProviderRequested;
        event global::Windows.Foundation.TypedEventHandler<ContentIsland, ContentIslandStateChangedEventArgs> StateChanged;
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI")][Guid("9F891825-4F83-5ADA-9EBD-9D329460AEDE")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Content.IContentIsland2))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.Foundation.WindowsAppSDKContract), 65543u)]
    internal interface IContentIsland2
    {
        global::System.Collections.Generic.IEnumerable<ChildSiteLink> Children { get; }
        global::System.Numerics.Matrix4x4 LocalToClientTransformMatrix { get; }
        global::System.Numerics.Matrix4x4 LocalToParentTransformMatrix { get; }
        global::System.Collections.Generic.IEnumerable<DesktopPopupSiteBridge> Popups { get; }
        bool ProcessesKeyboardInput { get; }
        bool ProcessesPointerInput { get; }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI")][Guid("8752C11E-1896-565A-BFB0-2B0770030E97")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Content.IContentIslandAutomation))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.Foundation.WindowsAppSDKContract), 65543u)]
    internal interface IContentIslandAutomation
    {
        ContentAutomationOptions AutomationOption { get; }
        object FragmentRootAutomationProvider { get; }
        object NextSiblingAutomationProvider { get; }
        object ParentAutomationProvider { get; }
        object PreviousSiblingAutomationProvider { get; }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI")][Guid("9FE24BED-2B9C-5137-887F-403C94841824")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Content.IContentIslandAutomationProviderRequestedEventArgs))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.Foundation.WindowsAppSDKContract), 65540u)]
    internal interface IContentIslandAutomationProviderRequestedEventArgs
    {
        object AutomationProvider { get; set; }
        bool Handled { get; set; }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI")][Guid("7C5D833B-70B8-5448-8472-9406E58E0DB4")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Content.IContentIslandEndpointConnectionPrivate))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.Foundation.WindowsAppSDKContract), 65543u)]
    [global::Windows.Foundation.Metadata.Experimental]
    public interface IContentIslandEndpointConnectionPrivate
    {
        void ConnectRemoteEndpoint(string siteConnectionInfo);
        string ConnectionInfo { get; }
        bool IsRemoteEndpointConnected { get; }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI")][Guid("C334236D-DA88-566D-811D-74AEF2EBA978")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Content.IContentIslandEnvironment))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.Foundation.WindowsAppSDKContract), 65540u)]
    internal interface IContentIslandEnvironment
    {
        global::Microsoft.UI.WindowId AppWindowId { get; }
        global::Microsoft.UI.DisplayId DisplayId { get; }
        event global::Windows.Foundation.TypedEventHandler<ContentIslandEnvironment, ContentEnvironmentSettingChangedEventArgs> SettingChanged;
        event global::Windows.Foundation.TypedEventHandler<ContentIslandEnvironment, ContentEnvironmentStateChangedEventArgs> StateChanged;
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI")][Guid("6BF81A71-C1E4-54D6-AC0D-02BCFF5297E7")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Content.IContentIslandEnvironment2))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.Foundation.WindowsAppSDKContract), 65543u)]
    internal interface IContentIslandEnvironment2
    {
        float DisplayScale { get; }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI")][Guid("5A8339BC-F7A1-5718-96CF-00FC8332AC47")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Content.IContentIslandEnvironmentExperimental))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.Foundation.WindowsAppSDKContract), 65543u)]
    [global::Windows.Foundation.Metadata.Experimental]
    internal interface IContentIslandEnvironmentExperimental
    {
        ContentDisplayOrientations CurrentOrientation { get; }
        ContentDisplayOrientations NativeOrientation { get; }
        event global::Windows.Foundation.TypedEventHandler<ContentIslandEnvironment, object> ThemeChanged;
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI")][Guid("47A782D6-B177-5C1E-BF87-90437DD809D0")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Content.IContentIslandEnvironmentFactory))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.Foundation.WindowsAppSDKContract), 65540u)]
    internal interface IContentIslandEnvironmentFactory
    {
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI")][Guid("215B5537-8085-51F8-88DB-00BA45F5BCEE")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Content.IContentIslandExperimental))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.Foundation.WindowsAppSDKContract), 65543u)]
    [global::Windows.Foundation.Metadata.Experimental]
    internal interface IContentIslandExperimental
    {
        global::Microsoft.UI.Composition.Visual Root { get; set; }
        event global::System.EventHandler<ContentIsland> Connected;
        event global::System.EventHandler<ContentIsland> Disconnected;
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI")][Guid("82383F52-E81A-5EC9-A954-BAC8A931BA7D")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Content.IContentIslandFactory))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.Foundation.WindowsAppSDKContract), 65540u)]
    internal interface IContentIslandFactory
    {
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI")][Guid("C828EEB2-0C62-5B40-9D48-77C06083C278")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Content.IContentIslandStateChangedEventArgs))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.Foundation.WindowsAppSDKContract), 65540u)]
    internal interface IContentIslandStateChangedEventArgs
    {
        bool DidActualSizeChange { get; }
        bool DidLayoutDirectionChange { get; }
        bool DidRasterizationScaleChange { get; }
        bool DidSiteEnabledChange { get; }
        bool DidSiteVisibleChange { get; }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI")][Guid("8AD25BE1-A89A-5872-896E-8298DD20EB0D")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Content.IContentIslandStateChangedEventArgs2))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.Foundation.WindowsAppSDKContract), 65543u)]
    internal interface IContentIslandStateChangedEventArgs2
    {
        bool DidLocalToClientTransformMatrixChange { get; }
        bool DidLocalToParentTransformMatrixChange { get; }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI")][Guid("7B9EB7CC-8C43-5E0A-AB23-AB48628FD223")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Content.IContentIslandStatics))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.Foundation.WindowsAppSDKContract), 65540u)]
    internal interface IContentIslandStatics
    {
        ContentIsland Create(global::Microsoft.UI.Composition.Visual Root);
        ContentIsland[] FindAllForCompositor(global::Microsoft.UI.Composition.Compositor compositor);
        ContentIsland[] FindAllForCurrentThread();
        ContentIsland GetByVisual(global::Microsoft.UI.Composition.Visual child);
        ContentIsland GetFromId(ulong id);
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI")][Guid("B2C6FA77-13C9-5064-BB1D-F878D86ACC65")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Content.IContentIslandStatics2))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.Foundation.WindowsAppSDKContract), 65543u)]
    internal interface IContentIslandStatics2
    {
        ContentIsland CreateForSystemVisual(global::Microsoft.UI.Dispatching.DispatcherQueue queue, global::Windows.UI.Composition.Visual root);
        ContentIsland[] FindAllForSystemCompositor(global::Windows.UI.Composition.Compositor compositor);
        ContentIsland GetBySystemVisual(global::Windows.UI.Composition.Visual child);
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI")][Guid("2251C304-449D-4456-B008-FE7163403D7E")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Content.IContentNodeOwner))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.Foundation.WindowsAppSDKContract), 65543u)]
    [global::Windows.Foundation.Metadata.Experimental]
    public interface IContentNodeOwner
    {
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI")][Guid("996C60C4-02B2-5EEF-93B0-DD6B1EC2FD7B")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Content.IContentSite))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.Foundation.WindowsAppSDKContract), 65540u)]
    internal interface IContentSite
    {
        ContentDeferral GetIslandStateChangeDeferral();
        global::System.Numerics.Vector2 ActualSize { get; set; }
        global::Windows.Graphics.SizeInt32 ClientSize { get; set; }
        ContentCoordinateConverter CoordinateConverter { get; }
        global::Microsoft.UI.Dispatching.DispatcherQueue DispatcherQueue { get; }
        ContentSiteEnvironment Environment { get; }
        bool IsConnected { get; }
        bool IsSiteEnabled { get; set; }
        bool IsSiteVisible { get; set; }
        ContentLayoutDirection LayoutDirection { get; set; }
        float OverrideScale { get; set; }
        float ParentScale { get; set; }
        float RasterizationScale { get; }
        global::System.Numerics.Vector2 RequestedSize { get; }
        bool ShouldApplyRasterizationScale { get; set; }
        ContentSiteView View { get; }
        event global::Windows.Foundation.TypedEventHandler<ContentSite, ContentSiteRequestedStateChangedEventArgs> RequestedStateChanged;
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI")][Guid("C3F0149E-3F8C-5961-9D04-CD6C8A7F6026")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Content.IContentSite2))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.Foundation.WindowsAppSDKContract), 65543u)]
    internal interface IContentSite2
    {
        global::System.Numerics.Matrix4x4 LocalToClientTransformMatrix { get; }
        global::System.Numerics.Matrix4x4 LocalToParentTransformMatrix { get; set; }
        bool ProcessesKeyboardInput { get; set; }
        bool ProcessesPointerInput { get; set; }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI")][Guid("DB4F4683-CD76-50D0-9AE1-044CEB3D3C7A")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Content.IContentSiteAutomation))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.Foundation.WindowsAppSDKContract), 65543u)]
    public interface IContentSiteAutomation
    {
        ContentAutomationOptions AutomationOption { get; set; }
        object AutomationProvider { get; }
        event global::Windows.Foundation.TypedEventHandler<IContentSiteAutomation, ContentSiteAutomationProviderRequestedEventArgs> FragmentRootAutomationProviderRequested;
        event global::Windows.Foundation.TypedEventHandler<IContentSiteAutomation, ContentSiteAutomationProviderRequestedEventArgs> NextSiblingAutomationProviderRequested;
        event global::Windows.Foundation.TypedEventHandler<IContentSiteAutomation, ContentSiteAutomationProviderRequestedEventArgs> ParentAutomationProviderRequested;
        event global::Windows.Foundation.TypedEventHandler<IContentSiteAutomation, ContentSiteAutomationProviderRequestedEventArgs> PreviousSiblingAutomationProviderRequested;
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI")][Guid("73A093B9-55D4-5598-B70E-6250B732F821")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Content.IContentSiteAutomationProviderRequestedEventArgs))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.Foundation.WindowsAppSDKContract), 65543u)]
    internal interface IContentSiteAutomationProviderRequestedEventArgs
    {
        object AutomationProvider { get; set; }
        bool Handled { get; set; }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI")][Guid("FAAAB99E-A42B-549C-92DF-3B6D6E1E368B")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Content.IContentSiteBridge))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.Foundation.WindowsAppSDKContract), 65540u)]
    public interface IContentSiteBridge : global::System.IDisposable
    {
        global::Microsoft.UI.Dispatching.DispatcherQueue DispatcherQueue { get; }
        global::System.Nullable<ContentLayoutDirection> LayoutDirectionOverride { get; set; }
        float OverrideScale { get; set; }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI")][Guid("84D1A059-692B-577D-A791-6AD4FAFBEB1F")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Content.IContentSiteBridgeEndpointConnectionPrivate))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.Foundation.WindowsAppSDKContract), 65543u)]
    [global::Windows.Foundation.Metadata.Experimental]
    public interface IContentSiteBridgeEndpointConnectionPrivate
    {
        void AcceptRemoteEndpoint(string islandConnectionInfo);
        string ConnectionInfo { get; }
        bool IsRemoteEndpointConnected { get; }
        event global::Windows.Foundation.TypedEventHandler<IContentSiteBridgeEndpointConnectionPrivate, EndpointConnectionEventArgs> RemoteEndpointConnecting;
        event global::Windows.Foundation.TypedEventHandler<IContentSiteBridgeEndpointConnectionPrivate, EndpointConnectionEventArgs> RemoteEndpointDisconnected;
        event global::Windows.Foundation.TypedEventHandler<IContentSiteBridgeEndpointConnectionPrivate, EndpointRequestedStateChangedEventArgs> RemoteEndpointRequestedStateChanged;
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI")][Guid("685D085D-BE53-55D1-AEC4-BA2273D5468B")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Content.IContentSiteEnvironment))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.Foundation.WindowsAppSDKContract), 65540u)]
    internal interface IContentSiteEnvironment
    {
        void NotifySettingChanged(string setting);
        global::Microsoft.UI.WindowId AppWindowId { get; set; }
        global::Microsoft.UI.DisplayId DisplayId { get; set; }
        ContentSiteEnvironmentView View { get; }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI")][Guid("381AE3CD-C780-5A69-BA6A-0EAD8560A31F")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Content.IContentSiteEnvironment2))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.Foundation.WindowsAppSDKContract), 65543u)]
    internal interface IContentSiteEnvironment2
    {
        float DisplayScale { get; set; }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI")][Guid("F8AC305F-E22C-53F6-81C8-4ECCD93295B3")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Content.IContentSiteEnvironmentExperimental))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.Foundation.WindowsAppSDKContract), 65543u)]
    [global::Windows.Foundation.Metadata.Experimental]
    internal interface IContentSiteEnvironmentExperimental
    {
        void NotifyThemeChanged();
        ContentDisplayOrientations CurrentOrientation { get; set; }
        ContentDisplayOrientations NativeOrientation { get; set; }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI")][Guid("0BEFA998-CB15-5F16-A4A5-C0ED1674E186")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Content.IContentSiteEnvironmentFactory))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.Foundation.WindowsAppSDKContract), 65540u)]
    internal interface IContentSiteEnvironmentFactory
    {
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI")][Guid("5B6FE420-0BB3-54DD-8589-786CF02E38F1")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Content.IContentSiteEnvironmentView))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.Foundation.WindowsAppSDKContract), 65540u)]
    internal interface IContentSiteEnvironmentView
    {
        global::Microsoft.UI.WindowId AppWindowId { get; }
        global::Microsoft.UI.DisplayId DisplayId { get; }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI")][Guid("0B43C89A-9196-5A64-A078-EB150ACAE527")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Content.IContentSiteEnvironmentView2))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.Foundation.WindowsAppSDKContract), 65543u)]
    internal interface IContentSiteEnvironmentView2
    {
        float DisplayScale { get; }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI")][Guid("C901EDF2-F184-5A64-8D58-8CF8EFA8B678")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Content.IContentSiteEnvironmentViewFactory))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.Foundation.WindowsAppSDKContract), 65540u)]
    internal interface IContentSiteEnvironmentViewFactory
    {
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI")][Guid("D454E98A-D4F1-5436-A0F0-5FB6C2848FAE")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Content.IContentSiteExperimental))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.Foundation.WindowsAppSDKContract), 65543u)]
    [global::Windows.Foundation.Metadata.Experimental]
    internal interface IContentSiteExperimental
    {
        void SetContentNodeParent(IContentNodeOwner value);
        bool TryGetAutomationProvider(out object provider);
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI")][Guid("72FB98D5-B28A-57F1-91FA-24C014A342C1")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Content.IContentSiteFactory))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.Foundation.WindowsAppSDKContract), 65540u)]
    internal interface IContentSiteFactory
    {
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI")][Guid("0EAD8189-10D3-550D-B747-8847BD7C9D21")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Content.IContentSiteInput))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.Foundation.WindowsAppSDKContract), 65543u)]
    public interface IContentSiteInput
    {
        bool ProcessesKeyboardInput { get; set; }
        bool ProcessesPointerInput { get; set; }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI")][Guid("D9247341-F5D0-5084-AF66-F5DF5F314FC0")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Content.IContentSiteLink))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.Foundation.WindowsAppSDKContract), 65543u)]
    public interface IContentSiteLink
    {
        ContentIsland Parent { get; }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI")][Guid("1B55FD1D-7292-562B-B4A1-D4DE7972E684")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Content.IContentSiteRequestedStateChangedEventArgs))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.Foundation.WindowsAppSDKContract), 65540u)]
    internal interface IContentSiteRequestedStateChangedEventArgs
    {
        bool DidRequestedSizeChange { get; }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI")][Guid("2D5D8DD5-358E-5B05-993B-B2666D1786B3")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Content.IContentSiteView))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.Foundation.WindowsAppSDKContract), 65540u)]
    internal interface IContentSiteView
    {
        global::System.Numerics.Vector2 ActualSize { get; }
        global::Windows.Graphics.SizeInt32 ClientSize { get; }
        ContentCoordinateConverter CoordinateConverter { get; }
        global::Microsoft.UI.Dispatching.DispatcherQueue DispatcherQueue { get; }
        ContentSiteEnvironmentView EnvironmentView { get; }
        bool IsConnected { get; }
        bool IsSiteEnabled { get; }
        bool IsSiteVisible { get; }
        ContentLayoutDirection LayoutDirection { get; }
        float OverrideScale { get; }
        float ParentScale { get; }
        float RasterizationScale { get; }
        global::System.Numerics.Vector2 RequestedSize { get; }
        bool ShouldApplyRasterizationScale { get; }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI")][Guid("628ADCE3-820F-57DE-BDC8-3720FF73014B")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Content.IContentSiteView2))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.Foundation.WindowsAppSDKContract), 65543u)]
    internal interface IContentSiteView2
    {
        global::System.Numerics.Matrix4x4 LocalToClientTransformMatrix { get; }
        global::System.Numerics.Matrix4x4 LocalToParentTransformMatrix { get; }
        bool ProcessesKeyboardInput { get; }
        bool ProcessesPointerInput { get; }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI")][Guid("F9D1D5FF-9669-5553-A875-AEE03E11EDD8")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Content.IContentSiteViewAutomation))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.Foundation.WindowsAppSDKContract), 65543u)]
    internal interface IContentSiteViewAutomation
    {
        ContentAutomationOptions AutomationOption { get; }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI")][Guid("9EFD72F0-63EF-5B6A-A50C-5685BD8100F1")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Content.IContentSiteViewFactory))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.Foundation.WindowsAppSDKContract), 65540u)]
    internal interface IContentSiteViewFactory
    {
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI")][Guid("03E1C02E-E5E3-526A-8492-939E26EE09D5")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Content.ICoreWindowSiteBridge))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.Foundation.WindowsAppSDKContract), 65543u)]
    [global::Windows.Foundation.Metadata.Experimental]
    internal interface ICoreWindowSiteBridge
    {
        void Connect(ContentIsland content);
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI")][Guid("FBC56793-11F2-5754-AD70-30E82C07FA35")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Content.ICoreWindowSiteBridgeStatics))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.Foundation.WindowsAppSDKContract), 65543u)]
    [global::Windows.Foundation.Metadata.Experimental]
    internal interface ICoreWindowSiteBridgeStatics
    {
        CoreWindowSiteBridge Create(global::Microsoft.UI.Composition.Compositor compositor, global::Windows.UI.Core.CoreWindow coreWindow);
        bool IsSupported();
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI")][Guid("C8AD3758-C8D3-5EA5-A274-CE12D9CF6845")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Content.IDesktopAttachedSiteBridge))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.Foundation.WindowsAppSDKContract), 65543u)]
    internal interface IDesktopAttachedSiteBridge
    {
        void Connect(ContentIsland content);
        ContentSiteView SiteView { get; }
        global::Microsoft.UI.WindowId WindowId { get; }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI")][Guid("41F6930F-310E-5680-812C-6DAC16DFFF44")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Content.IDesktopAttachedSiteBridgeStatics))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.Foundation.WindowsAppSDKContract), 65543u)]
    internal interface IDesktopAttachedSiteBridgeStatics
    {
        DesktopAttachedSiteBridge CreateFromWindowId(global::Microsoft.UI.Dispatching.DispatcherQueue queue, global::Microsoft.UI.WindowId windowId);
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI")][Guid("B2F2FF7B-1825-51B0-B80B-7599889C569F")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Content.IDesktopChildSiteBridge))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.Foundation.WindowsAppSDKContract), 65540u)]
    internal interface IDesktopChildSiteBridge
    {
        ContentSizePolicy ResizePolicy { get; set; }
        ContentSiteView SiteView { get; }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI")][Guid("AB6B82DE-6A47-5DE3-A860-613C8DB679AB")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Content.IDesktopChildSiteBridgeStatics))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.Foundation.WindowsAppSDKContract), 65540u)]
    internal interface IDesktopChildSiteBridgeStatics
    {
        DesktopChildSiteBridge Create(global::Microsoft.UI.Composition.Compositor compositor, global::Microsoft.UI.WindowId parentWindowId);
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI")][Guid("AAE99407-E378-5C53-9AFF-5A3B53E194A8")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Content.IDesktopChildSiteBridgeStatics2))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.Foundation.WindowsAppSDKContract), 65543u)]
    internal interface IDesktopChildSiteBridgeStatics2
    {
        DesktopChildSiteBridge CreateWithDispatcherQueue(global::Microsoft.UI.Dispatching.DispatcherQueue queue, global::Microsoft.UI.WindowId parentWindowId);
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI")][Guid("84EAAB23-F716-5AD8-AC00-3D77C01D42CC")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Content.IDesktopPopupSiteBridge))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.Foundation.WindowsAppSDKContract), 65543u)]
    internal interface IDesktopPopupSiteBridge
    {
        void Connect(ContentIsland content);
        void Disable();
        void Enable();
        void Hide();
        void MoveAndResize(global::Windows.Graphics.RectInt32 rect);
        void MoveInZOrderAtBottom();
        void MoveInZOrderAtTop();
        void MoveInZOrderBelow(global::Microsoft.UI.WindowId windowId);
        void Show();
        bool IsEnabled { get; }
        bool IsVisible { get; }
        ContentSiteView SiteView { get; }
        global::Microsoft.UI.WindowId WindowId { get; }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI")][Guid("4EA2B77B-3177-5E5B-8D0D-A76E15C6D080")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Content.IDesktopPopupSiteBridgeStatics))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.Foundation.WindowsAppSDKContract), 65543u)]
    internal interface IDesktopPopupSiteBridgeStatics
    {
        DesktopPopupSiteBridge Create(ContentIsland parent);
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI")][Guid("F0AE8750-905C-50A2-8A12-4545C6245BB4")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Content.IDesktopSiteBridge))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.Foundation.WindowsAppSDKContract), 65540u)]
    internal interface IDesktopSiteBridge
    {
        void Connect(ContentIsland content);
        void Disable();
        void Enable();
        void Hide();
        void MoveAndResize(global::Windows.Graphics.RectInt32 rect);
        void MoveInZOrderAtBottom();
        void MoveInZOrderAtTop();
        void MoveInZOrderBelow(global::Microsoft.UI.WindowId windowId);
        void Show();
        bool IsEnabled { get; }
        bool IsVisible { get; }
        global::Microsoft.UI.WindowId WindowId { get; }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI")][Guid("1190C041-82FB-5F3B-9111-CA8F19A72B75")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Content.IDesktopSiteBridge2))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.Foundation.WindowsAppSDKContract), 65543u)]
    [global::Windows.Foundation.Metadata.Experimental]
    internal interface IDesktopSiteBridge2
    {
        PopupWindowSiteBridge TryCreatePopupSiteBridge();
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI")][Guid("D94EE1FF-3AF1-54D0-9311-652B29C57C5B")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Content.IDesktopSiteBridgeFactory))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.Foundation.WindowsAppSDKContract), 65540u)]
    internal interface IDesktopSiteBridgeFactory
    {
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI")][Guid("E0B38DAF-9CD4-50C5-83EE-C76E3CF34EBA")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Content.IDesktopSiteBridgeStatics))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.Foundation.WindowsAppSDKContract), 65540u)]
    internal interface IDesktopSiteBridgeStatics
    {
        bool IsSupported();
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI")][Guid("94BF2A15-EDF0-5EB2-9CEC-9B93AC531413")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Content.IEndpointConnectionEventArgs))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.Foundation.WindowsAppSDKContract), 65543u)]
    [global::Windows.Foundation.Metadata.Experimental]
    internal interface IEndpointConnectionEventArgs
    {
        string ConnectionInfo { get; }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI")][Guid("513F95C6-4193-5388-90F8-8CF340815B1E")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Content.IEndpointRequestedStateChangedEventArgs))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.Foundation.WindowsAppSDKContract), 65543u)]
    [global::Windows.Foundation.Metadata.Experimental]
    internal interface IEndpointRequestedStateChangedEventArgs
    {
        bool DidRequestedSizeChange { get; }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI")][Guid("044597A2-E6EE-5DAB-ABE0-1923EBE34C2E")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Content.IPopupWindowSiteBridge))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.Foundation.WindowsAppSDKContract), 65543u)]
    [global::Windows.Foundation.Metadata.Experimental]
    internal interface IPopupWindowSiteBridge
    {
        bool Anchored { get; set; }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI")][Guid("122D01BC-7753-5592-B62D-F659A30A2AC0")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Content.IProcessStarter))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.Foundation.WindowsAppSDKContract), 65543u)]
    [global::Windows.Foundation.Metadata.Experimental]
    internal interface IProcessStarter
    {
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI")][Guid("A01418D1-4E8B-54B4-A5F2-520187A58B80")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Content.IProcessStarterFactory))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.Foundation.WindowsAppSDKContract), 65543u)]
    [global::Windows.Foundation.Metadata.Experimental]
    internal interface IProcessStarterFactory
    {
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI")][Guid("76F9D59D-8456-540F-BC74-0DCADF4581B8")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Content.IProcessStarterStatics))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.Foundation.WindowsAppSDKContract), 65543u)]
    [global::Windows.Foundation.Metadata.Experimental]
    internal interface IProcessStarterStatics
    {
        void StartProcess(string executablePath, string connectionInfo, out uint processId);
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI")][Guid("6EEDD227-3802-5772-B24E-1D8B736CFFA7")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Content.ISystemVisualSiteBridge))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.Foundation.WindowsAppSDKContract), 65543u)]
    [global::Windows.Foundation.Metadata.Experimental]
    internal interface ISystemVisualSiteBridge
    {
        void Connect(ContentIsland content);
        ContentSite Site { get; }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI")][Guid("6A79501C-83A0-5889-AA21-420100303276")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Content.ISystemVisualSiteBridgeStatics))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.Foundation.WindowsAppSDKContract), 65543u)]
    [global::Windows.Foundation.Metadata.Experimental]
    internal interface ISystemVisualSiteBridgeStatics
    {
        SystemVisualSiteBridge Create(global::Microsoft.UI.Dispatching.DispatcherQueue queue, global::Windows.UI.Composition.ContainerVisual hostVisual, global::Microsoft.UI.WindowId parentForInputWindowId);
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI")]
    [global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Content.PopupWindowSiteBridge))]
    [global::ABI.Microsoft.UI.Content.PopupWindowSiteBridgeRcwFactory]
    [global::WinRT.ProjectedRuntimeClass(typeof(IPopupWindowSiteBridge))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.Foundation.WindowsAppSDKContract), 65543u)]
    [global::Windows.Foundation.Metadata.Experimental]
    public sealed class PopupWindowSiteBridge : DesktopSiteBridge, global::System.Runtime.InteropServices.ICustomQueryInterface, IWinRTObject, IEquatable<PopupWindowSiteBridge>
    {
        private IntPtr ThisPtr => _inner == null ? (((IWinRTObject)this).NativeObject).ThisPtr : _inner.ThisPtr;

        private readonly IObjectReference _inner = null;



        private IObjectReference _objRef_global__Microsoft_UI_Content_IPopupWindowSiteBridge => _inner;


        public static new PopupWindowSiteBridge FromAbi(IntPtr thisPtr)
        {
            if (thisPtr == IntPtr.Zero) return null;
            return MarshalInspectable<PopupWindowSiteBridge>.FromAbi(thisPtr);
        }

        internal PopupWindowSiteBridge(IObjectReference objRef)
            : base(global::WinRT.DerivedComposed.Instance)

        {
            _inner = objRef.As(global::ABI.Microsoft.UI.Content.IPopupWindowSiteBridgeMethods.IID);

        }


        public static bool operator ==(PopupWindowSiteBridge x, PopupWindowSiteBridge y) => (x?.ThisPtr ?? IntPtr.Zero) == (y?.ThisPtr ?? IntPtr.Zero);
        public static bool operator !=(PopupWindowSiteBridge x, PopupWindowSiteBridge y) => !(x == y);
        public bool Equals(PopupWindowSiteBridge other) => this == other;
        public override bool Equals(object obj) => obj is PopupWindowSiteBridge that && this == that;
        public override int GetHashCode() => ThisPtr.GetHashCode();


        bool IWinRTObject.HasUnwrappableNativeObject => true;
        IObjectReference IWinRTObject.NativeObject => _inner;

        private struct InterfaceTag<I>{};


        public bool Anchored
        {
            get => global::ABI.Microsoft.UI.Content.IPopupWindowSiteBridgeMethods.get_Anchored(_objRef_global__Microsoft_UI_Content_IPopupWindowSiteBridge);
            set => global::ABI.Microsoft.UI.Content.IPopupWindowSiteBridgeMethods.set_Anchored(_objRef_global__Microsoft_UI_Content_IPopupWindowSiteBridge, value);
        }

        protected override bool IsOverridableInterface(Guid iid) => base.IsOverridableInterface(iid);

        global::System.Runtime.InteropServices.CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(ref Guid iid, out IntPtr ppv)
        {
            ppv = IntPtr.Zero;
            if (IsOverridableInterface(iid) || global::WinRT.Interop.IID.IID_IInspectable == iid)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
            }

            if (((IWinRTObject)this).NativeObject.TryAs(iid, out ppv) >= 0)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.Handled;
            }

            return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
        }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI")]
    [global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Content.ProcessStarter))]
    [global::ABI.Microsoft.UI.Content.ProcessStarterRcwFactory]
    [global::WinRT.ProjectedRuntimeClass(typeof(IProcessStarter))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.Foundation.WindowsAppSDKContract), 65543u)]
    [global::Windows.Foundation.Metadata.Experimental]
    public class ProcessStarter : global::System.Runtime.InteropServices.ICustomQueryInterface, IWinRTObject, IEquatable<ProcessStarter>
    {
        private IntPtr ThisPtr => _inner == null ? (((IWinRTObject)this).NativeObject).ThisPtr : _inner.ThisPtr;

        private readonly IObjectReference _inner = null;




        private volatile IObjectReference ___objRef_global__Microsoft_UI_Content_IProcessStarter;
        private IObjectReference Make___objRef_global__Microsoft_UI_Content_IProcessStarter()
        {
            global::System.Threading.Interlocked.CompareExchange(ref ___objRef_global__Microsoft_UI_Content_IProcessStarter, ((IWinRTObject)this).NativeObject.As<IUnknownVftbl>(global::ABI.Microsoft.UI.Content.IProcessStarterMethods.IID), null);
            return ___objRef_global__Microsoft_UI_Content_IProcessStarter;
        }
        private IObjectReference _objRef_global__Microsoft_UI_Content_IProcessStarter => ___objRef_global__Microsoft_UI_Content_IProcessStarter ?? Make___objRef_global__Microsoft_UI_Content_IProcessStarter();



        private static class _IProcessStarterFactoryMethods
        {}

        private static volatile IObjectReference ___objRef_global__Microsoft_UI_Content_IProcessStarterFactory;
        private static IObjectReference _objRef_global__Microsoft_UI_Content_IProcessStarterFactory
        {
            get
            { 
                var factory = ___objRef_global__Microsoft_UI_Content_IProcessStarterFactory;
                if (factory != null && factory.IsInCurrentContext)
                {
                    return factory;
                }
                else
                {
                    return ___objRef_global__Microsoft_UI_Content_IProcessStarterFactory = ActivationFactory.Get("Microsoft.UI.Content.ProcessStarter", global::ABI.Microsoft.UI.Content.IProcessStarterFactoryMethods.IID);
                }
            }
        }

        public static I As<I>() => ActivationFactory.Get("Microsoft.UI.Content.ProcessStarter").AsInterface<I>();

        private static volatile IObjectReference ___objRef_global__Microsoft_UI_Content_IProcessStarterStatics;
        private static IObjectReference _objRef_global__Microsoft_UI_Content_IProcessStarterStatics
        {
            get
            { 
                var factory = ___objRef_global__Microsoft_UI_Content_IProcessStarterStatics;
                if (factory != null && factory.IsInCurrentContext)
                {
                    return factory;
                }
                else
                {
                    return ___objRef_global__Microsoft_UI_Content_IProcessStarterStatics = ActivationFactory.Get("Microsoft.UI.Content.ProcessStarter", global::ABI.Microsoft.UI.Content.IProcessStarterStaticsMethods.IID);
                }
            }
        }

        public static void StartProcess(string executablePath, string connectionInfo, out uint processId) => global::ABI.Microsoft.UI.Content.IProcessStarterStaticsMethods.StartProcess(_objRef_global__Microsoft_UI_Content_IProcessStarterStatics, executablePath, connectionInfo, out processId);

        public static ProcessStarter FromAbi(IntPtr thisPtr)
        {
            if (thisPtr == IntPtr.Zero) return null;
            return MarshalInspectable<ProcessStarter>.FromAbi(thisPtr);
        }

        protected internal ProcessStarter(IObjectReference objRef)
        {
            _inner = objRef.As(global::ABI.Microsoft.UI.Content.IProcessStarterMethods.IID);

        }


        public static bool operator ==(ProcessStarter x, ProcessStarter y) => (x?.ThisPtr ?? IntPtr.Zero) == (y?.ThisPtr ?? IntPtr.Zero);
        public static bool operator !=(ProcessStarter x, ProcessStarter y) => !(x == y);
        public bool Equals(ProcessStarter other) => this == other;
        public override bool Equals(object obj) => obj is ProcessStarter that && this == that;
        public override int GetHashCode() => ThisPtr.GetHashCode();


        protected ProcessStarter(global::WinRT.DerivedComposed _)
        {

        }
        bool IWinRTObject.HasUnwrappableNativeObject => this.GetType() == typeof(ProcessStarter);
        IObjectReference IWinRTObject.NativeObject => _inner;
        private volatile global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> _queryInterfaceCache;
        private global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> MakeQueryInterfaceCache()
        {
            global::System.Threading.Interlocked.CompareExchange(ref _queryInterfaceCache, new global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference>(), null); 
            return _queryInterfaceCache;
        }
        global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> IWinRTObject.QueryInterfaceCache => _queryInterfaceCache ?? MakeQueryInterfaceCache();
        private volatile global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> _additionalTypeData;
        private global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> MakeAdditionalTypeData()
        {
            global::System.Threading.Interlocked.CompareExchange(ref _additionalTypeData, new global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object>(), null); 
            return _additionalTypeData;
        }
        global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> IWinRTObject.AdditionalTypeData => _additionalTypeData ?? MakeAdditionalTypeData();

        private struct InterfaceTag<I>{};


        protected virtual bool IsOverridableInterface(Guid iid) => false;

        global::System.Runtime.InteropServices.CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(ref Guid iid, out IntPtr ppv)
        {
            ppv = IntPtr.Zero;
            if (IsOverridableInterface(iid) || global::WinRT.Interop.IID.IID_IInspectable == iid)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
            }

            if (((IWinRTObject)this).NativeObject.TryAs(iid, out ppv) >= 0)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.Handled;
            }

            return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
        }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI")]
    [global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Content.SystemVisualSiteBridge))]
    [global::ABI.Microsoft.UI.Content.SystemVisualSiteBridgeRcwFactory]
    [global::WinRT.ProjectedRuntimeClass(typeof(ISystemVisualSiteBridge))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.Foundation.WindowsAppSDKContract), 65543u)]
    [global::Windows.Foundation.Metadata.Experimental]
    public sealed class SystemVisualSiteBridge : global::Microsoft.UI.IClosableNotifier, IContentSiteBridge, global::System.IDisposable, global::System.Runtime.InteropServices.ICustomQueryInterface, IWinRTObject, IEquatable<SystemVisualSiteBridge>
    {
        private IntPtr ThisPtr => _inner == null ? (((IWinRTObject)this).NativeObject).ThisPtr : _inner.ThisPtr;

        private readonly IObjectReference _inner = null;



        private IObjectReference _objRef_global__Microsoft_UI_Content_ISystemVisualSiteBridge => _inner;
        private volatile IObjectReference ___objRef_global__Microsoft_UI_IClosableNotifier;
        private IObjectReference Make___objRef_global__Microsoft_UI_IClosableNotifier()
        {
            global::System.Threading.Interlocked.CompareExchange(ref ___objRef_global__Microsoft_UI_IClosableNotifier, ((IWinRTObject)this).NativeObject.As<IUnknownVftbl>(global::ABI.Microsoft.UI.IClosableNotifierMethods.IID), null);
            return ___objRef_global__Microsoft_UI_IClosableNotifier;
        }
        private IObjectReference _objRef_global__Microsoft_UI_IClosableNotifier => ___objRef_global__Microsoft_UI_IClosableNotifier ?? Make___objRef_global__Microsoft_UI_IClosableNotifier();

        private volatile IObjectReference ___objRef_global__Microsoft_UI_Content_IContentSiteBridge;
        private IObjectReference Make___objRef_global__Microsoft_UI_Content_IContentSiteBridge()
        {
            global::System.Threading.Interlocked.CompareExchange(ref ___objRef_global__Microsoft_UI_Content_IContentSiteBridge, ((IWinRTObject)this).NativeObject.As<IUnknownVftbl>(global::ABI.Microsoft.UI.Content.IContentSiteBridgeMethods.IID), null);
            return ___objRef_global__Microsoft_UI_Content_IContentSiteBridge;
        }
        private IObjectReference _objRef_global__Microsoft_UI_Content_IContentSiteBridge => ___objRef_global__Microsoft_UI_Content_IContentSiteBridge ?? Make___objRef_global__Microsoft_UI_Content_IContentSiteBridge();

        private volatile IObjectReference ___objRef_global__System_IDisposable;
        private IObjectReference Make___objRef_global__System_IDisposable()
        {
            global::System.Threading.Interlocked.CompareExchange(ref ___objRef_global__System_IDisposable, ((IWinRTObject)this).NativeObject.As<IUnknownVftbl>(global::ABI.System.IDisposableMethods.IID), null);
            return ___objRef_global__System_IDisposable;
        }
        private IObjectReference _objRef_global__System_IDisposable => ___objRef_global__System_IDisposable ?? Make___objRef_global__System_IDisposable();



        public static I As<I>() => ActivationFactory.Get("Microsoft.UI.Content.SystemVisualSiteBridge").AsInterface<I>();

        private static volatile IObjectReference ___objRef_global__Microsoft_UI_Content_ISystemVisualSiteBridgeStatics;
        private static IObjectReference _objRef_global__Microsoft_UI_Content_ISystemVisualSiteBridgeStatics
        {
            get
            { 
                var factory = ___objRef_global__Microsoft_UI_Content_ISystemVisualSiteBridgeStatics;
                if (factory != null && factory.IsInCurrentContext)
                {
                    return factory;
                }
                else
                {
                    return ___objRef_global__Microsoft_UI_Content_ISystemVisualSiteBridgeStatics = ActivationFactory.Get("Microsoft.UI.Content.SystemVisualSiteBridge", global::ABI.Microsoft.UI.Content.ISystemVisualSiteBridgeStaticsMethods.IID);
                }
            }
        }

        public static SystemVisualSiteBridge Create(global::Microsoft.UI.Dispatching.DispatcherQueue queue, global::Windows.UI.Composition.ContainerVisual hostVisual, global::Microsoft.UI.WindowId parentForInputWindowId) => global::ABI.Microsoft.UI.Content.ISystemVisualSiteBridgeStaticsMethods.Create(_objRef_global__Microsoft_UI_Content_ISystemVisualSiteBridgeStatics, queue, hostVisual, parentForInputWindowId);

        public static SystemVisualSiteBridge FromAbi(IntPtr thisPtr)
        {
            if (thisPtr == IntPtr.Zero) return null;
            return MarshalInspectable<SystemVisualSiteBridge>.FromAbi(thisPtr);
        }

        internal SystemVisualSiteBridge(IObjectReference objRef)
        {
            _inner = objRef.As(global::ABI.Microsoft.UI.Content.ISystemVisualSiteBridgeMethods.IID);

        }


        public static bool operator ==(SystemVisualSiteBridge x, SystemVisualSiteBridge y) => (x?.ThisPtr ?? IntPtr.Zero) == (y?.ThisPtr ?? IntPtr.Zero);
        public static bool operator !=(SystemVisualSiteBridge x, SystemVisualSiteBridge y) => !(x == y);
        public bool Equals(SystemVisualSiteBridge other) => this == other;
        public override bool Equals(object obj) => obj is SystemVisualSiteBridge that && this == that;
        public override int GetHashCode() => ThisPtr.GetHashCode();


        bool IWinRTObject.HasUnwrappableNativeObject => true;
        IObjectReference IWinRTObject.NativeObject => _inner;
        private volatile global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> _queryInterfaceCache;
        private global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> MakeQueryInterfaceCache()
        {
            global::System.Threading.Interlocked.CompareExchange(ref _queryInterfaceCache, new global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference>(), null); 
            return _queryInterfaceCache;
        }
        global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> IWinRTObject.QueryInterfaceCache => _queryInterfaceCache ?? MakeQueryInterfaceCache();
        private volatile global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> _additionalTypeData;
        private global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> MakeAdditionalTypeData()
        {
            global::System.Threading.Interlocked.CompareExchange(ref _additionalTypeData, new global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object>(), null); 
            return _additionalTypeData;
        }
        global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> IWinRTObject.AdditionalTypeData => _additionalTypeData ?? MakeAdditionalTypeData();

        private struct InterfaceTag<I>{};


        public void Connect(ContentIsland content) => global::ABI.Microsoft.UI.Content.ISystemVisualSiteBridgeMethods.Connect(_objRef_global__Microsoft_UI_Content_ISystemVisualSiteBridge, content);

        public event global::Microsoft.UI.ClosableNotifierHandler Closed
        {
            add => global::ABI.Microsoft.UI.IClosableNotifierMethods.Get_Closed2(_objRef_global__Microsoft_UI_IClosableNotifier, (IWinRTObject)this).Subscribe(value);
            remove => global::ABI.Microsoft.UI.IClosableNotifierMethods.Get_Closed2(_objRef_global__Microsoft_UI_IClosableNotifier, (IWinRTObject)this).Unsubscribe(value);
        }

        public event global::Microsoft.UI.ClosableNotifierHandler FrameworkClosed
        {
            add => global::ABI.Microsoft.UI.IClosableNotifierMethods.Get_FrameworkClosed2(_objRef_global__Microsoft_UI_IClosableNotifier, (IWinRTObject)this).Subscribe(value);
            remove => global::ABI.Microsoft.UI.IClosableNotifierMethods.Get_FrameworkClosed2(_objRef_global__Microsoft_UI_IClosableNotifier, (IWinRTObject)this).Unsubscribe(value);
        }

        public void Dispose() => global::ABI.System.IDisposableMethods.Dispose(_objRef_global__System_IDisposable);

        public global::Microsoft.UI.Dispatching.DispatcherQueue DispatcherQueue => global::ABI.Microsoft.UI.Content.IContentSiteBridgeMethods.get_DispatcherQueue(_objRef_global__Microsoft_UI_Content_IContentSiteBridge);

        public bool IsClosed => global::ABI.Microsoft.UI.IClosableNotifierMethods.get_IsClosed(_objRef_global__Microsoft_UI_IClosableNotifier);

        public global::System.Nullable<ContentLayoutDirection> LayoutDirectionOverride
        {
            get => global::ABI.Microsoft.UI.Content.IContentSiteBridgeMethods.get_LayoutDirectionOverride(_objRef_global__Microsoft_UI_Content_IContentSiteBridge);
            set => global::ABI.Microsoft.UI.Content.IContentSiteBridgeMethods.set_LayoutDirectionOverride(_objRef_global__Microsoft_UI_Content_IContentSiteBridge, value);
        }

        public float OverrideScale
        {
            get => global::ABI.Microsoft.UI.Content.IContentSiteBridgeMethods.get_OverrideScale(_objRef_global__Microsoft_UI_Content_IContentSiteBridge);
            set => global::ABI.Microsoft.UI.Content.IContentSiteBridgeMethods.set_OverrideScale(_objRef_global__Microsoft_UI_Content_IContentSiteBridge, value);
        }

        public ContentSite Site => global::ABI.Microsoft.UI.Content.ISystemVisualSiteBridgeMethods.get_Site(_objRef_global__Microsoft_UI_Content_ISystemVisualSiteBridge);

        private bool IsOverridableInterface(Guid iid) => false;

        global::System.Runtime.InteropServices.CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(ref Guid iid, out IntPtr ppv)
        {
            ppv = IntPtr.Zero;
            if (IsOverridableInterface(iid) || global::WinRT.Interop.IID.IID_IInspectable == iid)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
            }

            if (((IWinRTObject)this).NativeObject.TryAs(iid, out ppv) >= 0)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.Handled;
            }

            return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
        }
    }
}

#pragma warning disable CA1416
namespace ABI.Microsoft.UI.Content
{
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    public struct ChildSiteLink
    {

        public static IObjectReference CreateMarshaler(global::Microsoft.UI.Content.ChildSiteLink obj) => obj is null ? null : MarshalInspectable<global::Microsoft.UI.Content.ChildSiteLink>.CreateMarshaler<IUnknownVftbl>(obj, global::ABI.Microsoft.UI.Content.IChildSiteLinkMethods.IID);
        public static ObjectReferenceValue CreateMarshaler2(global::Microsoft.UI.Content.ChildSiteLink obj) => MarshalInspectable<object>.CreateMarshaler2(obj, global::ABI.Microsoft.UI.Content.IChildSiteLinkMethods.IID);
        public static IntPtr GetAbi(IObjectReference value) => value is null ? IntPtr.Zero : MarshalInterfaceHelper<object>.GetAbi(value);
        public static global::Microsoft.UI.Content.ChildSiteLink FromAbi(IntPtr thisPtr) => global::Microsoft.UI.Content.ChildSiteLink.FromAbi(thisPtr);
        public static IntPtr FromManaged(global::Microsoft.UI.Content.ChildSiteLink obj) => obj is null ? IntPtr.Zero : CreateMarshaler2(obj).Detach();
        public static unsafe MarshalInterfaceHelper<global::Microsoft.UI.Content.ChildSiteLink>.MarshalerArray CreateMarshalerArray(global::Microsoft.UI.Content.ChildSiteLink[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Content.ChildSiteLink>.CreateMarshalerArray2(array, (o) => CreateMarshaler2(o));
        public static (int length, IntPtr data) GetAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Content.ChildSiteLink>.GetAbiArray(box);
        public static unsafe global::Microsoft.UI.Content.ChildSiteLink[] FromAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Content.ChildSiteLink>.FromAbiArray(box, FromAbi);
        public static void CopyAbiArray(global::Microsoft.UI.Content.ChildSiteLink[] array, object box) => MarshalInterfaceHelper<global::Microsoft.UI.Content.ChildSiteLink>.CopyAbiArray(array, box, FromAbi);
        public static (int length, IntPtr data) FromManagedArray(global::Microsoft.UI.Content.ChildSiteLink[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Content.ChildSiteLink>.FromManagedArray(array, (o) => FromManaged(o));
        public static void DisposeMarshaler(IObjectReference value) => MarshalInspectable<object>.DisposeMarshaler(value);
        public static void DisposeMarshalerArray(MarshalInterfaceHelper<global::Microsoft.UI.Content.ChildSiteLink>.MarshalerArray array) => MarshalInterfaceHelper<global::Microsoft.UI.Content.ChildSiteLink>.DisposeMarshalerArray(array);
        public static void DisposeAbi(IntPtr abi) => MarshalInspectable<object>.DisposeAbi(abi);
        public static unsafe void DisposeAbiArray(object box) => MarshalInspectable<object>.DisposeAbiArray(box);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    internal sealed class ChildSiteLinkRcwFactoryAttribute : global::WinRT.WinRTImplementationTypeRcwFactoryAttribute
    {
        public override object CreateInstance(global::WinRT.IInspectable inspectable)
            => new global::Microsoft.UI.Content.ChildSiteLink(inspectable.ObjRef);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    public struct ContentAppWindowBridge
    {

        public static IObjectReference CreateMarshaler(global::Microsoft.UI.Content.ContentAppWindowBridge obj) => obj is null ? null : MarshalInspectable<global::Microsoft.UI.Content.ContentAppWindowBridge>.CreateMarshaler<IUnknownVftbl>(obj, global::ABI.Microsoft.UI.Content.IContentAppWindowBridgeMethods.IID);
        public static ObjectReferenceValue CreateMarshaler2(global::Microsoft.UI.Content.ContentAppWindowBridge obj) => MarshalInspectable<object>.CreateMarshaler2(obj, global::ABI.Microsoft.UI.Content.IContentAppWindowBridgeMethods.IID);
        public static IntPtr GetAbi(IObjectReference value) => value is null ? IntPtr.Zero : MarshalInterfaceHelper<object>.GetAbi(value);
        public static global::Microsoft.UI.Content.ContentAppWindowBridge FromAbi(IntPtr thisPtr) => global::Microsoft.UI.Content.ContentAppWindowBridge.FromAbi(thisPtr);
        public static IntPtr FromManaged(global::Microsoft.UI.Content.ContentAppWindowBridge obj) => obj is null ? IntPtr.Zero : CreateMarshaler2(obj).Detach();
        public static unsafe MarshalInterfaceHelper<global::Microsoft.UI.Content.ContentAppWindowBridge>.MarshalerArray CreateMarshalerArray(global::Microsoft.UI.Content.ContentAppWindowBridge[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Content.ContentAppWindowBridge>.CreateMarshalerArray2(array, (o) => CreateMarshaler2(o));
        public static (int length, IntPtr data) GetAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Content.ContentAppWindowBridge>.GetAbiArray(box);
        public static unsafe global::Microsoft.UI.Content.ContentAppWindowBridge[] FromAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Content.ContentAppWindowBridge>.FromAbiArray(box, FromAbi);
        public static void CopyAbiArray(global::Microsoft.UI.Content.ContentAppWindowBridge[] array, object box) => MarshalInterfaceHelper<global::Microsoft.UI.Content.ContentAppWindowBridge>.CopyAbiArray(array, box, FromAbi);
        public static (int length, IntPtr data) FromManagedArray(global::Microsoft.UI.Content.ContentAppWindowBridge[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Content.ContentAppWindowBridge>.FromManagedArray(array, (o) => FromManaged(o));
        public static void DisposeMarshaler(IObjectReference value) => MarshalInspectable<object>.DisposeMarshaler(value);
        public static void DisposeMarshalerArray(MarshalInterfaceHelper<global::Microsoft.UI.Content.ContentAppWindowBridge>.MarshalerArray array) => MarshalInterfaceHelper<global::Microsoft.UI.Content.ContentAppWindowBridge>.DisposeMarshalerArray(array);
        public static void DisposeAbi(IntPtr abi) => MarshalInspectable<object>.DisposeAbi(abi);
        public static unsafe void DisposeAbiArray(object box) => MarshalInspectable<object>.DisposeAbiArray(box);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    internal sealed class ContentAppWindowBridgeRcwFactoryAttribute : global::WinRT.WinRTImplementationTypeRcwFactoryAttribute
    {
        public override object CreateInstance(global::WinRT.IInspectable inspectable)
            => new global::Microsoft.UI.Content.ContentAppWindowBridge(inspectable.ObjRef);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    public struct ContentCoordinateConverter
    {

        public static IObjectReference CreateMarshaler(global::Microsoft.UI.Content.ContentCoordinateConverter obj) => obj is null ? null : MarshalInspectable<global::Microsoft.UI.Content.ContentCoordinateConverter>.CreateMarshaler<IUnknownVftbl>(obj, global::ABI.Microsoft.UI.Content.IContentCoordinateConverterMethods.IID);
        public static ObjectReferenceValue CreateMarshaler2(global::Microsoft.UI.Content.ContentCoordinateConverter obj) => MarshalInspectable<object>.CreateMarshaler2(obj, global::ABI.Microsoft.UI.Content.IContentCoordinateConverterMethods.IID);
        public static IntPtr GetAbi(IObjectReference value) => value is null ? IntPtr.Zero : MarshalInterfaceHelper<object>.GetAbi(value);
        public static global::Microsoft.UI.Content.ContentCoordinateConverter FromAbi(IntPtr thisPtr) => global::Microsoft.UI.Content.ContentCoordinateConverter.FromAbi(thisPtr);
        public static IntPtr FromManaged(global::Microsoft.UI.Content.ContentCoordinateConverter obj) => obj is null ? IntPtr.Zero : CreateMarshaler2(obj).Detach();
        public static unsafe MarshalInterfaceHelper<global::Microsoft.UI.Content.ContentCoordinateConverter>.MarshalerArray CreateMarshalerArray(global::Microsoft.UI.Content.ContentCoordinateConverter[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Content.ContentCoordinateConverter>.CreateMarshalerArray2(array, (o) => CreateMarshaler2(o));
        public static (int length, IntPtr data) GetAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Content.ContentCoordinateConverter>.GetAbiArray(box);
        public static unsafe global::Microsoft.UI.Content.ContentCoordinateConverter[] FromAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Content.ContentCoordinateConverter>.FromAbiArray(box, FromAbi);
        public static void CopyAbiArray(global::Microsoft.UI.Content.ContentCoordinateConverter[] array, object box) => MarshalInterfaceHelper<global::Microsoft.UI.Content.ContentCoordinateConverter>.CopyAbiArray(array, box, FromAbi);
        public static (int length, IntPtr data) FromManagedArray(global::Microsoft.UI.Content.ContentCoordinateConverter[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Content.ContentCoordinateConverter>.FromManagedArray(array, (o) => FromManaged(o));
        public static void DisposeMarshaler(IObjectReference value) => MarshalInspectable<object>.DisposeMarshaler(value);
        public static void DisposeMarshalerArray(MarshalInterfaceHelper<global::Microsoft.UI.Content.ContentCoordinateConverter>.MarshalerArray array) => MarshalInterfaceHelper<global::Microsoft.UI.Content.ContentCoordinateConverter>.DisposeMarshalerArray(array);
        public static void DisposeAbi(IntPtr abi) => MarshalInspectable<object>.DisposeAbi(abi);
        public static unsafe void DisposeAbiArray(object box) => MarshalInspectable<object>.DisposeAbiArray(box);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    internal sealed class ContentCoordinateConverterRcwFactoryAttribute : global::WinRT.WinRTImplementationTypeRcwFactoryAttribute
    {
        public override object CreateInstance(global::WinRT.IInspectable inspectable)
            => new global::Microsoft.UI.Content.ContentCoordinateConverter(inspectable.ObjRef);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    public struct ContentDeferral
    {

        public static IObjectReference CreateMarshaler(global::Microsoft.UI.Content.ContentDeferral obj) => obj is null ? null : MarshalInspectable<global::Microsoft.UI.Content.ContentDeferral>.CreateMarshaler<IUnknownVftbl>(obj, global::ABI.Microsoft.UI.Content.IContentDeferralMethods.IID);
        public static ObjectReferenceValue CreateMarshaler2(global::Microsoft.UI.Content.ContentDeferral obj) => MarshalInspectable<object>.CreateMarshaler2(obj, global::ABI.Microsoft.UI.Content.IContentDeferralMethods.IID);
        public static IntPtr GetAbi(IObjectReference value) => value is null ? IntPtr.Zero : MarshalInterfaceHelper<object>.GetAbi(value);
        public static global::Microsoft.UI.Content.ContentDeferral FromAbi(IntPtr thisPtr) => global::Microsoft.UI.Content.ContentDeferral.FromAbi(thisPtr);
        public static IntPtr FromManaged(global::Microsoft.UI.Content.ContentDeferral obj) => obj is null ? IntPtr.Zero : CreateMarshaler2(obj).Detach();
        public static unsafe MarshalInterfaceHelper<global::Microsoft.UI.Content.ContentDeferral>.MarshalerArray CreateMarshalerArray(global::Microsoft.UI.Content.ContentDeferral[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Content.ContentDeferral>.CreateMarshalerArray2(array, (o) => CreateMarshaler2(o));
        public static (int length, IntPtr data) GetAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Content.ContentDeferral>.GetAbiArray(box);
        public static unsafe global::Microsoft.UI.Content.ContentDeferral[] FromAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Content.ContentDeferral>.FromAbiArray(box, FromAbi);
        public static void CopyAbiArray(global::Microsoft.UI.Content.ContentDeferral[] array, object box) => MarshalInterfaceHelper<global::Microsoft.UI.Content.ContentDeferral>.CopyAbiArray(array, box, FromAbi);
        public static (int length, IntPtr data) FromManagedArray(global::Microsoft.UI.Content.ContentDeferral[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Content.ContentDeferral>.FromManagedArray(array, (o) => FromManaged(o));
        public static void DisposeMarshaler(IObjectReference value) => MarshalInspectable<object>.DisposeMarshaler(value);
        public static void DisposeMarshalerArray(MarshalInterfaceHelper<global::Microsoft.UI.Content.ContentDeferral>.MarshalerArray array) => MarshalInterfaceHelper<global::Microsoft.UI.Content.ContentDeferral>.DisposeMarshalerArray(array);
        public static void DisposeAbi(IntPtr abi) => MarshalInspectable<object>.DisposeAbi(abi);
        public static unsafe void DisposeAbiArray(object box) => MarshalInspectable<object>.DisposeAbiArray(box);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    internal sealed class ContentDeferralRcwFactoryAttribute : global::WinRT.WinRTImplementationTypeRcwFactoryAttribute
    {
        public override object CreateInstance(global::WinRT.IInspectable inspectable)
            => new global::Microsoft.UI.Content.ContentDeferral(inspectable.ObjRef);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    public struct ContentEnvironmentSettingChangedEventArgs
    {

        public static IObjectReference CreateMarshaler(global::Microsoft.UI.Content.ContentEnvironmentSettingChangedEventArgs obj) => obj is null ? null : MarshalInspectable<global::Microsoft.UI.Content.ContentEnvironmentSettingChangedEventArgs>.CreateMarshaler<IUnknownVftbl>(obj, global::ABI.Microsoft.UI.Content.IContentEnvironmentSettingChangedEventArgsMethods.IID);
        public static ObjectReferenceValue CreateMarshaler2(global::Microsoft.UI.Content.ContentEnvironmentSettingChangedEventArgs obj) => MarshalInspectable<object>.CreateMarshaler2(obj, global::ABI.Microsoft.UI.Content.IContentEnvironmentSettingChangedEventArgsMethods.IID);
        public static IntPtr GetAbi(IObjectReference value) => value is null ? IntPtr.Zero : MarshalInterfaceHelper<object>.GetAbi(value);
        public static global::Microsoft.UI.Content.ContentEnvironmentSettingChangedEventArgs FromAbi(IntPtr thisPtr) => global::Microsoft.UI.Content.ContentEnvironmentSettingChangedEventArgs.FromAbi(thisPtr);
        public static IntPtr FromManaged(global::Microsoft.UI.Content.ContentEnvironmentSettingChangedEventArgs obj) => obj is null ? IntPtr.Zero : CreateMarshaler2(obj).Detach();
        public static unsafe MarshalInterfaceHelper<global::Microsoft.UI.Content.ContentEnvironmentSettingChangedEventArgs>.MarshalerArray CreateMarshalerArray(global::Microsoft.UI.Content.ContentEnvironmentSettingChangedEventArgs[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Content.ContentEnvironmentSettingChangedEventArgs>.CreateMarshalerArray2(array, (o) => CreateMarshaler2(o));
        public static (int length, IntPtr data) GetAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Content.ContentEnvironmentSettingChangedEventArgs>.GetAbiArray(box);
        public static unsafe global::Microsoft.UI.Content.ContentEnvironmentSettingChangedEventArgs[] FromAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Content.ContentEnvironmentSettingChangedEventArgs>.FromAbiArray(box, FromAbi);
        public static void CopyAbiArray(global::Microsoft.UI.Content.ContentEnvironmentSettingChangedEventArgs[] array, object box) => MarshalInterfaceHelper<global::Microsoft.UI.Content.ContentEnvironmentSettingChangedEventArgs>.CopyAbiArray(array, box, FromAbi);
        public static (int length, IntPtr data) FromManagedArray(global::Microsoft.UI.Content.ContentEnvironmentSettingChangedEventArgs[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Content.ContentEnvironmentSettingChangedEventArgs>.FromManagedArray(array, (o) => FromManaged(o));
        public static void DisposeMarshaler(IObjectReference value) => MarshalInspectable<object>.DisposeMarshaler(value);
        public static void DisposeMarshalerArray(MarshalInterfaceHelper<global::Microsoft.UI.Content.ContentEnvironmentSettingChangedEventArgs>.MarshalerArray array) => MarshalInterfaceHelper<global::Microsoft.UI.Content.ContentEnvironmentSettingChangedEventArgs>.DisposeMarshalerArray(array);
        public static void DisposeAbi(IntPtr abi) => MarshalInspectable<object>.DisposeAbi(abi);
        public static unsafe void DisposeAbiArray(object box) => MarshalInspectable<object>.DisposeAbiArray(box);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    internal sealed class ContentEnvironmentSettingChangedEventArgsRcwFactoryAttribute : global::WinRT.WinRTImplementationTypeRcwFactoryAttribute
    {
        public override object CreateInstance(global::WinRT.IInspectable inspectable)
            => new global::Microsoft.UI.Content.ContentEnvironmentSettingChangedEventArgs(inspectable.ObjRef);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    public struct ContentEnvironmentStateChangedEventArgs
    {

        public static IObjectReference CreateMarshaler(global::Microsoft.UI.Content.ContentEnvironmentStateChangedEventArgs obj) => obj is null ? null : MarshalInspectable<global::Microsoft.UI.Content.ContentEnvironmentStateChangedEventArgs>.CreateMarshaler<IUnknownVftbl>(obj, global::ABI.Microsoft.UI.Content.IContentEnvironmentStateChangedEventArgsMethods.IID);
        public static ObjectReferenceValue CreateMarshaler2(global::Microsoft.UI.Content.ContentEnvironmentStateChangedEventArgs obj) => MarshalInspectable<object>.CreateMarshaler2(obj, global::ABI.Microsoft.UI.Content.IContentEnvironmentStateChangedEventArgsMethods.IID);
        public static IntPtr GetAbi(IObjectReference value) => value is null ? IntPtr.Zero : MarshalInterfaceHelper<object>.GetAbi(value);
        public static global::Microsoft.UI.Content.ContentEnvironmentStateChangedEventArgs FromAbi(IntPtr thisPtr) => global::Microsoft.UI.Content.ContentEnvironmentStateChangedEventArgs.FromAbi(thisPtr);
        public static IntPtr FromManaged(global::Microsoft.UI.Content.ContentEnvironmentStateChangedEventArgs obj) => obj is null ? IntPtr.Zero : CreateMarshaler2(obj).Detach();
        public static unsafe MarshalInterfaceHelper<global::Microsoft.UI.Content.ContentEnvironmentStateChangedEventArgs>.MarshalerArray CreateMarshalerArray(global::Microsoft.UI.Content.ContentEnvironmentStateChangedEventArgs[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Content.ContentEnvironmentStateChangedEventArgs>.CreateMarshalerArray2(array, (o) => CreateMarshaler2(o));
        public static (int length, IntPtr data) GetAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Content.ContentEnvironmentStateChangedEventArgs>.GetAbiArray(box);
        public static unsafe global::Microsoft.UI.Content.ContentEnvironmentStateChangedEventArgs[] FromAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Content.ContentEnvironmentStateChangedEventArgs>.FromAbiArray(box, FromAbi);
        public static void CopyAbiArray(global::Microsoft.UI.Content.ContentEnvironmentStateChangedEventArgs[] array, object box) => MarshalInterfaceHelper<global::Microsoft.UI.Content.ContentEnvironmentStateChangedEventArgs>.CopyAbiArray(array, box, FromAbi);
        public static (int length, IntPtr data) FromManagedArray(global::Microsoft.UI.Content.ContentEnvironmentStateChangedEventArgs[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Content.ContentEnvironmentStateChangedEventArgs>.FromManagedArray(array, (o) => FromManaged(o));
        public static void DisposeMarshaler(IObjectReference value) => MarshalInspectable<object>.DisposeMarshaler(value);
        public static void DisposeMarshalerArray(MarshalInterfaceHelper<global::Microsoft.UI.Content.ContentEnvironmentStateChangedEventArgs>.MarshalerArray array) => MarshalInterfaceHelper<global::Microsoft.UI.Content.ContentEnvironmentStateChangedEventArgs>.DisposeMarshalerArray(array);
        public static void DisposeAbi(IntPtr abi) => MarshalInspectable<object>.DisposeAbi(abi);
        public static unsafe void DisposeAbiArray(object box) => MarshalInspectable<object>.DisposeAbiArray(box);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    internal sealed class ContentEnvironmentStateChangedEventArgsRcwFactoryAttribute : global::WinRT.WinRTImplementationTypeRcwFactoryAttribute
    {
        public override object CreateInstance(global::WinRT.IInspectable inspectable)
            => new global::Microsoft.UI.Content.ContentEnvironmentStateChangedEventArgs(inspectable.ObjRef);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    public struct ContentExternalBackdropLink
    {

        public static IObjectReference CreateMarshaler(global::Microsoft.UI.Content.ContentExternalBackdropLink obj) => obj is null ? null : MarshalInspectable<global::Microsoft.UI.Content.ContentExternalBackdropLink>.CreateMarshaler<IUnknownVftbl>(obj, global::ABI.Microsoft.UI.Content.IContentExternalBackdropLinkMethods.IID);
        public static ObjectReferenceValue CreateMarshaler2(global::Microsoft.UI.Content.ContentExternalBackdropLink obj) => MarshalInspectable<object>.CreateMarshaler2(obj, global::ABI.Microsoft.UI.Content.IContentExternalBackdropLinkMethods.IID);
        public static IntPtr GetAbi(IObjectReference value) => value is null ? IntPtr.Zero : MarshalInterfaceHelper<object>.GetAbi(value);
        public static global::Microsoft.UI.Content.ContentExternalBackdropLink FromAbi(IntPtr thisPtr) => global::Microsoft.UI.Content.ContentExternalBackdropLink.FromAbi(thisPtr);
        public static IntPtr FromManaged(global::Microsoft.UI.Content.ContentExternalBackdropLink obj) => obj is null ? IntPtr.Zero : CreateMarshaler2(obj).Detach();
        public static unsafe MarshalInterfaceHelper<global::Microsoft.UI.Content.ContentExternalBackdropLink>.MarshalerArray CreateMarshalerArray(global::Microsoft.UI.Content.ContentExternalBackdropLink[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Content.ContentExternalBackdropLink>.CreateMarshalerArray2(array, (o) => CreateMarshaler2(o));
        public static (int length, IntPtr data) GetAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Content.ContentExternalBackdropLink>.GetAbiArray(box);
        public static unsafe global::Microsoft.UI.Content.ContentExternalBackdropLink[] FromAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Content.ContentExternalBackdropLink>.FromAbiArray(box, FromAbi);
        public static void CopyAbiArray(global::Microsoft.UI.Content.ContentExternalBackdropLink[] array, object box) => MarshalInterfaceHelper<global::Microsoft.UI.Content.ContentExternalBackdropLink>.CopyAbiArray(array, box, FromAbi);
        public static (int length, IntPtr data) FromManagedArray(global::Microsoft.UI.Content.ContentExternalBackdropLink[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Content.ContentExternalBackdropLink>.FromManagedArray(array, (o) => FromManaged(o));
        public static void DisposeMarshaler(IObjectReference value) => MarshalInspectable<object>.DisposeMarshaler(value);
        public static void DisposeMarshalerArray(MarshalInterfaceHelper<global::Microsoft.UI.Content.ContentExternalBackdropLink>.MarshalerArray array) => MarshalInterfaceHelper<global::Microsoft.UI.Content.ContentExternalBackdropLink>.DisposeMarshalerArray(array);
        public static void DisposeAbi(IntPtr abi) => MarshalInspectable<object>.DisposeAbi(abi);
        public static unsafe void DisposeAbiArray(object box) => MarshalInspectable<object>.DisposeAbiArray(box);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    internal sealed class ContentExternalBackdropLinkRcwFactoryAttribute : global::WinRT.WinRTImplementationTypeRcwFactoryAttribute
    {
        public override object CreateInstance(global::WinRT.IInspectable inspectable)
            => new global::Microsoft.UI.Content.ContentExternalBackdropLink(inspectable.ObjRef);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    public struct ContentExternalOutputLink
    {

        public static IObjectReference CreateMarshaler(global::Microsoft.UI.Content.ContentExternalOutputLink obj) => obj is null ? null : MarshalInspectable<global::Microsoft.UI.Content.ContentExternalOutputLink>.CreateMarshaler<IUnknownVftbl>(obj, global::ABI.Microsoft.UI.Content.IContentExternalOutputLinkMethods.IID);
        public static ObjectReferenceValue CreateMarshaler2(global::Microsoft.UI.Content.ContentExternalOutputLink obj) => MarshalInspectable<object>.CreateMarshaler2(obj, global::ABI.Microsoft.UI.Content.IContentExternalOutputLinkMethods.IID);
        public static IntPtr GetAbi(IObjectReference value) => value is null ? IntPtr.Zero : MarshalInterfaceHelper<object>.GetAbi(value);
        public static global::Microsoft.UI.Content.ContentExternalOutputLink FromAbi(IntPtr thisPtr) => global::Microsoft.UI.Content.ContentExternalOutputLink.FromAbi(thisPtr);
        public static IntPtr FromManaged(global::Microsoft.UI.Content.ContentExternalOutputLink obj) => obj is null ? IntPtr.Zero : CreateMarshaler2(obj).Detach();
        public static unsafe MarshalInterfaceHelper<global::Microsoft.UI.Content.ContentExternalOutputLink>.MarshalerArray CreateMarshalerArray(global::Microsoft.UI.Content.ContentExternalOutputLink[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Content.ContentExternalOutputLink>.CreateMarshalerArray2(array, (o) => CreateMarshaler2(o));
        public static (int length, IntPtr data) GetAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Content.ContentExternalOutputLink>.GetAbiArray(box);
        public static unsafe global::Microsoft.UI.Content.ContentExternalOutputLink[] FromAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Content.ContentExternalOutputLink>.FromAbiArray(box, FromAbi);
        public static void CopyAbiArray(global::Microsoft.UI.Content.ContentExternalOutputLink[] array, object box) => MarshalInterfaceHelper<global::Microsoft.UI.Content.ContentExternalOutputLink>.CopyAbiArray(array, box, FromAbi);
        public static (int length, IntPtr data) FromManagedArray(global::Microsoft.UI.Content.ContentExternalOutputLink[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Content.ContentExternalOutputLink>.FromManagedArray(array, (o) => FromManaged(o));
        public static void DisposeMarshaler(IObjectReference value) => MarshalInspectable<object>.DisposeMarshaler(value);
        public static void DisposeMarshalerArray(MarshalInterfaceHelper<global::Microsoft.UI.Content.ContentExternalOutputLink>.MarshalerArray array) => MarshalInterfaceHelper<global::Microsoft.UI.Content.ContentExternalOutputLink>.DisposeMarshalerArray(array);
        public static void DisposeAbi(IntPtr abi) => MarshalInspectable<object>.DisposeAbi(abi);
        public static unsafe void DisposeAbiArray(object box) => MarshalInspectable<object>.DisposeAbiArray(box);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    internal sealed class ContentExternalOutputLinkRcwFactoryAttribute : global::WinRT.WinRTImplementationTypeRcwFactoryAttribute
    {
        public override object CreateInstance(global::WinRT.IInspectable inspectable)
            => new global::Microsoft.UI.Content.ContentExternalOutputLink(inspectable.ObjRef);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    public struct ContentIsland
    {

        public static IObjectReference CreateMarshaler(global::Microsoft.UI.Content.ContentIsland obj) => obj is null ? null : MarshalInspectable<global::Microsoft.UI.Content.ContentIsland>.CreateMarshaler<IUnknownVftbl>(obj, global::ABI.Microsoft.UI.Content.IContentIslandMethods.IID);
        public static ObjectReferenceValue CreateMarshaler2(global::Microsoft.UI.Content.ContentIsland obj) => MarshalInspectable<object>.CreateMarshaler2(obj, global::ABI.Microsoft.UI.Content.IContentIslandMethods.IID);
        public static IntPtr GetAbi(IObjectReference value) => value is null ? IntPtr.Zero : MarshalInterfaceHelper<object>.GetAbi(value);
        public static global::Microsoft.UI.Content.ContentIsland FromAbi(IntPtr thisPtr) => global::Microsoft.UI.Content.ContentIsland.FromAbi(thisPtr);
        public static IntPtr FromManaged(global::Microsoft.UI.Content.ContentIsland obj) => obj is null ? IntPtr.Zero : CreateMarshaler2(obj).Detach();
        public static unsafe MarshalInterfaceHelper<global::Microsoft.UI.Content.ContentIsland>.MarshalerArray CreateMarshalerArray(global::Microsoft.UI.Content.ContentIsland[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Content.ContentIsland>.CreateMarshalerArray2(array, (o) => CreateMarshaler2(o));
        public static (int length, IntPtr data) GetAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Content.ContentIsland>.GetAbiArray(box);
        public static unsafe global::Microsoft.UI.Content.ContentIsland[] FromAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Content.ContentIsland>.FromAbiArray(box, FromAbi);
        public static void CopyAbiArray(global::Microsoft.UI.Content.ContentIsland[] array, object box) => MarshalInterfaceHelper<global::Microsoft.UI.Content.ContentIsland>.CopyAbiArray(array, box, FromAbi);
        public static (int length, IntPtr data) FromManagedArray(global::Microsoft.UI.Content.ContentIsland[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Content.ContentIsland>.FromManagedArray(array, (o) => FromManaged(o));
        public static void DisposeMarshaler(IObjectReference value) => MarshalInspectable<object>.DisposeMarshaler(value);
        public static void DisposeMarshalerArray(MarshalInterfaceHelper<global::Microsoft.UI.Content.ContentIsland>.MarshalerArray array) => MarshalInterfaceHelper<global::Microsoft.UI.Content.ContentIsland>.DisposeMarshalerArray(array);
        public static void DisposeAbi(IntPtr abi) => MarshalInspectable<object>.DisposeAbi(abi);
        public static unsafe void DisposeAbiArray(object box) => MarshalInspectable<object>.DisposeAbiArray(box);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    internal sealed class ContentIslandRcwFactoryAttribute : global::WinRT.WinRTImplementationTypeRcwFactoryAttribute
    {
        public override object CreateInstance(global::WinRT.IInspectable inspectable)
            => new global::Microsoft.UI.Content.ContentIsland(inspectable.ObjRef);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    public struct ContentIslandAutomationProviderRequestedEventArgs
    {

        public static IObjectReference CreateMarshaler(global::Microsoft.UI.Content.ContentIslandAutomationProviderRequestedEventArgs obj) => obj is null ? null : MarshalInspectable<global::Microsoft.UI.Content.ContentIslandAutomationProviderRequestedEventArgs>.CreateMarshaler<IUnknownVftbl>(obj, global::ABI.Microsoft.UI.Content.IContentIslandAutomationProviderRequestedEventArgsMethods.IID);
        public static ObjectReferenceValue CreateMarshaler2(global::Microsoft.UI.Content.ContentIslandAutomationProviderRequestedEventArgs obj) => MarshalInspectable<object>.CreateMarshaler2(obj, global::ABI.Microsoft.UI.Content.IContentIslandAutomationProviderRequestedEventArgsMethods.IID);
        public static IntPtr GetAbi(IObjectReference value) => value is null ? IntPtr.Zero : MarshalInterfaceHelper<object>.GetAbi(value);
        public static global::Microsoft.UI.Content.ContentIslandAutomationProviderRequestedEventArgs FromAbi(IntPtr thisPtr) => global::Microsoft.UI.Content.ContentIslandAutomationProviderRequestedEventArgs.FromAbi(thisPtr);
        public static IntPtr FromManaged(global::Microsoft.UI.Content.ContentIslandAutomationProviderRequestedEventArgs obj) => obj is null ? IntPtr.Zero : CreateMarshaler2(obj).Detach();
        public static unsafe MarshalInterfaceHelper<global::Microsoft.UI.Content.ContentIslandAutomationProviderRequestedEventArgs>.MarshalerArray CreateMarshalerArray(global::Microsoft.UI.Content.ContentIslandAutomationProviderRequestedEventArgs[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Content.ContentIslandAutomationProviderRequestedEventArgs>.CreateMarshalerArray2(array, (o) => CreateMarshaler2(o));
        public static (int length, IntPtr data) GetAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Content.ContentIslandAutomationProviderRequestedEventArgs>.GetAbiArray(box);
        public static unsafe global::Microsoft.UI.Content.ContentIslandAutomationProviderRequestedEventArgs[] FromAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Content.ContentIslandAutomationProviderRequestedEventArgs>.FromAbiArray(box, FromAbi);
        public static void CopyAbiArray(global::Microsoft.UI.Content.ContentIslandAutomationProviderRequestedEventArgs[] array, object box) => MarshalInterfaceHelper<global::Microsoft.UI.Content.ContentIslandAutomationProviderRequestedEventArgs>.CopyAbiArray(array, box, FromAbi);
        public static (int length, IntPtr data) FromManagedArray(global::Microsoft.UI.Content.ContentIslandAutomationProviderRequestedEventArgs[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Content.ContentIslandAutomationProviderRequestedEventArgs>.FromManagedArray(array, (o) => FromManaged(o));
        public static void DisposeMarshaler(IObjectReference value) => MarshalInspectable<object>.DisposeMarshaler(value);
        public static void DisposeMarshalerArray(MarshalInterfaceHelper<global::Microsoft.UI.Content.ContentIslandAutomationProviderRequestedEventArgs>.MarshalerArray array) => MarshalInterfaceHelper<global::Microsoft.UI.Content.ContentIslandAutomationProviderRequestedEventArgs>.DisposeMarshalerArray(array);
        public static void DisposeAbi(IntPtr abi) => MarshalInspectable<object>.DisposeAbi(abi);
        public static unsafe void DisposeAbiArray(object box) => MarshalInspectable<object>.DisposeAbiArray(box);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    internal sealed class ContentIslandAutomationProviderRequestedEventArgsRcwFactoryAttribute : global::WinRT.WinRTImplementationTypeRcwFactoryAttribute
    {
        public override object CreateInstance(global::WinRT.IInspectable inspectable)
            => new global::Microsoft.UI.Content.ContentIslandAutomationProviderRequestedEventArgs(inspectable.ObjRef);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    public struct ContentIslandEnvironment
    {

        public static IObjectReference CreateMarshaler(global::Microsoft.UI.Content.ContentIslandEnvironment obj) => obj is null ? null : MarshalInspectable<global::Microsoft.UI.Content.ContentIslandEnvironment>.CreateMarshaler<IUnknownVftbl>(obj, global::ABI.Microsoft.UI.Content.IContentIslandEnvironmentMethods.IID);
        public static ObjectReferenceValue CreateMarshaler2(global::Microsoft.UI.Content.ContentIslandEnvironment obj) => MarshalInspectable<object>.CreateMarshaler2(obj, global::ABI.Microsoft.UI.Content.IContentIslandEnvironmentMethods.IID);
        public static IntPtr GetAbi(IObjectReference value) => value is null ? IntPtr.Zero : MarshalInterfaceHelper<object>.GetAbi(value);
        public static global::Microsoft.UI.Content.ContentIslandEnvironment FromAbi(IntPtr thisPtr) => global::Microsoft.UI.Content.ContentIslandEnvironment.FromAbi(thisPtr);
        public static IntPtr FromManaged(global::Microsoft.UI.Content.ContentIslandEnvironment obj) => obj is null ? IntPtr.Zero : CreateMarshaler2(obj).Detach();
        public static unsafe MarshalInterfaceHelper<global::Microsoft.UI.Content.ContentIslandEnvironment>.MarshalerArray CreateMarshalerArray(global::Microsoft.UI.Content.ContentIslandEnvironment[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Content.ContentIslandEnvironment>.CreateMarshalerArray2(array, (o) => CreateMarshaler2(o));
        public static (int length, IntPtr data) GetAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Content.ContentIslandEnvironment>.GetAbiArray(box);
        public static unsafe global::Microsoft.UI.Content.ContentIslandEnvironment[] FromAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Content.ContentIslandEnvironment>.FromAbiArray(box, FromAbi);
        public static void CopyAbiArray(global::Microsoft.UI.Content.ContentIslandEnvironment[] array, object box) => MarshalInterfaceHelper<global::Microsoft.UI.Content.ContentIslandEnvironment>.CopyAbiArray(array, box, FromAbi);
        public static (int length, IntPtr data) FromManagedArray(global::Microsoft.UI.Content.ContentIslandEnvironment[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Content.ContentIslandEnvironment>.FromManagedArray(array, (o) => FromManaged(o));
        public static void DisposeMarshaler(IObjectReference value) => MarshalInspectable<object>.DisposeMarshaler(value);
        public static void DisposeMarshalerArray(MarshalInterfaceHelper<global::Microsoft.UI.Content.ContentIslandEnvironment>.MarshalerArray array) => MarshalInterfaceHelper<global::Microsoft.UI.Content.ContentIslandEnvironment>.DisposeMarshalerArray(array);
        public static void DisposeAbi(IntPtr abi) => MarshalInspectable<object>.DisposeAbi(abi);
        public static unsafe void DisposeAbiArray(object box) => MarshalInspectable<object>.DisposeAbiArray(box);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    internal sealed class ContentIslandEnvironmentRcwFactoryAttribute : global::WinRT.WinRTImplementationTypeRcwFactoryAttribute
    {
        public override object CreateInstance(global::WinRT.IInspectable inspectable)
            => new global::Microsoft.UI.Content.ContentIslandEnvironment(inspectable.ObjRef);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    public struct ContentIslandStateChangedEventArgs
    {

        public static IObjectReference CreateMarshaler(global::Microsoft.UI.Content.ContentIslandStateChangedEventArgs obj) => obj is null ? null : MarshalInspectable<global::Microsoft.UI.Content.ContentIslandStateChangedEventArgs>.CreateMarshaler<IUnknownVftbl>(obj, global::ABI.Microsoft.UI.Content.IContentIslandStateChangedEventArgsMethods.IID);
        public static ObjectReferenceValue CreateMarshaler2(global::Microsoft.UI.Content.ContentIslandStateChangedEventArgs obj) => MarshalInspectable<object>.CreateMarshaler2(obj, global::ABI.Microsoft.UI.Content.IContentIslandStateChangedEventArgsMethods.IID);
        public static IntPtr GetAbi(IObjectReference value) => value is null ? IntPtr.Zero : MarshalInterfaceHelper<object>.GetAbi(value);
        public static global::Microsoft.UI.Content.ContentIslandStateChangedEventArgs FromAbi(IntPtr thisPtr) => global::Microsoft.UI.Content.ContentIslandStateChangedEventArgs.FromAbi(thisPtr);
        public static IntPtr FromManaged(global::Microsoft.UI.Content.ContentIslandStateChangedEventArgs obj) => obj is null ? IntPtr.Zero : CreateMarshaler2(obj).Detach();
        public static unsafe MarshalInterfaceHelper<global::Microsoft.UI.Content.ContentIslandStateChangedEventArgs>.MarshalerArray CreateMarshalerArray(global::Microsoft.UI.Content.ContentIslandStateChangedEventArgs[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Content.ContentIslandStateChangedEventArgs>.CreateMarshalerArray2(array, (o) => CreateMarshaler2(o));
        public static (int length, IntPtr data) GetAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Content.ContentIslandStateChangedEventArgs>.GetAbiArray(box);
        public static unsafe global::Microsoft.UI.Content.ContentIslandStateChangedEventArgs[] FromAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Content.ContentIslandStateChangedEventArgs>.FromAbiArray(box, FromAbi);
        public static void CopyAbiArray(global::Microsoft.UI.Content.ContentIslandStateChangedEventArgs[] array, object box) => MarshalInterfaceHelper<global::Microsoft.UI.Content.ContentIslandStateChangedEventArgs>.CopyAbiArray(array, box, FromAbi);
        public static (int length, IntPtr data) FromManagedArray(global::Microsoft.UI.Content.ContentIslandStateChangedEventArgs[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Content.ContentIslandStateChangedEventArgs>.FromManagedArray(array, (o) => FromManaged(o));
        public static void DisposeMarshaler(IObjectReference value) => MarshalInspectable<object>.DisposeMarshaler(value);
        public static void DisposeMarshalerArray(MarshalInterfaceHelper<global::Microsoft.UI.Content.ContentIslandStateChangedEventArgs>.MarshalerArray array) => MarshalInterfaceHelper<global::Microsoft.UI.Content.ContentIslandStateChangedEventArgs>.DisposeMarshalerArray(array);
        public static void DisposeAbi(IntPtr abi) => MarshalInspectable<object>.DisposeAbi(abi);
        public static unsafe void DisposeAbiArray(object box) => MarshalInspectable<object>.DisposeAbiArray(box);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    internal sealed class ContentIslandStateChangedEventArgsRcwFactoryAttribute : global::WinRT.WinRTImplementationTypeRcwFactoryAttribute
    {
        public override object CreateInstance(global::WinRT.IInspectable inspectable)
            => new global::Microsoft.UI.Content.ContentIslandStateChangedEventArgs(inspectable.ObjRef);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    public struct ContentSite
    {

        public static IObjectReference CreateMarshaler(global::Microsoft.UI.Content.ContentSite obj) => obj is null ? null : MarshalInspectable<global::Microsoft.UI.Content.ContentSite>.CreateMarshaler<IUnknownVftbl>(obj, global::ABI.Microsoft.UI.Content.IContentSiteMethods.IID);
        public static ObjectReferenceValue CreateMarshaler2(global::Microsoft.UI.Content.ContentSite obj) => MarshalInspectable<object>.CreateMarshaler2(obj, global::ABI.Microsoft.UI.Content.IContentSiteMethods.IID);
        public static IntPtr GetAbi(IObjectReference value) => value is null ? IntPtr.Zero : MarshalInterfaceHelper<object>.GetAbi(value);
        public static global::Microsoft.UI.Content.ContentSite FromAbi(IntPtr thisPtr) => global::Microsoft.UI.Content.ContentSite.FromAbi(thisPtr);
        public static IntPtr FromManaged(global::Microsoft.UI.Content.ContentSite obj) => obj is null ? IntPtr.Zero : CreateMarshaler2(obj).Detach();
        public static unsafe MarshalInterfaceHelper<global::Microsoft.UI.Content.ContentSite>.MarshalerArray CreateMarshalerArray(global::Microsoft.UI.Content.ContentSite[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Content.ContentSite>.CreateMarshalerArray2(array, (o) => CreateMarshaler2(o));
        public static (int length, IntPtr data) GetAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Content.ContentSite>.GetAbiArray(box);
        public static unsafe global::Microsoft.UI.Content.ContentSite[] FromAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Content.ContentSite>.FromAbiArray(box, FromAbi);
        public static void CopyAbiArray(global::Microsoft.UI.Content.ContentSite[] array, object box) => MarshalInterfaceHelper<global::Microsoft.UI.Content.ContentSite>.CopyAbiArray(array, box, FromAbi);
        public static (int length, IntPtr data) FromManagedArray(global::Microsoft.UI.Content.ContentSite[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Content.ContentSite>.FromManagedArray(array, (o) => FromManaged(o));
        public static void DisposeMarshaler(IObjectReference value) => MarshalInspectable<object>.DisposeMarshaler(value);
        public static void DisposeMarshalerArray(MarshalInterfaceHelper<global::Microsoft.UI.Content.ContentSite>.MarshalerArray array) => MarshalInterfaceHelper<global::Microsoft.UI.Content.ContentSite>.DisposeMarshalerArray(array);
        public static void DisposeAbi(IntPtr abi) => MarshalInspectable<object>.DisposeAbi(abi);
        public static unsafe void DisposeAbiArray(object box) => MarshalInspectable<object>.DisposeAbiArray(box);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    internal sealed class ContentSiteRcwFactoryAttribute : global::WinRT.WinRTImplementationTypeRcwFactoryAttribute
    {
        public override object CreateInstance(global::WinRT.IInspectable inspectable)
            => new global::Microsoft.UI.Content.ContentSite(inspectable.ObjRef);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    public struct ContentSiteAutomationProviderRequestedEventArgs
    {

        public static IObjectReference CreateMarshaler(global::Microsoft.UI.Content.ContentSiteAutomationProviderRequestedEventArgs obj) => obj is null ? null : MarshalInspectable<global::Microsoft.UI.Content.ContentSiteAutomationProviderRequestedEventArgs>.CreateMarshaler<IUnknownVftbl>(obj, global::ABI.Microsoft.UI.Content.IContentSiteAutomationProviderRequestedEventArgsMethods.IID);
        public static ObjectReferenceValue CreateMarshaler2(global::Microsoft.UI.Content.ContentSiteAutomationProviderRequestedEventArgs obj) => MarshalInspectable<object>.CreateMarshaler2(obj, global::ABI.Microsoft.UI.Content.IContentSiteAutomationProviderRequestedEventArgsMethods.IID);
        public static IntPtr GetAbi(IObjectReference value) => value is null ? IntPtr.Zero : MarshalInterfaceHelper<object>.GetAbi(value);
        public static global::Microsoft.UI.Content.ContentSiteAutomationProviderRequestedEventArgs FromAbi(IntPtr thisPtr) => global::Microsoft.UI.Content.ContentSiteAutomationProviderRequestedEventArgs.FromAbi(thisPtr);
        public static IntPtr FromManaged(global::Microsoft.UI.Content.ContentSiteAutomationProviderRequestedEventArgs obj) => obj is null ? IntPtr.Zero : CreateMarshaler2(obj).Detach();
        public static unsafe MarshalInterfaceHelper<global::Microsoft.UI.Content.ContentSiteAutomationProviderRequestedEventArgs>.MarshalerArray CreateMarshalerArray(global::Microsoft.UI.Content.ContentSiteAutomationProviderRequestedEventArgs[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Content.ContentSiteAutomationProviderRequestedEventArgs>.CreateMarshalerArray2(array, (o) => CreateMarshaler2(o));
        public static (int length, IntPtr data) GetAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Content.ContentSiteAutomationProviderRequestedEventArgs>.GetAbiArray(box);
        public static unsafe global::Microsoft.UI.Content.ContentSiteAutomationProviderRequestedEventArgs[] FromAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Content.ContentSiteAutomationProviderRequestedEventArgs>.FromAbiArray(box, FromAbi);
        public static void CopyAbiArray(global::Microsoft.UI.Content.ContentSiteAutomationProviderRequestedEventArgs[] array, object box) => MarshalInterfaceHelper<global::Microsoft.UI.Content.ContentSiteAutomationProviderRequestedEventArgs>.CopyAbiArray(array, box, FromAbi);
        public static (int length, IntPtr data) FromManagedArray(global::Microsoft.UI.Content.ContentSiteAutomationProviderRequestedEventArgs[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Content.ContentSiteAutomationProviderRequestedEventArgs>.FromManagedArray(array, (o) => FromManaged(o));
        public static void DisposeMarshaler(IObjectReference value) => MarshalInspectable<object>.DisposeMarshaler(value);
        public static void DisposeMarshalerArray(MarshalInterfaceHelper<global::Microsoft.UI.Content.ContentSiteAutomationProviderRequestedEventArgs>.MarshalerArray array) => MarshalInterfaceHelper<global::Microsoft.UI.Content.ContentSiteAutomationProviderRequestedEventArgs>.DisposeMarshalerArray(array);
        public static void DisposeAbi(IntPtr abi) => MarshalInspectable<object>.DisposeAbi(abi);
        public static unsafe void DisposeAbiArray(object box) => MarshalInspectable<object>.DisposeAbiArray(box);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    internal sealed class ContentSiteAutomationProviderRequestedEventArgsRcwFactoryAttribute : global::WinRT.WinRTImplementationTypeRcwFactoryAttribute
    {
        public override object CreateInstance(global::WinRT.IInspectable inspectable)
            => new global::Microsoft.UI.Content.ContentSiteAutomationProviderRequestedEventArgs(inspectable.ObjRef);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    public struct ContentSiteEnvironment
    {

        public static IObjectReference CreateMarshaler(global::Microsoft.UI.Content.ContentSiteEnvironment obj) => obj is null ? null : MarshalInspectable<global::Microsoft.UI.Content.ContentSiteEnvironment>.CreateMarshaler<IUnknownVftbl>(obj, global::ABI.Microsoft.UI.Content.IContentSiteEnvironmentMethods.IID);
        public static ObjectReferenceValue CreateMarshaler2(global::Microsoft.UI.Content.ContentSiteEnvironment obj) => MarshalInspectable<object>.CreateMarshaler2(obj, global::ABI.Microsoft.UI.Content.IContentSiteEnvironmentMethods.IID);
        public static IntPtr GetAbi(IObjectReference value) => value is null ? IntPtr.Zero : MarshalInterfaceHelper<object>.GetAbi(value);
        public static global::Microsoft.UI.Content.ContentSiteEnvironment FromAbi(IntPtr thisPtr) => global::Microsoft.UI.Content.ContentSiteEnvironment.FromAbi(thisPtr);
        public static IntPtr FromManaged(global::Microsoft.UI.Content.ContentSiteEnvironment obj) => obj is null ? IntPtr.Zero : CreateMarshaler2(obj).Detach();
        public static unsafe MarshalInterfaceHelper<global::Microsoft.UI.Content.ContentSiteEnvironment>.MarshalerArray CreateMarshalerArray(global::Microsoft.UI.Content.ContentSiteEnvironment[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Content.ContentSiteEnvironment>.CreateMarshalerArray2(array, (o) => CreateMarshaler2(o));
        public static (int length, IntPtr data) GetAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Content.ContentSiteEnvironment>.GetAbiArray(box);
        public static unsafe global::Microsoft.UI.Content.ContentSiteEnvironment[] FromAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Content.ContentSiteEnvironment>.FromAbiArray(box, FromAbi);
        public static void CopyAbiArray(global::Microsoft.UI.Content.ContentSiteEnvironment[] array, object box) => MarshalInterfaceHelper<global::Microsoft.UI.Content.ContentSiteEnvironment>.CopyAbiArray(array, box, FromAbi);
        public static (int length, IntPtr data) FromManagedArray(global::Microsoft.UI.Content.ContentSiteEnvironment[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Content.ContentSiteEnvironment>.FromManagedArray(array, (o) => FromManaged(o));
        public static void DisposeMarshaler(IObjectReference value) => MarshalInspectable<object>.DisposeMarshaler(value);
        public static void DisposeMarshalerArray(MarshalInterfaceHelper<global::Microsoft.UI.Content.ContentSiteEnvironment>.MarshalerArray array) => MarshalInterfaceHelper<global::Microsoft.UI.Content.ContentSiteEnvironment>.DisposeMarshalerArray(array);
        public static void DisposeAbi(IntPtr abi) => MarshalInspectable<object>.DisposeAbi(abi);
        public static unsafe void DisposeAbiArray(object box) => MarshalInspectable<object>.DisposeAbiArray(box);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    internal sealed class ContentSiteEnvironmentRcwFactoryAttribute : global::WinRT.WinRTImplementationTypeRcwFactoryAttribute
    {
        public override object CreateInstance(global::WinRT.IInspectable inspectable)
            => new global::Microsoft.UI.Content.ContentSiteEnvironment(inspectable.ObjRef);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    public struct ContentSiteEnvironmentView
    {

        public static IObjectReference CreateMarshaler(global::Microsoft.UI.Content.ContentSiteEnvironmentView obj) => obj is null ? null : MarshalInspectable<global::Microsoft.UI.Content.ContentSiteEnvironmentView>.CreateMarshaler<IUnknownVftbl>(obj, global::ABI.Microsoft.UI.Content.IContentSiteEnvironmentViewMethods.IID);
        public static ObjectReferenceValue CreateMarshaler2(global::Microsoft.UI.Content.ContentSiteEnvironmentView obj) => MarshalInspectable<object>.CreateMarshaler2(obj, global::ABI.Microsoft.UI.Content.IContentSiteEnvironmentViewMethods.IID);
        public static IntPtr GetAbi(IObjectReference value) => value is null ? IntPtr.Zero : MarshalInterfaceHelper<object>.GetAbi(value);
        public static global::Microsoft.UI.Content.ContentSiteEnvironmentView FromAbi(IntPtr thisPtr) => global::Microsoft.UI.Content.ContentSiteEnvironmentView.FromAbi(thisPtr);
        public static IntPtr FromManaged(global::Microsoft.UI.Content.ContentSiteEnvironmentView obj) => obj is null ? IntPtr.Zero : CreateMarshaler2(obj).Detach();
        public static unsafe MarshalInterfaceHelper<global::Microsoft.UI.Content.ContentSiteEnvironmentView>.MarshalerArray CreateMarshalerArray(global::Microsoft.UI.Content.ContentSiteEnvironmentView[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Content.ContentSiteEnvironmentView>.CreateMarshalerArray2(array, (o) => CreateMarshaler2(o));
        public static (int length, IntPtr data) GetAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Content.ContentSiteEnvironmentView>.GetAbiArray(box);
        public static unsafe global::Microsoft.UI.Content.ContentSiteEnvironmentView[] FromAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Content.ContentSiteEnvironmentView>.FromAbiArray(box, FromAbi);
        public static void CopyAbiArray(global::Microsoft.UI.Content.ContentSiteEnvironmentView[] array, object box) => MarshalInterfaceHelper<global::Microsoft.UI.Content.ContentSiteEnvironmentView>.CopyAbiArray(array, box, FromAbi);
        public static (int length, IntPtr data) FromManagedArray(global::Microsoft.UI.Content.ContentSiteEnvironmentView[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Content.ContentSiteEnvironmentView>.FromManagedArray(array, (o) => FromManaged(o));
        public static void DisposeMarshaler(IObjectReference value) => MarshalInspectable<object>.DisposeMarshaler(value);
        public static void DisposeMarshalerArray(MarshalInterfaceHelper<global::Microsoft.UI.Content.ContentSiteEnvironmentView>.MarshalerArray array) => MarshalInterfaceHelper<global::Microsoft.UI.Content.ContentSiteEnvironmentView>.DisposeMarshalerArray(array);
        public static void DisposeAbi(IntPtr abi) => MarshalInspectable<object>.DisposeAbi(abi);
        public static unsafe void DisposeAbiArray(object box) => MarshalInspectable<object>.DisposeAbiArray(box);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    internal sealed class ContentSiteEnvironmentViewRcwFactoryAttribute : global::WinRT.WinRTImplementationTypeRcwFactoryAttribute
    {
        public override object CreateInstance(global::WinRT.IInspectable inspectable)
            => new global::Microsoft.UI.Content.ContentSiteEnvironmentView(inspectable.ObjRef);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    public struct ContentSiteRequestedStateChangedEventArgs
    {

        public static IObjectReference CreateMarshaler(global::Microsoft.UI.Content.ContentSiteRequestedStateChangedEventArgs obj) => obj is null ? null : MarshalInspectable<global::Microsoft.UI.Content.ContentSiteRequestedStateChangedEventArgs>.CreateMarshaler<IUnknownVftbl>(obj, global::ABI.Microsoft.UI.Content.IContentSiteRequestedStateChangedEventArgsMethods.IID);
        public static ObjectReferenceValue CreateMarshaler2(global::Microsoft.UI.Content.ContentSiteRequestedStateChangedEventArgs obj) => MarshalInspectable<object>.CreateMarshaler2(obj, global::ABI.Microsoft.UI.Content.IContentSiteRequestedStateChangedEventArgsMethods.IID);
        public static IntPtr GetAbi(IObjectReference value) => value is null ? IntPtr.Zero : MarshalInterfaceHelper<object>.GetAbi(value);
        public static global::Microsoft.UI.Content.ContentSiteRequestedStateChangedEventArgs FromAbi(IntPtr thisPtr) => global::Microsoft.UI.Content.ContentSiteRequestedStateChangedEventArgs.FromAbi(thisPtr);
        public static IntPtr FromManaged(global::Microsoft.UI.Content.ContentSiteRequestedStateChangedEventArgs obj) => obj is null ? IntPtr.Zero : CreateMarshaler2(obj).Detach();
        public static unsafe MarshalInterfaceHelper<global::Microsoft.UI.Content.ContentSiteRequestedStateChangedEventArgs>.MarshalerArray CreateMarshalerArray(global::Microsoft.UI.Content.ContentSiteRequestedStateChangedEventArgs[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Content.ContentSiteRequestedStateChangedEventArgs>.CreateMarshalerArray2(array, (o) => CreateMarshaler2(o));
        public static (int length, IntPtr data) GetAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Content.ContentSiteRequestedStateChangedEventArgs>.GetAbiArray(box);
        public static unsafe global::Microsoft.UI.Content.ContentSiteRequestedStateChangedEventArgs[] FromAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Content.ContentSiteRequestedStateChangedEventArgs>.FromAbiArray(box, FromAbi);
        public static void CopyAbiArray(global::Microsoft.UI.Content.ContentSiteRequestedStateChangedEventArgs[] array, object box) => MarshalInterfaceHelper<global::Microsoft.UI.Content.ContentSiteRequestedStateChangedEventArgs>.CopyAbiArray(array, box, FromAbi);
        public static (int length, IntPtr data) FromManagedArray(global::Microsoft.UI.Content.ContentSiteRequestedStateChangedEventArgs[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Content.ContentSiteRequestedStateChangedEventArgs>.FromManagedArray(array, (o) => FromManaged(o));
        public static void DisposeMarshaler(IObjectReference value) => MarshalInspectable<object>.DisposeMarshaler(value);
        public static void DisposeMarshalerArray(MarshalInterfaceHelper<global::Microsoft.UI.Content.ContentSiteRequestedStateChangedEventArgs>.MarshalerArray array) => MarshalInterfaceHelper<global::Microsoft.UI.Content.ContentSiteRequestedStateChangedEventArgs>.DisposeMarshalerArray(array);
        public static void DisposeAbi(IntPtr abi) => MarshalInspectable<object>.DisposeAbi(abi);
        public static unsafe void DisposeAbiArray(object box) => MarshalInspectable<object>.DisposeAbiArray(box);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    internal sealed class ContentSiteRequestedStateChangedEventArgsRcwFactoryAttribute : global::WinRT.WinRTImplementationTypeRcwFactoryAttribute
    {
        public override object CreateInstance(global::WinRT.IInspectable inspectable)
            => new global::Microsoft.UI.Content.ContentSiteRequestedStateChangedEventArgs(inspectable.ObjRef);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    public struct ContentSiteView
    {

        public static IObjectReference CreateMarshaler(global::Microsoft.UI.Content.ContentSiteView obj) => obj is null ? null : MarshalInspectable<global::Microsoft.UI.Content.ContentSiteView>.CreateMarshaler<IUnknownVftbl>(obj, global::ABI.Microsoft.UI.Content.IContentSiteViewMethods.IID);
        public static ObjectReferenceValue CreateMarshaler2(global::Microsoft.UI.Content.ContentSiteView obj) => MarshalInspectable<object>.CreateMarshaler2(obj, global::ABI.Microsoft.UI.Content.IContentSiteViewMethods.IID);
        public static IntPtr GetAbi(IObjectReference value) => value is null ? IntPtr.Zero : MarshalInterfaceHelper<object>.GetAbi(value);
        public static global::Microsoft.UI.Content.ContentSiteView FromAbi(IntPtr thisPtr) => global::Microsoft.UI.Content.ContentSiteView.FromAbi(thisPtr);
        public static IntPtr FromManaged(global::Microsoft.UI.Content.ContentSiteView obj) => obj is null ? IntPtr.Zero : CreateMarshaler2(obj).Detach();
        public static unsafe MarshalInterfaceHelper<global::Microsoft.UI.Content.ContentSiteView>.MarshalerArray CreateMarshalerArray(global::Microsoft.UI.Content.ContentSiteView[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Content.ContentSiteView>.CreateMarshalerArray2(array, (o) => CreateMarshaler2(o));
        public static (int length, IntPtr data) GetAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Content.ContentSiteView>.GetAbiArray(box);
        public static unsafe global::Microsoft.UI.Content.ContentSiteView[] FromAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Content.ContentSiteView>.FromAbiArray(box, FromAbi);
        public static void CopyAbiArray(global::Microsoft.UI.Content.ContentSiteView[] array, object box) => MarshalInterfaceHelper<global::Microsoft.UI.Content.ContentSiteView>.CopyAbiArray(array, box, FromAbi);
        public static (int length, IntPtr data) FromManagedArray(global::Microsoft.UI.Content.ContentSiteView[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Content.ContentSiteView>.FromManagedArray(array, (o) => FromManaged(o));
        public static void DisposeMarshaler(IObjectReference value) => MarshalInspectable<object>.DisposeMarshaler(value);
        public static void DisposeMarshalerArray(MarshalInterfaceHelper<global::Microsoft.UI.Content.ContentSiteView>.MarshalerArray array) => MarshalInterfaceHelper<global::Microsoft.UI.Content.ContentSiteView>.DisposeMarshalerArray(array);
        public static void DisposeAbi(IntPtr abi) => MarshalInspectable<object>.DisposeAbi(abi);
        public static unsafe void DisposeAbiArray(object box) => MarshalInspectable<object>.DisposeAbiArray(box);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    internal sealed class ContentSiteViewRcwFactoryAttribute : global::WinRT.WinRTImplementationTypeRcwFactoryAttribute
    {
        public override object CreateInstance(global::WinRT.IInspectable inspectable)
            => new global::Microsoft.UI.Content.ContentSiteView(inspectable.ObjRef);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    public struct CoreWindowSiteBridge
    {

        public static IObjectReference CreateMarshaler(global::Microsoft.UI.Content.CoreWindowSiteBridge obj) => obj is null ? null : MarshalInspectable<global::Microsoft.UI.Content.CoreWindowSiteBridge>.CreateMarshaler<IUnknownVftbl>(obj, global::ABI.Microsoft.UI.Content.ICoreWindowSiteBridgeMethods.IID);
        public static ObjectReferenceValue CreateMarshaler2(global::Microsoft.UI.Content.CoreWindowSiteBridge obj) => MarshalInspectable<object>.CreateMarshaler2(obj, global::ABI.Microsoft.UI.Content.ICoreWindowSiteBridgeMethods.IID);
        public static IntPtr GetAbi(IObjectReference value) => value is null ? IntPtr.Zero : MarshalInterfaceHelper<object>.GetAbi(value);
        public static global::Microsoft.UI.Content.CoreWindowSiteBridge FromAbi(IntPtr thisPtr) => global::Microsoft.UI.Content.CoreWindowSiteBridge.FromAbi(thisPtr);
        public static IntPtr FromManaged(global::Microsoft.UI.Content.CoreWindowSiteBridge obj) => obj is null ? IntPtr.Zero : CreateMarshaler2(obj).Detach();
        public static unsafe MarshalInterfaceHelper<global::Microsoft.UI.Content.CoreWindowSiteBridge>.MarshalerArray CreateMarshalerArray(global::Microsoft.UI.Content.CoreWindowSiteBridge[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Content.CoreWindowSiteBridge>.CreateMarshalerArray2(array, (o) => CreateMarshaler2(o));
        public static (int length, IntPtr data) GetAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Content.CoreWindowSiteBridge>.GetAbiArray(box);
        public static unsafe global::Microsoft.UI.Content.CoreWindowSiteBridge[] FromAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Content.CoreWindowSiteBridge>.FromAbiArray(box, FromAbi);
        public static void CopyAbiArray(global::Microsoft.UI.Content.CoreWindowSiteBridge[] array, object box) => MarshalInterfaceHelper<global::Microsoft.UI.Content.CoreWindowSiteBridge>.CopyAbiArray(array, box, FromAbi);
        public static (int length, IntPtr data) FromManagedArray(global::Microsoft.UI.Content.CoreWindowSiteBridge[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Content.CoreWindowSiteBridge>.FromManagedArray(array, (o) => FromManaged(o));
        public static void DisposeMarshaler(IObjectReference value) => MarshalInspectable<object>.DisposeMarshaler(value);
        public static void DisposeMarshalerArray(MarshalInterfaceHelper<global::Microsoft.UI.Content.CoreWindowSiteBridge>.MarshalerArray array) => MarshalInterfaceHelper<global::Microsoft.UI.Content.CoreWindowSiteBridge>.DisposeMarshalerArray(array);
        public static void DisposeAbi(IntPtr abi) => MarshalInspectable<object>.DisposeAbi(abi);
        public static unsafe void DisposeAbiArray(object box) => MarshalInspectable<object>.DisposeAbiArray(box);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    internal sealed class CoreWindowSiteBridgeRcwFactoryAttribute : global::WinRT.WinRTImplementationTypeRcwFactoryAttribute
    {
        public override object CreateInstance(global::WinRT.IInspectable inspectable)
            => new global::Microsoft.UI.Content.CoreWindowSiteBridge(inspectable.ObjRef);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    public struct CoreWindowTopLevelWindowBridge
    {

        public static IObjectReference CreateMarshaler(global::Microsoft.UI.Content.CoreWindowTopLevelWindowBridge obj) => obj is null ? null : MarshalInterface<global::Microsoft.UI.Content.IContentNodeOwner>.CreateMarshaler(obj);
        public static ObjectReferenceValue CreateMarshaler2(global::Microsoft.UI.Content.CoreWindowTopLevelWindowBridge obj) => MarshalInterface<global::Microsoft.UI.Content.IContentNodeOwner>.CreateMarshaler2(obj, global::ABI.Microsoft.UI.Content.IContentNodeOwnerMethods.IID);
        public static IntPtr GetAbi(IObjectReference value) => value is null ? IntPtr.Zero : MarshalInterfaceHelper<object>.GetAbi(value);
        public static global::Microsoft.UI.Content.CoreWindowTopLevelWindowBridge FromAbi(IntPtr thisPtr) => global::Microsoft.UI.Content.CoreWindowTopLevelWindowBridge.FromAbi(thisPtr);
        public static IntPtr FromManaged(global::Microsoft.UI.Content.CoreWindowTopLevelWindowBridge obj) => obj is null ? IntPtr.Zero : CreateMarshaler2(obj).Detach();
        public static unsafe MarshalInterfaceHelper<global::Microsoft.UI.Content.CoreWindowTopLevelWindowBridge>.MarshalerArray CreateMarshalerArray(global::Microsoft.UI.Content.CoreWindowTopLevelWindowBridge[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Content.CoreWindowTopLevelWindowBridge>.CreateMarshalerArray2(array, (o) => CreateMarshaler2(o));
        public static (int length, IntPtr data) GetAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Content.CoreWindowTopLevelWindowBridge>.GetAbiArray(box);
        public static unsafe global::Microsoft.UI.Content.CoreWindowTopLevelWindowBridge[] FromAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Content.CoreWindowTopLevelWindowBridge>.FromAbiArray(box, FromAbi);
        public static void CopyAbiArray(global::Microsoft.UI.Content.CoreWindowTopLevelWindowBridge[] array, object box) => MarshalInterfaceHelper<global::Microsoft.UI.Content.CoreWindowTopLevelWindowBridge>.CopyAbiArray(array, box, FromAbi);
        public static (int length, IntPtr data) FromManagedArray(global::Microsoft.UI.Content.CoreWindowTopLevelWindowBridge[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Content.CoreWindowTopLevelWindowBridge>.FromManagedArray(array, (o) => FromManaged(o));
        public static void DisposeMarshaler(IObjectReference value) => MarshalInspectable<object>.DisposeMarshaler(value);
        public static void DisposeMarshalerArray(MarshalInterfaceHelper<global::Microsoft.UI.Content.CoreWindowTopLevelWindowBridge>.MarshalerArray array) => MarshalInterfaceHelper<global::Microsoft.UI.Content.CoreWindowTopLevelWindowBridge>.DisposeMarshalerArray(array);
        public static void DisposeAbi(IntPtr abi) => MarshalInspectable<object>.DisposeAbi(abi);
        public static unsafe void DisposeAbiArray(object box) => MarshalInspectable<object>.DisposeAbiArray(box);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    internal sealed class CoreWindowTopLevelWindowBridgeRcwFactoryAttribute : global::WinRT.WinRTImplementationTypeRcwFactoryAttribute
    {
        public override object CreateInstance(global::WinRT.IInspectable inspectable)
            => new global::Microsoft.UI.Content.CoreWindowTopLevelWindowBridge(inspectable.ObjRef);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    public struct DesktopAttachedSiteBridge
    {

        public static IObjectReference CreateMarshaler(global::Microsoft.UI.Content.DesktopAttachedSiteBridge obj) => obj is null ? null : MarshalInspectable<global::Microsoft.UI.Content.DesktopAttachedSiteBridge>.CreateMarshaler<IUnknownVftbl>(obj, global::ABI.Microsoft.UI.Content.IDesktopAttachedSiteBridgeMethods.IID);
        public static ObjectReferenceValue CreateMarshaler2(global::Microsoft.UI.Content.DesktopAttachedSiteBridge obj) => MarshalInspectable<object>.CreateMarshaler2(obj, global::ABI.Microsoft.UI.Content.IDesktopAttachedSiteBridgeMethods.IID);
        public static IntPtr GetAbi(IObjectReference value) => value is null ? IntPtr.Zero : MarshalInterfaceHelper<object>.GetAbi(value);
        public static global::Microsoft.UI.Content.DesktopAttachedSiteBridge FromAbi(IntPtr thisPtr) => global::Microsoft.UI.Content.DesktopAttachedSiteBridge.FromAbi(thisPtr);
        public static IntPtr FromManaged(global::Microsoft.UI.Content.DesktopAttachedSiteBridge obj) => obj is null ? IntPtr.Zero : CreateMarshaler2(obj).Detach();
        public static unsafe MarshalInterfaceHelper<global::Microsoft.UI.Content.DesktopAttachedSiteBridge>.MarshalerArray CreateMarshalerArray(global::Microsoft.UI.Content.DesktopAttachedSiteBridge[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Content.DesktopAttachedSiteBridge>.CreateMarshalerArray2(array, (o) => CreateMarshaler2(o));
        public static (int length, IntPtr data) GetAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Content.DesktopAttachedSiteBridge>.GetAbiArray(box);
        public static unsafe global::Microsoft.UI.Content.DesktopAttachedSiteBridge[] FromAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Content.DesktopAttachedSiteBridge>.FromAbiArray(box, FromAbi);
        public static void CopyAbiArray(global::Microsoft.UI.Content.DesktopAttachedSiteBridge[] array, object box) => MarshalInterfaceHelper<global::Microsoft.UI.Content.DesktopAttachedSiteBridge>.CopyAbiArray(array, box, FromAbi);
        public static (int length, IntPtr data) FromManagedArray(global::Microsoft.UI.Content.DesktopAttachedSiteBridge[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Content.DesktopAttachedSiteBridge>.FromManagedArray(array, (o) => FromManaged(o));
        public static void DisposeMarshaler(IObjectReference value) => MarshalInspectable<object>.DisposeMarshaler(value);
        public static void DisposeMarshalerArray(MarshalInterfaceHelper<global::Microsoft.UI.Content.DesktopAttachedSiteBridge>.MarshalerArray array) => MarshalInterfaceHelper<global::Microsoft.UI.Content.DesktopAttachedSiteBridge>.DisposeMarshalerArray(array);
        public static void DisposeAbi(IntPtr abi) => MarshalInspectable<object>.DisposeAbi(abi);
        public static unsafe void DisposeAbiArray(object box) => MarshalInspectable<object>.DisposeAbiArray(box);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    internal sealed class DesktopAttachedSiteBridgeRcwFactoryAttribute : global::WinRT.WinRTImplementationTypeRcwFactoryAttribute
    {
        public override object CreateInstance(global::WinRT.IInspectable inspectable)
            => new global::Microsoft.UI.Content.DesktopAttachedSiteBridge(inspectable.ObjRef);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    public struct DesktopChildSiteBridge
    {

        public static IObjectReference CreateMarshaler(global::Microsoft.UI.Content.DesktopChildSiteBridge obj) => obj is null ? null : MarshalInspectable<global::Microsoft.UI.Content.DesktopChildSiteBridge>.CreateMarshaler<IUnknownVftbl>(obj, global::ABI.Microsoft.UI.Content.IDesktopChildSiteBridgeMethods.IID);
        public static ObjectReferenceValue CreateMarshaler2(global::Microsoft.UI.Content.DesktopChildSiteBridge obj) => MarshalInspectable<object>.CreateMarshaler2(obj, global::ABI.Microsoft.UI.Content.IDesktopChildSiteBridgeMethods.IID);
        public static IntPtr GetAbi(IObjectReference value) => value is null ? IntPtr.Zero : MarshalInterfaceHelper<object>.GetAbi(value);
        public static global::Microsoft.UI.Content.DesktopChildSiteBridge FromAbi(IntPtr thisPtr) => global::Microsoft.UI.Content.DesktopChildSiteBridge.FromAbi(thisPtr);
        public static IntPtr FromManaged(global::Microsoft.UI.Content.DesktopChildSiteBridge obj) => obj is null ? IntPtr.Zero : CreateMarshaler2(obj).Detach();
        public static unsafe MarshalInterfaceHelper<global::Microsoft.UI.Content.DesktopChildSiteBridge>.MarshalerArray CreateMarshalerArray(global::Microsoft.UI.Content.DesktopChildSiteBridge[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Content.DesktopChildSiteBridge>.CreateMarshalerArray2(array, (o) => CreateMarshaler2(o));
        public static (int length, IntPtr data) GetAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Content.DesktopChildSiteBridge>.GetAbiArray(box);
        public static unsafe global::Microsoft.UI.Content.DesktopChildSiteBridge[] FromAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Content.DesktopChildSiteBridge>.FromAbiArray(box, FromAbi);
        public static void CopyAbiArray(global::Microsoft.UI.Content.DesktopChildSiteBridge[] array, object box) => MarshalInterfaceHelper<global::Microsoft.UI.Content.DesktopChildSiteBridge>.CopyAbiArray(array, box, FromAbi);
        public static (int length, IntPtr data) FromManagedArray(global::Microsoft.UI.Content.DesktopChildSiteBridge[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Content.DesktopChildSiteBridge>.FromManagedArray(array, (o) => FromManaged(o));
        public static void DisposeMarshaler(IObjectReference value) => MarshalInspectable<object>.DisposeMarshaler(value);
        public static void DisposeMarshalerArray(MarshalInterfaceHelper<global::Microsoft.UI.Content.DesktopChildSiteBridge>.MarshalerArray array) => MarshalInterfaceHelper<global::Microsoft.UI.Content.DesktopChildSiteBridge>.DisposeMarshalerArray(array);
        public static void DisposeAbi(IntPtr abi) => MarshalInspectable<object>.DisposeAbi(abi);
        public static unsafe void DisposeAbiArray(object box) => MarshalInspectable<object>.DisposeAbiArray(box);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    internal sealed class DesktopChildSiteBridgeRcwFactoryAttribute : global::WinRT.WinRTImplementationTypeRcwFactoryAttribute
    {
        public override object CreateInstance(global::WinRT.IInspectable inspectable)
            => new global::Microsoft.UI.Content.DesktopChildSiteBridge(inspectable.ObjRef);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    public struct DesktopPopupSiteBridge
    {

        public static IObjectReference CreateMarshaler(global::Microsoft.UI.Content.DesktopPopupSiteBridge obj) => obj is null ? null : MarshalInspectable<global::Microsoft.UI.Content.DesktopPopupSiteBridge>.CreateMarshaler<IUnknownVftbl>(obj, global::ABI.Microsoft.UI.Content.IDesktopPopupSiteBridgeMethods.IID);
        public static ObjectReferenceValue CreateMarshaler2(global::Microsoft.UI.Content.DesktopPopupSiteBridge obj) => MarshalInspectable<object>.CreateMarshaler2(obj, global::ABI.Microsoft.UI.Content.IDesktopPopupSiteBridgeMethods.IID);
        public static IntPtr GetAbi(IObjectReference value) => value is null ? IntPtr.Zero : MarshalInterfaceHelper<object>.GetAbi(value);
        public static global::Microsoft.UI.Content.DesktopPopupSiteBridge FromAbi(IntPtr thisPtr) => global::Microsoft.UI.Content.DesktopPopupSiteBridge.FromAbi(thisPtr);
        public static IntPtr FromManaged(global::Microsoft.UI.Content.DesktopPopupSiteBridge obj) => obj is null ? IntPtr.Zero : CreateMarshaler2(obj).Detach();
        public static unsafe MarshalInterfaceHelper<global::Microsoft.UI.Content.DesktopPopupSiteBridge>.MarshalerArray CreateMarshalerArray(global::Microsoft.UI.Content.DesktopPopupSiteBridge[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Content.DesktopPopupSiteBridge>.CreateMarshalerArray2(array, (o) => CreateMarshaler2(o));
        public static (int length, IntPtr data) GetAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Content.DesktopPopupSiteBridge>.GetAbiArray(box);
        public static unsafe global::Microsoft.UI.Content.DesktopPopupSiteBridge[] FromAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Content.DesktopPopupSiteBridge>.FromAbiArray(box, FromAbi);
        public static void CopyAbiArray(global::Microsoft.UI.Content.DesktopPopupSiteBridge[] array, object box) => MarshalInterfaceHelper<global::Microsoft.UI.Content.DesktopPopupSiteBridge>.CopyAbiArray(array, box, FromAbi);
        public static (int length, IntPtr data) FromManagedArray(global::Microsoft.UI.Content.DesktopPopupSiteBridge[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Content.DesktopPopupSiteBridge>.FromManagedArray(array, (o) => FromManaged(o));
        public static void DisposeMarshaler(IObjectReference value) => MarshalInspectable<object>.DisposeMarshaler(value);
        public static void DisposeMarshalerArray(MarshalInterfaceHelper<global::Microsoft.UI.Content.DesktopPopupSiteBridge>.MarshalerArray array) => MarshalInterfaceHelper<global::Microsoft.UI.Content.DesktopPopupSiteBridge>.DisposeMarshalerArray(array);
        public static void DisposeAbi(IntPtr abi) => MarshalInspectable<object>.DisposeAbi(abi);
        public static unsafe void DisposeAbiArray(object box) => MarshalInspectable<object>.DisposeAbiArray(box);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    internal sealed class DesktopPopupSiteBridgeRcwFactoryAttribute : global::WinRT.WinRTImplementationTypeRcwFactoryAttribute
    {
        public override object CreateInstance(global::WinRT.IInspectable inspectable)
            => new global::Microsoft.UI.Content.DesktopPopupSiteBridge(inspectable.ObjRef);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    public struct DesktopSiteBridge
    {

        public static IObjectReference CreateMarshaler(global::Microsoft.UI.Content.DesktopSiteBridge obj) => obj is null ? null : MarshalInspectable<global::Microsoft.UI.Content.DesktopSiteBridge>.CreateMarshaler<IUnknownVftbl>(obj, global::ABI.Microsoft.UI.Content.IDesktopSiteBridgeMethods.IID);
        public static ObjectReferenceValue CreateMarshaler2(global::Microsoft.UI.Content.DesktopSiteBridge obj) => MarshalInspectable<object>.CreateMarshaler2(obj, global::ABI.Microsoft.UI.Content.IDesktopSiteBridgeMethods.IID);
        public static IntPtr GetAbi(IObjectReference value) => value is null ? IntPtr.Zero : MarshalInterfaceHelper<object>.GetAbi(value);
        public static global::Microsoft.UI.Content.DesktopSiteBridge FromAbi(IntPtr thisPtr) => global::Microsoft.UI.Content.DesktopSiteBridge.FromAbi(thisPtr);
        public static IntPtr FromManaged(global::Microsoft.UI.Content.DesktopSiteBridge obj) => obj is null ? IntPtr.Zero : CreateMarshaler2(obj).Detach();
        public static unsafe MarshalInterfaceHelper<global::Microsoft.UI.Content.DesktopSiteBridge>.MarshalerArray CreateMarshalerArray(global::Microsoft.UI.Content.DesktopSiteBridge[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Content.DesktopSiteBridge>.CreateMarshalerArray2(array, (o) => CreateMarshaler2(o));
        public static (int length, IntPtr data) GetAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Content.DesktopSiteBridge>.GetAbiArray(box);
        public static unsafe global::Microsoft.UI.Content.DesktopSiteBridge[] FromAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Content.DesktopSiteBridge>.FromAbiArray(box, FromAbi);
        public static void CopyAbiArray(global::Microsoft.UI.Content.DesktopSiteBridge[] array, object box) => MarshalInterfaceHelper<global::Microsoft.UI.Content.DesktopSiteBridge>.CopyAbiArray(array, box, FromAbi);
        public static (int length, IntPtr data) FromManagedArray(global::Microsoft.UI.Content.DesktopSiteBridge[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Content.DesktopSiteBridge>.FromManagedArray(array, (o) => FromManaged(o));
        public static void DisposeMarshaler(IObjectReference value) => MarshalInspectable<object>.DisposeMarshaler(value);
        public static void DisposeMarshalerArray(MarshalInterfaceHelper<global::Microsoft.UI.Content.DesktopSiteBridge>.MarshalerArray array) => MarshalInterfaceHelper<global::Microsoft.UI.Content.DesktopSiteBridge>.DisposeMarshalerArray(array);
        public static void DisposeAbi(IntPtr abi) => MarshalInspectable<object>.DisposeAbi(abi);
        public static unsafe void DisposeAbiArray(object box) => MarshalInspectable<object>.DisposeAbiArray(box);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    internal sealed class DesktopSiteBridgeRcwFactoryAttribute : global::WinRT.WinRTImplementationTypeRcwFactoryAttribute
    {
        public override object CreateInstance(global::WinRT.IInspectable inspectable)
            => new global::Microsoft.UI.Content.DesktopSiteBridge(inspectable.ObjRef);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    public struct EndpointConnectionEventArgs
    {

        public static IObjectReference CreateMarshaler(global::Microsoft.UI.Content.EndpointConnectionEventArgs obj) => obj is null ? null : MarshalInspectable<global::Microsoft.UI.Content.EndpointConnectionEventArgs>.CreateMarshaler<IUnknownVftbl>(obj, global::ABI.Microsoft.UI.Content.IEndpointConnectionEventArgsMethods.IID);
        public static ObjectReferenceValue CreateMarshaler2(global::Microsoft.UI.Content.EndpointConnectionEventArgs obj) => MarshalInspectable<object>.CreateMarshaler2(obj, global::ABI.Microsoft.UI.Content.IEndpointConnectionEventArgsMethods.IID);
        public static IntPtr GetAbi(IObjectReference value) => value is null ? IntPtr.Zero : MarshalInterfaceHelper<object>.GetAbi(value);
        public static global::Microsoft.UI.Content.EndpointConnectionEventArgs FromAbi(IntPtr thisPtr) => global::Microsoft.UI.Content.EndpointConnectionEventArgs.FromAbi(thisPtr);
        public static IntPtr FromManaged(global::Microsoft.UI.Content.EndpointConnectionEventArgs obj) => obj is null ? IntPtr.Zero : CreateMarshaler2(obj).Detach();
        public static unsafe MarshalInterfaceHelper<global::Microsoft.UI.Content.EndpointConnectionEventArgs>.MarshalerArray CreateMarshalerArray(global::Microsoft.UI.Content.EndpointConnectionEventArgs[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Content.EndpointConnectionEventArgs>.CreateMarshalerArray2(array, (o) => CreateMarshaler2(o));
        public static (int length, IntPtr data) GetAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Content.EndpointConnectionEventArgs>.GetAbiArray(box);
        public static unsafe global::Microsoft.UI.Content.EndpointConnectionEventArgs[] FromAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Content.EndpointConnectionEventArgs>.FromAbiArray(box, FromAbi);
        public static void CopyAbiArray(global::Microsoft.UI.Content.EndpointConnectionEventArgs[] array, object box) => MarshalInterfaceHelper<global::Microsoft.UI.Content.EndpointConnectionEventArgs>.CopyAbiArray(array, box, FromAbi);
        public static (int length, IntPtr data) FromManagedArray(global::Microsoft.UI.Content.EndpointConnectionEventArgs[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Content.EndpointConnectionEventArgs>.FromManagedArray(array, (o) => FromManaged(o));
        public static void DisposeMarshaler(IObjectReference value) => MarshalInspectable<object>.DisposeMarshaler(value);
        public static void DisposeMarshalerArray(MarshalInterfaceHelper<global::Microsoft.UI.Content.EndpointConnectionEventArgs>.MarshalerArray array) => MarshalInterfaceHelper<global::Microsoft.UI.Content.EndpointConnectionEventArgs>.DisposeMarshalerArray(array);
        public static void DisposeAbi(IntPtr abi) => MarshalInspectable<object>.DisposeAbi(abi);
        public static unsafe void DisposeAbiArray(object box) => MarshalInspectable<object>.DisposeAbiArray(box);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    internal sealed class EndpointConnectionEventArgsRcwFactoryAttribute : global::WinRT.WinRTImplementationTypeRcwFactoryAttribute
    {
        public override object CreateInstance(global::WinRT.IInspectable inspectable)
            => new global::Microsoft.UI.Content.EndpointConnectionEventArgs(inspectable.ObjRef);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    public struct EndpointRequestedStateChangedEventArgs
    {

        public static IObjectReference CreateMarshaler(global::Microsoft.UI.Content.EndpointRequestedStateChangedEventArgs obj) => obj is null ? null : MarshalInspectable<global::Microsoft.UI.Content.EndpointRequestedStateChangedEventArgs>.CreateMarshaler<IUnknownVftbl>(obj, global::ABI.Microsoft.UI.Content.IEndpointRequestedStateChangedEventArgsMethods.IID);
        public static ObjectReferenceValue CreateMarshaler2(global::Microsoft.UI.Content.EndpointRequestedStateChangedEventArgs obj) => MarshalInspectable<object>.CreateMarshaler2(obj, global::ABI.Microsoft.UI.Content.IEndpointRequestedStateChangedEventArgsMethods.IID);
        public static IntPtr GetAbi(IObjectReference value) => value is null ? IntPtr.Zero : MarshalInterfaceHelper<object>.GetAbi(value);
        public static global::Microsoft.UI.Content.EndpointRequestedStateChangedEventArgs FromAbi(IntPtr thisPtr) => global::Microsoft.UI.Content.EndpointRequestedStateChangedEventArgs.FromAbi(thisPtr);
        public static IntPtr FromManaged(global::Microsoft.UI.Content.EndpointRequestedStateChangedEventArgs obj) => obj is null ? IntPtr.Zero : CreateMarshaler2(obj).Detach();
        public static unsafe MarshalInterfaceHelper<global::Microsoft.UI.Content.EndpointRequestedStateChangedEventArgs>.MarshalerArray CreateMarshalerArray(global::Microsoft.UI.Content.EndpointRequestedStateChangedEventArgs[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Content.EndpointRequestedStateChangedEventArgs>.CreateMarshalerArray2(array, (o) => CreateMarshaler2(o));
        public static (int length, IntPtr data) GetAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Content.EndpointRequestedStateChangedEventArgs>.GetAbiArray(box);
        public static unsafe global::Microsoft.UI.Content.EndpointRequestedStateChangedEventArgs[] FromAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Content.EndpointRequestedStateChangedEventArgs>.FromAbiArray(box, FromAbi);
        public static void CopyAbiArray(global::Microsoft.UI.Content.EndpointRequestedStateChangedEventArgs[] array, object box) => MarshalInterfaceHelper<global::Microsoft.UI.Content.EndpointRequestedStateChangedEventArgs>.CopyAbiArray(array, box, FromAbi);
        public static (int length, IntPtr data) FromManagedArray(global::Microsoft.UI.Content.EndpointRequestedStateChangedEventArgs[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Content.EndpointRequestedStateChangedEventArgs>.FromManagedArray(array, (o) => FromManaged(o));
        public static void DisposeMarshaler(IObjectReference value) => MarshalInspectable<object>.DisposeMarshaler(value);
        public static void DisposeMarshalerArray(MarshalInterfaceHelper<global::Microsoft.UI.Content.EndpointRequestedStateChangedEventArgs>.MarshalerArray array) => MarshalInterfaceHelper<global::Microsoft.UI.Content.EndpointRequestedStateChangedEventArgs>.DisposeMarshalerArray(array);
        public static void DisposeAbi(IntPtr abi) => MarshalInspectable<object>.DisposeAbi(abi);
        public static unsafe void DisposeAbiArray(object box) => MarshalInspectable<object>.DisposeAbiArray(box);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    internal sealed class EndpointRequestedStateChangedEventArgsRcwFactoryAttribute : global::WinRT.WinRTImplementationTypeRcwFactoryAttribute
    {
        public override object CreateInstance(global::WinRT.IInspectable inspectable)
            => new global::Microsoft.UI.Content.EndpointRequestedStateChangedEventArgs(inspectable.ObjRef);
    }
    internal static class IChildSiteLinkMethods
    {


        internal static unsafe void Connect(IObjectReference _obj, global::Microsoft.UI.Content.ContentIsland content)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __content = default;
            try
            {
                __content = global::ABI.Microsoft.UI.Content.ContentIsland.CreateMarshaler2(content);
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, int>**)ThisPtr)[12](ThisPtr, MarshalInspectable<object>.GetAbi(__content)));
                global::System.GC.KeepAlive(_obj);
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__content);
            }
        }
        internal static unsafe global::System.Numerics.Vector2 get_ActualSize(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::System.Numerics.Vector2 __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::System.Numerics.Vector2*, int>**)ThisPtr)[6](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }
        internal static unsafe void set_ActualSize(IObjectReference _obj, global::System.Numerics.Vector2 value)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::System.Numerics.Vector2, int>**)ThisPtr)[7](ThisPtr, value));
            global::System.GC.KeepAlive(_obj);
        }

        internal static unsafe global::Microsoft.UI.Dispatching.DispatcherQueue get_DispatcherQueue(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[8](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Dispatching.DispatcherQueue.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.UI.Dispatching.DispatcherQueue.DisposeAbi(__retval);
            }
        }

        internal static unsafe global::System.Numerics.Matrix4x4 get_LocalToParentTransformMatrix(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::System.Numerics.Matrix4x4 __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::System.Numerics.Matrix4x4*, int>**)ThisPtr)[9](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }
        internal static unsafe void set_LocalToParentTransformMatrix(IObjectReference _obj, global::System.Numerics.Matrix4x4 value)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::System.Numerics.Matrix4x4, int>**)ThisPtr)[10](ThisPtr, value));
            global::System.GC.KeepAlive(_obj);
        }

        internal static unsafe global::Microsoft.UI.Content.ContentSiteView get_SiteView(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[11](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Content.ContentSiteView.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.UI.Content.ContentSiteView.DisposeAbi(__retval);
            }
        }



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0x14, 0x48, 0xA6, 0xB5, 0x8B, 0x60, 0xB7, 0x5F, 0xA7, 0xCB, 0xEB, 0x62, 0x8F, 0xD5, 0x88, 0xCD };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("B5A64814-608B-5FB7-A7CB-EB628FD588CD")]
    internal interface IChildSiteLink : global::Microsoft.UI.Content.IChildSiteLink
    {
    }
    internal static class IChildSiteLinkStaticsMethods
    {


        internal static unsafe global::Microsoft.UI.Content.ChildSiteLink Create(IObjectReference _obj, global::Microsoft.UI.Content.ContentIsland parent, global::Microsoft.UI.Composition.ContainerVisual placementVisual)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __parent = default;
            ObjectReferenceValue __placementVisual = default;
            IntPtr __retval = default;
            try
            {
                __parent = global::ABI.Microsoft.UI.Content.ContentIsland.CreateMarshaler2(parent);
                __placementVisual = global::ABI.Microsoft.UI.Composition.ContainerVisual.CreateMarshaler2(placementVisual);
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, IntPtr, IntPtr*, int>**)ThisPtr)[6](ThisPtr, MarshalInspectable<object>.GetAbi(__parent), MarshalInspectable<object>.GetAbi(__placementVisual), &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Content.ChildSiteLink.FromAbi(__retval);
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__parent);
                MarshalInspectable<object>.DisposeMarshaler(__placementVisual);
                global::ABI.Microsoft.UI.Content.ChildSiteLink.DisposeAbi(__retval);
            }
        }

        internal static unsafe global::Microsoft.UI.Content.ChildSiteLink CreateForSystemVisual(IObjectReference _obj, global::Microsoft.UI.Content.ContentIsland parent, global::Windows.UI.Composition.ContainerVisual placementVisual)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __parent = default;
            ObjectReferenceValue __placementVisual = default;
            IntPtr __retval = default;
            try
            {
                __parent = global::ABI.Microsoft.UI.Content.ContentIsland.CreateMarshaler2(parent);
                __placementVisual = global::ABI.Windows.UI.Composition.ContainerVisual.CreateMarshaler2(placementVisual);
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, IntPtr, IntPtr*, int>**)ThisPtr)[7](ThisPtr, MarshalInspectable<object>.GetAbi(__parent), MarshalInspectable<object>.GetAbi(__placementVisual), &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Content.ChildSiteLink.FromAbi(__retval);
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__parent);
                MarshalInspectable<object>.DisposeMarshaler(__placementVisual);
                global::ABI.Microsoft.UI.Content.ChildSiteLink.DisposeAbi(__retval);
            }
        }


        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0x8A, 0xC9, 0xED, 0x28, 0x94, 0x4F, 0xB1, 0x50, 0x8A, 0x87, 0x9E, 0x71, 0x69, 0xEB, 0xF4, 0xB7 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("28EDC98A-4F94-50B1-8A87-9E7169EBF4B7")]
    internal interface IChildSiteLinkStatics : global::Microsoft.UI.Content.IChildSiteLinkStatics
    {
    }
    internal static class IContentAppWindowBridgeMethods
    {



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0x39, 0x6B, 0x7D, 0xA1, 0x52, 0x5B, 0x74, 0x59, 0x88, 0xE5, 0x60, 0xCD, 0xE3, 0x96, 0x7B, 0x5E };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("A17D6B39-5B52-5974-88E5-60CDE3967B5E")]
    internal interface IContentAppWindowBridge : global::Microsoft.UI.Content.IContentAppWindowBridge
    {
    }
    internal static class IContentAppWindowBridgeStaticsMethods
    {


        internal static unsafe global::Microsoft.UI.Content.ContentAppWindowBridge GetForWindowId(IObjectReference _obj, global::Microsoft.UI.WindowId childWindowId)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::Microsoft.UI.WindowId, IntPtr*, int>**)ThisPtr)[6](ThisPtr, childWindowId, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Content.ContentAppWindowBridge.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.UI.Content.ContentAppWindowBridge.DisposeAbi(__retval);
            }
        }


        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0x9C, 0xCD, 0xB9, 0x84, 0x22, 0xE8, 0x12, 0x5F, 0xB2, 0x1D, 0x31, 0xA4, 0x9, 0xB8, 0x4, 0xF5 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("84B9CD9C-E822-5F12-B21D-31A409B804F5")]
    internal interface IContentAppWindowBridgeStatics : global::Microsoft.UI.Content.IContentAppWindowBridgeStatics
    {
    }
    internal static class IContentCoordinateConverterMethods
    {


        internal static unsafe global::Windows.Graphics.PointInt32 ConvertLocalToScreen(IObjectReference _obj, global::Windows.Foundation.Point localPoint)
        {
            var ThisPtr = _obj.ThisPtr;

            global::Windows.Graphics.PointInt32 __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::Windows.Foundation.Point, global::Windows.Graphics.PointInt32*, int>**)ThisPtr)[6](ThisPtr, localPoint, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }

        internal static unsafe global::Windows.Graphics.PointInt32[] ConvertLocalToScreen(IObjectReference _obj, global::Windows.Foundation.Point[] localPoints)
        {
            var ThisPtr = _obj.ThisPtr;

            MarshalBlittable<global::Windows.Foundation.Point>.MarshalerArray __localPoints = default;
            int __localPoints_length = default;
            IntPtr __localPoints_data = default;
            int __retval_length = default;
            IntPtr __retval_data = default;
            try
            {
                __localPoints = MarshalBlittable<global::Windows.Foundation.Point>.CreateMarshalerArray(localPoints);
                (__localPoints_length, __localPoints_data) = MarshalBlittable<global::Windows.Foundation.Point>.GetAbiArray(__localPoints);
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, int, IntPtr, int*, IntPtr*, int>**)ThisPtr)[7](ThisPtr, __localPoints_length, __localPoints_data, &__retval_length, &__retval_data));
                global::System.GC.KeepAlive(_obj);
                return MarshalBlittable<global::Windows.Graphics.PointInt32>.FromAbiArray((__retval_length, __retval_data));
            }
            finally
            {
                MarshalBlittable<global::Windows.Foundation.Point>.DisposeMarshalerArray(__localPoints);
                MarshalBlittable<global::Windows.Graphics.PointInt32>.DisposeAbiArray((__retval_length, __retval_data));
            }
        }

        internal static unsafe global::Windows.Graphics.PointInt32[] ConvertLocalToScreen(IObjectReference _obj, global::Windows.Foundation.Point[] localPoints, global::Microsoft.UI.Content.ContentCoordinateRoundingMode roundingMode)
        {
            var ThisPtr = _obj.ThisPtr;

            MarshalBlittable<global::Windows.Foundation.Point>.MarshalerArray __localPoints = default;
            int __localPoints_length = default;
            IntPtr __localPoints_data = default;
            int __retval_length = default;
            IntPtr __retval_data = default;
            try
            {
                __localPoints = MarshalBlittable<global::Windows.Foundation.Point>.CreateMarshalerArray(localPoints);
                (__localPoints_length, __localPoints_data) = MarshalBlittable<global::Windows.Foundation.Point>.GetAbiArray(__localPoints);
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, int, IntPtr, global::Microsoft.UI.Content.ContentCoordinateRoundingMode, int*, IntPtr*, int>**)ThisPtr)[8](ThisPtr, __localPoints_length, __localPoints_data, roundingMode, &__retval_length, &__retval_data));
                global::System.GC.KeepAlive(_obj);
                return MarshalBlittable<global::Windows.Graphics.PointInt32>.FromAbiArray((__retval_length, __retval_data));
            }
            finally
            {
                MarshalBlittable<global::Windows.Foundation.Point>.DisposeMarshalerArray(__localPoints);
                MarshalBlittable<global::Windows.Graphics.PointInt32>.DisposeAbiArray((__retval_length, __retval_data));
            }
        }

        internal static unsafe global::Windows.Graphics.RectInt32 ConvertLocalToScreen(IObjectReference _obj, global::Windows.Foundation.Rect localRect)
        {
            var ThisPtr = _obj.ThisPtr;

            global::Windows.Graphics.RectInt32 __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::Windows.Foundation.Rect, global::Windows.Graphics.RectInt32*, int>**)ThisPtr)[9](ThisPtr, localRect, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }

        internal static unsafe global::Windows.Foundation.Point ConvertScreenToLocal(IObjectReference _obj, global::Windows.Graphics.PointInt32 screenPoint)
        {
            var ThisPtr = _obj.ThisPtr;

            global::Windows.Foundation.Point __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::Windows.Graphics.PointInt32, global::Windows.Foundation.Point*, int>**)ThisPtr)[10](ThisPtr, screenPoint, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }

        internal static unsafe global::Windows.Foundation.Point[] ConvertScreenToLocal(IObjectReference _obj, global::Windows.Graphics.PointInt32[] screenPoints)
        {
            var ThisPtr = _obj.ThisPtr;

            MarshalBlittable<global::Windows.Graphics.PointInt32>.MarshalerArray __screenPoints = default;
            int __screenPoints_length = default;
            IntPtr __screenPoints_data = default;
            int __retval_length = default;
            IntPtr __retval_data = default;
            try
            {
                __screenPoints = MarshalBlittable<global::Windows.Graphics.PointInt32>.CreateMarshalerArray(screenPoints);
                (__screenPoints_length, __screenPoints_data) = MarshalBlittable<global::Windows.Graphics.PointInt32>.GetAbiArray(__screenPoints);
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, int, IntPtr, int*, IntPtr*, int>**)ThisPtr)[11](ThisPtr, __screenPoints_length, __screenPoints_data, &__retval_length, &__retval_data));
                global::System.GC.KeepAlive(_obj);
                return MarshalBlittable<global::Windows.Foundation.Point>.FromAbiArray((__retval_length, __retval_data));
            }
            finally
            {
                MarshalBlittable<global::Windows.Graphics.PointInt32>.DisposeMarshalerArray(__screenPoints);
                MarshalBlittable<global::Windows.Foundation.Point>.DisposeAbiArray((__retval_length, __retval_data));
            }
        }

        internal static unsafe global::Windows.Foundation.Rect ConvertScreenToLocal(IObjectReference _obj, global::Windows.Graphics.RectInt32 screenRect)
        {
            var ThisPtr = _obj.ThisPtr;

            global::Windows.Foundation.Rect __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::Windows.Graphics.RectInt32, global::Windows.Foundation.Rect*, int>**)ThisPtr)[12](ThisPtr, screenRect, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }


        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0x30, 0x12, 0xA1, 0x10, 0xB4, 0x5E, 0x40, 0x58, 0xA3, 0x46, 0x57, 0xF, 0x4A, 0x49, 0x4, 0xF };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("10A11230-5EB4-5840-A346-570F4A49040F")]
    internal interface IContentCoordinateConverter : global::Microsoft.UI.Content.IContentCoordinateConverter
    {
    }
    internal static class IContentCoordinateConverterFactoryMethods
    {



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0xEE, 0x16, 0xB2, 0xA4, 0x26, 0xE, 0xBD, 0x56, 0x92, 0x9, 0xA7, 0x5C, 0xF9, 0xD8, 0xF, 0x27 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("A4B216EE-0E26-56BD-9209-A75CF9D80F27")]
    internal interface IContentCoordinateConverterFactory : global::Microsoft.UI.Content.IContentCoordinateConverterFactory
    {
    }
    internal static class IContentCoordinateConverterStaticsMethods
    {


        internal static unsafe global::Microsoft.UI.Content.ContentCoordinateConverter CreateForWindowId(IObjectReference _obj, global::Microsoft.UI.WindowId windowId)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::Microsoft.UI.WindowId, IntPtr*, int>**)ThisPtr)[6](ThisPtr, windowId, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Content.ContentCoordinateConverter.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.UI.Content.ContentCoordinateConverter.DisposeAbi(__retval);
            }
        }


        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0xCE, 0x74, 0x63, 0xF5, 0xDF, 0xB6, 0x42, 0x5B, 0xA5, 0x8F, 0x4E, 0x3B, 0xB0, 0x39, 0xE3, 0xA9 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("F56374CE-B6DF-5B42-A58F-4E3BB039E3A9")]
    internal interface IContentCoordinateConverterStatics : global::Microsoft.UI.Content.IContentCoordinateConverterStatics
    {
    }
    internal static class IContentDeferralMethods
    {


        internal static unsafe void Complete(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, int>**)ThisPtr)[6](ThisPtr));
            global::System.GC.KeepAlive(_obj);
        }


        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0xF5, 0x29, 0x5, 0x47, 0x93, 0xCD, 0x9B, 0x59, 0x96, 0x8E, 0xF8, 0xA6, 0x89, 0xBC, 0x3A, 0x7 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("470529F5-CD93-599B-968E-F8A689BC3A07")]
    internal interface IContentDeferral : global::Microsoft.UI.Content.IContentDeferral
    {
    }
    internal static class IContentEnvironmentSettingChangedEventArgsMethods
    {

        internal static unsafe string get_SettingName(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[6](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return MarshalString.FromAbi(__retval);
            }
            finally
            {
                MarshalString.DisposeAbi(__retval);
            }
        }



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0x51, 0x80, 0x47, 0x76, 0x80, 0xFC, 0xEC, 0x5E, 0xA3, 0xF3, 0x62, 0x60, 0x6A, 0xBE, 0x6, 0xB7 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("76478051-FC80-5EEC-A3F3-62606ABE06B7")]
    internal interface IContentEnvironmentSettingChangedEventArgs : global::Microsoft.UI.Content.IContentEnvironmentSettingChangedEventArgs
    {
    }
    internal static class IContentEnvironmentStateChangedEventArgsMethods
    {

        internal static unsafe bool get_DidAppWindowIdChange(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            byte __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, byte*, int>**)ThisPtr)[6](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval != 0;
        }

        internal static unsafe bool get_DidDisplayIdChange(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            byte __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, byte*, int>**)ThisPtr)[7](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval != 0;
        }



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0x4F, 0xFA, 0x70, 0x89, 0xBA, 0x10, 0x67, 0x5F, 0x97, 0xB, 0x8C, 0x72, 0xBC, 0x0, 0x9B, 0x67 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("8970FA4F-10BA-5F67-970B-8C72BC009B67")]
    internal interface IContentEnvironmentStateChangedEventArgs : global::Microsoft.UI.Content.IContentEnvironmentStateChangedEventArgs
    {
    }
    internal static class IContentEnvironmentStateChangedEventArgs2Methods
    {

        internal static unsafe bool get_DidDisplayScaleChange(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            byte __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, byte*, int>**)ThisPtr)[6](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval != 0;
        }



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0x7D, 0x49, 0xC0, 0xCE, 0xC7, 0x76, 0x4B, 0x54, 0xBF, 0x6E, 0x81, 0x6C, 0x9B, 0x16, 0xC9, 0x9F };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("CEC0497D-76C7-544B-BF6E-816C9B16C99F")]
    internal interface IContentEnvironmentStateChangedEventArgs2 : global::Microsoft.UI.Content.IContentEnvironmentStateChangedEventArgs2
    {
    }
    internal static class IContentExternalBackdropLinkMethods
    {

        internal static unsafe global::Microsoft.UI.Dispatching.DispatcherQueue get_DispatcherQueue(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[6](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Dispatching.DispatcherQueue.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.UI.Dispatching.DispatcherQueue.DisposeAbi(__retval);
            }
        }

        internal static unsafe global::Microsoft.UI.Composition.CompositionBorderMode get_ExternalBackdropBorderMode(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::Microsoft.UI.Composition.CompositionBorderMode __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::Microsoft.UI.Composition.CompositionBorderMode*, int>**)ThisPtr)[7](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }
        internal static unsafe void set_ExternalBackdropBorderMode(IObjectReference _obj, global::Microsoft.UI.Composition.CompositionBorderMode value)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::Microsoft.UI.Composition.CompositionBorderMode, int>**)ThisPtr)[8](ThisPtr, value));
            global::System.GC.KeepAlive(_obj);
        }

        internal static unsafe global::Microsoft.UI.Composition.Visual get_PlacementVisual(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[9](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Composition.Visual.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.UI.Composition.Visual.DisposeAbi(__retval);
            }
        }



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0x83, 0xBF, 0x54, 0x10, 0x5B, 0xB3, 0xDE, 0x5F, 0x8D, 0xD7, 0xAC, 0x3B, 0xB3, 0xE6, 0xCE, 0x27 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("1054BF83-B35B-5FDE-8DD7-AC3BB3E6CE27")]
    internal interface IContentExternalBackdropLink : global::Microsoft.UI.Content.IContentExternalBackdropLink
    {
    }
    internal static class IContentExternalBackdropLinkStaticsMethods
    {


        internal static unsafe global::Microsoft.UI.Content.ContentExternalBackdropLink Create(IObjectReference _obj, global::Microsoft.UI.Composition.Compositor compositor)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __compositor = default;
            IntPtr __retval = default;
            try
            {
                __compositor = global::ABI.Microsoft.UI.Composition.Compositor.CreateMarshaler2(compositor);
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, IntPtr*, int>**)ThisPtr)[6](ThisPtr, MarshalInspectable<object>.GetAbi(__compositor), &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Content.ContentExternalBackdropLink.FromAbi(__retval);
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__compositor);
                global::ABI.Microsoft.UI.Content.ContentExternalBackdropLink.DisposeAbi(__retval);
            }
        }


        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0xFB, 0xC6, 0xCA, 0x46, 0x51, 0xBB, 0xA, 0x51, 0x95, 0x8D, 0xE0, 0xEB, 0x41, 0x60, 0xF6, 0x78 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("46CAC6FB-BB51-510A-958D-E0EB4160F678")]
    internal interface IContentExternalBackdropLinkStatics : global::Microsoft.UI.Content.IContentExternalBackdropLinkStatics
    {
    }
    internal static class IContentExternalOutputLinkMethods
    {

        internal static unsafe global::Windows.UI.Color get_BackgroundColor(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::Windows.UI.Color __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::Windows.UI.Color*, int>**)ThisPtr)[6](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }
        internal static unsafe void set_BackgroundColor(IObjectReference _obj, global::Windows.UI.Color value)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::Windows.UI.Color, int>**)ThisPtr)[7](ThisPtr, value));
            global::System.GC.KeepAlive(_obj);
        }

        internal static unsafe global::Microsoft.UI.Dispatching.DispatcherQueue get_DispatcherQueue(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[8](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Dispatching.DispatcherQueue.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.UI.Dispatching.DispatcherQueue.DisposeAbi(__retval);
            }
        }

        internal static unsafe global::Microsoft.UI.Composition.CompositionBorderMode get_ExternalOutputBorderMode(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::Microsoft.UI.Composition.CompositionBorderMode __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::Microsoft.UI.Composition.CompositionBorderMode*, int>**)ThisPtr)[9](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }
        internal static unsafe void set_ExternalOutputBorderMode(IObjectReference _obj, global::Microsoft.UI.Composition.CompositionBorderMode value)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::Microsoft.UI.Composition.CompositionBorderMode, int>**)ThisPtr)[10](ThisPtr, value));
            global::System.GC.KeepAlive(_obj);
        }

        internal static unsafe bool get_IsAboveContent(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            byte __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, byte*, int>**)ThisPtr)[11](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval != 0;
        }
        internal static unsafe void set_IsAboveContent(IObjectReference _obj, bool value)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, byte, int>**)ThisPtr)[12](ThisPtr, (byte)(value ? 1 : 0)));
            global::System.GC.KeepAlive(_obj);
        }

        internal static unsafe global::Microsoft.UI.Composition.Visual get_PlacementVisual(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[13](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Composition.Visual.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.UI.Composition.Visual.DisposeAbi(__retval);
            }
        }



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0xC8, 0x8E, 0xAC, 0x3D, 0x1F, 0x1, 0xD2, 0x5A, 0x8D, 0xB7, 0xB7, 0x3C, 0x44, 0x52, 0xF7, 0x55 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("3DAC8EC8-011F-5AD2-8DB7-B73C4452F755")]
    internal interface IContentExternalOutputLink : global::Microsoft.UI.Content.IContentExternalOutputLink
    {
    }
    internal static class IContentExternalOutputLinkStaticsMethods
    {


        internal static unsafe global::Microsoft.UI.Content.ContentExternalOutputLink Create(IObjectReference _obj, global::Microsoft.UI.Composition.Compositor compositor)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __compositor = default;
            IntPtr __retval = default;
            try
            {
                __compositor = global::ABI.Microsoft.UI.Composition.Compositor.CreateMarshaler2(compositor);
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, IntPtr*, int>**)ThisPtr)[6](ThisPtr, MarshalInspectable<object>.GetAbi(__compositor), &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Content.ContentExternalOutputLink.FromAbi(__retval);
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__compositor);
                global::ABI.Microsoft.UI.Content.ContentExternalOutputLink.DisposeAbi(__retval);
            }
        }

        internal static unsafe bool IsSupported(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            byte __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, byte*, int>**)ThisPtr)[7](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval != 0;
        }


        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0x1, 0xF4, 0x58, 0xB7, 0x3E, 0x83, 0x7D, 0x58, 0xB0, 0xCD, 0xA3, 0x93, 0x4E, 0xBA, 0x37, 0x21 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("B758F401-833E-587D-B0CD-A3934EBA3721")]
    internal interface IContentExternalOutputLinkStatics : global::Microsoft.UI.Content.IContentExternalOutputLinkStatics
    {
    }
    internal static class IContentIslandMethods
    {


        internal static unsafe object GetAutomationHostProvider(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[25](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return MarshalInspectable<object>.FromAbi(__retval);
            }
            finally
            {
                MarshalInspectable<object>.DisposeAbi(__retval);
            }
        }

        internal static unsafe global::Microsoft.UI.Content.ContentDeferral GetStateChangeDeferral(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[26](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Content.ContentDeferral.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.UI.Content.ContentDeferral.DisposeAbi(__retval);
            }
        }

        internal static unsafe void RequestSize(IObjectReference _obj, global::System.Numerics.Vector2 size)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::System.Numerics.Vector2, int>**)ThisPtr)[27](ThisPtr, size));
            global::System.GC.KeepAlive(_obj);
        }
        internal static unsafe global::System.Numerics.Vector2 get_ActualSize(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::System.Numerics.Vector2 __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::System.Numerics.Vector2*, int>**)ThisPtr)[6](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }

        internal static unsafe object get_AppData(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[7](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return MarshalInspectable<object>.FromAbi(__retval);
            }
            finally
            {
                MarshalInspectable<object>.DisposeAbi(__retval);
            }
        }
        internal static unsafe void set_AppData(IObjectReference _obj, object value)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __value = default;
            try
            {
                __value = MarshalInspectable<object>.CreateMarshaler2(value);
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, int>**)ThisPtr)[8](ThisPtr, MarshalInspectable<object>.GetAbi(__value)));
                global::System.GC.KeepAlive(_obj);
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__value);
            }
        }

        internal static unsafe global::Microsoft.UI.Content.ContentCoordinateConverter get_CoordinateConverter(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[9](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Content.ContentCoordinateConverter.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.UI.Content.ContentCoordinateConverter.DisposeAbi(__retval);
            }
        }

        internal static unsafe global::Windows.Foundation.Collections.IPropertySet get_CustomProperties(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[10](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                global::ABI.Windows.Foundation.Collections.IPropertySetMethods.InitRcwHelper();
                return MarshalInterface<global::Windows.Foundation.Collections.IPropertySet>.FromAbi(__retval);
            }
            finally
            {
                MarshalInterface<global::Windows.Foundation.Collections.IPropertySet>.DisposeAbi(__retval);
            }
        }

        internal static unsafe global::Microsoft.UI.Dispatching.DispatcherQueue get_DispatcherQueue(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[11](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Dispatching.DispatcherQueue.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.UI.Dispatching.DispatcherQueue.DisposeAbi(__retval);
            }
        }

        internal static unsafe global::Microsoft.UI.Content.ContentIslandEnvironment get_Environment(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[12](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Content.ContentIslandEnvironment.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.UI.Content.ContentIslandEnvironment.DisposeAbi(__retval);
            }
        }

        internal static unsafe ulong get_Id(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            ulong __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, ulong*, int>**)ThisPtr)[13](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }

        internal static unsafe bool get_IsConnected(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            byte __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, byte*, int>**)ThisPtr)[14](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval != 0;
        }

        internal static unsafe bool get_IsHitTestVisibleWhenTransparent(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            byte __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, byte*, int>**)ThisPtr)[15](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval != 0;
        }
        internal static unsafe void set_IsHitTestVisibleWhenTransparent(IObjectReference _obj, bool value)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, byte, int>**)ThisPtr)[16](ThisPtr, (byte)(value ? 1 : 0)));
            global::System.GC.KeepAlive(_obj);
        }

        internal static unsafe bool get_IsIslandEnabled(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            byte __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, byte*, int>**)ThisPtr)[17](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval != 0;
        }
        internal static unsafe void set_IsIslandEnabled(IObjectReference _obj, bool value)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, byte, int>**)ThisPtr)[18](ThisPtr, (byte)(value ? 1 : 0)));
            global::System.GC.KeepAlive(_obj);
        }

        internal static unsafe bool get_IsIslandVisible(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            byte __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, byte*, int>**)ThisPtr)[19](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval != 0;
        }
        internal static unsafe void set_IsIslandVisible(IObjectReference _obj, bool value)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, byte, int>**)ThisPtr)[20](ThisPtr, (byte)(value ? 1 : 0)));
            global::System.GC.KeepAlive(_obj);
        }

        internal static unsafe bool get_IsSiteEnabled(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            byte __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, byte*, int>**)ThisPtr)[21](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval != 0;
        }

        internal static unsafe bool get_IsSiteVisible(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            byte __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, byte*, int>**)ThisPtr)[22](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval != 0;
        }

        internal static unsafe global::Microsoft.UI.Content.ContentLayoutDirection get_LayoutDirection(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::Microsoft.UI.Content.ContentLayoutDirection __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::Microsoft.UI.Content.ContentLayoutDirection*, int>**)ThisPtr)[23](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }

        internal static unsafe float get_RasterizationScale(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            float __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, float*, int>**)ThisPtr)[24](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }


        private volatile static global::System.Runtime.CompilerServices.ConditionalWeakTable<object, global::ABI.WinRT.Interop.EventSource<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Content.ContentIsland, global::Microsoft.UI.Content.ContentIslandAutomationProviderRequestedEventArgs>>> _AutomationProviderRequested_;
        private static global::System.Runtime.CompilerServices.ConditionalWeakTable<object, global::ABI.WinRT.Interop.EventSource<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Content.ContentIsland, global::Microsoft.UI.Content.ContentIslandAutomationProviderRequestedEventArgs>>> MakeAutomationProviderRequestedTable()
        {
            
            global::System.Threading.Interlocked.CompareExchange(ref _AutomationProviderRequested_, new(), null);
            return _AutomationProviderRequested_;
        }
        private static global::System.Runtime.CompilerServices.ConditionalWeakTable<object, global::ABI.WinRT.Interop.EventSource<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Content.ContentIsland, global::Microsoft.UI.Content.ContentIslandAutomationProviderRequestedEventArgs>>> _AutomationProviderRequested => _AutomationProviderRequested_ ?? MakeAutomationProviderRequestedTable();



        internal static unsafe global::ABI.WinRT.Interop.EventSource<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Content.ContentIsland, global::Microsoft.UI.Content.ContentIslandAutomationProviderRequestedEventArgs>> Get_AutomationProviderRequested2(IObjectReference _obj, object _thisObj)
        {
            return _AutomationProviderRequested.GetValue(_thisObj, (key) =>
            {

                var ThisPtr = _obj.ThisPtr;

                return 
                new _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_UI_Content_ContentIsland__global__Microsoft_UI_Content_ContentIslandAutomationProviderRequestedEventArgs_(_obj,
                (*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, global::WinRT.EventRegistrationToken*, int>**)ThisPtr)[28],
                (*(delegate* unmanaged[Stdcall]<IntPtr, global::WinRT.EventRegistrationToken, int>**)ThisPtr)[29],
                0);
            });
        }

        private volatile static global::System.Runtime.CompilerServices.ConditionalWeakTable<object, global::ABI.WinRT.Interop.EventSource<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Content.ContentIsland, global::Microsoft.UI.Content.ContentIslandStateChangedEventArgs>>> _StateChanged_;
        private static global::System.Runtime.CompilerServices.ConditionalWeakTable<object, global::ABI.WinRT.Interop.EventSource<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Content.ContentIsland, global::Microsoft.UI.Content.ContentIslandStateChangedEventArgs>>> MakeStateChangedTable()
        {
            
            global::System.Threading.Interlocked.CompareExchange(ref _StateChanged_, new(), null);
            return _StateChanged_;
        }
        private static global::System.Runtime.CompilerServices.ConditionalWeakTable<object, global::ABI.WinRT.Interop.EventSource<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Content.ContentIsland, global::Microsoft.UI.Content.ContentIslandStateChangedEventArgs>>> _StateChanged => _StateChanged_ ?? MakeStateChangedTable();



        internal static unsafe global::ABI.WinRT.Interop.EventSource<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Content.ContentIsland, global::Microsoft.UI.Content.ContentIslandStateChangedEventArgs>> Get_StateChanged2(IObjectReference _obj, object _thisObj)
        {
            return _StateChanged.GetValue(_thisObj, (key) =>
            {

                var ThisPtr = _obj.ThisPtr;

                return 
                new _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_UI_Content_ContentIsland__global__Microsoft_UI_Content_ContentIslandStateChangedEventArgs_(_obj,
                (*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, global::WinRT.EventRegistrationToken*, int>**)ThisPtr)[30],
                (*(delegate* unmanaged[Stdcall]<IntPtr, global::WinRT.EventRegistrationToken, int>**)ThisPtr)[31],
                1);
            });
        }


        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0xBA, 0x4, 0x25, 0x5B, 0x1C, 0x36, 0xAA, 0x50, 0xBD, 0x6E, 0x41, 0x22, 0xC6, 0xD9, 0x38, 0x89 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("5B2504BA-361C-50AA-BD6E-4122C6D93889")]
    internal interface IContentIsland : global::Microsoft.UI.Content.IContentIsland
    {
    }
    internal static class IContentIsland2Methods
    {

        internal static unsafe global::System.Collections.Generic.IEnumerable<global::Microsoft.UI.Content.ChildSiteLink> get_Children(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[6](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                _ = global::WinRT.GenericTypeInstantiations.Windows_Foundation_Collections_IIterable_1_Microsoft_UI_Content_ChildSiteLink.EnsureInitialized();
                return MarshalInterface<global::System.Collections.Generic.IEnumerable<global::Microsoft.UI.Content.ChildSiteLink>>.FromAbi(__retval);
            }
            finally
            {
                MarshalInterface<global::System.Collections.Generic.IEnumerable<global::Microsoft.UI.Content.ChildSiteLink>>.DisposeAbi(__retval);
            }
        }

        internal static unsafe global::System.Numerics.Matrix4x4 get_LocalToClientTransformMatrix(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::System.Numerics.Matrix4x4 __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::System.Numerics.Matrix4x4*, int>**)ThisPtr)[7](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }

        internal static unsafe global::System.Numerics.Matrix4x4 get_LocalToParentTransformMatrix(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::System.Numerics.Matrix4x4 __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::System.Numerics.Matrix4x4*, int>**)ThisPtr)[8](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }

        internal static unsafe global::System.Collections.Generic.IEnumerable<global::Microsoft.UI.Content.DesktopPopupSiteBridge> get_Popups(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[9](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                _ = global::WinRT.GenericTypeInstantiations.Windows_Foundation_Collections_IIterable_1_Microsoft_UI_Content_DesktopPopupSiteBridge.EnsureInitialized();
                return MarshalInterface<global::System.Collections.Generic.IEnumerable<global::Microsoft.UI.Content.DesktopPopupSiteBridge>>.FromAbi(__retval);
            }
            finally
            {
                MarshalInterface<global::System.Collections.Generic.IEnumerable<global::Microsoft.UI.Content.DesktopPopupSiteBridge>>.DisposeAbi(__retval);
            }
        }

        internal static unsafe bool get_ProcessesKeyboardInput(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            byte __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, byte*, int>**)ThisPtr)[10](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval != 0;
        }

        internal static unsafe bool get_ProcessesPointerInput(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            byte __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, byte*, int>**)ThisPtr)[11](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval != 0;
        }



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0x25, 0x18, 0x89, 0x9F, 0x83, 0x4F, 0xDA, 0x5A, 0x9E, 0xBD, 0x9D, 0x32, 0x94, 0x60, 0xAE, 0xDE };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("9F891825-4F83-5ADA-9EBD-9D329460AEDE")]
    internal interface IContentIsland2 : global::Microsoft.UI.Content.IContentIsland2
    {
    }
    internal static class IContentIslandAutomationMethods
    {

        internal static unsafe global::Microsoft.UI.Content.ContentAutomationOptions get_AutomationOption(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::Microsoft.UI.Content.ContentAutomationOptions __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::Microsoft.UI.Content.ContentAutomationOptions*, int>**)ThisPtr)[6](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }

        internal static unsafe object get_FragmentRootAutomationProvider(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[7](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return MarshalInspectable<object>.FromAbi(__retval);
            }
            finally
            {
                MarshalInspectable<object>.DisposeAbi(__retval);
            }
        }

        internal static unsafe object get_NextSiblingAutomationProvider(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[8](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return MarshalInspectable<object>.FromAbi(__retval);
            }
            finally
            {
                MarshalInspectable<object>.DisposeAbi(__retval);
            }
        }

        internal static unsafe object get_ParentAutomationProvider(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[9](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return MarshalInspectable<object>.FromAbi(__retval);
            }
            finally
            {
                MarshalInspectable<object>.DisposeAbi(__retval);
            }
        }

        internal static unsafe object get_PreviousSiblingAutomationProvider(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[10](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return MarshalInspectable<object>.FromAbi(__retval);
            }
            finally
            {
                MarshalInspectable<object>.DisposeAbi(__retval);
            }
        }



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0x1E, 0xC1, 0x52, 0x87, 0x96, 0x18, 0x5A, 0x56, 0xBF, 0xB0, 0x2B, 0x7, 0x70, 0x3, 0xE, 0x97 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("8752C11E-1896-565A-BFB0-2B0770030E97")]
    internal interface IContentIslandAutomation : global::Microsoft.UI.Content.IContentIslandAutomation
    {
    }
    internal static class IContentIslandAutomationProviderRequestedEventArgsMethods
    {

        internal static unsafe object get_AutomationProvider(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[6](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return MarshalInspectable<object>.FromAbi(__retval);
            }
            finally
            {
                MarshalInspectable<object>.DisposeAbi(__retval);
            }
        }
        internal static unsafe void set_AutomationProvider(IObjectReference _obj, object value)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __value = default;
            try
            {
                __value = MarshalInspectable<object>.CreateMarshaler2(value);
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, int>**)ThisPtr)[7](ThisPtr, MarshalInspectable<object>.GetAbi(__value)));
                global::System.GC.KeepAlive(_obj);
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__value);
            }
        }

        internal static unsafe bool get_Handled(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            byte __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, byte*, int>**)ThisPtr)[8](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval != 0;
        }
        internal static unsafe void set_Handled(IObjectReference _obj, bool value)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, byte, int>**)ThisPtr)[9](ThisPtr, (byte)(value ? 1 : 0)));
            global::System.GC.KeepAlive(_obj);
        }



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0xED, 0x4B, 0xE2, 0x9F, 0x9C, 0x2B, 0x37, 0x51, 0x88, 0x7F, 0x40, 0x3C, 0x94, 0x84, 0x18, 0x24 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("9FE24BED-2B9C-5137-887F-403C94841824")]
    internal interface IContentIslandAutomationProviderRequestedEventArgs : global::Microsoft.UI.Content.IContentIslandAutomationProviderRequestedEventArgs
    {
    }
    public static class IContentIslandEndpointConnectionPrivateMethods
    {


        public static unsafe void ConnectRemoteEndpoint(IObjectReference _obj, string siteConnectionInfo)
        {
            var ThisPtr = _obj.ThisPtr;

            MarshalString.Pinnable __siteConnectionInfo = new(siteConnectionInfo);
            fixed(void* ___siteConnectionInfo = __siteConnectionInfo)
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, int>**)ThisPtr)[8](ThisPtr, MarshalString.GetAbi(ref __siteConnectionInfo)));
                global::System.GC.KeepAlive(_obj);
            }
        }
        public static unsafe string get_ConnectionInfo(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[6](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return MarshalString.FromAbi(__retval);
            }
            finally
            {
                MarshalString.DisposeAbi(__retval);
            }
        }

        public static unsafe bool get_IsRemoteEndpointConnected(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            byte __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, byte*, int>**)ThisPtr)[7](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval != 0;
        }



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0x3B, 0x83, 0x5D, 0x7C, 0xB8, 0x70, 0x48, 0x54, 0x84, 0x72, 0x94, 0x6, 0xE5, 0x8E, 0xD, 0xB4 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

        public static global::System.IntPtr AbiToProjectionVftablePtr => IContentIslandEndpointConnectionPrivate.AbiToProjectionVftablePtr;

    }
    [DynamicInterfaceCastableImplementation]
    [Guid("7C5D833B-70B8-5448-8472-9406E58E0DB4")]
    internal unsafe interface IContentIslandEndpointConnectionPrivate : global::Microsoft.UI.Content.IContentIslandEndpointConnectionPrivate
    {

        public static readonly IntPtr AbiToProjectionVftablePtr;
        static unsafe IContentIslandEndpointConnectionPrivate()
        {
            AbiToProjectionVftablePtr = ComWrappersSupport.AllocateVtableMemory(typeof(IContentIslandEndpointConnectionPrivate), sizeof(IInspectable.Vftbl) + sizeof(IntPtr) * 3);
            *(IInspectable.Vftbl*)AbiToProjectionVftablePtr = IInspectable.Vftbl.AbiToProjectionVftable;
            ((delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>*)AbiToProjectionVftablePtr)[6] = &Do_Abi_get_ConnectionInfo_0;
            ((delegate* unmanaged[Stdcall]<IntPtr, byte*, int>*)AbiToProjectionVftablePtr)[7] = &Do_Abi_get_IsRemoteEndpointConnected_1;
            ((delegate* unmanaged[Stdcall]<IntPtr, IntPtr, int>*)AbiToProjectionVftablePtr)[8] = &Do_Abi_ConnectRemoteEndpoint_2;
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvStdcall) })]
        private static unsafe int Do_Abi_ConnectRemoteEndpoint_2(IntPtr thisPtr, IntPtr siteConnectionInfo)
        {



            try
            {
                global::WinRT.ComWrappersSupport.FindObject<global::Microsoft.UI.Content.IContentIslandEndpointConnectionPrivate>(thisPtr).ConnectRemoteEndpoint(MarshalString.FromAbi(siteConnectionInfo));

            }
            catch (Exception __exception__)
            {
                global::WinRT.ExceptionHelpers.SetErrorInfo(__exception__);
                return global::WinRT.ExceptionHelpers.GetHRForException(__exception__);
            }
            return 0;
        }
        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvStdcall) })]
        private static unsafe int Do_Abi_get_ConnectionInfo_0(IntPtr thisPtr, IntPtr* value)
        {

            string __value = default;

            *value = default;

            try
            {
                __value = global::WinRT.ComWrappersSupport.FindObject<global::Microsoft.UI.Content.IContentIslandEndpointConnectionPrivate>(thisPtr).ConnectionInfo;
                *value = MarshalString.FromManaged(__value);

            }
            catch (Exception __exception__)
            {
                global::WinRT.ExceptionHelpers.SetErrorInfo(__exception__);
                return global::WinRT.ExceptionHelpers.GetHRForException(__exception__);
            }
            return 0;
        }
        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvStdcall) })]
        private static unsafe int Do_Abi_get_IsRemoteEndpointConnected_1(IntPtr thisPtr, byte* value)
        {

            bool __value = default;

            *value = default;

            try
            {
                __value = global::WinRT.ComWrappersSupport.FindObject<global::Microsoft.UI.Content.IContentIslandEndpointConnectionPrivate>(thisPtr).IsRemoteEndpointConnected;
                *value = (byte)(__value ? 1 : 0);

            }
            catch (Exception __exception__)
            {
                global::WinRT.ExceptionHelpers.SetErrorInfo(__exception__);
                return global::WinRT.ExceptionHelpers.GetHRForException(__exception__);
            }
            return 0;
        }

        unsafe void global::Microsoft.UI.Content.IContentIslandEndpointConnectionPrivate.ConnectRemoteEndpoint(string siteConnectionInfo)
        {
            var _obj = ((IObjectReference)((IWinRTObject)this).GetObjectReferenceForType(typeof(global::Microsoft.UI.Content.IContentIslandEndpointConnectionPrivate).TypeHandle));
            global::ABI.Microsoft.UI.Content.IContentIslandEndpointConnectionPrivateMethods.ConnectRemoteEndpoint(_obj, siteConnectionInfo);
        }

        unsafe string global::Microsoft.UI.Content.IContentIslandEndpointConnectionPrivate.ConnectionInfo
        {
            get
            {
                var _obj = ((IObjectReference)((IWinRTObject)this).GetObjectReferenceForType(typeof(global::Microsoft.UI.Content.IContentIslandEndpointConnectionPrivate).TypeHandle));
                return global::ABI.Microsoft.UI.Content.IContentIslandEndpointConnectionPrivateMethods.get_ConnectionInfo(_obj);
            }
        }

        unsafe bool global::Microsoft.UI.Content.IContentIslandEndpointConnectionPrivate.IsRemoteEndpointConnected
        {
            get
            {
                var _obj = ((IObjectReference)((IWinRTObject)this).GetObjectReferenceForType(typeof(global::Microsoft.UI.Content.IContentIslandEndpointConnectionPrivate).TypeHandle));
                return global::ABI.Microsoft.UI.Content.IContentIslandEndpointConnectionPrivateMethods.get_IsRemoteEndpointConnected(_obj);
            }
        }
    }

    internal static class IContentIslandEnvironmentMethods
    {

        internal static unsafe global::Microsoft.UI.WindowId get_AppWindowId(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::Microsoft.UI.WindowId __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::Microsoft.UI.WindowId*, int>**)ThisPtr)[6](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }

        internal static unsafe global::Microsoft.UI.DisplayId get_DisplayId(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::Microsoft.UI.DisplayId __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::Microsoft.UI.DisplayId*, int>**)ThisPtr)[7](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }


        private volatile static global::System.Runtime.CompilerServices.ConditionalWeakTable<object, global::ABI.WinRT.Interop.EventSource<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Content.ContentIslandEnvironment, global::Microsoft.UI.Content.ContentEnvironmentSettingChangedEventArgs>>> _SettingChanged_;
        private static global::System.Runtime.CompilerServices.ConditionalWeakTable<object, global::ABI.WinRT.Interop.EventSource<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Content.ContentIslandEnvironment, global::Microsoft.UI.Content.ContentEnvironmentSettingChangedEventArgs>>> MakeSettingChangedTable()
        {
            
            global::System.Threading.Interlocked.CompareExchange(ref _SettingChanged_, new(), null);
            return _SettingChanged_;
        }
        private static global::System.Runtime.CompilerServices.ConditionalWeakTable<object, global::ABI.WinRT.Interop.EventSource<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Content.ContentIslandEnvironment, global::Microsoft.UI.Content.ContentEnvironmentSettingChangedEventArgs>>> _SettingChanged => _SettingChanged_ ?? MakeSettingChangedTable();



        internal static unsafe global::ABI.WinRT.Interop.EventSource<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Content.ContentIslandEnvironment, global::Microsoft.UI.Content.ContentEnvironmentSettingChangedEventArgs>> Get_SettingChanged2(IObjectReference _obj, object _thisObj)
        {
            return _SettingChanged.GetValue(_thisObj, (key) =>
            {

                var ThisPtr = _obj.ThisPtr;

                return 
                new _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_UI_Content_ContentIslandEnvironment__global__Microsoft_UI_Content_ContentEnvironmentSettingChangedEventArgs_(_obj,
                (*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, global::WinRT.EventRegistrationToken*, int>**)ThisPtr)[8],
                (*(delegate* unmanaged[Stdcall]<IntPtr, global::WinRT.EventRegistrationToken, int>**)ThisPtr)[9],
                0);
            });
        }

        private volatile static global::System.Runtime.CompilerServices.ConditionalWeakTable<object, global::ABI.WinRT.Interop.EventSource<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Content.ContentIslandEnvironment, global::Microsoft.UI.Content.ContentEnvironmentStateChangedEventArgs>>> _StateChanged_;
        private static global::System.Runtime.CompilerServices.ConditionalWeakTable<object, global::ABI.WinRT.Interop.EventSource<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Content.ContentIslandEnvironment, global::Microsoft.UI.Content.ContentEnvironmentStateChangedEventArgs>>> MakeStateChangedTable()
        {
            
            global::System.Threading.Interlocked.CompareExchange(ref _StateChanged_, new(), null);
            return _StateChanged_;
        }
        private static global::System.Runtime.CompilerServices.ConditionalWeakTable<object, global::ABI.WinRT.Interop.EventSource<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Content.ContentIslandEnvironment, global::Microsoft.UI.Content.ContentEnvironmentStateChangedEventArgs>>> _StateChanged => _StateChanged_ ?? MakeStateChangedTable();



        internal static unsafe global::ABI.WinRT.Interop.EventSource<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Content.ContentIslandEnvironment, global::Microsoft.UI.Content.ContentEnvironmentStateChangedEventArgs>> Get_StateChanged2(IObjectReference _obj, object _thisObj)
        {
            return _StateChanged.GetValue(_thisObj, (key) =>
            {

                var ThisPtr = _obj.ThisPtr;

                return 
                new _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_UI_Content_ContentIslandEnvironment__global__Microsoft_UI_Content_ContentEnvironmentStateChangedEventArgs_(_obj,
                (*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, global::WinRT.EventRegistrationToken*, int>**)ThisPtr)[10],
                (*(delegate* unmanaged[Stdcall]<IntPtr, global::WinRT.EventRegistrationToken, int>**)ThisPtr)[11],
                1);
            });
        }


        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0x6D, 0x23, 0x34, 0xC3, 0x88, 0xDA, 0x6D, 0x56, 0x81, 0x1D, 0x74, 0xAE, 0xF2, 0xEB, 0xA9, 0x78 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("C334236D-DA88-566D-811D-74AEF2EBA978")]
    internal interface IContentIslandEnvironment : global::Microsoft.UI.Content.IContentIslandEnvironment
    {
    }
    internal static class IContentIslandEnvironment2Methods
    {

        internal static unsafe float get_DisplayScale(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            float __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, float*, int>**)ThisPtr)[6](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0x71, 0x1A, 0xF8, 0x6B, 0xE4, 0xC1, 0xD6, 0x54, 0xAC, 0xD, 0x2, 0xBC, 0xFF, 0x52, 0x97, 0xE7 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("6BF81A71-C1E4-54D6-AC0D-02BCFF5297E7")]
    internal interface IContentIslandEnvironment2 : global::Microsoft.UI.Content.IContentIslandEnvironment2
    {
    }
    internal static class IContentIslandEnvironmentExperimentalMethods
    {

        internal static unsafe global::Microsoft.UI.Content.ContentDisplayOrientations get_CurrentOrientation(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::Microsoft.UI.Content.ContentDisplayOrientations __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::Microsoft.UI.Content.ContentDisplayOrientations*, int>**)ThisPtr)[6](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }

        internal static unsafe global::Microsoft.UI.Content.ContentDisplayOrientations get_NativeOrientation(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::Microsoft.UI.Content.ContentDisplayOrientations __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::Microsoft.UI.Content.ContentDisplayOrientations*, int>**)ThisPtr)[7](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }


        private volatile static global::System.Runtime.CompilerServices.ConditionalWeakTable<object, global::ABI.WinRT.Interop.EventSource<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Content.ContentIslandEnvironment, object>>> _ThemeChanged_;
        private static global::System.Runtime.CompilerServices.ConditionalWeakTable<object, global::ABI.WinRT.Interop.EventSource<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Content.ContentIslandEnvironment, object>>> MakeThemeChangedTable()
        {
            
            global::System.Threading.Interlocked.CompareExchange(ref _ThemeChanged_, new(), null);
            return _ThemeChanged_;
        }
        private static global::System.Runtime.CompilerServices.ConditionalWeakTable<object, global::ABI.WinRT.Interop.EventSource<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Content.ContentIslandEnvironment, object>>> _ThemeChanged => _ThemeChanged_ ?? MakeThemeChangedTable();



        internal static unsafe global::ABI.WinRT.Interop.EventSource<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Content.ContentIslandEnvironment, object>> Get_ThemeChanged2(IObjectReference _obj, object _thisObj)
        {
            return _ThemeChanged.GetValue(_thisObj, (key) =>
            {

                var ThisPtr = _obj.ThisPtr;

                return 
                new _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_UI_Content_ContentIslandEnvironment__object_(_obj,
                (*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, global::WinRT.EventRegistrationToken*, int>**)ThisPtr)[8],
                (*(delegate* unmanaged[Stdcall]<IntPtr, global::WinRT.EventRegistrationToken, int>**)ThisPtr)[9],
                0);
            });
        }


        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0xBC, 0x39, 0x83, 0x5A, 0xA1, 0xF7, 0x18, 0x57, 0x96, 0xCF, 0x0, 0xFC, 0x83, 0x32, 0xAC, 0x47 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("5A8339BC-F7A1-5718-96CF-00FC8332AC47")]
    internal interface IContentIslandEnvironmentExperimental : global::Microsoft.UI.Content.IContentIslandEnvironmentExperimental
    {
    }
    internal static class IContentIslandEnvironmentFactoryMethods
    {



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0xD6, 0x82, 0xA7, 0x47, 0x77, 0xB1, 0x1E, 0x5C, 0xBF, 0x87, 0x90, 0x43, 0x7D, 0xD8, 0x9, 0xD0 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("47A782D6-B177-5C1E-BF87-90437DD809D0")]
    internal interface IContentIslandEnvironmentFactory : global::Microsoft.UI.Content.IContentIslandEnvironmentFactory
    {
    }
    internal static class IContentIslandExperimentalMethods
    {

        internal static unsafe global::Microsoft.UI.Composition.Visual get_Root(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[6](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Composition.Visual.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.UI.Composition.Visual.DisposeAbi(__retval);
            }
        }
        internal static unsafe void set_Root(IObjectReference _obj, global::Microsoft.UI.Composition.Visual value)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __value = default;
            try
            {
                __value = global::ABI.Microsoft.UI.Composition.Visual.CreateMarshaler2(value);
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, int>**)ThisPtr)[7](ThisPtr, MarshalInspectable<object>.GetAbi(__value)));
                global::System.GC.KeepAlive(_obj);
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__value);
            }
        }


        private volatile static global::System.Runtime.CompilerServices.ConditionalWeakTable<object, global::ABI.WinRT.Interop.EventSource<global::System.EventHandler<global::Microsoft.UI.Content.ContentIsland>>> _Connected_;
        private static global::System.Runtime.CompilerServices.ConditionalWeakTable<object, global::ABI.WinRT.Interop.EventSource<global::System.EventHandler<global::Microsoft.UI.Content.ContentIsland>>> MakeConnectedTable()
        {
            _ = global::WinRT.GenericTypeInstantiations.Windows_Foundation_EventHandler_1_Microsoft_UI_Content_ContentIsland.EnsureInitialized();
            global::System.Threading.Interlocked.CompareExchange(ref _Connected_, new(), null);
            return _Connected_;
        }
        private static global::System.Runtime.CompilerServices.ConditionalWeakTable<object, global::ABI.WinRT.Interop.EventSource<global::System.EventHandler<global::Microsoft.UI.Content.ContentIsland>>> _Connected => _Connected_ ?? MakeConnectedTable();



        internal static unsafe global::ABI.WinRT.Interop.EventSource<global::System.EventHandler<global::Microsoft.UI.Content.ContentIsland>> Get_Connected2(IObjectReference _obj, object _thisObj)
        {
            return _Connected.GetValue(_thisObj, (key) =>
            {

                var ThisPtr = _obj.ThisPtr;

                return  new global::ABI.WinRT.Interop.EventHandlerEventSource<global::Microsoft.UI.Content.ContentIsland>(_obj,
                (*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, global::WinRT.EventRegistrationToken*, int>**)ThisPtr)[8],
                (*(delegate* unmanaged[Stdcall]<IntPtr, global::WinRT.EventRegistrationToken, int>**)ThisPtr)[9],
                0);
            });
        }

        private volatile static global::System.Runtime.CompilerServices.ConditionalWeakTable<object, global::ABI.WinRT.Interop.EventSource<global::System.EventHandler<global::Microsoft.UI.Content.ContentIsland>>> _Disconnected_;
        private static global::System.Runtime.CompilerServices.ConditionalWeakTable<object, global::ABI.WinRT.Interop.EventSource<global::System.EventHandler<global::Microsoft.UI.Content.ContentIsland>>> MakeDisconnectedTable()
        {
            _ = global::WinRT.GenericTypeInstantiations.Windows_Foundation_EventHandler_1_Microsoft_UI_Content_ContentIsland.EnsureInitialized();
            global::System.Threading.Interlocked.CompareExchange(ref _Disconnected_, new(), null);
            return _Disconnected_;
        }
        private static global::System.Runtime.CompilerServices.ConditionalWeakTable<object, global::ABI.WinRT.Interop.EventSource<global::System.EventHandler<global::Microsoft.UI.Content.ContentIsland>>> _Disconnected => _Disconnected_ ?? MakeDisconnectedTable();



        internal static unsafe global::ABI.WinRT.Interop.EventSource<global::System.EventHandler<global::Microsoft.UI.Content.ContentIsland>> Get_Disconnected2(IObjectReference _obj, object _thisObj)
        {
            return _Disconnected.GetValue(_thisObj, (key) =>
            {

                var ThisPtr = _obj.ThisPtr;

                return  new global::ABI.WinRT.Interop.EventHandlerEventSource<global::Microsoft.UI.Content.ContentIsland>(_obj,
                (*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, global::WinRT.EventRegistrationToken*, int>**)ThisPtr)[10],
                (*(delegate* unmanaged[Stdcall]<IntPtr, global::WinRT.EventRegistrationToken, int>**)ThisPtr)[11],
                1);
            });
        }


        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0x37, 0x55, 0x5B, 0x21, 0x85, 0x80, 0xF8, 0x51, 0x88, 0xDB, 0x0, 0xBA, 0x45, 0xF5, 0xBC, 0xEE };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("215B5537-8085-51F8-88DB-00BA45F5BCEE")]
    internal interface IContentIslandExperimental : global::Microsoft.UI.Content.IContentIslandExperimental
    {
    }
    internal static class IContentIslandFactoryMethods
    {



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0x52, 0x3F, 0x38, 0x82, 0x1A, 0xE8, 0xC9, 0x5E, 0xA9, 0x54, 0xBA, 0xC8, 0xA9, 0x31, 0xBA, 0x7D };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("82383F52-E81A-5EC9-A954-BAC8A931BA7D")]
    internal interface IContentIslandFactory : global::Microsoft.UI.Content.IContentIslandFactory
    {
    }
    internal static class IContentIslandStateChangedEventArgsMethods
    {

        internal static unsafe bool get_DidActualSizeChange(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            byte __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, byte*, int>**)ThisPtr)[6](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval != 0;
        }

        internal static unsafe bool get_DidLayoutDirectionChange(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            byte __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, byte*, int>**)ThisPtr)[9](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval != 0;
        }

        internal static unsafe bool get_DidRasterizationScaleChange(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            byte __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, byte*, int>**)ThisPtr)[10](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval != 0;
        }

        internal static unsafe bool get_DidSiteEnabledChange(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            byte __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, byte*, int>**)ThisPtr)[7](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval != 0;
        }

        internal static unsafe bool get_DidSiteVisibleChange(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            byte __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, byte*, int>**)ThisPtr)[8](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval != 0;
        }



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0xB2, 0xEE, 0x28, 0xC8, 0x62, 0xC, 0x40, 0x5B, 0x9D, 0x48, 0x77, 0xC0, 0x60, 0x83, 0xC2, 0x78 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("C828EEB2-0C62-5B40-9D48-77C06083C278")]
    internal interface IContentIslandStateChangedEventArgs : global::Microsoft.UI.Content.IContentIslandStateChangedEventArgs
    {
    }
    internal static class IContentIslandStateChangedEventArgs2Methods
    {

        internal static unsafe bool get_DidLocalToClientTransformMatrixChange(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            byte __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, byte*, int>**)ThisPtr)[6](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval != 0;
        }

        internal static unsafe bool get_DidLocalToParentTransformMatrixChange(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            byte __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, byte*, int>**)ThisPtr)[7](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval != 0;
        }



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0xE1, 0x5B, 0xD2, 0x8A, 0x9A, 0xA8, 0x72, 0x58, 0x89, 0x6E, 0x82, 0x98, 0xDD, 0x20, 0xEB, 0xD };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("8AD25BE1-A89A-5872-896E-8298DD20EB0D")]
    internal interface IContentIslandStateChangedEventArgs2 : global::Microsoft.UI.Content.IContentIslandStateChangedEventArgs2
    {
    }
    internal static class IContentIslandStaticsMethods
    {


        internal static unsafe global::Microsoft.UI.Content.ContentIsland Create(IObjectReference _obj, global::Microsoft.UI.Composition.Visual Root)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __Root = default;
            IntPtr __retval = default;
            try
            {
                __Root = global::ABI.Microsoft.UI.Composition.Visual.CreateMarshaler2(Root);
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, IntPtr*, int>**)ThisPtr)[6](ThisPtr, MarshalInspectable<object>.GetAbi(__Root), &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Content.ContentIsland.FromAbi(__retval);
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__Root);
                global::ABI.Microsoft.UI.Content.ContentIsland.DisposeAbi(__retval);
            }
        }

        internal static unsafe global::Microsoft.UI.Content.ContentIsland[] FindAllForCompositor(IObjectReference _obj, global::Microsoft.UI.Composition.Compositor compositor)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __compositor = default;
            int __retval_length = default;
            IntPtr __retval_data = default;
            try
            {
                __compositor = global::ABI.Microsoft.UI.Composition.Compositor.CreateMarshaler2(compositor);
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, int*, IntPtr*, int>**)ThisPtr)[7](ThisPtr, MarshalInspectable<object>.GetAbi(__compositor), &__retval_length, &__retval_data));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Content.ContentIsland.FromAbiArray((__retval_length, __retval_data));
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__compositor);
                global::ABI.Microsoft.UI.Content.ContentIsland.DisposeAbiArray((__retval_length, __retval_data));
            }
        }

        internal static unsafe global::Microsoft.UI.Content.ContentIsland[] FindAllForCurrentThread(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            int __retval_length = default;
            IntPtr __retval_data = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, int*, IntPtr*, int>**)ThisPtr)[8](ThisPtr, &__retval_length, &__retval_data));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Content.ContentIsland.FromAbiArray((__retval_length, __retval_data));
            }
            finally
            {
                global::ABI.Microsoft.UI.Content.ContentIsland.DisposeAbiArray((__retval_length, __retval_data));
            }
        }

        internal static unsafe global::Microsoft.UI.Content.ContentIsland GetByVisual(IObjectReference _obj, global::Microsoft.UI.Composition.Visual child)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __child = default;
            IntPtr __retval = default;
            try
            {
                __child = global::ABI.Microsoft.UI.Composition.Visual.CreateMarshaler2(child);
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, IntPtr*, int>**)ThisPtr)[9](ThisPtr, MarshalInspectable<object>.GetAbi(__child), &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Content.ContentIsland.FromAbi(__retval);
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__child);
                global::ABI.Microsoft.UI.Content.ContentIsland.DisposeAbi(__retval);
            }
        }

        internal static unsafe global::Microsoft.UI.Content.ContentIsland GetFromId(IObjectReference _obj, ulong id)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, ulong, IntPtr*, int>**)ThisPtr)[10](ThisPtr, id, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Content.ContentIsland.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.UI.Content.ContentIsland.DisposeAbi(__retval);
            }
        }


        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0xCC, 0xB7, 0x9E, 0x7B, 0x43, 0x8C, 0xA, 0x5E, 0xAB, 0x23, 0xAB, 0x48, 0x62, 0x8F, 0xD2, 0x23 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("7B9EB7CC-8C43-5E0A-AB23-AB48628FD223")]
    internal interface IContentIslandStatics : global::Microsoft.UI.Content.IContentIslandStatics
    {
    }
    internal static class IContentIslandStatics2Methods
    {


        internal static unsafe global::Microsoft.UI.Content.ContentIsland CreateForSystemVisual(IObjectReference _obj, global::Microsoft.UI.Dispatching.DispatcherQueue queue, global::Windows.UI.Composition.Visual root)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __queue = default;
            ObjectReferenceValue __root = default;
            IntPtr __retval = default;
            try
            {
                __queue = global::ABI.Microsoft.UI.Dispatching.DispatcherQueue.CreateMarshaler2(queue);
                __root = global::ABI.Windows.UI.Composition.Visual.CreateMarshaler2(root);
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, IntPtr, IntPtr*, int>**)ThisPtr)[6](ThisPtr, MarshalInspectable<object>.GetAbi(__queue), MarshalInspectable<object>.GetAbi(__root), &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Content.ContentIsland.FromAbi(__retval);
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__queue);
                MarshalInspectable<object>.DisposeMarshaler(__root);
                global::ABI.Microsoft.UI.Content.ContentIsland.DisposeAbi(__retval);
            }
        }

        internal static unsafe global::Microsoft.UI.Content.ContentIsland[] FindAllForSystemCompositor(IObjectReference _obj, global::Windows.UI.Composition.Compositor compositor)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __compositor = default;
            int __retval_length = default;
            IntPtr __retval_data = default;
            try
            {
                __compositor = global::ABI.Windows.UI.Composition.Compositor.CreateMarshaler2(compositor);
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, int*, IntPtr*, int>**)ThisPtr)[7](ThisPtr, MarshalInspectable<object>.GetAbi(__compositor), &__retval_length, &__retval_data));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Content.ContentIsland.FromAbiArray((__retval_length, __retval_data));
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__compositor);
                global::ABI.Microsoft.UI.Content.ContentIsland.DisposeAbiArray((__retval_length, __retval_data));
            }
        }

        internal static unsafe global::Microsoft.UI.Content.ContentIsland GetBySystemVisual(IObjectReference _obj, global::Windows.UI.Composition.Visual child)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __child = default;
            IntPtr __retval = default;
            try
            {
                __child = global::ABI.Windows.UI.Composition.Visual.CreateMarshaler2(child);
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, IntPtr*, int>**)ThisPtr)[8](ThisPtr, MarshalInspectable<object>.GetAbi(__child), &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Content.ContentIsland.FromAbi(__retval);
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__child);
                global::ABI.Microsoft.UI.Content.ContentIsland.DisposeAbi(__retval);
            }
        }


        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0x77, 0xFA, 0xC6, 0xB2, 0xC9, 0x13, 0x64, 0x50, 0xBB, 0x1D, 0xF8, 0x78, 0xD8, 0x6A, 0xCC, 0x65 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("B2C6FA77-13C9-5064-BB1D-F878D86ACC65")]
    internal interface IContentIslandStatics2 : global::Microsoft.UI.Content.IContentIslandStatics2
    {
    }
    public static class IContentNodeOwnerMethods
    {



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0x4, 0xC3, 0x51, 0x22, 0x9D, 0x44, 0x56, 0x44, 0xB0, 0x8, 0xFE, 0x71, 0x63, 0x40, 0x3D, 0x7E };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

        public static global::System.IntPtr AbiToProjectionVftablePtr => IContentNodeOwner.AbiToProjectionVftablePtr;

    }
    [DynamicInterfaceCastableImplementation]
    [Guid("2251C304-449D-4456-B008-FE7163403D7E")]
    internal unsafe interface IContentNodeOwner : global::Microsoft.UI.Content.IContentNodeOwner
    {

        public static readonly IntPtr AbiToProjectionVftablePtr;
        static unsafe IContentNodeOwner()
        {
            AbiToProjectionVftablePtr = ComWrappersSupport.AllocateVtableMemory(typeof(IContentNodeOwner), sizeof(IInspectable.Vftbl) + sizeof(IntPtr) * 0);
            *(IInspectable.Vftbl*)AbiToProjectionVftablePtr = IInspectable.Vftbl.AbiToProjectionVftable;

        }

    }

    internal static class IContentSiteMethods
    {


        internal static unsafe global::Microsoft.UI.Content.ContentDeferral GetIslandStateChangeDeferral(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[29](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Content.ContentDeferral.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.UI.Content.ContentDeferral.DisposeAbi(__retval);
            }
        }
        internal static unsafe global::System.Numerics.Vector2 get_ActualSize(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::System.Numerics.Vector2 __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::System.Numerics.Vector2*, int>**)ThisPtr)[6](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }
        internal static unsafe void set_ActualSize(IObjectReference _obj, global::System.Numerics.Vector2 value)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::System.Numerics.Vector2, int>**)ThisPtr)[7](ThisPtr, value));
            global::System.GC.KeepAlive(_obj);
        }

        internal static unsafe global::Windows.Graphics.SizeInt32 get_ClientSize(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::Windows.Graphics.SizeInt32 __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::Windows.Graphics.SizeInt32*, int>**)ThisPtr)[8](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }
        internal static unsafe void set_ClientSize(IObjectReference _obj, global::Windows.Graphics.SizeInt32 value)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::Windows.Graphics.SizeInt32, int>**)ThisPtr)[9](ThisPtr, value));
            global::System.GC.KeepAlive(_obj);
        }

        internal static unsafe global::Microsoft.UI.Content.ContentCoordinateConverter get_CoordinateConverter(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[10](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Content.ContentCoordinateConverter.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.UI.Content.ContentCoordinateConverter.DisposeAbi(__retval);
            }
        }

        internal static unsafe global::Microsoft.UI.Dispatching.DispatcherQueue get_DispatcherQueue(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[11](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Dispatching.DispatcherQueue.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.UI.Dispatching.DispatcherQueue.DisposeAbi(__retval);
            }
        }

        internal static unsafe global::Microsoft.UI.Content.ContentSiteEnvironment get_Environment(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[12](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Content.ContentSiteEnvironment.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.UI.Content.ContentSiteEnvironment.DisposeAbi(__retval);
            }
        }

        internal static unsafe bool get_IsConnected(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            byte __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, byte*, int>**)ThisPtr)[13](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval != 0;
        }

        internal static unsafe bool get_IsSiteEnabled(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            byte __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, byte*, int>**)ThisPtr)[14](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval != 0;
        }
        internal static unsafe void set_IsSiteEnabled(IObjectReference _obj, bool value)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, byte, int>**)ThisPtr)[15](ThisPtr, (byte)(value ? 1 : 0)));
            global::System.GC.KeepAlive(_obj);
        }

        internal static unsafe bool get_IsSiteVisible(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            byte __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, byte*, int>**)ThisPtr)[16](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval != 0;
        }
        internal static unsafe void set_IsSiteVisible(IObjectReference _obj, bool value)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, byte, int>**)ThisPtr)[17](ThisPtr, (byte)(value ? 1 : 0)));
            global::System.GC.KeepAlive(_obj);
        }

        internal static unsafe global::Microsoft.UI.Content.ContentLayoutDirection get_LayoutDirection(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::Microsoft.UI.Content.ContentLayoutDirection __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::Microsoft.UI.Content.ContentLayoutDirection*, int>**)ThisPtr)[18](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }
        internal static unsafe void set_LayoutDirection(IObjectReference _obj, global::Microsoft.UI.Content.ContentLayoutDirection value)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::Microsoft.UI.Content.ContentLayoutDirection, int>**)ThisPtr)[19](ThisPtr, value));
            global::System.GC.KeepAlive(_obj);
        }

        internal static unsafe float get_OverrideScale(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            float __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, float*, int>**)ThisPtr)[20](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }
        internal static unsafe void set_OverrideScale(IObjectReference _obj, float value)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, float, int>**)ThisPtr)[21](ThisPtr, value));
            global::System.GC.KeepAlive(_obj);
        }

        internal static unsafe float get_ParentScale(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            float __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, float*, int>**)ThisPtr)[22](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }
        internal static unsafe void set_ParentScale(IObjectReference _obj, float value)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, float, int>**)ThisPtr)[23](ThisPtr, value));
            global::System.GC.KeepAlive(_obj);
        }

        internal static unsafe float get_RasterizationScale(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            float __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, float*, int>**)ThisPtr)[24](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }

        internal static unsafe global::System.Numerics.Vector2 get_RequestedSize(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::System.Numerics.Vector2 __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::System.Numerics.Vector2*, int>**)ThisPtr)[25](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }

        internal static unsafe bool get_ShouldApplyRasterizationScale(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            byte __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, byte*, int>**)ThisPtr)[26](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval != 0;
        }
        internal static unsafe void set_ShouldApplyRasterizationScale(IObjectReference _obj, bool value)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, byte, int>**)ThisPtr)[27](ThisPtr, (byte)(value ? 1 : 0)));
            global::System.GC.KeepAlive(_obj);
        }

        internal static unsafe global::Microsoft.UI.Content.ContentSiteView get_View(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[28](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Content.ContentSiteView.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.UI.Content.ContentSiteView.DisposeAbi(__retval);
            }
        }


        private volatile static global::System.Runtime.CompilerServices.ConditionalWeakTable<object, global::ABI.WinRT.Interop.EventSource<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Content.ContentSite, global::Microsoft.UI.Content.ContentSiteRequestedStateChangedEventArgs>>> _RequestedStateChanged_;
        private static global::System.Runtime.CompilerServices.ConditionalWeakTable<object, global::ABI.WinRT.Interop.EventSource<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Content.ContentSite, global::Microsoft.UI.Content.ContentSiteRequestedStateChangedEventArgs>>> MakeRequestedStateChangedTable()
        {
            
            global::System.Threading.Interlocked.CompareExchange(ref _RequestedStateChanged_, new(), null);
            return _RequestedStateChanged_;
        }
        private static global::System.Runtime.CompilerServices.ConditionalWeakTable<object, global::ABI.WinRT.Interop.EventSource<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Content.ContentSite, global::Microsoft.UI.Content.ContentSiteRequestedStateChangedEventArgs>>> _RequestedStateChanged => _RequestedStateChanged_ ?? MakeRequestedStateChangedTable();



        internal static unsafe global::ABI.WinRT.Interop.EventSource<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Content.ContentSite, global::Microsoft.UI.Content.ContentSiteRequestedStateChangedEventArgs>> Get_RequestedStateChanged2(IObjectReference _obj, object _thisObj)
        {
            return _RequestedStateChanged.GetValue(_thisObj, (key) =>
            {

                var ThisPtr = _obj.ThisPtr;

                return 
                new _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_UI_Content_ContentSite__global__Microsoft_UI_Content_ContentSiteRequestedStateChangedEventArgs_(_obj,
                (*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, global::WinRT.EventRegistrationToken*, int>**)ThisPtr)[30],
                (*(delegate* unmanaged[Stdcall]<IntPtr, global::WinRT.EventRegistrationToken, int>**)ThisPtr)[31],
                0);
            });
        }


        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0xC4, 0x60, 0x6C, 0x99, 0xB2, 0x2, 0xEF, 0x5E, 0x93, 0xB0, 0xDD, 0x6B, 0x1E, 0xC2, 0xFD, 0x7B };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("996C60C4-02B2-5EEF-93B0-DD6B1EC2FD7B")]
    internal interface IContentSite : global::Microsoft.UI.Content.IContentSite
    {
    }
    internal static class IContentSite2Methods
    {

        internal static unsafe global::System.Numerics.Matrix4x4 get_LocalToClientTransformMatrix(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::System.Numerics.Matrix4x4 __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::System.Numerics.Matrix4x4*, int>**)ThisPtr)[6](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }

        internal static unsafe global::System.Numerics.Matrix4x4 get_LocalToParentTransformMatrix(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::System.Numerics.Matrix4x4 __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::System.Numerics.Matrix4x4*, int>**)ThisPtr)[7](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }
        internal static unsafe void set_LocalToParentTransformMatrix(IObjectReference _obj, global::System.Numerics.Matrix4x4 value)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::System.Numerics.Matrix4x4, int>**)ThisPtr)[8](ThisPtr, value));
            global::System.GC.KeepAlive(_obj);
        }

        internal static unsafe bool get_ProcessesKeyboardInput(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            byte __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, byte*, int>**)ThisPtr)[9](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval != 0;
        }
        internal static unsafe void set_ProcessesKeyboardInput(IObjectReference _obj, bool value)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, byte, int>**)ThisPtr)[10](ThisPtr, (byte)(value ? 1 : 0)));
            global::System.GC.KeepAlive(_obj);
        }

        internal static unsafe bool get_ProcessesPointerInput(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            byte __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, byte*, int>**)ThisPtr)[11](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval != 0;
        }
        internal static unsafe void set_ProcessesPointerInput(IObjectReference _obj, bool value)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, byte, int>**)ThisPtr)[12](ThisPtr, (byte)(value ? 1 : 0)));
            global::System.GC.KeepAlive(_obj);
        }



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0x9E, 0x14, 0xF0, 0xC3, 0x8C, 0x3F, 0x61, 0x59, 0x9D, 0x4, 0xCD, 0x6C, 0x8A, 0x7F, 0x60, 0x26 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("C3F0149E-3F8C-5961-9D04-CD6C8A7F6026")]
    internal interface IContentSite2 : global::Microsoft.UI.Content.IContentSite2
    {
    }
    public static class IContentSiteAutomationMethods
    {

        public static unsafe global::Microsoft.UI.Content.ContentAutomationOptions get_AutomationOption(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::Microsoft.UI.Content.ContentAutomationOptions __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::Microsoft.UI.Content.ContentAutomationOptions*, int>**)ThisPtr)[6](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }
        public static unsafe void set_AutomationOption(IObjectReference _obj, global::Microsoft.UI.Content.ContentAutomationOptions value)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::Microsoft.UI.Content.ContentAutomationOptions, int>**)ThisPtr)[7](ThisPtr, value));
            global::System.GC.KeepAlive(_obj);
        }

        public static unsafe object get_AutomationProvider(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[8](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return MarshalInspectable<object>.FromAbi(__retval);
            }
            finally
            {
                MarshalInspectable<object>.DisposeAbi(__retval);
            }
        }


        private volatile static global::System.Runtime.CompilerServices.ConditionalWeakTable<object, global::ABI.WinRT.Interop.EventSource<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Content.IContentSiteAutomation, global::Microsoft.UI.Content.ContentSiteAutomationProviderRequestedEventArgs>>> _FragmentRootAutomationProviderRequested_;
        private static global::System.Runtime.CompilerServices.ConditionalWeakTable<object, global::ABI.WinRT.Interop.EventSource<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Content.IContentSiteAutomation, global::Microsoft.UI.Content.ContentSiteAutomationProviderRequestedEventArgs>>> MakeFragmentRootAutomationProviderRequestedTable()
        {
            
            global::System.Threading.Interlocked.CompareExchange(ref _FragmentRootAutomationProviderRequested_, new(), null);
            return _FragmentRootAutomationProviderRequested_;
        }
        private static global::System.Runtime.CompilerServices.ConditionalWeakTable<object, global::ABI.WinRT.Interop.EventSource<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Content.IContentSiteAutomation, global::Microsoft.UI.Content.ContentSiteAutomationProviderRequestedEventArgs>>> _FragmentRootAutomationProviderRequested => _FragmentRootAutomationProviderRequested_ ?? MakeFragmentRootAutomationProviderRequestedTable();

        public static unsafe (Action<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Content.IContentSiteAutomation, global::Microsoft.UI.Content.ContentSiteAutomationProviderRequestedEventArgs>>, Action<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Content.IContentSiteAutomation, global::Microsoft.UI.Content.ContentSiteAutomationProviderRequestedEventArgs>>) Get_FragmentRootAutomationProviderRequested(IObjectReference _obj, object _thisObj)
        {
            var eventSource = Get_FragmentRootAutomationProviderRequested2(_obj, _thisObj);
            return (eventSource.Subscribe, eventSource.Unsubscribe);
        }

        public static unsafe global::ABI.WinRT.Interop.EventSource<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Content.IContentSiteAutomation, global::Microsoft.UI.Content.ContentSiteAutomationProviderRequestedEventArgs>> Get_FragmentRootAutomationProviderRequested2(IObjectReference _obj, object _thisObj)
        {
            return _FragmentRootAutomationProviderRequested.GetValue(_thisObj, (key) =>
            {

                var ThisPtr = _obj.ThisPtr;

                return 
                new _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_UI_Content_IContentSiteAutomation__global__Microsoft_UI_Content_ContentSiteAutomationProviderRequestedEventArgs_(_obj,
                (*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, global::WinRT.EventRegistrationToken*, int>**)ThisPtr)[9],
                (*(delegate* unmanaged[Stdcall]<IntPtr, global::WinRT.EventRegistrationToken, int>**)ThisPtr)[10],
                0);
            });
        }

        private volatile static global::System.Runtime.CompilerServices.ConditionalWeakTable<object, global::ABI.WinRT.Interop.EventSource<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Content.IContentSiteAutomation, global::Microsoft.UI.Content.ContentSiteAutomationProviderRequestedEventArgs>>> _NextSiblingAutomationProviderRequested_;
        private static global::System.Runtime.CompilerServices.ConditionalWeakTable<object, global::ABI.WinRT.Interop.EventSource<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Content.IContentSiteAutomation, global::Microsoft.UI.Content.ContentSiteAutomationProviderRequestedEventArgs>>> MakeNextSiblingAutomationProviderRequestedTable()
        {
            
            global::System.Threading.Interlocked.CompareExchange(ref _NextSiblingAutomationProviderRequested_, new(), null);
            return _NextSiblingAutomationProviderRequested_;
        }
        private static global::System.Runtime.CompilerServices.ConditionalWeakTable<object, global::ABI.WinRT.Interop.EventSource<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Content.IContentSiteAutomation, global::Microsoft.UI.Content.ContentSiteAutomationProviderRequestedEventArgs>>> _NextSiblingAutomationProviderRequested => _NextSiblingAutomationProviderRequested_ ?? MakeNextSiblingAutomationProviderRequestedTable();

        public static unsafe (Action<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Content.IContentSiteAutomation, global::Microsoft.UI.Content.ContentSiteAutomationProviderRequestedEventArgs>>, Action<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Content.IContentSiteAutomation, global::Microsoft.UI.Content.ContentSiteAutomationProviderRequestedEventArgs>>) Get_NextSiblingAutomationProviderRequested(IObjectReference _obj, object _thisObj)
        {
            var eventSource = Get_NextSiblingAutomationProviderRequested2(_obj, _thisObj);
            return (eventSource.Subscribe, eventSource.Unsubscribe);
        }

        public static unsafe global::ABI.WinRT.Interop.EventSource<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Content.IContentSiteAutomation, global::Microsoft.UI.Content.ContentSiteAutomationProviderRequestedEventArgs>> Get_NextSiblingAutomationProviderRequested2(IObjectReference _obj, object _thisObj)
        {
            return _NextSiblingAutomationProviderRequested.GetValue(_thisObj, (key) =>
            {

                var ThisPtr = _obj.ThisPtr;

                return 
                new _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_UI_Content_IContentSiteAutomation__global__Microsoft_UI_Content_ContentSiteAutomationProviderRequestedEventArgs_(_obj,
                (*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, global::WinRT.EventRegistrationToken*, int>**)ThisPtr)[11],
                (*(delegate* unmanaged[Stdcall]<IntPtr, global::WinRT.EventRegistrationToken, int>**)ThisPtr)[12],
                1);
            });
        }

        private volatile static global::System.Runtime.CompilerServices.ConditionalWeakTable<object, global::ABI.WinRT.Interop.EventSource<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Content.IContentSiteAutomation, global::Microsoft.UI.Content.ContentSiteAutomationProviderRequestedEventArgs>>> _ParentAutomationProviderRequested_;
        private static global::System.Runtime.CompilerServices.ConditionalWeakTable<object, global::ABI.WinRT.Interop.EventSource<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Content.IContentSiteAutomation, global::Microsoft.UI.Content.ContentSiteAutomationProviderRequestedEventArgs>>> MakeParentAutomationProviderRequestedTable()
        {
            
            global::System.Threading.Interlocked.CompareExchange(ref _ParentAutomationProviderRequested_, new(), null);
            return _ParentAutomationProviderRequested_;
        }
        private static global::System.Runtime.CompilerServices.ConditionalWeakTable<object, global::ABI.WinRT.Interop.EventSource<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Content.IContentSiteAutomation, global::Microsoft.UI.Content.ContentSiteAutomationProviderRequestedEventArgs>>> _ParentAutomationProviderRequested => _ParentAutomationProviderRequested_ ?? MakeParentAutomationProviderRequestedTable();

        public static unsafe (Action<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Content.IContentSiteAutomation, global::Microsoft.UI.Content.ContentSiteAutomationProviderRequestedEventArgs>>, Action<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Content.IContentSiteAutomation, global::Microsoft.UI.Content.ContentSiteAutomationProviderRequestedEventArgs>>) Get_ParentAutomationProviderRequested(IObjectReference _obj, object _thisObj)
        {
            var eventSource = Get_ParentAutomationProviderRequested2(_obj, _thisObj);
            return (eventSource.Subscribe, eventSource.Unsubscribe);
        }

        public static unsafe global::ABI.WinRT.Interop.EventSource<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Content.IContentSiteAutomation, global::Microsoft.UI.Content.ContentSiteAutomationProviderRequestedEventArgs>> Get_ParentAutomationProviderRequested2(IObjectReference _obj, object _thisObj)
        {
            return _ParentAutomationProviderRequested.GetValue(_thisObj, (key) =>
            {

                var ThisPtr = _obj.ThisPtr;

                return 
                new _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_UI_Content_IContentSiteAutomation__global__Microsoft_UI_Content_ContentSiteAutomationProviderRequestedEventArgs_(_obj,
                (*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, global::WinRT.EventRegistrationToken*, int>**)ThisPtr)[13],
                (*(delegate* unmanaged[Stdcall]<IntPtr, global::WinRT.EventRegistrationToken, int>**)ThisPtr)[14],
                2);
            });
        }

        private volatile static global::System.Runtime.CompilerServices.ConditionalWeakTable<object, global::ABI.WinRT.Interop.EventSource<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Content.IContentSiteAutomation, global::Microsoft.UI.Content.ContentSiteAutomationProviderRequestedEventArgs>>> _PreviousSiblingAutomationProviderRequested_;
        private static global::System.Runtime.CompilerServices.ConditionalWeakTable<object, global::ABI.WinRT.Interop.EventSource<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Content.IContentSiteAutomation, global::Microsoft.UI.Content.ContentSiteAutomationProviderRequestedEventArgs>>> MakePreviousSiblingAutomationProviderRequestedTable()
        {
            
            global::System.Threading.Interlocked.CompareExchange(ref _PreviousSiblingAutomationProviderRequested_, new(), null);
            return _PreviousSiblingAutomationProviderRequested_;
        }
        private static global::System.Runtime.CompilerServices.ConditionalWeakTable<object, global::ABI.WinRT.Interop.EventSource<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Content.IContentSiteAutomation, global::Microsoft.UI.Content.ContentSiteAutomationProviderRequestedEventArgs>>> _PreviousSiblingAutomationProviderRequested => _PreviousSiblingAutomationProviderRequested_ ?? MakePreviousSiblingAutomationProviderRequestedTable();

        public static unsafe (Action<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Content.IContentSiteAutomation, global::Microsoft.UI.Content.ContentSiteAutomationProviderRequestedEventArgs>>, Action<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Content.IContentSiteAutomation, global::Microsoft.UI.Content.ContentSiteAutomationProviderRequestedEventArgs>>) Get_PreviousSiblingAutomationProviderRequested(IObjectReference _obj, object _thisObj)
        {
            var eventSource = Get_PreviousSiblingAutomationProviderRequested2(_obj, _thisObj);
            return (eventSource.Subscribe, eventSource.Unsubscribe);
        }

        public static unsafe global::ABI.WinRT.Interop.EventSource<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Content.IContentSiteAutomation, global::Microsoft.UI.Content.ContentSiteAutomationProviderRequestedEventArgs>> Get_PreviousSiblingAutomationProviderRequested2(IObjectReference _obj, object _thisObj)
        {
            return _PreviousSiblingAutomationProviderRequested.GetValue(_thisObj, (key) =>
            {

                var ThisPtr = _obj.ThisPtr;

                return 
                new _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_UI_Content_IContentSiteAutomation__global__Microsoft_UI_Content_ContentSiteAutomationProviderRequestedEventArgs_(_obj,
                (*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, global::WinRT.EventRegistrationToken*, int>**)ThisPtr)[15],
                (*(delegate* unmanaged[Stdcall]<IntPtr, global::WinRT.EventRegistrationToken, int>**)ThisPtr)[16],
                3);
            });
        }


        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0x83, 0x46, 0x4F, 0xDB, 0x76, 0xCD, 0xD0, 0x50, 0x9A, 0xE1, 0x4, 0x4C, 0xEB, 0x3D, 0x3C, 0x7A };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

        public static global::System.IntPtr AbiToProjectionVftablePtr => IContentSiteAutomation.AbiToProjectionVftablePtr;

    }
    [DynamicInterfaceCastableImplementation]
    [Guid("DB4F4683-CD76-50D0-9AE1-044CEB3D3C7A")]
    internal unsafe interface IContentSiteAutomation : global::Microsoft.UI.Content.IContentSiteAutomation
    {

        public static readonly IntPtr AbiToProjectionVftablePtr;
        static unsafe IContentSiteAutomation()
        {
            AbiToProjectionVftablePtr = ComWrappersSupport.AllocateVtableMemory(typeof(IContentSiteAutomation), sizeof(IInspectable.Vftbl) + sizeof(IntPtr) * 11);
            *(IInspectable.Vftbl*)AbiToProjectionVftablePtr = IInspectable.Vftbl.AbiToProjectionVftable;
            ((delegate* unmanaged[Stdcall]<IntPtr, global::Microsoft.UI.Content.ContentAutomationOptions*, int>*)AbiToProjectionVftablePtr)[6] = &Do_Abi_get_AutomationOption_0;
            ((delegate* unmanaged[Stdcall]<IntPtr, global::Microsoft.UI.Content.ContentAutomationOptions, int>*)AbiToProjectionVftablePtr)[7] = &Do_Abi_put_AutomationOption_1;
            ((delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>*)AbiToProjectionVftablePtr)[8] = &Do_Abi_get_AutomationProvider_2;
            ((delegate* unmanaged[Stdcall]<IntPtr, IntPtr, global::WinRT.EventRegistrationToken*, int>*)AbiToProjectionVftablePtr)[9] = &Do_Abi_add_FragmentRootAutomationProviderRequested_3;
            ((delegate* unmanaged[Stdcall]<IntPtr, global::WinRT.EventRegistrationToken, int>*)AbiToProjectionVftablePtr)[10] = &Do_Abi_remove_FragmentRootAutomationProviderRequested_4;
            ((delegate* unmanaged[Stdcall]<IntPtr, IntPtr, global::WinRT.EventRegistrationToken*, int>*)AbiToProjectionVftablePtr)[11] = &Do_Abi_add_NextSiblingAutomationProviderRequested_5;
            ((delegate* unmanaged[Stdcall]<IntPtr, global::WinRT.EventRegistrationToken, int>*)AbiToProjectionVftablePtr)[12] = &Do_Abi_remove_NextSiblingAutomationProviderRequested_6;
            ((delegate* unmanaged[Stdcall]<IntPtr, IntPtr, global::WinRT.EventRegistrationToken*, int>*)AbiToProjectionVftablePtr)[13] = &Do_Abi_add_ParentAutomationProviderRequested_7;
            ((delegate* unmanaged[Stdcall]<IntPtr, global::WinRT.EventRegistrationToken, int>*)AbiToProjectionVftablePtr)[14] = &Do_Abi_remove_ParentAutomationProviderRequested_8;
            ((delegate* unmanaged[Stdcall]<IntPtr, IntPtr, global::WinRT.EventRegistrationToken*, int>*)AbiToProjectionVftablePtr)[15] = &Do_Abi_add_PreviousSiblingAutomationProviderRequested_9;
            ((delegate* unmanaged[Stdcall]<IntPtr, global::WinRT.EventRegistrationToken, int>*)AbiToProjectionVftablePtr)[16] = &Do_Abi_remove_PreviousSiblingAutomationProviderRequested_10;
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvStdcall) })]
        private static unsafe int Do_Abi_put_AutomationOption_1(IntPtr thisPtr, global::Microsoft.UI.Content.ContentAutomationOptions value)
        {



            try
            {
                global::WinRT.ComWrappersSupport.FindObject<global::Microsoft.UI.Content.IContentSiteAutomation>(thisPtr).AutomationOption = value;

            }
            catch (Exception __exception__)
            {
                global::WinRT.ExceptionHelpers.SetErrorInfo(__exception__);
                return global::WinRT.ExceptionHelpers.GetHRForException(__exception__);
            }
            return 0;
        }
        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvStdcall) })]
        private static unsafe int Do_Abi_get_AutomationOption_0(IntPtr thisPtr, global::Microsoft.UI.Content.ContentAutomationOptions* value)
        {

            global::Microsoft.UI.Content.ContentAutomationOptions __value = default;

            *value = default;

            try
            {
                __value = global::WinRT.ComWrappersSupport.FindObject<global::Microsoft.UI.Content.IContentSiteAutomation>(thisPtr).AutomationOption;
                *value = __value;

            }
            catch (Exception __exception__)
            {
                global::WinRT.ExceptionHelpers.SetErrorInfo(__exception__);
                return global::WinRT.ExceptionHelpers.GetHRForException(__exception__);
            }
            return 0;
        }
        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvStdcall) })]
        private static unsafe int Do_Abi_get_AutomationProvider_2(IntPtr thisPtr, IntPtr* value)
        {

            object __value = default;

            *value = default;

            try
            {
                __value = global::WinRT.ComWrappersSupport.FindObject<global::Microsoft.UI.Content.IContentSiteAutomation>(thisPtr).AutomationProvider;
                *value = MarshalInspectable<object>.FromManaged(__value);

            }
            catch (Exception __exception__)
            {
                global::WinRT.ExceptionHelpers.SetErrorInfo(__exception__);
                return global::WinRT.ExceptionHelpers.GetHRForException(__exception__);
            }
            return 0;
        }
        private volatile static global::System.Runtime.CompilerServices.ConditionalWeakTable<global::Microsoft.UI.Content.IContentSiteAutomation, global::WinRT.EventRegistrationTokenTable<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Content.IContentSiteAutomation, global::Microsoft.UI.Content.ContentSiteAutomationProviderRequestedEventArgs>>> _FragmentRootAutomationProviderRequested_tokenTables;
        private static global::System.Runtime.CompilerServices.ConditionalWeakTable<global::Microsoft.UI.Content.IContentSiteAutomation, global::WinRT.EventRegistrationTokenTable<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Content.IContentSiteAutomation, global::Microsoft.UI.Content.ContentSiteAutomationProviderRequestedEventArgs>>> MakeFragmentRootAutomationProviderRequestedTable()
        {
            global::System.Threading.Interlocked.CompareExchange(ref _FragmentRootAutomationProviderRequested_tokenTables, new(), null);
            return _FragmentRootAutomationProviderRequested_tokenTables;
        }
        private static global::System.Runtime.CompilerServices.ConditionalWeakTable<global::Microsoft.UI.Content.IContentSiteAutomation, global::WinRT.EventRegistrationTokenTable<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Content.IContentSiteAutomation, global::Microsoft.UI.Content.ContentSiteAutomationProviderRequestedEventArgs>>> _FragmentRootAutomationProviderRequested_TokenTables => _FragmentRootAutomationProviderRequested_tokenTables ?? MakeFragmentRootAutomationProviderRequestedTable();

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvStdcall) })]
        private static unsafe int Do_Abi_add_FragmentRootAutomationProviderRequested_3(IntPtr thisPtr, IntPtr handler, global::WinRT.EventRegistrationToken* token)
        {
            _ = global::WinRT.GenericTypeInstantiations.Windows_Foundation_TypedEventHandler_2_Microsoft_UI_Content_IContentSiteAutomation__Microsoft_UI_Content_ContentSiteAutomationProviderRequestedEventArgs.EnsureInitialized();
            *token = default;
            try
            {
                var __this = global::WinRT.ComWrappersSupport.FindObject<global::Microsoft.UI.Content.IContentSiteAutomation>(thisPtr);
                var __handler = global::ABI.Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Content.IContentSiteAutomation, global::Microsoft.UI.Content.ContentSiteAutomationProviderRequestedEventArgs>.FromAbi(handler);
                *token = _FragmentRootAutomationProviderRequested_TokenTables.GetOrCreateValue(__this).AddEventHandler(__handler);
                __this.FragmentRootAutomationProviderRequested += __handler;
                return 0;
            }
            catch (Exception __ex)
            {
                return __ex.HResult;
            }
        }
        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvStdcall) })]
        private static unsafe int Do_Abi_remove_FragmentRootAutomationProviderRequested_4(IntPtr thisPtr, global::WinRT.EventRegistrationToken token)
        {
            try
            {
                var __this = global::WinRT.ComWrappersSupport.FindObject<global::Microsoft.UI.Content.IContentSiteAutomation>(thisPtr);
                if(__this != null && _FragmentRootAutomationProviderRequested_TokenTables.TryGetValue(__this, out var __table) && __table.RemoveEventHandler(token, out var __handler))
                {
                    __this.FragmentRootAutomationProviderRequested -= __handler;
                }
                return 0;
            }
            catch (Exception __ex)
            {
                return __ex.HResult;
            }
        }
        private volatile static global::System.Runtime.CompilerServices.ConditionalWeakTable<global::Microsoft.UI.Content.IContentSiteAutomation, global::WinRT.EventRegistrationTokenTable<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Content.IContentSiteAutomation, global::Microsoft.UI.Content.ContentSiteAutomationProviderRequestedEventArgs>>> _NextSiblingAutomationProviderRequested_tokenTables;
        private static global::System.Runtime.CompilerServices.ConditionalWeakTable<global::Microsoft.UI.Content.IContentSiteAutomation, global::WinRT.EventRegistrationTokenTable<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Content.IContentSiteAutomation, global::Microsoft.UI.Content.ContentSiteAutomationProviderRequestedEventArgs>>> MakeNextSiblingAutomationProviderRequestedTable()
        {
            global::System.Threading.Interlocked.CompareExchange(ref _NextSiblingAutomationProviderRequested_tokenTables, new(), null);
            return _NextSiblingAutomationProviderRequested_tokenTables;
        }
        private static global::System.Runtime.CompilerServices.ConditionalWeakTable<global::Microsoft.UI.Content.IContentSiteAutomation, global::WinRT.EventRegistrationTokenTable<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Content.IContentSiteAutomation, global::Microsoft.UI.Content.ContentSiteAutomationProviderRequestedEventArgs>>> _NextSiblingAutomationProviderRequested_TokenTables => _NextSiblingAutomationProviderRequested_tokenTables ?? MakeNextSiblingAutomationProviderRequestedTable();

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvStdcall) })]
        private static unsafe int Do_Abi_add_NextSiblingAutomationProviderRequested_5(IntPtr thisPtr, IntPtr handler, global::WinRT.EventRegistrationToken* token)
        {
            _ = global::WinRT.GenericTypeInstantiations.Windows_Foundation_TypedEventHandler_2_Microsoft_UI_Content_IContentSiteAutomation__Microsoft_UI_Content_ContentSiteAutomationProviderRequestedEventArgs.EnsureInitialized();
            *token = default;
            try
            {
                var __this = global::WinRT.ComWrappersSupport.FindObject<global::Microsoft.UI.Content.IContentSiteAutomation>(thisPtr);
                var __handler = global::ABI.Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Content.IContentSiteAutomation, global::Microsoft.UI.Content.ContentSiteAutomationProviderRequestedEventArgs>.FromAbi(handler);
                *token = _NextSiblingAutomationProviderRequested_TokenTables.GetOrCreateValue(__this).AddEventHandler(__handler);
                __this.NextSiblingAutomationProviderRequested += __handler;
                return 0;
            }
            catch (Exception __ex)
            {
                return __ex.HResult;
            }
        }
        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvStdcall) })]
        private static unsafe int Do_Abi_remove_NextSiblingAutomationProviderRequested_6(IntPtr thisPtr, global::WinRT.EventRegistrationToken token)
        {
            try
            {
                var __this = global::WinRT.ComWrappersSupport.FindObject<global::Microsoft.UI.Content.IContentSiteAutomation>(thisPtr);
                if(__this != null && _NextSiblingAutomationProviderRequested_TokenTables.TryGetValue(__this, out var __table) && __table.RemoveEventHandler(token, out var __handler))
                {
                    __this.NextSiblingAutomationProviderRequested -= __handler;
                }
                return 0;
            }
            catch (Exception __ex)
            {
                return __ex.HResult;
            }
        }
        private volatile static global::System.Runtime.CompilerServices.ConditionalWeakTable<global::Microsoft.UI.Content.IContentSiteAutomation, global::WinRT.EventRegistrationTokenTable<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Content.IContentSiteAutomation, global::Microsoft.UI.Content.ContentSiteAutomationProviderRequestedEventArgs>>> _ParentAutomationProviderRequested_tokenTables;
        private static global::System.Runtime.CompilerServices.ConditionalWeakTable<global::Microsoft.UI.Content.IContentSiteAutomation, global::WinRT.EventRegistrationTokenTable<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Content.IContentSiteAutomation, global::Microsoft.UI.Content.ContentSiteAutomationProviderRequestedEventArgs>>> MakeParentAutomationProviderRequestedTable()
        {
            global::System.Threading.Interlocked.CompareExchange(ref _ParentAutomationProviderRequested_tokenTables, new(), null);
            return _ParentAutomationProviderRequested_tokenTables;
        }
        private static global::System.Runtime.CompilerServices.ConditionalWeakTable<global::Microsoft.UI.Content.IContentSiteAutomation, global::WinRT.EventRegistrationTokenTable<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Content.IContentSiteAutomation, global::Microsoft.UI.Content.ContentSiteAutomationProviderRequestedEventArgs>>> _ParentAutomationProviderRequested_TokenTables => _ParentAutomationProviderRequested_tokenTables ?? MakeParentAutomationProviderRequestedTable();

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvStdcall) })]
        private static unsafe int Do_Abi_add_ParentAutomationProviderRequested_7(IntPtr thisPtr, IntPtr handler, global::WinRT.EventRegistrationToken* token)
        {
            _ = global::WinRT.GenericTypeInstantiations.Windows_Foundation_TypedEventHandler_2_Microsoft_UI_Content_IContentSiteAutomation__Microsoft_UI_Content_ContentSiteAutomationProviderRequestedEventArgs.EnsureInitialized();
            *token = default;
            try
            {
                var __this = global::WinRT.ComWrappersSupport.FindObject<global::Microsoft.UI.Content.IContentSiteAutomation>(thisPtr);
                var __handler = global::ABI.Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Content.IContentSiteAutomation, global::Microsoft.UI.Content.ContentSiteAutomationProviderRequestedEventArgs>.FromAbi(handler);
                *token = _ParentAutomationProviderRequested_TokenTables.GetOrCreateValue(__this).AddEventHandler(__handler);
                __this.ParentAutomationProviderRequested += __handler;
                return 0;
            }
            catch (Exception __ex)
            {
                return __ex.HResult;
            }
        }
        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvStdcall) })]
        private static unsafe int Do_Abi_remove_ParentAutomationProviderRequested_8(IntPtr thisPtr, global::WinRT.EventRegistrationToken token)
        {
            try
            {
                var __this = global::WinRT.ComWrappersSupport.FindObject<global::Microsoft.UI.Content.IContentSiteAutomation>(thisPtr);
                if(__this != null && _ParentAutomationProviderRequested_TokenTables.TryGetValue(__this, out var __table) && __table.RemoveEventHandler(token, out var __handler))
                {
                    __this.ParentAutomationProviderRequested -= __handler;
                }
                return 0;
            }
            catch (Exception __ex)
            {
                return __ex.HResult;
            }
        }
        private volatile static global::System.Runtime.CompilerServices.ConditionalWeakTable<global::Microsoft.UI.Content.IContentSiteAutomation, global::WinRT.EventRegistrationTokenTable<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Content.IContentSiteAutomation, global::Microsoft.UI.Content.ContentSiteAutomationProviderRequestedEventArgs>>> _PreviousSiblingAutomationProviderRequested_tokenTables;
        private static global::System.Runtime.CompilerServices.ConditionalWeakTable<global::Microsoft.UI.Content.IContentSiteAutomation, global::WinRT.EventRegistrationTokenTable<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Content.IContentSiteAutomation, global::Microsoft.UI.Content.ContentSiteAutomationProviderRequestedEventArgs>>> MakePreviousSiblingAutomationProviderRequestedTable()
        {
            global::System.Threading.Interlocked.CompareExchange(ref _PreviousSiblingAutomationProviderRequested_tokenTables, new(), null);
            return _PreviousSiblingAutomationProviderRequested_tokenTables;
        }
        private static global::System.Runtime.CompilerServices.ConditionalWeakTable<global::Microsoft.UI.Content.IContentSiteAutomation, global::WinRT.EventRegistrationTokenTable<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Content.IContentSiteAutomation, global::Microsoft.UI.Content.ContentSiteAutomationProviderRequestedEventArgs>>> _PreviousSiblingAutomationProviderRequested_TokenTables => _PreviousSiblingAutomationProviderRequested_tokenTables ?? MakePreviousSiblingAutomationProviderRequestedTable();

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvStdcall) })]
        private static unsafe int Do_Abi_add_PreviousSiblingAutomationProviderRequested_9(IntPtr thisPtr, IntPtr handler, global::WinRT.EventRegistrationToken* token)
        {
            _ = global::WinRT.GenericTypeInstantiations.Windows_Foundation_TypedEventHandler_2_Microsoft_UI_Content_IContentSiteAutomation__Microsoft_UI_Content_ContentSiteAutomationProviderRequestedEventArgs.EnsureInitialized();
            *token = default;
            try
            {
                var __this = global::WinRT.ComWrappersSupport.FindObject<global::Microsoft.UI.Content.IContentSiteAutomation>(thisPtr);
                var __handler = global::ABI.Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Content.IContentSiteAutomation, global::Microsoft.UI.Content.ContentSiteAutomationProviderRequestedEventArgs>.FromAbi(handler);
                *token = _PreviousSiblingAutomationProviderRequested_TokenTables.GetOrCreateValue(__this).AddEventHandler(__handler);
                __this.PreviousSiblingAutomationProviderRequested += __handler;
                return 0;
            }
            catch (Exception __ex)
            {
                return __ex.HResult;
            }
        }
        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvStdcall) })]
        private static unsafe int Do_Abi_remove_PreviousSiblingAutomationProviderRequested_10(IntPtr thisPtr, global::WinRT.EventRegistrationToken token)
        {
            try
            {
                var __this = global::WinRT.ComWrappersSupport.FindObject<global::Microsoft.UI.Content.IContentSiteAutomation>(thisPtr);
                if(__this != null && _PreviousSiblingAutomationProviderRequested_TokenTables.TryGetValue(__this, out var __table) && __table.RemoveEventHandler(token, out var __handler))
                {
                    __this.PreviousSiblingAutomationProviderRequested -= __handler;
                }
                return 0;
            }
            catch (Exception __ex)
            {
                return __ex.HResult;
            }
        }

        unsafe global::Microsoft.UI.Content.ContentAutomationOptions global::Microsoft.UI.Content.IContentSiteAutomation.AutomationOption
        {
            get
            {
                var _obj = ((IObjectReference)((IWinRTObject)this).GetObjectReferenceForType(typeof(global::Microsoft.UI.Content.IContentSiteAutomation).TypeHandle));
                return global::ABI.Microsoft.UI.Content.IContentSiteAutomationMethods.get_AutomationOption(_obj);
            }
            set
            {
                var _obj = ((IObjectReference)((IWinRTObject)this).GetObjectReferenceForType(typeof(global::Microsoft.UI.Content.IContentSiteAutomation).TypeHandle));
                global::ABI.Microsoft.UI.Content.IContentSiteAutomationMethods.set_AutomationOption(_obj, value);
            }
        }

        unsafe object global::Microsoft.UI.Content.IContentSiteAutomation.AutomationProvider
        {
            get
            {
                var _obj = ((IObjectReference)((IWinRTObject)this).GetObjectReferenceForType(typeof(global::Microsoft.UI.Content.IContentSiteAutomation).TypeHandle));
                return global::ABI.Microsoft.UI.Content.IContentSiteAutomationMethods.get_AutomationProvider(_obj);
            }
        }

        event global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Content.IContentSiteAutomation, global::Microsoft.UI.Content.ContentSiteAutomationProviderRequestedEventArgs> global::Microsoft.UI.Content.IContentSiteAutomation.FragmentRootAutomationProviderRequested
        {
            add 
            {
                var _obj = ((IObjectReference)((IWinRTObject)this).GetObjectReferenceForType(typeof(global::Microsoft.UI.Content.IContentSiteAutomation).TypeHandle));
                global::ABI.Microsoft.UI.Content.IContentSiteAutomationMethods.Get_FragmentRootAutomationProviderRequested2(_obj, (IWinRTObject)this).Subscribe(value);
            }
            remove
            {
                var _obj = ((IObjectReference)((IWinRTObject)this).GetObjectReferenceForType(typeof(global::Microsoft.UI.Content.IContentSiteAutomation).TypeHandle));
                global::ABI.Microsoft.UI.Content.IContentSiteAutomationMethods.Get_FragmentRootAutomationProviderRequested2(_obj, (IWinRTObject)this).Unsubscribe(value);
            }
        }

        event global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Content.IContentSiteAutomation, global::Microsoft.UI.Content.ContentSiteAutomationProviderRequestedEventArgs> global::Microsoft.UI.Content.IContentSiteAutomation.NextSiblingAutomationProviderRequested
        {
            add 
            {
                var _obj = ((IObjectReference)((IWinRTObject)this).GetObjectReferenceForType(typeof(global::Microsoft.UI.Content.IContentSiteAutomation).TypeHandle));
                global::ABI.Microsoft.UI.Content.IContentSiteAutomationMethods.Get_NextSiblingAutomationProviderRequested2(_obj, (IWinRTObject)this).Subscribe(value);
            }
            remove
            {
                var _obj = ((IObjectReference)((IWinRTObject)this).GetObjectReferenceForType(typeof(global::Microsoft.UI.Content.IContentSiteAutomation).TypeHandle));
                global::ABI.Microsoft.UI.Content.IContentSiteAutomationMethods.Get_NextSiblingAutomationProviderRequested2(_obj, (IWinRTObject)this).Unsubscribe(value);
            }
        }

        event global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Content.IContentSiteAutomation, global::Microsoft.UI.Content.ContentSiteAutomationProviderRequestedEventArgs> global::Microsoft.UI.Content.IContentSiteAutomation.ParentAutomationProviderRequested
        {
            add 
            {
                var _obj = ((IObjectReference)((IWinRTObject)this).GetObjectReferenceForType(typeof(global::Microsoft.UI.Content.IContentSiteAutomation).TypeHandle));
                global::ABI.Microsoft.UI.Content.IContentSiteAutomationMethods.Get_ParentAutomationProviderRequested2(_obj, (IWinRTObject)this).Subscribe(value);
            }
            remove
            {
                var _obj = ((IObjectReference)((IWinRTObject)this).GetObjectReferenceForType(typeof(global::Microsoft.UI.Content.IContentSiteAutomation).TypeHandle));
                global::ABI.Microsoft.UI.Content.IContentSiteAutomationMethods.Get_ParentAutomationProviderRequested2(_obj, (IWinRTObject)this).Unsubscribe(value);
            }
        }

        event global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Content.IContentSiteAutomation, global::Microsoft.UI.Content.ContentSiteAutomationProviderRequestedEventArgs> global::Microsoft.UI.Content.IContentSiteAutomation.PreviousSiblingAutomationProviderRequested
        {
            add 
            {
                var _obj = ((IObjectReference)((IWinRTObject)this).GetObjectReferenceForType(typeof(global::Microsoft.UI.Content.IContentSiteAutomation).TypeHandle));
                global::ABI.Microsoft.UI.Content.IContentSiteAutomationMethods.Get_PreviousSiblingAutomationProviderRequested2(_obj, (IWinRTObject)this).Subscribe(value);
            }
            remove
            {
                var _obj = ((IObjectReference)((IWinRTObject)this).GetObjectReferenceForType(typeof(global::Microsoft.UI.Content.IContentSiteAutomation).TypeHandle));
                global::ABI.Microsoft.UI.Content.IContentSiteAutomationMethods.Get_PreviousSiblingAutomationProviderRequested2(_obj, (IWinRTObject)this).Unsubscribe(value);
            }
        }
    }

    internal static class IContentSiteAutomationProviderRequestedEventArgsMethods
    {

        internal static unsafe object get_AutomationProvider(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[6](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return MarshalInspectable<object>.FromAbi(__retval);
            }
            finally
            {
                MarshalInspectable<object>.DisposeAbi(__retval);
            }
        }
        internal static unsafe void set_AutomationProvider(IObjectReference _obj, object value)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __value = default;
            try
            {
                __value = MarshalInspectable<object>.CreateMarshaler2(value);
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, int>**)ThisPtr)[7](ThisPtr, MarshalInspectable<object>.GetAbi(__value)));
                global::System.GC.KeepAlive(_obj);
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__value);
            }
        }

        internal static unsafe bool get_Handled(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            byte __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, byte*, int>**)ThisPtr)[8](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval != 0;
        }
        internal static unsafe void set_Handled(IObjectReference _obj, bool value)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, byte, int>**)ThisPtr)[9](ThisPtr, (byte)(value ? 1 : 0)));
            global::System.GC.KeepAlive(_obj);
        }



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0xB9, 0x93, 0xA0, 0x73, 0xD4, 0x55, 0x98, 0x55, 0xB7, 0xE, 0x62, 0x50, 0xB7, 0x32, 0xF8, 0x21 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("73A093B9-55D4-5598-B70E-6250B732F821")]
    internal interface IContentSiteAutomationProviderRequestedEventArgs : global::Microsoft.UI.Content.IContentSiteAutomationProviderRequestedEventArgs
    {
    }
    public static class IContentSiteBridgeMethods
    {

        public static unsafe global::Microsoft.UI.Dispatching.DispatcherQueue get_DispatcherQueue(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[6](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Dispatching.DispatcherQueue.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.UI.Dispatching.DispatcherQueue.DisposeAbi(__retval);
            }
        }

        public static unsafe global::System.Nullable<global::Microsoft.UI.Content.ContentLayoutDirection> get_LayoutDirectionOverride(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[7](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return MarshalInterface<global::System.Nullable<global::Microsoft.UI.Content.ContentLayoutDirection>>.FromAbi(__retval);
            }
            finally
            {
                MarshalInterface<global::System.Nullable<global::Microsoft.UI.Content.ContentLayoutDirection>>.DisposeAbi(__retval);
            }
        }
        public static unsafe void set_LayoutDirectionOverride(IObjectReference _obj, global::System.Nullable<global::Microsoft.UI.Content.ContentLayoutDirection> value)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __value = default;
            try
            {
                __value = MarshalInterface<global::System.Nullable<global::Microsoft.UI.Content.ContentLayoutDirection>>.CreateMarshaler2(value, global::ABI.System.Nullable<global::Microsoft.UI.Content.ContentLayoutDirection>.PIID);
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, int>**)ThisPtr)[8](ThisPtr, MarshalInspectable<object>.GetAbi(__value)));
                global::System.GC.KeepAlive(_obj);
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__value);
            }
        }

        public static unsafe float get_OverrideScale(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            float __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, float*, int>**)ThisPtr)[9](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }
        public static unsafe void set_OverrideScale(IObjectReference _obj, float value)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, float, int>**)ThisPtr)[10](ThisPtr, value));
            global::System.GC.KeepAlive(_obj);
        }



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0x9E, 0xB9, 0xAA, 0xFA, 0x2B, 0xA4, 0x9C, 0x54, 0x92, 0xDF, 0x3B, 0x6D, 0x6E, 0x1E, 0x36, 0x8B };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

        public static global::System.IntPtr AbiToProjectionVftablePtr => IContentSiteBridge.AbiToProjectionVftablePtr;

    }
    [DynamicInterfaceCastableImplementation]
    [Guid("FAAAB99E-A42B-549C-92DF-3B6D6E1E368B")]
    internal unsafe interface IContentSiteBridge : global::Microsoft.UI.Content.IContentSiteBridge
    {

        public static readonly IntPtr AbiToProjectionVftablePtr;
        static unsafe IContentSiteBridge()
        {
            AbiToProjectionVftablePtr = ComWrappersSupport.AllocateVtableMemory(typeof(IContentSiteBridge), sizeof(IInspectable.Vftbl) + sizeof(IntPtr) * 5);
            *(IInspectable.Vftbl*)AbiToProjectionVftablePtr = IInspectable.Vftbl.AbiToProjectionVftable;
            ((delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>*)AbiToProjectionVftablePtr)[6] = &Do_Abi_get_DispatcherQueue_0;
            ((delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>*)AbiToProjectionVftablePtr)[7] = &Do_Abi_get_LayoutDirectionOverride_1;
            ((delegate* unmanaged[Stdcall]<IntPtr, IntPtr, int>*)AbiToProjectionVftablePtr)[8] = &Do_Abi_put_LayoutDirectionOverride_2;
            ((delegate* unmanaged[Stdcall]<IntPtr, float*, int>*)AbiToProjectionVftablePtr)[9] = &Do_Abi_get_OverrideScale_3;
            ((delegate* unmanaged[Stdcall]<IntPtr, float, int>*)AbiToProjectionVftablePtr)[10] = &Do_Abi_put_OverrideScale_4;
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvStdcall) })]
        private static unsafe int Do_Abi_get_DispatcherQueue_0(IntPtr thisPtr, IntPtr* value)
        {

            global::Microsoft.UI.Dispatching.DispatcherQueue __value = default;

            *value = default;

            try
            {
                __value = global::WinRT.ComWrappersSupport.FindObject<global::Microsoft.UI.Content.IContentSiteBridge>(thisPtr).DispatcherQueue;
                *value = global::ABI.Microsoft.UI.Dispatching.DispatcherQueue.FromManaged(__value);

            }
            catch (Exception __exception__)
            {
                global::WinRT.ExceptionHelpers.SetErrorInfo(__exception__);
                return global::WinRT.ExceptionHelpers.GetHRForException(__exception__);
            }
            return 0;
        }
        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvStdcall) })]
        private static unsafe int Do_Abi_put_LayoutDirectionOverride_2(IntPtr thisPtr, IntPtr value)
        {



            try
            {
                global::WinRT.ComWrappersSupport.FindObject<global::Microsoft.UI.Content.IContentSiteBridge>(thisPtr).LayoutDirectionOverride = MarshalInterface<global::System.Nullable<global::Microsoft.UI.Content.ContentLayoutDirection>>.FromAbi(value);

            }
            catch (Exception __exception__)
            {
                global::WinRT.ExceptionHelpers.SetErrorInfo(__exception__);
                return global::WinRT.ExceptionHelpers.GetHRForException(__exception__);
            }
            return 0;
        }
        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvStdcall) })]
        private static unsafe int Do_Abi_get_LayoutDirectionOverride_1(IntPtr thisPtr, IntPtr* value)
        {

            global::System.Nullable<global::Microsoft.UI.Content.ContentLayoutDirection> __value = default;

            *value = default;

            try
            {
                __value = global::WinRT.ComWrappersSupport.FindObject<global::Microsoft.UI.Content.IContentSiteBridge>(thisPtr).LayoutDirectionOverride;
                *value = MarshalInterface<global::System.Nullable<global::Microsoft.UI.Content.ContentLayoutDirection>>.FromManaged(__value);

            }
            catch (Exception __exception__)
            {
                global::WinRT.ExceptionHelpers.SetErrorInfo(__exception__);
                return global::WinRT.ExceptionHelpers.GetHRForException(__exception__);
            }
            return 0;
        }
        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvStdcall) })]
        private static unsafe int Do_Abi_put_OverrideScale_4(IntPtr thisPtr, float value)
        {



            try
            {
                global::WinRT.ComWrappersSupport.FindObject<global::Microsoft.UI.Content.IContentSiteBridge>(thisPtr).OverrideScale = value;

            }
            catch (Exception __exception__)
            {
                global::WinRT.ExceptionHelpers.SetErrorInfo(__exception__);
                return global::WinRT.ExceptionHelpers.GetHRForException(__exception__);
            }
            return 0;
        }
        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvStdcall) })]
        private static unsafe int Do_Abi_get_OverrideScale_3(IntPtr thisPtr, float* value)
        {

            float __value = default;

            *value = default;

            try
            {
                __value = global::WinRT.ComWrappersSupport.FindObject<global::Microsoft.UI.Content.IContentSiteBridge>(thisPtr).OverrideScale;
                *value = __value;

            }
            catch (Exception __exception__)
            {
                global::WinRT.ExceptionHelpers.SetErrorInfo(__exception__);
                return global::WinRT.ExceptionHelpers.GetHRForException(__exception__);
            }
            return 0;
        }

        unsafe global::Microsoft.UI.Dispatching.DispatcherQueue global::Microsoft.UI.Content.IContentSiteBridge.DispatcherQueue
        {
            get
            {
                var _obj = ((IObjectReference)((IWinRTObject)this).GetObjectReferenceForType(typeof(global::Microsoft.UI.Content.IContentSiteBridge).TypeHandle));
                return global::ABI.Microsoft.UI.Content.IContentSiteBridgeMethods.get_DispatcherQueue(_obj);
            }
        }

        unsafe global::System.Nullable<global::Microsoft.UI.Content.ContentLayoutDirection> global::Microsoft.UI.Content.IContentSiteBridge.LayoutDirectionOverride
        {
            get
            {
                var _obj = ((IObjectReference)((IWinRTObject)this).GetObjectReferenceForType(typeof(global::Microsoft.UI.Content.IContentSiteBridge).TypeHandle));
                return global::ABI.Microsoft.UI.Content.IContentSiteBridgeMethods.get_LayoutDirectionOverride(_obj);
            }
            set
            {
                var _obj = ((IObjectReference)((IWinRTObject)this).GetObjectReferenceForType(typeof(global::Microsoft.UI.Content.IContentSiteBridge).TypeHandle));
                global::ABI.Microsoft.UI.Content.IContentSiteBridgeMethods.set_LayoutDirectionOverride(_obj, value);
            }
        }

        unsafe float global::Microsoft.UI.Content.IContentSiteBridge.OverrideScale
        {
            get
            {
                var _obj = ((IObjectReference)((IWinRTObject)this).GetObjectReferenceForType(typeof(global::Microsoft.UI.Content.IContentSiteBridge).TypeHandle));
                return global::ABI.Microsoft.UI.Content.IContentSiteBridgeMethods.get_OverrideScale(_obj);
            }
            set
            {
                var _obj = ((IObjectReference)((IWinRTObject)this).GetObjectReferenceForType(typeof(global::Microsoft.UI.Content.IContentSiteBridge).TypeHandle));
                global::ABI.Microsoft.UI.Content.IContentSiteBridgeMethods.set_OverrideScale(_obj, value);
            }
        }

        void global::System.IDisposable.Dispose() => ((global::System.IDisposable)(IWinRTObject)this).Dispose();
    }

    public static class IContentSiteBridgeEndpointConnectionPrivateMethods
    {


        public static unsafe void AcceptRemoteEndpoint(IObjectReference _obj, string islandConnectionInfo)
        {
            var ThisPtr = _obj.ThisPtr;

            MarshalString.Pinnable __islandConnectionInfo = new(islandConnectionInfo);
            fixed(void* ___islandConnectionInfo = __islandConnectionInfo)
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, int>**)ThisPtr)[8](ThisPtr, MarshalString.GetAbi(ref __islandConnectionInfo)));
                global::System.GC.KeepAlive(_obj);
            }
        }
        public static unsafe string get_ConnectionInfo(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[6](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return MarshalString.FromAbi(__retval);
            }
            finally
            {
                MarshalString.DisposeAbi(__retval);
            }
        }

        public static unsafe bool get_IsRemoteEndpointConnected(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            byte __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, byte*, int>**)ThisPtr)[7](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval != 0;
        }


        private volatile static global::System.Runtime.CompilerServices.ConditionalWeakTable<object, global::ABI.WinRT.Interop.EventSource<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Content.IContentSiteBridgeEndpointConnectionPrivate, global::Microsoft.UI.Content.EndpointConnectionEventArgs>>> _RemoteEndpointConnecting_;
        private static global::System.Runtime.CompilerServices.ConditionalWeakTable<object, global::ABI.WinRT.Interop.EventSource<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Content.IContentSiteBridgeEndpointConnectionPrivate, global::Microsoft.UI.Content.EndpointConnectionEventArgs>>> MakeRemoteEndpointConnectingTable()
        {
            
            global::System.Threading.Interlocked.CompareExchange(ref _RemoteEndpointConnecting_, new(), null);
            return _RemoteEndpointConnecting_;
        }
        private static global::System.Runtime.CompilerServices.ConditionalWeakTable<object, global::ABI.WinRT.Interop.EventSource<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Content.IContentSiteBridgeEndpointConnectionPrivate, global::Microsoft.UI.Content.EndpointConnectionEventArgs>>> _RemoteEndpointConnecting => _RemoteEndpointConnecting_ ?? MakeRemoteEndpointConnectingTable();

        public static unsafe (Action<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Content.IContentSiteBridgeEndpointConnectionPrivate, global::Microsoft.UI.Content.EndpointConnectionEventArgs>>, Action<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Content.IContentSiteBridgeEndpointConnectionPrivate, global::Microsoft.UI.Content.EndpointConnectionEventArgs>>) Get_RemoteEndpointConnecting(IObjectReference _obj, object _thisObj)
        {
            var eventSource = Get_RemoteEndpointConnecting2(_obj, _thisObj);
            return (eventSource.Subscribe, eventSource.Unsubscribe);
        }

        public static unsafe global::ABI.WinRT.Interop.EventSource<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Content.IContentSiteBridgeEndpointConnectionPrivate, global::Microsoft.UI.Content.EndpointConnectionEventArgs>> Get_RemoteEndpointConnecting2(IObjectReference _obj, object _thisObj)
        {
            return _RemoteEndpointConnecting.GetValue(_thisObj, (key) =>
            {

                var ThisPtr = _obj.ThisPtr;

                return 
                new _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_UI_Content_IContentSiteBridgeEndpointConnectionPrivate__global__Microsoft_UI_Content_EndpointConnectionEventArgs_(_obj,
                (*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, global::WinRT.EventRegistrationToken*, int>**)ThisPtr)[9],
                (*(delegate* unmanaged[Stdcall]<IntPtr, global::WinRT.EventRegistrationToken, int>**)ThisPtr)[10],
                0);
            });
        }

        private volatile static global::System.Runtime.CompilerServices.ConditionalWeakTable<object, global::ABI.WinRT.Interop.EventSource<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Content.IContentSiteBridgeEndpointConnectionPrivate, global::Microsoft.UI.Content.EndpointConnectionEventArgs>>> _RemoteEndpointDisconnected_;
        private static global::System.Runtime.CompilerServices.ConditionalWeakTable<object, global::ABI.WinRT.Interop.EventSource<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Content.IContentSiteBridgeEndpointConnectionPrivate, global::Microsoft.UI.Content.EndpointConnectionEventArgs>>> MakeRemoteEndpointDisconnectedTable()
        {
            
            global::System.Threading.Interlocked.CompareExchange(ref _RemoteEndpointDisconnected_, new(), null);
            return _RemoteEndpointDisconnected_;
        }
        private static global::System.Runtime.CompilerServices.ConditionalWeakTable<object, global::ABI.WinRT.Interop.EventSource<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Content.IContentSiteBridgeEndpointConnectionPrivate, global::Microsoft.UI.Content.EndpointConnectionEventArgs>>> _RemoteEndpointDisconnected => _RemoteEndpointDisconnected_ ?? MakeRemoteEndpointDisconnectedTable();

        public static unsafe (Action<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Content.IContentSiteBridgeEndpointConnectionPrivate, global::Microsoft.UI.Content.EndpointConnectionEventArgs>>, Action<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Content.IContentSiteBridgeEndpointConnectionPrivate, global::Microsoft.UI.Content.EndpointConnectionEventArgs>>) Get_RemoteEndpointDisconnected(IObjectReference _obj, object _thisObj)
        {
            var eventSource = Get_RemoteEndpointDisconnected2(_obj, _thisObj);
            return (eventSource.Subscribe, eventSource.Unsubscribe);
        }

        public static unsafe global::ABI.WinRT.Interop.EventSource<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Content.IContentSiteBridgeEndpointConnectionPrivate, global::Microsoft.UI.Content.EndpointConnectionEventArgs>> Get_RemoteEndpointDisconnected2(IObjectReference _obj, object _thisObj)
        {
            return _RemoteEndpointDisconnected.GetValue(_thisObj, (key) =>
            {

                var ThisPtr = _obj.ThisPtr;

                return 
                new _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_UI_Content_IContentSiteBridgeEndpointConnectionPrivate__global__Microsoft_UI_Content_EndpointConnectionEventArgs_(_obj,
                (*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, global::WinRT.EventRegistrationToken*, int>**)ThisPtr)[11],
                (*(delegate* unmanaged[Stdcall]<IntPtr, global::WinRT.EventRegistrationToken, int>**)ThisPtr)[12],
                1);
            });
        }

        private volatile static global::System.Runtime.CompilerServices.ConditionalWeakTable<object, global::ABI.WinRT.Interop.EventSource<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Content.IContentSiteBridgeEndpointConnectionPrivate, global::Microsoft.UI.Content.EndpointRequestedStateChangedEventArgs>>> _RemoteEndpointRequestedStateChanged_;
        private static global::System.Runtime.CompilerServices.ConditionalWeakTable<object, global::ABI.WinRT.Interop.EventSource<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Content.IContentSiteBridgeEndpointConnectionPrivate, global::Microsoft.UI.Content.EndpointRequestedStateChangedEventArgs>>> MakeRemoteEndpointRequestedStateChangedTable()
        {
            
            global::System.Threading.Interlocked.CompareExchange(ref _RemoteEndpointRequestedStateChanged_, new(), null);
            return _RemoteEndpointRequestedStateChanged_;
        }
        private static global::System.Runtime.CompilerServices.ConditionalWeakTable<object, global::ABI.WinRT.Interop.EventSource<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Content.IContentSiteBridgeEndpointConnectionPrivate, global::Microsoft.UI.Content.EndpointRequestedStateChangedEventArgs>>> _RemoteEndpointRequestedStateChanged => _RemoteEndpointRequestedStateChanged_ ?? MakeRemoteEndpointRequestedStateChangedTable();

        public static unsafe (Action<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Content.IContentSiteBridgeEndpointConnectionPrivate, global::Microsoft.UI.Content.EndpointRequestedStateChangedEventArgs>>, Action<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Content.IContentSiteBridgeEndpointConnectionPrivate, global::Microsoft.UI.Content.EndpointRequestedStateChangedEventArgs>>) Get_RemoteEndpointRequestedStateChanged(IObjectReference _obj, object _thisObj)
        {
            var eventSource = Get_RemoteEndpointRequestedStateChanged2(_obj, _thisObj);
            return (eventSource.Subscribe, eventSource.Unsubscribe);
        }

        public static unsafe global::ABI.WinRT.Interop.EventSource<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Content.IContentSiteBridgeEndpointConnectionPrivate, global::Microsoft.UI.Content.EndpointRequestedStateChangedEventArgs>> Get_RemoteEndpointRequestedStateChanged2(IObjectReference _obj, object _thisObj)
        {
            return _RemoteEndpointRequestedStateChanged.GetValue(_thisObj, (key) =>
            {

                var ThisPtr = _obj.ThisPtr;

                return 
                new _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_UI_Content_IContentSiteBridgeEndpointConnectionPrivate__global__Microsoft_UI_Content_EndpointRequestedStateChangedEventArgs_(_obj,
                (*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, global::WinRT.EventRegistrationToken*, int>**)ThisPtr)[13],
                (*(delegate* unmanaged[Stdcall]<IntPtr, global::WinRT.EventRegistrationToken, int>**)ThisPtr)[14],
                2);
            });
        }


        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0x59, 0xA0, 0xD1, 0x84, 0x2B, 0x69, 0x7D, 0x57, 0xA7, 0x91, 0x6A, 0xD4, 0xFA, 0xFB, 0xEB, 0x1F };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

        public static global::System.IntPtr AbiToProjectionVftablePtr => IContentSiteBridgeEndpointConnectionPrivate.AbiToProjectionVftablePtr;

    }
    [DynamicInterfaceCastableImplementation]
    [Guid("84D1A059-692B-577D-A791-6AD4FAFBEB1F")]
    internal unsafe interface IContentSiteBridgeEndpointConnectionPrivate : global::Microsoft.UI.Content.IContentSiteBridgeEndpointConnectionPrivate
    {

        public static readonly IntPtr AbiToProjectionVftablePtr;
        static unsafe IContentSiteBridgeEndpointConnectionPrivate()
        {
            AbiToProjectionVftablePtr = ComWrappersSupport.AllocateVtableMemory(typeof(IContentSiteBridgeEndpointConnectionPrivate), sizeof(IInspectable.Vftbl) + sizeof(IntPtr) * 9);
            *(IInspectable.Vftbl*)AbiToProjectionVftablePtr = IInspectable.Vftbl.AbiToProjectionVftable;
            ((delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>*)AbiToProjectionVftablePtr)[6] = &Do_Abi_get_ConnectionInfo_0;
            ((delegate* unmanaged[Stdcall]<IntPtr, byte*, int>*)AbiToProjectionVftablePtr)[7] = &Do_Abi_get_IsRemoteEndpointConnected_1;
            ((delegate* unmanaged[Stdcall]<IntPtr, IntPtr, int>*)AbiToProjectionVftablePtr)[8] = &Do_Abi_AcceptRemoteEndpoint_2;
            ((delegate* unmanaged[Stdcall]<IntPtr, IntPtr, global::WinRT.EventRegistrationToken*, int>*)AbiToProjectionVftablePtr)[9] = &Do_Abi_add_RemoteEndpointConnecting_3;
            ((delegate* unmanaged[Stdcall]<IntPtr, global::WinRT.EventRegistrationToken, int>*)AbiToProjectionVftablePtr)[10] = &Do_Abi_remove_RemoteEndpointConnecting_4;
            ((delegate* unmanaged[Stdcall]<IntPtr, IntPtr, global::WinRT.EventRegistrationToken*, int>*)AbiToProjectionVftablePtr)[11] = &Do_Abi_add_RemoteEndpointDisconnected_5;
            ((delegate* unmanaged[Stdcall]<IntPtr, global::WinRT.EventRegistrationToken, int>*)AbiToProjectionVftablePtr)[12] = &Do_Abi_remove_RemoteEndpointDisconnected_6;
            ((delegate* unmanaged[Stdcall]<IntPtr, IntPtr, global::WinRT.EventRegistrationToken*, int>*)AbiToProjectionVftablePtr)[13] = &Do_Abi_add_RemoteEndpointRequestedStateChanged_7;
            ((delegate* unmanaged[Stdcall]<IntPtr, global::WinRT.EventRegistrationToken, int>*)AbiToProjectionVftablePtr)[14] = &Do_Abi_remove_RemoteEndpointRequestedStateChanged_8;
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvStdcall) })]
        private static unsafe int Do_Abi_AcceptRemoteEndpoint_2(IntPtr thisPtr, IntPtr islandConnectionInfo)
        {



            try
            {
                global::WinRT.ComWrappersSupport.FindObject<global::Microsoft.UI.Content.IContentSiteBridgeEndpointConnectionPrivate>(thisPtr).AcceptRemoteEndpoint(MarshalString.FromAbi(islandConnectionInfo));

            }
            catch (Exception __exception__)
            {
                global::WinRT.ExceptionHelpers.SetErrorInfo(__exception__);
                return global::WinRT.ExceptionHelpers.GetHRForException(__exception__);
            }
            return 0;
        }
        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvStdcall) })]
        private static unsafe int Do_Abi_get_ConnectionInfo_0(IntPtr thisPtr, IntPtr* value)
        {

            string __value = default;

            *value = default;

            try
            {
                __value = global::WinRT.ComWrappersSupport.FindObject<global::Microsoft.UI.Content.IContentSiteBridgeEndpointConnectionPrivate>(thisPtr).ConnectionInfo;
                *value = MarshalString.FromManaged(__value);

            }
            catch (Exception __exception__)
            {
                global::WinRT.ExceptionHelpers.SetErrorInfo(__exception__);
                return global::WinRT.ExceptionHelpers.GetHRForException(__exception__);
            }
            return 0;
        }
        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvStdcall) })]
        private static unsafe int Do_Abi_get_IsRemoteEndpointConnected_1(IntPtr thisPtr, byte* value)
        {

            bool __value = default;

            *value = default;

            try
            {
                __value = global::WinRT.ComWrappersSupport.FindObject<global::Microsoft.UI.Content.IContentSiteBridgeEndpointConnectionPrivate>(thisPtr).IsRemoteEndpointConnected;
                *value = (byte)(__value ? 1 : 0);

            }
            catch (Exception __exception__)
            {
                global::WinRT.ExceptionHelpers.SetErrorInfo(__exception__);
                return global::WinRT.ExceptionHelpers.GetHRForException(__exception__);
            }
            return 0;
        }
        private volatile static global::System.Runtime.CompilerServices.ConditionalWeakTable<global::Microsoft.UI.Content.IContentSiteBridgeEndpointConnectionPrivate, global::WinRT.EventRegistrationTokenTable<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Content.IContentSiteBridgeEndpointConnectionPrivate, global::Microsoft.UI.Content.EndpointConnectionEventArgs>>> _RemoteEndpointConnecting_tokenTables;
        private static global::System.Runtime.CompilerServices.ConditionalWeakTable<global::Microsoft.UI.Content.IContentSiteBridgeEndpointConnectionPrivate, global::WinRT.EventRegistrationTokenTable<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Content.IContentSiteBridgeEndpointConnectionPrivate, global::Microsoft.UI.Content.EndpointConnectionEventArgs>>> MakeRemoteEndpointConnectingTable()
        {
            global::System.Threading.Interlocked.CompareExchange(ref _RemoteEndpointConnecting_tokenTables, new(), null);
            return _RemoteEndpointConnecting_tokenTables;
        }
        private static global::System.Runtime.CompilerServices.ConditionalWeakTable<global::Microsoft.UI.Content.IContentSiteBridgeEndpointConnectionPrivate, global::WinRT.EventRegistrationTokenTable<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Content.IContentSiteBridgeEndpointConnectionPrivate, global::Microsoft.UI.Content.EndpointConnectionEventArgs>>> _RemoteEndpointConnecting_TokenTables => _RemoteEndpointConnecting_tokenTables ?? MakeRemoteEndpointConnectingTable();

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvStdcall) })]
        private static unsafe int Do_Abi_add_RemoteEndpointConnecting_3(IntPtr thisPtr, IntPtr handler, global::WinRT.EventRegistrationToken* token)
        {
            _ = global::WinRT.GenericTypeInstantiations.Windows_Foundation_TypedEventHandler_2_Microsoft_UI_Content_IContentSiteBridgeEndpointConnectionPrivate__Microsoft_UI_Content_EndpointConnectionEventArgs.EnsureInitialized();
            *token = default;
            try
            {
                var __this = global::WinRT.ComWrappersSupport.FindObject<global::Microsoft.UI.Content.IContentSiteBridgeEndpointConnectionPrivate>(thisPtr);
                var __handler = global::ABI.Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Content.IContentSiteBridgeEndpointConnectionPrivate, global::Microsoft.UI.Content.EndpointConnectionEventArgs>.FromAbi(handler);
                *token = _RemoteEndpointConnecting_TokenTables.GetOrCreateValue(__this).AddEventHandler(__handler);
                __this.RemoteEndpointConnecting += __handler;
                return 0;
            }
            catch (Exception __ex)
            {
                return __ex.HResult;
            }
        }
        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvStdcall) })]
        private static unsafe int Do_Abi_remove_RemoteEndpointConnecting_4(IntPtr thisPtr, global::WinRT.EventRegistrationToken token)
        {
            try
            {
                var __this = global::WinRT.ComWrappersSupport.FindObject<global::Microsoft.UI.Content.IContentSiteBridgeEndpointConnectionPrivate>(thisPtr);
                if(__this != null && _RemoteEndpointConnecting_TokenTables.TryGetValue(__this, out var __table) && __table.RemoveEventHandler(token, out var __handler))
                {
                    __this.RemoteEndpointConnecting -= __handler;
                }
                return 0;
            }
            catch (Exception __ex)
            {
                return __ex.HResult;
            }
        }
        private volatile static global::System.Runtime.CompilerServices.ConditionalWeakTable<global::Microsoft.UI.Content.IContentSiteBridgeEndpointConnectionPrivate, global::WinRT.EventRegistrationTokenTable<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Content.IContentSiteBridgeEndpointConnectionPrivate, global::Microsoft.UI.Content.EndpointConnectionEventArgs>>> _RemoteEndpointDisconnected_tokenTables;
        private static global::System.Runtime.CompilerServices.ConditionalWeakTable<global::Microsoft.UI.Content.IContentSiteBridgeEndpointConnectionPrivate, global::WinRT.EventRegistrationTokenTable<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Content.IContentSiteBridgeEndpointConnectionPrivate, global::Microsoft.UI.Content.EndpointConnectionEventArgs>>> MakeRemoteEndpointDisconnectedTable()
        {
            global::System.Threading.Interlocked.CompareExchange(ref _RemoteEndpointDisconnected_tokenTables, new(), null);
            return _RemoteEndpointDisconnected_tokenTables;
        }
        private static global::System.Runtime.CompilerServices.ConditionalWeakTable<global::Microsoft.UI.Content.IContentSiteBridgeEndpointConnectionPrivate, global::WinRT.EventRegistrationTokenTable<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Content.IContentSiteBridgeEndpointConnectionPrivate, global::Microsoft.UI.Content.EndpointConnectionEventArgs>>> _RemoteEndpointDisconnected_TokenTables => _RemoteEndpointDisconnected_tokenTables ?? MakeRemoteEndpointDisconnectedTable();

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvStdcall) })]
        private static unsafe int Do_Abi_add_RemoteEndpointDisconnected_5(IntPtr thisPtr, IntPtr handler, global::WinRT.EventRegistrationToken* token)
        {
            _ = global::WinRT.GenericTypeInstantiations.Windows_Foundation_TypedEventHandler_2_Microsoft_UI_Content_IContentSiteBridgeEndpointConnectionPrivate__Microsoft_UI_Content_EndpointConnectionEventArgs.EnsureInitialized();
            *token = default;
            try
            {
                var __this = global::WinRT.ComWrappersSupport.FindObject<global::Microsoft.UI.Content.IContentSiteBridgeEndpointConnectionPrivate>(thisPtr);
                var __handler = global::ABI.Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Content.IContentSiteBridgeEndpointConnectionPrivate, global::Microsoft.UI.Content.EndpointConnectionEventArgs>.FromAbi(handler);
                *token = _RemoteEndpointDisconnected_TokenTables.GetOrCreateValue(__this).AddEventHandler(__handler);
                __this.RemoteEndpointDisconnected += __handler;
                return 0;
            }
            catch (Exception __ex)
            {
                return __ex.HResult;
            }
        }
        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvStdcall) })]
        private static unsafe int Do_Abi_remove_RemoteEndpointDisconnected_6(IntPtr thisPtr, global::WinRT.EventRegistrationToken token)
        {
            try
            {
                var __this = global::WinRT.ComWrappersSupport.FindObject<global::Microsoft.UI.Content.IContentSiteBridgeEndpointConnectionPrivate>(thisPtr);
                if(__this != null && _RemoteEndpointDisconnected_TokenTables.TryGetValue(__this, out var __table) && __table.RemoveEventHandler(token, out var __handler))
                {
                    __this.RemoteEndpointDisconnected -= __handler;
                }
                return 0;
            }
            catch (Exception __ex)
            {
                return __ex.HResult;
            }
        }
        private volatile static global::System.Runtime.CompilerServices.ConditionalWeakTable<global::Microsoft.UI.Content.IContentSiteBridgeEndpointConnectionPrivate, global::WinRT.EventRegistrationTokenTable<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Content.IContentSiteBridgeEndpointConnectionPrivate, global::Microsoft.UI.Content.EndpointRequestedStateChangedEventArgs>>> _RemoteEndpointRequestedStateChanged_tokenTables;
        private static global::System.Runtime.CompilerServices.ConditionalWeakTable<global::Microsoft.UI.Content.IContentSiteBridgeEndpointConnectionPrivate, global::WinRT.EventRegistrationTokenTable<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Content.IContentSiteBridgeEndpointConnectionPrivate, global::Microsoft.UI.Content.EndpointRequestedStateChangedEventArgs>>> MakeRemoteEndpointRequestedStateChangedTable()
        {
            global::System.Threading.Interlocked.CompareExchange(ref _RemoteEndpointRequestedStateChanged_tokenTables, new(), null);
            return _RemoteEndpointRequestedStateChanged_tokenTables;
        }
        private static global::System.Runtime.CompilerServices.ConditionalWeakTable<global::Microsoft.UI.Content.IContentSiteBridgeEndpointConnectionPrivate, global::WinRT.EventRegistrationTokenTable<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Content.IContentSiteBridgeEndpointConnectionPrivate, global::Microsoft.UI.Content.EndpointRequestedStateChangedEventArgs>>> _RemoteEndpointRequestedStateChanged_TokenTables => _RemoteEndpointRequestedStateChanged_tokenTables ?? MakeRemoteEndpointRequestedStateChangedTable();

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvStdcall) })]
        private static unsafe int Do_Abi_add_RemoteEndpointRequestedStateChanged_7(IntPtr thisPtr, IntPtr handler, global::WinRT.EventRegistrationToken* token)
        {
            _ = global::WinRT.GenericTypeInstantiations.Windows_Foundation_TypedEventHandler_2_Microsoft_UI_Content_IContentSiteBridgeEndpointConnectionPrivate__Microsoft_UI_Content_EndpointRequestedStateChangedEventArgs.EnsureInitialized();
            *token = default;
            try
            {
                var __this = global::WinRT.ComWrappersSupport.FindObject<global::Microsoft.UI.Content.IContentSiteBridgeEndpointConnectionPrivate>(thisPtr);
                var __handler = global::ABI.Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Content.IContentSiteBridgeEndpointConnectionPrivate, global::Microsoft.UI.Content.EndpointRequestedStateChangedEventArgs>.FromAbi(handler);
                *token = _RemoteEndpointRequestedStateChanged_TokenTables.GetOrCreateValue(__this).AddEventHandler(__handler);
                __this.RemoteEndpointRequestedStateChanged += __handler;
                return 0;
            }
            catch (Exception __ex)
            {
                return __ex.HResult;
            }
        }
        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvStdcall) })]
        private static unsafe int Do_Abi_remove_RemoteEndpointRequestedStateChanged_8(IntPtr thisPtr, global::WinRT.EventRegistrationToken token)
        {
            try
            {
                var __this = global::WinRT.ComWrappersSupport.FindObject<global::Microsoft.UI.Content.IContentSiteBridgeEndpointConnectionPrivate>(thisPtr);
                if(__this != null && _RemoteEndpointRequestedStateChanged_TokenTables.TryGetValue(__this, out var __table) && __table.RemoveEventHandler(token, out var __handler))
                {
                    __this.RemoteEndpointRequestedStateChanged -= __handler;
                }
                return 0;
            }
            catch (Exception __ex)
            {
                return __ex.HResult;
            }
        }

        unsafe void global::Microsoft.UI.Content.IContentSiteBridgeEndpointConnectionPrivate.AcceptRemoteEndpoint(string islandConnectionInfo)
        {
            var _obj = ((IObjectReference)((IWinRTObject)this).GetObjectReferenceForType(typeof(global::Microsoft.UI.Content.IContentSiteBridgeEndpointConnectionPrivate).TypeHandle));
            global::ABI.Microsoft.UI.Content.IContentSiteBridgeEndpointConnectionPrivateMethods.AcceptRemoteEndpoint(_obj, islandConnectionInfo);
        }

        unsafe string global::Microsoft.UI.Content.IContentSiteBridgeEndpointConnectionPrivate.ConnectionInfo
        {
            get
            {
                var _obj = ((IObjectReference)((IWinRTObject)this).GetObjectReferenceForType(typeof(global::Microsoft.UI.Content.IContentSiteBridgeEndpointConnectionPrivate).TypeHandle));
                return global::ABI.Microsoft.UI.Content.IContentSiteBridgeEndpointConnectionPrivateMethods.get_ConnectionInfo(_obj);
            }
        }

        unsafe bool global::Microsoft.UI.Content.IContentSiteBridgeEndpointConnectionPrivate.IsRemoteEndpointConnected
        {
            get
            {
                var _obj = ((IObjectReference)((IWinRTObject)this).GetObjectReferenceForType(typeof(global::Microsoft.UI.Content.IContentSiteBridgeEndpointConnectionPrivate).TypeHandle));
                return global::ABI.Microsoft.UI.Content.IContentSiteBridgeEndpointConnectionPrivateMethods.get_IsRemoteEndpointConnected(_obj);
            }
        }

        event global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Content.IContentSiteBridgeEndpointConnectionPrivate, global::Microsoft.UI.Content.EndpointConnectionEventArgs> global::Microsoft.UI.Content.IContentSiteBridgeEndpointConnectionPrivate.RemoteEndpointConnecting
        {
            add 
            {
                var _obj = ((IObjectReference)((IWinRTObject)this).GetObjectReferenceForType(typeof(global::Microsoft.UI.Content.IContentSiteBridgeEndpointConnectionPrivate).TypeHandle));
                global::ABI.Microsoft.UI.Content.IContentSiteBridgeEndpointConnectionPrivateMethods.Get_RemoteEndpointConnecting2(_obj, (IWinRTObject)this).Subscribe(value);
            }
            remove
            {
                var _obj = ((IObjectReference)((IWinRTObject)this).GetObjectReferenceForType(typeof(global::Microsoft.UI.Content.IContentSiteBridgeEndpointConnectionPrivate).TypeHandle));
                global::ABI.Microsoft.UI.Content.IContentSiteBridgeEndpointConnectionPrivateMethods.Get_RemoteEndpointConnecting2(_obj, (IWinRTObject)this).Unsubscribe(value);
            }
        }

        event global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Content.IContentSiteBridgeEndpointConnectionPrivate, global::Microsoft.UI.Content.EndpointConnectionEventArgs> global::Microsoft.UI.Content.IContentSiteBridgeEndpointConnectionPrivate.RemoteEndpointDisconnected
        {
            add 
            {
                var _obj = ((IObjectReference)((IWinRTObject)this).GetObjectReferenceForType(typeof(global::Microsoft.UI.Content.IContentSiteBridgeEndpointConnectionPrivate).TypeHandle));
                global::ABI.Microsoft.UI.Content.IContentSiteBridgeEndpointConnectionPrivateMethods.Get_RemoteEndpointDisconnected2(_obj, (IWinRTObject)this).Subscribe(value);
            }
            remove
            {
                var _obj = ((IObjectReference)((IWinRTObject)this).GetObjectReferenceForType(typeof(global::Microsoft.UI.Content.IContentSiteBridgeEndpointConnectionPrivate).TypeHandle));
                global::ABI.Microsoft.UI.Content.IContentSiteBridgeEndpointConnectionPrivateMethods.Get_RemoteEndpointDisconnected2(_obj, (IWinRTObject)this).Unsubscribe(value);
            }
        }

        event global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Content.IContentSiteBridgeEndpointConnectionPrivate, global::Microsoft.UI.Content.EndpointRequestedStateChangedEventArgs> global::Microsoft.UI.Content.IContentSiteBridgeEndpointConnectionPrivate.RemoteEndpointRequestedStateChanged
        {
            add 
            {
                var _obj = ((IObjectReference)((IWinRTObject)this).GetObjectReferenceForType(typeof(global::Microsoft.UI.Content.IContentSiteBridgeEndpointConnectionPrivate).TypeHandle));
                global::ABI.Microsoft.UI.Content.IContentSiteBridgeEndpointConnectionPrivateMethods.Get_RemoteEndpointRequestedStateChanged2(_obj, (IWinRTObject)this).Subscribe(value);
            }
            remove
            {
                var _obj = ((IObjectReference)((IWinRTObject)this).GetObjectReferenceForType(typeof(global::Microsoft.UI.Content.IContentSiteBridgeEndpointConnectionPrivate).TypeHandle));
                global::ABI.Microsoft.UI.Content.IContentSiteBridgeEndpointConnectionPrivateMethods.Get_RemoteEndpointRequestedStateChanged2(_obj, (IWinRTObject)this).Unsubscribe(value);
            }
        }
    }

    internal static class IContentSiteEnvironmentMethods
    {


        internal static unsafe void NotifySettingChanged(IObjectReference _obj, string setting)
        {
            var ThisPtr = _obj.ThisPtr;

            MarshalString.Pinnable __setting = new(setting);
            fixed(void* ___setting = __setting)
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, int>**)ThisPtr)[11](ThisPtr, MarshalString.GetAbi(ref __setting)));
                global::System.GC.KeepAlive(_obj);
            }
        }
        internal static unsafe global::Microsoft.UI.WindowId get_AppWindowId(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::Microsoft.UI.WindowId __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::Microsoft.UI.WindowId*, int>**)ThisPtr)[6](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }
        internal static unsafe void set_AppWindowId(IObjectReference _obj, global::Microsoft.UI.WindowId value)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::Microsoft.UI.WindowId, int>**)ThisPtr)[7](ThisPtr, value));
            global::System.GC.KeepAlive(_obj);
        }

        internal static unsafe global::Microsoft.UI.DisplayId get_DisplayId(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::Microsoft.UI.DisplayId __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::Microsoft.UI.DisplayId*, int>**)ThisPtr)[8](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }
        internal static unsafe void set_DisplayId(IObjectReference _obj, global::Microsoft.UI.DisplayId value)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::Microsoft.UI.DisplayId, int>**)ThisPtr)[9](ThisPtr, value));
            global::System.GC.KeepAlive(_obj);
        }

        internal static unsafe global::Microsoft.UI.Content.ContentSiteEnvironmentView get_View(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[10](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Content.ContentSiteEnvironmentView.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.UI.Content.ContentSiteEnvironmentView.DisposeAbi(__retval);
            }
        }



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0x5D, 0x8, 0x5D, 0x68, 0x53, 0xBE, 0xD1, 0x55, 0xAE, 0xC4, 0xBA, 0x22, 0x73, 0xD5, 0x46, 0x8B };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("685D085D-BE53-55D1-AEC4-BA2273D5468B")]
    internal interface IContentSiteEnvironment : global::Microsoft.UI.Content.IContentSiteEnvironment
    {
    }
    internal static class IContentSiteEnvironment2Methods
    {

        internal static unsafe float get_DisplayScale(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            float __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, float*, int>**)ThisPtr)[6](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }
        internal static unsafe void set_DisplayScale(IObjectReference _obj, float value)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, float, int>**)ThisPtr)[7](ThisPtr, value));
            global::System.GC.KeepAlive(_obj);
        }



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0xCD, 0xE3, 0x1A, 0x38, 0x80, 0xC7, 0x69, 0x5A, 0xBA, 0x6A, 0xE, 0xAD, 0x85, 0x60, 0xA3, 0x1F };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("381AE3CD-C780-5A69-BA6A-0EAD8560A31F")]
    internal interface IContentSiteEnvironment2 : global::Microsoft.UI.Content.IContentSiteEnvironment2
    {
    }
    internal static class IContentSiteEnvironmentExperimentalMethods
    {


        internal static unsafe void NotifyThemeChanged(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, int>**)ThisPtr)[10](ThisPtr));
            global::System.GC.KeepAlive(_obj);
        }
        internal static unsafe global::Microsoft.UI.Content.ContentDisplayOrientations get_CurrentOrientation(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::Microsoft.UI.Content.ContentDisplayOrientations __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::Microsoft.UI.Content.ContentDisplayOrientations*, int>**)ThisPtr)[6](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }
        internal static unsafe void set_CurrentOrientation(IObjectReference _obj, global::Microsoft.UI.Content.ContentDisplayOrientations value)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::Microsoft.UI.Content.ContentDisplayOrientations, int>**)ThisPtr)[7](ThisPtr, value));
            global::System.GC.KeepAlive(_obj);
        }

        internal static unsafe global::Microsoft.UI.Content.ContentDisplayOrientations get_NativeOrientation(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::Microsoft.UI.Content.ContentDisplayOrientations __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::Microsoft.UI.Content.ContentDisplayOrientations*, int>**)ThisPtr)[8](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }
        internal static unsafe void set_NativeOrientation(IObjectReference _obj, global::Microsoft.UI.Content.ContentDisplayOrientations value)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::Microsoft.UI.Content.ContentDisplayOrientations, int>**)ThisPtr)[9](ThisPtr, value));
            global::System.GC.KeepAlive(_obj);
        }



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0x5F, 0x30, 0xAC, 0xF8, 0x2C, 0xE2, 0xF6, 0x53, 0x81, 0xC8, 0x4E, 0xCC, 0xD9, 0x32, 0x95, 0xB3 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("F8AC305F-E22C-53F6-81C8-4ECCD93295B3")]
    internal interface IContentSiteEnvironmentExperimental : global::Microsoft.UI.Content.IContentSiteEnvironmentExperimental
    {
    }
    internal static class IContentSiteEnvironmentFactoryMethods
    {



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0x98, 0xA9, 0xEF, 0xB, 0x15, 0xCB, 0x16, 0x5F, 0xA4, 0xA5, 0xC0, 0xED, 0x16, 0x74, 0xE1, 0x86 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("0BEFA998-CB15-5F16-A4A5-C0ED1674E186")]
    internal interface IContentSiteEnvironmentFactory : global::Microsoft.UI.Content.IContentSiteEnvironmentFactory
    {
    }
    internal static class IContentSiteEnvironmentViewMethods
    {

        internal static unsafe global::Microsoft.UI.WindowId get_AppWindowId(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::Microsoft.UI.WindowId __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::Microsoft.UI.WindowId*, int>**)ThisPtr)[6](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }

        internal static unsafe global::Microsoft.UI.DisplayId get_DisplayId(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::Microsoft.UI.DisplayId __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::Microsoft.UI.DisplayId*, int>**)ThisPtr)[7](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0x20, 0xE4, 0x6F, 0x5B, 0xB3, 0xB, 0xDD, 0x54, 0x85, 0x89, 0x78, 0x6C, 0xF0, 0x2E, 0x38, 0xF1 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("5B6FE420-0BB3-54DD-8589-786CF02E38F1")]
    internal interface IContentSiteEnvironmentView : global::Microsoft.UI.Content.IContentSiteEnvironmentView
    {
    }
    internal static class IContentSiteEnvironmentView2Methods
    {

        internal static unsafe float get_DisplayScale(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            float __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, float*, int>**)ThisPtr)[6](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0x9A, 0xC8, 0x43, 0xB, 0x96, 0x91, 0x64, 0x5A, 0xA0, 0x78, 0xEB, 0x15, 0xA, 0xCA, 0xE5, 0x27 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("0B43C89A-9196-5A64-A078-EB150ACAE527")]
    internal interface IContentSiteEnvironmentView2 : global::Microsoft.UI.Content.IContentSiteEnvironmentView2
    {
    }
    internal static class IContentSiteEnvironmentViewFactoryMethods
    {



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0xF2, 0xED, 0x1, 0xC9, 0x84, 0xF1, 0x64, 0x5A, 0x8D, 0x58, 0x8C, 0xF8, 0xEF, 0xA8, 0xB6, 0x78 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("C901EDF2-F184-5A64-8D58-8CF8EFA8B678")]
    internal interface IContentSiteEnvironmentViewFactory : global::Microsoft.UI.Content.IContentSiteEnvironmentViewFactory
    {
    }
    internal static class IContentSiteExperimentalMethods
    {


        internal static unsafe void SetContentNodeParent(IObjectReference _obj, global::Microsoft.UI.Content.IContentNodeOwner value)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __value = default;
            try
            {
                __value = MarshalInterface<global::Microsoft.UI.Content.IContentNodeOwner>.CreateMarshaler2(value, global::ABI.Microsoft.UI.Content.IContentNodeOwnerMethods.IID);
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, int>**)ThisPtr)[6](ThisPtr, MarshalInspectable<object>.GetAbi(__value)));
                global::System.GC.KeepAlive(_obj);
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__value);
            }
        }

        internal static unsafe bool TryGetAutomationProvider(IObjectReference _obj, out object provider)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __provider = default;
            byte __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, byte*, int>**)ThisPtr)[7](ThisPtr, &__provider, &__retval));
                global::System.GC.KeepAlive(_obj);
                provider = MarshalInspectable<object>.FromAbi(__provider);
                return __retval != 0;
            }
            finally
            {
                MarshalInspectable<object>.DisposeAbi(__provider);
            }
        }


        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0x8A, 0xE9, 0x54, 0xD4, 0xF1, 0xD4, 0x36, 0x54, 0xA0, 0xF0, 0x5F, 0xB6, 0xC2, 0x84, 0x8F, 0xAE };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("D454E98A-D4F1-5436-A0F0-5FB6C2848FAE")]
    internal interface IContentSiteExperimental : global::Microsoft.UI.Content.IContentSiteExperimental
    {
    }
    internal static class IContentSiteFactoryMethods
    {



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0xD5, 0x98, 0xFB, 0x72, 0x8A, 0xB2, 0xF1, 0x57, 0x91, 0xFA, 0x24, 0xC0, 0x14, 0xA3, 0x42, 0xC1 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("72FB98D5-B28A-57F1-91FA-24C014A342C1")]
    internal interface IContentSiteFactory : global::Microsoft.UI.Content.IContentSiteFactory
    {
    }
    public static class IContentSiteInputMethods
    {

        public static unsafe bool get_ProcessesKeyboardInput(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            byte __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, byte*, int>**)ThisPtr)[6](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval != 0;
        }
        public static unsafe void set_ProcessesKeyboardInput(IObjectReference _obj, bool value)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, byte, int>**)ThisPtr)[7](ThisPtr, (byte)(value ? 1 : 0)));
            global::System.GC.KeepAlive(_obj);
        }

        public static unsafe bool get_ProcessesPointerInput(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            byte __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, byte*, int>**)ThisPtr)[8](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval != 0;
        }
        public static unsafe void set_ProcessesPointerInput(IObjectReference _obj, bool value)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, byte, int>**)ThisPtr)[9](ThisPtr, (byte)(value ? 1 : 0)));
            global::System.GC.KeepAlive(_obj);
        }



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0x89, 0x81, 0xAD, 0xE, 0xD3, 0x10, 0xD, 0x55, 0xB7, 0x47, 0x88, 0x47, 0xBD, 0x7C, 0x9D, 0x21 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

        public static global::System.IntPtr AbiToProjectionVftablePtr => IContentSiteInput.AbiToProjectionVftablePtr;

    }
    [DynamicInterfaceCastableImplementation]
    [Guid("0EAD8189-10D3-550D-B747-8847BD7C9D21")]
    internal unsafe interface IContentSiteInput : global::Microsoft.UI.Content.IContentSiteInput
    {

        public static readonly IntPtr AbiToProjectionVftablePtr;
        static unsafe IContentSiteInput()
        {
            AbiToProjectionVftablePtr = ComWrappersSupport.AllocateVtableMemory(typeof(IContentSiteInput), sizeof(IInspectable.Vftbl) + sizeof(IntPtr) * 4);
            *(IInspectable.Vftbl*)AbiToProjectionVftablePtr = IInspectable.Vftbl.AbiToProjectionVftable;
            ((delegate* unmanaged[Stdcall]<IntPtr, byte*, int>*)AbiToProjectionVftablePtr)[6] = &Do_Abi_get_ProcessesKeyboardInput_0;
            ((delegate* unmanaged[Stdcall]<IntPtr, byte, int>*)AbiToProjectionVftablePtr)[7] = &Do_Abi_put_ProcessesKeyboardInput_1;
            ((delegate* unmanaged[Stdcall]<IntPtr, byte*, int>*)AbiToProjectionVftablePtr)[8] = &Do_Abi_get_ProcessesPointerInput_2;
            ((delegate* unmanaged[Stdcall]<IntPtr, byte, int>*)AbiToProjectionVftablePtr)[9] = &Do_Abi_put_ProcessesPointerInput_3;
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvStdcall) })]
        private static unsafe int Do_Abi_put_ProcessesKeyboardInput_1(IntPtr thisPtr, byte value)
        {



            try
            {
                global::WinRT.ComWrappersSupport.FindObject<global::Microsoft.UI.Content.IContentSiteInput>(thisPtr).ProcessesKeyboardInput = value != 0;

            }
            catch (Exception __exception__)
            {
                global::WinRT.ExceptionHelpers.SetErrorInfo(__exception__);
                return global::WinRT.ExceptionHelpers.GetHRForException(__exception__);
            }
            return 0;
        }
        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvStdcall) })]
        private static unsafe int Do_Abi_get_ProcessesKeyboardInput_0(IntPtr thisPtr, byte* value)
        {

            bool __value = default;

            *value = default;

            try
            {
                __value = global::WinRT.ComWrappersSupport.FindObject<global::Microsoft.UI.Content.IContentSiteInput>(thisPtr).ProcessesKeyboardInput;
                *value = (byte)(__value ? 1 : 0);

            }
            catch (Exception __exception__)
            {
                global::WinRT.ExceptionHelpers.SetErrorInfo(__exception__);
                return global::WinRT.ExceptionHelpers.GetHRForException(__exception__);
            }
            return 0;
        }
        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvStdcall) })]
        private static unsafe int Do_Abi_put_ProcessesPointerInput_3(IntPtr thisPtr, byte value)
        {



            try
            {
                global::WinRT.ComWrappersSupport.FindObject<global::Microsoft.UI.Content.IContentSiteInput>(thisPtr).ProcessesPointerInput = value != 0;

            }
            catch (Exception __exception__)
            {
                global::WinRT.ExceptionHelpers.SetErrorInfo(__exception__);
                return global::WinRT.ExceptionHelpers.GetHRForException(__exception__);
            }
            return 0;
        }
        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvStdcall) })]
        private static unsafe int Do_Abi_get_ProcessesPointerInput_2(IntPtr thisPtr, byte* value)
        {

            bool __value = default;

            *value = default;

            try
            {
                __value = global::WinRT.ComWrappersSupport.FindObject<global::Microsoft.UI.Content.IContentSiteInput>(thisPtr).ProcessesPointerInput;
                *value = (byte)(__value ? 1 : 0);

            }
            catch (Exception __exception__)
            {
                global::WinRT.ExceptionHelpers.SetErrorInfo(__exception__);
                return global::WinRT.ExceptionHelpers.GetHRForException(__exception__);
            }
            return 0;
        }

        unsafe bool global::Microsoft.UI.Content.IContentSiteInput.ProcessesKeyboardInput
        {
            get
            {
                var _obj = ((IObjectReference)((IWinRTObject)this).GetObjectReferenceForType(typeof(global::Microsoft.UI.Content.IContentSiteInput).TypeHandle));
                return global::ABI.Microsoft.UI.Content.IContentSiteInputMethods.get_ProcessesKeyboardInput(_obj);
            }
            set
            {
                var _obj = ((IObjectReference)((IWinRTObject)this).GetObjectReferenceForType(typeof(global::Microsoft.UI.Content.IContentSiteInput).TypeHandle));
                global::ABI.Microsoft.UI.Content.IContentSiteInputMethods.set_ProcessesKeyboardInput(_obj, value);
            }
        }

        unsafe bool global::Microsoft.UI.Content.IContentSiteInput.ProcessesPointerInput
        {
            get
            {
                var _obj = ((IObjectReference)((IWinRTObject)this).GetObjectReferenceForType(typeof(global::Microsoft.UI.Content.IContentSiteInput).TypeHandle));
                return global::ABI.Microsoft.UI.Content.IContentSiteInputMethods.get_ProcessesPointerInput(_obj);
            }
            set
            {
                var _obj = ((IObjectReference)((IWinRTObject)this).GetObjectReferenceForType(typeof(global::Microsoft.UI.Content.IContentSiteInput).TypeHandle));
                global::ABI.Microsoft.UI.Content.IContentSiteInputMethods.set_ProcessesPointerInput(_obj, value);
            }
        }
    }

    public static class IContentSiteLinkMethods
    {

        public static unsafe global::Microsoft.UI.Content.ContentIsland get_Parent(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[6](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Content.ContentIsland.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.UI.Content.ContentIsland.DisposeAbi(__retval);
            }
        }



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0x41, 0x73, 0x24, 0xD9, 0xD0, 0xF5, 0x84, 0x50, 0xAF, 0x66, 0xF5, 0xDF, 0x5F, 0x31, 0x4F, 0xC0 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

        public static global::System.IntPtr AbiToProjectionVftablePtr => IContentSiteLink.AbiToProjectionVftablePtr;

    }
    [DynamicInterfaceCastableImplementation]
    [Guid("D9247341-F5D0-5084-AF66-F5DF5F314FC0")]
    internal unsafe interface IContentSiteLink : global::Microsoft.UI.Content.IContentSiteLink
    {

        public static readonly IntPtr AbiToProjectionVftablePtr;
        static unsafe IContentSiteLink()
        {
            AbiToProjectionVftablePtr = ComWrappersSupport.AllocateVtableMemory(typeof(IContentSiteLink), sizeof(IInspectable.Vftbl) + sizeof(IntPtr) * 1);
            *(IInspectable.Vftbl*)AbiToProjectionVftablePtr = IInspectable.Vftbl.AbiToProjectionVftable;
            ((delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>*)AbiToProjectionVftablePtr)[6] = &Do_Abi_get_Parent_0;
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvStdcall) })]
        private static unsafe int Do_Abi_get_Parent_0(IntPtr thisPtr, IntPtr* value)
        {

            global::Microsoft.UI.Content.ContentIsland __value = default;

            *value = default;

            try
            {
                __value = global::WinRT.ComWrappersSupport.FindObject<global::Microsoft.UI.Content.IContentSiteLink>(thisPtr).Parent;
                *value = global::ABI.Microsoft.UI.Content.ContentIsland.FromManaged(__value);

            }
            catch (Exception __exception__)
            {
                global::WinRT.ExceptionHelpers.SetErrorInfo(__exception__);
                return global::WinRT.ExceptionHelpers.GetHRForException(__exception__);
            }
            return 0;
        }

        unsafe global::Microsoft.UI.Content.ContentIsland global::Microsoft.UI.Content.IContentSiteLink.Parent
        {
            get
            {
                var _obj = ((IObjectReference)((IWinRTObject)this).GetObjectReferenceForType(typeof(global::Microsoft.UI.Content.IContentSiteLink).TypeHandle));
                return global::ABI.Microsoft.UI.Content.IContentSiteLinkMethods.get_Parent(_obj);
            }
        }
    }

    internal static class IContentSiteRequestedStateChangedEventArgsMethods
    {

        internal static unsafe bool get_DidRequestedSizeChange(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            byte __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, byte*, int>**)ThisPtr)[6](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval != 0;
        }



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0x1D, 0xFD, 0x55, 0x1B, 0x92, 0x72, 0x2B, 0x56, 0xB4, 0xA1, 0xD4, 0xDE, 0x79, 0x72, 0xE6, 0x84 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("1B55FD1D-7292-562B-B4A1-D4DE7972E684")]
    internal interface IContentSiteRequestedStateChangedEventArgs : global::Microsoft.UI.Content.IContentSiteRequestedStateChangedEventArgs
    {
    }
    internal static class IContentSiteViewMethods
    {

        internal static unsafe global::System.Numerics.Vector2 get_ActualSize(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::System.Numerics.Vector2 __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::System.Numerics.Vector2*, int>**)ThisPtr)[6](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }

        internal static unsafe global::Windows.Graphics.SizeInt32 get_ClientSize(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::Windows.Graphics.SizeInt32 __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::Windows.Graphics.SizeInt32*, int>**)ThisPtr)[7](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }

        internal static unsafe global::Microsoft.UI.Content.ContentCoordinateConverter get_CoordinateConverter(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[8](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Content.ContentCoordinateConverter.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.UI.Content.ContentCoordinateConverter.DisposeAbi(__retval);
            }
        }

        internal static unsafe global::Microsoft.UI.Dispatching.DispatcherQueue get_DispatcherQueue(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[9](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Dispatching.DispatcherQueue.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.UI.Dispatching.DispatcherQueue.DisposeAbi(__retval);
            }
        }

        internal static unsafe global::Microsoft.UI.Content.ContentSiteEnvironmentView get_EnvironmentView(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[10](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Content.ContentSiteEnvironmentView.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.UI.Content.ContentSiteEnvironmentView.DisposeAbi(__retval);
            }
        }

        internal static unsafe bool get_IsConnected(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            byte __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, byte*, int>**)ThisPtr)[11](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval != 0;
        }

        internal static unsafe bool get_IsSiteEnabled(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            byte __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, byte*, int>**)ThisPtr)[12](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval != 0;
        }

        internal static unsafe bool get_IsSiteVisible(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            byte __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, byte*, int>**)ThisPtr)[13](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval != 0;
        }

        internal static unsafe global::Microsoft.UI.Content.ContentLayoutDirection get_LayoutDirection(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::Microsoft.UI.Content.ContentLayoutDirection __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::Microsoft.UI.Content.ContentLayoutDirection*, int>**)ThisPtr)[14](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }

        internal static unsafe float get_OverrideScale(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            float __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, float*, int>**)ThisPtr)[15](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }

        internal static unsafe float get_ParentScale(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            float __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, float*, int>**)ThisPtr)[16](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }

        internal static unsafe float get_RasterizationScale(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            float __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, float*, int>**)ThisPtr)[17](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }

        internal static unsafe global::System.Numerics.Vector2 get_RequestedSize(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::System.Numerics.Vector2 __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::System.Numerics.Vector2*, int>**)ThisPtr)[18](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }

        internal static unsafe bool get_ShouldApplyRasterizationScale(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            byte __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, byte*, int>**)ThisPtr)[19](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval != 0;
        }



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0xD5, 0x8D, 0x5D, 0x2D, 0x8E, 0x35, 0x5, 0x5B, 0x99, 0x3B, 0xB2, 0x66, 0x6D, 0x17, 0x86, 0xB3 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("2D5D8DD5-358E-5B05-993B-B2666D1786B3")]
    internal interface IContentSiteView : global::Microsoft.UI.Content.IContentSiteView
    {
    }
    internal static class IContentSiteView2Methods
    {

        internal static unsafe global::System.Numerics.Matrix4x4 get_LocalToClientTransformMatrix(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::System.Numerics.Matrix4x4 __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::System.Numerics.Matrix4x4*, int>**)ThisPtr)[6](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }

        internal static unsafe global::System.Numerics.Matrix4x4 get_LocalToParentTransformMatrix(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::System.Numerics.Matrix4x4 __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::System.Numerics.Matrix4x4*, int>**)ThisPtr)[7](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }

        internal static unsafe bool get_ProcessesKeyboardInput(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            byte __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, byte*, int>**)ThisPtr)[8](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval != 0;
        }

        internal static unsafe bool get_ProcessesPointerInput(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            byte __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, byte*, int>**)ThisPtr)[9](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval != 0;
        }



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0xE3, 0xDC, 0x8A, 0x62, 0xF, 0x82, 0xDE, 0x57, 0xBD, 0xC8, 0x37, 0x20, 0xFF, 0x73, 0x1, 0x4B };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("628ADCE3-820F-57DE-BDC8-3720FF73014B")]
    internal interface IContentSiteView2 : global::Microsoft.UI.Content.IContentSiteView2
    {
    }
    internal static class IContentSiteViewAutomationMethods
    {

        internal static unsafe global::Microsoft.UI.Content.ContentAutomationOptions get_AutomationOption(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::Microsoft.UI.Content.ContentAutomationOptions __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::Microsoft.UI.Content.ContentAutomationOptions*, int>**)ThisPtr)[6](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0xFF, 0xD5, 0xD1, 0xF9, 0x69, 0x96, 0x53, 0x55, 0xA8, 0x75, 0xAE, 0xE0, 0x3E, 0x11, 0xED, 0xD8 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("F9D1D5FF-9669-5553-A875-AEE03E11EDD8")]
    internal interface IContentSiteViewAutomation : global::Microsoft.UI.Content.IContentSiteViewAutomation
    {
    }
    internal static class IContentSiteViewFactoryMethods
    {



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0xF0, 0x72, 0xFD, 0x9E, 0xEF, 0x63, 0x6A, 0x5B, 0xA5, 0xC, 0x56, 0x85, 0xBD, 0x81, 0x0, 0xF1 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("9EFD72F0-63EF-5B6A-A50C-5685BD8100F1")]
    internal interface IContentSiteViewFactory : global::Microsoft.UI.Content.IContentSiteViewFactory
    {
    }
    internal static class ICoreWindowSiteBridgeMethods
    {


        internal static unsafe void Connect(IObjectReference _obj, global::Microsoft.UI.Content.ContentIsland content)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __content = default;
            try
            {
                __content = global::ABI.Microsoft.UI.Content.ContentIsland.CreateMarshaler2(content);
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, int>**)ThisPtr)[6](ThisPtr, MarshalInspectable<object>.GetAbi(__content)));
                global::System.GC.KeepAlive(_obj);
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__content);
            }
        }


        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0x2E, 0xC0, 0xE1, 0x3, 0xE3, 0xE5, 0x6A, 0x52, 0x84, 0x92, 0x93, 0x9E, 0x26, 0xEE, 0x9, 0xD5 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("03E1C02E-E5E3-526A-8492-939E26EE09D5")]
    internal interface ICoreWindowSiteBridge : global::Microsoft.UI.Content.ICoreWindowSiteBridge
    {
    }
    internal static class ICoreWindowSiteBridgeStaticsMethods
    {


        internal static unsafe global::Microsoft.UI.Content.CoreWindowSiteBridge Create(IObjectReference _obj, global::Microsoft.UI.Composition.Compositor compositor, global::Windows.UI.Core.CoreWindow coreWindow)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __compositor = default;
            ObjectReferenceValue __coreWindow = default;
            IntPtr __retval = default;
            try
            {
                __compositor = global::ABI.Microsoft.UI.Composition.Compositor.CreateMarshaler2(compositor);
                __coreWindow = global::ABI.Windows.UI.Core.CoreWindow.CreateMarshaler2(coreWindow);
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, IntPtr, IntPtr*, int>**)ThisPtr)[6](ThisPtr, MarshalInspectable<object>.GetAbi(__compositor), MarshalInspectable<object>.GetAbi(__coreWindow), &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Content.CoreWindowSiteBridge.FromAbi(__retval);
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__compositor);
                MarshalInspectable<object>.DisposeMarshaler(__coreWindow);
                global::ABI.Microsoft.UI.Content.CoreWindowSiteBridge.DisposeAbi(__retval);
            }
        }

        internal static unsafe bool IsSupported(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            byte __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, byte*, int>**)ThisPtr)[7](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval != 0;
        }


        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0x93, 0x67, 0xC5, 0xFB, 0xF2, 0x11, 0x54, 0x57, 0xAD, 0x70, 0x30, 0xE8, 0x2C, 0x7, 0xFA, 0x35 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("FBC56793-11F2-5754-AD70-30E82C07FA35")]
    internal interface ICoreWindowSiteBridgeStatics : global::Microsoft.UI.Content.ICoreWindowSiteBridgeStatics
    {
    }
    internal static class IDesktopAttachedSiteBridgeMethods
    {


        internal static unsafe void Connect(IObjectReference _obj, global::Microsoft.UI.Content.ContentIsland content)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __content = default;
            try
            {
                __content = global::ABI.Microsoft.UI.Content.ContentIsland.CreateMarshaler2(content);
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, int>**)ThisPtr)[8](ThisPtr, MarshalInspectable<object>.GetAbi(__content)));
                global::System.GC.KeepAlive(_obj);
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__content);
            }
        }
        internal static unsafe global::Microsoft.UI.Content.ContentSiteView get_SiteView(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[6](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Content.ContentSiteView.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.UI.Content.ContentSiteView.DisposeAbi(__retval);
            }
        }

        internal static unsafe global::Microsoft.UI.WindowId get_WindowId(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::Microsoft.UI.WindowId __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::Microsoft.UI.WindowId*, int>**)ThisPtr)[7](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0x58, 0x37, 0xAD, 0xC8, 0xD3, 0xC8, 0xA5, 0x5E, 0xA2, 0x74, 0xCE, 0x12, 0xD9, 0xCF, 0x68, 0x45 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("C8AD3758-C8D3-5EA5-A274-CE12D9CF6845")]
    internal interface IDesktopAttachedSiteBridge : global::Microsoft.UI.Content.IDesktopAttachedSiteBridge
    {
    }
    internal static class IDesktopAttachedSiteBridgeStaticsMethods
    {


        internal static unsafe global::Microsoft.UI.Content.DesktopAttachedSiteBridge CreateFromWindowId(IObjectReference _obj, global::Microsoft.UI.Dispatching.DispatcherQueue queue, global::Microsoft.UI.WindowId windowId)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __queue = default;
            IntPtr __retval = default;
            try
            {
                __queue = global::ABI.Microsoft.UI.Dispatching.DispatcherQueue.CreateMarshaler2(queue);
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, global::Microsoft.UI.WindowId, IntPtr*, int>**)ThisPtr)[6](ThisPtr, MarshalInspectable<object>.GetAbi(__queue), windowId, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Content.DesktopAttachedSiteBridge.FromAbi(__retval);
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__queue);
                global::ABI.Microsoft.UI.Content.DesktopAttachedSiteBridge.DisposeAbi(__retval);
            }
        }


        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0xF, 0x93, 0xF6, 0x41, 0xE, 0x31, 0x80, 0x56, 0x81, 0x2C, 0x6D, 0xAC, 0x16, 0xDF, 0xFF, 0x44 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("41F6930F-310E-5680-812C-6DAC16DFFF44")]
    internal interface IDesktopAttachedSiteBridgeStatics : global::Microsoft.UI.Content.IDesktopAttachedSiteBridgeStatics
    {
    }
    internal static class IDesktopChildSiteBridgeMethods
    {

        internal static unsafe global::Microsoft.UI.Content.ContentSizePolicy get_ResizePolicy(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::Microsoft.UI.Content.ContentSizePolicy __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::Microsoft.UI.Content.ContentSizePolicy*, int>**)ThisPtr)[6](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }
        internal static unsafe void set_ResizePolicy(IObjectReference _obj, global::Microsoft.UI.Content.ContentSizePolicy value)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::Microsoft.UI.Content.ContentSizePolicy, int>**)ThisPtr)[7](ThisPtr, value));
            global::System.GC.KeepAlive(_obj);
        }

        internal static unsafe global::Microsoft.UI.Content.ContentSiteView get_SiteView(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[8](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Content.ContentSiteView.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.UI.Content.ContentSiteView.DisposeAbi(__retval);
            }
        }



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0x7B, 0xFF, 0xF2, 0xB2, 0x25, 0x18, 0xB0, 0x51, 0xB8, 0xB, 0x75, 0x99, 0x88, 0x9C, 0x56, 0x9F };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("B2F2FF7B-1825-51B0-B80B-7599889C569F")]
    internal interface IDesktopChildSiteBridge : global::Microsoft.UI.Content.IDesktopChildSiteBridge
    {
    }
    internal static class IDesktopChildSiteBridgeStaticsMethods
    {


        internal static unsafe global::Microsoft.UI.Content.DesktopChildSiteBridge Create(IObjectReference _obj, global::Microsoft.UI.Composition.Compositor compositor, global::Microsoft.UI.WindowId parentWindowId)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __compositor = default;
            IntPtr __retval = default;
            try
            {
                __compositor = global::ABI.Microsoft.UI.Composition.Compositor.CreateMarshaler2(compositor);
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, global::Microsoft.UI.WindowId, IntPtr*, int>**)ThisPtr)[6](ThisPtr, MarshalInspectable<object>.GetAbi(__compositor), parentWindowId, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Content.DesktopChildSiteBridge.FromAbi(__retval);
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__compositor);
                global::ABI.Microsoft.UI.Content.DesktopChildSiteBridge.DisposeAbi(__retval);
            }
        }


        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0xDE, 0x82, 0x6B, 0xAB, 0x47, 0x6A, 0xE3, 0x5D, 0xA8, 0x60, 0x61, 0x3C, 0x8D, 0xB6, 0x79, 0xAB };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("AB6B82DE-6A47-5DE3-A860-613C8DB679AB")]
    internal interface IDesktopChildSiteBridgeStatics : global::Microsoft.UI.Content.IDesktopChildSiteBridgeStatics
    {
    }
    internal static class IDesktopChildSiteBridgeStatics2Methods
    {


        internal static unsafe global::Microsoft.UI.Content.DesktopChildSiteBridge CreateWithDispatcherQueue(IObjectReference _obj, global::Microsoft.UI.Dispatching.DispatcherQueue queue, global::Microsoft.UI.WindowId parentWindowId)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __queue = default;
            IntPtr __retval = default;
            try
            {
                __queue = global::ABI.Microsoft.UI.Dispatching.DispatcherQueue.CreateMarshaler2(queue);
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, global::Microsoft.UI.WindowId, IntPtr*, int>**)ThisPtr)[6](ThisPtr, MarshalInspectable<object>.GetAbi(__queue), parentWindowId, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Content.DesktopChildSiteBridge.FromAbi(__retval);
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__queue);
                global::ABI.Microsoft.UI.Content.DesktopChildSiteBridge.DisposeAbi(__retval);
            }
        }


        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0x7, 0x94, 0xE9, 0xAA, 0x78, 0xE3, 0x53, 0x5C, 0x9A, 0xFF, 0x5A, 0x3B, 0x53, 0xE1, 0x94, 0xA8 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("AAE99407-E378-5C53-9AFF-5A3B53E194A8")]
    internal interface IDesktopChildSiteBridgeStatics2 : global::Microsoft.UI.Content.IDesktopChildSiteBridgeStatics2
    {
    }
    internal static class IDesktopPopupSiteBridgeMethods
    {


        internal static unsafe void Connect(IObjectReference _obj, global::Microsoft.UI.Content.ContentIsland content)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __content = default;
            try
            {
                __content = global::ABI.Microsoft.UI.Content.ContentIsland.CreateMarshaler2(content);
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, int>**)ThisPtr)[10](ThisPtr, MarshalInspectable<object>.GetAbi(__content)));
                global::System.GC.KeepAlive(_obj);
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__content);
            }
        }

        internal static unsafe void Disable(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, int>**)ThisPtr)[11](ThisPtr));
            global::System.GC.KeepAlive(_obj);
        }

        internal static unsafe void Enable(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, int>**)ThisPtr)[12](ThisPtr));
            global::System.GC.KeepAlive(_obj);
        }

        internal static unsafe void Hide(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, int>**)ThisPtr)[13](ThisPtr));
            global::System.GC.KeepAlive(_obj);
        }

        internal static unsafe void MoveAndResize(IObjectReference _obj, global::Windows.Graphics.RectInt32 rect)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::Windows.Graphics.RectInt32, int>**)ThisPtr)[14](ThisPtr, rect));
            global::System.GC.KeepAlive(_obj);
        }

        internal static unsafe void MoveInZOrderAtBottom(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, int>**)ThisPtr)[15](ThisPtr));
            global::System.GC.KeepAlive(_obj);
        }

        internal static unsafe void MoveInZOrderAtTop(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, int>**)ThisPtr)[16](ThisPtr));
            global::System.GC.KeepAlive(_obj);
        }

        internal static unsafe void MoveInZOrderBelow(IObjectReference _obj, global::Microsoft.UI.WindowId windowId)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::Microsoft.UI.WindowId, int>**)ThisPtr)[17](ThisPtr, windowId));
            global::System.GC.KeepAlive(_obj);
        }

        internal static unsafe void Show(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, int>**)ThisPtr)[18](ThisPtr));
            global::System.GC.KeepAlive(_obj);
        }
        internal static unsafe bool get_IsEnabled(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            byte __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, byte*, int>**)ThisPtr)[6](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval != 0;
        }

        internal static unsafe bool get_IsVisible(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            byte __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, byte*, int>**)ThisPtr)[7](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval != 0;
        }

        internal static unsafe global::Microsoft.UI.Content.ContentSiteView get_SiteView(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[8](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Content.ContentSiteView.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.UI.Content.ContentSiteView.DisposeAbi(__retval);
            }
        }

        internal static unsafe global::Microsoft.UI.WindowId get_WindowId(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::Microsoft.UI.WindowId __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::Microsoft.UI.WindowId*, int>**)ThisPtr)[9](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0x23, 0xAB, 0xEA, 0x84, 0x16, 0xF7, 0xD8, 0x5A, 0xAC, 0x0, 0x3D, 0x77, 0xC0, 0x1D, 0x42, 0xCC };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("84EAAB23-F716-5AD8-AC00-3D77C01D42CC")]
    internal interface IDesktopPopupSiteBridge : global::Microsoft.UI.Content.IDesktopPopupSiteBridge
    {
    }
    internal static class IDesktopPopupSiteBridgeStaticsMethods
    {


        internal static unsafe global::Microsoft.UI.Content.DesktopPopupSiteBridge Create(IObjectReference _obj, global::Microsoft.UI.Content.ContentIsland parent)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __parent = default;
            IntPtr __retval = default;
            try
            {
                __parent = global::ABI.Microsoft.UI.Content.ContentIsland.CreateMarshaler2(parent);
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, IntPtr*, int>**)ThisPtr)[6](ThisPtr, MarshalInspectable<object>.GetAbi(__parent), &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Content.DesktopPopupSiteBridge.FromAbi(__retval);
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__parent);
                global::ABI.Microsoft.UI.Content.DesktopPopupSiteBridge.DisposeAbi(__retval);
            }
        }


        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0x7B, 0xB7, 0xA2, 0x4E, 0x77, 0x31, 0x5B, 0x5E, 0x8D, 0xD, 0xA7, 0x6E, 0x15, 0xC6, 0xD0, 0x80 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("4EA2B77B-3177-5E5B-8D0D-A76E15C6D080")]
    internal interface IDesktopPopupSiteBridgeStatics : global::Microsoft.UI.Content.IDesktopPopupSiteBridgeStatics
    {
    }
    internal static class IDesktopSiteBridgeMethods
    {


        internal static unsafe void Connect(IObjectReference _obj, global::Microsoft.UI.Content.ContentIsland content)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __content = default;
            try
            {
                __content = global::ABI.Microsoft.UI.Content.ContentIsland.CreateMarshaler2(content);
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, int>**)ThisPtr)[9](ThisPtr, MarshalInspectable<object>.GetAbi(__content)));
                global::System.GC.KeepAlive(_obj);
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__content);
            }
        }

        internal static unsafe void Disable(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, int>**)ThisPtr)[10](ThisPtr));
            global::System.GC.KeepAlive(_obj);
        }

        internal static unsafe void Enable(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, int>**)ThisPtr)[11](ThisPtr));
            global::System.GC.KeepAlive(_obj);
        }

        internal static unsafe void Hide(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, int>**)ThisPtr)[12](ThisPtr));
            global::System.GC.KeepAlive(_obj);
        }

        internal static unsafe void MoveAndResize(IObjectReference _obj, global::Windows.Graphics.RectInt32 rect)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::Windows.Graphics.RectInt32, int>**)ThisPtr)[13](ThisPtr, rect));
            global::System.GC.KeepAlive(_obj);
        }

        internal static unsafe void MoveInZOrderAtBottom(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, int>**)ThisPtr)[14](ThisPtr));
            global::System.GC.KeepAlive(_obj);
        }

        internal static unsafe void MoveInZOrderAtTop(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, int>**)ThisPtr)[15](ThisPtr));
            global::System.GC.KeepAlive(_obj);
        }

        internal static unsafe void MoveInZOrderBelow(IObjectReference _obj, global::Microsoft.UI.WindowId windowId)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::Microsoft.UI.WindowId, int>**)ThisPtr)[16](ThisPtr, windowId));
            global::System.GC.KeepAlive(_obj);
        }

        internal static unsafe void Show(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, int>**)ThisPtr)[17](ThisPtr));
            global::System.GC.KeepAlive(_obj);
        }
        internal static unsafe bool get_IsEnabled(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            byte __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, byte*, int>**)ThisPtr)[6](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval != 0;
        }

        internal static unsafe bool get_IsVisible(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            byte __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, byte*, int>**)ThisPtr)[7](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval != 0;
        }

        internal static unsafe global::Microsoft.UI.WindowId get_WindowId(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::Microsoft.UI.WindowId __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::Microsoft.UI.WindowId*, int>**)ThisPtr)[8](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0x50, 0x87, 0xAE, 0xF0, 0x5C, 0x90, 0xA2, 0x50, 0x8A, 0x12, 0x45, 0x45, 0xC6, 0x24, 0x5B, 0xB4 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("F0AE8750-905C-50A2-8A12-4545C6245BB4")]
    internal interface IDesktopSiteBridge : global::Microsoft.UI.Content.IDesktopSiteBridge
    {
    }
    internal static class IDesktopSiteBridge2Methods
    {


        internal static unsafe global::Microsoft.UI.Content.PopupWindowSiteBridge TryCreatePopupSiteBridge(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[6](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Content.PopupWindowSiteBridge.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.UI.Content.PopupWindowSiteBridge.DisposeAbi(__retval);
            }
        }


        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0x41, 0xC0, 0x90, 0x11, 0xFB, 0x82, 0x3B, 0x5F, 0x91, 0x11, 0xCA, 0x8F, 0x19, 0xA7, 0x2B, 0x75 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("1190C041-82FB-5F3B-9111-CA8F19A72B75")]
    internal interface IDesktopSiteBridge2 : global::Microsoft.UI.Content.IDesktopSiteBridge2
    {
    }
    internal static class IDesktopSiteBridgeFactoryMethods
    {



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0xFF, 0xE1, 0x4E, 0xD9, 0xF1, 0x3A, 0xD0, 0x54, 0x93, 0x11, 0x65, 0x2B, 0x29, 0xC5, 0x7C, 0x5B };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("D94EE1FF-3AF1-54D0-9311-652B29C57C5B")]
    internal interface IDesktopSiteBridgeFactory : global::Microsoft.UI.Content.IDesktopSiteBridgeFactory
    {
    }
    internal static class IDesktopSiteBridgeStaticsMethods
    {


        internal static unsafe bool IsSupported(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            byte __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, byte*, int>**)ThisPtr)[6](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval != 0;
        }


        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0xAF, 0x8D, 0xB3, 0xE0, 0xD4, 0x9C, 0xC5, 0x50, 0x83, 0xEE, 0xC7, 0x6E, 0x3C, 0xF3, 0x4E, 0xBA };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("E0B38DAF-9CD4-50C5-83EE-C76E3CF34EBA")]
    internal interface IDesktopSiteBridgeStatics : global::Microsoft.UI.Content.IDesktopSiteBridgeStatics
    {
    }
    internal static class IEndpointConnectionEventArgsMethods
    {

        internal static unsafe string get_ConnectionInfo(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[6](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return MarshalString.FromAbi(__retval);
            }
            finally
            {
                MarshalString.DisposeAbi(__retval);
            }
        }



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0x15, 0x2A, 0xBF, 0x94, 0xF0, 0xED, 0xB2, 0x5E, 0x9C, 0xEC, 0x9B, 0x93, 0xAC, 0x53, 0x14, 0x13 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("94BF2A15-EDF0-5EB2-9CEC-9B93AC531413")]
    internal interface IEndpointConnectionEventArgs : global::Microsoft.UI.Content.IEndpointConnectionEventArgs
    {
    }
    internal static class IEndpointRequestedStateChangedEventArgsMethods
    {

        internal static unsafe bool get_DidRequestedSizeChange(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            byte __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, byte*, int>**)ThisPtr)[6](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval != 0;
        }



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0xC6, 0x95, 0x3F, 0x51, 0x93, 0x41, 0x88, 0x53, 0x90, 0xF8, 0x8C, 0xF3, 0x40, 0x81, 0x5B, 0x1E };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("513F95C6-4193-5388-90F8-8CF340815B1E")]
    internal interface IEndpointRequestedStateChangedEventArgs : global::Microsoft.UI.Content.IEndpointRequestedStateChangedEventArgs
    {
    }
    internal static class IPopupWindowSiteBridgeMethods
    {

        internal static unsafe bool get_Anchored(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            byte __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, byte*, int>**)ThisPtr)[6](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval != 0;
        }
        internal static unsafe void set_Anchored(IObjectReference _obj, bool value)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, byte, int>**)ThisPtr)[7](ThisPtr, (byte)(value ? 1 : 0)));
            global::System.GC.KeepAlive(_obj);
        }



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0xA2, 0x97, 0x45, 0x4, 0xEE, 0xE6, 0xAB, 0x5D, 0xAB, 0xE0, 0x19, 0x23, 0xEB, 0xE3, 0x4C, 0x2E };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("044597A2-E6EE-5DAB-ABE0-1923EBE34C2E")]
    internal interface IPopupWindowSiteBridge : global::Microsoft.UI.Content.IPopupWindowSiteBridge
    {
    }
    internal static class IProcessStarterMethods
    {



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0xBC, 0x1, 0x2D, 0x12, 0x53, 0x77, 0x92, 0x55, 0xB6, 0x2D, 0xF6, 0x59, 0xA3, 0xA, 0x2A, 0xC0 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("122D01BC-7753-5592-B62D-F659A30A2AC0")]
    internal interface IProcessStarter : global::Microsoft.UI.Content.IProcessStarter
    {
    }
    internal static class IProcessStarterFactoryMethods
    {



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0xD1, 0x18, 0x14, 0xA0, 0x8B, 0x4E, 0xB4, 0x54, 0xA5, 0xF2, 0x52, 0x1, 0x87, 0xA5, 0x8B, 0x80 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("A01418D1-4E8B-54B4-A5F2-520187A58B80")]
    internal interface IProcessStarterFactory : global::Microsoft.UI.Content.IProcessStarterFactory
    {
    }
    internal static class IProcessStarterStaticsMethods
    {


        internal static unsafe void StartProcess(IObjectReference _obj, string executablePath, string connectionInfo, out uint processId)
        {
            var ThisPtr = _obj.ThisPtr;

            uint __processId = default;
            MarshalString.Pinnable __executablePath = new(executablePath);
            MarshalString.Pinnable __connectionInfo = new(connectionInfo);
            fixed(void* ___executablePath = __executablePath, ___connectionInfo = __connectionInfo)
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, IntPtr, uint*, int>**)ThisPtr)[6](ThisPtr, MarshalString.GetAbi(ref __executablePath), MarshalString.GetAbi(ref __connectionInfo), &__processId));
                global::System.GC.KeepAlive(_obj);
                processId = __processId;
            }
        }


        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0x9D, 0xD5, 0xF9, 0x76, 0x56, 0x84, 0xF, 0x54, 0xBC, 0x74, 0xD, 0xCA, 0xDF, 0x45, 0x81, 0xB8 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("76F9D59D-8456-540F-BC74-0DCADF4581B8")]
    internal interface IProcessStarterStatics : global::Microsoft.UI.Content.IProcessStarterStatics
    {
    }
    internal static class ISystemVisualSiteBridgeMethods
    {


        internal static unsafe void Connect(IObjectReference _obj, global::Microsoft.UI.Content.ContentIsland content)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __content = default;
            try
            {
                __content = global::ABI.Microsoft.UI.Content.ContentIsland.CreateMarshaler2(content);
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, int>**)ThisPtr)[7](ThisPtr, MarshalInspectable<object>.GetAbi(__content)));
                global::System.GC.KeepAlive(_obj);
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__content);
            }
        }
        internal static unsafe global::Microsoft.UI.Content.ContentSite get_Site(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[6](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Content.ContentSite.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.UI.Content.ContentSite.DisposeAbi(__retval);
            }
        }



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0x27, 0xD2, 0xED, 0x6E, 0x2, 0x38, 0x72, 0x57, 0xB2, 0x4E, 0x1D, 0x8B, 0x73, 0x6C, 0xFF, 0xA7 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("6EEDD227-3802-5772-B24E-1D8B736CFFA7")]
    internal interface ISystemVisualSiteBridge : global::Microsoft.UI.Content.ISystemVisualSiteBridge
    {
    }
    internal static class ISystemVisualSiteBridgeStaticsMethods
    {


        internal static unsafe global::Microsoft.UI.Content.SystemVisualSiteBridge Create(IObjectReference _obj, global::Microsoft.UI.Dispatching.DispatcherQueue queue, global::Windows.UI.Composition.ContainerVisual hostVisual, global::Microsoft.UI.WindowId parentForInputWindowId)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __queue = default;
            ObjectReferenceValue __hostVisual = default;
            IntPtr __retval = default;
            try
            {
                __queue = global::ABI.Microsoft.UI.Dispatching.DispatcherQueue.CreateMarshaler2(queue);
                __hostVisual = global::ABI.Windows.UI.Composition.ContainerVisual.CreateMarshaler2(hostVisual);
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, IntPtr, global::Microsoft.UI.WindowId, IntPtr*, int>**)ThisPtr)[6](ThisPtr, MarshalInspectable<object>.GetAbi(__queue), MarshalInspectable<object>.GetAbi(__hostVisual), parentForInputWindowId, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Content.SystemVisualSiteBridge.FromAbi(__retval);
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__queue);
                MarshalInspectable<object>.DisposeMarshaler(__hostVisual);
                global::ABI.Microsoft.UI.Content.SystemVisualSiteBridge.DisposeAbi(__retval);
            }
        }


        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0x1C, 0x50, 0x79, 0x6A, 0xA0, 0x83, 0x89, 0x58, 0xAA, 0x21, 0x42, 0x1, 0x0, 0x30, 0x32, 0x76 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("6A79501C-83A0-5889-AA21-420100303276")]
    internal interface ISystemVisualSiteBridgeStatics : global::Microsoft.UI.Content.ISystemVisualSiteBridgeStatics
    {
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    public struct PopupWindowSiteBridge
    {

        public static IObjectReference CreateMarshaler(global::Microsoft.UI.Content.PopupWindowSiteBridge obj) => obj is null ? null : MarshalInspectable<global::Microsoft.UI.Content.PopupWindowSiteBridge>.CreateMarshaler<IUnknownVftbl>(obj, global::ABI.Microsoft.UI.Content.IPopupWindowSiteBridgeMethods.IID);
        public static ObjectReferenceValue CreateMarshaler2(global::Microsoft.UI.Content.PopupWindowSiteBridge obj) => MarshalInspectable<object>.CreateMarshaler2(obj, global::ABI.Microsoft.UI.Content.IPopupWindowSiteBridgeMethods.IID);
        public static IntPtr GetAbi(IObjectReference value) => value is null ? IntPtr.Zero : MarshalInterfaceHelper<object>.GetAbi(value);
        public static global::Microsoft.UI.Content.PopupWindowSiteBridge FromAbi(IntPtr thisPtr) => global::Microsoft.UI.Content.PopupWindowSiteBridge.FromAbi(thisPtr);
        public static IntPtr FromManaged(global::Microsoft.UI.Content.PopupWindowSiteBridge obj) => obj is null ? IntPtr.Zero : CreateMarshaler2(obj).Detach();
        public static unsafe MarshalInterfaceHelper<global::Microsoft.UI.Content.PopupWindowSiteBridge>.MarshalerArray CreateMarshalerArray(global::Microsoft.UI.Content.PopupWindowSiteBridge[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Content.PopupWindowSiteBridge>.CreateMarshalerArray2(array, (o) => CreateMarshaler2(o));
        public static (int length, IntPtr data) GetAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Content.PopupWindowSiteBridge>.GetAbiArray(box);
        public static unsafe global::Microsoft.UI.Content.PopupWindowSiteBridge[] FromAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Content.PopupWindowSiteBridge>.FromAbiArray(box, FromAbi);
        public static void CopyAbiArray(global::Microsoft.UI.Content.PopupWindowSiteBridge[] array, object box) => MarshalInterfaceHelper<global::Microsoft.UI.Content.PopupWindowSiteBridge>.CopyAbiArray(array, box, FromAbi);
        public static (int length, IntPtr data) FromManagedArray(global::Microsoft.UI.Content.PopupWindowSiteBridge[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Content.PopupWindowSiteBridge>.FromManagedArray(array, (o) => FromManaged(o));
        public static void DisposeMarshaler(IObjectReference value) => MarshalInspectable<object>.DisposeMarshaler(value);
        public static void DisposeMarshalerArray(MarshalInterfaceHelper<global::Microsoft.UI.Content.PopupWindowSiteBridge>.MarshalerArray array) => MarshalInterfaceHelper<global::Microsoft.UI.Content.PopupWindowSiteBridge>.DisposeMarshalerArray(array);
        public static void DisposeAbi(IntPtr abi) => MarshalInspectable<object>.DisposeAbi(abi);
        public static unsafe void DisposeAbiArray(object box) => MarshalInspectable<object>.DisposeAbiArray(box);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    internal sealed class PopupWindowSiteBridgeRcwFactoryAttribute : global::WinRT.WinRTImplementationTypeRcwFactoryAttribute
    {
        public override object CreateInstance(global::WinRT.IInspectable inspectable)
            => new global::Microsoft.UI.Content.PopupWindowSiteBridge(inspectable.ObjRef);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    public struct ProcessStarter
    {

        public static IObjectReference CreateMarshaler(global::Microsoft.UI.Content.ProcessStarter obj) => obj is null ? null : MarshalInspectable<global::Microsoft.UI.Content.ProcessStarter>.CreateMarshaler<IUnknownVftbl>(obj, global::ABI.Microsoft.UI.Content.IProcessStarterMethods.IID);
        public static ObjectReferenceValue CreateMarshaler2(global::Microsoft.UI.Content.ProcessStarter obj) => MarshalInspectable<object>.CreateMarshaler2(obj, global::ABI.Microsoft.UI.Content.IProcessStarterMethods.IID);
        public static IntPtr GetAbi(IObjectReference value) => value is null ? IntPtr.Zero : MarshalInterfaceHelper<object>.GetAbi(value);
        public static global::Microsoft.UI.Content.ProcessStarter FromAbi(IntPtr thisPtr) => global::Microsoft.UI.Content.ProcessStarter.FromAbi(thisPtr);
        public static IntPtr FromManaged(global::Microsoft.UI.Content.ProcessStarter obj) => obj is null ? IntPtr.Zero : CreateMarshaler2(obj).Detach();
        public static unsafe MarshalInterfaceHelper<global::Microsoft.UI.Content.ProcessStarter>.MarshalerArray CreateMarshalerArray(global::Microsoft.UI.Content.ProcessStarter[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Content.ProcessStarter>.CreateMarshalerArray2(array, (o) => CreateMarshaler2(o));
        public static (int length, IntPtr data) GetAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Content.ProcessStarter>.GetAbiArray(box);
        public static unsafe global::Microsoft.UI.Content.ProcessStarter[] FromAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Content.ProcessStarter>.FromAbiArray(box, FromAbi);
        public static void CopyAbiArray(global::Microsoft.UI.Content.ProcessStarter[] array, object box) => MarshalInterfaceHelper<global::Microsoft.UI.Content.ProcessStarter>.CopyAbiArray(array, box, FromAbi);
        public static (int length, IntPtr data) FromManagedArray(global::Microsoft.UI.Content.ProcessStarter[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Content.ProcessStarter>.FromManagedArray(array, (o) => FromManaged(o));
        public static void DisposeMarshaler(IObjectReference value) => MarshalInspectable<object>.DisposeMarshaler(value);
        public static void DisposeMarshalerArray(MarshalInterfaceHelper<global::Microsoft.UI.Content.ProcessStarter>.MarshalerArray array) => MarshalInterfaceHelper<global::Microsoft.UI.Content.ProcessStarter>.DisposeMarshalerArray(array);
        public static void DisposeAbi(IntPtr abi) => MarshalInspectable<object>.DisposeAbi(abi);
        public static unsafe void DisposeAbiArray(object box) => MarshalInspectable<object>.DisposeAbiArray(box);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    internal sealed class ProcessStarterRcwFactoryAttribute : global::WinRT.WinRTImplementationTypeRcwFactoryAttribute
    {
        public override object CreateInstance(global::WinRT.IInspectable inspectable)
            => new global::Microsoft.UI.Content.ProcessStarter(inspectable.ObjRef);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    public struct SystemVisualSiteBridge
    {

        public static IObjectReference CreateMarshaler(global::Microsoft.UI.Content.SystemVisualSiteBridge obj) => obj is null ? null : MarshalInspectable<global::Microsoft.UI.Content.SystemVisualSiteBridge>.CreateMarshaler<IUnknownVftbl>(obj, global::ABI.Microsoft.UI.Content.ISystemVisualSiteBridgeMethods.IID);
        public static ObjectReferenceValue CreateMarshaler2(global::Microsoft.UI.Content.SystemVisualSiteBridge obj) => MarshalInspectable<object>.CreateMarshaler2(obj, global::ABI.Microsoft.UI.Content.ISystemVisualSiteBridgeMethods.IID);
        public static IntPtr GetAbi(IObjectReference value) => value is null ? IntPtr.Zero : MarshalInterfaceHelper<object>.GetAbi(value);
        public static global::Microsoft.UI.Content.SystemVisualSiteBridge FromAbi(IntPtr thisPtr) => global::Microsoft.UI.Content.SystemVisualSiteBridge.FromAbi(thisPtr);
        public static IntPtr FromManaged(global::Microsoft.UI.Content.SystemVisualSiteBridge obj) => obj is null ? IntPtr.Zero : CreateMarshaler2(obj).Detach();
        public static unsafe MarshalInterfaceHelper<global::Microsoft.UI.Content.SystemVisualSiteBridge>.MarshalerArray CreateMarshalerArray(global::Microsoft.UI.Content.SystemVisualSiteBridge[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Content.SystemVisualSiteBridge>.CreateMarshalerArray2(array, (o) => CreateMarshaler2(o));
        public static (int length, IntPtr data) GetAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Content.SystemVisualSiteBridge>.GetAbiArray(box);
        public static unsafe global::Microsoft.UI.Content.SystemVisualSiteBridge[] FromAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Content.SystemVisualSiteBridge>.FromAbiArray(box, FromAbi);
        public static void CopyAbiArray(global::Microsoft.UI.Content.SystemVisualSiteBridge[] array, object box) => MarshalInterfaceHelper<global::Microsoft.UI.Content.SystemVisualSiteBridge>.CopyAbiArray(array, box, FromAbi);
        public static (int length, IntPtr data) FromManagedArray(global::Microsoft.UI.Content.SystemVisualSiteBridge[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Content.SystemVisualSiteBridge>.FromManagedArray(array, (o) => FromManaged(o));
        public static void DisposeMarshaler(IObjectReference value) => MarshalInspectable<object>.DisposeMarshaler(value);
        public static void DisposeMarshalerArray(MarshalInterfaceHelper<global::Microsoft.UI.Content.SystemVisualSiteBridge>.MarshalerArray array) => MarshalInterfaceHelper<global::Microsoft.UI.Content.SystemVisualSiteBridge>.DisposeMarshalerArray(array);
        public static void DisposeAbi(IntPtr abi) => MarshalInspectable<object>.DisposeAbi(abi);
        public static unsafe void DisposeAbiArray(object box) => MarshalInspectable<object>.DisposeAbiArray(box);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    internal sealed class SystemVisualSiteBridgeRcwFactoryAttribute : global::WinRT.WinRTImplementationTypeRcwFactoryAttribute
    {
        public override object CreateInstance(global::WinRT.IInspectable inspectable)
            => new global::Microsoft.UI.Content.SystemVisualSiteBridge(inspectable.ObjRef);
    }
}
#pragma warning restore CA1416
