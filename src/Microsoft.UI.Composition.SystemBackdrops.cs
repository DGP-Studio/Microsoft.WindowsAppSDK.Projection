//------------------------------------------------------------------------------
// <auto-generated>
//     This file was generated by cswinrt.exe version 2.2.0.241111.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Diagnostics;
using System.Diagnostics.CodeAnalysis;
using System.Linq.Expressions;
using System.Reflection;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;
using WinRT;
using WinRT.Interop;


#pragma warning disable 0169 // warning CS0169: The field '...' is never used
#pragma warning disable 0649 // warning CS0169: Field '...' is never assigned to
#pragma warning disable CA2207, CA1063, CA1033, CA1001, CA2213

namespace Microsoft.UI.Composition.SystemBackdrops
{
    [global::WinRT.WindowsRuntimeType("Microsoft.UI")]
    [global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Composition.SystemBackdrops.DesktopAcrylicController))]
    [global::ABI.Microsoft.UI.Composition.SystemBackdrops.DesktopAcrylicControllerRcwFactory]
    [global::WinRT.ProjectedRuntimeClass(typeof(IDesktopAcrylicController))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.Foundation.WindowsAppSDKContract), 65536u)]
    public sealed class DesktopAcrylicController : ISystemBackdropController, global::System.IDisposable, ISystemBackdropControllerWithTargets, global::Microsoft.UI.IClosableNotifier, global::System.Runtime.InteropServices.ICustomQueryInterface, IWinRTObject, IEquatable<DesktopAcrylicController>
    {
        private IntPtr ThisPtr => _inner == null ? (((IWinRTObject)this).NativeObject).ThisPtr : _inner.ThisPtr;

        private readonly IObjectReference _inner = null;



        private IObjectReference _objRef_global__Microsoft_UI_Composition_SystemBackdrops_IDesktopAcrylicController => _inner;
        private volatile IObjectReference ___objRef_global__Microsoft_UI_Composition_SystemBackdrops_IDesktopAcrylicController2;
        private IObjectReference Make___objRef_global__Microsoft_UI_Composition_SystemBackdrops_IDesktopAcrylicController2()
        {
            global::System.Threading.Interlocked.CompareExchange(ref ___objRef_global__Microsoft_UI_Composition_SystemBackdrops_IDesktopAcrylicController2, ((IWinRTObject)this).NativeObject.As<IUnknownVftbl>(global::ABI.Microsoft.UI.Composition.SystemBackdrops.IDesktopAcrylicController2Methods.IID), null);
            return ___objRef_global__Microsoft_UI_Composition_SystemBackdrops_IDesktopAcrylicController2;
        }
        private IObjectReference _objRef_global__Microsoft_UI_Composition_SystemBackdrops_IDesktopAcrylicController2 => ___objRef_global__Microsoft_UI_Composition_SystemBackdrops_IDesktopAcrylicController2 ?? Make___objRef_global__Microsoft_UI_Composition_SystemBackdrops_IDesktopAcrylicController2();

        private volatile IObjectReference ___objRef_global__Microsoft_UI_Composition_SystemBackdrops_IDesktopAcrylicController3;
        private IObjectReference Make___objRef_global__Microsoft_UI_Composition_SystemBackdrops_IDesktopAcrylicController3()
        {
            global::System.Threading.Interlocked.CompareExchange(ref ___objRef_global__Microsoft_UI_Composition_SystemBackdrops_IDesktopAcrylicController3, ((IWinRTObject)this).NativeObject.As<IUnknownVftbl>(global::ABI.Microsoft.UI.Composition.SystemBackdrops.IDesktopAcrylicController3Methods.IID), null);
            return ___objRef_global__Microsoft_UI_Composition_SystemBackdrops_IDesktopAcrylicController3;
        }
        private IObjectReference _objRef_global__Microsoft_UI_Composition_SystemBackdrops_IDesktopAcrylicController3 => ___objRef_global__Microsoft_UI_Composition_SystemBackdrops_IDesktopAcrylicController3 ?? Make___objRef_global__Microsoft_UI_Composition_SystemBackdrops_IDesktopAcrylicController3();

        private volatile IObjectReference ___objRef_global__Microsoft_UI_Composition_SystemBackdrops_ISystemBackdropController;
        private IObjectReference Make___objRef_global__Microsoft_UI_Composition_SystemBackdrops_ISystemBackdropController()
        {
            global::System.Threading.Interlocked.CompareExchange(ref ___objRef_global__Microsoft_UI_Composition_SystemBackdrops_ISystemBackdropController, ((IWinRTObject)this).NativeObject.As<IUnknownVftbl>(global::ABI.Microsoft.UI.Composition.SystemBackdrops.ISystemBackdropControllerMethods.IID), null);
            return ___objRef_global__Microsoft_UI_Composition_SystemBackdrops_ISystemBackdropController;
        }
        private IObjectReference _objRef_global__Microsoft_UI_Composition_SystemBackdrops_ISystemBackdropController => ___objRef_global__Microsoft_UI_Composition_SystemBackdrops_ISystemBackdropController ?? Make___objRef_global__Microsoft_UI_Composition_SystemBackdrops_ISystemBackdropController();

        private volatile IObjectReference ___objRef_global__System_IDisposable;
        private IObjectReference Make___objRef_global__System_IDisposable()
        {
            global::System.Threading.Interlocked.CompareExchange(ref ___objRef_global__System_IDisposable, ((IWinRTObject)this).NativeObject.As<IUnknownVftbl>(global::ABI.System.IDisposableMethods.IID), null);
            return ___objRef_global__System_IDisposable;
        }
        private IObjectReference _objRef_global__System_IDisposable => ___objRef_global__System_IDisposable ?? Make___objRef_global__System_IDisposable();

        private volatile IObjectReference ___objRef_global__Microsoft_UI_Composition_SystemBackdrops_ISystemBackdropControllerWithTargets;
        private IObjectReference Make___objRef_global__Microsoft_UI_Composition_SystemBackdrops_ISystemBackdropControllerWithTargets()
        {
            global::System.Threading.Interlocked.CompareExchange(ref ___objRef_global__Microsoft_UI_Composition_SystemBackdrops_ISystemBackdropControllerWithTargets, ((IWinRTObject)this).NativeObject.As<IUnknownVftbl>(global::ABI.Microsoft.UI.Composition.SystemBackdrops.ISystemBackdropControllerWithTargetsMethods.IID), null);
            return ___objRef_global__Microsoft_UI_Composition_SystemBackdrops_ISystemBackdropControllerWithTargets;
        }
        private IObjectReference _objRef_global__Microsoft_UI_Composition_SystemBackdrops_ISystemBackdropControllerWithTargets => ___objRef_global__Microsoft_UI_Composition_SystemBackdrops_ISystemBackdropControllerWithTargets ?? Make___objRef_global__Microsoft_UI_Composition_SystemBackdrops_ISystemBackdropControllerWithTargets();

        private volatile IObjectReference ___objRef_global__Microsoft_UI_IClosableNotifier;
        private IObjectReference Make___objRef_global__Microsoft_UI_IClosableNotifier()
        {
            global::System.Threading.Interlocked.CompareExchange(ref ___objRef_global__Microsoft_UI_IClosableNotifier, ((IWinRTObject)this).NativeObject.As<IUnknownVftbl>(global::ABI.Microsoft.UI.IClosableNotifierMethods.IID), null);
            return ___objRef_global__Microsoft_UI_IClosableNotifier;
        }
        private IObjectReference _objRef_global__Microsoft_UI_IClosableNotifier => ___objRef_global__Microsoft_UI_IClosableNotifier ?? Make___objRef_global__Microsoft_UI_IClosableNotifier();



        private static volatile IObjectReference ___objRef_global__Microsoft_UI_Composition_SystemBackdrops_DesktopAcrylicController;
        private static IObjectReference _objRef_global__Microsoft_UI_Composition_SystemBackdrops_DesktopAcrylicController
        {
            get
            { 
                var factory = ___objRef_global__Microsoft_UI_Composition_SystemBackdrops_DesktopAcrylicController;
                if (factory != null && factory.IsInCurrentContext)
                {
                    return factory;
                }
                else
                {
                    return ___objRef_global__Microsoft_UI_Composition_SystemBackdrops_DesktopAcrylicController = ActivationFactory.Get("Microsoft.UI.Composition.SystemBackdrops.DesktopAcrylicController");
                }
            }
        }

        public DesktopAcrylicController() 
        {
            _inner = global::ABI.WinRT.Interop.IActivationFactoryMethods.ActivateInstanceUnsafe(_objRef_global__Microsoft_UI_Composition_SystemBackdrops_DesktopAcrylicController, global::ABI.Microsoft.UI.Composition.SystemBackdrops.IDesktopAcrylicControllerMethods.IID);
            ComWrappersSupport.RegisterObjectForInterface(this, ThisPtr);
            ComWrappersHelper.Init(_inner, false);

        }

        public static I As<I>() => ActivationFactory.Get("Microsoft.UI.Composition.SystemBackdrops.DesktopAcrylicController").AsInterface<I>();

        private static volatile IObjectReference ___objRef_global__Microsoft_UI_Composition_SystemBackdrops_IDesktopAcrylicControllerStatics;
        private static IObjectReference _objRef_global__Microsoft_UI_Composition_SystemBackdrops_IDesktopAcrylicControllerStatics
        {
            get
            { 
                var factory = ___objRef_global__Microsoft_UI_Composition_SystemBackdrops_IDesktopAcrylicControllerStatics;
                if (factory != null && factory.IsInCurrentContext)
                {
                    return factory;
                }
                else
                {
                    return ___objRef_global__Microsoft_UI_Composition_SystemBackdrops_IDesktopAcrylicControllerStatics = ActivationFactory.Get("Microsoft.UI.Composition.SystemBackdrops.DesktopAcrylicController", global::ABI.Microsoft.UI.Composition.SystemBackdrops.IDesktopAcrylicControllerStaticsMethods.IID);
                }
            }
        }

        public static bool IsSupported() => global::ABI.Microsoft.UI.Composition.SystemBackdrops.IDesktopAcrylicControllerStaticsMethods.IsSupported(_objRef_global__Microsoft_UI_Composition_SystemBackdrops_IDesktopAcrylicControllerStatics);

        public static DesktopAcrylicController FromAbi(IntPtr thisPtr)
        {
            if (thisPtr == IntPtr.Zero) return null;
            return MarshalInspectable<DesktopAcrylicController>.FromAbi(thisPtr);
        }

        internal DesktopAcrylicController(IObjectReference objRef)
        {
            _inner = objRef.As(global::ABI.Microsoft.UI.Composition.SystemBackdrops.IDesktopAcrylicControllerMethods.IID);

        }


        public static bool operator ==(DesktopAcrylicController x, DesktopAcrylicController y) => (x?.ThisPtr ?? IntPtr.Zero) == (y?.ThisPtr ?? IntPtr.Zero);
        public static bool operator !=(DesktopAcrylicController x, DesktopAcrylicController y) => !(x == y);
        public bool Equals(DesktopAcrylicController other) => this == other;
        public override bool Equals(object obj) => obj is DesktopAcrylicController that && this == that;
        public override int GetHashCode() => ThisPtr.GetHashCode();


        bool IWinRTObject.HasUnwrappableNativeObject => true;
        IObjectReference IWinRTObject.NativeObject => _inner;
        private volatile global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> _queryInterfaceCache;
        private global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> MakeQueryInterfaceCache()
        {
            global::System.Threading.Interlocked.CompareExchange(ref _queryInterfaceCache, new global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference>(), null); 
            return _queryInterfaceCache;
        }
        global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> IWinRTObject.QueryInterfaceCache => _queryInterfaceCache ?? MakeQueryInterfaceCache();
        private volatile global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> _additionalTypeData;
        private global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> MakeAdditionalTypeData()
        {
            global::System.Threading.Interlocked.CompareExchange(ref _additionalTypeData, new global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object>(), null); 
            return _additionalTypeData;
        }
        global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> IWinRTObject.AdditionalTypeData => _additionalTypeData ?? MakeAdditionalTypeData();

        private struct InterfaceTag<I>{};


        public void ResetProperties() => global::ABI.Microsoft.UI.Composition.SystemBackdrops.IDesktopAcrylicController2Methods.ResetProperties(_objRef_global__Microsoft_UI_Composition_SystemBackdrops_IDesktopAcrylicController2);

        public bool SetTarget(global::Microsoft.UI.WindowId windowId, global::Windows.UI.Composition.CompositionTarget desktopWindowTarget) => global::ABI.Microsoft.UI.Composition.SystemBackdrops.ISystemBackdropControllerMethods.SetTarget(_objRef_global__Microsoft_UI_Composition_SystemBackdrops_ISystemBackdropController, windowId, desktopWindowTarget);

        public bool SetTarget(global::Windows.UI.Core.CoreWindow coreWindow, global::Windows.UI.Composition.CompositionTarget compositionTarget) => global::ABI.Microsoft.UI.Composition.SystemBackdrops.ISystemBackdropControllerMethods.SetTarget(_objRef_global__Microsoft_UI_Composition_SystemBackdrops_ISystemBackdropController, coreWindow, compositionTarget);

        public void Dispose() => global::ABI.System.IDisposableMethods.Dispose(_objRef_global__System_IDisposable);

        public bool AddSystemBackdropTarget(global::Microsoft.UI.Composition.ICompositionSupportsSystemBackdrop systemBackdropTarget) => global::ABI.Microsoft.UI.Composition.SystemBackdrops.ISystemBackdropControllerWithTargetsMethods.AddSystemBackdropTarget(_objRef_global__Microsoft_UI_Composition_SystemBackdrops_ISystemBackdropControllerWithTargets, systemBackdropTarget);

        public void RemoveAllSystemBackdropTargets() => global::ABI.Microsoft.UI.Composition.SystemBackdrops.ISystemBackdropControllerWithTargetsMethods.RemoveAllSystemBackdropTargets(_objRef_global__Microsoft_UI_Composition_SystemBackdrops_ISystemBackdropControllerWithTargets);

        public bool RemoveSystemBackdropTarget(global::Microsoft.UI.Composition.ICompositionSupportsSystemBackdrop systemBackdropTarget) => global::ABI.Microsoft.UI.Composition.SystemBackdrops.ISystemBackdropControllerWithTargetsMethods.RemoveSystemBackdropTarget(_objRef_global__Microsoft_UI_Composition_SystemBackdrops_ISystemBackdropControllerWithTargets, systemBackdropTarget);

        public void SetSystemBackdropConfiguration(SystemBackdropConfiguration configuration) => global::ABI.Microsoft.UI.Composition.SystemBackdrops.ISystemBackdropControllerWithTargetsMethods.SetSystemBackdropConfiguration(_objRef_global__Microsoft_UI_Composition_SystemBackdrops_ISystemBackdropControllerWithTargets, configuration);

        public event global::Windows.Foundation.TypedEventHandler<ISystemBackdropControllerWithTargets, object> StateChanged
        {
            add => global::ABI.Microsoft.UI.Composition.SystemBackdrops.ISystemBackdropControllerWithTargetsMethods.Get_StateChanged2(_objRef_global__Microsoft_UI_Composition_SystemBackdrops_ISystemBackdropControllerWithTargets, (IWinRTObject)this).Subscribe(value);
            remove => global::ABI.Microsoft.UI.Composition.SystemBackdrops.ISystemBackdropControllerWithTargetsMethods.Get_StateChanged2(_objRef_global__Microsoft_UI_Composition_SystemBackdrops_ISystemBackdropControllerWithTargets, (IWinRTObject)this).Unsubscribe(value);
        }

        public event global::Microsoft.UI.ClosableNotifierHandler Closed
        {
            add => global::ABI.Microsoft.UI.IClosableNotifierMethods.Get_Closed2(_objRef_global__Microsoft_UI_IClosableNotifier, (IWinRTObject)this).Subscribe(value);
            remove => global::ABI.Microsoft.UI.IClosableNotifierMethods.Get_Closed2(_objRef_global__Microsoft_UI_IClosableNotifier, (IWinRTObject)this).Unsubscribe(value);
        }

        public event global::Microsoft.UI.ClosableNotifierHandler FrameworkClosed
        {
            add => global::ABI.Microsoft.UI.IClosableNotifierMethods.Get_FrameworkClosed2(_objRef_global__Microsoft_UI_IClosableNotifier, (IWinRTObject)this).Subscribe(value);
            remove => global::ABI.Microsoft.UI.IClosableNotifierMethods.Get_FrameworkClosed2(_objRef_global__Microsoft_UI_IClosableNotifier, (IWinRTObject)this).Unsubscribe(value);
        }

        public global::Windows.UI.Color FallbackColor
        {
            get => global::ABI.Microsoft.UI.Composition.SystemBackdrops.IDesktopAcrylicControllerMethods.get_FallbackColor(_objRef_global__Microsoft_UI_Composition_SystemBackdrops_IDesktopAcrylicController);
            set => global::ABI.Microsoft.UI.Composition.SystemBackdrops.IDesktopAcrylicControllerMethods.set_FallbackColor(_objRef_global__Microsoft_UI_Composition_SystemBackdrops_IDesktopAcrylicController, value);
        }

        public bool IsClosed => global::ABI.Microsoft.UI.IClosableNotifierMethods.get_IsClosed(_objRef_global__Microsoft_UI_IClosableNotifier);

        public DesktopAcrylicKind Kind
        {
            get => global::ABI.Microsoft.UI.Composition.SystemBackdrops.IDesktopAcrylicController3Methods.get_Kind(_objRef_global__Microsoft_UI_Composition_SystemBackdrops_IDesktopAcrylicController3);
            set => global::ABI.Microsoft.UI.Composition.SystemBackdrops.IDesktopAcrylicController3Methods.set_Kind(_objRef_global__Microsoft_UI_Composition_SystemBackdrops_IDesktopAcrylicController3, value);
        }

        public float LuminosityOpacity
        {
            get => global::ABI.Microsoft.UI.Composition.SystemBackdrops.IDesktopAcrylicControllerMethods.get_LuminosityOpacity(_objRef_global__Microsoft_UI_Composition_SystemBackdrops_IDesktopAcrylicController);
            set => global::ABI.Microsoft.UI.Composition.SystemBackdrops.IDesktopAcrylicControllerMethods.set_LuminosityOpacity(_objRef_global__Microsoft_UI_Composition_SystemBackdrops_IDesktopAcrylicController, value);
        }

        public SystemBackdropState State => global::ABI.Microsoft.UI.Composition.SystemBackdrops.ISystemBackdropControllerWithTargetsMethods.get_State(_objRef_global__Microsoft_UI_Composition_SystemBackdrops_ISystemBackdropControllerWithTargets);

        public global::Windows.UI.Color TintColor
        {
            get => global::ABI.Microsoft.UI.Composition.SystemBackdrops.IDesktopAcrylicControllerMethods.get_TintColor(_objRef_global__Microsoft_UI_Composition_SystemBackdrops_IDesktopAcrylicController);
            set => global::ABI.Microsoft.UI.Composition.SystemBackdrops.IDesktopAcrylicControllerMethods.set_TintColor(_objRef_global__Microsoft_UI_Composition_SystemBackdrops_IDesktopAcrylicController, value);
        }

        public float TintOpacity
        {
            get => global::ABI.Microsoft.UI.Composition.SystemBackdrops.IDesktopAcrylicControllerMethods.get_TintOpacity(_objRef_global__Microsoft_UI_Composition_SystemBackdrops_IDesktopAcrylicController);
            set => global::ABI.Microsoft.UI.Composition.SystemBackdrops.IDesktopAcrylicControllerMethods.set_TintOpacity(_objRef_global__Microsoft_UI_Composition_SystemBackdrops_IDesktopAcrylicController, value);
        }

        private bool IsOverridableInterface(Guid iid) => false;

        global::System.Runtime.InteropServices.CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(ref Guid iid, out IntPtr ppv)
        {
            ppv = IntPtr.Zero;
            if (IsOverridableInterface(iid) || global::WinRT.Interop.IID.IID_IInspectable == iid)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
            }

            if (((IWinRTObject)this).NativeObject.TryAs(iid, out ppv) >= 0)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.Handled;
            }

            return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
        }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI")][global::WinRT.WinRTExposedType(typeof(global::WinRT.EnumTypeDetails<DesktopAcrylicKind>))][global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.Foundation.WindowsAppSDKContract), 65540u)]
    public enum DesktopAcrylicKind : int
    {
        Default = unchecked((int)0),
        Base = unchecked((int)0x1),
        Thin = unchecked((int)0x2),
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI")][Guid("7C20A6AF-8EB3-5F08-BDFC-6D35E35DFE45")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Composition.SystemBackdrops.IDesktopAcrylicController))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.Foundation.WindowsAppSDKContract), 65536u)]
    internal interface IDesktopAcrylicController
    {
        global::Windows.UI.Color FallbackColor { get; set; }
        float LuminosityOpacity { get; set; }
        global::Windows.UI.Color TintColor { get; set; }
        float TintOpacity { get; set; }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI")][Guid("88E0A368-DFC7-5971-A50B-40DF5AA5F5C2")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Composition.SystemBackdrops.IDesktopAcrylicController2))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.Foundation.WindowsAppSDKContract), 65537u)]
    internal interface IDesktopAcrylicController2
    {
        void ResetProperties();
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI")][Guid("30D917E6-02D3-59CA-B440-BF9D2E7CC140")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Composition.SystemBackdrops.IDesktopAcrylicController3))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.Foundation.WindowsAppSDKContract), 65540u)]
    internal interface IDesktopAcrylicController3
    {
        DesktopAcrylicKind Kind { get; set; }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI")][Guid("A9E8F790-79EF-5416-9B67-6BCFE867C8B7")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Composition.SystemBackdrops.IDesktopAcrylicControllerStatics))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.Foundation.WindowsAppSDKContract), 65536u)]
    internal interface IDesktopAcrylicControllerStatics
    {
        bool IsSupported();
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI")][Guid("2DE996A9-0A2A-5889-A89C-1F84060A8CAB")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Composition.SystemBackdrops.IMicaController))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.Foundation.WindowsAppSDKContract), 65536u)]
    internal interface IMicaController
    {
        global::Windows.UI.Color FallbackColor { get; set; }
        float LuminosityOpacity { get; set; }
        global::Windows.UI.Color TintColor { get; set; }
        float TintOpacity { get; set; }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI")][Guid("F1ED4A52-D9CA-506E-9586-CAAEFD3AA971")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Composition.SystemBackdrops.IMicaController2))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.Foundation.WindowsAppSDKContract), 65537u)]
    internal interface IMicaController2
    {
        void ResetProperties();
        MicaKind Kind { get; set; }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI")][Guid("7D85D834-D514-5250-B7C4-0B7850D1EFDC")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Composition.SystemBackdrops.IMicaControllerStatics))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.Foundation.WindowsAppSDKContract), 65536u)]
    internal interface IMicaControllerStatics
    {
        bool IsSupported();
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI")][Guid("EBCCE1B9-0E0C-5431-AB0E-00F3F0669962")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Composition.SystemBackdrops.ISystemBackdropConfiguration))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.Foundation.WindowsAppSDKContract), 65537u)]
    internal interface ISystemBackdropConfiguration
    {
        global::System.Nullable<global::Windows.UI.Color> HighContrastBackgroundColor { get; set; }
        bool IsHighContrast { get; set; }
        bool IsInputActive { get; set; }
        SystemBackdropTheme Theme { get; set; }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI")][Guid("5632D76C-0B74-5B52-AA33-80262068AEB2")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Composition.SystemBackdrops.ISystemBackdropController))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.Foundation.WindowsAppSDKContract), 65536u)]
    public interface ISystemBackdropController : global::System.IDisposable
    {
        [global::Windows.Foundation.Metadata.DefaultOverload]
        [global::Windows.Foundation.Metadata.Overload(@"SetTargetWithWindowId")]
        bool SetTarget(global::Microsoft.UI.WindowId windowId, global::Windows.UI.Composition.CompositionTarget desktopWindowTarget);
        [global::Windows.Foundation.Metadata.Overload(@"SetTargetWithCoreWindow")]
        bool SetTarget(global::Windows.UI.Core.CoreWindow coreWindow, global::Windows.UI.Composition.CompositionTarget compositionTarget);
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI")][Guid("9C56FE7C-98EB-5F89-AD97-DAD57FC30C8C")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Composition.SystemBackdrops.ISystemBackdropControllerWithTargets))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.Foundation.WindowsAppSDKContract), 65537u)]
    public interface ISystemBackdropControllerWithTargets : ISystemBackdropController, global::System.IDisposable
    {
        bool AddSystemBackdropTarget(global::Microsoft.UI.Composition.ICompositionSupportsSystemBackdrop systemBackdropTarget);
        void RemoveAllSystemBackdropTargets();
        bool RemoveSystemBackdropTarget(global::Microsoft.UI.Composition.ICompositionSupportsSystemBackdrop systemBackdropTarget);
        void SetSystemBackdropConfiguration(SystemBackdropConfiguration configuration);
        SystemBackdropState State { get; }
        event global::Windows.Foundation.TypedEventHandler<ISystemBackdropControllerWithTargets, object> StateChanged;
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI")]
    [global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Composition.SystemBackdrops.MicaController))]
    [global::ABI.Microsoft.UI.Composition.SystemBackdrops.MicaControllerRcwFactory]
    [global::WinRT.ProjectedRuntimeClass(typeof(IMicaController))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.Foundation.WindowsAppSDKContract), 65536u)]
    public sealed class MicaController : ISystemBackdropController, global::System.IDisposable, ISystemBackdropControllerWithTargets, global::Microsoft.UI.IClosableNotifier, global::System.Runtime.InteropServices.ICustomQueryInterface, IWinRTObject, IEquatable<MicaController>
    {
        private IntPtr ThisPtr => _inner == null ? (((IWinRTObject)this).NativeObject).ThisPtr : _inner.ThisPtr;

        private readonly IObjectReference _inner = null;



        private IObjectReference _objRef_global__Microsoft_UI_Composition_SystemBackdrops_IMicaController => _inner;
        private volatile IObjectReference ___objRef_global__Microsoft_UI_Composition_SystemBackdrops_IMicaController2;
        private IObjectReference Make___objRef_global__Microsoft_UI_Composition_SystemBackdrops_IMicaController2()
        {
            global::System.Threading.Interlocked.CompareExchange(ref ___objRef_global__Microsoft_UI_Composition_SystemBackdrops_IMicaController2, ((IWinRTObject)this).NativeObject.As<IUnknownVftbl>(global::ABI.Microsoft.UI.Composition.SystemBackdrops.IMicaController2Methods.IID), null);
            return ___objRef_global__Microsoft_UI_Composition_SystemBackdrops_IMicaController2;
        }
        private IObjectReference _objRef_global__Microsoft_UI_Composition_SystemBackdrops_IMicaController2 => ___objRef_global__Microsoft_UI_Composition_SystemBackdrops_IMicaController2 ?? Make___objRef_global__Microsoft_UI_Composition_SystemBackdrops_IMicaController2();

        private volatile IObjectReference ___objRef_global__Microsoft_UI_Composition_SystemBackdrops_ISystemBackdropController;
        private IObjectReference Make___objRef_global__Microsoft_UI_Composition_SystemBackdrops_ISystemBackdropController()
        {
            global::System.Threading.Interlocked.CompareExchange(ref ___objRef_global__Microsoft_UI_Composition_SystemBackdrops_ISystemBackdropController, ((IWinRTObject)this).NativeObject.As<IUnknownVftbl>(global::ABI.Microsoft.UI.Composition.SystemBackdrops.ISystemBackdropControllerMethods.IID), null);
            return ___objRef_global__Microsoft_UI_Composition_SystemBackdrops_ISystemBackdropController;
        }
        private IObjectReference _objRef_global__Microsoft_UI_Composition_SystemBackdrops_ISystemBackdropController => ___objRef_global__Microsoft_UI_Composition_SystemBackdrops_ISystemBackdropController ?? Make___objRef_global__Microsoft_UI_Composition_SystemBackdrops_ISystemBackdropController();

        private volatile IObjectReference ___objRef_global__System_IDisposable;
        private IObjectReference Make___objRef_global__System_IDisposable()
        {
            global::System.Threading.Interlocked.CompareExchange(ref ___objRef_global__System_IDisposable, ((IWinRTObject)this).NativeObject.As<IUnknownVftbl>(global::ABI.System.IDisposableMethods.IID), null);
            return ___objRef_global__System_IDisposable;
        }
        private IObjectReference _objRef_global__System_IDisposable => ___objRef_global__System_IDisposable ?? Make___objRef_global__System_IDisposable();

        private volatile IObjectReference ___objRef_global__Microsoft_UI_Composition_SystemBackdrops_ISystemBackdropControllerWithTargets;
        private IObjectReference Make___objRef_global__Microsoft_UI_Composition_SystemBackdrops_ISystemBackdropControllerWithTargets()
        {
            global::System.Threading.Interlocked.CompareExchange(ref ___objRef_global__Microsoft_UI_Composition_SystemBackdrops_ISystemBackdropControllerWithTargets, ((IWinRTObject)this).NativeObject.As<IUnknownVftbl>(global::ABI.Microsoft.UI.Composition.SystemBackdrops.ISystemBackdropControllerWithTargetsMethods.IID), null);
            return ___objRef_global__Microsoft_UI_Composition_SystemBackdrops_ISystemBackdropControllerWithTargets;
        }
        private IObjectReference _objRef_global__Microsoft_UI_Composition_SystemBackdrops_ISystemBackdropControllerWithTargets => ___objRef_global__Microsoft_UI_Composition_SystemBackdrops_ISystemBackdropControllerWithTargets ?? Make___objRef_global__Microsoft_UI_Composition_SystemBackdrops_ISystemBackdropControllerWithTargets();

        private volatile IObjectReference ___objRef_global__Microsoft_UI_IClosableNotifier;
        private IObjectReference Make___objRef_global__Microsoft_UI_IClosableNotifier()
        {
            global::System.Threading.Interlocked.CompareExchange(ref ___objRef_global__Microsoft_UI_IClosableNotifier, ((IWinRTObject)this).NativeObject.As<IUnknownVftbl>(global::ABI.Microsoft.UI.IClosableNotifierMethods.IID), null);
            return ___objRef_global__Microsoft_UI_IClosableNotifier;
        }
        private IObjectReference _objRef_global__Microsoft_UI_IClosableNotifier => ___objRef_global__Microsoft_UI_IClosableNotifier ?? Make___objRef_global__Microsoft_UI_IClosableNotifier();



        private static volatile IObjectReference ___objRef_global__Microsoft_UI_Composition_SystemBackdrops_MicaController;
        private static IObjectReference _objRef_global__Microsoft_UI_Composition_SystemBackdrops_MicaController
        {
            get
            { 
                var factory = ___objRef_global__Microsoft_UI_Composition_SystemBackdrops_MicaController;
                if (factory != null && factory.IsInCurrentContext)
                {
                    return factory;
                }
                else
                {
                    return ___objRef_global__Microsoft_UI_Composition_SystemBackdrops_MicaController = ActivationFactory.Get("Microsoft.UI.Composition.SystemBackdrops.MicaController");
                }
            }
        }

        public MicaController() 
        {
            _inner = global::ABI.WinRT.Interop.IActivationFactoryMethods.ActivateInstanceUnsafe(_objRef_global__Microsoft_UI_Composition_SystemBackdrops_MicaController, global::ABI.Microsoft.UI.Composition.SystemBackdrops.IMicaControllerMethods.IID);
            ComWrappersSupport.RegisterObjectForInterface(this, ThisPtr);
            ComWrappersHelper.Init(_inner, false);

        }

        public static I As<I>() => ActivationFactory.Get("Microsoft.UI.Composition.SystemBackdrops.MicaController").AsInterface<I>();

        private static volatile IObjectReference ___objRef_global__Microsoft_UI_Composition_SystemBackdrops_IMicaControllerStatics;
        private static IObjectReference _objRef_global__Microsoft_UI_Composition_SystemBackdrops_IMicaControllerStatics
        {
            get
            { 
                var factory = ___objRef_global__Microsoft_UI_Composition_SystemBackdrops_IMicaControllerStatics;
                if (factory != null && factory.IsInCurrentContext)
                {
                    return factory;
                }
                else
                {
                    return ___objRef_global__Microsoft_UI_Composition_SystemBackdrops_IMicaControllerStatics = ActivationFactory.Get("Microsoft.UI.Composition.SystemBackdrops.MicaController", global::ABI.Microsoft.UI.Composition.SystemBackdrops.IMicaControllerStaticsMethods.IID);
                }
            }
        }

        public static bool IsSupported() => global::ABI.Microsoft.UI.Composition.SystemBackdrops.IMicaControllerStaticsMethods.IsSupported(_objRef_global__Microsoft_UI_Composition_SystemBackdrops_IMicaControllerStatics);

        public static MicaController FromAbi(IntPtr thisPtr)
        {
            if (thisPtr == IntPtr.Zero) return null;
            return MarshalInspectable<MicaController>.FromAbi(thisPtr);
        }

        internal MicaController(IObjectReference objRef)
        {
            _inner = objRef.As(global::ABI.Microsoft.UI.Composition.SystemBackdrops.IMicaControllerMethods.IID);

        }


        public static bool operator ==(MicaController x, MicaController y) => (x?.ThisPtr ?? IntPtr.Zero) == (y?.ThisPtr ?? IntPtr.Zero);
        public static bool operator !=(MicaController x, MicaController y) => !(x == y);
        public bool Equals(MicaController other) => this == other;
        public override bool Equals(object obj) => obj is MicaController that && this == that;
        public override int GetHashCode() => ThisPtr.GetHashCode();


        bool IWinRTObject.HasUnwrappableNativeObject => true;
        IObjectReference IWinRTObject.NativeObject => _inner;
        private volatile global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> _queryInterfaceCache;
        private global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> MakeQueryInterfaceCache()
        {
            global::System.Threading.Interlocked.CompareExchange(ref _queryInterfaceCache, new global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference>(), null); 
            return _queryInterfaceCache;
        }
        global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> IWinRTObject.QueryInterfaceCache => _queryInterfaceCache ?? MakeQueryInterfaceCache();
        private volatile global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> _additionalTypeData;
        private global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> MakeAdditionalTypeData()
        {
            global::System.Threading.Interlocked.CompareExchange(ref _additionalTypeData, new global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object>(), null); 
            return _additionalTypeData;
        }
        global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> IWinRTObject.AdditionalTypeData => _additionalTypeData ?? MakeAdditionalTypeData();

        private struct InterfaceTag<I>{};


        public void ResetProperties() => global::ABI.Microsoft.UI.Composition.SystemBackdrops.IMicaController2Methods.ResetProperties(_objRef_global__Microsoft_UI_Composition_SystemBackdrops_IMicaController2);

        public bool SetTarget(global::Microsoft.UI.WindowId windowId, global::Windows.UI.Composition.CompositionTarget desktopWindowTarget) => global::ABI.Microsoft.UI.Composition.SystemBackdrops.ISystemBackdropControllerMethods.SetTarget(_objRef_global__Microsoft_UI_Composition_SystemBackdrops_ISystemBackdropController, windowId, desktopWindowTarget);

        public bool SetTarget(global::Windows.UI.Core.CoreWindow coreWindow, global::Windows.UI.Composition.CompositionTarget compositionTarget) => global::ABI.Microsoft.UI.Composition.SystemBackdrops.ISystemBackdropControllerMethods.SetTarget(_objRef_global__Microsoft_UI_Composition_SystemBackdrops_ISystemBackdropController, coreWindow, compositionTarget);

        public void Dispose() => global::ABI.System.IDisposableMethods.Dispose(_objRef_global__System_IDisposable);

        public bool AddSystemBackdropTarget(global::Microsoft.UI.Composition.ICompositionSupportsSystemBackdrop systemBackdropTarget) => global::ABI.Microsoft.UI.Composition.SystemBackdrops.ISystemBackdropControllerWithTargetsMethods.AddSystemBackdropTarget(_objRef_global__Microsoft_UI_Composition_SystemBackdrops_ISystemBackdropControllerWithTargets, systemBackdropTarget);

        public void RemoveAllSystemBackdropTargets() => global::ABI.Microsoft.UI.Composition.SystemBackdrops.ISystemBackdropControllerWithTargetsMethods.RemoveAllSystemBackdropTargets(_objRef_global__Microsoft_UI_Composition_SystemBackdrops_ISystemBackdropControllerWithTargets);

        public bool RemoveSystemBackdropTarget(global::Microsoft.UI.Composition.ICompositionSupportsSystemBackdrop systemBackdropTarget) => global::ABI.Microsoft.UI.Composition.SystemBackdrops.ISystemBackdropControllerWithTargetsMethods.RemoveSystemBackdropTarget(_objRef_global__Microsoft_UI_Composition_SystemBackdrops_ISystemBackdropControllerWithTargets, systemBackdropTarget);

        public void SetSystemBackdropConfiguration(SystemBackdropConfiguration configuration) => global::ABI.Microsoft.UI.Composition.SystemBackdrops.ISystemBackdropControllerWithTargetsMethods.SetSystemBackdropConfiguration(_objRef_global__Microsoft_UI_Composition_SystemBackdrops_ISystemBackdropControllerWithTargets, configuration);

        public event global::Windows.Foundation.TypedEventHandler<ISystemBackdropControllerWithTargets, object> StateChanged
        {
            add => global::ABI.Microsoft.UI.Composition.SystemBackdrops.ISystemBackdropControllerWithTargetsMethods.Get_StateChanged2(_objRef_global__Microsoft_UI_Composition_SystemBackdrops_ISystemBackdropControllerWithTargets, (IWinRTObject)this).Subscribe(value);
            remove => global::ABI.Microsoft.UI.Composition.SystemBackdrops.ISystemBackdropControllerWithTargetsMethods.Get_StateChanged2(_objRef_global__Microsoft_UI_Composition_SystemBackdrops_ISystemBackdropControllerWithTargets, (IWinRTObject)this).Unsubscribe(value);
        }

        public event global::Microsoft.UI.ClosableNotifierHandler Closed
        {
            add => global::ABI.Microsoft.UI.IClosableNotifierMethods.Get_Closed2(_objRef_global__Microsoft_UI_IClosableNotifier, (IWinRTObject)this).Subscribe(value);
            remove => global::ABI.Microsoft.UI.IClosableNotifierMethods.Get_Closed2(_objRef_global__Microsoft_UI_IClosableNotifier, (IWinRTObject)this).Unsubscribe(value);
        }

        public event global::Microsoft.UI.ClosableNotifierHandler FrameworkClosed
        {
            add => global::ABI.Microsoft.UI.IClosableNotifierMethods.Get_FrameworkClosed2(_objRef_global__Microsoft_UI_IClosableNotifier, (IWinRTObject)this).Subscribe(value);
            remove => global::ABI.Microsoft.UI.IClosableNotifierMethods.Get_FrameworkClosed2(_objRef_global__Microsoft_UI_IClosableNotifier, (IWinRTObject)this).Unsubscribe(value);
        }

        public global::Windows.UI.Color FallbackColor
        {
            get => global::ABI.Microsoft.UI.Composition.SystemBackdrops.IMicaControllerMethods.get_FallbackColor(_objRef_global__Microsoft_UI_Composition_SystemBackdrops_IMicaController);
            set => global::ABI.Microsoft.UI.Composition.SystemBackdrops.IMicaControllerMethods.set_FallbackColor(_objRef_global__Microsoft_UI_Composition_SystemBackdrops_IMicaController, value);
        }

        public bool IsClosed => global::ABI.Microsoft.UI.IClosableNotifierMethods.get_IsClosed(_objRef_global__Microsoft_UI_IClosableNotifier);

        public MicaKind Kind
        {
            get => global::ABI.Microsoft.UI.Composition.SystemBackdrops.IMicaController2Methods.get_Kind(_objRef_global__Microsoft_UI_Composition_SystemBackdrops_IMicaController2);
            set => global::ABI.Microsoft.UI.Composition.SystemBackdrops.IMicaController2Methods.set_Kind(_objRef_global__Microsoft_UI_Composition_SystemBackdrops_IMicaController2, value);
        }

        public float LuminosityOpacity
        {
            get => global::ABI.Microsoft.UI.Composition.SystemBackdrops.IMicaControllerMethods.get_LuminosityOpacity(_objRef_global__Microsoft_UI_Composition_SystemBackdrops_IMicaController);
            set => global::ABI.Microsoft.UI.Composition.SystemBackdrops.IMicaControllerMethods.set_LuminosityOpacity(_objRef_global__Microsoft_UI_Composition_SystemBackdrops_IMicaController, value);
        }

        public SystemBackdropState State => global::ABI.Microsoft.UI.Composition.SystemBackdrops.ISystemBackdropControllerWithTargetsMethods.get_State(_objRef_global__Microsoft_UI_Composition_SystemBackdrops_ISystemBackdropControllerWithTargets);

        public global::Windows.UI.Color TintColor
        {
            get => global::ABI.Microsoft.UI.Composition.SystemBackdrops.IMicaControllerMethods.get_TintColor(_objRef_global__Microsoft_UI_Composition_SystemBackdrops_IMicaController);
            set => global::ABI.Microsoft.UI.Composition.SystemBackdrops.IMicaControllerMethods.set_TintColor(_objRef_global__Microsoft_UI_Composition_SystemBackdrops_IMicaController, value);
        }

        public float TintOpacity
        {
            get => global::ABI.Microsoft.UI.Composition.SystemBackdrops.IMicaControllerMethods.get_TintOpacity(_objRef_global__Microsoft_UI_Composition_SystemBackdrops_IMicaController);
            set => global::ABI.Microsoft.UI.Composition.SystemBackdrops.IMicaControllerMethods.set_TintOpacity(_objRef_global__Microsoft_UI_Composition_SystemBackdrops_IMicaController, value);
        }

        private bool IsOverridableInterface(Guid iid) => false;

        global::System.Runtime.InteropServices.CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(ref Guid iid, out IntPtr ppv)
        {
            ppv = IntPtr.Zero;
            if (IsOverridableInterface(iid) || global::WinRT.Interop.IID.IID_IInspectable == iid)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
            }

            if (((IWinRTObject)this).NativeObject.TryAs(iid, out ppv) >= 0)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.Handled;
            }

            return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
        }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI")][global::WinRT.WinRTExposedType(typeof(global::WinRT.EnumTypeDetails<MicaKind>))][global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.Foundation.WindowsAppSDKContract), 65537u)]
    public enum MicaKind : int
    {
        Base = unchecked((int)0),
        BaseAlt = unchecked((int)0x1),
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI")]
    [global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Composition.SystemBackdrops.SystemBackdropConfiguration))]
    [global::ABI.Microsoft.UI.Composition.SystemBackdrops.SystemBackdropConfigurationRcwFactory]
    [global::WinRT.ProjectedRuntimeClass(typeof(ISystemBackdropConfiguration))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.Foundation.WindowsAppSDKContract), 65537u)]
    public sealed class SystemBackdropConfiguration : global::System.Runtime.InteropServices.ICustomQueryInterface, IWinRTObject, IEquatable<SystemBackdropConfiguration>
    {
        private IntPtr ThisPtr => _inner == null ? (((IWinRTObject)this).NativeObject).ThisPtr : _inner.ThisPtr;

        private readonly IObjectReference _inner = null;



        private IObjectReference _objRef_global__Microsoft_UI_Composition_SystemBackdrops_ISystemBackdropConfiguration => _inner;


        private static volatile IObjectReference ___objRef_global__Microsoft_UI_Composition_SystemBackdrops_SystemBackdropConfiguration;
        private static IObjectReference _objRef_global__Microsoft_UI_Composition_SystemBackdrops_SystemBackdropConfiguration
        {
            get
            { 
                var factory = ___objRef_global__Microsoft_UI_Composition_SystemBackdrops_SystemBackdropConfiguration;
                if (factory != null && factory.IsInCurrentContext)
                {
                    return factory;
                }
                else
                {
                    return ___objRef_global__Microsoft_UI_Composition_SystemBackdrops_SystemBackdropConfiguration = ActivationFactory.Get("Microsoft.UI.Composition.SystemBackdrops.SystemBackdropConfiguration");
                }
            }
        }

        public SystemBackdropConfiguration() 
        {
            _inner = global::ABI.WinRT.Interop.IActivationFactoryMethods.ActivateInstanceUnsafe(_objRef_global__Microsoft_UI_Composition_SystemBackdrops_SystemBackdropConfiguration, global::ABI.Microsoft.UI.Composition.SystemBackdrops.ISystemBackdropConfigurationMethods.IID);
            ComWrappersSupport.RegisterObjectForInterface(this, ThisPtr);
            ComWrappersHelper.Init(_inner, false);

        }

        public static SystemBackdropConfiguration FromAbi(IntPtr thisPtr)
        {
            if (thisPtr == IntPtr.Zero) return null;
            return MarshalInspectable<SystemBackdropConfiguration>.FromAbi(thisPtr);
        }

        internal SystemBackdropConfiguration(IObjectReference objRef)
        {
            _inner = objRef.As(global::ABI.Microsoft.UI.Composition.SystemBackdrops.ISystemBackdropConfigurationMethods.IID);

        }


        public static bool operator ==(SystemBackdropConfiguration x, SystemBackdropConfiguration y) => (x?.ThisPtr ?? IntPtr.Zero) == (y?.ThisPtr ?? IntPtr.Zero);
        public static bool operator !=(SystemBackdropConfiguration x, SystemBackdropConfiguration y) => !(x == y);
        public bool Equals(SystemBackdropConfiguration other) => this == other;
        public override bool Equals(object obj) => obj is SystemBackdropConfiguration that && this == that;
        public override int GetHashCode() => ThisPtr.GetHashCode();


        bool IWinRTObject.HasUnwrappableNativeObject => true;
        IObjectReference IWinRTObject.NativeObject => _inner;
        private volatile global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> _queryInterfaceCache;
        private global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> MakeQueryInterfaceCache()
        {
            global::System.Threading.Interlocked.CompareExchange(ref _queryInterfaceCache, new global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference>(), null); 
            return _queryInterfaceCache;
        }
        global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> IWinRTObject.QueryInterfaceCache => _queryInterfaceCache ?? MakeQueryInterfaceCache();
        private volatile global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> _additionalTypeData;
        private global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> MakeAdditionalTypeData()
        {
            global::System.Threading.Interlocked.CompareExchange(ref _additionalTypeData, new global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object>(), null); 
            return _additionalTypeData;
        }
        global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> IWinRTObject.AdditionalTypeData => _additionalTypeData ?? MakeAdditionalTypeData();

        private struct InterfaceTag<I>{};


        public global::System.Nullable<global::Windows.UI.Color> HighContrastBackgroundColor
        {
            get => global::ABI.Microsoft.UI.Composition.SystemBackdrops.ISystemBackdropConfigurationMethods.get_HighContrastBackgroundColor(_objRef_global__Microsoft_UI_Composition_SystemBackdrops_ISystemBackdropConfiguration);
            set => global::ABI.Microsoft.UI.Composition.SystemBackdrops.ISystemBackdropConfigurationMethods.set_HighContrastBackgroundColor(_objRef_global__Microsoft_UI_Composition_SystemBackdrops_ISystemBackdropConfiguration, value);
        }

        public bool IsHighContrast
        {
            get => global::ABI.Microsoft.UI.Composition.SystemBackdrops.ISystemBackdropConfigurationMethods.get_IsHighContrast(_objRef_global__Microsoft_UI_Composition_SystemBackdrops_ISystemBackdropConfiguration);
            set => global::ABI.Microsoft.UI.Composition.SystemBackdrops.ISystemBackdropConfigurationMethods.set_IsHighContrast(_objRef_global__Microsoft_UI_Composition_SystemBackdrops_ISystemBackdropConfiguration, value);
        }

        public bool IsInputActive
        {
            get => global::ABI.Microsoft.UI.Composition.SystemBackdrops.ISystemBackdropConfigurationMethods.get_IsInputActive(_objRef_global__Microsoft_UI_Composition_SystemBackdrops_ISystemBackdropConfiguration);
            set => global::ABI.Microsoft.UI.Composition.SystemBackdrops.ISystemBackdropConfigurationMethods.set_IsInputActive(_objRef_global__Microsoft_UI_Composition_SystemBackdrops_ISystemBackdropConfiguration, value);
        }

        public SystemBackdropTheme Theme
        {
            get => global::ABI.Microsoft.UI.Composition.SystemBackdrops.ISystemBackdropConfigurationMethods.get_Theme(_objRef_global__Microsoft_UI_Composition_SystemBackdrops_ISystemBackdropConfiguration);
            set => global::ABI.Microsoft.UI.Composition.SystemBackdrops.ISystemBackdropConfigurationMethods.set_Theme(_objRef_global__Microsoft_UI_Composition_SystemBackdrops_ISystemBackdropConfiguration, value);
        }

        private bool IsOverridableInterface(Guid iid) => false;

        global::System.Runtime.InteropServices.CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(ref Guid iid, out IntPtr ppv)
        {
            ppv = IntPtr.Zero;
            if (IsOverridableInterface(iid) || global::WinRT.Interop.IID.IID_IInspectable == iid)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
            }

            if (((IWinRTObject)this).NativeObject.TryAs(iid, out ppv) >= 0)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.Handled;
            }

            return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
        }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI")][global::WinRT.WinRTExposedType(typeof(global::WinRT.EnumTypeDetails<SystemBackdropState>))][global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.Foundation.WindowsAppSDKContract), 65537u)]
    public enum SystemBackdropState : int
    {
        Active = unchecked((int)0),
        Fallback = unchecked((int)0x1),
        HighContrast = unchecked((int)0x2),
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI")][global::WinRT.WinRTExposedType(typeof(global::WinRT.EnumTypeDetails<SystemBackdropTheme>))][global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.Foundation.WindowsAppSDKContract), 65537u)]
    public enum SystemBackdropTheme : int
    {
        Default = unchecked((int)0),
        Light = unchecked((int)0x1),
        Dark = unchecked((int)0x2),
    }
}

#pragma warning disable CA1416
namespace ABI.Microsoft.UI.Composition.SystemBackdrops
{
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    public struct DesktopAcrylicController
    {

        public static IObjectReference CreateMarshaler(global::Microsoft.UI.Composition.SystemBackdrops.DesktopAcrylicController obj) => obj is null ? null : MarshalInspectable<global::Microsoft.UI.Composition.SystemBackdrops.DesktopAcrylicController>.CreateMarshaler<IUnknownVftbl>(obj, global::ABI.Microsoft.UI.Composition.SystemBackdrops.IDesktopAcrylicControllerMethods.IID);
        public static ObjectReferenceValue CreateMarshaler2(global::Microsoft.UI.Composition.SystemBackdrops.DesktopAcrylicController obj) => MarshalInspectable<object>.CreateMarshaler2(obj, global::ABI.Microsoft.UI.Composition.SystemBackdrops.IDesktopAcrylicControllerMethods.IID);
        public static IntPtr GetAbi(IObjectReference value) => value is null ? IntPtr.Zero : MarshalInterfaceHelper<object>.GetAbi(value);
        public static global::Microsoft.UI.Composition.SystemBackdrops.DesktopAcrylicController FromAbi(IntPtr thisPtr) => global::Microsoft.UI.Composition.SystemBackdrops.DesktopAcrylicController.FromAbi(thisPtr);
        public static IntPtr FromManaged(global::Microsoft.UI.Composition.SystemBackdrops.DesktopAcrylicController obj) => obj is null ? IntPtr.Zero : CreateMarshaler2(obj).Detach();
        public static unsafe MarshalInterfaceHelper<global::Microsoft.UI.Composition.SystemBackdrops.DesktopAcrylicController>.MarshalerArray CreateMarshalerArray(global::Microsoft.UI.Composition.SystemBackdrops.DesktopAcrylicController[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.SystemBackdrops.DesktopAcrylicController>.CreateMarshalerArray2(array, (o) => CreateMarshaler2(o));
        public static (int length, IntPtr data) GetAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.SystemBackdrops.DesktopAcrylicController>.GetAbiArray(box);
        public static unsafe global::Microsoft.UI.Composition.SystemBackdrops.DesktopAcrylicController[] FromAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.SystemBackdrops.DesktopAcrylicController>.FromAbiArray(box, FromAbi);
        public static void CopyAbiArray(global::Microsoft.UI.Composition.SystemBackdrops.DesktopAcrylicController[] array, object box) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.SystemBackdrops.DesktopAcrylicController>.CopyAbiArray(array, box, FromAbi);
        public static (int length, IntPtr data) FromManagedArray(global::Microsoft.UI.Composition.SystemBackdrops.DesktopAcrylicController[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.SystemBackdrops.DesktopAcrylicController>.FromManagedArray(array, (o) => FromManaged(o));
        public static void DisposeMarshaler(IObjectReference value) => MarshalInspectable<object>.DisposeMarshaler(value);
        public static void DisposeMarshalerArray(MarshalInterfaceHelper<global::Microsoft.UI.Composition.SystemBackdrops.DesktopAcrylicController>.MarshalerArray array) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.SystemBackdrops.DesktopAcrylicController>.DisposeMarshalerArray(array);
        public static void DisposeAbi(IntPtr abi) => MarshalInspectable<object>.DisposeAbi(abi);
        public static unsafe void DisposeAbiArray(object box) => MarshalInspectable<object>.DisposeAbiArray(box);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    internal sealed class DesktopAcrylicControllerRcwFactoryAttribute : global::WinRT.WinRTImplementationTypeRcwFactoryAttribute
    {
        public override object CreateInstance(global::WinRT.IInspectable inspectable)
            => new global::Microsoft.UI.Composition.SystemBackdrops.DesktopAcrylicController(inspectable.ObjRef);
    }
    internal static class IDesktopAcrylicControllerMethods
    {

        internal static unsafe global::Windows.UI.Color get_FallbackColor(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::Windows.UI.Color __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::Windows.UI.Color*, int>**)ThisPtr)[6](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }
        internal static unsafe void set_FallbackColor(IObjectReference _obj, global::Windows.UI.Color value)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::Windows.UI.Color, int>**)ThisPtr)[7](ThisPtr, value));
            global::System.GC.KeepAlive(_obj);
        }

        internal static unsafe float get_LuminosityOpacity(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            float __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, float*, int>**)ThisPtr)[8](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }
        internal static unsafe void set_LuminosityOpacity(IObjectReference _obj, float value)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, float, int>**)ThisPtr)[9](ThisPtr, value));
            global::System.GC.KeepAlive(_obj);
        }

        internal static unsafe global::Windows.UI.Color get_TintColor(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::Windows.UI.Color __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::Windows.UI.Color*, int>**)ThisPtr)[10](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }
        internal static unsafe void set_TintColor(IObjectReference _obj, global::Windows.UI.Color value)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::Windows.UI.Color, int>**)ThisPtr)[11](ThisPtr, value));
            global::System.GC.KeepAlive(_obj);
        }

        internal static unsafe float get_TintOpacity(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            float __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, float*, int>**)ThisPtr)[12](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }
        internal static unsafe void set_TintOpacity(IObjectReference _obj, float value)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, float, int>**)ThisPtr)[13](ThisPtr, value));
            global::System.GC.KeepAlive(_obj);
        }



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0xAF, 0xA6, 0x20, 0x7C, 0xB3, 0x8E, 0x8, 0x5F, 0xBD, 0xFC, 0x6D, 0x35, 0xE3, 0x5D, 0xFE, 0x45 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("7C20A6AF-8EB3-5F08-BDFC-6D35E35DFE45")]
    internal interface IDesktopAcrylicController : global::Microsoft.UI.Composition.SystemBackdrops.IDesktopAcrylicController
    {
    }
    internal static class IDesktopAcrylicController2Methods
    {


        internal static unsafe void ResetProperties(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, int>**)ThisPtr)[6](ThisPtr));
            global::System.GC.KeepAlive(_obj);
        }


        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0x68, 0xA3, 0xE0, 0x88, 0xC7, 0xDF, 0x71, 0x59, 0xA5, 0xB, 0x40, 0xDF, 0x5A, 0xA5, 0xF5, 0xC2 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("88E0A368-DFC7-5971-A50B-40DF5AA5F5C2")]
    internal interface IDesktopAcrylicController2 : global::Microsoft.UI.Composition.SystemBackdrops.IDesktopAcrylicController2
    {
    }
    internal static class IDesktopAcrylicController3Methods
    {

        internal static unsafe global::Microsoft.UI.Composition.SystemBackdrops.DesktopAcrylicKind get_Kind(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::Microsoft.UI.Composition.SystemBackdrops.DesktopAcrylicKind __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::Microsoft.UI.Composition.SystemBackdrops.DesktopAcrylicKind*, int>**)ThisPtr)[6](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }
        internal static unsafe void set_Kind(IObjectReference _obj, global::Microsoft.UI.Composition.SystemBackdrops.DesktopAcrylicKind value)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::Microsoft.UI.Composition.SystemBackdrops.DesktopAcrylicKind, int>**)ThisPtr)[7](ThisPtr, value));
            global::System.GC.KeepAlive(_obj);
        }



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0xE6, 0x17, 0xD9, 0x30, 0xD3, 0x2, 0xCA, 0x59, 0xB4, 0x40, 0xBF, 0x9D, 0x2E, 0x7C, 0xC1, 0x40 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("30D917E6-02D3-59CA-B440-BF9D2E7CC140")]
    internal interface IDesktopAcrylicController3 : global::Microsoft.UI.Composition.SystemBackdrops.IDesktopAcrylicController3
    {
    }
    internal static class IDesktopAcrylicControllerStaticsMethods
    {


        internal static unsafe bool IsSupported(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            byte __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, byte*, int>**)ThisPtr)[6](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval != 0;
        }


        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0x90, 0xF7, 0xE8, 0xA9, 0xEF, 0x79, 0x16, 0x54, 0x9B, 0x67, 0x6B, 0xCF, 0xE8, 0x67, 0xC8, 0xB7 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("A9E8F790-79EF-5416-9B67-6BCFE867C8B7")]
    internal interface IDesktopAcrylicControllerStatics : global::Microsoft.UI.Composition.SystemBackdrops.IDesktopAcrylicControllerStatics
    {
    }
    internal static class IMicaControllerMethods
    {

        internal static unsafe global::Windows.UI.Color get_FallbackColor(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::Windows.UI.Color __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::Windows.UI.Color*, int>**)ThisPtr)[6](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }
        internal static unsafe void set_FallbackColor(IObjectReference _obj, global::Windows.UI.Color value)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::Windows.UI.Color, int>**)ThisPtr)[7](ThisPtr, value));
            global::System.GC.KeepAlive(_obj);
        }

        internal static unsafe float get_LuminosityOpacity(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            float __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, float*, int>**)ThisPtr)[8](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }
        internal static unsafe void set_LuminosityOpacity(IObjectReference _obj, float value)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, float, int>**)ThisPtr)[9](ThisPtr, value));
            global::System.GC.KeepAlive(_obj);
        }

        internal static unsafe global::Windows.UI.Color get_TintColor(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::Windows.UI.Color __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::Windows.UI.Color*, int>**)ThisPtr)[10](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }
        internal static unsafe void set_TintColor(IObjectReference _obj, global::Windows.UI.Color value)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::Windows.UI.Color, int>**)ThisPtr)[11](ThisPtr, value));
            global::System.GC.KeepAlive(_obj);
        }

        internal static unsafe float get_TintOpacity(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            float __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, float*, int>**)ThisPtr)[12](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }
        internal static unsafe void set_TintOpacity(IObjectReference _obj, float value)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, float, int>**)ThisPtr)[13](ThisPtr, value));
            global::System.GC.KeepAlive(_obj);
        }



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0xA9, 0x96, 0xE9, 0x2D, 0x2A, 0xA, 0x89, 0x58, 0xA8, 0x9C, 0x1F, 0x84, 0x6, 0xA, 0x8C, 0xAB };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("2DE996A9-0A2A-5889-A89C-1F84060A8CAB")]
    internal interface IMicaController : global::Microsoft.UI.Composition.SystemBackdrops.IMicaController
    {
    }
    internal static class IMicaController2Methods
    {


        internal static unsafe void ResetProperties(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, int>**)ThisPtr)[8](ThisPtr));
            global::System.GC.KeepAlive(_obj);
        }
        internal static unsafe global::Microsoft.UI.Composition.SystemBackdrops.MicaKind get_Kind(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::Microsoft.UI.Composition.SystemBackdrops.MicaKind __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::Microsoft.UI.Composition.SystemBackdrops.MicaKind*, int>**)ThisPtr)[6](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }
        internal static unsafe void set_Kind(IObjectReference _obj, global::Microsoft.UI.Composition.SystemBackdrops.MicaKind value)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::Microsoft.UI.Composition.SystemBackdrops.MicaKind, int>**)ThisPtr)[7](ThisPtr, value));
            global::System.GC.KeepAlive(_obj);
        }



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0x52, 0x4A, 0xED, 0xF1, 0xCA, 0xD9, 0x6E, 0x50, 0x95, 0x86, 0xCA, 0xAE, 0xFD, 0x3A, 0xA9, 0x71 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("F1ED4A52-D9CA-506E-9586-CAAEFD3AA971")]
    internal interface IMicaController2 : global::Microsoft.UI.Composition.SystemBackdrops.IMicaController2
    {
    }
    internal static class IMicaControllerStaticsMethods
    {


        internal static unsafe bool IsSupported(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            byte __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, byte*, int>**)ThisPtr)[6](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval != 0;
        }


        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0x34, 0xD8, 0x85, 0x7D, 0x14, 0xD5, 0x50, 0x52, 0xB7, 0xC4, 0xB, 0x78, 0x50, 0xD1, 0xEF, 0xDC };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("7D85D834-D514-5250-B7C4-0B7850D1EFDC")]
    internal interface IMicaControllerStatics : global::Microsoft.UI.Composition.SystemBackdrops.IMicaControllerStatics
    {
    }
    internal static class ISystemBackdropConfigurationMethods
    {

        internal static unsafe global::System.Nullable<global::Windows.UI.Color> get_HighContrastBackgroundColor(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[6](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return MarshalInterface<global::System.Nullable<global::Windows.UI.Color>>.FromAbi(__retval);
            }
            finally
            {
                MarshalInterface<global::System.Nullable<global::Windows.UI.Color>>.DisposeAbi(__retval);
            }
        }
        internal static unsafe void set_HighContrastBackgroundColor(IObjectReference _obj, global::System.Nullable<global::Windows.UI.Color> value)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __value = default;
            try
            {
                __value = MarshalInterface<global::System.Nullable<global::Windows.UI.Color>>.CreateMarshaler2(value, global::ABI.System.Nullable<global::Windows.UI.Color>.PIID);
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, int>**)ThisPtr)[7](ThisPtr, MarshalInspectable<object>.GetAbi(__value)));
                global::System.GC.KeepAlive(_obj);
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__value);
            }
        }

        internal static unsafe bool get_IsHighContrast(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            byte __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, byte*, int>**)ThisPtr)[8](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval != 0;
        }
        internal static unsafe void set_IsHighContrast(IObjectReference _obj, bool value)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, byte, int>**)ThisPtr)[9](ThisPtr, (byte)(value ? 1 : 0)));
            global::System.GC.KeepAlive(_obj);
        }

        internal static unsafe bool get_IsInputActive(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            byte __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, byte*, int>**)ThisPtr)[10](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval != 0;
        }
        internal static unsafe void set_IsInputActive(IObjectReference _obj, bool value)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, byte, int>**)ThisPtr)[11](ThisPtr, (byte)(value ? 1 : 0)));
            global::System.GC.KeepAlive(_obj);
        }

        internal static unsafe global::Microsoft.UI.Composition.SystemBackdrops.SystemBackdropTheme get_Theme(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::Microsoft.UI.Composition.SystemBackdrops.SystemBackdropTheme __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::Microsoft.UI.Composition.SystemBackdrops.SystemBackdropTheme*, int>**)ThisPtr)[12](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }
        internal static unsafe void set_Theme(IObjectReference _obj, global::Microsoft.UI.Composition.SystemBackdrops.SystemBackdropTheme value)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::Microsoft.UI.Composition.SystemBackdrops.SystemBackdropTheme, int>**)ThisPtr)[13](ThisPtr, value));
            global::System.GC.KeepAlive(_obj);
        }



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0xB9, 0xE1, 0xCC, 0xEB, 0xC, 0xE, 0x31, 0x54, 0xAB, 0xE, 0x0, 0xF3, 0xF0, 0x66, 0x99, 0x62 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("EBCCE1B9-0E0C-5431-AB0E-00F3F0669962")]
    internal interface ISystemBackdropConfiguration : global::Microsoft.UI.Composition.SystemBackdrops.ISystemBackdropConfiguration
    {
    }
    public static class ISystemBackdropControllerMethods
    {


        public static unsafe bool SetTarget(IObjectReference _obj, global::Microsoft.UI.WindowId windowId, global::Windows.UI.Composition.CompositionTarget desktopWindowTarget)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __desktopWindowTarget = default;
            byte __retval = default;
            try
            {
                __desktopWindowTarget = global::ABI.Windows.UI.Composition.CompositionTarget.CreateMarshaler2(desktopWindowTarget);
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::Microsoft.UI.WindowId, IntPtr, byte*, int>**)ThisPtr)[6](ThisPtr, windowId, MarshalInspectable<object>.GetAbi(__desktopWindowTarget), &__retval));
                global::System.GC.KeepAlive(_obj);
                return __retval != 0;
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__desktopWindowTarget);
            }
        }

        public static unsafe bool SetTarget(IObjectReference _obj, global::Windows.UI.Core.CoreWindow coreWindow, global::Windows.UI.Composition.CompositionTarget compositionTarget)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __coreWindow = default;
            ObjectReferenceValue __compositionTarget = default;
            byte __retval = default;
            try
            {
                __coreWindow = global::ABI.Windows.UI.Core.CoreWindow.CreateMarshaler2(coreWindow);
                __compositionTarget = global::ABI.Windows.UI.Composition.CompositionTarget.CreateMarshaler2(compositionTarget);
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, IntPtr, byte*, int>**)ThisPtr)[7](ThisPtr, MarshalInspectable<object>.GetAbi(__coreWindow), MarshalInspectable<object>.GetAbi(__compositionTarget), &__retval));
                global::System.GC.KeepAlive(_obj);
                return __retval != 0;
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__coreWindow);
                MarshalInspectable<object>.DisposeMarshaler(__compositionTarget);
            }
        }


        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0x6C, 0xD7, 0x32, 0x56, 0x74, 0xB, 0x52, 0x5B, 0xAA, 0x33, 0x80, 0x26, 0x20, 0x68, 0xAE, 0xB2 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

        public static global::System.IntPtr AbiToProjectionVftablePtr => ISystemBackdropController.AbiToProjectionVftablePtr;

    }
    [DynamicInterfaceCastableImplementation]
    [Guid("5632D76C-0B74-5B52-AA33-80262068AEB2")]
    internal unsafe interface ISystemBackdropController : global::Microsoft.UI.Composition.SystemBackdrops.ISystemBackdropController
    {

        public static readonly IntPtr AbiToProjectionVftablePtr;
        static unsafe ISystemBackdropController()
        {
            AbiToProjectionVftablePtr = ComWrappersSupport.AllocateVtableMemory(typeof(ISystemBackdropController), sizeof(IInspectable.Vftbl) + sizeof(IntPtr) * 2);
            *(IInspectable.Vftbl*)AbiToProjectionVftablePtr = IInspectable.Vftbl.AbiToProjectionVftable;
            ((delegate* unmanaged[Stdcall]<IntPtr, global::Microsoft.UI.WindowId, IntPtr, byte*, int>*)AbiToProjectionVftablePtr)[6] = &Do_Abi_SetTarget_0;
            ((delegate* unmanaged[Stdcall]<IntPtr, IntPtr, IntPtr, byte*, int>*)AbiToProjectionVftablePtr)[7] = &Do_Abi_SetTarget_1;
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvStdcall) })]
        private static unsafe int Do_Abi_SetTarget_0(IntPtr thisPtr, global::Microsoft.UI.WindowId windowId, IntPtr desktopWindowTarget, byte* result)
        {

            bool __result = default;

            *result = default;

            try
            {
                __result = global::WinRT.ComWrappersSupport.FindObject<global::Microsoft.UI.Composition.SystemBackdrops.ISystemBackdropController>(thisPtr).SetTarget(windowId, global::ABI.Windows.UI.Composition.CompositionTarget.FromAbi(desktopWindowTarget));
                *result = (byte)(__result ? 1 : 0);

            }
            catch (Exception __exception__)
            {
                global::WinRT.ExceptionHelpers.SetErrorInfo(__exception__);
                return global::WinRT.ExceptionHelpers.GetHRForException(__exception__);
            }
            return 0;
        }
        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvStdcall) })]
        private static unsafe int Do_Abi_SetTarget_1(IntPtr thisPtr, IntPtr coreWindow, IntPtr compositionTarget, byte* result)
        {

            bool __result = default;

            *result = default;

            try
            {
                __result = global::WinRT.ComWrappersSupport.FindObject<global::Microsoft.UI.Composition.SystemBackdrops.ISystemBackdropController>(thisPtr).SetTarget(global::ABI.Windows.UI.Core.CoreWindow.FromAbi(coreWindow), global::ABI.Windows.UI.Composition.CompositionTarget.FromAbi(compositionTarget));
                *result = (byte)(__result ? 1 : 0);

            }
            catch (Exception __exception__)
            {
                global::WinRT.ExceptionHelpers.SetErrorInfo(__exception__);
                return global::WinRT.ExceptionHelpers.GetHRForException(__exception__);
            }
            return 0;
        }

        unsafe bool global::Microsoft.UI.Composition.SystemBackdrops.ISystemBackdropController.SetTarget(global::Microsoft.UI.WindowId windowId, global::Windows.UI.Composition.CompositionTarget desktopWindowTarget)
        {
            var _obj = ((IObjectReference)((IWinRTObject)this).GetObjectReferenceForType(typeof(global::Microsoft.UI.Composition.SystemBackdrops.ISystemBackdropController).TypeHandle));
            return global::ABI.Microsoft.UI.Composition.SystemBackdrops.ISystemBackdropControllerMethods.SetTarget(_obj, windowId, desktopWindowTarget);
        }

        unsafe bool global::Microsoft.UI.Composition.SystemBackdrops.ISystemBackdropController.SetTarget(global::Windows.UI.Core.CoreWindow coreWindow, global::Windows.UI.Composition.CompositionTarget compositionTarget)
        {
            var _obj = ((IObjectReference)((IWinRTObject)this).GetObjectReferenceForType(typeof(global::Microsoft.UI.Composition.SystemBackdrops.ISystemBackdropController).TypeHandle));
            return global::ABI.Microsoft.UI.Composition.SystemBackdrops.ISystemBackdropControllerMethods.SetTarget(_obj, coreWindow, compositionTarget);
        }

        void global::System.IDisposable.Dispose() => ((global::System.IDisposable)(IWinRTObject)this).Dispose();
    }

    public static class ISystemBackdropControllerWithTargetsMethods
    {


        public static unsafe bool AddSystemBackdropTarget(IObjectReference _obj, global::Microsoft.UI.Composition.ICompositionSupportsSystemBackdrop systemBackdropTarget)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __systemBackdropTarget = default;
            byte __retval = default;
            try
            {
                __systemBackdropTarget = MarshalInterface<global::Microsoft.UI.Composition.ICompositionSupportsSystemBackdrop>.CreateMarshaler2(systemBackdropTarget, global::ABI.Microsoft.UI.Composition.ICompositionSupportsSystemBackdropMethods.IID);
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, byte*, int>**)ThisPtr)[7](ThisPtr, MarshalInspectable<object>.GetAbi(__systemBackdropTarget), &__retval));
                global::System.GC.KeepAlive(_obj);
                return __retval != 0;
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__systemBackdropTarget);
            }
        }

        public static unsafe void RemoveAllSystemBackdropTargets(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, int>**)ThisPtr)[8](ThisPtr));
            global::System.GC.KeepAlive(_obj);
        }

        public static unsafe bool RemoveSystemBackdropTarget(IObjectReference _obj, global::Microsoft.UI.Composition.ICompositionSupportsSystemBackdrop systemBackdropTarget)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __systemBackdropTarget = default;
            byte __retval = default;
            try
            {
                __systemBackdropTarget = MarshalInterface<global::Microsoft.UI.Composition.ICompositionSupportsSystemBackdrop>.CreateMarshaler2(systemBackdropTarget, global::ABI.Microsoft.UI.Composition.ICompositionSupportsSystemBackdropMethods.IID);
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, byte*, int>**)ThisPtr)[9](ThisPtr, MarshalInspectable<object>.GetAbi(__systemBackdropTarget), &__retval));
                global::System.GC.KeepAlive(_obj);
                return __retval != 0;
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__systemBackdropTarget);
            }
        }

        public static unsafe void SetSystemBackdropConfiguration(IObjectReference _obj, global::Microsoft.UI.Composition.SystemBackdrops.SystemBackdropConfiguration configuration)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __configuration = default;
            try
            {
                __configuration = global::ABI.Microsoft.UI.Composition.SystemBackdrops.SystemBackdropConfiguration.CreateMarshaler2(configuration);
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, int>**)ThisPtr)[10](ThisPtr, MarshalInspectable<object>.GetAbi(__configuration)));
                global::System.GC.KeepAlive(_obj);
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__configuration);
            }
        }
        public static unsafe global::Microsoft.UI.Composition.SystemBackdrops.SystemBackdropState get_State(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::Microsoft.UI.Composition.SystemBackdrops.SystemBackdropState __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::Microsoft.UI.Composition.SystemBackdrops.SystemBackdropState*, int>**)ThisPtr)[6](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }


        private volatile static global::System.Runtime.CompilerServices.ConditionalWeakTable<object, global::ABI.WinRT.Interop.EventSource<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Composition.SystemBackdrops.ISystemBackdropControllerWithTargets, object>>> _StateChanged_;
        private static global::System.Runtime.CompilerServices.ConditionalWeakTable<object, global::ABI.WinRT.Interop.EventSource<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Composition.SystemBackdrops.ISystemBackdropControllerWithTargets, object>>> MakeStateChangedTable()
        {
            
            global::System.Threading.Interlocked.CompareExchange(ref _StateChanged_, new(), null);
            return _StateChanged_;
        }
        private static global::System.Runtime.CompilerServices.ConditionalWeakTable<object, global::ABI.WinRT.Interop.EventSource<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Composition.SystemBackdrops.ISystemBackdropControllerWithTargets, object>>> _StateChanged => _StateChanged_ ?? MakeStateChangedTable();

        public static unsafe (Action<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Composition.SystemBackdrops.ISystemBackdropControllerWithTargets, object>>, Action<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Composition.SystemBackdrops.ISystemBackdropControllerWithTargets, object>>) Get_StateChanged(IObjectReference _obj, object _thisObj)
        {
            var eventSource = Get_StateChanged2(_obj, _thisObj);
            return (eventSource.Subscribe, eventSource.Unsubscribe);
        }

        public static unsafe global::ABI.WinRT.Interop.EventSource<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Composition.SystemBackdrops.ISystemBackdropControllerWithTargets, object>> Get_StateChanged2(IObjectReference _obj, object _thisObj)
        {
            return _StateChanged.GetValue(_thisObj, (key) =>
            {

                var ThisPtr = _obj.ThisPtr;

                return 
                new _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_UI_Composition_SystemBackdrops_ISystemBackdropControllerWithTargets__object_(_obj,
                (*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, global::WinRT.EventRegistrationToken*, int>**)ThisPtr)[11],
                (*(delegate* unmanaged[Stdcall]<IntPtr, global::WinRT.EventRegistrationToken, int>**)ThisPtr)[12],
                0);
            });
        }


        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0x7C, 0xFE, 0x56, 0x9C, 0xEB, 0x98, 0x89, 0x5F, 0xAD, 0x97, 0xDA, 0xD5, 0x7F, 0xC3, 0xC, 0x8C };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

        public static global::System.IntPtr AbiToProjectionVftablePtr => ISystemBackdropControllerWithTargets.AbiToProjectionVftablePtr;

    }
    [DynamicInterfaceCastableImplementation]
    [Guid("9C56FE7C-98EB-5F89-AD97-DAD57FC30C8C")]
    internal unsafe interface ISystemBackdropControllerWithTargets : global::Microsoft.UI.Composition.SystemBackdrops.ISystemBackdropControllerWithTargets
    {

        public static readonly IntPtr AbiToProjectionVftablePtr;
        static unsafe ISystemBackdropControllerWithTargets()
        {
            AbiToProjectionVftablePtr = ComWrappersSupport.AllocateVtableMemory(typeof(ISystemBackdropControllerWithTargets), sizeof(IInspectable.Vftbl) + sizeof(IntPtr) * 7);
            *(IInspectable.Vftbl*)AbiToProjectionVftablePtr = IInspectable.Vftbl.AbiToProjectionVftable;
            ((delegate* unmanaged[Stdcall]<IntPtr, global::Microsoft.UI.Composition.SystemBackdrops.SystemBackdropState*, int>*)AbiToProjectionVftablePtr)[6] = &Do_Abi_get_State_0;
            ((delegate* unmanaged[Stdcall]<IntPtr, IntPtr, byte*, int>*)AbiToProjectionVftablePtr)[7] = &Do_Abi_AddSystemBackdropTarget_1;
            ((delegate* unmanaged[Stdcall]<IntPtr, int>*)AbiToProjectionVftablePtr)[8] = &Do_Abi_RemoveAllSystemBackdropTargets_2;
            ((delegate* unmanaged[Stdcall]<IntPtr, IntPtr, byte*, int>*)AbiToProjectionVftablePtr)[9] = &Do_Abi_RemoveSystemBackdropTarget_3;
            ((delegate* unmanaged[Stdcall]<IntPtr, IntPtr, int>*)AbiToProjectionVftablePtr)[10] = &Do_Abi_SetSystemBackdropConfiguration_4;
            ((delegate* unmanaged[Stdcall]<IntPtr, IntPtr, global::WinRT.EventRegistrationToken*, int>*)AbiToProjectionVftablePtr)[11] = &Do_Abi_add_StateChanged_5;
            ((delegate* unmanaged[Stdcall]<IntPtr, global::WinRT.EventRegistrationToken, int>*)AbiToProjectionVftablePtr)[12] = &Do_Abi_remove_StateChanged_6;
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvStdcall) })]
        private static unsafe int Do_Abi_AddSystemBackdropTarget_1(IntPtr thisPtr, IntPtr systemBackdropTarget, byte* result)
        {

            bool __result = default;

            *result = default;

            try
            {
                __result = global::WinRT.ComWrappersSupport.FindObject<global::Microsoft.UI.Composition.SystemBackdrops.ISystemBackdropControllerWithTargets>(thisPtr).AddSystemBackdropTarget(MarshalInterface<global::Microsoft.UI.Composition.ICompositionSupportsSystemBackdrop>.FromAbi(systemBackdropTarget));
                *result = (byte)(__result ? 1 : 0);

            }
            catch (Exception __exception__)
            {
                global::WinRT.ExceptionHelpers.SetErrorInfo(__exception__);
                return global::WinRT.ExceptionHelpers.GetHRForException(__exception__);
            }
            return 0;
        }
        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvStdcall) })]
        private static unsafe int Do_Abi_RemoveAllSystemBackdropTargets_2(IntPtr thisPtr)
        {



            try
            {
                global::WinRT.ComWrappersSupport.FindObject<global::Microsoft.UI.Composition.SystemBackdrops.ISystemBackdropControllerWithTargets>(thisPtr).RemoveAllSystemBackdropTargets();

            }
            catch (Exception __exception__)
            {
                global::WinRT.ExceptionHelpers.SetErrorInfo(__exception__);
                return global::WinRT.ExceptionHelpers.GetHRForException(__exception__);
            }
            return 0;
        }
        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvStdcall) })]
        private static unsafe int Do_Abi_RemoveSystemBackdropTarget_3(IntPtr thisPtr, IntPtr systemBackdropTarget, byte* result)
        {

            bool __result = default;

            *result = default;

            try
            {
                __result = global::WinRT.ComWrappersSupport.FindObject<global::Microsoft.UI.Composition.SystemBackdrops.ISystemBackdropControllerWithTargets>(thisPtr).RemoveSystemBackdropTarget(MarshalInterface<global::Microsoft.UI.Composition.ICompositionSupportsSystemBackdrop>.FromAbi(systemBackdropTarget));
                *result = (byte)(__result ? 1 : 0);

            }
            catch (Exception __exception__)
            {
                global::WinRT.ExceptionHelpers.SetErrorInfo(__exception__);
                return global::WinRT.ExceptionHelpers.GetHRForException(__exception__);
            }
            return 0;
        }
        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvStdcall) })]
        private static unsafe int Do_Abi_SetSystemBackdropConfiguration_4(IntPtr thisPtr, IntPtr configuration)
        {



            try
            {
                global::WinRT.ComWrappersSupport.FindObject<global::Microsoft.UI.Composition.SystemBackdrops.ISystemBackdropControllerWithTargets>(thisPtr).SetSystemBackdropConfiguration(global::ABI.Microsoft.UI.Composition.SystemBackdrops.SystemBackdropConfiguration.FromAbi(configuration));

            }
            catch (Exception __exception__)
            {
                global::WinRT.ExceptionHelpers.SetErrorInfo(__exception__);
                return global::WinRT.ExceptionHelpers.GetHRForException(__exception__);
            }
            return 0;
        }
        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvStdcall) })]
        private static unsafe int Do_Abi_get_State_0(IntPtr thisPtr, global::Microsoft.UI.Composition.SystemBackdrops.SystemBackdropState* value)
        {

            global::Microsoft.UI.Composition.SystemBackdrops.SystemBackdropState __value = default;

            *value = default;

            try
            {
                __value = global::WinRT.ComWrappersSupport.FindObject<global::Microsoft.UI.Composition.SystemBackdrops.ISystemBackdropControllerWithTargets>(thisPtr).State;
                *value = __value;

            }
            catch (Exception __exception__)
            {
                global::WinRT.ExceptionHelpers.SetErrorInfo(__exception__);
                return global::WinRT.ExceptionHelpers.GetHRForException(__exception__);
            }
            return 0;
        }
        private volatile static global::System.Runtime.CompilerServices.ConditionalWeakTable<global::Microsoft.UI.Composition.SystemBackdrops.ISystemBackdropControllerWithTargets, global::WinRT.EventRegistrationTokenTable<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Composition.SystemBackdrops.ISystemBackdropControllerWithTargets, object>>> _StateChanged_tokenTables;
        private static global::System.Runtime.CompilerServices.ConditionalWeakTable<global::Microsoft.UI.Composition.SystemBackdrops.ISystemBackdropControllerWithTargets, global::WinRT.EventRegistrationTokenTable<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Composition.SystemBackdrops.ISystemBackdropControllerWithTargets, object>>> MakeStateChangedTable()
        {
            global::System.Threading.Interlocked.CompareExchange(ref _StateChanged_tokenTables, new(), null);
            return _StateChanged_tokenTables;
        }
        private static global::System.Runtime.CompilerServices.ConditionalWeakTable<global::Microsoft.UI.Composition.SystemBackdrops.ISystemBackdropControllerWithTargets, global::WinRT.EventRegistrationTokenTable<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Composition.SystemBackdrops.ISystemBackdropControllerWithTargets, object>>> _StateChanged_TokenTables => _StateChanged_tokenTables ?? MakeStateChangedTable();

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvStdcall) })]
        private static unsafe int Do_Abi_add_StateChanged_5(IntPtr thisPtr, IntPtr handler, global::WinRT.EventRegistrationToken* token)
        {
            _ = global::WinRT.GenericTypeInstantiations.Windows_Foundation_TypedEventHandler_2_Microsoft_UI_Composition_SystemBackdrops_ISystemBackdropControllerWithTargets__object.EnsureInitialized();
            *token = default;
            try
            {
                var __this = global::WinRT.ComWrappersSupport.FindObject<global::Microsoft.UI.Composition.SystemBackdrops.ISystemBackdropControllerWithTargets>(thisPtr);
                var __handler = global::ABI.Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Composition.SystemBackdrops.ISystemBackdropControllerWithTargets, object>.FromAbi(handler);
                *token = _StateChanged_TokenTables.GetOrCreateValue(__this).AddEventHandler(__handler);
                __this.StateChanged += __handler;
                return 0;
            }
            catch (Exception __ex)
            {
                return __ex.HResult;
            }
        }
        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvStdcall) })]
        private static unsafe int Do_Abi_remove_StateChanged_6(IntPtr thisPtr, global::WinRT.EventRegistrationToken token)
        {
            try
            {
                var __this = global::WinRT.ComWrappersSupport.FindObject<global::Microsoft.UI.Composition.SystemBackdrops.ISystemBackdropControllerWithTargets>(thisPtr);
                if(__this != null && _StateChanged_TokenTables.TryGetValue(__this, out var __table) && __table.RemoveEventHandler(token, out var __handler))
                {
                    __this.StateChanged -= __handler;
                }
                return 0;
            }
            catch (Exception __ex)
            {
                return __ex.HResult;
            }
        }

        unsafe bool global::Microsoft.UI.Composition.SystemBackdrops.ISystemBackdropControllerWithTargets.AddSystemBackdropTarget(global::Microsoft.UI.Composition.ICompositionSupportsSystemBackdrop systemBackdropTarget)
        {
            var _obj = ((IObjectReference)((IWinRTObject)this).GetObjectReferenceForType(typeof(global::Microsoft.UI.Composition.SystemBackdrops.ISystemBackdropControllerWithTargets).TypeHandle));
            return global::ABI.Microsoft.UI.Composition.SystemBackdrops.ISystemBackdropControllerWithTargetsMethods.AddSystemBackdropTarget(_obj, systemBackdropTarget);
        }

        unsafe void global::Microsoft.UI.Composition.SystemBackdrops.ISystemBackdropControllerWithTargets.RemoveAllSystemBackdropTargets()
        {
            var _obj = ((IObjectReference)((IWinRTObject)this).GetObjectReferenceForType(typeof(global::Microsoft.UI.Composition.SystemBackdrops.ISystemBackdropControllerWithTargets).TypeHandle));
            global::ABI.Microsoft.UI.Composition.SystemBackdrops.ISystemBackdropControllerWithTargetsMethods.RemoveAllSystemBackdropTargets(_obj);
        }

        unsafe bool global::Microsoft.UI.Composition.SystemBackdrops.ISystemBackdropControllerWithTargets.RemoveSystemBackdropTarget(global::Microsoft.UI.Composition.ICompositionSupportsSystemBackdrop systemBackdropTarget)
        {
            var _obj = ((IObjectReference)((IWinRTObject)this).GetObjectReferenceForType(typeof(global::Microsoft.UI.Composition.SystemBackdrops.ISystemBackdropControllerWithTargets).TypeHandle));
            return global::ABI.Microsoft.UI.Composition.SystemBackdrops.ISystemBackdropControllerWithTargetsMethods.RemoveSystemBackdropTarget(_obj, systemBackdropTarget);
        }

        unsafe void global::Microsoft.UI.Composition.SystemBackdrops.ISystemBackdropControllerWithTargets.SetSystemBackdropConfiguration(global::Microsoft.UI.Composition.SystemBackdrops.SystemBackdropConfiguration configuration)
        {
            var _obj = ((IObjectReference)((IWinRTObject)this).GetObjectReferenceForType(typeof(global::Microsoft.UI.Composition.SystemBackdrops.ISystemBackdropControllerWithTargets).TypeHandle));
            global::ABI.Microsoft.UI.Composition.SystemBackdrops.ISystemBackdropControllerWithTargetsMethods.SetSystemBackdropConfiguration(_obj, configuration);
        }

        unsafe global::Microsoft.UI.Composition.SystemBackdrops.SystemBackdropState global::Microsoft.UI.Composition.SystemBackdrops.ISystemBackdropControllerWithTargets.State
        {
            get
            {
                var _obj = ((IObjectReference)((IWinRTObject)this).GetObjectReferenceForType(typeof(global::Microsoft.UI.Composition.SystemBackdrops.ISystemBackdropControllerWithTargets).TypeHandle));
                return global::ABI.Microsoft.UI.Composition.SystemBackdrops.ISystemBackdropControllerWithTargetsMethods.get_State(_obj);
            }
        }

        event global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Composition.SystemBackdrops.ISystemBackdropControllerWithTargets, object> global::Microsoft.UI.Composition.SystemBackdrops.ISystemBackdropControllerWithTargets.StateChanged
        {
            add 
            {
                var _obj = ((IObjectReference)((IWinRTObject)this).GetObjectReferenceForType(typeof(global::Microsoft.UI.Composition.SystemBackdrops.ISystemBackdropControllerWithTargets).TypeHandle));
                global::ABI.Microsoft.UI.Composition.SystemBackdrops.ISystemBackdropControllerWithTargetsMethods.Get_StateChanged2(_obj, (IWinRTObject)this).Subscribe(value);
            }
            remove
            {
                var _obj = ((IObjectReference)((IWinRTObject)this).GetObjectReferenceForType(typeof(global::Microsoft.UI.Composition.SystemBackdrops.ISystemBackdropControllerWithTargets).TypeHandle));
                global::ABI.Microsoft.UI.Composition.SystemBackdrops.ISystemBackdropControllerWithTargetsMethods.Get_StateChanged2(_obj, (IWinRTObject)this).Unsubscribe(value);
            }
        }

        bool global::Microsoft.UI.Composition.SystemBackdrops.ISystemBackdropController.SetTarget(global::Microsoft.UI.WindowId windowId, global::Windows.UI.Composition.CompositionTarget desktopWindowTarget) => ((global::Microsoft.UI.Composition.SystemBackdrops.ISystemBackdropController)(IWinRTObject)this).SetTarget(windowId, desktopWindowTarget);

        bool global::Microsoft.UI.Composition.SystemBackdrops.ISystemBackdropController.SetTarget(global::Windows.UI.Core.CoreWindow coreWindow, global::Windows.UI.Composition.CompositionTarget compositionTarget) => ((global::Microsoft.UI.Composition.SystemBackdrops.ISystemBackdropController)(IWinRTObject)this).SetTarget(coreWindow, compositionTarget);

        void global::System.IDisposable.Dispose() => ((global::System.IDisposable)(IWinRTObject)this).Dispose();
    }

    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    public struct MicaController
    {

        public static IObjectReference CreateMarshaler(global::Microsoft.UI.Composition.SystemBackdrops.MicaController obj) => obj is null ? null : MarshalInspectable<global::Microsoft.UI.Composition.SystemBackdrops.MicaController>.CreateMarshaler<IUnknownVftbl>(obj, global::ABI.Microsoft.UI.Composition.SystemBackdrops.IMicaControllerMethods.IID);
        public static ObjectReferenceValue CreateMarshaler2(global::Microsoft.UI.Composition.SystemBackdrops.MicaController obj) => MarshalInspectable<object>.CreateMarshaler2(obj, global::ABI.Microsoft.UI.Composition.SystemBackdrops.IMicaControllerMethods.IID);
        public static IntPtr GetAbi(IObjectReference value) => value is null ? IntPtr.Zero : MarshalInterfaceHelper<object>.GetAbi(value);
        public static global::Microsoft.UI.Composition.SystemBackdrops.MicaController FromAbi(IntPtr thisPtr) => global::Microsoft.UI.Composition.SystemBackdrops.MicaController.FromAbi(thisPtr);
        public static IntPtr FromManaged(global::Microsoft.UI.Composition.SystemBackdrops.MicaController obj) => obj is null ? IntPtr.Zero : CreateMarshaler2(obj).Detach();
        public static unsafe MarshalInterfaceHelper<global::Microsoft.UI.Composition.SystemBackdrops.MicaController>.MarshalerArray CreateMarshalerArray(global::Microsoft.UI.Composition.SystemBackdrops.MicaController[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.SystemBackdrops.MicaController>.CreateMarshalerArray2(array, (o) => CreateMarshaler2(o));
        public static (int length, IntPtr data) GetAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.SystemBackdrops.MicaController>.GetAbiArray(box);
        public static unsafe global::Microsoft.UI.Composition.SystemBackdrops.MicaController[] FromAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.SystemBackdrops.MicaController>.FromAbiArray(box, FromAbi);
        public static void CopyAbiArray(global::Microsoft.UI.Composition.SystemBackdrops.MicaController[] array, object box) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.SystemBackdrops.MicaController>.CopyAbiArray(array, box, FromAbi);
        public static (int length, IntPtr data) FromManagedArray(global::Microsoft.UI.Composition.SystemBackdrops.MicaController[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.SystemBackdrops.MicaController>.FromManagedArray(array, (o) => FromManaged(o));
        public static void DisposeMarshaler(IObjectReference value) => MarshalInspectable<object>.DisposeMarshaler(value);
        public static void DisposeMarshalerArray(MarshalInterfaceHelper<global::Microsoft.UI.Composition.SystemBackdrops.MicaController>.MarshalerArray array) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.SystemBackdrops.MicaController>.DisposeMarshalerArray(array);
        public static void DisposeAbi(IntPtr abi) => MarshalInspectable<object>.DisposeAbi(abi);
        public static unsafe void DisposeAbiArray(object box) => MarshalInspectable<object>.DisposeAbiArray(box);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    internal sealed class MicaControllerRcwFactoryAttribute : global::WinRT.WinRTImplementationTypeRcwFactoryAttribute
    {
        public override object CreateInstance(global::WinRT.IInspectable inspectable)
            => new global::Microsoft.UI.Composition.SystemBackdrops.MicaController(inspectable.ObjRef);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    public struct SystemBackdropConfiguration
    {

        public static IObjectReference CreateMarshaler(global::Microsoft.UI.Composition.SystemBackdrops.SystemBackdropConfiguration obj) => obj is null ? null : MarshalInspectable<global::Microsoft.UI.Composition.SystemBackdrops.SystemBackdropConfiguration>.CreateMarshaler<IUnknownVftbl>(obj, global::ABI.Microsoft.UI.Composition.SystemBackdrops.ISystemBackdropConfigurationMethods.IID);
        public static ObjectReferenceValue CreateMarshaler2(global::Microsoft.UI.Composition.SystemBackdrops.SystemBackdropConfiguration obj) => MarshalInspectable<object>.CreateMarshaler2(obj, global::ABI.Microsoft.UI.Composition.SystemBackdrops.ISystemBackdropConfigurationMethods.IID);
        public static IntPtr GetAbi(IObjectReference value) => value is null ? IntPtr.Zero : MarshalInterfaceHelper<object>.GetAbi(value);
        public static global::Microsoft.UI.Composition.SystemBackdrops.SystemBackdropConfiguration FromAbi(IntPtr thisPtr) => global::Microsoft.UI.Composition.SystemBackdrops.SystemBackdropConfiguration.FromAbi(thisPtr);
        public static IntPtr FromManaged(global::Microsoft.UI.Composition.SystemBackdrops.SystemBackdropConfiguration obj) => obj is null ? IntPtr.Zero : CreateMarshaler2(obj).Detach();
        public static unsafe MarshalInterfaceHelper<global::Microsoft.UI.Composition.SystemBackdrops.SystemBackdropConfiguration>.MarshalerArray CreateMarshalerArray(global::Microsoft.UI.Composition.SystemBackdrops.SystemBackdropConfiguration[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.SystemBackdrops.SystemBackdropConfiguration>.CreateMarshalerArray2(array, (o) => CreateMarshaler2(o));
        public static (int length, IntPtr data) GetAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.SystemBackdrops.SystemBackdropConfiguration>.GetAbiArray(box);
        public static unsafe global::Microsoft.UI.Composition.SystemBackdrops.SystemBackdropConfiguration[] FromAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.SystemBackdrops.SystemBackdropConfiguration>.FromAbiArray(box, FromAbi);
        public static void CopyAbiArray(global::Microsoft.UI.Composition.SystemBackdrops.SystemBackdropConfiguration[] array, object box) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.SystemBackdrops.SystemBackdropConfiguration>.CopyAbiArray(array, box, FromAbi);
        public static (int length, IntPtr data) FromManagedArray(global::Microsoft.UI.Composition.SystemBackdrops.SystemBackdropConfiguration[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.SystemBackdrops.SystemBackdropConfiguration>.FromManagedArray(array, (o) => FromManaged(o));
        public static void DisposeMarshaler(IObjectReference value) => MarshalInspectable<object>.DisposeMarshaler(value);
        public static void DisposeMarshalerArray(MarshalInterfaceHelper<global::Microsoft.UI.Composition.SystemBackdrops.SystemBackdropConfiguration>.MarshalerArray array) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.SystemBackdrops.SystemBackdropConfiguration>.DisposeMarshalerArray(array);
        public static void DisposeAbi(IntPtr abi) => MarshalInspectable<object>.DisposeAbi(abi);
        public static unsafe void DisposeAbiArray(object box) => MarshalInspectable<object>.DisposeAbiArray(box);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    internal sealed class SystemBackdropConfigurationRcwFactoryAttribute : global::WinRT.WinRTImplementationTypeRcwFactoryAttribute
    {
        public override object CreateInstance(global::WinRT.IInspectable inspectable)
            => new global::Microsoft.UI.Composition.SystemBackdrops.SystemBackdropConfiguration(inspectable.ObjRef);
    }
}
#pragma warning restore CA1416
