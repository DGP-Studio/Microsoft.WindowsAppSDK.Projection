//------------------------------------------------------------------------------
// <auto-generated>
//     This file was generated by cswinrt.exe version 2.2.0.241111.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Diagnostics;
using System.Diagnostics.CodeAnalysis;
using System.Linq.Expressions;
using System.Reflection;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;
using WinRT;
using WinRT.Interop;


#pragma warning disable 0169 // warning CS0169: The field '...' is never used
#pragma warning disable 0649 // warning CS0169: Field '...' is never assigned to
#pragma warning disable CA2207, CA1063, CA1033, CA1001, CA2213

namespace Microsoft.UI.Composition.Scenes
{
    [global::WinRT.WindowsRuntimeType("Microsoft.UI")][Guid("39FB48E0-216A-5608-9186-6BA9F98B5C67")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Composition.Scenes.ISceneBoundingBox))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.Foundation.WindowsAppSDKContract), 65536u)]
    internal interface ISceneBoundingBox
    {
        global::System.Numerics.Vector3 Center { get; }
        global::System.Numerics.Vector3 Extents { get; }
        global::System.Numerics.Vector3 Max { get; }
        global::System.Numerics.Vector3 Min { get; }
        global::System.Numerics.Vector3 Size { get; }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI")][Guid("F73361CB-8027-50E2-98EE-B2E3EA050A54")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Composition.Scenes.ISceneComponent))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.Foundation.WindowsAppSDKContract), 65536u)]
    internal interface ISceneComponent
    {
        SceneComponentType ComponentType { get; }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI")][Guid("E4B21C71-87E2-5AEB-85BE-884E8302273E")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Composition.Scenes.ISceneComponentCollection))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.Foundation.WindowsAppSDKContract), 65536u)]
    internal interface ISceneComponentCollection
    {
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI")][Guid("254088B0-BABF-503D-9A66-0D86AF5F7303")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Composition.Scenes.ISceneComponentFactory))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.Foundation.WindowsAppSDKContract), 65536u)]
    internal interface ISceneComponentFactory
    {
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI")][Guid("042142A7-BF6B-57AD-BADC-F581F38EDB48")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Composition.Scenes.ISceneMaterial))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.Foundation.WindowsAppSDKContract), 65536u)]
    internal interface ISceneMaterial
    {
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI")][Guid("25747893-8748-5F60-969F-318FA0B735CA")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Composition.Scenes.ISceneMaterialFactory))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.Foundation.WindowsAppSDKContract), 65536u)]
    internal interface ISceneMaterialFactory
    {
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI")][Guid("446BDADE-719B-5DB4-B699-F226D0062A2E")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Composition.Scenes.ISceneMaterialInput))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.Foundation.WindowsAppSDKContract), 65536u)]
    internal interface ISceneMaterialInput
    {
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI")][Guid("B4DABD1D-58C0-5710-928A-BC49B0735694")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Composition.Scenes.ISceneMaterialInputFactory))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.Foundation.WindowsAppSDKContract), 65536u)]
    internal interface ISceneMaterialInputFactory
    {
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI")][Guid("5CF846AA-F53F-555E-A3AD-F5BC52CA32FB")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Composition.Scenes.ISceneMesh))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.Foundation.WindowsAppSDKContract), 65536u)]
    internal interface ISceneMesh
    {
        void FillMeshAttribute(SceneAttributeSemantic semantic, global::Microsoft.Graphics.DirectX.DirectXPixelFormat format, global::Windows.Foundation.MemoryBuffer memory);
        SceneBoundingBox Bounds { get; }
        global::Microsoft.Graphics.DirectX.DirectXPrimitiveTopology PrimitiveTopology { get; set; }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI")][Guid("2360C457-EDAE-5660-BEDC-89096582ED70")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Composition.Scenes.ISceneMeshMaterialAttributeMap))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.Foundation.WindowsAppSDKContract), 65536u)]
    internal interface ISceneMeshMaterialAttributeMap
    {
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI")][Guid("D2BE85A0-70A8-5C62-84D8-8BA55E4C64A9")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Composition.Scenes.ISceneMeshRendererComponent))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.Foundation.WindowsAppSDKContract), 65536u)]
    internal interface ISceneMeshRendererComponent
    {
        SceneMaterial Material { get; set; }
        SceneMesh Mesh { get; set; }
        SceneMeshMaterialAttributeMap UVMappings { get; }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI")][Guid("C54F8C5A-A104-5CFA-89DC-13EDAA6E3D88")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Composition.Scenes.ISceneMeshRendererComponentStatics))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.Foundation.WindowsAppSDKContract), 65536u)]
    internal interface ISceneMeshRendererComponentStatics
    {
        SceneMeshRendererComponent Create(global::Microsoft.UI.Composition.Compositor compositor);
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI")][Guid("29C52125-964B-5315-80F9-3893713290F5")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Composition.Scenes.ISceneMeshStatics))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.Foundation.WindowsAppSDKContract), 65536u)]
    internal interface ISceneMeshStatics
    {
        SceneMesh Create(global::Microsoft.UI.Composition.Compositor compositor);
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI")][Guid("0A4AFCF4-7BAE-5702-9B85-8BC849F39987")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Composition.Scenes.ISceneMetallicRoughnessMaterial))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.Foundation.WindowsAppSDKContract), 65536u)]
    internal interface ISceneMetallicRoughnessMaterial
    {
        global::System.Numerics.Vector4 BaseColorFactor { get; set; }
        SceneMaterialInput BaseColorInput { get; set; }
        float MetallicFactor { get; set; }
        SceneMaterialInput MetallicRoughnessInput { get; set; }
        float RoughnessFactor { get; set; }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI")][Guid("DFFD2043-AB3C-57A0-8E13-6F09725E970F")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Composition.Scenes.ISceneMetallicRoughnessMaterialStatics))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.Foundation.WindowsAppSDKContract), 65536u)]
    internal interface ISceneMetallicRoughnessMaterialStatics
    {
        SceneMetallicRoughnessMaterial Create(global::Microsoft.UI.Composition.Compositor compositor);
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI")][Guid("3F05555F-0F67-576E-9D8A-93C1F250C29F")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Composition.Scenes.ISceneModelTransform))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.Foundation.WindowsAppSDKContract), 65536u)]
    internal interface ISceneModelTransform
    {
        global::System.Numerics.Quaternion Orientation { get; set; }
        float RotationAngle { get; set; }
        float RotationAngleInDegrees { get; set; }
        global::System.Numerics.Vector3 RotationAxis { get; set; }
        global::System.Numerics.Vector3 Scale { get; set; }
        global::System.Numerics.Vector3 Translation { get; set; }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI")][Guid("A1BCE140-79C2-59E6-9B68-63B1BAB0E2A6")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Composition.Scenes.ISceneNode))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.Foundation.WindowsAppSDKContract), 65536u)]
    internal interface ISceneNode
    {
        SceneComponent FindFirstComponentOfType(SceneComponentType value);
        SceneNodeCollection Children { get; }
        SceneComponentCollection Components { get; }
        SceneNode Parent { get; }
        SceneModelTransform Transform { get; }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI")][Guid("F219B68E-5666-5C6C-AA4E-08DB07FD6BCF")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Composition.Scenes.ISceneNodeCollection))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.Foundation.WindowsAppSDKContract), 65536u)]
    internal interface ISceneNodeCollection
    {
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI")][Guid("801C4394-4198-5DA1-AC39-6E8A44B5CE57")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Composition.Scenes.ISceneNodeStatics))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.Foundation.WindowsAppSDKContract), 65536u)]
    internal interface ISceneNodeStatics
    {
        SceneNode Create(global::Microsoft.UI.Composition.Compositor compositor);
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI")][Guid("4333E514-4FC7-521E-8BCA-11C51FBCAF1E")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Composition.Scenes.ISceneObject))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.Foundation.WindowsAppSDKContract), 65536u)]
    internal interface ISceneObject
    {
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI")][Guid("EE797F7D-77DB-5C4C-B6F5-C1930FAD85C5")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Composition.Scenes.ISceneObjectFactory))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.Foundation.WindowsAppSDKContract), 65536u)]
    internal interface ISceneObjectFactory
    {
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI")][Guid("295D0725-56FE-5954-8057-3F4CA7515B36")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Composition.Scenes.IScenePbrMaterial))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.Foundation.WindowsAppSDKContract), 65536u)]
    internal interface IScenePbrMaterial
    {
        float AlphaCutoff { get; set; }
        SceneAlphaMode AlphaMode { get; set; }
        global::System.Numerics.Vector3 EmissiveFactor { get; set; }
        SceneMaterialInput EmissiveInput { get; set; }
        bool IsDoubleSided { get; set; }
        SceneMaterialInput NormalInput { get; set; }
        float NormalScale { get; set; }
        SceneMaterialInput OcclusionInput { get; set; }
        float OcclusionStrength { get; set; }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI")][Guid("9E34D32A-E30C-51F5-84AC-6467950605CA")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Composition.Scenes.IScenePbrMaterialFactory))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.Foundation.WindowsAppSDKContract), 65536u)]
    internal interface IScenePbrMaterialFactory
    {
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI")][Guid("6BAB8030-89C1-5DBC-A48E-1805DDF9CDD1")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Composition.Scenes.ISceneRendererComponent))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.Foundation.WindowsAppSDKContract), 65536u)]
    internal interface ISceneRendererComponent
    {
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI")][Guid("3CCAC1D6-6A0F-582E-BB1A-10EBC1E405CA")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Composition.Scenes.ISceneRendererComponentFactory))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.Foundation.WindowsAppSDKContract), 65536u)]
    internal interface ISceneRendererComponentFactory
    {
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI")][Guid("B9854B4F-286C-50CD-A734-491A251D5FD3")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Composition.Scenes.ISceneSurfaceMaterialInput))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.Foundation.WindowsAppSDKContract), 65536u)]
    internal interface ISceneSurfaceMaterialInput
    {
        global::Microsoft.UI.Composition.CompositionBitmapInterpolationMode BitmapInterpolationMode { get; set; }
        global::Microsoft.UI.Composition.ICompositionSurface Surface { get; set; }
        SceneWrappingMode WrappingUMode { get; set; }
        SceneWrappingMode WrappingVMode { get; set; }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI")][Guid("8E1BA937-AD60-51BC-8256-CA62C4B2AE92")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Composition.Scenes.ISceneSurfaceMaterialInputStatics))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.Foundation.WindowsAppSDKContract), 65536u)]
    internal interface ISceneSurfaceMaterialInputStatics
    {
        SceneSurfaceMaterialInput Create(global::Microsoft.UI.Composition.Compositor compositor);
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI")][Guid("0144D7AD-6A7D-59CB-A0F9-74A04E85352C")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Composition.Scenes.ISceneVisual))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.Foundation.WindowsAppSDKContract), 65536u)]
    internal interface ISceneVisual
    {
        SceneNode Root { get; set; }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI")][Guid("7B8DA6D1-5BD8-5095-9264-E5572653EA07")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Composition.Scenes.ISceneVisualStatics))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.Foundation.WindowsAppSDKContract), 65536u)]
    internal interface ISceneVisualStatics
    {
        SceneVisual Create(global::Microsoft.UI.Composition.Compositor compositor);
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI")][global::WinRT.WinRTExposedType(typeof(global::WinRT.EnumTypeDetails<SceneAlphaMode>))][global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.Foundation.WindowsAppSDKContract), 65536u)]
    public enum SceneAlphaMode : int
    {
        Opaque = unchecked((int)0),
        AlphaTest = unchecked((int)0x1),
        Blend = unchecked((int)0x2),
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI")][global::WinRT.WinRTExposedType(typeof(global::WinRT.EnumTypeDetails<SceneAttributeSemantic>))][global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.Foundation.WindowsAppSDKContract), 65536u)]
    public enum SceneAttributeSemantic : int
    {
        Index = unchecked((int)0),
        Vertex = unchecked((int)0x1),
        Normal = unchecked((int)0x2),
        TexCoord0 = unchecked((int)0x3),
        TexCoord1 = unchecked((int)0x4),
        Color = unchecked((int)0x5),
        Tangent = unchecked((int)0x6),
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI")]
    [global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Composition.Scenes.SceneBoundingBox))]
    [global::ABI.Microsoft.UI.Composition.Scenes.SceneBoundingBoxRcwFactory]
    [global::WinRT.ProjectedRuntimeClass(typeof(ISceneBoundingBox))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.Foundation.WindowsAppSDKContract), 65536u)]
    public sealed class SceneBoundingBox : SceneObject, global::System.Runtime.InteropServices.ICustomQueryInterface, IWinRTObject, IEquatable<SceneBoundingBox>
    {
        private IntPtr ThisPtr => _inner == null ? (((IWinRTObject)this).NativeObject).ThisPtr : _inner.ThisPtr;

        private readonly IObjectReference _inner = null;



        private IObjectReference _objRef_global__Microsoft_UI_Composition_Scenes_ISceneBoundingBox => _inner;


        public static new SceneBoundingBox FromAbi(IntPtr thisPtr)
        {
            if (thisPtr == IntPtr.Zero) return null;
            return MarshalInspectable<SceneBoundingBox>.FromAbi(thisPtr);
        }

        internal SceneBoundingBox(IObjectReference objRef)
            : base(global::WinRT.DerivedComposed.Instance)

        {
            _inner = objRef.As(global::ABI.Microsoft.UI.Composition.Scenes.ISceneBoundingBoxMethods.IID);

        }


        public static bool operator ==(SceneBoundingBox x, SceneBoundingBox y) => (x?.ThisPtr ?? IntPtr.Zero) == (y?.ThisPtr ?? IntPtr.Zero);
        public static bool operator !=(SceneBoundingBox x, SceneBoundingBox y) => !(x == y);
        public bool Equals(SceneBoundingBox other) => this == other;
        public override bool Equals(object obj) => obj is SceneBoundingBox that && this == that;
        public override int GetHashCode() => ThisPtr.GetHashCode();


        bool IWinRTObject.HasUnwrappableNativeObject => true;
        IObjectReference IWinRTObject.NativeObject => _inner;

        private struct InterfaceTag<I>{};


        public global::System.Numerics.Vector3 Center => global::ABI.Microsoft.UI.Composition.Scenes.ISceneBoundingBoxMethods.get_Center(_objRef_global__Microsoft_UI_Composition_Scenes_ISceneBoundingBox);

        public global::System.Numerics.Vector3 Extents => global::ABI.Microsoft.UI.Composition.Scenes.ISceneBoundingBoxMethods.get_Extents(_objRef_global__Microsoft_UI_Composition_Scenes_ISceneBoundingBox);

        public global::System.Numerics.Vector3 Max => global::ABI.Microsoft.UI.Composition.Scenes.ISceneBoundingBoxMethods.get_Max(_objRef_global__Microsoft_UI_Composition_Scenes_ISceneBoundingBox);

        public global::System.Numerics.Vector3 Min => global::ABI.Microsoft.UI.Composition.Scenes.ISceneBoundingBoxMethods.get_Min(_objRef_global__Microsoft_UI_Composition_Scenes_ISceneBoundingBox);

        public global::System.Numerics.Vector3 Size => global::ABI.Microsoft.UI.Composition.Scenes.ISceneBoundingBoxMethods.get_Size(_objRef_global__Microsoft_UI_Composition_Scenes_ISceneBoundingBox);

        protected override bool IsOverridableInterface(Guid iid) => base.IsOverridableInterface(iid);

        global::System.Runtime.InteropServices.CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(ref Guid iid, out IntPtr ppv)
        {
            ppv = IntPtr.Zero;
            if (IsOverridableInterface(iid) || global::WinRT.Interop.IID.IID_IInspectable == iid)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
            }

            if (((IWinRTObject)this).NativeObject.TryAs(iid, out ppv) >= 0)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.Handled;
            }

            return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
        }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI")]
    [global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Composition.Scenes.SceneComponent))]
    [global::ABI.Microsoft.UI.Composition.Scenes.SceneComponentRcwFactory]
    [global::WinRT.ProjectedRuntimeClass(typeof(ISceneComponent))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.Foundation.WindowsAppSDKContract), 65536u)]
    public class SceneComponent : SceneObject, global::System.Runtime.InteropServices.ICustomQueryInterface, IWinRTObject, IEquatable<SceneComponent>
    {
        private IntPtr ThisPtr => _inner == null ? (((IWinRTObject)this).NativeObject).ThisPtr : _inner.ThisPtr;

        private readonly IObjectReference _inner = null;




        private volatile IObjectReference ___objRef_global__Microsoft_UI_Composition_Scenes_ISceneComponent;
        private IObjectReference Make___objRef_global__Microsoft_UI_Composition_Scenes_ISceneComponent()
        {
            global::System.Threading.Interlocked.CompareExchange(ref ___objRef_global__Microsoft_UI_Composition_Scenes_ISceneComponent, ((IWinRTObject)this).NativeObject.As<IUnknownVftbl>(global::ABI.Microsoft.UI.Composition.Scenes.ISceneComponentMethods.IID), null);
            return ___objRef_global__Microsoft_UI_Composition_Scenes_ISceneComponent;
        }
        private IObjectReference _objRef_global__Microsoft_UI_Composition_Scenes_ISceneComponent => ___objRef_global__Microsoft_UI_Composition_Scenes_ISceneComponent ?? Make___objRef_global__Microsoft_UI_Composition_Scenes_ISceneComponent();



        private static class _ISceneComponentFactoryMethods
        {}

        private static volatile IObjectReference ___objRef_global__Microsoft_UI_Composition_Scenes_ISceneComponentFactory;
        private static IObjectReference _objRef_global__Microsoft_UI_Composition_Scenes_ISceneComponentFactory
        {
            get
            { 
                var factory = ___objRef_global__Microsoft_UI_Composition_Scenes_ISceneComponentFactory;
                if (factory != null && factory.IsInCurrentContext)
                {
                    return factory;
                }
                else
                {
                    return ___objRef_global__Microsoft_UI_Composition_Scenes_ISceneComponentFactory = ActivationFactory.Get("Microsoft.UI.Composition.Scenes.SceneComponent", global::ABI.Microsoft.UI.Composition.Scenes.ISceneComponentFactoryMethods.IID);
                }
            }
        }

        public static new SceneComponent FromAbi(IntPtr thisPtr)
        {
            if (thisPtr == IntPtr.Zero) return null;
            return MarshalInspectable<SceneComponent>.FromAbi(thisPtr);
        }

        protected internal SceneComponent(IObjectReference objRef)
            : base(global::WinRT.DerivedComposed.Instance)

        {
            _inner = objRef.As(global::ABI.Microsoft.UI.Composition.Scenes.ISceneComponentMethods.IID);

        }


        public static bool operator ==(SceneComponent x, SceneComponent y) => (x?.ThisPtr ?? IntPtr.Zero) == (y?.ThisPtr ?? IntPtr.Zero);
        public static bool operator !=(SceneComponent x, SceneComponent y) => !(x == y);
        public bool Equals(SceneComponent other) => this == other;
        public override bool Equals(object obj) => obj is SceneComponent that && this == that;
        public override int GetHashCode() => ThisPtr.GetHashCode();


        protected SceneComponent(global::WinRT.DerivedComposed _):base(_)
        {

        }
        bool IWinRTObject.HasUnwrappableNativeObject => this.GetType() == typeof(SceneComponent);
        IObjectReference IWinRTObject.NativeObject => _inner;

        private struct InterfaceTag<I>{};


        public SceneComponentType ComponentType => global::ABI.Microsoft.UI.Composition.Scenes.ISceneComponentMethods.get_ComponentType(_objRef_global__Microsoft_UI_Composition_Scenes_ISceneComponent);

        protected override bool IsOverridableInterface(Guid iid) => base.IsOverridableInterface(iid);

        global::System.Runtime.InteropServices.CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(ref Guid iid, out IntPtr ppv)
        {
            ppv = IntPtr.Zero;
            if (IsOverridableInterface(iid) || global::WinRT.Interop.IID.IID_IInspectable == iid)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
            }

            if (((IWinRTObject)this).NativeObject.TryAs(iid, out ppv) >= 0)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.Handled;
            }

            return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
        }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI")]
    [global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Composition.Scenes.SceneComponentCollection))]
    [global::ABI.Microsoft.UI.Composition.Scenes.SceneComponentCollectionRcwFactory]
    [global::WinRT.ProjectedRuntimeClass(typeof(global::System.Collections.Generic.IList<SceneComponent>))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.Foundation.WindowsAppSDKContract), 65536u)]
    public sealed class SceneComponentCollection : SceneObject, global::System.Collections.Generic.IList<SceneComponent>, global::System.Collections.Generic.IEnumerable<SceneComponent>, global::System.Runtime.InteropServices.ICustomQueryInterface, IWinRTObject, IEquatable<SceneComponentCollection>
    {
        private IntPtr ThisPtr => _inner == null ? (((IWinRTObject)this).NativeObject).ThisPtr : _inner.ThisPtr;

        private readonly IObjectReference _inner = null;




        private volatile IObjectReference ___objRef_global__Microsoft_UI_Composition_Scenes_ISceneComponentCollection;
        private IObjectReference Make___objRef_global__Microsoft_UI_Composition_Scenes_ISceneComponentCollection()
        {
            global::System.Threading.Interlocked.CompareExchange(ref ___objRef_global__Microsoft_UI_Composition_Scenes_ISceneComponentCollection, ((IWinRTObject)this).NativeObject.As<IUnknownVftbl>(global::ABI.Microsoft.UI.Composition.Scenes.ISceneComponentCollectionMethods.IID), null);
            return ___objRef_global__Microsoft_UI_Composition_Scenes_ISceneComponentCollection;
        }
        private IObjectReference _objRef_global__Microsoft_UI_Composition_Scenes_ISceneComponentCollection => ___objRef_global__Microsoft_UI_Composition_Scenes_ISceneComponentCollection ?? Make___objRef_global__Microsoft_UI_Composition_Scenes_ISceneComponentCollection();

        private volatile IObjectReference ___objRef_global__System_Collections_Generic_IList_SceneComponent_;
        private IObjectReference Make___objRef_global__System_Collections_Generic_IList_SceneComponent_()
        {
            _ = global::WinRT.GenericTypeInstantiations.Windows_Foundation_Collections_IVector_1_Microsoft_UI_Composition_Scenes_SceneComponent.EnsureInitialized();
            global::System.Threading.Interlocked.CompareExchange(ref ___objRef_global__System_Collections_Generic_IList_SceneComponent_, ((IWinRTObject)this).NativeObject.As<IUnknownVftbl>(global::ABI.System.Collections.Generic.IListMethods<SceneComponent>.IID), null);
            return ___objRef_global__System_Collections_Generic_IList_SceneComponent_;
        }
        private IObjectReference _objRef_global__System_Collections_Generic_IList_SceneComponent_ => ___objRef_global__System_Collections_Generic_IList_SceneComponent_ ?? Make___objRef_global__System_Collections_Generic_IList_SceneComponent_();

        private volatile IObjectReference ___objRef_global__System_Collections_Generic_IEnumerable_SceneComponent_;
        private IObjectReference Make___objRef_global__System_Collections_Generic_IEnumerable_SceneComponent_()
        {
            _ = global::WinRT.GenericTypeInstantiations.Windows_Foundation_Collections_IIterable_1_Microsoft_UI_Composition_Scenes_SceneComponent.EnsureInitialized();
            global::System.Threading.Interlocked.CompareExchange(ref ___objRef_global__System_Collections_Generic_IEnumerable_SceneComponent_, ((IWinRTObject)this).NativeObject.As<IUnknownVftbl>(global::ABI.System.Collections.Generic.IEnumerableMethods<SceneComponent>.IID), null);
            return ___objRef_global__System_Collections_Generic_IEnumerable_SceneComponent_;
        }
        private IObjectReference _objRef_global__System_Collections_Generic_IEnumerable_SceneComponent_ => ___objRef_global__System_Collections_Generic_IEnumerable_SceneComponent_ ?? Make___objRef_global__System_Collections_Generic_IEnumerable_SceneComponent_();



        public static new SceneComponentCollection FromAbi(IntPtr thisPtr)
        {
            if (thisPtr == IntPtr.Zero) return null;
            return MarshalInspectable<SceneComponentCollection>.FromAbi(thisPtr);
        }

        internal SceneComponentCollection(IObjectReference objRef)
            : base(global::WinRT.DerivedComposed.Instance)

        {
            _inner = objRef.As(global::ABI.System.Collections.Generic.IListMethods<SceneComponent>.IID);

        }


        public static bool operator ==(SceneComponentCollection x, SceneComponentCollection y) => (x?.ThisPtr ?? IntPtr.Zero) == (y?.ThisPtr ?? IntPtr.Zero);
        public static bool operator !=(SceneComponentCollection x, SceneComponentCollection y) => !(x == y);
        public bool Equals(SceneComponentCollection other) => this == other;
        public override bool Equals(object obj) => obj is SceneComponentCollection that && this == that;
        public override int GetHashCode() => ThisPtr.GetHashCode();


        bool IWinRTObject.HasUnwrappableNativeObject => true;
        IObjectReference IWinRTObject.NativeObject => _inner;

        private struct InterfaceTag<I>{};


        public int Count => global::ABI.System.Collections.Generic.IListMethods<SceneComponent>.get_Count(_objRef_global__System_Collections_Generic_IList_SceneComponent_);
        public bool IsReadOnly => global::ABI.System.Collections.Generic.IListMethods<SceneComponent>.get_IsReadOnly(_objRef_global__System_Collections_Generic_IList_SceneComponent_);
        [global::System.Runtime.CompilerServices.IndexerName("ListItem")]
        public SceneComponent this[int index] 
        {
            get => global::ABI.System.Collections.Generic.IListMethods<SceneComponent>.Indexer_Get(_objRef_global__System_Collections_Generic_IList_SceneComponent_, index);
            set => global::ABI.System.Collections.Generic.IListMethods<SceneComponent>.Indexer_Set(_objRef_global__System_Collections_Generic_IList_SceneComponent_, index, value);
        }
        public int IndexOf(SceneComponent item) => global::ABI.System.Collections.Generic.IListMethods<SceneComponent>.IndexOf(_objRef_global__System_Collections_Generic_IList_SceneComponent_, item);
        public void Insert(int index, SceneComponent item) => global::ABI.System.Collections.Generic.IListMethods<SceneComponent>.Insert(_objRef_global__System_Collections_Generic_IList_SceneComponent_, index, item);
        public void RemoveAt(int index) => global::ABI.System.Collections.Generic.IListMethods<SceneComponent>.RemoveAt(_objRef_global__System_Collections_Generic_IList_SceneComponent_, index);
        public void Add(SceneComponent item) => global::ABI.System.Collections.Generic.IListMethods<SceneComponent>.Add(_objRef_global__System_Collections_Generic_IList_SceneComponent_, item);
        public void Clear() => global::ABI.System.Collections.Generic.IListMethods<SceneComponent>.Clear(_objRef_global__System_Collections_Generic_IList_SceneComponent_);
        public bool Contains(SceneComponent item) => global::ABI.System.Collections.Generic.IListMethods<SceneComponent>.Contains(_objRef_global__System_Collections_Generic_IList_SceneComponent_, item);
        public void CopyTo(SceneComponent[] array, int arrayIndex) => global::ABI.System.Collections.Generic.IListMethods<SceneComponent>.CopyTo(_objRef_global__System_Collections_Generic_IList_SceneComponent_, array, arrayIndex);
        public bool Remove(SceneComponent item) => global::ABI.System.Collections.Generic.IListMethods<SceneComponent>.Remove(_objRef_global__System_Collections_Generic_IList_SceneComponent_, item);

        public IEnumerator<SceneComponent> GetEnumerator() => global::ABI.System.Collections.Generic.IEnumerableMethods<SceneComponent>.GetEnumerator(_objRef_global__System_Collections_Generic_IEnumerable_SceneComponent_);

        IEnumerator IEnumerable.GetEnumerator() => GetEnumerator();

        protected override bool IsOverridableInterface(Guid iid) => base.IsOverridableInterface(iid);

        global::System.Runtime.InteropServices.CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(ref Guid iid, out IntPtr ppv)
        {
            ppv = IntPtr.Zero;
            if (IsOverridableInterface(iid) || global::WinRT.Interop.IID.IID_IInspectable == iid)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
            }

            if (((IWinRTObject)this).NativeObject.TryAs(iid, out ppv) >= 0)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.Handled;
            }

            return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
        }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI")][global::WinRT.WinRTExposedType(typeof(global::WinRT.EnumTypeDetails<SceneComponentType>))][global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.Foundation.WindowsAppSDKContract), 65536u)]
    public enum SceneComponentType : int
    {
        MeshRendererComponent = unchecked((int)0),
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI")]
    [global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Composition.Scenes.SceneMaterial))]
    [global::ABI.Microsoft.UI.Composition.Scenes.SceneMaterialRcwFactory]
    [global::WinRT.ProjectedRuntimeClass(typeof(ISceneMaterial))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.Foundation.WindowsAppSDKContract), 65536u)]
    public class SceneMaterial : SceneObject, global::System.Runtime.InteropServices.ICustomQueryInterface, IWinRTObject, IEquatable<SceneMaterial>
    {
        private IntPtr ThisPtr => _inner == null ? (((IWinRTObject)this).NativeObject).ThisPtr : _inner.ThisPtr;

        private readonly IObjectReference _inner = null;




        private volatile IObjectReference ___objRef_global__Microsoft_UI_Composition_Scenes_ISceneMaterial;
        private IObjectReference Make___objRef_global__Microsoft_UI_Composition_Scenes_ISceneMaterial()
        {
            global::System.Threading.Interlocked.CompareExchange(ref ___objRef_global__Microsoft_UI_Composition_Scenes_ISceneMaterial, ((IWinRTObject)this).NativeObject.As<IUnknownVftbl>(global::ABI.Microsoft.UI.Composition.Scenes.ISceneMaterialMethods.IID), null);
            return ___objRef_global__Microsoft_UI_Composition_Scenes_ISceneMaterial;
        }
        private IObjectReference _objRef_global__Microsoft_UI_Composition_Scenes_ISceneMaterial => ___objRef_global__Microsoft_UI_Composition_Scenes_ISceneMaterial ?? Make___objRef_global__Microsoft_UI_Composition_Scenes_ISceneMaterial();



        private static class _ISceneMaterialFactoryMethods
        {}

        private static volatile IObjectReference ___objRef_global__Microsoft_UI_Composition_Scenes_ISceneMaterialFactory;
        private static IObjectReference _objRef_global__Microsoft_UI_Composition_Scenes_ISceneMaterialFactory
        {
            get
            { 
                var factory = ___objRef_global__Microsoft_UI_Composition_Scenes_ISceneMaterialFactory;
                if (factory != null && factory.IsInCurrentContext)
                {
                    return factory;
                }
                else
                {
                    return ___objRef_global__Microsoft_UI_Composition_Scenes_ISceneMaterialFactory = ActivationFactory.Get("Microsoft.UI.Composition.Scenes.SceneMaterial", global::ABI.Microsoft.UI.Composition.Scenes.ISceneMaterialFactoryMethods.IID);
                }
            }
        }

        public static new SceneMaterial FromAbi(IntPtr thisPtr)
        {
            if (thisPtr == IntPtr.Zero) return null;
            return MarshalInspectable<SceneMaterial>.FromAbi(thisPtr);
        }

        protected internal SceneMaterial(IObjectReference objRef)
            : base(global::WinRT.DerivedComposed.Instance)

        {
            _inner = objRef.As(global::ABI.Microsoft.UI.Composition.Scenes.ISceneMaterialMethods.IID);

        }


        public static bool operator ==(SceneMaterial x, SceneMaterial y) => (x?.ThisPtr ?? IntPtr.Zero) == (y?.ThisPtr ?? IntPtr.Zero);
        public static bool operator !=(SceneMaterial x, SceneMaterial y) => !(x == y);
        public bool Equals(SceneMaterial other) => this == other;
        public override bool Equals(object obj) => obj is SceneMaterial that && this == that;
        public override int GetHashCode() => ThisPtr.GetHashCode();


        protected SceneMaterial(global::WinRT.DerivedComposed _):base(_)
        {

        }
        bool IWinRTObject.HasUnwrappableNativeObject => this.GetType() == typeof(SceneMaterial);
        IObjectReference IWinRTObject.NativeObject => _inner;

        private struct InterfaceTag<I>{};


        protected override bool IsOverridableInterface(Guid iid) => base.IsOverridableInterface(iid);

        global::System.Runtime.InteropServices.CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(ref Guid iid, out IntPtr ppv)
        {
            ppv = IntPtr.Zero;
            if (IsOverridableInterface(iid) || global::WinRT.Interop.IID.IID_IInspectable == iid)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
            }

            if (((IWinRTObject)this).NativeObject.TryAs(iid, out ppv) >= 0)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.Handled;
            }

            return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
        }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI")]
    [global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Composition.Scenes.SceneMaterialInput))]
    [global::ABI.Microsoft.UI.Composition.Scenes.SceneMaterialInputRcwFactory]
    [global::WinRT.ProjectedRuntimeClass(typeof(ISceneMaterialInput))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.Foundation.WindowsAppSDKContract), 65536u)]
    public class SceneMaterialInput : SceneObject, global::System.Runtime.InteropServices.ICustomQueryInterface, IWinRTObject, IEquatable<SceneMaterialInput>
    {
        private IntPtr ThisPtr => _inner == null ? (((IWinRTObject)this).NativeObject).ThisPtr : _inner.ThisPtr;

        private readonly IObjectReference _inner = null;




        private volatile IObjectReference ___objRef_global__Microsoft_UI_Composition_Scenes_ISceneMaterialInput;
        private IObjectReference Make___objRef_global__Microsoft_UI_Composition_Scenes_ISceneMaterialInput()
        {
            global::System.Threading.Interlocked.CompareExchange(ref ___objRef_global__Microsoft_UI_Composition_Scenes_ISceneMaterialInput, ((IWinRTObject)this).NativeObject.As<IUnknownVftbl>(global::ABI.Microsoft.UI.Composition.Scenes.ISceneMaterialInputMethods.IID), null);
            return ___objRef_global__Microsoft_UI_Composition_Scenes_ISceneMaterialInput;
        }
        private IObjectReference _objRef_global__Microsoft_UI_Composition_Scenes_ISceneMaterialInput => ___objRef_global__Microsoft_UI_Composition_Scenes_ISceneMaterialInput ?? Make___objRef_global__Microsoft_UI_Composition_Scenes_ISceneMaterialInput();



        private static class _ISceneMaterialInputFactoryMethods
        {}

        private static volatile IObjectReference ___objRef_global__Microsoft_UI_Composition_Scenes_ISceneMaterialInputFactory;
        private static IObjectReference _objRef_global__Microsoft_UI_Composition_Scenes_ISceneMaterialInputFactory
        {
            get
            { 
                var factory = ___objRef_global__Microsoft_UI_Composition_Scenes_ISceneMaterialInputFactory;
                if (factory != null && factory.IsInCurrentContext)
                {
                    return factory;
                }
                else
                {
                    return ___objRef_global__Microsoft_UI_Composition_Scenes_ISceneMaterialInputFactory = ActivationFactory.Get("Microsoft.UI.Composition.Scenes.SceneMaterialInput", global::ABI.Microsoft.UI.Composition.Scenes.ISceneMaterialInputFactoryMethods.IID);
                }
            }
        }

        public static new SceneMaterialInput FromAbi(IntPtr thisPtr)
        {
            if (thisPtr == IntPtr.Zero) return null;
            return MarshalInspectable<SceneMaterialInput>.FromAbi(thisPtr);
        }

        protected internal SceneMaterialInput(IObjectReference objRef)
            : base(global::WinRT.DerivedComposed.Instance)

        {
            _inner = objRef.As(global::ABI.Microsoft.UI.Composition.Scenes.ISceneMaterialInputMethods.IID);

        }


        public static bool operator ==(SceneMaterialInput x, SceneMaterialInput y) => (x?.ThisPtr ?? IntPtr.Zero) == (y?.ThisPtr ?? IntPtr.Zero);
        public static bool operator !=(SceneMaterialInput x, SceneMaterialInput y) => !(x == y);
        public bool Equals(SceneMaterialInput other) => this == other;
        public override bool Equals(object obj) => obj is SceneMaterialInput that && this == that;
        public override int GetHashCode() => ThisPtr.GetHashCode();


        protected SceneMaterialInput(global::WinRT.DerivedComposed _):base(_)
        {

        }
        bool IWinRTObject.HasUnwrappableNativeObject => this.GetType() == typeof(SceneMaterialInput);
        IObjectReference IWinRTObject.NativeObject => _inner;

        private struct InterfaceTag<I>{};


        protected override bool IsOverridableInterface(Guid iid) => base.IsOverridableInterface(iid);

        global::System.Runtime.InteropServices.CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(ref Guid iid, out IntPtr ppv)
        {
            ppv = IntPtr.Zero;
            if (IsOverridableInterface(iid) || global::WinRT.Interop.IID.IID_IInspectable == iid)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
            }

            if (((IWinRTObject)this).NativeObject.TryAs(iid, out ppv) >= 0)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.Handled;
            }

            return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
        }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI")]
    [global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Composition.Scenes.SceneMesh))]
    [global::ABI.Microsoft.UI.Composition.Scenes.SceneMeshRcwFactory]
    [global::WinRT.ProjectedRuntimeClass(typeof(ISceneMesh))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.Foundation.WindowsAppSDKContract), 65536u)]
    public sealed class SceneMesh : SceneObject, global::System.Runtime.InteropServices.ICustomQueryInterface, IWinRTObject, IEquatable<SceneMesh>
    {
        private IntPtr ThisPtr => _inner == null ? (((IWinRTObject)this).NativeObject).ThisPtr : _inner.ThisPtr;

        private readonly IObjectReference _inner = null;



        private IObjectReference _objRef_global__Microsoft_UI_Composition_Scenes_ISceneMesh => _inner;


        public static new I As<I>() => ActivationFactory.Get("Microsoft.UI.Composition.Scenes.SceneMesh").AsInterface<I>();

        private static volatile IObjectReference ___objRef_global__Microsoft_UI_Composition_Scenes_ISceneMeshStatics;
        private static IObjectReference _objRef_global__Microsoft_UI_Composition_Scenes_ISceneMeshStatics
        {
            get
            { 
                var factory = ___objRef_global__Microsoft_UI_Composition_Scenes_ISceneMeshStatics;
                if (factory != null && factory.IsInCurrentContext)
                {
                    return factory;
                }
                else
                {
                    return ___objRef_global__Microsoft_UI_Composition_Scenes_ISceneMeshStatics = ActivationFactory.Get("Microsoft.UI.Composition.Scenes.SceneMesh", global::ABI.Microsoft.UI.Composition.Scenes.ISceneMeshStaticsMethods.IID);
                }
            }
        }

        public static SceneMesh Create(global::Microsoft.UI.Composition.Compositor compositor) => global::ABI.Microsoft.UI.Composition.Scenes.ISceneMeshStaticsMethods.Create(_objRef_global__Microsoft_UI_Composition_Scenes_ISceneMeshStatics, compositor);

        public static new SceneMesh FromAbi(IntPtr thisPtr)
        {
            if (thisPtr == IntPtr.Zero) return null;
            return MarshalInspectable<SceneMesh>.FromAbi(thisPtr);
        }

        internal SceneMesh(IObjectReference objRef)
            : base(global::WinRT.DerivedComposed.Instance)

        {
            _inner = objRef.As(global::ABI.Microsoft.UI.Composition.Scenes.ISceneMeshMethods.IID);

        }


        public static bool operator ==(SceneMesh x, SceneMesh y) => (x?.ThisPtr ?? IntPtr.Zero) == (y?.ThisPtr ?? IntPtr.Zero);
        public static bool operator !=(SceneMesh x, SceneMesh y) => !(x == y);
        public bool Equals(SceneMesh other) => this == other;
        public override bool Equals(object obj) => obj is SceneMesh that && this == that;
        public override int GetHashCode() => ThisPtr.GetHashCode();


        bool IWinRTObject.HasUnwrappableNativeObject => true;
        IObjectReference IWinRTObject.NativeObject => _inner;

        private struct InterfaceTag<I>{};


        public void FillMeshAttribute(SceneAttributeSemantic semantic, global::Microsoft.Graphics.DirectX.DirectXPixelFormat format, global::Windows.Foundation.MemoryBuffer memory) => global::ABI.Microsoft.UI.Composition.Scenes.ISceneMeshMethods.FillMeshAttribute(_objRef_global__Microsoft_UI_Composition_Scenes_ISceneMesh, semantic, format, memory);

        public SceneBoundingBox Bounds => global::ABI.Microsoft.UI.Composition.Scenes.ISceneMeshMethods.get_Bounds(_objRef_global__Microsoft_UI_Composition_Scenes_ISceneMesh);

        public global::Microsoft.Graphics.DirectX.DirectXPrimitiveTopology PrimitiveTopology
        {
            get => global::ABI.Microsoft.UI.Composition.Scenes.ISceneMeshMethods.get_PrimitiveTopology(_objRef_global__Microsoft_UI_Composition_Scenes_ISceneMesh);
            set => global::ABI.Microsoft.UI.Composition.Scenes.ISceneMeshMethods.set_PrimitiveTopology(_objRef_global__Microsoft_UI_Composition_Scenes_ISceneMesh, value);
        }

        protected override bool IsOverridableInterface(Guid iid) => base.IsOverridableInterface(iid);

        global::System.Runtime.InteropServices.CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(ref Guid iid, out IntPtr ppv)
        {
            ppv = IntPtr.Zero;
            if (IsOverridableInterface(iid) || global::WinRT.Interop.IID.IID_IInspectable == iid)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
            }

            if (((IWinRTObject)this).NativeObject.TryAs(iid, out ppv) >= 0)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.Handled;
            }

            return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
        }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI")]
    [global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Composition.Scenes.SceneMeshMaterialAttributeMap))]
    [global::ABI.Microsoft.UI.Composition.Scenes.SceneMeshMaterialAttributeMapRcwFactory]
    [global::WinRT.ProjectedRuntimeClass(typeof(ISceneMeshMaterialAttributeMap))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.Foundation.WindowsAppSDKContract), 65536u)]
    public sealed class SceneMeshMaterialAttributeMap : SceneObject, global::System.Collections.Generic.IDictionary<string, SceneAttributeSemantic>, global::System.Collections.Generic.IEnumerable<global::System.Collections.Generic.KeyValuePair<string, SceneAttributeSemantic>>, global::System.Runtime.InteropServices.ICustomQueryInterface, IWinRTObject, IEquatable<SceneMeshMaterialAttributeMap>
    {
        private IntPtr ThisPtr => _inner == null ? (((IWinRTObject)this).NativeObject).ThisPtr : _inner.ThisPtr;

        private readonly IObjectReference _inner = null;



        private IObjectReference _objRef_global__Microsoft_UI_Composition_Scenes_ISceneMeshMaterialAttributeMap => _inner;
        private volatile IObjectReference ___objRef_global__System_Collections_Generic_IDictionary_string__SceneAttributeSemantic_;
        private IObjectReference Make___objRef_global__System_Collections_Generic_IDictionary_string__SceneAttributeSemantic_()
        {
            _ = global::WinRT.GenericTypeInstantiations.Windows_Foundation_Collections_IMap_2_String__Microsoft_UI_Composition_Scenes_SceneAttributeSemantic.EnsureInitialized();
            global::System.Threading.Interlocked.CompareExchange(ref ___objRef_global__System_Collections_Generic_IDictionary_string__SceneAttributeSemantic_, ((IWinRTObject)this).NativeObject.As<IUnknownVftbl>(global::ABI.System.Collections.Generic.IDictionaryMethods<string, SceneAttributeSemantic>.IID), null);
            return ___objRef_global__System_Collections_Generic_IDictionary_string__SceneAttributeSemantic_;
        }
        private IObjectReference _objRef_global__System_Collections_Generic_IDictionary_string__SceneAttributeSemantic_ => ___objRef_global__System_Collections_Generic_IDictionary_string__SceneAttributeSemantic_ ?? Make___objRef_global__System_Collections_Generic_IDictionary_string__SceneAttributeSemantic_();

        private volatile IObjectReference ___objRef_global__System_Collections_Generic_IEnumerable_global__System_Collections_Generic_KeyValuePair_string__SceneAttributeSemantic__;
        private IObjectReference Make___objRef_global__System_Collections_Generic_IEnumerable_global__System_Collections_Generic_KeyValuePair_string__SceneAttributeSemantic__()
        {
            _ = global::WinRT.GenericTypeInstantiations.Windows_Foundation_Collections_IIterable_1_Windows_Foundation_Collections_IKeyValuePair_2_String__Microsoft_UI_Composition_Scenes_SceneAttributeSemantic_.EnsureInitialized();
            global::System.Threading.Interlocked.CompareExchange(ref ___objRef_global__System_Collections_Generic_IEnumerable_global__System_Collections_Generic_KeyValuePair_string__SceneAttributeSemantic__, ((IWinRTObject)this).NativeObject.As<IUnknownVftbl>(global::ABI.System.Collections.Generic.IEnumerableMethods<global::System.Collections.Generic.KeyValuePair<string, SceneAttributeSemantic>>.IID), null);
            return ___objRef_global__System_Collections_Generic_IEnumerable_global__System_Collections_Generic_KeyValuePair_string__SceneAttributeSemantic__;
        }
        private IObjectReference _objRef_global__System_Collections_Generic_IEnumerable_global__System_Collections_Generic_KeyValuePair_string__SceneAttributeSemantic__ => ___objRef_global__System_Collections_Generic_IEnumerable_global__System_Collections_Generic_KeyValuePair_string__SceneAttributeSemantic__ ?? Make___objRef_global__System_Collections_Generic_IEnumerable_global__System_Collections_Generic_KeyValuePair_string__SceneAttributeSemantic__();



        public static new SceneMeshMaterialAttributeMap FromAbi(IntPtr thisPtr)
        {
            if (thisPtr == IntPtr.Zero) return null;
            return MarshalInspectable<SceneMeshMaterialAttributeMap>.FromAbi(thisPtr);
        }

        internal SceneMeshMaterialAttributeMap(IObjectReference objRef)
            : base(global::WinRT.DerivedComposed.Instance)

        {
            _inner = objRef.As(global::ABI.Microsoft.UI.Composition.Scenes.ISceneMeshMaterialAttributeMapMethods.IID);

        }


        public static bool operator ==(SceneMeshMaterialAttributeMap x, SceneMeshMaterialAttributeMap y) => (x?.ThisPtr ?? IntPtr.Zero) == (y?.ThisPtr ?? IntPtr.Zero);
        public static bool operator !=(SceneMeshMaterialAttributeMap x, SceneMeshMaterialAttributeMap y) => !(x == y);
        public bool Equals(SceneMeshMaterialAttributeMap other) => this == other;
        public override bool Equals(object obj) => obj is SceneMeshMaterialAttributeMap that && this == that;
        public override int GetHashCode() => ThisPtr.GetHashCode();


        bool IWinRTObject.HasUnwrappableNativeObject => true;
        IObjectReference IWinRTObject.NativeObject => _inner;

        private struct InterfaceTag<I>{};


        public ICollection<string> Keys => global::ABI.System.Collections.Generic.IDictionaryMethods<string, SceneAttributeSemantic>.get_Keys(_objRef_global__System_Collections_Generic_IDictionary_string__SceneAttributeSemantic_);
        public ICollection<SceneAttributeSemantic> Values => global::ABI.System.Collections.Generic.IDictionaryMethods<string, SceneAttributeSemantic>.get_Values(_objRef_global__System_Collections_Generic_IDictionary_string__SceneAttributeSemantic_);
        public int Count => global::ABI.System.Collections.Generic.IDictionaryMethods<string, SceneAttributeSemantic>.get_Count(_objRef_global__System_Collections_Generic_IDictionary_string__SceneAttributeSemantic_);
        public bool IsReadOnly => global::ABI.System.Collections.Generic.IDictionaryMethods<string, SceneAttributeSemantic>.get_IsReadOnly(_objRef_global__System_Collections_Generic_IDictionary_string__SceneAttributeSemantic_);
        public SceneAttributeSemantic this[string key] 
        {
            get => global::ABI.System.Collections.Generic.IDictionaryMethods<string, SceneAttributeSemantic>.Indexer_Get(_objRef_global__System_Collections_Generic_IDictionary_string__SceneAttributeSemantic_, null, key);
            set => global::ABI.System.Collections.Generic.IDictionaryMethods<string, SceneAttributeSemantic>.Indexer_Set(_objRef_global__System_Collections_Generic_IDictionary_string__SceneAttributeSemantic_, key, value);
        }
        public void Add(string key, SceneAttributeSemantic value) => global::ABI.System.Collections.Generic.IDictionaryMethods<string, SceneAttributeSemantic>.Add(_objRef_global__System_Collections_Generic_IDictionary_string__SceneAttributeSemantic_, key, value);
        public bool ContainsKey(string key) => global::ABI.System.Collections.Generic.IDictionaryMethods<string, SceneAttributeSemantic>.ContainsKey(_objRef_global__System_Collections_Generic_IDictionary_string__SceneAttributeSemantic_, key);
        public bool Remove(string key) => global::ABI.System.Collections.Generic.IDictionaryMethods<string, SceneAttributeSemantic>.Remove(_objRef_global__System_Collections_Generic_IDictionary_string__SceneAttributeSemantic_, key);
        public bool TryGetValue(string key, out SceneAttributeSemantic value) => global::ABI.System.Collections.Generic.IDictionaryMethods<string, SceneAttributeSemantic>.TryGetValue(_objRef_global__System_Collections_Generic_IDictionary_string__SceneAttributeSemantic_, null, key, out value);
        public void Add(KeyValuePair<string, SceneAttributeSemantic> item) => global::ABI.System.Collections.Generic.IDictionaryMethods<string, SceneAttributeSemantic>.Add(_objRef_global__System_Collections_Generic_IDictionary_string__SceneAttributeSemantic_, item);
        public void Clear() => global::ABI.System.Collections.Generic.IDictionaryMethods<string, SceneAttributeSemantic>.Clear(_objRef_global__System_Collections_Generic_IDictionary_string__SceneAttributeSemantic_);
        public bool Contains(KeyValuePair<string, SceneAttributeSemantic> item) => global::ABI.System.Collections.Generic.IDictionaryMethods<string, SceneAttributeSemantic>.Contains(_objRef_global__System_Collections_Generic_IDictionary_string__SceneAttributeSemantic_, null, item);
        public void CopyTo(KeyValuePair<string, SceneAttributeSemantic>[] array, int arrayIndex) => global::ABI.System.Collections.Generic.IDictionaryMethods<string, SceneAttributeSemantic>.CopyTo(_objRef_global__System_Collections_Generic_IDictionary_string__SceneAttributeSemantic_, _objRef_global__System_Collections_Generic_IEnumerable_global__System_Collections_Generic_KeyValuePair_string__SceneAttributeSemantic__, array, arrayIndex);
        bool ICollection<KeyValuePair<string, SceneAttributeSemantic>>.Remove(KeyValuePair<string, SceneAttributeSemantic> item) => global::ABI.System.Collections.Generic.IDictionaryMethods<string, SceneAttributeSemantic>.Remove(_objRef_global__System_Collections_Generic_IDictionary_string__SceneAttributeSemantic_, item);

        public IEnumerator<global::System.Collections.Generic.KeyValuePair<string, SceneAttributeSemantic>> GetEnumerator() => global::ABI.System.Collections.Generic.IEnumerableMethods<global::System.Collections.Generic.KeyValuePair<string, SceneAttributeSemantic>>.GetEnumerator(_objRef_global__System_Collections_Generic_IEnumerable_global__System_Collections_Generic_KeyValuePair_string__SceneAttributeSemantic__);

        IEnumerator IEnumerable.GetEnumerator() => GetEnumerator();

        protected override bool IsOverridableInterface(Guid iid) => base.IsOverridableInterface(iid);

        global::System.Runtime.InteropServices.CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(ref Guid iid, out IntPtr ppv)
        {
            ppv = IntPtr.Zero;
            if (IsOverridableInterface(iid) || global::WinRT.Interop.IID.IID_IInspectable == iid)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
            }

            if (((IWinRTObject)this).NativeObject.TryAs(iid, out ppv) >= 0)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.Handled;
            }

            return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
        }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI")]
    [global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Composition.Scenes.SceneMeshRendererComponent))]
    [global::ABI.Microsoft.UI.Composition.Scenes.SceneMeshRendererComponentRcwFactory]
    [global::WinRT.ProjectedRuntimeClass(typeof(ISceneMeshRendererComponent))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.Foundation.WindowsAppSDKContract), 65536u)]
    public sealed class SceneMeshRendererComponent : SceneRendererComponent, global::System.Runtime.InteropServices.ICustomQueryInterface, IWinRTObject, IEquatable<SceneMeshRendererComponent>
    {
        private IntPtr ThisPtr => _inner == null ? (((IWinRTObject)this).NativeObject).ThisPtr : _inner.ThisPtr;

        private readonly IObjectReference _inner = null;



        private IObjectReference _objRef_global__Microsoft_UI_Composition_Scenes_ISceneMeshRendererComponent => _inner;


        public static new I As<I>() => ActivationFactory.Get("Microsoft.UI.Composition.Scenes.SceneMeshRendererComponent").AsInterface<I>();

        private static volatile IObjectReference ___objRef_global__Microsoft_UI_Composition_Scenes_ISceneMeshRendererComponentStatics;
        private static IObjectReference _objRef_global__Microsoft_UI_Composition_Scenes_ISceneMeshRendererComponentStatics
        {
            get
            { 
                var factory = ___objRef_global__Microsoft_UI_Composition_Scenes_ISceneMeshRendererComponentStatics;
                if (factory != null && factory.IsInCurrentContext)
                {
                    return factory;
                }
                else
                {
                    return ___objRef_global__Microsoft_UI_Composition_Scenes_ISceneMeshRendererComponentStatics = ActivationFactory.Get("Microsoft.UI.Composition.Scenes.SceneMeshRendererComponent", global::ABI.Microsoft.UI.Composition.Scenes.ISceneMeshRendererComponentStaticsMethods.IID);
                }
            }
        }

        public static SceneMeshRendererComponent Create(global::Microsoft.UI.Composition.Compositor compositor) => global::ABI.Microsoft.UI.Composition.Scenes.ISceneMeshRendererComponentStaticsMethods.Create(_objRef_global__Microsoft_UI_Composition_Scenes_ISceneMeshRendererComponentStatics, compositor);

        public static new SceneMeshRendererComponent FromAbi(IntPtr thisPtr)
        {
            if (thisPtr == IntPtr.Zero) return null;
            return MarshalInspectable<SceneMeshRendererComponent>.FromAbi(thisPtr);
        }

        internal SceneMeshRendererComponent(IObjectReference objRef)
            : base(global::WinRT.DerivedComposed.Instance)

        {
            _inner = objRef.As(global::ABI.Microsoft.UI.Composition.Scenes.ISceneMeshRendererComponentMethods.IID);

        }


        public static bool operator ==(SceneMeshRendererComponent x, SceneMeshRendererComponent y) => (x?.ThisPtr ?? IntPtr.Zero) == (y?.ThisPtr ?? IntPtr.Zero);
        public static bool operator !=(SceneMeshRendererComponent x, SceneMeshRendererComponent y) => !(x == y);
        public bool Equals(SceneMeshRendererComponent other) => this == other;
        public override bool Equals(object obj) => obj is SceneMeshRendererComponent that && this == that;
        public override int GetHashCode() => ThisPtr.GetHashCode();


        bool IWinRTObject.HasUnwrappableNativeObject => true;
        IObjectReference IWinRTObject.NativeObject => _inner;

        private struct InterfaceTag<I>{};


        public SceneMaterial Material
        {
            get => global::ABI.Microsoft.UI.Composition.Scenes.ISceneMeshRendererComponentMethods.get_Material(_objRef_global__Microsoft_UI_Composition_Scenes_ISceneMeshRendererComponent);
            set => global::ABI.Microsoft.UI.Composition.Scenes.ISceneMeshRendererComponentMethods.set_Material(_objRef_global__Microsoft_UI_Composition_Scenes_ISceneMeshRendererComponent, value);
        }

        public SceneMesh Mesh
        {
            get => global::ABI.Microsoft.UI.Composition.Scenes.ISceneMeshRendererComponentMethods.get_Mesh(_objRef_global__Microsoft_UI_Composition_Scenes_ISceneMeshRendererComponent);
            set => global::ABI.Microsoft.UI.Composition.Scenes.ISceneMeshRendererComponentMethods.set_Mesh(_objRef_global__Microsoft_UI_Composition_Scenes_ISceneMeshRendererComponent, value);
        }

        public SceneMeshMaterialAttributeMap UVMappings => global::ABI.Microsoft.UI.Composition.Scenes.ISceneMeshRendererComponentMethods.get_UVMappings(_objRef_global__Microsoft_UI_Composition_Scenes_ISceneMeshRendererComponent);

        protected override bool IsOverridableInterface(Guid iid) => base.IsOverridableInterface(iid);

        global::System.Runtime.InteropServices.CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(ref Guid iid, out IntPtr ppv)
        {
            ppv = IntPtr.Zero;
            if (IsOverridableInterface(iid) || global::WinRT.Interop.IID.IID_IInspectable == iid)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
            }

            if (((IWinRTObject)this).NativeObject.TryAs(iid, out ppv) >= 0)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.Handled;
            }

            return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
        }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI")]
    [global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Composition.Scenes.SceneMetallicRoughnessMaterial))]
    [global::ABI.Microsoft.UI.Composition.Scenes.SceneMetallicRoughnessMaterialRcwFactory]
    [global::WinRT.ProjectedRuntimeClass(typeof(ISceneMetallicRoughnessMaterial))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.Foundation.WindowsAppSDKContract), 65536u)]
    public sealed class SceneMetallicRoughnessMaterial : ScenePbrMaterial, global::System.Runtime.InteropServices.ICustomQueryInterface, IWinRTObject, IEquatable<SceneMetallicRoughnessMaterial>
    {
        private IntPtr ThisPtr => _inner == null ? (((IWinRTObject)this).NativeObject).ThisPtr : _inner.ThisPtr;

        private readonly IObjectReference _inner = null;



        private IObjectReference _objRef_global__Microsoft_UI_Composition_Scenes_ISceneMetallicRoughnessMaterial => _inner;


        public static new I As<I>() => ActivationFactory.Get("Microsoft.UI.Composition.Scenes.SceneMetallicRoughnessMaterial").AsInterface<I>();

        private static volatile IObjectReference ___objRef_global__Microsoft_UI_Composition_Scenes_ISceneMetallicRoughnessMaterialStatics;
        private static IObjectReference _objRef_global__Microsoft_UI_Composition_Scenes_ISceneMetallicRoughnessMaterialStatics
        {
            get
            { 
                var factory = ___objRef_global__Microsoft_UI_Composition_Scenes_ISceneMetallicRoughnessMaterialStatics;
                if (factory != null && factory.IsInCurrentContext)
                {
                    return factory;
                }
                else
                {
                    return ___objRef_global__Microsoft_UI_Composition_Scenes_ISceneMetallicRoughnessMaterialStatics = ActivationFactory.Get("Microsoft.UI.Composition.Scenes.SceneMetallicRoughnessMaterial", global::ABI.Microsoft.UI.Composition.Scenes.ISceneMetallicRoughnessMaterialStaticsMethods.IID);
                }
            }
        }

        public static SceneMetallicRoughnessMaterial Create(global::Microsoft.UI.Composition.Compositor compositor) => global::ABI.Microsoft.UI.Composition.Scenes.ISceneMetallicRoughnessMaterialStaticsMethods.Create(_objRef_global__Microsoft_UI_Composition_Scenes_ISceneMetallicRoughnessMaterialStatics, compositor);

        public static new SceneMetallicRoughnessMaterial FromAbi(IntPtr thisPtr)
        {
            if (thisPtr == IntPtr.Zero) return null;
            return MarshalInspectable<SceneMetallicRoughnessMaterial>.FromAbi(thisPtr);
        }

        internal SceneMetallicRoughnessMaterial(IObjectReference objRef)
            : base(global::WinRT.DerivedComposed.Instance)

        {
            _inner = objRef.As(global::ABI.Microsoft.UI.Composition.Scenes.ISceneMetallicRoughnessMaterialMethods.IID);

        }


        public static bool operator ==(SceneMetallicRoughnessMaterial x, SceneMetallicRoughnessMaterial y) => (x?.ThisPtr ?? IntPtr.Zero) == (y?.ThisPtr ?? IntPtr.Zero);
        public static bool operator !=(SceneMetallicRoughnessMaterial x, SceneMetallicRoughnessMaterial y) => !(x == y);
        public bool Equals(SceneMetallicRoughnessMaterial other) => this == other;
        public override bool Equals(object obj) => obj is SceneMetallicRoughnessMaterial that && this == that;
        public override int GetHashCode() => ThisPtr.GetHashCode();


        bool IWinRTObject.HasUnwrappableNativeObject => true;
        IObjectReference IWinRTObject.NativeObject => _inner;

        private struct InterfaceTag<I>{};


        public global::System.Numerics.Vector4 BaseColorFactor
        {
            get => global::ABI.Microsoft.UI.Composition.Scenes.ISceneMetallicRoughnessMaterialMethods.get_BaseColorFactor(_objRef_global__Microsoft_UI_Composition_Scenes_ISceneMetallicRoughnessMaterial);
            set => global::ABI.Microsoft.UI.Composition.Scenes.ISceneMetallicRoughnessMaterialMethods.set_BaseColorFactor(_objRef_global__Microsoft_UI_Composition_Scenes_ISceneMetallicRoughnessMaterial, value);
        }

        public SceneMaterialInput BaseColorInput
        {
            get => global::ABI.Microsoft.UI.Composition.Scenes.ISceneMetallicRoughnessMaterialMethods.get_BaseColorInput(_objRef_global__Microsoft_UI_Composition_Scenes_ISceneMetallicRoughnessMaterial);
            set => global::ABI.Microsoft.UI.Composition.Scenes.ISceneMetallicRoughnessMaterialMethods.set_BaseColorInput(_objRef_global__Microsoft_UI_Composition_Scenes_ISceneMetallicRoughnessMaterial, value);
        }

        public float MetallicFactor
        {
            get => global::ABI.Microsoft.UI.Composition.Scenes.ISceneMetallicRoughnessMaterialMethods.get_MetallicFactor(_objRef_global__Microsoft_UI_Composition_Scenes_ISceneMetallicRoughnessMaterial);
            set => global::ABI.Microsoft.UI.Composition.Scenes.ISceneMetallicRoughnessMaterialMethods.set_MetallicFactor(_objRef_global__Microsoft_UI_Composition_Scenes_ISceneMetallicRoughnessMaterial, value);
        }

        public SceneMaterialInput MetallicRoughnessInput
        {
            get => global::ABI.Microsoft.UI.Composition.Scenes.ISceneMetallicRoughnessMaterialMethods.get_MetallicRoughnessInput(_objRef_global__Microsoft_UI_Composition_Scenes_ISceneMetallicRoughnessMaterial);
            set => global::ABI.Microsoft.UI.Composition.Scenes.ISceneMetallicRoughnessMaterialMethods.set_MetallicRoughnessInput(_objRef_global__Microsoft_UI_Composition_Scenes_ISceneMetallicRoughnessMaterial, value);
        }

        public float RoughnessFactor
        {
            get => global::ABI.Microsoft.UI.Composition.Scenes.ISceneMetallicRoughnessMaterialMethods.get_RoughnessFactor(_objRef_global__Microsoft_UI_Composition_Scenes_ISceneMetallicRoughnessMaterial);
            set => global::ABI.Microsoft.UI.Composition.Scenes.ISceneMetallicRoughnessMaterialMethods.set_RoughnessFactor(_objRef_global__Microsoft_UI_Composition_Scenes_ISceneMetallicRoughnessMaterial, value);
        }

        protected override bool IsOverridableInterface(Guid iid) => base.IsOverridableInterface(iid);

        global::System.Runtime.InteropServices.CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(ref Guid iid, out IntPtr ppv)
        {
            ppv = IntPtr.Zero;
            if (IsOverridableInterface(iid) || global::WinRT.Interop.IID.IID_IInspectable == iid)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
            }

            if (((IWinRTObject)this).NativeObject.TryAs(iid, out ppv) >= 0)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.Handled;
            }

            return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
        }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI")]
    [global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Composition.Scenes.SceneModelTransform))]
    [global::ABI.Microsoft.UI.Composition.Scenes.SceneModelTransformRcwFactory]
    [global::WinRT.ProjectedRuntimeClass(typeof(ISceneModelTransform))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.Foundation.WindowsAppSDKContract), 65536u)]
    public sealed class SceneModelTransform : global::Microsoft.UI.Composition.CompositionTransform, global::System.Runtime.InteropServices.ICustomQueryInterface, IWinRTObject, IEquatable<SceneModelTransform>
    {
        private IntPtr ThisPtr => _inner == null ? (((IWinRTObject)this).NativeObject).ThisPtr : _inner.ThisPtr;

        private readonly IObjectReference _inner = null;



        private IObjectReference _objRef_global__Microsoft_UI_Composition_Scenes_ISceneModelTransform => _inner;


        public static new SceneModelTransform FromAbi(IntPtr thisPtr)
        {
            if (thisPtr == IntPtr.Zero) return null;
            return MarshalInspectable<SceneModelTransform>.FromAbi(thisPtr);
        }

        internal SceneModelTransform(IObjectReference objRef)
            : base(global::WinRT.DerivedComposed.Instance)

        {
            _inner = objRef.As(global::ABI.Microsoft.UI.Composition.Scenes.ISceneModelTransformMethods.IID);

        }


        public static bool operator ==(SceneModelTransform x, SceneModelTransform y) => (x?.ThisPtr ?? IntPtr.Zero) == (y?.ThisPtr ?? IntPtr.Zero);
        public static bool operator !=(SceneModelTransform x, SceneModelTransform y) => !(x == y);
        public bool Equals(SceneModelTransform other) => this == other;
        public override bool Equals(object obj) => obj is SceneModelTransform that && this == that;
        public override int GetHashCode() => ThisPtr.GetHashCode();


        bool IWinRTObject.HasUnwrappableNativeObject => true;
        IObjectReference IWinRTObject.NativeObject => _inner;

        private struct InterfaceTag<I>{};


        public global::System.Numerics.Quaternion Orientation
        {
            get => global::ABI.Microsoft.UI.Composition.Scenes.ISceneModelTransformMethods.get_Orientation(_objRef_global__Microsoft_UI_Composition_Scenes_ISceneModelTransform);
            set => global::ABI.Microsoft.UI.Composition.Scenes.ISceneModelTransformMethods.set_Orientation(_objRef_global__Microsoft_UI_Composition_Scenes_ISceneModelTransform, value);
        }

        public float RotationAngle
        {
            get => global::ABI.Microsoft.UI.Composition.Scenes.ISceneModelTransformMethods.get_RotationAngle(_objRef_global__Microsoft_UI_Composition_Scenes_ISceneModelTransform);
            set => global::ABI.Microsoft.UI.Composition.Scenes.ISceneModelTransformMethods.set_RotationAngle(_objRef_global__Microsoft_UI_Composition_Scenes_ISceneModelTransform, value);
        }

        public float RotationAngleInDegrees
        {
            get => global::ABI.Microsoft.UI.Composition.Scenes.ISceneModelTransformMethods.get_RotationAngleInDegrees(_objRef_global__Microsoft_UI_Composition_Scenes_ISceneModelTransform);
            set => global::ABI.Microsoft.UI.Composition.Scenes.ISceneModelTransformMethods.set_RotationAngleInDegrees(_objRef_global__Microsoft_UI_Composition_Scenes_ISceneModelTransform, value);
        }

        public global::System.Numerics.Vector3 RotationAxis
        {
            get => global::ABI.Microsoft.UI.Composition.Scenes.ISceneModelTransformMethods.get_RotationAxis(_objRef_global__Microsoft_UI_Composition_Scenes_ISceneModelTransform);
            set => global::ABI.Microsoft.UI.Composition.Scenes.ISceneModelTransformMethods.set_RotationAxis(_objRef_global__Microsoft_UI_Composition_Scenes_ISceneModelTransform, value);
        }

        public global::System.Numerics.Vector3 Scale
        {
            get => global::ABI.Microsoft.UI.Composition.Scenes.ISceneModelTransformMethods.get_Scale(_objRef_global__Microsoft_UI_Composition_Scenes_ISceneModelTransform);
            set => global::ABI.Microsoft.UI.Composition.Scenes.ISceneModelTransformMethods.set_Scale(_objRef_global__Microsoft_UI_Composition_Scenes_ISceneModelTransform, value);
        }

        public global::System.Numerics.Vector3 Translation
        {
            get => global::ABI.Microsoft.UI.Composition.Scenes.ISceneModelTransformMethods.get_Translation(_objRef_global__Microsoft_UI_Composition_Scenes_ISceneModelTransform);
            set => global::ABI.Microsoft.UI.Composition.Scenes.ISceneModelTransformMethods.set_Translation(_objRef_global__Microsoft_UI_Composition_Scenes_ISceneModelTransform, value);
        }

        protected override bool IsOverridableInterface(Guid iid) => base.IsOverridableInterface(iid);

        global::System.Runtime.InteropServices.CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(ref Guid iid, out IntPtr ppv)
        {
            ppv = IntPtr.Zero;
            if (IsOverridableInterface(iid) || global::WinRT.Interop.IID.IID_IInspectable == iid)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
            }

            if (((IWinRTObject)this).NativeObject.TryAs(iid, out ppv) >= 0)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.Handled;
            }

            return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
        }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI")]
    [global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Composition.Scenes.SceneNode))]
    [global::ABI.Microsoft.UI.Composition.Scenes.SceneNodeRcwFactory]
    [global::WinRT.ProjectedRuntimeClass(typeof(ISceneNode))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.Foundation.WindowsAppSDKContract), 65536u)]
    public sealed class SceneNode : SceneObject, global::System.Runtime.InteropServices.ICustomQueryInterface, IWinRTObject, IEquatable<SceneNode>
    {
        private IntPtr ThisPtr => _inner == null ? (((IWinRTObject)this).NativeObject).ThisPtr : _inner.ThisPtr;

        private readonly IObjectReference _inner = null;



        private IObjectReference _objRef_global__Microsoft_UI_Composition_Scenes_ISceneNode => _inner;


        public static new I As<I>() => ActivationFactory.Get("Microsoft.UI.Composition.Scenes.SceneNode").AsInterface<I>();

        private static volatile IObjectReference ___objRef_global__Microsoft_UI_Composition_Scenes_ISceneNodeStatics;
        private static IObjectReference _objRef_global__Microsoft_UI_Composition_Scenes_ISceneNodeStatics
        {
            get
            { 
                var factory = ___objRef_global__Microsoft_UI_Composition_Scenes_ISceneNodeStatics;
                if (factory != null && factory.IsInCurrentContext)
                {
                    return factory;
                }
                else
                {
                    return ___objRef_global__Microsoft_UI_Composition_Scenes_ISceneNodeStatics = ActivationFactory.Get("Microsoft.UI.Composition.Scenes.SceneNode", global::ABI.Microsoft.UI.Composition.Scenes.ISceneNodeStaticsMethods.IID);
                }
            }
        }

        public static SceneNode Create(global::Microsoft.UI.Composition.Compositor compositor) => global::ABI.Microsoft.UI.Composition.Scenes.ISceneNodeStaticsMethods.Create(_objRef_global__Microsoft_UI_Composition_Scenes_ISceneNodeStatics, compositor);

        public static new SceneNode FromAbi(IntPtr thisPtr)
        {
            if (thisPtr == IntPtr.Zero) return null;
            return MarshalInspectable<SceneNode>.FromAbi(thisPtr);
        }

        internal SceneNode(IObjectReference objRef)
            : base(global::WinRT.DerivedComposed.Instance)

        {
            _inner = objRef.As(global::ABI.Microsoft.UI.Composition.Scenes.ISceneNodeMethods.IID);

        }


        public static bool operator ==(SceneNode x, SceneNode y) => (x?.ThisPtr ?? IntPtr.Zero) == (y?.ThisPtr ?? IntPtr.Zero);
        public static bool operator !=(SceneNode x, SceneNode y) => !(x == y);
        public bool Equals(SceneNode other) => this == other;
        public override bool Equals(object obj) => obj is SceneNode that && this == that;
        public override int GetHashCode() => ThisPtr.GetHashCode();


        bool IWinRTObject.HasUnwrappableNativeObject => true;
        IObjectReference IWinRTObject.NativeObject => _inner;

        private struct InterfaceTag<I>{};


        public SceneComponent FindFirstComponentOfType(SceneComponentType value) => global::ABI.Microsoft.UI.Composition.Scenes.ISceneNodeMethods.FindFirstComponentOfType(_objRef_global__Microsoft_UI_Composition_Scenes_ISceneNode, value);

        public SceneNodeCollection Children => global::ABI.Microsoft.UI.Composition.Scenes.ISceneNodeMethods.get_Children(_objRef_global__Microsoft_UI_Composition_Scenes_ISceneNode);

        public SceneComponentCollection Components => global::ABI.Microsoft.UI.Composition.Scenes.ISceneNodeMethods.get_Components(_objRef_global__Microsoft_UI_Composition_Scenes_ISceneNode);

        public SceneNode Parent => global::ABI.Microsoft.UI.Composition.Scenes.ISceneNodeMethods.get_Parent(_objRef_global__Microsoft_UI_Composition_Scenes_ISceneNode);

        public SceneModelTransform Transform => global::ABI.Microsoft.UI.Composition.Scenes.ISceneNodeMethods.get_Transform(_objRef_global__Microsoft_UI_Composition_Scenes_ISceneNode);

        protected override bool IsOverridableInterface(Guid iid) => base.IsOverridableInterface(iid);

        global::System.Runtime.InteropServices.CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(ref Guid iid, out IntPtr ppv)
        {
            ppv = IntPtr.Zero;
            if (IsOverridableInterface(iid) || global::WinRT.Interop.IID.IID_IInspectable == iid)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
            }

            if (((IWinRTObject)this).NativeObject.TryAs(iid, out ppv) >= 0)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.Handled;
            }

            return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
        }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI")]
    [global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Composition.Scenes.SceneNodeCollection))]
    [global::ABI.Microsoft.UI.Composition.Scenes.SceneNodeCollectionRcwFactory]
    [global::WinRT.ProjectedRuntimeClass(typeof(global::System.Collections.Generic.IList<SceneNode>))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.Foundation.WindowsAppSDKContract), 65536u)]
    public sealed class SceneNodeCollection : SceneObject, global::System.Collections.Generic.IList<SceneNode>, global::System.Collections.Generic.IEnumerable<SceneNode>, global::System.Runtime.InteropServices.ICustomQueryInterface, IWinRTObject, IEquatable<SceneNodeCollection>
    {
        private IntPtr ThisPtr => _inner == null ? (((IWinRTObject)this).NativeObject).ThisPtr : _inner.ThisPtr;

        private readonly IObjectReference _inner = null;




        private volatile IObjectReference ___objRef_global__Microsoft_UI_Composition_Scenes_ISceneNodeCollection;
        private IObjectReference Make___objRef_global__Microsoft_UI_Composition_Scenes_ISceneNodeCollection()
        {
            global::System.Threading.Interlocked.CompareExchange(ref ___objRef_global__Microsoft_UI_Composition_Scenes_ISceneNodeCollection, ((IWinRTObject)this).NativeObject.As<IUnknownVftbl>(global::ABI.Microsoft.UI.Composition.Scenes.ISceneNodeCollectionMethods.IID), null);
            return ___objRef_global__Microsoft_UI_Composition_Scenes_ISceneNodeCollection;
        }
        private IObjectReference _objRef_global__Microsoft_UI_Composition_Scenes_ISceneNodeCollection => ___objRef_global__Microsoft_UI_Composition_Scenes_ISceneNodeCollection ?? Make___objRef_global__Microsoft_UI_Composition_Scenes_ISceneNodeCollection();

        private volatile IObjectReference ___objRef_global__System_Collections_Generic_IList_SceneNode_;
        private IObjectReference Make___objRef_global__System_Collections_Generic_IList_SceneNode_()
        {
            _ = global::WinRT.GenericTypeInstantiations.Windows_Foundation_Collections_IVector_1_Microsoft_UI_Composition_Scenes_SceneNode.EnsureInitialized();
            global::System.Threading.Interlocked.CompareExchange(ref ___objRef_global__System_Collections_Generic_IList_SceneNode_, ((IWinRTObject)this).NativeObject.As<IUnknownVftbl>(global::ABI.System.Collections.Generic.IListMethods<SceneNode>.IID), null);
            return ___objRef_global__System_Collections_Generic_IList_SceneNode_;
        }
        private IObjectReference _objRef_global__System_Collections_Generic_IList_SceneNode_ => ___objRef_global__System_Collections_Generic_IList_SceneNode_ ?? Make___objRef_global__System_Collections_Generic_IList_SceneNode_();

        private volatile IObjectReference ___objRef_global__System_Collections_Generic_IEnumerable_SceneNode_;
        private IObjectReference Make___objRef_global__System_Collections_Generic_IEnumerable_SceneNode_()
        {
            _ = global::WinRT.GenericTypeInstantiations.Windows_Foundation_Collections_IIterable_1_Microsoft_UI_Composition_Scenes_SceneNode.EnsureInitialized();
            global::System.Threading.Interlocked.CompareExchange(ref ___objRef_global__System_Collections_Generic_IEnumerable_SceneNode_, ((IWinRTObject)this).NativeObject.As<IUnknownVftbl>(global::ABI.System.Collections.Generic.IEnumerableMethods<SceneNode>.IID), null);
            return ___objRef_global__System_Collections_Generic_IEnumerable_SceneNode_;
        }
        private IObjectReference _objRef_global__System_Collections_Generic_IEnumerable_SceneNode_ => ___objRef_global__System_Collections_Generic_IEnumerable_SceneNode_ ?? Make___objRef_global__System_Collections_Generic_IEnumerable_SceneNode_();



        public static new SceneNodeCollection FromAbi(IntPtr thisPtr)
        {
            if (thisPtr == IntPtr.Zero) return null;
            return MarshalInspectable<SceneNodeCollection>.FromAbi(thisPtr);
        }

        internal SceneNodeCollection(IObjectReference objRef)
            : base(global::WinRT.DerivedComposed.Instance)

        {
            _inner = objRef.As(global::ABI.System.Collections.Generic.IListMethods<SceneNode>.IID);

        }


        public static bool operator ==(SceneNodeCollection x, SceneNodeCollection y) => (x?.ThisPtr ?? IntPtr.Zero) == (y?.ThisPtr ?? IntPtr.Zero);
        public static bool operator !=(SceneNodeCollection x, SceneNodeCollection y) => !(x == y);
        public bool Equals(SceneNodeCollection other) => this == other;
        public override bool Equals(object obj) => obj is SceneNodeCollection that && this == that;
        public override int GetHashCode() => ThisPtr.GetHashCode();


        bool IWinRTObject.HasUnwrappableNativeObject => true;
        IObjectReference IWinRTObject.NativeObject => _inner;

        private struct InterfaceTag<I>{};


        public int Count => global::ABI.System.Collections.Generic.IListMethods<SceneNode>.get_Count(_objRef_global__System_Collections_Generic_IList_SceneNode_);
        public bool IsReadOnly => global::ABI.System.Collections.Generic.IListMethods<SceneNode>.get_IsReadOnly(_objRef_global__System_Collections_Generic_IList_SceneNode_);
        [global::System.Runtime.CompilerServices.IndexerName("ListItem")]
        public SceneNode this[int index] 
        {
            get => global::ABI.System.Collections.Generic.IListMethods<SceneNode>.Indexer_Get(_objRef_global__System_Collections_Generic_IList_SceneNode_, index);
            set => global::ABI.System.Collections.Generic.IListMethods<SceneNode>.Indexer_Set(_objRef_global__System_Collections_Generic_IList_SceneNode_, index, value);
        }
        public int IndexOf(SceneNode item) => global::ABI.System.Collections.Generic.IListMethods<SceneNode>.IndexOf(_objRef_global__System_Collections_Generic_IList_SceneNode_, item);
        public void Insert(int index, SceneNode item) => global::ABI.System.Collections.Generic.IListMethods<SceneNode>.Insert(_objRef_global__System_Collections_Generic_IList_SceneNode_, index, item);
        public void RemoveAt(int index) => global::ABI.System.Collections.Generic.IListMethods<SceneNode>.RemoveAt(_objRef_global__System_Collections_Generic_IList_SceneNode_, index);
        public void Add(SceneNode item) => global::ABI.System.Collections.Generic.IListMethods<SceneNode>.Add(_objRef_global__System_Collections_Generic_IList_SceneNode_, item);
        public void Clear() => global::ABI.System.Collections.Generic.IListMethods<SceneNode>.Clear(_objRef_global__System_Collections_Generic_IList_SceneNode_);
        public bool Contains(SceneNode item) => global::ABI.System.Collections.Generic.IListMethods<SceneNode>.Contains(_objRef_global__System_Collections_Generic_IList_SceneNode_, item);
        public void CopyTo(SceneNode[] array, int arrayIndex) => global::ABI.System.Collections.Generic.IListMethods<SceneNode>.CopyTo(_objRef_global__System_Collections_Generic_IList_SceneNode_, array, arrayIndex);
        public bool Remove(SceneNode item) => global::ABI.System.Collections.Generic.IListMethods<SceneNode>.Remove(_objRef_global__System_Collections_Generic_IList_SceneNode_, item);

        public IEnumerator<SceneNode> GetEnumerator() => global::ABI.System.Collections.Generic.IEnumerableMethods<SceneNode>.GetEnumerator(_objRef_global__System_Collections_Generic_IEnumerable_SceneNode_);

        IEnumerator IEnumerable.GetEnumerator() => GetEnumerator();

        protected override bool IsOverridableInterface(Guid iid) => base.IsOverridableInterface(iid);

        global::System.Runtime.InteropServices.CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(ref Guid iid, out IntPtr ppv)
        {
            ppv = IntPtr.Zero;
            if (IsOverridableInterface(iid) || global::WinRT.Interop.IID.IID_IInspectable == iid)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
            }

            if (((IWinRTObject)this).NativeObject.TryAs(iid, out ppv) >= 0)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.Handled;
            }

            return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
        }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI")]
    [global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Composition.Scenes.SceneObject))]
    [global::ABI.Microsoft.UI.Composition.Scenes.SceneObjectRcwFactory]
    [global::WinRT.ProjectedRuntimeClass(typeof(ISceneObject))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.Foundation.WindowsAppSDKContract), 65536u)]
    public class SceneObject : global::Microsoft.UI.Composition.CompositionObject, global::System.Runtime.InteropServices.ICustomQueryInterface, IWinRTObject, IEquatable<SceneObject>
    {
        private IntPtr ThisPtr => _inner == null ? (((IWinRTObject)this).NativeObject).ThisPtr : _inner.ThisPtr;

        private readonly IObjectReference _inner = null;




        private volatile IObjectReference ___objRef_global__Microsoft_UI_Composition_Scenes_ISceneObject;
        private IObjectReference Make___objRef_global__Microsoft_UI_Composition_Scenes_ISceneObject()
        {
            global::System.Threading.Interlocked.CompareExchange(ref ___objRef_global__Microsoft_UI_Composition_Scenes_ISceneObject, ((IWinRTObject)this).NativeObject.As<IUnknownVftbl>(global::ABI.Microsoft.UI.Composition.Scenes.ISceneObjectMethods.IID), null);
            return ___objRef_global__Microsoft_UI_Composition_Scenes_ISceneObject;
        }
        private IObjectReference _objRef_global__Microsoft_UI_Composition_Scenes_ISceneObject => ___objRef_global__Microsoft_UI_Composition_Scenes_ISceneObject ?? Make___objRef_global__Microsoft_UI_Composition_Scenes_ISceneObject();



        private static class _ISceneObjectFactoryMethods
        {}

        private static volatile IObjectReference ___objRef_global__Microsoft_UI_Composition_Scenes_ISceneObjectFactory;
        private static IObjectReference _objRef_global__Microsoft_UI_Composition_Scenes_ISceneObjectFactory
        {
            get
            { 
                var factory = ___objRef_global__Microsoft_UI_Composition_Scenes_ISceneObjectFactory;
                if (factory != null && factory.IsInCurrentContext)
                {
                    return factory;
                }
                else
                {
                    return ___objRef_global__Microsoft_UI_Composition_Scenes_ISceneObjectFactory = ActivationFactory.Get("Microsoft.UI.Composition.Scenes.SceneObject", global::ABI.Microsoft.UI.Composition.Scenes.ISceneObjectFactoryMethods.IID);
                }
            }
        }

        public static new SceneObject FromAbi(IntPtr thisPtr)
        {
            if (thisPtr == IntPtr.Zero) return null;
            return MarshalInspectable<SceneObject>.FromAbi(thisPtr);
        }

        protected internal SceneObject(IObjectReference objRef)
            : base(global::WinRT.DerivedComposed.Instance)

        {
            _inner = objRef.As(global::ABI.Microsoft.UI.Composition.Scenes.ISceneObjectMethods.IID);

        }


        public static bool operator ==(SceneObject x, SceneObject y) => (x?.ThisPtr ?? IntPtr.Zero) == (y?.ThisPtr ?? IntPtr.Zero);
        public static bool operator !=(SceneObject x, SceneObject y) => !(x == y);
        public bool Equals(SceneObject other) => this == other;
        public override bool Equals(object obj) => obj is SceneObject that && this == that;
        public override int GetHashCode() => ThisPtr.GetHashCode();


        protected SceneObject(global::WinRT.DerivedComposed _):base(_)
        {

        }
        bool IWinRTObject.HasUnwrappableNativeObject => this.GetType() == typeof(SceneObject);
        IObjectReference IWinRTObject.NativeObject => _inner;

        private struct InterfaceTag<I>{};


        protected override bool IsOverridableInterface(Guid iid) => base.IsOverridableInterface(iid);

        global::System.Runtime.InteropServices.CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(ref Guid iid, out IntPtr ppv)
        {
            ppv = IntPtr.Zero;
            if (IsOverridableInterface(iid) || global::WinRT.Interop.IID.IID_IInspectable == iid)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
            }

            if (((IWinRTObject)this).NativeObject.TryAs(iid, out ppv) >= 0)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.Handled;
            }

            return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
        }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI")]
    [global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Composition.Scenes.ScenePbrMaterial))]
    [global::ABI.Microsoft.UI.Composition.Scenes.ScenePbrMaterialRcwFactory]
    [global::WinRT.ProjectedRuntimeClass(typeof(IScenePbrMaterial))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.Foundation.WindowsAppSDKContract), 65536u)]
    public class ScenePbrMaterial : SceneMaterial, global::System.Runtime.InteropServices.ICustomQueryInterface, IWinRTObject, IEquatable<ScenePbrMaterial>
    {
        private IntPtr ThisPtr => _inner == null ? (((IWinRTObject)this).NativeObject).ThisPtr : _inner.ThisPtr;

        private readonly IObjectReference _inner = null;




        private volatile IObjectReference ___objRef_global__Microsoft_UI_Composition_Scenes_IScenePbrMaterial;
        private IObjectReference Make___objRef_global__Microsoft_UI_Composition_Scenes_IScenePbrMaterial()
        {
            global::System.Threading.Interlocked.CompareExchange(ref ___objRef_global__Microsoft_UI_Composition_Scenes_IScenePbrMaterial, ((IWinRTObject)this).NativeObject.As<IUnknownVftbl>(global::ABI.Microsoft.UI.Composition.Scenes.IScenePbrMaterialMethods.IID), null);
            return ___objRef_global__Microsoft_UI_Composition_Scenes_IScenePbrMaterial;
        }
        private IObjectReference _objRef_global__Microsoft_UI_Composition_Scenes_IScenePbrMaterial => ___objRef_global__Microsoft_UI_Composition_Scenes_IScenePbrMaterial ?? Make___objRef_global__Microsoft_UI_Composition_Scenes_IScenePbrMaterial();



        private static class _IScenePbrMaterialFactoryMethods
        {}

        private static volatile IObjectReference ___objRef_global__Microsoft_UI_Composition_Scenes_IScenePbrMaterialFactory;
        private static IObjectReference _objRef_global__Microsoft_UI_Composition_Scenes_IScenePbrMaterialFactory
        {
            get
            { 
                var factory = ___objRef_global__Microsoft_UI_Composition_Scenes_IScenePbrMaterialFactory;
                if (factory != null && factory.IsInCurrentContext)
                {
                    return factory;
                }
                else
                {
                    return ___objRef_global__Microsoft_UI_Composition_Scenes_IScenePbrMaterialFactory = ActivationFactory.Get("Microsoft.UI.Composition.Scenes.ScenePbrMaterial", global::ABI.Microsoft.UI.Composition.Scenes.IScenePbrMaterialFactoryMethods.IID);
                }
            }
        }

        public static new ScenePbrMaterial FromAbi(IntPtr thisPtr)
        {
            if (thisPtr == IntPtr.Zero) return null;
            return MarshalInspectable<ScenePbrMaterial>.FromAbi(thisPtr);
        }

        protected internal ScenePbrMaterial(IObjectReference objRef)
            : base(global::WinRT.DerivedComposed.Instance)

        {
            _inner = objRef.As(global::ABI.Microsoft.UI.Composition.Scenes.IScenePbrMaterialMethods.IID);

        }


        public static bool operator ==(ScenePbrMaterial x, ScenePbrMaterial y) => (x?.ThisPtr ?? IntPtr.Zero) == (y?.ThisPtr ?? IntPtr.Zero);
        public static bool operator !=(ScenePbrMaterial x, ScenePbrMaterial y) => !(x == y);
        public bool Equals(ScenePbrMaterial other) => this == other;
        public override bool Equals(object obj) => obj is ScenePbrMaterial that && this == that;
        public override int GetHashCode() => ThisPtr.GetHashCode();


        protected ScenePbrMaterial(global::WinRT.DerivedComposed _):base(_)
        {

        }
        bool IWinRTObject.HasUnwrappableNativeObject => this.GetType() == typeof(ScenePbrMaterial);
        IObjectReference IWinRTObject.NativeObject => _inner;

        private struct InterfaceTag<I>{};


        public float AlphaCutoff
        {
            get => global::ABI.Microsoft.UI.Composition.Scenes.IScenePbrMaterialMethods.get_AlphaCutoff(_objRef_global__Microsoft_UI_Composition_Scenes_IScenePbrMaterial);
            set => global::ABI.Microsoft.UI.Composition.Scenes.IScenePbrMaterialMethods.set_AlphaCutoff(_objRef_global__Microsoft_UI_Composition_Scenes_IScenePbrMaterial, value);
        }

        public SceneAlphaMode AlphaMode
        {
            get => global::ABI.Microsoft.UI.Composition.Scenes.IScenePbrMaterialMethods.get_AlphaMode(_objRef_global__Microsoft_UI_Composition_Scenes_IScenePbrMaterial);
            set => global::ABI.Microsoft.UI.Composition.Scenes.IScenePbrMaterialMethods.set_AlphaMode(_objRef_global__Microsoft_UI_Composition_Scenes_IScenePbrMaterial, value);
        }

        public global::System.Numerics.Vector3 EmissiveFactor
        {
            get => global::ABI.Microsoft.UI.Composition.Scenes.IScenePbrMaterialMethods.get_EmissiveFactor(_objRef_global__Microsoft_UI_Composition_Scenes_IScenePbrMaterial);
            set => global::ABI.Microsoft.UI.Composition.Scenes.IScenePbrMaterialMethods.set_EmissiveFactor(_objRef_global__Microsoft_UI_Composition_Scenes_IScenePbrMaterial, value);
        }

        public SceneMaterialInput EmissiveInput
        {
            get => global::ABI.Microsoft.UI.Composition.Scenes.IScenePbrMaterialMethods.get_EmissiveInput(_objRef_global__Microsoft_UI_Composition_Scenes_IScenePbrMaterial);
            set => global::ABI.Microsoft.UI.Composition.Scenes.IScenePbrMaterialMethods.set_EmissiveInput(_objRef_global__Microsoft_UI_Composition_Scenes_IScenePbrMaterial, value);
        }

        public bool IsDoubleSided
        {
            get => global::ABI.Microsoft.UI.Composition.Scenes.IScenePbrMaterialMethods.get_IsDoubleSided(_objRef_global__Microsoft_UI_Composition_Scenes_IScenePbrMaterial);
            set => global::ABI.Microsoft.UI.Composition.Scenes.IScenePbrMaterialMethods.set_IsDoubleSided(_objRef_global__Microsoft_UI_Composition_Scenes_IScenePbrMaterial, value);
        }

        public SceneMaterialInput NormalInput
        {
            get => global::ABI.Microsoft.UI.Composition.Scenes.IScenePbrMaterialMethods.get_NormalInput(_objRef_global__Microsoft_UI_Composition_Scenes_IScenePbrMaterial);
            set => global::ABI.Microsoft.UI.Composition.Scenes.IScenePbrMaterialMethods.set_NormalInput(_objRef_global__Microsoft_UI_Composition_Scenes_IScenePbrMaterial, value);
        }

        public float NormalScale
        {
            get => global::ABI.Microsoft.UI.Composition.Scenes.IScenePbrMaterialMethods.get_NormalScale(_objRef_global__Microsoft_UI_Composition_Scenes_IScenePbrMaterial);
            set => global::ABI.Microsoft.UI.Composition.Scenes.IScenePbrMaterialMethods.set_NormalScale(_objRef_global__Microsoft_UI_Composition_Scenes_IScenePbrMaterial, value);
        }

        public SceneMaterialInput OcclusionInput
        {
            get => global::ABI.Microsoft.UI.Composition.Scenes.IScenePbrMaterialMethods.get_OcclusionInput(_objRef_global__Microsoft_UI_Composition_Scenes_IScenePbrMaterial);
            set => global::ABI.Microsoft.UI.Composition.Scenes.IScenePbrMaterialMethods.set_OcclusionInput(_objRef_global__Microsoft_UI_Composition_Scenes_IScenePbrMaterial, value);
        }

        public float OcclusionStrength
        {
            get => global::ABI.Microsoft.UI.Composition.Scenes.IScenePbrMaterialMethods.get_OcclusionStrength(_objRef_global__Microsoft_UI_Composition_Scenes_IScenePbrMaterial);
            set => global::ABI.Microsoft.UI.Composition.Scenes.IScenePbrMaterialMethods.set_OcclusionStrength(_objRef_global__Microsoft_UI_Composition_Scenes_IScenePbrMaterial, value);
        }

        protected override bool IsOverridableInterface(Guid iid) => base.IsOverridableInterface(iid);

        global::System.Runtime.InteropServices.CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(ref Guid iid, out IntPtr ppv)
        {
            ppv = IntPtr.Zero;
            if (IsOverridableInterface(iid) || global::WinRT.Interop.IID.IID_IInspectable == iid)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
            }

            if (((IWinRTObject)this).NativeObject.TryAs(iid, out ppv) >= 0)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.Handled;
            }

            return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
        }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI")]
    [global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Composition.Scenes.SceneRendererComponent))]
    [global::ABI.Microsoft.UI.Composition.Scenes.SceneRendererComponentRcwFactory]
    [global::WinRT.ProjectedRuntimeClass(typeof(ISceneRendererComponent))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.Foundation.WindowsAppSDKContract), 65536u)]
    public class SceneRendererComponent : SceneComponent, global::System.Runtime.InteropServices.ICustomQueryInterface, IWinRTObject, IEquatable<SceneRendererComponent>
    {
        private IntPtr ThisPtr => _inner == null ? (((IWinRTObject)this).NativeObject).ThisPtr : _inner.ThisPtr;

        private readonly IObjectReference _inner = null;




        private volatile IObjectReference ___objRef_global__Microsoft_UI_Composition_Scenes_ISceneRendererComponent;
        private IObjectReference Make___objRef_global__Microsoft_UI_Composition_Scenes_ISceneRendererComponent()
        {
            global::System.Threading.Interlocked.CompareExchange(ref ___objRef_global__Microsoft_UI_Composition_Scenes_ISceneRendererComponent, ((IWinRTObject)this).NativeObject.As<IUnknownVftbl>(global::ABI.Microsoft.UI.Composition.Scenes.ISceneRendererComponentMethods.IID), null);
            return ___objRef_global__Microsoft_UI_Composition_Scenes_ISceneRendererComponent;
        }
        private IObjectReference _objRef_global__Microsoft_UI_Composition_Scenes_ISceneRendererComponent => ___objRef_global__Microsoft_UI_Composition_Scenes_ISceneRendererComponent ?? Make___objRef_global__Microsoft_UI_Composition_Scenes_ISceneRendererComponent();



        private static class _ISceneRendererComponentFactoryMethods
        {}

        private static volatile IObjectReference ___objRef_global__Microsoft_UI_Composition_Scenes_ISceneRendererComponentFactory;
        private static IObjectReference _objRef_global__Microsoft_UI_Composition_Scenes_ISceneRendererComponentFactory
        {
            get
            { 
                var factory = ___objRef_global__Microsoft_UI_Composition_Scenes_ISceneRendererComponentFactory;
                if (factory != null && factory.IsInCurrentContext)
                {
                    return factory;
                }
                else
                {
                    return ___objRef_global__Microsoft_UI_Composition_Scenes_ISceneRendererComponentFactory = ActivationFactory.Get("Microsoft.UI.Composition.Scenes.SceneRendererComponent", global::ABI.Microsoft.UI.Composition.Scenes.ISceneRendererComponentFactoryMethods.IID);
                }
            }
        }

        public static new SceneRendererComponent FromAbi(IntPtr thisPtr)
        {
            if (thisPtr == IntPtr.Zero) return null;
            return MarshalInspectable<SceneRendererComponent>.FromAbi(thisPtr);
        }

        protected internal SceneRendererComponent(IObjectReference objRef)
            : base(global::WinRT.DerivedComposed.Instance)

        {
            _inner = objRef.As(global::ABI.Microsoft.UI.Composition.Scenes.ISceneRendererComponentMethods.IID);

        }


        public static bool operator ==(SceneRendererComponent x, SceneRendererComponent y) => (x?.ThisPtr ?? IntPtr.Zero) == (y?.ThisPtr ?? IntPtr.Zero);
        public static bool operator !=(SceneRendererComponent x, SceneRendererComponent y) => !(x == y);
        public bool Equals(SceneRendererComponent other) => this == other;
        public override bool Equals(object obj) => obj is SceneRendererComponent that && this == that;
        public override int GetHashCode() => ThisPtr.GetHashCode();


        protected SceneRendererComponent(global::WinRT.DerivedComposed _):base(_)
        {

        }
        bool IWinRTObject.HasUnwrappableNativeObject => this.GetType() == typeof(SceneRendererComponent);
        IObjectReference IWinRTObject.NativeObject => _inner;

        private struct InterfaceTag<I>{};


        protected override bool IsOverridableInterface(Guid iid) => base.IsOverridableInterface(iid);

        global::System.Runtime.InteropServices.CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(ref Guid iid, out IntPtr ppv)
        {
            ppv = IntPtr.Zero;
            if (IsOverridableInterface(iid) || global::WinRT.Interop.IID.IID_IInspectable == iid)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
            }

            if (((IWinRTObject)this).NativeObject.TryAs(iid, out ppv) >= 0)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.Handled;
            }

            return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
        }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI")]
    [global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Composition.Scenes.SceneSurfaceMaterialInput))]
    [global::ABI.Microsoft.UI.Composition.Scenes.SceneSurfaceMaterialInputRcwFactory]
    [global::WinRT.ProjectedRuntimeClass(typeof(ISceneSurfaceMaterialInput))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.Foundation.WindowsAppSDKContract), 65536u)]
    public sealed class SceneSurfaceMaterialInput : SceneMaterialInput, global::System.Runtime.InteropServices.ICustomQueryInterface, IWinRTObject, IEquatable<SceneSurfaceMaterialInput>
    {
        private IntPtr ThisPtr => _inner == null ? (((IWinRTObject)this).NativeObject).ThisPtr : _inner.ThisPtr;

        private readonly IObjectReference _inner = null;



        private IObjectReference _objRef_global__Microsoft_UI_Composition_Scenes_ISceneSurfaceMaterialInput => _inner;


        public static new I As<I>() => ActivationFactory.Get("Microsoft.UI.Composition.Scenes.SceneSurfaceMaterialInput").AsInterface<I>();

        private static volatile IObjectReference ___objRef_global__Microsoft_UI_Composition_Scenes_ISceneSurfaceMaterialInputStatics;
        private static IObjectReference _objRef_global__Microsoft_UI_Composition_Scenes_ISceneSurfaceMaterialInputStatics
        {
            get
            { 
                var factory = ___objRef_global__Microsoft_UI_Composition_Scenes_ISceneSurfaceMaterialInputStatics;
                if (factory != null && factory.IsInCurrentContext)
                {
                    return factory;
                }
                else
                {
                    return ___objRef_global__Microsoft_UI_Composition_Scenes_ISceneSurfaceMaterialInputStatics = ActivationFactory.Get("Microsoft.UI.Composition.Scenes.SceneSurfaceMaterialInput", global::ABI.Microsoft.UI.Composition.Scenes.ISceneSurfaceMaterialInputStaticsMethods.IID);
                }
            }
        }

        public static SceneSurfaceMaterialInput Create(global::Microsoft.UI.Composition.Compositor compositor) => global::ABI.Microsoft.UI.Composition.Scenes.ISceneSurfaceMaterialInputStaticsMethods.Create(_objRef_global__Microsoft_UI_Composition_Scenes_ISceneSurfaceMaterialInputStatics, compositor);

        public static new SceneSurfaceMaterialInput FromAbi(IntPtr thisPtr)
        {
            if (thisPtr == IntPtr.Zero) return null;
            return MarshalInspectable<SceneSurfaceMaterialInput>.FromAbi(thisPtr);
        }

        internal SceneSurfaceMaterialInput(IObjectReference objRef)
            : base(global::WinRT.DerivedComposed.Instance)

        {
            _inner = objRef.As(global::ABI.Microsoft.UI.Composition.Scenes.ISceneSurfaceMaterialInputMethods.IID);

        }


        public static bool operator ==(SceneSurfaceMaterialInput x, SceneSurfaceMaterialInput y) => (x?.ThisPtr ?? IntPtr.Zero) == (y?.ThisPtr ?? IntPtr.Zero);
        public static bool operator !=(SceneSurfaceMaterialInput x, SceneSurfaceMaterialInput y) => !(x == y);
        public bool Equals(SceneSurfaceMaterialInput other) => this == other;
        public override bool Equals(object obj) => obj is SceneSurfaceMaterialInput that && this == that;
        public override int GetHashCode() => ThisPtr.GetHashCode();


        bool IWinRTObject.HasUnwrappableNativeObject => true;
        IObjectReference IWinRTObject.NativeObject => _inner;

        private struct InterfaceTag<I>{};


        public global::Microsoft.UI.Composition.CompositionBitmapInterpolationMode BitmapInterpolationMode
        {
            get => global::ABI.Microsoft.UI.Composition.Scenes.ISceneSurfaceMaterialInputMethods.get_BitmapInterpolationMode(_objRef_global__Microsoft_UI_Composition_Scenes_ISceneSurfaceMaterialInput);
            set => global::ABI.Microsoft.UI.Composition.Scenes.ISceneSurfaceMaterialInputMethods.set_BitmapInterpolationMode(_objRef_global__Microsoft_UI_Composition_Scenes_ISceneSurfaceMaterialInput, value);
        }

        public global::Microsoft.UI.Composition.ICompositionSurface Surface
        {
            get => global::ABI.Microsoft.UI.Composition.Scenes.ISceneSurfaceMaterialInputMethods.get_Surface(_objRef_global__Microsoft_UI_Composition_Scenes_ISceneSurfaceMaterialInput);
            set => global::ABI.Microsoft.UI.Composition.Scenes.ISceneSurfaceMaterialInputMethods.set_Surface(_objRef_global__Microsoft_UI_Composition_Scenes_ISceneSurfaceMaterialInput, value);
        }

        public SceneWrappingMode WrappingUMode
        {
            get => global::ABI.Microsoft.UI.Composition.Scenes.ISceneSurfaceMaterialInputMethods.get_WrappingUMode(_objRef_global__Microsoft_UI_Composition_Scenes_ISceneSurfaceMaterialInput);
            set => global::ABI.Microsoft.UI.Composition.Scenes.ISceneSurfaceMaterialInputMethods.set_WrappingUMode(_objRef_global__Microsoft_UI_Composition_Scenes_ISceneSurfaceMaterialInput, value);
        }

        public SceneWrappingMode WrappingVMode
        {
            get => global::ABI.Microsoft.UI.Composition.Scenes.ISceneSurfaceMaterialInputMethods.get_WrappingVMode(_objRef_global__Microsoft_UI_Composition_Scenes_ISceneSurfaceMaterialInput);
            set => global::ABI.Microsoft.UI.Composition.Scenes.ISceneSurfaceMaterialInputMethods.set_WrappingVMode(_objRef_global__Microsoft_UI_Composition_Scenes_ISceneSurfaceMaterialInput, value);
        }

        protected override bool IsOverridableInterface(Guid iid) => base.IsOverridableInterface(iid);

        global::System.Runtime.InteropServices.CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(ref Guid iid, out IntPtr ppv)
        {
            ppv = IntPtr.Zero;
            if (IsOverridableInterface(iid) || global::WinRT.Interop.IID.IID_IInspectable == iid)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
            }

            if (((IWinRTObject)this).NativeObject.TryAs(iid, out ppv) >= 0)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.Handled;
            }

            return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
        }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI")]
    [global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Composition.Scenes.SceneVisual))]
    [global::ABI.Microsoft.UI.Composition.Scenes.SceneVisualRcwFactory]
    [global::WinRT.ProjectedRuntimeClass(typeof(ISceneVisual))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.Foundation.WindowsAppSDKContract), 65536u)]
    public sealed class SceneVisual : global::Microsoft.UI.Composition.ContainerVisual, global::System.Runtime.InteropServices.ICustomQueryInterface, IWinRTObject, IEquatable<SceneVisual>
    {
        private IntPtr ThisPtr => _inner == null ? (((IWinRTObject)this).NativeObject).ThisPtr : _inner.ThisPtr;

        private readonly IObjectReference _inner = null;



        private IObjectReference _objRef_global__Microsoft_UI_Composition_Scenes_ISceneVisual => _inner;


        public static new I As<I>() => ActivationFactory.Get("Microsoft.UI.Composition.Scenes.SceneVisual").AsInterface<I>();

        private static volatile IObjectReference ___objRef_global__Microsoft_UI_Composition_Scenes_ISceneVisualStatics;
        private static IObjectReference _objRef_global__Microsoft_UI_Composition_Scenes_ISceneVisualStatics
        {
            get
            { 
                var factory = ___objRef_global__Microsoft_UI_Composition_Scenes_ISceneVisualStatics;
                if (factory != null && factory.IsInCurrentContext)
                {
                    return factory;
                }
                else
                {
                    return ___objRef_global__Microsoft_UI_Composition_Scenes_ISceneVisualStatics = ActivationFactory.Get("Microsoft.UI.Composition.Scenes.SceneVisual", global::ABI.Microsoft.UI.Composition.Scenes.ISceneVisualStaticsMethods.IID);
                }
            }
        }

        public static SceneVisual Create(global::Microsoft.UI.Composition.Compositor compositor) => global::ABI.Microsoft.UI.Composition.Scenes.ISceneVisualStaticsMethods.Create(_objRef_global__Microsoft_UI_Composition_Scenes_ISceneVisualStatics, compositor);

        public static new SceneVisual FromAbi(IntPtr thisPtr)
        {
            if (thisPtr == IntPtr.Zero) return null;
            return MarshalInspectable<SceneVisual>.FromAbi(thisPtr);
        }

        internal SceneVisual(IObjectReference objRef)
            : base(global::WinRT.DerivedComposed.Instance)

        {
            _inner = objRef.As(global::ABI.Microsoft.UI.Composition.Scenes.ISceneVisualMethods.IID);

        }


        public static bool operator ==(SceneVisual x, SceneVisual y) => (x?.ThisPtr ?? IntPtr.Zero) == (y?.ThisPtr ?? IntPtr.Zero);
        public static bool operator !=(SceneVisual x, SceneVisual y) => !(x == y);
        public bool Equals(SceneVisual other) => this == other;
        public override bool Equals(object obj) => obj is SceneVisual that && this == that;
        public override int GetHashCode() => ThisPtr.GetHashCode();


        bool IWinRTObject.HasUnwrappableNativeObject => true;
        IObjectReference IWinRTObject.NativeObject => _inner;

        private struct InterfaceTag<I>{};


        public SceneNode Root
        {
            get => global::ABI.Microsoft.UI.Composition.Scenes.ISceneVisualMethods.get_Root(_objRef_global__Microsoft_UI_Composition_Scenes_ISceneVisual);
            set => global::ABI.Microsoft.UI.Composition.Scenes.ISceneVisualMethods.set_Root(_objRef_global__Microsoft_UI_Composition_Scenes_ISceneVisual, value);
        }

        protected override bool IsOverridableInterface(Guid iid) => base.IsOverridableInterface(iid);

        global::System.Runtime.InteropServices.CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(ref Guid iid, out IntPtr ppv)
        {
            ppv = IntPtr.Zero;
            if (IsOverridableInterface(iid) || global::WinRT.Interop.IID.IID_IInspectable == iid)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
            }

            if (((IWinRTObject)this).NativeObject.TryAs(iid, out ppv) >= 0)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.Handled;
            }

            return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
        }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI")][global::WinRT.WinRTExposedType(typeof(global::WinRT.EnumTypeDetails<SceneWrappingMode>))][global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.Foundation.WindowsAppSDKContract), 65536u)]
    public enum SceneWrappingMode : int
    {
        ClampToEdge = unchecked((int)0),
        MirroredRepeat = unchecked((int)0x1),
        Repeat = unchecked((int)0x2),
    }
}

#pragma warning disable CA1416
namespace ABI.Microsoft.UI.Composition.Scenes
{
    internal static class ISceneBoundingBoxMethods
    {

        internal static unsafe global::System.Numerics.Vector3 get_Center(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::System.Numerics.Vector3 __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::System.Numerics.Vector3*, int>**)ThisPtr)[6](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }

        internal static unsafe global::System.Numerics.Vector3 get_Extents(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::System.Numerics.Vector3 __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::System.Numerics.Vector3*, int>**)ThisPtr)[7](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }

        internal static unsafe global::System.Numerics.Vector3 get_Max(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::System.Numerics.Vector3 __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::System.Numerics.Vector3*, int>**)ThisPtr)[8](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }

        internal static unsafe global::System.Numerics.Vector3 get_Min(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::System.Numerics.Vector3 __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::System.Numerics.Vector3*, int>**)ThisPtr)[9](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }

        internal static unsafe global::System.Numerics.Vector3 get_Size(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::System.Numerics.Vector3 __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::System.Numerics.Vector3*, int>**)ThisPtr)[10](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0xE0, 0x48, 0xFB, 0x39, 0x6A, 0x21, 0x8, 0x56, 0x91, 0x86, 0x6B, 0xA9, 0xF9, 0x8B, 0x5C, 0x67 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("39FB48E0-216A-5608-9186-6BA9F98B5C67")]
    internal interface ISceneBoundingBox : global::Microsoft.UI.Composition.Scenes.ISceneBoundingBox
    {
    }
    internal static class ISceneComponentMethods
    {

        internal static unsafe global::Microsoft.UI.Composition.Scenes.SceneComponentType get_ComponentType(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::Microsoft.UI.Composition.Scenes.SceneComponentType __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::Microsoft.UI.Composition.Scenes.SceneComponentType*, int>**)ThisPtr)[6](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0xCB, 0x61, 0x33, 0xF7, 0x27, 0x80, 0xE2, 0x50, 0x98, 0xEE, 0xB2, 0xE3, 0xEA, 0x5, 0xA, 0x54 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("F73361CB-8027-50E2-98EE-B2E3EA050A54")]
    internal interface ISceneComponent : global::Microsoft.UI.Composition.Scenes.ISceneComponent
    {
    }
    internal static class ISceneComponentCollectionMethods
    {



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0x71, 0x1C, 0xB2, 0xE4, 0xE2, 0x87, 0xEB, 0x5A, 0x85, 0xBE, 0x88, 0x4E, 0x83, 0x2, 0x27, 0x3E };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("E4B21C71-87E2-5AEB-85BE-884E8302273E")]
    internal interface ISceneComponentCollection : global::Microsoft.UI.Composition.Scenes.ISceneComponentCollection
    {
    }
    internal static class ISceneComponentFactoryMethods
    {



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0xB0, 0x88, 0x40, 0x25, 0xBF, 0xBA, 0x3D, 0x50, 0x9A, 0x66, 0xD, 0x86, 0xAF, 0x5F, 0x73, 0x3 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("254088B0-BABF-503D-9A66-0D86AF5F7303")]
    internal interface ISceneComponentFactory : global::Microsoft.UI.Composition.Scenes.ISceneComponentFactory
    {
    }
    internal static class ISceneMaterialMethods
    {



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0xA7, 0x42, 0x21, 0x4, 0x6B, 0xBF, 0xAD, 0x57, 0xBA, 0xDC, 0xF5, 0x81, 0xF3, 0x8E, 0xDB, 0x48 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("042142A7-BF6B-57AD-BADC-F581F38EDB48")]
    internal interface ISceneMaterial : global::Microsoft.UI.Composition.Scenes.ISceneMaterial
    {
    }
    internal static class ISceneMaterialFactoryMethods
    {



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0x93, 0x78, 0x74, 0x25, 0x48, 0x87, 0x60, 0x5F, 0x96, 0x9F, 0x31, 0x8F, 0xA0, 0xB7, 0x35, 0xCA };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("25747893-8748-5F60-969F-318FA0B735CA")]
    internal interface ISceneMaterialFactory : global::Microsoft.UI.Composition.Scenes.ISceneMaterialFactory
    {
    }
    internal static class ISceneMaterialInputMethods
    {



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0xDE, 0xDA, 0x6B, 0x44, 0x9B, 0x71, 0xB4, 0x5D, 0xB6, 0x99, 0xF2, 0x26, 0xD0, 0x6, 0x2A, 0x2E };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("446BDADE-719B-5DB4-B699-F226D0062A2E")]
    internal interface ISceneMaterialInput : global::Microsoft.UI.Composition.Scenes.ISceneMaterialInput
    {
    }
    internal static class ISceneMaterialInputFactoryMethods
    {



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0x1D, 0xBD, 0xDA, 0xB4, 0xC0, 0x58, 0x10, 0x57, 0x92, 0x8A, 0xBC, 0x49, 0xB0, 0x73, 0x56, 0x94 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("B4DABD1D-58C0-5710-928A-BC49B0735694")]
    internal interface ISceneMaterialInputFactory : global::Microsoft.UI.Composition.Scenes.ISceneMaterialInputFactory
    {
    }
    internal static class ISceneMeshMethods
    {


        internal static unsafe void FillMeshAttribute(IObjectReference _obj, global::Microsoft.UI.Composition.Scenes.SceneAttributeSemantic semantic, global::Microsoft.Graphics.DirectX.DirectXPixelFormat format, global::Windows.Foundation.MemoryBuffer memory)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __memory = default;
            try
            {
                __memory = global::ABI.Windows.Foundation.MemoryBuffer.CreateMarshaler2(memory);
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::Microsoft.UI.Composition.Scenes.SceneAttributeSemantic, global::Microsoft.Graphics.DirectX.DirectXPixelFormat, IntPtr, int>**)ThisPtr)[9](ThisPtr, semantic, format, MarshalInspectable<object>.GetAbi(__memory)));
                global::System.GC.KeepAlive(_obj);
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__memory);
            }
        }
        internal static unsafe global::Microsoft.UI.Composition.Scenes.SceneBoundingBox get_Bounds(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[6](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Composition.Scenes.SceneBoundingBox.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.UI.Composition.Scenes.SceneBoundingBox.DisposeAbi(__retval);
            }
        }

        internal static unsafe global::Microsoft.Graphics.DirectX.DirectXPrimitiveTopology get_PrimitiveTopology(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::Microsoft.Graphics.DirectX.DirectXPrimitiveTopology __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::Microsoft.Graphics.DirectX.DirectXPrimitiveTopology*, int>**)ThisPtr)[7](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }
        internal static unsafe void set_PrimitiveTopology(IObjectReference _obj, global::Microsoft.Graphics.DirectX.DirectXPrimitiveTopology value)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::Microsoft.Graphics.DirectX.DirectXPrimitiveTopology, int>**)ThisPtr)[8](ThisPtr, value));
            global::System.GC.KeepAlive(_obj);
        }



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0xAA, 0x46, 0xF8, 0x5C, 0x3F, 0xF5, 0x5E, 0x55, 0xA3, 0xAD, 0xF5, 0xBC, 0x52, 0xCA, 0x32, 0xFB };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("5CF846AA-F53F-555E-A3AD-F5BC52CA32FB")]
    internal interface ISceneMesh : global::Microsoft.UI.Composition.Scenes.ISceneMesh
    {
    }
    internal static class ISceneMeshMaterialAttributeMapMethods
    {



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0x57, 0xC4, 0x60, 0x23, 0xAE, 0xED, 0x60, 0x56, 0xBE, 0xDC, 0x89, 0x9, 0x65, 0x82, 0xED, 0x70 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("2360C457-EDAE-5660-BEDC-89096582ED70")]
    internal interface ISceneMeshMaterialAttributeMap : global::Microsoft.UI.Composition.Scenes.ISceneMeshMaterialAttributeMap
    {
    }
    internal static class ISceneMeshRendererComponentMethods
    {

        internal static unsafe global::Microsoft.UI.Composition.Scenes.SceneMaterial get_Material(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[6](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Composition.Scenes.SceneMaterial.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.UI.Composition.Scenes.SceneMaterial.DisposeAbi(__retval);
            }
        }
        internal static unsafe void set_Material(IObjectReference _obj, global::Microsoft.UI.Composition.Scenes.SceneMaterial value)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __value = default;
            try
            {
                __value = global::ABI.Microsoft.UI.Composition.Scenes.SceneMaterial.CreateMarshaler2(value);
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, int>**)ThisPtr)[7](ThisPtr, MarshalInspectable<object>.GetAbi(__value)));
                global::System.GC.KeepAlive(_obj);
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__value);
            }
        }

        internal static unsafe global::Microsoft.UI.Composition.Scenes.SceneMesh get_Mesh(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[8](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Composition.Scenes.SceneMesh.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.UI.Composition.Scenes.SceneMesh.DisposeAbi(__retval);
            }
        }
        internal static unsafe void set_Mesh(IObjectReference _obj, global::Microsoft.UI.Composition.Scenes.SceneMesh value)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __value = default;
            try
            {
                __value = global::ABI.Microsoft.UI.Composition.Scenes.SceneMesh.CreateMarshaler2(value);
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, int>**)ThisPtr)[9](ThisPtr, MarshalInspectable<object>.GetAbi(__value)));
                global::System.GC.KeepAlive(_obj);
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__value);
            }
        }

        internal static unsafe global::Microsoft.UI.Composition.Scenes.SceneMeshMaterialAttributeMap get_UVMappings(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[10](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Composition.Scenes.SceneMeshMaterialAttributeMap.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.UI.Composition.Scenes.SceneMeshMaterialAttributeMap.DisposeAbi(__retval);
            }
        }



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0xA0, 0x85, 0xBE, 0xD2, 0xA8, 0x70, 0x62, 0x5C, 0x84, 0xD8, 0x8B, 0xA5, 0x5E, 0x4C, 0x64, 0xA9 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("D2BE85A0-70A8-5C62-84D8-8BA55E4C64A9")]
    internal interface ISceneMeshRendererComponent : global::Microsoft.UI.Composition.Scenes.ISceneMeshRendererComponent
    {
    }
    internal static class ISceneMeshRendererComponentStaticsMethods
    {


        internal static unsafe global::Microsoft.UI.Composition.Scenes.SceneMeshRendererComponent Create(IObjectReference _obj, global::Microsoft.UI.Composition.Compositor compositor)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __compositor = default;
            IntPtr __retval = default;
            try
            {
                __compositor = global::ABI.Microsoft.UI.Composition.Compositor.CreateMarshaler2(compositor);
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, IntPtr*, int>**)ThisPtr)[6](ThisPtr, MarshalInspectable<object>.GetAbi(__compositor), &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Composition.Scenes.SceneMeshRendererComponent.FromAbi(__retval);
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__compositor);
                global::ABI.Microsoft.UI.Composition.Scenes.SceneMeshRendererComponent.DisposeAbi(__retval);
            }
        }


        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0x5A, 0x8C, 0x4F, 0xC5, 0x4, 0xA1, 0xFA, 0x5C, 0x89, 0xDC, 0x13, 0xED, 0xAA, 0x6E, 0x3D, 0x88 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("C54F8C5A-A104-5CFA-89DC-13EDAA6E3D88")]
    internal interface ISceneMeshRendererComponentStatics : global::Microsoft.UI.Composition.Scenes.ISceneMeshRendererComponentStatics
    {
    }
    internal static class ISceneMeshStaticsMethods
    {


        internal static unsafe global::Microsoft.UI.Composition.Scenes.SceneMesh Create(IObjectReference _obj, global::Microsoft.UI.Composition.Compositor compositor)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __compositor = default;
            IntPtr __retval = default;
            try
            {
                __compositor = global::ABI.Microsoft.UI.Composition.Compositor.CreateMarshaler2(compositor);
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, IntPtr*, int>**)ThisPtr)[6](ThisPtr, MarshalInspectable<object>.GetAbi(__compositor), &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Composition.Scenes.SceneMesh.FromAbi(__retval);
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__compositor);
                global::ABI.Microsoft.UI.Composition.Scenes.SceneMesh.DisposeAbi(__retval);
            }
        }


        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0x25, 0x21, 0xC5, 0x29, 0x4B, 0x96, 0x15, 0x53, 0x80, 0xF9, 0x38, 0x93, 0x71, 0x32, 0x90, 0xF5 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("29C52125-964B-5315-80F9-3893713290F5")]
    internal interface ISceneMeshStatics : global::Microsoft.UI.Composition.Scenes.ISceneMeshStatics
    {
    }
    internal static class ISceneMetallicRoughnessMaterialMethods
    {

        internal static unsafe global::System.Numerics.Vector4 get_BaseColorFactor(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::System.Numerics.Vector4 __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::System.Numerics.Vector4*, int>**)ThisPtr)[8](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }
        internal static unsafe void set_BaseColorFactor(IObjectReference _obj, global::System.Numerics.Vector4 value)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::System.Numerics.Vector4, int>**)ThisPtr)[9](ThisPtr, value));
            global::System.GC.KeepAlive(_obj);
        }

        internal static unsafe global::Microsoft.UI.Composition.Scenes.SceneMaterialInput get_BaseColorInput(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[6](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Composition.Scenes.SceneMaterialInput.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.UI.Composition.Scenes.SceneMaterialInput.DisposeAbi(__retval);
            }
        }
        internal static unsafe void set_BaseColorInput(IObjectReference _obj, global::Microsoft.UI.Composition.Scenes.SceneMaterialInput value)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __value = default;
            try
            {
                __value = global::ABI.Microsoft.UI.Composition.Scenes.SceneMaterialInput.CreateMarshaler2(value);
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, int>**)ThisPtr)[7](ThisPtr, MarshalInspectable<object>.GetAbi(__value)));
                global::System.GC.KeepAlive(_obj);
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__value);
            }
        }

        internal static unsafe float get_MetallicFactor(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            float __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, float*, int>**)ThisPtr)[10](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }
        internal static unsafe void set_MetallicFactor(IObjectReference _obj, float value)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, float, int>**)ThisPtr)[11](ThisPtr, value));
            global::System.GC.KeepAlive(_obj);
        }

        internal static unsafe global::Microsoft.UI.Composition.Scenes.SceneMaterialInput get_MetallicRoughnessInput(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[12](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Composition.Scenes.SceneMaterialInput.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.UI.Composition.Scenes.SceneMaterialInput.DisposeAbi(__retval);
            }
        }
        internal static unsafe void set_MetallicRoughnessInput(IObjectReference _obj, global::Microsoft.UI.Composition.Scenes.SceneMaterialInput value)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __value = default;
            try
            {
                __value = global::ABI.Microsoft.UI.Composition.Scenes.SceneMaterialInput.CreateMarshaler2(value);
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, int>**)ThisPtr)[13](ThisPtr, MarshalInspectable<object>.GetAbi(__value)));
                global::System.GC.KeepAlive(_obj);
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__value);
            }
        }

        internal static unsafe float get_RoughnessFactor(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            float __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, float*, int>**)ThisPtr)[14](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }
        internal static unsafe void set_RoughnessFactor(IObjectReference _obj, float value)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, float, int>**)ThisPtr)[15](ThisPtr, value));
            global::System.GC.KeepAlive(_obj);
        }



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0xF4, 0xFC, 0x4A, 0xA, 0xAE, 0x7B, 0x2, 0x57, 0x9B, 0x85, 0x8B, 0xC8, 0x49, 0xF3, 0x99, 0x87 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("0A4AFCF4-7BAE-5702-9B85-8BC849F39987")]
    internal interface ISceneMetallicRoughnessMaterial : global::Microsoft.UI.Composition.Scenes.ISceneMetallicRoughnessMaterial
    {
    }
    internal static class ISceneMetallicRoughnessMaterialStaticsMethods
    {


        internal static unsafe global::Microsoft.UI.Composition.Scenes.SceneMetallicRoughnessMaterial Create(IObjectReference _obj, global::Microsoft.UI.Composition.Compositor compositor)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __compositor = default;
            IntPtr __retval = default;
            try
            {
                __compositor = global::ABI.Microsoft.UI.Composition.Compositor.CreateMarshaler2(compositor);
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, IntPtr*, int>**)ThisPtr)[6](ThisPtr, MarshalInspectable<object>.GetAbi(__compositor), &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Composition.Scenes.SceneMetallicRoughnessMaterial.FromAbi(__retval);
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__compositor);
                global::ABI.Microsoft.UI.Composition.Scenes.SceneMetallicRoughnessMaterial.DisposeAbi(__retval);
            }
        }


        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0x43, 0x20, 0xFD, 0xDF, 0x3C, 0xAB, 0xA0, 0x57, 0x8E, 0x13, 0x6F, 0x9, 0x72, 0x5E, 0x97, 0xF };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("DFFD2043-AB3C-57A0-8E13-6F09725E970F")]
    internal interface ISceneMetallicRoughnessMaterialStatics : global::Microsoft.UI.Composition.Scenes.ISceneMetallicRoughnessMaterialStatics
    {
    }
    internal static class ISceneModelTransformMethods
    {

        internal static unsafe global::System.Numerics.Quaternion get_Orientation(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::System.Numerics.Quaternion __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::System.Numerics.Quaternion*, int>**)ThisPtr)[6](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }
        internal static unsafe void set_Orientation(IObjectReference _obj, global::System.Numerics.Quaternion value)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::System.Numerics.Quaternion, int>**)ThisPtr)[7](ThisPtr, value));
            global::System.GC.KeepAlive(_obj);
        }

        internal static unsafe float get_RotationAngle(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            float __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, float*, int>**)ThisPtr)[8](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }
        internal static unsafe void set_RotationAngle(IObjectReference _obj, float value)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, float, int>**)ThisPtr)[9](ThisPtr, value));
            global::System.GC.KeepAlive(_obj);
        }

        internal static unsafe float get_RotationAngleInDegrees(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            float __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, float*, int>**)ThisPtr)[10](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }
        internal static unsafe void set_RotationAngleInDegrees(IObjectReference _obj, float value)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, float, int>**)ThisPtr)[11](ThisPtr, value));
            global::System.GC.KeepAlive(_obj);
        }

        internal static unsafe global::System.Numerics.Vector3 get_RotationAxis(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::System.Numerics.Vector3 __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::System.Numerics.Vector3*, int>**)ThisPtr)[12](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }
        internal static unsafe void set_RotationAxis(IObjectReference _obj, global::System.Numerics.Vector3 value)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::System.Numerics.Vector3, int>**)ThisPtr)[13](ThisPtr, value));
            global::System.GC.KeepAlive(_obj);
        }

        internal static unsafe global::System.Numerics.Vector3 get_Scale(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::System.Numerics.Vector3 __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::System.Numerics.Vector3*, int>**)ThisPtr)[14](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }
        internal static unsafe void set_Scale(IObjectReference _obj, global::System.Numerics.Vector3 value)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::System.Numerics.Vector3, int>**)ThisPtr)[15](ThisPtr, value));
            global::System.GC.KeepAlive(_obj);
        }

        internal static unsafe global::System.Numerics.Vector3 get_Translation(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::System.Numerics.Vector3 __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::System.Numerics.Vector3*, int>**)ThisPtr)[16](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }
        internal static unsafe void set_Translation(IObjectReference _obj, global::System.Numerics.Vector3 value)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::System.Numerics.Vector3, int>**)ThisPtr)[17](ThisPtr, value));
            global::System.GC.KeepAlive(_obj);
        }



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0x5F, 0x55, 0x5, 0x3F, 0x67, 0xF, 0x6E, 0x57, 0x9D, 0x8A, 0x93, 0xC1, 0xF2, 0x50, 0xC2, 0x9F };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("3F05555F-0F67-576E-9D8A-93C1F250C29F")]
    internal interface ISceneModelTransform : global::Microsoft.UI.Composition.Scenes.ISceneModelTransform
    {
    }
    internal static class ISceneNodeMethods
    {


        internal static unsafe global::Microsoft.UI.Composition.Scenes.SceneComponent FindFirstComponentOfType(IObjectReference _obj, global::Microsoft.UI.Composition.Scenes.SceneComponentType value)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::Microsoft.UI.Composition.Scenes.SceneComponentType, IntPtr*, int>**)ThisPtr)[10](ThisPtr, value, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Composition.Scenes.SceneComponent.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.UI.Composition.Scenes.SceneComponent.DisposeAbi(__retval);
            }
        }
        internal static unsafe global::Microsoft.UI.Composition.Scenes.SceneNodeCollection get_Children(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[6](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Composition.Scenes.SceneNodeCollection.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.UI.Composition.Scenes.SceneNodeCollection.DisposeAbi(__retval);
            }
        }

        internal static unsafe global::Microsoft.UI.Composition.Scenes.SceneComponentCollection get_Components(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[7](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Composition.Scenes.SceneComponentCollection.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.UI.Composition.Scenes.SceneComponentCollection.DisposeAbi(__retval);
            }
        }

        internal static unsafe global::Microsoft.UI.Composition.Scenes.SceneNode get_Parent(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[8](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Composition.Scenes.SceneNode.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.UI.Composition.Scenes.SceneNode.DisposeAbi(__retval);
            }
        }

        internal static unsafe global::Microsoft.UI.Composition.Scenes.SceneModelTransform get_Transform(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[9](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Composition.Scenes.SceneModelTransform.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.UI.Composition.Scenes.SceneModelTransform.DisposeAbi(__retval);
            }
        }



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0x40, 0xE1, 0xBC, 0xA1, 0xC2, 0x79, 0xE6, 0x59, 0x9B, 0x68, 0x63, 0xB1, 0xBA, 0xB0, 0xE2, 0xA6 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("A1BCE140-79C2-59E6-9B68-63B1BAB0E2A6")]
    internal interface ISceneNode : global::Microsoft.UI.Composition.Scenes.ISceneNode
    {
    }
    internal static class ISceneNodeCollectionMethods
    {



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0x8E, 0xB6, 0x19, 0xF2, 0x66, 0x56, 0x6C, 0x5C, 0xAA, 0x4E, 0x8, 0xDB, 0x7, 0xFD, 0x6B, 0xCF };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("F219B68E-5666-5C6C-AA4E-08DB07FD6BCF")]
    internal interface ISceneNodeCollection : global::Microsoft.UI.Composition.Scenes.ISceneNodeCollection
    {
    }
    internal static class ISceneNodeStaticsMethods
    {


        internal static unsafe global::Microsoft.UI.Composition.Scenes.SceneNode Create(IObjectReference _obj, global::Microsoft.UI.Composition.Compositor compositor)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __compositor = default;
            IntPtr __retval = default;
            try
            {
                __compositor = global::ABI.Microsoft.UI.Composition.Compositor.CreateMarshaler2(compositor);
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, IntPtr*, int>**)ThisPtr)[6](ThisPtr, MarshalInspectable<object>.GetAbi(__compositor), &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Composition.Scenes.SceneNode.FromAbi(__retval);
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__compositor);
                global::ABI.Microsoft.UI.Composition.Scenes.SceneNode.DisposeAbi(__retval);
            }
        }


        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0x94, 0x43, 0x1C, 0x80, 0x98, 0x41, 0xA1, 0x5D, 0xAC, 0x39, 0x6E, 0x8A, 0x44, 0xB5, 0xCE, 0x57 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("801C4394-4198-5DA1-AC39-6E8A44B5CE57")]
    internal interface ISceneNodeStatics : global::Microsoft.UI.Composition.Scenes.ISceneNodeStatics
    {
    }
    internal static class ISceneObjectMethods
    {



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0x14, 0xE5, 0x33, 0x43, 0xC7, 0x4F, 0x1E, 0x52, 0x8B, 0xCA, 0x11, 0xC5, 0x1F, 0xBC, 0xAF, 0x1E };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("4333E514-4FC7-521E-8BCA-11C51FBCAF1E")]
    internal interface ISceneObject : global::Microsoft.UI.Composition.Scenes.ISceneObject
    {
    }
    internal static class ISceneObjectFactoryMethods
    {



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0x7D, 0x7F, 0x79, 0xEE, 0xDB, 0x77, 0x4C, 0x5C, 0xB6, 0xF5, 0xC1, 0x93, 0xF, 0xAD, 0x85, 0xC5 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("EE797F7D-77DB-5C4C-B6F5-C1930FAD85C5")]
    internal interface ISceneObjectFactory : global::Microsoft.UI.Composition.Scenes.ISceneObjectFactory
    {
    }
    internal static class IScenePbrMaterialMethods
    {

        internal static unsafe float get_AlphaCutoff(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            float __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, float*, int>**)ThisPtr)[6](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }
        internal static unsafe void set_AlphaCutoff(IObjectReference _obj, float value)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, float, int>**)ThisPtr)[7](ThisPtr, value));
            global::System.GC.KeepAlive(_obj);
        }

        internal static unsafe global::Microsoft.UI.Composition.Scenes.SceneAlphaMode get_AlphaMode(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::Microsoft.UI.Composition.Scenes.SceneAlphaMode __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::Microsoft.UI.Composition.Scenes.SceneAlphaMode*, int>**)ThisPtr)[8](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }
        internal static unsafe void set_AlphaMode(IObjectReference _obj, global::Microsoft.UI.Composition.Scenes.SceneAlphaMode value)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::Microsoft.UI.Composition.Scenes.SceneAlphaMode, int>**)ThisPtr)[9](ThisPtr, value));
            global::System.GC.KeepAlive(_obj);
        }

        internal static unsafe global::System.Numerics.Vector3 get_EmissiveFactor(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::System.Numerics.Vector3 __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::System.Numerics.Vector3*, int>**)ThisPtr)[12](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }
        internal static unsafe void set_EmissiveFactor(IObjectReference _obj, global::System.Numerics.Vector3 value)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::System.Numerics.Vector3, int>**)ThisPtr)[13](ThisPtr, value));
            global::System.GC.KeepAlive(_obj);
        }

        internal static unsafe global::Microsoft.UI.Composition.Scenes.SceneMaterialInput get_EmissiveInput(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[10](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Composition.Scenes.SceneMaterialInput.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.UI.Composition.Scenes.SceneMaterialInput.DisposeAbi(__retval);
            }
        }
        internal static unsafe void set_EmissiveInput(IObjectReference _obj, global::Microsoft.UI.Composition.Scenes.SceneMaterialInput value)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __value = default;
            try
            {
                __value = global::ABI.Microsoft.UI.Composition.Scenes.SceneMaterialInput.CreateMarshaler2(value);
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, int>**)ThisPtr)[11](ThisPtr, MarshalInspectable<object>.GetAbi(__value)));
                global::System.GC.KeepAlive(_obj);
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__value);
            }
        }

        internal static unsafe bool get_IsDoubleSided(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            byte __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, byte*, int>**)ThisPtr)[14](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval != 0;
        }
        internal static unsafe void set_IsDoubleSided(IObjectReference _obj, bool value)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, byte, int>**)ThisPtr)[15](ThisPtr, (byte)(value ? 1 : 0)));
            global::System.GC.KeepAlive(_obj);
        }

        internal static unsafe global::Microsoft.UI.Composition.Scenes.SceneMaterialInput get_NormalInput(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[16](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Composition.Scenes.SceneMaterialInput.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.UI.Composition.Scenes.SceneMaterialInput.DisposeAbi(__retval);
            }
        }
        internal static unsafe void set_NormalInput(IObjectReference _obj, global::Microsoft.UI.Composition.Scenes.SceneMaterialInput value)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __value = default;
            try
            {
                __value = global::ABI.Microsoft.UI.Composition.Scenes.SceneMaterialInput.CreateMarshaler2(value);
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, int>**)ThisPtr)[17](ThisPtr, MarshalInspectable<object>.GetAbi(__value)));
                global::System.GC.KeepAlive(_obj);
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__value);
            }
        }

        internal static unsafe float get_NormalScale(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            float __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, float*, int>**)ThisPtr)[18](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }
        internal static unsafe void set_NormalScale(IObjectReference _obj, float value)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, float, int>**)ThisPtr)[19](ThisPtr, value));
            global::System.GC.KeepAlive(_obj);
        }

        internal static unsafe global::Microsoft.UI.Composition.Scenes.SceneMaterialInput get_OcclusionInput(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[20](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Composition.Scenes.SceneMaterialInput.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.UI.Composition.Scenes.SceneMaterialInput.DisposeAbi(__retval);
            }
        }
        internal static unsafe void set_OcclusionInput(IObjectReference _obj, global::Microsoft.UI.Composition.Scenes.SceneMaterialInput value)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __value = default;
            try
            {
                __value = global::ABI.Microsoft.UI.Composition.Scenes.SceneMaterialInput.CreateMarshaler2(value);
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, int>**)ThisPtr)[21](ThisPtr, MarshalInspectable<object>.GetAbi(__value)));
                global::System.GC.KeepAlive(_obj);
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__value);
            }
        }

        internal static unsafe float get_OcclusionStrength(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            float __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, float*, int>**)ThisPtr)[22](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }
        internal static unsafe void set_OcclusionStrength(IObjectReference _obj, float value)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, float, int>**)ThisPtr)[23](ThisPtr, value));
            global::System.GC.KeepAlive(_obj);
        }



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0x25, 0x7, 0x5D, 0x29, 0xFE, 0x56, 0x54, 0x59, 0x80, 0x57, 0x3F, 0x4C, 0xA7, 0x51, 0x5B, 0x36 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("295D0725-56FE-5954-8057-3F4CA7515B36")]
    internal interface IScenePbrMaterial : global::Microsoft.UI.Composition.Scenes.IScenePbrMaterial
    {
    }
    internal static class IScenePbrMaterialFactoryMethods
    {



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0x2A, 0xD3, 0x34, 0x9E, 0xC, 0xE3, 0xF5, 0x51, 0x84, 0xAC, 0x64, 0x67, 0x95, 0x6, 0x5, 0xCA };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("9E34D32A-E30C-51F5-84AC-6467950605CA")]
    internal interface IScenePbrMaterialFactory : global::Microsoft.UI.Composition.Scenes.IScenePbrMaterialFactory
    {
    }
    internal static class ISceneRendererComponentMethods
    {



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0x30, 0x80, 0xAB, 0x6B, 0xC1, 0x89, 0xBC, 0x5D, 0xA4, 0x8E, 0x18, 0x5, 0xDD, 0xF9, 0xCD, 0xD1 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("6BAB8030-89C1-5DBC-A48E-1805DDF9CDD1")]
    internal interface ISceneRendererComponent : global::Microsoft.UI.Composition.Scenes.ISceneRendererComponent
    {
    }
    internal static class ISceneRendererComponentFactoryMethods
    {



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0xD6, 0xC1, 0xCA, 0x3C, 0xF, 0x6A, 0x2E, 0x58, 0xBB, 0x1A, 0x10, 0xEB, 0xC1, 0xE4, 0x5, 0xCA };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("3CCAC1D6-6A0F-582E-BB1A-10EBC1E405CA")]
    internal interface ISceneRendererComponentFactory : global::Microsoft.UI.Composition.Scenes.ISceneRendererComponentFactory
    {
    }
    internal static class ISceneSurfaceMaterialInputMethods
    {

        internal static unsafe global::Microsoft.UI.Composition.CompositionBitmapInterpolationMode get_BitmapInterpolationMode(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::Microsoft.UI.Composition.CompositionBitmapInterpolationMode __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::Microsoft.UI.Composition.CompositionBitmapInterpolationMode*, int>**)ThisPtr)[6](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }
        internal static unsafe void set_BitmapInterpolationMode(IObjectReference _obj, global::Microsoft.UI.Composition.CompositionBitmapInterpolationMode value)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::Microsoft.UI.Composition.CompositionBitmapInterpolationMode, int>**)ThisPtr)[7](ThisPtr, value));
            global::System.GC.KeepAlive(_obj);
        }

        internal static unsafe global::Microsoft.UI.Composition.ICompositionSurface get_Surface(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[8](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return MarshalInterface<global::Microsoft.UI.Composition.ICompositionSurface>.FromAbi(__retval);
            }
            finally
            {
                MarshalInterface<global::Microsoft.UI.Composition.ICompositionSurface>.DisposeAbi(__retval);
            }
        }
        internal static unsafe void set_Surface(IObjectReference _obj, global::Microsoft.UI.Composition.ICompositionSurface value)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __value = default;
            try
            {
                __value = MarshalInterface<global::Microsoft.UI.Composition.ICompositionSurface>.CreateMarshaler2(value, global::ABI.Microsoft.UI.Composition.ICompositionSurfaceMethods.IID);
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, int>**)ThisPtr)[9](ThisPtr, MarshalInspectable<object>.GetAbi(__value)));
                global::System.GC.KeepAlive(_obj);
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__value);
            }
        }

        internal static unsafe global::Microsoft.UI.Composition.Scenes.SceneWrappingMode get_WrappingUMode(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::Microsoft.UI.Composition.Scenes.SceneWrappingMode __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::Microsoft.UI.Composition.Scenes.SceneWrappingMode*, int>**)ThisPtr)[10](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }
        internal static unsafe void set_WrappingUMode(IObjectReference _obj, global::Microsoft.UI.Composition.Scenes.SceneWrappingMode value)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::Microsoft.UI.Composition.Scenes.SceneWrappingMode, int>**)ThisPtr)[11](ThisPtr, value));
            global::System.GC.KeepAlive(_obj);
        }

        internal static unsafe global::Microsoft.UI.Composition.Scenes.SceneWrappingMode get_WrappingVMode(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::Microsoft.UI.Composition.Scenes.SceneWrappingMode __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::Microsoft.UI.Composition.Scenes.SceneWrappingMode*, int>**)ThisPtr)[12](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }
        internal static unsafe void set_WrappingVMode(IObjectReference _obj, global::Microsoft.UI.Composition.Scenes.SceneWrappingMode value)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::Microsoft.UI.Composition.Scenes.SceneWrappingMode, int>**)ThisPtr)[13](ThisPtr, value));
            global::System.GC.KeepAlive(_obj);
        }



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0x4F, 0x4B, 0x85, 0xB9, 0x6C, 0x28, 0xCD, 0x50, 0xA7, 0x34, 0x49, 0x1A, 0x25, 0x1D, 0x5F, 0xD3 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("B9854B4F-286C-50CD-A734-491A251D5FD3")]
    internal interface ISceneSurfaceMaterialInput : global::Microsoft.UI.Composition.Scenes.ISceneSurfaceMaterialInput
    {
    }
    internal static class ISceneSurfaceMaterialInputStaticsMethods
    {


        internal static unsafe global::Microsoft.UI.Composition.Scenes.SceneSurfaceMaterialInput Create(IObjectReference _obj, global::Microsoft.UI.Composition.Compositor compositor)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __compositor = default;
            IntPtr __retval = default;
            try
            {
                __compositor = global::ABI.Microsoft.UI.Composition.Compositor.CreateMarshaler2(compositor);
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, IntPtr*, int>**)ThisPtr)[6](ThisPtr, MarshalInspectable<object>.GetAbi(__compositor), &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Composition.Scenes.SceneSurfaceMaterialInput.FromAbi(__retval);
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__compositor);
                global::ABI.Microsoft.UI.Composition.Scenes.SceneSurfaceMaterialInput.DisposeAbi(__retval);
            }
        }


        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0x37, 0xA9, 0x1B, 0x8E, 0x60, 0xAD, 0xBC, 0x51, 0x82, 0x56, 0xCA, 0x62, 0xC4, 0xB2, 0xAE, 0x92 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("8E1BA937-AD60-51BC-8256-CA62C4B2AE92")]
    internal interface ISceneSurfaceMaterialInputStatics : global::Microsoft.UI.Composition.Scenes.ISceneSurfaceMaterialInputStatics
    {
    }
    internal static class ISceneVisualMethods
    {

        internal static unsafe global::Microsoft.UI.Composition.Scenes.SceneNode get_Root(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[6](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Composition.Scenes.SceneNode.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.UI.Composition.Scenes.SceneNode.DisposeAbi(__retval);
            }
        }
        internal static unsafe void set_Root(IObjectReference _obj, global::Microsoft.UI.Composition.Scenes.SceneNode value)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __value = default;
            try
            {
                __value = global::ABI.Microsoft.UI.Composition.Scenes.SceneNode.CreateMarshaler2(value);
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, int>**)ThisPtr)[7](ThisPtr, MarshalInspectable<object>.GetAbi(__value)));
                global::System.GC.KeepAlive(_obj);
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__value);
            }
        }



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0xAD, 0xD7, 0x44, 0x1, 0x7D, 0x6A, 0xCB, 0x59, 0xA0, 0xF9, 0x74, 0xA0, 0x4E, 0x85, 0x35, 0x2C };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("0144D7AD-6A7D-59CB-A0F9-74A04E85352C")]
    internal interface ISceneVisual : global::Microsoft.UI.Composition.Scenes.ISceneVisual
    {
    }
    internal static class ISceneVisualStaticsMethods
    {


        internal static unsafe global::Microsoft.UI.Composition.Scenes.SceneVisual Create(IObjectReference _obj, global::Microsoft.UI.Composition.Compositor compositor)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __compositor = default;
            IntPtr __retval = default;
            try
            {
                __compositor = global::ABI.Microsoft.UI.Composition.Compositor.CreateMarshaler2(compositor);
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, IntPtr*, int>**)ThisPtr)[6](ThisPtr, MarshalInspectable<object>.GetAbi(__compositor), &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Composition.Scenes.SceneVisual.FromAbi(__retval);
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__compositor);
                global::ABI.Microsoft.UI.Composition.Scenes.SceneVisual.DisposeAbi(__retval);
            }
        }


        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0xD1, 0xA6, 0x8D, 0x7B, 0xD8, 0x5B, 0x95, 0x50, 0x92, 0x64, 0xE5, 0x57, 0x26, 0x53, 0xEA, 0x7 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("7B8DA6D1-5BD8-5095-9264-E5572653EA07")]
    internal interface ISceneVisualStatics : global::Microsoft.UI.Composition.Scenes.ISceneVisualStatics
    {
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    public struct SceneBoundingBox
    {

        public static IObjectReference CreateMarshaler(global::Microsoft.UI.Composition.Scenes.SceneBoundingBox obj) => obj is null ? null : MarshalInspectable<global::Microsoft.UI.Composition.Scenes.SceneBoundingBox>.CreateMarshaler<IUnknownVftbl>(obj, global::ABI.Microsoft.UI.Composition.Scenes.ISceneBoundingBoxMethods.IID);
        public static ObjectReferenceValue CreateMarshaler2(global::Microsoft.UI.Composition.Scenes.SceneBoundingBox obj) => MarshalInspectable<object>.CreateMarshaler2(obj, global::ABI.Microsoft.UI.Composition.Scenes.ISceneBoundingBoxMethods.IID);
        public static IntPtr GetAbi(IObjectReference value) => value is null ? IntPtr.Zero : MarshalInterfaceHelper<object>.GetAbi(value);
        public static global::Microsoft.UI.Composition.Scenes.SceneBoundingBox FromAbi(IntPtr thisPtr) => global::Microsoft.UI.Composition.Scenes.SceneBoundingBox.FromAbi(thisPtr);
        public static IntPtr FromManaged(global::Microsoft.UI.Composition.Scenes.SceneBoundingBox obj) => obj is null ? IntPtr.Zero : CreateMarshaler2(obj).Detach();
        public static unsafe MarshalInterfaceHelper<global::Microsoft.UI.Composition.Scenes.SceneBoundingBox>.MarshalerArray CreateMarshalerArray(global::Microsoft.UI.Composition.Scenes.SceneBoundingBox[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.Scenes.SceneBoundingBox>.CreateMarshalerArray2(array, (o) => CreateMarshaler2(o));
        public static (int length, IntPtr data) GetAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.Scenes.SceneBoundingBox>.GetAbiArray(box);
        public static unsafe global::Microsoft.UI.Composition.Scenes.SceneBoundingBox[] FromAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.Scenes.SceneBoundingBox>.FromAbiArray(box, FromAbi);
        public static void CopyAbiArray(global::Microsoft.UI.Composition.Scenes.SceneBoundingBox[] array, object box) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.Scenes.SceneBoundingBox>.CopyAbiArray(array, box, FromAbi);
        public static (int length, IntPtr data) FromManagedArray(global::Microsoft.UI.Composition.Scenes.SceneBoundingBox[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.Scenes.SceneBoundingBox>.FromManagedArray(array, (o) => FromManaged(o));
        public static void DisposeMarshaler(IObjectReference value) => MarshalInspectable<object>.DisposeMarshaler(value);
        public static void DisposeMarshalerArray(MarshalInterfaceHelper<global::Microsoft.UI.Composition.Scenes.SceneBoundingBox>.MarshalerArray array) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.Scenes.SceneBoundingBox>.DisposeMarshalerArray(array);
        public static void DisposeAbi(IntPtr abi) => MarshalInspectable<object>.DisposeAbi(abi);
        public static unsafe void DisposeAbiArray(object box) => MarshalInspectable<object>.DisposeAbiArray(box);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    internal sealed class SceneBoundingBoxRcwFactoryAttribute : global::WinRT.WinRTImplementationTypeRcwFactoryAttribute
    {
        public override object CreateInstance(global::WinRT.IInspectable inspectable)
            => new global::Microsoft.UI.Composition.Scenes.SceneBoundingBox(inspectable.ObjRef);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    public struct SceneComponent
    {

        public static IObjectReference CreateMarshaler(global::Microsoft.UI.Composition.Scenes.SceneComponent obj) => obj is null ? null : MarshalInspectable<global::Microsoft.UI.Composition.Scenes.SceneComponent>.CreateMarshaler<IUnknownVftbl>(obj, global::ABI.Microsoft.UI.Composition.Scenes.ISceneComponentMethods.IID);
        public static ObjectReferenceValue CreateMarshaler2(global::Microsoft.UI.Composition.Scenes.SceneComponent obj) => MarshalInspectable<object>.CreateMarshaler2(obj, global::ABI.Microsoft.UI.Composition.Scenes.ISceneComponentMethods.IID);
        public static IntPtr GetAbi(IObjectReference value) => value is null ? IntPtr.Zero : MarshalInterfaceHelper<object>.GetAbi(value);
        public static global::Microsoft.UI.Composition.Scenes.SceneComponent FromAbi(IntPtr thisPtr) => global::Microsoft.UI.Composition.Scenes.SceneComponent.FromAbi(thisPtr);
        public static IntPtr FromManaged(global::Microsoft.UI.Composition.Scenes.SceneComponent obj) => obj is null ? IntPtr.Zero : CreateMarshaler2(obj).Detach();
        public static unsafe MarshalInterfaceHelper<global::Microsoft.UI.Composition.Scenes.SceneComponent>.MarshalerArray CreateMarshalerArray(global::Microsoft.UI.Composition.Scenes.SceneComponent[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.Scenes.SceneComponent>.CreateMarshalerArray2(array, (o) => CreateMarshaler2(o));
        public static (int length, IntPtr data) GetAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.Scenes.SceneComponent>.GetAbiArray(box);
        public static unsafe global::Microsoft.UI.Composition.Scenes.SceneComponent[] FromAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.Scenes.SceneComponent>.FromAbiArray(box, FromAbi);
        public static void CopyAbiArray(global::Microsoft.UI.Composition.Scenes.SceneComponent[] array, object box) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.Scenes.SceneComponent>.CopyAbiArray(array, box, FromAbi);
        public static (int length, IntPtr data) FromManagedArray(global::Microsoft.UI.Composition.Scenes.SceneComponent[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.Scenes.SceneComponent>.FromManagedArray(array, (o) => FromManaged(o));
        public static void DisposeMarshaler(IObjectReference value) => MarshalInspectable<object>.DisposeMarshaler(value);
        public static void DisposeMarshalerArray(MarshalInterfaceHelper<global::Microsoft.UI.Composition.Scenes.SceneComponent>.MarshalerArray array) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.Scenes.SceneComponent>.DisposeMarshalerArray(array);
        public static void DisposeAbi(IntPtr abi) => MarshalInspectable<object>.DisposeAbi(abi);
        public static unsafe void DisposeAbiArray(object box) => MarshalInspectable<object>.DisposeAbiArray(box);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    internal sealed class SceneComponentRcwFactoryAttribute : global::WinRT.WinRTImplementationTypeRcwFactoryAttribute
    {
        public override object CreateInstance(global::WinRT.IInspectable inspectable)
            => new global::Microsoft.UI.Composition.Scenes.SceneComponent(inspectable.ObjRef);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    public struct SceneComponentCollection
    {

        public static IObjectReference CreateMarshaler(global::Microsoft.UI.Composition.Scenes.SceneComponentCollection obj) => obj is null ? null : MarshalInterface<global::System.Collections.Generic.IList<global::Microsoft.UI.Composition.Scenes.SceneComponent>>.CreateMarshaler(obj);
        public static ObjectReferenceValue CreateMarshaler2(global::Microsoft.UI.Composition.Scenes.SceneComponentCollection obj) => MarshalInterface<global::System.Collections.Generic.IList<global::Microsoft.UI.Composition.Scenes.SceneComponent>>.CreateMarshaler2(obj, global::ABI.System.Collections.Generic.IListMethods<global::Microsoft.UI.Composition.Scenes.SceneComponent>.IID);
        public static IntPtr GetAbi(IObjectReference value) => value is null ? IntPtr.Zero : MarshalInterfaceHelper<object>.GetAbi(value);
        public static global::Microsoft.UI.Composition.Scenes.SceneComponentCollection FromAbi(IntPtr thisPtr) => global::Microsoft.UI.Composition.Scenes.SceneComponentCollection.FromAbi(thisPtr);
        public static IntPtr FromManaged(global::Microsoft.UI.Composition.Scenes.SceneComponentCollection obj) => obj is null ? IntPtr.Zero : CreateMarshaler2(obj).Detach();
        public static unsafe MarshalInterfaceHelper<global::Microsoft.UI.Composition.Scenes.SceneComponentCollection>.MarshalerArray CreateMarshalerArray(global::Microsoft.UI.Composition.Scenes.SceneComponentCollection[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.Scenes.SceneComponentCollection>.CreateMarshalerArray2(array, (o) => CreateMarshaler2(o));
        public static (int length, IntPtr data) GetAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.Scenes.SceneComponentCollection>.GetAbiArray(box);
        public static unsafe global::Microsoft.UI.Composition.Scenes.SceneComponentCollection[] FromAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.Scenes.SceneComponentCollection>.FromAbiArray(box, FromAbi);
        public static void CopyAbiArray(global::Microsoft.UI.Composition.Scenes.SceneComponentCollection[] array, object box) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.Scenes.SceneComponentCollection>.CopyAbiArray(array, box, FromAbi);
        public static (int length, IntPtr data) FromManagedArray(global::Microsoft.UI.Composition.Scenes.SceneComponentCollection[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.Scenes.SceneComponentCollection>.FromManagedArray(array, (o) => FromManaged(o));
        public static void DisposeMarshaler(IObjectReference value) => MarshalInspectable<object>.DisposeMarshaler(value);
        public static void DisposeMarshalerArray(MarshalInterfaceHelper<global::Microsoft.UI.Composition.Scenes.SceneComponentCollection>.MarshalerArray array) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.Scenes.SceneComponentCollection>.DisposeMarshalerArray(array);
        public static void DisposeAbi(IntPtr abi) => MarshalInspectable<object>.DisposeAbi(abi);
        public static unsafe void DisposeAbiArray(object box) => MarshalInspectable<object>.DisposeAbiArray(box);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    internal sealed class SceneComponentCollectionRcwFactoryAttribute : global::WinRT.WinRTImplementationTypeRcwFactoryAttribute
    {
        public override object CreateInstance(global::WinRT.IInspectable inspectable)
            => new global::Microsoft.UI.Composition.Scenes.SceneComponentCollection(inspectable.ObjRef);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    public struct SceneMaterial
    {

        public static IObjectReference CreateMarshaler(global::Microsoft.UI.Composition.Scenes.SceneMaterial obj) => obj is null ? null : MarshalInspectable<global::Microsoft.UI.Composition.Scenes.SceneMaterial>.CreateMarshaler<IUnknownVftbl>(obj, global::ABI.Microsoft.UI.Composition.Scenes.ISceneMaterialMethods.IID);
        public static ObjectReferenceValue CreateMarshaler2(global::Microsoft.UI.Composition.Scenes.SceneMaterial obj) => MarshalInspectable<object>.CreateMarshaler2(obj, global::ABI.Microsoft.UI.Composition.Scenes.ISceneMaterialMethods.IID);
        public static IntPtr GetAbi(IObjectReference value) => value is null ? IntPtr.Zero : MarshalInterfaceHelper<object>.GetAbi(value);
        public static global::Microsoft.UI.Composition.Scenes.SceneMaterial FromAbi(IntPtr thisPtr) => global::Microsoft.UI.Composition.Scenes.SceneMaterial.FromAbi(thisPtr);
        public static IntPtr FromManaged(global::Microsoft.UI.Composition.Scenes.SceneMaterial obj) => obj is null ? IntPtr.Zero : CreateMarshaler2(obj).Detach();
        public static unsafe MarshalInterfaceHelper<global::Microsoft.UI.Composition.Scenes.SceneMaterial>.MarshalerArray CreateMarshalerArray(global::Microsoft.UI.Composition.Scenes.SceneMaterial[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.Scenes.SceneMaterial>.CreateMarshalerArray2(array, (o) => CreateMarshaler2(o));
        public static (int length, IntPtr data) GetAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.Scenes.SceneMaterial>.GetAbiArray(box);
        public static unsafe global::Microsoft.UI.Composition.Scenes.SceneMaterial[] FromAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.Scenes.SceneMaterial>.FromAbiArray(box, FromAbi);
        public static void CopyAbiArray(global::Microsoft.UI.Composition.Scenes.SceneMaterial[] array, object box) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.Scenes.SceneMaterial>.CopyAbiArray(array, box, FromAbi);
        public static (int length, IntPtr data) FromManagedArray(global::Microsoft.UI.Composition.Scenes.SceneMaterial[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.Scenes.SceneMaterial>.FromManagedArray(array, (o) => FromManaged(o));
        public static void DisposeMarshaler(IObjectReference value) => MarshalInspectable<object>.DisposeMarshaler(value);
        public static void DisposeMarshalerArray(MarshalInterfaceHelper<global::Microsoft.UI.Composition.Scenes.SceneMaterial>.MarshalerArray array) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.Scenes.SceneMaterial>.DisposeMarshalerArray(array);
        public static void DisposeAbi(IntPtr abi) => MarshalInspectable<object>.DisposeAbi(abi);
        public static unsafe void DisposeAbiArray(object box) => MarshalInspectable<object>.DisposeAbiArray(box);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    internal sealed class SceneMaterialRcwFactoryAttribute : global::WinRT.WinRTImplementationTypeRcwFactoryAttribute
    {
        public override object CreateInstance(global::WinRT.IInspectable inspectable)
            => new global::Microsoft.UI.Composition.Scenes.SceneMaterial(inspectable.ObjRef);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    public struct SceneMaterialInput
    {

        public static IObjectReference CreateMarshaler(global::Microsoft.UI.Composition.Scenes.SceneMaterialInput obj) => obj is null ? null : MarshalInspectable<global::Microsoft.UI.Composition.Scenes.SceneMaterialInput>.CreateMarshaler<IUnknownVftbl>(obj, global::ABI.Microsoft.UI.Composition.Scenes.ISceneMaterialInputMethods.IID);
        public static ObjectReferenceValue CreateMarshaler2(global::Microsoft.UI.Composition.Scenes.SceneMaterialInput obj) => MarshalInspectable<object>.CreateMarshaler2(obj, global::ABI.Microsoft.UI.Composition.Scenes.ISceneMaterialInputMethods.IID);
        public static IntPtr GetAbi(IObjectReference value) => value is null ? IntPtr.Zero : MarshalInterfaceHelper<object>.GetAbi(value);
        public static global::Microsoft.UI.Composition.Scenes.SceneMaterialInput FromAbi(IntPtr thisPtr) => global::Microsoft.UI.Composition.Scenes.SceneMaterialInput.FromAbi(thisPtr);
        public static IntPtr FromManaged(global::Microsoft.UI.Composition.Scenes.SceneMaterialInput obj) => obj is null ? IntPtr.Zero : CreateMarshaler2(obj).Detach();
        public static unsafe MarshalInterfaceHelper<global::Microsoft.UI.Composition.Scenes.SceneMaterialInput>.MarshalerArray CreateMarshalerArray(global::Microsoft.UI.Composition.Scenes.SceneMaterialInput[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.Scenes.SceneMaterialInput>.CreateMarshalerArray2(array, (o) => CreateMarshaler2(o));
        public static (int length, IntPtr data) GetAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.Scenes.SceneMaterialInput>.GetAbiArray(box);
        public static unsafe global::Microsoft.UI.Composition.Scenes.SceneMaterialInput[] FromAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.Scenes.SceneMaterialInput>.FromAbiArray(box, FromAbi);
        public static void CopyAbiArray(global::Microsoft.UI.Composition.Scenes.SceneMaterialInput[] array, object box) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.Scenes.SceneMaterialInput>.CopyAbiArray(array, box, FromAbi);
        public static (int length, IntPtr data) FromManagedArray(global::Microsoft.UI.Composition.Scenes.SceneMaterialInput[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.Scenes.SceneMaterialInput>.FromManagedArray(array, (o) => FromManaged(o));
        public static void DisposeMarshaler(IObjectReference value) => MarshalInspectable<object>.DisposeMarshaler(value);
        public static void DisposeMarshalerArray(MarshalInterfaceHelper<global::Microsoft.UI.Composition.Scenes.SceneMaterialInput>.MarshalerArray array) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.Scenes.SceneMaterialInput>.DisposeMarshalerArray(array);
        public static void DisposeAbi(IntPtr abi) => MarshalInspectable<object>.DisposeAbi(abi);
        public static unsafe void DisposeAbiArray(object box) => MarshalInspectable<object>.DisposeAbiArray(box);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    internal sealed class SceneMaterialInputRcwFactoryAttribute : global::WinRT.WinRTImplementationTypeRcwFactoryAttribute
    {
        public override object CreateInstance(global::WinRT.IInspectable inspectable)
            => new global::Microsoft.UI.Composition.Scenes.SceneMaterialInput(inspectable.ObjRef);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    public struct SceneMesh
    {

        public static IObjectReference CreateMarshaler(global::Microsoft.UI.Composition.Scenes.SceneMesh obj) => obj is null ? null : MarshalInspectable<global::Microsoft.UI.Composition.Scenes.SceneMesh>.CreateMarshaler<IUnknownVftbl>(obj, global::ABI.Microsoft.UI.Composition.Scenes.ISceneMeshMethods.IID);
        public static ObjectReferenceValue CreateMarshaler2(global::Microsoft.UI.Composition.Scenes.SceneMesh obj) => MarshalInspectable<object>.CreateMarshaler2(obj, global::ABI.Microsoft.UI.Composition.Scenes.ISceneMeshMethods.IID);
        public static IntPtr GetAbi(IObjectReference value) => value is null ? IntPtr.Zero : MarshalInterfaceHelper<object>.GetAbi(value);
        public static global::Microsoft.UI.Composition.Scenes.SceneMesh FromAbi(IntPtr thisPtr) => global::Microsoft.UI.Composition.Scenes.SceneMesh.FromAbi(thisPtr);
        public static IntPtr FromManaged(global::Microsoft.UI.Composition.Scenes.SceneMesh obj) => obj is null ? IntPtr.Zero : CreateMarshaler2(obj).Detach();
        public static unsafe MarshalInterfaceHelper<global::Microsoft.UI.Composition.Scenes.SceneMesh>.MarshalerArray CreateMarshalerArray(global::Microsoft.UI.Composition.Scenes.SceneMesh[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.Scenes.SceneMesh>.CreateMarshalerArray2(array, (o) => CreateMarshaler2(o));
        public static (int length, IntPtr data) GetAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.Scenes.SceneMesh>.GetAbiArray(box);
        public static unsafe global::Microsoft.UI.Composition.Scenes.SceneMesh[] FromAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.Scenes.SceneMesh>.FromAbiArray(box, FromAbi);
        public static void CopyAbiArray(global::Microsoft.UI.Composition.Scenes.SceneMesh[] array, object box) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.Scenes.SceneMesh>.CopyAbiArray(array, box, FromAbi);
        public static (int length, IntPtr data) FromManagedArray(global::Microsoft.UI.Composition.Scenes.SceneMesh[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.Scenes.SceneMesh>.FromManagedArray(array, (o) => FromManaged(o));
        public static void DisposeMarshaler(IObjectReference value) => MarshalInspectable<object>.DisposeMarshaler(value);
        public static void DisposeMarshalerArray(MarshalInterfaceHelper<global::Microsoft.UI.Composition.Scenes.SceneMesh>.MarshalerArray array) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.Scenes.SceneMesh>.DisposeMarshalerArray(array);
        public static void DisposeAbi(IntPtr abi) => MarshalInspectable<object>.DisposeAbi(abi);
        public static unsafe void DisposeAbiArray(object box) => MarshalInspectable<object>.DisposeAbiArray(box);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    internal sealed class SceneMeshRcwFactoryAttribute : global::WinRT.WinRTImplementationTypeRcwFactoryAttribute
    {
        public override object CreateInstance(global::WinRT.IInspectable inspectable)
            => new global::Microsoft.UI.Composition.Scenes.SceneMesh(inspectable.ObjRef);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    public struct SceneMeshMaterialAttributeMap
    {

        public static IObjectReference CreateMarshaler(global::Microsoft.UI.Composition.Scenes.SceneMeshMaterialAttributeMap obj) => obj is null ? null : MarshalInspectable<global::Microsoft.UI.Composition.Scenes.SceneMeshMaterialAttributeMap>.CreateMarshaler<IUnknownVftbl>(obj, global::ABI.Microsoft.UI.Composition.Scenes.ISceneMeshMaterialAttributeMapMethods.IID);
        public static ObjectReferenceValue CreateMarshaler2(global::Microsoft.UI.Composition.Scenes.SceneMeshMaterialAttributeMap obj) => MarshalInspectable<object>.CreateMarshaler2(obj, global::ABI.Microsoft.UI.Composition.Scenes.ISceneMeshMaterialAttributeMapMethods.IID);
        public static IntPtr GetAbi(IObjectReference value) => value is null ? IntPtr.Zero : MarshalInterfaceHelper<object>.GetAbi(value);
        public static global::Microsoft.UI.Composition.Scenes.SceneMeshMaterialAttributeMap FromAbi(IntPtr thisPtr) => global::Microsoft.UI.Composition.Scenes.SceneMeshMaterialAttributeMap.FromAbi(thisPtr);
        public static IntPtr FromManaged(global::Microsoft.UI.Composition.Scenes.SceneMeshMaterialAttributeMap obj) => obj is null ? IntPtr.Zero : CreateMarshaler2(obj).Detach();
        public static unsafe MarshalInterfaceHelper<global::Microsoft.UI.Composition.Scenes.SceneMeshMaterialAttributeMap>.MarshalerArray CreateMarshalerArray(global::Microsoft.UI.Composition.Scenes.SceneMeshMaterialAttributeMap[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.Scenes.SceneMeshMaterialAttributeMap>.CreateMarshalerArray2(array, (o) => CreateMarshaler2(o));
        public static (int length, IntPtr data) GetAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.Scenes.SceneMeshMaterialAttributeMap>.GetAbiArray(box);
        public static unsafe global::Microsoft.UI.Composition.Scenes.SceneMeshMaterialAttributeMap[] FromAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.Scenes.SceneMeshMaterialAttributeMap>.FromAbiArray(box, FromAbi);
        public static void CopyAbiArray(global::Microsoft.UI.Composition.Scenes.SceneMeshMaterialAttributeMap[] array, object box) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.Scenes.SceneMeshMaterialAttributeMap>.CopyAbiArray(array, box, FromAbi);
        public static (int length, IntPtr data) FromManagedArray(global::Microsoft.UI.Composition.Scenes.SceneMeshMaterialAttributeMap[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.Scenes.SceneMeshMaterialAttributeMap>.FromManagedArray(array, (o) => FromManaged(o));
        public static void DisposeMarshaler(IObjectReference value) => MarshalInspectable<object>.DisposeMarshaler(value);
        public static void DisposeMarshalerArray(MarshalInterfaceHelper<global::Microsoft.UI.Composition.Scenes.SceneMeshMaterialAttributeMap>.MarshalerArray array) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.Scenes.SceneMeshMaterialAttributeMap>.DisposeMarshalerArray(array);
        public static void DisposeAbi(IntPtr abi) => MarshalInspectable<object>.DisposeAbi(abi);
        public static unsafe void DisposeAbiArray(object box) => MarshalInspectable<object>.DisposeAbiArray(box);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    internal sealed class SceneMeshMaterialAttributeMapRcwFactoryAttribute : global::WinRT.WinRTImplementationTypeRcwFactoryAttribute
    {
        public override object CreateInstance(global::WinRT.IInspectable inspectable)
            => new global::Microsoft.UI.Composition.Scenes.SceneMeshMaterialAttributeMap(inspectable.ObjRef);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    public struct SceneMeshRendererComponent
    {

        public static IObjectReference CreateMarshaler(global::Microsoft.UI.Composition.Scenes.SceneMeshRendererComponent obj) => obj is null ? null : MarshalInspectable<global::Microsoft.UI.Composition.Scenes.SceneMeshRendererComponent>.CreateMarshaler<IUnknownVftbl>(obj, global::ABI.Microsoft.UI.Composition.Scenes.ISceneMeshRendererComponentMethods.IID);
        public static ObjectReferenceValue CreateMarshaler2(global::Microsoft.UI.Composition.Scenes.SceneMeshRendererComponent obj) => MarshalInspectable<object>.CreateMarshaler2(obj, global::ABI.Microsoft.UI.Composition.Scenes.ISceneMeshRendererComponentMethods.IID);
        public static IntPtr GetAbi(IObjectReference value) => value is null ? IntPtr.Zero : MarshalInterfaceHelper<object>.GetAbi(value);
        public static global::Microsoft.UI.Composition.Scenes.SceneMeshRendererComponent FromAbi(IntPtr thisPtr) => global::Microsoft.UI.Composition.Scenes.SceneMeshRendererComponent.FromAbi(thisPtr);
        public static IntPtr FromManaged(global::Microsoft.UI.Composition.Scenes.SceneMeshRendererComponent obj) => obj is null ? IntPtr.Zero : CreateMarshaler2(obj).Detach();
        public static unsafe MarshalInterfaceHelper<global::Microsoft.UI.Composition.Scenes.SceneMeshRendererComponent>.MarshalerArray CreateMarshalerArray(global::Microsoft.UI.Composition.Scenes.SceneMeshRendererComponent[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.Scenes.SceneMeshRendererComponent>.CreateMarshalerArray2(array, (o) => CreateMarshaler2(o));
        public static (int length, IntPtr data) GetAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.Scenes.SceneMeshRendererComponent>.GetAbiArray(box);
        public static unsafe global::Microsoft.UI.Composition.Scenes.SceneMeshRendererComponent[] FromAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.Scenes.SceneMeshRendererComponent>.FromAbiArray(box, FromAbi);
        public static void CopyAbiArray(global::Microsoft.UI.Composition.Scenes.SceneMeshRendererComponent[] array, object box) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.Scenes.SceneMeshRendererComponent>.CopyAbiArray(array, box, FromAbi);
        public static (int length, IntPtr data) FromManagedArray(global::Microsoft.UI.Composition.Scenes.SceneMeshRendererComponent[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.Scenes.SceneMeshRendererComponent>.FromManagedArray(array, (o) => FromManaged(o));
        public static void DisposeMarshaler(IObjectReference value) => MarshalInspectable<object>.DisposeMarshaler(value);
        public static void DisposeMarshalerArray(MarshalInterfaceHelper<global::Microsoft.UI.Composition.Scenes.SceneMeshRendererComponent>.MarshalerArray array) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.Scenes.SceneMeshRendererComponent>.DisposeMarshalerArray(array);
        public static void DisposeAbi(IntPtr abi) => MarshalInspectable<object>.DisposeAbi(abi);
        public static unsafe void DisposeAbiArray(object box) => MarshalInspectable<object>.DisposeAbiArray(box);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    internal sealed class SceneMeshRendererComponentRcwFactoryAttribute : global::WinRT.WinRTImplementationTypeRcwFactoryAttribute
    {
        public override object CreateInstance(global::WinRT.IInspectable inspectable)
            => new global::Microsoft.UI.Composition.Scenes.SceneMeshRendererComponent(inspectable.ObjRef);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    public struct SceneMetallicRoughnessMaterial
    {

        public static IObjectReference CreateMarshaler(global::Microsoft.UI.Composition.Scenes.SceneMetallicRoughnessMaterial obj) => obj is null ? null : MarshalInspectable<global::Microsoft.UI.Composition.Scenes.SceneMetallicRoughnessMaterial>.CreateMarshaler<IUnknownVftbl>(obj, global::ABI.Microsoft.UI.Composition.Scenes.ISceneMetallicRoughnessMaterialMethods.IID);
        public static ObjectReferenceValue CreateMarshaler2(global::Microsoft.UI.Composition.Scenes.SceneMetallicRoughnessMaterial obj) => MarshalInspectable<object>.CreateMarshaler2(obj, global::ABI.Microsoft.UI.Composition.Scenes.ISceneMetallicRoughnessMaterialMethods.IID);
        public static IntPtr GetAbi(IObjectReference value) => value is null ? IntPtr.Zero : MarshalInterfaceHelper<object>.GetAbi(value);
        public static global::Microsoft.UI.Composition.Scenes.SceneMetallicRoughnessMaterial FromAbi(IntPtr thisPtr) => global::Microsoft.UI.Composition.Scenes.SceneMetallicRoughnessMaterial.FromAbi(thisPtr);
        public static IntPtr FromManaged(global::Microsoft.UI.Composition.Scenes.SceneMetallicRoughnessMaterial obj) => obj is null ? IntPtr.Zero : CreateMarshaler2(obj).Detach();
        public static unsafe MarshalInterfaceHelper<global::Microsoft.UI.Composition.Scenes.SceneMetallicRoughnessMaterial>.MarshalerArray CreateMarshalerArray(global::Microsoft.UI.Composition.Scenes.SceneMetallicRoughnessMaterial[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.Scenes.SceneMetallicRoughnessMaterial>.CreateMarshalerArray2(array, (o) => CreateMarshaler2(o));
        public static (int length, IntPtr data) GetAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.Scenes.SceneMetallicRoughnessMaterial>.GetAbiArray(box);
        public static unsafe global::Microsoft.UI.Composition.Scenes.SceneMetallicRoughnessMaterial[] FromAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.Scenes.SceneMetallicRoughnessMaterial>.FromAbiArray(box, FromAbi);
        public static void CopyAbiArray(global::Microsoft.UI.Composition.Scenes.SceneMetallicRoughnessMaterial[] array, object box) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.Scenes.SceneMetallicRoughnessMaterial>.CopyAbiArray(array, box, FromAbi);
        public static (int length, IntPtr data) FromManagedArray(global::Microsoft.UI.Composition.Scenes.SceneMetallicRoughnessMaterial[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.Scenes.SceneMetallicRoughnessMaterial>.FromManagedArray(array, (o) => FromManaged(o));
        public static void DisposeMarshaler(IObjectReference value) => MarshalInspectable<object>.DisposeMarshaler(value);
        public static void DisposeMarshalerArray(MarshalInterfaceHelper<global::Microsoft.UI.Composition.Scenes.SceneMetallicRoughnessMaterial>.MarshalerArray array) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.Scenes.SceneMetallicRoughnessMaterial>.DisposeMarshalerArray(array);
        public static void DisposeAbi(IntPtr abi) => MarshalInspectable<object>.DisposeAbi(abi);
        public static unsafe void DisposeAbiArray(object box) => MarshalInspectable<object>.DisposeAbiArray(box);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    internal sealed class SceneMetallicRoughnessMaterialRcwFactoryAttribute : global::WinRT.WinRTImplementationTypeRcwFactoryAttribute
    {
        public override object CreateInstance(global::WinRT.IInspectable inspectable)
            => new global::Microsoft.UI.Composition.Scenes.SceneMetallicRoughnessMaterial(inspectable.ObjRef);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    public struct SceneModelTransform
    {

        public static IObjectReference CreateMarshaler(global::Microsoft.UI.Composition.Scenes.SceneModelTransform obj) => obj is null ? null : MarshalInspectable<global::Microsoft.UI.Composition.Scenes.SceneModelTransform>.CreateMarshaler<IUnknownVftbl>(obj, global::ABI.Microsoft.UI.Composition.Scenes.ISceneModelTransformMethods.IID);
        public static ObjectReferenceValue CreateMarshaler2(global::Microsoft.UI.Composition.Scenes.SceneModelTransform obj) => MarshalInspectable<object>.CreateMarshaler2(obj, global::ABI.Microsoft.UI.Composition.Scenes.ISceneModelTransformMethods.IID);
        public static IntPtr GetAbi(IObjectReference value) => value is null ? IntPtr.Zero : MarshalInterfaceHelper<object>.GetAbi(value);
        public static global::Microsoft.UI.Composition.Scenes.SceneModelTransform FromAbi(IntPtr thisPtr) => global::Microsoft.UI.Composition.Scenes.SceneModelTransform.FromAbi(thisPtr);
        public static IntPtr FromManaged(global::Microsoft.UI.Composition.Scenes.SceneModelTransform obj) => obj is null ? IntPtr.Zero : CreateMarshaler2(obj).Detach();
        public static unsafe MarshalInterfaceHelper<global::Microsoft.UI.Composition.Scenes.SceneModelTransform>.MarshalerArray CreateMarshalerArray(global::Microsoft.UI.Composition.Scenes.SceneModelTransform[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.Scenes.SceneModelTransform>.CreateMarshalerArray2(array, (o) => CreateMarshaler2(o));
        public static (int length, IntPtr data) GetAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.Scenes.SceneModelTransform>.GetAbiArray(box);
        public static unsafe global::Microsoft.UI.Composition.Scenes.SceneModelTransform[] FromAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.Scenes.SceneModelTransform>.FromAbiArray(box, FromAbi);
        public static void CopyAbiArray(global::Microsoft.UI.Composition.Scenes.SceneModelTransform[] array, object box) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.Scenes.SceneModelTransform>.CopyAbiArray(array, box, FromAbi);
        public static (int length, IntPtr data) FromManagedArray(global::Microsoft.UI.Composition.Scenes.SceneModelTransform[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.Scenes.SceneModelTransform>.FromManagedArray(array, (o) => FromManaged(o));
        public static void DisposeMarshaler(IObjectReference value) => MarshalInspectable<object>.DisposeMarshaler(value);
        public static void DisposeMarshalerArray(MarshalInterfaceHelper<global::Microsoft.UI.Composition.Scenes.SceneModelTransform>.MarshalerArray array) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.Scenes.SceneModelTransform>.DisposeMarshalerArray(array);
        public static void DisposeAbi(IntPtr abi) => MarshalInspectable<object>.DisposeAbi(abi);
        public static unsafe void DisposeAbiArray(object box) => MarshalInspectable<object>.DisposeAbiArray(box);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    internal sealed class SceneModelTransformRcwFactoryAttribute : global::WinRT.WinRTImplementationTypeRcwFactoryAttribute
    {
        public override object CreateInstance(global::WinRT.IInspectable inspectable)
            => new global::Microsoft.UI.Composition.Scenes.SceneModelTransform(inspectable.ObjRef);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    public struct SceneNode
    {

        public static IObjectReference CreateMarshaler(global::Microsoft.UI.Composition.Scenes.SceneNode obj) => obj is null ? null : MarshalInspectable<global::Microsoft.UI.Composition.Scenes.SceneNode>.CreateMarshaler<IUnknownVftbl>(obj, global::ABI.Microsoft.UI.Composition.Scenes.ISceneNodeMethods.IID);
        public static ObjectReferenceValue CreateMarshaler2(global::Microsoft.UI.Composition.Scenes.SceneNode obj) => MarshalInspectable<object>.CreateMarshaler2(obj, global::ABI.Microsoft.UI.Composition.Scenes.ISceneNodeMethods.IID);
        public static IntPtr GetAbi(IObjectReference value) => value is null ? IntPtr.Zero : MarshalInterfaceHelper<object>.GetAbi(value);
        public static global::Microsoft.UI.Composition.Scenes.SceneNode FromAbi(IntPtr thisPtr) => global::Microsoft.UI.Composition.Scenes.SceneNode.FromAbi(thisPtr);
        public static IntPtr FromManaged(global::Microsoft.UI.Composition.Scenes.SceneNode obj) => obj is null ? IntPtr.Zero : CreateMarshaler2(obj).Detach();
        public static unsafe MarshalInterfaceHelper<global::Microsoft.UI.Composition.Scenes.SceneNode>.MarshalerArray CreateMarshalerArray(global::Microsoft.UI.Composition.Scenes.SceneNode[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.Scenes.SceneNode>.CreateMarshalerArray2(array, (o) => CreateMarshaler2(o));
        public static (int length, IntPtr data) GetAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.Scenes.SceneNode>.GetAbiArray(box);
        public static unsafe global::Microsoft.UI.Composition.Scenes.SceneNode[] FromAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.Scenes.SceneNode>.FromAbiArray(box, FromAbi);
        public static void CopyAbiArray(global::Microsoft.UI.Composition.Scenes.SceneNode[] array, object box) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.Scenes.SceneNode>.CopyAbiArray(array, box, FromAbi);
        public static (int length, IntPtr data) FromManagedArray(global::Microsoft.UI.Composition.Scenes.SceneNode[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.Scenes.SceneNode>.FromManagedArray(array, (o) => FromManaged(o));
        public static void DisposeMarshaler(IObjectReference value) => MarshalInspectable<object>.DisposeMarshaler(value);
        public static void DisposeMarshalerArray(MarshalInterfaceHelper<global::Microsoft.UI.Composition.Scenes.SceneNode>.MarshalerArray array) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.Scenes.SceneNode>.DisposeMarshalerArray(array);
        public static void DisposeAbi(IntPtr abi) => MarshalInspectable<object>.DisposeAbi(abi);
        public static unsafe void DisposeAbiArray(object box) => MarshalInspectable<object>.DisposeAbiArray(box);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    internal sealed class SceneNodeRcwFactoryAttribute : global::WinRT.WinRTImplementationTypeRcwFactoryAttribute
    {
        public override object CreateInstance(global::WinRT.IInspectable inspectable)
            => new global::Microsoft.UI.Composition.Scenes.SceneNode(inspectable.ObjRef);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    public struct SceneNodeCollection
    {

        public static IObjectReference CreateMarshaler(global::Microsoft.UI.Composition.Scenes.SceneNodeCollection obj) => obj is null ? null : MarshalInterface<global::System.Collections.Generic.IList<global::Microsoft.UI.Composition.Scenes.SceneNode>>.CreateMarshaler(obj);
        public static ObjectReferenceValue CreateMarshaler2(global::Microsoft.UI.Composition.Scenes.SceneNodeCollection obj) => MarshalInterface<global::System.Collections.Generic.IList<global::Microsoft.UI.Composition.Scenes.SceneNode>>.CreateMarshaler2(obj, global::ABI.System.Collections.Generic.IListMethods<global::Microsoft.UI.Composition.Scenes.SceneNode>.IID);
        public static IntPtr GetAbi(IObjectReference value) => value is null ? IntPtr.Zero : MarshalInterfaceHelper<object>.GetAbi(value);
        public static global::Microsoft.UI.Composition.Scenes.SceneNodeCollection FromAbi(IntPtr thisPtr) => global::Microsoft.UI.Composition.Scenes.SceneNodeCollection.FromAbi(thisPtr);
        public static IntPtr FromManaged(global::Microsoft.UI.Composition.Scenes.SceneNodeCollection obj) => obj is null ? IntPtr.Zero : CreateMarshaler2(obj).Detach();
        public static unsafe MarshalInterfaceHelper<global::Microsoft.UI.Composition.Scenes.SceneNodeCollection>.MarshalerArray CreateMarshalerArray(global::Microsoft.UI.Composition.Scenes.SceneNodeCollection[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.Scenes.SceneNodeCollection>.CreateMarshalerArray2(array, (o) => CreateMarshaler2(o));
        public static (int length, IntPtr data) GetAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.Scenes.SceneNodeCollection>.GetAbiArray(box);
        public static unsafe global::Microsoft.UI.Composition.Scenes.SceneNodeCollection[] FromAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.Scenes.SceneNodeCollection>.FromAbiArray(box, FromAbi);
        public static void CopyAbiArray(global::Microsoft.UI.Composition.Scenes.SceneNodeCollection[] array, object box) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.Scenes.SceneNodeCollection>.CopyAbiArray(array, box, FromAbi);
        public static (int length, IntPtr data) FromManagedArray(global::Microsoft.UI.Composition.Scenes.SceneNodeCollection[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.Scenes.SceneNodeCollection>.FromManagedArray(array, (o) => FromManaged(o));
        public static void DisposeMarshaler(IObjectReference value) => MarshalInspectable<object>.DisposeMarshaler(value);
        public static void DisposeMarshalerArray(MarshalInterfaceHelper<global::Microsoft.UI.Composition.Scenes.SceneNodeCollection>.MarshalerArray array) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.Scenes.SceneNodeCollection>.DisposeMarshalerArray(array);
        public static void DisposeAbi(IntPtr abi) => MarshalInspectable<object>.DisposeAbi(abi);
        public static unsafe void DisposeAbiArray(object box) => MarshalInspectable<object>.DisposeAbiArray(box);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    internal sealed class SceneNodeCollectionRcwFactoryAttribute : global::WinRT.WinRTImplementationTypeRcwFactoryAttribute
    {
        public override object CreateInstance(global::WinRT.IInspectable inspectable)
            => new global::Microsoft.UI.Composition.Scenes.SceneNodeCollection(inspectable.ObjRef);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    public struct SceneObject
    {

        public static IObjectReference CreateMarshaler(global::Microsoft.UI.Composition.Scenes.SceneObject obj) => obj is null ? null : MarshalInspectable<global::Microsoft.UI.Composition.Scenes.SceneObject>.CreateMarshaler<IUnknownVftbl>(obj, global::ABI.Microsoft.UI.Composition.Scenes.ISceneObjectMethods.IID);
        public static ObjectReferenceValue CreateMarshaler2(global::Microsoft.UI.Composition.Scenes.SceneObject obj) => MarshalInspectable<object>.CreateMarshaler2(obj, global::ABI.Microsoft.UI.Composition.Scenes.ISceneObjectMethods.IID);
        public static IntPtr GetAbi(IObjectReference value) => value is null ? IntPtr.Zero : MarshalInterfaceHelper<object>.GetAbi(value);
        public static global::Microsoft.UI.Composition.Scenes.SceneObject FromAbi(IntPtr thisPtr) => global::Microsoft.UI.Composition.Scenes.SceneObject.FromAbi(thisPtr);
        public static IntPtr FromManaged(global::Microsoft.UI.Composition.Scenes.SceneObject obj) => obj is null ? IntPtr.Zero : CreateMarshaler2(obj).Detach();
        public static unsafe MarshalInterfaceHelper<global::Microsoft.UI.Composition.Scenes.SceneObject>.MarshalerArray CreateMarshalerArray(global::Microsoft.UI.Composition.Scenes.SceneObject[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.Scenes.SceneObject>.CreateMarshalerArray2(array, (o) => CreateMarshaler2(o));
        public static (int length, IntPtr data) GetAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.Scenes.SceneObject>.GetAbiArray(box);
        public static unsafe global::Microsoft.UI.Composition.Scenes.SceneObject[] FromAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.Scenes.SceneObject>.FromAbiArray(box, FromAbi);
        public static void CopyAbiArray(global::Microsoft.UI.Composition.Scenes.SceneObject[] array, object box) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.Scenes.SceneObject>.CopyAbiArray(array, box, FromAbi);
        public static (int length, IntPtr data) FromManagedArray(global::Microsoft.UI.Composition.Scenes.SceneObject[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.Scenes.SceneObject>.FromManagedArray(array, (o) => FromManaged(o));
        public static void DisposeMarshaler(IObjectReference value) => MarshalInspectable<object>.DisposeMarshaler(value);
        public static void DisposeMarshalerArray(MarshalInterfaceHelper<global::Microsoft.UI.Composition.Scenes.SceneObject>.MarshalerArray array) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.Scenes.SceneObject>.DisposeMarshalerArray(array);
        public static void DisposeAbi(IntPtr abi) => MarshalInspectable<object>.DisposeAbi(abi);
        public static unsafe void DisposeAbiArray(object box) => MarshalInspectable<object>.DisposeAbiArray(box);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    internal sealed class SceneObjectRcwFactoryAttribute : global::WinRT.WinRTImplementationTypeRcwFactoryAttribute
    {
        public override object CreateInstance(global::WinRT.IInspectable inspectable)
            => new global::Microsoft.UI.Composition.Scenes.SceneObject(inspectable.ObjRef);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    public struct ScenePbrMaterial
    {

        public static IObjectReference CreateMarshaler(global::Microsoft.UI.Composition.Scenes.ScenePbrMaterial obj) => obj is null ? null : MarshalInspectable<global::Microsoft.UI.Composition.Scenes.ScenePbrMaterial>.CreateMarshaler<IUnknownVftbl>(obj, global::ABI.Microsoft.UI.Composition.Scenes.IScenePbrMaterialMethods.IID);
        public static ObjectReferenceValue CreateMarshaler2(global::Microsoft.UI.Composition.Scenes.ScenePbrMaterial obj) => MarshalInspectable<object>.CreateMarshaler2(obj, global::ABI.Microsoft.UI.Composition.Scenes.IScenePbrMaterialMethods.IID);
        public static IntPtr GetAbi(IObjectReference value) => value is null ? IntPtr.Zero : MarshalInterfaceHelper<object>.GetAbi(value);
        public static global::Microsoft.UI.Composition.Scenes.ScenePbrMaterial FromAbi(IntPtr thisPtr) => global::Microsoft.UI.Composition.Scenes.ScenePbrMaterial.FromAbi(thisPtr);
        public static IntPtr FromManaged(global::Microsoft.UI.Composition.Scenes.ScenePbrMaterial obj) => obj is null ? IntPtr.Zero : CreateMarshaler2(obj).Detach();
        public static unsafe MarshalInterfaceHelper<global::Microsoft.UI.Composition.Scenes.ScenePbrMaterial>.MarshalerArray CreateMarshalerArray(global::Microsoft.UI.Composition.Scenes.ScenePbrMaterial[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.Scenes.ScenePbrMaterial>.CreateMarshalerArray2(array, (o) => CreateMarshaler2(o));
        public static (int length, IntPtr data) GetAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.Scenes.ScenePbrMaterial>.GetAbiArray(box);
        public static unsafe global::Microsoft.UI.Composition.Scenes.ScenePbrMaterial[] FromAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.Scenes.ScenePbrMaterial>.FromAbiArray(box, FromAbi);
        public static void CopyAbiArray(global::Microsoft.UI.Composition.Scenes.ScenePbrMaterial[] array, object box) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.Scenes.ScenePbrMaterial>.CopyAbiArray(array, box, FromAbi);
        public static (int length, IntPtr data) FromManagedArray(global::Microsoft.UI.Composition.Scenes.ScenePbrMaterial[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.Scenes.ScenePbrMaterial>.FromManagedArray(array, (o) => FromManaged(o));
        public static void DisposeMarshaler(IObjectReference value) => MarshalInspectable<object>.DisposeMarshaler(value);
        public static void DisposeMarshalerArray(MarshalInterfaceHelper<global::Microsoft.UI.Composition.Scenes.ScenePbrMaterial>.MarshalerArray array) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.Scenes.ScenePbrMaterial>.DisposeMarshalerArray(array);
        public static void DisposeAbi(IntPtr abi) => MarshalInspectable<object>.DisposeAbi(abi);
        public static unsafe void DisposeAbiArray(object box) => MarshalInspectable<object>.DisposeAbiArray(box);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    internal sealed class ScenePbrMaterialRcwFactoryAttribute : global::WinRT.WinRTImplementationTypeRcwFactoryAttribute
    {
        public override object CreateInstance(global::WinRT.IInspectable inspectable)
            => new global::Microsoft.UI.Composition.Scenes.ScenePbrMaterial(inspectable.ObjRef);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    public struct SceneRendererComponent
    {

        public static IObjectReference CreateMarshaler(global::Microsoft.UI.Composition.Scenes.SceneRendererComponent obj) => obj is null ? null : MarshalInspectable<global::Microsoft.UI.Composition.Scenes.SceneRendererComponent>.CreateMarshaler<IUnknownVftbl>(obj, global::ABI.Microsoft.UI.Composition.Scenes.ISceneRendererComponentMethods.IID);
        public static ObjectReferenceValue CreateMarshaler2(global::Microsoft.UI.Composition.Scenes.SceneRendererComponent obj) => MarshalInspectable<object>.CreateMarshaler2(obj, global::ABI.Microsoft.UI.Composition.Scenes.ISceneRendererComponentMethods.IID);
        public static IntPtr GetAbi(IObjectReference value) => value is null ? IntPtr.Zero : MarshalInterfaceHelper<object>.GetAbi(value);
        public static global::Microsoft.UI.Composition.Scenes.SceneRendererComponent FromAbi(IntPtr thisPtr) => global::Microsoft.UI.Composition.Scenes.SceneRendererComponent.FromAbi(thisPtr);
        public static IntPtr FromManaged(global::Microsoft.UI.Composition.Scenes.SceneRendererComponent obj) => obj is null ? IntPtr.Zero : CreateMarshaler2(obj).Detach();
        public static unsafe MarshalInterfaceHelper<global::Microsoft.UI.Composition.Scenes.SceneRendererComponent>.MarshalerArray CreateMarshalerArray(global::Microsoft.UI.Composition.Scenes.SceneRendererComponent[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.Scenes.SceneRendererComponent>.CreateMarshalerArray2(array, (o) => CreateMarshaler2(o));
        public static (int length, IntPtr data) GetAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.Scenes.SceneRendererComponent>.GetAbiArray(box);
        public static unsafe global::Microsoft.UI.Composition.Scenes.SceneRendererComponent[] FromAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.Scenes.SceneRendererComponent>.FromAbiArray(box, FromAbi);
        public static void CopyAbiArray(global::Microsoft.UI.Composition.Scenes.SceneRendererComponent[] array, object box) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.Scenes.SceneRendererComponent>.CopyAbiArray(array, box, FromAbi);
        public static (int length, IntPtr data) FromManagedArray(global::Microsoft.UI.Composition.Scenes.SceneRendererComponent[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.Scenes.SceneRendererComponent>.FromManagedArray(array, (o) => FromManaged(o));
        public static void DisposeMarshaler(IObjectReference value) => MarshalInspectable<object>.DisposeMarshaler(value);
        public static void DisposeMarshalerArray(MarshalInterfaceHelper<global::Microsoft.UI.Composition.Scenes.SceneRendererComponent>.MarshalerArray array) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.Scenes.SceneRendererComponent>.DisposeMarshalerArray(array);
        public static void DisposeAbi(IntPtr abi) => MarshalInspectable<object>.DisposeAbi(abi);
        public static unsafe void DisposeAbiArray(object box) => MarshalInspectable<object>.DisposeAbiArray(box);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    internal sealed class SceneRendererComponentRcwFactoryAttribute : global::WinRT.WinRTImplementationTypeRcwFactoryAttribute
    {
        public override object CreateInstance(global::WinRT.IInspectable inspectable)
            => new global::Microsoft.UI.Composition.Scenes.SceneRendererComponent(inspectable.ObjRef);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    public struct SceneSurfaceMaterialInput
    {

        public static IObjectReference CreateMarshaler(global::Microsoft.UI.Composition.Scenes.SceneSurfaceMaterialInput obj) => obj is null ? null : MarshalInspectable<global::Microsoft.UI.Composition.Scenes.SceneSurfaceMaterialInput>.CreateMarshaler<IUnknownVftbl>(obj, global::ABI.Microsoft.UI.Composition.Scenes.ISceneSurfaceMaterialInputMethods.IID);
        public static ObjectReferenceValue CreateMarshaler2(global::Microsoft.UI.Composition.Scenes.SceneSurfaceMaterialInput obj) => MarshalInspectable<object>.CreateMarshaler2(obj, global::ABI.Microsoft.UI.Composition.Scenes.ISceneSurfaceMaterialInputMethods.IID);
        public static IntPtr GetAbi(IObjectReference value) => value is null ? IntPtr.Zero : MarshalInterfaceHelper<object>.GetAbi(value);
        public static global::Microsoft.UI.Composition.Scenes.SceneSurfaceMaterialInput FromAbi(IntPtr thisPtr) => global::Microsoft.UI.Composition.Scenes.SceneSurfaceMaterialInput.FromAbi(thisPtr);
        public static IntPtr FromManaged(global::Microsoft.UI.Composition.Scenes.SceneSurfaceMaterialInput obj) => obj is null ? IntPtr.Zero : CreateMarshaler2(obj).Detach();
        public static unsafe MarshalInterfaceHelper<global::Microsoft.UI.Composition.Scenes.SceneSurfaceMaterialInput>.MarshalerArray CreateMarshalerArray(global::Microsoft.UI.Composition.Scenes.SceneSurfaceMaterialInput[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.Scenes.SceneSurfaceMaterialInput>.CreateMarshalerArray2(array, (o) => CreateMarshaler2(o));
        public static (int length, IntPtr data) GetAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.Scenes.SceneSurfaceMaterialInput>.GetAbiArray(box);
        public static unsafe global::Microsoft.UI.Composition.Scenes.SceneSurfaceMaterialInput[] FromAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.Scenes.SceneSurfaceMaterialInput>.FromAbiArray(box, FromAbi);
        public static void CopyAbiArray(global::Microsoft.UI.Composition.Scenes.SceneSurfaceMaterialInput[] array, object box) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.Scenes.SceneSurfaceMaterialInput>.CopyAbiArray(array, box, FromAbi);
        public static (int length, IntPtr data) FromManagedArray(global::Microsoft.UI.Composition.Scenes.SceneSurfaceMaterialInput[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.Scenes.SceneSurfaceMaterialInput>.FromManagedArray(array, (o) => FromManaged(o));
        public static void DisposeMarshaler(IObjectReference value) => MarshalInspectable<object>.DisposeMarshaler(value);
        public static void DisposeMarshalerArray(MarshalInterfaceHelper<global::Microsoft.UI.Composition.Scenes.SceneSurfaceMaterialInput>.MarshalerArray array) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.Scenes.SceneSurfaceMaterialInput>.DisposeMarshalerArray(array);
        public static void DisposeAbi(IntPtr abi) => MarshalInspectable<object>.DisposeAbi(abi);
        public static unsafe void DisposeAbiArray(object box) => MarshalInspectable<object>.DisposeAbiArray(box);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    internal sealed class SceneSurfaceMaterialInputRcwFactoryAttribute : global::WinRT.WinRTImplementationTypeRcwFactoryAttribute
    {
        public override object CreateInstance(global::WinRT.IInspectable inspectable)
            => new global::Microsoft.UI.Composition.Scenes.SceneSurfaceMaterialInput(inspectable.ObjRef);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    public struct SceneVisual
    {

        public static IObjectReference CreateMarshaler(global::Microsoft.UI.Composition.Scenes.SceneVisual obj) => obj is null ? null : MarshalInspectable<global::Microsoft.UI.Composition.Scenes.SceneVisual>.CreateMarshaler<IUnknownVftbl>(obj, global::ABI.Microsoft.UI.Composition.Scenes.ISceneVisualMethods.IID);
        public static ObjectReferenceValue CreateMarshaler2(global::Microsoft.UI.Composition.Scenes.SceneVisual obj) => MarshalInspectable<object>.CreateMarshaler2(obj, global::ABI.Microsoft.UI.Composition.Scenes.ISceneVisualMethods.IID);
        public static IntPtr GetAbi(IObjectReference value) => value is null ? IntPtr.Zero : MarshalInterfaceHelper<object>.GetAbi(value);
        public static global::Microsoft.UI.Composition.Scenes.SceneVisual FromAbi(IntPtr thisPtr) => global::Microsoft.UI.Composition.Scenes.SceneVisual.FromAbi(thisPtr);
        public static IntPtr FromManaged(global::Microsoft.UI.Composition.Scenes.SceneVisual obj) => obj is null ? IntPtr.Zero : CreateMarshaler2(obj).Detach();
        public static unsafe MarshalInterfaceHelper<global::Microsoft.UI.Composition.Scenes.SceneVisual>.MarshalerArray CreateMarshalerArray(global::Microsoft.UI.Composition.Scenes.SceneVisual[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.Scenes.SceneVisual>.CreateMarshalerArray2(array, (o) => CreateMarshaler2(o));
        public static (int length, IntPtr data) GetAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.Scenes.SceneVisual>.GetAbiArray(box);
        public static unsafe global::Microsoft.UI.Composition.Scenes.SceneVisual[] FromAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.Scenes.SceneVisual>.FromAbiArray(box, FromAbi);
        public static void CopyAbiArray(global::Microsoft.UI.Composition.Scenes.SceneVisual[] array, object box) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.Scenes.SceneVisual>.CopyAbiArray(array, box, FromAbi);
        public static (int length, IntPtr data) FromManagedArray(global::Microsoft.UI.Composition.Scenes.SceneVisual[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.Scenes.SceneVisual>.FromManagedArray(array, (o) => FromManaged(o));
        public static void DisposeMarshaler(IObjectReference value) => MarshalInspectable<object>.DisposeMarshaler(value);
        public static void DisposeMarshalerArray(MarshalInterfaceHelper<global::Microsoft.UI.Composition.Scenes.SceneVisual>.MarshalerArray array) => MarshalInterfaceHelper<global::Microsoft.UI.Composition.Scenes.SceneVisual>.DisposeMarshalerArray(array);
        public static void DisposeAbi(IntPtr abi) => MarshalInspectable<object>.DisposeAbi(abi);
        public static unsafe void DisposeAbiArray(object box) => MarshalInspectable<object>.DisposeAbiArray(box);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    internal sealed class SceneVisualRcwFactoryAttribute : global::WinRT.WinRTImplementationTypeRcwFactoryAttribute
    {
        public override object CreateInstance(global::WinRT.IInspectable inspectable)
            => new global::Microsoft.UI.Composition.Scenes.SceneVisual(inspectable.ObjRef);
    }
}
#pragma warning restore CA1416
