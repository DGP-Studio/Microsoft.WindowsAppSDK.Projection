//------------------------------------------------------------------------------
// <auto-generated>
//     This file was generated by cswinrt.exe version 2.2.0.241111.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Diagnostics;
using System.Diagnostics.CodeAnalysis;
using System.Linq.Expressions;
using System.Reflection;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;
using WinRT;
using WinRT.Interop;


#pragma warning disable 0169 // warning CS0169: The field '...' is never used
#pragma warning disable 0649 // warning CS0169: Field '...' is never assigned to
#pragma warning disable CA2207, CA1063, CA1033, CA1001, CA2213

namespace Microsoft.UI.Xaml.XamlTypeInfo
{
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")][Guid("17FA3F58-3472-5AA2-A0F8-1AB8A519573D")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.XamlTypeInfo.IXamlControlsXamlMetaDataProvider))]
    internal interface IXamlControlsXamlMetaDataProvider
    {
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")][Guid("2D7EB3FD-ECDB-5084-B7E0-12F9598381EF")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.XamlTypeInfo.IXamlControlsXamlMetaDataProviderStatics))]
    internal interface IXamlControlsXamlMetaDataProviderStatics
    {
        void Initialize();
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")]
    [global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.XamlTypeInfo.XamlControlsXamlMetaDataProvider))]
    [global::ABI.Microsoft.UI.Xaml.XamlTypeInfo.XamlControlsXamlMetaDataProviderRcwFactory]
    [global::WinRT.ProjectedRuntimeClass(typeof(global::Microsoft.UI.Xaml.Markup.IXamlMetadataProvider))]
    public sealed class XamlControlsXamlMetaDataProvider : global::Microsoft.UI.Xaml.Markup.IXamlMetadataProvider, global::System.Runtime.InteropServices.ICustomQueryInterface, IWinRTObject, IEquatable<XamlControlsXamlMetaDataProvider>
    {
        private IntPtr ThisPtr => _inner == null ? (((IWinRTObject)this).NativeObject).ThisPtr : _inner.ThisPtr;

        private readonly IObjectReference _inner = null;




        private volatile IObjectReference ___objRef_global__Microsoft_UI_Xaml_XamlTypeInfo_IXamlControlsXamlMetaDataProvider;
        private IObjectReference Make___objRef_global__Microsoft_UI_Xaml_XamlTypeInfo_IXamlControlsXamlMetaDataProvider()
        {
            global::System.Threading.Interlocked.CompareExchange(ref ___objRef_global__Microsoft_UI_Xaml_XamlTypeInfo_IXamlControlsXamlMetaDataProvider, ((IWinRTObject)this).NativeObject.As<IUnknownVftbl>(global::ABI.Microsoft.UI.Xaml.XamlTypeInfo.IXamlControlsXamlMetaDataProviderMethods.IID), null);
            return ___objRef_global__Microsoft_UI_Xaml_XamlTypeInfo_IXamlControlsXamlMetaDataProvider;
        }
        private IObjectReference _objRef_global__Microsoft_UI_Xaml_XamlTypeInfo_IXamlControlsXamlMetaDataProvider => ___objRef_global__Microsoft_UI_Xaml_XamlTypeInfo_IXamlControlsXamlMetaDataProvider ?? Make___objRef_global__Microsoft_UI_Xaml_XamlTypeInfo_IXamlControlsXamlMetaDataProvider();
        private IObjectReference _objRef_global__Microsoft_UI_Xaml_Markup_IXamlMetadataProvider => _inner;


        private static volatile IObjectReference ___objRef_global__Microsoft_UI_Xaml_XamlTypeInfo_XamlControlsXamlMetaDataProvider;
        private static IObjectReference _objRef_global__Microsoft_UI_Xaml_XamlTypeInfo_XamlControlsXamlMetaDataProvider
        {
            get
            { 
                var factory = ___objRef_global__Microsoft_UI_Xaml_XamlTypeInfo_XamlControlsXamlMetaDataProvider;
                if (factory != null && factory.IsInCurrentContext)
                {
                    return factory;
                }
                else
                {
                    return ___objRef_global__Microsoft_UI_Xaml_XamlTypeInfo_XamlControlsXamlMetaDataProvider = ActivationFactory.Get("Microsoft.UI.Xaml.XamlTypeInfo.XamlControlsXamlMetaDataProvider");
                }
            }
        }

        public XamlControlsXamlMetaDataProvider() 
        {
            _inner = global::ABI.WinRT.Interop.IActivationFactoryMethods.ActivateInstanceUnsafe(_objRef_global__Microsoft_UI_Xaml_XamlTypeInfo_XamlControlsXamlMetaDataProvider, global::ABI.Microsoft.UI.Xaml.Markup.IXamlMetadataProviderMethods.IID);
            ComWrappersSupport.RegisterObjectForInterface(this, ThisPtr);
            ComWrappersHelper.Init(_inner, false);

        }

        public static I As<I>() => ActivationFactory.Get("Microsoft.UI.Xaml.XamlTypeInfo.XamlControlsXamlMetaDataProvider").AsInterface<I>();

        private static volatile IObjectReference ___objRef_global__Microsoft_UI_Xaml_XamlTypeInfo_IXamlControlsXamlMetaDataProviderStatics;
        private static IObjectReference _objRef_global__Microsoft_UI_Xaml_XamlTypeInfo_IXamlControlsXamlMetaDataProviderStatics
        {
            get
            { 
                var factory = ___objRef_global__Microsoft_UI_Xaml_XamlTypeInfo_IXamlControlsXamlMetaDataProviderStatics;
                if (factory != null && factory.IsInCurrentContext)
                {
                    return factory;
                }
                else
                {
                    return ___objRef_global__Microsoft_UI_Xaml_XamlTypeInfo_IXamlControlsXamlMetaDataProviderStatics = ActivationFactory.Get("Microsoft.UI.Xaml.XamlTypeInfo.XamlControlsXamlMetaDataProvider", global::ABI.Microsoft.UI.Xaml.XamlTypeInfo.IXamlControlsXamlMetaDataProviderStaticsMethods.IID);
                }
            }
        }

        public static void Initialize() => global::ABI.Microsoft.UI.Xaml.XamlTypeInfo.IXamlControlsXamlMetaDataProviderStaticsMethods.Initialize(_objRef_global__Microsoft_UI_Xaml_XamlTypeInfo_IXamlControlsXamlMetaDataProviderStatics);

        public static XamlControlsXamlMetaDataProvider FromAbi(IntPtr thisPtr)
        {
            if (thisPtr == IntPtr.Zero) return null;
            return MarshalInspectable<XamlControlsXamlMetaDataProvider>.FromAbi(thisPtr);
        }

        internal XamlControlsXamlMetaDataProvider(IObjectReference objRef)
        {
            _inner = objRef.As(global::ABI.Microsoft.UI.Xaml.Markup.IXamlMetadataProviderMethods.IID);

        }


        public static bool operator ==(XamlControlsXamlMetaDataProvider x, XamlControlsXamlMetaDataProvider y) => (x?.ThisPtr ?? IntPtr.Zero) == (y?.ThisPtr ?? IntPtr.Zero);
        public static bool operator !=(XamlControlsXamlMetaDataProvider x, XamlControlsXamlMetaDataProvider y) => !(x == y);
        public bool Equals(XamlControlsXamlMetaDataProvider other) => this == other;
        public override bool Equals(object obj) => obj is XamlControlsXamlMetaDataProvider that && this == that;
        public override int GetHashCode() => ThisPtr.GetHashCode();


        bool IWinRTObject.HasUnwrappableNativeObject => true;
        IObjectReference IWinRTObject.NativeObject => _inner;
        private volatile global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> _queryInterfaceCache;
        private global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> MakeQueryInterfaceCache()
        {
            global::System.Threading.Interlocked.CompareExchange(ref _queryInterfaceCache, new global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference>(), null); 
            return _queryInterfaceCache;
        }
        global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> IWinRTObject.QueryInterfaceCache => _queryInterfaceCache ?? MakeQueryInterfaceCache();
        private volatile global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> _additionalTypeData;
        private global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> MakeAdditionalTypeData()
        {
            global::System.Threading.Interlocked.CompareExchange(ref _additionalTypeData, new global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object>(), null); 
            return _additionalTypeData;
        }
        global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> IWinRTObject.AdditionalTypeData => _additionalTypeData ?? MakeAdditionalTypeData();

        private struct InterfaceTag<I>{};


        public global::Microsoft.UI.Xaml.Markup.IXamlType GetXamlType(global::System.Type type) => global::ABI.Microsoft.UI.Xaml.Markup.IXamlMetadataProviderMethods.GetXamlType(_objRef_global__Microsoft_UI_Xaml_Markup_IXamlMetadataProvider, type);

        public global::Microsoft.UI.Xaml.Markup.IXamlType GetXamlType(string fullName) => global::ABI.Microsoft.UI.Xaml.Markup.IXamlMetadataProviderMethods.GetXamlType(_objRef_global__Microsoft_UI_Xaml_Markup_IXamlMetadataProvider, fullName);

        public global::Microsoft.UI.Xaml.Markup.XmlnsDefinition[] GetXmlnsDefinitions() => global::ABI.Microsoft.UI.Xaml.Markup.IXamlMetadataProviderMethods.GetXmlnsDefinitions(_objRef_global__Microsoft_UI_Xaml_Markup_IXamlMetadataProvider);

        private bool IsOverridableInterface(Guid iid) => false;

        global::System.Runtime.InteropServices.CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(ref Guid iid, out IntPtr ppv)
        {
            ppv = IntPtr.Zero;
            if (IsOverridableInterface(iid) || global::WinRT.Interop.IID.IID_IInspectable == iid)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
            }

            if (((IWinRTObject)this).NativeObject.TryAs(iid, out ppv) >= 0)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.Handled;
            }

            return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
        }
    }
}

#pragma warning disable CA1416
namespace ABI.Microsoft.UI.Xaml.XamlTypeInfo
{
    internal static class IXamlControlsXamlMetaDataProviderMethods
    {



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0x58, 0x3F, 0xFA, 0x17, 0x72, 0x34, 0xA2, 0x5A, 0xA0, 0xF8, 0x1A, 0xB8, 0xA5, 0x19, 0x57, 0x3D };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("17FA3F58-3472-5AA2-A0F8-1AB8A519573D")]
    internal interface IXamlControlsXamlMetaDataProvider : global::Microsoft.UI.Xaml.XamlTypeInfo.IXamlControlsXamlMetaDataProvider
    {
    }
    internal static class IXamlControlsXamlMetaDataProviderStaticsMethods
    {


        internal static unsafe void Initialize(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, int>**)ThisPtr)[6](ThisPtr));
            global::System.GC.KeepAlive(_obj);
        }


        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0xFD, 0xB3, 0x7E, 0x2D, 0xDB, 0xEC, 0x84, 0x50, 0xB7, 0xE0, 0x12, 0xF9, 0x59, 0x83, 0x81, 0xEF };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("2D7EB3FD-ECDB-5084-B7E0-12F9598381EF")]
    internal interface IXamlControlsXamlMetaDataProviderStatics : global::Microsoft.UI.Xaml.XamlTypeInfo.IXamlControlsXamlMetaDataProviderStatics
    {
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    public struct XamlControlsXamlMetaDataProvider
    {

        public static IObjectReference CreateMarshaler(global::Microsoft.UI.Xaml.XamlTypeInfo.XamlControlsXamlMetaDataProvider obj) => obj is null ? null : MarshalInterface<global::Microsoft.UI.Xaml.Markup.IXamlMetadataProvider>.CreateMarshaler(obj);
        public static ObjectReferenceValue CreateMarshaler2(global::Microsoft.UI.Xaml.XamlTypeInfo.XamlControlsXamlMetaDataProvider obj) => MarshalInterface<global::Microsoft.UI.Xaml.Markup.IXamlMetadataProvider>.CreateMarshaler2(obj, global::ABI.Microsoft.UI.Xaml.Markup.IXamlMetadataProviderMethods.IID);
        public static IntPtr GetAbi(IObjectReference value) => value is null ? IntPtr.Zero : MarshalInterfaceHelper<object>.GetAbi(value);
        public static global::Microsoft.UI.Xaml.XamlTypeInfo.XamlControlsXamlMetaDataProvider FromAbi(IntPtr thisPtr) => global::Microsoft.UI.Xaml.XamlTypeInfo.XamlControlsXamlMetaDataProvider.FromAbi(thisPtr);
        public static IntPtr FromManaged(global::Microsoft.UI.Xaml.XamlTypeInfo.XamlControlsXamlMetaDataProvider obj) => obj is null ? IntPtr.Zero : CreateMarshaler2(obj).Detach();
        public static unsafe MarshalInterfaceHelper<global::Microsoft.UI.Xaml.XamlTypeInfo.XamlControlsXamlMetaDataProvider>.MarshalerArray CreateMarshalerArray(global::Microsoft.UI.Xaml.XamlTypeInfo.XamlControlsXamlMetaDataProvider[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.XamlTypeInfo.XamlControlsXamlMetaDataProvider>.CreateMarshalerArray2(array, (o) => CreateMarshaler2(o));
        public static (int length, IntPtr data) GetAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.XamlTypeInfo.XamlControlsXamlMetaDataProvider>.GetAbiArray(box);
        public static unsafe global::Microsoft.UI.Xaml.XamlTypeInfo.XamlControlsXamlMetaDataProvider[] FromAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.XamlTypeInfo.XamlControlsXamlMetaDataProvider>.FromAbiArray(box, FromAbi);
        public static void CopyAbiArray(global::Microsoft.UI.Xaml.XamlTypeInfo.XamlControlsXamlMetaDataProvider[] array, object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.XamlTypeInfo.XamlControlsXamlMetaDataProvider>.CopyAbiArray(array, box, FromAbi);
        public static (int length, IntPtr data) FromManagedArray(global::Microsoft.UI.Xaml.XamlTypeInfo.XamlControlsXamlMetaDataProvider[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.XamlTypeInfo.XamlControlsXamlMetaDataProvider>.FromManagedArray(array, (o) => FromManaged(o));
        public static void DisposeMarshaler(IObjectReference value) => MarshalInspectable<object>.DisposeMarshaler(value);
        public static void DisposeMarshalerArray(MarshalInterfaceHelper<global::Microsoft.UI.Xaml.XamlTypeInfo.XamlControlsXamlMetaDataProvider>.MarshalerArray array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.XamlTypeInfo.XamlControlsXamlMetaDataProvider>.DisposeMarshalerArray(array);
        public static void DisposeAbi(IntPtr abi) => MarshalInspectable<object>.DisposeAbi(abi);
        public static unsafe void DisposeAbiArray(object box) => MarshalInspectable<object>.DisposeAbiArray(box);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    internal sealed class XamlControlsXamlMetaDataProviderRcwFactoryAttribute : global::WinRT.WinRTImplementationTypeRcwFactoryAttribute
    {
        public override object CreateInstance(global::WinRT.IInspectable inspectable)
            => new global::Microsoft.UI.Xaml.XamlTypeInfo.XamlControlsXamlMetaDataProvider(inspectable.ObjRef);
    }
}
#pragma warning restore CA1416
