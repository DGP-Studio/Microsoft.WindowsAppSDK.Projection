//------------------------------------------------------------------------------
// <auto-generated>
//     This file was generated by cswinrt.exe version 2.2.0.241111.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Diagnostics;
using System.Diagnostics.CodeAnalysis;
using System.Linq.Expressions;
using System.Reflection;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;
using WinRT;
using WinRT.Interop;


#pragma warning disable 0169 // warning CS0169: The field '...' is never used
#pragma warning disable 0649 // warning CS0169: Field '...' is never assigned to
#pragma warning disable CA2207, CA1063, CA1033, CA1001, CA2213

namespace Microsoft.UI.Xaml.Media
{
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")]
    [global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Media.AcrylicBrush))]
    [global::ABI.Microsoft.UI.Xaml.Media.AcrylicBrushRcwFactory]
    [global::WinRT.ProjectedRuntimeClass(typeof(IAcrylicBrush))]
    [global::Microsoft.UI.Xaml.CustomAttributes.MUXHasCustomActivationFactory]
    [global::Microsoft.UI.Xaml.CustomAttributes.MUXPropertyChangedCallback(enable = true)]
    [global::Microsoft.UI.Xaml.CustomAttributes.MUXPropertyChangedCallbackMethodName(value = @"OnPropertyChanged")]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.XamlContract), 65536u)]
    public class AcrylicBrush : XamlCompositionBrushBase, global::System.Runtime.InteropServices.ICustomQueryInterface, IWinRTObject, IEquatable<AcrylicBrush>
    {
        private IntPtr ThisPtr => _inner == null ? (((IWinRTObject)this).NativeObject).ThisPtr : _inner.ThisPtr;

        private readonly IObjectReference _inner = null;




        private volatile IObjectReference ___objRef_global__Microsoft_UI_Xaml_Media_IAcrylicBrush;
        private IObjectReference Make___objRef_global__Microsoft_UI_Xaml_Media_IAcrylicBrush()
        {
            global::System.Threading.Interlocked.CompareExchange(ref ___objRef_global__Microsoft_UI_Xaml_Media_IAcrylicBrush, ((IWinRTObject)this).NativeObject.As<IUnknownVftbl>(global::ABI.Microsoft.UI.Xaml.Media.IAcrylicBrushMethods.IID), null);
            return ___objRef_global__Microsoft_UI_Xaml_Media_IAcrylicBrush;
        }
        private IObjectReference _objRef_global__Microsoft_UI_Xaml_Media_IAcrylicBrush => ___objRef_global__Microsoft_UI_Xaml_Media_IAcrylicBrush ?? Make___objRef_global__Microsoft_UI_Xaml_Media_IAcrylicBrush();

        private volatile IObjectReference ___objRef_global__Microsoft_UI_Xaml_Media_IAcrylicBrush2;
        private IObjectReference Make___objRef_global__Microsoft_UI_Xaml_Media_IAcrylicBrush2()
        {
            global::System.Threading.Interlocked.CompareExchange(ref ___objRef_global__Microsoft_UI_Xaml_Media_IAcrylicBrush2, ((IWinRTObject)this).NativeObject.As<IUnknownVftbl>(global::ABI.Microsoft.UI.Xaml.Media.IAcrylicBrush2Methods.IID), null);
            return ___objRef_global__Microsoft_UI_Xaml_Media_IAcrylicBrush2;
        }
        private IObjectReference _objRef_global__Microsoft_UI_Xaml_Media_IAcrylicBrush2 => ___objRef_global__Microsoft_UI_Xaml_Media_IAcrylicBrush2 ?? Make___objRef_global__Microsoft_UI_Xaml_Media_IAcrylicBrush2();



        private static class _IAcrylicBrushFactoryMethods
        {
            public static unsafe IntPtr CreateInstance(IObjectReference _obj, object baseInterface, out IntPtr innerInterface)
            {
                var ThisPtr = _obj.ThisPtr;

                ObjectReferenceValue __baseInterface = default;
                IntPtr __innerInterface = default;
                IntPtr __retval = default;
                try
                {
                    __baseInterface = MarshalInspectable<object>.CreateMarshaler2(baseInterface);
                    global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, IntPtr*, IntPtr*, int>**)ThisPtr)[6](ThisPtr, MarshalInspectable<object>.GetAbi(__baseInterface), &__innerInterface, &__retval));
                    global::System.GC.KeepAlive(_obj);
                    innerInterface = __innerInterface;
                    return __retval;
                }
                finally
                {
                    MarshalInspectable<object>.DisposeMarshaler(__baseInterface);
                }
            }
        }

        private static volatile IObjectReference ___objRef_global__Microsoft_UI_Xaml_Media_IAcrylicBrushFactory;
        private static IObjectReference _objRef_global__Microsoft_UI_Xaml_Media_IAcrylicBrushFactory
        {
            get
            { 
                var factory = ___objRef_global__Microsoft_UI_Xaml_Media_IAcrylicBrushFactory;
                if (factory != null && factory.IsInCurrentContext)
                {
                    return factory;
                }
                else
                {
                    return ___objRef_global__Microsoft_UI_Xaml_Media_IAcrylicBrushFactory = ActivationFactory.Get("Microsoft.UI.Xaml.Media.AcrylicBrush", global::ABI.Microsoft.UI.Xaml.Media.IAcrylicBrushFactoryMethods.IID);
                }
            }
        }

        public AcrylicBrush():base(global::WinRT.DerivedComposed.Instance)
        {
            bool isAggregation = this.GetType() != typeof(AcrylicBrush);
            object baseInspectable = isAggregation ? this : null;
            IntPtr composed = _IAcrylicBrushFactoryMethods.CreateInstance(_objRef_global__Microsoft_UI_Xaml_Media_IAcrylicBrushFactory,  baseInspectable, out IntPtr inner);
            try
            {
                ComWrappersHelper.Init(isAggregation, this, composed, inner, global::ABI.Microsoft.UI.Xaml.Media.IAcrylicBrushMethods.IID, out _inner);

            }
            finally
            {
                Marshal.Release(inner);   
            }
        }

        public static new I As<I>() => ActivationFactory.Get("Microsoft.UI.Xaml.Media.AcrylicBrush").AsInterface<I>();

        private static volatile IObjectReference ___objRef_global__Microsoft_UI_Xaml_Media_IAcrylicBrushStatics;
        private static IObjectReference _objRef_global__Microsoft_UI_Xaml_Media_IAcrylicBrushStatics
        {
            get
            { 
                var factory = ___objRef_global__Microsoft_UI_Xaml_Media_IAcrylicBrushStatics;
                if (factory != null && factory.IsInCurrentContext)
                {
                    return factory;
                }
                else
                {
                    return ___objRef_global__Microsoft_UI_Xaml_Media_IAcrylicBrushStatics = ActivationFactory.Get("Microsoft.UI.Xaml.Media.AcrylicBrush", global::ABI.Microsoft.UI.Xaml.Media.IAcrylicBrushStaticsMethods.IID);
                }
            }
        }

        private static volatile IObjectReference ___objRef_global__Microsoft_UI_Xaml_Media_IAcrylicBrushStatics2;
        private static IObjectReference _objRef_global__Microsoft_UI_Xaml_Media_IAcrylicBrushStatics2
        {
            get
            { 
                var factory = ___objRef_global__Microsoft_UI_Xaml_Media_IAcrylicBrushStatics2;
                if (factory != null && factory.IsInCurrentContext)
                {
                    return factory;
                }
                else
                {
                    return ___objRef_global__Microsoft_UI_Xaml_Media_IAcrylicBrushStatics2 = ActivationFactory.Get("Microsoft.UI.Xaml.Media.AcrylicBrush", global::ABI.Microsoft.UI.Xaml.Media.IAcrylicBrushStatics2Methods.IID);
                }
            }
        }

        public static global::Microsoft.UI.Xaml.DependencyProperty AlwaysUseFallbackProperty => global::ABI.Microsoft.UI.Xaml.Media.IAcrylicBrushStaticsMethods.get_AlwaysUseFallbackProperty(_objRef_global__Microsoft_UI_Xaml_Media_IAcrylicBrushStatics);

        public static global::Microsoft.UI.Xaml.DependencyProperty TintColorProperty => global::ABI.Microsoft.UI.Xaml.Media.IAcrylicBrushStaticsMethods.get_TintColorProperty(_objRef_global__Microsoft_UI_Xaml_Media_IAcrylicBrushStatics);

        public static global::Microsoft.UI.Xaml.DependencyProperty TintLuminosityOpacityProperty => global::ABI.Microsoft.UI.Xaml.Media.IAcrylicBrushStatics2Methods.get_TintLuminosityOpacityProperty(_objRef_global__Microsoft_UI_Xaml_Media_IAcrylicBrushStatics2);

        public static global::Microsoft.UI.Xaml.DependencyProperty TintOpacityProperty => global::ABI.Microsoft.UI.Xaml.Media.IAcrylicBrushStaticsMethods.get_TintOpacityProperty(_objRef_global__Microsoft_UI_Xaml_Media_IAcrylicBrushStatics);

        public static global::Microsoft.UI.Xaml.DependencyProperty TintTransitionDurationProperty => global::ABI.Microsoft.UI.Xaml.Media.IAcrylicBrushStaticsMethods.get_TintTransitionDurationProperty(_objRef_global__Microsoft_UI_Xaml_Media_IAcrylicBrushStatics);

        public static new AcrylicBrush FromAbi(IntPtr thisPtr)
        {
            if (thisPtr == IntPtr.Zero) return null;
            return MarshalInspectable<AcrylicBrush>.FromAbi(thisPtr);
        }

        protected internal AcrylicBrush(IObjectReference objRef)
            : base(global::WinRT.DerivedComposed.Instance)

        {
            _inner = objRef.As(global::ABI.Microsoft.UI.Xaml.Media.IAcrylicBrushMethods.IID);

        }


        public static bool operator ==(AcrylicBrush x, AcrylicBrush y) => (x?.ThisPtr ?? IntPtr.Zero) == (y?.ThisPtr ?? IntPtr.Zero);
        public static bool operator !=(AcrylicBrush x, AcrylicBrush y) => !(x == y);
        public bool Equals(AcrylicBrush other) => this == other;
        public override bool Equals(object obj) => obj is AcrylicBrush that && this == that;
        public override int GetHashCode() => ThisPtr.GetHashCode();


        protected AcrylicBrush(global::WinRT.DerivedComposed _):base(_)
        {

        }
        bool IWinRTObject.HasUnwrappableNativeObject => this.GetType() == typeof(AcrylicBrush);
        IObjectReference IWinRTObject.NativeObject => _inner;

        private struct InterfaceTag<I>{};


        public bool AlwaysUseFallback
        {
            get => global::ABI.Microsoft.UI.Xaml.Media.IAcrylicBrushMethods.get_AlwaysUseFallback(_objRef_global__Microsoft_UI_Xaml_Media_IAcrylicBrush);
            set => global::ABI.Microsoft.UI.Xaml.Media.IAcrylicBrushMethods.set_AlwaysUseFallback(_objRef_global__Microsoft_UI_Xaml_Media_IAcrylicBrush, value);
        }

        public global::Windows.UI.Color TintColor
        {
            get => global::ABI.Microsoft.UI.Xaml.Media.IAcrylicBrushMethods.get_TintColor(_objRef_global__Microsoft_UI_Xaml_Media_IAcrylicBrush);
            set => global::ABI.Microsoft.UI.Xaml.Media.IAcrylicBrushMethods.set_TintColor(_objRef_global__Microsoft_UI_Xaml_Media_IAcrylicBrush, value);
        }

        public global::System.Nullable<double> TintLuminosityOpacity
        {
            get => global::ABI.Microsoft.UI.Xaml.Media.IAcrylicBrush2Methods.get_TintLuminosityOpacity(_objRef_global__Microsoft_UI_Xaml_Media_IAcrylicBrush2);
            set => global::ABI.Microsoft.UI.Xaml.Media.IAcrylicBrush2Methods.set_TintLuminosityOpacity(_objRef_global__Microsoft_UI_Xaml_Media_IAcrylicBrush2, value);
        }

        public double TintOpacity
        {
            get => global::ABI.Microsoft.UI.Xaml.Media.IAcrylicBrushMethods.get_TintOpacity(_objRef_global__Microsoft_UI_Xaml_Media_IAcrylicBrush);
            set => global::ABI.Microsoft.UI.Xaml.Media.IAcrylicBrushMethods.set_TintOpacity(_objRef_global__Microsoft_UI_Xaml_Media_IAcrylicBrush, value);
        }

        public global::System.TimeSpan TintTransitionDuration
        {
            get => global::ABI.Microsoft.UI.Xaml.Media.IAcrylicBrushMethods.get_TintTransitionDuration(_objRef_global__Microsoft_UI_Xaml_Media_IAcrylicBrush);
            set => global::ABI.Microsoft.UI.Xaml.Media.IAcrylicBrushMethods.set_TintTransitionDuration(_objRef_global__Microsoft_UI_Xaml_Media_IAcrylicBrush, value);
        }

        protected override bool IsOverridableInterface(Guid iid) => base.IsOverridableInterface(iid);

        global::System.Runtime.InteropServices.CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(ref Guid iid, out IntPtr ppv)
        {
            ppv = IntPtr.Zero;
            if (IsOverridableInterface(iid) || global::WinRT.Interop.IID.IID_IInspectable == iid)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
            }

            if (((IWinRTObject)this).NativeObject.TryAs(iid, out ppv) >= 0)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.Handled;
            }

            return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
        }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")][global::WinRT.WinRTExposedType(typeof(global::WinRT.EnumTypeDetails<AlignmentX>))][global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    public enum AlignmentX : int
    {
        Left = unchecked((int)0),
        Center = unchecked((int)0x1),
        Right = unchecked((int)0x2),
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")][global::WinRT.WinRTExposedType(typeof(global::WinRT.EnumTypeDetails<AlignmentY>))][global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    public enum AlignmentY : int
    {
        Top = unchecked((int)0),
        Center = unchecked((int)0x1),
        Bottom = unchecked((int)0x2),
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")]
    [global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Media.ArcSegment))]
    [global::ABI.Microsoft.UI.Xaml.Media.ArcSegmentRcwFactory]
    [global::WinRT.ProjectedRuntimeClass(typeof(IArcSegment))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    public sealed class ArcSegment : PathSegment, global::System.Runtime.InteropServices.ICustomQueryInterface, IWinRTObject, IEquatable<ArcSegment>
    {
        private IntPtr ThisPtr => _inner == null ? (((IWinRTObject)this).NativeObject).ThisPtr : _inner.ThisPtr;

        private readonly IObjectReference _inner = null;



        private IObjectReference _objRef_global__Microsoft_UI_Xaml_Media_IArcSegment => _inner;


        private static volatile IObjectReference ___objRef_global__Microsoft_UI_Xaml_Media_ArcSegment;
        private static IObjectReference _objRef_global__Microsoft_UI_Xaml_Media_ArcSegment
        {
            get
            { 
                var factory = ___objRef_global__Microsoft_UI_Xaml_Media_ArcSegment;
                if (factory != null && factory.IsInCurrentContext)
                {
                    return factory;
                }
                else
                {
                    return ___objRef_global__Microsoft_UI_Xaml_Media_ArcSegment = ActivationFactory.Get("Microsoft.UI.Xaml.Media.ArcSegment");
                }
            }
        }

        public ArcSegment() :base(global::WinRT.DerivedComposed.Instance)
        {
            _inner = global::ABI.WinRT.Interop.IActivationFactoryMethods.ActivateInstanceUnsafe(_objRef_global__Microsoft_UI_Xaml_Media_ArcSegment, global::ABI.Microsoft.UI.Xaml.Media.IArcSegmentMethods.IID);
            ComWrappersSupport.RegisterObjectForInterface(this, ThisPtr);
            ComWrappersHelper.Init(_inner, false);

        }

        public static I As<I>() => ActivationFactory.Get("Microsoft.UI.Xaml.Media.ArcSegment").AsInterface<I>();

        private static volatile IObjectReference ___objRef_global__Microsoft_UI_Xaml_Media_IArcSegmentStatics;
        private static IObjectReference _objRef_global__Microsoft_UI_Xaml_Media_IArcSegmentStatics
        {
            get
            { 
                var factory = ___objRef_global__Microsoft_UI_Xaml_Media_IArcSegmentStatics;
                if (factory != null && factory.IsInCurrentContext)
                {
                    return factory;
                }
                else
                {
                    return ___objRef_global__Microsoft_UI_Xaml_Media_IArcSegmentStatics = ActivationFactory.Get("Microsoft.UI.Xaml.Media.ArcSegment", global::ABI.Microsoft.UI.Xaml.Media.IArcSegmentStaticsMethods.IID);
                }
            }
        }

        public static global::Microsoft.UI.Xaml.DependencyProperty IsLargeArcProperty => global::ABI.Microsoft.UI.Xaml.Media.IArcSegmentStaticsMethods.get_IsLargeArcProperty(_objRef_global__Microsoft_UI_Xaml_Media_IArcSegmentStatics);

        public static global::Microsoft.UI.Xaml.DependencyProperty PointProperty => global::ABI.Microsoft.UI.Xaml.Media.IArcSegmentStaticsMethods.get_PointProperty(_objRef_global__Microsoft_UI_Xaml_Media_IArcSegmentStatics);

        public static global::Microsoft.UI.Xaml.DependencyProperty RotationAngleProperty => global::ABI.Microsoft.UI.Xaml.Media.IArcSegmentStaticsMethods.get_RotationAngleProperty(_objRef_global__Microsoft_UI_Xaml_Media_IArcSegmentStatics);

        public static global::Microsoft.UI.Xaml.DependencyProperty SizeProperty => global::ABI.Microsoft.UI.Xaml.Media.IArcSegmentStaticsMethods.get_SizeProperty(_objRef_global__Microsoft_UI_Xaml_Media_IArcSegmentStatics);

        public static global::Microsoft.UI.Xaml.DependencyProperty SweepDirectionProperty => global::ABI.Microsoft.UI.Xaml.Media.IArcSegmentStaticsMethods.get_SweepDirectionProperty(_objRef_global__Microsoft_UI_Xaml_Media_IArcSegmentStatics);

        public static new ArcSegment FromAbi(IntPtr thisPtr)
        {
            if (thisPtr == IntPtr.Zero) return null;
            return MarshalInspectable<ArcSegment>.FromAbi(thisPtr);
        }

        internal ArcSegment(IObjectReference objRef)
            : base(global::WinRT.DerivedComposed.Instance)

        {
            _inner = objRef.As(global::ABI.Microsoft.UI.Xaml.Media.IArcSegmentMethods.IID);

        }


        public static bool operator ==(ArcSegment x, ArcSegment y) => (x?.ThisPtr ?? IntPtr.Zero) == (y?.ThisPtr ?? IntPtr.Zero);
        public static bool operator !=(ArcSegment x, ArcSegment y) => !(x == y);
        public bool Equals(ArcSegment other) => this == other;
        public override bool Equals(object obj) => obj is ArcSegment that && this == that;
        public override int GetHashCode() => ThisPtr.GetHashCode();


        bool IWinRTObject.HasUnwrappableNativeObject => true;
        IObjectReference IWinRTObject.NativeObject => _inner;

        private struct InterfaceTag<I>{};


        public bool IsLargeArc
        {
            get => global::ABI.Microsoft.UI.Xaml.Media.IArcSegmentMethods.get_IsLargeArc(_objRef_global__Microsoft_UI_Xaml_Media_IArcSegment);
            set => global::ABI.Microsoft.UI.Xaml.Media.IArcSegmentMethods.set_IsLargeArc(_objRef_global__Microsoft_UI_Xaml_Media_IArcSegment, value);
        }

        public global::Windows.Foundation.Point Point
        {
            get => global::ABI.Microsoft.UI.Xaml.Media.IArcSegmentMethods.get_Point(_objRef_global__Microsoft_UI_Xaml_Media_IArcSegment);
            set => global::ABI.Microsoft.UI.Xaml.Media.IArcSegmentMethods.set_Point(_objRef_global__Microsoft_UI_Xaml_Media_IArcSegment, value);
        }

        public double RotationAngle
        {
            get => global::ABI.Microsoft.UI.Xaml.Media.IArcSegmentMethods.get_RotationAngle(_objRef_global__Microsoft_UI_Xaml_Media_IArcSegment);
            set => global::ABI.Microsoft.UI.Xaml.Media.IArcSegmentMethods.set_RotationAngle(_objRef_global__Microsoft_UI_Xaml_Media_IArcSegment, value);
        }

        public global::Windows.Foundation.Size Size
        {
            get => global::ABI.Microsoft.UI.Xaml.Media.IArcSegmentMethods.get_Size(_objRef_global__Microsoft_UI_Xaml_Media_IArcSegment);
            set => global::ABI.Microsoft.UI.Xaml.Media.IArcSegmentMethods.set_Size(_objRef_global__Microsoft_UI_Xaml_Media_IArcSegment, value);
        }

        public SweepDirection SweepDirection
        {
            get => global::ABI.Microsoft.UI.Xaml.Media.IArcSegmentMethods.get_SweepDirection(_objRef_global__Microsoft_UI_Xaml_Media_IArcSegment);
            set => global::ABI.Microsoft.UI.Xaml.Media.IArcSegmentMethods.set_SweepDirection(_objRef_global__Microsoft_UI_Xaml_Media_IArcSegment, value);
        }

        protected override bool IsOverridableInterface(Guid iid) => base.IsOverridableInterface(iid);

        global::System.Runtime.InteropServices.CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(ref Guid iid, out IntPtr ppv)
        {
            ppv = IntPtr.Zero;
            if (IsOverridableInterface(iid) || global::WinRT.Interop.IID.IID_IInspectable == iid)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
            }

            if (((IWinRTObject)this).NativeObject.TryAs(iid, out ppv) >= 0)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.Handled;
            }

            return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
        }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")]
    [global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Media.BezierSegment))]
    [global::ABI.Microsoft.UI.Xaml.Media.BezierSegmentRcwFactory]
    [global::WinRT.ProjectedRuntimeClass(typeof(IBezierSegment))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    public sealed class BezierSegment : PathSegment, global::System.Runtime.InteropServices.ICustomQueryInterface, IWinRTObject, IEquatable<BezierSegment>
    {
        private IntPtr ThisPtr => _inner == null ? (((IWinRTObject)this).NativeObject).ThisPtr : _inner.ThisPtr;

        private readonly IObjectReference _inner = null;



        private IObjectReference _objRef_global__Microsoft_UI_Xaml_Media_IBezierSegment => _inner;


        private static volatile IObjectReference ___objRef_global__Microsoft_UI_Xaml_Media_BezierSegment;
        private static IObjectReference _objRef_global__Microsoft_UI_Xaml_Media_BezierSegment
        {
            get
            { 
                var factory = ___objRef_global__Microsoft_UI_Xaml_Media_BezierSegment;
                if (factory != null && factory.IsInCurrentContext)
                {
                    return factory;
                }
                else
                {
                    return ___objRef_global__Microsoft_UI_Xaml_Media_BezierSegment = ActivationFactory.Get("Microsoft.UI.Xaml.Media.BezierSegment");
                }
            }
        }

        public BezierSegment() :base(global::WinRT.DerivedComposed.Instance)
        {
            _inner = global::ABI.WinRT.Interop.IActivationFactoryMethods.ActivateInstanceUnsafe(_objRef_global__Microsoft_UI_Xaml_Media_BezierSegment, global::ABI.Microsoft.UI.Xaml.Media.IBezierSegmentMethods.IID);
            ComWrappersSupport.RegisterObjectForInterface(this, ThisPtr);
            ComWrappersHelper.Init(_inner, false);

        }

        public static I As<I>() => ActivationFactory.Get("Microsoft.UI.Xaml.Media.BezierSegment").AsInterface<I>();

        private static volatile IObjectReference ___objRef_global__Microsoft_UI_Xaml_Media_IBezierSegmentStatics;
        private static IObjectReference _objRef_global__Microsoft_UI_Xaml_Media_IBezierSegmentStatics
        {
            get
            { 
                var factory = ___objRef_global__Microsoft_UI_Xaml_Media_IBezierSegmentStatics;
                if (factory != null && factory.IsInCurrentContext)
                {
                    return factory;
                }
                else
                {
                    return ___objRef_global__Microsoft_UI_Xaml_Media_IBezierSegmentStatics = ActivationFactory.Get("Microsoft.UI.Xaml.Media.BezierSegment", global::ABI.Microsoft.UI.Xaml.Media.IBezierSegmentStaticsMethods.IID);
                }
            }
        }

        public static global::Microsoft.UI.Xaml.DependencyProperty Point1Property => global::ABI.Microsoft.UI.Xaml.Media.IBezierSegmentStaticsMethods.get_Point1Property(_objRef_global__Microsoft_UI_Xaml_Media_IBezierSegmentStatics);

        public static global::Microsoft.UI.Xaml.DependencyProperty Point2Property => global::ABI.Microsoft.UI.Xaml.Media.IBezierSegmentStaticsMethods.get_Point2Property(_objRef_global__Microsoft_UI_Xaml_Media_IBezierSegmentStatics);

        public static global::Microsoft.UI.Xaml.DependencyProperty Point3Property => global::ABI.Microsoft.UI.Xaml.Media.IBezierSegmentStaticsMethods.get_Point3Property(_objRef_global__Microsoft_UI_Xaml_Media_IBezierSegmentStatics);

        public static new BezierSegment FromAbi(IntPtr thisPtr)
        {
            if (thisPtr == IntPtr.Zero) return null;
            return MarshalInspectable<BezierSegment>.FromAbi(thisPtr);
        }

        internal BezierSegment(IObjectReference objRef)
            : base(global::WinRT.DerivedComposed.Instance)

        {
            _inner = objRef.As(global::ABI.Microsoft.UI.Xaml.Media.IBezierSegmentMethods.IID);

        }


        public static bool operator ==(BezierSegment x, BezierSegment y) => (x?.ThisPtr ?? IntPtr.Zero) == (y?.ThisPtr ?? IntPtr.Zero);
        public static bool operator !=(BezierSegment x, BezierSegment y) => !(x == y);
        public bool Equals(BezierSegment other) => this == other;
        public override bool Equals(object obj) => obj is BezierSegment that && this == that;
        public override int GetHashCode() => ThisPtr.GetHashCode();


        bool IWinRTObject.HasUnwrappableNativeObject => true;
        IObjectReference IWinRTObject.NativeObject => _inner;

        private struct InterfaceTag<I>{};


        public global::Windows.Foundation.Point Point1
        {
            get => global::ABI.Microsoft.UI.Xaml.Media.IBezierSegmentMethods.get_Point1(_objRef_global__Microsoft_UI_Xaml_Media_IBezierSegment);
            set => global::ABI.Microsoft.UI.Xaml.Media.IBezierSegmentMethods.set_Point1(_objRef_global__Microsoft_UI_Xaml_Media_IBezierSegment, value);
        }

        public global::Windows.Foundation.Point Point2
        {
            get => global::ABI.Microsoft.UI.Xaml.Media.IBezierSegmentMethods.get_Point2(_objRef_global__Microsoft_UI_Xaml_Media_IBezierSegment);
            set => global::ABI.Microsoft.UI.Xaml.Media.IBezierSegmentMethods.set_Point2(_objRef_global__Microsoft_UI_Xaml_Media_IBezierSegment, value);
        }

        public global::Windows.Foundation.Point Point3
        {
            get => global::ABI.Microsoft.UI.Xaml.Media.IBezierSegmentMethods.get_Point3(_objRef_global__Microsoft_UI_Xaml_Media_IBezierSegment);
            set => global::ABI.Microsoft.UI.Xaml.Media.IBezierSegmentMethods.set_Point3(_objRef_global__Microsoft_UI_Xaml_Media_IBezierSegment, value);
        }

        protected override bool IsOverridableInterface(Guid iid) => base.IsOverridableInterface(iid);

        global::System.Runtime.InteropServices.CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(ref Guid iid, out IntPtr ppv)
        {
            ppv = IntPtr.Zero;
            if (IsOverridableInterface(iid) || global::WinRT.Interop.IID.IID_IInspectable == iid)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
            }

            if (((IWinRTObject)this).NativeObject.TryAs(iid, out ppv) >= 0)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.Handled;
            }

            return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
        }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")]
    [global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Media.BitmapCache))]
    [global::ABI.Microsoft.UI.Xaml.Media.BitmapCacheRcwFactory]
    [global::WinRT.ProjectedRuntimeClass(typeof(IBitmapCache))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    public sealed class BitmapCache : CacheMode, global::System.Runtime.InteropServices.ICustomQueryInterface, IWinRTObject, IEquatable<BitmapCache>
    {
        private IntPtr ThisPtr => _inner == null ? (((IWinRTObject)this).NativeObject).ThisPtr : _inner.ThisPtr;

        private readonly IObjectReference _inner = null;



        private IObjectReference _objRef_global__Microsoft_UI_Xaml_Media_IBitmapCache => _inner;


        private static volatile IObjectReference ___objRef_global__Microsoft_UI_Xaml_Media_BitmapCache;
        private static IObjectReference _objRef_global__Microsoft_UI_Xaml_Media_BitmapCache
        {
            get
            { 
                var factory = ___objRef_global__Microsoft_UI_Xaml_Media_BitmapCache;
                if (factory != null && factory.IsInCurrentContext)
                {
                    return factory;
                }
                else
                {
                    return ___objRef_global__Microsoft_UI_Xaml_Media_BitmapCache = ActivationFactory.Get("Microsoft.UI.Xaml.Media.BitmapCache");
                }
            }
        }

        public BitmapCache() :base(global::WinRT.DerivedComposed.Instance)
        {
            _inner = global::ABI.WinRT.Interop.IActivationFactoryMethods.ActivateInstanceUnsafe(_objRef_global__Microsoft_UI_Xaml_Media_BitmapCache, global::ABI.Microsoft.UI.Xaml.Media.IBitmapCacheMethods.IID);
            ComWrappersSupport.RegisterObjectForInterface(this, ThisPtr);
            ComWrappersHelper.Init(_inner, false);

        }

        public static new BitmapCache FromAbi(IntPtr thisPtr)
        {
            if (thisPtr == IntPtr.Zero) return null;
            return MarshalInspectable<BitmapCache>.FromAbi(thisPtr);
        }

        internal BitmapCache(IObjectReference objRef)
            : base(global::WinRT.DerivedComposed.Instance)

        {
            _inner = objRef.As(global::ABI.Microsoft.UI.Xaml.Media.IBitmapCacheMethods.IID);

        }


        public static bool operator ==(BitmapCache x, BitmapCache y) => (x?.ThisPtr ?? IntPtr.Zero) == (y?.ThisPtr ?? IntPtr.Zero);
        public static bool operator !=(BitmapCache x, BitmapCache y) => !(x == y);
        public bool Equals(BitmapCache other) => this == other;
        public override bool Equals(object obj) => obj is BitmapCache that && this == that;
        public override int GetHashCode() => ThisPtr.GetHashCode();


        bool IWinRTObject.HasUnwrappableNativeObject => true;
        IObjectReference IWinRTObject.NativeObject => _inner;

        private struct InterfaceTag<I>{};


        protected override bool IsOverridableInterface(Guid iid) => base.IsOverridableInterface(iid);

        global::System.Runtime.InteropServices.CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(ref Guid iid, out IntPtr ppv)
        {
            ppv = IntPtr.Zero;
            if (IsOverridableInterface(iid) || global::WinRT.Interop.IID.IID_IInspectable == iid)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
            }

            if (((IWinRTObject)this).NativeObject.TryAs(iid, out ppv) >= 0)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.Handled;
            }

            return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
        }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")]
    [global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Media.Brush))]
    [global::ABI.Microsoft.UI.Xaml.Media.BrushRcwFactory]
    [global::WinRT.ProjectedRuntimeClass(typeof(IBrush))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    public class Brush : global::Microsoft.UI.Xaml.DependencyObject, IBrushOverrides, global::Microsoft.UI.Composition.IAnimationObject, global::System.Runtime.InteropServices.ICustomQueryInterface, IWinRTObject, IEquatable<Brush>
    {
        private IntPtr ThisPtr => _inner == null ? (((IWinRTObject)this).NativeObject).ThisPtr : _inner.ThisPtr;

        private readonly IObjectReference _inner = null;




        private volatile IObjectReference ___objRef_global__Microsoft_UI_Xaml_Media_IBrush;
        private IObjectReference Make___objRef_global__Microsoft_UI_Xaml_Media_IBrush()
        {
            global::System.Threading.Interlocked.CompareExchange(ref ___objRef_global__Microsoft_UI_Xaml_Media_IBrush, ((IWinRTObject)this).NativeObject.As<IUnknownVftbl>(global::ABI.Microsoft.UI.Xaml.Media.IBrushMethods.IID), null);
            return ___objRef_global__Microsoft_UI_Xaml_Media_IBrush;
        }
        private IObjectReference _objRef_global__Microsoft_UI_Xaml_Media_IBrush => ___objRef_global__Microsoft_UI_Xaml_Media_IBrush ?? Make___objRef_global__Microsoft_UI_Xaml_Media_IBrush();

        private volatile IObjectReference ___objRef_global__Microsoft_UI_Xaml_Media_IBrushOverrides;
        private IObjectReference Make___objRef_global__Microsoft_UI_Xaml_Media_IBrushOverrides()
        {
            global::System.Threading.Interlocked.CompareExchange(ref ___objRef_global__Microsoft_UI_Xaml_Media_IBrushOverrides, ((IWinRTObject)this).NativeObject.As<IUnknownVftbl>(global::ABI.Microsoft.UI.Xaml.Media.IBrushOverridesMethods.IID), null);
            return ___objRef_global__Microsoft_UI_Xaml_Media_IBrushOverrides;
        }
        private IObjectReference _objRef_global__Microsoft_UI_Xaml_Media_IBrushOverrides => ___objRef_global__Microsoft_UI_Xaml_Media_IBrushOverrides ?? Make___objRef_global__Microsoft_UI_Xaml_Media_IBrushOverrides();

        private volatile IObjectReference ___objRef_global__Microsoft_UI_Composition_IAnimationObject;
        private IObjectReference Make___objRef_global__Microsoft_UI_Composition_IAnimationObject()
        {
            global::System.Threading.Interlocked.CompareExchange(ref ___objRef_global__Microsoft_UI_Composition_IAnimationObject, ((IWinRTObject)this).NativeObject.As<IUnknownVftbl>(global::ABI.Microsoft.UI.Composition.IAnimationObjectMethods.IID), null);
            return ___objRef_global__Microsoft_UI_Composition_IAnimationObject;
        }
        private IObjectReference _objRef_global__Microsoft_UI_Composition_IAnimationObject => ___objRef_global__Microsoft_UI_Composition_IAnimationObject ?? Make___objRef_global__Microsoft_UI_Composition_IAnimationObject();



        private static class _IBrushFactoryMethods
        {
            public static unsafe IntPtr CreateInstance(IObjectReference _obj, object baseInterface, out IntPtr innerInterface)
            {
                var ThisPtr = _obj.ThisPtr;

                ObjectReferenceValue __baseInterface = default;
                IntPtr __innerInterface = default;
                IntPtr __retval = default;
                try
                {
                    __baseInterface = MarshalInspectable<object>.CreateMarshaler2(baseInterface);
                    global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, IntPtr*, IntPtr*, int>**)ThisPtr)[6](ThisPtr, MarshalInspectable<object>.GetAbi(__baseInterface), &__innerInterface, &__retval));
                    global::System.GC.KeepAlive(_obj);
                    innerInterface = __innerInterface;
                    return __retval;
                }
                finally
                {
                    MarshalInspectable<object>.DisposeMarshaler(__baseInterface);
                }
            }
        }

        private static volatile IObjectReference ___objRef_global__Microsoft_UI_Xaml_Media_IBrushFactory;
        private static IObjectReference _objRef_global__Microsoft_UI_Xaml_Media_IBrushFactory
        {
            get
            { 
                var factory = ___objRef_global__Microsoft_UI_Xaml_Media_IBrushFactory;
                if (factory != null && factory.IsInCurrentContext)
                {
                    return factory;
                }
                else
                {
                    return ___objRef_global__Microsoft_UI_Xaml_Media_IBrushFactory = ActivationFactory.Get("Microsoft.UI.Xaml.Media.Brush", global::ABI.Microsoft.UI.Xaml.Media.IBrushFactoryMethods.IID);
                }
            }
        }

        protected Brush():base(global::WinRT.DerivedComposed.Instance)
        {
            bool isAggregation = this.GetType() != typeof(Brush);
            object baseInspectable = isAggregation ? this : null;
            IntPtr composed = _IBrushFactoryMethods.CreateInstance(_objRef_global__Microsoft_UI_Xaml_Media_IBrushFactory,  baseInspectable, out IntPtr inner);
            try
            {
                ComWrappersHelper.Init(isAggregation, this, composed, inner, global::ABI.Microsoft.UI.Xaml.Media.IBrushMethods.IID, out _inner);

            }
            finally
            {
                Marshal.Release(inner);   
            }
        }

        public static I As<I>() => ActivationFactory.Get("Microsoft.UI.Xaml.Media.Brush").AsInterface<I>();

        private static volatile IObjectReference ___objRef_global__Microsoft_UI_Xaml_Media_IBrushStatics;
        private static IObjectReference _objRef_global__Microsoft_UI_Xaml_Media_IBrushStatics
        {
            get
            { 
                var factory = ___objRef_global__Microsoft_UI_Xaml_Media_IBrushStatics;
                if (factory != null && factory.IsInCurrentContext)
                {
                    return factory;
                }
                else
                {
                    return ___objRef_global__Microsoft_UI_Xaml_Media_IBrushStatics = ActivationFactory.Get("Microsoft.UI.Xaml.Media.Brush", global::ABI.Microsoft.UI.Xaml.Media.IBrushStaticsMethods.IID);
                }
            }
        }

        public static global::Microsoft.UI.Xaml.DependencyProperty OpacityProperty => global::ABI.Microsoft.UI.Xaml.Media.IBrushStaticsMethods.get_OpacityProperty(_objRef_global__Microsoft_UI_Xaml_Media_IBrushStatics);

        public static global::Microsoft.UI.Xaml.DependencyProperty RelativeTransformProperty => global::ABI.Microsoft.UI.Xaml.Media.IBrushStaticsMethods.get_RelativeTransformProperty(_objRef_global__Microsoft_UI_Xaml_Media_IBrushStatics);

        public static global::Microsoft.UI.Xaml.DependencyProperty TransformProperty => global::ABI.Microsoft.UI.Xaml.Media.IBrushStaticsMethods.get_TransformProperty(_objRef_global__Microsoft_UI_Xaml_Media_IBrushStatics);

        public static new Brush FromAbi(IntPtr thisPtr)
        {
            if (thisPtr == IntPtr.Zero) return null;
            return MarshalInspectable<Brush>.FromAbi(thisPtr);
        }

        protected internal Brush(IObjectReference objRef)
            : base(global::WinRT.DerivedComposed.Instance)

        {
            _inner = objRef.As(global::ABI.Microsoft.UI.Xaml.Media.IBrushMethods.IID);

        }


        public static bool operator ==(Brush x, Brush y) => (x?.ThisPtr ?? IntPtr.Zero) == (y?.ThisPtr ?? IntPtr.Zero);
        public static bool operator !=(Brush x, Brush y) => !(x == y);
        public bool Equals(Brush other) => this == other;
        public override bool Equals(object obj) => obj is Brush that && this == that;
        public override int GetHashCode() => ThisPtr.GetHashCode();


        protected Brush(global::WinRT.DerivedComposed _):base(_)
        {

        }
        bool IWinRTObject.HasUnwrappableNativeObject => this.GetType() == typeof(Brush);
        IObjectReference IWinRTObject.NativeObject => _inner;

        private struct InterfaceTag<I>{};


        protected virtual void PopulatePropertyInfoOverride(string propertyName, global::Microsoft.UI.Composition.AnimationPropertyInfo animationPropertyInfo) => global::ABI.Microsoft.UI.Xaml.Media.IBrushOverridesMethods.PopulatePropertyInfoOverride(_objRef_global__Microsoft_UI_Xaml_Media_IBrushOverrides, propertyName, animationPropertyInfo);

        void IBrushOverrides.PopulatePropertyInfoOverride(string propertyName, global::Microsoft.UI.Composition.AnimationPropertyInfo animationPropertyInfo) => PopulatePropertyInfoOverride(propertyName, animationPropertyInfo);
        public void PopulatePropertyInfo(string propertyName, global::Microsoft.UI.Composition.AnimationPropertyInfo propertyInfo) => global::ABI.Microsoft.UI.Composition.IAnimationObjectMethods.PopulatePropertyInfo(_objRef_global__Microsoft_UI_Composition_IAnimationObject, propertyName, propertyInfo);

        public double Opacity
        {
            get => global::ABI.Microsoft.UI.Xaml.Media.IBrushMethods.get_Opacity(_objRef_global__Microsoft_UI_Xaml_Media_IBrush);
            set => global::ABI.Microsoft.UI.Xaml.Media.IBrushMethods.set_Opacity(_objRef_global__Microsoft_UI_Xaml_Media_IBrush, value);
        }

        public Transform RelativeTransform
        {
            get => global::ABI.Microsoft.UI.Xaml.Media.IBrushMethods.get_RelativeTransform(_objRef_global__Microsoft_UI_Xaml_Media_IBrush);
            set => global::ABI.Microsoft.UI.Xaml.Media.IBrushMethods.set_RelativeTransform(_objRef_global__Microsoft_UI_Xaml_Media_IBrush, value);
        }

        public Transform Transform
        {
            get => global::ABI.Microsoft.UI.Xaml.Media.IBrushMethods.get_Transform(_objRef_global__Microsoft_UI_Xaml_Media_IBrush);
            set => global::ABI.Microsoft.UI.Xaml.Media.IBrushMethods.set_Transform(_objRef_global__Microsoft_UI_Xaml_Media_IBrush, value);
        }

        protected override bool IsOverridableInterface(Guid iid) => global::ABI.Microsoft.UI.Xaml.Media.IBrushOverridesMethods.IID == iid || base.IsOverridableInterface(iid);

        global::System.Runtime.InteropServices.CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(ref Guid iid, out IntPtr ppv)
        {
            ppv = IntPtr.Zero;
            if (IsOverridableInterface(iid) || global::WinRT.Interop.IID.IID_IInspectable == iid)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
            }

            if (((IWinRTObject)this).NativeObject.TryAs(iid, out ppv) >= 0)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.Handled;
            }

            return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
        }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")]
    [global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Media.BrushCollection))]
    [global::ABI.Microsoft.UI.Xaml.Media.BrushCollectionRcwFactory]
    [global::WinRT.ProjectedRuntimeClass(typeof(global::System.Collections.Generic.IList<Brush>))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    public sealed class BrushCollection : global::System.Collections.Generic.IList<Brush>, global::System.Collections.Generic.IEnumerable<Brush>, global::System.Runtime.InteropServices.ICustomQueryInterface, IWinRTObject, IEquatable<BrushCollection>
    {
        private IntPtr ThisPtr => _inner == null ? (((IWinRTObject)this).NativeObject).ThisPtr : _inner.ThisPtr;

        private readonly IObjectReference _inner = null;




        private volatile IObjectReference ___objRef_global__System_Collections_Generic_IList_Brush_;
        private IObjectReference Make___objRef_global__System_Collections_Generic_IList_Brush_()
        {
            _ = global::WinRT.GenericTypeInstantiations.Windows_Foundation_Collections_IVector_1_Microsoft_UI_Xaml_Media_Brush.EnsureInitialized();
            global::System.Threading.Interlocked.CompareExchange(ref ___objRef_global__System_Collections_Generic_IList_Brush_, ((IWinRTObject)this).NativeObject.As<IUnknownVftbl>(global::ABI.System.Collections.Generic.IListMethods<Brush>.IID), null);
            return ___objRef_global__System_Collections_Generic_IList_Brush_;
        }
        private IObjectReference _objRef_global__System_Collections_Generic_IList_Brush_ => ___objRef_global__System_Collections_Generic_IList_Brush_ ?? Make___objRef_global__System_Collections_Generic_IList_Brush_();

        private volatile IObjectReference ___objRef_global__System_Collections_Generic_IEnumerable_Brush_;
        private IObjectReference Make___objRef_global__System_Collections_Generic_IEnumerable_Brush_()
        {
            _ = global::WinRT.GenericTypeInstantiations.Windows_Foundation_Collections_IIterable_1_Microsoft_UI_Xaml_Media_Brush.EnsureInitialized();
            global::System.Threading.Interlocked.CompareExchange(ref ___objRef_global__System_Collections_Generic_IEnumerable_Brush_, ((IWinRTObject)this).NativeObject.As<IUnknownVftbl>(global::ABI.System.Collections.Generic.IEnumerableMethods<Brush>.IID), null);
            return ___objRef_global__System_Collections_Generic_IEnumerable_Brush_;
        }
        private IObjectReference _objRef_global__System_Collections_Generic_IEnumerable_Brush_ => ___objRef_global__System_Collections_Generic_IEnumerable_Brush_ ?? Make___objRef_global__System_Collections_Generic_IEnumerable_Brush_();



        private static volatile IObjectReference ___objRef_global__Microsoft_UI_Xaml_Media_BrushCollection;
        private static IObjectReference _objRef_global__Microsoft_UI_Xaml_Media_BrushCollection
        {
            get
            { 
                var factory = ___objRef_global__Microsoft_UI_Xaml_Media_BrushCollection;
                if (factory != null && factory.IsInCurrentContext)
                {
                    return factory;
                }
                else
                {
                    return ___objRef_global__Microsoft_UI_Xaml_Media_BrushCollection = ActivationFactory.Get("Microsoft.UI.Xaml.Media.BrushCollection");
                }
            }
        }

        public BrushCollection() 
        {
            _inner = global::ABI.WinRT.Interop.IActivationFactoryMethods.ActivateInstanceUnsafe(_objRef_global__Microsoft_UI_Xaml_Media_BrushCollection, global::ABI.System.Collections.Generic.IListMethods<Brush>.IID);
            ComWrappersSupport.RegisterObjectForInterface(this, ThisPtr);
            ComWrappersHelper.Init(_inner, false);

        }

        public static BrushCollection FromAbi(IntPtr thisPtr)
        {
            if (thisPtr == IntPtr.Zero) return null;
            return MarshalInspectable<BrushCollection>.FromAbi(thisPtr);
        }

        internal BrushCollection(IObjectReference objRef)
        {
            _inner = objRef.As(global::ABI.System.Collections.Generic.IListMethods<Brush>.IID);

        }


        public static bool operator ==(BrushCollection x, BrushCollection y) => (x?.ThisPtr ?? IntPtr.Zero) == (y?.ThisPtr ?? IntPtr.Zero);
        public static bool operator !=(BrushCollection x, BrushCollection y) => !(x == y);
        public bool Equals(BrushCollection other) => this == other;
        public override bool Equals(object obj) => obj is BrushCollection that && this == that;
        public override int GetHashCode() => ThisPtr.GetHashCode();


        bool IWinRTObject.HasUnwrappableNativeObject => true;
        IObjectReference IWinRTObject.NativeObject => _inner;
        private volatile global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> _queryInterfaceCache;
        private global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> MakeQueryInterfaceCache()
        {
            global::System.Threading.Interlocked.CompareExchange(ref _queryInterfaceCache, new global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference>(), null); 
            return _queryInterfaceCache;
        }
        global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> IWinRTObject.QueryInterfaceCache => _queryInterfaceCache ?? MakeQueryInterfaceCache();
        private volatile global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> _additionalTypeData;
        private global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> MakeAdditionalTypeData()
        {
            global::System.Threading.Interlocked.CompareExchange(ref _additionalTypeData, new global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object>(), null); 
            return _additionalTypeData;
        }
        global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> IWinRTObject.AdditionalTypeData => _additionalTypeData ?? MakeAdditionalTypeData();

        private struct InterfaceTag<I>{};


        public int Count => global::ABI.System.Collections.Generic.IListMethods<Brush>.get_Count(_objRef_global__System_Collections_Generic_IList_Brush_);
        public bool IsReadOnly => global::ABI.System.Collections.Generic.IListMethods<Brush>.get_IsReadOnly(_objRef_global__System_Collections_Generic_IList_Brush_);
        [global::System.Runtime.CompilerServices.IndexerName("ListItem")]
        public Brush this[int index] 
        {
            get => global::ABI.System.Collections.Generic.IListMethods<Brush>.Indexer_Get(_objRef_global__System_Collections_Generic_IList_Brush_, index);
            set => global::ABI.System.Collections.Generic.IListMethods<Brush>.Indexer_Set(_objRef_global__System_Collections_Generic_IList_Brush_, index, value);
        }
        public int IndexOf(Brush item) => global::ABI.System.Collections.Generic.IListMethods<Brush>.IndexOf(_objRef_global__System_Collections_Generic_IList_Brush_, item);
        public void Insert(int index, Brush item) => global::ABI.System.Collections.Generic.IListMethods<Brush>.Insert(_objRef_global__System_Collections_Generic_IList_Brush_, index, item);
        public void RemoveAt(int index) => global::ABI.System.Collections.Generic.IListMethods<Brush>.RemoveAt(_objRef_global__System_Collections_Generic_IList_Brush_, index);
        public void Add(Brush item) => global::ABI.System.Collections.Generic.IListMethods<Brush>.Add(_objRef_global__System_Collections_Generic_IList_Brush_, item);
        public void Clear() => global::ABI.System.Collections.Generic.IListMethods<Brush>.Clear(_objRef_global__System_Collections_Generic_IList_Brush_);
        public bool Contains(Brush item) => global::ABI.System.Collections.Generic.IListMethods<Brush>.Contains(_objRef_global__System_Collections_Generic_IList_Brush_, item);
        public void CopyTo(Brush[] array, int arrayIndex) => global::ABI.System.Collections.Generic.IListMethods<Brush>.CopyTo(_objRef_global__System_Collections_Generic_IList_Brush_, array, arrayIndex);
        public bool Remove(Brush item) => global::ABI.System.Collections.Generic.IListMethods<Brush>.Remove(_objRef_global__System_Collections_Generic_IList_Brush_, item);

        public IEnumerator<Brush> GetEnumerator() => global::ABI.System.Collections.Generic.IEnumerableMethods<Brush>.GetEnumerator(_objRef_global__System_Collections_Generic_IEnumerable_Brush_);

        IEnumerator IEnumerable.GetEnumerator() => GetEnumerator();

        private bool IsOverridableInterface(Guid iid) => false;

        global::System.Runtime.InteropServices.CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(ref Guid iid, out IntPtr ppv)
        {
            ppv = IntPtr.Zero;
            if (IsOverridableInterface(iid) || global::WinRT.Interop.IID.IID_IInspectable == iid)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
            }

            if (((IWinRTObject)this).NativeObject.TryAs(iid, out ppv) >= 0)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.Handled;
            }

            return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
        }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")][global::WinRT.WinRTExposedType(typeof(global::WinRT.EnumTypeDetails<BrushMappingMode>))][global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    public enum BrushMappingMode : int
    {
        Absolute = unchecked((int)0),
        RelativeToBoundingBox = unchecked((int)0x1),
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")]
    [global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Media.CacheMode))]
    [global::ABI.Microsoft.UI.Xaml.Media.CacheModeRcwFactory]
    [global::WinRT.ProjectedRuntimeClass(typeof(ICacheMode))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    public class CacheMode : global::Microsoft.UI.Xaml.DependencyObject, global::System.Runtime.InteropServices.ICustomQueryInterface, IWinRTObject, IEquatable<CacheMode>
    {
        private IntPtr ThisPtr => _inner == null ? (((IWinRTObject)this).NativeObject).ThisPtr : _inner.ThisPtr;

        private readonly IObjectReference _inner = null;




        private volatile IObjectReference ___objRef_global__Microsoft_UI_Xaml_Media_ICacheMode;
        private IObjectReference Make___objRef_global__Microsoft_UI_Xaml_Media_ICacheMode()
        {
            global::System.Threading.Interlocked.CompareExchange(ref ___objRef_global__Microsoft_UI_Xaml_Media_ICacheMode, ((IWinRTObject)this).NativeObject.As<IUnknownVftbl>(global::ABI.Microsoft.UI.Xaml.Media.ICacheModeMethods.IID), null);
            return ___objRef_global__Microsoft_UI_Xaml_Media_ICacheMode;
        }
        private IObjectReference _objRef_global__Microsoft_UI_Xaml_Media_ICacheMode => ___objRef_global__Microsoft_UI_Xaml_Media_ICacheMode ?? Make___objRef_global__Microsoft_UI_Xaml_Media_ICacheMode();



        private static class _ICacheModeFactoryMethods
        {
            public static unsafe IntPtr CreateInstance(IObjectReference _obj, object baseInterface, out IntPtr innerInterface)
            {
                var ThisPtr = _obj.ThisPtr;

                ObjectReferenceValue __baseInterface = default;
                IntPtr __innerInterface = default;
                IntPtr __retval = default;
                try
                {
                    __baseInterface = MarshalInspectable<object>.CreateMarshaler2(baseInterface);
                    global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, IntPtr*, IntPtr*, int>**)ThisPtr)[6](ThisPtr, MarshalInspectable<object>.GetAbi(__baseInterface), &__innerInterface, &__retval));
                    global::System.GC.KeepAlive(_obj);
                    innerInterface = __innerInterface;
                    return __retval;
                }
                finally
                {
                    MarshalInspectable<object>.DisposeMarshaler(__baseInterface);
                }
            }
        }

        private static volatile IObjectReference ___objRef_global__Microsoft_UI_Xaml_Media_ICacheModeFactory;
        private static IObjectReference _objRef_global__Microsoft_UI_Xaml_Media_ICacheModeFactory
        {
            get
            { 
                var factory = ___objRef_global__Microsoft_UI_Xaml_Media_ICacheModeFactory;
                if (factory != null && factory.IsInCurrentContext)
                {
                    return factory;
                }
                else
                {
                    return ___objRef_global__Microsoft_UI_Xaml_Media_ICacheModeFactory = ActivationFactory.Get("Microsoft.UI.Xaml.Media.CacheMode", global::ABI.Microsoft.UI.Xaml.Media.ICacheModeFactoryMethods.IID);
                }
            }
        }

        protected CacheMode():base(global::WinRT.DerivedComposed.Instance)
        {
            bool isAggregation = this.GetType() != typeof(CacheMode);
            object baseInspectable = isAggregation ? this : null;
            IntPtr composed = _ICacheModeFactoryMethods.CreateInstance(_objRef_global__Microsoft_UI_Xaml_Media_ICacheModeFactory,  baseInspectable, out IntPtr inner);
            try
            {
                ComWrappersHelper.Init(isAggregation, this, composed, inner, global::ABI.Microsoft.UI.Xaml.Media.ICacheModeMethods.IID, out _inner);

            }
            finally
            {
                Marshal.Release(inner);   
            }
        }

        public static new CacheMode FromAbi(IntPtr thisPtr)
        {
            if (thisPtr == IntPtr.Zero) return null;
            return MarshalInspectable<CacheMode>.FromAbi(thisPtr);
        }

        protected internal CacheMode(IObjectReference objRef)
            : base(global::WinRT.DerivedComposed.Instance)

        {
            _inner = objRef.As(global::ABI.Microsoft.UI.Xaml.Media.ICacheModeMethods.IID);

        }


        public static bool operator ==(CacheMode x, CacheMode y) => (x?.ThisPtr ?? IntPtr.Zero) == (y?.ThisPtr ?? IntPtr.Zero);
        public static bool operator !=(CacheMode x, CacheMode y) => !(x == y);
        public bool Equals(CacheMode other) => this == other;
        public override bool Equals(object obj) => obj is CacheMode that && this == that;
        public override int GetHashCode() => ThisPtr.GetHashCode();


        protected CacheMode(global::WinRT.DerivedComposed _):base(_)
        {

        }
        bool IWinRTObject.HasUnwrappableNativeObject => this.GetType() == typeof(CacheMode);
        IObjectReference IWinRTObject.NativeObject => _inner;

        private struct InterfaceTag<I>{};


        protected override bool IsOverridableInterface(Guid iid) => base.IsOverridableInterface(iid);

        global::System.Runtime.InteropServices.CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(ref Guid iid, out IntPtr ppv)
        {
            ppv = IntPtr.Zero;
            if (IsOverridableInterface(iid) || global::WinRT.Interop.IID.IID_IInspectable == iid)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
            }

            if (((IWinRTObject)this).NativeObject.TryAs(iid, out ppv) >= 0)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.Handled;
            }

            return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
        }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")][global::WinRT.WinRTExposedType(typeof(global::WinRT.EnumTypeDetails<ColorInterpolationMode>))][global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    public enum ColorInterpolationMode : int
    {
        ScRgbLinearInterpolation = unchecked((int)0),
        SRgbLinearInterpolation = unchecked((int)0x1),
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")]
    [global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Media.CompositeTransform))]
    [global::ABI.Microsoft.UI.Xaml.Media.CompositeTransformRcwFactory]
    [global::WinRT.ProjectedRuntimeClass(typeof(ICompositeTransform))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    public sealed class CompositeTransform : Transform, global::System.Runtime.InteropServices.ICustomQueryInterface, IWinRTObject, IEquatable<CompositeTransform>
    {
        private IntPtr ThisPtr => _inner == null ? (((IWinRTObject)this).NativeObject).ThisPtr : _inner.ThisPtr;

        private readonly IObjectReference _inner = null;



        private IObjectReference _objRef_global__Microsoft_UI_Xaml_Media_ICompositeTransform => _inner;


        private static volatile IObjectReference ___objRef_global__Microsoft_UI_Xaml_Media_CompositeTransform;
        private static IObjectReference _objRef_global__Microsoft_UI_Xaml_Media_CompositeTransform
        {
            get
            { 
                var factory = ___objRef_global__Microsoft_UI_Xaml_Media_CompositeTransform;
                if (factory != null && factory.IsInCurrentContext)
                {
                    return factory;
                }
                else
                {
                    return ___objRef_global__Microsoft_UI_Xaml_Media_CompositeTransform = ActivationFactory.Get("Microsoft.UI.Xaml.Media.CompositeTransform");
                }
            }
        }

        public CompositeTransform() :base(global::WinRT.DerivedComposed.Instance)
        {
            _inner = global::ABI.WinRT.Interop.IActivationFactoryMethods.ActivateInstanceUnsafe(_objRef_global__Microsoft_UI_Xaml_Media_CompositeTransform, global::ABI.Microsoft.UI.Xaml.Media.ICompositeTransformMethods.IID);
            ComWrappersSupport.RegisterObjectForInterface(this, ThisPtr);
            ComWrappersHelper.Init(_inner, false);

        }

        public static I As<I>() => ActivationFactory.Get("Microsoft.UI.Xaml.Media.CompositeTransform").AsInterface<I>();

        private static volatile IObjectReference ___objRef_global__Microsoft_UI_Xaml_Media_ICompositeTransformStatics;
        private static IObjectReference _objRef_global__Microsoft_UI_Xaml_Media_ICompositeTransformStatics
        {
            get
            { 
                var factory = ___objRef_global__Microsoft_UI_Xaml_Media_ICompositeTransformStatics;
                if (factory != null && factory.IsInCurrentContext)
                {
                    return factory;
                }
                else
                {
                    return ___objRef_global__Microsoft_UI_Xaml_Media_ICompositeTransformStatics = ActivationFactory.Get("Microsoft.UI.Xaml.Media.CompositeTransform", global::ABI.Microsoft.UI.Xaml.Media.ICompositeTransformStaticsMethods.IID);
                }
            }
        }

        public static global::Microsoft.UI.Xaml.DependencyProperty CenterXProperty => global::ABI.Microsoft.UI.Xaml.Media.ICompositeTransformStaticsMethods.get_CenterXProperty(_objRef_global__Microsoft_UI_Xaml_Media_ICompositeTransformStatics);

        public static global::Microsoft.UI.Xaml.DependencyProperty CenterYProperty => global::ABI.Microsoft.UI.Xaml.Media.ICompositeTransformStaticsMethods.get_CenterYProperty(_objRef_global__Microsoft_UI_Xaml_Media_ICompositeTransformStatics);

        public static global::Microsoft.UI.Xaml.DependencyProperty RotationProperty => global::ABI.Microsoft.UI.Xaml.Media.ICompositeTransformStaticsMethods.get_RotationProperty(_objRef_global__Microsoft_UI_Xaml_Media_ICompositeTransformStatics);

        public static global::Microsoft.UI.Xaml.DependencyProperty ScaleXProperty => global::ABI.Microsoft.UI.Xaml.Media.ICompositeTransformStaticsMethods.get_ScaleXProperty(_objRef_global__Microsoft_UI_Xaml_Media_ICompositeTransformStatics);

        public static global::Microsoft.UI.Xaml.DependencyProperty ScaleYProperty => global::ABI.Microsoft.UI.Xaml.Media.ICompositeTransformStaticsMethods.get_ScaleYProperty(_objRef_global__Microsoft_UI_Xaml_Media_ICompositeTransformStatics);

        public static global::Microsoft.UI.Xaml.DependencyProperty SkewXProperty => global::ABI.Microsoft.UI.Xaml.Media.ICompositeTransformStaticsMethods.get_SkewXProperty(_objRef_global__Microsoft_UI_Xaml_Media_ICompositeTransformStatics);

        public static global::Microsoft.UI.Xaml.DependencyProperty SkewYProperty => global::ABI.Microsoft.UI.Xaml.Media.ICompositeTransformStaticsMethods.get_SkewYProperty(_objRef_global__Microsoft_UI_Xaml_Media_ICompositeTransformStatics);

        public static global::Microsoft.UI.Xaml.DependencyProperty TranslateXProperty => global::ABI.Microsoft.UI.Xaml.Media.ICompositeTransformStaticsMethods.get_TranslateXProperty(_objRef_global__Microsoft_UI_Xaml_Media_ICompositeTransformStatics);

        public static global::Microsoft.UI.Xaml.DependencyProperty TranslateYProperty => global::ABI.Microsoft.UI.Xaml.Media.ICompositeTransformStaticsMethods.get_TranslateYProperty(_objRef_global__Microsoft_UI_Xaml_Media_ICompositeTransformStatics);

        public static new CompositeTransform FromAbi(IntPtr thisPtr)
        {
            if (thisPtr == IntPtr.Zero) return null;
            return MarshalInspectable<CompositeTransform>.FromAbi(thisPtr);
        }

        internal CompositeTransform(IObjectReference objRef)
            : base(global::WinRT.DerivedComposed.Instance)

        {
            _inner = objRef.As(global::ABI.Microsoft.UI.Xaml.Media.ICompositeTransformMethods.IID);

        }


        public static bool operator ==(CompositeTransform x, CompositeTransform y) => (x?.ThisPtr ?? IntPtr.Zero) == (y?.ThisPtr ?? IntPtr.Zero);
        public static bool operator !=(CompositeTransform x, CompositeTransform y) => !(x == y);
        public bool Equals(CompositeTransform other) => this == other;
        public override bool Equals(object obj) => obj is CompositeTransform that && this == that;
        public override int GetHashCode() => ThisPtr.GetHashCode();


        bool IWinRTObject.HasUnwrappableNativeObject => true;
        IObjectReference IWinRTObject.NativeObject => _inner;

        private struct InterfaceTag<I>{};


        public double CenterX
        {
            get => global::ABI.Microsoft.UI.Xaml.Media.ICompositeTransformMethods.get_CenterX(_objRef_global__Microsoft_UI_Xaml_Media_ICompositeTransform);
            set => global::ABI.Microsoft.UI.Xaml.Media.ICompositeTransformMethods.set_CenterX(_objRef_global__Microsoft_UI_Xaml_Media_ICompositeTransform, value);
        }

        public double CenterY
        {
            get => global::ABI.Microsoft.UI.Xaml.Media.ICompositeTransformMethods.get_CenterY(_objRef_global__Microsoft_UI_Xaml_Media_ICompositeTransform);
            set => global::ABI.Microsoft.UI.Xaml.Media.ICompositeTransformMethods.set_CenterY(_objRef_global__Microsoft_UI_Xaml_Media_ICompositeTransform, value);
        }

        public double Rotation
        {
            get => global::ABI.Microsoft.UI.Xaml.Media.ICompositeTransformMethods.get_Rotation(_objRef_global__Microsoft_UI_Xaml_Media_ICompositeTransform);
            set => global::ABI.Microsoft.UI.Xaml.Media.ICompositeTransformMethods.set_Rotation(_objRef_global__Microsoft_UI_Xaml_Media_ICompositeTransform, value);
        }

        public double ScaleX
        {
            get => global::ABI.Microsoft.UI.Xaml.Media.ICompositeTransformMethods.get_ScaleX(_objRef_global__Microsoft_UI_Xaml_Media_ICompositeTransform);
            set => global::ABI.Microsoft.UI.Xaml.Media.ICompositeTransformMethods.set_ScaleX(_objRef_global__Microsoft_UI_Xaml_Media_ICompositeTransform, value);
        }

        public double ScaleY
        {
            get => global::ABI.Microsoft.UI.Xaml.Media.ICompositeTransformMethods.get_ScaleY(_objRef_global__Microsoft_UI_Xaml_Media_ICompositeTransform);
            set => global::ABI.Microsoft.UI.Xaml.Media.ICompositeTransformMethods.set_ScaleY(_objRef_global__Microsoft_UI_Xaml_Media_ICompositeTransform, value);
        }

        public double SkewX
        {
            get => global::ABI.Microsoft.UI.Xaml.Media.ICompositeTransformMethods.get_SkewX(_objRef_global__Microsoft_UI_Xaml_Media_ICompositeTransform);
            set => global::ABI.Microsoft.UI.Xaml.Media.ICompositeTransformMethods.set_SkewX(_objRef_global__Microsoft_UI_Xaml_Media_ICompositeTransform, value);
        }

        public double SkewY
        {
            get => global::ABI.Microsoft.UI.Xaml.Media.ICompositeTransformMethods.get_SkewY(_objRef_global__Microsoft_UI_Xaml_Media_ICompositeTransform);
            set => global::ABI.Microsoft.UI.Xaml.Media.ICompositeTransformMethods.set_SkewY(_objRef_global__Microsoft_UI_Xaml_Media_ICompositeTransform, value);
        }

        public double TranslateX
        {
            get => global::ABI.Microsoft.UI.Xaml.Media.ICompositeTransformMethods.get_TranslateX(_objRef_global__Microsoft_UI_Xaml_Media_ICompositeTransform);
            set => global::ABI.Microsoft.UI.Xaml.Media.ICompositeTransformMethods.set_TranslateX(_objRef_global__Microsoft_UI_Xaml_Media_ICompositeTransform, value);
        }

        public double TranslateY
        {
            get => global::ABI.Microsoft.UI.Xaml.Media.ICompositeTransformMethods.get_TranslateY(_objRef_global__Microsoft_UI_Xaml_Media_ICompositeTransform);
            set => global::ABI.Microsoft.UI.Xaml.Media.ICompositeTransformMethods.set_TranslateY(_objRef_global__Microsoft_UI_Xaml_Media_ICompositeTransform, value);
        }

        protected override bool IsOverridableInterface(Guid iid) => base.IsOverridableInterface(iid);

        global::System.Runtime.InteropServices.CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(ref Guid iid, out IntPtr ppv)
        {
            ppv = IntPtr.Zero;
            if (IsOverridableInterface(iid) || global::WinRT.Interop.IID.IID_IInspectable == iid)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
            }

            if (((IWinRTObject)this).NativeObject.TryAs(iid, out ppv) >= 0)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.Handled;
            }

            return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
        }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")]
    [global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Media.CompositionTarget))]
    [global::ABI.Microsoft.UI.Xaml.Media.CompositionTargetRcwFactory]
    [global::WinRT.ProjectedRuntimeClass(typeof(ICompositionTarget))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    public sealed class CompositionTarget : global::System.Runtime.InteropServices.ICustomQueryInterface, IWinRTObject, IEquatable<CompositionTarget>
    {
        private IntPtr ThisPtr => _inner == null ? (((IWinRTObject)this).NativeObject).ThisPtr : _inner.ThisPtr;

        private readonly IObjectReference _inner = null;



        private IObjectReference _objRef_global__Microsoft_UI_Xaml_Media_ICompositionTarget => _inner;


        public static I As<I>() => ActivationFactory.Get("Microsoft.UI.Xaml.Media.CompositionTarget").AsInterface<I>();

        private static volatile IObjectReference ___objRef_global__Microsoft_UI_Xaml_Media_ICompositionTargetStatics;
        private static IObjectReference _objRef_global__Microsoft_UI_Xaml_Media_ICompositionTargetStatics
        {
            get
            { 
                var factory = ___objRef_global__Microsoft_UI_Xaml_Media_ICompositionTargetStatics;
                if (factory != null && factory.IsInCurrentContext)
                {
                    return factory;
                }
                else
                {
                    return ___objRef_global__Microsoft_UI_Xaml_Media_ICompositionTargetStatics = ActivationFactory.Get("Microsoft.UI.Xaml.Media.CompositionTarget", global::ABI.Microsoft.UI.Xaml.Media.ICompositionTargetStaticsMethods.IID);
                }
            }
        }

        public static global::Microsoft.UI.Composition.Compositor GetCompositorForCurrentThread() => global::ABI.Microsoft.UI.Xaml.Media.ICompositionTargetStaticsMethods.GetCompositorForCurrentThread(_objRef_global__Microsoft_UI_Xaml_Media_ICompositionTargetStatics);

        public static event global::System.EventHandler<RenderedEventArgs> Rendered
        {
            add => global::ABI.Microsoft.UI.Xaml.Media.ICompositionTargetStaticsMethods.Get_Rendered2(_objRef_global__Microsoft_UI_Xaml_Media_ICompositionTargetStatics, _objRef_global__Microsoft_UI_Xaml_Media_ICompositionTargetStatics).Subscribe(value);
            remove => global::ABI.Microsoft.UI.Xaml.Media.ICompositionTargetStaticsMethods.Get_Rendered2(_objRef_global__Microsoft_UI_Xaml_Media_ICompositionTargetStatics, _objRef_global__Microsoft_UI_Xaml_Media_ICompositionTargetStatics).Unsubscribe(value);
        }

        public static event global::System.EventHandler<object> Rendering
        {
            add => global::ABI.Microsoft.UI.Xaml.Media.ICompositionTargetStaticsMethods.Get_Rendering2(_objRef_global__Microsoft_UI_Xaml_Media_ICompositionTargetStatics, _objRef_global__Microsoft_UI_Xaml_Media_ICompositionTargetStatics).Subscribe(value);
            remove => global::ABI.Microsoft.UI.Xaml.Media.ICompositionTargetStaticsMethods.Get_Rendering2(_objRef_global__Microsoft_UI_Xaml_Media_ICompositionTargetStatics, _objRef_global__Microsoft_UI_Xaml_Media_ICompositionTargetStatics).Unsubscribe(value);
        }

        public static event global::System.EventHandler<object> SurfaceContentsLost
        {
            add => global::ABI.Microsoft.UI.Xaml.Media.ICompositionTargetStaticsMethods.Get_SurfaceContentsLost2(_objRef_global__Microsoft_UI_Xaml_Media_ICompositionTargetStatics, _objRef_global__Microsoft_UI_Xaml_Media_ICompositionTargetStatics).Subscribe(value);
            remove => global::ABI.Microsoft.UI.Xaml.Media.ICompositionTargetStaticsMethods.Get_SurfaceContentsLost2(_objRef_global__Microsoft_UI_Xaml_Media_ICompositionTargetStatics, _objRef_global__Microsoft_UI_Xaml_Media_ICompositionTargetStatics).Unsubscribe(value);
        }

        public static CompositionTarget FromAbi(IntPtr thisPtr)
        {
            if (thisPtr == IntPtr.Zero) return null;
            return MarshalInspectable<CompositionTarget>.FromAbi(thisPtr);
        }

        internal CompositionTarget(IObjectReference objRef)
        {
            _inner = objRef.As(global::ABI.Microsoft.UI.Xaml.Media.ICompositionTargetMethods.IID);

        }


        public static bool operator ==(CompositionTarget x, CompositionTarget y) => (x?.ThisPtr ?? IntPtr.Zero) == (y?.ThisPtr ?? IntPtr.Zero);
        public static bool operator !=(CompositionTarget x, CompositionTarget y) => !(x == y);
        public bool Equals(CompositionTarget other) => this == other;
        public override bool Equals(object obj) => obj is CompositionTarget that && this == that;
        public override int GetHashCode() => ThisPtr.GetHashCode();


        bool IWinRTObject.HasUnwrappableNativeObject => true;
        IObjectReference IWinRTObject.NativeObject => _inner;
        private volatile global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> _queryInterfaceCache;
        private global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> MakeQueryInterfaceCache()
        {
            global::System.Threading.Interlocked.CompareExchange(ref _queryInterfaceCache, new global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference>(), null); 
            return _queryInterfaceCache;
        }
        global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> IWinRTObject.QueryInterfaceCache => _queryInterfaceCache ?? MakeQueryInterfaceCache();
        private volatile global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> _additionalTypeData;
        private global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> MakeAdditionalTypeData()
        {
            global::System.Threading.Interlocked.CompareExchange(ref _additionalTypeData, new global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object>(), null); 
            return _additionalTypeData;
        }
        global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> IWinRTObject.AdditionalTypeData => _additionalTypeData ?? MakeAdditionalTypeData();

        private struct InterfaceTag<I>{};


        private bool IsOverridableInterface(Guid iid) => false;

        global::System.Runtime.InteropServices.CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(ref Guid iid, out IntPtr ppv)
        {
            ppv = IntPtr.Zero;
            if (IsOverridableInterface(iid) || global::WinRT.Interop.IID.IID_IInspectable == iid)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
            }

            if (((IWinRTObject)this).NativeObject.TryAs(iid, out ppv) >= 0)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.Handled;
            }

            return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
        }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")]
    [global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Media.DesktopAcrylicBackdrop))]
    [global::ABI.Microsoft.UI.Xaml.Media.DesktopAcrylicBackdropRcwFactory]
    [global::WinRT.ProjectedRuntimeClass(typeof(IDesktopAcrylicBackdrop))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.XamlContract), 262144u)]
    public class DesktopAcrylicBackdrop : SystemBackdrop, global::System.Runtime.InteropServices.ICustomQueryInterface, IWinRTObject, IEquatable<DesktopAcrylicBackdrop>
    {
        private IntPtr ThisPtr => _inner == null ? (((IWinRTObject)this).NativeObject).ThisPtr : _inner.ThisPtr;

        private readonly IObjectReference _inner = null;




        private volatile IObjectReference ___objRef_global__Microsoft_UI_Xaml_Media_IDesktopAcrylicBackdrop;
        private IObjectReference Make___objRef_global__Microsoft_UI_Xaml_Media_IDesktopAcrylicBackdrop()
        {
            global::System.Threading.Interlocked.CompareExchange(ref ___objRef_global__Microsoft_UI_Xaml_Media_IDesktopAcrylicBackdrop, ((IWinRTObject)this).NativeObject.As<IUnknownVftbl>(global::ABI.Microsoft.UI.Xaml.Media.IDesktopAcrylicBackdropMethods.IID), null);
            return ___objRef_global__Microsoft_UI_Xaml_Media_IDesktopAcrylicBackdrop;
        }
        private IObjectReference _objRef_global__Microsoft_UI_Xaml_Media_IDesktopAcrylicBackdrop => ___objRef_global__Microsoft_UI_Xaml_Media_IDesktopAcrylicBackdrop ?? Make___objRef_global__Microsoft_UI_Xaml_Media_IDesktopAcrylicBackdrop();



        private static class _IDesktopAcrylicBackdropFactoryMethods
        {
            public static unsafe IntPtr CreateInstance(IObjectReference _obj, object baseInterface, out IntPtr innerInterface)
            {
                var ThisPtr = _obj.ThisPtr;

                ObjectReferenceValue __baseInterface = default;
                IntPtr __innerInterface = default;
                IntPtr __retval = default;
                try
                {
                    __baseInterface = MarshalInspectable<object>.CreateMarshaler2(baseInterface);
                    global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, IntPtr*, IntPtr*, int>**)ThisPtr)[6](ThisPtr, MarshalInspectable<object>.GetAbi(__baseInterface), &__innerInterface, &__retval));
                    global::System.GC.KeepAlive(_obj);
                    innerInterface = __innerInterface;
                    return __retval;
                }
                finally
                {
                    MarshalInspectable<object>.DisposeMarshaler(__baseInterface);
                }
            }
        }

        private static volatile IObjectReference ___objRef_global__Microsoft_UI_Xaml_Media_IDesktopAcrylicBackdropFactory;
        private static IObjectReference _objRef_global__Microsoft_UI_Xaml_Media_IDesktopAcrylicBackdropFactory
        {
            get
            { 
                var factory = ___objRef_global__Microsoft_UI_Xaml_Media_IDesktopAcrylicBackdropFactory;
                if (factory != null && factory.IsInCurrentContext)
                {
                    return factory;
                }
                else
                {
                    return ___objRef_global__Microsoft_UI_Xaml_Media_IDesktopAcrylicBackdropFactory = ActivationFactory.Get("Microsoft.UI.Xaml.Media.DesktopAcrylicBackdrop", global::ABI.Microsoft.UI.Xaml.Media.IDesktopAcrylicBackdropFactoryMethods.IID);
                }
            }
        }

        public DesktopAcrylicBackdrop():base(global::WinRT.DerivedComposed.Instance)
        {
            bool isAggregation = this.GetType() != typeof(DesktopAcrylicBackdrop);
            object baseInspectable = isAggregation ? this : null;
            IntPtr composed = _IDesktopAcrylicBackdropFactoryMethods.CreateInstance(_objRef_global__Microsoft_UI_Xaml_Media_IDesktopAcrylicBackdropFactory,  baseInspectable, out IntPtr inner);
            try
            {
                ComWrappersHelper.Init(isAggregation, this, composed, inner, global::ABI.Microsoft.UI.Xaml.Media.IDesktopAcrylicBackdropMethods.IID, out _inner);

            }
            finally
            {
                Marshal.Release(inner);   
            }
        }

        public static new DesktopAcrylicBackdrop FromAbi(IntPtr thisPtr)
        {
            if (thisPtr == IntPtr.Zero) return null;
            return MarshalInspectable<DesktopAcrylicBackdrop>.FromAbi(thisPtr);
        }

        protected internal DesktopAcrylicBackdrop(IObjectReference objRef)
            : base(global::WinRT.DerivedComposed.Instance)

        {
            _inner = objRef.As(global::ABI.Microsoft.UI.Xaml.Media.IDesktopAcrylicBackdropMethods.IID);

        }


        public static bool operator ==(DesktopAcrylicBackdrop x, DesktopAcrylicBackdrop y) => (x?.ThisPtr ?? IntPtr.Zero) == (y?.ThisPtr ?? IntPtr.Zero);
        public static bool operator !=(DesktopAcrylicBackdrop x, DesktopAcrylicBackdrop y) => !(x == y);
        public bool Equals(DesktopAcrylicBackdrop other) => this == other;
        public override bool Equals(object obj) => obj is DesktopAcrylicBackdrop that && this == that;
        public override int GetHashCode() => ThisPtr.GetHashCode();


        protected DesktopAcrylicBackdrop(global::WinRT.DerivedComposed _):base(_)
        {

        }
        bool IWinRTObject.HasUnwrappableNativeObject => this.GetType() == typeof(DesktopAcrylicBackdrop);
        IObjectReference IWinRTObject.NativeObject => _inner;

        private struct InterfaceTag<I>{};


        protected override bool IsOverridableInterface(Guid iid) => base.IsOverridableInterface(iid);

        global::System.Runtime.InteropServices.CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(ref Guid iid, out IntPtr ppv)
        {
            ppv = IntPtr.Zero;
            if (IsOverridableInterface(iid) || global::WinRT.Interop.IID.IID_IInspectable == iid)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
            }

            if (((IWinRTObject)this).NativeObject.TryAs(iid, out ppv) >= 0)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.Handled;
            }

            return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
        }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")]
    [global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Media.DoubleCollection))]
    [global::ABI.Microsoft.UI.Xaml.Media.DoubleCollectionRcwFactory]
    [global::WinRT.ProjectedRuntimeClass(typeof(global::System.Collections.Generic.IList<double>))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    public sealed class DoubleCollection : global::System.Collections.Generic.IList<double>, global::System.Collections.Generic.IEnumerable<double>, global::System.Runtime.InteropServices.ICustomQueryInterface, IWinRTObject, IEquatable<DoubleCollection>
    {
        private IntPtr ThisPtr => _inner == null ? (((IWinRTObject)this).NativeObject).ThisPtr : _inner.ThisPtr;

        private readonly IObjectReference _inner = null;




        private volatile IObjectReference ___objRef_global__System_Collections_Generic_IList_double_;
        private IObjectReference Make___objRef_global__System_Collections_Generic_IList_double_()
        {
            _ = global::WinRT.GenericTypeInstantiations.Windows_Foundation_Collections_IVector_1_Double.EnsureInitialized();
            global::System.Threading.Interlocked.CompareExchange(ref ___objRef_global__System_Collections_Generic_IList_double_, ((IWinRTObject)this).NativeObject.As<IUnknownVftbl>(global::ABI.System.Collections.Generic.IListMethods<double>.IID), null);
            return ___objRef_global__System_Collections_Generic_IList_double_;
        }
        private IObjectReference _objRef_global__System_Collections_Generic_IList_double_ => ___objRef_global__System_Collections_Generic_IList_double_ ?? Make___objRef_global__System_Collections_Generic_IList_double_();

        private volatile IObjectReference ___objRef_global__System_Collections_Generic_IEnumerable_double_;
        private IObjectReference Make___objRef_global__System_Collections_Generic_IEnumerable_double_()
        {
            _ = global::WinRT.GenericTypeInstantiations.Windows_Foundation_Collections_IIterable_1_Double.EnsureInitialized();
            global::System.Threading.Interlocked.CompareExchange(ref ___objRef_global__System_Collections_Generic_IEnumerable_double_, ((IWinRTObject)this).NativeObject.As<IUnknownVftbl>(global::ABI.System.Collections.Generic.IEnumerableMethods<double>.IID), null);
            return ___objRef_global__System_Collections_Generic_IEnumerable_double_;
        }
        private IObjectReference _objRef_global__System_Collections_Generic_IEnumerable_double_ => ___objRef_global__System_Collections_Generic_IEnumerable_double_ ?? Make___objRef_global__System_Collections_Generic_IEnumerable_double_();



        private static volatile IObjectReference ___objRef_global__Microsoft_UI_Xaml_Media_DoubleCollection;
        private static IObjectReference _objRef_global__Microsoft_UI_Xaml_Media_DoubleCollection
        {
            get
            { 
                var factory = ___objRef_global__Microsoft_UI_Xaml_Media_DoubleCollection;
                if (factory != null && factory.IsInCurrentContext)
                {
                    return factory;
                }
                else
                {
                    return ___objRef_global__Microsoft_UI_Xaml_Media_DoubleCollection = ActivationFactory.Get("Microsoft.UI.Xaml.Media.DoubleCollection");
                }
            }
        }

        public DoubleCollection() 
        {
            _inner = global::ABI.WinRT.Interop.IActivationFactoryMethods.ActivateInstanceUnsafe(_objRef_global__Microsoft_UI_Xaml_Media_DoubleCollection, global::ABI.System.Collections.Generic.IListMethods<double>.IID);
            ComWrappersSupport.RegisterObjectForInterface(this, ThisPtr);
            ComWrappersHelper.Init(_inner, false);

        }

        public static DoubleCollection FromAbi(IntPtr thisPtr)
        {
            if (thisPtr == IntPtr.Zero) return null;
            return MarshalInspectable<DoubleCollection>.FromAbi(thisPtr);
        }

        internal DoubleCollection(IObjectReference objRef)
        {
            _inner = objRef.As(global::ABI.System.Collections.Generic.IListMethods<double>.IID);

        }


        public static bool operator ==(DoubleCollection x, DoubleCollection y) => (x?.ThisPtr ?? IntPtr.Zero) == (y?.ThisPtr ?? IntPtr.Zero);
        public static bool operator !=(DoubleCollection x, DoubleCollection y) => !(x == y);
        public bool Equals(DoubleCollection other) => this == other;
        public override bool Equals(object obj) => obj is DoubleCollection that && this == that;
        public override int GetHashCode() => ThisPtr.GetHashCode();


        bool IWinRTObject.HasUnwrappableNativeObject => true;
        IObjectReference IWinRTObject.NativeObject => _inner;
        private volatile global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> _queryInterfaceCache;
        private global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> MakeQueryInterfaceCache()
        {
            global::System.Threading.Interlocked.CompareExchange(ref _queryInterfaceCache, new global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference>(), null); 
            return _queryInterfaceCache;
        }
        global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> IWinRTObject.QueryInterfaceCache => _queryInterfaceCache ?? MakeQueryInterfaceCache();
        private volatile global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> _additionalTypeData;
        private global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> MakeAdditionalTypeData()
        {
            global::System.Threading.Interlocked.CompareExchange(ref _additionalTypeData, new global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object>(), null); 
            return _additionalTypeData;
        }
        global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> IWinRTObject.AdditionalTypeData => _additionalTypeData ?? MakeAdditionalTypeData();

        private struct InterfaceTag<I>{};


        public int Count => global::ABI.System.Collections.Generic.IListMethods<double>.get_Count(_objRef_global__System_Collections_Generic_IList_double_);
        public bool IsReadOnly => global::ABI.System.Collections.Generic.IListMethods<double>.get_IsReadOnly(_objRef_global__System_Collections_Generic_IList_double_);
        [global::System.Runtime.CompilerServices.IndexerName("ListItem")]
        public double this[int index] 
        {
            get => global::ABI.System.Collections.Generic.IListMethods<double>.Indexer_Get(_objRef_global__System_Collections_Generic_IList_double_, index);
            set => global::ABI.System.Collections.Generic.IListMethods<double>.Indexer_Set(_objRef_global__System_Collections_Generic_IList_double_, index, value);
        }
        public int IndexOf(double item) => global::ABI.System.Collections.Generic.IListMethods<double>.IndexOf(_objRef_global__System_Collections_Generic_IList_double_, item);
        public void Insert(int index, double item) => global::ABI.System.Collections.Generic.IListMethods<double>.Insert(_objRef_global__System_Collections_Generic_IList_double_, index, item);
        public void RemoveAt(int index) => global::ABI.System.Collections.Generic.IListMethods<double>.RemoveAt(_objRef_global__System_Collections_Generic_IList_double_, index);
        public void Add(double item) => global::ABI.System.Collections.Generic.IListMethods<double>.Add(_objRef_global__System_Collections_Generic_IList_double_, item);
        public void Clear() => global::ABI.System.Collections.Generic.IListMethods<double>.Clear(_objRef_global__System_Collections_Generic_IList_double_);
        public bool Contains(double item) => global::ABI.System.Collections.Generic.IListMethods<double>.Contains(_objRef_global__System_Collections_Generic_IList_double_, item);
        public void CopyTo(double[] array, int arrayIndex) => global::ABI.System.Collections.Generic.IListMethods<double>.CopyTo(_objRef_global__System_Collections_Generic_IList_double_, array, arrayIndex);
        public bool Remove(double item) => global::ABI.System.Collections.Generic.IListMethods<double>.Remove(_objRef_global__System_Collections_Generic_IList_double_, item);

        public IEnumerator<double> GetEnumerator() => global::ABI.System.Collections.Generic.IEnumerableMethods<double>.GetEnumerator(_objRef_global__System_Collections_Generic_IEnumerable_double_);

        IEnumerator IEnumerable.GetEnumerator() => GetEnumerator();

        private bool IsOverridableInterface(Guid iid) => false;

        global::System.Runtime.InteropServices.CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(ref Guid iid, out IntPtr ppv)
        {
            ppv = IntPtr.Zero;
            if (IsOverridableInterface(iid) || global::WinRT.Interop.IID.IID_IInspectable == iid)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
            }

            if (((IWinRTObject)this).NativeObject.TryAs(iid, out ppv) >= 0)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.Handled;
            }

            return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
        }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")][global::WinRT.WinRTExposedType(typeof(global::WinRT.EnumTypeDetails<ElementCompositeMode>))][global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    public enum ElementCompositeMode : int
    {
        Inherit = unchecked((int)0),
        SourceOver = unchecked((int)0x1),
        MinBlend = unchecked((int)0x2),
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")]
    [global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Media.EllipseGeometry))]
    [global::ABI.Microsoft.UI.Xaml.Media.EllipseGeometryRcwFactory]
    [global::WinRT.ProjectedRuntimeClass(typeof(IEllipseGeometry))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    public sealed class EllipseGeometry : Geometry, global::System.Runtime.InteropServices.ICustomQueryInterface, IWinRTObject, IEquatable<EllipseGeometry>
    {
        private IntPtr ThisPtr => _inner == null ? (((IWinRTObject)this).NativeObject).ThisPtr : _inner.ThisPtr;

        private readonly IObjectReference _inner = null;



        private IObjectReference _objRef_global__Microsoft_UI_Xaml_Media_IEllipseGeometry => _inner;


        private static volatile IObjectReference ___objRef_global__Microsoft_UI_Xaml_Media_EllipseGeometry;
        private static IObjectReference _objRef_global__Microsoft_UI_Xaml_Media_EllipseGeometry
        {
            get
            { 
                var factory = ___objRef_global__Microsoft_UI_Xaml_Media_EllipseGeometry;
                if (factory != null && factory.IsInCurrentContext)
                {
                    return factory;
                }
                else
                {
                    return ___objRef_global__Microsoft_UI_Xaml_Media_EllipseGeometry = ActivationFactory.Get("Microsoft.UI.Xaml.Media.EllipseGeometry");
                }
            }
        }

        public EllipseGeometry() :base(global::WinRT.DerivedComposed.Instance)
        {
            _inner = global::ABI.WinRT.Interop.IActivationFactoryMethods.ActivateInstanceUnsafe(_objRef_global__Microsoft_UI_Xaml_Media_EllipseGeometry, global::ABI.Microsoft.UI.Xaml.Media.IEllipseGeometryMethods.IID);
            ComWrappersSupport.RegisterObjectForInterface(this, ThisPtr);
            ComWrappersHelper.Init(_inner, false);

        }

        public static new I As<I>() => ActivationFactory.Get("Microsoft.UI.Xaml.Media.EllipseGeometry").AsInterface<I>();

        private static volatile IObjectReference ___objRef_global__Microsoft_UI_Xaml_Media_IEllipseGeometryStatics;
        private static IObjectReference _objRef_global__Microsoft_UI_Xaml_Media_IEllipseGeometryStatics
        {
            get
            { 
                var factory = ___objRef_global__Microsoft_UI_Xaml_Media_IEllipseGeometryStatics;
                if (factory != null && factory.IsInCurrentContext)
                {
                    return factory;
                }
                else
                {
                    return ___objRef_global__Microsoft_UI_Xaml_Media_IEllipseGeometryStatics = ActivationFactory.Get("Microsoft.UI.Xaml.Media.EllipseGeometry", global::ABI.Microsoft.UI.Xaml.Media.IEllipseGeometryStaticsMethods.IID);
                }
            }
        }

        public static global::Microsoft.UI.Xaml.DependencyProperty CenterProperty => global::ABI.Microsoft.UI.Xaml.Media.IEllipseGeometryStaticsMethods.get_CenterProperty(_objRef_global__Microsoft_UI_Xaml_Media_IEllipseGeometryStatics);

        public static global::Microsoft.UI.Xaml.DependencyProperty RadiusXProperty => global::ABI.Microsoft.UI.Xaml.Media.IEllipseGeometryStaticsMethods.get_RadiusXProperty(_objRef_global__Microsoft_UI_Xaml_Media_IEllipseGeometryStatics);

        public static global::Microsoft.UI.Xaml.DependencyProperty RadiusYProperty => global::ABI.Microsoft.UI.Xaml.Media.IEllipseGeometryStaticsMethods.get_RadiusYProperty(_objRef_global__Microsoft_UI_Xaml_Media_IEllipseGeometryStatics);

        public static new EllipseGeometry FromAbi(IntPtr thisPtr)
        {
            if (thisPtr == IntPtr.Zero) return null;
            return MarshalInspectable<EllipseGeometry>.FromAbi(thisPtr);
        }

        internal EllipseGeometry(IObjectReference objRef)
            : base(global::WinRT.DerivedComposed.Instance)

        {
            _inner = objRef.As(global::ABI.Microsoft.UI.Xaml.Media.IEllipseGeometryMethods.IID);

        }


        public static bool operator ==(EllipseGeometry x, EllipseGeometry y) => (x?.ThisPtr ?? IntPtr.Zero) == (y?.ThisPtr ?? IntPtr.Zero);
        public static bool operator !=(EllipseGeometry x, EllipseGeometry y) => !(x == y);
        public bool Equals(EllipseGeometry other) => this == other;
        public override bool Equals(object obj) => obj is EllipseGeometry that && this == that;
        public override int GetHashCode() => ThisPtr.GetHashCode();


        bool IWinRTObject.HasUnwrappableNativeObject => true;
        IObjectReference IWinRTObject.NativeObject => _inner;

        private struct InterfaceTag<I>{};


        public global::Windows.Foundation.Point Center
        {
            get => global::ABI.Microsoft.UI.Xaml.Media.IEllipseGeometryMethods.get_Center(_objRef_global__Microsoft_UI_Xaml_Media_IEllipseGeometry);
            set => global::ABI.Microsoft.UI.Xaml.Media.IEllipseGeometryMethods.set_Center(_objRef_global__Microsoft_UI_Xaml_Media_IEllipseGeometry, value);
        }

        public double RadiusX
        {
            get => global::ABI.Microsoft.UI.Xaml.Media.IEllipseGeometryMethods.get_RadiusX(_objRef_global__Microsoft_UI_Xaml_Media_IEllipseGeometry);
            set => global::ABI.Microsoft.UI.Xaml.Media.IEllipseGeometryMethods.set_RadiusX(_objRef_global__Microsoft_UI_Xaml_Media_IEllipseGeometry, value);
        }

        public double RadiusY
        {
            get => global::ABI.Microsoft.UI.Xaml.Media.IEllipseGeometryMethods.get_RadiusY(_objRef_global__Microsoft_UI_Xaml_Media_IEllipseGeometry);
            set => global::ABI.Microsoft.UI.Xaml.Media.IEllipseGeometryMethods.set_RadiusY(_objRef_global__Microsoft_UI_Xaml_Media_IEllipseGeometry, value);
        }

        protected override bool IsOverridableInterface(Guid iid) => base.IsOverridableInterface(iid);

        global::System.Runtime.InteropServices.CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(ref Guid iid, out IntPtr ppv)
        {
            ppv = IntPtr.Zero;
            if (IsOverridableInterface(iid) || global::WinRT.Interop.IID.IID_IInspectable == iid)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
            }

            if (((IWinRTObject)this).NativeObject.TryAs(iid, out ppv) >= 0)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.Handled;
            }

            return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
        }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")][global::WinRT.WinRTExposedType(typeof(global::WinRT.EnumTypeDetails<FastPlayFallbackBehaviour>))][global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 196608u)]
    public enum FastPlayFallbackBehaviour : int
    {
        Skip = unchecked((int)0),
        Hide = unchecked((int)0x1),
        Disable = unchecked((int)0x2),
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")][global::WinRT.WinRTExposedType(typeof(global::WinRT.EnumTypeDetails<FillRule>))][global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    public enum FillRule : int
    {
        EvenOdd = unchecked((int)0),
        Nonzero = unchecked((int)0x1),
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")]
    [global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Media.FontFamily))]
    [global::ABI.Microsoft.UI.Xaml.Media.FontFamilyRcwFactory]
    [global::WinRT.ProjectedRuntimeClass(typeof(IFontFamily))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    public class FontFamily : global::System.Runtime.InteropServices.ICustomQueryInterface, IWinRTObject, IEquatable<FontFamily>
    {
        private IntPtr ThisPtr => _inner == null ? (((IWinRTObject)this).NativeObject).ThisPtr : _inner.ThisPtr;

        private readonly IObjectReference _inner = null;




        private volatile IObjectReference ___objRef_global__Microsoft_UI_Xaml_Media_IFontFamily;
        private IObjectReference Make___objRef_global__Microsoft_UI_Xaml_Media_IFontFamily()
        {
            global::System.Threading.Interlocked.CompareExchange(ref ___objRef_global__Microsoft_UI_Xaml_Media_IFontFamily, ((IWinRTObject)this).NativeObject.As<IUnknownVftbl>(global::ABI.Microsoft.UI.Xaml.Media.IFontFamilyMethods.IID), null);
            return ___objRef_global__Microsoft_UI_Xaml_Media_IFontFamily;
        }
        private IObjectReference _objRef_global__Microsoft_UI_Xaml_Media_IFontFamily => ___objRef_global__Microsoft_UI_Xaml_Media_IFontFamily ?? Make___objRef_global__Microsoft_UI_Xaml_Media_IFontFamily();



        private static class _IFontFamilyFactoryMethods
        {
            public static unsafe IntPtr CreateInstanceWithName(IObjectReference _obj, string familyName, object baseInterface, out IntPtr innerInterface)
            {
                var ThisPtr = _obj.ThisPtr;

                ObjectReferenceValue __baseInterface = default;
                IntPtr __innerInterface = default;
                IntPtr __retval = default;
                try
                {
                    __baseInterface = MarshalInspectable<object>.CreateMarshaler2(baseInterface);
                    MarshalString.Pinnable __familyName = new(familyName);
                    fixed(void* ___familyName = __familyName)
                    {
                        global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, IntPtr, IntPtr*, IntPtr*, int>**)ThisPtr)[6](ThisPtr, MarshalString.GetAbi(ref __familyName), MarshalInspectable<object>.GetAbi(__baseInterface), &__innerInterface, &__retval));
                        global::System.GC.KeepAlive(_obj);
                        innerInterface = __innerInterface;
                        return __retval;
                    }
                }
                finally
                {
                    MarshalInspectable<object>.DisposeMarshaler(__baseInterface);
                }
            }
        }

        private static volatile IObjectReference ___objRef_global__Microsoft_UI_Xaml_Media_IFontFamilyFactory;
        private static IObjectReference _objRef_global__Microsoft_UI_Xaml_Media_IFontFamilyFactory
        {
            get
            { 
                var factory = ___objRef_global__Microsoft_UI_Xaml_Media_IFontFamilyFactory;
                if (factory != null && factory.IsInCurrentContext)
                {
                    return factory;
                }
                else
                {
                    return ___objRef_global__Microsoft_UI_Xaml_Media_IFontFamilyFactory = ActivationFactory.Get("Microsoft.UI.Xaml.Media.FontFamily", global::ABI.Microsoft.UI.Xaml.Media.IFontFamilyFactoryMethods.IID);
                }
            }
        }

        public FontFamily(string familyName)
        {
            bool isAggregation = this.GetType() != typeof(FontFamily);
            object baseInspectable = isAggregation ? this : null;
            IntPtr composed = _IFontFamilyFactoryMethods.CreateInstanceWithName(_objRef_global__Microsoft_UI_Xaml_Media_IFontFamilyFactory, familyName, baseInspectable, out IntPtr inner);
            try
            {
                ComWrappersHelper.Init(isAggregation, this, composed, inner, global::ABI.Microsoft.UI.Xaml.Media.IFontFamilyMethods.IID, out _inner);

            }
            finally
            {
                Marshal.Release(inner);   
            }
        }

        public static I As<I>() => ActivationFactory.Get("Microsoft.UI.Xaml.Media.FontFamily").AsInterface<I>();

        private static volatile IObjectReference ___objRef_global__Microsoft_UI_Xaml_Media_IFontFamilyStatics;
        private static IObjectReference _objRef_global__Microsoft_UI_Xaml_Media_IFontFamilyStatics
        {
            get
            { 
                var factory = ___objRef_global__Microsoft_UI_Xaml_Media_IFontFamilyStatics;
                if (factory != null && factory.IsInCurrentContext)
                {
                    return factory;
                }
                else
                {
                    return ___objRef_global__Microsoft_UI_Xaml_Media_IFontFamilyStatics = ActivationFactory.Get("Microsoft.UI.Xaml.Media.FontFamily", global::ABI.Microsoft.UI.Xaml.Media.IFontFamilyStaticsMethods.IID);
                }
            }
        }

        public static FontFamily XamlAutoFontFamily => global::ABI.Microsoft.UI.Xaml.Media.IFontFamilyStaticsMethods.get_XamlAutoFontFamily(_objRef_global__Microsoft_UI_Xaml_Media_IFontFamilyStatics);

        public static FontFamily FromAbi(IntPtr thisPtr)
        {
            if (thisPtr == IntPtr.Zero) return null;
            return MarshalInspectable<FontFamily>.FromAbi(thisPtr);
        }

        protected internal FontFamily(IObjectReference objRef)
        {
            _inner = objRef.As(global::ABI.Microsoft.UI.Xaml.Media.IFontFamilyMethods.IID);

        }


        public static bool operator ==(FontFamily x, FontFamily y) => (x?.ThisPtr ?? IntPtr.Zero) == (y?.ThisPtr ?? IntPtr.Zero);
        public static bool operator !=(FontFamily x, FontFamily y) => !(x == y);
        public bool Equals(FontFamily other) => this == other;
        public override bool Equals(object obj) => obj is FontFamily that && this == that;
        public override int GetHashCode() => ThisPtr.GetHashCode();


        protected FontFamily(global::WinRT.DerivedComposed _)
        {

        }
        bool IWinRTObject.HasUnwrappableNativeObject => this.GetType() == typeof(FontFamily);
        IObjectReference IWinRTObject.NativeObject => _inner;
        private volatile global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> _queryInterfaceCache;
        private global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> MakeQueryInterfaceCache()
        {
            global::System.Threading.Interlocked.CompareExchange(ref _queryInterfaceCache, new global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference>(), null); 
            return _queryInterfaceCache;
        }
        global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> IWinRTObject.QueryInterfaceCache => _queryInterfaceCache ?? MakeQueryInterfaceCache();
        private volatile global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> _additionalTypeData;
        private global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> MakeAdditionalTypeData()
        {
            global::System.Threading.Interlocked.CompareExchange(ref _additionalTypeData, new global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object>(), null); 
            return _additionalTypeData;
        }
        global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> IWinRTObject.AdditionalTypeData => _additionalTypeData ?? MakeAdditionalTypeData();

        private struct InterfaceTag<I>{};


        public string Source => global::ABI.Microsoft.UI.Xaml.Media.IFontFamilyMethods.get_Source(_objRef_global__Microsoft_UI_Xaml_Media_IFontFamily);

        protected virtual bool IsOverridableInterface(Guid iid) => false;

        global::System.Runtime.InteropServices.CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(ref Guid iid, out IntPtr ppv)
        {
            ppv = IntPtr.Zero;
            if (IsOverridableInterface(iid) || global::WinRT.Interop.IID.IID_IInspectable == iid)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
            }

            if (((IWinRTObject)this).NativeObject.TryAs(iid, out ppv) >= 0)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.Handled;
            }

            return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
        }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")]
    [global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Media.GeneralTransform))]
    [global::ABI.Microsoft.UI.Xaml.Media.GeneralTransformRcwFactory]
    [global::WinRT.ProjectedRuntimeClass(typeof(IGeneralTransform))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    public class GeneralTransform : global::Microsoft.UI.Xaml.DependencyObject, IGeneralTransformOverrides, global::System.Runtime.InteropServices.ICustomQueryInterface, IWinRTObject, IEquatable<GeneralTransform>
    {
        private IntPtr ThisPtr => _inner == null ? (((IWinRTObject)this).NativeObject).ThisPtr : _inner.ThisPtr;

        private readonly IObjectReference _inner = null;




        private volatile IObjectReference ___objRef_global__Microsoft_UI_Xaml_Media_IGeneralTransform;
        private IObjectReference Make___objRef_global__Microsoft_UI_Xaml_Media_IGeneralTransform()
        {
            global::System.Threading.Interlocked.CompareExchange(ref ___objRef_global__Microsoft_UI_Xaml_Media_IGeneralTransform, ((IWinRTObject)this).NativeObject.As<IUnknownVftbl>(global::ABI.Microsoft.UI.Xaml.Media.IGeneralTransformMethods.IID), null);
            return ___objRef_global__Microsoft_UI_Xaml_Media_IGeneralTransform;
        }
        private IObjectReference _objRef_global__Microsoft_UI_Xaml_Media_IGeneralTransform => ___objRef_global__Microsoft_UI_Xaml_Media_IGeneralTransform ?? Make___objRef_global__Microsoft_UI_Xaml_Media_IGeneralTransform();

        private volatile IObjectReference ___objRef_global__Microsoft_UI_Xaml_Media_IGeneralTransformOverrides;
        private IObjectReference Make___objRef_global__Microsoft_UI_Xaml_Media_IGeneralTransformOverrides()
        {
            global::System.Threading.Interlocked.CompareExchange(ref ___objRef_global__Microsoft_UI_Xaml_Media_IGeneralTransformOverrides, ((IWinRTObject)this).NativeObject.As<IUnknownVftbl>(global::ABI.Microsoft.UI.Xaml.Media.IGeneralTransformOverridesMethods.IID), null);
            return ___objRef_global__Microsoft_UI_Xaml_Media_IGeneralTransformOverrides;
        }
        private IObjectReference _objRef_global__Microsoft_UI_Xaml_Media_IGeneralTransformOverrides => ___objRef_global__Microsoft_UI_Xaml_Media_IGeneralTransformOverrides ?? Make___objRef_global__Microsoft_UI_Xaml_Media_IGeneralTransformOverrides();



        private static class _IGeneralTransformFactoryMethods
        {
            public static unsafe IntPtr CreateInstance(IObjectReference _obj, object baseInterface, out IntPtr innerInterface)
            {
                var ThisPtr = _obj.ThisPtr;

                ObjectReferenceValue __baseInterface = default;
                IntPtr __innerInterface = default;
                IntPtr __retval = default;
                try
                {
                    __baseInterface = MarshalInspectable<object>.CreateMarshaler2(baseInterface);
                    global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, IntPtr*, IntPtr*, int>**)ThisPtr)[6](ThisPtr, MarshalInspectable<object>.GetAbi(__baseInterface), &__innerInterface, &__retval));
                    global::System.GC.KeepAlive(_obj);
                    innerInterface = __innerInterface;
                    return __retval;
                }
                finally
                {
                    MarshalInspectable<object>.DisposeMarshaler(__baseInterface);
                }
            }
        }

        private static volatile IObjectReference ___objRef_global__Microsoft_UI_Xaml_Media_IGeneralTransformFactory;
        private static IObjectReference _objRef_global__Microsoft_UI_Xaml_Media_IGeneralTransformFactory
        {
            get
            { 
                var factory = ___objRef_global__Microsoft_UI_Xaml_Media_IGeneralTransformFactory;
                if (factory != null && factory.IsInCurrentContext)
                {
                    return factory;
                }
                else
                {
                    return ___objRef_global__Microsoft_UI_Xaml_Media_IGeneralTransformFactory = ActivationFactory.Get("Microsoft.UI.Xaml.Media.GeneralTransform", global::ABI.Microsoft.UI.Xaml.Media.IGeneralTransformFactoryMethods.IID);
                }
            }
        }

        protected GeneralTransform():base(global::WinRT.DerivedComposed.Instance)
        {
            bool isAggregation = this.GetType() != typeof(GeneralTransform);
            object baseInspectable = isAggregation ? this : null;
            IntPtr composed = _IGeneralTransformFactoryMethods.CreateInstance(_objRef_global__Microsoft_UI_Xaml_Media_IGeneralTransformFactory,  baseInspectable, out IntPtr inner);
            try
            {
                ComWrappersHelper.Init(isAggregation, this, composed, inner, global::ABI.Microsoft.UI.Xaml.Media.IGeneralTransformMethods.IID, out _inner);

            }
            finally
            {
                Marshal.Release(inner);   
            }
        }

        public static new GeneralTransform FromAbi(IntPtr thisPtr)
        {
            if (thisPtr == IntPtr.Zero) return null;
            return MarshalInspectable<GeneralTransform>.FromAbi(thisPtr);
        }

        protected internal GeneralTransform(IObjectReference objRef)
            : base(global::WinRT.DerivedComposed.Instance)

        {
            _inner = objRef.As(global::ABI.Microsoft.UI.Xaml.Media.IGeneralTransformMethods.IID);

        }


        public static bool operator ==(GeneralTransform x, GeneralTransform y) => (x?.ThisPtr ?? IntPtr.Zero) == (y?.ThisPtr ?? IntPtr.Zero);
        public static bool operator !=(GeneralTransform x, GeneralTransform y) => !(x == y);
        public bool Equals(GeneralTransform other) => this == other;
        public override bool Equals(object obj) => obj is GeneralTransform that && this == that;
        public override int GetHashCode() => ThisPtr.GetHashCode();


        protected GeneralTransform(global::WinRT.DerivedComposed _):base(_)
        {

        }
        bool IWinRTObject.HasUnwrappableNativeObject => this.GetType() == typeof(GeneralTransform);
        IObjectReference IWinRTObject.NativeObject => _inner;

        private struct InterfaceTag<I>{};


        public global::Windows.Foundation.Point TransformPoint(global::Windows.Foundation.Point point) => global::ABI.Microsoft.UI.Xaml.Media.IGeneralTransformMethods.TransformPoint(_objRef_global__Microsoft_UI_Xaml_Media_IGeneralTransform, point);

        public bool TryTransform(global::Windows.Foundation.Point inPoint, out global::Windows.Foundation.Point outPoint) => global::ABI.Microsoft.UI.Xaml.Media.IGeneralTransformMethods.TryTransform(_objRef_global__Microsoft_UI_Xaml_Media_IGeneralTransform, inPoint, out outPoint);

        public global::Windows.Foundation.Rect TransformBounds(global::Windows.Foundation.Rect rect) => global::ABI.Microsoft.UI.Xaml.Media.IGeneralTransformMethods.TransformBounds(_objRef_global__Microsoft_UI_Xaml_Media_IGeneralTransform, rect);

        protected virtual bool TryTransformCore(global::Windows.Foundation.Point inPoint, out global::Windows.Foundation.Point outPoint) => global::ABI.Microsoft.UI.Xaml.Media.IGeneralTransformOverridesMethods.TryTransformCore(_objRef_global__Microsoft_UI_Xaml_Media_IGeneralTransformOverrides, inPoint, out outPoint);

        bool IGeneralTransformOverrides.TryTransformCore(global::Windows.Foundation.Point inPoint, out global::Windows.Foundation.Point outPoint) => TryTransformCore(inPoint, out outPoint);
        protected virtual global::Windows.Foundation.Rect TransformBoundsCore(global::Windows.Foundation.Rect rect) => global::ABI.Microsoft.UI.Xaml.Media.IGeneralTransformOverridesMethods.TransformBoundsCore(_objRef_global__Microsoft_UI_Xaml_Media_IGeneralTransformOverrides, rect);

        global::Windows.Foundation.Rect IGeneralTransformOverrides.TransformBoundsCore(global::Windows.Foundation.Rect rect) => TransformBoundsCore(rect);
        GeneralTransform IGeneralTransformOverrides.InverseCore {get => global::ABI.Microsoft.UI.Xaml.Media.IGeneralTransformOverridesMethods.get_InverseCore(_objRef_global__Microsoft_UI_Xaml_Media_IGeneralTransformOverrides); }
        public GeneralTransform Inverse => global::ABI.Microsoft.UI.Xaml.Media.IGeneralTransformMethods.get_Inverse(_objRef_global__Microsoft_UI_Xaml_Media_IGeneralTransform);

        protected virtual GeneralTransform InverseCore => global::ABI.Microsoft.UI.Xaml.Media.IGeneralTransformOverridesMethods.get_InverseCore(_objRef_global__Microsoft_UI_Xaml_Media_IGeneralTransformOverrides);

        protected override bool IsOverridableInterface(Guid iid) => global::ABI.Microsoft.UI.Xaml.Media.IGeneralTransformOverridesMethods.IID == iid || base.IsOverridableInterface(iid);

        global::System.Runtime.InteropServices.CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(ref Guid iid, out IntPtr ppv)
        {
            ppv = IntPtr.Zero;
            if (IsOverridableInterface(iid) || global::WinRT.Interop.IID.IID_IInspectable == iid)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
            }

            if (((IWinRTObject)this).NativeObject.TryAs(iid, out ppv) >= 0)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.Handled;
            }

            return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
        }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")]
    [global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Media.Geometry))]
    [global::ABI.Microsoft.UI.Xaml.Media.GeometryRcwFactory]
    [global::WinRT.ProjectedRuntimeClass(typeof(IGeometry))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    public class Geometry : global::Microsoft.UI.Xaml.DependencyObject, global::System.Runtime.InteropServices.ICustomQueryInterface, IWinRTObject, IEquatable<Geometry>
    {
        private IntPtr ThisPtr => _inner == null ? (((IWinRTObject)this).NativeObject).ThisPtr : _inner.ThisPtr;

        private readonly IObjectReference _inner = null;




        private volatile IObjectReference ___objRef_global__Microsoft_UI_Xaml_Media_IGeometry;
        private IObjectReference Make___objRef_global__Microsoft_UI_Xaml_Media_IGeometry()
        {
            global::System.Threading.Interlocked.CompareExchange(ref ___objRef_global__Microsoft_UI_Xaml_Media_IGeometry, ((IWinRTObject)this).NativeObject.As<IUnknownVftbl>(global::ABI.Microsoft.UI.Xaml.Media.IGeometryMethods.IID), null);
            return ___objRef_global__Microsoft_UI_Xaml_Media_IGeometry;
        }
        private IObjectReference _objRef_global__Microsoft_UI_Xaml_Media_IGeometry => ___objRef_global__Microsoft_UI_Xaml_Media_IGeometry ?? Make___objRef_global__Microsoft_UI_Xaml_Media_IGeometry();



        private static class _IGeometryFactoryMethods
        {}

        private static volatile IObjectReference ___objRef_global__Microsoft_UI_Xaml_Media_IGeometryFactory;
        private static IObjectReference _objRef_global__Microsoft_UI_Xaml_Media_IGeometryFactory
        {
            get
            { 
                var factory = ___objRef_global__Microsoft_UI_Xaml_Media_IGeometryFactory;
                if (factory != null && factory.IsInCurrentContext)
                {
                    return factory;
                }
                else
                {
                    return ___objRef_global__Microsoft_UI_Xaml_Media_IGeometryFactory = ActivationFactory.Get("Microsoft.UI.Xaml.Media.Geometry", global::ABI.Microsoft.UI.Xaml.Media.IGeometryFactoryMethods.IID);
                }
            }
        }

        public static I As<I>() => ActivationFactory.Get("Microsoft.UI.Xaml.Media.Geometry").AsInterface<I>();

        private static volatile IObjectReference ___objRef_global__Microsoft_UI_Xaml_Media_IGeometryStatics;
        private static IObjectReference _objRef_global__Microsoft_UI_Xaml_Media_IGeometryStatics
        {
            get
            { 
                var factory = ___objRef_global__Microsoft_UI_Xaml_Media_IGeometryStatics;
                if (factory != null && factory.IsInCurrentContext)
                {
                    return factory;
                }
                else
                {
                    return ___objRef_global__Microsoft_UI_Xaml_Media_IGeometryStatics = ActivationFactory.Get("Microsoft.UI.Xaml.Media.Geometry", global::ABI.Microsoft.UI.Xaml.Media.IGeometryStaticsMethods.IID);
                }
            }
        }

        public static Geometry Empty => global::ABI.Microsoft.UI.Xaml.Media.IGeometryStaticsMethods.get_Empty(_objRef_global__Microsoft_UI_Xaml_Media_IGeometryStatics);

        public static double StandardFlatteningTolerance => global::ABI.Microsoft.UI.Xaml.Media.IGeometryStaticsMethods.get_StandardFlatteningTolerance(_objRef_global__Microsoft_UI_Xaml_Media_IGeometryStatics);

        public static global::Microsoft.UI.Xaml.DependencyProperty TransformProperty => global::ABI.Microsoft.UI.Xaml.Media.IGeometryStaticsMethods.get_TransformProperty(_objRef_global__Microsoft_UI_Xaml_Media_IGeometryStatics);

        public static new Geometry FromAbi(IntPtr thisPtr)
        {
            if (thisPtr == IntPtr.Zero) return null;
            return MarshalInspectable<Geometry>.FromAbi(thisPtr);
        }

        protected internal Geometry(IObjectReference objRef)
            : base(global::WinRT.DerivedComposed.Instance)

        {
            _inner = objRef.As(global::ABI.Microsoft.UI.Xaml.Media.IGeometryMethods.IID);

        }


        public static bool operator ==(Geometry x, Geometry y) => (x?.ThisPtr ?? IntPtr.Zero) == (y?.ThisPtr ?? IntPtr.Zero);
        public static bool operator !=(Geometry x, Geometry y) => !(x == y);
        public bool Equals(Geometry other) => this == other;
        public override bool Equals(object obj) => obj is Geometry that && this == that;
        public override int GetHashCode() => ThisPtr.GetHashCode();


        protected Geometry(global::WinRT.DerivedComposed _):base(_)
        {

        }
        bool IWinRTObject.HasUnwrappableNativeObject => this.GetType() == typeof(Geometry);
        IObjectReference IWinRTObject.NativeObject => _inner;

        private struct InterfaceTag<I>{};


        public global::Windows.Foundation.Rect Bounds => global::ABI.Microsoft.UI.Xaml.Media.IGeometryMethods.get_Bounds(_objRef_global__Microsoft_UI_Xaml_Media_IGeometry);

        public Transform Transform
        {
            get => global::ABI.Microsoft.UI.Xaml.Media.IGeometryMethods.get_Transform(_objRef_global__Microsoft_UI_Xaml_Media_IGeometry);
            set => global::ABI.Microsoft.UI.Xaml.Media.IGeometryMethods.set_Transform(_objRef_global__Microsoft_UI_Xaml_Media_IGeometry, value);
        }

        protected override bool IsOverridableInterface(Guid iid) => base.IsOverridableInterface(iid);

        global::System.Runtime.InteropServices.CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(ref Guid iid, out IntPtr ppv)
        {
            ppv = IntPtr.Zero;
            if (IsOverridableInterface(iid) || global::WinRT.Interop.IID.IID_IInspectable == iid)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
            }

            if (((IWinRTObject)this).NativeObject.TryAs(iid, out ppv) >= 0)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.Handled;
            }

            return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
        }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")]
    [global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Media.GeometryCollection))]
    [global::ABI.Microsoft.UI.Xaml.Media.GeometryCollectionRcwFactory]
    [global::WinRT.ProjectedRuntimeClass(typeof(global::System.Collections.Generic.IList<Geometry>))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    public sealed class GeometryCollection : global::System.Collections.Generic.IList<Geometry>, global::System.Collections.Generic.IEnumerable<Geometry>, global::System.Runtime.InteropServices.ICustomQueryInterface, IWinRTObject, IEquatable<GeometryCollection>
    {
        private IntPtr ThisPtr => _inner == null ? (((IWinRTObject)this).NativeObject).ThisPtr : _inner.ThisPtr;

        private readonly IObjectReference _inner = null;




        private volatile IObjectReference ___objRef_global__System_Collections_Generic_IList_Geometry_;
        private IObjectReference Make___objRef_global__System_Collections_Generic_IList_Geometry_()
        {
            _ = global::WinRT.GenericTypeInstantiations.Windows_Foundation_Collections_IVector_1_Microsoft_UI_Xaml_Media_Geometry.EnsureInitialized();
            global::System.Threading.Interlocked.CompareExchange(ref ___objRef_global__System_Collections_Generic_IList_Geometry_, ((IWinRTObject)this).NativeObject.As<IUnknownVftbl>(global::ABI.System.Collections.Generic.IListMethods<Geometry>.IID), null);
            return ___objRef_global__System_Collections_Generic_IList_Geometry_;
        }
        private IObjectReference _objRef_global__System_Collections_Generic_IList_Geometry_ => ___objRef_global__System_Collections_Generic_IList_Geometry_ ?? Make___objRef_global__System_Collections_Generic_IList_Geometry_();

        private volatile IObjectReference ___objRef_global__System_Collections_Generic_IEnumerable_Geometry_;
        private IObjectReference Make___objRef_global__System_Collections_Generic_IEnumerable_Geometry_()
        {
            _ = global::WinRT.GenericTypeInstantiations.Windows_Foundation_Collections_IIterable_1_Microsoft_UI_Xaml_Media_Geometry.EnsureInitialized();
            global::System.Threading.Interlocked.CompareExchange(ref ___objRef_global__System_Collections_Generic_IEnumerable_Geometry_, ((IWinRTObject)this).NativeObject.As<IUnknownVftbl>(global::ABI.System.Collections.Generic.IEnumerableMethods<Geometry>.IID), null);
            return ___objRef_global__System_Collections_Generic_IEnumerable_Geometry_;
        }
        private IObjectReference _objRef_global__System_Collections_Generic_IEnumerable_Geometry_ => ___objRef_global__System_Collections_Generic_IEnumerable_Geometry_ ?? Make___objRef_global__System_Collections_Generic_IEnumerable_Geometry_();



        private static volatile IObjectReference ___objRef_global__Microsoft_UI_Xaml_Media_GeometryCollection;
        private static IObjectReference _objRef_global__Microsoft_UI_Xaml_Media_GeometryCollection
        {
            get
            { 
                var factory = ___objRef_global__Microsoft_UI_Xaml_Media_GeometryCollection;
                if (factory != null && factory.IsInCurrentContext)
                {
                    return factory;
                }
                else
                {
                    return ___objRef_global__Microsoft_UI_Xaml_Media_GeometryCollection = ActivationFactory.Get("Microsoft.UI.Xaml.Media.GeometryCollection");
                }
            }
        }

        public GeometryCollection() 
        {
            _inner = global::ABI.WinRT.Interop.IActivationFactoryMethods.ActivateInstanceUnsafe(_objRef_global__Microsoft_UI_Xaml_Media_GeometryCollection, global::ABI.System.Collections.Generic.IListMethods<Geometry>.IID);
            ComWrappersSupport.RegisterObjectForInterface(this, ThisPtr);
            ComWrappersHelper.Init(_inner, false);

        }

        public static GeometryCollection FromAbi(IntPtr thisPtr)
        {
            if (thisPtr == IntPtr.Zero) return null;
            return MarshalInspectable<GeometryCollection>.FromAbi(thisPtr);
        }

        internal GeometryCollection(IObjectReference objRef)
        {
            _inner = objRef.As(global::ABI.System.Collections.Generic.IListMethods<Geometry>.IID);

        }


        public static bool operator ==(GeometryCollection x, GeometryCollection y) => (x?.ThisPtr ?? IntPtr.Zero) == (y?.ThisPtr ?? IntPtr.Zero);
        public static bool operator !=(GeometryCollection x, GeometryCollection y) => !(x == y);
        public bool Equals(GeometryCollection other) => this == other;
        public override bool Equals(object obj) => obj is GeometryCollection that && this == that;
        public override int GetHashCode() => ThisPtr.GetHashCode();


        bool IWinRTObject.HasUnwrappableNativeObject => true;
        IObjectReference IWinRTObject.NativeObject => _inner;
        private volatile global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> _queryInterfaceCache;
        private global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> MakeQueryInterfaceCache()
        {
            global::System.Threading.Interlocked.CompareExchange(ref _queryInterfaceCache, new global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference>(), null); 
            return _queryInterfaceCache;
        }
        global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> IWinRTObject.QueryInterfaceCache => _queryInterfaceCache ?? MakeQueryInterfaceCache();
        private volatile global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> _additionalTypeData;
        private global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> MakeAdditionalTypeData()
        {
            global::System.Threading.Interlocked.CompareExchange(ref _additionalTypeData, new global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object>(), null); 
            return _additionalTypeData;
        }
        global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> IWinRTObject.AdditionalTypeData => _additionalTypeData ?? MakeAdditionalTypeData();

        private struct InterfaceTag<I>{};


        public int Count => global::ABI.System.Collections.Generic.IListMethods<Geometry>.get_Count(_objRef_global__System_Collections_Generic_IList_Geometry_);
        public bool IsReadOnly => global::ABI.System.Collections.Generic.IListMethods<Geometry>.get_IsReadOnly(_objRef_global__System_Collections_Generic_IList_Geometry_);
        [global::System.Runtime.CompilerServices.IndexerName("ListItem")]
        public Geometry this[int index] 
        {
            get => global::ABI.System.Collections.Generic.IListMethods<Geometry>.Indexer_Get(_objRef_global__System_Collections_Generic_IList_Geometry_, index);
            set => global::ABI.System.Collections.Generic.IListMethods<Geometry>.Indexer_Set(_objRef_global__System_Collections_Generic_IList_Geometry_, index, value);
        }
        public int IndexOf(Geometry item) => global::ABI.System.Collections.Generic.IListMethods<Geometry>.IndexOf(_objRef_global__System_Collections_Generic_IList_Geometry_, item);
        public void Insert(int index, Geometry item) => global::ABI.System.Collections.Generic.IListMethods<Geometry>.Insert(_objRef_global__System_Collections_Generic_IList_Geometry_, index, item);
        public void RemoveAt(int index) => global::ABI.System.Collections.Generic.IListMethods<Geometry>.RemoveAt(_objRef_global__System_Collections_Generic_IList_Geometry_, index);
        public void Add(Geometry item) => global::ABI.System.Collections.Generic.IListMethods<Geometry>.Add(_objRef_global__System_Collections_Generic_IList_Geometry_, item);
        public void Clear() => global::ABI.System.Collections.Generic.IListMethods<Geometry>.Clear(_objRef_global__System_Collections_Generic_IList_Geometry_);
        public bool Contains(Geometry item) => global::ABI.System.Collections.Generic.IListMethods<Geometry>.Contains(_objRef_global__System_Collections_Generic_IList_Geometry_, item);
        public void CopyTo(Geometry[] array, int arrayIndex) => global::ABI.System.Collections.Generic.IListMethods<Geometry>.CopyTo(_objRef_global__System_Collections_Generic_IList_Geometry_, array, arrayIndex);
        public bool Remove(Geometry item) => global::ABI.System.Collections.Generic.IListMethods<Geometry>.Remove(_objRef_global__System_Collections_Generic_IList_Geometry_, item);

        public IEnumerator<Geometry> GetEnumerator() => global::ABI.System.Collections.Generic.IEnumerableMethods<Geometry>.GetEnumerator(_objRef_global__System_Collections_Generic_IEnumerable_Geometry_);

        IEnumerator IEnumerable.GetEnumerator() => GetEnumerator();

        private bool IsOverridableInterface(Guid iid) => false;

        global::System.Runtime.InteropServices.CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(ref Guid iid, out IntPtr ppv)
        {
            ppv = IntPtr.Zero;
            if (IsOverridableInterface(iid) || global::WinRT.Interop.IID.IID_IInspectable == iid)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
            }

            if (((IWinRTObject)this).NativeObject.TryAs(iid, out ppv) >= 0)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.Handled;
            }

            return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
        }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")]
    [global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Media.GeometryGroup))]
    [global::ABI.Microsoft.UI.Xaml.Media.GeometryGroupRcwFactory]
    [global::WinRT.ProjectedRuntimeClass(typeof(IGeometryGroup))]
    [global::Microsoft.UI.Xaml.Markup.ContentProperty(Name = @"Children")]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    public sealed class GeometryGroup : Geometry, global::System.Runtime.InteropServices.ICustomQueryInterface, IWinRTObject, IEquatable<GeometryGroup>
    {
        private IntPtr ThisPtr => _inner == null ? (((IWinRTObject)this).NativeObject).ThisPtr : _inner.ThisPtr;

        private readonly IObjectReference _inner = null;



        private IObjectReference _objRef_global__Microsoft_UI_Xaml_Media_IGeometryGroup => _inner;


        private static volatile IObjectReference ___objRef_global__Microsoft_UI_Xaml_Media_GeometryGroup;
        private static IObjectReference _objRef_global__Microsoft_UI_Xaml_Media_GeometryGroup
        {
            get
            { 
                var factory = ___objRef_global__Microsoft_UI_Xaml_Media_GeometryGroup;
                if (factory != null && factory.IsInCurrentContext)
                {
                    return factory;
                }
                else
                {
                    return ___objRef_global__Microsoft_UI_Xaml_Media_GeometryGroup = ActivationFactory.Get("Microsoft.UI.Xaml.Media.GeometryGroup");
                }
            }
        }

        public GeometryGroup() :base(global::WinRT.DerivedComposed.Instance)
        {
            _inner = global::ABI.WinRT.Interop.IActivationFactoryMethods.ActivateInstanceUnsafe(_objRef_global__Microsoft_UI_Xaml_Media_GeometryGroup, global::ABI.Microsoft.UI.Xaml.Media.IGeometryGroupMethods.IID);
            ComWrappersSupport.RegisterObjectForInterface(this, ThisPtr);
            ComWrappersHelper.Init(_inner, false);

        }

        public static new I As<I>() => ActivationFactory.Get("Microsoft.UI.Xaml.Media.GeometryGroup").AsInterface<I>();

        private static volatile IObjectReference ___objRef_global__Microsoft_UI_Xaml_Media_IGeometryGroupStatics;
        private static IObjectReference _objRef_global__Microsoft_UI_Xaml_Media_IGeometryGroupStatics
        {
            get
            { 
                var factory = ___objRef_global__Microsoft_UI_Xaml_Media_IGeometryGroupStatics;
                if (factory != null && factory.IsInCurrentContext)
                {
                    return factory;
                }
                else
                {
                    return ___objRef_global__Microsoft_UI_Xaml_Media_IGeometryGroupStatics = ActivationFactory.Get("Microsoft.UI.Xaml.Media.GeometryGroup", global::ABI.Microsoft.UI.Xaml.Media.IGeometryGroupStaticsMethods.IID);
                }
            }
        }

        public static global::Microsoft.UI.Xaml.DependencyProperty ChildrenProperty => global::ABI.Microsoft.UI.Xaml.Media.IGeometryGroupStaticsMethods.get_ChildrenProperty(_objRef_global__Microsoft_UI_Xaml_Media_IGeometryGroupStatics);

        public static global::Microsoft.UI.Xaml.DependencyProperty FillRuleProperty => global::ABI.Microsoft.UI.Xaml.Media.IGeometryGroupStaticsMethods.get_FillRuleProperty(_objRef_global__Microsoft_UI_Xaml_Media_IGeometryGroupStatics);

        public static new GeometryGroup FromAbi(IntPtr thisPtr)
        {
            if (thisPtr == IntPtr.Zero) return null;
            return MarshalInspectable<GeometryGroup>.FromAbi(thisPtr);
        }

        internal GeometryGroup(IObjectReference objRef)
            : base(global::WinRT.DerivedComposed.Instance)

        {
            _inner = objRef.As(global::ABI.Microsoft.UI.Xaml.Media.IGeometryGroupMethods.IID);

        }


        public static bool operator ==(GeometryGroup x, GeometryGroup y) => (x?.ThisPtr ?? IntPtr.Zero) == (y?.ThisPtr ?? IntPtr.Zero);
        public static bool operator !=(GeometryGroup x, GeometryGroup y) => !(x == y);
        public bool Equals(GeometryGroup other) => this == other;
        public override bool Equals(object obj) => obj is GeometryGroup that && this == that;
        public override int GetHashCode() => ThisPtr.GetHashCode();


        bool IWinRTObject.HasUnwrappableNativeObject => true;
        IObjectReference IWinRTObject.NativeObject => _inner;

        private struct InterfaceTag<I>{};


        public GeometryCollection Children
        {
            get => global::ABI.Microsoft.UI.Xaml.Media.IGeometryGroupMethods.get_Children(_objRef_global__Microsoft_UI_Xaml_Media_IGeometryGroup);
            set => global::ABI.Microsoft.UI.Xaml.Media.IGeometryGroupMethods.set_Children(_objRef_global__Microsoft_UI_Xaml_Media_IGeometryGroup, value);
        }

        public FillRule FillRule
        {
            get => global::ABI.Microsoft.UI.Xaml.Media.IGeometryGroupMethods.get_FillRule(_objRef_global__Microsoft_UI_Xaml_Media_IGeometryGroup);
            set => global::ABI.Microsoft.UI.Xaml.Media.IGeometryGroupMethods.set_FillRule(_objRef_global__Microsoft_UI_Xaml_Media_IGeometryGroup, value);
        }

        protected override bool IsOverridableInterface(Guid iid) => base.IsOverridableInterface(iid);

        global::System.Runtime.InteropServices.CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(ref Guid iid, out IntPtr ppv)
        {
            ppv = IntPtr.Zero;
            if (IsOverridableInterface(iid) || global::WinRT.Interop.IID.IID_IInspectable == iid)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
            }

            if (((IWinRTObject)this).NativeObject.TryAs(iid, out ppv) >= 0)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.Handled;
            }

            return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
        }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")]
    [global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Media.GradientBrush))]
    [global::ABI.Microsoft.UI.Xaml.Media.GradientBrushRcwFactory]
    [global::WinRT.ProjectedRuntimeClass(typeof(IGradientBrush))]
    [global::Microsoft.UI.Xaml.Markup.ContentProperty(Name = @"GradientStops")]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    public class GradientBrush : Brush, global::System.Runtime.InteropServices.ICustomQueryInterface, IWinRTObject, IEquatable<GradientBrush>
    {
        private IntPtr ThisPtr => _inner == null ? (((IWinRTObject)this).NativeObject).ThisPtr : _inner.ThisPtr;

        private readonly IObjectReference _inner = null;




        private volatile IObjectReference ___objRef_global__Microsoft_UI_Xaml_Media_IGradientBrush;
        private IObjectReference Make___objRef_global__Microsoft_UI_Xaml_Media_IGradientBrush()
        {
            global::System.Threading.Interlocked.CompareExchange(ref ___objRef_global__Microsoft_UI_Xaml_Media_IGradientBrush, ((IWinRTObject)this).NativeObject.As<IUnknownVftbl>(global::ABI.Microsoft.UI.Xaml.Media.IGradientBrushMethods.IID), null);
            return ___objRef_global__Microsoft_UI_Xaml_Media_IGradientBrush;
        }
        private IObjectReference _objRef_global__Microsoft_UI_Xaml_Media_IGradientBrush => ___objRef_global__Microsoft_UI_Xaml_Media_IGradientBrush ?? Make___objRef_global__Microsoft_UI_Xaml_Media_IGradientBrush();



        private static class _IGradientBrushFactoryMethods
        {
            public static unsafe IntPtr CreateInstance(IObjectReference _obj, object baseInterface, out IntPtr innerInterface)
            {
                var ThisPtr = _obj.ThisPtr;

                ObjectReferenceValue __baseInterface = default;
                IntPtr __innerInterface = default;
                IntPtr __retval = default;
                try
                {
                    __baseInterface = MarshalInspectable<object>.CreateMarshaler2(baseInterface);
                    global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, IntPtr*, IntPtr*, int>**)ThisPtr)[6](ThisPtr, MarshalInspectable<object>.GetAbi(__baseInterface), &__innerInterface, &__retval));
                    global::System.GC.KeepAlive(_obj);
                    innerInterface = __innerInterface;
                    return __retval;
                }
                finally
                {
                    MarshalInspectable<object>.DisposeMarshaler(__baseInterface);
                }
            }
        }

        private static volatile IObjectReference ___objRef_global__Microsoft_UI_Xaml_Media_IGradientBrushFactory;
        private static IObjectReference _objRef_global__Microsoft_UI_Xaml_Media_IGradientBrushFactory
        {
            get
            { 
                var factory = ___objRef_global__Microsoft_UI_Xaml_Media_IGradientBrushFactory;
                if (factory != null && factory.IsInCurrentContext)
                {
                    return factory;
                }
                else
                {
                    return ___objRef_global__Microsoft_UI_Xaml_Media_IGradientBrushFactory = ActivationFactory.Get("Microsoft.UI.Xaml.Media.GradientBrush", global::ABI.Microsoft.UI.Xaml.Media.IGradientBrushFactoryMethods.IID);
                }
            }
        }

        protected GradientBrush():base(global::WinRT.DerivedComposed.Instance)
        {
            bool isAggregation = this.GetType() != typeof(GradientBrush);
            object baseInspectable = isAggregation ? this : null;
            IntPtr composed = _IGradientBrushFactoryMethods.CreateInstance(_objRef_global__Microsoft_UI_Xaml_Media_IGradientBrushFactory,  baseInspectable, out IntPtr inner);
            try
            {
                ComWrappersHelper.Init(isAggregation, this, composed, inner, global::ABI.Microsoft.UI.Xaml.Media.IGradientBrushMethods.IID, out _inner);

            }
            finally
            {
                Marshal.Release(inner);   
            }
        }

        public static new I As<I>() => ActivationFactory.Get("Microsoft.UI.Xaml.Media.GradientBrush").AsInterface<I>();

        private static volatile IObjectReference ___objRef_global__Microsoft_UI_Xaml_Media_IGradientBrushStatics;
        private static IObjectReference _objRef_global__Microsoft_UI_Xaml_Media_IGradientBrushStatics
        {
            get
            { 
                var factory = ___objRef_global__Microsoft_UI_Xaml_Media_IGradientBrushStatics;
                if (factory != null && factory.IsInCurrentContext)
                {
                    return factory;
                }
                else
                {
                    return ___objRef_global__Microsoft_UI_Xaml_Media_IGradientBrushStatics = ActivationFactory.Get("Microsoft.UI.Xaml.Media.GradientBrush", global::ABI.Microsoft.UI.Xaml.Media.IGradientBrushStaticsMethods.IID);
                }
            }
        }

        public static global::Microsoft.UI.Xaml.DependencyProperty ColorInterpolationModeProperty => global::ABI.Microsoft.UI.Xaml.Media.IGradientBrushStaticsMethods.get_ColorInterpolationModeProperty(_objRef_global__Microsoft_UI_Xaml_Media_IGradientBrushStatics);

        public static global::Microsoft.UI.Xaml.DependencyProperty GradientStopsProperty => global::ABI.Microsoft.UI.Xaml.Media.IGradientBrushStaticsMethods.get_GradientStopsProperty(_objRef_global__Microsoft_UI_Xaml_Media_IGradientBrushStatics);

        public static global::Microsoft.UI.Xaml.DependencyProperty MappingModeProperty => global::ABI.Microsoft.UI.Xaml.Media.IGradientBrushStaticsMethods.get_MappingModeProperty(_objRef_global__Microsoft_UI_Xaml_Media_IGradientBrushStatics);

        public static global::Microsoft.UI.Xaml.DependencyProperty SpreadMethodProperty => global::ABI.Microsoft.UI.Xaml.Media.IGradientBrushStaticsMethods.get_SpreadMethodProperty(_objRef_global__Microsoft_UI_Xaml_Media_IGradientBrushStatics);

        public static new GradientBrush FromAbi(IntPtr thisPtr)
        {
            if (thisPtr == IntPtr.Zero) return null;
            return MarshalInspectable<GradientBrush>.FromAbi(thisPtr);
        }

        protected internal GradientBrush(IObjectReference objRef)
            : base(global::WinRT.DerivedComposed.Instance)

        {
            _inner = objRef.As(global::ABI.Microsoft.UI.Xaml.Media.IGradientBrushMethods.IID);

        }


        public static bool operator ==(GradientBrush x, GradientBrush y) => (x?.ThisPtr ?? IntPtr.Zero) == (y?.ThisPtr ?? IntPtr.Zero);
        public static bool operator !=(GradientBrush x, GradientBrush y) => !(x == y);
        public bool Equals(GradientBrush other) => this == other;
        public override bool Equals(object obj) => obj is GradientBrush that && this == that;
        public override int GetHashCode() => ThisPtr.GetHashCode();


        protected GradientBrush(global::WinRT.DerivedComposed _):base(_)
        {

        }
        bool IWinRTObject.HasUnwrappableNativeObject => this.GetType() == typeof(GradientBrush);
        IObjectReference IWinRTObject.NativeObject => _inner;

        private struct InterfaceTag<I>{};


        public ColorInterpolationMode ColorInterpolationMode
        {
            get => global::ABI.Microsoft.UI.Xaml.Media.IGradientBrushMethods.get_ColorInterpolationMode(_objRef_global__Microsoft_UI_Xaml_Media_IGradientBrush);
            set => global::ABI.Microsoft.UI.Xaml.Media.IGradientBrushMethods.set_ColorInterpolationMode(_objRef_global__Microsoft_UI_Xaml_Media_IGradientBrush, value);
        }

        public GradientStopCollection GradientStops
        {
            get => global::ABI.Microsoft.UI.Xaml.Media.IGradientBrushMethods.get_GradientStops(_objRef_global__Microsoft_UI_Xaml_Media_IGradientBrush);
            set => global::ABI.Microsoft.UI.Xaml.Media.IGradientBrushMethods.set_GradientStops(_objRef_global__Microsoft_UI_Xaml_Media_IGradientBrush, value);
        }

        public BrushMappingMode MappingMode
        {
            get => global::ABI.Microsoft.UI.Xaml.Media.IGradientBrushMethods.get_MappingMode(_objRef_global__Microsoft_UI_Xaml_Media_IGradientBrush);
            set => global::ABI.Microsoft.UI.Xaml.Media.IGradientBrushMethods.set_MappingMode(_objRef_global__Microsoft_UI_Xaml_Media_IGradientBrush, value);
        }

        public GradientSpreadMethod SpreadMethod
        {
            get => global::ABI.Microsoft.UI.Xaml.Media.IGradientBrushMethods.get_SpreadMethod(_objRef_global__Microsoft_UI_Xaml_Media_IGradientBrush);
            set => global::ABI.Microsoft.UI.Xaml.Media.IGradientBrushMethods.set_SpreadMethod(_objRef_global__Microsoft_UI_Xaml_Media_IGradientBrush, value);
        }

        protected override bool IsOverridableInterface(Guid iid) => base.IsOverridableInterface(iid);

        global::System.Runtime.InteropServices.CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(ref Guid iid, out IntPtr ppv)
        {
            ppv = IntPtr.Zero;
            if (IsOverridableInterface(iid) || global::WinRT.Interop.IID.IID_IInspectable == iid)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
            }

            if (((IWinRTObject)this).NativeObject.TryAs(iid, out ppv) >= 0)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.Handled;
            }

            return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
        }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")][global::WinRT.WinRTExposedType(typeof(global::WinRT.EnumTypeDetails<GradientSpreadMethod>))][global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    public enum GradientSpreadMethod : int
    {
        Pad = unchecked((int)0),
        Reflect = unchecked((int)0x1),
        Repeat = unchecked((int)0x2),
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")]
    [global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Media.GradientStop))]
    [global::ABI.Microsoft.UI.Xaml.Media.GradientStopRcwFactory]
    [global::WinRT.ProjectedRuntimeClass(typeof(IGradientStop))]
    [global::Microsoft.UI.Xaml.Markup.ContentProperty(Name = @"Color")]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    public sealed class GradientStop : global::Microsoft.UI.Xaml.DependencyObject, global::System.Runtime.InteropServices.ICustomQueryInterface, IWinRTObject, IEquatable<GradientStop>
    {
        private IntPtr ThisPtr => _inner == null ? (((IWinRTObject)this).NativeObject).ThisPtr : _inner.ThisPtr;

        private readonly IObjectReference _inner = null;



        private IObjectReference _objRef_global__Microsoft_UI_Xaml_Media_IGradientStop => _inner;


        private static volatile IObjectReference ___objRef_global__Microsoft_UI_Xaml_Media_GradientStop;
        private static IObjectReference _objRef_global__Microsoft_UI_Xaml_Media_GradientStop
        {
            get
            { 
                var factory = ___objRef_global__Microsoft_UI_Xaml_Media_GradientStop;
                if (factory != null && factory.IsInCurrentContext)
                {
                    return factory;
                }
                else
                {
                    return ___objRef_global__Microsoft_UI_Xaml_Media_GradientStop = ActivationFactory.Get("Microsoft.UI.Xaml.Media.GradientStop");
                }
            }
        }

        public GradientStop() :base(global::WinRT.DerivedComposed.Instance)
        {
            _inner = global::ABI.WinRT.Interop.IActivationFactoryMethods.ActivateInstanceUnsafe(_objRef_global__Microsoft_UI_Xaml_Media_GradientStop, global::ABI.Microsoft.UI.Xaml.Media.IGradientStopMethods.IID);
            ComWrappersSupport.RegisterObjectForInterface(this, ThisPtr);
            ComWrappersHelper.Init(_inner, false);

        }

        public static I As<I>() => ActivationFactory.Get("Microsoft.UI.Xaml.Media.GradientStop").AsInterface<I>();

        private static volatile IObjectReference ___objRef_global__Microsoft_UI_Xaml_Media_IGradientStopStatics;
        private static IObjectReference _objRef_global__Microsoft_UI_Xaml_Media_IGradientStopStatics
        {
            get
            { 
                var factory = ___objRef_global__Microsoft_UI_Xaml_Media_IGradientStopStatics;
                if (factory != null && factory.IsInCurrentContext)
                {
                    return factory;
                }
                else
                {
                    return ___objRef_global__Microsoft_UI_Xaml_Media_IGradientStopStatics = ActivationFactory.Get("Microsoft.UI.Xaml.Media.GradientStop", global::ABI.Microsoft.UI.Xaml.Media.IGradientStopStaticsMethods.IID);
                }
            }
        }

        public static global::Microsoft.UI.Xaml.DependencyProperty ColorProperty => global::ABI.Microsoft.UI.Xaml.Media.IGradientStopStaticsMethods.get_ColorProperty(_objRef_global__Microsoft_UI_Xaml_Media_IGradientStopStatics);

        public static global::Microsoft.UI.Xaml.DependencyProperty OffsetProperty => global::ABI.Microsoft.UI.Xaml.Media.IGradientStopStaticsMethods.get_OffsetProperty(_objRef_global__Microsoft_UI_Xaml_Media_IGradientStopStatics);

        public static new GradientStop FromAbi(IntPtr thisPtr)
        {
            if (thisPtr == IntPtr.Zero) return null;
            return MarshalInspectable<GradientStop>.FromAbi(thisPtr);
        }

        internal GradientStop(IObjectReference objRef)
            : base(global::WinRT.DerivedComposed.Instance)

        {
            _inner = objRef.As(global::ABI.Microsoft.UI.Xaml.Media.IGradientStopMethods.IID);

        }


        public static bool operator ==(GradientStop x, GradientStop y) => (x?.ThisPtr ?? IntPtr.Zero) == (y?.ThisPtr ?? IntPtr.Zero);
        public static bool operator !=(GradientStop x, GradientStop y) => !(x == y);
        public bool Equals(GradientStop other) => this == other;
        public override bool Equals(object obj) => obj is GradientStop that && this == that;
        public override int GetHashCode() => ThisPtr.GetHashCode();


        bool IWinRTObject.HasUnwrappableNativeObject => true;
        IObjectReference IWinRTObject.NativeObject => _inner;

        private struct InterfaceTag<I>{};


        public global::Windows.UI.Color Color
        {
            get => global::ABI.Microsoft.UI.Xaml.Media.IGradientStopMethods.get_Color(_objRef_global__Microsoft_UI_Xaml_Media_IGradientStop);
            set => global::ABI.Microsoft.UI.Xaml.Media.IGradientStopMethods.set_Color(_objRef_global__Microsoft_UI_Xaml_Media_IGradientStop, value);
        }

        public double Offset
        {
            get => global::ABI.Microsoft.UI.Xaml.Media.IGradientStopMethods.get_Offset(_objRef_global__Microsoft_UI_Xaml_Media_IGradientStop);
            set => global::ABI.Microsoft.UI.Xaml.Media.IGradientStopMethods.set_Offset(_objRef_global__Microsoft_UI_Xaml_Media_IGradientStop, value);
        }

        protected override bool IsOverridableInterface(Guid iid) => base.IsOverridableInterface(iid);

        global::System.Runtime.InteropServices.CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(ref Guid iid, out IntPtr ppv)
        {
            ppv = IntPtr.Zero;
            if (IsOverridableInterface(iid) || global::WinRT.Interop.IID.IID_IInspectable == iid)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
            }

            if (((IWinRTObject)this).NativeObject.TryAs(iid, out ppv) >= 0)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.Handled;
            }

            return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
        }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")]
    [global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Media.GradientStopCollection))]
    [global::ABI.Microsoft.UI.Xaml.Media.GradientStopCollectionRcwFactory]
    [global::WinRT.ProjectedRuntimeClass(typeof(global::System.Collections.Generic.IList<GradientStop>))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    public sealed class GradientStopCollection : global::System.Collections.Generic.IList<GradientStop>, global::System.Collections.Generic.IEnumerable<GradientStop>, global::System.Runtime.InteropServices.ICustomQueryInterface, IWinRTObject, IEquatable<GradientStopCollection>
    {
        private IntPtr ThisPtr => _inner == null ? (((IWinRTObject)this).NativeObject).ThisPtr : _inner.ThisPtr;

        private readonly IObjectReference _inner = null;




        private volatile IObjectReference ___objRef_global__System_Collections_Generic_IList_GradientStop_;
        private IObjectReference Make___objRef_global__System_Collections_Generic_IList_GradientStop_()
        {
            _ = global::WinRT.GenericTypeInstantiations.Windows_Foundation_Collections_IVector_1_Microsoft_UI_Xaml_Media_GradientStop.EnsureInitialized();
            global::System.Threading.Interlocked.CompareExchange(ref ___objRef_global__System_Collections_Generic_IList_GradientStop_, ((IWinRTObject)this).NativeObject.As<IUnknownVftbl>(global::ABI.System.Collections.Generic.IListMethods<GradientStop>.IID), null);
            return ___objRef_global__System_Collections_Generic_IList_GradientStop_;
        }
        private IObjectReference _objRef_global__System_Collections_Generic_IList_GradientStop_ => ___objRef_global__System_Collections_Generic_IList_GradientStop_ ?? Make___objRef_global__System_Collections_Generic_IList_GradientStop_();

        private volatile IObjectReference ___objRef_global__System_Collections_Generic_IEnumerable_GradientStop_;
        private IObjectReference Make___objRef_global__System_Collections_Generic_IEnumerable_GradientStop_()
        {
            _ = global::WinRT.GenericTypeInstantiations.Windows_Foundation_Collections_IIterable_1_Microsoft_UI_Xaml_Media_GradientStop.EnsureInitialized();
            global::System.Threading.Interlocked.CompareExchange(ref ___objRef_global__System_Collections_Generic_IEnumerable_GradientStop_, ((IWinRTObject)this).NativeObject.As<IUnknownVftbl>(global::ABI.System.Collections.Generic.IEnumerableMethods<GradientStop>.IID), null);
            return ___objRef_global__System_Collections_Generic_IEnumerable_GradientStop_;
        }
        private IObjectReference _objRef_global__System_Collections_Generic_IEnumerable_GradientStop_ => ___objRef_global__System_Collections_Generic_IEnumerable_GradientStop_ ?? Make___objRef_global__System_Collections_Generic_IEnumerable_GradientStop_();



        private static volatile IObjectReference ___objRef_global__Microsoft_UI_Xaml_Media_GradientStopCollection;
        private static IObjectReference _objRef_global__Microsoft_UI_Xaml_Media_GradientStopCollection
        {
            get
            { 
                var factory = ___objRef_global__Microsoft_UI_Xaml_Media_GradientStopCollection;
                if (factory != null && factory.IsInCurrentContext)
                {
                    return factory;
                }
                else
                {
                    return ___objRef_global__Microsoft_UI_Xaml_Media_GradientStopCollection = ActivationFactory.Get("Microsoft.UI.Xaml.Media.GradientStopCollection");
                }
            }
        }

        public GradientStopCollection() 
        {
            _inner = global::ABI.WinRT.Interop.IActivationFactoryMethods.ActivateInstanceUnsafe(_objRef_global__Microsoft_UI_Xaml_Media_GradientStopCollection, global::ABI.System.Collections.Generic.IListMethods<GradientStop>.IID);
            ComWrappersSupport.RegisterObjectForInterface(this, ThisPtr);
            ComWrappersHelper.Init(_inner, false);

        }

        public static GradientStopCollection FromAbi(IntPtr thisPtr)
        {
            if (thisPtr == IntPtr.Zero) return null;
            return MarshalInspectable<GradientStopCollection>.FromAbi(thisPtr);
        }

        internal GradientStopCollection(IObjectReference objRef)
        {
            _inner = objRef.As(global::ABI.System.Collections.Generic.IListMethods<GradientStop>.IID);

        }


        public static bool operator ==(GradientStopCollection x, GradientStopCollection y) => (x?.ThisPtr ?? IntPtr.Zero) == (y?.ThisPtr ?? IntPtr.Zero);
        public static bool operator !=(GradientStopCollection x, GradientStopCollection y) => !(x == y);
        public bool Equals(GradientStopCollection other) => this == other;
        public override bool Equals(object obj) => obj is GradientStopCollection that && this == that;
        public override int GetHashCode() => ThisPtr.GetHashCode();


        bool IWinRTObject.HasUnwrappableNativeObject => true;
        IObjectReference IWinRTObject.NativeObject => _inner;
        private volatile global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> _queryInterfaceCache;
        private global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> MakeQueryInterfaceCache()
        {
            global::System.Threading.Interlocked.CompareExchange(ref _queryInterfaceCache, new global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference>(), null); 
            return _queryInterfaceCache;
        }
        global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> IWinRTObject.QueryInterfaceCache => _queryInterfaceCache ?? MakeQueryInterfaceCache();
        private volatile global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> _additionalTypeData;
        private global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> MakeAdditionalTypeData()
        {
            global::System.Threading.Interlocked.CompareExchange(ref _additionalTypeData, new global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object>(), null); 
            return _additionalTypeData;
        }
        global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> IWinRTObject.AdditionalTypeData => _additionalTypeData ?? MakeAdditionalTypeData();

        private struct InterfaceTag<I>{};


        public int Count => global::ABI.System.Collections.Generic.IListMethods<GradientStop>.get_Count(_objRef_global__System_Collections_Generic_IList_GradientStop_);
        public bool IsReadOnly => global::ABI.System.Collections.Generic.IListMethods<GradientStop>.get_IsReadOnly(_objRef_global__System_Collections_Generic_IList_GradientStop_);
        [global::System.Runtime.CompilerServices.IndexerName("ListItem")]
        public GradientStop this[int index] 
        {
            get => global::ABI.System.Collections.Generic.IListMethods<GradientStop>.Indexer_Get(_objRef_global__System_Collections_Generic_IList_GradientStop_, index);
            set => global::ABI.System.Collections.Generic.IListMethods<GradientStop>.Indexer_Set(_objRef_global__System_Collections_Generic_IList_GradientStop_, index, value);
        }
        public int IndexOf(GradientStop item) => global::ABI.System.Collections.Generic.IListMethods<GradientStop>.IndexOf(_objRef_global__System_Collections_Generic_IList_GradientStop_, item);
        public void Insert(int index, GradientStop item) => global::ABI.System.Collections.Generic.IListMethods<GradientStop>.Insert(_objRef_global__System_Collections_Generic_IList_GradientStop_, index, item);
        public void RemoveAt(int index) => global::ABI.System.Collections.Generic.IListMethods<GradientStop>.RemoveAt(_objRef_global__System_Collections_Generic_IList_GradientStop_, index);
        public void Add(GradientStop item) => global::ABI.System.Collections.Generic.IListMethods<GradientStop>.Add(_objRef_global__System_Collections_Generic_IList_GradientStop_, item);
        public void Clear() => global::ABI.System.Collections.Generic.IListMethods<GradientStop>.Clear(_objRef_global__System_Collections_Generic_IList_GradientStop_);
        public bool Contains(GradientStop item) => global::ABI.System.Collections.Generic.IListMethods<GradientStop>.Contains(_objRef_global__System_Collections_Generic_IList_GradientStop_, item);
        public void CopyTo(GradientStop[] array, int arrayIndex) => global::ABI.System.Collections.Generic.IListMethods<GradientStop>.CopyTo(_objRef_global__System_Collections_Generic_IList_GradientStop_, array, arrayIndex);
        public bool Remove(GradientStop item) => global::ABI.System.Collections.Generic.IListMethods<GradientStop>.Remove(_objRef_global__System_Collections_Generic_IList_GradientStop_, item);

        public IEnumerator<GradientStop> GetEnumerator() => global::ABI.System.Collections.Generic.IEnumerableMethods<GradientStop>.GetEnumerator(_objRef_global__System_Collections_Generic_IEnumerable_GradientStop_);

        IEnumerator IEnumerable.GetEnumerator() => GetEnumerator();

        private bool IsOverridableInterface(Guid iid) => false;

        global::System.Runtime.InteropServices.CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(ref Guid iid, out IntPtr ppv)
        {
            ppv = IntPtr.Zero;
            if (IsOverridableInterface(iid) || global::WinRT.Interop.IID.IID_IInspectable == iid)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
            }

            if (((IWinRTObject)this).NativeObject.TryAs(iid, out ppv) >= 0)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.Handled;
            }

            return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
        }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")][Guid("3A8C760A-941F-58BC-A6D4-AA7A0DD1D036")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Media.IAcrylicBrush))]
    [global::Microsoft.UI.Xaml.CustomAttributes.MUXPropertyChangedCallback(enable = true)]
    [global::Microsoft.UI.Xaml.CustomAttributes.MUXPropertyChangedCallbackMethodName(value = @"OnPropertyChanged")]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.XamlContract), 65536u)]
    internal interface IAcrylicBrush
    {
        bool AlwaysUseFallback { get; set; }
        global::Windows.UI.Color TintColor { get; set; }
        double TintOpacity { get; set; }
        global::System.TimeSpan TintTransitionDuration { get; set; }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")][Guid("23FAD570-43ED-5A73-9DE7-A303553D5414")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Media.IAcrylicBrush2))]
    [global::Microsoft.UI.Xaml.CustomAttributes.MUXPropertyChangedCallback(enable = true)]
    [global::Microsoft.UI.Xaml.CustomAttributes.MUXPropertyChangedCallbackMethodName(value = @"OnPropertyChanged")]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.XamlContract), 65536u)]
    internal interface IAcrylicBrush2
    {
        global::System.Nullable<double> TintLuminosityOpacity { get; set; }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")][Guid("80173353-611D-5A02-8864-1AAA279DFF1C")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Media.IAcrylicBrushFactory))]
    [global::Microsoft.UI.Xaml.CustomAttributes.MUXPropertyChangedCallback(enable = true)]
    [global::Microsoft.UI.Xaml.CustomAttributes.MUXPropertyChangedCallbackMethodName(value = @"OnPropertyChanged")]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.XamlContract), 65536u)]
    internal interface IAcrylicBrushFactory
    {
        AcrylicBrush CreateInstance(object baseInterface, out object innerInterface);
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")][Guid("9D9D366B-00A3-5F3E-98B8-1DF7FEC1828C")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Media.IAcrylicBrushStatics))]
    [global::Microsoft.UI.Xaml.CustomAttributes.MUXPropertyChangedCallback(enable = true)]
    [global::Microsoft.UI.Xaml.CustomAttributes.MUXPropertyChangedCallbackMethodName(value = @"OnPropertyChanged")]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.XamlContract), 65536u)]
    internal interface IAcrylicBrushStatics
    {
        global::Microsoft.UI.Xaml.DependencyProperty AlwaysUseFallbackProperty { get; }
        global::Microsoft.UI.Xaml.DependencyProperty TintColorProperty { get; }
        global::Microsoft.UI.Xaml.DependencyProperty TintOpacityProperty { get; }
        global::Microsoft.UI.Xaml.DependencyProperty TintTransitionDurationProperty { get; }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")][Guid("6E3EB0BD-20A1-52EA-AEDE-478061012279")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Media.IAcrylicBrushStatics2))]
    [global::Microsoft.UI.Xaml.CustomAttributes.MUXPropertyChangedCallback(enable = true)]
    [global::Microsoft.UI.Xaml.CustomAttributes.MUXPropertyChangedCallbackMethodName(value = @"OnPropertyChanged")]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.XamlContract), 65536u)]
    internal interface IAcrylicBrushStatics2
    {
        global::Microsoft.UI.Xaml.DependencyProperty TintLuminosityOpacityProperty { get; }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")][Guid("6B7CE02B-87BE-5ACB-9D3B-C9964C6962D0")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Media.IArcSegment))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    internal interface IArcSegment
    {
        bool IsLargeArc { get; set; }
        global::Windows.Foundation.Point Point { get; set; }
        double RotationAngle { get; set; }
        global::Windows.Foundation.Size Size { get; set; }
        SweepDirection SweepDirection { get; set; }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")][Guid("5BA7CCB3-5BC7-5038-99C5-93DC730230CF")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Media.IArcSegmentStatics))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    internal interface IArcSegmentStatics
    {
        global::Microsoft.UI.Xaml.DependencyProperty IsLargeArcProperty { get; }
        global::Microsoft.UI.Xaml.DependencyProperty PointProperty { get; }
        global::Microsoft.UI.Xaml.DependencyProperty RotationAngleProperty { get; }
        global::Microsoft.UI.Xaml.DependencyProperty SizeProperty { get; }
        global::Microsoft.UI.Xaml.DependencyProperty SweepDirectionProperty { get; }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")][Guid("0F36BADE-892E-51FE-B94A-3875E86FEAAE")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Media.IBezierSegment))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    internal interface IBezierSegment
    {
        global::Windows.Foundation.Point Point1 { get; set; }
        global::Windows.Foundation.Point Point2 { get; set; }
        global::Windows.Foundation.Point Point3 { get; set; }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")][Guid("98E74D5C-C97A-50B0-AE0E-D436DC9DF16D")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Media.IBezierSegmentStatics))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    internal interface IBezierSegmentStatics
    {
        global::Microsoft.UI.Xaml.DependencyProperty Point1Property { get; }
        global::Microsoft.UI.Xaml.DependencyProperty Point2Property { get; }
        global::Microsoft.UI.Xaml.DependencyProperty Point3Property { get; }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")][Guid("4B3A8983-27A2-592A-BDA4-270431EAE038")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Media.IBitmapCache))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    internal interface IBitmapCache
    {
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")][Guid("2DE3CB83-1329-5679-88F8-C822BC5442CB")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Media.IBrush))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    internal interface IBrush
    {
        double Opacity { get; set; }
        Transform RelativeTransform { get; set; }
        Transform Transform { get; set; }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")][Guid("B5258717-6C49-5BA5-87FD-35DF382647A5")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Media.IBrushFactory))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    internal interface IBrushFactory
    {
        Brush CreateInstance(object baseInterface, out object innerInterface);
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")][Guid("B6B08394-BACF-53DB-9AC7-BE1C693E3513")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Media.IBrushOverrides))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    internal interface IBrushOverrides
    {
        void PopulatePropertyInfoOverride(string propertyName, global::Microsoft.UI.Composition.AnimationPropertyInfo animationPropertyInfo);
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")][Guid("5B854F50-F818-5F01-91B0-28132D3F5957")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Media.IBrushStatics))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    internal interface IBrushStatics
    {
        global::Microsoft.UI.Xaml.DependencyProperty OpacityProperty { get; }
        global::Microsoft.UI.Xaml.DependencyProperty RelativeTransformProperty { get; }
        global::Microsoft.UI.Xaml.DependencyProperty TransformProperty { get; }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")][Guid("2FF1A1CB-0F48-53FD-B1DE-E2223DFB2FF6")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Media.ICacheMode))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    internal interface ICacheMode
    {
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")][Guid("E257811E-DCC5-51D8-829A-3E9400198A41")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Media.ICacheModeFactory))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    internal interface ICacheModeFactory
    {
        CacheMode CreateInstance(object baseInterface, out object innerInterface);
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")][Guid("55C5F8F3-20E4-5B80-A046-CE4D0F62F2FE")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Media.ICompositeTransform))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    internal interface ICompositeTransform
    {
        double CenterX { get; set; }
        double CenterY { get; set; }
        double Rotation { get; set; }
        double ScaleX { get; set; }
        double ScaleY { get; set; }
        double SkewX { get; set; }
        double SkewY { get; set; }
        double TranslateX { get; set; }
        double TranslateY { get; set; }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")][Guid("7701385B-8EAB-5071-BFA5-B453E1E52B43")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Media.ICompositeTransformStatics))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    internal interface ICompositeTransformStatics
    {
        global::Microsoft.UI.Xaml.DependencyProperty CenterXProperty { get; }
        global::Microsoft.UI.Xaml.DependencyProperty CenterYProperty { get; }
        global::Microsoft.UI.Xaml.DependencyProperty RotationProperty { get; }
        global::Microsoft.UI.Xaml.DependencyProperty ScaleXProperty { get; }
        global::Microsoft.UI.Xaml.DependencyProperty ScaleYProperty { get; }
        global::Microsoft.UI.Xaml.DependencyProperty SkewXProperty { get; }
        global::Microsoft.UI.Xaml.DependencyProperty SkewYProperty { get; }
        global::Microsoft.UI.Xaml.DependencyProperty TranslateXProperty { get; }
        global::Microsoft.UI.Xaml.DependencyProperty TranslateYProperty { get; }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")][Guid("7D938324-E3AD-597C-93F6-520725410E68")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Media.ICompositionTarget))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    internal interface ICompositionTarget
    {
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")][Guid("12A4BE6F-6DB1-5165-B622-D57AB782745B")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Media.ICompositionTargetStatics))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    internal interface ICompositionTargetStatics
    {
        global::Microsoft.UI.Composition.Compositor GetCompositorForCurrentThread();
        event global::System.EventHandler<RenderedEventArgs> Rendered;
        event global::System.EventHandler<object> Rendering;
        event global::System.EventHandler<object> SurfaceContentsLost;
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")][Guid("BFD9915B-82A6-5DF6-AFF0-A4824DDC1143")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Media.IDesktopAcrylicBackdrop))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.XamlContract), 262144u)]
    internal interface IDesktopAcrylicBackdrop
    {
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")][Guid("00922E6D-AE51-564A-BCE2-1973D5E463DD")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Media.IDesktopAcrylicBackdropFactory))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.XamlContract), 262144u)]
    internal interface IDesktopAcrylicBackdropFactory
    {
        DesktopAcrylicBackdrop CreateInstance(object baseInterface, out object innerInterface);
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")][Guid("ABABD262-D8E4-5B49-BCE9-0108A5209D45")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Media.IEllipseGeometry))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    internal interface IEllipseGeometry
    {
        global::Windows.Foundation.Point Center { get; set; }
        double RadiusX { get; set; }
        double RadiusY { get; set; }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")][Guid("E8A33C80-D72F-5248-A71F-4B70A0757F89")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Media.IEllipseGeometryStatics))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    internal interface IEllipseGeometryStatics
    {
        global::Microsoft.UI.Xaml.DependencyProperty CenterProperty { get; }
        global::Microsoft.UI.Xaml.DependencyProperty RadiusXProperty { get; }
        global::Microsoft.UI.Xaml.DependencyProperty RadiusYProperty { get; }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")][Guid("18FA5BC1-7294-527C-BB02-B213E0B3A2A3")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Media.IFontFamily))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    internal interface IFontFamily
    {
        string Source { get; }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")][Guid("61B88A77-D0F9-5E9E-8C28-EDA01FEDE22E")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Media.IFontFamilyFactory))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    internal interface IFontFamilyFactory
    {
        FontFamily CreateInstanceWithName(string familyName, object baseInterface, out object innerInterface);
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")][Guid("B3EADCEB-C471-58FE-93D0-D71B04A7FD54")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Media.IFontFamilyStatics))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    internal interface IFontFamilyStatics
    {
        FontFamily XamlAutoFontFamily { get; }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")][Guid("04EEDEEB-31E5-54C0-AE3F-8BD06645D339")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Media.IGeneralTransform))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    internal interface IGeneralTransform
    {
        global::Windows.Foundation.Point TransformPoint(global::Windows.Foundation.Point point);
        bool TryTransform(global::Windows.Foundation.Point inPoint, out global::Windows.Foundation.Point outPoint);
        global::Windows.Foundation.Rect TransformBounds(global::Windows.Foundation.Rect rect);
        GeneralTransform Inverse { get; }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")][Guid("2F1025A3-5391-5D1B-8382-3CAAA1D26A96")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Media.IGeneralTransformFactory))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    internal interface IGeneralTransformFactory
    {
        GeneralTransform CreateInstance(object baseInterface, out object innerInterface);
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")][Guid("CE8970F1-83F8-543F-9CF5-439C461601F1")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Media.IGeneralTransformOverrides))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    internal interface IGeneralTransformOverrides
    {
        bool TryTransformCore(global::Windows.Foundation.Point inPoint, out global::Windows.Foundation.Point outPoint);
        global::Windows.Foundation.Rect TransformBoundsCore(global::Windows.Foundation.Rect rect);
        GeneralTransform InverseCore { get; }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")][Guid("DC102DCC-3BE2-5414-8599-94B6E76EF39B")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Media.IGeometry))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    internal interface IGeometry
    {
        global::Windows.Foundation.Rect Bounds { get; }
        Transform Transform { get; set; }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")][Guid("4EDCD536-7949-548A-A9B1-6FF03B951CF3")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Media.IGeometryFactory))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    internal interface IGeometryFactory
    {
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")][Guid("B4DDE569-EA96-5883-914C-EBB7D818DD3A")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Media.IGeometryGroup))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    internal interface IGeometryGroup
    {
        GeometryCollection Children { get; set; }
        FillRule FillRule { get; set; }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")][Guid("56A23DA5-D015-568A-9F8B-11B125CFD9B4")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Media.IGeometryGroupStatics))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    internal interface IGeometryGroupStatics
    {
        global::Microsoft.UI.Xaml.DependencyProperty ChildrenProperty { get; }
        global::Microsoft.UI.Xaml.DependencyProperty FillRuleProperty { get; }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")][Guid("349F78D0-4978-5742-B7D2-B34EA2C95600")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Media.IGeometryStatics))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    internal interface IGeometryStatics
    {
        Geometry Empty { get; }
        double StandardFlatteningTolerance { get; }
        global::Microsoft.UI.Xaml.DependencyProperty TransformProperty { get; }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")][Guid("77C347FA-C4C4-5174-A945-65CAB3AA1C75")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Media.IGradientBrush))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    internal interface IGradientBrush
    {
        ColorInterpolationMode ColorInterpolationMode { get; set; }
        GradientStopCollection GradientStops { get; set; }
        BrushMappingMode MappingMode { get; set; }
        GradientSpreadMethod SpreadMethod { get; set; }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")][Guid("64FF6177-1EDA-565B-B7AA-AC50152E3136")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Media.IGradientBrushFactory))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    internal interface IGradientBrushFactory
    {
        GradientBrush CreateInstance(object baseInterface, out object innerInterface);
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")][Guid("4D3697D7-C6DB-501C-8FA2-DA30B8C8CA3B")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Media.IGradientBrushStatics))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    internal interface IGradientBrushStatics
    {
        global::Microsoft.UI.Xaml.DependencyProperty ColorInterpolationModeProperty { get; }
        global::Microsoft.UI.Xaml.DependencyProperty GradientStopsProperty { get; }
        global::Microsoft.UI.Xaml.DependencyProperty MappingModeProperty { get; }
        global::Microsoft.UI.Xaml.DependencyProperty SpreadMethodProperty { get; }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")][Guid("48BCB039-E8E1-5743-94C3-F766011D3B5D")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Media.IGradientStop))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    internal interface IGradientStop
    {
        global::Windows.UI.Color Color { get; set; }
        double Offset { get; set; }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")][Guid("0B566C1B-37DE-5BFD-B419-0F7C4C0A0523")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Media.IGradientStopStatics))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    internal interface IGradientStopStatics
    {
        global::Microsoft.UI.Xaml.DependencyProperty ColorProperty { get; }
        global::Microsoft.UI.Xaml.DependencyProperty OffsetProperty { get; }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")][Guid("EDCD91A3-A868-5BA6-9489-5B12B4C29D85")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Media.IImageBrush))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    internal interface IImageBrush
    {
        ImageSource ImageSource { get; set; }
        event global::Microsoft.UI.Xaml.ExceptionRoutedEventHandler ImageFailed;
        event global::Microsoft.UI.Xaml.RoutedEventHandler ImageOpened;
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")][Guid("CE8082DC-A505-5B4F-8861-79630F52C189")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Media.IImageBrushStatics))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    internal interface IImageBrushStatics
    {
        global::Microsoft.UI.Xaml.DependencyProperty ImageSourceProperty { get; }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")][Guid("6C2038F6-D6D5-55E9-9B9E-082F12DBFF60")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Media.IImageSource))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    internal interface IImageSource
    {
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")][Guid("0B1E64A3-E353-5901-B84B-AE9842AEA5CD")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Media.IImageSourceFactory))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    internal interface IImageSourceFactory
    {
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")][Guid("467EF3C5-BC43-50ED-BB23-16BE2C63356E")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Media.ILineGeometry))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    internal interface ILineGeometry
    {
        global::Windows.Foundation.Point EndPoint { get; set; }
        global::Windows.Foundation.Point StartPoint { get; set; }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")][Guid("CE0ECBF3-9389-5304-B7C8-5E610902F258")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Media.ILineGeometryStatics))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    internal interface ILineGeometryStatics
    {
        global::Microsoft.UI.Xaml.DependencyProperty EndPointProperty { get; }
        global::Microsoft.UI.Xaml.DependencyProperty StartPointProperty { get; }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")][Guid("0C618E54-D883-588C-8875-BD8DFD6A6A3E")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Media.ILineSegment))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    internal interface ILineSegment
    {
        global::Windows.Foundation.Point Point { get; set; }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")][Guid("C3EC48A9-B9C0-561F-9925-D1D1B2A6BAE6")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Media.ILineSegmentStatics))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    internal interface ILineSegmentStatics
    {
        global::Microsoft.UI.Xaml.DependencyProperty PointProperty { get; }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")][Guid("C0AB9638-1BD9-5FA4-9649-48CFA12F0D1E")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Media.ILinearGradientBrush))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    internal interface ILinearGradientBrush
    {
        global::Windows.Foundation.Point EndPoint { get; set; }
        global::Windows.Foundation.Point StartPoint { get; set; }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")][Guid("C0BA7DE3-CCFD-534C-882F-3AB39AE723F3")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Media.ILinearGradientBrushFactory))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    internal interface ILinearGradientBrushFactory
    {
        LinearGradientBrush CreateInstanceWithGradientStopCollectionAndAngle(GradientStopCollection gradientStopCollection, double angle);
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")][Guid("DF029E84-F6BE-5B7E-BA22-3B4E7A6BCEEE")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Media.ILinearGradientBrushStatics))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    internal interface ILinearGradientBrushStatics
    {
        global::Microsoft.UI.Xaml.DependencyProperty EndPointProperty { get; }
        global::Microsoft.UI.Xaml.DependencyProperty StartPointProperty { get; }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")][Guid("4121BB7C-48E8-542D-B950-3EA7E709C0D6")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Media.ILoadedImageSourceLoadCompletedEventArgs))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    internal interface ILoadedImageSourceLoadCompletedEventArgs
    {
        LoadedImageSourceLoadStatus Status { get; }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")][Guid("B5275540-1706-5851-95CC-498EE81FB183")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Media.ILoadedImageSurface))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    internal interface ILoadedImageSurface
    {
        global::Windows.Foundation.Size DecodedPhysicalSize { get; }
        global::Windows.Foundation.Size DecodedSize { get; }
        global::Windows.Foundation.Size NaturalSize { get; }
        event global::Windows.Foundation.TypedEventHandler<LoadedImageSurface, LoadedImageSourceLoadCompletedEventArgs> LoadCompleted;
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")][Guid("25D390C4-4E32-52C2-868F-F2EDE74EE442")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Media.ILoadedImageSurfaceStatics))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    internal interface ILoadedImageSurfaceStatics
    {
        [global::Windows.Foundation.Metadata.Overload(@"StartLoadFromUriWithSize")]
        LoadedImageSurface StartLoadFromUri(global::System.Uri uri, global::Windows.Foundation.Size desiredMaxSize);
        [global::Windows.Foundation.Metadata.Overload(@"StartLoadFromUri")]
        LoadedImageSurface StartLoadFromUri(global::System.Uri uri);
        [global::Windows.Foundation.Metadata.Overload(@"StartLoadFromStreamWithSize")]
        LoadedImageSurface StartLoadFromStream(global::Windows.Storage.Streams.IRandomAccessStream stream, global::Windows.Foundation.Size desiredMaxSize);
        [global::Windows.Foundation.Metadata.Overload(@"StartLoadFromStream")]
        LoadedImageSurface StartLoadFromStream(global::Windows.Storage.Streams.IRandomAccessStream stream);
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")][Guid("FC3338EF-F390-5BB1-932E-3B7C08788187")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Media.IMatrix3DProjection))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    internal interface IMatrix3DProjection
    {
        global::Microsoft.UI.Xaml.Media.Media3D.Matrix3D ProjectionMatrix { get; set; }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")][Guid("A5A7E267-7A5D-58EF-A8CD-B88EBDF82207")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Media.IMatrix3DProjectionStatics))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    internal interface IMatrix3DProjectionStatics
    {
        global::Microsoft.UI.Xaml.DependencyProperty ProjectionMatrixProperty { get; }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")][Guid("F03138E1-ADDD-59FA-B993-3EA69B888ACE")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Media.IMatrixTransform))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    internal interface IMatrixTransform
    {
        Matrix Matrix { get; set; }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")][Guid("D7DB9DE3-5071-5115-98FB-CCAD2FD46E44")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Media.IMatrixTransformStatics))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    internal interface IMatrixTransformStatics
    {
        global::Microsoft.UI.Xaml.DependencyProperty MatrixProperty { get; }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")][Guid("FE0FFB86-74B0-5031-ACCC-B34D0382A637")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Media.IMediaTransportControlsThumbnailRequestedEventArgs))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 196608u)]
    internal interface IMediaTransportControlsThumbnailRequestedEventArgs
    {
        void SetThumbnailImage(global::Windows.Storage.Streams.IInputStream source);
        global::Windows.Foundation.Deferral GetDeferral();
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")][Guid("C156A404-3DAC-593A-B1F3-7A33C289DC83")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Media.IMicaBackdrop))]
    [global::Microsoft.UI.Xaml.CustomAttributes.MUXPropertyChangedCallback(enable = true)]
    [global::Microsoft.UI.Xaml.CustomAttributes.MUXPropertyChangedCallbackMethodName(value = @"OnPropertyChanged")]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.XamlContract), 262144u)]
    internal interface IMicaBackdrop
    {
        global::Microsoft.UI.Composition.SystemBackdrops.MicaKind Kind { get; set; }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")][Guid("774379CE-74BD-59D4-849D-D99C4184D838")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Media.IMicaBackdropFactory))]
    [global::Microsoft.UI.Xaml.CustomAttributes.MUXPropertyChangedCallback(enable = true)]
    [global::Microsoft.UI.Xaml.CustomAttributes.MUXPropertyChangedCallbackMethodName(value = @"OnPropertyChanged")]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.XamlContract), 262144u)]
    internal interface IMicaBackdropFactory
    {
        MicaBackdrop CreateInstance(object baseInterface, out object innerInterface);
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")][Guid("A63ABDCE-C796-5509-9F4D-072BC1E599F1")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Media.IMicaBackdropStatics))]
    [global::Microsoft.UI.Xaml.CustomAttributes.MUXPropertyChangedCallback(enable = true)]
    [global::Microsoft.UI.Xaml.CustomAttributes.MUXPropertyChangedCallbackMethodName(value = @"OnPropertyChanged")]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.XamlContract), 262144u)]
    internal interface IMicaBackdropStatics
    {
        global::Microsoft.UI.Xaml.DependencyProperty KindProperty { get; }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")][Guid("0EE00712-BF65-5F27-9C06-14ABDF6656D7")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Media.IPathFigure))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    internal interface IPathFigure
    {
        bool IsClosed { get; set; }
        bool IsFilled { get; set; }
        PathSegmentCollection Segments { get; set; }
        global::Windows.Foundation.Point StartPoint { get; set; }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")][Guid("93BC33C4-879A-5EDB-B8D7-7ECB861A7314")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Media.IPathFigureStatics))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    internal interface IPathFigureStatics
    {
        global::Microsoft.UI.Xaml.DependencyProperty IsClosedProperty { get; }
        global::Microsoft.UI.Xaml.DependencyProperty IsFilledProperty { get; }
        global::Microsoft.UI.Xaml.DependencyProperty SegmentsProperty { get; }
        global::Microsoft.UI.Xaml.DependencyProperty StartPointProperty { get; }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")][Guid("11B9D95D-D3D9-5337-A05C-73A27A2B5124")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Media.IPathGeometry))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    internal interface IPathGeometry
    {
        PathFigureCollection Figures { get; set; }
        FillRule FillRule { get; set; }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")][Guid("D7F408FE-6C3A-5CCE-91CC-C5A95D4B345A")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Media.IPathGeometryStatics))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    internal interface IPathGeometryStatics
    {
        global::Microsoft.UI.Xaml.DependencyProperty FiguresProperty { get; }
        global::Microsoft.UI.Xaml.DependencyProperty FillRuleProperty { get; }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")][Guid("B922EBBE-08F0-57E9-8785-7E57097F3BD4")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Media.IPathSegment))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    internal interface IPathSegment
    {
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")][Guid("0559A4FF-AC4B-5BB7-B541-D373960E083B")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Media.IPathSegmentFactory))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    internal interface IPathSegmentFactory
    {
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")][Guid("D3E22836-0322-5D75-941C-A5FFB05192B2")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Media.IPlaneProjection))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    internal interface IPlaneProjection
    {
        double CenterOfRotationX { get; set; }
        double CenterOfRotationY { get; set; }
        double CenterOfRotationZ { get; set; }
        double GlobalOffsetX { get; set; }
        double GlobalOffsetY { get; set; }
        double GlobalOffsetZ { get; set; }
        double LocalOffsetX { get; set; }
        double LocalOffsetY { get; set; }
        double LocalOffsetZ { get; set; }
        global::Microsoft.UI.Xaml.Media.Media3D.Matrix3D ProjectionMatrix { get; }
        double RotationX { get; set; }
        double RotationY { get; set; }
        double RotationZ { get; set; }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")][Guid("96D86C18-90DD-564A-828A-8735E4219B1D")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Media.IPlaneProjectionStatics))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    internal interface IPlaneProjectionStatics
    {
        global::Microsoft.UI.Xaml.DependencyProperty CenterOfRotationXProperty { get; }
        global::Microsoft.UI.Xaml.DependencyProperty CenterOfRotationYProperty { get; }
        global::Microsoft.UI.Xaml.DependencyProperty CenterOfRotationZProperty { get; }
        global::Microsoft.UI.Xaml.DependencyProperty GlobalOffsetXProperty { get; }
        global::Microsoft.UI.Xaml.DependencyProperty GlobalOffsetYProperty { get; }
        global::Microsoft.UI.Xaml.DependencyProperty GlobalOffsetZProperty { get; }
        global::Microsoft.UI.Xaml.DependencyProperty LocalOffsetXProperty { get; }
        global::Microsoft.UI.Xaml.DependencyProperty LocalOffsetYProperty { get; }
        global::Microsoft.UI.Xaml.DependencyProperty LocalOffsetZProperty { get; }
        global::Microsoft.UI.Xaml.DependencyProperty ProjectionMatrixProperty { get; }
        global::Microsoft.UI.Xaml.DependencyProperty RotationXProperty { get; }
        global::Microsoft.UI.Xaml.DependencyProperty RotationYProperty { get; }
        global::Microsoft.UI.Xaml.DependencyProperty RotationZProperty { get; }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")][Guid("D7F760A0-B93A-562A-8118-6330ED22C307")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Media.IPolyBezierSegment))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    internal interface IPolyBezierSegment
    {
        PointCollection Points { get; set; }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")][Guid("738EF089-A80F-53E0-816F-F787A4461907")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Media.IPolyBezierSegmentStatics))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    internal interface IPolyBezierSegmentStatics
    {
        global::Microsoft.UI.Xaml.DependencyProperty PointsProperty { get; }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")][Guid("426EF287-0287-536F-AD9E-6A05ECBB323A")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Media.IPolyLineSegment))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    internal interface IPolyLineSegment
    {
        PointCollection Points { get; set; }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")][Guid("CF54E568-101A-5349-9189-6F9A1E7F5280")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Media.IPolyLineSegmentStatics))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    internal interface IPolyLineSegmentStatics
    {
        global::Microsoft.UI.Xaml.DependencyProperty PointsProperty { get; }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")][Guid("56372F4C-C531-5C3E-B0E0-1645F5A8D872")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Media.IPolyQuadraticBezierSegment))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    internal interface IPolyQuadraticBezierSegment
    {
        PointCollection Points { get; set; }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")][Guid("7EB6374D-CD30-5507-B2AB-C4E3A7DC60BF")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Media.IPolyQuadraticBezierSegmentStatics))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    internal interface IPolyQuadraticBezierSegmentStatics
    {
        global::Microsoft.UI.Xaml.DependencyProperty PointsProperty { get; }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")][Guid("C95364B3-6058-5EE5-9E28-D38B7679FCD4")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Media.IProjection))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    internal interface IProjection
    {
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")][Guid("870EA34F-DB61-5B75-89AD-E0480C802937")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Media.IProjectionFactory))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    internal interface IProjectionFactory
    {
        Projection CreateInstance(object baseInterface, out object innerInterface);
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")][Guid("6048ABE4-7A12-5195-BD61-71DFD0361C38")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Media.IQuadraticBezierSegment))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    internal interface IQuadraticBezierSegment
    {
        global::Windows.Foundation.Point Point1 { get; set; }
        global::Windows.Foundation.Point Point2 { get; set; }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")][Guid("4D56EA65-0A1A-528A-A5B6-41DA03AC71F4")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Media.IQuadraticBezierSegmentStatics))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    internal interface IQuadraticBezierSegmentStatics
    {
        global::Microsoft.UI.Xaml.DependencyProperty Point1Property { get; }
        global::Microsoft.UI.Xaml.DependencyProperty Point2Property { get; }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")][Guid("5D493CE1-B844-546A-B772-B3BCBA7E98EE")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Media.IRadialGradientBrush))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.XamlContract), 65536u)]
    internal interface IRadialGradientBrush
    {
        global::Windows.Foundation.Point Center { get; set; }
        global::Windows.Foundation.Point GradientOrigin { get; set; }
        global::Windows.Foundation.Collections.IObservableVector<GradientStop> GradientStops { get; }
        global::Microsoft.UI.Composition.CompositionColorSpace InterpolationSpace { get; set; }
        BrushMappingMode MappingMode { get; set; }
        double RadiusX { get; set; }
        double RadiusY { get; set; }
        GradientSpreadMethod SpreadMethod { get; set; }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")][Guid("D90BA26E-9E67-54BD-A2D9-61C8F9F1D433")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Media.IRadialGradientBrushFactory))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.XamlContract), 65536u)]
    internal interface IRadialGradientBrushFactory
    {
        RadialGradientBrush CreateInstance(object baseInterface, out object innerInterface);
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")][Guid("F275A0B8-66F9-5B7D-A415-7EDA65FE6DD3")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Media.IRadialGradientBrushStatics))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.XamlContract), 65536u)]
    internal interface IRadialGradientBrushStatics
    {
        global::Microsoft.UI.Xaml.DependencyProperty CenterProperty { get; }
        global::Microsoft.UI.Xaml.DependencyProperty GradientOriginProperty { get; }
        global::Microsoft.UI.Xaml.DependencyProperty InterpolationSpaceProperty { get; }
        global::Microsoft.UI.Xaml.DependencyProperty MappingModeProperty { get; }
        global::Microsoft.UI.Xaml.DependencyProperty RadiusXProperty { get; }
        global::Microsoft.UI.Xaml.DependencyProperty RadiusYProperty { get; }
        global::Microsoft.UI.Xaml.DependencyProperty SpreadMethodProperty { get; }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")][Guid("B6143890-A5F5-54E0-AB42-D88BAB451F04")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Media.IRectangleGeometry))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    internal interface IRectangleGeometry
    {
        global::Windows.Foundation.Rect Rect { get; set; }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")][Guid("1AE7AC26-8A8B-55A5-B035-586E2B642919")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Media.IRectangleGeometryStatics))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    internal interface IRectangleGeometryStatics
    {
        global::Microsoft.UI.Xaml.DependencyProperty RectProperty { get; }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")][Guid("B268B885-118D-5B66-8099-3B6BB8644726")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Media.IRenderedEventArgs))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    internal interface IRenderedEventArgs
    {
        global::System.TimeSpan FrameDuration { get; }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")][Guid("A67C8F8D-1885-5FC9-975C-901224F79B1E")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Media.IRenderingEventArgs))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    internal interface IRenderingEventArgs
    {
        global::System.TimeSpan RenderingTime { get; }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")][Guid("3741D912-FC83-5C92-A22F-EFC29588B373")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Media.IRevealBackgroundBrush))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.XamlContract), 589824u)]
    [global::Windows.Foundation.Metadata.Experimental]
    internal interface IRevealBackgroundBrush
    {
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")][Guid("7E6F2B0A-E70D-529F-8097-43E023F2943B")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Media.IRevealBackgroundBrushFactory))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.XamlContract), 589824u)]
    [global::Windows.Foundation.Metadata.Experimental]
    internal interface IRevealBackgroundBrushFactory
    {
        RevealBackgroundBrush CreateInstance(object baseInterface, out object innerInterface);
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")][Guid("F85DBFCB-2EC6-5C73-A8BE-3864C980B917")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Media.IRevealBorderBrush))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.XamlContract), 589824u)]
    [global::Windows.Foundation.Metadata.Experimental]
    internal interface IRevealBorderBrush
    {
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")][Guid("C677BDC2-F045-532C-BB13-3CEEE19143B2")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Media.IRevealBorderBrushFactory))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.XamlContract), 589824u)]
    [global::Windows.Foundation.Metadata.Experimental]
    internal interface IRevealBorderBrushFactory
    {
        RevealBorderBrush CreateInstance(object baseInterface, out object innerInterface);
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")][Guid("30347330-A703-5086-BD82-4E28CE833233")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Media.IRevealBrush))]
    [global::Microsoft.UI.Xaml.CustomAttributes.MUXPropertyChangedCallback(enable = true)]
    [global::Microsoft.UI.Xaml.CustomAttributes.MUXPropertyChangedCallbackMethodName(value = @"OnPropertyChanged")]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.XamlContract), 589824u)]
    [global::Windows.Foundation.Metadata.Experimental]
    internal interface IRevealBrush
    {
        bool AlwaysUseFallback { get; set; }
        global::Windows.UI.Color Color { get; set; }
        global::Microsoft.UI.Xaml.ApplicationTheme TargetTheme { get; set; }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")][Guid("46A94F5B-8ABD-5571-B049-7F76E3F967C9")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Media.IRevealBrushProtectedFactory))]
    [global::Microsoft.UI.Xaml.CustomAttributes.MUXPropertyChangedCallback(enable = true)]
    [global::Microsoft.UI.Xaml.CustomAttributes.MUXPropertyChangedCallbackMethodName(value = @"OnPropertyChanged")]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.XamlContract), 589824u)]
    [global::Windows.Foundation.Metadata.Experimental]
    internal interface IRevealBrushProtectedFactory
    {
        RevealBrush CreateInstance(object baseInterface, out object innerInterface);
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")][Guid("F44D7CCB-7A1E-5D64-AB82-A6E5290BE8D1")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Media.IRevealBrushStatics))]
    [global::Microsoft.UI.Xaml.CustomAttributes.MUXPropertyChangedCallback(enable = true)]
    [global::Microsoft.UI.Xaml.CustomAttributes.MUXPropertyChangedCallbackMethodName(value = @"OnPropertyChanged")]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.XamlContract), 589824u)]
    [global::Windows.Foundation.Metadata.Experimental]
    internal interface IRevealBrushStatics
    {
        void SetState(global::Microsoft.UI.Xaml.UIElement element, RevealBrushState value);
        RevealBrushState GetState(global::Microsoft.UI.Xaml.UIElement element);
        global::Microsoft.UI.Xaml.DependencyProperty AlwaysUseFallbackProperty { get; }
        global::Microsoft.UI.Xaml.DependencyProperty ColorProperty { get; }
        global::Microsoft.UI.Xaml.DependencyProperty StateProperty { get; }
        global::Microsoft.UI.Xaml.DependencyProperty TargetThemeProperty { get; }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")][Guid("D4686E7C-A374-5CAC-8927-0EF07C5B254D")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Media.IRotateTransform))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    internal interface IRotateTransform
    {
        double Angle { get; set; }
        double CenterX { get; set; }
        double CenterY { get; set; }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")][Guid("8EC4C662-04F8-51D7-BCB2-17F10C2FAA38")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Media.IRotateTransformStatics))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    internal interface IRotateTransformStatics
    {
        global::Microsoft.UI.Xaml.DependencyProperty AngleProperty { get; }
        global::Microsoft.UI.Xaml.DependencyProperty CenterXProperty { get; }
        global::Microsoft.UI.Xaml.DependencyProperty CenterYProperty { get; }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")][Guid("94B064A4-34F0-5EF9-8B67-444F5699F52A")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Media.IScaleTransform))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    internal interface IScaleTransform
    {
        double CenterX { get; set; }
        double CenterY { get; set; }
        double ScaleX { get; set; }
        double ScaleY { get; set; }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")][Guid("76485BD5-A5BF-5790-A837-8193C84DF353")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Media.IScaleTransformStatics))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    internal interface IScaleTransformStatics
    {
        global::Microsoft.UI.Xaml.DependencyProperty CenterXProperty { get; }
        global::Microsoft.UI.Xaml.DependencyProperty CenterYProperty { get; }
        global::Microsoft.UI.Xaml.DependencyProperty ScaleXProperty { get; }
        global::Microsoft.UI.Xaml.DependencyProperty ScaleYProperty { get; }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")][Guid("CC12FD6A-50AA-5EB3-9A0E-B938B454C439")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Media.IShadow))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    internal interface IShadow
    {
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")][Guid("C9115FBB-FCC3-52BF-B8EE-C348102A46E0")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Media.IShadowFactory))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    internal interface IShadowFactory
    {
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")][Guid("230ABAA6-A9B6-5210-873F-36BEA29D7C06")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Media.ISkewTransform))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    internal interface ISkewTransform
    {
        double AngleX { get; set; }
        double AngleY { get; set; }
        double CenterX { get; set; }
        double CenterY { get; set; }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")][Guid("93265150-53D0-52E3-88A3-3D93E2ED861A")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Media.ISkewTransformStatics))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    internal interface ISkewTransformStatics
    {
        global::Microsoft.UI.Xaml.DependencyProperty AngleXProperty { get; }
        global::Microsoft.UI.Xaml.DependencyProperty AngleYProperty { get; }
        global::Microsoft.UI.Xaml.DependencyProperty CenterXProperty { get; }
        global::Microsoft.UI.Xaml.DependencyProperty CenterYProperty { get; }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")][Guid("B3865C31-37C8-55C1-8A72-D41C67642E2A")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Media.ISolidColorBrush))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    internal interface ISolidColorBrush
    {
        global::Windows.UI.Color Color { get; set; }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")][Guid("7B559384-4DAA-54F4-91EF-33A23FD816CA")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Media.ISolidColorBrushFactory))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    internal interface ISolidColorBrushFactory
    {
        SolidColorBrush CreateInstanceWithColor(global::Windows.UI.Color color);
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")][Guid("6BC16DA0-C4E6-59B8-995B-B31E48424C07")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Media.ISolidColorBrushStatics))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    internal interface ISolidColorBrushStatics
    {
        global::Microsoft.UI.Xaml.DependencyProperty ColorProperty { get; }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")][Guid("5AEED5C4-37AC-5852-B73F-1B76EBC3205F")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Media.ISystemBackdrop))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 262144u)]
    internal interface ISystemBackdrop
    {
        global::Microsoft.UI.Composition.SystemBackdrops.SystemBackdropConfiguration GetDefaultSystemBackdropConfiguration(global::Microsoft.UI.Composition.ICompositionSupportsSystemBackdrop target, global::Microsoft.UI.Xaml.XamlRoot xamlRoot);
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")][Guid("1E07656B-FAD2-5B29-913F-B6748BC45942")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Media.ISystemBackdropFactory))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 262144u)]
    internal interface ISystemBackdropFactory
    {
        SystemBackdrop CreateInstance(object baseInterface, out object innerInterface);
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")][Guid("EB1F5399-CAD7-5611-B637-09D76A07E708")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Media.ISystemBackdropOverrides))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 262144u)]
    internal interface ISystemBackdropOverrides
    {
        void OnTargetConnected(global::Microsoft.UI.Composition.ICompositionSupportsSystemBackdrop connectedTarget, global::Microsoft.UI.Xaml.XamlRoot xamlRoot);
        void OnTargetDisconnected(global::Microsoft.UI.Composition.ICompositionSupportsSystemBackdrop disconnectedTarget);
        void OnDefaultSystemBackdropConfigurationChanged(global::Microsoft.UI.Composition.ICompositionSupportsSystemBackdrop target, global::Microsoft.UI.Xaml.XamlRoot xamlRoot);
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")][Guid("C264208A-D1F4-58AE-8A88-FC59148BEE69")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Media.IThemeShadow))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    internal interface IThemeShadow
    {
        global::Microsoft.UI.Xaml.UIElementWeakCollection Receivers { get; }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")][Guid("704A9C96-76A0-569E-8CEB-34E92A23FE11")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Media.IThemeShadowFactory))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    internal interface IThemeShadowFactory
    {
        ThemeShadow CreateInstance(object baseInterface, out object innerInterface);
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")][Guid("EE46060D-CABC-505D-883C-75D2E0E45875")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Media.ITileBrush))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    internal interface ITileBrush
    {
        AlignmentX AlignmentX { get; set; }
        AlignmentY AlignmentY { get; set; }
        Stretch Stretch { get; set; }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")][Guid("8542E5E6-5177-506F-8A3B-AA7DA651F099")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Media.ITileBrushFactory))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    internal interface ITileBrushFactory
    {
        TileBrush CreateInstance(object baseInterface, out object innerInterface);
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")][Guid("F402197B-9047-5F8A-90BC-6F5D8C748A5F")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Media.ITileBrushStatics))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    internal interface ITileBrushStatics
    {
        global::Microsoft.UI.Xaml.DependencyProperty AlignmentXProperty { get; }
        global::Microsoft.UI.Xaml.DependencyProperty AlignmentYProperty { get; }
        global::Microsoft.UI.Xaml.DependencyProperty StretchProperty { get; }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")][Guid("92A8DEE5-1413-56B9-8CCA-3C46918FDE1B")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Media.ITransform))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    internal interface ITransform
    {
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")][Guid("7DA293F9-B82E-5D15-B623-C08210CBB640")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Media.ITransformFactory))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    internal interface ITransformFactory
    {
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")][Guid("17C55F3B-899C-588F-8BD4-40FA3A5FCB04")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Media.ITransformGroup))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    internal interface ITransformGroup
    {
        TransformCollection Children { get; set; }
        Matrix Value { get; }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")][Guid("8F1508F6-7DCF-53D5-BBC0-D8FCD96D7399")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Media.ITransformGroupStatics))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    internal interface ITransformGroupStatics
    {
        global::Microsoft.UI.Xaml.DependencyProperty ChildrenProperty { get; }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")][Guid("CFA21CA9-B79F-5450-B459-A96C48CB2C8F")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Media.ITranslateTransform))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    internal interface ITranslateTransform
    {
        double X { get; set; }
        double Y { get; set; }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")][Guid("1342EB11-5A6E-5263-AB3E-9B672A86FC0C")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Media.ITranslateTransformStatics))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    internal interface ITranslateTransformStatics
    {
        global::Microsoft.UI.Xaml.DependencyProperty XProperty { get; }
        global::Microsoft.UI.Xaml.DependencyProperty YProperty { get; }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")][Guid("5F69AC1E-6504-5E3F-A11C-87684C1DB814")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Media.IVisualTreeHelper))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    internal interface IVisualTreeHelper
    {
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")][Guid("5AECE43C-7651-5BB5-855C-2198496E455E")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Media.IVisualTreeHelperStatics))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    internal interface IVisualTreeHelperStatics
    {
        [global::Windows.Foundation.Metadata.DefaultOverload]
        [global::Windows.Foundation.Metadata.Overload(@"FindElementsInHostCoordinatesPoint")]
        global::System.Collections.Generic.IEnumerable<global::Microsoft.UI.Xaml.UIElement> FindElementsInHostCoordinates(global::Windows.Foundation.Point intersectingPoint, global::Microsoft.UI.Xaml.UIElement subtree);
        [global::Windows.Foundation.Metadata.Overload(@"FindElementsInHostCoordinatesRect")]
        global::System.Collections.Generic.IEnumerable<global::Microsoft.UI.Xaml.UIElement> FindElementsInHostCoordinates(global::Windows.Foundation.Rect intersectingRect, global::Microsoft.UI.Xaml.UIElement subtree);
        [global::Windows.Foundation.Metadata.DefaultOverload]
        [global::Windows.Foundation.Metadata.Overload(@"FindAllElementsInHostCoordinatesPoint")]
        global::System.Collections.Generic.IEnumerable<global::Microsoft.UI.Xaml.UIElement> FindElementsInHostCoordinates(global::Windows.Foundation.Point intersectingPoint, global::Microsoft.UI.Xaml.UIElement subtree, bool includeAllElements);
        [global::Windows.Foundation.Metadata.Overload(@"FindAllElementsInHostCoordinatesRect")]
        global::System.Collections.Generic.IEnumerable<global::Microsoft.UI.Xaml.UIElement> FindElementsInHostCoordinates(global::Windows.Foundation.Rect intersectingRect, global::Microsoft.UI.Xaml.UIElement subtree, bool includeAllElements);
        global::Microsoft.UI.Xaml.DependencyObject GetChild(global::Microsoft.UI.Xaml.DependencyObject reference, int childIndex);
        int GetChildrenCount(global::Microsoft.UI.Xaml.DependencyObject reference);
        global::Microsoft.UI.Xaml.DependencyObject GetParent(global::Microsoft.UI.Xaml.DependencyObject reference);
        void DisconnectChildrenRecursive(global::Microsoft.UI.Xaml.UIElement element);
        global::System.Collections.Generic.IReadOnlyList<global::Microsoft.UI.Xaml.Controls.Primitives.Popup> GetOpenPopups(global::Microsoft.UI.Xaml.Window window);
        global::System.Collections.Generic.IReadOnlyList<global::Microsoft.UI.Xaml.Controls.Primitives.Popup> GetOpenPopupsForXamlRoot(global::Microsoft.UI.Xaml.XamlRoot xamlRoot);
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")][Guid("FEAEAD28-5CD0-5E58-BCEA-8670F832ACA9")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Media.IXamlCompositionBrushBase))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    internal interface IXamlCompositionBrushBase
    {
        global::Windows.UI.Color FallbackColor { get; set; }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")][Guid("B1626D56-0F6F-5416-ADA4-5C8105D3F082")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Media.IXamlCompositionBrushBaseFactory))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    internal interface IXamlCompositionBrushBaseFactory
    {
        XamlCompositionBrushBase CreateInstance(object baseInterface, out object innerInterface);
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")][Guid("8881B559-54A0-56C4-A79A-135152FB1DFA")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Media.IXamlCompositionBrushBaseOverrides))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    internal interface IXamlCompositionBrushBaseOverrides
    {
        void OnConnected();
        void OnDisconnected();
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")][Guid("6617E1A5-E27A-5B95-B03E-6758B58F92A0")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Media.IXamlCompositionBrushBaseProtected))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    internal interface IXamlCompositionBrushBaseProtected
    {
        global::Microsoft.UI.Composition.CompositionBrush CompositionBrush { get; set; }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")][Guid("3EED6E16-C386-5A1C-B70D-EF1C0015E691")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Media.IXamlCompositionBrushBaseStatics))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    internal interface IXamlCompositionBrushBaseStatics
    {
        global::Microsoft.UI.Xaml.DependencyProperty FallbackColorProperty { get; }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")][Guid("DCD20139-8CD5-5DA5-A25C-2B7B813D8D58")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Media.IXamlLight))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    internal interface IXamlLight
    {
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")][Guid("76DA6306-96FC-553E-BB39-9A4801D06F48")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Media.IXamlLightFactory))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    internal interface IXamlLightFactory
    {
        XamlLight CreateInstance(object baseInterface, out object innerInterface);
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")][Guid("696D4F30-92EE-540D-AD70-33D4489514D0")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Media.IXamlLightOverrides))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    internal interface IXamlLightOverrides
    {
        string GetId();
        void OnConnected(global::Microsoft.UI.Xaml.UIElement newElement);
        void OnDisconnected(global::Microsoft.UI.Xaml.UIElement oldElement);
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")][Guid("C307BF12-FDAF-54CA-A631-AD0E86263C6E")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Media.IXamlLightProtected))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    internal interface IXamlLightProtected
    {
        global::Microsoft.UI.Composition.CompositionLight CompositionLight { get; set; }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")][Guid("A2D8EA26-26FF-5374-B1DD-F232D5604F6A")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Media.IXamlLightStatics))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    internal interface IXamlLightStatics
    {
        void AddTargetElement(string lightId, global::Microsoft.UI.Xaml.UIElement element);
        void RemoveTargetElement(string lightId, global::Microsoft.UI.Xaml.UIElement element);
        void AddTargetBrush(string lightId, Brush brush);
        void RemoveTargetBrush(string lightId, Brush brush);
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")]
    [global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Media.ImageBrush))]
    [global::ABI.Microsoft.UI.Xaml.Media.ImageBrushRcwFactory]
    [global::WinRT.ProjectedRuntimeClass(typeof(IImageBrush))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    public sealed class ImageBrush : TileBrush, global::System.Runtime.InteropServices.ICustomQueryInterface, IWinRTObject, IEquatable<ImageBrush>
    {
        private IntPtr ThisPtr => _inner == null ? (((IWinRTObject)this).NativeObject).ThisPtr : _inner.ThisPtr;

        private readonly IObjectReference _inner = null;



        private IObjectReference _objRef_global__Microsoft_UI_Xaml_Media_IImageBrush => _inner;


        private static volatile IObjectReference ___objRef_global__Microsoft_UI_Xaml_Media_ImageBrush;
        private static IObjectReference _objRef_global__Microsoft_UI_Xaml_Media_ImageBrush
        {
            get
            { 
                var factory = ___objRef_global__Microsoft_UI_Xaml_Media_ImageBrush;
                if (factory != null && factory.IsInCurrentContext)
                {
                    return factory;
                }
                else
                {
                    return ___objRef_global__Microsoft_UI_Xaml_Media_ImageBrush = ActivationFactory.Get("Microsoft.UI.Xaml.Media.ImageBrush");
                }
            }
        }

        public ImageBrush() :base(global::WinRT.DerivedComposed.Instance)
        {
            _inner = global::ABI.WinRT.Interop.IActivationFactoryMethods.ActivateInstanceUnsafe(_objRef_global__Microsoft_UI_Xaml_Media_ImageBrush, global::ABI.Microsoft.UI.Xaml.Media.IImageBrushMethods.IID);
            ComWrappersSupport.RegisterObjectForInterface(this, ThisPtr);
            ComWrappersHelper.Init(_inner, false);

        }

        public static new I As<I>() => ActivationFactory.Get("Microsoft.UI.Xaml.Media.ImageBrush").AsInterface<I>();

        private static volatile IObjectReference ___objRef_global__Microsoft_UI_Xaml_Media_IImageBrushStatics;
        private static IObjectReference _objRef_global__Microsoft_UI_Xaml_Media_IImageBrushStatics
        {
            get
            { 
                var factory = ___objRef_global__Microsoft_UI_Xaml_Media_IImageBrushStatics;
                if (factory != null && factory.IsInCurrentContext)
                {
                    return factory;
                }
                else
                {
                    return ___objRef_global__Microsoft_UI_Xaml_Media_IImageBrushStatics = ActivationFactory.Get("Microsoft.UI.Xaml.Media.ImageBrush", global::ABI.Microsoft.UI.Xaml.Media.IImageBrushStaticsMethods.IID);
                }
            }
        }

        public static global::Microsoft.UI.Xaml.DependencyProperty ImageSourceProperty => global::ABI.Microsoft.UI.Xaml.Media.IImageBrushStaticsMethods.get_ImageSourceProperty(_objRef_global__Microsoft_UI_Xaml_Media_IImageBrushStatics);

        public static new ImageBrush FromAbi(IntPtr thisPtr)
        {
            if (thisPtr == IntPtr.Zero) return null;
            return MarshalInspectable<ImageBrush>.FromAbi(thisPtr);
        }

        internal ImageBrush(IObjectReference objRef)
            : base(global::WinRT.DerivedComposed.Instance)

        {
            _inner = objRef.As(global::ABI.Microsoft.UI.Xaml.Media.IImageBrushMethods.IID);

        }


        public static bool operator ==(ImageBrush x, ImageBrush y) => (x?.ThisPtr ?? IntPtr.Zero) == (y?.ThisPtr ?? IntPtr.Zero);
        public static bool operator !=(ImageBrush x, ImageBrush y) => !(x == y);
        public bool Equals(ImageBrush other) => this == other;
        public override bool Equals(object obj) => obj is ImageBrush that && this == that;
        public override int GetHashCode() => ThisPtr.GetHashCode();


        bool IWinRTObject.HasUnwrappableNativeObject => true;
        IObjectReference IWinRTObject.NativeObject => _inner;

        private struct InterfaceTag<I>{};


        public event global::Microsoft.UI.Xaml.ExceptionRoutedEventHandler ImageFailed
        {
            add => global::ABI.Microsoft.UI.Xaml.Media.IImageBrushMethods.Get_ImageFailed2(_objRef_global__Microsoft_UI_Xaml_Media_IImageBrush, (IWinRTObject)this).Subscribe(value);
            remove => global::ABI.Microsoft.UI.Xaml.Media.IImageBrushMethods.Get_ImageFailed2(_objRef_global__Microsoft_UI_Xaml_Media_IImageBrush, (IWinRTObject)this).Unsubscribe(value);
        }

        public event global::Microsoft.UI.Xaml.RoutedEventHandler ImageOpened
        {
            add => global::ABI.Microsoft.UI.Xaml.Media.IImageBrushMethods.Get_ImageOpened2(_objRef_global__Microsoft_UI_Xaml_Media_IImageBrush, (IWinRTObject)this).Subscribe(value);
            remove => global::ABI.Microsoft.UI.Xaml.Media.IImageBrushMethods.Get_ImageOpened2(_objRef_global__Microsoft_UI_Xaml_Media_IImageBrush, (IWinRTObject)this).Unsubscribe(value);
        }

        public ImageSource ImageSource
        {
            get => global::ABI.Microsoft.UI.Xaml.Media.IImageBrushMethods.get_ImageSource(_objRef_global__Microsoft_UI_Xaml_Media_IImageBrush);
            set => global::ABI.Microsoft.UI.Xaml.Media.IImageBrushMethods.set_ImageSource(_objRef_global__Microsoft_UI_Xaml_Media_IImageBrush, value);
        }

        protected override bool IsOverridableInterface(Guid iid) => base.IsOverridableInterface(iid);

        global::System.Runtime.InteropServices.CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(ref Guid iid, out IntPtr ppv)
        {
            ppv = IntPtr.Zero;
            if (IsOverridableInterface(iid) || global::WinRT.Interop.IID.IID_IInspectable == iid)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
            }

            if (((IWinRTObject)this).NativeObject.TryAs(iid, out ppv) >= 0)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.Handled;
            }

            return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
        }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")]
    [global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Media.ImageSource))]
    [global::ABI.Microsoft.UI.Xaml.Media.ImageSourceRcwFactory]
    [global::WinRT.ProjectedRuntimeClass(typeof(IImageSource))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    public class ImageSource : global::Microsoft.UI.Xaml.DependencyObject, global::System.Runtime.InteropServices.ICustomQueryInterface, IWinRTObject, IEquatable<ImageSource>
    {
        private IntPtr ThisPtr => _inner == null ? (((IWinRTObject)this).NativeObject).ThisPtr : _inner.ThisPtr;

        private readonly IObjectReference _inner = null;




        private volatile IObjectReference ___objRef_global__Microsoft_UI_Xaml_Media_IImageSource;
        private IObjectReference Make___objRef_global__Microsoft_UI_Xaml_Media_IImageSource()
        {
            global::System.Threading.Interlocked.CompareExchange(ref ___objRef_global__Microsoft_UI_Xaml_Media_IImageSource, ((IWinRTObject)this).NativeObject.As<IUnknownVftbl>(global::ABI.Microsoft.UI.Xaml.Media.IImageSourceMethods.IID), null);
            return ___objRef_global__Microsoft_UI_Xaml_Media_IImageSource;
        }
        private IObjectReference _objRef_global__Microsoft_UI_Xaml_Media_IImageSource => ___objRef_global__Microsoft_UI_Xaml_Media_IImageSource ?? Make___objRef_global__Microsoft_UI_Xaml_Media_IImageSource();



        private static class _IImageSourceFactoryMethods
        {}

        private static volatile IObjectReference ___objRef_global__Microsoft_UI_Xaml_Media_IImageSourceFactory;
        private static IObjectReference _objRef_global__Microsoft_UI_Xaml_Media_IImageSourceFactory
        {
            get
            { 
                var factory = ___objRef_global__Microsoft_UI_Xaml_Media_IImageSourceFactory;
                if (factory != null && factory.IsInCurrentContext)
                {
                    return factory;
                }
                else
                {
                    return ___objRef_global__Microsoft_UI_Xaml_Media_IImageSourceFactory = ActivationFactory.Get("Microsoft.UI.Xaml.Media.ImageSource", global::ABI.Microsoft.UI.Xaml.Media.IImageSourceFactoryMethods.IID);
                }
            }
        }

        public static new ImageSource FromAbi(IntPtr thisPtr)
        {
            if (thisPtr == IntPtr.Zero) return null;
            return MarshalInspectable<ImageSource>.FromAbi(thisPtr);
        }

        protected internal ImageSource(IObjectReference objRef)
            : base(global::WinRT.DerivedComposed.Instance)

        {
            _inner = objRef.As(global::ABI.Microsoft.UI.Xaml.Media.IImageSourceMethods.IID);

        }


        public static bool operator ==(ImageSource x, ImageSource y) => (x?.ThisPtr ?? IntPtr.Zero) == (y?.ThisPtr ?? IntPtr.Zero);
        public static bool operator !=(ImageSource x, ImageSource y) => !(x == y);
        public bool Equals(ImageSource other) => this == other;
        public override bool Equals(object obj) => obj is ImageSource that && this == that;
        public override int GetHashCode() => ThisPtr.GetHashCode();


        protected ImageSource(global::WinRT.DerivedComposed _):base(_)
        {

        }
        bool IWinRTObject.HasUnwrappableNativeObject => this.GetType() == typeof(ImageSource);
        IObjectReference IWinRTObject.NativeObject => _inner;

        private struct InterfaceTag<I>{};


        protected override bool IsOverridableInterface(Guid iid) => base.IsOverridableInterface(iid);

        global::System.Runtime.InteropServices.CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(ref Guid iid, out IntPtr ppv)
        {
            ppv = IntPtr.Zero;
            if (IsOverridableInterface(iid) || global::WinRT.Interop.IID.IID_IInspectable == iid)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
            }

            if (((IWinRTObject)this).NativeObject.TryAs(iid, out ppv) >= 0)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.Handled;
            }

            return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
        }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")]
    [global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Media.LineGeometry))]
    [global::ABI.Microsoft.UI.Xaml.Media.LineGeometryRcwFactory]
    [global::WinRT.ProjectedRuntimeClass(typeof(ILineGeometry))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    public sealed class LineGeometry : Geometry, global::System.Runtime.InteropServices.ICustomQueryInterface, IWinRTObject, IEquatable<LineGeometry>
    {
        private IntPtr ThisPtr => _inner == null ? (((IWinRTObject)this).NativeObject).ThisPtr : _inner.ThisPtr;

        private readonly IObjectReference _inner = null;



        private IObjectReference _objRef_global__Microsoft_UI_Xaml_Media_ILineGeometry => _inner;


        private static volatile IObjectReference ___objRef_global__Microsoft_UI_Xaml_Media_LineGeometry;
        private static IObjectReference _objRef_global__Microsoft_UI_Xaml_Media_LineGeometry
        {
            get
            { 
                var factory = ___objRef_global__Microsoft_UI_Xaml_Media_LineGeometry;
                if (factory != null && factory.IsInCurrentContext)
                {
                    return factory;
                }
                else
                {
                    return ___objRef_global__Microsoft_UI_Xaml_Media_LineGeometry = ActivationFactory.Get("Microsoft.UI.Xaml.Media.LineGeometry");
                }
            }
        }

        public LineGeometry() :base(global::WinRT.DerivedComposed.Instance)
        {
            _inner = global::ABI.WinRT.Interop.IActivationFactoryMethods.ActivateInstanceUnsafe(_objRef_global__Microsoft_UI_Xaml_Media_LineGeometry, global::ABI.Microsoft.UI.Xaml.Media.ILineGeometryMethods.IID);
            ComWrappersSupport.RegisterObjectForInterface(this, ThisPtr);
            ComWrappersHelper.Init(_inner, false);

        }

        public static new I As<I>() => ActivationFactory.Get("Microsoft.UI.Xaml.Media.LineGeometry").AsInterface<I>();

        private static volatile IObjectReference ___objRef_global__Microsoft_UI_Xaml_Media_ILineGeometryStatics;
        private static IObjectReference _objRef_global__Microsoft_UI_Xaml_Media_ILineGeometryStatics
        {
            get
            { 
                var factory = ___objRef_global__Microsoft_UI_Xaml_Media_ILineGeometryStatics;
                if (factory != null && factory.IsInCurrentContext)
                {
                    return factory;
                }
                else
                {
                    return ___objRef_global__Microsoft_UI_Xaml_Media_ILineGeometryStatics = ActivationFactory.Get("Microsoft.UI.Xaml.Media.LineGeometry", global::ABI.Microsoft.UI.Xaml.Media.ILineGeometryStaticsMethods.IID);
                }
            }
        }

        public static global::Microsoft.UI.Xaml.DependencyProperty EndPointProperty => global::ABI.Microsoft.UI.Xaml.Media.ILineGeometryStaticsMethods.get_EndPointProperty(_objRef_global__Microsoft_UI_Xaml_Media_ILineGeometryStatics);

        public static global::Microsoft.UI.Xaml.DependencyProperty StartPointProperty => global::ABI.Microsoft.UI.Xaml.Media.ILineGeometryStaticsMethods.get_StartPointProperty(_objRef_global__Microsoft_UI_Xaml_Media_ILineGeometryStatics);

        public static new LineGeometry FromAbi(IntPtr thisPtr)
        {
            if (thisPtr == IntPtr.Zero) return null;
            return MarshalInspectable<LineGeometry>.FromAbi(thisPtr);
        }

        internal LineGeometry(IObjectReference objRef)
            : base(global::WinRT.DerivedComposed.Instance)

        {
            _inner = objRef.As(global::ABI.Microsoft.UI.Xaml.Media.ILineGeometryMethods.IID);

        }


        public static bool operator ==(LineGeometry x, LineGeometry y) => (x?.ThisPtr ?? IntPtr.Zero) == (y?.ThisPtr ?? IntPtr.Zero);
        public static bool operator !=(LineGeometry x, LineGeometry y) => !(x == y);
        public bool Equals(LineGeometry other) => this == other;
        public override bool Equals(object obj) => obj is LineGeometry that && this == that;
        public override int GetHashCode() => ThisPtr.GetHashCode();


        bool IWinRTObject.HasUnwrappableNativeObject => true;
        IObjectReference IWinRTObject.NativeObject => _inner;

        private struct InterfaceTag<I>{};


        public global::Windows.Foundation.Point EndPoint
        {
            get => global::ABI.Microsoft.UI.Xaml.Media.ILineGeometryMethods.get_EndPoint(_objRef_global__Microsoft_UI_Xaml_Media_ILineGeometry);
            set => global::ABI.Microsoft.UI.Xaml.Media.ILineGeometryMethods.set_EndPoint(_objRef_global__Microsoft_UI_Xaml_Media_ILineGeometry, value);
        }

        public global::Windows.Foundation.Point StartPoint
        {
            get => global::ABI.Microsoft.UI.Xaml.Media.ILineGeometryMethods.get_StartPoint(_objRef_global__Microsoft_UI_Xaml_Media_ILineGeometry);
            set => global::ABI.Microsoft.UI.Xaml.Media.ILineGeometryMethods.set_StartPoint(_objRef_global__Microsoft_UI_Xaml_Media_ILineGeometry, value);
        }

        protected override bool IsOverridableInterface(Guid iid) => base.IsOverridableInterface(iid);

        global::System.Runtime.InteropServices.CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(ref Guid iid, out IntPtr ppv)
        {
            ppv = IntPtr.Zero;
            if (IsOverridableInterface(iid) || global::WinRT.Interop.IID.IID_IInspectable == iid)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
            }

            if (((IWinRTObject)this).NativeObject.TryAs(iid, out ppv) >= 0)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.Handled;
            }

            return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
        }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")]
    [global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Media.LineSegment))]
    [global::ABI.Microsoft.UI.Xaml.Media.LineSegmentRcwFactory]
    [global::WinRT.ProjectedRuntimeClass(typeof(ILineSegment))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    public sealed class LineSegment : PathSegment, global::System.Runtime.InteropServices.ICustomQueryInterface, IWinRTObject, IEquatable<LineSegment>
    {
        private IntPtr ThisPtr => _inner == null ? (((IWinRTObject)this).NativeObject).ThisPtr : _inner.ThisPtr;

        private readonly IObjectReference _inner = null;



        private IObjectReference _objRef_global__Microsoft_UI_Xaml_Media_ILineSegment => _inner;


        private static volatile IObjectReference ___objRef_global__Microsoft_UI_Xaml_Media_LineSegment;
        private static IObjectReference _objRef_global__Microsoft_UI_Xaml_Media_LineSegment
        {
            get
            { 
                var factory = ___objRef_global__Microsoft_UI_Xaml_Media_LineSegment;
                if (factory != null && factory.IsInCurrentContext)
                {
                    return factory;
                }
                else
                {
                    return ___objRef_global__Microsoft_UI_Xaml_Media_LineSegment = ActivationFactory.Get("Microsoft.UI.Xaml.Media.LineSegment");
                }
            }
        }

        public LineSegment() :base(global::WinRT.DerivedComposed.Instance)
        {
            _inner = global::ABI.WinRT.Interop.IActivationFactoryMethods.ActivateInstanceUnsafe(_objRef_global__Microsoft_UI_Xaml_Media_LineSegment, global::ABI.Microsoft.UI.Xaml.Media.ILineSegmentMethods.IID);
            ComWrappersSupport.RegisterObjectForInterface(this, ThisPtr);
            ComWrappersHelper.Init(_inner, false);

        }

        public static I As<I>() => ActivationFactory.Get("Microsoft.UI.Xaml.Media.LineSegment").AsInterface<I>();

        private static volatile IObjectReference ___objRef_global__Microsoft_UI_Xaml_Media_ILineSegmentStatics;
        private static IObjectReference _objRef_global__Microsoft_UI_Xaml_Media_ILineSegmentStatics
        {
            get
            { 
                var factory = ___objRef_global__Microsoft_UI_Xaml_Media_ILineSegmentStatics;
                if (factory != null && factory.IsInCurrentContext)
                {
                    return factory;
                }
                else
                {
                    return ___objRef_global__Microsoft_UI_Xaml_Media_ILineSegmentStatics = ActivationFactory.Get("Microsoft.UI.Xaml.Media.LineSegment", global::ABI.Microsoft.UI.Xaml.Media.ILineSegmentStaticsMethods.IID);
                }
            }
        }

        public static global::Microsoft.UI.Xaml.DependencyProperty PointProperty => global::ABI.Microsoft.UI.Xaml.Media.ILineSegmentStaticsMethods.get_PointProperty(_objRef_global__Microsoft_UI_Xaml_Media_ILineSegmentStatics);

        public static new LineSegment FromAbi(IntPtr thisPtr)
        {
            if (thisPtr == IntPtr.Zero) return null;
            return MarshalInspectable<LineSegment>.FromAbi(thisPtr);
        }

        internal LineSegment(IObjectReference objRef)
            : base(global::WinRT.DerivedComposed.Instance)

        {
            _inner = objRef.As(global::ABI.Microsoft.UI.Xaml.Media.ILineSegmentMethods.IID);

        }


        public static bool operator ==(LineSegment x, LineSegment y) => (x?.ThisPtr ?? IntPtr.Zero) == (y?.ThisPtr ?? IntPtr.Zero);
        public static bool operator !=(LineSegment x, LineSegment y) => !(x == y);
        public bool Equals(LineSegment other) => this == other;
        public override bool Equals(object obj) => obj is LineSegment that && this == that;
        public override int GetHashCode() => ThisPtr.GetHashCode();


        bool IWinRTObject.HasUnwrappableNativeObject => true;
        IObjectReference IWinRTObject.NativeObject => _inner;

        private struct InterfaceTag<I>{};


        public global::Windows.Foundation.Point Point
        {
            get => global::ABI.Microsoft.UI.Xaml.Media.ILineSegmentMethods.get_Point(_objRef_global__Microsoft_UI_Xaml_Media_ILineSegment);
            set => global::ABI.Microsoft.UI.Xaml.Media.ILineSegmentMethods.set_Point(_objRef_global__Microsoft_UI_Xaml_Media_ILineSegment, value);
        }

        protected override bool IsOverridableInterface(Guid iid) => base.IsOverridableInterface(iid);

        global::System.Runtime.InteropServices.CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(ref Guid iid, out IntPtr ppv)
        {
            ppv = IntPtr.Zero;
            if (IsOverridableInterface(iid) || global::WinRT.Interop.IID.IID_IInspectable == iid)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
            }

            if (((IWinRTObject)this).NativeObject.TryAs(iid, out ppv) >= 0)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.Handled;
            }

            return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
        }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")]
    [global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Media.LinearGradientBrush))]
    [global::ABI.Microsoft.UI.Xaml.Media.LinearGradientBrushRcwFactory]
    [global::WinRT.ProjectedRuntimeClass(typeof(ILinearGradientBrush))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    public sealed class LinearGradientBrush : GradientBrush, global::System.Runtime.InteropServices.ICustomQueryInterface, IWinRTObject, IEquatable<LinearGradientBrush>
    {
        private IntPtr ThisPtr => _inner == null ? (((IWinRTObject)this).NativeObject).ThisPtr : _inner.ThisPtr;

        private readonly IObjectReference _inner = null;



        private IObjectReference _objRef_global__Microsoft_UI_Xaml_Media_ILinearGradientBrush => _inner;


        private static volatile IObjectReference ___objRef_global__Microsoft_UI_Xaml_Media_LinearGradientBrush;
        private static IObjectReference _objRef_global__Microsoft_UI_Xaml_Media_LinearGradientBrush
        {
            get
            { 
                var factory = ___objRef_global__Microsoft_UI_Xaml_Media_LinearGradientBrush;
                if (factory != null && factory.IsInCurrentContext)
                {
                    return factory;
                }
                else
                {
                    return ___objRef_global__Microsoft_UI_Xaml_Media_LinearGradientBrush = ActivationFactory.Get("Microsoft.UI.Xaml.Media.LinearGradientBrush");
                }
            }
        }

        public LinearGradientBrush() :base(global::WinRT.DerivedComposed.Instance)
        {
            _inner = global::ABI.WinRT.Interop.IActivationFactoryMethods.ActivateInstanceUnsafe(_objRef_global__Microsoft_UI_Xaml_Media_LinearGradientBrush, global::ABI.Microsoft.UI.Xaml.Media.ILinearGradientBrushMethods.IID);
            ComWrappersSupport.RegisterObjectForInterface(this, ThisPtr);
            ComWrappersHelper.Init(_inner, false);

        }

        private static class _ILinearGradientBrushFactoryMethods
        {
            public static unsafe IntPtr CreateInstanceWithGradientStopCollectionAndAngle(IObjectReference _obj, GradientStopCollection gradientStopCollection, double angle)
            {
                var ThisPtr = _obj.ThisPtr;

                ObjectReferenceValue __gradientStopCollection = default;
                IntPtr __retval = default;
                try
                {
                    __gradientStopCollection = global::ABI.Microsoft.UI.Xaml.Media.GradientStopCollection.CreateMarshaler2(gradientStopCollection);
                    global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, double, IntPtr*, int>**)ThisPtr)[6](ThisPtr, MarshalInspectable<object>.GetAbi(__gradientStopCollection), angle, &__retval));
                    global::System.GC.KeepAlive(_obj);
                    return __retval;
                }
                finally
                {
                    MarshalInspectable<object>.DisposeMarshaler(__gradientStopCollection);
                }
            }
        }

        private static volatile IObjectReference ___objRef_global__Microsoft_UI_Xaml_Media_ILinearGradientBrushFactory;
        private static IObjectReference _objRef_global__Microsoft_UI_Xaml_Media_ILinearGradientBrushFactory
        {
            get
            { 
                var factory = ___objRef_global__Microsoft_UI_Xaml_Media_ILinearGradientBrushFactory;
                if (factory != null && factory.IsInCurrentContext)
                {
                    return factory;
                }
                else
                {
                    return ___objRef_global__Microsoft_UI_Xaml_Media_ILinearGradientBrushFactory = ActivationFactory.Get("Microsoft.UI.Xaml.Media.LinearGradientBrush", global::ABI.Microsoft.UI.Xaml.Media.ILinearGradientBrushFactoryMethods.IID);
                }
            }
        }

        public LinearGradientBrush(GradientStopCollection gradientStopCollection, double angle) :base(global::WinRT.DerivedComposed.Instance)
        { 
        IntPtr ptr = (_ILinearGradientBrushFactoryMethods.CreateInstanceWithGradientStopCollectionAndAngle(_objRef_global__Microsoft_UI_Xaml_Media_ILinearGradientBrushFactory, gradientStopCollection, angle)); 
        try 
        { 
        _inner = ComWrappersSupport.GetObjectReferenceForInterface(ptr, global::ABI.Microsoft.UI.Xaml.Media.ILinearGradientBrushMethods.IID, false); 

        } 
        finally 
        { 
        MarshalInspectable<object>.DisposeAbi(ptr); 
        }

        ComWrappersSupport.RegisterObjectForInterface(this, ThisPtr);
        ComWrappersHelper.Init(_inner, false);
        }

        public static new I As<I>() => ActivationFactory.Get("Microsoft.UI.Xaml.Media.LinearGradientBrush").AsInterface<I>();

        private static volatile IObjectReference ___objRef_global__Microsoft_UI_Xaml_Media_ILinearGradientBrushStatics;
        private static IObjectReference _objRef_global__Microsoft_UI_Xaml_Media_ILinearGradientBrushStatics
        {
            get
            { 
                var factory = ___objRef_global__Microsoft_UI_Xaml_Media_ILinearGradientBrushStatics;
                if (factory != null && factory.IsInCurrentContext)
                {
                    return factory;
                }
                else
                {
                    return ___objRef_global__Microsoft_UI_Xaml_Media_ILinearGradientBrushStatics = ActivationFactory.Get("Microsoft.UI.Xaml.Media.LinearGradientBrush", global::ABI.Microsoft.UI.Xaml.Media.ILinearGradientBrushStaticsMethods.IID);
                }
            }
        }

        public static global::Microsoft.UI.Xaml.DependencyProperty EndPointProperty => global::ABI.Microsoft.UI.Xaml.Media.ILinearGradientBrushStaticsMethods.get_EndPointProperty(_objRef_global__Microsoft_UI_Xaml_Media_ILinearGradientBrushStatics);

        public static global::Microsoft.UI.Xaml.DependencyProperty StartPointProperty => global::ABI.Microsoft.UI.Xaml.Media.ILinearGradientBrushStaticsMethods.get_StartPointProperty(_objRef_global__Microsoft_UI_Xaml_Media_ILinearGradientBrushStatics);

        public static new LinearGradientBrush FromAbi(IntPtr thisPtr)
        {
            if (thisPtr == IntPtr.Zero) return null;
            return MarshalInspectable<LinearGradientBrush>.FromAbi(thisPtr);
        }

        internal LinearGradientBrush(IObjectReference objRef)
            : base(global::WinRT.DerivedComposed.Instance)

        {
            _inner = objRef.As(global::ABI.Microsoft.UI.Xaml.Media.ILinearGradientBrushMethods.IID);

        }


        public static bool operator ==(LinearGradientBrush x, LinearGradientBrush y) => (x?.ThisPtr ?? IntPtr.Zero) == (y?.ThisPtr ?? IntPtr.Zero);
        public static bool operator !=(LinearGradientBrush x, LinearGradientBrush y) => !(x == y);
        public bool Equals(LinearGradientBrush other) => this == other;
        public override bool Equals(object obj) => obj is LinearGradientBrush that && this == that;
        public override int GetHashCode() => ThisPtr.GetHashCode();


        bool IWinRTObject.HasUnwrappableNativeObject => true;
        IObjectReference IWinRTObject.NativeObject => _inner;

        private struct InterfaceTag<I>{};


        public global::Windows.Foundation.Point EndPoint
        {
            get => global::ABI.Microsoft.UI.Xaml.Media.ILinearGradientBrushMethods.get_EndPoint(_objRef_global__Microsoft_UI_Xaml_Media_ILinearGradientBrush);
            set => global::ABI.Microsoft.UI.Xaml.Media.ILinearGradientBrushMethods.set_EndPoint(_objRef_global__Microsoft_UI_Xaml_Media_ILinearGradientBrush, value);
        }

        public global::Windows.Foundation.Point StartPoint
        {
            get => global::ABI.Microsoft.UI.Xaml.Media.ILinearGradientBrushMethods.get_StartPoint(_objRef_global__Microsoft_UI_Xaml_Media_ILinearGradientBrush);
            set => global::ABI.Microsoft.UI.Xaml.Media.ILinearGradientBrushMethods.set_StartPoint(_objRef_global__Microsoft_UI_Xaml_Media_ILinearGradientBrush, value);
        }

        protected override bool IsOverridableInterface(Guid iid) => base.IsOverridableInterface(iid);

        global::System.Runtime.InteropServices.CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(ref Guid iid, out IntPtr ppv)
        {
            ppv = IntPtr.Zero;
            if (IsOverridableInterface(iid) || global::WinRT.Interop.IID.IID_IInspectable == iid)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
            }

            if (((IWinRTObject)this).NativeObject.TryAs(iid, out ppv) >= 0)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.Handled;
            }

            return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
        }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")]
    [global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Media.LoadedImageSourceLoadCompletedEventArgs))]
    [global::ABI.Microsoft.UI.Xaml.Media.LoadedImageSourceLoadCompletedEventArgsRcwFactory]
    [global::WinRT.ProjectedRuntimeClass(typeof(ILoadedImageSourceLoadCompletedEventArgs))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    public sealed class LoadedImageSourceLoadCompletedEventArgs : global::System.Runtime.InteropServices.ICustomQueryInterface, IWinRTObject, IEquatable<LoadedImageSourceLoadCompletedEventArgs>
    {
        private IntPtr ThisPtr => _inner == null ? (((IWinRTObject)this).NativeObject).ThisPtr : _inner.ThisPtr;

        private readonly IObjectReference _inner = null;



        private IObjectReference _objRef_global__Microsoft_UI_Xaml_Media_ILoadedImageSourceLoadCompletedEventArgs => _inner;


        public static LoadedImageSourceLoadCompletedEventArgs FromAbi(IntPtr thisPtr)
        {
            if (thisPtr == IntPtr.Zero) return null;
            return MarshalInspectable<LoadedImageSourceLoadCompletedEventArgs>.FromAbi(thisPtr);
        }

        internal LoadedImageSourceLoadCompletedEventArgs(IObjectReference objRef)
        {
            _inner = objRef.As(global::ABI.Microsoft.UI.Xaml.Media.ILoadedImageSourceLoadCompletedEventArgsMethods.IID);

        }


        public static bool operator ==(LoadedImageSourceLoadCompletedEventArgs x, LoadedImageSourceLoadCompletedEventArgs y) => (x?.ThisPtr ?? IntPtr.Zero) == (y?.ThisPtr ?? IntPtr.Zero);
        public static bool operator !=(LoadedImageSourceLoadCompletedEventArgs x, LoadedImageSourceLoadCompletedEventArgs y) => !(x == y);
        public bool Equals(LoadedImageSourceLoadCompletedEventArgs other) => this == other;
        public override bool Equals(object obj) => obj is LoadedImageSourceLoadCompletedEventArgs that && this == that;
        public override int GetHashCode() => ThisPtr.GetHashCode();


        bool IWinRTObject.HasUnwrappableNativeObject => true;
        IObjectReference IWinRTObject.NativeObject => _inner;
        private volatile global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> _queryInterfaceCache;
        private global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> MakeQueryInterfaceCache()
        {
            global::System.Threading.Interlocked.CompareExchange(ref _queryInterfaceCache, new global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference>(), null); 
            return _queryInterfaceCache;
        }
        global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> IWinRTObject.QueryInterfaceCache => _queryInterfaceCache ?? MakeQueryInterfaceCache();
        private volatile global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> _additionalTypeData;
        private global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> MakeAdditionalTypeData()
        {
            global::System.Threading.Interlocked.CompareExchange(ref _additionalTypeData, new global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object>(), null); 
            return _additionalTypeData;
        }
        global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> IWinRTObject.AdditionalTypeData => _additionalTypeData ?? MakeAdditionalTypeData();

        private struct InterfaceTag<I>{};


        public LoadedImageSourceLoadStatus Status => global::ABI.Microsoft.UI.Xaml.Media.ILoadedImageSourceLoadCompletedEventArgsMethods.get_Status(_objRef_global__Microsoft_UI_Xaml_Media_ILoadedImageSourceLoadCompletedEventArgs);

        private bool IsOverridableInterface(Guid iid) => false;

        global::System.Runtime.InteropServices.CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(ref Guid iid, out IntPtr ppv)
        {
            ppv = IntPtr.Zero;
            if (IsOverridableInterface(iid) || global::WinRT.Interop.IID.IID_IInspectable == iid)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
            }

            if (((IWinRTObject)this).NativeObject.TryAs(iid, out ppv) >= 0)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.Handled;
            }

            return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
        }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")][global::WinRT.WinRTExposedType(typeof(global::WinRT.EnumTypeDetails<LoadedImageSourceLoadStatus>))][global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    public enum LoadedImageSourceLoadStatus : int
    {
        Success = unchecked((int)0),
        NetworkError = unchecked((int)0x1),
        InvalidFormat = unchecked((int)0x2),
        Other = unchecked((int)0x3),
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")]
    [global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Media.LoadedImageSurface))]
    [global::ABI.Microsoft.UI.Xaml.Media.LoadedImageSurfaceRcwFactory]
    [global::WinRT.ProjectedRuntimeClass(typeof(ILoadedImageSurface))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    public sealed class LoadedImageSurface : global::System.IDisposable, global::Microsoft.UI.Composition.ICompositionSurface, global::System.Runtime.InteropServices.ICustomQueryInterface, IWinRTObject, IEquatable<LoadedImageSurface>
    {
        private IntPtr ThisPtr => _inner == null ? (((IWinRTObject)this).NativeObject).ThisPtr : _inner.ThisPtr;

        private readonly IObjectReference _inner = null;



        private IObjectReference _objRef_global__Microsoft_UI_Xaml_Media_ILoadedImageSurface => _inner;
        private volatile IObjectReference ___objRef_global__System_IDisposable;
        private IObjectReference Make___objRef_global__System_IDisposable()
        {
            global::System.Threading.Interlocked.CompareExchange(ref ___objRef_global__System_IDisposable, ((IWinRTObject)this).NativeObject.As<IUnknownVftbl>(global::ABI.System.IDisposableMethods.IID), null);
            return ___objRef_global__System_IDisposable;
        }
        private IObjectReference _objRef_global__System_IDisposable => ___objRef_global__System_IDisposable ?? Make___objRef_global__System_IDisposable();

        private volatile IObjectReference ___objRef_global__Microsoft_UI_Composition_ICompositionSurface;
        private IObjectReference Make___objRef_global__Microsoft_UI_Composition_ICompositionSurface()
        {
            global::System.Threading.Interlocked.CompareExchange(ref ___objRef_global__Microsoft_UI_Composition_ICompositionSurface, ((IWinRTObject)this).NativeObject.As<IUnknownVftbl>(global::ABI.Microsoft.UI.Composition.ICompositionSurfaceMethods.IID), null);
            return ___objRef_global__Microsoft_UI_Composition_ICompositionSurface;
        }
        private IObjectReference _objRef_global__Microsoft_UI_Composition_ICompositionSurface => ___objRef_global__Microsoft_UI_Composition_ICompositionSurface ?? Make___objRef_global__Microsoft_UI_Composition_ICompositionSurface();



        public static I As<I>() => ActivationFactory.Get("Microsoft.UI.Xaml.Media.LoadedImageSurface").AsInterface<I>();

        private static volatile IObjectReference ___objRef_global__Microsoft_UI_Xaml_Media_ILoadedImageSurfaceStatics;
        private static IObjectReference _objRef_global__Microsoft_UI_Xaml_Media_ILoadedImageSurfaceStatics
        {
            get
            { 
                var factory = ___objRef_global__Microsoft_UI_Xaml_Media_ILoadedImageSurfaceStatics;
                if (factory != null && factory.IsInCurrentContext)
                {
                    return factory;
                }
                else
                {
                    return ___objRef_global__Microsoft_UI_Xaml_Media_ILoadedImageSurfaceStatics = ActivationFactory.Get("Microsoft.UI.Xaml.Media.LoadedImageSurface", global::ABI.Microsoft.UI.Xaml.Media.ILoadedImageSurfaceStaticsMethods.IID);
                }
            }
        }

        public static LoadedImageSurface StartLoadFromUri(global::System.Uri uri, global::Windows.Foundation.Size desiredMaxSize) => global::ABI.Microsoft.UI.Xaml.Media.ILoadedImageSurfaceStaticsMethods.StartLoadFromUri(_objRef_global__Microsoft_UI_Xaml_Media_ILoadedImageSurfaceStatics, uri, desiredMaxSize);

        public static LoadedImageSurface StartLoadFromUri(global::System.Uri uri) => global::ABI.Microsoft.UI.Xaml.Media.ILoadedImageSurfaceStaticsMethods.StartLoadFromUri(_objRef_global__Microsoft_UI_Xaml_Media_ILoadedImageSurfaceStatics, uri);

        public static LoadedImageSurface StartLoadFromStream(global::Windows.Storage.Streams.IRandomAccessStream stream, global::Windows.Foundation.Size desiredMaxSize) => global::ABI.Microsoft.UI.Xaml.Media.ILoadedImageSurfaceStaticsMethods.StartLoadFromStream(_objRef_global__Microsoft_UI_Xaml_Media_ILoadedImageSurfaceStatics, stream, desiredMaxSize);

        public static LoadedImageSurface StartLoadFromStream(global::Windows.Storage.Streams.IRandomAccessStream stream) => global::ABI.Microsoft.UI.Xaml.Media.ILoadedImageSurfaceStaticsMethods.StartLoadFromStream(_objRef_global__Microsoft_UI_Xaml_Media_ILoadedImageSurfaceStatics, stream);

        public static LoadedImageSurface FromAbi(IntPtr thisPtr)
        {
            if (thisPtr == IntPtr.Zero) return null;
            return MarshalInspectable<LoadedImageSurface>.FromAbi(thisPtr);
        }

        internal LoadedImageSurface(IObjectReference objRef)
        {
            _inner = objRef.As(global::ABI.Microsoft.UI.Xaml.Media.ILoadedImageSurfaceMethods.IID);

        }


        public static bool operator ==(LoadedImageSurface x, LoadedImageSurface y) => (x?.ThisPtr ?? IntPtr.Zero) == (y?.ThisPtr ?? IntPtr.Zero);
        public static bool operator !=(LoadedImageSurface x, LoadedImageSurface y) => !(x == y);
        public bool Equals(LoadedImageSurface other) => this == other;
        public override bool Equals(object obj) => obj is LoadedImageSurface that && this == that;
        public override int GetHashCode() => ThisPtr.GetHashCode();


        bool IWinRTObject.HasUnwrappableNativeObject => true;
        IObjectReference IWinRTObject.NativeObject => _inner;
        private volatile global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> _queryInterfaceCache;
        private global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> MakeQueryInterfaceCache()
        {
            global::System.Threading.Interlocked.CompareExchange(ref _queryInterfaceCache, new global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference>(), null); 
            return _queryInterfaceCache;
        }
        global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> IWinRTObject.QueryInterfaceCache => _queryInterfaceCache ?? MakeQueryInterfaceCache();
        private volatile global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> _additionalTypeData;
        private global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> MakeAdditionalTypeData()
        {
            global::System.Threading.Interlocked.CompareExchange(ref _additionalTypeData, new global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object>(), null); 
            return _additionalTypeData;
        }
        global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> IWinRTObject.AdditionalTypeData => _additionalTypeData ?? MakeAdditionalTypeData();

        private struct InterfaceTag<I>{};


        public event global::Windows.Foundation.TypedEventHandler<LoadedImageSurface, LoadedImageSourceLoadCompletedEventArgs> LoadCompleted
        {
            add => global::ABI.Microsoft.UI.Xaml.Media.ILoadedImageSurfaceMethods.Get_LoadCompleted2(_objRef_global__Microsoft_UI_Xaml_Media_ILoadedImageSurface, (IWinRTObject)this).Subscribe(value);
            remove => global::ABI.Microsoft.UI.Xaml.Media.ILoadedImageSurfaceMethods.Get_LoadCompleted2(_objRef_global__Microsoft_UI_Xaml_Media_ILoadedImageSurface, (IWinRTObject)this).Unsubscribe(value);
        }

        public void Dispose() => global::ABI.System.IDisposableMethods.Dispose(_objRef_global__System_IDisposable);

        public global::Windows.Foundation.Size DecodedPhysicalSize => global::ABI.Microsoft.UI.Xaml.Media.ILoadedImageSurfaceMethods.get_DecodedPhysicalSize(_objRef_global__Microsoft_UI_Xaml_Media_ILoadedImageSurface);

        public global::Windows.Foundation.Size DecodedSize => global::ABI.Microsoft.UI.Xaml.Media.ILoadedImageSurfaceMethods.get_DecodedSize(_objRef_global__Microsoft_UI_Xaml_Media_ILoadedImageSurface);

        public global::Windows.Foundation.Size NaturalSize => global::ABI.Microsoft.UI.Xaml.Media.ILoadedImageSurfaceMethods.get_NaturalSize(_objRef_global__Microsoft_UI_Xaml_Media_ILoadedImageSurface);

        private bool IsOverridableInterface(Guid iid) => false;

        global::System.Runtime.InteropServices.CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(ref Guid iid, out IntPtr ppv)
        {
            ppv = IntPtr.Zero;
            if (IsOverridableInterface(iid) || global::WinRT.Interop.IID.IID_IInspectable == iid)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
            }

            if (((IWinRTObject)this).NativeObject.TryAs(iid, out ppv) >= 0)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.Handled;
            }

            return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
        }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")]
    [global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Media.Matrix3DProjection))]
    [global::ABI.Microsoft.UI.Xaml.Media.Matrix3DProjectionRcwFactory]
    [global::WinRT.ProjectedRuntimeClass(typeof(IMatrix3DProjection))]
    [global::Microsoft.UI.Xaml.Markup.ContentProperty(Name = @"ProjectionMatrix")]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    public sealed class Matrix3DProjection : Projection, global::System.Runtime.InteropServices.ICustomQueryInterface, IWinRTObject, IEquatable<Matrix3DProjection>
    {
        private IntPtr ThisPtr => _inner == null ? (((IWinRTObject)this).NativeObject).ThisPtr : _inner.ThisPtr;

        private readonly IObjectReference _inner = null;



        private IObjectReference _objRef_global__Microsoft_UI_Xaml_Media_IMatrix3DProjection => _inner;


        private static volatile IObjectReference ___objRef_global__Microsoft_UI_Xaml_Media_Matrix3DProjection;
        private static IObjectReference _objRef_global__Microsoft_UI_Xaml_Media_Matrix3DProjection
        {
            get
            { 
                var factory = ___objRef_global__Microsoft_UI_Xaml_Media_Matrix3DProjection;
                if (factory != null && factory.IsInCurrentContext)
                {
                    return factory;
                }
                else
                {
                    return ___objRef_global__Microsoft_UI_Xaml_Media_Matrix3DProjection = ActivationFactory.Get("Microsoft.UI.Xaml.Media.Matrix3DProjection");
                }
            }
        }

        public Matrix3DProjection() :base(global::WinRT.DerivedComposed.Instance)
        {
            _inner = global::ABI.WinRT.Interop.IActivationFactoryMethods.ActivateInstanceUnsafe(_objRef_global__Microsoft_UI_Xaml_Media_Matrix3DProjection, global::ABI.Microsoft.UI.Xaml.Media.IMatrix3DProjectionMethods.IID);
            ComWrappersSupport.RegisterObjectForInterface(this, ThisPtr);
            ComWrappersHelper.Init(_inner, false);

        }

        public static I As<I>() => ActivationFactory.Get("Microsoft.UI.Xaml.Media.Matrix3DProjection").AsInterface<I>();

        private static volatile IObjectReference ___objRef_global__Microsoft_UI_Xaml_Media_IMatrix3DProjectionStatics;
        private static IObjectReference _objRef_global__Microsoft_UI_Xaml_Media_IMatrix3DProjectionStatics
        {
            get
            { 
                var factory = ___objRef_global__Microsoft_UI_Xaml_Media_IMatrix3DProjectionStatics;
                if (factory != null && factory.IsInCurrentContext)
                {
                    return factory;
                }
                else
                {
                    return ___objRef_global__Microsoft_UI_Xaml_Media_IMatrix3DProjectionStatics = ActivationFactory.Get("Microsoft.UI.Xaml.Media.Matrix3DProjection", global::ABI.Microsoft.UI.Xaml.Media.IMatrix3DProjectionStaticsMethods.IID);
                }
            }
        }

        public static global::Microsoft.UI.Xaml.DependencyProperty ProjectionMatrixProperty => global::ABI.Microsoft.UI.Xaml.Media.IMatrix3DProjectionStaticsMethods.get_ProjectionMatrixProperty(_objRef_global__Microsoft_UI_Xaml_Media_IMatrix3DProjectionStatics);

        public static new Matrix3DProjection FromAbi(IntPtr thisPtr)
        {
            if (thisPtr == IntPtr.Zero) return null;
            return MarshalInspectable<Matrix3DProjection>.FromAbi(thisPtr);
        }

        internal Matrix3DProjection(IObjectReference objRef)
            : base(global::WinRT.DerivedComposed.Instance)

        {
            _inner = objRef.As(global::ABI.Microsoft.UI.Xaml.Media.IMatrix3DProjectionMethods.IID);

        }


        public static bool operator ==(Matrix3DProjection x, Matrix3DProjection y) => (x?.ThisPtr ?? IntPtr.Zero) == (y?.ThisPtr ?? IntPtr.Zero);
        public static bool operator !=(Matrix3DProjection x, Matrix3DProjection y) => !(x == y);
        public bool Equals(Matrix3DProjection other) => this == other;
        public override bool Equals(object obj) => obj is Matrix3DProjection that && this == that;
        public override int GetHashCode() => ThisPtr.GetHashCode();


        bool IWinRTObject.HasUnwrappableNativeObject => true;
        IObjectReference IWinRTObject.NativeObject => _inner;

        private struct InterfaceTag<I>{};


        public global::Microsoft.UI.Xaml.Media.Media3D.Matrix3D ProjectionMatrix
        {
            get => global::ABI.Microsoft.UI.Xaml.Media.IMatrix3DProjectionMethods.get_ProjectionMatrix(_objRef_global__Microsoft_UI_Xaml_Media_IMatrix3DProjection);
            set => global::ABI.Microsoft.UI.Xaml.Media.IMatrix3DProjectionMethods.set_ProjectionMatrix(_objRef_global__Microsoft_UI_Xaml_Media_IMatrix3DProjection, value);
        }

        protected override bool IsOverridableInterface(Guid iid) => base.IsOverridableInterface(iid);

        global::System.Runtime.InteropServices.CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(ref Guid iid, out IntPtr ppv)
        {
            ppv = IntPtr.Zero;
            if (IsOverridableInterface(iid) || global::WinRT.Interop.IID.IID_IInspectable == iid)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
            }

            if (((IWinRTObject)this).NativeObject.TryAs(iid, out ppv) >= 0)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.Handled;
            }

            return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
        }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")]
    [global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Media.MatrixTransform))]
    [global::ABI.Microsoft.UI.Xaml.Media.MatrixTransformRcwFactory]
    [global::WinRT.ProjectedRuntimeClass(typeof(IMatrixTransform))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    public sealed class MatrixTransform : Transform, global::System.Runtime.InteropServices.ICustomQueryInterface, IWinRTObject, IEquatable<MatrixTransform>
    {
        private IntPtr ThisPtr => _inner == null ? (((IWinRTObject)this).NativeObject).ThisPtr : _inner.ThisPtr;

        private readonly IObjectReference _inner = null;



        private IObjectReference _objRef_global__Microsoft_UI_Xaml_Media_IMatrixTransform => _inner;


        private static volatile IObjectReference ___objRef_global__Microsoft_UI_Xaml_Media_MatrixTransform;
        private static IObjectReference _objRef_global__Microsoft_UI_Xaml_Media_MatrixTransform
        {
            get
            { 
                var factory = ___objRef_global__Microsoft_UI_Xaml_Media_MatrixTransform;
                if (factory != null && factory.IsInCurrentContext)
                {
                    return factory;
                }
                else
                {
                    return ___objRef_global__Microsoft_UI_Xaml_Media_MatrixTransform = ActivationFactory.Get("Microsoft.UI.Xaml.Media.MatrixTransform");
                }
            }
        }

        public MatrixTransform() :base(global::WinRT.DerivedComposed.Instance)
        {
            _inner = global::ABI.WinRT.Interop.IActivationFactoryMethods.ActivateInstanceUnsafe(_objRef_global__Microsoft_UI_Xaml_Media_MatrixTransform, global::ABI.Microsoft.UI.Xaml.Media.IMatrixTransformMethods.IID);
            ComWrappersSupport.RegisterObjectForInterface(this, ThisPtr);
            ComWrappersHelper.Init(_inner, false);

        }

        public static I As<I>() => ActivationFactory.Get("Microsoft.UI.Xaml.Media.MatrixTransform").AsInterface<I>();

        private static volatile IObjectReference ___objRef_global__Microsoft_UI_Xaml_Media_IMatrixTransformStatics;
        private static IObjectReference _objRef_global__Microsoft_UI_Xaml_Media_IMatrixTransformStatics
        {
            get
            { 
                var factory = ___objRef_global__Microsoft_UI_Xaml_Media_IMatrixTransformStatics;
                if (factory != null && factory.IsInCurrentContext)
                {
                    return factory;
                }
                else
                {
                    return ___objRef_global__Microsoft_UI_Xaml_Media_IMatrixTransformStatics = ActivationFactory.Get("Microsoft.UI.Xaml.Media.MatrixTransform", global::ABI.Microsoft.UI.Xaml.Media.IMatrixTransformStaticsMethods.IID);
                }
            }
        }

        public static global::Microsoft.UI.Xaml.DependencyProperty MatrixProperty => global::ABI.Microsoft.UI.Xaml.Media.IMatrixTransformStaticsMethods.get_MatrixProperty(_objRef_global__Microsoft_UI_Xaml_Media_IMatrixTransformStatics);

        public static new MatrixTransform FromAbi(IntPtr thisPtr)
        {
            if (thisPtr == IntPtr.Zero) return null;
            return MarshalInspectable<MatrixTransform>.FromAbi(thisPtr);
        }

        internal MatrixTransform(IObjectReference objRef)
            : base(global::WinRT.DerivedComposed.Instance)

        {
            _inner = objRef.As(global::ABI.Microsoft.UI.Xaml.Media.IMatrixTransformMethods.IID);

        }


        public static bool operator ==(MatrixTransform x, MatrixTransform y) => (x?.ThisPtr ?? IntPtr.Zero) == (y?.ThisPtr ?? IntPtr.Zero);
        public static bool operator !=(MatrixTransform x, MatrixTransform y) => !(x == y);
        public bool Equals(MatrixTransform other) => this == other;
        public override bool Equals(object obj) => obj is MatrixTransform that && this == that;
        public override int GetHashCode() => ThisPtr.GetHashCode();


        bool IWinRTObject.HasUnwrappableNativeObject => true;
        IObjectReference IWinRTObject.NativeObject => _inner;

        private struct InterfaceTag<I>{};


        public Matrix Matrix
        {
            get => global::ABI.Microsoft.UI.Xaml.Media.IMatrixTransformMethods.get_Matrix(_objRef_global__Microsoft_UI_Xaml_Media_IMatrixTransform);
            set => global::ABI.Microsoft.UI.Xaml.Media.IMatrixTransformMethods.set_Matrix(_objRef_global__Microsoft_UI_Xaml_Media_IMatrixTransform, value);
        }

        protected override bool IsOverridableInterface(Guid iid) => base.IsOverridableInterface(iid);

        global::System.Runtime.InteropServices.CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(ref Guid iid, out IntPtr ppv)
        {
            ppv = IntPtr.Zero;
            if (IsOverridableInterface(iid) || global::WinRT.Interop.IID.IID_IInspectable == iid)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
            }

            if (((IWinRTObject)this).NativeObject.TryAs(iid, out ppv) >= 0)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.Handled;
            }

            return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
        }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")]
    [global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Media.MediaTransportControlsThumbnailRequestedEventArgs))]
    [global::ABI.Microsoft.UI.Xaml.Media.MediaTransportControlsThumbnailRequestedEventArgsRcwFactory]
    [global::WinRT.ProjectedRuntimeClass(typeof(IMediaTransportControlsThumbnailRequestedEventArgs))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 196608u)]
    public sealed class MediaTransportControlsThumbnailRequestedEventArgs : global::System.Runtime.InteropServices.ICustomQueryInterface, IWinRTObject, IEquatable<MediaTransportControlsThumbnailRequestedEventArgs>
    {
        private IntPtr ThisPtr => _inner == null ? (((IWinRTObject)this).NativeObject).ThisPtr : _inner.ThisPtr;

        private readonly IObjectReference _inner = null;



        private IObjectReference _objRef_global__Microsoft_UI_Xaml_Media_IMediaTransportControlsThumbnailRequestedEventArgs => _inner;


        public static MediaTransportControlsThumbnailRequestedEventArgs FromAbi(IntPtr thisPtr)
        {
            if (thisPtr == IntPtr.Zero) return null;
            return MarshalInspectable<MediaTransportControlsThumbnailRequestedEventArgs>.FromAbi(thisPtr);
        }

        internal MediaTransportControlsThumbnailRequestedEventArgs(IObjectReference objRef)
        {
            _inner = objRef.As(global::ABI.Microsoft.UI.Xaml.Media.IMediaTransportControlsThumbnailRequestedEventArgsMethods.IID);

        }


        public static bool operator ==(MediaTransportControlsThumbnailRequestedEventArgs x, MediaTransportControlsThumbnailRequestedEventArgs y) => (x?.ThisPtr ?? IntPtr.Zero) == (y?.ThisPtr ?? IntPtr.Zero);
        public static bool operator !=(MediaTransportControlsThumbnailRequestedEventArgs x, MediaTransportControlsThumbnailRequestedEventArgs y) => !(x == y);
        public bool Equals(MediaTransportControlsThumbnailRequestedEventArgs other) => this == other;
        public override bool Equals(object obj) => obj is MediaTransportControlsThumbnailRequestedEventArgs that && this == that;
        public override int GetHashCode() => ThisPtr.GetHashCode();


        bool IWinRTObject.HasUnwrappableNativeObject => true;
        IObjectReference IWinRTObject.NativeObject => _inner;
        private volatile global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> _queryInterfaceCache;
        private global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> MakeQueryInterfaceCache()
        {
            global::System.Threading.Interlocked.CompareExchange(ref _queryInterfaceCache, new global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference>(), null); 
            return _queryInterfaceCache;
        }
        global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> IWinRTObject.QueryInterfaceCache => _queryInterfaceCache ?? MakeQueryInterfaceCache();
        private volatile global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> _additionalTypeData;
        private global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> MakeAdditionalTypeData()
        {
            global::System.Threading.Interlocked.CompareExchange(ref _additionalTypeData, new global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object>(), null); 
            return _additionalTypeData;
        }
        global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> IWinRTObject.AdditionalTypeData => _additionalTypeData ?? MakeAdditionalTypeData();

        private struct InterfaceTag<I>{};


        public void SetThumbnailImage(global::Windows.Storage.Streams.IInputStream source) => global::ABI.Microsoft.UI.Xaml.Media.IMediaTransportControlsThumbnailRequestedEventArgsMethods.SetThumbnailImage(_objRef_global__Microsoft_UI_Xaml_Media_IMediaTransportControlsThumbnailRequestedEventArgs, source);

        public global::Windows.Foundation.Deferral GetDeferral() => global::ABI.Microsoft.UI.Xaml.Media.IMediaTransportControlsThumbnailRequestedEventArgsMethods.GetDeferral(_objRef_global__Microsoft_UI_Xaml_Media_IMediaTransportControlsThumbnailRequestedEventArgs);

        private bool IsOverridableInterface(Guid iid) => false;

        global::System.Runtime.InteropServices.CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(ref Guid iid, out IntPtr ppv)
        {
            ppv = IntPtr.Zero;
            if (IsOverridableInterface(iid) || global::WinRT.Interop.IID.IID_IInspectable == iid)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
            }

            if (((IWinRTObject)this).NativeObject.TryAs(iid, out ppv) >= 0)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.Handled;
            }

            return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
        }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")]
    [global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Media.MicaBackdrop))]
    [global::ABI.Microsoft.UI.Xaml.Media.MicaBackdropRcwFactory]
    [global::WinRT.ProjectedRuntimeClass(typeof(IMicaBackdrop))]
    [global::Microsoft.UI.Xaml.CustomAttributes.MUXPropertyChangedCallback(enable = true)]
    [global::Microsoft.UI.Xaml.CustomAttributes.MUXPropertyChangedCallbackMethodName(value = @"OnPropertyChanged")]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.XamlContract), 262144u)]
    public class MicaBackdrop : SystemBackdrop, global::System.Runtime.InteropServices.ICustomQueryInterface, IWinRTObject, IEquatable<MicaBackdrop>
    {
        private IntPtr ThisPtr => _inner == null ? (((IWinRTObject)this).NativeObject).ThisPtr : _inner.ThisPtr;

        private readonly IObjectReference _inner = null;




        private volatile IObjectReference ___objRef_global__Microsoft_UI_Xaml_Media_IMicaBackdrop;
        private IObjectReference Make___objRef_global__Microsoft_UI_Xaml_Media_IMicaBackdrop()
        {
            global::System.Threading.Interlocked.CompareExchange(ref ___objRef_global__Microsoft_UI_Xaml_Media_IMicaBackdrop, ((IWinRTObject)this).NativeObject.As<IUnknownVftbl>(global::ABI.Microsoft.UI.Xaml.Media.IMicaBackdropMethods.IID), null);
            return ___objRef_global__Microsoft_UI_Xaml_Media_IMicaBackdrop;
        }
        private IObjectReference _objRef_global__Microsoft_UI_Xaml_Media_IMicaBackdrop => ___objRef_global__Microsoft_UI_Xaml_Media_IMicaBackdrop ?? Make___objRef_global__Microsoft_UI_Xaml_Media_IMicaBackdrop();



        private static class _IMicaBackdropFactoryMethods
        {
            public static unsafe IntPtr CreateInstance(IObjectReference _obj, object baseInterface, out IntPtr innerInterface)
            {
                var ThisPtr = _obj.ThisPtr;

                ObjectReferenceValue __baseInterface = default;
                IntPtr __innerInterface = default;
                IntPtr __retval = default;
                try
                {
                    __baseInterface = MarshalInspectable<object>.CreateMarshaler2(baseInterface);
                    global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, IntPtr*, IntPtr*, int>**)ThisPtr)[6](ThisPtr, MarshalInspectable<object>.GetAbi(__baseInterface), &__innerInterface, &__retval));
                    global::System.GC.KeepAlive(_obj);
                    innerInterface = __innerInterface;
                    return __retval;
                }
                finally
                {
                    MarshalInspectable<object>.DisposeMarshaler(__baseInterface);
                }
            }
        }

        private static volatile IObjectReference ___objRef_global__Microsoft_UI_Xaml_Media_IMicaBackdropFactory;
        private static IObjectReference _objRef_global__Microsoft_UI_Xaml_Media_IMicaBackdropFactory
        {
            get
            { 
                var factory = ___objRef_global__Microsoft_UI_Xaml_Media_IMicaBackdropFactory;
                if (factory != null && factory.IsInCurrentContext)
                {
                    return factory;
                }
                else
                {
                    return ___objRef_global__Microsoft_UI_Xaml_Media_IMicaBackdropFactory = ActivationFactory.Get("Microsoft.UI.Xaml.Media.MicaBackdrop", global::ABI.Microsoft.UI.Xaml.Media.IMicaBackdropFactoryMethods.IID);
                }
            }
        }

        public MicaBackdrop():base(global::WinRT.DerivedComposed.Instance)
        {
            bool isAggregation = this.GetType() != typeof(MicaBackdrop);
            object baseInspectable = isAggregation ? this : null;
            IntPtr composed = _IMicaBackdropFactoryMethods.CreateInstance(_objRef_global__Microsoft_UI_Xaml_Media_IMicaBackdropFactory,  baseInspectable, out IntPtr inner);
            try
            {
                ComWrappersHelper.Init(isAggregation, this, composed, inner, global::ABI.Microsoft.UI.Xaml.Media.IMicaBackdropMethods.IID, out _inner);

            }
            finally
            {
                Marshal.Release(inner);   
            }
        }

        public static I As<I>() => ActivationFactory.Get("Microsoft.UI.Xaml.Media.MicaBackdrop").AsInterface<I>();

        private static volatile IObjectReference ___objRef_global__Microsoft_UI_Xaml_Media_IMicaBackdropStatics;
        private static IObjectReference _objRef_global__Microsoft_UI_Xaml_Media_IMicaBackdropStatics
        {
            get
            { 
                var factory = ___objRef_global__Microsoft_UI_Xaml_Media_IMicaBackdropStatics;
                if (factory != null && factory.IsInCurrentContext)
                {
                    return factory;
                }
                else
                {
                    return ___objRef_global__Microsoft_UI_Xaml_Media_IMicaBackdropStatics = ActivationFactory.Get("Microsoft.UI.Xaml.Media.MicaBackdrop", global::ABI.Microsoft.UI.Xaml.Media.IMicaBackdropStaticsMethods.IID);
                }
            }
        }

        public static global::Microsoft.UI.Xaml.DependencyProperty KindProperty => global::ABI.Microsoft.UI.Xaml.Media.IMicaBackdropStaticsMethods.get_KindProperty(_objRef_global__Microsoft_UI_Xaml_Media_IMicaBackdropStatics);

        public static new MicaBackdrop FromAbi(IntPtr thisPtr)
        {
            if (thisPtr == IntPtr.Zero) return null;
            return MarshalInspectable<MicaBackdrop>.FromAbi(thisPtr);
        }

        protected internal MicaBackdrop(IObjectReference objRef)
            : base(global::WinRT.DerivedComposed.Instance)

        {
            _inner = objRef.As(global::ABI.Microsoft.UI.Xaml.Media.IMicaBackdropMethods.IID);

        }


        public static bool operator ==(MicaBackdrop x, MicaBackdrop y) => (x?.ThisPtr ?? IntPtr.Zero) == (y?.ThisPtr ?? IntPtr.Zero);
        public static bool operator !=(MicaBackdrop x, MicaBackdrop y) => !(x == y);
        public bool Equals(MicaBackdrop other) => this == other;
        public override bool Equals(object obj) => obj is MicaBackdrop that && this == that;
        public override int GetHashCode() => ThisPtr.GetHashCode();


        protected MicaBackdrop(global::WinRT.DerivedComposed _):base(_)
        {

        }
        bool IWinRTObject.HasUnwrappableNativeObject => this.GetType() == typeof(MicaBackdrop);
        IObjectReference IWinRTObject.NativeObject => _inner;

        private struct InterfaceTag<I>{};


        public global::Microsoft.UI.Composition.SystemBackdrops.MicaKind Kind
        {
            get => global::ABI.Microsoft.UI.Xaml.Media.IMicaBackdropMethods.get_Kind(_objRef_global__Microsoft_UI_Xaml_Media_IMicaBackdrop);
            set => global::ABI.Microsoft.UI.Xaml.Media.IMicaBackdropMethods.set_Kind(_objRef_global__Microsoft_UI_Xaml_Media_IMicaBackdrop, value);
        }

        protected override bool IsOverridableInterface(Guid iid) => base.IsOverridableInterface(iid);

        global::System.Runtime.InteropServices.CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(ref Guid iid, out IntPtr ppv)
        {
            ppv = IntPtr.Zero;
            if (IsOverridableInterface(iid) || global::WinRT.Interop.IID.IID_IInspectable == iid)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
            }

            if (((IWinRTObject)this).NativeObject.TryAs(iid, out ppv) >= 0)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.Handled;
            }

            return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
        }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")]
    [global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Media.PathFigure))]
    [global::ABI.Microsoft.UI.Xaml.Media.PathFigureRcwFactory]
    [global::WinRT.ProjectedRuntimeClass(typeof(IPathFigure))]
    [global::Microsoft.UI.Xaml.Markup.ContentProperty(Name = @"Segments")]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    public sealed class PathFigure : global::Microsoft.UI.Xaml.DependencyObject, global::System.Runtime.InteropServices.ICustomQueryInterface, IWinRTObject, IEquatable<PathFigure>
    {
        private IntPtr ThisPtr => _inner == null ? (((IWinRTObject)this).NativeObject).ThisPtr : _inner.ThisPtr;

        private readonly IObjectReference _inner = null;



        private IObjectReference _objRef_global__Microsoft_UI_Xaml_Media_IPathFigure => _inner;


        private static volatile IObjectReference ___objRef_global__Microsoft_UI_Xaml_Media_PathFigure;
        private static IObjectReference _objRef_global__Microsoft_UI_Xaml_Media_PathFigure
        {
            get
            { 
                var factory = ___objRef_global__Microsoft_UI_Xaml_Media_PathFigure;
                if (factory != null && factory.IsInCurrentContext)
                {
                    return factory;
                }
                else
                {
                    return ___objRef_global__Microsoft_UI_Xaml_Media_PathFigure = ActivationFactory.Get("Microsoft.UI.Xaml.Media.PathFigure");
                }
            }
        }

        public PathFigure() :base(global::WinRT.DerivedComposed.Instance)
        {
            _inner = global::ABI.WinRT.Interop.IActivationFactoryMethods.ActivateInstanceUnsafe(_objRef_global__Microsoft_UI_Xaml_Media_PathFigure, global::ABI.Microsoft.UI.Xaml.Media.IPathFigureMethods.IID);
            ComWrappersSupport.RegisterObjectForInterface(this, ThisPtr);
            ComWrappersHelper.Init(_inner, false);

        }

        public static I As<I>() => ActivationFactory.Get("Microsoft.UI.Xaml.Media.PathFigure").AsInterface<I>();

        private static volatile IObjectReference ___objRef_global__Microsoft_UI_Xaml_Media_IPathFigureStatics;
        private static IObjectReference _objRef_global__Microsoft_UI_Xaml_Media_IPathFigureStatics
        {
            get
            { 
                var factory = ___objRef_global__Microsoft_UI_Xaml_Media_IPathFigureStatics;
                if (factory != null && factory.IsInCurrentContext)
                {
                    return factory;
                }
                else
                {
                    return ___objRef_global__Microsoft_UI_Xaml_Media_IPathFigureStatics = ActivationFactory.Get("Microsoft.UI.Xaml.Media.PathFigure", global::ABI.Microsoft.UI.Xaml.Media.IPathFigureStaticsMethods.IID);
                }
            }
        }

        public static global::Microsoft.UI.Xaml.DependencyProperty IsClosedProperty => global::ABI.Microsoft.UI.Xaml.Media.IPathFigureStaticsMethods.get_IsClosedProperty(_objRef_global__Microsoft_UI_Xaml_Media_IPathFigureStatics);

        public static global::Microsoft.UI.Xaml.DependencyProperty IsFilledProperty => global::ABI.Microsoft.UI.Xaml.Media.IPathFigureStaticsMethods.get_IsFilledProperty(_objRef_global__Microsoft_UI_Xaml_Media_IPathFigureStatics);

        public static global::Microsoft.UI.Xaml.DependencyProperty SegmentsProperty => global::ABI.Microsoft.UI.Xaml.Media.IPathFigureStaticsMethods.get_SegmentsProperty(_objRef_global__Microsoft_UI_Xaml_Media_IPathFigureStatics);

        public static global::Microsoft.UI.Xaml.DependencyProperty StartPointProperty => global::ABI.Microsoft.UI.Xaml.Media.IPathFigureStaticsMethods.get_StartPointProperty(_objRef_global__Microsoft_UI_Xaml_Media_IPathFigureStatics);

        public static new PathFigure FromAbi(IntPtr thisPtr)
        {
            if (thisPtr == IntPtr.Zero) return null;
            return MarshalInspectable<PathFigure>.FromAbi(thisPtr);
        }

        internal PathFigure(IObjectReference objRef)
            : base(global::WinRT.DerivedComposed.Instance)

        {
            _inner = objRef.As(global::ABI.Microsoft.UI.Xaml.Media.IPathFigureMethods.IID);

        }


        public static bool operator ==(PathFigure x, PathFigure y) => (x?.ThisPtr ?? IntPtr.Zero) == (y?.ThisPtr ?? IntPtr.Zero);
        public static bool operator !=(PathFigure x, PathFigure y) => !(x == y);
        public bool Equals(PathFigure other) => this == other;
        public override bool Equals(object obj) => obj is PathFigure that && this == that;
        public override int GetHashCode() => ThisPtr.GetHashCode();


        bool IWinRTObject.HasUnwrappableNativeObject => true;
        IObjectReference IWinRTObject.NativeObject => _inner;

        private struct InterfaceTag<I>{};


        public bool IsClosed
        {
            get => global::ABI.Microsoft.UI.Xaml.Media.IPathFigureMethods.get_IsClosed(_objRef_global__Microsoft_UI_Xaml_Media_IPathFigure);
            set => global::ABI.Microsoft.UI.Xaml.Media.IPathFigureMethods.set_IsClosed(_objRef_global__Microsoft_UI_Xaml_Media_IPathFigure, value);
        }

        public bool IsFilled
        {
            get => global::ABI.Microsoft.UI.Xaml.Media.IPathFigureMethods.get_IsFilled(_objRef_global__Microsoft_UI_Xaml_Media_IPathFigure);
            set => global::ABI.Microsoft.UI.Xaml.Media.IPathFigureMethods.set_IsFilled(_objRef_global__Microsoft_UI_Xaml_Media_IPathFigure, value);
        }

        public PathSegmentCollection Segments
        {
            get => global::ABI.Microsoft.UI.Xaml.Media.IPathFigureMethods.get_Segments(_objRef_global__Microsoft_UI_Xaml_Media_IPathFigure);
            set => global::ABI.Microsoft.UI.Xaml.Media.IPathFigureMethods.set_Segments(_objRef_global__Microsoft_UI_Xaml_Media_IPathFigure, value);
        }

        public global::Windows.Foundation.Point StartPoint
        {
            get => global::ABI.Microsoft.UI.Xaml.Media.IPathFigureMethods.get_StartPoint(_objRef_global__Microsoft_UI_Xaml_Media_IPathFigure);
            set => global::ABI.Microsoft.UI.Xaml.Media.IPathFigureMethods.set_StartPoint(_objRef_global__Microsoft_UI_Xaml_Media_IPathFigure, value);
        }

        protected override bool IsOverridableInterface(Guid iid) => base.IsOverridableInterface(iid);

        global::System.Runtime.InteropServices.CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(ref Guid iid, out IntPtr ppv)
        {
            ppv = IntPtr.Zero;
            if (IsOverridableInterface(iid) || global::WinRT.Interop.IID.IID_IInspectable == iid)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
            }

            if (((IWinRTObject)this).NativeObject.TryAs(iid, out ppv) >= 0)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.Handled;
            }

            return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
        }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")]
    [global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Media.PathFigureCollection))]
    [global::ABI.Microsoft.UI.Xaml.Media.PathFigureCollectionRcwFactory]
    [global::WinRT.ProjectedRuntimeClass(typeof(global::System.Collections.Generic.IList<PathFigure>))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    public sealed class PathFigureCollection : global::System.Collections.Generic.IList<PathFigure>, global::System.Collections.Generic.IEnumerable<PathFigure>, global::System.Runtime.InteropServices.ICustomQueryInterface, IWinRTObject, IEquatable<PathFigureCollection>
    {
        private IntPtr ThisPtr => _inner == null ? (((IWinRTObject)this).NativeObject).ThisPtr : _inner.ThisPtr;

        private readonly IObjectReference _inner = null;




        private volatile IObjectReference ___objRef_global__System_Collections_Generic_IList_PathFigure_;
        private IObjectReference Make___objRef_global__System_Collections_Generic_IList_PathFigure_()
        {
            _ = global::WinRT.GenericTypeInstantiations.Windows_Foundation_Collections_IVector_1_Microsoft_UI_Xaml_Media_PathFigure.EnsureInitialized();
            global::System.Threading.Interlocked.CompareExchange(ref ___objRef_global__System_Collections_Generic_IList_PathFigure_, ((IWinRTObject)this).NativeObject.As<IUnknownVftbl>(global::ABI.System.Collections.Generic.IListMethods<PathFigure>.IID), null);
            return ___objRef_global__System_Collections_Generic_IList_PathFigure_;
        }
        private IObjectReference _objRef_global__System_Collections_Generic_IList_PathFigure_ => ___objRef_global__System_Collections_Generic_IList_PathFigure_ ?? Make___objRef_global__System_Collections_Generic_IList_PathFigure_();

        private volatile IObjectReference ___objRef_global__System_Collections_Generic_IEnumerable_PathFigure_;
        private IObjectReference Make___objRef_global__System_Collections_Generic_IEnumerable_PathFigure_()
        {
            _ = global::WinRT.GenericTypeInstantiations.Windows_Foundation_Collections_IIterable_1_Microsoft_UI_Xaml_Media_PathFigure.EnsureInitialized();
            global::System.Threading.Interlocked.CompareExchange(ref ___objRef_global__System_Collections_Generic_IEnumerable_PathFigure_, ((IWinRTObject)this).NativeObject.As<IUnknownVftbl>(global::ABI.System.Collections.Generic.IEnumerableMethods<PathFigure>.IID), null);
            return ___objRef_global__System_Collections_Generic_IEnumerable_PathFigure_;
        }
        private IObjectReference _objRef_global__System_Collections_Generic_IEnumerable_PathFigure_ => ___objRef_global__System_Collections_Generic_IEnumerable_PathFigure_ ?? Make___objRef_global__System_Collections_Generic_IEnumerable_PathFigure_();



        private static volatile IObjectReference ___objRef_global__Microsoft_UI_Xaml_Media_PathFigureCollection;
        private static IObjectReference _objRef_global__Microsoft_UI_Xaml_Media_PathFigureCollection
        {
            get
            { 
                var factory = ___objRef_global__Microsoft_UI_Xaml_Media_PathFigureCollection;
                if (factory != null && factory.IsInCurrentContext)
                {
                    return factory;
                }
                else
                {
                    return ___objRef_global__Microsoft_UI_Xaml_Media_PathFigureCollection = ActivationFactory.Get("Microsoft.UI.Xaml.Media.PathFigureCollection");
                }
            }
        }

        public PathFigureCollection() 
        {
            _inner = global::ABI.WinRT.Interop.IActivationFactoryMethods.ActivateInstanceUnsafe(_objRef_global__Microsoft_UI_Xaml_Media_PathFigureCollection, global::ABI.System.Collections.Generic.IListMethods<PathFigure>.IID);
            ComWrappersSupport.RegisterObjectForInterface(this, ThisPtr);
            ComWrappersHelper.Init(_inner, false);

        }

        public static PathFigureCollection FromAbi(IntPtr thisPtr)
        {
            if (thisPtr == IntPtr.Zero) return null;
            return MarshalInspectable<PathFigureCollection>.FromAbi(thisPtr);
        }

        internal PathFigureCollection(IObjectReference objRef)
        {
            _inner = objRef.As(global::ABI.System.Collections.Generic.IListMethods<PathFigure>.IID);

        }


        public static bool operator ==(PathFigureCollection x, PathFigureCollection y) => (x?.ThisPtr ?? IntPtr.Zero) == (y?.ThisPtr ?? IntPtr.Zero);
        public static bool operator !=(PathFigureCollection x, PathFigureCollection y) => !(x == y);
        public bool Equals(PathFigureCollection other) => this == other;
        public override bool Equals(object obj) => obj is PathFigureCollection that && this == that;
        public override int GetHashCode() => ThisPtr.GetHashCode();


        bool IWinRTObject.HasUnwrappableNativeObject => true;
        IObjectReference IWinRTObject.NativeObject => _inner;
        private volatile global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> _queryInterfaceCache;
        private global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> MakeQueryInterfaceCache()
        {
            global::System.Threading.Interlocked.CompareExchange(ref _queryInterfaceCache, new global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference>(), null); 
            return _queryInterfaceCache;
        }
        global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> IWinRTObject.QueryInterfaceCache => _queryInterfaceCache ?? MakeQueryInterfaceCache();
        private volatile global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> _additionalTypeData;
        private global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> MakeAdditionalTypeData()
        {
            global::System.Threading.Interlocked.CompareExchange(ref _additionalTypeData, new global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object>(), null); 
            return _additionalTypeData;
        }
        global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> IWinRTObject.AdditionalTypeData => _additionalTypeData ?? MakeAdditionalTypeData();

        private struct InterfaceTag<I>{};


        public int Count => global::ABI.System.Collections.Generic.IListMethods<PathFigure>.get_Count(_objRef_global__System_Collections_Generic_IList_PathFigure_);
        public bool IsReadOnly => global::ABI.System.Collections.Generic.IListMethods<PathFigure>.get_IsReadOnly(_objRef_global__System_Collections_Generic_IList_PathFigure_);
        [global::System.Runtime.CompilerServices.IndexerName("ListItem")]
        public PathFigure this[int index] 
        {
            get => global::ABI.System.Collections.Generic.IListMethods<PathFigure>.Indexer_Get(_objRef_global__System_Collections_Generic_IList_PathFigure_, index);
            set => global::ABI.System.Collections.Generic.IListMethods<PathFigure>.Indexer_Set(_objRef_global__System_Collections_Generic_IList_PathFigure_, index, value);
        }
        public int IndexOf(PathFigure item) => global::ABI.System.Collections.Generic.IListMethods<PathFigure>.IndexOf(_objRef_global__System_Collections_Generic_IList_PathFigure_, item);
        public void Insert(int index, PathFigure item) => global::ABI.System.Collections.Generic.IListMethods<PathFigure>.Insert(_objRef_global__System_Collections_Generic_IList_PathFigure_, index, item);
        public void RemoveAt(int index) => global::ABI.System.Collections.Generic.IListMethods<PathFigure>.RemoveAt(_objRef_global__System_Collections_Generic_IList_PathFigure_, index);
        public void Add(PathFigure item) => global::ABI.System.Collections.Generic.IListMethods<PathFigure>.Add(_objRef_global__System_Collections_Generic_IList_PathFigure_, item);
        public void Clear() => global::ABI.System.Collections.Generic.IListMethods<PathFigure>.Clear(_objRef_global__System_Collections_Generic_IList_PathFigure_);
        public bool Contains(PathFigure item) => global::ABI.System.Collections.Generic.IListMethods<PathFigure>.Contains(_objRef_global__System_Collections_Generic_IList_PathFigure_, item);
        public void CopyTo(PathFigure[] array, int arrayIndex) => global::ABI.System.Collections.Generic.IListMethods<PathFigure>.CopyTo(_objRef_global__System_Collections_Generic_IList_PathFigure_, array, arrayIndex);
        public bool Remove(PathFigure item) => global::ABI.System.Collections.Generic.IListMethods<PathFigure>.Remove(_objRef_global__System_Collections_Generic_IList_PathFigure_, item);

        public IEnumerator<PathFigure> GetEnumerator() => global::ABI.System.Collections.Generic.IEnumerableMethods<PathFigure>.GetEnumerator(_objRef_global__System_Collections_Generic_IEnumerable_PathFigure_);

        IEnumerator IEnumerable.GetEnumerator() => GetEnumerator();

        private bool IsOverridableInterface(Guid iid) => false;

        global::System.Runtime.InteropServices.CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(ref Guid iid, out IntPtr ppv)
        {
            ppv = IntPtr.Zero;
            if (IsOverridableInterface(iid) || global::WinRT.Interop.IID.IID_IInspectable == iid)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
            }

            if (((IWinRTObject)this).NativeObject.TryAs(iid, out ppv) >= 0)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.Handled;
            }

            return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
        }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")]
    [global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Media.PathGeometry))]
    [global::ABI.Microsoft.UI.Xaml.Media.PathGeometryRcwFactory]
    [global::WinRT.ProjectedRuntimeClass(typeof(IPathGeometry))]
    [global::Microsoft.UI.Xaml.Markup.ContentProperty(Name = @"Figures")]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    public sealed class PathGeometry : Geometry, global::System.Runtime.InteropServices.ICustomQueryInterface, IWinRTObject, IEquatable<PathGeometry>
    {
        private IntPtr ThisPtr => _inner == null ? (((IWinRTObject)this).NativeObject).ThisPtr : _inner.ThisPtr;

        private readonly IObjectReference _inner = null;



        private IObjectReference _objRef_global__Microsoft_UI_Xaml_Media_IPathGeometry => _inner;


        private static volatile IObjectReference ___objRef_global__Microsoft_UI_Xaml_Media_PathGeometry;
        private static IObjectReference _objRef_global__Microsoft_UI_Xaml_Media_PathGeometry
        {
            get
            { 
                var factory = ___objRef_global__Microsoft_UI_Xaml_Media_PathGeometry;
                if (factory != null && factory.IsInCurrentContext)
                {
                    return factory;
                }
                else
                {
                    return ___objRef_global__Microsoft_UI_Xaml_Media_PathGeometry = ActivationFactory.Get("Microsoft.UI.Xaml.Media.PathGeometry");
                }
            }
        }

        public PathGeometry() :base(global::WinRT.DerivedComposed.Instance)
        {
            _inner = global::ABI.WinRT.Interop.IActivationFactoryMethods.ActivateInstanceUnsafe(_objRef_global__Microsoft_UI_Xaml_Media_PathGeometry, global::ABI.Microsoft.UI.Xaml.Media.IPathGeometryMethods.IID);
            ComWrappersSupport.RegisterObjectForInterface(this, ThisPtr);
            ComWrappersHelper.Init(_inner, false);

        }

        public static new I As<I>() => ActivationFactory.Get("Microsoft.UI.Xaml.Media.PathGeometry").AsInterface<I>();

        private static volatile IObjectReference ___objRef_global__Microsoft_UI_Xaml_Media_IPathGeometryStatics;
        private static IObjectReference _objRef_global__Microsoft_UI_Xaml_Media_IPathGeometryStatics
        {
            get
            { 
                var factory = ___objRef_global__Microsoft_UI_Xaml_Media_IPathGeometryStatics;
                if (factory != null && factory.IsInCurrentContext)
                {
                    return factory;
                }
                else
                {
                    return ___objRef_global__Microsoft_UI_Xaml_Media_IPathGeometryStatics = ActivationFactory.Get("Microsoft.UI.Xaml.Media.PathGeometry", global::ABI.Microsoft.UI.Xaml.Media.IPathGeometryStaticsMethods.IID);
                }
            }
        }

        public static global::Microsoft.UI.Xaml.DependencyProperty FiguresProperty => global::ABI.Microsoft.UI.Xaml.Media.IPathGeometryStaticsMethods.get_FiguresProperty(_objRef_global__Microsoft_UI_Xaml_Media_IPathGeometryStatics);

        public static global::Microsoft.UI.Xaml.DependencyProperty FillRuleProperty => global::ABI.Microsoft.UI.Xaml.Media.IPathGeometryStaticsMethods.get_FillRuleProperty(_objRef_global__Microsoft_UI_Xaml_Media_IPathGeometryStatics);

        public static new PathGeometry FromAbi(IntPtr thisPtr)
        {
            if (thisPtr == IntPtr.Zero) return null;
            return MarshalInspectable<PathGeometry>.FromAbi(thisPtr);
        }

        internal PathGeometry(IObjectReference objRef)
            : base(global::WinRT.DerivedComposed.Instance)

        {
            _inner = objRef.As(global::ABI.Microsoft.UI.Xaml.Media.IPathGeometryMethods.IID);

        }


        public static bool operator ==(PathGeometry x, PathGeometry y) => (x?.ThisPtr ?? IntPtr.Zero) == (y?.ThisPtr ?? IntPtr.Zero);
        public static bool operator !=(PathGeometry x, PathGeometry y) => !(x == y);
        public bool Equals(PathGeometry other) => this == other;
        public override bool Equals(object obj) => obj is PathGeometry that && this == that;
        public override int GetHashCode() => ThisPtr.GetHashCode();


        bool IWinRTObject.HasUnwrappableNativeObject => true;
        IObjectReference IWinRTObject.NativeObject => _inner;

        private struct InterfaceTag<I>{};


        public PathFigureCollection Figures
        {
            get => global::ABI.Microsoft.UI.Xaml.Media.IPathGeometryMethods.get_Figures(_objRef_global__Microsoft_UI_Xaml_Media_IPathGeometry);
            set => global::ABI.Microsoft.UI.Xaml.Media.IPathGeometryMethods.set_Figures(_objRef_global__Microsoft_UI_Xaml_Media_IPathGeometry, value);
        }

        public FillRule FillRule
        {
            get => global::ABI.Microsoft.UI.Xaml.Media.IPathGeometryMethods.get_FillRule(_objRef_global__Microsoft_UI_Xaml_Media_IPathGeometry);
            set => global::ABI.Microsoft.UI.Xaml.Media.IPathGeometryMethods.set_FillRule(_objRef_global__Microsoft_UI_Xaml_Media_IPathGeometry, value);
        }

        protected override bool IsOverridableInterface(Guid iid) => base.IsOverridableInterface(iid);

        global::System.Runtime.InteropServices.CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(ref Guid iid, out IntPtr ppv)
        {
            ppv = IntPtr.Zero;
            if (IsOverridableInterface(iid) || global::WinRT.Interop.IID.IID_IInspectable == iid)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
            }

            if (((IWinRTObject)this).NativeObject.TryAs(iid, out ppv) >= 0)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.Handled;
            }

            return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
        }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")]
    [global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Media.PathSegment))]
    [global::ABI.Microsoft.UI.Xaml.Media.PathSegmentRcwFactory]
    [global::WinRT.ProjectedRuntimeClass(typeof(IPathSegment))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    public class PathSegment : global::Microsoft.UI.Xaml.DependencyObject, global::System.Runtime.InteropServices.ICustomQueryInterface, IWinRTObject, IEquatable<PathSegment>
    {
        private IntPtr ThisPtr => _inner == null ? (((IWinRTObject)this).NativeObject).ThisPtr : _inner.ThisPtr;

        private readonly IObjectReference _inner = null;




        private volatile IObjectReference ___objRef_global__Microsoft_UI_Xaml_Media_IPathSegment;
        private IObjectReference Make___objRef_global__Microsoft_UI_Xaml_Media_IPathSegment()
        {
            global::System.Threading.Interlocked.CompareExchange(ref ___objRef_global__Microsoft_UI_Xaml_Media_IPathSegment, ((IWinRTObject)this).NativeObject.As<IUnknownVftbl>(global::ABI.Microsoft.UI.Xaml.Media.IPathSegmentMethods.IID), null);
            return ___objRef_global__Microsoft_UI_Xaml_Media_IPathSegment;
        }
        private IObjectReference _objRef_global__Microsoft_UI_Xaml_Media_IPathSegment => ___objRef_global__Microsoft_UI_Xaml_Media_IPathSegment ?? Make___objRef_global__Microsoft_UI_Xaml_Media_IPathSegment();



        private static class _IPathSegmentFactoryMethods
        {}

        private static volatile IObjectReference ___objRef_global__Microsoft_UI_Xaml_Media_IPathSegmentFactory;
        private static IObjectReference _objRef_global__Microsoft_UI_Xaml_Media_IPathSegmentFactory
        {
            get
            { 
                var factory = ___objRef_global__Microsoft_UI_Xaml_Media_IPathSegmentFactory;
                if (factory != null && factory.IsInCurrentContext)
                {
                    return factory;
                }
                else
                {
                    return ___objRef_global__Microsoft_UI_Xaml_Media_IPathSegmentFactory = ActivationFactory.Get("Microsoft.UI.Xaml.Media.PathSegment", global::ABI.Microsoft.UI.Xaml.Media.IPathSegmentFactoryMethods.IID);
                }
            }
        }

        public static new PathSegment FromAbi(IntPtr thisPtr)
        {
            if (thisPtr == IntPtr.Zero) return null;
            return MarshalInspectable<PathSegment>.FromAbi(thisPtr);
        }

        protected internal PathSegment(IObjectReference objRef)
            : base(global::WinRT.DerivedComposed.Instance)

        {
            _inner = objRef.As(global::ABI.Microsoft.UI.Xaml.Media.IPathSegmentMethods.IID);

        }


        public static bool operator ==(PathSegment x, PathSegment y) => (x?.ThisPtr ?? IntPtr.Zero) == (y?.ThisPtr ?? IntPtr.Zero);
        public static bool operator !=(PathSegment x, PathSegment y) => !(x == y);
        public bool Equals(PathSegment other) => this == other;
        public override bool Equals(object obj) => obj is PathSegment that && this == that;
        public override int GetHashCode() => ThisPtr.GetHashCode();


        protected PathSegment(global::WinRT.DerivedComposed _):base(_)
        {

        }
        bool IWinRTObject.HasUnwrappableNativeObject => this.GetType() == typeof(PathSegment);
        IObjectReference IWinRTObject.NativeObject => _inner;

        private struct InterfaceTag<I>{};


        protected override bool IsOverridableInterface(Guid iid) => base.IsOverridableInterface(iid);

        global::System.Runtime.InteropServices.CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(ref Guid iid, out IntPtr ppv)
        {
            ppv = IntPtr.Zero;
            if (IsOverridableInterface(iid) || global::WinRT.Interop.IID.IID_IInspectable == iid)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
            }

            if (((IWinRTObject)this).NativeObject.TryAs(iid, out ppv) >= 0)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.Handled;
            }

            return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
        }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")]
    [global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Media.PathSegmentCollection))]
    [global::ABI.Microsoft.UI.Xaml.Media.PathSegmentCollectionRcwFactory]
    [global::WinRT.ProjectedRuntimeClass(typeof(global::System.Collections.Generic.IList<PathSegment>))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    public sealed class PathSegmentCollection : global::System.Collections.Generic.IList<PathSegment>, global::System.Collections.Generic.IEnumerable<PathSegment>, global::System.Runtime.InteropServices.ICustomQueryInterface, IWinRTObject, IEquatable<PathSegmentCollection>
    {
        private IntPtr ThisPtr => _inner == null ? (((IWinRTObject)this).NativeObject).ThisPtr : _inner.ThisPtr;

        private readonly IObjectReference _inner = null;




        private volatile IObjectReference ___objRef_global__System_Collections_Generic_IList_PathSegment_;
        private IObjectReference Make___objRef_global__System_Collections_Generic_IList_PathSegment_()
        {
            _ = global::WinRT.GenericTypeInstantiations.Windows_Foundation_Collections_IVector_1_Microsoft_UI_Xaml_Media_PathSegment.EnsureInitialized();
            global::System.Threading.Interlocked.CompareExchange(ref ___objRef_global__System_Collections_Generic_IList_PathSegment_, ((IWinRTObject)this).NativeObject.As<IUnknownVftbl>(global::ABI.System.Collections.Generic.IListMethods<PathSegment>.IID), null);
            return ___objRef_global__System_Collections_Generic_IList_PathSegment_;
        }
        private IObjectReference _objRef_global__System_Collections_Generic_IList_PathSegment_ => ___objRef_global__System_Collections_Generic_IList_PathSegment_ ?? Make___objRef_global__System_Collections_Generic_IList_PathSegment_();

        private volatile IObjectReference ___objRef_global__System_Collections_Generic_IEnumerable_PathSegment_;
        private IObjectReference Make___objRef_global__System_Collections_Generic_IEnumerable_PathSegment_()
        {
            _ = global::WinRT.GenericTypeInstantiations.Windows_Foundation_Collections_IIterable_1_Microsoft_UI_Xaml_Media_PathSegment.EnsureInitialized();
            global::System.Threading.Interlocked.CompareExchange(ref ___objRef_global__System_Collections_Generic_IEnumerable_PathSegment_, ((IWinRTObject)this).NativeObject.As<IUnknownVftbl>(global::ABI.System.Collections.Generic.IEnumerableMethods<PathSegment>.IID), null);
            return ___objRef_global__System_Collections_Generic_IEnumerable_PathSegment_;
        }
        private IObjectReference _objRef_global__System_Collections_Generic_IEnumerable_PathSegment_ => ___objRef_global__System_Collections_Generic_IEnumerable_PathSegment_ ?? Make___objRef_global__System_Collections_Generic_IEnumerable_PathSegment_();



        private static volatile IObjectReference ___objRef_global__Microsoft_UI_Xaml_Media_PathSegmentCollection;
        private static IObjectReference _objRef_global__Microsoft_UI_Xaml_Media_PathSegmentCollection
        {
            get
            { 
                var factory = ___objRef_global__Microsoft_UI_Xaml_Media_PathSegmentCollection;
                if (factory != null && factory.IsInCurrentContext)
                {
                    return factory;
                }
                else
                {
                    return ___objRef_global__Microsoft_UI_Xaml_Media_PathSegmentCollection = ActivationFactory.Get("Microsoft.UI.Xaml.Media.PathSegmentCollection");
                }
            }
        }

        public PathSegmentCollection() 
        {
            _inner = global::ABI.WinRT.Interop.IActivationFactoryMethods.ActivateInstanceUnsafe(_objRef_global__Microsoft_UI_Xaml_Media_PathSegmentCollection, global::ABI.System.Collections.Generic.IListMethods<PathSegment>.IID);
            ComWrappersSupport.RegisterObjectForInterface(this, ThisPtr);
            ComWrappersHelper.Init(_inner, false);

        }

        public static PathSegmentCollection FromAbi(IntPtr thisPtr)
        {
            if (thisPtr == IntPtr.Zero) return null;
            return MarshalInspectable<PathSegmentCollection>.FromAbi(thisPtr);
        }

        internal PathSegmentCollection(IObjectReference objRef)
        {
            _inner = objRef.As(global::ABI.System.Collections.Generic.IListMethods<PathSegment>.IID);

        }


        public static bool operator ==(PathSegmentCollection x, PathSegmentCollection y) => (x?.ThisPtr ?? IntPtr.Zero) == (y?.ThisPtr ?? IntPtr.Zero);
        public static bool operator !=(PathSegmentCollection x, PathSegmentCollection y) => !(x == y);
        public bool Equals(PathSegmentCollection other) => this == other;
        public override bool Equals(object obj) => obj is PathSegmentCollection that && this == that;
        public override int GetHashCode() => ThisPtr.GetHashCode();


        bool IWinRTObject.HasUnwrappableNativeObject => true;
        IObjectReference IWinRTObject.NativeObject => _inner;
        private volatile global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> _queryInterfaceCache;
        private global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> MakeQueryInterfaceCache()
        {
            global::System.Threading.Interlocked.CompareExchange(ref _queryInterfaceCache, new global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference>(), null); 
            return _queryInterfaceCache;
        }
        global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> IWinRTObject.QueryInterfaceCache => _queryInterfaceCache ?? MakeQueryInterfaceCache();
        private volatile global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> _additionalTypeData;
        private global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> MakeAdditionalTypeData()
        {
            global::System.Threading.Interlocked.CompareExchange(ref _additionalTypeData, new global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object>(), null); 
            return _additionalTypeData;
        }
        global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> IWinRTObject.AdditionalTypeData => _additionalTypeData ?? MakeAdditionalTypeData();

        private struct InterfaceTag<I>{};


        public int Count => global::ABI.System.Collections.Generic.IListMethods<PathSegment>.get_Count(_objRef_global__System_Collections_Generic_IList_PathSegment_);
        public bool IsReadOnly => global::ABI.System.Collections.Generic.IListMethods<PathSegment>.get_IsReadOnly(_objRef_global__System_Collections_Generic_IList_PathSegment_);
        [global::System.Runtime.CompilerServices.IndexerName("ListItem")]
        public PathSegment this[int index] 
        {
            get => global::ABI.System.Collections.Generic.IListMethods<PathSegment>.Indexer_Get(_objRef_global__System_Collections_Generic_IList_PathSegment_, index);
            set => global::ABI.System.Collections.Generic.IListMethods<PathSegment>.Indexer_Set(_objRef_global__System_Collections_Generic_IList_PathSegment_, index, value);
        }
        public int IndexOf(PathSegment item) => global::ABI.System.Collections.Generic.IListMethods<PathSegment>.IndexOf(_objRef_global__System_Collections_Generic_IList_PathSegment_, item);
        public void Insert(int index, PathSegment item) => global::ABI.System.Collections.Generic.IListMethods<PathSegment>.Insert(_objRef_global__System_Collections_Generic_IList_PathSegment_, index, item);
        public void RemoveAt(int index) => global::ABI.System.Collections.Generic.IListMethods<PathSegment>.RemoveAt(_objRef_global__System_Collections_Generic_IList_PathSegment_, index);
        public void Add(PathSegment item) => global::ABI.System.Collections.Generic.IListMethods<PathSegment>.Add(_objRef_global__System_Collections_Generic_IList_PathSegment_, item);
        public void Clear() => global::ABI.System.Collections.Generic.IListMethods<PathSegment>.Clear(_objRef_global__System_Collections_Generic_IList_PathSegment_);
        public bool Contains(PathSegment item) => global::ABI.System.Collections.Generic.IListMethods<PathSegment>.Contains(_objRef_global__System_Collections_Generic_IList_PathSegment_, item);
        public void CopyTo(PathSegment[] array, int arrayIndex) => global::ABI.System.Collections.Generic.IListMethods<PathSegment>.CopyTo(_objRef_global__System_Collections_Generic_IList_PathSegment_, array, arrayIndex);
        public bool Remove(PathSegment item) => global::ABI.System.Collections.Generic.IListMethods<PathSegment>.Remove(_objRef_global__System_Collections_Generic_IList_PathSegment_, item);

        public IEnumerator<PathSegment> GetEnumerator() => global::ABI.System.Collections.Generic.IEnumerableMethods<PathSegment>.GetEnumerator(_objRef_global__System_Collections_Generic_IEnumerable_PathSegment_);

        IEnumerator IEnumerable.GetEnumerator() => GetEnumerator();

        private bool IsOverridableInterface(Guid iid) => false;

        global::System.Runtime.InteropServices.CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(ref Guid iid, out IntPtr ppv)
        {
            ppv = IntPtr.Zero;
            if (IsOverridableInterface(iid) || global::WinRT.Interop.IID.IID_IInspectable == iid)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
            }

            if (((IWinRTObject)this).NativeObject.TryAs(iid, out ppv) >= 0)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.Handled;
            }

            return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
        }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")][global::WinRT.WinRTExposedType(typeof(global::WinRT.EnumTypeDetails<PenLineCap>))][global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    public enum PenLineCap : int
    {
        Flat = unchecked((int)0),
        Square = unchecked((int)0x1),
        Round = unchecked((int)0x2),
        Triangle = unchecked((int)0x3),
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")][global::WinRT.WinRTExposedType(typeof(global::WinRT.EnumTypeDetails<PenLineJoin>))][global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    public enum PenLineJoin : int
    {
        Miter = unchecked((int)0),
        Bevel = unchecked((int)0x1),
        Round = unchecked((int)0x2),
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")]
    [global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Media.PlaneProjection))]
    [global::ABI.Microsoft.UI.Xaml.Media.PlaneProjectionRcwFactory]
    [global::WinRT.ProjectedRuntimeClass(typeof(IPlaneProjection))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    public sealed class PlaneProjection : Projection, global::System.Runtime.InteropServices.ICustomQueryInterface, IWinRTObject, IEquatable<PlaneProjection>
    {
        private IntPtr ThisPtr => _inner == null ? (((IWinRTObject)this).NativeObject).ThisPtr : _inner.ThisPtr;

        private readonly IObjectReference _inner = null;



        private IObjectReference _objRef_global__Microsoft_UI_Xaml_Media_IPlaneProjection => _inner;


        private static volatile IObjectReference ___objRef_global__Microsoft_UI_Xaml_Media_PlaneProjection;
        private static IObjectReference _objRef_global__Microsoft_UI_Xaml_Media_PlaneProjection
        {
            get
            { 
                var factory = ___objRef_global__Microsoft_UI_Xaml_Media_PlaneProjection;
                if (factory != null && factory.IsInCurrentContext)
                {
                    return factory;
                }
                else
                {
                    return ___objRef_global__Microsoft_UI_Xaml_Media_PlaneProjection = ActivationFactory.Get("Microsoft.UI.Xaml.Media.PlaneProjection");
                }
            }
        }

        public PlaneProjection() :base(global::WinRT.DerivedComposed.Instance)
        {
            _inner = global::ABI.WinRT.Interop.IActivationFactoryMethods.ActivateInstanceUnsafe(_objRef_global__Microsoft_UI_Xaml_Media_PlaneProjection, global::ABI.Microsoft.UI.Xaml.Media.IPlaneProjectionMethods.IID);
            ComWrappersSupport.RegisterObjectForInterface(this, ThisPtr);
            ComWrappersHelper.Init(_inner, false);

        }

        public static I As<I>() => ActivationFactory.Get("Microsoft.UI.Xaml.Media.PlaneProjection").AsInterface<I>();

        private static volatile IObjectReference ___objRef_global__Microsoft_UI_Xaml_Media_IPlaneProjectionStatics;
        private static IObjectReference _objRef_global__Microsoft_UI_Xaml_Media_IPlaneProjectionStatics
        {
            get
            { 
                var factory = ___objRef_global__Microsoft_UI_Xaml_Media_IPlaneProjectionStatics;
                if (factory != null && factory.IsInCurrentContext)
                {
                    return factory;
                }
                else
                {
                    return ___objRef_global__Microsoft_UI_Xaml_Media_IPlaneProjectionStatics = ActivationFactory.Get("Microsoft.UI.Xaml.Media.PlaneProjection", global::ABI.Microsoft.UI.Xaml.Media.IPlaneProjectionStaticsMethods.IID);
                }
            }
        }

        public static global::Microsoft.UI.Xaml.DependencyProperty CenterOfRotationXProperty => global::ABI.Microsoft.UI.Xaml.Media.IPlaneProjectionStaticsMethods.get_CenterOfRotationXProperty(_objRef_global__Microsoft_UI_Xaml_Media_IPlaneProjectionStatics);

        public static global::Microsoft.UI.Xaml.DependencyProperty CenterOfRotationYProperty => global::ABI.Microsoft.UI.Xaml.Media.IPlaneProjectionStaticsMethods.get_CenterOfRotationYProperty(_objRef_global__Microsoft_UI_Xaml_Media_IPlaneProjectionStatics);

        public static global::Microsoft.UI.Xaml.DependencyProperty CenterOfRotationZProperty => global::ABI.Microsoft.UI.Xaml.Media.IPlaneProjectionStaticsMethods.get_CenterOfRotationZProperty(_objRef_global__Microsoft_UI_Xaml_Media_IPlaneProjectionStatics);

        public static global::Microsoft.UI.Xaml.DependencyProperty GlobalOffsetXProperty => global::ABI.Microsoft.UI.Xaml.Media.IPlaneProjectionStaticsMethods.get_GlobalOffsetXProperty(_objRef_global__Microsoft_UI_Xaml_Media_IPlaneProjectionStatics);

        public static global::Microsoft.UI.Xaml.DependencyProperty GlobalOffsetYProperty => global::ABI.Microsoft.UI.Xaml.Media.IPlaneProjectionStaticsMethods.get_GlobalOffsetYProperty(_objRef_global__Microsoft_UI_Xaml_Media_IPlaneProjectionStatics);

        public static global::Microsoft.UI.Xaml.DependencyProperty GlobalOffsetZProperty => global::ABI.Microsoft.UI.Xaml.Media.IPlaneProjectionStaticsMethods.get_GlobalOffsetZProperty(_objRef_global__Microsoft_UI_Xaml_Media_IPlaneProjectionStatics);

        public static global::Microsoft.UI.Xaml.DependencyProperty LocalOffsetXProperty => global::ABI.Microsoft.UI.Xaml.Media.IPlaneProjectionStaticsMethods.get_LocalOffsetXProperty(_objRef_global__Microsoft_UI_Xaml_Media_IPlaneProjectionStatics);

        public static global::Microsoft.UI.Xaml.DependencyProperty LocalOffsetYProperty => global::ABI.Microsoft.UI.Xaml.Media.IPlaneProjectionStaticsMethods.get_LocalOffsetYProperty(_objRef_global__Microsoft_UI_Xaml_Media_IPlaneProjectionStatics);

        public static global::Microsoft.UI.Xaml.DependencyProperty LocalOffsetZProperty => global::ABI.Microsoft.UI.Xaml.Media.IPlaneProjectionStaticsMethods.get_LocalOffsetZProperty(_objRef_global__Microsoft_UI_Xaml_Media_IPlaneProjectionStatics);

        public static global::Microsoft.UI.Xaml.DependencyProperty ProjectionMatrixProperty => global::ABI.Microsoft.UI.Xaml.Media.IPlaneProjectionStaticsMethods.get_ProjectionMatrixProperty(_objRef_global__Microsoft_UI_Xaml_Media_IPlaneProjectionStatics);

        public static global::Microsoft.UI.Xaml.DependencyProperty RotationXProperty => global::ABI.Microsoft.UI.Xaml.Media.IPlaneProjectionStaticsMethods.get_RotationXProperty(_objRef_global__Microsoft_UI_Xaml_Media_IPlaneProjectionStatics);

        public static global::Microsoft.UI.Xaml.DependencyProperty RotationYProperty => global::ABI.Microsoft.UI.Xaml.Media.IPlaneProjectionStaticsMethods.get_RotationYProperty(_objRef_global__Microsoft_UI_Xaml_Media_IPlaneProjectionStatics);

        public static global::Microsoft.UI.Xaml.DependencyProperty RotationZProperty => global::ABI.Microsoft.UI.Xaml.Media.IPlaneProjectionStaticsMethods.get_RotationZProperty(_objRef_global__Microsoft_UI_Xaml_Media_IPlaneProjectionStatics);

        public static new PlaneProjection FromAbi(IntPtr thisPtr)
        {
            if (thisPtr == IntPtr.Zero) return null;
            return MarshalInspectable<PlaneProjection>.FromAbi(thisPtr);
        }

        internal PlaneProjection(IObjectReference objRef)
            : base(global::WinRT.DerivedComposed.Instance)

        {
            _inner = objRef.As(global::ABI.Microsoft.UI.Xaml.Media.IPlaneProjectionMethods.IID);

        }


        public static bool operator ==(PlaneProjection x, PlaneProjection y) => (x?.ThisPtr ?? IntPtr.Zero) == (y?.ThisPtr ?? IntPtr.Zero);
        public static bool operator !=(PlaneProjection x, PlaneProjection y) => !(x == y);
        public bool Equals(PlaneProjection other) => this == other;
        public override bool Equals(object obj) => obj is PlaneProjection that && this == that;
        public override int GetHashCode() => ThisPtr.GetHashCode();


        bool IWinRTObject.HasUnwrappableNativeObject => true;
        IObjectReference IWinRTObject.NativeObject => _inner;

        private struct InterfaceTag<I>{};


        public double CenterOfRotationX
        {
            get => global::ABI.Microsoft.UI.Xaml.Media.IPlaneProjectionMethods.get_CenterOfRotationX(_objRef_global__Microsoft_UI_Xaml_Media_IPlaneProjection);
            set => global::ABI.Microsoft.UI.Xaml.Media.IPlaneProjectionMethods.set_CenterOfRotationX(_objRef_global__Microsoft_UI_Xaml_Media_IPlaneProjection, value);
        }

        public double CenterOfRotationY
        {
            get => global::ABI.Microsoft.UI.Xaml.Media.IPlaneProjectionMethods.get_CenterOfRotationY(_objRef_global__Microsoft_UI_Xaml_Media_IPlaneProjection);
            set => global::ABI.Microsoft.UI.Xaml.Media.IPlaneProjectionMethods.set_CenterOfRotationY(_objRef_global__Microsoft_UI_Xaml_Media_IPlaneProjection, value);
        }

        public double CenterOfRotationZ
        {
            get => global::ABI.Microsoft.UI.Xaml.Media.IPlaneProjectionMethods.get_CenterOfRotationZ(_objRef_global__Microsoft_UI_Xaml_Media_IPlaneProjection);
            set => global::ABI.Microsoft.UI.Xaml.Media.IPlaneProjectionMethods.set_CenterOfRotationZ(_objRef_global__Microsoft_UI_Xaml_Media_IPlaneProjection, value);
        }

        public double GlobalOffsetX
        {
            get => global::ABI.Microsoft.UI.Xaml.Media.IPlaneProjectionMethods.get_GlobalOffsetX(_objRef_global__Microsoft_UI_Xaml_Media_IPlaneProjection);
            set => global::ABI.Microsoft.UI.Xaml.Media.IPlaneProjectionMethods.set_GlobalOffsetX(_objRef_global__Microsoft_UI_Xaml_Media_IPlaneProjection, value);
        }

        public double GlobalOffsetY
        {
            get => global::ABI.Microsoft.UI.Xaml.Media.IPlaneProjectionMethods.get_GlobalOffsetY(_objRef_global__Microsoft_UI_Xaml_Media_IPlaneProjection);
            set => global::ABI.Microsoft.UI.Xaml.Media.IPlaneProjectionMethods.set_GlobalOffsetY(_objRef_global__Microsoft_UI_Xaml_Media_IPlaneProjection, value);
        }

        public double GlobalOffsetZ
        {
            get => global::ABI.Microsoft.UI.Xaml.Media.IPlaneProjectionMethods.get_GlobalOffsetZ(_objRef_global__Microsoft_UI_Xaml_Media_IPlaneProjection);
            set => global::ABI.Microsoft.UI.Xaml.Media.IPlaneProjectionMethods.set_GlobalOffsetZ(_objRef_global__Microsoft_UI_Xaml_Media_IPlaneProjection, value);
        }

        public double LocalOffsetX
        {
            get => global::ABI.Microsoft.UI.Xaml.Media.IPlaneProjectionMethods.get_LocalOffsetX(_objRef_global__Microsoft_UI_Xaml_Media_IPlaneProjection);
            set => global::ABI.Microsoft.UI.Xaml.Media.IPlaneProjectionMethods.set_LocalOffsetX(_objRef_global__Microsoft_UI_Xaml_Media_IPlaneProjection, value);
        }

        public double LocalOffsetY
        {
            get => global::ABI.Microsoft.UI.Xaml.Media.IPlaneProjectionMethods.get_LocalOffsetY(_objRef_global__Microsoft_UI_Xaml_Media_IPlaneProjection);
            set => global::ABI.Microsoft.UI.Xaml.Media.IPlaneProjectionMethods.set_LocalOffsetY(_objRef_global__Microsoft_UI_Xaml_Media_IPlaneProjection, value);
        }

        public double LocalOffsetZ
        {
            get => global::ABI.Microsoft.UI.Xaml.Media.IPlaneProjectionMethods.get_LocalOffsetZ(_objRef_global__Microsoft_UI_Xaml_Media_IPlaneProjection);
            set => global::ABI.Microsoft.UI.Xaml.Media.IPlaneProjectionMethods.set_LocalOffsetZ(_objRef_global__Microsoft_UI_Xaml_Media_IPlaneProjection, value);
        }

        public global::Microsoft.UI.Xaml.Media.Media3D.Matrix3D ProjectionMatrix => global::ABI.Microsoft.UI.Xaml.Media.IPlaneProjectionMethods.get_ProjectionMatrix(_objRef_global__Microsoft_UI_Xaml_Media_IPlaneProjection);

        public double RotationX
        {
            get => global::ABI.Microsoft.UI.Xaml.Media.IPlaneProjectionMethods.get_RotationX(_objRef_global__Microsoft_UI_Xaml_Media_IPlaneProjection);
            set => global::ABI.Microsoft.UI.Xaml.Media.IPlaneProjectionMethods.set_RotationX(_objRef_global__Microsoft_UI_Xaml_Media_IPlaneProjection, value);
        }

        public double RotationY
        {
            get => global::ABI.Microsoft.UI.Xaml.Media.IPlaneProjectionMethods.get_RotationY(_objRef_global__Microsoft_UI_Xaml_Media_IPlaneProjection);
            set => global::ABI.Microsoft.UI.Xaml.Media.IPlaneProjectionMethods.set_RotationY(_objRef_global__Microsoft_UI_Xaml_Media_IPlaneProjection, value);
        }

        public double RotationZ
        {
            get => global::ABI.Microsoft.UI.Xaml.Media.IPlaneProjectionMethods.get_RotationZ(_objRef_global__Microsoft_UI_Xaml_Media_IPlaneProjection);
            set => global::ABI.Microsoft.UI.Xaml.Media.IPlaneProjectionMethods.set_RotationZ(_objRef_global__Microsoft_UI_Xaml_Media_IPlaneProjection, value);
        }

        protected override bool IsOverridableInterface(Guid iid) => base.IsOverridableInterface(iid);

        global::System.Runtime.InteropServices.CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(ref Guid iid, out IntPtr ppv)
        {
            ppv = IntPtr.Zero;
            if (IsOverridableInterface(iid) || global::WinRT.Interop.IID.IID_IInspectable == iid)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
            }

            if (((IWinRTObject)this).NativeObject.TryAs(iid, out ppv) >= 0)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.Handled;
            }

            return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
        }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")]
    [global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Media.PointCollection))]
    [global::ABI.Microsoft.UI.Xaml.Media.PointCollectionRcwFactory]
    [global::WinRT.ProjectedRuntimeClass(typeof(global::System.Collections.Generic.IList<global::Windows.Foundation.Point>))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    public sealed class PointCollection : global::System.Collections.Generic.IList<global::Windows.Foundation.Point>, global::System.Collections.Generic.IEnumerable<global::Windows.Foundation.Point>, global::System.Runtime.InteropServices.ICustomQueryInterface, IWinRTObject, IEquatable<PointCollection>
    {
        private IntPtr ThisPtr => _inner == null ? (((IWinRTObject)this).NativeObject).ThisPtr : _inner.ThisPtr;

        private readonly IObjectReference _inner = null;




        private volatile IObjectReference ___objRef_global__System_Collections_Generic_IList_global__Windows_Foundation_Point_;
        private IObjectReference Make___objRef_global__System_Collections_Generic_IList_global__Windows_Foundation_Point_()
        {
            _ = global::WinRT.GenericTypeInstantiations.Windows_Foundation_Collections_IVector_1_Windows_Foundation_Point.EnsureInitialized();
            global::System.Threading.Interlocked.CompareExchange(ref ___objRef_global__System_Collections_Generic_IList_global__Windows_Foundation_Point_, ((IWinRTObject)this).NativeObject.As<IUnknownVftbl>(global::ABI.System.Collections.Generic.IListMethods<global::Windows.Foundation.Point>.IID), null);
            return ___objRef_global__System_Collections_Generic_IList_global__Windows_Foundation_Point_;
        }
        private IObjectReference _objRef_global__System_Collections_Generic_IList_global__Windows_Foundation_Point_ => ___objRef_global__System_Collections_Generic_IList_global__Windows_Foundation_Point_ ?? Make___objRef_global__System_Collections_Generic_IList_global__Windows_Foundation_Point_();

        private volatile IObjectReference ___objRef_global__System_Collections_Generic_IEnumerable_global__Windows_Foundation_Point_;
        private IObjectReference Make___objRef_global__System_Collections_Generic_IEnumerable_global__Windows_Foundation_Point_()
        {
            _ = global::WinRT.GenericTypeInstantiations.Windows_Foundation_Collections_IIterable_1_Windows_Foundation_Point.EnsureInitialized();
            global::System.Threading.Interlocked.CompareExchange(ref ___objRef_global__System_Collections_Generic_IEnumerable_global__Windows_Foundation_Point_, ((IWinRTObject)this).NativeObject.As<IUnknownVftbl>(global::ABI.System.Collections.Generic.IEnumerableMethods<global::Windows.Foundation.Point>.IID), null);
            return ___objRef_global__System_Collections_Generic_IEnumerable_global__Windows_Foundation_Point_;
        }
        private IObjectReference _objRef_global__System_Collections_Generic_IEnumerable_global__Windows_Foundation_Point_ => ___objRef_global__System_Collections_Generic_IEnumerable_global__Windows_Foundation_Point_ ?? Make___objRef_global__System_Collections_Generic_IEnumerable_global__Windows_Foundation_Point_();



        private static volatile IObjectReference ___objRef_global__Microsoft_UI_Xaml_Media_PointCollection;
        private static IObjectReference _objRef_global__Microsoft_UI_Xaml_Media_PointCollection
        {
            get
            { 
                var factory = ___objRef_global__Microsoft_UI_Xaml_Media_PointCollection;
                if (factory != null && factory.IsInCurrentContext)
                {
                    return factory;
                }
                else
                {
                    return ___objRef_global__Microsoft_UI_Xaml_Media_PointCollection = ActivationFactory.Get("Microsoft.UI.Xaml.Media.PointCollection");
                }
            }
        }

        public PointCollection() 
        {
            _inner = global::ABI.WinRT.Interop.IActivationFactoryMethods.ActivateInstanceUnsafe(_objRef_global__Microsoft_UI_Xaml_Media_PointCollection, global::ABI.System.Collections.Generic.IListMethods<global::Windows.Foundation.Point>.IID);
            ComWrappersSupport.RegisterObjectForInterface(this, ThisPtr);
            ComWrappersHelper.Init(_inner, false);

        }

        public static PointCollection FromAbi(IntPtr thisPtr)
        {
            if (thisPtr == IntPtr.Zero) return null;
            return MarshalInspectable<PointCollection>.FromAbi(thisPtr);
        }

        internal PointCollection(IObjectReference objRef)
        {
            _inner = objRef.As(global::ABI.System.Collections.Generic.IListMethods<global::Windows.Foundation.Point>.IID);

        }


        public static bool operator ==(PointCollection x, PointCollection y) => (x?.ThisPtr ?? IntPtr.Zero) == (y?.ThisPtr ?? IntPtr.Zero);
        public static bool operator !=(PointCollection x, PointCollection y) => !(x == y);
        public bool Equals(PointCollection other) => this == other;
        public override bool Equals(object obj) => obj is PointCollection that && this == that;
        public override int GetHashCode() => ThisPtr.GetHashCode();


        bool IWinRTObject.HasUnwrappableNativeObject => true;
        IObjectReference IWinRTObject.NativeObject => _inner;
        private volatile global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> _queryInterfaceCache;
        private global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> MakeQueryInterfaceCache()
        {
            global::System.Threading.Interlocked.CompareExchange(ref _queryInterfaceCache, new global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference>(), null); 
            return _queryInterfaceCache;
        }
        global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> IWinRTObject.QueryInterfaceCache => _queryInterfaceCache ?? MakeQueryInterfaceCache();
        private volatile global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> _additionalTypeData;
        private global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> MakeAdditionalTypeData()
        {
            global::System.Threading.Interlocked.CompareExchange(ref _additionalTypeData, new global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object>(), null); 
            return _additionalTypeData;
        }
        global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> IWinRTObject.AdditionalTypeData => _additionalTypeData ?? MakeAdditionalTypeData();

        private struct InterfaceTag<I>{};


        public int Count => global::ABI.System.Collections.Generic.IListMethods<global::Windows.Foundation.Point>.get_Count(_objRef_global__System_Collections_Generic_IList_global__Windows_Foundation_Point_);
        public bool IsReadOnly => global::ABI.System.Collections.Generic.IListMethods<global::Windows.Foundation.Point>.get_IsReadOnly(_objRef_global__System_Collections_Generic_IList_global__Windows_Foundation_Point_);
        [global::System.Runtime.CompilerServices.IndexerName("ListItem")]
        public global::Windows.Foundation.Point this[int index] 
        {
            get => global::ABI.System.Collections.Generic.IListMethods<global::Windows.Foundation.Point>.Indexer_Get(_objRef_global__System_Collections_Generic_IList_global__Windows_Foundation_Point_, index);
            set => global::ABI.System.Collections.Generic.IListMethods<global::Windows.Foundation.Point>.Indexer_Set(_objRef_global__System_Collections_Generic_IList_global__Windows_Foundation_Point_, index, value);
        }
        public int IndexOf(global::Windows.Foundation.Point item) => global::ABI.System.Collections.Generic.IListMethods<global::Windows.Foundation.Point>.IndexOf(_objRef_global__System_Collections_Generic_IList_global__Windows_Foundation_Point_, item);
        public void Insert(int index, global::Windows.Foundation.Point item) => global::ABI.System.Collections.Generic.IListMethods<global::Windows.Foundation.Point>.Insert(_objRef_global__System_Collections_Generic_IList_global__Windows_Foundation_Point_, index, item);
        public void RemoveAt(int index) => global::ABI.System.Collections.Generic.IListMethods<global::Windows.Foundation.Point>.RemoveAt(_objRef_global__System_Collections_Generic_IList_global__Windows_Foundation_Point_, index);
        public void Add(global::Windows.Foundation.Point item) => global::ABI.System.Collections.Generic.IListMethods<global::Windows.Foundation.Point>.Add(_objRef_global__System_Collections_Generic_IList_global__Windows_Foundation_Point_, item);
        public void Clear() => global::ABI.System.Collections.Generic.IListMethods<global::Windows.Foundation.Point>.Clear(_objRef_global__System_Collections_Generic_IList_global__Windows_Foundation_Point_);
        public bool Contains(global::Windows.Foundation.Point item) => global::ABI.System.Collections.Generic.IListMethods<global::Windows.Foundation.Point>.Contains(_objRef_global__System_Collections_Generic_IList_global__Windows_Foundation_Point_, item);
        public void CopyTo(global::Windows.Foundation.Point[] array, int arrayIndex) => global::ABI.System.Collections.Generic.IListMethods<global::Windows.Foundation.Point>.CopyTo(_objRef_global__System_Collections_Generic_IList_global__Windows_Foundation_Point_, array, arrayIndex);
        public bool Remove(global::Windows.Foundation.Point item) => global::ABI.System.Collections.Generic.IListMethods<global::Windows.Foundation.Point>.Remove(_objRef_global__System_Collections_Generic_IList_global__Windows_Foundation_Point_, item);

        public IEnumerator<global::Windows.Foundation.Point> GetEnumerator() => global::ABI.System.Collections.Generic.IEnumerableMethods<global::Windows.Foundation.Point>.GetEnumerator(_objRef_global__System_Collections_Generic_IEnumerable_global__Windows_Foundation_Point_);

        IEnumerator IEnumerable.GetEnumerator() => GetEnumerator();

        private bool IsOverridableInterface(Guid iid) => false;

        global::System.Runtime.InteropServices.CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(ref Guid iid, out IntPtr ppv)
        {
            ppv = IntPtr.Zero;
            if (IsOverridableInterface(iid) || global::WinRT.Interop.IID.IID_IInspectable == iid)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
            }

            if (((IWinRTObject)this).NativeObject.TryAs(iid, out ppv) >= 0)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.Handled;
            }

            return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
        }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")]
    [global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Media.PolyBezierSegment))]
    [global::ABI.Microsoft.UI.Xaml.Media.PolyBezierSegmentRcwFactory]
    [global::WinRT.ProjectedRuntimeClass(typeof(IPolyBezierSegment))]
    [global::Microsoft.UI.Xaml.Markup.ContentProperty(Name = @"Points")]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    public sealed class PolyBezierSegment : PathSegment, global::System.Runtime.InteropServices.ICustomQueryInterface, IWinRTObject, IEquatable<PolyBezierSegment>
    {
        private IntPtr ThisPtr => _inner == null ? (((IWinRTObject)this).NativeObject).ThisPtr : _inner.ThisPtr;

        private readonly IObjectReference _inner = null;



        private IObjectReference _objRef_global__Microsoft_UI_Xaml_Media_IPolyBezierSegment => _inner;


        private static volatile IObjectReference ___objRef_global__Microsoft_UI_Xaml_Media_PolyBezierSegment;
        private static IObjectReference _objRef_global__Microsoft_UI_Xaml_Media_PolyBezierSegment
        {
            get
            { 
                var factory = ___objRef_global__Microsoft_UI_Xaml_Media_PolyBezierSegment;
                if (factory != null && factory.IsInCurrentContext)
                {
                    return factory;
                }
                else
                {
                    return ___objRef_global__Microsoft_UI_Xaml_Media_PolyBezierSegment = ActivationFactory.Get("Microsoft.UI.Xaml.Media.PolyBezierSegment");
                }
            }
        }

        public PolyBezierSegment() :base(global::WinRT.DerivedComposed.Instance)
        {
            _inner = global::ABI.WinRT.Interop.IActivationFactoryMethods.ActivateInstanceUnsafe(_objRef_global__Microsoft_UI_Xaml_Media_PolyBezierSegment, global::ABI.Microsoft.UI.Xaml.Media.IPolyBezierSegmentMethods.IID);
            ComWrappersSupport.RegisterObjectForInterface(this, ThisPtr);
            ComWrappersHelper.Init(_inner, false);

        }

        public static I As<I>() => ActivationFactory.Get("Microsoft.UI.Xaml.Media.PolyBezierSegment").AsInterface<I>();

        private static volatile IObjectReference ___objRef_global__Microsoft_UI_Xaml_Media_IPolyBezierSegmentStatics;
        private static IObjectReference _objRef_global__Microsoft_UI_Xaml_Media_IPolyBezierSegmentStatics
        {
            get
            { 
                var factory = ___objRef_global__Microsoft_UI_Xaml_Media_IPolyBezierSegmentStatics;
                if (factory != null && factory.IsInCurrentContext)
                {
                    return factory;
                }
                else
                {
                    return ___objRef_global__Microsoft_UI_Xaml_Media_IPolyBezierSegmentStatics = ActivationFactory.Get("Microsoft.UI.Xaml.Media.PolyBezierSegment", global::ABI.Microsoft.UI.Xaml.Media.IPolyBezierSegmentStaticsMethods.IID);
                }
            }
        }

        public static global::Microsoft.UI.Xaml.DependencyProperty PointsProperty => global::ABI.Microsoft.UI.Xaml.Media.IPolyBezierSegmentStaticsMethods.get_PointsProperty(_objRef_global__Microsoft_UI_Xaml_Media_IPolyBezierSegmentStatics);

        public static new PolyBezierSegment FromAbi(IntPtr thisPtr)
        {
            if (thisPtr == IntPtr.Zero) return null;
            return MarshalInspectable<PolyBezierSegment>.FromAbi(thisPtr);
        }

        internal PolyBezierSegment(IObjectReference objRef)
            : base(global::WinRT.DerivedComposed.Instance)

        {
            _inner = objRef.As(global::ABI.Microsoft.UI.Xaml.Media.IPolyBezierSegmentMethods.IID);

        }


        public static bool operator ==(PolyBezierSegment x, PolyBezierSegment y) => (x?.ThisPtr ?? IntPtr.Zero) == (y?.ThisPtr ?? IntPtr.Zero);
        public static bool operator !=(PolyBezierSegment x, PolyBezierSegment y) => !(x == y);
        public bool Equals(PolyBezierSegment other) => this == other;
        public override bool Equals(object obj) => obj is PolyBezierSegment that && this == that;
        public override int GetHashCode() => ThisPtr.GetHashCode();


        bool IWinRTObject.HasUnwrappableNativeObject => true;
        IObjectReference IWinRTObject.NativeObject => _inner;

        private struct InterfaceTag<I>{};


        public PointCollection Points
        {
            get => global::ABI.Microsoft.UI.Xaml.Media.IPolyBezierSegmentMethods.get_Points(_objRef_global__Microsoft_UI_Xaml_Media_IPolyBezierSegment);
            set => global::ABI.Microsoft.UI.Xaml.Media.IPolyBezierSegmentMethods.set_Points(_objRef_global__Microsoft_UI_Xaml_Media_IPolyBezierSegment, value);
        }

        protected override bool IsOverridableInterface(Guid iid) => base.IsOverridableInterface(iid);

        global::System.Runtime.InteropServices.CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(ref Guid iid, out IntPtr ppv)
        {
            ppv = IntPtr.Zero;
            if (IsOverridableInterface(iid) || global::WinRT.Interop.IID.IID_IInspectable == iid)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
            }

            if (((IWinRTObject)this).NativeObject.TryAs(iid, out ppv) >= 0)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.Handled;
            }

            return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
        }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")]
    [global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Media.PolyLineSegment))]
    [global::ABI.Microsoft.UI.Xaml.Media.PolyLineSegmentRcwFactory]
    [global::WinRT.ProjectedRuntimeClass(typeof(IPolyLineSegment))]
    [global::Microsoft.UI.Xaml.Markup.ContentProperty(Name = @"Points")]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    public sealed class PolyLineSegment : PathSegment, global::System.Runtime.InteropServices.ICustomQueryInterface, IWinRTObject, IEquatable<PolyLineSegment>
    {
        private IntPtr ThisPtr => _inner == null ? (((IWinRTObject)this).NativeObject).ThisPtr : _inner.ThisPtr;

        private readonly IObjectReference _inner = null;



        private IObjectReference _objRef_global__Microsoft_UI_Xaml_Media_IPolyLineSegment => _inner;


        private static volatile IObjectReference ___objRef_global__Microsoft_UI_Xaml_Media_PolyLineSegment;
        private static IObjectReference _objRef_global__Microsoft_UI_Xaml_Media_PolyLineSegment
        {
            get
            { 
                var factory = ___objRef_global__Microsoft_UI_Xaml_Media_PolyLineSegment;
                if (factory != null && factory.IsInCurrentContext)
                {
                    return factory;
                }
                else
                {
                    return ___objRef_global__Microsoft_UI_Xaml_Media_PolyLineSegment = ActivationFactory.Get("Microsoft.UI.Xaml.Media.PolyLineSegment");
                }
            }
        }

        public PolyLineSegment() :base(global::WinRT.DerivedComposed.Instance)
        {
            _inner = global::ABI.WinRT.Interop.IActivationFactoryMethods.ActivateInstanceUnsafe(_objRef_global__Microsoft_UI_Xaml_Media_PolyLineSegment, global::ABI.Microsoft.UI.Xaml.Media.IPolyLineSegmentMethods.IID);
            ComWrappersSupport.RegisterObjectForInterface(this, ThisPtr);
            ComWrappersHelper.Init(_inner, false);

        }

        public static I As<I>() => ActivationFactory.Get("Microsoft.UI.Xaml.Media.PolyLineSegment").AsInterface<I>();

        private static volatile IObjectReference ___objRef_global__Microsoft_UI_Xaml_Media_IPolyLineSegmentStatics;
        private static IObjectReference _objRef_global__Microsoft_UI_Xaml_Media_IPolyLineSegmentStatics
        {
            get
            { 
                var factory = ___objRef_global__Microsoft_UI_Xaml_Media_IPolyLineSegmentStatics;
                if (factory != null && factory.IsInCurrentContext)
                {
                    return factory;
                }
                else
                {
                    return ___objRef_global__Microsoft_UI_Xaml_Media_IPolyLineSegmentStatics = ActivationFactory.Get("Microsoft.UI.Xaml.Media.PolyLineSegment", global::ABI.Microsoft.UI.Xaml.Media.IPolyLineSegmentStaticsMethods.IID);
                }
            }
        }

        public static global::Microsoft.UI.Xaml.DependencyProperty PointsProperty => global::ABI.Microsoft.UI.Xaml.Media.IPolyLineSegmentStaticsMethods.get_PointsProperty(_objRef_global__Microsoft_UI_Xaml_Media_IPolyLineSegmentStatics);

        public static new PolyLineSegment FromAbi(IntPtr thisPtr)
        {
            if (thisPtr == IntPtr.Zero) return null;
            return MarshalInspectable<PolyLineSegment>.FromAbi(thisPtr);
        }

        internal PolyLineSegment(IObjectReference objRef)
            : base(global::WinRT.DerivedComposed.Instance)

        {
            _inner = objRef.As(global::ABI.Microsoft.UI.Xaml.Media.IPolyLineSegmentMethods.IID);

        }


        public static bool operator ==(PolyLineSegment x, PolyLineSegment y) => (x?.ThisPtr ?? IntPtr.Zero) == (y?.ThisPtr ?? IntPtr.Zero);
        public static bool operator !=(PolyLineSegment x, PolyLineSegment y) => !(x == y);
        public bool Equals(PolyLineSegment other) => this == other;
        public override bool Equals(object obj) => obj is PolyLineSegment that && this == that;
        public override int GetHashCode() => ThisPtr.GetHashCode();


        bool IWinRTObject.HasUnwrappableNativeObject => true;
        IObjectReference IWinRTObject.NativeObject => _inner;

        private struct InterfaceTag<I>{};


        public PointCollection Points
        {
            get => global::ABI.Microsoft.UI.Xaml.Media.IPolyLineSegmentMethods.get_Points(_objRef_global__Microsoft_UI_Xaml_Media_IPolyLineSegment);
            set => global::ABI.Microsoft.UI.Xaml.Media.IPolyLineSegmentMethods.set_Points(_objRef_global__Microsoft_UI_Xaml_Media_IPolyLineSegment, value);
        }

        protected override bool IsOverridableInterface(Guid iid) => base.IsOverridableInterface(iid);

        global::System.Runtime.InteropServices.CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(ref Guid iid, out IntPtr ppv)
        {
            ppv = IntPtr.Zero;
            if (IsOverridableInterface(iid) || global::WinRT.Interop.IID.IID_IInspectable == iid)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
            }

            if (((IWinRTObject)this).NativeObject.TryAs(iid, out ppv) >= 0)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.Handled;
            }

            return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
        }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")]
    [global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Media.PolyQuadraticBezierSegment))]
    [global::ABI.Microsoft.UI.Xaml.Media.PolyQuadraticBezierSegmentRcwFactory]
    [global::WinRT.ProjectedRuntimeClass(typeof(IPolyQuadraticBezierSegment))]
    [global::Microsoft.UI.Xaml.Markup.ContentProperty(Name = @"Points")]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    public sealed class PolyQuadraticBezierSegment : PathSegment, global::System.Runtime.InteropServices.ICustomQueryInterface, IWinRTObject, IEquatable<PolyQuadraticBezierSegment>
    {
        private IntPtr ThisPtr => _inner == null ? (((IWinRTObject)this).NativeObject).ThisPtr : _inner.ThisPtr;

        private readonly IObjectReference _inner = null;



        private IObjectReference _objRef_global__Microsoft_UI_Xaml_Media_IPolyQuadraticBezierSegment => _inner;


        private static volatile IObjectReference ___objRef_global__Microsoft_UI_Xaml_Media_PolyQuadraticBezierSegment;
        private static IObjectReference _objRef_global__Microsoft_UI_Xaml_Media_PolyQuadraticBezierSegment
        {
            get
            { 
                var factory = ___objRef_global__Microsoft_UI_Xaml_Media_PolyQuadraticBezierSegment;
                if (factory != null && factory.IsInCurrentContext)
                {
                    return factory;
                }
                else
                {
                    return ___objRef_global__Microsoft_UI_Xaml_Media_PolyQuadraticBezierSegment = ActivationFactory.Get("Microsoft.UI.Xaml.Media.PolyQuadraticBezierSegment");
                }
            }
        }

        public PolyQuadraticBezierSegment() :base(global::WinRT.DerivedComposed.Instance)
        {
            _inner = global::ABI.WinRT.Interop.IActivationFactoryMethods.ActivateInstanceUnsafe(_objRef_global__Microsoft_UI_Xaml_Media_PolyQuadraticBezierSegment, global::ABI.Microsoft.UI.Xaml.Media.IPolyQuadraticBezierSegmentMethods.IID);
            ComWrappersSupport.RegisterObjectForInterface(this, ThisPtr);
            ComWrappersHelper.Init(_inner, false);

        }

        public static I As<I>() => ActivationFactory.Get("Microsoft.UI.Xaml.Media.PolyQuadraticBezierSegment").AsInterface<I>();

        private static volatile IObjectReference ___objRef_global__Microsoft_UI_Xaml_Media_IPolyQuadraticBezierSegmentStatics;
        private static IObjectReference _objRef_global__Microsoft_UI_Xaml_Media_IPolyQuadraticBezierSegmentStatics
        {
            get
            { 
                var factory = ___objRef_global__Microsoft_UI_Xaml_Media_IPolyQuadraticBezierSegmentStatics;
                if (factory != null && factory.IsInCurrentContext)
                {
                    return factory;
                }
                else
                {
                    return ___objRef_global__Microsoft_UI_Xaml_Media_IPolyQuadraticBezierSegmentStatics = ActivationFactory.Get("Microsoft.UI.Xaml.Media.PolyQuadraticBezierSegment", global::ABI.Microsoft.UI.Xaml.Media.IPolyQuadraticBezierSegmentStaticsMethods.IID);
                }
            }
        }

        public static global::Microsoft.UI.Xaml.DependencyProperty PointsProperty => global::ABI.Microsoft.UI.Xaml.Media.IPolyQuadraticBezierSegmentStaticsMethods.get_PointsProperty(_objRef_global__Microsoft_UI_Xaml_Media_IPolyQuadraticBezierSegmentStatics);

        public static new PolyQuadraticBezierSegment FromAbi(IntPtr thisPtr)
        {
            if (thisPtr == IntPtr.Zero) return null;
            return MarshalInspectable<PolyQuadraticBezierSegment>.FromAbi(thisPtr);
        }

        internal PolyQuadraticBezierSegment(IObjectReference objRef)
            : base(global::WinRT.DerivedComposed.Instance)

        {
            _inner = objRef.As(global::ABI.Microsoft.UI.Xaml.Media.IPolyQuadraticBezierSegmentMethods.IID);

        }


        public static bool operator ==(PolyQuadraticBezierSegment x, PolyQuadraticBezierSegment y) => (x?.ThisPtr ?? IntPtr.Zero) == (y?.ThisPtr ?? IntPtr.Zero);
        public static bool operator !=(PolyQuadraticBezierSegment x, PolyQuadraticBezierSegment y) => !(x == y);
        public bool Equals(PolyQuadraticBezierSegment other) => this == other;
        public override bool Equals(object obj) => obj is PolyQuadraticBezierSegment that && this == that;
        public override int GetHashCode() => ThisPtr.GetHashCode();


        bool IWinRTObject.HasUnwrappableNativeObject => true;
        IObjectReference IWinRTObject.NativeObject => _inner;

        private struct InterfaceTag<I>{};


        public PointCollection Points
        {
            get => global::ABI.Microsoft.UI.Xaml.Media.IPolyQuadraticBezierSegmentMethods.get_Points(_objRef_global__Microsoft_UI_Xaml_Media_IPolyQuadraticBezierSegment);
            set => global::ABI.Microsoft.UI.Xaml.Media.IPolyQuadraticBezierSegmentMethods.set_Points(_objRef_global__Microsoft_UI_Xaml_Media_IPolyQuadraticBezierSegment, value);
        }

        protected override bool IsOverridableInterface(Guid iid) => base.IsOverridableInterface(iid);

        global::System.Runtime.InteropServices.CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(ref Guid iid, out IntPtr ppv)
        {
            ppv = IntPtr.Zero;
            if (IsOverridableInterface(iid) || global::WinRT.Interop.IID.IID_IInspectable == iid)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
            }

            if (((IWinRTObject)this).NativeObject.TryAs(iid, out ppv) >= 0)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.Handled;
            }

            return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
        }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")]
    [global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Media.Projection))]
    [global::ABI.Microsoft.UI.Xaml.Media.ProjectionRcwFactory]
    [global::WinRT.ProjectedRuntimeClass(typeof(IProjection))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    public class Projection : global::Microsoft.UI.Xaml.DependencyObject, global::System.Runtime.InteropServices.ICustomQueryInterface, IWinRTObject, IEquatable<Projection>
    {
        private IntPtr ThisPtr => _inner == null ? (((IWinRTObject)this).NativeObject).ThisPtr : _inner.ThisPtr;

        private readonly IObjectReference _inner = null;




        private volatile IObjectReference ___objRef_global__Microsoft_UI_Xaml_Media_IProjection;
        private IObjectReference Make___objRef_global__Microsoft_UI_Xaml_Media_IProjection()
        {
            global::System.Threading.Interlocked.CompareExchange(ref ___objRef_global__Microsoft_UI_Xaml_Media_IProjection, ((IWinRTObject)this).NativeObject.As<IUnknownVftbl>(global::ABI.Microsoft.UI.Xaml.Media.IProjectionMethods.IID), null);
            return ___objRef_global__Microsoft_UI_Xaml_Media_IProjection;
        }
        private IObjectReference _objRef_global__Microsoft_UI_Xaml_Media_IProjection => ___objRef_global__Microsoft_UI_Xaml_Media_IProjection ?? Make___objRef_global__Microsoft_UI_Xaml_Media_IProjection();



        private static class _IProjectionFactoryMethods
        {
            public static unsafe IntPtr CreateInstance(IObjectReference _obj, object baseInterface, out IntPtr innerInterface)
            {
                var ThisPtr = _obj.ThisPtr;

                ObjectReferenceValue __baseInterface = default;
                IntPtr __innerInterface = default;
                IntPtr __retval = default;
                try
                {
                    __baseInterface = MarshalInspectable<object>.CreateMarshaler2(baseInterface);
                    global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, IntPtr*, IntPtr*, int>**)ThisPtr)[6](ThisPtr, MarshalInspectable<object>.GetAbi(__baseInterface), &__innerInterface, &__retval));
                    global::System.GC.KeepAlive(_obj);
                    innerInterface = __innerInterface;
                    return __retval;
                }
                finally
                {
                    MarshalInspectable<object>.DisposeMarshaler(__baseInterface);
                }
            }
        }

        private static volatile IObjectReference ___objRef_global__Microsoft_UI_Xaml_Media_IProjectionFactory;
        private static IObjectReference _objRef_global__Microsoft_UI_Xaml_Media_IProjectionFactory
        {
            get
            { 
                var factory = ___objRef_global__Microsoft_UI_Xaml_Media_IProjectionFactory;
                if (factory != null && factory.IsInCurrentContext)
                {
                    return factory;
                }
                else
                {
                    return ___objRef_global__Microsoft_UI_Xaml_Media_IProjectionFactory = ActivationFactory.Get("Microsoft.UI.Xaml.Media.Projection", global::ABI.Microsoft.UI.Xaml.Media.IProjectionFactoryMethods.IID);
                }
            }
        }

        protected Projection():base(global::WinRT.DerivedComposed.Instance)
        {
            bool isAggregation = this.GetType() != typeof(Projection);
            object baseInspectable = isAggregation ? this : null;
            IntPtr composed = _IProjectionFactoryMethods.CreateInstance(_objRef_global__Microsoft_UI_Xaml_Media_IProjectionFactory,  baseInspectable, out IntPtr inner);
            try
            {
                ComWrappersHelper.Init(isAggregation, this, composed, inner, global::ABI.Microsoft.UI.Xaml.Media.IProjectionMethods.IID, out _inner);

            }
            finally
            {
                Marshal.Release(inner);   
            }
        }

        public static new Projection FromAbi(IntPtr thisPtr)
        {
            if (thisPtr == IntPtr.Zero) return null;
            return MarshalInspectable<Projection>.FromAbi(thisPtr);
        }

        protected internal Projection(IObjectReference objRef)
            : base(global::WinRT.DerivedComposed.Instance)

        {
            _inner = objRef.As(global::ABI.Microsoft.UI.Xaml.Media.IProjectionMethods.IID);

        }


        public static bool operator ==(Projection x, Projection y) => (x?.ThisPtr ?? IntPtr.Zero) == (y?.ThisPtr ?? IntPtr.Zero);
        public static bool operator !=(Projection x, Projection y) => !(x == y);
        public bool Equals(Projection other) => this == other;
        public override bool Equals(object obj) => obj is Projection that && this == that;
        public override int GetHashCode() => ThisPtr.GetHashCode();


        protected Projection(global::WinRT.DerivedComposed _):base(_)
        {

        }
        bool IWinRTObject.HasUnwrappableNativeObject => this.GetType() == typeof(Projection);
        IObjectReference IWinRTObject.NativeObject => _inner;

        private struct InterfaceTag<I>{};


        protected override bool IsOverridableInterface(Guid iid) => base.IsOverridableInterface(iid);

        global::System.Runtime.InteropServices.CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(ref Guid iid, out IntPtr ppv)
        {
            ppv = IntPtr.Zero;
            if (IsOverridableInterface(iid) || global::WinRT.Interop.IID.IID_IInspectable == iid)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
            }

            if (((IWinRTObject)this).NativeObject.TryAs(iid, out ppv) >= 0)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.Handled;
            }

            return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
        }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")]
    [global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Media.QuadraticBezierSegment))]
    [global::ABI.Microsoft.UI.Xaml.Media.QuadraticBezierSegmentRcwFactory]
    [global::WinRT.ProjectedRuntimeClass(typeof(IQuadraticBezierSegment))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    public sealed class QuadraticBezierSegment : PathSegment, global::System.Runtime.InteropServices.ICustomQueryInterface, IWinRTObject, IEquatable<QuadraticBezierSegment>
    {
        private IntPtr ThisPtr => _inner == null ? (((IWinRTObject)this).NativeObject).ThisPtr : _inner.ThisPtr;

        private readonly IObjectReference _inner = null;



        private IObjectReference _objRef_global__Microsoft_UI_Xaml_Media_IQuadraticBezierSegment => _inner;


        private static volatile IObjectReference ___objRef_global__Microsoft_UI_Xaml_Media_QuadraticBezierSegment;
        private static IObjectReference _objRef_global__Microsoft_UI_Xaml_Media_QuadraticBezierSegment
        {
            get
            { 
                var factory = ___objRef_global__Microsoft_UI_Xaml_Media_QuadraticBezierSegment;
                if (factory != null && factory.IsInCurrentContext)
                {
                    return factory;
                }
                else
                {
                    return ___objRef_global__Microsoft_UI_Xaml_Media_QuadraticBezierSegment = ActivationFactory.Get("Microsoft.UI.Xaml.Media.QuadraticBezierSegment");
                }
            }
        }

        public QuadraticBezierSegment() :base(global::WinRT.DerivedComposed.Instance)
        {
            _inner = global::ABI.WinRT.Interop.IActivationFactoryMethods.ActivateInstanceUnsafe(_objRef_global__Microsoft_UI_Xaml_Media_QuadraticBezierSegment, global::ABI.Microsoft.UI.Xaml.Media.IQuadraticBezierSegmentMethods.IID);
            ComWrappersSupport.RegisterObjectForInterface(this, ThisPtr);
            ComWrappersHelper.Init(_inner, false);

        }

        public static I As<I>() => ActivationFactory.Get("Microsoft.UI.Xaml.Media.QuadraticBezierSegment").AsInterface<I>();

        private static volatile IObjectReference ___objRef_global__Microsoft_UI_Xaml_Media_IQuadraticBezierSegmentStatics;
        private static IObjectReference _objRef_global__Microsoft_UI_Xaml_Media_IQuadraticBezierSegmentStatics
        {
            get
            { 
                var factory = ___objRef_global__Microsoft_UI_Xaml_Media_IQuadraticBezierSegmentStatics;
                if (factory != null && factory.IsInCurrentContext)
                {
                    return factory;
                }
                else
                {
                    return ___objRef_global__Microsoft_UI_Xaml_Media_IQuadraticBezierSegmentStatics = ActivationFactory.Get("Microsoft.UI.Xaml.Media.QuadraticBezierSegment", global::ABI.Microsoft.UI.Xaml.Media.IQuadraticBezierSegmentStaticsMethods.IID);
                }
            }
        }

        public static global::Microsoft.UI.Xaml.DependencyProperty Point1Property => global::ABI.Microsoft.UI.Xaml.Media.IQuadraticBezierSegmentStaticsMethods.get_Point1Property(_objRef_global__Microsoft_UI_Xaml_Media_IQuadraticBezierSegmentStatics);

        public static global::Microsoft.UI.Xaml.DependencyProperty Point2Property => global::ABI.Microsoft.UI.Xaml.Media.IQuadraticBezierSegmentStaticsMethods.get_Point2Property(_objRef_global__Microsoft_UI_Xaml_Media_IQuadraticBezierSegmentStatics);

        public static new QuadraticBezierSegment FromAbi(IntPtr thisPtr)
        {
            if (thisPtr == IntPtr.Zero) return null;
            return MarshalInspectable<QuadraticBezierSegment>.FromAbi(thisPtr);
        }

        internal QuadraticBezierSegment(IObjectReference objRef)
            : base(global::WinRT.DerivedComposed.Instance)

        {
            _inner = objRef.As(global::ABI.Microsoft.UI.Xaml.Media.IQuadraticBezierSegmentMethods.IID);

        }


        public static bool operator ==(QuadraticBezierSegment x, QuadraticBezierSegment y) => (x?.ThisPtr ?? IntPtr.Zero) == (y?.ThisPtr ?? IntPtr.Zero);
        public static bool operator !=(QuadraticBezierSegment x, QuadraticBezierSegment y) => !(x == y);
        public bool Equals(QuadraticBezierSegment other) => this == other;
        public override bool Equals(object obj) => obj is QuadraticBezierSegment that && this == that;
        public override int GetHashCode() => ThisPtr.GetHashCode();


        bool IWinRTObject.HasUnwrappableNativeObject => true;
        IObjectReference IWinRTObject.NativeObject => _inner;

        private struct InterfaceTag<I>{};


        public global::Windows.Foundation.Point Point1
        {
            get => global::ABI.Microsoft.UI.Xaml.Media.IQuadraticBezierSegmentMethods.get_Point1(_objRef_global__Microsoft_UI_Xaml_Media_IQuadraticBezierSegment);
            set => global::ABI.Microsoft.UI.Xaml.Media.IQuadraticBezierSegmentMethods.set_Point1(_objRef_global__Microsoft_UI_Xaml_Media_IQuadraticBezierSegment, value);
        }

        public global::Windows.Foundation.Point Point2
        {
            get => global::ABI.Microsoft.UI.Xaml.Media.IQuadraticBezierSegmentMethods.get_Point2(_objRef_global__Microsoft_UI_Xaml_Media_IQuadraticBezierSegment);
            set => global::ABI.Microsoft.UI.Xaml.Media.IQuadraticBezierSegmentMethods.set_Point2(_objRef_global__Microsoft_UI_Xaml_Media_IQuadraticBezierSegment, value);
        }

        protected override bool IsOverridableInterface(Guid iid) => base.IsOverridableInterface(iid);

        global::System.Runtime.InteropServices.CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(ref Guid iid, out IntPtr ppv)
        {
            ppv = IntPtr.Zero;
            if (IsOverridableInterface(iid) || global::WinRT.Interop.IID.IID_IInspectable == iid)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
            }

            if (((IWinRTObject)this).NativeObject.TryAs(iid, out ppv) >= 0)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.Handled;
            }

            return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
        }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")]
    [global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Media.RadialGradientBrush))]
    [global::ABI.Microsoft.UI.Xaml.Media.RadialGradientBrushRcwFactory]
    [global::WinRT.ProjectedRuntimeClass(typeof(IRadialGradientBrush))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.XamlContract), 65536u)]
    [global::Windows.UI.Xaml.Markup.ContentProperty(Name = @"GradientStops")]
    public class RadialGradientBrush : XamlCompositionBrushBase, global::System.Runtime.InteropServices.ICustomQueryInterface, IWinRTObject, IEquatable<RadialGradientBrush>
    {
        private IntPtr ThisPtr => _inner == null ? (((IWinRTObject)this).NativeObject).ThisPtr : _inner.ThisPtr;

        private readonly IObjectReference _inner = null;




        private volatile IObjectReference ___objRef_global__Microsoft_UI_Xaml_Media_IRadialGradientBrush;
        private IObjectReference Make___objRef_global__Microsoft_UI_Xaml_Media_IRadialGradientBrush()
        {
            global::System.Threading.Interlocked.CompareExchange(ref ___objRef_global__Microsoft_UI_Xaml_Media_IRadialGradientBrush, ((IWinRTObject)this).NativeObject.As<IUnknownVftbl>(global::ABI.Microsoft.UI.Xaml.Media.IRadialGradientBrushMethods.IID), null);
            return ___objRef_global__Microsoft_UI_Xaml_Media_IRadialGradientBrush;
        }
        private IObjectReference _objRef_global__Microsoft_UI_Xaml_Media_IRadialGradientBrush => ___objRef_global__Microsoft_UI_Xaml_Media_IRadialGradientBrush ?? Make___objRef_global__Microsoft_UI_Xaml_Media_IRadialGradientBrush();



        private static class _IRadialGradientBrushFactoryMethods
        {
            public static unsafe IntPtr CreateInstance(IObjectReference _obj, object baseInterface, out IntPtr innerInterface)
            {
                var ThisPtr = _obj.ThisPtr;

                ObjectReferenceValue __baseInterface = default;
                IntPtr __innerInterface = default;
                IntPtr __retval = default;
                try
                {
                    __baseInterface = MarshalInspectable<object>.CreateMarshaler2(baseInterface);
                    global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, IntPtr*, IntPtr*, int>**)ThisPtr)[6](ThisPtr, MarshalInspectable<object>.GetAbi(__baseInterface), &__innerInterface, &__retval));
                    global::System.GC.KeepAlive(_obj);
                    innerInterface = __innerInterface;
                    return __retval;
                }
                finally
                {
                    MarshalInspectable<object>.DisposeMarshaler(__baseInterface);
                }
            }
        }

        private static volatile IObjectReference ___objRef_global__Microsoft_UI_Xaml_Media_IRadialGradientBrushFactory;
        private static IObjectReference _objRef_global__Microsoft_UI_Xaml_Media_IRadialGradientBrushFactory
        {
            get
            { 
                var factory = ___objRef_global__Microsoft_UI_Xaml_Media_IRadialGradientBrushFactory;
                if (factory != null && factory.IsInCurrentContext)
                {
                    return factory;
                }
                else
                {
                    return ___objRef_global__Microsoft_UI_Xaml_Media_IRadialGradientBrushFactory = ActivationFactory.Get("Microsoft.UI.Xaml.Media.RadialGradientBrush", global::ABI.Microsoft.UI.Xaml.Media.IRadialGradientBrushFactoryMethods.IID);
                }
            }
        }

        public RadialGradientBrush():base(global::WinRT.DerivedComposed.Instance)
        {
            bool isAggregation = this.GetType() != typeof(RadialGradientBrush);
            object baseInspectable = isAggregation ? this : null;
            IntPtr composed = _IRadialGradientBrushFactoryMethods.CreateInstance(_objRef_global__Microsoft_UI_Xaml_Media_IRadialGradientBrushFactory,  baseInspectable, out IntPtr inner);
            try
            {
                ComWrappersHelper.Init(isAggregation, this, composed, inner, global::ABI.Microsoft.UI.Xaml.Media.IRadialGradientBrushMethods.IID, out _inner);

            }
            finally
            {
                Marshal.Release(inner);   
            }
        }

        public static new I As<I>() => ActivationFactory.Get("Microsoft.UI.Xaml.Media.RadialGradientBrush").AsInterface<I>();

        private static volatile IObjectReference ___objRef_global__Microsoft_UI_Xaml_Media_IRadialGradientBrushStatics;
        private static IObjectReference _objRef_global__Microsoft_UI_Xaml_Media_IRadialGradientBrushStatics
        {
            get
            { 
                var factory = ___objRef_global__Microsoft_UI_Xaml_Media_IRadialGradientBrushStatics;
                if (factory != null && factory.IsInCurrentContext)
                {
                    return factory;
                }
                else
                {
                    return ___objRef_global__Microsoft_UI_Xaml_Media_IRadialGradientBrushStatics = ActivationFactory.Get("Microsoft.UI.Xaml.Media.RadialGradientBrush", global::ABI.Microsoft.UI.Xaml.Media.IRadialGradientBrushStaticsMethods.IID);
                }
            }
        }

        public static global::Microsoft.UI.Xaml.DependencyProperty CenterProperty => global::ABI.Microsoft.UI.Xaml.Media.IRadialGradientBrushStaticsMethods.get_CenterProperty(_objRef_global__Microsoft_UI_Xaml_Media_IRadialGradientBrushStatics);

        public static global::Microsoft.UI.Xaml.DependencyProperty GradientOriginProperty => global::ABI.Microsoft.UI.Xaml.Media.IRadialGradientBrushStaticsMethods.get_GradientOriginProperty(_objRef_global__Microsoft_UI_Xaml_Media_IRadialGradientBrushStatics);

        public static global::Microsoft.UI.Xaml.DependencyProperty InterpolationSpaceProperty => global::ABI.Microsoft.UI.Xaml.Media.IRadialGradientBrushStaticsMethods.get_InterpolationSpaceProperty(_objRef_global__Microsoft_UI_Xaml_Media_IRadialGradientBrushStatics);

        public static global::Microsoft.UI.Xaml.DependencyProperty MappingModeProperty => global::ABI.Microsoft.UI.Xaml.Media.IRadialGradientBrushStaticsMethods.get_MappingModeProperty(_objRef_global__Microsoft_UI_Xaml_Media_IRadialGradientBrushStatics);

        public static global::Microsoft.UI.Xaml.DependencyProperty RadiusXProperty => global::ABI.Microsoft.UI.Xaml.Media.IRadialGradientBrushStaticsMethods.get_RadiusXProperty(_objRef_global__Microsoft_UI_Xaml_Media_IRadialGradientBrushStatics);

        public static global::Microsoft.UI.Xaml.DependencyProperty RadiusYProperty => global::ABI.Microsoft.UI.Xaml.Media.IRadialGradientBrushStaticsMethods.get_RadiusYProperty(_objRef_global__Microsoft_UI_Xaml_Media_IRadialGradientBrushStatics);

        public static global::Microsoft.UI.Xaml.DependencyProperty SpreadMethodProperty => global::ABI.Microsoft.UI.Xaml.Media.IRadialGradientBrushStaticsMethods.get_SpreadMethodProperty(_objRef_global__Microsoft_UI_Xaml_Media_IRadialGradientBrushStatics);

        public static new RadialGradientBrush FromAbi(IntPtr thisPtr)
        {
            if (thisPtr == IntPtr.Zero) return null;
            return MarshalInspectable<RadialGradientBrush>.FromAbi(thisPtr);
        }

        protected internal RadialGradientBrush(IObjectReference objRef)
            : base(global::WinRT.DerivedComposed.Instance)

        {
            _inner = objRef.As(global::ABI.Microsoft.UI.Xaml.Media.IRadialGradientBrushMethods.IID);

        }


        public static bool operator ==(RadialGradientBrush x, RadialGradientBrush y) => (x?.ThisPtr ?? IntPtr.Zero) == (y?.ThisPtr ?? IntPtr.Zero);
        public static bool operator !=(RadialGradientBrush x, RadialGradientBrush y) => !(x == y);
        public bool Equals(RadialGradientBrush other) => this == other;
        public override bool Equals(object obj) => obj is RadialGradientBrush that && this == that;
        public override int GetHashCode() => ThisPtr.GetHashCode();


        protected RadialGradientBrush(global::WinRT.DerivedComposed _):base(_)
        {

        }
        bool IWinRTObject.HasUnwrappableNativeObject => this.GetType() == typeof(RadialGradientBrush);
        IObjectReference IWinRTObject.NativeObject => _inner;

        private struct InterfaceTag<I>{};


        public global::Windows.Foundation.Point Center
        {
            get => global::ABI.Microsoft.UI.Xaml.Media.IRadialGradientBrushMethods.get_Center(_objRef_global__Microsoft_UI_Xaml_Media_IRadialGradientBrush);
            set => global::ABI.Microsoft.UI.Xaml.Media.IRadialGradientBrushMethods.set_Center(_objRef_global__Microsoft_UI_Xaml_Media_IRadialGradientBrush, value);
        }

        public global::Windows.Foundation.Point GradientOrigin
        {
            get => global::ABI.Microsoft.UI.Xaml.Media.IRadialGradientBrushMethods.get_GradientOrigin(_objRef_global__Microsoft_UI_Xaml_Media_IRadialGradientBrush);
            set => global::ABI.Microsoft.UI.Xaml.Media.IRadialGradientBrushMethods.set_GradientOrigin(_objRef_global__Microsoft_UI_Xaml_Media_IRadialGradientBrush, value);
        }

        public global::Windows.Foundation.Collections.IObservableVector<GradientStop> GradientStops => global::ABI.Microsoft.UI.Xaml.Media.IRadialGradientBrushMethods.get_GradientStops(_objRef_global__Microsoft_UI_Xaml_Media_IRadialGradientBrush);

        public global::Microsoft.UI.Composition.CompositionColorSpace InterpolationSpace
        {
            get => global::ABI.Microsoft.UI.Xaml.Media.IRadialGradientBrushMethods.get_InterpolationSpace(_objRef_global__Microsoft_UI_Xaml_Media_IRadialGradientBrush);
            set => global::ABI.Microsoft.UI.Xaml.Media.IRadialGradientBrushMethods.set_InterpolationSpace(_objRef_global__Microsoft_UI_Xaml_Media_IRadialGradientBrush, value);
        }

        public BrushMappingMode MappingMode
        {
            get => global::ABI.Microsoft.UI.Xaml.Media.IRadialGradientBrushMethods.get_MappingMode(_objRef_global__Microsoft_UI_Xaml_Media_IRadialGradientBrush);
            set => global::ABI.Microsoft.UI.Xaml.Media.IRadialGradientBrushMethods.set_MappingMode(_objRef_global__Microsoft_UI_Xaml_Media_IRadialGradientBrush, value);
        }

        public double RadiusX
        {
            get => global::ABI.Microsoft.UI.Xaml.Media.IRadialGradientBrushMethods.get_RadiusX(_objRef_global__Microsoft_UI_Xaml_Media_IRadialGradientBrush);
            set => global::ABI.Microsoft.UI.Xaml.Media.IRadialGradientBrushMethods.set_RadiusX(_objRef_global__Microsoft_UI_Xaml_Media_IRadialGradientBrush, value);
        }

        public double RadiusY
        {
            get => global::ABI.Microsoft.UI.Xaml.Media.IRadialGradientBrushMethods.get_RadiusY(_objRef_global__Microsoft_UI_Xaml_Media_IRadialGradientBrush);
            set => global::ABI.Microsoft.UI.Xaml.Media.IRadialGradientBrushMethods.set_RadiusY(_objRef_global__Microsoft_UI_Xaml_Media_IRadialGradientBrush, value);
        }

        public GradientSpreadMethod SpreadMethod
        {
            get => global::ABI.Microsoft.UI.Xaml.Media.IRadialGradientBrushMethods.get_SpreadMethod(_objRef_global__Microsoft_UI_Xaml_Media_IRadialGradientBrush);
            set => global::ABI.Microsoft.UI.Xaml.Media.IRadialGradientBrushMethods.set_SpreadMethod(_objRef_global__Microsoft_UI_Xaml_Media_IRadialGradientBrush, value);
        }

        protected override bool IsOverridableInterface(Guid iid) => base.IsOverridableInterface(iid);

        global::System.Runtime.InteropServices.CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(ref Guid iid, out IntPtr ppv)
        {
            ppv = IntPtr.Zero;
            if (IsOverridableInterface(iid) || global::WinRT.Interop.IID.IID_IInspectable == iid)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
            }

            if (((IWinRTObject)this).NativeObject.TryAs(iid, out ppv) >= 0)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.Handled;
            }

            return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
        }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")]
    [global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Media.RectangleGeometry))]
    [global::ABI.Microsoft.UI.Xaml.Media.RectangleGeometryRcwFactory]
    [global::WinRT.ProjectedRuntimeClass(typeof(IRectangleGeometry))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    public sealed class RectangleGeometry : Geometry, global::System.Runtime.InteropServices.ICustomQueryInterface, IWinRTObject, IEquatable<RectangleGeometry>
    {
        private IntPtr ThisPtr => _inner == null ? (((IWinRTObject)this).NativeObject).ThisPtr : _inner.ThisPtr;

        private readonly IObjectReference _inner = null;



        private IObjectReference _objRef_global__Microsoft_UI_Xaml_Media_IRectangleGeometry => _inner;


        private static volatile IObjectReference ___objRef_global__Microsoft_UI_Xaml_Media_RectangleGeometry;
        private static IObjectReference _objRef_global__Microsoft_UI_Xaml_Media_RectangleGeometry
        {
            get
            { 
                var factory = ___objRef_global__Microsoft_UI_Xaml_Media_RectangleGeometry;
                if (factory != null && factory.IsInCurrentContext)
                {
                    return factory;
                }
                else
                {
                    return ___objRef_global__Microsoft_UI_Xaml_Media_RectangleGeometry = ActivationFactory.Get("Microsoft.UI.Xaml.Media.RectangleGeometry");
                }
            }
        }

        public RectangleGeometry() :base(global::WinRT.DerivedComposed.Instance)
        {
            _inner = global::ABI.WinRT.Interop.IActivationFactoryMethods.ActivateInstanceUnsafe(_objRef_global__Microsoft_UI_Xaml_Media_RectangleGeometry, global::ABI.Microsoft.UI.Xaml.Media.IRectangleGeometryMethods.IID);
            ComWrappersSupport.RegisterObjectForInterface(this, ThisPtr);
            ComWrappersHelper.Init(_inner, false);

        }

        public static new I As<I>() => ActivationFactory.Get("Microsoft.UI.Xaml.Media.RectangleGeometry").AsInterface<I>();

        private static volatile IObjectReference ___objRef_global__Microsoft_UI_Xaml_Media_IRectangleGeometryStatics;
        private static IObjectReference _objRef_global__Microsoft_UI_Xaml_Media_IRectangleGeometryStatics
        {
            get
            { 
                var factory = ___objRef_global__Microsoft_UI_Xaml_Media_IRectangleGeometryStatics;
                if (factory != null && factory.IsInCurrentContext)
                {
                    return factory;
                }
                else
                {
                    return ___objRef_global__Microsoft_UI_Xaml_Media_IRectangleGeometryStatics = ActivationFactory.Get("Microsoft.UI.Xaml.Media.RectangleGeometry", global::ABI.Microsoft.UI.Xaml.Media.IRectangleGeometryStaticsMethods.IID);
                }
            }
        }

        public static global::Microsoft.UI.Xaml.DependencyProperty RectProperty => global::ABI.Microsoft.UI.Xaml.Media.IRectangleGeometryStaticsMethods.get_RectProperty(_objRef_global__Microsoft_UI_Xaml_Media_IRectangleGeometryStatics);

        public static new RectangleGeometry FromAbi(IntPtr thisPtr)
        {
            if (thisPtr == IntPtr.Zero) return null;
            return MarshalInspectable<RectangleGeometry>.FromAbi(thisPtr);
        }

        internal RectangleGeometry(IObjectReference objRef)
            : base(global::WinRT.DerivedComposed.Instance)

        {
            _inner = objRef.As(global::ABI.Microsoft.UI.Xaml.Media.IRectangleGeometryMethods.IID);

        }


        public static bool operator ==(RectangleGeometry x, RectangleGeometry y) => (x?.ThisPtr ?? IntPtr.Zero) == (y?.ThisPtr ?? IntPtr.Zero);
        public static bool operator !=(RectangleGeometry x, RectangleGeometry y) => !(x == y);
        public bool Equals(RectangleGeometry other) => this == other;
        public override bool Equals(object obj) => obj is RectangleGeometry that && this == that;
        public override int GetHashCode() => ThisPtr.GetHashCode();


        bool IWinRTObject.HasUnwrappableNativeObject => true;
        IObjectReference IWinRTObject.NativeObject => _inner;

        private struct InterfaceTag<I>{};


        public global::Windows.Foundation.Rect Rect
        {
            get => global::ABI.Microsoft.UI.Xaml.Media.IRectangleGeometryMethods.get_Rect(_objRef_global__Microsoft_UI_Xaml_Media_IRectangleGeometry);
            set => global::ABI.Microsoft.UI.Xaml.Media.IRectangleGeometryMethods.set_Rect(_objRef_global__Microsoft_UI_Xaml_Media_IRectangleGeometry, value);
        }

        protected override bool IsOverridableInterface(Guid iid) => base.IsOverridableInterface(iid);

        global::System.Runtime.InteropServices.CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(ref Guid iid, out IntPtr ppv)
        {
            ppv = IntPtr.Zero;
            if (IsOverridableInterface(iid) || global::WinRT.Interop.IID.IID_IInspectable == iid)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
            }

            if (((IWinRTObject)this).NativeObject.TryAs(iid, out ppv) >= 0)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.Handled;
            }

            return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
        }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")]
    [global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Media.RenderedEventArgs))]
    [global::ABI.Microsoft.UI.Xaml.Media.RenderedEventArgsRcwFactory]
    [global::WinRT.ProjectedRuntimeClass(typeof(IRenderedEventArgs))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    public sealed class RenderedEventArgs : global::System.Runtime.InteropServices.ICustomQueryInterface, IWinRTObject, IEquatable<RenderedEventArgs>
    {
        private IntPtr ThisPtr => _inner == null ? (((IWinRTObject)this).NativeObject).ThisPtr : _inner.ThisPtr;

        private readonly IObjectReference _inner = null;



        private IObjectReference _objRef_global__Microsoft_UI_Xaml_Media_IRenderedEventArgs => _inner;


        public static RenderedEventArgs FromAbi(IntPtr thisPtr)
        {
            if (thisPtr == IntPtr.Zero) return null;
            return MarshalInspectable<RenderedEventArgs>.FromAbi(thisPtr);
        }

        internal RenderedEventArgs(IObjectReference objRef)
        {
            _inner = objRef.As(global::ABI.Microsoft.UI.Xaml.Media.IRenderedEventArgsMethods.IID);

        }


        public static bool operator ==(RenderedEventArgs x, RenderedEventArgs y) => (x?.ThisPtr ?? IntPtr.Zero) == (y?.ThisPtr ?? IntPtr.Zero);
        public static bool operator !=(RenderedEventArgs x, RenderedEventArgs y) => !(x == y);
        public bool Equals(RenderedEventArgs other) => this == other;
        public override bool Equals(object obj) => obj is RenderedEventArgs that && this == that;
        public override int GetHashCode() => ThisPtr.GetHashCode();


        bool IWinRTObject.HasUnwrappableNativeObject => true;
        IObjectReference IWinRTObject.NativeObject => _inner;
        private volatile global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> _queryInterfaceCache;
        private global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> MakeQueryInterfaceCache()
        {
            global::System.Threading.Interlocked.CompareExchange(ref _queryInterfaceCache, new global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference>(), null); 
            return _queryInterfaceCache;
        }
        global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> IWinRTObject.QueryInterfaceCache => _queryInterfaceCache ?? MakeQueryInterfaceCache();
        private volatile global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> _additionalTypeData;
        private global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> MakeAdditionalTypeData()
        {
            global::System.Threading.Interlocked.CompareExchange(ref _additionalTypeData, new global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object>(), null); 
            return _additionalTypeData;
        }
        global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> IWinRTObject.AdditionalTypeData => _additionalTypeData ?? MakeAdditionalTypeData();

        private struct InterfaceTag<I>{};


        public global::System.TimeSpan FrameDuration => global::ABI.Microsoft.UI.Xaml.Media.IRenderedEventArgsMethods.get_FrameDuration(_objRef_global__Microsoft_UI_Xaml_Media_IRenderedEventArgs);

        private bool IsOverridableInterface(Guid iid) => false;

        global::System.Runtime.InteropServices.CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(ref Guid iid, out IntPtr ppv)
        {
            ppv = IntPtr.Zero;
            if (IsOverridableInterface(iid) || global::WinRT.Interop.IID.IID_IInspectable == iid)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
            }

            if (((IWinRTObject)this).NativeObject.TryAs(iid, out ppv) >= 0)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.Handled;
            }

            return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
        }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")]
    [global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Media.RenderingEventArgs))]
    [global::ABI.Microsoft.UI.Xaml.Media.RenderingEventArgsRcwFactory]
    [global::WinRT.ProjectedRuntimeClass(typeof(IRenderingEventArgs))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    public sealed class RenderingEventArgs : global::System.Runtime.InteropServices.ICustomQueryInterface, IWinRTObject, IEquatable<RenderingEventArgs>
    {
        private IntPtr ThisPtr => _inner == null ? (((IWinRTObject)this).NativeObject).ThisPtr : _inner.ThisPtr;

        private readonly IObjectReference _inner = null;



        private IObjectReference _objRef_global__Microsoft_UI_Xaml_Media_IRenderingEventArgs => _inner;


        public static RenderingEventArgs FromAbi(IntPtr thisPtr)
        {
            if (thisPtr == IntPtr.Zero) return null;
            return MarshalInspectable<RenderingEventArgs>.FromAbi(thisPtr);
        }

        internal RenderingEventArgs(IObjectReference objRef)
        {
            _inner = objRef.As(global::ABI.Microsoft.UI.Xaml.Media.IRenderingEventArgsMethods.IID);

        }


        public static bool operator ==(RenderingEventArgs x, RenderingEventArgs y) => (x?.ThisPtr ?? IntPtr.Zero) == (y?.ThisPtr ?? IntPtr.Zero);
        public static bool operator !=(RenderingEventArgs x, RenderingEventArgs y) => !(x == y);
        public bool Equals(RenderingEventArgs other) => this == other;
        public override bool Equals(object obj) => obj is RenderingEventArgs that && this == that;
        public override int GetHashCode() => ThisPtr.GetHashCode();


        bool IWinRTObject.HasUnwrappableNativeObject => true;
        IObjectReference IWinRTObject.NativeObject => _inner;
        private volatile global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> _queryInterfaceCache;
        private global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> MakeQueryInterfaceCache()
        {
            global::System.Threading.Interlocked.CompareExchange(ref _queryInterfaceCache, new global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference>(), null); 
            return _queryInterfaceCache;
        }
        global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> IWinRTObject.QueryInterfaceCache => _queryInterfaceCache ?? MakeQueryInterfaceCache();
        private volatile global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> _additionalTypeData;
        private global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> MakeAdditionalTypeData()
        {
            global::System.Threading.Interlocked.CompareExchange(ref _additionalTypeData, new global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object>(), null); 
            return _additionalTypeData;
        }
        global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> IWinRTObject.AdditionalTypeData => _additionalTypeData ?? MakeAdditionalTypeData();

        private struct InterfaceTag<I>{};


        public global::System.TimeSpan RenderingTime => global::ABI.Microsoft.UI.Xaml.Media.IRenderingEventArgsMethods.get_RenderingTime(_objRef_global__Microsoft_UI_Xaml_Media_IRenderingEventArgs);

        private bool IsOverridableInterface(Guid iid) => false;

        global::System.Runtime.InteropServices.CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(ref Guid iid, out IntPtr ppv)
        {
            ppv = IntPtr.Zero;
            if (IsOverridableInterface(iid) || global::WinRT.Interop.IID.IID_IInspectable == iid)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
            }

            if (((IWinRTObject)this).NativeObject.TryAs(iid, out ppv) >= 0)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.Handled;
            }

            return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
        }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")]
    [global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Media.RevealBackgroundBrush))]
    [global::ABI.Microsoft.UI.Xaml.Media.RevealBackgroundBrushRcwFactory]
    [global::WinRT.ProjectedRuntimeClass(typeof(IRevealBackgroundBrush))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.XamlContract), 589824u)]
    [global::Windows.Foundation.Metadata.Experimental]
    public class RevealBackgroundBrush : RevealBrush, global::System.Runtime.InteropServices.ICustomQueryInterface, IWinRTObject, IEquatable<RevealBackgroundBrush>
    {
        private IntPtr ThisPtr => _inner == null ? (((IWinRTObject)this).NativeObject).ThisPtr : _inner.ThisPtr;

        private readonly IObjectReference _inner = null;




        private volatile IObjectReference ___objRef_global__Microsoft_UI_Xaml_Media_IRevealBackgroundBrush;
        private IObjectReference Make___objRef_global__Microsoft_UI_Xaml_Media_IRevealBackgroundBrush()
        {
            global::System.Threading.Interlocked.CompareExchange(ref ___objRef_global__Microsoft_UI_Xaml_Media_IRevealBackgroundBrush, ((IWinRTObject)this).NativeObject.As<IUnknownVftbl>(global::ABI.Microsoft.UI.Xaml.Media.IRevealBackgroundBrushMethods.IID), null);
            return ___objRef_global__Microsoft_UI_Xaml_Media_IRevealBackgroundBrush;
        }
        private IObjectReference _objRef_global__Microsoft_UI_Xaml_Media_IRevealBackgroundBrush => ___objRef_global__Microsoft_UI_Xaml_Media_IRevealBackgroundBrush ?? Make___objRef_global__Microsoft_UI_Xaml_Media_IRevealBackgroundBrush();



        private static class _IRevealBackgroundBrushFactoryMethods
        {
            public static unsafe IntPtr CreateInstance(IObjectReference _obj, object baseInterface, out IntPtr innerInterface)
            {
                var ThisPtr = _obj.ThisPtr;

                ObjectReferenceValue __baseInterface = default;
                IntPtr __innerInterface = default;
                IntPtr __retval = default;
                try
                {
                    __baseInterface = MarshalInspectable<object>.CreateMarshaler2(baseInterface);
                    global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, IntPtr*, IntPtr*, int>**)ThisPtr)[6](ThisPtr, MarshalInspectable<object>.GetAbi(__baseInterface), &__innerInterface, &__retval));
                    global::System.GC.KeepAlive(_obj);
                    innerInterface = __innerInterface;
                    return __retval;
                }
                finally
                {
                    MarshalInspectable<object>.DisposeMarshaler(__baseInterface);
                }
            }
        }

        private static volatile IObjectReference ___objRef_global__Microsoft_UI_Xaml_Media_IRevealBackgroundBrushFactory;
        private static IObjectReference _objRef_global__Microsoft_UI_Xaml_Media_IRevealBackgroundBrushFactory
        {
            get
            { 
                var factory = ___objRef_global__Microsoft_UI_Xaml_Media_IRevealBackgroundBrushFactory;
                if (factory != null && factory.IsInCurrentContext)
                {
                    return factory;
                }
                else
                {
                    return ___objRef_global__Microsoft_UI_Xaml_Media_IRevealBackgroundBrushFactory = ActivationFactory.Get("Microsoft.UI.Xaml.Media.RevealBackgroundBrush", global::ABI.Microsoft.UI.Xaml.Media.IRevealBackgroundBrushFactoryMethods.IID);
                }
            }
        }

        public RevealBackgroundBrush():base(global::WinRT.DerivedComposed.Instance)
        {
            bool isAggregation = this.GetType() != typeof(RevealBackgroundBrush);
            object baseInspectable = isAggregation ? this : null;
            IntPtr composed = _IRevealBackgroundBrushFactoryMethods.CreateInstance(_objRef_global__Microsoft_UI_Xaml_Media_IRevealBackgroundBrushFactory,  baseInspectable, out IntPtr inner);
            try
            {
                ComWrappersHelper.Init(isAggregation, this, composed, inner, global::ABI.Microsoft.UI.Xaml.Media.IRevealBackgroundBrushMethods.IID, out _inner);

            }
            finally
            {
                Marshal.Release(inner);   
            }
        }

        public static new RevealBackgroundBrush FromAbi(IntPtr thisPtr)
        {
            if (thisPtr == IntPtr.Zero) return null;
            return MarshalInspectable<RevealBackgroundBrush>.FromAbi(thisPtr);
        }

        protected internal RevealBackgroundBrush(IObjectReference objRef)
            : base(global::WinRT.DerivedComposed.Instance)

        {
            _inner = objRef.As(global::ABI.Microsoft.UI.Xaml.Media.IRevealBackgroundBrushMethods.IID);

        }


        public static bool operator ==(RevealBackgroundBrush x, RevealBackgroundBrush y) => (x?.ThisPtr ?? IntPtr.Zero) == (y?.ThisPtr ?? IntPtr.Zero);
        public static bool operator !=(RevealBackgroundBrush x, RevealBackgroundBrush y) => !(x == y);
        public bool Equals(RevealBackgroundBrush other) => this == other;
        public override bool Equals(object obj) => obj is RevealBackgroundBrush that && this == that;
        public override int GetHashCode() => ThisPtr.GetHashCode();


        protected RevealBackgroundBrush(global::WinRT.DerivedComposed _):base(_)
        {

        }
        bool IWinRTObject.HasUnwrappableNativeObject => this.GetType() == typeof(RevealBackgroundBrush);
        IObjectReference IWinRTObject.NativeObject => _inner;

        private struct InterfaceTag<I>{};


        protected override bool IsOverridableInterface(Guid iid) => base.IsOverridableInterface(iid);

        global::System.Runtime.InteropServices.CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(ref Guid iid, out IntPtr ppv)
        {
            ppv = IntPtr.Zero;
            if (IsOverridableInterface(iid) || global::WinRT.Interop.IID.IID_IInspectable == iid)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
            }

            if (((IWinRTObject)this).NativeObject.TryAs(iid, out ppv) >= 0)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.Handled;
            }

            return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
        }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")]
    [global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Media.RevealBorderBrush))]
    [global::ABI.Microsoft.UI.Xaml.Media.RevealBorderBrushRcwFactory]
    [global::WinRT.ProjectedRuntimeClass(typeof(IRevealBorderBrush))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.XamlContract), 589824u)]
    [global::Windows.Foundation.Metadata.Experimental]
    public class RevealBorderBrush : RevealBrush, global::System.Runtime.InteropServices.ICustomQueryInterface, IWinRTObject, IEquatable<RevealBorderBrush>
    {
        private IntPtr ThisPtr => _inner == null ? (((IWinRTObject)this).NativeObject).ThisPtr : _inner.ThisPtr;

        private readonly IObjectReference _inner = null;




        private volatile IObjectReference ___objRef_global__Microsoft_UI_Xaml_Media_IRevealBorderBrush;
        private IObjectReference Make___objRef_global__Microsoft_UI_Xaml_Media_IRevealBorderBrush()
        {
            global::System.Threading.Interlocked.CompareExchange(ref ___objRef_global__Microsoft_UI_Xaml_Media_IRevealBorderBrush, ((IWinRTObject)this).NativeObject.As<IUnknownVftbl>(global::ABI.Microsoft.UI.Xaml.Media.IRevealBorderBrushMethods.IID), null);
            return ___objRef_global__Microsoft_UI_Xaml_Media_IRevealBorderBrush;
        }
        private IObjectReference _objRef_global__Microsoft_UI_Xaml_Media_IRevealBorderBrush => ___objRef_global__Microsoft_UI_Xaml_Media_IRevealBorderBrush ?? Make___objRef_global__Microsoft_UI_Xaml_Media_IRevealBorderBrush();



        private static class _IRevealBorderBrushFactoryMethods
        {
            public static unsafe IntPtr CreateInstance(IObjectReference _obj, object baseInterface, out IntPtr innerInterface)
            {
                var ThisPtr = _obj.ThisPtr;

                ObjectReferenceValue __baseInterface = default;
                IntPtr __innerInterface = default;
                IntPtr __retval = default;
                try
                {
                    __baseInterface = MarshalInspectable<object>.CreateMarshaler2(baseInterface);
                    global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, IntPtr*, IntPtr*, int>**)ThisPtr)[6](ThisPtr, MarshalInspectable<object>.GetAbi(__baseInterface), &__innerInterface, &__retval));
                    global::System.GC.KeepAlive(_obj);
                    innerInterface = __innerInterface;
                    return __retval;
                }
                finally
                {
                    MarshalInspectable<object>.DisposeMarshaler(__baseInterface);
                }
            }
        }

        private static volatile IObjectReference ___objRef_global__Microsoft_UI_Xaml_Media_IRevealBorderBrushFactory;
        private static IObjectReference _objRef_global__Microsoft_UI_Xaml_Media_IRevealBorderBrushFactory
        {
            get
            { 
                var factory = ___objRef_global__Microsoft_UI_Xaml_Media_IRevealBorderBrushFactory;
                if (factory != null && factory.IsInCurrentContext)
                {
                    return factory;
                }
                else
                {
                    return ___objRef_global__Microsoft_UI_Xaml_Media_IRevealBorderBrushFactory = ActivationFactory.Get("Microsoft.UI.Xaml.Media.RevealBorderBrush", global::ABI.Microsoft.UI.Xaml.Media.IRevealBorderBrushFactoryMethods.IID);
                }
            }
        }

        public RevealBorderBrush():base(global::WinRT.DerivedComposed.Instance)
        {
            bool isAggregation = this.GetType() != typeof(RevealBorderBrush);
            object baseInspectable = isAggregation ? this : null;
            IntPtr composed = _IRevealBorderBrushFactoryMethods.CreateInstance(_objRef_global__Microsoft_UI_Xaml_Media_IRevealBorderBrushFactory,  baseInspectable, out IntPtr inner);
            try
            {
                ComWrappersHelper.Init(isAggregation, this, composed, inner, global::ABI.Microsoft.UI.Xaml.Media.IRevealBorderBrushMethods.IID, out _inner);

            }
            finally
            {
                Marshal.Release(inner);   
            }
        }

        public static new RevealBorderBrush FromAbi(IntPtr thisPtr)
        {
            if (thisPtr == IntPtr.Zero) return null;
            return MarshalInspectable<RevealBorderBrush>.FromAbi(thisPtr);
        }

        protected internal RevealBorderBrush(IObjectReference objRef)
            : base(global::WinRT.DerivedComposed.Instance)

        {
            _inner = objRef.As(global::ABI.Microsoft.UI.Xaml.Media.IRevealBorderBrushMethods.IID);

        }


        public static bool operator ==(RevealBorderBrush x, RevealBorderBrush y) => (x?.ThisPtr ?? IntPtr.Zero) == (y?.ThisPtr ?? IntPtr.Zero);
        public static bool operator !=(RevealBorderBrush x, RevealBorderBrush y) => !(x == y);
        public bool Equals(RevealBorderBrush other) => this == other;
        public override bool Equals(object obj) => obj is RevealBorderBrush that && this == that;
        public override int GetHashCode() => ThisPtr.GetHashCode();


        protected RevealBorderBrush(global::WinRT.DerivedComposed _):base(_)
        {

        }
        bool IWinRTObject.HasUnwrappableNativeObject => this.GetType() == typeof(RevealBorderBrush);
        IObjectReference IWinRTObject.NativeObject => _inner;

        private struct InterfaceTag<I>{};


        protected override bool IsOverridableInterface(Guid iid) => base.IsOverridableInterface(iid);

        global::System.Runtime.InteropServices.CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(ref Guid iid, out IntPtr ppv)
        {
            ppv = IntPtr.Zero;
            if (IsOverridableInterface(iid) || global::WinRT.Interop.IID.IID_IInspectable == iid)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
            }

            if (((IWinRTObject)this).NativeObject.TryAs(iid, out ppv) >= 0)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.Handled;
            }

            return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
        }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")]
    [global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Media.RevealBrush))]
    [global::ABI.Microsoft.UI.Xaml.Media.RevealBrushRcwFactory]
    [global::WinRT.ProjectedRuntimeClass(typeof(IRevealBrush))]
    [global::Microsoft.UI.Xaml.CustomAttributes.MUXPropertyChangedCallback(enable = true)]
    [global::Microsoft.UI.Xaml.CustomAttributes.MUXPropertyChangedCallbackMethodName(value = @"OnPropertyChanged")]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.XamlContract), 589824u)]
    [global::Windows.Foundation.Metadata.Experimental]
    public class RevealBrush : XamlCompositionBrushBase, global::System.Runtime.InteropServices.ICustomQueryInterface, IWinRTObject, IEquatable<RevealBrush>
    {
        private IntPtr ThisPtr => _inner == null ? (((IWinRTObject)this).NativeObject).ThisPtr : _inner.ThisPtr;

        private readonly IObjectReference _inner = null;




        private volatile IObjectReference ___objRef_global__Microsoft_UI_Xaml_Media_IRevealBrush;
        private IObjectReference Make___objRef_global__Microsoft_UI_Xaml_Media_IRevealBrush()
        {
            global::System.Threading.Interlocked.CompareExchange(ref ___objRef_global__Microsoft_UI_Xaml_Media_IRevealBrush, ((IWinRTObject)this).NativeObject.As<IUnknownVftbl>(global::ABI.Microsoft.UI.Xaml.Media.IRevealBrushMethods.IID), null);
            return ___objRef_global__Microsoft_UI_Xaml_Media_IRevealBrush;
        }
        private IObjectReference _objRef_global__Microsoft_UI_Xaml_Media_IRevealBrush => ___objRef_global__Microsoft_UI_Xaml_Media_IRevealBrush ?? Make___objRef_global__Microsoft_UI_Xaml_Media_IRevealBrush();



        private static class _IRevealBrushProtectedFactoryMethods
        {
            public static unsafe IntPtr CreateInstance(IObjectReference _obj, object baseInterface, out IntPtr innerInterface)
            {
                var ThisPtr = _obj.ThisPtr;

                ObjectReferenceValue __baseInterface = default;
                IntPtr __innerInterface = default;
                IntPtr __retval = default;
                try
                {
                    __baseInterface = MarshalInspectable<object>.CreateMarshaler2(baseInterface);
                    global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, IntPtr*, IntPtr*, int>**)ThisPtr)[6](ThisPtr, MarshalInspectable<object>.GetAbi(__baseInterface), &__innerInterface, &__retval));
                    global::System.GC.KeepAlive(_obj);
                    innerInterface = __innerInterface;
                    return __retval;
                }
                finally
                {
                    MarshalInspectable<object>.DisposeMarshaler(__baseInterface);
                }
            }
        }

        private static volatile IObjectReference ___objRef_global__Microsoft_UI_Xaml_Media_IRevealBrushProtectedFactory;
        private static IObjectReference _objRef_global__Microsoft_UI_Xaml_Media_IRevealBrushProtectedFactory
        {
            get
            { 
                var factory = ___objRef_global__Microsoft_UI_Xaml_Media_IRevealBrushProtectedFactory;
                if (factory != null && factory.IsInCurrentContext)
                {
                    return factory;
                }
                else
                {
                    return ___objRef_global__Microsoft_UI_Xaml_Media_IRevealBrushProtectedFactory = ActivationFactory.Get("Microsoft.UI.Xaml.Media.RevealBrush", global::ABI.Microsoft.UI.Xaml.Media.IRevealBrushProtectedFactoryMethods.IID);
                }
            }
        }

        protected RevealBrush():base(global::WinRT.DerivedComposed.Instance)
        {
            bool isAggregation = this.GetType() != typeof(RevealBrush);
            object baseInspectable = isAggregation ? this : null;
            IntPtr composed = _IRevealBrushProtectedFactoryMethods.CreateInstance(_objRef_global__Microsoft_UI_Xaml_Media_IRevealBrushProtectedFactory,  baseInspectable, out IntPtr inner);
            try
            {
                ComWrappersHelper.Init(isAggregation, this, composed, inner, global::ABI.Microsoft.UI.Xaml.Media.IRevealBrushMethods.IID, out _inner);

            }
            finally
            {
                Marshal.Release(inner);   
            }
        }

        public static new I As<I>() => ActivationFactory.Get("Microsoft.UI.Xaml.Media.RevealBrush").AsInterface<I>();

        private static volatile IObjectReference ___objRef_global__Microsoft_UI_Xaml_Media_IRevealBrushStatics;
        private static IObjectReference _objRef_global__Microsoft_UI_Xaml_Media_IRevealBrushStatics
        {
            get
            { 
                var factory = ___objRef_global__Microsoft_UI_Xaml_Media_IRevealBrushStatics;
                if (factory != null && factory.IsInCurrentContext)
                {
                    return factory;
                }
                else
                {
                    return ___objRef_global__Microsoft_UI_Xaml_Media_IRevealBrushStatics = ActivationFactory.Get("Microsoft.UI.Xaml.Media.RevealBrush", global::ABI.Microsoft.UI.Xaml.Media.IRevealBrushStaticsMethods.IID);
                }
            }
        }

        public static void SetState(global::Microsoft.UI.Xaml.UIElement element, RevealBrushState value) => global::ABI.Microsoft.UI.Xaml.Media.IRevealBrushStaticsMethods.SetState(_objRef_global__Microsoft_UI_Xaml_Media_IRevealBrushStatics, element, value);

        public static RevealBrushState GetState(global::Microsoft.UI.Xaml.UIElement element) => global::ABI.Microsoft.UI.Xaml.Media.IRevealBrushStaticsMethods.GetState(_objRef_global__Microsoft_UI_Xaml_Media_IRevealBrushStatics, element);

        public static global::Microsoft.UI.Xaml.DependencyProperty AlwaysUseFallbackProperty => global::ABI.Microsoft.UI.Xaml.Media.IRevealBrushStaticsMethods.get_AlwaysUseFallbackProperty(_objRef_global__Microsoft_UI_Xaml_Media_IRevealBrushStatics);

        public static global::Microsoft.UI.Xaml.DependencyProperty ColorProperty => global::ABI.Microsoft.UI.Xaml.Media.IRevealBrushStaticsMethods.get_ColorProperty(_objRef_global__Microsoft_UI_Xaml_Media_IRevealBrushStatics);

        public static global::Microsoft.UI.Xaml.DependencyProperty StateProperty => global::ABI.Microsoft.UI.Xaml.Media.IRevealBrushStaticsMethods.get_StateProperty(_objRef_global__Microsoft_UI_Xaml_Media_IRevealBrushStatics);

        public static global::Microsoft.UI.Xaml.DependencyProperty TargetThemeProperty => global::ABI.Microsoft.UI.Xaml.Media.IRevealBrushStaticsMethods.get_TargetThemeProperty(_objRef_global__Microsoft_UI_Xaml_Media_IRevealBrushStatics);

        public static new RevealBrush FromAbi(IntPtr thisPtr)
        {
            if (thisPtr == IntPtr.Zero) return null;
            return MarshalInspectable<RevealBrush>.FromAbi(thisPtr);
        }

        protected internal RevealBrush(IObjectReference objRef)
            : base(global::WinRT.DerivedComposed.Instance)

        {
            _inner = objRef.As(global::ABI.Microsoft.UI.Xaml.Media.IRevealBrushMethods.IID);

        }


        public static bool operator ==(RevealBrush x, RevealBrush y) => (x?.ThisPtr ?? IntPtr.Zero) == (y?.ThisPtr ?? IntPtr.Zero);
        public static bool operator !=(RevealBrush x, RevealBrush y) => !(x == y);
        public bool Equals(RevealBrush other) => this == other;
        public override bool Equals(object obj) => obj is RevealBrush that && this == that;
        public override int GetHashCode() => ThisPtr.GetHashCode();


        protected RevealBrush(global::WinRT.DerivedComposed _):base(_)
        {

        }
        bool IWinRTObject.HasUnwrappableNativeObject => this.GetType() == typeof(RevealBrush);
        IObjectReference IWinRTObject.NativeObject => _inner;

        private struct InterfaceTag<I>{};


        public bool AlwaysUseFallback
        {
            get => global::ABI.Microsoft.UI.Xaml.Media.IRevealBrushMethods.get_AlwaysUseFallback(_objRef_global__Microsoft_UI_Xaml_Media_IRevealBrush);
            set => global::ABI.Microsoft.UI.Xaml.Media.IRevealBrushMethods.set_AlwaysUseFallback(_objRef_global__Microsoft_UI_Xaml_Media_IRevealBrush, value);
        }

        public global::Windows.UI.Color Color
        {
            get => global::ABI.Microsoft.UI.Xaml.Media.IRevealBrushMethods.get_Color(_objRef_global__Microsoft_UI_Xaml_Media_IRevealBrush);
            set => global::ABI.Microsoft.UI.Xaml.Media.IRevealBrushMethods.set_Color(_objRef_global__Microsoft_UI_Xaml_Media_IRevealBrush, value);
        }

        public global::Microsoft.UI.Xaml.ApplicationTheme TargetTheme
        {
            get => global::ABI.Microsoft.UI.Xaml.Media.IRevealBrushMethods.get_TargetTheme(_objRef_global__Microsoft_UI_Xaml_Media_IRevealBrush);
            set => global::ABI.Microsoft.UI.Xaml.Media.IRevealBrushMethods.set_TargetTheme(_objRef_global__Microsoft_UI_Xaml_Media_IRevealBrush, value);
        }

        protected override bool IsOverridableInterface(Guid iid) => base.IsOverridableInterface(iid);

        global::System.Runtime.InteropServices.CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(ref Guid iid, out IntPtr ppv)
        {
            ppv = IntPtr.Zero;
            if (IsOverridableInterface(iid) || global::WinRT.Interop.IID.IID_IInspectable == iid)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
            }

            if (((IWinRTObject)this).NativeObject.TryAs(iid, out ppv) >= 0)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.Handled;
            }

            return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
        }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")][global::WinRT.WinRTExposedType(typeof(global::WinRT.EnumTypeDetails<RevealBrushState>))][global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.XamlContract), 589824u)]
    [global::Windows.Foundation.Metadata.Experimental]
    public enum RevealBrushState : int
    {
        Normal = unchecked((int)0),
        PointerOver = unchecked((int)0x1),
        Pressed = unchecked((int)0x2),
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")]
    [global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Media.RotateTransform))]
    [global::ABI.Microsoft.UI.Xaml.Media.RotateTransformRcwFactory]
    [global::WinRT.ProjectedRuntimeClass(typeof(IRotateTransform))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    public sealed class RotateTransform : Transform, global::System.Runtime.InteropServices.ICustomQueryInterface, IWinRTObject, IEquatable<RotateTransform>
    {
        private IntPtr ThisPtr => _inner == null ? (((IWinRTObject)this).NativeObject).ThisPtr : _inner.ThisPtr;

        private readonly IObjectReference _inner = null;



        private IObjectReference _objRef_global__Microsoft_UI_Xaml_Media_IRotateTransform => _inner;


        private static volatile IObjectReference ___objRef_global__Microsoft_UI_Xaml_Media_RotateTransform;
        private static IObjectReference _objRef_global__Microsoft_UI_Xaml_Media_RotateTransform
        {
            get
            { 
                var factory = ___objRef_global__Microsoft_UI_Xaml_Media_RotateTransform;
                if (factory != null && factory.IsInCurrentContext)
                {
                    return factory;
                }
                else
                {
                    return ___objRef_global__Microsoft_UI_Xaml_Media_RotateTransform = ActivationFactory.Get("Microsoft.UI.Xaml.Media.RotateTransform");
                }
            }
        }

        public RotateTransform() :base(global::WinRT.DerivedComposed.Instance)
        {
            _inner = global::ABI.WinRT.Interop.IActivationFactoryMethods.ActivateInstanceUnsafe(_objRef_global__Microsoft_UI_Xaml_Media_RotateTransform, global::ABI.Microsoft.UI.Xaml.Media.IRotateTransformMethods.IID);
            ComWrappersSupport.RegisterObjectForInterface(this, ThisPtr);
            ComWrappersHelper.Init(_inner, false);

        }

        public static I As<I>() => ActivationFactory.Get("Microsoft.UI.Xaml.Media.RotateTransform").AsInterface<I>();

        private static volatile IObjectReference ___objRef_global__Microsoft_UI_Xaml_Media_IRotateTransformStatics;
        private static IObjectReference _objRef_global__Microsoft_UI_Xaml_Media_IRotateTransformStatics
        {
            get
            { 
                var factory = ___objRef_global__Microsoft_UI_Xaml_Media_IRotateTransformStatics;
                if (factory != null && factory.IsInCurrentContext)
                {
                    return factory;
                }
                else
                {
                    return ___objRef_global__Microsoft_UI_Xaml_Media_IRotateTransformStatics = ActivationFactory.Get("Microsoft.UI.Xaml.Media.RotateTransform", global::ABI.Microsoft.UI.Xaml.Media.IRotateTransformStaticsMethods.IID);
                }
            }
        }

        public static global::Microsoft.UI.Xaml.DependencyProperty AngleProperty => global::ABI.Microsoft.UI.Xaml.Media.IRotateTransformStaticsMethods.get_AngleProperty(_objRef_global__Microsoft_UI_Xaml_Media_IRotateTransformStatics);

        public static global::Microsoft.UI.Xaml.DependencyProperty CenterXProperty => global::ABI.Microsoft.UI.Xaml.Media.IRotateTransformStaticsMethods.get_CenterXProperty(_objRef_global__Microsoft_UI_Xaml_Media_IRotateTransformStatics);

        public static global::Microsoft.UI.Xaml.DependencyProperty CenterYProperty => global::ABI.Microsoft.UI.Xaml.Media.IRotateTransformStaticsMethods.get_CenterYProperty(_objRef_global__Microsoft_UI_Xaml_Media_IRotateTransformStatics);

        public static new RotateTransform FromAbi(IntPtr thisPtr)
        {
            if (thisPtr == IntPtr.Zero) return null;
            return MarshalInspectable<RotateTransform>.FromAbi(thisPtr);
        }

        internal RotateTransform(IObjectReference objRef)
            : base(global::WinRT.DerivedComposed.Instance)

        {
            _inner = objRef.As(global::ABI.Microsoft.UI.Xaml.Media.IRotateTransformMethods.IID);

        }


        public static bool operator ==(RotateTransform x, RotateTransform y) => (x?.ThisPtr ?? IntPtr.Zero) == (y?.ThisPtr ?? IntPtr.Zero);
        public static bool operator !=(RotateTransform x, RotateTransform y) => !(x == y);
        public bool Equals(RotateTransform other) => this == other;
        public override bool Equals(object obj) => obj is RotateTransform that && this == that;
        public override int GetHashCode() => ThisPtr.GetHashCode();


        bool IWinRTObject.HasUnwrappableNativeObject => true;
        IObjectReference IWinRTObject.NativeObject => _inner;

        private struct InterfaceTag<I>{};


        public double Angle
        {
            get => global::ABI.Microsoft.UI.Xaml.Media.IRotateTransformMethods.get_Angle(_objRef_global__Microsoft_UI_Xaml_Media_IRotateTransform);
            set => global::ABI.Microsoft.UI.Xaml.Media.IRotateTransformMethods.set_Angle(_objRef_global__Microsoft_UI_Xaml_Media_IRotateTransform, value);
        }

        public double CenterX
        {
            get => global::ABI.Microsoft.UI.Xaml.Media.IRotateTransformMethods.get_CenterX(_objRef_global__Microsoft_UI_Xaml_Media_IRotateTransform);
            set => global::ABI.Microsoft.UI.Xaml.Media.IRotateTransformMethods.set_CenterX(_objRef_global__Microsoft_UI_Xaml_Media_IRotateTransform, value);
        }

        public double CenterY
        {
            get => global::ABI.Microsoft.UI.Xaml.Media.IRotateTransformMethods.get_CenterY(_objRef_global__Microsoft_UI_Xaml_Media_IRotateTransform);
            set => global::ABI.Microsoft.UI.Xaml.Media.IRotateTransformMethods.set_CenterY(_objRef_global__Microsoft_UI_Xaml_Media_IRotateTransform, value);
        }

        protected override bool IsOverridableInterface(Guid iid) => base.IsOverridableInterface(iid);

        global::System.Runtime.InteropServices.CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(ref Guid iid, out IntPtr ppv)
        {
            ppv = IntPtr.Zero;
            if (IsOverridableInterface(iid) || global::WinRT.Interop.IID.IID_IInspectable == iid)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
            }

            if (((IWinRTObject)this).NativeObject.TryAs(iid, out ppv) >= 0)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.Handled;
            }

            return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
        }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")]
    [global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Media.ScaleTransform))]
    [global::ABI.Microsoft.UI.Xaml.Media.ScaleTransformRcwFactory]
    [global::WinRT.ProjectedRuntimeClass(typeof(IScaleTransform))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    public sealed class ScaleTransform : Transform, global::System.Runtime.InteropServices.ICustomQueryInterface, IWinRTObject, IEquatable<ScaleTransform>
    {
        private IntPtr ThisPtr => _inner == null ? (((IWinRTObject)this).NativeObject).ThisPtr : _inner.ThisPtr;

        private readonly IObjectReference _inner = null;



        private IObjectReference _objRef_global__Microsoft_UI_Xaml_Media_IScaleTransform => _inner;


        private static volatile IObjectReference ___objRef_global__Microsoft_UI_Xaml_Media_ScaleTransform;
        private static IObjectReference _objRef_global__Microsoft_UI_Xaml_Media_ScaleTransform
        {
            get
            { 
                var factory = ___objRef_global__Microsoft_UI_Xaml_Media_ScaleTransform;
                if (factory != null && factory.IsInCurrentContext)
                {
                    return factory;
                }
                else
                {
                    return ___objRef_global__Microsoft_UI_Xaml_Media_ScaleTransform = ActivationFactory.Get("Microsoft.UI.Xaml.Media.ScaleTransform");
                }
            }
        }

        public ScaleTransform() :base(global::WinRT.DerivedComposed.Instance)
        {
            _inner = global::ABI.WinRT.Interop.IActivationFactoryMethods.ActivateInstanceUnsafe(_objRef_global__Microsoft_UI_Xaml_Media_ScaleTransform, global::ABI.Microsoft.UI.Xaml.Media.IScaleTransformMethods.IID);
            ComWrappersSupport.RegisterObjectForInterface(this, ThisPtr);
            ComWrappersHelper.Init(_inner, false);

        }

        public static I As<I>() => ActivationFactory.Get("Microsoft.UI.Xaml.Media.ScaleTransform").AsInterface<I>();

        private static volatile IObjectReference ___objRef_global__Microsoft_UI_Xaml_Media_IScaleTransformStatics;
        private static IObjectReference _objRef_global__Microsoft_UI_Xaml_Media_IScaleTransformStatics
        {
            get
            { 
                var factory = ___objRef_global__Microsoft_UI_Xaml_Media_IScaleTransformStatics;
                if (factory != null && factory.IsInCurrentContext)
                {
                    return factory;
                }
                else
                {
                    return ___objRef_global__Microsoft_UI_Xaml_Media_IScaleTransformStatics = ActivationFactory.Get("Microsoft.UI.Xaml.Media.ScaleTransform", global::ABI.Microsoft.UI.Xaml.Media.IScaleTransformStaticsMethods.IID);
                }
            }
        }

        public static global::Microsoft.UI.Xaml.DependencyProperty CenterXProperty => global::ABI.Microsoft.UI.Xaml.Media.IScaleTransformStaticsMethods.get_CenterXProperty(_objRef_global__Microsoft_UI_Xaml_Media_IScaleTransformStatics);

        public static global::Microsoft.UI.Xaml.DependencyProperty CenterYProperty => global::ABI.Microsoft.UI.Xaml.Media.IScaleTransformStaticsMethods.get_CenterYProperty(_objRef_global__Microsoft_UI_Xaml_Media_IScaleTransformStatics);

        public static global::Microsoft.UI.Xaml.DependencyProperty ScaleXProperty => global::ABI.Microsoft.UI.Xaml.Media.IScaleTransformStaticsMethods.get_ScaleXProperty(_objRef_global__Microsoft_UI_Xaml_Media_IScaleTransformStatics);

        public static global::Microsoft.UI.Xaml.DependencyProperty ScaleYProperty => global::ABI.Microsoft.UI.Xaml.Media.IScaleTransformStaticsMethods.get_ScaleYProperty(_objRef_global__Microsoft_UI_Xaml_Media_IScaleTransformStatics);

        public static new ScaleTransform FromAbi(IntPtr thisPtr)
        {
            if (thisPtr == IntPtr.Zero) return null;
            return MarshalInspectable<ScaleTransform>.FromAbi(thisPtr);
        }

        internal ScaleTransform(IObjectReference objRef)
            : base(global::WinRT.DerivedComposed.Instance)

        {
            _inner = objRef.As(global::ABI.Microsoft.UI.Xaml.Media.IScaleTransformMethods.IID);

        }


        public static bool operator ==(ScaleTransform x, ScaleTransform y) => (x?.ThisPtr ?? IntPtr.Zero) == (y?.ThisPtr ?? IntPtr.Zero);
        public static bool operator !=(ScaleTransform x, ScaleTransform y) => !(x == y);
        public bool Equals(ScaleTransform other) => this == other;
        public override bool Equals(object obj) => obj is ScaleTransform that && this == that;
        public override int GetHashCode() => ThisPtr.GetHashCode();


        bool IWinRTObject.HasUnwrappableNativeObject => true;
        IObjectReference IWinRTObject.NativeObject => _inner;

        private struct InterfaceTag<I>{};


        public double CenterX
        {
            get => global::ABI.Microsoft.UI.Xaml.Media.IScaleTransformMethods.get_CenterX(_objRef_global__Microsoft_UI_Xaml_Media_IScaleTransform);
            set => global::ABI.Microsoft.UI.Xaml.Media.IScaleTransformMethods.set_CenterX(_objRef_global__Microsoft_UI_Xaml_Media_IScaleTransform, value);
        }

        public double CenterY
        {
            get => global::ABI.Microsoft.UI.Xaml.Media.IScaleTransformMethods.get_CenterY(_objRef_global__Microsoft_UI_Xaml_Media_IScaleTransform);
            set => global::ABI.Microsoft.UI.Xaml.Media.IScaleTransformMethods.set_CenterY(_objRef_global__Microsoft_UI_Xaml_Media_IScaleTransform, value);
        }

        public double ScaleX
        {
            get => global::ABI.Microsoft.UI.Xaml.Media.IScaleTransformMethods.get_ScaleX(_objRef_global__Microsoft_UI_Xaml_Media_IScaleTransform);
            set => global::ABI.Microsoft.UI.Xaml.Media.IScaleTransformMethods.set_ScaleX(_objRef_global__Microsoft_UI_Xaml_Media_IScaleTransform, value);
        }

        public double ScaleY
        {
            get => global::ABI.Microsoft.UI.Xaml.Media.IScaleTransformMethods.get_ScaleY(_objRef_global__Microsoft_UI_Xaml_Media_IScaleTransform);
            set => global::ABI.Microsoft.UI.Xaml.Media.IScaleTransformMethods.set_ScaleY(_objRef_global__Microsoft_UI_Xaml_Media_IScaleTransform, value);
        }

        protected override bool IsOverridableInterface(Guid iid) => base.IsOverridableInterface(iid);

        global::System.Runtime.InteropServices.CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(ref Guid iid, out IntPtr ppv)
        {
            ppv = IntPtr.Zero;
            if (IsOverridableInterface(iid) || global::WinRT.Interop.IID.IID_IInspectable == iid)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
            }

            if (((IWinRTObject)this).NativeObject.TryAs(iid, out ppv) >= 0)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.Handled;
            }

            return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
        }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")]
    [global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Media.Shadow))]
    [global::ABI.Microsoft.UI.Xaml.Media.ShadowRcwFactory]
    [global::WinRT.ProjectedRuntimeClass(typeof(IShadow))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    public class Shadow : global::Microsoft.UI.Xaml.DependencyObject, global::System.Runtime.InteropServices.ICustomQueryInterface, IWinRTObject, IEquatable<Shadow>
    {
        private IntPtr ThisPtr => _inner == null ? (((IWinRTObject)this).NativeObject).ThisPtr : _inner.ThisPtr;

        private readonly IObjectReference _inner = null;




        private volatile IObjectReference ___objRef_global__Microsoft_UI_Xaml_Media_IShadow;
        private IObjectReference Make___objRef_global__Microsoft_UI_Xaml_Media_IShadow()
        {
            global::System.Threading.Interlocked.CompareExchange(ref ___objRef_global__Microsoft_UI_Xaml_Media_IShadow, ((IWinRTObject)this).NativeObject.As<IUnknownVftbl>(global::ABI.Microsoft.UI.Xaml.Media.IShadowMethods.IID), null);
            return ___objRef_global__Microsoft_UI_Xaml_Media_IShadow;
        }
        private IObjectReference _objRef_global__Microsoft_UI_Xaml_Media_IShadow => ___objRef_global__Microsoft_UI_Xaml_Media_IShadow ?? Make___objRef_global__Microsoft_UI_Xaml_Media_IShadow();



        private static class _IShadowFactoryMethods
        {}

        private static volatile IObjectReference ___objRef_global__Microsoft_UI_Xaml_Media_IShadowFactory;
        private static IObjectReference _objRef_global__Microsoft_UI_Xaml_Media_IShadowFactory
        {
            get
            { 
                var factory = ___objRef_global__Microsoft_UI_Xaml_Media_IShadowFactory;
                if (factory != null && factory.IsInCurrentContext)
                {
                    return factory;
                }
                else
                {
                    return ___objRef_global__Microsoft_UI_Xaml_Media_IShadowFactory = ActivationFactory.Get("Microsoft.UI.Xaml.Media.Shadow", global::ABI.Microsoft.UI.Xaml.Media.IShadowFactoryMethods.IID);
                }
            }
        }

        public static new Shadow FromAbi(IntPtr thisPtr)
        {
            if (thisPtr == IntPtr.Zero) return null;
            return MarshalInspectable<Shadow>.FromAbi(thisPtr);
        }

        protected internal Shadow(IObjectReference objRef)
            : base(global::WinRT.DerivedComposed.Instance)

        {
            _inner = objRef.As(global::ABI.Microsoft.UI.Xaml.Media.IShadowMethods.IID);

        }


        public static bool operator ==(Shadow x, Shadow y) => (x?.ThisPtr ?? IntPtr.Zero) == (y?.ThisPtr ?? IntPtr.Zero);
        public static bool operator !=(Shadow x, Shadow y) => !(x == y);
        public bool Equals(Shadow other) => this == other;
        public override bool Equals(object obj) => obj is Shadow that && this == that;
        public override int GetHashCode() => ThisPtr.GetHashCode();


        protected Shadow(global::WinRT.DerivedComposed _):base(_)
        {

        }
        bool IWinRTObject.HasUnwrappableNativeObject => this.GetType() == typeof(Shadow);
        IObjectReference IWinRTObject.NativeObject => _inner;

        private struct InterfaceTag<I>{};


        protected override bool IsOverridableInterface(Guid iid) => base.IsOverridableInterface(iid);

        global::System.Runtime.InteropServices.CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(ref Guid iid, out IntPtr ppv)
        {
            ppv = IntPtr.Zero;
            if (IsOverridableInterface(iid) || global::WinRT.Interop.IID.IID_IInspectable == iid)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
            }

            if (((IWinRTObject)this).NativeObject.TryAs(iid, out ppv) >= 0)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.Handled;
            }

            return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
        }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")]
    [global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Media.SkewTransform))]
    [global::ABI.Microsoft.UI.Xaml.Media.SkewTransformRcwFactory]
    [global::WinRT.ProjectedRuntimeClass(typeof(ISkewTransform))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    public sealed class SkewTransform : Transform, global::System.Runtime.InteropServices.ICustomQueryInterface, IWinRTObject, IEquatable<SkewTransform>
    {
        private IntPtr ThisPtr => _inner == null ? (((IWinRTObject)this).NativeObject).ThisPtr : _inner.ThisPtr;

        private readonly IObjectReference _inner = null;



        private IObjectReference _objRef_global__Microsoft_UI_Xaml_Media_ISkewTransform => _inner;


        private static volatile IObjectReference ___objRef_global__Microsoft_UI_Xaml_Media_SkewTransform;
        private static IObjectReference _objRef_global__Microsoft_UI_Xaml_Media_SkewTransform
        {
            get
            { 
                var factory = ___objRef_global__Microsoft_UI_Xaml_Media_SkewTransform;
                if (factory != null && factory.IsInCurrentContext)
                {
                    return factory;
                }
                else
                {
                    return ___objRef_global__Microsoft_UI_Xaml_Media_SkewTransform = ActivationFactory.Get("Microsoft.UI.Xaml.Media.SkewTransform");
                }
            }
        }

        public SkewTransform() :base(global::WinRT.DerivedComposed.Instance)
        {
            _inner = global::ABI.WinRT.Interop.IActivationFactoryMethods.ActivateInstanceUnsafe(_objRef_global__Microsoft_UI_Xaml_Media_SkewTransform, global::ABI.Microsoft.UI.Xaml.Media.ISkewTransformMethods.IID);
            ComWrappersSupport.RegisterObjectForInterface(this, ThisPtr);
            ComWrappersHelper.Init(_inner, false);

        }

        public static I As<I>() => ActivationFactory.Get("Microsoft.UI.Xaml.Media.SkewTransform").AsInterface<I>();

        private static volatile IObjectReference ___objRef_global__Microsoft_UI_Xaml_Media_ISkewTransformStatics;
        private static IObjectReference _objRef_global__Microsoft_UI_Xaml_Media_ISkewTransformStatics
        {
            get
            { 
                var factory = ___objRef_global__Microsoft_UI_Xaml_Media_ISkewTransformStatics;
                if (factory != null && factory.IsInCurrentContext)
                {
                    return factory;
                }
                else
                {
                    return ___objRef_global__Microsoft_UI_Xaml_Media_ISkewTransformStatics = ActivationFactory.Get("Microsoft.UI.Xaml.Media.SkewTransform", global::ABI.Microsoft.UI.Xaml.Media.ISkewTransformStaticsMethods.IID);
                }
            }
        }

        public static global::Microsoft.UI.Xaml.DependencyProperty AngleXProperty => global::ABI.Microsoft.UI.Xaml.Media.ISkewTransformStaticsMethods.get_AngleXProperty(_objRef_global__Microsoft_UI_Xaml_Media_ISkewTransformStatics);

        public static global::Microsoft.UI.Xaml.DependencyProperty AngleYProperty => global::ABI.Microsoft.UI.Xaml.Media.ISkewTransformStaticsMethods.get_AngleYProperty(_objRef_global__Microsoft_UI_Xaml_Media_ISkewTransformStatics);

        public static global::Microsoft.UI.Xaml.DependencyProperty CenterXProperty => global::ABI.Microsoft.UI.Xaml.Media.ISkewTransformStaticsMethods.get_CenterXProperty(_objRef_global__Microsoft_UI_Xaml_Media_ISkewTransformStatics);

        public static global::Microsoft.UI.Xaml.DependencyProperty CenterYProperty => global::ABI.Microsoft.UI.Xaml.Media.ISkewTransformStaticsMethods.get_CenterYProperty(_objRef_global__Microsoft_UI_Xaml_Media_ISkewTransformStatics);

        public static new SkewTransform FromAbi(IntPtr thisPtr)
        {
            if (thisPtr == IntPtr.Zero) return null;
            return MarshalInspectable<SkewTransform>.FromAbi(thisPtr);
        }

        internal SkewTransform(IObjectReference objRef)
            : base(global::WinRT.DerivedComposed.Instance)

        {
            _inner = objRef.As(global::ABI.Microsoft.UI.Xaml.Media.ISkewTransformMethods.IID);

        }


        public static bool operator ==(SkewTransform x, SkewTransform y) => (x?.ThisPtr ?? IntPtr.Zero) == (y?.ThisPtr ?? IntPtr.Zero);
        public static bool operator !=(SkewTransform x, SkewTransform y) => !(x == y);
        public bool Equals(SkewTransform other) => this == other;
        public override bool Equals(object obj) => obj is SkewTransform that && this == that;
        public override int GetHashCode() => ThisPtr.GetHashCode();


        bool IWinRTObject.HasUnwrappableNativeObject => true;
        IObjectReference IWinRTObject.NativeObject => _inner;

        private struct InterfaceTag<I>{};


        public double AngleX
        {
            get => global::ABI.Microsoft.UI.Xaml.Media.ISkewTransformMethods.get_AngleX(_objRef_global__Microsoft_UI_Xaml_Media_ISkewTransform);
            set => global::ABI.Microsoft.UI.Xaml.Media.ISkewTransformMethods.set_AngleX(_objRef_global__Microsoft_UI_Xaml_Media_ISkewTransform, value);
        }

        public double AngleY
        {
            get => global::ABI.Microsoft.UI.Xaml.Media.ISkewTransformMethods.get_AngleY(_objRef_global__Microsoft_UI_Xaml_Media_ISkewTransform);
            set => global::ABI.Microsoft.UI.Xaml.Media.ISkewTransformMethods.set_AngleY(_objRef_global__Microsoft_UI_Xaml_Media_ISkewTransform, value);
        }

        public double CenterX
        {
            get => global::ABI.Microsoft.UI.Xaml.Media.ISkewTransformMethods.get_CenterX(_objRef_global__Microsoft_UI_Xaml_Media_ISkewTransform);
            set => global::ABI.Microsoft.UI.Xaml.Media.ISkewTransformMethods.set_CenterX(_objRef_global__Microsoft_UI_Xaml_Media_ISkewTransform, value);
        }

        public double CenterY
        {
            get => global::ABI.Microsoft.UI.Xaml.Media.ISkewTransformMethods.get_CenterY(_objRef_global__Microsoft_UI_Xaml_Media_ISkewTransform);
            set => global::ABI.Microsoft.UI.Xaml.Media.ISkewTransformMethods.set_CenterY(_objRef_global__Microsoft_UI_Xaml_Media_ISkewTransform, value);
        }

        protected override bool IsOverridableInterface(Guid iid) => base.IsOverridableInterface(iid);

        global::System.Runtime.InteropServices.CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(ref Guid iid, out IntPtr ppv)
        {
            ppv = IntPtr.Zero;
            if (IsOverridableInterface(iid) || global::WinRT.Interop.IID.IID_IInspectable == iid)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
            }

            if (((IWinRTObject)this).NativeObject.TryAs(iid, out ppv) >= 0)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.Handled;
            }

            return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
        }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")]
    [global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Media.SolidColorBrush))]
    [global::ABI.Microsoft.UI.Xaml.Media.SolidColorBrushRcwFactory]
    [global::WinRT.ProjectedRuntimeClass(typeof(ISolidColorBrush))]
    [global::Microsoft.UI.Xaml.Markup.ContentProperty(Name = @"Color")]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    public sealed class SolidColorBrush : Brush, global::System.Runtime.InteropServices.ICustomQueryInterface, IWinRTObject, IEquatable<SolidColorBrush>
    {
        private IntPtr ThisPtr => _inner == null ? (((IWinRTObject)this).NativeObject).ThisPtr : _inner.ThisPtr;

        private readonly IObjectReference _inner = null;



        private IObjectReference _objRef_global__Microsoft_UI_Xaml_Media_ISolidColorBrush => _inner;


        private static volatile IObjectReference ___objRef_global__Microsoft_UI_Xaml_Media_SolidColorBrush;
        private static IObjectReference _objRef_global__Microsoft_UI_Xaml_Media_SolidColorBrush
        {
            get
            { 
                var factory = ___objRef_global__Microsoft_UI_Xaml_Media_SolidColorBrush;
                if (factory != null && factory.IsInCurrentContext)
                {
                    return factory;
                }
                else
                {
                    return ___objRef_global__Microsoft_UI_Xaml_Media_SolidColorBrush = ActivationFactory.Get("Microsoft.UI.Xaml.Media.SolidColorBrush");
                }
            }
        }

        public SolidColorBrush() :base(global::WinRT.DerivedComposed.Instance)
        {
            _inner = global::ABI.WinRT.Interop.IActivationFactoryMethods.ActivateInstanceUnsafe(_objRef_global__Microsoft_UI_Xaml_Media_SolidColorBrush, global::ABI.Microsoft.UI.Xaml.Media.ISolidColorBrushMethods.IID);
            ComWrappersSupport.RegisterObjectForInterface(this, ThisPtr);
            ComWrappersHelper.Init(_inner, false);

        }

        private static class _ISolidColorBrushFactoryMethods
        {
            public static unsafe IntPtr CreateInstanceWithColor(IObjectReference _obj, global::Windows.UI.Color color)
            {
                var ThisPtr = _obj.ThisPtr;

                IntPtr __retval = default;
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::Windows.UI.Color, IntPtr*, int>**)ThisPtr)[6](ThisPtr, color, &__retval));
                global::System.GC.KeepAlive(_obj);
                return __retval;
            }
        }

        private static volatile IObjectReference ___objRef_global__Microsoft_UI_Xaml_Media_ISolidColorBrushFactory;
        private static IObjectReference _objRef_global__Microsoft_UI_Xaml_Media_ISolidColorBrushFactory
        {
            get
            { 
                var factory = ___objRef_global__Microsoft_UI_Xaml_Media_ISolidColorBrushFactory;
                if (factory != null && factory.IsInCurrentContext)
                {
                    return factory;
                }
                else
                {
                    return ___objRef_global__Microsoft_UI_Xaml_Media_ISolidColorBrushFactory = ActivationFactory.Get("Microsoft.UI.Xaml.Media.SolidColorBrush", global::ABI.Microsoft.UI.Xaml.Media.ISolidColorBrushFactoryMethods.IID);
                }
            }
        }

        public SolidColorBrush(global::Windows.UI.Color color) :base(global::WinRT.DerivedComposed.Instance)
        { 
        IntPtr ptr = (_ISolidColorBrushFactoryMethods.CreateInstanceWithColor(_objRef_global__Microsoft_UI_Xaml_Media_ISolidColorBrushFactory, color)); 
        try 
        { 
        _inner = ComWrappersSupport.GetObjectReferenceForInterface(ptr, global::ABI.Microsoft.UI.Xaml.Media.ISolidColorBrushMethods.IID, false); 

        } 
        finally 
        { 
        MarshalInspectable<object>.DisposeAbi(ptr); 
        }

        ComWrappersSupport.RegisterObjectForInterface(this, ThisPtr);
        ComWrappersHelper.Init(_inner, false);
        }

        public static new I As<I>() => ActivationFactory.Get("Microsoft.UI.Xaml.Media.SolidColorBrush").AsInterface<I>();

        private static volatile IObjectReference ___objRef_global__Microsoft_UI_Xaml_Media_ISolidColorBrushStatics;
        private static IObjectReference _objRef_global__Microsoft_UI_Xaml_Media_ISolidColorBrushStatics
        {
            get
            { 
                var factory = ___objRef_global__Microsoft_UI_Xaml_Media_ISolidColorBrushStatics;
                if (factory != null && factory.IsInCurrentContext)
                {
                    return factory;
                }
                else
                {
                    return ___objRef_global__Microsoft_UI_Xaml_Media_ISolidColorBrushStatics = ActivationFactory.Get("Microsoft.UI.Xaml.Media.SolidColorBrush", global::ABI.Microsoft.UI.Xaml.Media.ISolidColorBrushStaticsMethods.IID);
                }
            }
        }

        public static global::Microsoft.UI.Xaml.DependencyProperty ColorProperty => global::ABI.Microsoft.UI.Xaml.Media.ISolidColorBrushStaticsMethods.get_ColorProperty(_objRef_global__Microsoft_UI_Xaml_Media_ISolidColorBrushStatics);

        public static new SolidColorBrush FromAbi(IntPtr thisPtr)
        {
            if (thisPtr == IntPtr.Zero) return null;
            return MarshalInspectable<SolidColorBrush>.FromAbi(thisPtr);
        }

        internal SolidColorBrush(IObjectReference objRef)
            : base(global::WinRT.DerivedComposed.Instance)

        {
            _inner = objRef.As(global::ABI.Microsoft.UI.Xaml.Media.ISolidColorBrushMethods.IID);

        }


        public static bool operator ==(SolidColorBrush x, SolidColorBrush y) => (x?.ThisPtr ?? IntPtr.Zero) == (y?.ThisPtr ?? IntPtr.Zero);
        public static bool operator !=(SolidColorBrush x, SolidColorBrush y) => !(x == y);
        public bool Equals(SolidColorBrush other) => this == other;
        public override bool Equals(object obj) => obj is SolidColorBrush that && this == that;
        public override int GetHashCode() => ThisPtr.GetHashCode();


        bool IWinRTObject.HasUnwrappableNativeObject => true;
        IObjectReference IWinRTObject.NativeObject => _inner;

        private struct InterfaceTag<I>{};


        public global::Windows.UI.Color Color
        {
            get => global::ABI.Microsoft.UI.Xaml.Media.ISolidColorBrushMethods.get_Color(_objRef_global__Microsoft_UI_Xaml_Media_ISolidColorBrush);
            set => global::ABI.Microsoft.UI.Xaml.Media.ISolidColorBrushMethods.set_Color(_objRef_global__Microsoft_UI_Xaml_Media_ISolidColorBrush, value);
        }

        protected override bool IsOverridableInterface(Guid iid) => base.IsOverridableInterface(iid);

        global::System.Runtime.InteropServices.CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(ref Guid iid, out IntPtr ppv)
        {
            ppv = IntPtr.Zero;
            if (IsOverridableInterface(iid) || global::WinRT.Interop.IID.IID_IInspectable == iid)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
            }

            if (((IWinRTObject)this).NativeObject.TryAs(iid, out ppv) >= 0)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.Handled;
            }

            return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
        }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")][global::WinRT.WinRTExposedType(typeof(global::WinRT.EnumTypeDetails<Stretch>))][global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    public enum Stretch : int
    {
        None = unchecked((int)0),
        Fill = unchecked((int)0x1),
        Uniform = unchecked((int)0x2),
        UniformToFill = unchecked((int)0x3),
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")][global::WinRT.WinRTExposedType(typeof(global::WinRT.EnumTypeDetails<StyleSimulations>))][global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    public enum StyleSimulations : int
    {
        None = unchecked((int)0),
        BoldSimulation = unchecked((int)0x1),
        ItalicSimulation = unchecked((int)0x2),
        BoldItalicSimulation = unchecked((int)0x3),
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")][global::WinRT.WinRTExposedType(typeof(global::WinRT.EnumTypeDetails<SweepDirection>))][global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    public enum SweepDirection : int
    {
        Counterclockwise = unchecked((int)0),
        Clockwise = unchecked((int)0x1),
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")]
    [global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Media.SystemBackdrop))]
    [global::ABI.Microsoft.UI.Xaml.Media.SystemBackdropRcwFactory]
    [global::WinRT.ProjectedRuntimeClass(typeof(ISystemBackdrop))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 262144u)]
    public class SystemBackdrop : global::Microsoft.UI.Xaml.DependencyObject, ISystemBackdropOverrides, global::System.Runtime.InteropServices.ICustomQueryInterface, IWinRTObject, IEquatable<SystemBackdrop>
    {
        private IntPtr ThisPtr => _inner == null ? (((IWinRTObject)this).NativeObject).ThisPtr : _inner.ThisPtr;

        private readonly IObjectReference _inner = null;




        private volatile IObjectReference ___objRef_global__Microsoft_UI_Xaml_Media_ISystemBackdrop;
        private IObjectReference Make___objRef_global__Microsoft_UI_Xaml_Media_ISystemBackdrop()
        {
            global::System.Threading.Interlocked.CompareExchange(ref ___objRef_global__Microsoft_UI_Xaml_Media_ISystemBackdrop, ((IWinRTObject)this).NativeObject.As<IUnknownVftbl>(global::ABI.Microsoft.UI.Xaml.Media.ISystemBackdropMethods.IID), null);
            return ___objRef_global__Microsoft_UI_Xaml_Media_ISystemBackdrop;
        }
        private IObjectReference _objRef_global__Microsoft_UI_Xaml_Media_ISystemBackdrop => ___objRef_global__Microsoft_UI_Xaml_Media_ISystemBackdrop ?? Make___objRef_global__Microsoft_UI_Xaml_Media_ISystemBackdrop();

        private volatile IObjectReference ___objRef_global__Microsoft_UI_Xaml_Media_ISystemBackdropOverrides;
        private IObjectReference Make___objRef_global__Microsoft_UI_Xaml_Media_ISystemBackdropOverrides()
        {
            global::System.Threading.Interlocked.CompareExchange(ref ___objRef_global__Microsoft_UI_Xaml_Media_ISystemBackdropOverrides, ((IWinRTObject)this).NativeObject.As<IUnknownVftbl>(global::ABI.Microsoft.UI.Xaml.Media.ISystemBackdropOverridesMethods.IID), null);
            return ___objRef_global__Microsoft_UI_Xaml_Media_ISystemBackdropOverrides;
        }
        private IObjectReference _objRef_global__Microsoft_UI_Xaml_Media_ISystemBackdropOverrides => ___objRef_global__Microsoft_UI_Xaml_Media_ISystemBackdropOverrides ?? Make___objRef_global__Microsoft_UI_Xaml_Media_ISystemBackdropOverrides();



        private static class _ISystemBackdropFactoryMethods
        {
            public static unsafe IntPtr CreateInstance(IObjectReference _obj, object baseInterface, out IntPtr innerInterface)
            {
                var ThisPtr = _obj.ThisPtr;

                ObjectReferenceValue __baseInterface = default;
                IntPtr __innerInterface = default;
                IntPtr __retval = default;
                try
                {
                    __baseInterface = MarshalInspectable<object>.CreateMarshaler2(baseInterface);
                    global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, IntPtr*, IntPtr*, int>**)ThisPtr)[6](ThisPtr, MarshalInspectable<object>.GetAbi(__baseInterface), &__innerInterface, &__retval));
                    global::System.GC.KeepAlive(_obj);
                    innerInterface = __innerInterface;
                    return __retval;
                }
                finally
                {
                    MarshalInspectable<object>.DisposeMarshaler(__baseInterface);
                }
            }
        }

        private static volatile IObjectReference ___objRef_global__Microsoft_UI_Xaml_Media_ISystemBackdropFactory;
        private static IObjectReference _objRef_global__Microsoft_UI_Xaml_Media_ISystemBackdropFactory
        {
            get
            { 
                var factory = ___objRef_global__Microsoft_UI_Xaml_Media_ISystemBackdropFactory;
                if (factory != null && factory.IsInCurrentContext)
                {
                    return factory;
                }
                else
                {
                    return ___objRef_global__Microsoft_UI_Xaml_Media_ISystemBackdropFactory = ActivationFactory.Get("Microsoft.UI.Xaml.Media.SystemBackdrop", global::ABI.Microsoft.UI.Xaml.Media.ISystemBackdropFactoryMethods.IID);
                }
            }
        }

        protected SystemBackdrop():base(global::WinRT.DerivedComposed.Instance)
        {
            bool isAggregation = this.GetType() != typeof(SystemBackdrop);
            object baseInspectable = isAggregation ? this : null;
            IntPtr composed = _ISystemBackdropFactoryMethods.CreateInstance(_objRef_global__Microsoft_UI_Xaml_Media_ISystemBackdropFactory,  baseInspectable, out IntPtr inner);
            try
            {
                ComWrappersHelper.Init(isAggregation, this, composed, inner, global::ABI.Microsoft.UI.Xaml.Media.ISystemBackdropMethods.IID, out _inner);

            }
            finally
            {
                Marshal.Release(inner);   
            }
        }

        public static new SystemBackdrop FromAbi(IntPtr thisPtr)
        {
            if (thisPtr == IntPtr.Zero) return null;
            return MarshalInspectable<SystemBackdrop>.FromAbi(thisPtr);
        }

        protected internal SystemBackdrop(IObjectReference objRef)
            : base(global::WinRT.DerivedComposed.Instance)

        {
            _inner = objRef.As(global::ABI.Microsoft.UI.Xaml.Media.ISystemBackdropMethods.IID);

        }


        public static bool operator ==(SystemBackdrop x, SystemBackdrop y) => (x?.ThisPtr ?? IntPtr.Zero) == (y?.ThisPtr ?? IntPtr.Zero);
        public static bool operator !=(SystemBackdrop x, SystemBackdrop y) => !(x == y);
        public bool Equals(SystemBackdrop other) => this == other;
        public override bool Equals(object obj) => obj is SystemBackdrop that && this == that;
        public override int GetHashCode() => ThisPtr.GetHashCode();


        protected SystemBackdrop(global::WinRT.DerivedComposed _):base(_)
        {

        }
        bool IWinRTObject.HasUnwrappableNativeObject => this.GetType() == typeof(SystemBackdrop);
        IObjectReference IWinRTObject.NativeObject => _inner;

        private struct InterfaceTag<I>{};


        public global::Microsoft.UI.Composition.SystemBackdrops.SystemBackdropConfiguration GetDefaultSystemBackdropConfiguration(global::Microsoft.UI.Composition.ICompositionSupportsSystemBackdrop target, global::Microsoft.UI.Xaml.XamlRoot xamlRoot) => global::ABI.Microsoft.UI.Xaml.Media.ISystemBackdropMethods.GetDefaultSystemBackdropConfiguration(_objRef_global__Microsoft_UI_Xaml_Media_ISystemBackdrop, target, xamlRoot);

        protected virtual void OnTargetConnected(global::Microsoft.UI.Composition.ICompositionSupportsSystemBackdrop connectedTarget, global::Microsoft.UI.Xaml.XamlRoot xamlRoot) => global::ABI.Microsoft.UI.Xaml.Media.ISystemBackdropOverridesMethods.OnTargetConnected(_objRef_global__Microsoft_UI_Xaml_Media_ISystemBackdropOverrides, connectedTarget, xamlRoot);

        void ISystemBackdropOverrides.OnTargetConnected(global::Microsoft.UI.Composition.ICompositionSupportsSystemBackdrop connectedTarget, global::Microsoft.UI.Xaml.XamlRoot xamlRoot) => OnTargetConnected(connectedTarget, xamlRoot);
        protected virtual void OnTargetDisconnected(global::Microsoft.UI.Composition.ICompositionSupportsSystemBackdrop disconnectedTarget) => global::ABI.Microsoft.UI.Xaml.Media.ISystemBackdropOverridesMethods.OnTargetDisconnected(_objRef_global__Microsoft_UI_Xaml_Media_ISystemBackdropOverrides, disconnectedTarget);

        void ISystemBackdropOverrides.OnTargetDisconnected(global::Microsoft.UI.Composition.ICompositionSupportsSystemBackdrop disconnectedTarget) => OnTargetDisconnected(disconnectedTarget);
        protected virtual void OnDefaultSystemBackdropConfigurationChanged(global::Microsoft.UI.Composition.ICompositionSupportsSystemBackdrop target, global::Microsoft.UI.Xaml.XamlRoot xamlRoot) => global::ABI.Microsoft.UI.Xaml.Media.ISystemBackdropOverridesMethods.OnDefaultSystemBackdropConfigurationChanged(_objRef_global__Microsoft_UI_Xaml_Media_ISystemBackdropOverrides, target, xamlRoot);

        void ISystemBackdropOverrides.OnDefaultSystemBackdropConfigurationChanged(global::Microsoft.UI.Composition.ICompositionSupportsSystemBackdrop target, global::Microsoft.UI.Xaml.XamlRoot xamlRoot) => OnDefaultSystemBackdropConfigurationChanged(target, xamlRoot);
        protected override bool IsOverridableInterface(Guid iid) => global::ABI.Microsoft.UI.Xaml.Media.ISystemBackdropOverridesMethods.IID == iid || base.IsOverridableInterface(iid);

        global::System.Runtime.InteropServices.CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(ref Guid iid, out IntPtr ppv)
        {
            ppv = IntPtr.Zero;
            if (IsOverridableInterface(iid) || global::WinRT.Interop.IID.IID_IInspectable == iid)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
            }

            if (((IWinRTObject)this).NativeObject.TryAs(iid, out ppv) >= 0)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.Handled;
            }

            return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
        }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")]
    [global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Media.ThemeShadow))]
    [global::ABI.Microsoft.UI.Xaml.Media.ThemeShadowRcwFactory]
    [global::WinRT.ProjectedRuntimeClass(typeof(IThemeShadow))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    public class ThemeShadow : Shadow, global::System.Runtime.InteropServices.ICustomQueryInterface, IWinRTObject, IEquatable<ThemeShadow>
    {
        private IntPtr ThisPtr => _inner == null ? (((IWinRTObject)this).NativeObject).ThisPtr : _inner.ThisPtr;

        private readonly IObjectReference _inner = null;




        private volatile IObjectReference ___objRef_global__Microsoft_UI_Xaml_Media_IThemeShadow;
        private IObjectReference Make___objRef_global__Microsoft_UI_Xaml_Media_IThemeShadow()
        {
            global::System.Threading.Interlocked.CompareExchange(ref ___objRef_global__Microsoft_UI_Xaml_Media_IThemeShadow, ((IWinRTObject)this).NativeObject.As<IUnknownVftbl>(global::ABI.Microsoft.UI.Xaml.Media.IThemeShadowMethods.IID), null);
            return ___objRef_global__Microsoft_UI_Xaml_Media_IThemeShadow;
        }
        private IObjectReference _objRef_global__Microsoft_UI_Xaml_Media_IThemeShadow => ___objRef_global__Microsoft_UI_Xaml_Media_IThemeShadow ?? Make___objRef_global__Microsoft_UI_Xaml_Media_IThemeShadow();



        private static class _IThemeShadowFactoryMethods
        {
            public static unsafe IntPtr CreateInstance(IObjectReference _obj, object baseInterface, out IntPtr innerInterface)
            {
                var ThisPtr = _obj.ThisPtr;

                ObjectReferenceValue __baseInterface = default;
                IntPtr __innerInterface = default;
                IntPtr __retval = default;
                try
                {
                    __baseInterface = MarshalInspectable<object>.CreateMarshaler2(baseInterface);
                    global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, IntPtr*, IntPtr*, int>**)ThisPtr)[6](ThisPtr, MarshalInspectable<object>.GetAbi(__baseInterface), &__innerInterface, &__retval));
                    global::System.GC.KeepAlive(_obj);
                    innerInterface = __innerInterface;
                    return __retval;
                }
                finally
                {
                    MarshalInspectable<object>.DisposeMarshaler(__baseInterface);
                }
            }
        }

        private static volatile IObjectReference ___objRef_global__Microsoft_UI_Xaml_Media_IThemeShadowFactory;
        private static IObjectReference _objRef_global__Microsoft_UI_Xaml_Media_IThemeShadowFactory
        {
            get
            { 
                var factory = ___objRef_global__Microsoft_UI_Xaml_Media_IThemeShadowFactory;
                if (factory != null && factory.IsInCurrentContext)
                {
                    return factory;
                }
                else
                {
                    return ___objRef_global__Microsoft_UI_Xaml_Media_IThemeShadowFactory = ActivationFactory.Get("Microsoft.UI.Xaml.Media.ThemeShadow", global::ABI.Microsoft.UI.Xaml.Media.IThemeShadowFactoryMethods.IID);
                }
            }
        }

        public ThemeShadow():base(global::WinRT.DerivedComposed.Instance)
        {
            bool isAggregation = this.GetType() != typeof(ThemeShadow);
            object baseInspectable = isAggregation ? this : null;
            IntPtr composed = _IThemeShadowFactoryMethods.CreateInstance(_objRef_global__Microsoft_UI_Xaml_Media_IThemeShadowFactory,  baseInspectable, out IntPtr inner);
            try
            {
                ComWrappersHelper.Init(isAggregation, this, composed, inner, global::ABI.Microsoft.UI.Xaml.Media.IThemeShadowMethods.IID, out _inner);

            }
            finally
            {
                Marshal.Release(inner);   
            }
        }

        public static new ThemeShadow FromAbi(IntPtr thisPtr)
        {
            if (thisPtr == IntPtr.Zero) return null;
            return MarshalInspectable<ThemeShadow>.FromAbi(thisPtr);
        }

        protected internal ThemeShadow(IObjectReference objRef)
            : base(global::WinRT.DerivedComposed.Instance)

        {
            _inner = objRef.As(global::ABI.Microsoft.UI.Xaml.Media.IThemeShadowMethods.IID);

        }


        public static bool operator ==(ThemeShadow x, ThemeShadow y) => (x?.ThisPtr ?? IntPtr.Zero) == (y?.ThisPtr ?? IntPtr.Zero);
        public static bool operator !=(ThemeShadow x, ThemeShadow y) => !(x == y);
        public bool Equals(ThemeShadow other) => this == other;
        public override bool Equals(object obj) => obj is ThemeShadow that && this == that;
        public override int GetHashCode() => ThisPtr.GetHashCode();


        protected ThemeShadow(global::WinRT.DerivedComposed _):base(_)
        {

        }
        bool IWinRTObject.HasUnwrappableNativeObject => this.GetType() == typeof(ThemeShadow);
        IObjectReference IWinRTObject.NativeObject => _inner;

        private struct InterfaceTag<I>{};


        public global::Microsoft.UI.Xaml.UIElementWeakCollection Receivers => global::ABI.Microsoft.UI.Xaml.Media.IThemeShadowMethods.get_Receivers(_objRef_global__Microsoft_UI_Xaml_Media_IThemeShadow);

        protected override bool IsOverridableInterface(Guid iid) => base.IsOverridableInterface(iid);

        global::System.Runtime.InteropServices.CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(ref Guid iid, out IntPtr ppv)
        {
            ppv = IntPtr.Zero;
            if (IsOverridableInterface(iid) || global::WinRT.Interop.IID.IID_IInspectable == iid)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
            }

            if (((IWinRTObject)this).NativeObject.TryAs(iid, out ppv) >= 0)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.Handled;
            }

            return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
        }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")]
    [global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Media.TileBrush))]
    [global::ABI.Microsoft.UI.Xaml.Media.TileBrushRcwFactory]
    [global::WinRT.ProjectedRuntimeClass(typeof(ITileBrush))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    public class TileBrush : Brush, global::System.Runtime.InteropServices.ICustomQueryInterface, IWinRTObject, IEquatable<TileBrush>
    {
        private IntPtr ThisPtr => _inner == null ? (((IWinRTObject)this).NativeObject).ThisPtr : _inner.ThisPtr;

        private readonly IObjectReference _inner = null;




        private volatile IObjectReference ___objRef_global__Microsoft_UI_Xaml_Media_ITileBrush;
        private IObjectReference Make___objRef_global__Microsoft_UI_Xaml_Media_ITileBrush()
        {
            global::System.Threading.Interlocked.CompareExchange(ref ___objRef_global__Microsoft_UI_Xaml_Media_ITileBrush, ((IWinRTObject)this).NativeObject.As<IUnknownVftbl>(global::ABI.Microsoft.UI.Xaml.Media.ITileBrushMethods.IID), null);
            return ___objRef_global__Microsoft_UI_Xaml_Media_ITileBrush;
        }
        private IObjectReference _objRef_global__Microsoft_UI_Xaml_Media_ITileBrush => ___objRef_global__Microsoft_UI_Xaml_Media_ITileBrush ?? Make___objRef_global__Microsoft_UI_Xaml_Media_ITileBrush();



        private static class _ITileBrushFactoryMethods
        {
            public static unsafe IntPtr CreateInstance(IObjectReference _obj, object baseInterface, out IntPtr innerInterface)
            {
                var ThisPtr = _obj.ThisPtr;

                ObjectReferenceValue __baseInterface = default;
                IntPtr __innerInterface = default;
                IntPtr __retval = default;
                try
                {
                    __baseInterface = MarshalInspectable<object>.CreateMarshaler2(baseInterface);
                    global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, IntPtr*, IntPtr*, int>**)ThisPtr)[6](ThisPtr, MarshalInspectable<object>.GetAbi(__baseInterface), &__innerInterface, &__retval));
                    global::System.GC.KeepAlive(_obj);
                    innerInterface = __innerInterface;
                    return __retval;
                }
                finally
                {
                    MarshalInspectable<object>.DisposeMarshaler(__baseInterface);
                }
            }
        }

        private static volatile IObjectReference ___objRef_global__Microsoft_UI_Xaml_Media_ITileBrushFactory;
        private static IObjectReference _objRef_global__Microsoft_UI_Xaml_Media_ITileBrushFactory
        {
            get
            { 
                var factory = ___objRef_global__Microsoft_UI_Xaml_Media_ITileBrushFactory;
                if (factory != null && factory.IsInCurrentContext)
                {
                    return factory;
                }
                else
                {
                    return ___objRef_global__Microsoft_UI_Xaml_Media_ITileBrushFactory = ActivationFactory.Get("Microsoft.UI.Xaml.Media.TileBrush", global::ABI.Microsoft.UI.Xaml.Media.ITileBrushFactoryMethods.IID);
                }
            }
        }

        protected TileBrush():base(global::WinRT.DerivedComposed.Instance)
        {
            bool isAggregation = this.GetType() != typeof(TileBrush);
            object baseInspectable = isAggregation ? this : null;
            IntPtr composed = _ITileBrushFactoryMethods.CreateInstance(_objRef_global__Microsoft_UI_Xaml_Media_ITileBrushFactory,  baseInspectable, out IntPtr inner);
            try
            {
                ComWrappersHelper.Init(isAggregation, this, composed, inner, global::ABI.Microsoft.UI.Xaml.Media.ITileBrushMethods.IID, out _inner);

            }
            finally
            {
                Marshal.Release(inner);   
            }
        }

        public static new I As<I>() => ActivationFactory.Get("Microsoft.UI.Xaml.Media.TileBrush").AsInterface<I>();

        private static volatile IObjectReference ___objRef_global__Microsoft_UI_Xaml_Media_ITileBrushStatics;
        private static IObjectReference _objRef_global__Microsoft_UI_Xaml_Media_ITileBrushStatics
        {
            get
            { 
                var factory = ___objRef_global__Microsoft_UI_Xaml_Media_ITileBrushStatics;
                if (factory != null && factory.IsInCurrentContext)
                {
                    return factory;
                }
                else
                {
                    return ___objRef_global__Microsoft_UI_Xaml_Media_ITileBrushStatics = ActivationFactory.Get("Microsoft.UI.Xaml.Media.TileBrush", global::ABI.Microsoft.UI.Xaml.Media.ITileBrushStaticsMethods.IID);
                }
            }
        }

        public static global::Microsoft.UI.Xaml.DependencyProperty AlignmentXProperty => global::ABI.Microsoft.UI.Xaml.Media.ITileBrushStaticsMethods.get_AlignmentXProperty(_objRef_global__Microsoft_UI_Xaml_Media_ITileBrushStatics);

        public static global::Microsoft.UI.Xaml.DependencyProperty AlignmentYProperty => global::ABI.Microsoft.UI.Xaml.Media.ITileBrushStaticsMethods.get_AlignmentYProperty(_objRef_global__Microsoft_UI_Xaml_Media_ITileBrushStatics);

        public static global::Microsoft.UI.Xaml.DependencyProperty StretchProperty => global::ABI.Microsoft.UI.Xaml.Media.ITileBrushStaticsMethods.get_StretchProperty(_objRef_global__Microsoft_UI_Xaml_Media_ITileBrushStatics);

        public static new TileBrush FromAbi(IntPtr thisPtr)
        {
            if (thisPtr == IntPtr.Zero) return null;
            return MarshalInspectable<TileBrush>.FromAbi(thisPtr);
        }

        protected internal TileBrush(IObjectReference objRef)
            : base(global::WinRT.DerivedComposed.Instance)

        {
            _inner = objRef.As(global::ABI.Microsoft.UI.Xaml.Media.ITileBrushMethods.IID);

        }


        public static bool operator ==(TileBrush x, TileBrush y) => (x?.ThisPtr ?? IntPtr.Zero) == (y?.ThisPtr ?? IntPtr.Zero);
        public static bool operator !=(TileBrush x, TileBrush y) => !(x == y);
        public bool Equals(TileBrush other) => this == other;
        public override bool Equals(object obj) => obj is TileBrush that && this == that;
        public override int GetHashCode() => ThisPtr.GetHashCode();


        protected TileBrush(global::WinRT.DerivedComposed _):base(_)
        {

        }
        bool IWinRTObject.HasUnwrappableNativeObject => this.GetType() == typeof(TileBrush);
        IObjectReference IWinRTObject.NativeObject => _inner;

        private struct InterfaceTag<I>{};


        public AlignmentX AlignmentX
        {
            get => global::ABI.Microsoft.UI.Xaml.Media.ITileBrushMethods.get_AlignmentX(_objRef_global__Microsoft_UI_Xaml_Media_ITileBrush);
            set => global::ABI.Microsoft.UI.Xaml.Media.ITileBrushMethods.set_AlignmentX(_objRef_global__Microsoft_UI_Xaml_Media_ITileBrush, value);
        }

        public AlignmentY AlignmentY
        {
            get => global::ABI.Microsoft.UI.Xaml.Media.ITileBrushMethods.get_AlignmentY(_objRef_global__Microsoft_UI_Xaml_Media_ITileBrush);
            set => global::ABI.Microsoft.UI.Xaml.Media.ITileBrushMethods.set_AlignmentY(_objRef_global__Microsoft_UI_Xaml_Media_ITileBrush, value);
        }

        public Stretch Stretch
        {
            get => global::ABI.Microsoft.UI.Xaml.Media.ITileBrushMethods.get_Stretch(_objRef_global__Microsoft_UI_Xaml_Media_ITileBrush);
            set => global::ABI.Microsoft.UI.Xaml.Media.ITileBrushMethods.set_Stretch(_objRef_global__Microsoft_UI_Xaml_Media_ITileBrush, value);
        }

        protected override bool IsOverridableInterface(Guid iid) => base.IsOverridableInterface(iid);

        global::System.Runtime.InteropServices.CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(ref Guid iid, out IntPtr ppv)
        {
            ppv = IntPtr.Zero;
            if (IsOverridableInterface(iid) || global::WinRT.Interop.IID.IID_IInspectable == iid)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
            }

            if (((IWinRTObject)this).NativeObject.TryAs(iid, out ppv) >= 0)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.Handled;
            }

            return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
        }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")]
    [global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Media.Transform))]
    [global::ABI.Microsoft.UI.Xaml.Media.TransformRcwFactory]
    [global::WinRT.ProjectedRuntimeClass(typeof(ITransform))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    public class Transform : GeneralTransform, global::System.Runtime.InteropServices.ICustomQueryInterface, IWinRTObject, IEquatable<Transform>
    {
        private IntPtr ThisPtr => _inner == null ? (((IWinRTObject)this).NativeObject).ThisPtr : _inner.ThisPtr;

        private readonly IObjectReference _inner = null;




        private volatile IObjectReference ___objRef_global__Microsoft_UI_Xaml_Media_ITransform;
        private IObjectReference Make___objRef_global__Microsoft_UI_Xaml_Media_ITransform()
        {
            global::System.Threading.Interlocked.CompareExchange(ref ___objRef_global__Microsoft_UI_Xaml_Media_ITransform, ((IWinRTObject)this).NativeObject.As<IUnknownVftbl>(global::ABI.Microsoft.UI.Xaml.Media.ITransformMethods.IID), null);
            return ___objRef_global__Microsoft_UI_Xaml_Media_ITransform;
        }
        private IObjectReference _objRef_global__Microsoft_UI_Xaml_Media_ITransform => ___objRef_global__Microsoft_UI_Xaml_Media_ITransform ?? Make___objRef_global__Microsoft_UI_Xaml_Media_ITransform();



        private static class _ITransformFactoryMethods
        {}

        private static volatile IObjectReference ___objRef_global__Microsoft_UI_Xaml_Media_ITransformFactory;
        private static IObjectReference _objRef_global__Microsoft_UI_Xaml_Media_ITransformFactory
        {
            get
            { 
                var factory = ___objRef_global__Microsoft_UI_Xaml_Media_ITransformFactory;
                if (factory != null && factory.IsInCurrentContext)
                {
                    return factory;
                }
                else
                {
                    return ___objRef_global__Microsoft_UI_Xaml_Media_ITransformFactory = ActivationFactory.Get("Microsoft.UI.Xaml.Media.Transform", global::ABI.Microsoft.UI.Xaml.Media.ITransformFactoryMethods.IID);
                }
            }
        }

        public static new Transform FromAbi(IntPtr thisPtr)
        {
            if (thisPtr == IntPtr.Zero) return null;
            return MarshalInspectable<Transform>.FromAbi(thisPtr);
        }

        protected internal Transform(IObjectReference objRef)
            : base(global::WinRT.DerivedComposed.Instance)

        {
            _inner = objRef.As(global::ABI.Microsoft.UI.Xaml.Media.ITransformMethods.IID);

        }


        public static bool operator ==(Transform x, Transform y) => (x?.ThisPtr ?? IntPtr.Zero) == (y?.ThisPtr ?? IntPtr.Zero);
        public static bool operator !=(Transform x, Transform y) => !(x == y);
        public bool Equals(Transform other) => this == other;
        public override bool Equals(object obj) => obj is Transform that && this == that;
        public override int GetHashCode() => ThisPtr.GetHashCode();


        protected Transform(global::WinRT.DerivedComposed _):base(_)
        {

        }
        bool IWinRTObject.HasUnwrappableNativeObject => this.GetType() == typeof(Transform);
        IObjectReference IWinRTObject.NativeObject => _inner;

        private struct InterfaceTag<I>{};


        protected override bool IsOverridableInterface(Guid iid) => base.IsOverridableInterface(iid);

        global::System.Runtime.InteropServices.CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(ref Guid iid, out IntPtr ppv)
        {
            ppv = IntPtr.Zero;
            if (IsOverridableInterface(iid) || global::WinRT.Interop.IID.IID_IInspectable == iid)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
            }

            if (((IWinRTObject)this).NativeObject.TryAs(iid, out ppv) >= 0)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.Handled;
            }

            return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
        }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")]
    [global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Media.TransformCollection))]
    [global::ABI.Microsoft.UI.Xaml.Media.TransformCollectionRcwFactory]
    [global::WinRT.ProjectedRuntimeClass(typeof(global::System.Collections.Generic.IList<Transform>))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    public sealed class TransformCollection : global::System.Collections.Generic.IList<Transform>, global::System.Collections.Generic.IEnumerable<Transform>, global::System.Runtime.InteropServices.ICustomQueryInterface, IWinRTObject, IEquatable<TransformCollection>
    {
        private IntPtr ThisPtr => _inner == null ? (((IWinRTObject)this).NativeObject).ThisPtr : _inner.ThisPtr;

        private readonly IObjectReference _inner = null;




        private volatile IObjectReference ___objRef_global__System_Collections_Generic_IList_Transform_;
        private IObjectReference Make___objRef_global__System_Collections_Generic_IList_Transform_()
        {
            _ = global::WinRT.GenericTypeInstantiations.Windows_Foundation_Collections_IVector_1_Microsoft_UI_Xaml_Media_Transform.EnsureInitialized();
            global::System.Threading.Interlocked.CompareExchange(ref ___objRef_global__System_Collections_Generic_IList_Transform_, ((IWinRTObject)this).NativeObject.As<IUnknownVftbl>(global::ABI.System.Collections.Generic.IListMethods<Transform>.IID), null);
            return ___objRef_global__System_Collections_Generic_IList_Transform_;
        }
        private IObjectReference _objRef_global__System_Collections_Generic_IList_Transform_ => ___objRef_global__System_Collections_Generic_IList_Transform_ ?? Make___objRef_global__System_Collections_Generic_IList_Transform_();

        private volatile IObjectReference ___objRef_global__System_Collections_Generic_IEnumerable_Transform_;
        private IObjectReference Make___objRef_global__System_Collections_Generic_IEnumerable_Transform_()
        {
            _ = global::WinRT.GenericTypeInstantiations.Windows_Foundation_Collections_IIterable_1_Microsoft_UI_Xaml_Media_Transform.EnsureInitialized();
            global::System.Threading.Interlocked.CompareExchange(ref ___objRef_global__System_Collections_Generic_IEnumerable_Transform_, ((IWinRTObject)this).NativeObject.As<IUnknownVftbl>(global::ABI.System.Collections.Generic.IEnumerableMethods<Transform>.IID), null);
            return ___objRef_global__System_Collections_Generic_IEnumerable_Transform_;
        }
        private IObjectReference _objRef_global__System_Collections_Generic_IEnumerable_Transform_ => ___objRef_global__System_Collections_Generic_IEnumerable_Transform_ ?? Make___objRef_global__System_Collections_Generic_IEnumerable_Transform_();



        private static volatile IObjectReference ___objRef_global__Microsoft_UI_Xaml_Media_TransformCollection;
        private static IObjectReference _objRef_global__Microsoft_UI_Xaml_Media_TransformCollection
        {
            get
            { 
                var factory = ___objRef_global__Microsoft_UI_Xaml_Media_TransformCollection;
                if (factory != null && factory.IsInCurrentContext)
                {
                    return factory;
                }
                else
                {
                    return ___objRef_global__Microsoft_UI_Xaml_Media_TransformCollection = ActivationFactory.Get("Microsoft.UI.Xaml.Media.TransformCollection");
                }
            }
        }

        public TransformCollection() 
        {
            _inner = global::ABI.WinRT.Interop.IActivationFactoryMethods.ActivateInstanceUnsafe(_objRef_global__Microsoft_UI_Xaml_Media_TransformCollection, global::ABI.System.Collections.Generic.IListMethods<Transform>.IID);
            ComWrappersSupport.RegisterObjectForInterface(this, ThisPtr);
            ComWrappersHelper.Init(_inner, false);

        }

        public static TransformCollection FromAbi(IntPtr thisPtr)
        {
            if (thisPtr == IntPtr.Zero) return null;
            return MarshalInspectable<TransformCollection>.FromAbi(thisPtr);
        }

        internal TransformCollection(IObjectReference objRef)
        {
            _inner = objRef.As(global::ABI.System.Collections.Generic.IListMethods<Transform>.IID);

        }


        public static bool operator ==(TransformCollection x, TransformCollection y) => (x?.ThisPtr ?? IntPtr.Zero) == (y?.ThisPtr ?? IntPtr.Zero);
        public static bool operator !=(TransformCollection x, TransformCollection y) => !(x == y);
        public bool Equals(TransformCollection other) => this == other;
        public override bool Equals(object obj) => obj is TransformCollection that && this == that;
        public override int GetHashCode() => ThisPtr.GetHashCode();


        bool IWinRTObject.HasUnwrappableNativeObject => true;
        IObjectReference IWinRTObject.NativeObject => _inner;
        private volatile global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> _queryInterfaceCache;
        private global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> MakeQueryInterfaceCache()
        {
            global::System.Threading.Interlocked.CompareExchange(ref _queryInterfaceCache, new global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference>(), null); 
            return _queryInterfaceCache;
        }
        global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> IWinRTObject.QueryInterfaceCache => _queryInterfaceCache ?? MakeQueryInterfaceCache();
        private volatile global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> _additionalTypeData;
        private global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> MakeAdditionalTypeData()
        {
            global::System.Threading.Interlocked.CompareExchange(ref _additionalTypeData, new global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object>(), null); 
            return _additionalTypeData;
        }
        global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> IWinRTObject.AdditionalTypeData => _additionalTypeData ?? MakeAdditionalTypeData();

        private struct InterfaceTag<I>{};


        public int Count => global::ABI.System.Collections.Generic.IListMethods<Transform>.get_Count(_objRef_global__System_Collections_Generic_IList_Transform_);
        public bool IsReadOnly => global::ABI.System.Collections.Generic.IListMethods<Transform>.get_IsReadOnly(_objRef_global__System_Collections_Generic_IList_Transform_);
        [global::System.Runtime.CompilerServices.IndexerName("ListItem")]
        public Transform this[int index] 
        {
            get => global::ABI.System.Collections.Generic.IListMethods<Transform>.Indexer_Get(_objRef_global__System_Collections_Generic_IList_Transform_, index);
            set => global::ABI.System.Collections.Generic.IListMethods<Transform>.Indexer_Set(_objRef_global__System_Collections_Generic_IList_Transform_, index, value);
        }
        public int IndexOf(Transform item) => global::ABI.System.Collections.Generic.IListMethods<Transform>.IndexOf(_objRef_global__System_Collections_Generic_IList_Transform_, item);
        public void Insert(int index, Transform item) => global::ABI.System.Collections.Generic.IListMethods<Transform>.Insert(_objRef_global__System_Collections_Generic_IList_Transform_, index, item);
        public void RemoveAt(int index) => global::ABI.System.Collections.Generic.IListMethods<Transform>.RemoveAt(_objRef_global__System_Collections_Generic_IList_Transform_, index);
        public void Add(Transform item) => global::ABI.System.Collections.Generic.IListMethods<Transform>.Add(_objRef_global__System_Collections_Generic_IList_Transform_, item);
        public void Clear() => global::ABI.System.Collections.Generic.IListMethods<Transform>.Clear(_objRef_global__System_Collections_Generic_IList_Transform_);
        public bool Contains(Transform item) => global::ABI.System.Collections.Generic.IListMethods<Transform>.Contains(_objRef_global__System_Collections_Generic_IList_Transform_, item);
        public void CopyTo(Transform[] array, int arrayIndex) => global::ABI.System.Collections.Generic.IListMethods<Transform>.CopyTo(_objRef_global__System_Collections_Generic_IList_Transform_, array, arrayIndex);
        public bool Remove(Transform item) => global::ABI.System.Collections.Generic.IListMethods<Transform>.Remove(_objRef_global__System_Collections_Generic_IList_Transform_, item);

        public IEnumerator<Transform> GetEnumerator() => global::ABI.System.Collections.Generic.IEnumerableMethods<Transform>.GetEnumerator(_objRef_global__System_Collections_Generic_IEnumerable_Transform_);

        IEnumerator IEnumerable.GetEnumerator() => GetEnumerator();

        private bool IsOverridableInterface(Guid iid) => false;

        global::System.Runtime.InteropServices.CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(ref Guid iid, out IntPtr ppv)
        {
            ppv = IntPtr.Zero;
            if (IsOverridableInterface(iid) || global::WinRT.Interop.IID.IID_IInspectable == iid)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
            }

            if (((IWinRTObject)this).NativeObject.TryAs(iid, out ppv) >= 0)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.Handled;
            }

            return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
        }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")]
    [global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Media.TransformGroup))]
    [global::ABI.Microsoft.UI.Xaml.Media.TransformGroupRcwFactory]
    [global::WinRT.ProjectedRuntimeClass(typeof(ITransformGroup))]
    [global::Microsoft.UI.Xaml.Markup.ContentProperty(Name = @"Children")]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    public sealed class TransformGroup : Transform, global::System.Runtime.InteropServices.ICustomQueryInterface, IWinRTObject, IEquatable<TransformGroup>
    {
        private IntPtr ThisPtr => _inner == null ? (((IWinRTObject)this).NativeObject).ThisPtr : _inner.ThisPtr;

        private readonly IObjectReference _inner = null;



        private IObjectReference _objRef_global__Microsoft_UI_Xaml_Media_ITransformGroup => _inner;


        private static volatile IObjectReference ___objRef_global__Microsoft_UI_Xaml_Media_TransformGroup;
        private static IObjectReference _objRef_global__Microsoft_UI_Xaml_Media_TransformGroup
        {
            get
            { 
                var factory = ___objRef_global__Microsoft_UI_Xaml_Media_TransformGroup;
                if (factory != null && factory.IsInCurrentContext)
                {
                    return factory;
                }
                else
                {
                    return ___objRef_global__Microsoft_UI_Xaml_Media_TransformGroup = ActivationFactory.Get("Microsoft.UI.Xaml.Media.TransformGroup");
                }
            }
        }

        public TransformGroup() :base(global::WinRT.DerivedComposed.Instance)
        {
            _inner = global::ABI.WinRT.Interop.IActivationFactoryMethods.ActivateInstanceUnsafe(_objRef_global__Microsoft_UI_Xaml_Media_TransformGroup, global::ABI.Microsoft.UI.Xaml.Media.ITransformGroupMethods.IID);
            ComWrappersSupport.RegisterObjectForInterface(this, ThisPtr);
            ComWrappersHelper.Init(_inner, false);

        }

        public static I As<I>() => ActivationFactory.Get("Microsoft.UI.Xaml.Media.TransformGroup").AsInterface<I>();

        private static volatile IObjectReference ___objRef_global__Microsoft_UI_Xaml_Media_ITransformGroupStatics;
        private static IObjectReference _objRef_global__Microsoft_UI_Xaml_Media_ITransformGroupStatics
        {
            get
            { 
                var factory = ___objRef_global__Microsoft_UI_Xaml_Media_ITransformGroupStatics;
                if (factory != null && factory.IsInCurrentContext)
                {
                    return factory;
                }
                else
                {
                    return ___objRef_global__Microsoft_UI_Xaml_Media_ITransformGroupStatics = ActivationFactory.Get("Microsoft.UI.Xaml.Media.TransformGroup", global::ABI.Microsoft.UI.Xaml.Media.ITransformGroupStaticsMethods.IID);
                }
            }
        }

        public static global::Microsoft.UI.Xaml.DependencyProperty ChildrenProperty => global::ABI.Microsoft.UI.Xaml.Media.ITransformGroupStaticsMethods.get_ChildrenProperty(_objRef_global__Microsoft_UI_Xaml_Media_ITransformGroupStatics);

        public static new TransformGroup FromAbi(IntPtr thisPtr)
        {
            if (thisPtr == IntPtr.Zero) return null;
            return MarshalInspectable<TransformGroup>.FromAbi(thisPtr);
        }

        internal TransformGroup(IObjectReference objRef)
            : base(global::WinRT.DerivedComposed.Instance)

        {
            _inner = objRef.As(global::ABI.Microsoft.UI.Xaml.Media.ITransformGroupMethods.IID);

        }


        public static bool operator ==(TransformGroup x, TransformGroup y) => (x?.ThisPtr ?? IntPtr.Zero) == (y?.ThisPtr ?? IntPtr.Zero);
        public static bool operator !=(TransformGroup x, TransformGroup y) => !(x == y);
        public bool Equals(TransformGroup other) => this == other;
        public override bool Equals(object obj) => obj is TransformGroup that && this == that;
        public override int GetHashCode() => ThisPtr.GetHashCode();


        bool IWinRTObject.HasUnwrappableNativeObject => true;
        IObjectReference IWinRTObject.NativeObject => _inner;

        private struct InterfaceTag<I>{};


        public TransformCollection Children
        {
            get => global::ABI.Microsoft.UI.Xaml.Media.ITransformGroupMethods.get_Children(_objRef_global__Microsoft_UI_Xaml_Media_ITransformGroup);
            set => global::ABI.Microsoft.UI.Xaml.Media.ITransformGroupMethods.set_Children(_objRef_global__Microsoft_UI_Xaml_Media_ITransformGroup, value);
        }

        public Matrix Value => global::ABI.Microsoft.UI.Xaml.Media.ITransformGroupMethods.get_Value(_objRef_global__Microsoft_UI_Xaml_Media_ITransformGroup);

        protected override bool IsOverridableInterface(Guid iid) => base.IsOverridableInterface(iid);

        global::System.Runtime.InteropServices.CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(ref Guid iid, out IntPtr ppv)
        {
            ppv = IntPtr.Zero;
            if (IsOverridableInterface(iid) || global::WinRT.Interop.IID.IID_IInspectable == iid)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
            }

            if (((IWinRTObject)this).NativeObject.TryAs(iid, out ppv) >= 0)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.Handled;
            }

            return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
        }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")]
    [global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Media.TranslateTransform))]
    [global::ABI.Microsoft.UI.Xaml.Media.TranslateTransformRcwFactory]
    [global::WinRT.ProjectedRuntimeClass(typeof(ITranslateTransform))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    public sealed class TranslateTransform : Transform, global::System.Runtime.InteropServices.ICustomQueryInterface, IWinRTObject, IEquatable<TranslateTransform>
    {
        private IntPtr ThisPtr => _inner == null ? (((IWinRTObject)this).NativeObject).ThisPtr : _inner.ThisPtr;

        private readonly IObjectReference _inner = null;



        private IObjectReference _objRef_global__Microsoft_UI_Xaml_Media_ITranslateTransform => _inner;


        private static volatile IObjectReference ___objRef_global__Microsoft_UI_Xaml_Media_TranslateTransform;
        private static IObjectReference _objRef_global__Microsoft_UI_Xaml_Media_TranslateTransform
        {
            get
            { 
                var factory = ___objRef_global__Microsoft_UI_Xaml_Media_TranslateTransform;
                if (factory != null && factory.IsInCurrentContext)
                {
                    return factory;
                }
                else
                {
                    return ___objRef_global__Microsoft_UI_Xaml_Media_TranslateTransform = ActivationFactory.Get("Microsoft.UI.Xaml.Media.TranslateTransform");
                }
            }
        }

        public TranslateTransform() :base(global::WinRT.DerivedComposed.Instance)
        {
            _inner = global::ABI.WinRT.Interop.IActivationFactoryMethods.ActivateInstanceUnsafe(_objRef_global__Microsoft_UI_Xaml_Media_TranslateTransform, global::ABI.Microsoft.UI.Xaml.Media.ITranslateTransformMethods.IID);
            ComWrappersSupport.RegisterObjectForInterface(this, ThisPtr);
            ComWrappersHelper.Init(_inner, false);

        }

        public static I As<I>() => ActivationFactory.Get("Microsoft.UI.Xaml.Media.TranslateTransform").AsInterface<I>();

        private static volatile IObjectReference ___objRef_global__Microsoft_UI_Xaml_Media_ITranslateTransformStatics;
        private static IObjectReference _objRef_global__Microsoft_UI_Xaml_Media_ITranslateTransformStatics
        {
            get
            { 
                var factory = ___objRef_global__Microsoft_UI_Xaml_Media_ITranslateTransformStatics;
                if (factory != null && factory.IsInCurrentContext)
                {
                    return factory;
                }
                else
                {
                    return ___objRef_global__Microsoft_UI_Xaml_Media_ITranslateTransformStatics = ActivationFactory.Get("Microsoft.UI.Xaml.Media.TranslateTransform", global::ABI.Microsoft.UI.Xaml.Media.ITranslateTransformStaticsMethods.IID);
                }
            }
        }

        public static global::Microsoft.UI.Xaml.DependencyProperty XProperty => global::ABI.Microsoft.UI.Xaml.Media.ITranslateTransformStaticsMethods.get_XProperty(_objRef_global__Microsoft_UI_Xaml_Media_ITranslateTransformStatics);

        public static global::Microsoft.UI.Xaml.DependencyProperty YProperty => global::ABI.Microsoft.UI.Xaml.Media.ITranslateTransformStaticsMethods.get_YProperty(_objRef_global__Microsoft_UI_Xaml_Media_ITranslateTransformStatics);

        public static new TranslateTransform FromAbi(IntPtr thisPtr)
        {
            if (thisPtr == IntPtr.Zero) return null;
            return MarshalInspectable<TranslateTransform>.FromAbi(thisPtr);
        }

        internal TranslateTransform(IObjectReference objRef)
            : base(global::WinRT.DerivedComposed.Instance)

        {
            _inner = objRef.As(global::ABI.Microsoft.UI.Xaml.Media.ITranslateTransformMethods.IID);

        }


        public static bool operator ==(TranslateTransform x, TranslateTransform y) => (x?.ThisPtr ?? IntPtr.Zero) == (y?.ThisPtr ?? IntPtr.Zero);
        public static bool operator !=(TranslateTransform x, TranslateTransform y) => !(x == y);
        public bool Equals(TranslateTransform other) => this == other;
        public override bool Equals(object obj) => obj is TranslateTransform that && this == that;
        public override int GetHashCode() => ThisPtr.GetHashCode();


        bool IWinRTObject.HasUnwrappableNativeObject => true;
        IObjectReference IWinRTObject.NativeObject => _inner;

        private struct InterfaceTag<I>{};


        public double X
        {
            get => global::ABI.Microsoft.UI.Xaml.Media.ITranslateTransformMethods.get_X(_objRef_global__Microsoft_UI_Xaml_Media_ITranslateTransform);
            set => global::ABI.Microsoft.UI.Xaml.Media.ITranslateTransformMethods.set_X(_objRef_global__Microsoft_UI_Xaml_Media_ITranslateTransform, value);
        }

        public double Y
        {
            get => global::ABI.Microsoft.UI.Xaml.Media.ITranslateTransformMethods.get_Y(_objRef_global__Microsoft_UI_Xaml_Media_ITranslateTransform);
            set => global::ABI.Microsoft.UI.Xaml.Media.ITranslateTransformMethods.set_Y(_objRef_global__Microsoft_UI_Xaml_Media_ITranslateTransform, value);
        }

        protected override bool IsOverridableInterface(Guid iid) => base.IsOverridableInterface(iid);

        global::System.Runtime.InteropServices.CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(ref Guid iid, out IntPtr ppv)
        {
            ppv = IntPtr.Zero;
            if (IsOverridableInterface(iid) || global::WinRT.Interop.IID.IID_IInspectable == iid)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
            }

            if (((IWinRTObject)this).NativeObject.TryAs(iid, out ppv) >= 0)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.Handled;
            }

            return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
        }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")]
    [global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Media.VisualTreeHelper))]
    [global::ABI.Microsoft.UI.Xaml.Media.VisualTreeHelperRcwFactory]
    [global::WinRT.ProjectedRuntimeClass(typeof(IVisualTreeHelper))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    public sealed class VisualTreeHelper : global::System.Runtime.InteropServices.ICustomQueryInterface, IWinRTObject, IEquatable<VisualTreeHelper>
    {
        private IntPtr ThisPtr => _inner == null ? (((IWinRTObject)this).NativeObject).ThisPtr : _inner.ThisPtr;

        private readonly IObjectReference _inner = null;



        private IObjectReference _objRef_global__Microsoft_UI_Xaml_Media_IVisualTreeHelper => _inner;


        public static I As<I>() => ActivationFactory.Get("Microsoft.UI.Xaml.Media.VisualTreeHelper").AsInterface<I>();

        private static volatile IObjectReference ___objRef_global__Microsoft_UI_Xaml_Media_IVisualTreeHelperStatics;
        private static IObjectReference _objRef_global__Microsoft_UI_Xaml_Media_IVisualTreeHelperStatics
        {
            get
            { 
                var factory = ___objRef_global__Microsoft_UI_Xaml_Media_IVisualTreeHelperStatics;
                if (factory != null && factory.IsInCurrentContext)
                {
                    return factory;
                }
                else
                {
                    return ___objRef_global__Microsoft_UI_Xaml_Media_IVisualTreeHelperStatics = ActivationFactory.Get("Microsoft.UI.Xaml.Media.VisualTreeHelper", global::ABI.Microsoft.UI.Xaml.Media.IVisualTreeHelperStaticsMethods.IID);
                }
            }
        }

        public static global::System.Collections.Generic.IEnumerable<global::Microsoft.UI.Xaml.UIElement> FindElementsInHostCoordinates(global::Windows.Foundation.Point intersectingPoint, global::Microsoft.UI.Xaml.UIElement subtree) => global::ABI.Microsoft.UI.Xaml.Media.IVisualTreeHelperStaticsMethods.FindElementsInHostCoordinates(_objRef_global__Microsoft_UI_Xaml_Media_IVisualTreeHelperStatics, intersectingPoint, subtree);

        public static global::System.Collections.Generic.IEnumerable<global::Microsoft.UI.Xaml.UIElement> FindElementsInHostCoordinates(global::Windows.Foundation.Rect intersectingRect, global::Microsoft.UI.Xaml.UIElement subtree) => global::ABI.Microsoft.UI.Xaml.Media.IVisualTreeHelperStaticsMethods.FindElementsInHostCoordinates(_objRef_global__Microsoft_UI_Xaml_Media_IVisualTreeHelperStatics, intersectingRect, subtree);

        public static global::System.Collections.Generic.IEnumerable<global::Microsoft.UI.Xaml.UIElement> FindElementsInHostCoordinates(global::Windows.Foundation.Point intersectingPoint, global::Microsoft.UI.Xaml.UIElement subtree, bool includeAllElements) => global::ABI.Microsoft.UI.Xaml.Media.IVisualTreeHelperStaticsMethods.FindElementsInHostCoordinates(_objRef_global__Microsoft_UI_Xaml_Media_IVisualTreeHelperStatics, intersectingPoint, subtree, includeAllElements);

        public static global::System.Collections.Generic.IEnumerable<global::Microsoft.UI.Xaml.UIElement> FindElementsInHostCoordinates(global::Windows.Foundation.Rect intersectingRect, global::Microsoft.UI.Xaml.UIElement subtree, bool includeAllElements) => global::ABI.Microsoft.UI.Xaml.Media.IVisualTreeHelperStaticsMethods.FindElementsInHostCoordinates(_objRef_global__Microsoft_UI_Xaml_Media_IVisualTreeHelperStatics, intersectingRect, subtree, includeAllElements);

        public static global::Microsoft.UI.Xaml.DependencyObject GetChild(global::Microsoft.UI.Xaml.DependencyObject reference, int childIndex) => global::ABI.Microsoft.UI.Xaml.Media.IVisualTreeHelperStaticsMethods.GetChild(_objRef_global__Microsoft_UI_Xaml_Media_IVisualTreeHelperStatics, reference, childIndex);

        public static int GetChildrenCount(global::Microsoft.UI.Xaml.DependencyObject reference) => global::ABI.Microsoft.UI.Xaml.Media.IVisualTreeHelperStaticsMethods.GetChildrenCount(_objRef_global__Microsoft_UI_Xaml_Media_IVisualTreeHelperStatics, reference);

        public static global::Microsoft.UI.Xaml.DependencyObject GetParent(global::Microsoft.UI.Xaml.DependencyObject reference) => global::ABI.Microsoft.UI.Xaml.Media.IVisualTreeHelperStaticsMethods.GetParent(_objRef_global__Microsoft_UI_Xaml_Media_IVisualTreeHelperStatics, reference);

        public static void DisconnectChildrenRecursive(global::Microsoft.UI.Xaml.UIElement element) => global::ABI.Microsoft.UI.Xaml.Media.IVisualTreeHelperStaticsMethods.DisconnectChildrenRecursive(_objRef_global__Microsoft_UI_Xaml_Media_IVisualTreeHelperStatics, element);

        public static global::System.Collections.Generic.IReadOnlyList<global::Microsoft.UI.Xaml.Controls.Primitives.Popup> GetOpenPopups(global::Microsoft.UI.Xaml.Window window) => global::ABI.Microsoft.UI.Xaml.Media.IVisualTreeHelperStaticsMethods.GetOpenPopups(_objRef_global__Microsoft_UI_Xaml_Media_IVisualTreeHelperStatics, window);

        public static global::System.Collections.Generic.IReadOnlyList<global::Microsoft.UI.Xaml.Controls.Primitives.Popup> GetOpenPopupsForXamlRoot(global::Microsoft.UI.Xaml.XamlRoot xamlRoot) => global::ABI.Microsoft.UI.Xaml.Media.IVisualTreeHelperStaticsMethods.GetOpenPopupsForXamlRoot(_objRef_global__Microsoft_UI_Xaml_Media_IVisualTreeHelperStatics, xamlRoot);

        public static VisualTreeHelper FromAbi(IntPtr thisPtr)
        {
            if (thisPtr == IntPtr.Zero) return null;
            return MarshalInspectable<VisualTreeHelper>.FromAbi(thisPtr);
        }

        internal VisualTreeHelper(IObjectReference objRef)
        {
            _inner = objRef.As(global::ABI.Microsoft.UI.Xaml.Media.IVisualTreeHelperMethods.IID);

        }


        public static bool operator ==(VisualTreeHelper x, VisualTreeHelper y) => (x?.ThisPtr ?? IntPtr.Zero) == (y?.ThisPtr ?? IntPtr.Zero);
        public static bool operator !=(VisualTreeHelper x, VisualTreeHelper y) => !(x == y);
        public bool Equals(VisualTreeHelper other) => this == other;
        public override bool Equals(object obj) => obj is VisualTreeHelper that && this == that;
        public override int GetHashCode() => ThisPtr.GetHashCode();


        bool IWinRTObject.HasUnwrappableNativeObject => true;
        IObjectReference IWinRTObject.NativeObject => _inner;
        private volatile global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> _queryInterfaceCache;
        private global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> MakeQueryInterfaceCache()
        {
            global::System.Threading.Interlocked.CompareExchange(ref _queryInterfaceCache, new global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference>(), null); 
            return _queryInterfaceCache;
        }
        global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> IWinRTObject.QueryInterfaceCache => _queryInterfaceCache ?? MakeQueryInterfaceCache();
        private volatile global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> _additionalTypeData;
        private global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> MakeAdditionalTypeData()
        {
            global::System.Threading.Interlocked.CompareExchange(ref _additionalTypeData, new global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object>(), null); 
            return _additionalTypeData;
        }
        global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> IWinRTObject.AdditionalTypeData => _additionalTypeData ?? MakeAdditionalTypeData();

        private struct InterfaceTag<I>{};


        private bool IsOverridableInterface(Guid iid) => false;

        global::System.Runtime.InteropServices.CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(ref Guid iid, out IntPtr ppv)
        {
            ppv = IntPtr.Zero;
            if (IsOverridableInterface(iid) || global::WinRT.Interop.IID.IID_IInspectable == iid)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
            }

            if (((IWinRTObject)this).NativeObject.TryAs(iid, out ppv) >= 0)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.Handled;
            }

            return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
        }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")]
    [global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Media.XamlCompositionBrushBase))]
    [global::ABI.Microsoft.UI.Xaml.Media.XamlCompositionBrushBaseRcwFactory]
    [global::WinRT.ProjectedRuntimeClass(typeof(IXamlCompositionBrushBase))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    public class XamlCompositionBrushBase : Brush, IXamlCompositionBrushBaseOverrides, global::System.Runtime.InteropServices.ICustomQueryInterface, IWinRTObject, IEquatable<XamlCompositionBrushBase>
    {
        private IntPtr ThisPtr => _inner == null ? (((IWinRTObject)this).NativeObject).ThisPtr : _inner.ThisPtr;

        private readonly IObjectReference _inner = null;




        private volatile IObjectReference ___objRef_global__Microsoft_UI_Xaml_Media_IXamlCompositionBrushBase;
        private IObjectReference Make___objRef_global__Microsoft_UI_Xaml_Media_IXamlCompositionBrushBase()
        {
            global::System.Threading.Interlocked.CompareExchange(ref ___objRef_global__Microsoft_UI_Xaml_Media_IXamlCompositionBrushBase, ((IWinRTObject)this).NativeObject.As<IUnknownVftbl>(global::ABI.Microsoft.UI.Xaml.Media.IXamlCompositionBrushBaseMethods.IID), null);
            return ___objRef_global__Microsoft_UI_Xaml_Media_IXamlCompositionBrushBase;
        }
        private IObjectReference _objRef_global__Microsoft_UI_Xaml_Media_IXamlCompositionBrushBase => ___objRef_global__Microsoft_UI_Xaml_Media_IXamlCompositionBrushBase ?? Make___objRef_global__Microsoft_UI_Xaml_Media_IXamlCompositionBrushBase();

        private volatile IObjectReference ___objRef_global__Microsoft_UI_Xaml_Media_IXamlCompositionBrushBaseProtected;
        private IObjectReference Make___objRef_global__Microsoft_UI_Xaml_Media_IXamlCompositionBrushBaseProtected()
        {
            global::System.Threading.Interlocked.CompareExchange(ref ___objRef_global__Microsoft_UI_Xaml_Media_IXamlCompositionBrushBaseProtected, ((IWinRTObject)this).NativeObject.As<IUnknownVftbl>(global::ABI.Microsoft.UI.Xaml.Media.IXamlCompositionBrushBaseProtectedMethods.IID), null);
            return ___objRef_global__Microsoft_UI_Xaml_Media_IXamlCompositionBrushBaseProtected;
        }
        private IObjectReference _objRef_global__Microsoft_UI_Xaml_Media_IXamlCompositionBrushBaseProtected => ___objRef_global__Microsoft_UI_Xaml_Media_IXamlCompositionBrushBaseProtected ?? Make___objRef_global__Microsoft_UI_Xaml_Media_IXamlCompositionBrushBaseProtected();

        private volatile IObjectReference ___objRef_global__Microsoft_UI_Xaml_Media_IXamlCompositionBrushBaseOverrides;
        private IObjectReference Make___objRef_global__Microsoft_UI_Xaml_Media_IXamlCompositionBrushBaseOverrides()
        {
            global::System.Threading.Interlocked.CompareExchange(ref ___objRef_global__Microsoft_UI_Xaml_Media_IXamlCompositionBrushBaseOverrides, ((IWinRTObject)this).NativeObject.As<IUnknownVftbl>(global::ABI.Microsoft.UI.Xaml.Media.IXamlCompositionBrushBaseOverridesMethods.IID), null);
            return ___objRef_global__Microsoft_UI_Xaml_Media_IXamlCompositionBrushBaseOverrides;
        }
        private IObjectReference _objRef_global__Microsoft_UI_Xaml_Media_IXamlCompositionBrushBaseOverrides => ___objRef_global__Microsoft_UI_Xaml_Media_IXamlCompositionBrushBaseOverrides ?? Make___objRef_global__Microsoft_UI_Xaml_Media_IXamlCompositionBrushBaseOverrides();



        private static class _IXamlCompositionBrushBaseFactoryMethods
        {
            public static unsafe IntPtr CreateInstance(IObjectReference _obj, object baseInterface, out IntPtr innerInterface)
            {
                var ThisPtr = _obj.ThisPtr;

                ObjectReferenceValue __baseInterface = default;
                IntPtr __innerInterface = default;
                IntPtr __retval = default;
                try
                {
                    __baseInterface = MarshalInspectable<object>.CreateMarshaler2(baseInterface);
                    global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, IntPtr*, IntPtr*, int>**)ThisPtr)[6](ThisPtr, MarshalInspectable<object>.GetAbi(__baseInterface), &__innerInterface, &__retval));
                    global::System.GC.KeepAlive(_obj);
                    innerInterface = __innerInterface;
                    return __retval;
                }
                finally
                {
                    MarshalInspectable<object>.DisposeMarshaler(__baseInterface);
                }
            }
        }

        private static volatile IObjectReference ___objRef_global__Microsoft_UI_Xaml_Media_IXamlCompositionBrushBaseFactory;
        private static IObjectReference _objRef_global__Microsoft_UI_Xaml_Media_IXamlCompositionBrushBaseFactory
        {
            get
            { 
                var factory = ___objRef_global__Microsoft_UI_Xaml_Media_IXamlCompositionBrushBaseFactory;
                if (factory != null && factory.IsInCurrentContext)
                {
                    return factory;
                }
                else
                {
                    return ___objRef_global__Microsoft_UI_Xaml_Media_IXamlCompositionBrushBaseFactory = ActivationFactory.Get("Microsoft.UI.Xaml.Media.XamlCompositionBrushBase", global::ABI.Microsoft.UI.Xaml.Media.IXamlCompositionBrushBaseFactoryMethods.IID);
                }
            }
        }

        protected XamlCompositionBrushBase():base(global::WinRT.DerivedComposed.Instance)
        {
            bool isAggregation = this.GetType() != typeof(XamlCompositionBrushBase);
            object baseInspectable = isAggregation ? this : null;
            IntPtr composed = _IXamlCompositionBrushBaseFactoryMethods.CreateInstance(_objRef_global__Microsoft_UI_Xaml_Media_IXamlCompositionBrushBaseFactory,  baseInspectable, out IntPtr inner);
            try
            {
                ComWrappersHelper.Init(isAggregation, this, composed, inner, global::ABI.Microsoft.UI.Xaml.Media.IXamlCompositionBrushBaseMethods.IID, out _inner);

            }
            finally
            {
                Marshal.Release(inner);   
            }
        }

        public static new I As<I>() => ActivationFactory.Get("Microsoft.UI.Xaml.Media.XamlCompositionBrushBase").AsInterface<I>();

        private static volatile IObjectReference ___objRef_global__Microsoft_UI_Xaml_Media_IXamlCompositionBrushBaseStatics;
        private static IObjectReference _objRef_global__Microsoft_UI_Xaml_Media_IXamlCompositionBrushBaseStatics
        {
            get
            { 
                var factory = ___objRef_global__Microsoft_UI_Xaml_Media_IXamlCompositionBrushBaseStatics;
                if (factory != null && factory.IsInCurrentContext)
                {
                    return factory;
                }
                else
                {
                    return ___objRef_global__Microsoft_UI_Xaml_Media_IXamlCompositionBrushBaseStatics = ActivationFactory.Get("Microsoft.UI.Xaml.Media.XamlCompositionBrushBase", global::ABI.Microsoft.UI.Xaml.Media.IXamlCompositionBrushBaseStaticsMethods.IID);
                }
            }
        }

        public static global::Microsoft.UI.Xaml.DependencyProperty FallbackColorProperty => global::ABI.Microsoft.UI.Xaml.Media.IXamlCompositionBrushBaseStaticsMethods.get_FallbackColorProperty(_objRef_global__Microsoft_UI_Xaml_Media_IXamlCompositionBrushBaseStatics);

        public static new XamlCompositionBrushBase FromAbi(IntPtr thisPtr)
        {
            if (thisPtr == IntPtr.Zero) return null;
            return MarshalInspectable<XamlCompositionBrushBase>.FromAbi(thisPtr);
        }

        protected internal XamlCompositionBrushBase(IObjectReference objRef)
            : base(global::WinRT.DerivedComposed.Instance)

        {
            _inner = objRef.As(global::ABI.Microsoft.UI.Xaml.Media.IXamlCompositionBrushBaseMethods.IID);

        }


        public static bool operator ==(XamlCompositionBrushBase x, XamlCompositionBrushBase y) => (x?.ThisPtr ?? IntPtr.Zero) == (y?.ThisPtr ?? IntPtr.Zero);
        public static bool operator !=(XamlCompositionBrushBase x, XamlCompositionBrushBase y) => !(x == y);
        public bool Equals(XamlCompositionBrushBase other) => this == other;
        public override bool Equals(object obj) => obj is XamlCompositionBrushBase that && this == that;
        public override int GetHashCode() => ThisPtr.GetHashCode();


        protected XamlCompositionBrushBase(global::WinRT.DerivedComposed _):base(_)
        {

        }
        bool IWinRTObject.HasUnwrappableNativeObject => this.GetType() == typeof(XamlCompositionBrushBase);
        IObjectReference IWinRTObject.NativeObject => _inner;

        private struct InterfaceTag<I>{};


        protected virtual void OnConnected() => global::ABI.Microsoft.UI.Xaml.Media.IXamlCompositionBrushBaseOverridesMethods.OnConnected(_objRef_global__Microsoft_UI_Xaml_Media_IXamlCompositionBrushBaseOverrides);

        void IXamlCompositionBrushBaseOverrides.OnConnected() => OnConnected();
        protected virtual void OnDisconnected() => global::ABI.Microsoft.UI.Xaml.Media.IXamlCompositionBrushBaseOverridesMethods.OnDisconnected(_objRef_global__Microsoft_UI_Xaml_Media_IXamlCompositionBrushBaseOverrides);

        void IXamlCompositionBrushBaseOverrides.OnDisconnected() => OnDisconnected();
        protected global::Microsoft.UI.Composition.CompositionBrush CompositionBrush
        {
            get => global::ABI.Microsoft.UI.Xaml.Media.IXamlCompositionBrushBaseProtectedMethods.get_CompositionBrush(_objRef_global__Microsoft_UI_Xaml_Media_IXamlCompositionBrushBaseProtected);
            set => global::ABI.Microsoft.UI.Xaml.Media.IXamlCompositionBrushBaseProtectedMethods.set_CompositionBrush(_objRef_global__Microsoft_UI_Xaml_Media_IXamlCompositionBrushBaseProtected, value);
        }

        public global::Windows.UI.Color FallbackColor
        {
            get => global::ABI.Microsoft.UI.Xaml.Media.IXamlCompositionBrushBaseMethods.get_FallbackColor(_objRef_global__Microsoft_UI_Xaml_Media_IXamlCompositionBrushBase);
            set => global::ABI.Microsoft.UI.Xaml.Media.IXamlCompositionBrushBaseMethods.set_FallbackColor(_objRef_global__Microsoft_UI_Xaml_Media_IXamlCompositionBrushBase, value);
        }

        protected override bool IsOverridableInterface(Guid iid) => global::ABI.Microsoft.UI.Xaml.Media.IXamlCompositionBrushBaseOverridesMethods.IID == iid || base.IsOverridableInterface(iid);

        global::System.Runtime.InteropServices.CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(ref Guid iid, out IntPtr ppv)
        {
            ppv = IntPtr.Zero;
            if (IsOverridableInterface(iid) || global::WinRT.Interop.IID.IID_IInspectable == iid)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
            }

            if (((IWinRTObject)this).NativeObject.TryAs(iid, out ppv) >= 0)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.Handled;
            }

            return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
        }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")]
    [global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Media.XamlLight))]
    [global::ABI.Microsoft.UI.Xaml.Media.XamlLightRcwFactory]
    [global::WinRT.ProjectedRuntimeClass(typeof(IXamlLight))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    public class XamlLight : global::Microsoft.UI.Xaml.DependencyObject, IXamlLightOverrides, global::System.Runtime.InteropServices.ICustomQueryInterface, IWinRTObject, IEquatable<XamlLight>
    {
        private IntPtr ThisPtr => _inner == null ? (((IWinRTObject)this).NativeObject).ThisPtr : _inner.ThisPtr;

        private readonly IObjectReference _inner = null;




        private volatile IObjectReference ___objRef_global__Microsoft_UI_Xaml_Media_IXamlLight;
        private IObjectReference Make___objRef_global__Microsoft_UI_Xaml_Media_IXamlLight()
        {
            global::System.Threading.Interlocked.CompareExchange(ref ___objRef_global__Microsoft_UI_Xaml_Media_IXamlLight, ((IWinRTObject)this).NativeObject.As<IUnknownVftbl>(global::ABI.Microsoft.UI.Xaml.Media.IXamlLightMethods.IID), null);
            return ___objRef_global__Microsoft_UI_Xaml_Media_IXamlLight;
        }
        private IObjectReference _objRef_global__Microsoft_UI_Xaml_Media_IXamlLight => ___objRef_global__Microsoft_UI_Xaml_Media_IXamlLight ?? Make___objRef_global__Microsoft_UI_Xaml_Media_IXamlLight();

        private volatile IObjectReference ___objRef_global__Microsoft_UI_Xaml_Media_IXamlLightProtected;
        private IObjectReference Make___objRef_global__Microsoft_UI_Xaml_Media_IXamlLightProtected()
        {
            global::System.Threading.Interlocked.CompareExchange(ref ___objRef_global__Microsoft_UI_Xaml_Media_IXamlLightProtected, ((IWinRTObject)this).NativeObject.As<IUnknownVftbl>(global::ABI.Microsoft.UI.Xaml.Media.IXamlLightProtectedMethods.IID), null);
            return ___objRef_global__Microsoft_UI_Xaml_Media_IXamlLightProtected;
        }
        private IObjectReference _objRef_global__Microsoft_UI_Xaml_Media_IXamlLightProtected => ___objRef_global__Microsoft_UI_Xaml_Media_IXamlLightProtected ?? Make___objRef_global__Microsoft_UI_Xaml_Media_IXamlLightProtected();

        private volatile IObjectReference ___objRef_global__Microsoft_UI_Xaml_Media_IXamlLightOverrides;
        private IObjectReference Make___objRef_global__Microsoft_UI_Xaml_Media_IXamlLightOverrides()
        {
            global::System.Threading.Interlocked.CompareExchange(ref ___objRef_global__Microsoft_UI_Xaml_Media_IXamlLightOverrides, ((IWinRTObject)this).NativeObject.As<IUnknownVftbl>(global::ABI.Microsoft.UI.Xaml.Media.IXamlLightOverridesMethods.IID), null);
            return ___objRef_global__Microsoft_UI_Xaml_Media_IXamlLightOverrides;
        }
        private IObjectReference _objRef_global__Microsoft_UI_Xaml_Media_IXamlLightOverrides => ___objRef_global__Microsoft_UI_Xaml_Media_IXamlLightOverrides ?? Make___objRef_global__Microsoft_UI_Xaml_Media_IXamlLightOverrides();



        private static class _IXamlLightFactoryMethods
        {
            public static unsafe IntPtr CreateInstance(IObjectReference _obj, object baseInterface, out IntPtr innerInterface)
            {
                var ThisPtr = _obj.ThisPtr;

                ObjectReferenceValue __baseInterface = default;
                IntPtr __innerInterface = default;
                IntPtr __retval = default;
                try
                {
                    __baseInterface = MarshalInspectable<object>.CreateMarshaler2(baseInterface);
                    global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, IntPtr*, IntPtr*, int>**)ThisPtr)[6](ThisPtr, MarshalInspectable<object>.GetAbi(__baseInterface), &__innerInterface, &__retval));
                    global::System.GC.KeepAlive(_obj);
                    innerInterface = __innerInterface;
                    return __retval;
                }
                finally
                {
                    MarshalInspectable<object>.DisposeMarshaler(__baseInterface);
                }
            }
        }

        private static volatile IObjectReference ___objRef_global__Microsoft_UI_Xaml_Media_IXamlLightFactory;
        private static IObjectReference _objRef_global__Microsoft_UI_Xaml_Media_IXamlLightFactory
        {
            get
            { 
                var factory = ___objRef_global__Microsoft_UI_Xaml_Media_IXamlLightFactory;
                if (factory != null && factory.IsInCurrentContext)
                {
                    return factory;
                }
                else
                {
                    return ___objRef_global__Microsoft_UI_Xaml_Media_IXamlLightFactory = ActivationFactory.Get("Microsoft.UI.Xaml.Media.XamlLight", global::ABI.Microsoft.UI.Xaml.Media.IXamlLightFactoryMethods.IID);
                }
            }
        }

        public XamlLight():base(global::WinRT.DerivedComposed.Instance)
        {
            bool isAggregation = this.GetType() != typeof(XamlLight);
            object baseInspectable = isAggregation ? this : null;
            IntPtr composed = _IXamlLightFactoryMethods.CreateInstance(_objRef_global__Microsoft_UI_Xaml_Media_IXamlLightFactory,  baseInspectable, out IntPtr inner);
            try
            {
                ComWrappersHelper.Init(isAggregation, this, composed, inner, global::ABI.Microsoft.UI.Xaml.Media.IXamlLightMethods.IID, out _inner);

            }
            finally
            {
                Marshal.Release(inner);   
            }
        }

        public static I As<I>() => ActivationFactory.Get("Microsoft.UI.Xaml.Media.XamlLight").AsInterface<I>();

        private static volatile IObjectReference ___objRef_global__Microsoft_UI_Xaml_Media_IXamlLightStatics;
        private static IObjectReference _objRef_global__Microsoft_UI_Xaml_Media_IXamlLightStatics
        {
            get
            { 
                var factory = ___objRef_global__Microsoft_UI_Xaml_Media_IXamlLightStatics;
                if (factory != null && factory.IsInCurrentContext)
                {
                    return factory;
                }
                else
                {
                    return ___objRef_global__Microsoft_UI_Xaml_Media_IXamlLightStatics = ActivationFactory.Get("Microsoft.UI.Xaml.Media.XamlLight", global::ABI.Microsoft.UI.Xaml.Media.IXamlLightStaticsMethods.IID);
                }
            }
        }

        public static void AddTargetElement(string lightId, global::Microsoft.UI.Xaml.UIElement element) => global::ABI.Microsoft.UI.Xaml.Media.IXamlLightStaticsMethods.AddTargetElement(_objRef_global__Microsoft_UI_Xaml_Media_IXamlLightStatics, lightId, element);

        public static void RemoveTargetElement(string lightId, global::Microsoft.UI.Xaml.UIElement element) => global::ABI.Microsoft.UI.Xaml.Media.IXamlLightStaticsMethods.RemoveTargetElement(_objRef_global__Microsoft_UI_Xaml_Media_IXamlLightStatics, lightId, element);

        public static void AddTargetBrush(string lightId, Brush brush) => global::ABI.Microsoft.UI.Xaml.Media.IXamlLightStaticsMethods.AddTargetBrush(_objRef_global__Microsoft_UI_Xaml_Media_IXamlLightStatics, lightId, brush);

        public static void RemoveTargetBrush(string lightId, Brush brush) => global::ABI.Microsoft.UI.Xaml.Media.IXamlLightStaticsMethods.RemoveTargetBrush(_objRef_global__Microsoft_UI_Xaml_Media_IXamlLightStatics, lightId, brush);

        public static new XamlLight FromAbi(IntPtr thisPtr)
        {
            if (thisPtr == IntPtr.Zero) return null;
            return MarshalInspectable<XamlLight>.FromAbi(thisPtr);
        }

        protected internal XamlLight(IObjectReference objRef)
            : base(global::WinRT.DerivedComposed.Instance)

        {
            _inner = objRef.As(global::ABI.Microsoft.UI.Xaml.Media.IXamlLightMethods.IID);

        }


        public static bool operator ==(XamlLight x, XamlLight y) => (x?.ThisPtr ?? IntPtr.Zero) == (y?.ThisPtr ?? IntPtr.Zero);
        public static bool operator !=(XamlLight x, XamlLight y) => !(x == y);
        public bool Equals(XamlLight other) => this == other;
        public override bool Equals(object obj) => obj is XamlLight that && this == that;
        public override int GetHashCode() => ThisPtr.GetHashCode();


        protected XamlLight(global::WinRT.DerivedComposed _):base(_)
        {

        }
        bool IWinRTObject.HasUnwrappableNativeObject => this.GetType() == typeof(XamlLight);
        IObjectReference IWinRTObject.NativeObject => _inner;

        private struct InterfaceTag<I>{};


        protected virtual string GetId() => global::ABI.Microsoft.UI.Xaml.Media.IXamlLightOverridesMethods.GetId(_objRef_global__Microsoft_UI_Xaml_Media_IXamlLightOverrides);

        string IXamlLightOverrides.GetId() => GetId();
        protected virtual void OnConnected(global::Microsoft.UI.Xaml.UIElement newElement) => global::ABI.Microsoft.UI.Xaml.Media.IXamlLightOverridesMethods.OnConnected(_objRef_global__Microsoft_UI_Xaml_Media_IXamlLightOverrides, newElement);

        void IXamlLightOverrides.OnConnected(global::Microsoft.UI.Xaml.UIElement newElement) => OnConnected(newElement);
        protected virtual void OnDisconnected(global::Microsoft.UI.Xaml.UIElement oldElement) => global::ABI.Microsoft.UI.Xaml.Media.IXamlLightOverridesMethods.OnDisconnected(_objRef_global__Microsoft_UI_Xaml_Media_IXamlLightOverrides, oldElement);

        void IXamlLightOverrides.OnDisconnected(global::Microsoft.UI.Xaml.UIElement oldElement) => OnDisconnected(oldElement);
        protected global::Microsoft.UI.Composition.CompositionLight CompositionLight
        {
            get => global::ABI.Microsoft.UI.Xaml.Media.IXamlLightProtectedMethods.get_CompositionLight(_objRef_global__Microsoft_UI_Xaml_Media_IXamlLightProtected);
            set => global::ABI.Microsoft.UI.Xaml.Media.IXamlLightProtectedMethods.set_CompositionLight(_objRef_global__Microsoft_UI_Xaml_Media_IXamlLightProtected, value);
        }

        protected override bool IsOverridableInterface(Guid iid) => global::ABI.Microsoft.UI.Xaml.Media.IXamlLightOverridesMethods.IID == iid || base.IsOverridableInterface(iid);

        global::System.Runtime.InteropServices.CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(ref Guid iid, out IntPtr ppv)
        {
            ppv = IntPtr.Zero;
            if (IsOverridableInterface(iid) || global::WinRT.Interop.IID.IID_IInspectable == iid)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
            }

            if (((IWinRTObject)this).NativeObject.TryAs(iid, out ppv) >= 0)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.Handled;
            }

            return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
        }
    }
}

#pragma warning disable CA1416
namespace ABI.Microsoft.UI.Xaml.Media
{
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    public struct AcrylicBrush
    {

        public static IObjectReference CreateMarshaler(global::Microsoft.UI.Xaml.Media.AcrylicBrush obj) => obj is null ? null : MarshalInspectable<global::Microsoft.UI.Xaml.Media.AcrylicBrush>.CreateMarshaler<IUnknownVftbl>(obj, global::ABI.Microsoft.UI.Xaml.Media.IAcrylicBrushMethods.IID);
        public static ObjectReferenceValue CreateMarshaler2(global::Microsoft.UI.Xaml.Media.AcrylicBrush obj) => MarshalInspectable<object>.CreateMarshaler2(obj, global::ABI.Microsoft.UI.Xaml.Media.IAcrylicBrushMethods.IID);
        public static IntPtr GetAbi(IObjectReference value) => value is null ? IntPtr.Zero : MarshalInterfaceHelper<object>.GetAbi(value);
        public static global::Microsoft.UI.Xaml.Media.AcrylicBrush FromAbi(IntPtr thisPtr) => global::Microsoft.UI.Xaml.Media.AcrylicBrush.FromAbi(thisPtr);
        public static IntPtr FromManaged(global::Microsoft.UI.Xaml.Media.AcrylicBrush obj) => obj is null ? IntPtr.Zero : CreateMarshaler2(obj).Detach();
        public static unsafe MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Media.AcrylicBrush>.MarshalerArray CreateMarshalerArray(global::Microsoft.UI.Xaml.Media.AcrylicBrush[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Media.AcrylicBrush>.CreateMarshalerArray2(array, (o) => CreateMarshaler2(o));
        public static (int length, IntPtr data) GetAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Media.AcrylicBrush>.GetAbiArray(box);
        public static unsafe global::Microsoft.UI.Xaml.Media.AcrylicBrush[] FromAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Media.AcrylicBrush>.FromAbiArray(box, FromAbi);
        public static void CopyAbiArray(global::Microsoft.UI.Xaml.Media.AcrylicBrush[] array, object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Media.AcrylicBrush>.CopyAbiArray(array, box, FromAbi);
        public static (int length, IntPtr data) FromManagedArray(global::Microsoft.UI.Xaml.Media.AcrylicBrush[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Media.AcrylicBrush>.FromManagedArray(array, (o) => FromManaged(o));
        public static void DisposeMarshaler(IObjectReference value) => MarshalInspectable<object>.DisposeMarshaler(value);
        public static void DisposeMarshalerArray(MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Media.AcrylicBrush>.MarshalerArray array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Media.AcrylicBrush>.DisposeMarshalerArray(array);
        public static void DisposeAbi(IntPtr abi) => MarshalInspectable<object>.DisposeAbi(abi);
        public static unsafe void DisposeAbiArray(object box) => MarshalInspectable<object>.DisposeAbiArray(box);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    internal sealed class AcrylicBrushRcwFactoryAttribute : global::WinRT.WinRTImplementationTypeRcwFactoryAttribute
    {
        public override object CreateInstance(global::WinRT.IInspectable inspectable)
            => new global::Microsoft.UI.Xaml.Media.AcrylicBrush(inspectable.ObjRef);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    public struct ArcSegment
    {

        public static IObjectReference CreateMarshaler(global::Microsoft.UI.Xaml.Media.ArcSegment obj) => obj is null ? null : MarshalInspectable<global::Microsoft.UI.Xaml.Media.ArcSegment>.CreateMarshaler<IUnknownVftbl>(obj, global::ABI.Microsoft.UI.Xaml.Media.IArcSegmentMethods.IID);
        public static ObjectReferenceValue CreateMarshaler2(global::Microsoft.UI.Xaml.Media.ArcSegment obj) => MarshalInspectable<object>.CreateMarshaler2(obj, global::ABI.Microsoft.UI.Xaml.Media.IArcSegmentMethods.IID);
        public static IntPtr GetAbi(IObjectReference value) => value is null ? IntPtr.Zero : MarshalInterfaceHelper<object>.GetAbi(value);
        public static global::Microsoft.UI.Xaml.Media.ArcSegment FromAbi(IntPtr thisPtr) => global::Microsoft.UI.Xaml.Media.ArcSegment.FromAbi(thisPtr);
        public static IntPtr FromManaged(global::Microsoft.UI.Xaml.Media.ArcSegment obj) => obj is null ? IntPtr.Zero : CreateMarshaler2(obj).Detach();
        public static unsafe MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Media.ArcSegment>.MarshalerArray CreateMarshalerArray(global::Microsoft.UI.Xaml.Media.ArcSegment[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Media.ArcSegment>.CreateMarshalerArray2(array, (o) => CreateMarshaler2(o));
        public static (int length, IntPtr data) GetAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Media.ArcSegment>.GetAbiArray(box);
        public static unsafe global::Microsoft.UI.Xaml.Media.ArcSegment[] FromAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Media.ArcSegment>.FromAbiArray(box, FromAbi);
        public static void CopyAbiArray(global::Microsoft.UI.Xaml.Media.ArcSegment[] array, object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Media.ArcSegment>.CopyAbiArray(array, box, FromAbi);
        public static (int length, IntPtr data) FromManagedArray(global::Microsoft.UI.Xaml.Media.ArcSegment[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Media.ArcSegment>.FromManagedArray(array, (o) => FromManaged(o));
        public static void DisposeMarshaler(IObjectReference value) => MarshalInspectable<object>.DisposeMarshaler(value);
        public static void DisposeMarshalerArray(MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Media.ArcSegment>.MarshalerArray array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Media.ArcSegment>.DisposeMarshalerArray(array);
        public static void DisposeAbi(IntPtr abi) => MarshalInspectable<object>.DisposeAbi(abi);
        public static unsafe void DisposeAbiArray(object box) => MarshalInspectable<object>.DisposeAbiArray(box);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    internal sealed class ArcSegmentRcwFactoryAttribute : global::WinRT.WinRTImplementationTypeRcwFactoryAttribute
    {
        public override object CreateInstance(global::WinRT.IInspectable inspectable)
            => new global::Microsoft.UI.Xaml.Media.ArcSegment(inspectable.ObjRef);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    public struct BezierSegment
    {

        public static IObjectReference CreateMarshaler(global::Microsoft.UI.Xaml.Media.BezierSegment obj) => obj is null ? null : MarshalInspectable<global::Microsoft.UI.Xaml.Media.BezierSegment>.CreateMarshaler<IUnknownVftbl>(obj, global::ABI.Microsoft.UI.Xaml.Media.IBezierSegmentMethods.IID);
        public static ObjectReferenceValue CreateMarshaler2(global::Microsoft.UI.Xaml.Media.BezierSegment obj) => MarshalInspectable<object>.CreateMarshaler2(obj, global::ABI.Microsoft.UI.Xaml.Media.IBezierSegmentMethods.IID);
        public static IntPtr GetAbi(IObjectReference value) => value is null ? IntPtr.Zero : MarshalInterfaceHelper<object>.GetAbi(value);
        public static global::Microsoft.UI.Xaml.Media.BezierSegment FromAbi(IntPtr thisPtr) => global::Microsoft.UI.Xaml.Media.BezierSegment.FromAbi(thisPtr);
        public static IntPtr FromManaged(global::Microsoft.UI.Xaml.Media.BezierSegment obj) => obj is null ? IntPtr.Zero : CreateMarshaler2(obj).Detach();
        public static unsafe MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Media.BezierSegment>.MarshalerArray CreateMarshalerArray(global::Microsoft.UI.Xaml.Media.BezierSegment[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Media.BezierSegment>.CreateMarshalerArray2(array, (o) => CreateMarshaler2(o));
        public static (int length, IntPtr data) GetAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Media.BezierSegment>.GetAbiArray(box);
        public static unsafe global::Microsoft.UI.Xaml.Media.BezierSegment[] FromAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Media.BezierSegment>.FromAbiArray(box, FromAbi);
        public static void CopyAbiArray(global::Microsoft.UI.Xaml.Media.BezierSegment[] array, object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Media.BezierSegment>.CopyAbiArray(array, box, FromAbi);
        public static (int length, IntPtr data) FromManagedArray(global::Microsoft.UI.Xaml.Media.BezierSegment[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Media.BezierSegment>.FromManagedArray(array, (o) => FromManaged(o));
        public static void DisposeMarshaler(IObjectReference value) => MarshalInspectable<object>.DisposeMarshaler(value);
        public static void DisposeMarshalerArray(MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Media.BezierSegment>.MarshalerArray array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Media.BezierSegment>.DisposeMarshalerArray(array);
        public static void DisposeAbi(IntPtr abi) => MarshalInspectable<object>.DisposeAbi(abi);
        public static unsafe void DisposeAbiArray(object box) => MarshalInspectable<object>.DisposeAbiArray(box);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    internal sealed class BezierSegmentRcwFactoryAttribute : global::WinRT.WinRTImplementationTypeRcwFactoryAttribute
    {
        public override object CreateInstance(global::WinRT.IInspectable inspectable)
            => new global::Microsoft.UI.Xaml.Media.BezierSegment(inspectable.ObjRef);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    public struct BitmapCache
    {

        public static IObjectReference CreateMarshaler(global::Microsoft.UI.Xaml.Media.BitmapCache obj) => obj is null ? null : MarshalInspectable<global::Microsoft.UI.Xaml.Media.BitmapCache>.CreateMarshaler<IUnknownVftbl>(obj, global::ABI.Microsoft.UI.Xaml.Media.IBitmapCacheMethods.IID);
        public static ObjectReferenceValue CreateMarshaler2(global::Microsoft.UI.Xaml.Media.BitmapCache obj) => MarshalInspectable<object>.CreateMarshaler2(obj, global::ABI.Microsoft.UI.Xaml.Media.IBitmapCacheMethods.IID);
        public static IntPtr GetAbi(IObjectReference value) => value is null ? IntPtr.Zero : MarshalInterfaceHelper<object>.GetAbi(value);
        public static global::Microsoft.UI.Xaml.Media.BitmapCache FromAbi(IntPtr thisPtr) => global::Microsoft.UI.Xaml.Media.BitmapCache.FromAbi(thisPtr);
        public static IntPtr FromManaged(global::Microsoft.UI.Xaml.Media.BitmapCache obj) => obj is null ? IntPtr.Zero : CreateMarshaler2(obj).Detach();
        public static unsafe MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Media.BitmapCache>.MarshalerArray CreateMarshalerArray(global::Microsoft.UI.Xaml.Media.BitmapCache[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Media.BitmapCache>.CreateMarshalerArray2(array, (o) => CreateMarshaler2(o));
        public static (int length, IntPtr data) GetAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Media.BitmapCache>.GetAbiArray(box);
        public static unsafe global::Microsoft.UI.Xaml.Media.BitmapCache[] FromAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Media.BitmapCache>.FromAbiArray(box, FromAbi);
        public static void CopyAbiArray(global::Microsoft.UI.Xaml.Media.BitmapCache[] array, object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Media.BitmapCache>.CopyAbiArray(array, box, FromAbi);
        public static (int length, IntPtr data) FromManagedArray(global::Microsoft.UI.Xaml.Media.BitmapCache[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Media.BitmapCache>.FromManagedArray(array, (o) => FromManaged(o));
        public static void DisposeMarshaler(IObjectReference value) => MarshalInspectable<object>.DisposeMarshaler(value);
        public static void DisposeMarshalerArray(MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Media.BitmapCache>.MarshalerArray array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Media.BitmapCache>.DisposeMarshalerArray(array);
        public static void DisposeAbi(IntPtr abi) => MarshalInspectable<object>.DisposeAbi(abi);
        public static unsafe void DisposeAbiArray(object box) => MarshalInspectable<object>.DisposeAbiArray(box);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    internal sealed class BitmapCacheRcwFactoryAttribute : global::WinRT.WinRTImplementationTypeRcwFactoryAttribute
    {
        public override object CreateInstance(global::WinRT.IInspectable inspectable)
            => new global::Microsoft.UI.Xaml.Media.BitmapCache(inspectable.ObjRef);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    public struct Brush
    {

        public static IObjectReference CreateMarshaler(global::Microsoft.UI.Xaml.Media.Brush obj) => obj is null ? null : MarshalInspectable<global::Microsoft.UI.Xaml.Media.Brush>.CreateMarshaler<IUnknownVftbl>(obj, global::ABI.Microsoft.UI.Xaml.Media.IBrushMethods.IID);
        public static ObjectReferenceValue CreateMarshaler2(global::Microsoft.UI.Xaml.Media.Brush obj) => MarshalInspectable<object>.CreateMarshaler2(obj, global::ABI.Microsoft.UI.Xaml.Media.IBrushMethods.IID);
        public static IntPtr GetAbi(IObjectReference value) => value is null ? IntPtr.Zero : MarshalInterfaceHelper<object>.GetAbi(value);
        public static global::Microsoft.UI.Xaml.Media.Brush FromAbi(IntPtr thisPtr) => global::Microsoft.UI.Xaml.Media.Brush.FromAbi(thisPtr);
        public static IntPtr FromManaged(global::Microsoft.UI.Xaml.Media.Brush obj) => obj is null ? IntPtr.Zero : CreateMarshaler2(obj).Detach();
        public static unsafe MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Media.Brush>.MarshalerArray CreateMarshalerArray(global::Microsoft.UI.Xaml.Media.Brush[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Media.Brush>.CreateMarshalerArray2(array, (o) => CreateMarshaler2(o));
        public static (int length, IntPtr data) GetAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Media.Brush>.GetAbiArray(box);
        public static unsafe global::Microsoft.UI.Xaml.Media.Brush[] FromAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Media.Brush>.FromAbiArray(box, FromAbi);
        public static void CopyAbiArray(global::Microsoft.UI.Xaml.Media.Brush[] array, object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Media.Brush>.CopyAbiArray(array, box, FromAbi);
        public static (int length, IntPtr data) FromManagedArray(global::Microsoft.UI.Xaml.Media.Brush[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Media.Brush>.FromManagedArray(array, (o) => FromManaged(o));
        public static void DisposeMarshaler(IObjectReference value) => MarshalInspectable<object>.DisposeMarshaler(value);
        public static void DisposeMarshalerArray(MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Media.Brush>.MarshalerArray array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Media.Brush>.DisposeMarshalerArray(array);
        public static void DisposeAbi(IntPtr abi) => MarshalInspectable<object>.DisposeAbi(abi);
        public static unsafe void DisposeAbiArray(object box) => MarshalInspectable<object>.DisposeAbiArray(box);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    internal sealed class BrushRcwFactoryAttribute : global::WinRT.WinRTImplementationTypeRcwFactoryAttribute
    {
        public override object CreateInstance(global::WinRT.IInspectable inspectable)
            => new global::Microsoft.UI.Xaml.Media.Brush(inspectable.ObjRef);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    public struct BrushCollection
    {

        public static IObjectReference CreateMarshaler(global::Microsoft.UI.Xaml.Media.BrushCollection obj) => obj is null ? null : MarshalInterface<global::System.Collections.Generic.IList<global::Microsoft.UI.Xaml.Media.Brush>>.CreateMarshaler(obj);
        public static ObjectReferenceValue CreateMarshaler2(global::Microsoft.UI.Xaml.Media.BrushCollection obj) => MarshalInterface<global::System.Collections.Generic.IList<global::Microsoft.UI.Xaml.Media.Brush>>.CreateMarshaler2(obj, global::ABI.System.Collections.Generic.IListMethods<global::Microsoft.UI.Xaml.Media.Brush>.IID);
        public static IntPtr GetAbi(IObjectReference value) => value is null ? IntPtr.Zero : MarshalInterfaceHelper<object>.GetAbi(value);
        public static global::Microsoft.UI.Xaml.Media.BrushCollection FromAbi(IntPtr thisPtr) => global::Microsoft.UI.Xaml.Media.BrushCollection.FromAbi(thisPtr);
        public static IntPtr FromManaged(global::Microsoft.UI.Xaml.Media.BrushCollection obj) => obj is null ? IntPtr.Zero : CreateMarshaler2(obj).Detach();
        public static unsafe MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Media.BrushCollection>.MarshalerArray CreateMarshalerArray(global::Microsoft.UI.Xaml.Media.BrushCollection[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Media.BrushCollection>.CreateMarshalerArray2(array, (o) => CreateMarshaler2(o));
        public static (int length, IntPtr data) GetAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Media.BrushCollection>.GetAbiArray(box);
        public static unsafe global::Microsoft.UI.Xaml.Media.BrushCollection[] FromAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Media.BrushCollection>.FromAbiArray(box, FromAbi);
        public static void CopyAbiArray(global::Microsoft.UI.Xaml.Media.BrushCollection[] array, object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Media.BrushCollection>.CopyAbiArray(array, box, FromAbi);
        public static (int length, IntPtr data) FromManagedArray(global::Microsoft.UI.Xaml.Media.BrushCollection[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Media.BrushCollection>.FromManagedArray(array, (o) => FromManaged(o));
        public static void DisposeMarshaler(IObjectReference value) => MarshalInspectable<object>.DisposeMarshaler(value);
        public static void DisposeMarshalerArray(MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Media.BrushCollection>.MarshalerArray array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Media.BrushCollection>.DisposeMarshalerArray(array);
        public static void DisposeAbi(IntPtr abi) => MarshalInspectable<object>.DisposeAbi(abi);
        public static unsafe void DisposeAbiArray(object box) => MarshalInspectable<object>.DisposeAbiArray(box);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    internal sealed class BrushCollectionRcwFactoryAttribute : global::WinRT.WinRTImplementationTypeRcwFactoryAttribute
    {
        public override object CreateInstance(global::WinRT.IInspectable inspectable)
            => new global::Microsoft.UI.Xaml.Media.BrushCollection(inspectable.ObjRef);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    public struct CacheMode
    {

        public static IObjectReference CreateMarshaler(global::Microsoft.UI.Xaml.Media.CacheMode obj) => obj is null ? null : MarshalInspectable<global::Microsoft.UI.Xaml.Media.CacheMode>.CreateMarshaler<IUnknownVftbl>(obj, global::ABI.Microsoft.UI.Xaml.Media.ICacheModeMethods.IID);
        public static ObjectReferenceValue CreateMarshaler2(global::Microsoft.UI.Xaml.Media.CacheMode obj) => MarshalInspectable<object>.CreateMarshaler2(obj, global::ABI.Microsoft.UI.Xaml.Media.ICacheModeMethods.IID);
        public static IntPtr GetAbi(IObjectReference value) => value is null ? IntPtr.Zero : MarshalInterfaceHelper<object>.GetAbi(value);
        public static global::Microsoft.UI.Xaml.Media.CacheMode FromAbi(IntPtr thisPtr) => global::Microsoft.UI.Xaml.Media.CacheMode.FromAbi(thisPtr);
        public static IntPtr FromManaged(global::Microsoft.UI.Xaml.Media.CacheMode obj) => obj is null ? IntPtr.Zero : CreateMarshaler2(obj).Detach();
        public static unsafe MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Media.CacheMode>.MarshalerArray CreateMarshalerArray(global::Microsoft.UI.Xaml.Media.CacheMode[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Media.CacheMode>.CreateMarshalerArray2(array, (o) => CreateMarshaler2(o));
        public static (int length, IntPtr data) GetAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Media.CacheMode>.GetAbiArray(box);
        public static unsafe global::Microsoft.UI.Xaml.Media.CacheMode[] FromAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Media.CacheMode>.FromAbiArray(box, FromAbi);
        public static void CopyAbiArray(global::Microsoft.UI.Xaml.Media.CacheMode[] array, object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Media.CacheMode>.CopyAbiArray(array, box, FromAbi);
        public static (int length, IntPtr data) FromManagedArray(global::Microsoft.UI.Xaml.Media.CacheMode[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Media.CacheMode>.FromManagedArray(array, (o) => FromManaged(o));
        public static void DisposeMarshaler(IObjectReference value) => MarshalInspectable<object>.DisposeMarshaler(value);
        public static void DisposeMarshalerArray(MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Media.CacheMode>.MarshalerArray array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Media.CacheMode>.DisposeMarshalerArray(array);
        public static void DisposeAbi(IntPtr abi) => MarshalInspectable<object>.DisposeAbi(abi);
        public static unsafe void DisposeAbiArray(object box) => MarshalInspectable<object>.DisposeAbiArray(box);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    internal sealed class CacheModeRcwFactoryAttribute : global::WinRT.WinRTImplementationTypeRcwFactoryAttribute
    {
        public override object CreateInstance(global::WinRT.IInspectable inspectable)
            => new global::Microsoft.UI.Xaml.Media.CacheMode(inspectable.ObjRef);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    public struct CompositeTransform
    {

        public static IObjectReference CreateMarshaler(global::Microsoft.UI.Xaml.Media.CompositeTransform obj) => obj is null ? null : MarshalInspectable<global::Microsoft.UI.Xaml.Media.CompositeTransform>.CreateMarshaler<IUnknownVftbl>(obj, global::ABI.Microsoft.UI.Xaml.Media.ICompositeTransformMethods.IID);
        public static ObjectReferenceValue CreateMarshaler2(global::Microsoft.UI.Xaml.Media.CompositeTransform obj) => MarshalInspectable<object>.CreateMarshaler2(obj, global::ABI.Microsoft.UI.Xaml.Media.ICompositeTransformMethods.IID);
        public static IntPtr GetAbi(IObjectReference value) => value is null ? IntPtr.Zero : MarshalInterfaceHelper<object>.GetAbi(value);
        public static global::Microsoft.UI.Xaml.Media.CompositeTransform FromAbi(IntPtr thisPtr) => global::Microsoft.UI.Xaml.Media.CompositeTransform.FromAbi(thisPtr);
        public static IntPtr FromManaged(global::Microsoft.UI.Xaml.Media.CompositeTransform obj) => obj is null ? IntPtr.Zero : CreateMarshaler2(obj).Detach();
        public static unsafe MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Media.CompositeTransform>.MarshalerArray CreateMarshalerArray(global::Microsoft.UI.Xaml.Media.CompositeTransform[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Media.CompositeTransform>.CreateMarshalerArray2(array, (o) => CreateMarshaler2(o));
        public static (int length, IntPtr data) GetAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Media.CompositeTransform>.GetAbiArray(box);
        public static unsafe global::Microsoft.UI.Xaml.Media.CompositeTransform[] FromAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Media.CompositeTransform>.FromAbiArray(box, FromAbi);
        public static void CopyAbiArray(global::Microsoft.UI.Xaml.Media.CompositeTransform[] array, object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Media.CompositeTransform>.CopyAbiArray(array, box, FromAbi);
        public static (int length, IntPtr data) FromManagedArray(global::Microsoft.UI.Xaml.Media.CompositeTransform[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Media.CompositeTransform>.FromManagedArray(array, (o) => FromManaged(o));
        public static void DisposeMarshaler(IObjectReference value) => MarshalInspectable<object>.DisposeMarshaler(value);
        public static void DisposeMarshalerArray(MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Media.CompositeTransform>.MarshalerArray array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Media.CompositeTransform>.DisposeMarshalerArray(array);
        public static void DisposeAbi(IntPtr abi) => MarshalInspectable<object>.DisposeAbi(abi);
        public static unsafe void DisposeAbiArray(object box) => MarshalInspectable<object>.DisposeAbiArray(box);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    internal sealed class CompositeTransformRcwFactoryAttribute : global::WinRT.WinRTImplementationTypeRcwFactoryAttribute
    {
        public override object CreateInstance(global::WinRT.IInspectable inspectable)
            => new global::Microsoft.UI.Xaml.Media.CompositeTransform(inspectable.ObjRef);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    public struct CompositionTarget
    {

        public static IObjectReference CreateMarshaler(global::Microsoft.UI.Xaml.Media.CompositionTarget obj) => obj is null ? null : MarshalInspectable<global::Microsoft.UI.Xaml.Media.CompositionTarget>.CreateMarshaler<IUnknownVftbl>(obj, global::ABI.Microsoft.UI.Xaml.Media.ICompositionTargetMethods.IID);
        public static ObjectReferenceValue CreateMarshaler2(global::Microsoft.UI.Xaml.Media.CompositionTarget obj) => MarshalInspectable<object>.CreateMarshaler2(obj, global::ABI.Microsoft.UI.Xaml.Media.ICompositionTargetMethods.IID);
        public static IntPtr GetAbi(IObjectReference value) => value is null ? IntPtr.Zero : MarshalInterfaceHelper<object>.GetAbi(value);
        public static global::Microsoft.UI.Xaml.Media.CompositionTarget FromAbi(IntPtr thisPtr) => global::Microsoft.UI.Xaml.Media.CompositionTarget.FromAbi(thisPtr);
        public static IntPtr FromManaged(global::Microsoft.UI.Xaml.Media.CompositionTarget obj) => obj is null ? IntPtr.Zero : CreateMarshaler2(obj).Detach();
        public static unsafe MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Media.CompositionTarget>.MarshalerArray CreateMarshalerArray(global::Microsoft.UI.Xaml.Media.CompositionTarget[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Media.CompositionTarget>.CreateMarshalerArray2(array, (o) => CreateMarshaler2(o));
        public static (int length, IntPtr data) GetAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Media.CompositionTarget>.GetAbiArray(box);
        public static unsafe global::Microsoft.UI.Xaml.Media.CompositionTarget[] FromAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Media.CompositionTarget>.FromAbiArray(box, FromAbi);
        public static void CopyAbiArray(global::Microsoft.UI.Xaml.Media.CompositionTarget[] array, object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Media.CompositionTarget>.CopyAbiArray(array, box, FromAbi);
        public static (int length, IntPtr data) FromManagedArray(global::Microsoft.UI.Xaml.Media.CompositionTarget[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Media.CompositionTarget>.FromManagedArray(array, (o) => FromManaged(o));
        public static void DisposeMarshaler(IObjectReference value) => MarshalInspectable<object>.DisposeMarshaler(value);
        public static void DisposeMarshalerArray(MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Media.CompositionTarget>.MarshalerArray array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Media.CompositionTarget>.DisposeMarshalerArray(array);
        public static void DisposeAbi(IntPtr abi) => MarshalInspectable<object>.DisposeAbi(abi);
        public static unsafe void DisposeAbiArray(object box) => MarshalInspectable<object>.DisposeAbiArray(box);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    internal sealed class CompositionTargetRcwFactoryAttribute : global::WinRT.WinRTImplementationTypeRcwFactoryAttribute
    {
        public override object CreateInstance(global::WinRT.IInspectable inspectable)
            => new global::Microsoft.UI.Xaml.Media.CompositionTarget(inspectable.ObjRef);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    public struct DesktopAcrylicBackdrop
    {

        public static IObjectReference CreateMarshaler(global::Microsoft.UI.Xaml.Media.DesktopAcrylicBackdrop obj) => obj is null ? null : MarshalInspectable<global::Microsoft.UI.Xaml.Media.DesktopAcrylicBackdrop>.CreateMarshaler<IUnknownVftbl>(obj, global::ABI.Microsoft.UI.Xaml.Media.IDesktopAcrylicBackdropMethods.IID);
        public static ObjectReferenceValue CreateMarshaler2(global::Microsoft.UI.Xaml.Media.DesktopAcrylicBackdrop obj) => MarshalInspectable<object>.CreateMarshaler2(obj, global::ABI.Microsoft.UI.Xaml.Media.IDesktopAcrylicBackdropMethods.IID);
        public static IntPtr GetAbi(IObjectReference value) => value is null ? IntPtr.Zero : MarshalInterfaceHelper<object>.GetAbi(value);
        public static global::Microsoft.UI.Xaml.Media.DesktopAcrylicBackdrop FromAbi(IntPtr thisPtr) => global::Microsoft.UI.Xaml.Media.DesktopAcrylicBackdrop.FromAbi(thisPtr);
        public static IntPtr FromManaged(global::Microsoft.UI.Xaml.Media.DesktopAcrylicBackdrop obj) => obj is null ? IntPtr.Zero : CreateMarshaler2(obj).Detach();
        public static unsafe MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Media.DesktopAcrylicBackdrop>.MarshalerArray CreateMarshalerArray(global::Microsoft.UI.Xaml.Media.DesktopAcrylicBackdrop[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Media.DesktopAcrylicBackdrop>.CreateMarshalerArray2(array, (o) => CreateMarshaler2(o));
        public static (int length, IntPtr data) GetAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Media.DesktopAcrylicBackdrop>.GetAbiArray(box);
        public static unsafe global::Microsoft.UI.Xaml.Media.DesktopAcrylicBackdrop[] FromAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Media.DesktopAcrylicBackdrop>.FromAbiArray(box, FromAbi);
        public static void CopyAbiArray(global::Microsoft.UI.Xaml.Media.DesktopAcrylicBackdrop[] array, object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Media.DesktopAcrylicBackdrop>.CopyAbiArray(array, box, FromAbi);
        public static (int length, IntPtr data) FromManagedArray(global::Microsoft.UI.Xaml.Media.DesktopAcrylicBackdrop[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Media.DesktopAcrylicBackdrop>.FromManagedArray(array, (o) => FromManaged(o));
        public static void DisposeMarshaler(IObjectReference value) => MarshalInspectable<object>.DisposeMarshaler(value);
        public static void DisposeMarshalerArray(MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Media.DesktopAcrylicBackdrop>.MarshalerArray array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Media.DesktopAcrylicBackdrop>.DisposeMarshalerArray(array);
        public static void DisposeAbi(IntPtr abi) => MarshalInspectable<object>.DisposeAbi(abi);
        public static unsafe void DisposeAbiArray(object box) => MarshalInspectable<object>.DisposeAbiArray(box);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    internal sealed class DesktopAcrylicBackdropRcwFactoryAttribute : global::WinRT.WinRTImplementationTypeRcwFactoryAttribute
    {
        public override object CreateInstance(global::WinRT.IInspectable inspectable)
            => new global::Microsoft.UI.Xaml.Media.DesktopAcrylicBackdrop(inspectable.ObjRef);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    public struct DoubleCollection
    {

        public static IObjectReference CreateMarshaler(global::Microsoft.UI.Xaml.Media.DoubleCollection obj) => obj is null ? null : MarshalInterface<global::System.Collections.Generic.IList<double>>.CreateMarshaler(obj);
        public static ObjectReferenceValue CreateMarshaler2(global::Microsoft.UI.Xaml.Media.DoubleCollection obj) => MarshalInterface<global::System.Collections.Generic.IList<double>>.CreateMarshaler2(obj, global::ABI.System.Collections.Generic.IListMethods<double>.IID);
        public static IntPtr GetAbi(IObjectReference value) => value is null ? IntPtr.Zero : MarshalInterfaceHelper<object>.GetAbi(value);
        public static global::Microsoft.UI.Xaml.Media.DoubleCollection FromAbi(IntPtr thisPtr) => global::Microsoft.UI.Xaml.Media.DoubleCollection.FromAbi(thisPtr);
        public static IntPtr FromManaged(global::Microsoft.UI.Xaml.Media.DoubleCollection obj) => obj is null ? IntPtr.Zero : CreateMarshaler2(obj).Detach();
        public static unsafe MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Media.DoubleCollection>.MarshalerArray CreateMarshalerArray(global::Microsoft.UI.Xaml.Media.DoubleCollection[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Media.DoubleCollection>.CreateMarshalerArray2(array, (o) => CreateMarshaler2(o));
        public static (int length, IntPtr data) GetAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Media.DoubleCollection>.GetAbiArray(box);
        public static unsafe global::Microsoft.UI.Xaml.Media.DoubleCollection[] FromAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Media.DoubleCollection>.FromAbiArray(box, FromAbi);
        public static void CopyAbiArray(global::Microsoft.UI.Xaml.Media.DoubleCollection[] array, object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Media.DoubleCollection>.CopyAbiArray(array, box, FromAbi);
        public static (int length, IntPtr data) FromManagedArray(global::Microsoft.UI.Xaml.Media.DoubleCollection[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Media.DoubleCollection>.FromManagedArray(array, (o) => FromManaged(o));
        public static void DisposeMarshaler(IObjectReference value) => MarshalInspectable<object>.DisposeMarshaler(value);
        public static void DisposeMarshalerArray(MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Media.DoubleCollection>.MarshalerArray array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Media.DoubleCollection>.DisposeMarshalerArray(array);
        public static void DisposeAbi(IntPtr abi) => MarshalInspectable<object>.DisposeAbi(abi);
        public static unsafe void DisposeAbiArray(object box) => MarshalInspectable<object>.DisposeAbiArray(box);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    internal sealed class DoubleCollectionRcwFactoryAttribute : global::WinRT.WinRTImplementationTypeRcwFactoryAttribute
    {
        public override object CreateInstance(global::WinRT.IInspectable inspectable)
            => new global::Microsoft.UI.Xaml.Media.DoubleCollection(inspectable.ObjRef);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    public struct EllipseGeometry
    {

        public static IObjectReference CreateMarshaler(global::Microsoft.UI.Xaml.Media.EllipseGeometry obj) => obj is null ? null : MarshalInspectable<global::Microsoft.UI.Xaml.Media.EllipseGeometry>.CreateMarshaler<IUnknownVftbl>(obj, global::ABI.Microsoft.UI.Xaml.Media.IEllipseGeometryMethods.IID);
        public static ObjectReferenceValue CreateMarshaler2(global::Microsoft.UI.Xaml.Media.EllipseGeometry obj) => MarshalInspectable<object>.CreateMarshaler2(obj, global::ABI.Microsoft.UI.Xaml.Media.IEllipseGeometryMethods.IID);
        public static IntPtr GetAbi(IObjectReference value) => value is null ? IntPtr.Zero : MarshalInterfaceHelper<object>.GetAbi(value);
        public static global::Microsoft.UI.Xaml.Media.EllipseGeometry FromAbi(IntPtr thisPtr) => global::Microsoft.UI.Xaml.Media.EllipseGeometry.FromAbi(thisPtr);
        public static IntPtr FromManaged(global::Microsoft.UI.Xaml.Media.EllipseGeometry obj) => obj is null ? IntPtr.Zero : CreateMarshaler2(obj).Detach();
        public static unsafe MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Media.EllipseGeometry>.MarshalerArray CreateMarshalerArray(global::Microsoft.UI.Xaml.Media.EllipseGeometry[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Media.EllipseGeometry>.CreateMarshalerArray2(array, (o) => CreateMarshaler2(o));
        public static (int length, IntPtr data) GetAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Media.EllipseGeometry>.GetAbiArray(box);
        public static unsafe global::Microsoft.UI.Xaml.Media.EllipseGeometry[] FromAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Media.EllipseGeometry>.FromAbiArray(box, FromAbi);
        public static void CopyAbiArray(global::Microsoft.UI.Xaml.Media.EllipseGeometry[] array, object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Media.EllipseGeometry>.CopyAbiArray(array, box, FromAbi);
        public static (int length, IntPtr data) FromManagedArray(global::Microsoft.UI.Xaml.Media.EllipseGeometry[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Media.EllipseGeometry>.FromManagedArray(array, (o) => FromManaged(o));
        public static void DisposeMarshaler(IObjectReference value) => MarshalInspectable<object>.DisposeMarshaler(value);
        public static void DisposeMarshalerArray(MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Media.EllipseGeometry>.MarshalerArray array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Media.EllipseGeometry>.DisposeMarshalerArray(array);
        public static void DisposeAbi(IntPtr abi) => MarshalInspectable<object>.DisposeAbi(abi);
        public static unsafe void DisposeAbiArray(object box) => MarshalInspectable<object>.DisposeAbiArray(box);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    internal sealed class EllipseGeometryRcwFactoryAttribute : global::WinRT.WinRTImplementationTypeRcwFactoryAttribute
    {
        public override object CreateInstance(global::WinRT.IInspectable inspectable)
            => new global::Microsoft.UI.Xaml.Media.EllipseGeometry(inspectable.ObjRef);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    public struct FontFamily
    {

        public static IObjectReference CreateMarshaler(global::Microsoft.UI.Xaml.Media.FontFamily obj) => obj is null ? null : MarshalInspectable<global::Microsoft.UI.Xaml.Media.FontFamily>.CreateMarshaler<IUnknownVftbl>(obj, global::ABI.Microsoft.UI.Xaml.Media.IFontFamilyMethods.IID);
        public static ObjectReferenceValue CreateMarshaler2(global::Microsoft.UI.Xaml.Media.FontFamily obj) => MarshalInspectable<object>.CreateMarshaler2(obj, global::ABI.Microsoft.UI.Xaml.Media.IFontFamilyMethods.IID);
        public static IntPtr GetAbi(IObjectReference value) => value is null ? IntPtr.Zero : MarshalInterfaceHelper<object>.GetAbi(value);
        public static global::Microsoft.UI.Xaml.Media.FontFamily FromAbi(IntPtr thisPtr) => global::Microsoft.UI.Xaml.Media.FontFamily.FromAbi(thisPtr);
        public static IntPtr FromManaged(global::Microsoft.UI.Xaml.Media.FontFamily obj) => obj is null ? IntPtr.Zero : CreateMarshaler2(obj).Detach();
        public static unsafe MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Media.FontFamily>.MarshalerArray CreateMarshalerArray(global::Microsoft.UI.Xaml.Media.FontFamily[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Media.FontFamily>.CreateMarshalerArray2(array, (o) => CreateMarshaler2(o));
        public static (int length, IntPtr data) GetAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Media.FontFamily>.GetAbiArray(box);
        public static unsafe global::Microsoft.UI.Xaml.Media.FontFamily[] FromAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Media.FontFamily>.FromAbiArray(box, FromAbi);
        public static void CopyAbiArray(global::Microsoft.UI.Xaml.Media.FontFamily[] array, object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Media.FontFamily>.CopyAbiArray(array, box, FromAbi);
        public static (int length, IntPtr data) FromManagedArray(global::Microsoft.UI.Xaml.Media.FontFamily[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Media.FontFamily>.FromManagedArray(array, (o) => FromManaged(o));
        public static void DisposeMarshaler(IObjectReference value) => MarshalInspectable<object>.DisposeMarshaler(value);
        public static void DisposeMarshalerArray(MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Media.FontFamily>.MarshalerArray array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Media.FontFamily>.DisposeMarshalerArray(array);
        public static void DisposeAbi(IntPtr abi) => MarshalInspectable<object>.DisposeAbi(abi);
        public static unsafe void DisposeAbiArray(object box) => MarshalInspectable<object>.DisposeAbiArray(box);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    internal sealed class FontFamilyRcwFactoryAttribute : global::WinRT.WinRTImplementationTypeRcwFactoryAttribute
    {
        public override object CreateInstance(global::WinRT.IInspectable inspectable)
            => new global::Microsoft.UI.Xaml.Media.FontFamily(inspectable.ObjRef);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    public struct GeneralTransform
    {

        public static IObjectReference CreateMarshaler(global::Microsoft.UI.Xaml.Media.GeneralTransform obj) => obj is null ? null : MarshalInspectable<global::Microsoft.UI.Xaml.Media.GeneralTransform>.CreateMarshaler<IUnknownVftbl>(obj, global::ABI.Microsoft.UI.Xaml.Media.IGeneralTransformMethods.IID);
        public static ObjectReferenceValue CreateMarshaler2(global::Microsoft.UI.Xaml.Media.GeneralTransform obj) => MarshalInspectable<object>.CreateMarshaler2(obj, global::ABI.Microsoft.UI.Xaml.Media.IGeneralTransformMethods.IID);
        public static IntPtr GetAbi(IObjectReference value) => value is null ? IntPtr.Zero : MarshalInterfaceHelper<object>.GetAbi(value);
        public static global::Microsoft.UI.Xaml.Media.GeneralTransform FromAbi(IntPtr thisPtr) => global::Microsoft.UI.Xaml.Media.GeneralTransform.FromAbi(thisPtr);
        public static IntPtr FromManaged(global::Microsoft.UI.Xaml.Media.GeneralTransform obj) => obj is null ? IntPtr.Zero : CreateMarshaler2(obj).Detach();
        public static unsafe MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Media.GeneralTransform>.MarshalerArray CreateMarshalerArray(global::Microsoft.UI.Xaml.Media.GeneralTransform[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Media.GeneralTransform>.CreateMarshalerArray2(array, (o) => CreateMarshaler2(o));
        public static (int length, IntPtr data) GetAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Media.GeneralTransform>.GetAbiArray(box);
        public static unsafe global::Microsoft.UI.Xaml.Media.GeneralTransform[] FromAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Media.GeneralTransform>.FromAbiArray(box, FromAbi);
        public static void CopyAbiArray(global::Microsoft.UI.Xaml.Media.GeneralTransform[] array, object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Media.GeneralTransform>.CopyAbiArray(array, box, FromAbi);
        public static (int length, IntPtr data) FromManagedArray(global::Microsoft.UI.Xaml.Media.GeneralTransform[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Media.GeneralTransform>.FromManagedArray(array, (o) => FromManaged(o));
        public static void DisposeMarshaler(IObjectReference value) => MarshalInspectable<object>.DisposeMarshaler(value);
        public static void DisposeMarshalerArray(MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Media.GeneralTransform>.MarshalerArray array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Media.GeneralTransform>.DisposeMarshalerArray(array);
        public static void DisposeAbi(IntPtr abi) => MarshalInspectable<object>.DisposeAbi(abi);
        public static unsafe void DisposeAbiArray(object box) => MarshalInspectable<object>.DisposeAbiArray(box);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    internal sealed class GeneralTransformRcwFactoryAttribute : global::WinRT.WinRTImplementationTypeRcwFactoryAttribute
    {
        public override object CreateInstance(global::WinRT.IInspectable inspectable)
            => new global::Microsoft.UI.Xaml.Media.GeneralTransform(inspectable.ObjRef);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    public struct Geometry
    {

        public static IObjectReference CreateMarshaler(global::Microsoft.UI.Xaml.Media.Geometry obj) => obj is null ? null : MarshalInspectable<global::Microsoft.UI.Xaml.Media.Geometry>.CreateMarshaler<IUnknownVftbl>(obj, global::ABI.Microsoft.UI.Xaml.Media.IGeometryMethods.IID);
        public static ObjectReferenceValue CreateMarshaler2(global::Microsoft.UI.Xaml.Media.Geometry obj) => MarshalInspectable<object>.CreateMarshaler2(obj, global::ABI.Microsoft.UI.Xaml.Media.IGeometryMethods.IID);
        public static IntPtr GetAbi(IObjectReference value) => value is null ? IntPtr.Zero : MarshalInterfaceHelper<object>.GetAbi(value);
        public static global::Microsoft.UI.Xaml.Media.Geometry FromAbi(IntPtr thisPtr) => global::Microsoft.UI.Xaml.Media.Geometry.FromAbi(thisPtr);
        public static IntPtr FromManaged(global::Microsoft.UI.Xaml.Media.Geometry obj) => obj is null ? IntPtr.Zero : CreateMarshaler2(obj).Detach();
        public static unsafe MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Media.Geometry>.MarshalerArray CreateMarshalerArray(global::Microsoft.UI.Xaml.Media.Geometry[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Media.Geometry>.CreateMarshalerArray2(array, (o) => CreateMarshaler2(o));
        public static (int length, IntPtr data) GetAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Media.Geometry>.GetAbiArray(box);
        public static unsafe global::Microsoft.UI.Xaml.Media.Geometry[] FromAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Media.Geometry>.FromAbiArray(box, FromAbi);
        public static void CopyAbiArray(global::Microsoft.UI.Xaml.Media.Geometry[] array, object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Media.Geometry>.CopyAbiArray(array, box, FromAbi);
        public static (int length, IntPtr data) FromManagedArray(global::Microsoft.UI.Xaml.Media.Geometry[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Media.Geometry>.FromManagedArray(array, (o) => FromManaged(o));
        public static void DisposeMarshaler(IObjectReference value) => MarshalInspectable<object>.DisposeMarshaler(value);
        public static void DisposeMarshalerArray(MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Media.Geometry>.MarshalerArray array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Media.Geometry>.DisposeMarshalerArray(array);
        public static void DisposeAbi(IntPtr abi) => MarshalInspectable<object>.DisposeAbi(abi);
        public static unsafe void DisposeAbiArray(object box) => MarshalInspectable<object>.DisposeAbiArray(box);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    internal sealed class GeometryRcwFactoryAttribute : global::WinRT.WinRTImplementationTypeRcwFactoryAttribute
    {
        public override object CreateInstance(global::WinRT.IInspectable inspectable)
            => new global::Microsoft.UI.Xaml.Media.Geometry(inspectable.ObjRef);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    public struct GeometryCollection
    {

        public static IObjectReference CreateMarshaler(global::Microsoft.UI.Xaml.Media.GeometryCollection obj) => obj is null ? null : MarshalInterface<global::System.Collections.Generic.IList<global::Microsoft.UI.Xaml.Media.Geometry>>.CreateMarshaler(obj);
        public static ObjectReferenceValue CreateMarshaler2(global::Microsoft.UI.Xaml.Media.GeometryCollection obj) => MarshalInterface<global::System.Collections.Generic.IList<global::Microsoft.UI.Xaml.Media.Geometry>>.CreateMarshaler2(obj, global::ABI.System.Collections.Generic.IListMethods<global::Microsoft.UI.Xaml.Media.Geometry>.IID);
        public static IntPtr GetAbi(IObjectReference value) => value is null ? IntPtr.Zero : MarshalInterfaceHelper<object>.GetAbi(value);
        public static global::Microsoft.UI.Xaml.Media.GeometryCollection FromAbi(IntPtr thisPtr) => global::Microsoft.UI.Xaml.Media.GeometryCollection.FromAbi(thisPtr);
        public static IntPtr FromManaged(global::Microsoft.UI.Xaml.Media.GeometryCollection obj) => obj is null ? IntPtr.Zero : CreateMarshaler2(obj).Detach();
        public static unsafe MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Media.GeometryCollection>.MarshalerArray CreateMarshalerArray(global::Microsoft.UI.Xaml.Media.GeometryCollection[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Media.GeometryCollection>.CreateMarshalerArray2(array, (o) => CreateMarshaler2(o));
        public static (int length, IntPtr data) GetAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Media.GeometryCollection>.GetAbiArray(box);
        public static unsafe global::Microsoft.UI.Xaml.Media.GeometryCollection[] FromAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Media.GeometryCollection>.FromAbiArray(box, FromAbi);
        public static void CopyAbiArray(global::Microsoft.UI.Xaml.Media.GeometryCollection[] array, object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Media.GeometryCollection>.CopyAbiArray(array, box, FromAbi);
        public static (int length, IntPtr data) FromManagedArray(global::Microsoft.UI.Xaml.Media.GeometryCollection[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Media.GeometryCollection>.FromManagedArray(array, (o) => FromManaged(o));
        public static void DisposeMarshaler(IObjectReference value) => MarshalInspectable<object>.DisposeMarshaler(value);
        public static void DisposeMarshalerArray(MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Media.GeometryCollection>.MarshalerArray array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Media.GeometryCollection>.DisposeMarshalerArray(array);
        public static void DisposeAbi(IntPtr abi) => MarshalInspectable<object>.DisposeAbi(abi);
        public static unsafe void DisposeAbiArray(object box) => MarshalInspectable<object>.DisposeAbiArray(box);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    internal sealed class GeometryCollectionRcwFactoryAttribute : global::WinRT.WinRTImplementationTypeRcwFactoryAttribute
    {
        public override object CreateInstance(global::WinRT.IInspectable inspectable)
            => new global::Microsoft.UI.Xaml.Media.GeometryCollection(inspectable.ObjRef);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    public struct GeometryGroup
    {

        public static IObjectReference CreateMarshaler(global::Microsoft.UI.Xaml.Media.GeometryGroup obj) => obj is null ? null : MarshalInspectable<global::Microsoft.UI.Xaml.Media.GeometryGroup>.CreateMarshaler<IUnknownVftbl>(obj, global::ABI.Microsoft.UI.Xaml.Media.IGeometryGroupMethods.IID);
        public static ObjectReferenceValue CreateMarshaler2(global::Microsoft.UI.Xaml.Media.GeometryGroup obj) => MarshalInspectable<object>.CreateMarshaler2(obj, global::ABI.Microsoft.UI.Xaml.Media.IGeometryGroupMethods.IID);
        public static IntPtr GetAbi(IObjectReference value) => value is null ? IntPtr.Zero : MarshalInterfaceHelper<object>.GetAbi(value);
        public static global::Microsoft.UI.Xaml.Media.GeometryGroup FromAbi(IntPtr thisPtr) => global::Microsoft.UI.Xaml.Media.GeometryGroup.FromAbi(thisPtr);
        public static IntPtr FromManaged(global::Microsoft.UI.Xaml.Media.GeometryGroup obj) => obj is null ? IntPtr.Zero : CreateMarshaler2(obj).Detach();
        public static unsafe MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Media.GeometryGroup>.MarshalerArray CreateMarshalerArray(global::Microsoft.UI.Xaml.Media.GeometryGroup[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Media.GeometryGroup>.CreateMarshalerArray2(array, (o) => CreateMarshaler2(o));
        public static (int length, IntPtr data) GetAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Media.GeometryGroup>.GetAbiArray(box);
        public static unsafe global::Microsoft.UI.Xaml.Media.GeometryGroup[] FromAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Media.GeometryGroup>.FromAbiArray(box, FromAbi);
        public static void CopyAbiArray(global::Microsoft.UI.Xaml.Media.GeometryGroup[] array, object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Media.GeometryGroup>.CopyAbiArray(array, box, FromAbi);
        public static (int length, IntPtr data) FromManagedArray(global::Microsoft.UI.Xaml.Media.GeometryGroup[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Media.GeometryGroup>.FromManagedArray(array, (o) => FromManaged(o));
        public static void DisposeMarshaler(IObjectReference value) => MarshalInspectable<object>.DisposeMarshaler(value);
        public static void DisposeMarshalerArray(MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Media.GeometryGroup>.MarshalerArray array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Media.GeometryGroup>.DisposeMarshalerArray(array);
        public static void DisposeAbi(IntPtr abi) => MarshalInspectable<object>.DisposeAbi(abi);
        public static unsafe void DisposeAbiArray(object box) => MarshalInspectable<object>.DisposeAbiArray(box);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    internal sealed class GeometryGroupRcwFactoryAttribute : global::WinRT.WinRTImplementationTypeRcwFactoryAttribute
    {
        public override object CreateInstance(global::WinRT.IInspectable inspectable)
            => new global::Microsoft.UI.Xaml.Media.GeometryGroup(inspectable.ObjRef);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    public struct GradientBrush
    {

        public static IObjectReference CreateMarshaler(global::Microsoft.UI.Xaml.Media.GradientBrush obj) => obj is null ? null : MarshalInspectable<global::Microsoft.UI.Xaml.Media.GradientBrush>.CreateMarshaler<IUnknownVftbl>(obj, global::ABI.Microsoft.UI.Xaml.Media.IGradientBrushMethods.IID);
        public static ObjectReferenceValue CreateMarshaler2(global::Microsoft.UI.Xaml.Media.GradientBrush obj) => MarshalInspectable<object>.CreateMarshaler2(obj, global::ABI.Microsoft.UI.Xaml.Media.IGradientBrushMethods.IID);
        public static IntPtr GetAbi(IObjectReference value) => value is null ? IntPtr.Zero : MarshalInterfaceHelper<object>.GetAbi(value);
        public static global::Microsoft.UI.Xaml.Media.GradientBrush FromAbi(IntPtr thisPtr) => global::Microsoft.UI.Xaml.Media.GradientBrush.FromAbi(thisPtr);
        public static IntPtr FromManaged(global::Microsoft.UI.Xaml.Media.GradientBrush obj) => obj is null ? IntPtr.Zero : CreateMarshaler2(obj).Detach();
        public static unsafe MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Media.GradientBrush>.MarshalerArray CreateMarshalerArray(global::Microsoft.UI.Xaml.Media.GradientBrush[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Media.GradientBrush>.CreateMarshalerArray2(array, (o) => CreateMarshaler2(o));
        public static (int length, IntPtr data) GetAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Media.GradientBrush>.GetAbiArray(box);
        public static unsafe global::Microsoft.UI.Xaml.Media.GradientBrush[] FromAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Media.GradientBrush>.FromAbiArray(box, FromAbi);
        public static void CopyAbiArray(global::Microsoft.UI.Xaml.Media.GradientBrush[] array, object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Media.GradientBrush>.CopyAbiArray(array, box, FromAbi);
        public static (int length, IntPtr data) FromManagedArray(global::Microsoft.UI.Xaml.Media.GradientBrush[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Media.GradientBrush>.FromManagedArray(array, (o) => FromManaged(o));
        public static void DisposeMarshaler(IObjectReference value) => MarshalInspectable<object>.DisposeMarshaler(value);
        public static void DisposeMarshalerArray(MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Media.GradientBrush>.MarshalerArray array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Media.GradientBrush>.DisposeMarshalerArray(array);
        public static void DisposeAbi(IntPtr abi) => MarshalInspectable<object>.DisposeAbi(abi);
        public static unsafe void DisposeAbiArray(object box) => MarshalInspectable<object>.DisposeAbiArray(box);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    internal sealed class GradientBrushRcwFactoryAttribute : global::WinRT.WinRTImplementationTypeRcwFactoryAttribute
    {
        public override object CreateInstance(global::WinRT.IInspectable inspectable)
            => new global::Microsoft.UI.Xaml.Media.GradientBrush(inspectable.ObjRef);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    public struct GradientStop
    {

        public static IObjectReference CreateMarshaler(global::Microsoft.UI.Xaml.Media.GradientStop obj) => obj is null ? null : MarshalInspectable<global::Microsoft.UI.Xaml.Media.GradientStop>.CreateMarshaler<IUnknownVftbl>(obj, global::ABI.Microsoft.UI.Xaml.Media.IGradientStopMethods.IID);
        public static ObjectReferenceValue CreateMarshaler2(global::Microsoft.UI.Xaml.Media.GradientStop obj) => MarshalInspectable<object>.CreateMarshaler2(obj, global::ABI.Microsoft.UI.Xaml.Media.IGradientStopMethods.IID);
        public static IntPtr GetAbi(IObjectReference value) => value is null ? IntPtr.Zero : MarshalInterfaceHelper<object>.GetAbi(value);
        public static global::Microsoft.UI.Xaml.Media.GradientStop FromAbi(IntPtr thisPtr) => global::Microsoft.UI.Xaml.Media.GradientStop.FromAbi(thisPtr);
        public static IntPtr FromManaged(global::Microsoft.UI.Xaml.Media.GradientStop obj) => obj is null ? IntPtr.Zero : CreateMarshaler2(obj).Detach();
        public static unsafe MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Media.GradientStop>.MarshalerArray CreateMarshalerArray(global::Microsoft.UI.Xaml.Media.GradientStop[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Media.GradientStop>.CreateMarshalerArray2(array, (o) => CreateMarshaler2(o));
        public static (int length, IntPtr data) GetAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Media.GradientStop>.GetAbiArray(box);
        public static unsafe global::Microsoft.UI.Xaml.Media.GradientStop[] FromAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Media.GradientStop>.FromAbiArray(box, FromAbi);
        public static void CopyAbiArray(global::Microsoft.UI.Xaml.Media.GradientStop[] array, object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Media.GradientStop>.CopyAbiArray(array, box, FromAbi);
        public static (int length, IntPtr data) FromManagedArray(global::Microsoft.UI.Xaml.Media.GradientStop[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Media.GradientStop>.FromManagedArray(array, (o) => FromManaged(o));
        public static void DisposeMarshaler(IObjectReference value) => MarshalInspectable<object>.DisposeMarshaler(value);
        public static void DisposeMarshalerArray(MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Media.GradientStop>.MarshalerArray array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Media.GradientStop>.DisposeMarshalerArray(array);
        public static void DisposeAbi(IntPtr abi) => MarshalInspectable<object>.DisposeAbi(abi);
        public static unsafe void DisposeAbiArray(object box) => MarshalInspectable<object>.DisposeAbiArray(box);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    internal sealed class GradientStopRcwFactoryAttribute : global::WinRT.WinRTImplementationTypeRcwFactoryAttribute
    {
        public override object CreateInstance(global::WinRT.IInspectable inspectable)
            => new global::Microsoft.UI.Xaml.Media.GradientStop(inspectable.ObjRef);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    public struct GradientStopCollection
    {

        public static IObjectReference CreateMarshaler(global::Microsoft.UI.Xaml.Media.GradientStopCollection obj) => obj is null ? null : MarshalInterface<global::System.Collections.Generic.IList<global::Microsoft.UI.Xaml.Media.GradientStop>>.CreateMarshaler(obj);
        public static ObjectReferenceValue CreateMarshaler2(global::Microsoft.UI.Xaml.Media.GradientStopCollection obj) => MarshalInterface<global::System.Collections.Generic.IList<global::Microsoft.UI.Xaml.Media.GradientStop>>.CreateMarshaler2(obj, global::ABI.System.Collections.Generic.IListMethods<global::Microsoft.UI.Xaml.Media.GradientStop>.IID);
        public static IntPtr GetAbi(IObjectReference value) => value is null ? IntPtr.Zero : MarshalInterfaceHelper<object>.GetAbi(value);
        public static global::Microsoft.UI.Xaml.Media.GradientStopCollection FromAbi(IntPtr thisPtr) => global::Microsoft.UI.Xaml.Media.GradientStopCollection.FromAbi(thisPtr);
        public static IntPtr FromManaged(global::Microsoft.UI.Xaml.Media.GradientStopCollection obj) => obj is null ? IntPtr.Zero : CreateMarshaler2(obj).Detach();
        public static unsafe MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Media.GradientStopCollection>.MarshalerArray CreateMarshalerArray(global::Microsoft.UI.Xaml.Media.GradientStopCollection[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Media.GradientStopCollection>.CreateMarshalerArray2(array, (o) => CreateMarshaler2(o));
        public static (int length, IntPtr data) GetAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Media.GradientStopCollection>.GetAbiArray(box);
        public static unsafe global::Microsoft.UI.Xaml.Media.GradientStopCollection[] FromAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Media.GradientStopCollection>.FromAbiArray(box, FromAbi);
        public static void CopyAbiArray(global::Microsoft.UI.Xaml.Media.GradientStopCollection[] array, object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Media.GradientStopCollection>.CopyAbiArray(array, box, FromAbi);
        public static (int length, IntPtr data) FromManagedArray(global::Microsoft.UI.Xaml.Media.GradientStopCollection[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Media.GradientStopCollection>.FromManagedArray(array, (o) => FromManaged(o));
        public static void DisposeMarshaler(IObjectReference value) => MarshalInspectable<object>.DisposeMarshaler(value);
        public static void DisposeMarshalerArray(MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Media.GradientStopCollection>.MarshalerArray array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Media.GradientStopCollection>.DisposeMarshalerArray(array);
        public static void DisposeAbi(IntPtr abi) => MarshalInspectable<object>.DisposeAbi(abi);
        public static unsafe void DisposeAbiArray(object box) => MarshalInspectable<object>.DisposeAbiArray(box);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    internal sealed class GradientStopCollectionRcwFactoryAttribute : global::WinRT.WinRTImplementationTypeRcwFactoryAttribute
    {
        public override object CreateInstance(global::WinRT.IInspectable inspectable)
            => new global::Microsoft.UI.Xaml.Media.GradientStopCollection(inspectable.ObjRef);
    }
    internal static class IAcrylicBrushMethods
    {

        internal static unsafe bool get_AlwaysUseFallback(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            byte __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, byte*, int>**)ThisPtr)[12](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval != 0;
        }
        internal static unsafe void set_AlwaysUseFallback(IObjectReference _obj, bool value)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, byte, int>**)ThisPtr)[13](ThisPtr, (byte)(value ? 1 : 0)));
            global::System.GC.KeepAlive(_obj);
        }

        internal static unsafe global::Windows.UI.Color get_TintColor(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::Windows.UI.Color __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::Windows.UI.Color*, int>**)ThisPtr)[6](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }
        internal static unsafe void set_TintColor(IObjectReference _obj, global::Windows.UI.Color value)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::Windows.UI.Color, int>**)ThisPtr)[7](ThisPtr, value));
            global::System.GC.KeepAlive(_obj);
        }

        internal static unsafe double get_TintOpacity(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            double __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, double*, int>**)ThisPtr)[8](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }
        internal static unsafe void set_TintOpacity(IObjectReference _obj, double value)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, double, int>**)ThisPtr)[9](ThisPtr, value));
            global::System.GC.KeepAlive(_obj);
        }

        internal static unsafe global::System.TimeSpan get_TintTransitionDuration(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::ABI.System.TimeSpan __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::ABI.System.TimeSpan*, int>**)ThisPtr)[10](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.System.TimeSpan.FromAbi(__retval);
            }
            finally
            {
                global::ABI.System.TimeSpan.DisposeAbi(__retval);
            }
        }
        internal static unsafe void set_TintTransitionDuration(IObjectReference _obj, global::System.TimeSpan value)
        {
            var ThisPtr = _obj.ThisPtr;

            global::ABI.System.TimeSpan.Marshaler __value = default;
            try
            {
                __value = global::ABI.System.TimeSpan.CreateMarshaler(value);
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::ABI.System.TimeSpan, int>**)ThisPtr)[11](ThisPtr, global::ABI.System.TimeSpan.GetAbi(__value)));
                global::System.GC.KeepAlive(_obj);
            }
            finally
            {
                global::ABI.System.TimeSpan.DisposeMarshaler(__value);
            }
        }



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0xA, 0x76, 0x8C, 0x3A, 0x1F, 0x94, 0xBC, 0x58, 0xA6, 0xD4, 0xAA, 0x7A, 0xD, 0xD1, 0xD0, 0x36 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("3A8C760A-941F-58BC-A6D4-AA7A0DD1D036")]
    internal interface IAcrylicBrush : global::Microsoft.UI.Xaml.Media.IAcrylicBrush
    {
    }
    internal static class IAcrylicBrush2Methods
    {

        internal static unsafe global::System.Nullable<double> get_TintLuminosityOpacity(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[6](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return MarshalInterface<global::System.Nullable<double>>.FromAbi(__retval);
            }
            finally
            {
                MarshalInterface<global::System.Nullable<double>>.DisposeAbi(__retval);
            }
        }
        internal static unsafe void set_TintLuminosityOpacity(IObjectReference _obj, global::System.Nullable<double> value)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __value = default;
            try
            {
                __value = MarshalInterface<global::System.Nullable<double>>.CreateMarshaler2(value, global::ABI.System.Nullable<double>.PIID);
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, int>**)ThisPtr)[7](ThisPtr, MarshalInspectable<object>.GetAbi(__value)));
                global::System.GC.KeepAlive(_obj);
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__value);
            }
        }



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0x70, 0xD5, 0xFA, 0x23, 0xED, 0x43, 0x73, 0x5A, 0x9D, 0xE7, 0xA3, 0x3, 0x55, 0x3D, 0x54, 0x14 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("23FAD570-43ED-5A73-9DE7-A303553D5414")]
    internal interface IAcrylicBrush2 : global::Microsoft.UI.Xaml.Media.IAcrylicBrush2
    {
    }
    internal static class IAcrylicBrushFactoryMethods
    {


        internal static unsafe global::Microsoft.UI.Xaml.Media.AcrylicBrush CreateInstance(IObjectReference _obj, object baseInterface, out object innerInterface)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __baseInterface = default;
            IntPtr __innerInterface = default;
            IntPtr __retval = default;
            try
            {
                __baseInterface = MarshalInspectable<object>.CreateMarshaler2(baseInterface);
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, IntPtr*, IntPtr*, int>**)ThisPtr)[6](ThisPtr, MarshalInspectable<object>.GetAbi(__baseInterface), &__innerInterface, &__retval));
                global::System.GC.KeepAlive(_obj);
                innerInterface = MarshalInspectable<object>.FromAbi(__innerInterface);
                return global::ABI.Microsoft.UI.Xaml.Media.AcrylicBrush.FromAbi(__retval);
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__baseInterface);
                MarshalInspectable<object>.DisposeAbi(__innerInterface);
                global::ABI.Microsoft.UI.Xaml.Media.AcrylicBrush.DisposeAbi(__retval);
            }
        }


        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0x53, 0x33, 0x17, 0x80, 0x1D, 0x61, 0x2, 0x5A, 0x88, 0x64, 0x1A, 0xAA, 0x27, 0x9D, 0xFF, 0x1C };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("80173353-611D-5A02-8864-1AAA279DFF1C")]
    internal interface IAcrylicBrushFactory : global::Microsoft.UI.Xaml.Media.IAcrylicBrushFactory
    {
    }
    internal static class IAcrylicBrushStaticsMethods
    {

        internal static unsafe global::Microsoft.UI.Xaml.DependencyProperty get_AlwaysUseFallbackProperty(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[9](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Xaml.DependencyProperty.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.UI.Xaml.DependencyProperty.DisposeAbi(__retval);
            }
        }

        internal static unsafe global::Microsoft.UI.Xaml.DependencyProperty get_TintColorProperty(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[6](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Xaml.DependencyProperty.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.UI.Xaml.DependencyProperty.DisposeAbi(__retval);
            }
        }

        internal static unsafe global::Microsoft.UI.Xaml.DependencyProperty get_TintOpacityProperty(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[7](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Xaml.DependencyProperty.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.UI.Xaml.DependencyProperty.DisposeAbi(__retval);
            }
        }

        internal static unsafe global::Microsoft.UI.Xaml.DependencyProperty get_TintTransitionDurationProperty(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[8](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Xaml.DependencyProperty.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.UI.Xaml.DependencyProperty.DisposeAbi(__retval);
            }
        }



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0x6B, 0x36, 0x9D, 0x9D, 0xA3, 0x0, 0x3E, 0x5F, 0x98, 0xB8, 0x1D, 0xF7, 0xFE, 0xC1, 0x82, 0x8C };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("9D9D366B-00A3-5F3E-98B8-1DF7FEC1828C")]
    internal interface IAcrylicBrushStatics : global::Microsoft.UI.Xaml.Media.IAcrylicBrushStatics
    {
    }
    internal static class IAcrylicBrushStatics2Methods
    {

        internal static unsafe global::Microsoft.UI.Xaml.DependencyProperty get_TintLuminosityOpacityProperty(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[6](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Xaml.DependencyProperty.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.UI.Xaml.DependencyProperty.DisposeAbi(__retval);
            }
        }



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0xBD, 0xB0, 0x3E, 0x6E, 0xA1, 0x20, 0xEA, 0x52, 0xAE, 0xDE, 0x47, 0x80, 0x61, 0x1, 0x22, 0x79 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("6E3EB0BD-20A1-52EA-AEDE-478061012279")]
    internal interface IAcrylicBrushStatics2 : global::Microsoft.UI.Xaml.Media.IAcrylicBrushStatics2
    {
    }
    internal static class IArcSegmentMethods
    {

        internal static unsafe bool get_IsLargeArc(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            byte __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, byte*, int>**)ThisPtr)[12](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval != 0;
        }
        internal static unsafe void set_IsLargeArc(IObjectReference _obj, bool value)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, byte, int>**)ThisPtr)[13](ThisPtr, (byte)(value ? 1 : 0)));
            global::System.GC.KeepAlive(_obj);
        }

        internal static unsafe global::Windows.Foundation.Point get_Point(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::Windows.Foundation.Point __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::Windows.Foundation.Point*, int>**)ThisPtr)[6](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }
        internal static unsafe void set_Point(IObjectReference _obj, global::Windows.Foundation.Point value)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::Windows.Foundation.Point, int>**)ThisPtr)[7](ThisPtr, value));
            global::System.GC.KeepAlive(_obj);
        }

        internal static unsafe double get_RotationAngle(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            double __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, double*, int>**)ThisPtr)[10](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }
        internal static unsafe void set_RotationAngle(IObjectReference _obj, double value)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, double, int>**)ThisPtr)[11](ThisPtr, value));
            global::System.GC.KeepAlive(_obj);
        }

        internal static unsafe global::Windows.Foundation.Size get_Size(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::Windows.Foundation.Size __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::Windows.Foundation.Size*, int>**)ThisPtr)[8](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }
        internal static unsafe void set_Size(IObjectReference _obj, global::Windows.Foundation.Size value)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::Windows.Foundation.Size, int>**)ThisPtr)[9](ThisPtr, value));
            global::System.GC.KeepAlive(_obj);
        }

        internal static unsafe global::Microsoft.UI.Xaml.Media.SweepDirection get_SweepDirection(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::Microsoft.UI.Xaml.Media.SweepDirection __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::Microsoft.UI.Xaml.Media.SweepDirection*, int>**)ThisPtr)[14](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }
        internal static unsafe void set_SweepDirection(IObjectReference _obj, global::Microsoft.UI.Xaml.Media.SweepDirection value)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::Microsoft.UI.Xaml.Media.SweepDirection, int>**)ThisPtr)[15](ThisPtr, value));
            global::System.GC.KeepAlive(_obj);
        }



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0x2B, 0xE0, 0x7C, 0x6B, 0xBE, 0x87, 0xCB, 0x5A, 0x9D, 0x3B, 0xC9, 0x96, 0x4C, 0x69, 0x62, 0xD0 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("6B7CE02B-87BE-5ACB-9D3B-C9964C6962D0")]
    internal interface IArcSegment : global::Microsoft.UI.Xaml.Media.IArcSegment
    {
    }
    internal static class IArcSegmentStaticsMethods
    {

        internal static unsafe global::Microsoft.UI.Xaml.DependencyProperty get_IsLargeArcProperty(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[9](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Xaml.DependencyProperty.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.UI.Xaml.DependencyProperty.DisposeAbi(__retval);
            }
        }

        internal static unsafe global::Microsoft.UI.Xaml.DependencyProperty get_PointProperty(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[6](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Xaml.DependencyProperty.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.UI.Xaml.DependencyProperty.DisposeAbi(__retval);
            }
        }

        internal static unsafe global::Microsoft.UI.Xaml.DependencyProperty get_RotationAngleProperty(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[8](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Xaml.DependencyProperty.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.UI.Xaml.DependencyProperty.DisposeAbi(__retval);
            }
        }

        internal static unsafe global::Microsoft.UI.Xaml.DependencyProperty get_SizeProperty(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[7](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Xaml.DependencyProperty.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.UI.Xaml.DependencyProperty.DisposeAbi(__retval);
            }
        }

        internal static unsafe global::Microsoft.UI.Xaml.DependencyProperty get_SweepDirectionProperty(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[10](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Xaml.DependencyProperty.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.UI.Xaml.DependencyProperty.DisposeAbi(__retval);
            }
        }



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0xB3, 0xCC, 0xA7, 0x5B, 0xC7, 0x5B, 0x38, 0x50, 0x99, 0xC5, 0x93, 0xDC, 0x73, 0x2, 0x30, 0xCF };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("5BA7CCB3-5BC7-5038-99C5-93DC730230CF")]
    internal interface IArcSegmentStatics : global::Microsoft.UI.Xaml.Media.IArcSegmentStatics
    {
    }
    internal static class IBezierSegmentMethods
    {

        internal static unsafe global::Windows.Foundation.Point get_Point1(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::Windows.Foundation.Point __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::Windows.Foundation.Point*, int>**)ThisPtr)[6](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }
        internal static unsafe void set_Point1(IObjectReference _obj, global::Windows.Foundation.Point value)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::Windows.Foundation.Point, int>**)ThisPtr)[7](ThisPtr, value));
            global::System.GC.KeepAlive(_obj);
        }

        internal static unsafe global::Windows.Foundation.Point get_Point2(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::Windows.Foundation.Point __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::Windows.Foundation.Point*, int>**)ThisPtr)[8](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }
        internal static unsafe void set_Point2(IObjectReference _obj, global::Windows.Foundation.Point value)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::Windows.Foundation.Point, int>**)ThisPtr)[9](ThisPtr, value));
            global::System.GC.KeepAlive(_obj);
        }

        internal static unsafe global::Windows.Foundation.Point get_Point3(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::Windows.Foundation.Point __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::Windows.Foundation.Point*, int>**)ThisPtr)[10](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }
        internal static unsafe void set_Point3(IObjectReference _obj, global::Windows.Foundation.Point value)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::Windows.Foundation.Point, int>**)ThisPtr)[11](ThisPtr, value));
            global::System.GC.KeepAlive(_obj);
        }



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0xDE, 0xBA, 0x36, 0xF, 0x2E, 0x89, 0xFE, 0x51, 0xB9, 0x4A, 0x38, 0x75, 0xE8, 0x6F, 0xEA, 0xAE };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("0F36BADE-892E-51FE-B94A-3875E86FEAAE")]
    internal interface IBezierSegment : global::Microsoft.UI.Xaml.Media.IBezierSegment
    {
    }
    internal static class IBezierSegmentStaticsMethods
    {

        internal static unsafe global::Microsoft.UI.Xaml.DependencyProperty get_Point1Property(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[6](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Xaml.DependencyProperty.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.UI.Xaml.DependencyProperty.DisposeAbi(__retval);
            }
        }

        internal static unsafe global::Microsoft.UI.Xaml.DependencyProperty get_Point2Property(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[7](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Xaml.DependencyProperty.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.UI.Xaml.DependencyProperty.DisposeAbi(__retval);
            }
        }

        internal static unsafe global::Microsoft.UI.Xaml.DependencyProperty get_Point3Property(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[8](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Xaml.DependencyProperty.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.UI.Xaml.DependencyProperty.DisposeAbi(__retval);
            }
        }



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0x5C, 0x4D, 0xE7, 0x98, 0x7A, 0xC9, 0xB0, 0x50, 0xAE, 0xE, 0xD4, 0x36, 0xDC, 0x9D, 0xF1, 0x6D };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("98E74D5C-C97A-50B0-AE0E-D436DC9DF16D")]
    internal interface IBezierSegmentStatics : global::Microsoft.UI.Xaml.Media.IBezierSegmentStatics
    {
    }
    internal static class IBitmapCacheMethods
    {



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0x83, 0x89, 0x3A, 0x4B, 0xA2, 0x27, 0x2A, 0x59, 0xBD, 0xA4, 0x27, 0x4, 0x31, 0xEA, 0xE0, 0x38 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("4B3A8983-27A2-592A-BDA4-270431EAE038")]
    internal interface IBitmapCache : global::Microsoft.UI.Xaml.Media.IBitmapCache
    {
    }
    internal static class IBrushMethods
    {

        internal static unsafe double get_Opacity(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            double __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, double*, int>**)ThisPtr)[6](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }
        internal static unsafe void set_Opacity(IObjectReference _obj, double value)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, double, int>**)ThisPtr)[7](ThisPtr, value));
            global::System.GC.KeepAlive(_obj);
        }

        internal static unsafe global::Microsoft.UI.Xaml.Media.Transform get_RelativeTransform(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[10](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Xaml.Media.Transform.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.UI.Xaml.Media.Transform.DisposeAbi(__retval);
            }
        }
        internal static unsafe void set_RelativeTransform(IObjectReference _obj, global::Microsoft.UI.Xaml.Media.Transform value)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __value = default;
            try
            {
                __value = global::ABI.Microsoft.UI.Xaml.Media.Transform.CreateMarshaler2(value);
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, int>**)ThisPtr)[11](ThisPtr, MarshalInspectable<object>.GetAbi(__value)));
                global::System.GC.KeepAlive(_obj);
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__value);
            }
        }

        internal static unsafe global::Microsoft.UI.Xaml.Media.Transform get_Transform(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[8](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Xaml.Media.Transform.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.UI.Xaml.Media.Transform.DisposeAbi(__retval);
            }
        }
        internal static unsafe void set_Transform(IObjectReference _obj, global::Microsoft.UI.Xaml.Media.Transform value)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __value = default;
            try
            {
                __value = global::ABI.Microsoft.UI.Xaml.Media.Transform.CreateMarshaler2(value);
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, int>**)ThisPtr)[9](ThisPtr, MarshalInspectable<object>.GetAbi(__value)));
                global::System.GC.KeepAlive(_obj);
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__value);
            }
        }



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0x83, 0xCB, 0xE3, 0x2D, 0x29, 0x13, 0x79, 0x56, 0x88, 0xF8, 0xC8, 0x22, 0xBC, 0x54, 0x42, 0xCB };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("2DE3CB83-1329-5679-88F8-C822BC5442CB")]
    internal interface IBrush : global::Microsoft.UI.Xaml.Media.IBrush
    {
    }
    internal static class IBrushFactoryMethods
    {


        internal static unsafe global::Microsoft.UI.Xaml.Media.Brush CreateInstance(IObjectReference _obj, object baseInterface, out object innerInterface)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __baseInterface = default;
            IntPtr __innerInterface = default;
            IntPtr __retval = default;
            try
            {
                __baseInterface = MarshalInspectable<object>.CreateMarshaler2(baseInterface);
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, IntPtr*, IntPtr*, int>**)ThisPtr)[6](ThisPtr, MarshalInspectable<object>.GetAbi(__baseInterface), &__innerInterface, &__retval));
                global::System.GC.KeepAlive(_obj);
                innerInterface = MarshalInspectable<object>.FromAbi(__innerInterface);
                return global::ABI.Microsoft.UI.Xaml.Media.Brush.FromAbi(__retval);
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__baseInterface);
                MarshalInspectable<object>.DisposeAbi(__innerInterface);
                global::ABI.Microsoft.UI.Xaml.Media.Brush.DisposeAbi(__retval);
            }
        }


        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0x17, 0x87, 0x25, 0xB5, 0x49, 0x6C, 0xA5, 0x5B, 0x87, 0xFD, 0x35, 0xDF, 0x38, 0x26, 0x47, 0xA5 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("B5258717-6C49-5BA5-87FD-35DF382647A5")]
    internal interface IBrushFactory : global::Microsoft.UI.Xaml.Media.IBrushFactory
    {
    }
    public static class IBrushOverridesMethods
    {


        internal static unsafe void PopulatePropertyInfoOverride(IObjectReference _obj, string propertyName, global::Microsoft.UI.Composition.AnimationPropertyInfo animationPropertyInfo)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __animationPropertyInfo = default;
            try
            {
                __animationPropertyInfo = global::ABI.Microsoft.UI.Composition.AnimationPropertyInfo.CreateMarshaler2(animationPropertyInfo);
                MarshalString.Pinnable __propertyName = new(propertyName);
                fixed(void* ___propertyName = __propertyName)
                {
                    global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, IntPtr, int>**)ThisPtr)[6](ThisPtr, MarshalString.GetAbi(ref __propertyName), MarshalInspectable<object>.GetAbi(__animationPropertyInfo)));
                    global::System.GC.KeepAlive(_obj);
                }
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__animationPropertyInfo);
            }
        }


        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0x94, 0x83, 0xB0, 0xB6, 0xCF, 0xBA, 0xDB, 0x53, 0x9A, 0xC7, 0xBE, 0x1C, 0x69, 0x3E, 0x35, 0x13 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

        public static global::System.IntPtr AbiToProjectionVftablePtr => IBrushOverrides.AbiToProjectionVftablePtr;

    }

    [Guid("B6B08394-BACF-53DB-9AC7-BE1C693E3513")]
    internal unsafe interface IBrushOverrides : global::Microsoft.UI.Xaml.Media.IBrushOverrides
    {

        public static readonly IntPtr AbiToProjectionVftablePtr;
        static unsafe IBrushOverrides()
        {
            AbiToProjectionVftablePtr = ComWrappersSupport.AllocateVtableMemory(typeof(IBrushOverrides), sizeof(IInspectable.Vftbl) + sizeof(IntPtr) * 1);
            *(IInspectable.Vftbl*)AbiToProjectionVftablePtr = IInspectable.Vftbl.AbiToProjectionVftable;
            ((delegate* unmanaged[Stdcall]<IntPtr, IntPtr, IntPtr, int>*)AbiToProjectionVftablePtr)[6] = &Do_Abi_PopulatePropertyInfoOverride_0;
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvStdcall) })]
        private static unsafe int Do_Abi_PopulatePropertyInfoOverride_0(IntPtr thisPtr, IntPtr propertyName, IntPtr animationPropertyInfo)
        {



            try
            {
                global::WinRT.ComWrappersSupport.FindObject<global::Microsoft.UI.Xaml.Media.IBrushOverrides>(thisPtr).PopulatePropertyInfoOverride(MarshalString.FromAbi(propertyName), global::ABI.Microsoft.UI.Composition.AnimationPropertyInfo.FromAbi(animationPropertyInfo));

            }
            catch (Exception __exception__)
            {
                global::WinRT.ExceptionHelpers.SetErrorInfo(__exception__);
                return global::WinRT.ExceptionHelpers.GetHRForException(__exception__);
            }
            return 0;
        }
    }

    internal static class IBrushStaticsMethods
    {

        internal static unsafe global::Microsoft.UI.Xaml.DependencyProperty get_OpacityProperty(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[6](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Xaml.DependencyProperty.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.UI.Xaml.DependencyProperty.DisposeAbi(__retval);
            }
        }

        internal static unsafe global::Microsoft.UI.Xaml.DependencyProperty get_RelativeTransformProperty(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[8](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Xaml.DependencyProperty.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.UI.Xaml.DependencyProperty.DisposeAbi(__retval);
            }
        }

        internal static unsafe global::Microsoft.UI.Xaml.DependencyProperty get_TransformProperty(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[7](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Xaml.DependencyProperty.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.UI.Xaml.DependencyProperty.DisposeAbi(__retval);
            }
        }



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0x50, 0x4F, 0x85, 0x5B, 0x18, 0xF8, 0x1, 0x5F, 0x91, 0xB0, 0x28, 0x13, 0x2D, 0x3F, 0x59, 0x57 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("5B854F50-F818-5F01-91B0-28132D3F5957")]
    internal interface IBrushStatics : global::Microsoft.UI.Xaml.Media.IBrushStatics
    {
    }
    internal static class ICacheModeMethods
    {



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0xCB, 0xA1, 0xF1, 0x2F, 0x48, 0xF, 0xFD, 0x53, 0xB1, 0xDE, 0xE2, 0x22, 0x3D, 0xFB, 0x2F, 0xF6 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("2FF1A1CB-0F48-53FD-B1DE-E2223DFB2FF6")]
    internal interface ICacheMode : global::Microsoft.UI.Xaml.Media.ICacheMode
    {
    }
    internal static class ICacheModeFactoryMethods
    {


        internal static unsafe global::Microsoft.UI.Xaml.Media.CacheMode CreateInstance(IObjectReference _obj, object baseInterface, out object innerInterface)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __baseInterface = default;
            IntPtr __innerInterface = default;
            IntPtr __retval = default;
            try
            {
                __baseInterface = MarshalInspectable<object>.CreateMarshaler2(baseInterface);
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, IntPtr*, IntPtr*, int>**)ThisPtr)[6](ThisPtr, MarshalInspectable<object>.GetAbi(__baseInterface), &__innerInterface, &__retval));
                global::System.GC.KeepAlive(_obj);
                innerInterface = MarshalInspectable<object>.FromAbi(__innerInterface);
                return global::ABI.Microsoft.UI.Xaml.Media.CacheMode.FromAbi(__retval);
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__baseInterface);
                MarshalInspectable<object>.DisposeAbi(__innerInterface);
                global::ABI.Microsoft.UI.Xaml.Media.CacheMode.DisposeAbi(__retval);
            }
        }


        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0x1E, 0x81, 0x57, 0xE2, 0xC5, 0xDC, 0xD8, 0x51, 0x82, 0x9A, 0x3E, 0x94, 0x0, 0x19, 0x8A, 0x41 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("E257811E-DCC5-51D8-829A-3E9400198A41")]
    internal interface ICacheModeFactory : global::Microsoft.UI.Xaml.Media.ICacheModeFactory
    {
    }
    internal static class ICompositeTransformMethods
    {

        internal static unsafe double get_CenterX(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            double __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, double*, int>**)ThisPtr)[6](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }
        internal static unsafe void set_CenterX(IObjectReference _obj, double value)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, double, int>**)ThisPtr)[7](ThisPtr, value));
            global::System.GC.KeepAlive(_obj);
        }

        internal static unsafe double get_CenterY(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            double __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, double*, int>**)ThisPtr)[8](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }
        internal static unsafe void set_CenterY(IObjectReference _obj, double value)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, double, int>**)ThisPtr)[9](ThisPtr, value));
            global::System.GC.KeepAlive(_obj);
        }

        internal static unsafe double get_Rotation(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            double __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, double*, int>**)ThisPtr)[18](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }
        internal static unsafe void set_Rotation(IObjectReference _obj, double value)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, double, int>**)ThisPtr)[19](ThisPtr, value));
            global::System.GC.KeepAlive(_obj);
        }

        internal static unsafe double get_ScaleX(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            double __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, double*, int>**)ThisPtr)[10](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }
        internal static unsafe void set_ScaleX(IObjectReference _obj, double value)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, double, int>**)ThisPtr)[11](ThisPtr, value));
            global::System.GC.KeepAlive(_obj);
        }

        internal static unsafe double get_ScaleY(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            double __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, double*, int>**)ThisPtr)[12](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }
        internal static unsafe void set_ScaleY(IObjectReference _obj, double value)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, double, int>**)ThisPtr)[13](ThisPtr, value));
            global::System.GC.KeepAlive(_obj);
        }

        internal static unsafe double get_SkewX(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            double __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, double*, int>**)ThisPtr)[14](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }
        internal static unsafe void set_SkewX(IObjectReference _obj, double value)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, double, int>**)ThisPtr)[15](ThisPtr, value));
            global::System.GC.KeepAlive(_obj);
        }

        internal static unsafe double get_SkewY(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            double __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, double*, int>**)ThisPtr)[16](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }
        internal static unsafe void set_SkewY(IObjectReference _obj, double value)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, double, int>**)ThisPtr)[17](ThisPtr, value));
            global::System.GC.KeepAlive(_obj);
        }

        internal static unsafe double get_TranslateX(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            double __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, double*, int>**)ThisPtr)[20](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }
        internal static unsafe void set_TranslateX(IObjectReference _obj, double value)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, double, int>**)ThisPtr)[21](ThisPtr, value));
            global::System.GC.KeepAlive(_obj);
        }

        internal static unsafe double get_TranslateY(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            double __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, double*, int>**)ThisPtr)[22](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }
        internal static unsafe void set_TranslateY(IObjectReference _obj, double value)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, double, int>**)ThisPtr)[23](ThisPtr, value));
            global::System.GC.KeepAlive(_obj);
        }



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0xF3, 0xF8, 0xC5, 0x55, 0xE4, 0x20, 0x80, 0x5B, 0xA0, 0x46, 0xCE, 0x4D, 0xF, 0x62, 0xF2, 0xFE };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("55C5F8F3-20E4-5B80-A046-CE4D0F62F2FE")]
    internal interface ICompositeTransform : global::Microsoft.UI.Xaml.Media.ICompositeTransform
    {
    }
    internal static class ICompositeTransformStaticsMethods
    {

        internal static unsafe global::Microsoft.UI.Xaml.DependencyProperty get_CenterXProperty(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[6](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Xaml.DependencyProperty.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.UI.Xaml.DependencyProperty.DisposeAbi(__retval);
            }
        }

        internal static unsafe global::Microsoft.UI.Xaml.DependencyProperty get_CenterYProperty(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[7](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Xaml.DependencyProperty.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.UI.Xaml.DependencyProperty.DisposeAbi(__retval);
            }
        }

        internal static unsafe global::Microsoft.UI.Xaml.DependencyProperty get_RotationProperty(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[12](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Xaml.DependencyProperty.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.UI.Xaml.DependencyProperty.DisposeAbi(__retval);
            }
        }

        internal static unsafe global::Microsoft.UI.Xaml.DependencyProperty get_ScaleXProperty(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[8](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Xaml.DependencyProperty.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.UI.Xaml.DependencyProperty.DisposeAbi(__retval);
            }
        }

        internal static unsafe global::Microsoft.UI.Xaml.DependencyProperty get_ScaleYProperty(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[9](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Xaml.DependencyProperty.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.UI.Xaml.DependencyProperty.DisposeAbi(__retval);
            }
        }

        internal static unsafe global::Microsoft.UI.Xaml.DependencyProperty get_SkewXProperty(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[10](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Xaml.DependencyProperty.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.UI.Xaml.DependencyProperty.DisposeAbi(__retval);
            }
        }

        internal static unsafe global::Microsoft.UI.Xaml.DependencyProperty get_SkewYProperty(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[11](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Xaml.DependencyProperty.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.UI.Xaml.DependencyProperty.DisposeAbi(__retval);
            }
        }

        internal static unsafe global::Microsoft.UI.Xaml.DependencyProperty get_TranslateXProperty(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[13](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Xaml.DependencyProperty.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.UI.Xaml.DependencyProperty.DisposeAbi(__retval);
            }
        }

        internal static unsafe global::Microsoft.UI.Xaml.DependencyProperty get_TranslateYProperty(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[14](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Xaml.DependencyProperty.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.UI.Xaml.DependencyProperty.DisposeAbi(__retval);
            }
        }



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0x5B, 0x38, 0x1, 0x77, 0xAB, 0x8E, 0x71, 0x50, 0xBF, 0xA5, 0xB4, 0x53, 0xE1, 0xE5, 0x2B, 0x43 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("7701385B-8EAB-5071-BFA5-B453E1E52B43")]
    internal interface ICompositeTransformStatics : global::Microsoft.UI.Xaml.Media.ICompositeTransformStatics
    {
    }
    internal static class ICompositionTargetMethods
    {



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0x24, 0x83, 0x93, 0x7D, 0xAD, 0xE3, 0x7C, 0x59, 0x93, 0xF6, 0x52, 0x7, 0x25, 0x41, 0xE, 0x68 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("7D938324-E3AD-597C-93F6-520725410E68")]
    internal interface ICompositionTarget : global::Microsoft.UI.Xaml.Media.ICompositionTarget
    {
    }
    internal static class ICompositionTargetStaticsMethods
    {


        internal static unsafe global::Microsoft.UI.Composition.Compositor GetCompositorForCurrentThread(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[12](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Composition.Compositor.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.UI.Composition.Compositor.DisposeAbi(__retval);
            }
        }

        private volatile static global::System.Runtime.CompilerServices.ConditionalWeakTable<object, global::ABI.WinRT.Interop.EventSource<global::System.EventHandler<global::Microsoft.UI.Xaml.Media.RenderedEventArgs>>> _Rendered_;
        private static global::System.Runtime.CompilerServices.ConditionalWeakTable<object, global::ABI.WinRT.Interop.EventSource<global::System.EventHandler<global::Microsoft.UI.Xaml.Media.RenderedEventArgs>>> MakeRenderedTable()
        {
            _ = global::WinRT.GenericTypeInstantiations.Windows_Foundation_EventHandler_1_Microsoft_UI_Xaml_Media_RenderedEventArgs.EnsureInitialized();
            global::System.Threading.Interlocked.CompareExchange(ref _Rendered_, new(), null);
            return _Rendered_;
        }
        private static global::System.Runtime.CompilerServices.ConditionalWeakTable<object, global::ABI.WinRT.Interop.EventSource<global::System.EventHandler<global::Microsoft.UI.Xaml.Media.RenderedEventArgs>>> _Rendered => _Rendered_ ?? MakeRenderedTable();



        internal static unsafe global::ABI.WinRT.Interop.EventSource<global::System.EventHandler<global::Microsoft.UI.Xaml.Media.RenderedEventArgs>> Get_Rendered2(IObjectReference _obj, object _thisObj)
        {
            return _Rendered.GetValue(_thisObj, (key) =>
            {

                var ThisPtr = _obj.ThisPtr;

                return  new global::ABI.WinRT.Interop.EventHandlerEventSource<global::Microsoft.UI.Xaml.Media.RenderedEventArgs>(_obj,
                (*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, global::WinRT.EventRegistrationToken*, int>**)ThisPtr)[8],
                (*(delegate* unmanaged[Stdcall]<IntPtr, global::WinRT.EventRegistrationToken, int>**)ThisPtr)[9],
                0);
            });
        }

        private volatile static global::System.Runtime.CompilerServices.ConditionalWeakTable<object, global::ABI.WinRT.Interop.EventSource<global::System.EventHandler<object>>> _Rendering_;
        private static global::System.Runtime.CompilerServices.ConditionalWeakTable<object, global::ABI.WinRT.Interop.EventSource<global::System.EventHandler<object>>> MakeRenderingTable()
        {
            _ = global::WinRT.GenericTypeInstantiations.Windows_Foundation_EventHandler_1_object.EnsureInitialized();
            global::System.Threading.Interlocked.CompareExchange(ref _Rendering_, new(), null);
            return _Rendering_;
        }
        private static global::System.Runtime.CompilerServices.ConditionalWeakTable<object, global::ABI.WinRT.Interop.EventSource<global::System.EventHandler<object>>> _Rendering => _Rendering_ ?? MakeRenderingTable();



        internal static unsafe global::ABI.WinRT.Interop.EventSource<global::System.EventHandler<object>> Get_Rendering2(IObjectReference _obj, object _thisObj)
        {
            return _Rendering.GetValue(_thisObj, (key) =>
            {

                var ThisPtr = _obj.ThisPtr;

                return  new global::ABI.WinRT.Interop.EventHandlerEventSource<object>(_obj,
                (*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, global::WinRT.EventRegistrationToken*, int>**)ThisPtr)[6],
                (*(delegate* unmanaged[Stdcall]<IntPtr, global::WinRT.EventRegistrationToken, int>**)ThisPtr)[7],
                1);
            });
        }

        private volatile static global::System.Runtime.CompilerServices.ConditionalWeakTable<object, global::ABI.WinRT.Interop.EventSource<global::System.EventHandler<object>>> _SurfaceContentsLost_;
        private static global::System.Runtime.CompilerServices.ConditionalWeakTable<object, global::ABI.WinRT.Interop.EventSource<global::System.EventHandler<object>>> MakeSurfaceContentsLostTable()
        {
            _ = global::WinRT.GenericTypeInstantiations.Windows_Foundation_EventHandler_1_object.EnsureInitialized();
            global::System.Threading.Interlocked.CompareExchange(ref _SurfaceContentsLost_, new(), null);
            return _SurfaceContentsLost_;
        }
        private static global::System.Runtime.CompilerServices.ConditionalWeakTable<object, global::ABI.WinRT.Interop.EventSource<global::System.EventHandler<object>>> _SurfaceContentsLost => _SurfaceContentsLost_ ?? MakeSurfaceContentsLostTable();



        internal static unsafe global::ABI.WinRT.Interop.EventSource<global::System.EventHandler<object>> Get_SurfaceContentsLost2(IObjectReference _obj, object _thisObj)
        {
            return _SurfaceContentsLost.GetValue(_thisObj, (key) =>
            {

                var ThisPtr = _obj.ThisPtr;

                return  new global::ABI.WinRT.Interop.EventHandlerEventSource<object>(_obj,
                (*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, global::WinRT.EventRegistrationToken*, int>**)ThisPtr)[10],
                (*(delegate* unmanaged[Stdcall]<IntPtr, global::WinRT.EventRegistrationToken, int>**)ThisPtr)[11],
                2);
            });
        }


        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0x6F, 0xBE, 0xA4, 0x12, 0xB1, 0x6D, 0x65, 0x51, 0xB6, 0x22, 0xD5, 0x7A, 0xB7, 0x82, 0x74, 0x5B };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("12A4BE6F-6DB1-5165-B622-D57AB782745B")]
    internal interface ICompositionTargetStatics : global::Microsoft.UI.Xaml.Media.ICompositionTargetStatics
    {
    }
    internal static class IDesktopAcrylicBackdropMethods
    {



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0x5B, 0x91, 0xD9, 0xBF, 0xA6, 0x82, 0xF6, 0x5D, 0xAF, 0xF0, 0xA4, 0x82, 0x4D, 0xDC, 0x11, 0x43 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("BFD9915B-82A6-5DF6-AFF0-A4824DDC1143")]
    internal interface IDesktopAcrylicBackdrop : global::Microsoft.UI.Xaml.Media.IDesktopAcrylicBackdrop
    {
    }
    internal static class IDesktopAcrylicBackdropFactoryMethods
    {


        internal static unsafe global::Microsoft.UI.Xaml.Media.DesktopAcrylicBackdrop CreateInstance(IObjectReference _obj, object baseInterface, out object innerInterface)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __baseInterface = default;
            IntPtr __innerInterface = default;
            IntPtr __retval = default;
            try
            {
                __baseInterface = MarshalInspectable<object>.CreateMarshaler2(baseInterface);
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, IntPtr*, IntPtr*, int>**)ThisPtr)[6](ThisPtr, MarshalInspectable<object>.GetAbi(__baseInterface), &__innerInterface, &__retval));
                global::System.GC.KeepAlive(_obj);
                innerInterface = MarshalInspectable<object>.FromAbi(__innerInterface);
                return global::ABI.Microsoft.UI.Xaml.Media.DesktopAcrylicBackdrop.FromAbi(__retval);
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__baseInterface);
                MarshalInspectable<object>.DisposeAbi(__innerInterface);
                global::ABI.Microsoft.UI.Xaml.Media.DesktopAcrylicBackdrop.DisposeAbi(__retval);
            }
        }


        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0x6D, 0x2E, 0x92, 0x0, 0x51, 0xAE, 0x4A, 0x56, 0xBC, 0xE2, 0x19, 0x73, 0xD5, 0xE4, 0x63, 0xDD };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("00922E6D-AE51-564A-BCE2-1973D5E463DD")]
    internal interface IDesktopAcrylicBackdropFactory : global::Microsoft.UI.Xaml.Media.IDesktopAcrylicBackdropFactory
    {
    }
    internal static class IEllipseGeometryMethods
    {

        internal static unsafe global::Windows.Foundation.Point get_Center(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::Windows.Foundation.Point __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::Windows.Foundation.Point*, int>**)ThisPtr)[6](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }
        internal static unsafe void set_Center(IObjectReference _obj, global::Windows.Foundation.Point value)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::Windows.Foundation.Point, int>**)ThisPtr)[7](ThisPtr, value));
            global::System.GC.KeepAlive(_obj);
        }

        internal static unsafe double get_RadiusX(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            double __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, double*, int>**)ThisPtr)[8](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }
        internal static unsafe void set_RadiusX(IObjectReference _obj, double value)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, double, int>**)ThisPtr)[9](ThisPtr, value));
            global::System.GC.KeepAlive(_obj);
        }

        internal static unsafe double get_RadiusY(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            double __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, double*, int>**)ThisPtr)[10](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }
        internal static unsafe void set_RadiusY(IObjectReference _obj, double value)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, double, int>**)ThisPtr)[11](ThisPtr, value));
            global::System.GC.KeepAlive(_obj);
        }



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0x62, 0xD2, 0xAB, 0xAB, 0xE4, 0xD8, 0x49, 0x5B, 0xBC, 0xE9, 0x1, 0x8, 0xA5, 0x20, 0x9D, 0x45 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("ABABD262-D8E4-5B49-BCE9-0108A5209D45")]
    internal interface IEllipseGeometry : global::Microsoft.UI.Xaml.Media.IEllipseGeometry
    {
    }
    internal static class IEllipseGeometryStaticsMethods
    {

        internal static unsafe global::Microsoft.UI.Xaml.DependencyProperty get_CenterProperty(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[6](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Xaml.DependencyProperty.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.UI.Xaml.DependencyProperty.DisposeAbi(__retval);
            }
        }

        internal static unsafe global::Microsoft.UI.Xaml.DependencyProperty get_RadiusXProperty(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[7](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Xaml.DependencyProperty.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.UI.Xaml.DependencyProperty.DisposeAbi(__retval);
            }
        }

        internal static unsafe global::Microsoft.UI.Xaml.DependencyProperty get_RadiusYProperty(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[8](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Xaml.DependencyProperty.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.UI.Xaml.DependencyProperty.DisposeAbi(__retval);
            }
        }



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0x80, 0x3C, 0xA3, 0xE8, 0x2F, 0xD7, 0x48, 0x52, 0xA7, 0x1F, 0x4B, 0x70, 0xA0, 0x75, 0x7F, 0x89 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("E8A33C80-D72F-5248-A71F-4B70A0757F89")]
    internal interface IEllipseGeometryStatics : global::Microsoft.UI.Xaml.Media.IEllipseGeometryStatics
    {
    }
    internal static class IFontFamilyMethods
    {

        internal static unsafe string get_Source(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[6](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return MarshalString.FromAbi(__retval);
            }
            finally
            {
                MarshalString.DisposeAbi(__retval);
            }
        }



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0xC1, 0x5B, 0xFA, 0x18, 0x94, 0x72, 0x7C, 0x52, 0xBB, 0x2, 0xB2, 0x13, 0xE0, 0xB3, 0xA2, 0xA3 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("18FA5BC1-7294-527C-BB02-B213E0B3A2A3")]
    internal interface IFontFamily : global::Microsoft.UI.Xaml.Media.IFontFamily
    {
    }
    internal static class IFontFamilyFactoryMethods
    {


        internal static unsafe global::Microsoft.UI.Xaml.Media.FontFamily CreateInstanceWithName(IObjectReference _obj, string familyName, object baseInterface, out object innerInterface)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __baseInterface = default;
            IntPtr __innerInterface = default;
            IntPtr __retval = default;
            try
            {
                __baseInterface = MarshalInspectable<object>.CreateMarshaler2(baseInterface);
                MarshalString.Pinnable __familyName = new(familyName);
                fixed(void* ___familyName = __familyName)
                {
                    global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, IntPtr, IntPtr*, IntPtr*, int>**)ThisPtr)[6](ThisPtr, MarshalString.GetAbi(ref __familyName), MarshalInspectable<object>.GetAbi(__baseInterface), &__innerInterface, &__retval));
                    global::System.GC.KeepAlive(_obj);
                    innerInterface = MarshalInspectable<object>.FromAbi(__innerInterface);
                    return global::ABI.Microsoft.UI.Xaml.Media.FontFamily.FromAbi(__retval);
                }
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__baseInterface);
                MarshalInspectable<object>.DisposeAbi(__innerInterface);
                global::ABI.Microsoft.UI.Xaml.Media.FontFamily.DisposeAbi(__retval);
            }
        }


        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0x77, 0x8A, 0xB8, 0x61, 0xF9, 0xD0, 0x9E, 0x5E, 0x8C, 0x28, 0xED, 0xA0, 0x1F, 0xED, 0xE2, 0x2E };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("61B88A77-D0F9-5E9E-8C28-EDA01FEDE22E")]
    internal interface IFontFamilyFactory : global::Microsoft.UI.Xaml.Media.IFontFamilyFactory
    {
    }
    internal static class IFontFamilyStaticsMethods
    {

        internal static unsafe global::Microsoft.UI.Xaml.Media.FontFamily get_XamlAutoFontFamily(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[6](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Xaml.Media.FontFamily.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.UI.Xaml.Media.FontFamily.DisposeAbi(__retval);
            }
        }



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0xEB, 0xDC, 0xEA, 0xB3, 0x71, 0xC4, 0xFE, 0x58, 0x93, 0xD0, 0xD7, 0x1B, 0x4, 0xA7, 0xFD, 0x54 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("B3EADCEB-C471-58FE-93D0-D71B04A7FD54")]
    internal interface IFontFamilyStatics : global::Microsoft.UI.Xaml.Media.IFontFamilyStatics
    {
    }
    internal static class IGeneralTransformMethods
    {


        internal static unsafe global::Windows.Foundation.Point TransformPoint(IObjectReference _obj, global::Windows.Foundation.Point point)
        {
            var ThisPtr = _obj.ThisPtr;

            global::Windows.Foundation.Point __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::Windows.Foundation.Point, global::Windows.Foundation.Point*, int>**)ThisPtr)[7](ThisPtr, point, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }

        internal static unsafe bool TryTransform(IObjectReference _obj, global::Windows.Foundation.Point inPoint, out global::Windows.Foundation.Point outPoint)
        {
            var ThisPtr = _obj.ThisPtr;

            global::Windows.Foundation.Point __outPoint = default;
            byte __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::Windows.Foundation.Point, global::Windows.Foundation.Point*, byte*, int>**)ThisPtr)[8](ThisPtr, inPoint, &__outPoint, &__retval));
            global::System.GC.KeepAlive(_obj);
            outPoint = __outPoint;
            return __retval != 0;
        }

        internal static unsafe global::Windows.Foundation.Rect TransformBounds(IObjectReference _obj, global::Windows.Foundation.Rect rect)
        {
            var ThisPtr = _obj.ThisPtr;

            global::Windows.Foundation.Rect __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::Windows.Foundation.Rect, global::Windows.Foundation.Rect*, int>**)ThisPtr)[9](ThisPtr, rect, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }
        internal static unsafe global::Microsoft.UI.Xaml.Media.GeneralTransform get_Inverse(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[6](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Xaml.Media.GeneralTransform.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.UI.Xaml.Media.GeneralTransform.DisposeAbi(__retval);
            }
        }



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0xEB, 0xDE, 0xEE, 0x4, 0xE5, 0x31, 0xC0, 0x54, 0xAE, 0x3F, 0x8B, 0xD0, 0x66, 0x45, 0xD3, 0x39 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("04EEDEEB-31E5-54C0-AE3F-8BD06645D339")]
    internal interface IGeneralTransform : global::Microsoft.UI.Xaml.Media.IGeneralTransform
    {
    }
    internal static class IGeneralTransformFactoryMethods
    {


        internal static unsafe global::Microsoft.UI.Xaml.Media.GeneralTransform CreateInstance(IObjectReference _obj, object baseInterface, out object innerInterface)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __baseInterface = default;
            IntPtr __innerInterface = default;
            IntPtr __retval = default;
            try
            {
                __baseInterface = MarshalInspectable<object>.CreateMarshaler2(baseInterface);
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, IntPtr*, IntPtr*, int>**)ThisPtr)[6](ThisPtr, MarshalInspectable<object>.GetAbi(__baseInterface), &__innerInterface, &__retval));
                global::System.GC.KeepAlive(_obj);
                innerInterface = MarshalInspectable<object>.FromAbi(__innerInterface);
                return global::ABI.Microsoft.UI.Xaml.Media.GeneralTransform.FromAbi(__retval);
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__baseInterface);
                MarshalInspectable<object>.DisposeAbi(__innerInterface);
                global::ABI.Microsoft.UI.Xaml.Media.GeneralTransform.DisposeAbi(__retval);
            }
        }


        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0xA3, 0x25, 0x10, 0x2F, 0x91, 0x53, 0x1B, 0x5D, 0x83, 0x82, 0x3C, 0xAA, 0xA1, 0xD2, 0x6A, 0x96 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("2F1025A3-5391-5D1B-8382-3CAAA1D26A96")]
    internal interface IGeneralTransformFactory : global::Microsoft.UI.Xaml.Media.IGeneralTransformFactory
    {
    }
    public static class IGeneralTransformOverridesMethods
    {


        internal static unsafe bool TryTransformCore(IObjectReference _obj, global::Windows.Foundation.Point inPoint, out global::Windows.Foundation.Point outPoint)
        {
            var ThisPtr = _obj.ThisPtr;

            global::Windows.Foundation.Point __outPoint = default;
            byte __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::Windows.Foundation.Point, global::Windows.Foundation.Point*, byte*, int>**)ThisPtr)[7](ThisPtr, inPoint, &__outPoint, &__retval));
            global::System.GC.KeepAlive(_obj);
            outPoint = __outPoint;
            return __retval != 0;
        }

        internal static unsafe global::Windows.Foundation.Rect TransformBoundsCore(IObjectReference _obj, global::Windows.Foundation.Rect rect)
        {
            var ThisPtr = _obj.ThisPtr;

            global::Windows.Foundation.Rect __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::Windows.Foundation.Rect, global::Windows.Foundation.Rect*, int>**)ThisPtr)[8](ThisPtr, rect, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }
        internal static unsafe global::Microsoft.UI.Xaml.Media.GeneralTransform get_InverseCore(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[6](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Xaml.Media.GeneralTransform.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.UI.Xaml.Media.GeneralTransform.DisposeAbi(__retval);
            }
        }



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0xF1, 0x70, 0x89, 0xCE, 0xF8, 0x83, 0x3F, 0x54, 0x9C, 0xF5, 0x43, 0x9C, 0x46, 0x16, 0x1, 0xF1 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

        public static global::System.IntPtr AbiToProjectionVftablePtr => IGeneralTransformOverrides.AbiToProjectionVftablePtr;

    }

    [Guid("CE8970F1-83F8-543F-9CF5-439C461601F1")]
    internal unsafe interface IGeneralTransformOverrides : global::Microsoft.UI.Xaml.Media.IGeneralTransformOverrides
    {

        public static readonly IntPtr AbiToProjectionVftablePtr;
        static unsafe IGeneralTransformOverrides()
        {
            AbiToProjectionVftablePtr = ComWrappersSupport.AllocateVtableMemory(typeof(IGeneralTransformOverrides), sizeof(IInspectable.Vftbl) + sizeof(IntPtr) * 3);
            *(IInspectable.Vftbl*)AbiToProjectionVftablePtr = IInspectable.Vftbl.AbiToProjectionVftable;
            ((delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>*)AbiToProjectionVftablePtr)[6] = &Do_Abi_get_InverseCore_0;
            ((delegate* unmanaged[Stdcall]<IntPtr, global::Windows.Foundation.Point, global::Windows.Foundation.Point*, byte*, int>*)AbiToProjectionVftablePtr)[7] = &Do_Abi_TryTransformCore_1;
            ((delegate* unmanaged[Stdcall]<IntPtr, global::Windows.Foundation.Rect, global::Windows.Foundation.Rect*, int>*)AbiToProjectionVftablePtr)[8] = &Do_Abi_TransformBoundsCore_2;
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvStdcall) })]
        private static unsafe int Do_Abi_TryTransformCore_1(IntPtr thisPtr, global::Windows.Foundation.Point inPoint, global::Windows.Foundation.Point* outPoint, byte* returnValue)
        {

            bool __returnValue = default;

            *outPoint = default;
            *returnValue = default;
            global::Windows.Foundation.Point __outPoint = default;

            try
            {
                __returnValue = global::WinRT.ComWrappersSupport.FindObject<global::Microsoft.UI.Xaml.Media.IGeneralTransformOverrides>(thisPtr).TryTransformCore(inPoint, out __outPoint);
                *outPoint = __outPoint;
                *returnValue = (byte)(__returnValue ? 1 : 0);

            }
            catch (Exception __exception__)
            {
                global::WinRT.ExceptionHelpers.SetErrorInfo(__exception__);
                return global::WinRT.ExceptionHelpers.GetHRForException(__exception__);
            }
            return 0;
        }
        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvStdcall) })]
        private static unsafe int Do_Abi_TransformBoundsCore_2(IntPtr thisPtr, global::Windows.Foundation.Rect rect, global::Windows.Foundation.Rect* result)
        {

            global::Windows.Foundation.Rect __result = default;

            *result = default;

            try
            {
                __result = global::WinRT.ComWrappersSupport.FindObject<global::Microsoft.UI.Xaml.Media.IGeneralTransformOverrides>(thisPtr).TransformBoundsCore(rect);
                *result = __result;

            }
            catch (Exception __exception__)
            {
                global::WinRT.ExceptionHelpers.SetErrorInfo(__exception__);
                return global::WinRT.ExceptionHelpers.GetHRForException(__exception__);
            }
            return 0;
        }
        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvStdcall) })]
        private static unsafe int Do_Abi_get_InverseCore_0(IntPtr thisPtr, IntPtr* value)
        {

            global::Microsoft.UI.Xaml.Media.GeneralTransform __value = default;

            *value = default;

            try
            {
                __value = global::WinRT.ComWrappersSupport.FindObject<global::Microsoft.UI.Xaml.Media.IGeneralTransformOverrides>(thisPtr).InverseCore;
                *value = global::ABI.Microsoft.UI.Xaml.Media.GeneralTransform.FromManaged(__value);

            }
            catch (Exception __exception__)
            {
                global::WinRT.ExceptionHelpers.SetErrorInfo(__exception__);
                return global::WinRT.ExceptionHelpers.GetHRForException(__exception__);
            }
            return 0;
        }
    }

    internal static class IGeometryMethods
    {

        internal static unsafe global::Windows.Foundation.Rect get_Bounds(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::Windows.Foundation.Rect __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::Windows.Foundation.Rect*, int>**)ThisPtr)[8](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }

        internal static unsafe global::Microsoft.UI.Xaml.Media.Transform get_Transform(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[6](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Xaml.Media.Transform.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.UI.Xaml.Media.Transform.DisposeAbi(__retval);
            }
        }
        internal static unsafe void set_Transform(IObjectReference _obj, global::Microsoft.UI.Xaml.Media.Transform value)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __value = default;
            try
            {
                __value = global::ABI.Microsoft.UI.Xaml.Media.Transform.CreateMarshaler2(value);
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, int>**)ThisPtr)[7](ThisPtr, MarshalInspectable<object>.GetAbi(__value)));
                global::System.GC.KeepAlive(_obj);
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__value);
            }
        }



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0xCC, 0x2D, 0x10, 0xDC, 0xE2, 0x3B, 0x14, 0x54, 0x85, 0x99, 0x94, 0xB6, 0xE7, 0x6E, 0xF3, 0x9B };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("DC102DCC-3BE2-5414-8599-94B6E76EF39B")]
    internal interface IGeometry : global::Microsoft.UI.Xaml.Media.IGeometry
    {
    }
    internal static class IGeometryFactoryMethods
    {



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0x36, 0xD5, 0xDC, 0x4E, 0x49, 0x79, 0x8A, 0x54, 0xA9, 0xB1, 0x6F, 0xF0, 0x3B, 0x95, 0x1C, 0xF3 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("4EDCD536-7949-548A-A9B1-6FF03B951CF3")]
    internal interface IGeometryFactory : global::Microsoft.UI.Xaml.Media.IGeometryFactory
    {
    }
    internal static class IGeometryGroupMethods
    {

        internal static unsafe global::Microsoft.UI.Xaml.Media.GeometryCollection get_Children(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[8](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Xaml.Media.GeometryCollection.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.UI.Xaml.Media.GeometryCollection.DisposeAbi(__retval);
            }
        }
        internal static unsafe void set_Children(IObjectReference _obj, global::Microsoft.UI.Xaml.Media.GeometryCollection value)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __value = default;
            try
            {
                __value = global::ABI.Microsoft.UI.Xaml.Media.GeometryCollection.CreateMarshaler2(value);
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, int>**)ThisPtr)[9](ThisPtr, MarshalInspectable<object>.GetAbi(__value)));
                global::System.GC.KeepAlive(_obj);
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__value);
            }
        }

        internal static unsafe global::Microsoft.UI.Xaml.Media.FillRule get_FillRule(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::Microsoft.UI.Xaml.Media.FillRule __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::Microsoft.UI.Xaml.Media.FillRule*, int>**)ThisPtr)[6](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }
        internal static unsafe void set_FillRule(IObjectReference _obj, global::Microsoft.UI.Xaml.Media.FillRule value)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::Microsoft.UI.Xaml.Media.FillRule, int>**)ThisPtr)[7](ThisPtr, value));
            global::System.GC.KeepAlive(_obj);
        }



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0x69, 0xE5, 0xDD, 0xB4, 0x96, 0xEA, 0x83, 0x58, 0x91, 0x4C, 0xEB, 0xB7, 0xD8, 0x18, 0xDD, 0x3A };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("B4DDE569-EA96-5883-914C-EBB7D818DD3A")]
    internal interface IGeometryGroup : global::Microsoft.UI.Xaml.Media.IGeometryGroup
    {
    }
    internal static class IGeometryGroupStaticsMethods
    {

        internal static unsafe global::Microsoft.UI.Xaml.DependencyProperty get_ChildrenProperty(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[7](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Xaml.DependencyProperty.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.UI.Xaml.DependencyProperty.DisposeAbi(__retval);
            }
        }

        internal static unsafe global::Microsoft.UI.Xaml.DependencyProperty get_FillRuleProperty(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[6](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Xaml.DependencyProperty.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.UI.Xaml.DependencyProperty.DisposeAbi(__retval);
            }
        }



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0xA5, 0x3D, 0xA2, 0x56, 0x15, 0xD0, 0x8A, 0x56, 0x9F, 0x8B, 0x11, 0xB1, 0x25, 0xCF, 0xD9, 0xB4 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("56A23DA5-D015-568A-9F8B-11B125CFD9B4")]
    internal interface IGeometryGroupStatics : global::Microsoft.UI.Xaml.Media.IGeometryGroupStatics
    {
    }
    internal static class IGeometryStaticsMethods
    {

        internal static unsafe global::Microsoft.UI.Xaml.Media.Geometry get_Empty(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[6](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Xaml.Media.Geometry.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.UI.Xaml.Media.Geometry.DisposeAbi(__retval);
            }
        }

        internal static unsafe double get_StandardFlatteningTolerance(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            double __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, double*, int>**)ThisPtr)[7](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }

        internal static unsafe global::Microsoft.UI.Xaml.DependencyProperty get_TransformProperty(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[8](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Xaml.DependencyProperty.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.UI.Xaml.DependencyProperty.DisposeAbi(__retval);
            }
        }



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0xD0, 0x78, 0x9F, 0x34, 0x78, 0x49, 0x42, 0x57, 0xB7, 0xD2, 0xB3, 0x4E, 0xA2, 0xC9, 0x56, 0x0 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("349F78D0-4978-5742-B7D2-B34EA2C95600")]
    internal interface IGeometryStatics : global::Microsoft.UI.Xaml.Media.IGeometryStatics
    {
    }
    internal static class IGradientBrushMethods
    {

        internal static unsafe global::Microsoft.UI.Xaml.Media.ColorInterpolationMode get_ColorInterpolationMode(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::Microsoft.UI.Xaml.Media.ColorInterpolationMode __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::Microsoft.UI.Xaml.Media.ColorInterpolationMode*, int>**)ThisPtr)[10](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }
        internal static unsafe void set_ColorInterpolationMode(IObjectReference _obj, global::Microsoft.UI.Xaml.Media.ColorInterpolationMode value)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::Microsoft.UI.Xaml.Media.ColorInterpolationMode, int>**)ThisPtr)[11](ThisPtr, value));
            global::System.GC.KeepAlive(_obj);
        }

        internal static unsafe global::Microsoft.UI.Xaml.Media.GradientStopCollection get_GradientStops(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[12](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Xaml.Media.GradientStopCollection.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.UI.Xaml.Media.GradientStopCollection.DisposeAbi(__retval);
            }
        }
        internal static unsafe void set_GradientStops(IObjectReference _obj, global::Microsoft.UI.Xaml.Media.GradientStopCollection value)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __value = default;
            try
            {
                __value = global::ABI.Microsoft.UI.Xaml.Media.GradientStopCollection.CreateMarshaler2(value);
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, int>**)ThisPtr)[13](ThisPtr, MarshalInspectable<object>.GetAbi(__value)));
                global::System.GC.KeepAlive(_obj);
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__value);
            }
        }

        internal static unsafe global::Microsoft.UI.Xaml.Media.BrushMappingMode get_MappingMode(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::Microsoft.UI.Xaml.Media.BrushMappingMode __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::Microsoft.UI.Xaml.Media.BrushMappingMode*, int>**)ThisPtr)[8](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }
        internal static unsafe void set_MappingMode(IObjectReference _obj, global::Microsoft.UI.Xaml.Media.BrushMappingMode value)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::Microsoft.UI.Xaml.Media.BrushMappingMode, int>**)ThisPtr)[9](ThisPtr, value));
            global::System.GC.KeepAlive(_obj);
        }

        internal static unsafe global::Microsoft.UI.Xaml.Media.GradientSpreadMethod get_SpreadMethod(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::Microsoft.UI.Xaml.Media.GradientSpreadMethod __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::Microsoft.UI.Xaml.Media.GradientSpreadMethod*, int>**)ThisPtr)[6](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }
        internal static unsafe void set_SpreadMethod(IObjectReference _obj, global::Microsoft.UI.Xaml.Media.GradientSpreadMethod value)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::Microsoft.UI.Xaml.Media.GradientSpreadMethod, int>**)ThisPtr)[7](ThisPtr, value));
            global::System.GC.KeepAlive(_obj);
        }



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0xFA, 0x47, 0xC3, 0x77, 0xC4, 0xC4, 0x74, 0x51, 0xA9, 0x45, 0x65, 0xCA, 0xB3, 0xAA, 0x1C, 0x75 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("77C347FA-C4C4-5174-A945-65CAB3AA1C75")]
    internal interface IGradientBrush : global::Microsoft.UI.Xaml.Media.IGradientBrush
    {
    }
    internal static class IGradientBrushFactoryMethods
    {


        internal static unsafe global::Microsoft.UI.Xaml.Media.GradientBrush CreateInstance(IObjectReference _obj, object baseInterface, out object innerInterface)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __baseInterface = default;
            IntPtr __innerInterface = default;
            IntPtr __retval = default;
            try
            {
                __baseInterface = MarshalInspectable<object>.CreateMarshaler2(baseInterface);
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, IntPtr*, IntPtr*, int>**)ThisPtr)[6](ThisPtr, MarshalInspectable<object>.GetAbi(__baseInterface), &__innerInterface, &__retval));
                global::System.GC.KeepAlive(_obj);
                innerInterface = MarshalInspectable<object>.FromAbi(__innerInterface);
                return global::ABI.Microsoft.UI.Xaml.Media.GradientBrush.FromAbi(__retval);
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__baseInterface);
                MarshalInspectable<object>.DisposeAbi(__innerInterface);
                global::ABI.Microsoft.UI.Xaml.Media.GradientBrush.DisposeAbi(__retval);
            }
        }


        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0x77, 0x61, 0xFF, 0x64, 0xDA, 0x1E, 0x5B, 0x56, 0xB7, 0xAA, 0xAC, 0x50, 0x15, 0x2E, 0x31, 0x36 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("64FF6177-1EDA-565B-B7AA-AC50152E3136")]
    internal interface IGradientBrushFactory : global::Microsoft.UI.Xaml.Media.IGradientBrushFactory
    {
    }
    internal static class IGradientBrushStaticsMethods
    {

        internal static unsafe global::Microsoft.UI.Xaml.DependencyProperty get_ColorInterpolationModeProperty(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[8](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Xaml.DependencyProperty.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.UI.Xaml.DependencyProperty.DisposeAbi(__retval);
            }
        }

        internal static unsafe global::Microsoft.UI.Xaml.DependencyProperty get_GradientStopsProperty(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[9](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Xaml.DependencyProperty.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.UI.Xaml.DependencyProperty.DisposeAbi(__retval);
            }
        }

        internal static unsafe global::Microsoft.UI.Xaml.DependencyProperty get_MappingModeProperty(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[7](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Xaml.DependencyProperty.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.UI.Xaml.DependencyProperty.DisposeAbi(__retval);
            }
        }

        internal static unsafe global::Microsoft.UI.Xaml.DependencyProperty get_SpreadMethodProperty(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[6](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Xaml.DependencyProperty.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.UI.Xaml.DependencyProperty.DisposeAbi(__retval);
            }
        }



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0xD7, 0x97, 0x36, 0x4D, 0xDB, 0xC6, 0x1C, 0x50, 0x8F, 0xA2, 0xDA, 0x30, 0xB8, 0xC8, 0xCA, 0x3B };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("4D3697D7-C6DB-501C-8FA2-DA30B8C8CA3B")]
    internal interface IGradientBrushStatics : global::Microsoft.UI.Xaml.Media.IGradientBrushStatics
    {
    }
    internal static class IGradientStopMethods
    {

        internal static unsafe global::Windows.UI.Color get_Color(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::Windows.UI.Color __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::Windows.UI.Color*, int>**)ThisPtr)[6](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }
        internal static unsafe void set_Color(IObjectReference _obj, global::Windows.UI.Color value)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::Windows.UI.Color, int>**)ThisPtr)[7](ThisPtr, value));
            global::System.GC.KeepAlive(_obj);
        }

        internal static unsafe double get_Offset(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            double __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, double*, int>**)ThisPtr)[8](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }
        internal static unsafe void set_Offset(IObjectReference _obj, double value)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, double, int>**)ThisPtr)[9](ThisPtr, value));
            global::System.GC.KeepAlive(_obj);
        }



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0x39, 0xB0, 0xBC, 0x48, 0xE1, 0xE8, 0x43, 0x57, 0x94, 0xC3, 0xF7, 0x66, 0x1, 0x1D, 0x3B, 0x5D };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("48BCB039-E8E1-5743-94C3-F766011D3B5D")]
    internal interface IGradientStop : global::Microsoft.UI.Xaml.Media.IGradientStop
    {
    }
    internal static class IGradientStopStaticsMethods
    {

        internal static unsafe global::Microsoft.UI.Xaml.DependencyProperty get_ColorProperty(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[6](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Xaml.DependencyProperty.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.UI.Xaml.DependencyProperty.DisposeAbi(__retval);
            }
        }

        internal static unsafe global::Microsoft.UI.Xaml.DependencyProperty get_OffsetProperty(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[7](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Xaml.DependencyProperty.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.UI.Xaml.DependencyProperty.DisposeAbi(__retval);
            }
        }



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0x1B, 0x6C, 0x56, 0xB, 0xDE, 0x37, 0xFD, 0x5B, 0xB4, 0x19, 0xF, 0x7C, 0x4C, 0xA, 0x5, 0x23 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("0B566C1B-37DE-5BFD-B419-0F7C4C0A0523")]
    internal interface IGradientStopStatics : global::Microsoft.UI.Xaml.Media.IGradientStopStatics
    {
    }
    internal static class IImageBrushMethods
    {

        internal static unsafe global::Microsoft.UI.Xaml.Media.ImageSource get_ImageSource(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[6](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Xaml.Media.ImageSource.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.UI.Xaml.Media.ImageSource.DisposeAbi(__retval);
            }
        }
        internal static unsafe void set_ImageSource(IObjectReference _obj, global::Microsoft.UI.Xaml.Media.ImageSource value)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __value = default;
            try
            {
                __value = global::ABI.Microsoft.UI.Xaml.Media.ImageSource.CreateMarshaler2(value);
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, int>**)ThisPtr)[7](ThisPtr, MarshalInspectable<object>.GetAbi(__value)));
                global::System.GC.KeepAlive(_obj);
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__value);
            }
        }


        private volatile static global::System.Runtime.CompilerServices.ConditionalWeakTable<object, global::ABI.WinRT.Interop.EventSource<global::Microsoft.UI.Xaml.ExceptionRoutedEventHandler>> _ImageFailed_;
        private static global::System.Runtime.CompilerServices.ConditionalWeakTable<object, global::ABI.WinRT.Interop.EventSource<global::Microsoft.UI.Xaml.ExceptionRoutedEventHandler>> MakeImageFailedTable()
        {
            
            global::System.Threading.Interlocked.CompareExchange(ref _ImageFailed_, new(), null);
            return _ImageFailed_;
        }
        private static global::System.Runtime.CompilerServices.ConditionalWeakTable<object, global::ABI.WinRT.Interop.EventSource<global::Microsoft.UI.Xaml.ExceptionRoutedEventHandler>> _ImageFailed => _ImageFailed_ ?? MakeImageFailedTable();



        internal static unsafe global::ABI.WinRT.Interop.EventSource<global::Microsoft.UI.Xaml.ExceptionRoutedEventHandler> Get_ImageFailed2(IObjectReference _obj, object _thisObj)
        {
            return _ImageFailed.GetValue(_thisObj, (key) =>
            {

                var ThisPtr = _obj.ThisPtr;

                return 
                new _EventSource_global__Microsoft_UI_Xaml_ExceptionRoutedEventHandler(_obj,
                (*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, global::WinRT.EventRegistrationToken*, int>**)ThisPtr)[8],
                (*(delegate* unmanaged[Stdcall]<IntPtr, global::WinRT.EventRegistrationToken, int>**)ThisPtr)[9],
                0);
            });
        }

        private volatile static global::System.Runtime.CompilerServices.ConditionalWeakTable<object, global::ABI.WinRT.Interop.EventSource<global::Microsoft.UI.Xaml.RoutedEventHandler>> _ImageOpened_;
        private static global::System.Runtime.CompilerServices.ConditionalWeakTable<object, global::ABI.WinRT.Interop.EventSource<global::Microsoft.UI.Xaml.RoutedEventHandler>> MakeImageOpenedTable()
        {
            
            global::System.Threading.Interlocked.CompareExchange(ref _ImageOpened_, new(), null);
            return _ImageOpened_;
        }
        private static global::System.Runtime.CompilerServices.ConditionalWeakTable<object, global::ABI.WinRT.Interop.EventSource<global::Microsoft.UI.Xaml.RoutedEventHandler>> _ImageOpened => _ImageOpened_ ?? MakeImageOpenedTable();



        internal static unsafe global::ABI.WinRT.Interop.EventSource<global::Microsoft.UI.Xaml.RoutedEventHandler> Get_ImageOpened2(IObjectReference _obj, object _thisObj)
        {
            return _ImageOpened.GetValue(_thisObj, (key) =>
            {

                var ThisPtr = _obj.ThisPtr;

                return 
                new _EventSource_global__Microsoft_UI_Xaml_RoutedEventHandler(_obj,
                (*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, global::WinRT.EventRegistrationToken*, int>**)ThisPtr)[10],
                (*(delegate* unmanaged[Stdcall]<IntPtr, global::WinRT.EventRegistrationToken, int>**)ThisPtr)[11],
                1);
            });
        }


        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0xA3, 0x91, 0xCD, 0xED, 0x68, 0xA8, 0xA6, 0x5B, 0x94, 0x89, 0x5B, 0x12, 0xB4, 0xC2, 0x9D, 0x85 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("EDCD91A3-A868-5BA6-9489-5B12B4C29D85")]
    internal interface IImageBrush : global::Microsoft.UI.Xaml.Media.IImageBrush
    {
    }
    internal static class IImageBrushStaticsMethods
    {

        internal static unsafe global::Microsoft.UI.Xaml.DependencyProperty get_ImageSourceProperty(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[6](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Xaml.DependencyProperty.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.UI.Xaml.DependencyProperty.DisposeAbi(__retval);
            }
        }



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0xDC, 0x82, 0x80, 0xCE, 0x5, 0xA5, 0x4F, 0x5B, 0x88, 0x61, 0x79, 0x63, 0xF, 0x52, 0xC1, 0x89 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("CE8082DC-A505-5B4F-8861-79630F52C189")]
    internal interface IImageBrushStatics : global::Microsoft.UI.Xaml.Media.IImageBrushStatics
    {
    }
    internal static class IImageSourceMethods
    {



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0xF6, 0x38, 0x20, 0x6C, 0xD5, 0xD6, 0xE9, 0x55, 0x9B, 0x9E, 0x8, 0x2F, 0x12, 0xDB, 0xFF, 0x60 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("6C2038F6-D6D5-55E9-9B9E-082F12DBFF60")]
    internal interface IImageSource : global::Microsoft.UI.Xaml.Media.IImageSource
    {
    }
    internal static class IImageSourceFactoryMethods
    {



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0xA3, 0x64, 0x1E, 0xB, 0x53, 0xE3, 0x1, 0x59, 0xB8, 0x4B, 0xAE, 0x98, 0x42, 0xAE, 0xA5, 0xCD };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("0B1E64A3-E353-5901-B84B-AE9842AEA5CD")]
    internal interface IImageSourceFactory : global::Microsoft.UI.Xaml.Media.IImageSourceFactory
    {
    }
    internal static class ILineGeometryMethods
    {

        internal static unsafe global::Windows.Foundation.Point get_EndPoint(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::Windows.Foundation.Point __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::Windows.Foundation.Point*, int>**)ThisPtr)[8](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }
        internal static unsafe void set_EndPoint(IObjectReference _obj, global::Windows.Foundation.Point value)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::Windows.Foundation.Point, int>**)ThisPtr)[9](ThisPtr, value));
            global::System.GC.KeepAlive(_obj);
        }

        internal static unsafe global::Windows.Foundation.Point get_StartPoint(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::Windows.Foundation.Point __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::Windows.Foundation.Point*, int>**)ThisPtr)[6](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }
        internal static unsafe void set_StartPoint(IObjectReference _obj, global::Windows.Foundation.Point value)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::Windows.Foundation.Point, int>**)ThisPtr)[7](ThisPtr, value));
            global::System.GC.KeepAlive(_obj);
        }



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0xC5, 0xF3, 0x7E, 0x46, 0x43, 0xBC, 0xED, 0x50, 0xBB, 0x23, 0x16, 0xBE, 0x2C, 0x63, 0x35, 0x6E };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("467EF3C5-BC43-50ED-BB23-16BE2C63356E")]
    internal interface ILineGeometry : global::Microsoft.UI.Xaml.Media.ILineGeometry
    {
    }
    internal static class ILineGeometryStaticsMethods
    {

        internal static unsafe global::Microsoft.UI.Xaml.DependencyProperty get_EndPointProperty(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[7](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Xaml.DependencyProperty.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.UI.Xaml.DependencyProperty.DisposeAbi(__retval);
            }
        }

        internal static unsafe global::Microsoft.UI.Xaml.DependencyProperty get_StartPointProperty(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[6](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Xaml.DependencyProperty.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.UI.Xaml.DependencyProperty.DisposeAbi(__retval);
            }
        }



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0xF3, 0xCB, 0xE, 0xCE, 0x89, 0x93, 0x4, 0x53, 0xB7, 0xC8, 0x5E, 0x61, 0x9, 0x2, 0xF2, 0x58 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("CE0ECBF3-9389-5304-B7C8-5E610902F258")]
    internal interface ILineGeometryStatics : global::Microsoft.UI.Xaml.Media.ILineGeometryStatics
    {
    }
    internal static class ILineSegmentMethods
    {

        internal static unsafe global::Windows.Foundation.Point get_Point(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::Windows.Foundation.Point __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::Windows.Foundation.Point*, int>**)ThisPtr)[6](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }
        internal static unsafe void set_Point(IObjectReference _obj, global::Windows.Foundation.Point value)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::Windows.Foundation.Point, int>**)ThisPtr)[7](ThisPtr, value));
            global::System.GC.KeepAlive(_obj);
        }



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0x54, 0x8E, 0x61, 0xC, 0x83, 0xD8, 0x8C, 0x58, 0x88, 0x75, 0xBD, 0x8D, 0xFD, 0x6A, 0x6A, 0x3E };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("0C618E54-D883-588C-8875-BD8DFD6A6A3E")]
    internal interface ILineSegment : global::Microsoft.UI.Xaml.Media.ILineSegment
    {
    }
    internal static class ILineSegmentStaticsMethods
    {

        internal static unsafe global::Microsoft.UI.Xaml.DependencyProperty get_PointProperty(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[6](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Xaml.DependencyProperty.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.UI.Xaml.DependencyProperty.DisposeAbi(__retval);
            }
        }



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0xA9, 0x48, 0xEC, 0xC3, 0xC0, 0xB9, 0x1F, 0x56, 0x99, 0x25, 0xD1, 0xD1, 0xB2, 0xA6, 0xBA, 0xE6 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("C3EC48A9-B9C0-561F-9925-D1D1B2A6BAE6")]
    internal interface ILineSegmentStatics : global::Microsoft.UI.Xaml.Media.ILineSegmentStatics
    {
    }
    internal static class ILinearGradientBrushMethods
    {

        internal static unsafe global::Windows.Foundation.Point get_EndPoint(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::Windows.Foundation.Point __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::Windows.Foundation.Point*, int>**)ThisPtr)[8](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }
        internal static unsafe void set_EndPoint(IObjectReference _obj, global::Windows.Foundation.Point value)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::Windows.Foundation.Point, int>**)ThisPtr)[9](ThisPtr, value));
            global::System.GC.KeepAlive(_obj);
        }

        internal static unsafe global::Windows.Foundation.Point get_StartPoint(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::Windows.Foundation.Point __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::Windows.Foundation.Point*, int>**)ThisPtr)[6](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }
        internal static unsafe void set_StartPoint(IObjectReference _obj, global::Windows.Foundation.Point value)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::Windows.Foundation.Point, int>**)ThisPtr)[7](ThisPtr, value));
            global::System.GC.KeepAlive(_obj);
        }



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0x38, 0x96, 0xAB, 0xC0, 0xD9, 0x1B, 0xA4, 0x5F, 0x96, 0x49, 0x48, 0xCF, 0xA1, 0x2F, 0xD, 0x1E };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("C0AB9638-1BD9-5FA4-9649-48CFA12F0D1E")]
    internal interface ILinearGradientBrush : global::Microsoft.UI.Xaml.Media.ILinearGradientBrush
    {
    }
    internal static class ILinearGradientBrushFactoryMethods
    {


        internal static unsafe global::Microsoft.UI.Xaml.Media.LinearGradientBrush CreateInstanceWithGradientStopCollectionAndAngle(IObjectReference _obj, global::Microsoft.UI.Xaml.Media.GradientStopCollection gradientStopCollection, double angle)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __gradientStopCollection = default;
            IntPtr __retval = default;
            try
            {
                __gradientStopCollection = global::ABI.Microsoft.UI.Xaml.Media.GradientStopCollection.CreateMarshaler2(gradientStopCollection);
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, double, IntPtr*, int>**)ThisPtr)[6](ThisPtr, MarshalInspectable<object>.GetAbi(__gradientStopCollection), angle, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Xaml.Media.LinearGradientBrush.FromAbi(__retval);
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__gradientStopCollection);
                global::ABI.Microsoft.UI.Xaml.Media.LinearGradientBrush.DisposeAbi(__retval);
            }
        }


        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0xE3, 0x7D, 0xBA, 0xC0, 0xFD, 0xCC, 0x4C, 0x53, 0x88, 0x2F, 0x3A, 0xB3, 0x9A, 0xE7, 0x23, 0xF3 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("C0BA7DE3-CCFD-534C-882F-3AB39AE723F3")]
    internal interface ILinearGradientBrushFactory : global::Microsoft.UI.Xaml.Media.ILinearGradientBrushFactory
    {
    }
    internal static class ILinearGradientBrushStaticsMethods
    {

        internal static unsafe global::Microsoft.UI.Xaml.DependencyProperty get_EndPointProperty(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[7](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Xaml.DependencyProperty.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.UI.Xaml.DependencyProperty.DisposeAbi(__retval);
            }
        }

        internal static unsafe global::Microsoft.UI.Xaml.DependencyProperty get_StartPointProperty(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[6](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Xaml.DependencyProperty.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.UI.Xaml.DependencyProperty.DisposeAbi(__retval);
            }
        }



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0x84, 0x9E, 0x2, 0xDF, 0xBE, 0xF6, 0x7E, 0x5B, 0xBA, 0x22, 0x3B, 0x4E, 0x7A, 0x6B, 0xCE, 0xEE };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("DF029E84-F6BE-5B7E-BA22-3B4E7A6BCEEE")]
    internal interface ILinearGradientBrushStatics : global::Microsoft.UI.Xaml.Media.ILinearGradientBrushStatics
    {
    }
    internal static class ILoadedImageSourceLoadCompletedEventArgsMethods
    {

        internal static unsafe global::Microsoft.UI.Xaml.Media.LoadedImageSourceLoadStatus get_Status(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::Microsoft.UI.Xaml.Media.LoadedImageSourceLoadStatus __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::Microsoft.UI.Xaml.Media.LoadedImageSourceLoadStatus*, int>**)ThisPtr)[6](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0x7C, 0xBB, 0x21, 0x41, 0xE8, 0x48, 0x2D, 0x54, 0xB9, 0x50, 0x3E, 0xA7, 0xE7, 0x9, 0xC0, 0xD6 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("4121BB7C-48E8-542D-B950-3EA7E709C0D6")]
    internal interface ILoadedImageSourceLoadCompletedEventArgs : global::Microsoft.UI.Xaml.Media.ILoadedImageSourceLoadCompletedEventArgs
    {
    }
    internal static class ILoadedImageSurfaceMethods
    {

        internal static unsafe global::Windows.Foundation.Size get_DecodedPhysicalSize(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::Windows.Foundation.Size __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::Windows.Foundation.Size*, int>**)ThisPtr)[6](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }

        internal static unsafe global::Windows.Foundation.Size get_DecodedSize(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::Windows.Foundation.Size __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::Windows.Foundation.Size*, int>**)ThisPtr)[7](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }

        internal static unsafe global::Windows.Foundation.Size get_NaturalSize(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::Windows.Foundation.Size __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::Windows.Foundation.Size*, int>**)ThisPtr)[8](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }


        private volatile static global::System.Runtime.CompilerServices.ConditionalWeakTable<object, global::ABI.WinRT.Interop.EventSource<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Media.LoadedImageSurface, global::Microsoft.UI.Xaml.Media.LoadedImageSourceLoadCompletedEventArgs>>> _LoadCompleted_;
        private static global::System.Runtime.CompilerServices.ConditionalWeakTable<object, global::ABI.WinRT.Interop.EventSource<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Media.LoadedImageSurface, global::Microsoft.UI.Xaml.Media.LoadedImageSourceLoadCompletedEventArgs>>> MakeLoadCompletedTable()
        {
            
            global::System.Threading.Interlocked.CompareExchange(ref _LoadCompleted_, new(), null);
            return _LoadCompleted_;
        }
        private static global::System.Runtime.CompilerServices.ConditionalWeakTable<object, global::ABI.WinRT.Interop.EventSource<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Media.LoadedImageSurface, global::Microsoft.UI.Xaml.Media.LoadedImageSourceLoadCompletedEventArgs>>> _LoadCompleted => _LoadCompleted_ ?? MakeLoadCompletedTable();



        internal static unsafe global::ABI.WinRT.Interop.EventSource<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Media.LoadedImageSurface, global::Microsoft.UI.Xaml.Media.LoadedImageSourceLoadCompletedEventArgs>> Get_LoadCompleted2(IObjectReference _obj, object _thisObj)
        {
            return _LoadCompleted.GetValue(_thisObj, (key) =>
            {

                var ThisPtr = _obj.ThisPtr;

                return 
                new _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_UI_Xaml_Media_LoadedImageSurface__global__Microsoft_UI_Xaml_Media_LoadedImageSourceLoadCompletedEventArgs_(_obj,
                (*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, global::WinRT.EventRegistrationToken*, int>**)ThisPtr)[9],
                (*(delegate* unmanaged[Stdcall]<IntPtr, global::WinRT.EventRegistrationToken, int>**)ThisPtr)[10],
                0);
            });
        }


        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0x40, 0x55, 0x27, 0xB5, 0x6, 0x17, 0x51, 0x58, 0x95, 0xCC, 0x49, 0x8E, 0xE8, 0x1F, 0xB1, 0x83 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("B5275540-1706-5851-95CC-498EE81FB183")]
    internal interface ILoadedImageSurface : global::Microsoft.UI.Xaml.Media.ILoadedImageSurface
    {
    }
    internal static class ILoadedImageSurfaceStaticsMethods
    {


        internal static unsafe global::Microsoft.UI.Xaml.Media.LoadedImageSurface StartLoadFromUri(IObjectReference _obj, global::System.Uri uri, global::Windows.Foundation.Size desiredMaxSize)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __uri = default;
            IntPtr __retval = default;
            try
            {
                __uri = global::ABI.System.Uri.CreateMarshaler2(uri);
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, global::Windows.Foundation.Size, IntPtr*, int>**)ThisPtr)[6](ThisPtr, MarshalInspectable<object>.GetAbi(__uri), desiredMaxSize, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Xaml.Media.LoadedImageSurface.FromAbi(__retval);
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__uri);
                global::ABI.Microsoft.UI.Xaml.Media.LoadedImageSurface.DisposeAbi(__retval);
            }
        }

        internal static unsafe global::Microsoft.UI.Xaml.Media.LoadedImageSurface StartLoadFromUri(IObjectReference _obj, global::System.Uri uri)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __uri = default;
            IntPtr __retval = default;
            try
            {
                __uri = global::ABI.System.Uri.CreateMarshaler2(uri);
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, IntPtr*, int>**)ThisPtr)[7](ThisPtr, MarshalInspectable<object>.GetAbi(__uri), &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Xaml.Media.LoadedImageSurface.FromAbi(__retval);
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__uri);
                global::ABI.Microsoft.UI.Xaml.Media.LoadedImageSurface.DisposeAbi(__retval);
            }
        }

        internal static unsafe global::Microsoft.UI.Xaml.Media.LoadedImageSurface StartLoadFromStream(IObjectReference _obj, global::Windows.Storage.Streams.IRandomAccessStream stream, global::Windows.Foundation.Size desiredMaxSize)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __stream = default;
            IntPtr __retval = default;
            try
            {
                __stream = MarshalInterface<global::Windows.Storage.Streams.IRandomAccessStream>.CreateMarshaler2(stream, global::ABI.Windows.Storage.Streams.IRandomAccessStreamMethods.IID);
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, global::Windows.Foundation.Size, IntPtr*, int>**)ThisPtr)[8](ThisPtr, MarshalInspectable<object>.GetAbi(__stream), desiredMaxSize, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Xaml.Media.LoadedImageSurface.FromAbi(__retval);
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__stream);
                global::ABI.Microsoft.UI.Xaml.Media.LoadedImageSurface.DisposeAbi(__retval);
            }
        }

        internal static unsafe global::Microsoft.UI.Xaml.Media.LoadedImageSurface StartLoadFromStream(IObjectReference _obj, global::Windows.Storage.Streams.IRandomAccessStream stream)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __stream = default;
            IntPtr __retval = default;
            try
            {
                __stream = MarshalInterface<global::Windows.Storage.Streams.IRandomAccessStream>.CreateMarshaler2(stream, global::ABI.Windows.Storage.Streams.IRandomAccessStreamMethods.IID);
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, IntPtr*, int>**)ThisPtr)[9](ThisPtr, MarshalInspectable<object>.GetAbi(__stream), &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Xaml.Media.LoadedImageSurface.FromAbi(__retval);
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__stream);
                global::ABI.Microsoft.UI.Xaml.Media.LoadedImageSurface.DisposeAbi(__retval);
            }
        }


        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0xC4, 0x90, 0xD3, 0x25, 0x32, 0x4E, 0xC2, 0x52, 0x86, 0x8F, 0xF2, 0xED, 0xE7, 0x4E, 0xE4, 0x42 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("25D390C4-4E32-52C2-868F-F2EDE74EE442")]
    internal interface ILoadedImageSurfaceStatics : global::Microsoft.UI.Xaml.Media.ILoadedImageSurfaceStatics
    {
    }
    internal static class IMatrix3DProjectionMethods
    {

        internal static unsafe global::Microsoft.UI.Xaml.Media.Media3D.Matrix3D get_ProjectionMatrix(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::Microsoft.UI.Xaml.Media.Media3D.Matrix3D __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::Microsoft.UI.Xaml.Media.Media3D.Matrix3D*, int>**)ThisPtr)[6](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }
        internal static unsafe void set_ProjectionMatrix(IObjectReference _obj, global::Microsoft.UI.Xaml.Media.Media3D.Matrix3D value)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::Microsoft.UI.Xaml.Media.Media3D.Matrix3D, int>**)ThisPtr)[7](ThisPtr, value));
            global::System.GC.KeepAlive(_obj);
        }



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0xEF, 0x38, 0x33, 0xFC, 0x90, 0xF3, 0xB1, 0x5B, 0x93, 0x2E, 0x3B, 0x7C, 0x8, 0x78, 0x81, 0x87 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("FC3338EF-F390-5BB1-932E-3B7C08788187")]
    internal interface IMatrix3DProjection : global::Microsoft.UI.Xaml.Media.IMatrix3DProjection
    {
    }
    internal static class IMatrix3DProjectionStaticsMethods
    {

        internal static unsafe global::Microsoft.UI.Xaml.DependencyProperty get_ProjectionMatrixProperty(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[6](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Xaml.DependencyProperty.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.UI.Xaml.DependencyProperty.DisposeAbi(__retval);
            }
        }



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0x67, 0xE2, 0xA7, 0xA5, 0x5D, 0x7A, 0xEF, 0x58, 0xA8, 0xCD, 0xB8, 0x8E, 0xBD, 0xF8, 0x22, 0x7 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("A5A7E267-7A5D-58EF-A8CD-B88EBDF82207")]
    internal interface IMatrix3DProjectionStatics : global::Microsoft.UI.Xaml.Media.IMatrix3DProjectionStatics
    {
    }
    internal static class IMatrixTransformMethods
    {

        internal static unsafe global::Microsoft.UI.Xaml.Media.Matrix get_Matrix(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::Microsoft.UI.Xaml.Media.Matrix __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::Microsoft.UI.Xaml.Media.Matrix*, int>**)ThisPtr)[6](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }
        internal static unsafe void set_Matrix(IObjectReference _obj, global::Microsoft.UI.Xaml.Media.Matrix value)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::Microsoft.UI.Xaml.Media.Matrix, int>**)ThisPtr)[7](ThisPtr, value));
            global::System.GC.KeepAlive(_obj);
        }



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0xE1, 0x38, 0x31, 0xF0, 0xDD, 0xAD, 0xFA, 0x59, 0xB9, 0x93, 0x3E, 0xA6, 0x9B, 0x88, 0x8A, 0xCE };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("F03138E1-ADDD-59FA-B993-3EA69B888ACE")]
    internal interface IMatrixTransform : global::Microsoft.UI.Xaml.Media.IMatrixTransform
    {
    }
    internal static class IMatrixTransformStaticsMethods
    {

        internal static unsafe global::Microsoft.UI.Xaml.DependencyProperty get_MatrixProperty(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[6](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Xaml.DependencyProperty.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.UI.Xaml.DependencyProperty.DisposeAbi(__retval);
            }
        }



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0xE3, 0x9D, 0xDB, 0xD7, 0x71, 0x50, 0x15, 0x51, 0x98, 0xFB, 0xCC, 0xAD, 0x2F, 0xD4, 0x6E, 0x44 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("D7DB9DE3-5071-5115-98FB-CCAD2FD46E44")]
    internal interface IMatrixTransformStatics : global::Microsoft.UI.Xaml.Media.IMatrixTransformStatics
    {
    }
    internal static class IMediaTransportControlsThumbnailRequestedEventArgsMethods
    {


        internal static unsafe void SetThumbnailImage(IObjectReference _obj, global::Windows.Storage.Streams.IInputStream source)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __source = default;
            try
            {
                __source = MarshalInterface<global::Windows.Storage.Streams.IInputStream>.CreateMarshaler2(source, global::ABI.Windows.Storage.Streams.IInputStreamMethods.IID);
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, int>**)ThisPtr)[6](ThisPtr, MarshalInspectable<object>.GetAbi(__source)));
                global::System.GC.KeepAlive(_obj);
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__source);
            }
        }

        internal static unsafe global::Windows.Foundation.Deferral GetDeferral(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[7](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Windows.Foundation.Deferral.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Windows.Foundation.Deferral.DisposeAbi(__retval);
            }
        }


        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0x86, 0xFB, 0xF, 0xFE, 0xB0, 0x74, 0x31, 0x50, 0xAC, 0xCC, 0xB3, 0x4D, 0x3, 0x82, 0xA6, 0x37 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("FE0FFB86-74B0-5031-ACCC-B34D0382A637")]
    internal interface IMediaTransportControlsThumbnailRequestedEventArgs : global::Microsoft.UI.Xaml.Media.IMediaTransportControlsThumbnailRequestedEventArgs
    {
    }
    internal static class IMicaBackdropMethods
    {

        internal static unsafe global::Microsoft.UI.Composition.SystemBackdrops.MicaKind get_Kind(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::Microsoft.UI.Composition.SystemBackdrops.MicaKind __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::Microsoft.UI.Composition.SystemBackdrops.MicaKind*, int>**)ThisPtr)[6](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }
        internal static unsafe void set_Kind(IObjectReference _obj, global::Microsoft.UI.Composition.SystemBackdrops.MicaKind value)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::Microsoft.UI.Composition.SystemBackdrops.MicaKind, int>**)ThisPtr)[7](ThisPtr, value));
            global::System.GC.KeepAlive(_obj);
        }



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0x4, 0xA4, 0x56, 0xC1, 0xAC, 0x3D, 0x3A, 0x59, 0xB1, 0xF3, 0x7A, 0x33, 0xC2, 0x89, 0xDC, 0x83 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("C156A404-3DAC-593A-B1F3-7A33C289DC83")]
    internal interface IMicaBackdrop : global::Microsoft.UI.Xaml.Media.IMicaBackdrop
    {
    }
    internal static class IMicaBackdropFactoryMethods
    {


        internal static unsafe global::Microsoft.UI.Xaml.Media.MicaBackdrop CreateInstance(IObjectReference _obj, object baseInterface, out object innerInterface)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __baseInterface = default;
            IntPtr __innerInterface = default;
            IntPtr __retval = default;
            try
            {
                __baseInterface = MarshalInspectable<object>.CreateMarshaler2(baseInterface);
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, IntPtr*, IntPtr*, int>**)ThisPtr)[6](ThisPtr, MarshalInspectable<object>.GetAbi(__baseInterface), &__innerInterface, &__retval));
                global::System.GC.KeepAlive(_obj);
                innerInterface = MarshalInspectable<object>.FromAbi(__innerInterface);
                return global::ABI.Microsoft.UI.Xaml.Media.MicaBackdrop.FromAbi(__retval);
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__baseInterface);
                MarshalInspectable<object>.DisposeAbi(__innerInterface);
                global::ABI.Microsoft.UI.Xaml.Media.MicaBackdrop.DisposeAbi(__retval);
            }
        }


        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0xCE, 0x79, 0x43, 0x77, 0xBD, 0x74, 0xD4, 0x59, 0x84, 0x9D, 0xD9, 0x9C, 0x41, 0x84, 0xD8, 0x38 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("774379CE-74BD-59D4-849D-D99C4184D838")]
    internal interface IMicaBackdropFactory : global::Microsoft.UI.Xaml.Media.IMicaBackdropFactory
    {
    }
    internal static class IMicaBackdropStaticsMethods
    {

        internal static unsafe global::Microsoft.UI.Xaml.DependencyProperty get_KindProperty(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[6](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Xaml.DependencyProperty.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.UI.Xaml.DependencyProperty.DisposeAbi(__retval);
            }
        }



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0xCE, 0xBD, 0x3A, 0xA6, 0x96, 0xC7, 0x9, 0x55, 0x9F, 0x4D, 0x7, 0x2B, 0xC1, 0xE5, 0x99, 0xF1 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("A63ABDCE-C796-5509-9F4D-072BC1E599F1")]
    internal interface IMicaBackdropStatics : global::Microsoft.UI.Xaml.Media.IMicaBackdropStatics
    {
    }
    internal static class IPathFigureMethods
    {

        internal static unsafe bool get_IsClosed(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            byte __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, byte*, int>**)ThisPtr)[10](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval != 0;
        }
        internal static unsafe void set_IsClosed(IObjectReference _obj, bool value)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, byte, int>**)ThisPtr)[11](ThisPtr, (byte)(value ? 1 : 0)));
            global::System.GC.KeepAlive(_obj);
        }

        internal static unsafe bool get_IsFilled(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            byte __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, byte*, int>**)ThisPtr)[12](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval != 0;
        }
        internal static unsafe void set_IsFilled(IObjectReference _obj, bool value)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, byte, int>**)ThisPtr)[13](ThisPtr, (byte)(value ? 1 : 0)));
            global::System.GC.KeepAlive(_obj);
        }

        internal static unsafe global::Microsoft.UI.Xaml.Media.PathSegmentCollection get_Segments(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[6](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Xaml.Media.PathSegmentCollection.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.UI.Xaml.Media.PathSegmentCollection.DisposeAbi(__retval);
            }
        }
        internal static unsafe void set_Segments(IObjectReference _obj, global::Microsoft.UI.Xaml.Media.PathSegmentCollection value)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __value = default;
            try
            {
                __value = global::ABI.Microsoft.UI.Xaml.Media.PathSegmentCollection.CreateMarshaler2(value);
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, int>**)ThisPtr)[7](ThisPtr, MarshalInspectable<object>.GetAbi(__value)));
                global::System.GC.KeepAlive(_obj);
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__value);
            }
        }

        internal static unsafe global::Windows.Foundation.Point get_StartPoint(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::Windows.Foundation.Point __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::Windows.Foundation.Point*, int>**)ThisPtr)[8](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }
        internal static unsafe void set_StartPoint(IObjectReference _obj, global::Windows.Foundation.Point value)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::Windows.Foundation.Point, int>**)ThisPtr)[9](ThisPtr, value));
            global::System.GC.KeepAlive(_obj);
        }



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0x12, 0x7, 0xE0, 0xE, 0x65, 0xBF, 0x27, 0x5F, 0x9C, 0x6, 0x14, 0xAB, 0xDF, 0x66, 0x56, 0xD7 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("0EE00712-BF65-5F27-9C06-14ABDF6656D7")]
    internal interface IPathFigure : global::Microsoft.UI.Xaml.Media.IPathFigure
    {
    }
    internal static class IPathFigureStaticsMethods
    {

        internal static unsafe global::Microsoft.UI.Xaml.DependencyProperty get_IsClosedProperty(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[8](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Xaml.DependencyProperty.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.UI.Xaml.DependencyProperty.DisposeAbi(__retval);
            }
        }

        internal static unsafe global::Microsoft.UI.Xaml.DependencyProperty get_IsFilledProperty(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[9](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Xaml.DependencyProperty.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.UI.Xaml.DependencyProperty.DisposeAbi(__retval);
            }
        }

        internal static unsafe global::Microsoft.UI.Xaml.DependencyProperty get_SegmentsProperty(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[6](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Xaml.DependencyProperty.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.UI.Xaml.DependencyProperty.DisposeAbi(__retval);
            }
        }

        internal static unsafe global::Microsoft.UI.Xaml.DependencyProperty get_StartPointProperty(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[7](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Xaml.DependencyProperty.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.UI.Xaml.DependencyProperty.DisposeAbi(__retval);
            }
        }



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0xC4, 0x33, 0xBC, 0x93, 0x9A, 0x87, 0xDB, 0x5E, 0xB8, 0xD7, 0x7E, 0xCB, 0x86, 0x1A, 0x73, 0x14 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("93BC33C4-879A-5EDB-B8D7-7ECB861A7314")]
    internal interface IPathFigureStatics : global::Microsoft.UI.Xaml.Media.IPathFigureStatics
    {
    }
    internal static class IPathGeometryMethods
    {

        internal static unsafe global::Microsoft.UI.Xaml.Media.PathFigureCollection get_Figures(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[8](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Xaml.Media.PathFigureCollection.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.UI.Xaml.Media.PathFigureCollection.DisposeAbi(__retval);
            }
        }
        internal static unsafe void set_Figures(IObjectReference _obj, global::Microsoft.UI.Xaml.Media.PathFigureCollection value)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __value = default;
            try
            {
                __value = global::ABI.Microsoft.UI.Xaml.Media.PathFigureCollection.CreateMarshaler2(value);
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, int>**)ThisPtr)[9](ThisPtr, MarshalInspectable<object>.GetAbi(__value)));
                global::System.GC.KeepAlive(_obj);
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__value);
            }
        }

        internal static unsafe global::Microsoft.UI.Xaml.Media.FillRule get_FillRule(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::Microsoft.UI.Xaml.Media.FillRule __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::Microsoft.UI.Xaml.Media.FillRule*, int>**)ThisPtr)[6](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }
        internal static unsafe void set_FillRule(IObjectReference _obj, global::Microsoft.UI.Xaml.Media.FillRule value)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::Microsoft.UI.Xaml.Media.FillRule, int>**)ThisPtr)[7](ThisPtr, value));
            global::System.GC.KeepAlive(_obj);
        }



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0x5D, 0xD9, 0xB9, 0x11, 0xD9, 0xD3, 0x37, 0x53, 0xA0, 0x5C, 0x73, 0xA2, 0x7A, 0x2B, 0x51, 0x24 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("11B9D95D-D3D9-5337-A05C-73A27A2B5124")]
    internal interface IPathGeometry : global::Microsoft.UI.Xaml.Media.IPathGeometry
    {
    }
    internal static class IPathGeometryStaticsMethods
    {

        internal static unsafe global::Microsoft.UI.Xaml.DependencyProperty get_FiguresProperty(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[7](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Xaml.DependencyProperty.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.UI.Xaml.DependencyProperty.DisposeAbi(__retval);
            }
        }

        internal static unsafe global::Microsoft.UI.Xaml.DependencyProperty get_FillRuleProperty(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[6](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Xaml.DependencyProperty.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.UI.Xaml.DependencyProperty.DisposeAbi(__retval);
            }
        }



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0xFE, 0x8, 0xF4, 0xD7, 0x3A, 0x6C, 0xCE, 0x5C, 0x91, 0xCC, 0xC5, 0xA9, 0x5D, 0x4B, 0x34, 0x5A };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("D7F408FE-6C3A-5CCE-91CC-C5A95D4B345A")]
    internal interface IPathGeometryStatics : global::Microsoft.UI.Xaml.Media.IPathGeometryStatics
    {
    }
    internal static class IPathSegmentMethods
    {



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0xBE, 0xEB, 0x22, 0xB9, 0xF0, 0x8, 0xE9, 0x57, 0x87, 0x85, 0x7E, 0x57, 0x9, 0x7F, 0x3B, 0xD4 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("B922EBBE-08F0-57E9-8785-7E57097F3BD4")]
    internal interface IPathSegment : global::Microsoft.UI.Xaml.Media.IPathSegment
    {
    }
    internal static class IPathSegmentFactoryMethods
    {



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0xFF, 0xA4, 0x59, 0x5, 0x4B, 0xAC, 0xB7, 0x5B, 0xB5, 0x41, 0xD3, 0x73, 0x96, 0xE, 0x8, 0x3B };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("0559A4FF-AC4B-5BB7-B541-D373960E083B")]
    internal interface IPathSegmentFactory : global::Microsoft.UI.Xaml.Media.IPathSegmentFactory
    {
    }
    internal static class IPlaneProjectionMethods
    {

        internal static unsafe double get_CenterOfRotationX(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            double __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, double*, int>**)ThisPtr)[18](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }
        internal static unsafe void set_CenterOfRotationX(IObjectReference _obj, double value)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, double, int>**)ThisPtr)[19](ThisPtr, value));
            global::System.GC.KeepAlive(_obj);
        }

        internal static unsafe double get_CenterOfRotationY(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            double __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, double*, int>**)ThisPtr)[20](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }
        internal static unsafe void set_CenterOfRotationY(IObjectReference _obj, double value)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, double, int>**)ThisPtr)[21](ThisPtr, value));
            global::System.GC.KeepAlive(_obj);
        }

        internal static unsafe double get_CenterOfRotationZ(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            double __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, double*, int>**)ThisPtr)[22](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }
        internal static unsafe void set_CenterOfRotationZ(IObjectReference _obj, double value)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, double, int>**)ThisPtr)[23](ThisPtr, value));
            global::System.GC.KeepAlive(_obj);
        }

        internal static unsafe double get_GlobalOffsetX(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            double __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, double*, int>**)ThisPtr)[24](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }
        internal static unsafe void set_GlobalOffsetX(IObjectReference _obj, double value)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, double, int>**)ThisPtr)[25](ThisPtr, value));
            global::System.GC.KeepAlive(_obj);
        }

        internal static unsafe double get_GlobalOffsetY(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            double __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, double*, int>**)ThisPtr)[26](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }
        internal static unsafe void set_GlobalOffsetY(IObjectReference _obj, double value)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, double, int>**)ThisPtr)[27](ThisPtr, value));
            global::System.GC.KeepAlive(_obj);
        }

        internal static unsafe double get_GlobalOffsetZ(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            double __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, double*, int>**)ThisPtr)[28](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }
        internal static unsafe void set_GlobalOffsetZ(IObjectReference _obj, double value)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, double, int>**)ThisPtr)[29](ThisPtr, value));
            global::System.GC.KeepAlive(_obj);
        }

        internal static unsafe double get_LocalOffsetX(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            double __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, double*, int>**)ThisPtr)[6](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }
        internal static unsafe void set_LocalOffsetX(IObjectReference _obj, double value)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, double, int>**)ThisPtr)[7](ThisPtr, value));
            global::System.GC.KeepAlive(_obj);
        }

        internal static unsafe double get_LocalOffsetY(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            double __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, double*, int>**)ThisPtr)[8](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }
        internal static unsafe void set_LocalOffsetY(IObjectReference _obj, double value)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, double, int>**)ThisPtr)[9](ThisPtr, value));
            global::System.GC.KeepAlive(_obj);
        }

        internal static unsafe double get_LocalOffsetZ(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            double __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, double*, int>**)ThisPtr)[10](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }
        internal static unsafe void set_LocalOffsetZ(IObjectReference _obj, double value)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, double, int>**)ThisPtr)[11](ThisPtr, value));
            global::System.GC.KeepAlive(_obj);
        }

        internal static unsafe global::Microsoft.UI.Xaml.Media.Media3D.Matrix3D get_ProjectionMatrix(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::Microsoft.UI.Xaml.Media.Media3D.Matrix3D __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::Microsoft.UI.Xaml.Media.Media3D.Matrix3D*, int>**)ThisPtr)[30](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }

        internal static unsafe double get_RotationX(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            double __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, double*, int>**)ThisPtr)[12](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }
        internal static unsafe void set_RotationX(IObjectReference _obj, double value)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, double, int>**)ThisPtr)[13](ThisPtr, value));
            global::System.GC.KeepAlive(_obj);
        }

        internal static unsafe double get_RotationY(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            double __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, double*, int>**)ThisPtr)[14](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }
        internal static unsafe void set_RotationY(IObjectReference _obj, double value)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, double, int>**)ThisPtr)[15](ThisPtr, value));
            global::System.GC.KeepAlive(_obj);
        }

        internal static unsafe double get_RotationZ(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            double __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, double*, int>**)ThisPtr)[16](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }
        internal static unsafe void set_RotationZ(IObjectReference _obj, double value)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, double, int>**)ThisPtr)[17](ThisPtr, value));
            global::System.GC.KeepAlive(_obj);
        }



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0x36, 0x28, 0xE2, 0xD3, 0x22, 0x3, 0x75, 0x5D, 0x94, 0x1C, 0xA5, 0xFF, 0xB0, 0x51, 0x92, 0xB2 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("D3E22836-0322-5D75-941C-A5FFB05192B2")]
    internal interface IPlaneProjection : global::Microsoft.UI.Xaml.Media.IPlaneProjection
    {
    }
    internal static class IPlaneProjectionStaticsMethods
    {

        internal static unsafe global::Microsoft.UI.Xaml.DependencyProperty get_CenterOfRotationXProperty(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[12](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Xaml.DependencyProperty.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.UI.Xaml.DependencyProperty.DisposeAbi(__retval);
            }
        }

        internal static unsafe global::Microsoft.UI.Xaml.DependencyProperty get_CenterOfRotationYProperty(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[13](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Xaml.DependencyProperty.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.UI.Xaml.DependencyProperty.DisposeAbi(__retval);
            }
        }

        internal static unsafe global::Microsoft.UI.Xaml.DependencyProperty get_CenterOfRotationZProperty(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[14](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Xaml.DependencyProperty.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.UI.Xaml.DependencyProperty.DisposeAbi(__retval);
            }
        }

        internal static unsafe global::Microsoft.UI.Xaml.DependencyProperty get_GlobalOffsetXProperty(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[15](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Xaml.DependencyProperty.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.UI.Xaml.DependencyProperty.DisposeAbi(__retval);
            }
        }

        internal static unsafe global::Microsoft.UI.Xaml.DependencyProperty get_GlobalOffsetYProperty(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[16](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Xaml.DependencyProperty.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.UI.Xaml.DependencyProperty.DisposeAbi(__retval);
            }
        }

        internal static unsafe global::Microsoft.UI.Xaml.DependencyProperty get_GlobalOffsetZProperty(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[17](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Xaml.DependencyProperty.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.UI.Xaml.DependencyProperty.DisposeAbi(__retval);
            }
        }

        internal static unsafe global::Microsoft.UI.Xaml.DependencyProperty get_LocalOffsetXProperty(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[6](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Xaml.DependencyProperty.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.UI.Xaml.DependencyProperty.DisposeAbi(__retval);
            }
        }

        internal static unsafe global::Microsoft.UI.Xaml.DependencyProperty get_LocalOffsetYProperty(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[7](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Xaml.DependencyProperty.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.UI.Xaml.DependencyProperty.DisposeAbi(__retval);
            }
        }

        internal static unsafe global::Microsoft.UI.Xaml.DependencyProperty get_LocalOffsetZProperty(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[8](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Xaml.DependencyProperty.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.UI.Xaml.DependencyProperty.DisposeAbi(__retval);
            }
        }

        internal static unsafe global::Microsoft.UI.Xaml.DependencyProperty get_ProjectionMatrixProperty(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[18](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Xaml.DependencyProperty.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.UI.Xaml.DependencyProperty.DisposeAbi(__retval);
            }
        }

        internal static unsafe global::Microsoft.UI.Xaml.DependencyProperty get_RotationXProperty(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[9](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Xaml.DependencyProperty.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.UI.Xaml.DependencyProperty.DisposeAbi(__retval);
            }
        }

        internal static unsafe global::Microsoft.UI.Xaml.DependencyProperty get_RotationYProperty(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[10](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Xaml.DependencyProperty.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.UI.Xaml.DependencyProperty.DisposeAbi(__retval);
            }
        }

        internal static unsafe global::Microsoft.UI.Xaml.DependencyProperty get_RotationZProperty(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[11](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Xaml.DependencyProperty.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.UI.Xaml.DependencyProperty.DisposeAbi(__retval);
            }
        }



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0x18, 0x6C, 0xD8, 0x96, 0xDD, 0x90, 0x4A, 0x56, 0x82, 0x8A, 0x87, 0x35, 0xE4, 0x21, 0x9B, 0x1D };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("96D86C18-90DD-564A-828A-8735E4219B1D")]
    internal interface IPlaneProjectionStatics : global::Microsoft.UI.Xaml.Media.IPlaneProjectionStatics
    {
    }
    internal static class IPolyBezierSegmentMethods
    {

        internal static unsafe global::Microsoft.UI.Xaml.Media.PointCollection get_Points(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[6](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Xaml.Media.PointCollection.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.UI.Xaml.Media.PointCollection.DisposeAbi(__retval);
            }
        }
        internal static unsafe void set_Points(IObjectReference _obj, global::Microsoft.UI.Xaml.Media.PointCollection value)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __value = default;
            try
            {
                __value = global::ABI.Microsoft.UI.Xaml.Media.PointCollection.CreateMarshaler2(value);
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, int>**)ThisPtr)[7](ThisPtr, MarshalInspectable<object>.GetAbi(__value)));
                global::System.GC.KeepAlive(_obj);
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__value);
            }
        }



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0xA0, 0x60, 0xF7, 0xD7, 0x3A, 0xB9, 0x2A, 0x56, 0x81, 0x18, 0x63, 0x30, 0xED, 0x22, 0xC3, 0x7 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("D7F760A0-B93A-562A-8118-6330ED22C307")]
    internal interface IPolyBezierSegment : global::Microsoft.UI.Xaml.Media.IPolyBezierSegment
    {
    }
    internal static class IPolyBezierSegmentStaticsMethods
    {

        internal static unsafe global::Microsoft.UI.Xaml.DependencyProperty get_PointsProperty(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[6](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Xaml.DependencyProperty.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.UI.Xaml.DependencyProperty.DisposeAbi(__retval);
            }
        }



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0x89, 0xF0, 0x8E, 0x73, 0xF, 0xA8, 0xE0, 0x53, 0x81, 0x6F, 0xF7, 0x87, 0xA4, 0x46, 0x19, 0x7 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("738EF089-A80F-53E0-816F-F787A4461907")]
    internal interface IPolyBezierSegmentStatics : global::Microsoft.UI.Xaml.Media.IPolyBezierSegmentStatics
    {
    }
    internal static class IPolyLineSegmentMethods
    {

        internal static unsafe global::Microsoft.UI.Xaml.Media.PointCollection get_Points(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[6](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Xaml.Media.PointCollection.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.UI.Xaml.Media.PointCollection.DisposeAbi(__retval);
            }
        }
        internal static unsafe void set_Points(IObjectReference _obj, global::Microsoft.UI.Xaml.Media.PointCollection value)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __value = default;
            try
            {
                __value = global::ABI.Microsoft.UI.Xaml.Media.PointCollection.CreateMarshaler2(value);
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, int>**)ThisPtr)[7](ThisPtr, MarshalInspectable<object>.GetAbi(__value)));
                global::System.GC.KeepAlive(_obj);
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__value);
            }
        }



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0x87, 0xF2, 0x6E, 0x42, 0x87, 0x2, 0x6F, 0x53, 0xAD, 0x9E, 0x6A, 0x5, 0xEC, 0xBB, 0x32, 0x3A };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("426EF287-0287-536F-AD9E-6A05ECBB323A")]
    internal interface IPolyLineSegment : global::Microsoft.UI.Xaml.Media.IPolyLineSegment
    {
    }
    internal static class IPolyLineSegmentStaticsMethods
    {

        internal static unsafe global::Microsoft.UI.Xaml.DependencyProperty get_PointsProperty(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[6](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Xaml.DependencyProperty.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.UI.Xaml.DependencyProperty.DisposeAbi(__retval);
            }
        }



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0x68, 0xE5, 0x54, 0xCF, 0x1A, 0x10, 0x49, 0x53, 0x91, 0x89, 0x6F, 0x9A, 0x1E, 0x7F, 0x52, 0x80 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("CF54E568-101A-5349-9189-6F9A1E7F5280")]
    internal interface IPolyLineSegmentStatics : global::Microsoft.UI.Xaml.Media.IPolyLineSegmentStatics
    {
    }
    internal static class IPolyQuadraticBezierSegmentMethods
    {

        internal static unsafe global::Microsoft.UI.Xaml.Media.PointCollection get_Points(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[6](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Xaml.Media.PointCollection.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.UI.Xaml.Media.PointCollection.DisposeAbi(__retval);
            }
        }
        internal static unsafe void set_Points(IObjectReference _obj, global::Microsoft.UI.Xaml.Media.PointCollection value)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __value = default;
            try
            {
                __value = global::ABI.Microsoft.UI.Xaml.Media.PointCollection.CreateMarshaler2(value);
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, int>**)ThisPtr)[7](ThisPtr, MarshalInspectable<object>.GetAbi(__value)));
                global::System.GC.KeepAlive(_obj);
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__value);
            }
        }



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0x4C, 0x2F, 0x37, 0x56, 0x31, 0xC5, 0x3E, 0x5C, 0xB0, 0xE0, 0x16, 0x45, 0xF5, 0xA8, 0xD8, 0x72 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("56372F4C-C531-5C3E-B0E0-1645F5A8D872")]
    internal interface IPolyQuadraticBezierSegment : global::Microsoft.UI.Xaml.Media.IPolyQuadraticBezierSegment
    {
    }
    internal static class IPolyQuadraticBezierSegmentStaticsMethods
    {

        internal static unsafe global::Microsoft.UI.Xaml.DependencyProperty get_PointsProperty(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[6](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Xaml.DependencyProperty.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.UI.Xaml.DependencyProperty.DisposeAbi(__retval);
            }
        }



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0x4D, 0x37, 0xB6, 0x7E, 0x30, 0xCD, 0x7, 0x55, 0xB2, 0xAB, 0xC4, 0xE3, 0xA7, 0xDC, 0x60, 0xBF };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("7EB6374D-CD30-5507-B2AB-C4E3A7DC60BF")]
    internal interface IPolyQuadraticBezierSegmentStatics : global::Microsoft.UI.Xaml.Media.IPolyQuadraticBezierSegmentStatics
    {
    }
    internal static class IProjectionMethods
    {



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0xB3, 0x64, 0x53, 0xC9, 0x58, 0x60, 0xE5, 0x5E, 0x9E, 0x28, 0xD3, 0x8B, 0x76, 0x79, 0xFC, 0xD4 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("C95364B3-6058-5EE5-9E28-D38B7679FCD4")]
    internal interface IProjection : global::Microsoft.UI.Xaml.Media.IProjection
    {
    }
    internal static class IProjectionFactoryMethods
    {


        internal static unsafe global::Microsoft.UI.Xaml.Media.Projection CreateInstance(IObjectReference _obj, object baseInterface, out object innerInterface)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __baseInterface = default;
            IntPtr __innerInterface = default;
            IntPtr __retval = default;
            try
            {
                __baseInterface = MarshalInspectable<object>.CreateMarshaler2(baseInterface);
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, IntPtr*, IntPtr*, int>**)ThisPtr)[6](ThisPtr, MarshalInspectable<object>.GetAbi(__baseInterface), &__innerInterface, &__retval));
                global::System.GC.KeepAlive(_obj);
                innerInterface = MarshalInspectable<object>.FromAbi(__innerInterface);
                return global::ABI.Microsoft.UI.Xaml.Media.Projection.FromAbi(__retval);
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__baseInterface);
                MarshalInspectable<object>.DisposeAbi(__innerInterface);
                global::ABI.Microsoft.UI.Xaml.Media.Projection.DisposeAbi(__retval);
            }
        }


        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0x4F, 0xA3, 0xE, 0x87, 0x61, 0xDB, 0x75, 0x5B, 0x89, 0xAD, 0xE0, 0x48, 0xC, 0x80, 0x29, 0x37 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("870EA34F-DB61-5B75-89AD-E0480C802937")]
    internal interface IProjectionFactory : global::Microsoft.UI.Xaml.Media.IProjectionFactory
    {
    }
    internal static class IQuadraticBezierSegmentMethods
    {

        internal static unsafe global::Windows.Foundation.Point get_Point1(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::Windows.Foundation.Point __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::Windows.Foundation.Point*, int>**)ThisPtr)[6](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }
        internal static unsafe void set_Point1(IObjectReference _obj, global::Windows.Foundation.Point value)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::Windows.Foundation.Point, int>**)ThisPtr)[7](ThisPtr, value));
            global::System.GC.KeepAlive(_obj);
        }

        internal static unsafe global::Windows.Foundation.Point get_Point2(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::Windows.Foundation.Point __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::Windows.Foundation.Point*, int>**)ThisPtr)[8](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }
        internal static unsafe void set_Point2(IObjectReference _obj, global::Windows.Foundation.Point value)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::Windows.Foundation.Point, int>**)ThisPtr)[9](ThisPtr, value));
            global::System.GC.KeepAlive(_obj);
        }



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0xE4, 0xAB, 0x48, 0x60, 0x12, 0x7A, 0x95, 0x51, 0xBD, 0x61, 0x71, 0xDF, 0xD0, 0x36, 0x1C, 0x38 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("6048ABE4-7A12-5195-BD61-71DFD0361C38")]
    internal interface IQuadraticBezierSegment : global::Microsoft.UI.Xaml.Media.IQuadraticBezierSegment
    {
    }
    internal static class IQuadraticBezierSegmentStaticsMethods
    {

        internal static unsafe global::Microsoft.UI.Xaml.DependencyProperty get_Point1Property(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[6](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Xaml.DependencyProperty.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.UI.Xaml.DependencyProperty.DisposeAbi(__retval);
            }
        }

        internal static unsafe global::Microsoft.UI.Xaml.DependencyProperty get_Point2Property(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[7](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Xaml.DependencyProperty.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.UI.Xaml.DependencyProperty.DisposeAbi(__retval);
            }
        }



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0x65, 0xEA, 0x56, 0x4D, 0x1A, 0xA, 0x8A, 0x52, 0xA5, 0xB6, 0x41, 0xDA, 0x3, 0xAC, 0x71, 0xF4 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("4D56EA65-0A1A-528A-A5B6-41DA03AC71F4")]
    internal interface IQuadraticBezierSegmentStatics : global::Microsoft.UI.Xaml.Media.IQuadraticBezierSegmentStatics
    {
    }
    internal static class IRadialGradientBrushMethods
    {

        internal static unsafe global::Windows.Foundation.Point get_Center(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::Windows.Foundation.Point __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::Windows.Foundation.Point*, int>**)ThisPtr)[6](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }
        internal static unsafe void set_Center(IObjectReference _obj, global::Windows.Foundation.Point value)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::Windows.Foundation.Point, int>**)ThisPtr)[7](ThisPtr, value));
            global::System.GC.KeepAlive(_obj);
        }

        internal static unsafe global::Windows.Foundation.Point get_GradientOrigin(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::Windows.Foundation.Point __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::Windows.Foundation.Point*, int>**)ThisPtr)[12](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }
        internal static unsafe void set_GradientOrigin(IObjectReference _obj, global::Windows.Foundation.Point value)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::Windows.Foundation.Point, int>**)ThisPtr)[13](ThisPtr, value));
            global::System.GC.KeepAlive(_obj);
        }

        internal static unsafe global::Windows.Foundation.Collections.IObservableVector<global::Microsoft.UI.Xaml.Media.GradientStop> get_GradientStops(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[20](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                _ = global::WinRT.GenericTypeInstantiations.Windows_Foundation_Collections_IObservableVector_1_Microsoft_UI_Xaml_Media_GradientStop.EnsureInitialized();
                return MarshalInterface<global::Windows.Foundation.Collections.IObservableVector<global::Microsoft.UI.Xaml.Media.GradientStop>>.FromAbi(__retval);
            }
            finally
            {
                MarshalInterface<global::Windows.Foundation.Collections.IObservableVector<global::Microsoft.UI.Xaml.Media.GradientStop>>.DisposeAbi(__retval);
            }
        }

        internal static unsafe global::Microsoft.UI.Composition.CompositionColorSpace get_InterpolationSpace(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::Microsoft.UI.Composition.CompositionColorSpace __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::Microsoft.UI.Composition.CompositionColorSpace*, int>**)ThisPtr)[16](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }
        internal static unsafe void set_InterpolationSpace(IObjectReference _obj, global::Microsoft.UI.Composition.CompositionColorSpace value)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::Microsoft.UI.Composition.CompositionColorSpace, int>**)ThisPtr)[17](ThisPtr, value));
            global::System.GC.KeepAlive(_obj);
        }

        internal static unsafe global::Microsoft.UI.Xaml.Media.BrushMappingMode get_MappingMode(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::Microsoft.UI.Xaml.Media.BrushMappingMode __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::Microsoft.UI.Xaml.Media.BrushMappingMode*, int>**)ThisPtr)[14](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }
        internal static unsafe void set_MappingMode(IObjectReference _obj, global::Microsoft.UI.Xaml.Media.BrushMappingMode value)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::Microsoft.UI.Xaml.Media.BrushMappingMode, int>**)ThisPtr)[15](ThisPtr, value));
            global::System.GC.KeepAlive(_obj);
        }

        internal static unsafe double get_RadiusX(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            double __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, double*, int>**)ThisPtr)[8](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }
        internal static unsafe void set_RadiusX(IObjectReference _obj, double value)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, double, int>**)ThisPtr)[9](ThisPtr, value));
            global::System.GC.KeepAlive(_obj);
        }

        internal static unsafe double get_RadiusY(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            double __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, double*, int>**)ThisPtr)[10](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }
        internal static unsafe void set_RadiusY(IObjectReference _obj, double value)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, double, int>**)ThisPtr)[11](ThisPtr, value));
            global::System.GC.KeepAlive(_obj);
        }

        internal static unsafe global::Microsoft.UI.Xaml.Media.GradientSpreadMethod get_SpreadMethod(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::Microsoft.UI.Xaml.Media.GradientSpreadMethod __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::Microsoft.UI.Xaml.Media.GradientSpreadMethod*, int>**)ThisPtr)[18](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }
        internal static unsafe void set_SpreadMethod(IObjectReference _obj, global::Microsoft.UI.Xaml.Media.GradientSpreadMethod value)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::Microsoft.UI.Xaml.Media.GradientSpreadMethod, int>**)ThisPtr)[19](ThisPtr, value));
            global::System.GC.KeepAlive(_obj);
        }



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0xE1, 0x3C, 0x49, 0x5D, 0x44, 0xB8, 0x6A, 0x54, 0xB7, 0x72, 0xB3, 0xBC, 0xBA, 0x7E, 0x98, 0xEE };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("5D493CE1-B844-546A-B772-B3BCBA7E98EE")]
    internal interface IRadialGradientBrush : global::Microsoft.UI.Xaml.Media.IRadialGradientBrush
    {
    }
    internal static class IRadialGradientBrushFactoryMethods
    {


        internal static unsafe global::Microsoft.UI.Xaml.Media.RadialGradientBrush CreateInstance(IObjectReference _obj, object baseInterface, out object innerInterface)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __baseInterface = default;
            IntPtr __innerInterface = default;
            IntPtr __retval = default;
            try
            {
                __baseInterface = MarshalInspectable<object>.CreateMarshaler2(baseInterface);
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, IntPtr*, IntPtr*, int>**)ThisPtr)[6](ThisPtr, MarshalInspectable<object>.GetAbi(__baseInterface), &__innerInterface, &__retval));
                global::System.GC.KeepAlive(_obj);
                innerInterface = MarshalInspectable<object>.FromAbi(__innerInterface);
                return global::ABI.Microsoft.UI.Xaml.Media.RadialGradientBrush.FromAbi(__retval);
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__baseInterface);
                MarshalInspectable<object>.DisposeAbi(__innerInterface);
                global::ABI.Microsoft.UI.Xaml.Media.RadialGradientBrush.DisposeAbi(__retval);
            }
        }


        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0x6E, 0xA2, 0xB, 0xD9, 0x67, 0x9E, 0xBD, 0x54, 0xA2, 0xD9, 0x61, 0xC8, 0xF9, 0xF1, 0xD4, 0x33 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("D90BA26E-9E67-54BD-A2D9-61C8F9F1D433")]
    internal interface IRadialGradientBrushFactory : global::Microsoft.UI.Xaml.Media.IRadialGradientBrushFactory
    {
    }
    internal static class IRadialGradientBrushStaticsMethods
    {

        internal static unsafe global::Microsoft.UI.Xaml.DependencyProperty get_CenterProperty(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[6](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Xaml.DependencyProperty.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.UI.Xaml.DependencyProperty.DisposeAbi(__retval);
            }
        }

        internal static unsafe global::Microsoft.UI.Xaml.DependencyProperty get_GradientOriginProperty(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[9](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Xaml.DependencyProperty.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.UI.Xaml.DependencyProperty.DisposeAbi(__retval);
            }
        }

        internal static unsafe global::Microsoft.UI.Xaml.DependencyProperty get_InterpolationSpaceProperty(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[10](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Xaml.DependencyProperty.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.UI.Xaml.DependencyProperty.DisposeAbi(__retval);
            }
        }

        internal static unsafe global::Microsoft.UI.Xaml.DependencyProperty get_MappingModeProperty(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[11](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Xaml.DependencyProperty.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.UI.Xaml.DependencyProperty.DisposeAbi(__retval);
            }
        }

        internal static unsafe global::Microsoft.UI.Xaml.DependencyProperty get_RadiusXProperty(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[7](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Xaml.DependencyProperty.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.UI.Xaml.DependencyProperty.DisposeAbi(__retval);
            }
        }

        internal static unsafe global::Microsoft.UI.Xaml.DependencyProperty get_RadiusYProperty(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[8](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Xaml.DependencyProperty.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.UI.Xaml.DependencyProperty.DisposeAbi(__retval);
            }
        }

        internal static unsafe global::Microsoft.UI.Xaml.DependencyProperty get_SpreadMethodProperty(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[12](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Xaml.DependencyProperty.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.UI.Xaml.DependencyProperty.DisposeAbi(__retval);
            }
        }



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0xB8, 0xA0, 0x75, 0xF2, 0xF9, 0x66, 0x7D, 0x5B, 0xA4, 0x15, 0x7E, 0xDA, 0x65, 0xFE, 0x6D, 0xD3 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("F275A0B8-66F9-5B7D-A415-7EDA65FE6DD3")]
    internal interface IRadialGradientBrushStatics : global::Microsoft.UI.Xaml.Media.IRadialGradientBrushStatics
    {
    }
    internal static class IRectangleGeometryMethods
    {

        internal static unsafe global::Windows.Foundation.Rect get_Rect(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::Windows.Foundation.Rect __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::Windows.Foundation.Rect*, int>**)ThisPtr)[6](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }
        internal static unsafe void set_Rect(IObjectReference _obj, global::Windows.Foundation.Rect value)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::Windows.Foundation.Rect, int>**)ThisPtr)[7](ThisPtr, value));
            global::System.GC.KeepAlive(_obj);
        }



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0x90, 0x38, 0x14, 0xB6, 0xF5, 0xA5, 0xE0, 0x54, 0xAB, 0x42, 0xD8, 0x8B, 0xAB, 0x45, 0x1F, 0x4 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("B6143890-A5F5-54E0-AB42-D88BAB451F04")]
    internal interface IRectangleGeometry : global::Microsoft.UI.Xaml.Media.IRectangleGeometry
    {
    }
    internal static class IRectangleGeometryStaticsMethods
    {

        internal static unsafe global::Microsoft.UI.Xaml.DependencyProperty get_RectProperty(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[6](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Xaml.DependencyProperty.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.UI.Xaml.DependencyProperty.DisposeAbi(__retval);
            }
        }



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0x26, 0xAC, 0xE7, 0x1A, 0x8B, 0x8A, 0xA5, 0x55, 0xB0, 0x35, 0x58, 0x6E, 0x2B, 0x64, 0x29, 0x19 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("1AE7AC26-8A8B-55A5-B035-586E2B642919")]
    internal interface IRectangleGeometryStatics : global::Microsoft.UI.Xaml.Media.IRectangleGeometryStatics
    {
    }
    internal static class IRenderedEventArgsMethods
    {

        internal static unsafe global::System.TimeSpan get_FrameDuration(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::ABI.System.TimeSpan __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::ABI.System.TimeSpan*, int>**)ThisPtr)[6](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.System.TimeSpan.FromAbi(__retval);
            }
            finally
            {
                global::ABI.System.TimeSpan.DisposeAbi(__retval);
            }
        }



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0x85, 0xB8, 0x68, 0xB2, 0x8D, 0x11, 0x66, 0x5B, 0x80, 0x99, 0x3B, 0x6B, 0xB8, 0x64, 0x47, 0x26 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("B268B885-118D-5B66-8099-3B6BB8644726")]
    internal interface IRenderedEventArgs : global::Microsoft.UI.Xaml.Media.IRenderedEventArgs
    {
    }
    internal static class IRenderingEventArgsMethods
    {

        internal static unsafe global::System.TimeSpan get_RenderingTime(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::ABI.System.TimeSpan __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::ABI.System.TimeSpan*, int>**)ThisPtr)[6](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.System.TimeSpan.FromAbi(__retval);
            }
            finally
            {
                global::ABI.System.TimeSpan.DisposeAbi(__retval);
            }
        }



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0x8D, 0x8F, 0x7C, 0xA6, 0x85, 0x18, 0xC9, 0x5F, 0x97, 0x5C, 0x90, 0x12, 0x24, 0xF7, 0x9B, 0x1E };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("A67C8F8D-1885-5FC9-975C-901224F79B1E")]
    internal interface IRenderingEventArgs : global::Microsoft.UI.Xaml.Media.IRenderingEventArgs
    {
    }
    internal static class IRevealBackgroundBrushMethods
    {



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0x12, 0xD9, 0x41, 0x37, 0x83, 0xFC, 0x92, 0x5C, 0xA2, 0x2F, 0xEF, 0xC2, 0x95, 0x88, 0xB3, 0x73 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("3741D912-FC83-5C92-A22F-EFC29588B373")]
    internal interface IRevealBackgroundBrush : global::Microsoft.UI.Xaml.Media.IRevealBackgroundBrush
    {
    }
    internal static class IRevealBackgroundBrushFactoryMethods
    {


        internal static unsafe global::Microsoft.UI.Xaml.Media.RevealBackgroundBrush CreateInstance(IObjectReference _obj, object baseInterface, out object innerInterface)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __baseInterface = default;
            IntPtr __innerInterface = default;
            IntPtr __retval = default;
            try
            {
                __baseInterface = MarshalInspectable<object>.CreateMarshaler2(baseInterface);
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, IntPtr*, IntPtr*, int>**)ThisPtr)[6](ThisPtr, MarshalInspectable<object>.GetAbi(__baseInterface), &__innerInterface, &__retval));
                global::System.GC.KeepAlive(_obj);
                innerInterface = MarshalInspectable<object>.FromAbi(__innerInterface);
                return global::ABI.Microsoft.UI.Xaml.Media.RevealBackgroundBrush.FromAbi(__retval);
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__baseInterface);
                MarshalInspectable<object>.DisposeAbi(__innerInterface);
                global::ABI.Microsoft.UI.Xaml.Media.RevealBackgroundBrush.DisposeAbi(__retval);
            }
        }


        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0xA, 0x2B, 0x6F, 0x7E, 0xD, 0xE7, 0x9F, 0x52, 0x80, 0x97, 0x43, 0xE0, 0x23, 0xF2, 0x94, 0x3B };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("7E6F2B0A-E70D-529F-8097-43E023F2943B")]
    internal interface IRevealBackgroundBrushFactory : global::Microsoft.UI.Xaml.Media.IRevealBackgroundBrushFactory
    {
    }
    internal static class IRevealBorderBrushMethods
    {



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0xCB, 0xBF, 0x5D, 0xF8, 0xC6, 0x2E, 0x73, 0x5C, 0xA8, 0xBE, 0x38, 0x64, 0xC9, 0x80, 0xB9, 0x17 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("F85DBFCB-2EC6-5C73-A8BE-3864C980B917")]
    internal interface IRevealBorderBrush : global::Microsoft.UI.Xaml.Media.IRevealBorderBrush
    {
    }
    internal static class IRevealBorderBrushFactoryMethods
    {


        internal static unsafe global::Microsoft.UI.Xaml.Media.RevealBorderBrush CreateInstance(IObjectReference _obj, object baseInterface, out object innerInterface)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __baseInterface = default;
            IntPtr __innerInterface = default;
            IntPtr __retval = default;
            try
            {
                __baseInterface = MarshalInspectable<object>.CreateMarshaler2(baseInterface);
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, IntPtr*, IntPtr*, int>**)ThisPtr)[6](ThisPtr, MarshalInspectable<object>.GetAbi(__baseInterface), &__innerInterface, &__retval));
                global::System.GC.KeepAlive(_obj);
                innerInterface = MarshalInspectable<object>.FromAbi(__innerInterface);
                return global::ABI.Microsoft.UI.Xaml.Media.RevealBorderBrush.FromAbi(__retval);
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__baseInterface);
                MarshalInspectable<object>.DisposeAbi(__innerInterface);
                global::ABI.Microsoft.UI.Xaml.Media.RevealBorderBrush.DisposeAbi(__retval);
            }
        }


        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0xC2, 0xBD, 0x77, 0xC6, 0x45, 0xF0, 0x2C, 0x53, 0xBB, 0x13, 0x3C, 0xEE, 0xE1, 0x91, 0x43, 0xB2 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("C677BDC2-F045-532C-BB13-3CEEE19143B2")]
    internal interface IRevealBorderBrushFactory : global::Microsoft.UI.Xaml.Media.IRevealBorderBrushFactory
    {
    }
    internal static class IRevealBrushMethods
    {

        internal static unsafe bool get_AlwaysUseFallback(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            byte __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, byte*, int>**)ThisPtr)[10](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval != 0;
        }
        internal static unsafe void set_AlwaysUseFallback(IObjectReference _obj, bool value)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, byte, int>**)ThisPtr)[11](ThisPtr, (byte)(value ? 1 : 0)));
            global::System.GC.KeepAlive(_obj);
        }

        internal static unsafe global::Windows.UI.Color get_Color(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::Windows.UI.Color __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::Windows.UI.Color*, int>**)ThisPtr)[6](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }
        internal static unsafe void set_Color(IObjectReference _obj, global::Windows.UI.Color value)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::Windows.UI.Color, int>**)ThisPtr)[7](ThisPtr, value));
            global::System.GC.KeepAlive(_obj);
        }

        internal static unsafe global::Microsoft.UI.Xaml.ApplicationTheme get_TargetTheme(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::Microsoft.UI.Xaml.ApplicationTheme __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::Microsoft.UI.Xaml.ApplicationTheme*, int>**)ThisPtr)[8](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }
        internal static unsafe void set_TargetTheme(IObjectReference _obj, global::Microsoft.UI.Xaml.ApplicationTheme value)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::Microsoft.UI.Xaml.ApplicationTheme, int>**)ThisPtr)[9](ThisPtr, value));
            global::System.GC.KeepAlive(_obj);
        }



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0x30, 0x73, 0x34, 0x30, 0x3, 0xA7, 0x86, 0x50, 0xBD, 0x82, 0x4E, 0x28, 0xCE, 0x83, 0x32, 0x33 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("30347330-A703-5086-BD82-4E28CE833233")]
    internal interface IRevealBrush : global::Microsoft.UI.Xaml.Media.IRevealBrush
    {
    }
    internal static class IRevealBrushProtectedFactoryMethods
    {


        internal static unsafe global::Microsoft.UI.Xaml.Media.RevealBrush CreateInstance(IObjectReference _obj, object baseInterface, out object innerInterface)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __baseInterface = default;
            IntPtr __innerInterface = default;
            IntPtr __retval = default;
            try
            {
                __baseInterface = MarshalInspectable<object>.CreateMarshaler2(baseInterface);
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, IntPtr*, IntPtr*, int>**)ThisPtr)[6](ThisPtr, MarshalInspectable<object>.GetAbi(__baseInterface), &__innerInterface, &__retval));
                global::System.GC.KeepAlive(_obj);
                innerInterface = MarshalInspectable<object>.FromAbi(__innerInterface);
                return global::ABI.Microsoft.UI.Xaml.Media.RevealBrush.FromAbi(__retval);
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__baseInterface);
                MarshalInspectable<object>.DisposeAbi(__innerInterface);
                global::ABI.Microsoft.UI.Xaml.Media.RevealBrush.DisposeAbi(__retval);
            }
        }


        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0x5B, 0x4F, 0xA9, 0x46, 0xBD, 0x8A, 0x71, 0x55, 0xB0, 0x49, 0x7F, 0x76, 0xE3, 0xF9, 0x67, 0xC9 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("46A94F5B-8ABD-5571-B049-7F76E3F967C9")]
    internal interface IRevealBrushProtectedFactory : global::Microsoft.UI.Xaml.Media.IRevealBrushProtectedFactory
    {
    }
    internal static class IRevealBrushStaticsMethods
    {


        internal static unsafe void SetState(IObjectReference _obj, global::Microsoft.UI.Xaml.UIElement element, global::Microsoft.UI.Xaml.Media.RevealBrushState value)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __element = default;
            try
            {
                __element = global::ABI.Microsoft.UI.Xaml.UIElement.CreateMarshaler2(element);
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, global::Microsoft.UI.Xaml.Media.RevealBrushState, int>**)ThisPtr)[10](ThisPtr, MarshalInspectable<object>.GetAbi(__element), value));
                global::System.GC.KeepAlive(_obj);
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__element);
            }
        }

        internal static unsafe global::Microsoft.UI.Xaml.Media.RevealBrushState GetState(IObjectReference _obj, global::Microsoft.UI.Xaml.UIElement element)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __element = default;
            global::Microsoft.UI.Xaml.Media.RevealBrushState __retval = default;
            try
            {
                __element = global::ABI.Microsoft.UI.Xaml.UIElement.CreateMarshaler2(element);
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, global::Microsoft.UI.Xaml.Media.RevealBrushState*, int>**)ThisPtr)[11](ThisPtr, MarshalInspectable<object>.GetAbi(__element), &__retval));
                global::System.GC.KeepAlive(_obj);
                return __retval;
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__element);
            }
        }
        internal static unsafe global::Microsoft.UI.Xaml.DependencyProperty get_AlwaysUseFallbackProperty(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[8](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Xaml.DependencyProperty.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.UI.Xaml.DependencyProperty.DisposeAbi(__retval);
            }
        }

        internal static unsafe global::Microsoft.UI.Xaml.DependencyProperty get_ColorProperty(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[6](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Xaml.DependencyProperty.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.UI.Xaml.DependencyProperty.DisposeAbi(__retval);
            }
        }

        internal static unsafe global::Microsoft.UI.Xaml.DependencyProperty get_StateProperty(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[9](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Xaml.DependencyProperty.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.UI.Xaml.DependencyProperty.DisposeAbi(__retval);
            }
        }

        internal static unsafe global::Microsoft.UI.Xaml.DependencyProperty get_TargetThemeProperty(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[7](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Xaml.DependencyProperty.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.UI.Xaml.DependencyProperty.DisposeAbi(__retval);
            }
        }



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0xCB, 0x7C, 0x4D, 0xF4, 0x1E, 0x7A, 0x64, 0x5D, 0xAB, 0x82, 0xA6, 0xE5, 0x29, 0xB, 0xE8, 0xD1 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("F44D7CCB-7A1E-5D64-AB82-A6E5290BE8D1")]
    internal interface IRevealBrushStatics : global::Microsoft.UI.Xaml.Media.IRevealBrushStatics
    {
    }
    internal static class IRotateTransformMethods
    {

        internal static unsafe double get_Angle(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            double __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, double*, int>**)ThisPtr)[10](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }
        internal static unsafe void set_Angle(IObjectReference _obj, double value)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, double, int>**)ThisPtr)[11](ThisPtr, value));
            global::System.GC.KeepAlive(_obj);
        }

        internal static unsafe double get_CenterX(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            double __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, double*, int>**)ThisPtr)[6](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }
        internal static unsafe void set_CenterX(IObjectReference _obj, double value)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, double, int>**)ThisPtr)[7](ThisPtr, value));
            global::System.GC.KeepAlive(_obj);
        }

        internal static unsafe double get_CenterY(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            double __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, double*, int>**)ThisPtr)[8](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }
        internal static unsafe void set_CenterY(IObjectReference _obj, double value)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, double, int>**)ThisPtr)[9](ThisPtr, value));
            global::System.GC.KeepAlive(_obj);
        }



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0x7C, 0x6E, 0x68, 0xD4, 0x74, 0xA3, 0xAC, 0x5C, 0x89, 0x27, 0xE, 0xF0, 0x7C, 0x5B, 0x25, 0x4D };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("D4686E7C-A374-5CAC-8927-0EF07C5B254D")]
    internal interface IRotateTransform : global::Microsoft.UI.Xaml.Media.IRotateTransform
    {
    }
    internal static class IRotateTransformStaticsMethods
    {

        internal static unsafe global::Microsoft.UI.Xaml.DependencyProperty get_AngleProperty(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[8](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Xaml.DependencyProperty.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.UI.Xaml.DependencyProperty.DisposeAbi(__retval);
            }
        }

        internal static unsafe global::Microsoft.UI.Xaml.DependencyProperty get_CenterXProperty(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[6](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Xaml.DependencyProperty.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.UI.Xaml.DependencyProperty.DisposeAbi(__retval);
            }
        }

        internal static unsafe global::Microsoft.UI.Xaml.DependencyProperty get_CenterYProperty(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[7](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Xaml.DependencyProperty.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.UI.Xaml.DependencyProperty.DisposeAbi(__retval);
            }
        }



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0x62, 0xC6, 0xC4, 0x8E, 0xF8, 0x4, 0xD7, 0x51, 0xBC, 0xB2, 0x17, 0xF1, 0xC, 0x2F, 0xAA, 0x38 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("8EC4C662-04F8-51D7-BCB2-17F10C2FAA38")]
    internal interface IRotateTransformStatics : global::Microsoft.UI.Xaml.Media.IRotateTransformStatics
    {
    }
    internal static class IScaleTransformMethods
    {

        internal static unsafe double get_CenterX(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            double __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, double*, int>**)ThisPtr)[6](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }
        internal static unsafe void set_CenterX(IObjectReference _obj, double value)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, double, int>**)ThisPtr)[7](ThisPtr, value));
            global::System.GC.KeepAlive(_obj);
        }

        internal static unsafe double get_CenterY(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            double __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, double*, int>**)ThisPtr)[8](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }
        internal static unsafe void set_CenterY(IObjectReference _obj, double value)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, double, int>**)ThisPtr)[9](ThisPtr, value));
            global::System.GC.KeepAlive(_obj);
        }

        internal static unsafe double get_ScaleX(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            double __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, double*, int>**)ThisPtr)[10](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }
        internal static unsafe void set_ScaleX(IObjectReference _obj, double value)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, double, int>**)ThisPtr)[11](ThisPtr, value));
            global::System.GC.KeepAlive(_obj);
        }

        internal static unsafe double get_ScaleY(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            double __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, double*, int>**)ThisPtr)[12](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }
        internal static unsafe void set_ScaleY(IObjectReference _obj, double value)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, double, int>**)ThisPtr)[13](ThisPtr, value));
            global::System.GC.KeepAlive(_obj);
        }



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0xA4, 0x64, 0xB0, 0x94, 0xF0, 0x34, 0xF9, 0x5E, 0x8B, 0x67, 0x44, 0x4F, 0x56, 0x99, 0xF5, 0x2A };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("94B064A4-34F0-5EF9-8B67-444F5699F52A")]
    internal interface IScaleTransform : global::Microsoft.UI.Xaml.Media.IScaleTransform
    {
    }
    internal static class IScaleTransformStaticsMethods
    {

        internal static unsafe global::Microsoft.UI.Xaml.DependencyProperty get_CenterXProperty(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[6](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Xaml.DependencyProperty.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.UI.Xaml.DependencyProperty.DisposeAbi(__retval);
            }
        }

        internal static unsafe global::Microsoft.UI.Xaml.DependencyProperty get_CenterYProperty(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[7](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Xaml.DependencyProperty.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.UI.Xaml.DependencyProperty.DisposeAbi(__retval);
            }
        }

        internal static unsafe global::Microsoft.UI.Xaml.DependencyProperty get_ScaleXProperty(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[8](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Xaml.DependencyProperty.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.UI.Xaml.DependencyProperty.DisposeAbi(__retval);
            }
        }

        internal static unsafe global::Microsoft.UI.Xaml.DependencyProperty get_ScaleYProperty(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[9](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Xaml.DependencyProperty.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.UI.Xaml.DependencyProperty.DisposeAbi(__retval);
            }
        }



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0xD5, 0x5B, 0x48, 0x76, 0xBF, 0xA5, 0x90, 0x57, 0xA8, 0x37, 0x81, 0x93, 0xC8, 0x4D, 0xF3, 0x53 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("76485BD5-A5BF-5790-A837-8193C84DF353")]
    internal interface IScaleTransformStatics : global::Microsoft.UI.Xaml.Media.IScaleTransformStatics
    {
    }
    internal static class IShadowMethods
    {



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0x6A, 0xFD, 0x12, 0xCC, 0xAA, 0x50, 0xB3, 0x5E, 0x9A, 0xE, 0xB9, 0x38, 0xB4, 0x54, 0xC4, 0x39 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("CC12FD6A-50AA-5EB3-9A0E-B938B454C439")]
    internal interface IShadow : global::Microsoft.UI.Xaml.Media.IShadow
    {
    }
    internal static class IShadowFactoryMethods
    {



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0xBB, 0x5F, 0x11, 0xC9, 0xC3, 0xFC, 0xBF, 0x52, 0xB8, 0xEE, 0xC3, 0x48, 0x10, 0x2A, 0x46, 0xE0 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("C9115FBB-FCC3-52BF-B8EE-C348102A46E0")]
    internal interface IShadowFactory : global::Microsoft.UI.Xaml.Media.IShadowFactory
    {
    }
    internal static class ISkewTransformMethods
    {

        internal static unsafe double get_AngleX(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            double __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, double*, int>**)ThisPtr)[10](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }
        internal static unsafe void set_AngleX(IObjectReference _obj, double value)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, double, int>**)ThisPtr)[11](ThisPtr, value));
            global::System.GC.KeepAlive(_obj);
        }

        internal static unsafe double get_AngleY(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            double __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, double*, int>**)ThisPtr)[12](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }
        internal static unsafe void set_AngleY(IObjectReference _obj, double value)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, double, int>**)ThisPtr)[13](ThisPtr, value));
            global::System.GC.KeepAlive(_obj);
        }

        internal static unsafe double get_CenterX(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            double __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, double*, int>**)ThisPtr)[6](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }
        internal static unsafe void set_CenterX(IObjectReference _obj, double value)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, double, int>**)ThisPtr)[7](ThisPtr, value));
            global::System.GC.KeepAlive(_obj);
        }

        internal static unsafe double get_CenterY(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            double __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, double*, int>**)ThisPtr)[8](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }
        internal static unsafe void set_CenterY(IObjectReference _obj, double value)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, double, int>**)ThisPtr)[9](ThisPtr, value));
            global::System.GC.KeepAlive(_obj);
        }



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0xA6, 0xBA, 0xA, 0x23, 0xB6, 0xA9, 0x10, 0x52, 0x87, 0x3F, 0x36, 0xBE, 0xA2, 0x9D, 0x7C, 0x6 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("230ABAA6-A9B6-5210-873F-36BEA29D7C06")]
    internal interface ISkewTransform : global::Microsoft.UI.Xaml.Media.ISkewTransform
    {
    }
    internal static class ISkewTransformStaticsMethods
    {

        internal static unsafe global::Microsoft.UI.Xaml.DependencyProperty get_AngleXProperty(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[8](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Xaml.DependencyProperty.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.UI.Xaml.DependencyProperty.DisposeAbi(__retval);
            }
        }

        internal static unsafe global::Microsoft.UI.Xaml.DependencyProperty get_AngleYProperty(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[9](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Xaml.DependencyProperty.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.UI.Xaml.DependencyProperty.DisposeAbi(__retval);
            }
        }

        internal static unsafe global::Microsoft.UI.Xaml.DependencyProperty get_CenterXProperty(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[6](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Xaml.DependencyProperty.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.UI.Xaml.DependencyProperty.DisposeAbi(__retval);
            }
        }

        internal static unsafe global::Microsoft.UI.Xaml.DependencyProperty get_CenterYProperty(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[7](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Xaml.DependencyProperty.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.UI.Xaml.DependencyProperty.DisposeAbi(__retval);
            }
        }



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0x50, 0x51, 0x26, 0x93, 0xD0, 0x53, 0xE3, 0x52, 0x88, 0xA3, 0x3D, 0x93, 0xE2, 0xED, 0x86, 0x1A };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("93265150-53D0-52E3-88A3-3D93E2ED861A")]
    internal interface ISkewTransformStatics : global::Microsoft.UI.Xaml.Media.ISkewTransformStatics
    {
    }
    internal static class ISolidColorBrushMethods
    {

        internal static unsafe global::Windows.UI.Color get_Color(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::Windows.UI.Color __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::Windows.UI.Color*, int>**)ThisPtr)[6](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }
        internal static unsafe void set_Color(IObjectReference _obj, global::Windows.UI.Color value)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::Windows.UI.Color, int>**)ThisPtr)[7](ThisPtr, value));
            global::System.GC.KeepAlive(_obj);
        }



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0x31, 0x5C, 0x86, 0xB3, 0xC8, 0x37, 0xC1, 0x55, 0x8A, 0x72, 0xD4, 0x1C, 0x67, 0x64, 0x2E, 0x2A };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("B3865C31-37C8-55C1-8A72-D41C67642E2A")]
    internal interface ISolidColorBrush : global::Microsoft.UI.Xaml.Media.ISolidColorBrush
    {
    }
    internal static class ISolidColorBrushFactoryMethods
    {


        internal static unsafe global::Microsoft.UI.Xaml.Media.SolidColorBrush CreateInstanceWithColor(IObjectReference _obj, global::Windows.UI.Color color)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::Windows.UI.Color, IntPtr*, int>**)ThisPtr)[6](ThisPtr, color, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Xaml.Media.SolidColorBrush.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.UI.Xaml.Media.SolidColorBrush.DisposeAbi(__retval);
            }
        }


        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0x84, 0x93, 0x55, 0x7B, 0xAA, 0x4D, 0xF4, 0x54, 0x91, 0xEF, 0x33, 0xA2, 0x3F, 0xD8, 0x16, 0xCA };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("7B559384-4DAA-54F4-91EF-33A23FD816CA")]
    internal interface ISolidColorBrushFactory : global::Microsoft.UI.Xaml.Media.ISolidColorBrushFactory
    {
    }
    internal static class ISolidColorBrushStaticsMethods
    {

        internal static unsafe global::Microsoft.UI.Xaml.DependencyProperty get_ColorProperty(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[6](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Xaml.DependencyProperty.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.UI.Xaml.DependencyProperty.DisposeAbi(__retval);
            }
        }



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0xA0, 0x6D, 0xC1, 0x6B, 0xE6, 0xC4, 0xB8, 0x59, 0x99, 0x5B, 0xB3, 0x1E, 0x48, 0x42, 0x4C, 0x7 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("6BC16DA0-C4E6-59B8-995B-B31E48424C07")]
    internal interface ISolidColorBrushStatics : global::Microsoft.UI.Xaml.Media.ISolidColorBrushStatics
    {
    }
    internal static class ISystemBackdropMethods
    {


        internal static unsafe global::Microsoft.UI.Composition.SystemBackdrops.SystemBackdropConfiguration GetDefaultSystemBackdropConfiguration(IObjectReference _obj, global::Microsoft.UI.Composition.ICompositionSupportsSystemBackdrop target, global::Microsoft.UI.Xaml.XamlRoot xamlRoot)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __target = default;
            ObjectReferenceValue __xamlRoot = default;
            IntPtr __retval = default;
            try
            {
                __target = MarshalInterface<global::Microsoft.UI.Composition.ICompositionSupportsSystemBackdrop>.CreateMarshaler2(target, global::ABI.Microsoft.UI.Composition.ICompositionSupportsSystemBackdropMethods.IID);
                __xamlRoot = global::ABI.Microsoft.UI.Xaml.XamlRoot.CreateMarshaler2(xamlRoot);
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, IntPtr, IntPtr*, int>**)ThisPtr)[6](ThisPtr, MarshalInspectable<object>.GetAbi(__target), MarshalInspectable<object>.GetAbi(__xamlRoot), &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Composition.SystemBackdrops.SystemBackdropConfiguration.FromAbi(__retval);
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__target);
                MarshalInspectable<object>.DisposeMarshaler(__xamlRoot);
                global::ABI.Microsoft.UI.Composition.SystemBackdrops.SystemBackdropConfiguration.DisposeAbi(__retval);
            }
        }


        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0xC4, 0xD5, 0xEE, 0x5A, 0xAC, 0x37, 0x52, 0x58, 0xB7, 0x3F, 0x1B, 0x76, 0xEB, 0xC3, 0x20, 0x5F };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("5AEED5C4-37AC-5852-B73F-1B76EBC3205F")]
    internal interface ISystemBackdrop : global::Microsoft.UI.Xaml.Media.ISystemBackdrop
    {
    }
    internal static class ISystemBackdropFactoryMethods
    {


        internal static unsafe global::Microsoft.UI.Xaml.Media.SystemBackdrop CreateInstance(IObjectReference _obj, object baseInterface, out object innerInterface)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __baseInterface = default;
            IntPtr __innerInterface = default;
            IntPtr __retval = default;
            try
            {
                __baseInterface = MarshalInspectable<object>.CreateMarshaler2(baseInterface);
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, IntPtr*, IntPtr*, int>**)ThisPtr)[6](ThisPtr, MarshalInspectable<object>.GetAbi(__baseInterface), &__innerInterface, &__retval));
                global::System.GC.KeepAlive(_obj);
                innerInterface = MarshalInspectable<object>.FromAbi(__innerInterface);
                return global::ABI.Microsoft.UI.Xaml.Media.SystemBackdrop.FromAbi(__retval);
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__baseInterface);
                MarshalInspectable<object>.DisposeAbi(__innerInterface);
                global::ABI.Microsoft.UI.Xaml.Media.SystemBackdrop.DisposeAbi(__retval);
            }
        }


        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0x6B, 0x65, 0x7, 0x1E, 0xD2, 0xFA, 0x29, 0x5B, 0x91, 0x3F, 0xB6, 0x74, 0x8B, 0xC4, 0x59, 0x42 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("1E07656B-FAD2-5B29-913F-B6748BC45942")]
    internal interface ISystemBackdropFactory : global::Microsoft.UI.Xaml.Media.ISystemBackdropFactory
    {
    }
    public static class ISystemBackdropOverridesMethods
    {


        internal static unsafe void OnTargetConnected(IObjectReference _obj, global::Microsoft.UI.Composition.ICompositionSupportsSystemBackdrop connectedTarget, global::Microsoft.UI.Xaml.XamlRoot xamlRoot)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __connectedTarget = default;
            ObjectReferenceValue __xamlRoot = default;
            try
            {
                __connectedTarget = MarshalInterface<global::Microsoft.UI.Composition.ICompositionSupportsSystemBackdrop>.CreateMarshaler2(connectedTarget, global::ABI.Microsoft.UI.Composition.ICompositionSupportsSystemBackdropMethods.IID);
                __xamlRoot = global::ABI.Microsoft.UI.Xaml.XamlRoot.CreateMarshaler2(xamlRoot);
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, IntPtr, int>**)ThisPtr)[6](ThisPtr, MarshalInspectable<object>.GetAbi(__connectedTarget), MarshalInspectable<object>.GetAbi(__xamlRoot)));
                global::System.GC.KeepAlive(_obj);
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__connectedTarget);
                MarshalInspectable<object>.DisposeMarshaler(__xamlRoot);
            }
        }

        internal static unsafe void OnTargetDisconnected(IObjectReference _obj, global::Microsoft.UI.Composition.ICompositionSupportsSystemBackdrop disconnectedTarget)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __disconnectedTarget = default;
            try
            {
                __disconnectedTarget = MarshalInterface<global::Microsoft.UI.Composition.ICompositionSupportsSystemBackdrop>.CreateMarshaler2(disconnectedTarget, global::ABI.Microsoft.UI.Composition.ICompositionSupportsSystemBackdropMethods.IID);
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, int>**)ThisPtr)[7](ThisPtr, MarshalInspectable<object>.GetAbi(__disconnectedTarget)));
                global::System.GC.KeepAlive(_obj);
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__disconnectedTarget);
            }
        }

        internal static unsafe void OnDefaultSystemBackdropConfigurationChanged(IObjectReference _obj, global::Microsoft.UI.Composition.ICompositionSupportsSystemBackdrop target, global::Microsoft.UI.Xaml.XamlRoot xamlRoot)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __target = default;
            ObjectReferenceValue __xamlRoot = default;
            try
            {
                __target = MarshalInterface<global::Microsoft.UI.Composition.ICompositionSupportsSystemBackdrop>.CreateMarshaler2(target, global::ABI.Microsoft.UI.Composition.ICompositionSupportsSystemBackdropMethods.IID);
                __xamlRoot = global::ABI.Microsoft.UI.Xaml.XamlRoot.CreateMarshaler2(xamlRoot);
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, IntPtr, int>**)ThisPtr)[8](ThisPtr, MarshalInspectable<object>.GetAbi(__target), MarshalInspectable<object>.GetAbi(__xamlRoot)));
                global::System.GC.KeepAlive(_obj);
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__target);
                MarshalInspectable<object>.DisposeMarshaler(__xamlRoot);
            }
        }


        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0x99, 0x53, 0x1F, 0xEB, 0xD7, 0xCA, 0x11, 0x56, 0xB6, 0x37, 0x9, 0xD7, 0x6A, 0x7, 0xE7, 0x8 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

        public static global::System.IntPtr AbiToProjectionVftablePtr => ISystemBackdropOverrides.AbiToProjectionVftablePtr;

    }

    [Guid("EB1F5399-CAD7-5611-B637-09D76A07E708")]
    internal unsafe interface ISystemBackdropOverrides : global::Microsoft.UI.Xaml.Media.ISystemBackdropOverrides
    {

        public static readonly IntPtr AbiToProjectionVftablePtr;
        static unsafe ISystemBackdropOverrides()
        {
            AbiToProjectionVftablePtr = ComWrappersSupport.AllocateVtableMemory(typeof(ISystemBackdropOverrides), sizeof(IInspectable.Vftbl) + sizeof(IntPtr) * 3);
            *(IInspectable.Vftbl*)AbiToProjectionVftablePtr = IInspectable.Vftbl.AbiToProjectionVftable;
            ((delegate* unmanaged[Stdcall]<IntPtr, IntPtr, IntPtr, int>*)AbiToProjectionVftablePtr)[6] = &Do_Abi_OnTargetConnected_0;
            ((delegate* unmanaged[Stdcall]<IntPtr, IntPtr, int>*)AbiToProjectionVftablePtr)[7] = &Do_Abi_OnTargetDisconnected_1;
            ((delegate* unmanaged[Stdcall]<IntPtr, IntPtr, IntPtr, int>*)AbiToProjectionVftablePtr)[8] = &Do_Abi_OnDefaultSystemBackdropConfigurationChanged_2;
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvStdcall) })]
        private static unsafe int Do_Abi_OnTargetConnected_0(IntPtr thisPtr, IntPtr connectedTarget, IntPtr xamlRoot)
        {



            try
            {
                global::WinRT.ComWrappersSupport.FindObject<global::Microsoft.UI.Xaml.Media.ISystemBackdropOverrides>(thisPtr).OnTargetConnected(MarshalInterface<global::Microsoft.UI.Composition.ICompositionSupportsSystemBackdrop>.FromAbi(connectedTarget), global::ABI.Microsoft.UI.Xaml.XamlRoot.FromAbi(xamlRoot));

            }
            catch (Exception __exception__)
            {
                global::WinRT.ExceptionHelpers.SetErrorInfo(__exception__);
                return global::WinRT.ExceptionHelpers.GetHRForException(__exception__);
            }
            return 0;
        }
        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvStdcall) })]
        private static unsafe int Do_Abi_OnTargetDisconnected_1(IntPtr thisPtr, IntPtr disconnectedTarget)
        {



            try
            {
                global::WinRT.ComWrappersSupport.FindObject<global::Microsoft.UI.Xaml.Media.ISystemBackdropOverrides>(thisPtr).OnTargetDisconnected(MarshalInterface<global::Microsoft.UI.Composition.ICompositionSupportsSystemBackdrop>.FromAbi(disconnectedTarget));

            }
            catch (Exception __exception__)
            {
                global::WinRT.ExceptionHelpers.SetErrorInfo(__exception__);
                return global::WinRT.ExceptionHelpers.GetHRForException(__exception__);
            }
            return 0;
        }
        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvStdcall) })]
        private static unsafe int Do_Abi_OnDefaultSystemBackdropConfigurationChanged_2(IntPtr thisPtr, IntPtr target, IntPtr xamlRoot)
        {



            try
            {
                global::WinRT.ComWrappersSupport.FindObject<global::Microsoft.UI.Xaml.Media.ISystemBackdropOverrides>(thisPtr).OnDefaultSystemBackdropConfigurationChanged(MarshalInterface<global::Microsoft.UI.Composition.ICompositionSupportsSystemBackdrop>.FromAbi(target), global::ABI.Microsoft.UI.Xaml.XamlRoot.FromAbi(xamlRoot));

            }
            catch (Exception __exception__)
            {
                global::WinRT.ExceptionHelpers.SetErrorInfo(__exception__);
                return global::WinRT.ExceptionHelpers.GetHRForException(__exception__);
            }
            return 0;
        }
    }

    internal static class IThemeShadowMethods
    {

        internal static unsafe global::Microsoft.UI.Xaml.UIElementWeakCollection get_Receivers(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[6](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Xaml.UIElementWeakCollection.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.UI.Xaml.UIElementWeakCollection.DisposeAbi(__retval);
            }
        }



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0x8A, 0x20, 0x64, 0xC2, 0xF4, 0xD1, 0xAE, 0x58, 0x8A, 0x88, 0xFC, 0x59, 0x14, 0x8B, 0xEE, 0x69 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("C264208A-D1F4-58AE-8A88-FC59148BEE69")]
    internal interface IThemeShadow : global::Microsoft.UI.Xaml.Media.IThemeShadow
    {
    }
    internal static class IThemeShadowFactoryMethods
    {


        internal static unsafe global::Microsoft.UI.Xaml.Media.ThemeShadow CreateInstance(IObjectReference _obj, object baseInterface, out object innerInterface)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __baseInterface = default;
            IntPtr __innerInterface = default;
            IntPtr __retval = default;
            try
            {
                __baseInterface = MarshalInspectable<object>.CreateMarshaler2(baseInterface);
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, IntPtr*, IntPtr*, int>**)ThisPtr)[6](ThisPtr, MarshalInspectable<object>.GetAbi(__baseInterface), &__innerInterface, &__retval));
                global::System.GC.KeepAlive(_obj);
                innerInterface = MarshalInspectable<object>.FromAbi(__innerInterface);
                return global::ABI.Microsoft.UI.Xaml.Media.ThemeShadow.FromAbi(__retval);
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__baseInterface);
                MarshalInspectable<object>.DisposeAbi(__innerInterface);
                global::ABI.Microsoft.UI.Xaml.Media.ThemeShadow.DisposeAbi(__retval);
            }
        }


        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0x96, 0x9C, 0x4A, 0x70, 0xA0, 0x76, 0x9E, 0x56, 0x8C, 0xEB, 0x34, 0xE9, 0x2A, 0x23, 0xFE, 0x11 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("704A9C96-76A0-569E-8CEB-34E92A23FE11")]
    internal interface IThemeShadowFactory : global::Microsoft.UI.Xaml.Media.IThemeShadowFactory
    {
    }
    internal static class ITileBrushMethods
    {

        internal static unsafe global::Microsoft.UI.Xaml.Media.AlignmentX get_AlignmentX(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::Microsoft.UI.Xaml.Media.AlignmentX __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::Microsoft.UI.Xaml.Media.AlignmentX*, int>**)ThisPtr)[6](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }
        internal static unsafe void set_AlignmentX(IObjectReference _obj, global::Microsoft.UI.Xaml.Media.AlignmentX value)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::Microsoft.UI.Xaml.Media.AlignmentX, int>**)ThisPtr)[7](ThisPtr, value));
            global::System.GC.KeepAlive(_obj);
        }

        internal static unsafe global::Microsoft.UI.Xaml.Media.AlignmentY get_AlignmentY(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::Microsoft.UI.Xaml.Media.AlignmentY __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::Microsoft.UI.Xaml.Media.AlignmentY*, int>**)ThisPtr)[8](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }
        internal static unsafe void set_AlignmentY(IObjectReference _obj, global::Microsoft.UI.Xaml.Media.AlignmentY value)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::Microsoft.UI.Xaml.Media.AlignmentY, int>**)ThisPtr)[9](ThisPtr, value));
            global::System.GC.KeepAlive(_obj);
        }

        internal static unsafe global::Microsoft.UI.Xaml.Media.Stretch get_Stretch(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::Microsoft.UI.Xaml.Media.Stretch __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::Microsoft.UI.Xaml.Media.Stretch*, int>**)ThisPtr)[10](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }
        internal static unsafe void set_Stretch(IObjectReference _obj, global::Microsoft.UI.Xaml.Media.Stretch value)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::Microsoft.UI.Xaml.Media.Stretch, int>**)ThisPtr)[11](ThisPtr, value));
            global::System.GC.KeepAlive(_obj);
        }



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0xD, 0x6, 0x46, 0xEE, 0xBC, 0xCA, 0x5D, 0x50, 0x88, 0x3C, 0x75, 0xD2, 0xE0, 0xE4, 0x58, 0x75 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("EE46060D-CABC-505D-883C-75D2E0E45875")]
    internal interface ITileBrush : global::Microsoft.UI.Xaml.Media.ITileBrush
    {
    }
    internal static class ITileBrushFactoryMethods
    {


        internal static unsafe global::Microsoft.UI.Xaml.Media.TileBrush CreateInstance(IObjectReference _obj, object baseInterface, out object innerInterface)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __baseInterface = default;
            IntPtr __innerInterface = default;
            IntPtr __retval = default;
            try
            {
                __baseInterface = MarshalInspectable<object>.CreateMarshaler2(baseInterface);
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, IntPtr*, IntPtr*, int>**)ThisPtr)[6](ThisPtr, MarshalInspectable<object>.GetAbi(__baseInterface), &__innerInterface, &__retval));
                global::System.GC.KeepAlive(_obj);
                innerInterface = MarshalInspectable<object>.FromAbi(__innerInterface);
                return global::ABI.Microsoft.UI.Xaml.Media.TileBrush.FromAbi(__retval);
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__baseInterface);
                MarshalInspectable<object>.DisposeAbi(__innerInterface);
                global::ABI.Microsoft.UI.Xaml.Media.TileBrush.DisposeAbi(__retval);
            }
        }


        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0xE6, 0xE5, 0x42, 0x85, 0x77, 0x51, 0x6F, 0x50, 0x8A, 0x3B, 0xAA, 0x7D, 0xA6, 0x51, 0xF0, 0x99 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("8542E5E6-5177-506F-8A3B-AA7DA651F099")]
    internal interface ITileBrushFactory : global::Microsoft.UI.Xaml.Media.ITileBrushFactory
    {
    }
    internal static class ITileBrushStaticsMethods
    {

        internal static unsafe global::Microsoft.UI.Xaml.DependencyProperty get_AlignmentXProperty(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[6](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Xaml.DependencyProperty.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.UI.Xaml.DependencyProperty.DisposeAbi(__retval);
            }
        }

        internal static unsafe global::Microsoft.UI.Xaml.DependencyProperty get_AlignmentYProperty(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[7](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Xaml.DependencyProperty.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.UI.Xaml.DependencyProperty.DisposeAbi(__retval);
            }
        }

        internal static unsafe global::Microsoft.UI.Xaml.DependencyProperty get_StretchProperty(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[8](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Xaml.DependencyProperty.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.UI.Xaml.DependencyProperty.DisposeAbi(__retval);
            }
        }



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0x7B, 0x19, 0x2, 0xF4, 0x47, 0x90, 0x8A, 0x5F, 0x90, 0xBC, 0x6F, 0x5D, 0x8C, 0x74, 0x8A, 0x5F };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("F402197B-9047-5F8A-90BC-6F5D8C748A5F")]
    internal interface ITileBrushStatics : global::Microsoft.UI.Xaml.Media.ITileBrushStatics
    {
    }
    internal static class ITransformMethods
    {



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0xE5, 0xDE, 0xA8, 0x92, 0x13, 0x14, 0xB9, 0x56, 0x8C, 0xCA, 0x3C, 0x46, 0x91, 0x8F, 0xDE, 0x1B };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("92A8DEE5-1413-56B9-8CCA-3C46918FDE1B")]
    internal interface ITransform : global::Microsoft.UI.Xaml.Media.ITransform
    {
    }
    internal static class ITransformFactoryMethods
    {



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0xF9, 0x93, 0xA2, 0x7D, 0x2E, 0xB8, 0x15, 0x5D, 0xB6, 0x23, 0xC0, 0x82, 0x10, 0xCB, 0xB6, 0x40 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("7DA293F9-B82E-5D15-B623-C08210CBB640")]
    internal interface ITransformFactory : global::Microsoft.UI.Xaml.Media.ITransformFactory
    {
    }
    internal static class ITransformGroupMethods
    {

        internal static unsafe global::Microsoft.UI.Xaml.Media.TransformCollection get_Children(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[6](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Xaml.Media.TransformCollection.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.UI.Xaml.Media.TransformCollection.DisposeAbi(__retval);
            }
        }
        internal static unsafe void set_Children(IObjectReference _obj, global::Microsoft.UI.Xaml.Media.TransformCollection value)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __value = default;
            try
            {
                __value = global::ABI.Microsoft.UI.Xaml.Media.TransformCollection.CreateMarshaler2(value);
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, int>**)ThisPtr)[7](ThisPtr, MarshalInspectable<object>.GetAbi(__value)));
                global::System.GC.KeepAlive(_obj);
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__value);
            }
        }

        internal static unsafe global::Microsoft.UI.Xaml.Media.Matrix get_Value(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::Microsoft.UI.Xaml.Media.Matrix __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::Microsoft.UI.Xaml.Media.Matrix*, int>**)ThisPtr)[8](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0x3B, 0x5F, 0xC5, 0x17, 0x9C, 0x89, 0x8F, 0x58, 0x8B, 0xD4, 0x40, 0xFA, 0x3A, 0x5F, 0xCB, 0x4 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("17C55F3B-899C-588F-8BD4-40FA3A5FCB04")]
    internal interface ITransformGroup : global::Microsoft.UI.Xaml.Media.ITransformGroup
    {
    }
    internal static class ITransformGroupStaticsMethods
    {

        internal static unsafe global::Microsoft.UI.Xaml.DependencyProperty get_ChildrenProperty(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[6](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Xaml.DependencyProperty.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.UI.Xaml.DependencyProperty.DisposeAbi(__retval);
            }
        }



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0xF6, 0x8, 0x15, 0x8F, 0xCF, 0x7D, 0xD5, 0x53, 0xBB, 0xC0, 0xD8, 0xFC, 0xD9, 0x6D, 0x73, 0x99 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("8F1508F6-7DCF-53D5-BBC0-D8FCD96D7399")]
    internal interface ITransformGroupStatics : global::Microsoft.UI.Xaml.Media.ITransformGroupStatics
    {
    }
    internal static class ITranslateTransformMethods
    {

        internal static unsafe double get_X(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            double __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, double*, int>**)ThisPtr)[6](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }
        internal static unsafe void set_X(IObjectReference _obj, double value)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, double, int>**)ThisPtr)[7](ThisPtr, value));
            global::System.GC.KeepAlive(_obj);
        }

        internal static unsafe double get_Y(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            double __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, double*, int>**)ThisPtr)[8](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }
        internal static unsafe void set_Y(IObjectReference _obj, double value)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, double, int>**)ThisPtr)[9](ThisPtr, value));
            global::System.GC.KeepAlive(_obj);
        }



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0xA9, 0x1C, 0xA2, 0xCF, 0x9F, 0xB7, 0x50, 0x54, 0xB4, 0x59, 0xA9, 0x6C, 0x48, 0xCB, 0x2C, 0x8F };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("CFA21CA9-B79F-5450-B459-A96C48CB2C8F")]
    internal interface ITranslateTransform : global::Microsoft.UI.Xaml.Media.ITranslateTransform
    {
    }
    internal static class ITranslateTransformStaticsMethods
    {

        internal static unsafe global::Microsoft.UI.Xaml.DependencyProperty get_XProperty(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[6](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Xaml.DependencyProperty.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.UI.Xaml.DependencyProperty.DisposeAbi(__retval);
            }
        }

        internal static unsafe global::Microsoft.UI.Xaml.DependencyProperty get_YProperty(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[7](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Xaml.DependencyProperty.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.UI.Xaml.DependencyProperty.DisposeAbi(__retval);
            }
        }



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0x11, 0xEB, 0x42, 0x13, 0x6E, 0x5A, 0x63, 0x52, 0xAB, 0x3E, 0x9B, 0x67, 0x2A, 0x86, 0xFC, 0xC };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("1342EB11-5A6E-5263-AB3E-9B672A86FC0C")]
    internal interface ITranslateTransformStatics : global::Microsoft.UI.Xaml.Media.ITranslateTransformStatics
    {
    }
    internal static class IVisualTreeHelperMethods
    {



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0x1E, 0xAC, 0x69, 0x5F, 0x4, 0x65, 0x3F, 0x5E, 0xA1, 0x1C, 0x87, 0x68, 0x4C, 0x1D, 0xB8, 0x14 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("5F69AC1E-6504-5E3F-A11C-87684C1DB814")]
    internal interface IVisualTreeHelper : global::Microsoft.UI.Xaml.Media.IVisualTreeHelper
    {
    }
    internal static class IVisualTreeHelperStaticsMethods
    {


        internal static unsafe global::System.Collections.Generic.IEnumerable<global::Microsoft.UI.Xaml.UIElement> FindElementsInHostCoordinates(IObjectReference _obj, global::Windows.Foundation.Point intersectingPoint, global::Microsoft.UI.Xaml.UIElement subtree)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __subtree = default;
            IntPtr __retval = default;
            try
            {
                __subtree = global::ABI.Microsoft.UI.Xaml.UIElement.CreateMarshaler2(subtree);
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::Windows.Foundation.Point, IntPtr, IntPtr*, int>**)ThisPtr)[6](ThisPtr, intersectingPoint, MarshalInspectable<object>.GetAbi(__subtree), &__retval));
                global::System.GC.KeepAlive(_obj);
                _ = global::WinRT.GenericTypeInstantiations.Windows_Foundation_Collections_IIterable_1_Microsoft_UI_Xaml_UIElement.EnsureInitialized();
                return MarshalInterface<global::System.Collections.Generic.IEnumerable<global::Microsoft.UI.Xaml.UIElement>>.FromAbi(__retval);
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__subtree);
                MarshalInterface<global::System.Collections.Generic.IEnumerable<global::Microsoft.UI.Xaml.UIElement>>.DisposeAbi(__retval);
            }
        }

        internal static unsafe global::System.Collections.Generic.IEnumerable<global::Microsoft.UI.Xaml.UIElement> FindElementsInHostCoordinates(IObjectReference _obj, global::Windows.Foundation.Rect intersectingRect, global::Microsoft.UI.Xaml.UIElement subtree)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __subtree = default;
            IntPtr __retval = default;
            try
            {
                __subtree = global::ABI.Microsoft.UI.Xaml.UIElement.CreateMarshaler2(subtree);
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::Windows.Foundation.Rect, IntPtr, IntPtr*, int>**)ThisPtr)[7](ThisPtr, intersectingRect, MarshalInspectable<object>.GetAbi(__subtree), &__retval));
                global::System.GC.KeepAlive(_obj);
                _ = global::WinRT.GenericTypeInstantiations.Windows_Foundation_Collections_IIterable_1_Microsoft_UI_Xaml_UIElement.EnsureInitialized();
                return MarshalInterface<global::System.Collections.Generic.IEnumerable<global::Microsoft.UI.Xaml.UIElement>>.FromAbi(__retval);
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__subtree);
                MarshalInterface<global::System.Collections.Generic.IEnumerable<global::Microsoft.UI.Xaml.UIElement>>.DisposeAbi(__retval);
            }
        }

        internal static unsafe global::System.Collections.Generic.IEnumerable<global::Microsoft.UI.Xaml.UIElement> FindElementsInHostCoordinates(IObjectReference _obj, global::Windows.Foundation.Point intersectingPoint, global::Microsoft.UI.Xaml.UIElement subtree, bool includeAllElements)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __subtree = default;
            IntPtr __retval = default;
            try
            {
                __subtree = global::ABI.Microsoft.UI.Xaml.UIElement.CreateMarshaler2(subtree);
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::Windows.Foundation.Point, IntPtr, byte, IntPtr*, int>**)ThisPtr)[8](ThisPtr, intersectingPoint, MarshalInspectable<object>.GetAbi(__subtree), (byte)(includeAllElements ? 1 : 0), &__retval));
                global::System.GC.KeepAlive(_obj);
                _ = global::WinRT.GenericTypeInstantiations.Windows_Foundation_Collections_IIterable_1_Microsoft_UI_Xaml_UIElement.EnsureInitialized();
                return MarshalInterface<global::System.Collections.Generic.IEnumerable<global::Microsoft.UI.Xaml.UIElement>>.FromAbi(__retval);
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__subtree);
                MarshalInterface<global::System.Collections.Generic.IEnumerable<global::Microsoft.UI.Xaml.UIElement>>.DisposeAbi(__retval);
            }
        }

        internal static unsafe global::System.Collections.Generic.IEnumerable<global::Microsoft.UI.Xaml.UIElement> FindElementsInHostCoordinates(IObjectReference _obj, global::Windows.Foundation.Rect intersectingRect, global::Microsoft.UI.Xaml.UIElement subtree, bool includeAllElements)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __subtree = default;
            IntPtr __retval = default;
            try
            {
                __subtree = global::ABI.Microsoft.UI.Xaml.UIElement.CreateMarshaler2(subtree);
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::Windows.Foundation.Rect, IntPtr, byte, IntPtr*, int>**)ThisPtr)[9](ThisPtr, intersectingRect, MarshalInspectable<object>.GetAbi(__subtree), (byte)(includeAllElements ? 1 : 0), &__retval));
                global::System.GC.KeepAlive(_obj);
                _ = global::WinRT.GenericTypeInstantiations.Windows_Foundation_Collections_IIterable_1_Microsoft_UI_Xaml_UIElement.EnsureInitialized();
                return MarshalInterface<global::System.Collections.Generic.IEnumerable<global::Microsoft.UI.Xaml.UIElement>>.FromAbi(__retval);
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__subtree);
                MarshalInterface<global::System.Collections.Generic.IEnumerable<global::Microsoft.UI.Xaml.UIElement>>.DisposeAbi(__retval);
            }
        }

        internal static unsafe global::Microsoft.UI.Xaml.DependencyObject GetChild(IObjectReference _obj, global::Microsoft.UI.Xaml.DependencyObject reference, int childIndex)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __reference = default;
            IntPtr __retval = default;
            try
            {
                __reference = global::ABI.Microsoft.UI.Xaml.DependencyObject.CreateMarshaler2(reference);
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, int, IntPtr*, int>**)ThisPtr)[10](ThisPtr, MarshalInspectable<object>.GetAbi(__reference), childIndex, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Xaml.DependencyObject.FromAbi(__retval);
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__reference);
                global::ABI.Microsoft.UI.Xaml.DependencyObject.DisposeAbi(__retval);
            }
        }

        internal static unsafe int GetChildrenCount(IObjectReference _obj, global::Microsoft.UI.Xaml.DependencyObject reference)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __reference = default;
            int __retval = default;
            try
            {
                __reference = global::ABI.Microsoft.UI.Xaml.DependencyObject.CreateMarshaler2(reference);
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, int*, int>**)ThisPtr)[11](ThisPtr, MarshalInspectable<object>.GetAbi(__reference), &__retval));
                global::System.GC.KeepAlive(_obj);
                return __retval;
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__reference);
            }
        }

        internal static unsafe global::Microsoft.UI.Xaml.DependencyObject GetParent(IObjectReference _obj, global::Microsoft.UI.Xaml.DependencyObject reference)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __reference = default;
            IntPtr __retval = default;
            try
            {
                __reference = global::ABI.Microsoft.UI.Xaml.DependencyObject.CreateMarshaler2(reference);
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, IntPtr*, int>**)ThisPtr)[12](ThisPtr, MarshalInspectable<object>.GetAbi(__reference), &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Xaml.DependencyObject.FromAbi(__retval);
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__reference);
                global::ABI.Microsoft.UI.Xaml.DependencyObject.DisposeAbi(__retval);
            }
        }

        internal static unsafe void DisconnectChildrenRecursive(IObjectReference _obj, global::Microsoft.UI.Xaml.UIElement element)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __element = default;
            try
            {
                __element = global::ABI.Microsoft.UI.Xaml.UIElement.CreateMarshaler2(element);
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, int>**)ThisPtr)[13](ThisPtr, MarshalInspectable<object>.GetAbi(__element)));
                global::System.GC.KeepAlive(_obj);
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__element);
            }
        }

        internal static unsafe global::System.Collections.Generic.IReadOnlyList<global::Microsoft.UI.Xaml.Controls.Primitives.Popup> GetOpenPopups(IObjectReference _obj, global::Microsoft.UI.Xaml.Window window)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __window = default;
            IntPtr __retval = default;
            try
            {
                __window = global::ABI.Microsoft.UI.Xaml.Window.CreateMarshaler2(window);
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, IntPtr*, int>**)ThisPtr)[14](ThisPtr, MarshalInspectable<object>.GetAbi(__window), &__retval));
                global::System.GC.KeepAlive(_obj);
                _ = global::WinRT.GenericTypeInstantiations.Windows_Foundation_Collections_IVectorView_1_Microsoft_UI_Xaml_Controls_Primitives_Popup.EnsureInitialized();
                return MarshalInterface<global::System.Collections.Generic.IReadOnlyList<global::Microsoft.UI.Xaml.Controls.Primitives.Popup>>.FromAbi(__retval);
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__window);
                MarshalInterface<global::System.Collections.Generic.IReadOnlyList<global::Microsoft.UI.Xaml.Controls.Primitives.Popup>>.DisposeAbi(__retval);
            }
        }

        internal static unsafe global::System.Collections.Generic.IReadOnlyList<global::Microsoft.UI.Xaml.Controls.Primitives.Popup> GetOpenPopupsForXamlRoot(IObjectReference _obj, global::Microsoft.UI.Xaml.XamlRoot xamlRoot)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __xamlRoot = default;
            IntPtr __retval = default;
            try
            {
                __xamlRoot = global::ABI.Microsoft.UI.Xaml.XamlRoot.CreateMarshaler2(xamlRoot);
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, IntPtr*, int>**)ThisPtr)[15](ThisPtr, MarshalInspectable<object>.GetAbi(__xamlRoot), &__retval));
                global::System.GC.KeepAlive(_obj);
                _ = global::WinRT.GenericTypeInstantiations.Windows_Foundation_Collections_IVectorView_1_Microsoft_UI_Xaml_Controls_Primitives_Popup.EnsureInitialized();
                return MarshalInterface<global::System.Collections.Generic.IReadOnlyList<global::Microsoft.UI.Xaml.Controls.Primitives.Popup>>.FromAbi(__retval);
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__xamlRoot);
                MarshalInterface<global::System.Collections.Generic.IReadOnlyList<global::Microsoft.UI.Xaml.Controls.Primitives.Popup>>.DisposeAbi(__retval);
            }
        }


        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0x3C, 0xE4, 0xEC, 0x5A, 0x51, 0x76, 0xB5, 0x5B, 0x85, 0x5C, 0x21, 0x98, 0x49, 0x6E, 0x45, 0x5E };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("5AECE43C-7651-5BB5-855C-2198496E455E")]
    internal interface IVisualTreeHelperStatics : global::Microsoft.UI.Xaml.Media.IVisualTreeHelperStatics
    {
    }
    internal static class IXamlCompositionBrushBaseMethods
    {

        internal static unsafe global::Windows.UI.Color get_FallbackColor(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::Windows.UI.Color __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::Windows.UI.Color*, int>**)ThisPtr)[6](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }
        internal static unsafe void set_FallbackColor(IObjectReference _obj, global::Windows.UI.Color value)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::Windows.UI.Color, int>**)ThisPtr)[7](ThisPtr, value));
            global::System.GC.KeepAlive(_obj);
        }



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0x28, 0xAD, 0xAE, 0xFE, 0xD0, 0x5C, 0x58, 0x5E, 0xBC, 0xEA, 0x86, 0x70, 0xF8, 0x32, 0xAC, 0xA9 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("FEAEAD28-5CD0-5E58-BCEA-8670F832ACA9")]
    internal interface IXamlCompositionBrushBase : global::Microsoft.UI.Xaml.Media.IXamlCompositionBrushBase
    {
    }
    internal static class IXamlCompositionBrushBaseFactoryMethods
    {


        internal static unsafe global::Microsoft.UI.Xaml.Media.XamlCompositionBrushBase CreateInstance(IObjectReference _obj, object baseInterface, out object innerInterface)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __baseInterface = default;
            IntPtr __innerInterface = default;
            IntPtr __retval = default;
            try
            {
                __baseInterface = MarshalInspectable<object>.CreateMarshaler2(baseInterface);
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, IntPtr*, IntPtr*, int>**)ThisPtr)[6](ThisPtr, MarshalInspectable<object>.GetAbi(__baseInterface), &__innerInterface, &__retval));
                global::System.GC.KeepAlive(_obj);
                innerInterface = MarshalInspectable<object>.FromAbi(__innerInterface);
                return global::ABI.Microsoft.UI.Xaml.Media.XamlCompositionBrushBase.FromAbi(__retval);
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__baseInterface);
                MarshalInspectable<object>.DisposeAbi(__innerInterface);
                global::ABI.Microsoft.UI.Xaml.Media.XamlCompositionBrushBase.DisposeAbi(__retval);
            }
        }


        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0x56, 0x6D, 0x62, 0xB1, 0x6F, 0xF, 0x16, 0x54, 0xAD, 0xA4, 0x5C, 0x81, 0x5, 0xD3, 0xF0, 0x82 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("B1626D56-0F6F-5416-ADA4-5C8105D3F082")]
    internal interface IXamlCompositionBrushBaseFactory : global::Microsoft.UI.Xaml.Media.IXamlCompositionBrushBaseFactory
    {
    }
    public static class IXamlCompositionBrushBaseOverridesMethods
    {


        internal static unsafe void OnConnected(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, int>**)ThisPtr)[6](ThisPtr));
            global::System.GC.KeepAlive(_obj);
        }

        internal static unsafe void OnDisconnected(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, int>**)ThisPtr)[7](ThisPtr));
            global::System.GC.KeepAlive(_obj);
        }


        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0x59, 0xB5, 0x81, 0x88, 0xA0, 0x54, 0xC4, 0x56, 0xA7, 0x9A, 0x13, 0x51, 0x52, 0xFB, 0x1D, 0xFA };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

        public static global::System.IntPtr AbiToProjectionVftablePtr => IXamlCompositionBrushBaseOverrides.AbiToProjectionVftablePtr;

    }

    [Guid("8881B559-54A0-56C4-A79A-135152FB1DFA")]
    internal unsafe interface IXamlCompositionBrushBaseOverrides : global::Microsoft.UI.Xaml.Media.IXamlCompositionBrushBaseOverrides
    {

        public static readonly IntPtr AbiToProjectionVftablePtr;
        static unsafe IXamlCompositionBrushBaseOverrides()
        {
            AbiToProjectionVftablePtr = ComWrappersSupport.AllocateVtableMemory(typeof(IXamlCompositionBrushBaseOverrides), sizeof(IInspectable.Vftbl) + sizeof(IntPtr) * 2);
            *(IInspectable.Vftbl*)AbiToProjectionVftablePtr = IInspectable.Vftbl.AbiToProjectionVftable;
            ((delegate* unmanaged[Stdcall]<IntPtr, int>*)AbiToProjectionVftablePtr)[6] = &Do_Abi_OnConnected_0;
            ((delegate* unmanaged[Stdcall]<IntPtr, int>*)AbiToProjectionVftablePtr)[7] = &Do_Abi_OnDisconnected_1;
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvStdcall) })]
        private static unsafe int Do_Abi_OnConnected_0(IntPtr thisPtr)
        {



            try
            {
                global::WinRT.ComWrappersSupport.FindObject<global::Microsoft.UI.Xaml.Media.IXamlCompositionBrushBaseOverrides>(thisPtr).OnConnected();

            }
            catch (Exception __exception__)
            {
                global::WinRT.ExceptionHelpers.SetErrorInfo(__exception__);
                return global::WinRT.ExceptionHelpers.GetHRForException(__exception__);
            }
            return 0;
        }
        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvStdcall) })]
        private static unsafe int Do_Abi_OnDisconnected_1(IntPtr thisPtr)
        {



            try
            {
                global::WinRT.ComWrappersSupport.FindObject<global::Microsoft.UI.Xaml.Media.IXamlCompositionBrushBaseOverrides>(thisPtr).OnDisconnected();

            }
            catch (Exception __exception__)
            {
                global::WinRT.ExceptionHelpers.SetErrorInfo(__exception__);
                return global::WinRT.ExceptionHelpers.GetHRForException(__exception__);
            }
            return 0;
        }
    }

    internal static class IXamlCompositionBrushBaseProtectedMethods
    {

        internal static unsafe global::Microsoft.UI.Composition.CompositionBrush get_CompositionBrush(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[6](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Composition.CompositionBrush.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.UI.Composition.CompositionBrush.DisposeAbi(__retval);
            }
        }
        internal static unsafe void set_CompositionBrush(IObjectReference _obj, global::Microsoft.UI.Composition.CompositionBrush value)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __value = default;
            try
            {
                __value = global::ABI.Microsoft.UI.Composition.CompositionBrush.CreateMarshaler2(value);
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, int>**)ThisPtr)[7](ThisPtr, MarshalInspectable<object>.GetAbi(__value)));
                global::System.GC.KeepAlive(_obj);
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__value);
            }
        }



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0xA5, 0xE1, 0x17, 0x66, 0x7A, 0xE2, 0x95, 0x5B, 0xB0, 0x3E, 0x67, 0x58, 0xB5, 0x8F, 0x92, 0xA0 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("6617E1A5-E27A-5B95-B03E-6758B58F92A0")]
    internal interface IXamlCompositionBrushBaseProtected : global::Microsoft.UI.Xaml.Media.IXamlCompositionBrushBaseProtected
    {
    }
    internal static class IXamlCompositionBrushBaseStaticsMethods
    {

        internal static unsafe global::Microsoft.UI.Xaml.DependencyProperty get_FallbackColorProperty(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[6](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Xaml.DependencyProperty.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.UI.Xaml.DependencyProperty.DisposeAbi(__retval);
            }
        }



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0x16, 0x6E, 0xED, 0x3E, 0x86, 0xC3, 0x1C, 0x5A, 0xB7, 0xD, 0xEF, 0x1C, 0x0, 0x15, 0xE6, 0x91 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("3EED6E16-C386-5A1C-B70D-EF1C0015E691")]
    internal interface IXamlCompositionBrushBaseStatics : global::Microsoft.UI.Xaml.Media.IXamlCompositionBrushBaseStatics
    {
    }
    internal static class IXamlLightMethods
    {



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0x39, 0x1, 0xD2, 0xDC, 0xD5, 0x8C, 0xA5, 0x5D, 0xA2, 0x5C, 0x2B, 0x7B, 0x81, 0x3D, 0x8D, 0x58 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("DCD20139-8CD5-5DA5-A25C-2B7B813D8D58")]
    internal interface IXamlLight : global::Microsoft.UI.Xaml.Media.IXamlLight
    {
    }
    internal static class IXamlLightFactoryMethods
    {


        internal static unsafe global::Microsoft.UI.Xaml.Media.XamlLight CreateInstance(IObjectReference _obj, object baseInterface, out object innerInterface)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __baseInterface = default;
            IntPtr __innerInterface = default;
            IntPtr __retval = default;
            try
            {
                __baseInterface = MarshalInspectable<object>.CreateMarshaler2(baseInterface);
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, IntPtr*, IntPtr*, int>**)ThisPtr)[6](ThisPtr, MarshalInspectable<object>.GetAbi(__baseInterface), &__innerInterface, &__retval));
                global::System.GC.KeepAlive(_obj);
                innerInterface = MarshalInspectable<object>.FromAbi(__innerInterface);
                return global::ABI.Microsoft.UI.Xaml.Media.XamlLight.FromAbi(__retval);
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__baseInterface);
                MarshalInspectable<object>.DisposeAbi(__innerInterface);
                global::ABI.Microsoft.UI.Xaml.Media.XamlLight.DisposeAbi(__retval);
            }
        }


        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0x6, 0x63, 0xDA, 0x76, 0xFC, 0x96, 0x3E, 0x55, 0xBB, 0x39, 0x9A, 0x48, 0x1, 0xD0, 0x6F, 0x48 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("76DA6306-96FC-553E-BB39-9A4801D06F48")]
    internal interface IXamlLightFactory : global::Microsoft.UI.Xaml.Media.IXamlLightFactory
    {
    }
    public static class IXamlLightOverridesMethods
    {


        internal static unsafe string GetId(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[6](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return MarshalString.FromAbi(__retval);
            }
            finally
            {
                MarshalString.DisposeAbi(__retval);
            }
        }

        internal static unsafe void OnConnected(IObjectReference _obj, global::Microsoft.UI.Xaml.UIElement newElement)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __newElement = default;
            try
            {
                __newElement = global::ABI.Microsoft.UI.Xaml.UIElement.CreateMarshaler2(newElement);
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, int>**)ThisPtr)[7](ThisPtr, MarshalInspectable<object>.GetAbi(__newElement)));
                global::System.GC.KeepAlive(_obj);
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__newElement);
            }
        }

        internal static unsafe void OnDisconnected(IObjectReference _obj, global::Microsoft.UI.Xaml.UIElement oldElement)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __oldElement = default;
            try
            {
                __oldElement = global::ABI.Microsoft.UI.Xaml.UIElement.CreateMarshaler2(oldElement);
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, int>**)ThisPtr)[8](ThisPtr, MarshalInspectable<object>.GetAbi(__oldElement)));
                global::System.GC.KeepAlive(_obj);
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__oldElement);
            }
        }


        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0x30, 0x4F, 0x6D, 0x69, 0xEE, 0x92, 0xD, 0x54, 0xAD, 0x70, 0x33, 0xD4, 0x48, 0x95, 0x14, 0xD0 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

        public static global::System.IntPtr AbiToProjectionVftablePtr => IXamlLightOverrides.AbiToProjectionVftablePtr;

    }

    [Guid("696D4F30-92EE-540D-AD70-33D4489514D0")]
    internal unsafe interface IXamlLightOverrides : global::Microsoft.UI.Xaml.Media.IXamlLightOverrides
    {

        public static readonly IntPtr AbiToProjectionVftablePtr;
        static unsafe IXamlLightOverrides()
        {
            AbiToProjectionVftablePtr = ComWrappersSupport.AllocateVtableMemory(typeof(IXamlLightOverrides), sizeof(IInspectable.Vftbl) + sizeof(IntPtr) * 3);
            *(IInspectable.Vftbl*)AbiToProjectionVftablePtr = IInspectable.Vftbl.AbiToProjectionVftable;
            ((delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>*)AbiToProjectionVftablePtr)[6] = &Do_Abi_GetId_0;
            ((delegate* unmanaged[Stdcall]<IntPtr, IntPtr, int>*)AbiToProjectionVftablePtr)[7] = &Do_Abi_OnConnected_1;
            ((delegate* unmanaged[Stdcall]<IntPtr, IntPtr, int>*)AbiToProjectionVftablePtr)[8] = &Do_Abi_OnDisconnected_2;
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvStdcall) })]
        private static unsafe int Do_Abi_GetId_0(IntPtr thisPtr, IntPtr* result)
        {

            string __result = default;

            *result = default;

            try
            {
                __result = global::WinRT.ComWrappersSupport.FindObject<global::Microsoft.UI.Xaml.Media.IXamlLightOverrides>(thisPtr).GetId();
                *result = MarshalString.FromManaged(__result);

            }
            catch (Exception __exception__)
            {
                global::WinRT.ExceptionHelpers.SetErrorInfo(__exception__);
                return global::WinRT.ExceptionHelpers.GetHRForException(__exception__);
            }
            return 0;
        }
        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvStdcall) })]
        private static unsafe int Do_Abi_OnConnected_1(IntPtr thisPtr, IntPtr newElement)
        {



            try
            {
                global::WinRT.ComWrappersSupport.FindObject<global::Microsoft.UI.Xaml.Media.IXamlLightOverrides>(thisPtr).OnConnected(global::ABI.Microsoft.UI.Xaml.UIElement.FromAbi(newElement));

            }
            catch (Exception __exception__)
            {
                global::WinRT.ExceptionHelpers.SetErrorInfo(__exception__);
                return global::WinRT.ExceptionHelpers.GetHRForException(__exception__);
            }
            return 0;
        }
        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvStdcall) })]
        private static unsafe int Do_Abi_OnDisconnected_2(IntPtr thisPtr, IntPtr oldElement)
        {



            try
            {
                global::WinRT.ComWrappersSupport.FindObject<global::Microsoft.UI.Xaml.Media.IXamlLightOverrides>(thisPtr).OnDisconnected(global::ABI.Microsoft.UI.Xaml.UIElement.FromAbi(oldElement));

            }
            catch (Exception __exception__)
            {
                global::WinRT.ExceptionHelpers.SetErrorInfo(__exception__);
                return global::WinRT.ExceptionHelpers.GetHRForException(__exception__);
            }
            return 0;
        }
    }

    internal static class IXamlLightProtectedMethods
    {

        internal static unsafe global::Microsoft.UI.Composition.CompositionLight get_CompositionLight(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[6](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Composition.CompositionLight.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.UI.Composition.CompositionLight.DisposeAbi(__retval);
            }
        }
        internal static unsafe void set_CompositionLight(IObjectReference _obj, global::Microsoft.UI.Composition.CompositionLight value)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __value = default;
            try
            {
                __value = global::ABI.Microsoft.UI.Composition.CompositionLight.CreateMarshaler2(value);
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, int>**)ThisPtr)[7](ThisPtr, MarshalInspectable<object>.GetAbi(__value)));
                global::System.GC.KeepAlive(_obj);
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__value);
            }
        }



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0x12, 0xBF, 0x7, 0xC3, 0xAF, 0xFD, 0xCA, 0x54, 0xA6, 0x31, 0xAD, 0xE, 0x86, 0x26, 0x3C, 0x6E };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("C307BF12-FDAF-54CA-A631-AD0E86263C6E")]
    internal interface IXamlLightProtected : global::Microsoft.UI.Xaml.Media.IXamlLightProtected
    {
    }
    internal static class IXamlLightStaticsMethods
    {


        internal static unsafe void AddTargetElement(IObjectReference _obj, string lightId, global::Microsoft.UI.Xaml.UIElement element)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __element = default;
            try
            {
                __element = global::ABI.Microsoft.UI.Xaml.UIElement.CreateMarshaler2(element);
                MarshalString.Pinnable __lightId = new(lightId);
                fixed(void* ___lightId = __lightId)
                {
                    global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, IntPtr, int>**)ThisPtr)[6](ThisPtr, MarshalString.GetAbi(ref __lightId), MarshalInspectable<object>.GetAbi(__element)));
                    global::System.GC.KeepAlive(_obj);
                }
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__element);
            }
        }

        internal static unsafe void RemoveTargetElement(IObjectReference _obj, string lightId, global::Microsoft.UI.Xaml.UIElement element)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __element = default;
            try
            {
                __element = global::ABI.Microsoft.UI.Xaml.UIElement.CreateMarshaler2(element);
                MarshalString.Pinnable __lightId = new(lightId);
                fixed(void* ___lightId = __lightId)
                {
                    global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, IntPtr, int>**)ThisPtr)[7](ThisPtr, MarshalString.GetAbi(ref __lightId), MarshalInspectable<object>.GetAbi(__element)));
                    global::System.GC.KeepAlive(_obj);
                }
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__element);
            }
        }

        internal static unsafe void AddTargetBrush(IObjectReference _obj, string lightId, global::Microsoft.UI.Xaml.Media.Brush brush)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __brush = default;
            try
            {
                __brush = global::ABI.Microsoft.UI.Xaml.Media.Brush.CreateMarshaler2(brush);
                MarshalString.Pinnable __lightId = new(lightId);
                fixed(void* ___lightId = __lightId)
                {
                    global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, IntPtr, int>**)ThisPtr)[8](ThisPtr, MarshalString.GetAbi(ref __lightId), MarshalInspectable<object>.GetAbi(__brush)));
                    global::System.GC.KeepAlive(_obj);
                }
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__brush);
            }
        }

        internal static unsafe void RemoveTargetBrush(IObjectReference _obj, string lightId, global::Microsoft.UI.Xaml.Media.Brush brush)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __brush = default;
            try
            {
                __brush = global::ABI.Microsoft.UI.Xaml.Media.Brush.CreateMarshaler2(brush);
                MarshalString.Pinnable __lightId = new(lightId);
                fixed(void* ___lightId = __lightId)
                {
                    global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, IntPtr, int>**)ThisPtr)[9](ThisPtr, MarshalString.GetAbi(ref __lightId), MarshalInspectable<object>.GetAbi(__brush)));
                    global::System.GC.KeepAlive(_obj);
                }
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__brush);
            }
        }


        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0x26, 0xEA, 0xD8, 0xA2, 0xFF, 0x26, 0x74, 0x53, 0xB1, 0xDD, 0xF2, 0x32, 0xD5, 0x60, 0x4F, 0x6A };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("A2D8EA26-26FF-5374-B1DD-F232D5604F6A")]
    internal interface IXamlLightStatics : global::Microsoft.UI.Xaml.Media.IXamlLightStatics
    {
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    public struct ImageBrush
    {

        public static IObjectReference CreateMarshaler(global::Microsoft.UI.Xaml.Media.ImageBrush obj) => obj is null ? null : MarshalInspectable<global::Microsoft.UI.Xaml.Media.ImageBrush>.CreateMarshaler<IUnknownVftbl>(obj, global::ABI.Microsoft.UI.Xaml.Media.IImageBrushMethods.IID);
        public static ObjectReferenceValue CreateMarshaler2(global::Microsoft.UI.Xaml.Media.ImageBrush obj) => MarshalInspectable<object>.CreateMarshaler2(obj, global::ABI.Microsoft.UI.Xaml.Media.IImageBrushMethods.IID);
        public static IntPtr GetAbi(IObjectReference value) => value is null ? IntPtr.Zero : MarshalInterfaceHelper<object>.GetAbi(value);
        public static global::Microsoft.UI.Xaml.Media.ImageBrush FromAbi(IntPtr thisPtr) => global::Microsoft.UI.Xaml.Media.ImageBrush.FromAbi(thisPtr);
        public static IntPtr FromManaged(global::Microsoft.UI.Xaml.Media.ImageBrush obj) => obj is null ? IntPtr.Zero : CreateMarshaler2(obj).Detach();
        public static unsafe MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Media.ImageBrush>.MarshalerArray CreateMarshalerArray(global::Microsoft.UI.Xaml.Media.ImageBrush[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Media.ImageBrush>.CreateMarshalerArray2(array, (o) => CreateMarshaler2(o));
        public static (int length, IntPtr data) GetAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Media.ImageBrush>.GetAbiArray(box);
        public static unsafe global::Microsoft.UI.Xaml.Media.ImageBrush[] FromAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Media.ImageBrush>.FromAbiArray(box, FromAbi);
        public static void CopyAbiArray(global::Microsoft.UI.Xaml.Media.ImageBrush[] array, object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Media.ImageBrush>.CopyAbiArray(array, box, FromAbi);
        public static (int length, IntPtr data) FromManagedArray(global::Microsoft.UI.Xaml.Media.ImageBrush[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Media.ImageBrush>.FromManagedArray(array, (o) => FromManaged(o));
        public static void DisposeMarshaler(IObjectReference value) => MarshalInspectable<object>.DisposeMarshaler(value);
        public static void DisposeMarshalerArray(MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Media.ImageBrush>.MarshalerArray array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Media.ImageBrush>.DisposeMarshalerArray(array);
        public static void DisposeAbi(IntPtr abi) => MarshalInspectable<object>.DisposeAbi(abi);
        public static unsafe void DisposeAbiArray(object box) => MarshalInspectable<object>.DisposeAbiArray(box);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    internal sealed class ImageBrushRcwFactoryAttribute : global::WinRT.WinRTImplementationTypeRcwFactoryAttribute
    {
        public override object CreateInstance(global::WinRT.IInspectable inspectable)
            => new global::Microsoft.UI.Xaml.Media.ImageBrush(inspectable.ObjRef);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    public struct ImageSource
    {

        public static IObjectReference CreateMarshaler(global::Microsoft.UI.Xaml.Media.ImageSource obj) => obj is null ? null : MarshalInspectable<global::Microsoft.UI.Xaml.Media.ImageSource>.CreateMarshaler<IUnknownVftbl>(obj, global::ABI.Microsoft.UI.Xaml.Media.IImageSourceMethods.IID);
        public static ObjectReferenceValue CreateMarshaler2(global::Microsoft.UI.Xaml.Media.ImageSource obj) => MarshalInspectable<object>.CreateMarshaler2(obj, global::ABI.Microsoft.UI.Xaml.Media.IImageSourceMethods.IID);
        public static IntPtr GetAbi(IObjectReference value) => value is null ? IntPtr.Zero : MarshalInterfaceHelper<object>.GetAbi(value);
        public static global::Microsoft.UI.Xaml.Media.ImageSource FromAbi(IntPtr thisPtr) => global::Microsoft.UI.Xaml.Media.ImageSource.FromAbi(thisPtr);
        public static IntPtr FromManaged(global::Microsoft.UI.Xaml.Media.ImageSource obj) => obj is null ? IntPtr.Zero : CreateMarshaler2(obj).Detach();
        public static unsafe MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Media.ImageSource>.MarshalerArray CreateMarshalerArray(global::Microsoft.UI.Xaml.Media.ImageSource[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Media.ImageSource>.CreateMarshalerArray2(array, (o) => CreateMarshaler2(o));
        public static (int length, IntPtr data) GetAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Media.ImageSource>.GetAbiArray(box);
        public static unsafe global::Microsoft.UI.Xaml.Media.ImageSource[] FromAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Media.ImageSource>.FromAbiArray(box, FromAbi);
        public static void CopyAbiArray(global::Microsoft.UI.Xaml.Media.ImageSource[] array, object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Media.ImageSource>.CopyAbiArray(array, box, FromAbi);
        public static (int length, IntPtr data) FromManagedArray(global::Microsoft.UI.Xaml.Media.ImageSource[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Media.ImageSource>.FromManagedArray(array, (o) => FromManaged(o));
        public static void DisposeMarshaler(IObjectReference value) => MarshalInspectable<object>.DisposeMarshaler(value);
        public static void DisposeMarshalerArray(MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Media.ImageSource>.MarshalerArray array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Media.ImageSource>.DisposeMarshalerArray(array);
        public static void DisposeAbi(IntPtr abi) => MarshalInspectable<object>.DisposeAbi(abi);
        public static unsafe void DisposeAbiArray(object box) => MarshalInspectable<object>.DisposeAbiArray(box);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    internal sealed class ImageSourceRcwFactoryAttribute : global::WinRT.WinRTImplementationTypeRcwFactoryAttribute
    {
        public override object CreateInstance(global::WinRT.IInspectable inspectable)
            => new global::Microsoft.UI.Xaml.Media.ImageSource(inspectable.ObjRef);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    public struct LineGeometry
    {

        public static IObjectReference CreateMarshaler(global::Microsoft.UI.Xaml.Media.LineGeometry obj) => obj is null ? null : MarshalInspectable<global::Microsoft.UI.Xaml.Media.LineGeometry>.CreateMarshaler<IUnknownVftbl>(obj, global::ABI.Microsoft.UI.Xaml.Media.ILineGeometryMethods.IID);
        public static ObjectReferenceValue CreateMarshaler2(global::Microsoft.UI.Xaml.Media.LineGeometry obj) => MarshalInspectable<object>.CreateMarshaler2(obj, global::ABI.Microsoft.UI.Xaml.Media.ILineGeometryMethods.IID);
        public static IntPtr GetAbi(IObjectReference value) => value is null ? IntPtr.Zero : MarshalInterfaceHelper<object>.GetAbi(value);
        public static global::Microsoft.UI.Xaml.Media.LineGeometry FromAbi(IntPtr thisPtr) => global::Microsoft.UI.Xaml.Media.LineGeometry.FromAbi(thisPtr);
        public static IntPtr FromManaged(global::Microsoft.UI.Xaml.Media.LineGeometry obj) => obj is null ? IntPtr.Zero : CreateMarshaler2(obj).Detach();
        public static unsafe MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Media.LineGeometry>.MarshalerArray CreateMarshalerArray(global::Microsoft.UI.Xaml.Media.LineGeometry[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Media.LineGeometry>.CreateMarshalerArray2(array, (o) => CreateMarshaler2(o));
        public static (int length, IntPtr data) GetAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Media.LineGeometry>.GetAbiArray(box);
        public static unsafe global::Microsoft.UI.Xaml.Media.LineGeometry[] FromAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Media.LineGeometry>.FromAbiArray(box, FromAbi);
        public static void CopyAbiArray(global::Microsoft.UI.Xaml.Media.LineGeometry[] array, object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Media.LineGeometry>.CopyAbiArray(array, box, FromAbi);
        public static (int length, IntPtr data) FromManagedArray(global::Microsoft.UI.Xaml.Media.LineGeometry[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Media.LineGeometry>.FromManagedArray(array, (o) => FromManaged(o));
        public static void DisposeMarshaler(IObjectReference value) => MarshalInspectable<object>.DisposeMarshaler(value);
        public static void DisposeMarshalerArray(MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Media.LineGeometry>.MarshalerArray array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Media.LineGeometry>.DisposeMarshalerArray(array);
        public static void DisposeAbi(IntPtr abi) => MarshalInspectable<object>.DisposeAbi(abi);
        public static unsafe void DisposeAbiArray(object box) => MarshalInspectable<object>.DisposeAbiArray(box);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    internal sealed class LineGeometryRcwFactoryAttribute : global::WinRT.WinRTImplementationTypeRcwFactoryAttribute
    {
        public override object CreateInstance(global::WinRT.IInspectable inspectable)
            => new global::Microsoft.UI.Xaml.Media.LineGeometry(inspectable.ObjRef);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    public struct LineSegment
    {

        public static IObjectReference CreateMarshaler(global::Microsoft.UI.Xaml.Media.LineSegment obj) => obj is null ? null : MarshalInspectable<global::Microsoft.UI.Xaml.Media.LineSegment>.CreateMarshaler<IUnknownVftbl>(obj, global::ABI.Microsoft.UI.Xaml.Media.ILineSegmentMethods.IID);
        public static ObjectReferenceValue CreateMarshaler2(global::Microsoft.UI.Xaml.Media.LineSegment obj) => MarshalInspectable<object>.CreateMarshaler2(obj, global::ABI.Microsoft.UI.Xaml.Media.ILineSegmentMethods.IID);
        public static IntPtr GetAbi(IObjectReference value) => value is null ? IntPtr.Zero : MarshalInterfaceHelper<object>.GetAbi(value);
        public static global::Microsoft.UI.Xaml.Media.LineSegment FromAbi(IntPtr thisPtr) => global::Microsoft.UI.Xaml.Media.LineSegment.FromAbi(thisPtr);
        public static IntPtr FromManaged(global::Microsoft.UI.Xaml.Media.LineSegment obj) => obj is null ? IntPtr.Zero : CreateMarshaler2(obj).Detach();
        public static unsafe MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Media.LineSegment>.MarshalerArray CreateMarshalerArray(global::Microsoft.UI.Xaml.Media.LineSegment[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Media.LineSegment>.CreateMarshalerArray2(array, (o) => CreateMarshaler2(o));
        public static (int length, IntPtr data) GetAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Media.LineSegment>.GetAbiArray(box);
        public static unsafe global::Microsoft.UI.Xaml.Media.LineSegment[] FromAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Media.LineSegment>.FromAbiArray(box, FromAbi);
        public static void CopyAbiArray(global::Microsoft.UI.Xaml.Media.LineSegment[] array, object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Media.LineSegment>.CopyAbiArray(array, box, FromAbi);
        public static (int length, IntPtr data) FromManagedArray(global::Microsoft.UI.Xaml.Media.LineSegment[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Media.LineSegment>.FromManagedArray(array, (o) => FromManaged(o));
        public static void DisposeMarshaler(IObjectReference value) => MarshalInspectable<object>.DisposeMarshaler(value);
        public static void DisposeMarshalerArray(MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Media.LineSegment>.MarshalerArray array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Media.LineSegment>.DisposeMarshalerArray(array);
        public static void DisposeAbi(IntPtr abi) => MarshalInspectable<object>.DisposeAbi(abi);
        public static unsafe void DisposeAbiArray(object box) => MarshalInspectable<object>.DisposeAbiArray(box);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    internal sealed class LineSegmentRcwFactoryAttribute : global::WinRT.WinRTImplementationTypeRcwFactoryAttribute
    {
        public override object CreateInstance(global::WinRT.IInspectable inspectable)
            => new global::Microsoft.UI.Xaml.Media.LineSegment(inspectable.ObjRef);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    public struct LinearGradientBrush
    {

        public static IObjectReference CreateMarshaler(global::Microsoft.UI.Xaml.Media.LinearGradientBrush obj) => obj is null ? null : MarshalInspectable<global::Microsoft.UI.Xaml.Media.LinearGradientBrush>.CreateMarshaler<IUnknownVftbl>(obj, global::ABI.Microsoft.UI.Xaml.Media.ILinearGradientBrushMethods.IID);
        public static ObjectReferenceValue CreateMarshaler2(global::Microsoft.UI.Xaml.Media.LinearGradientBrush obj) => MarshalInspectable<object>.CreateMarshaler2(obj, global::ABI.Microsoft.UI.Xaml.Media.ILinearGradientBrushMethods.IID);
        public static IntPtr GetAbi(IObjectReference value) => value is null ? IntPtr.Zero : MarshalInterfaceHelper<object>.GetAbi(value);
        public static global::Microsoft.UI.Xaml.Media.LinearGradientBrush FromAbi(IntPtr thisPtr) => global::Microsoft.UI.Xaml.Media.LinearGradientBrush.FromAbi(thisPtr);
        public static IntPtr FromManaged(global::Microsoft.UI.Xaml.Media.LinearGradientBrush obj) => obj is null ? IntPtr.Zero : CreateMarshaler2(obj).Detach();
        public static unsafe MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Media.LinearGradientBrush>.MarshalerArray CreateMarshalerArray(global::Microsoft.UI.Xaml.Media.LinearGradientBrush[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Media.LinearGradientBrush>.CreateMarshalerArray2(array, (o) => CreateMarshaler2(o));
        public static (int length, IntPtr data) GetAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Media.LinearGradientBrush>.GetAbiArray(box);
        public static unsafe global::Microsoft.UI.Xaml.Media.LinearGradientBrush[] FromAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Media.LinearGradientBrush>.FromAbiArray(box, FromAbi);
        public static void CopyAbiArray(global::Microsoft.UI.Xaml.Media.LinearGradientBrush[] array, object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Media.LinearGradientBrush>.CopyAbiArray(array, box, FromAbi);
        public static (int length, IntPtr data) FromManagedArray(global::Microsoft.UI.Xaml.Media.LinearGradientBrush[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Media.LinearGradientBrush>.FromManagedArray(array, (o) => FromManaged(o));
        public static void DisposeMarshaler(IObjectReference value) => MarshalInspectable<object>.DisposeMarshaler(value);
        public static void DisposeMarshalerArray(MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Media.LinearGradientBrush>.MarshalerArray array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Media.LinearGradientBrush>.DisposeMarshalerArray(array);
        public static void DisposeAbi(IntPtr abi) => MarshalInspectable<object>.DisposeAbi(abi);
        public static unsafe void DisposeAbiArray(object box) => MarshalInspectable<object>.DisposeAbiArray(box);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    internal sealed class LinearGradientBrushRcwFactoryAttribute : global::WinRT.WinRTImplementationTypeRcwFactoryAttribute
    {
        public override object CreateInstance(global::WinRT.IInspectable inspectable)
            => new global::Microsoft.UI.Xaml.Media.LinearGradientBrush(inspectable.ObjRef);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    public struct LoadedImageSourceLoadCompletedEventArgs
    {

        public static IObjectReference CreateMarshaler(global::Microsoft.UI.Xaml.Media.LoadedImageSourceLoadCompletedEventArgs obj) => obj is null ? null : MarshalInspectable<global::Microsoft.UI.Xaml.Media.LoadedImageSourceLoadCompletedEventArgs>.CreateMarshaler<IUnknownVftbl>(obj, global::ABI.Microsoft.UI.Xaml.Media.ILoadedImageSourceLoadCompletedEventArgsMethods.IID);
        public static ObjectReferenceValue CreateMarshaler2(global::Microsoft.UI.Xaml.Media.LoadedImageSourceLoadCompletedEventArgs obj) => MarshalInspectable<object>.CreateMarshaler2(obj, global::ABI.Microsoft.UI.Xaml.Media.ILoadedImageSourceLoadCompletedEventArgsMethods.IID);
        public static IntPtr GetAbi(IObjectReference value) => value is null ? IntPtr.Zero : MarshalInterfaceHelper<object>.GetAbi(value);
        public static global::Microsoft.UI.Xaml.Media.LoadedImageSourceLoadCompletedEventArgs FromAbi(IntPtr thisPtr) => global::Microsoft.UI.Xaml.Media.LoadedImageSourceLoadCompletedEventArgs.FromAbi(thisPtr);
        public static IntPtr FromManaged(global::Microsoft.UI.Xaml.Media.LoadedImageSourceLoadCompletedEventArgs obj) => obj is null ? IntPtr.Zero : CreateMarshaler2(obj).Detach();
        public static unsafe MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Media.LoadedImageSourceLoadCompletedEventArgs>.MarshalerArray CreateMarshalerArray(global::Microsoft.UI.Xaml.Media.LoadedImageSourceLoadCompletedEventArgs[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Media.LoadedImageSourceLoadCompletedEventArgs>.CreateMarshalerArray2(array, (o) => CreateMarshaler2(o));
        public static (int length, IntPtr data) GetAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Media.LoadedImageSourceLoadCompletedEventArgs>.GetAbiArray(box);
        public static unsafe global::Microsoft.UI.Xaml.Media.LoadedImageSourceLoadCompletedEventArgs[] FromAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Media.LoadedImageSourceLoadCompletedEventArgs>.FromAbiArray(box, FromAbi);
        public static void CopyAbiArray(global::Microsoft.UI.Xaml.Media.LoadedImageSourceLoadCompletedEventArgs[] array, object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Media.LoadedImageSourceLoadCompletedEventArgs>.CopyAbiArray(array, box, FromAbi);
        public static (int length, IntPtr data) FromManagedArray(global::Microsoft.UI.Xaml.Media.LoadedImageSourceLoadCompletedEventArgs[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Media.LoadedImageSourceLoadCompletedEventArgs>.FromManagedArray(array, (o) => FromManaged(o));
        public static void DisposeMarshaler(IObjectReference value) => MarshalInspectable<object>.DisposeMarshaler(value);
        public static void DisposeMarshalerArray(MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Media.LoadedImageSourceLoadCompletedEventArgs>.MarshalerArray array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Media.LoadedImageSourceLoadCompletedEventArgs>.DisposeMarshalerArray(array);
        public static void DisposeAbi(IntPtr abi) => MarshalInspectable<object>.DisposeAbi(abi);
        public static unsafe void DisposeAbiArray(object box) => MarshalInspectable<object>.DisposeAbiArray(box);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    internal sealed class LoadedImageSourceLoadCompletedEventArgsRcwFactoryAttribute : global::WinRT.WinRTImplementationTypeRcwFactoryAttribute
    {
        public override object CreateInstance(global::WinRT.IInspectable inspectable)
            => new global::Microsoft.UI.Xaml.Media.LoadedImageSourceLoadCompletedEventArgs(inspectable.ObjRef);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    public struct LoadedImageSurface
    {

        public static IObjectReference CreateMarshaler(global::Microsoft.UI.Xaml.Media.LoadedImageSurface obj) => obj is null ? null : MarshalInspectable<global::Microsoft.UI.Xaml.Media.LoadedImageSurface>.CreateMarshaler<IUnknownVftbl>(obj, global::ABI.Microsoft.UI.Xaml.Media.ILoadedImageSurfaceMethods.IID);
        public static ObjectReferenceValue CreateMarshaler2(global::Microsoft.UI.Xaml.Media.LoadedImageSurface obj) => MarshalInspectable<object>.CreateMarshaler2(obj, global::ABI.Microsoft.UI.Xaml.Media.ILoadedImageSurfaceMethods.IID);
        public static IntPtr GetAbi(IObjectReference value) => value is null ? IntPtr.Zero : MarshalInterfaceHelper<object>.GetAbi(value);
        public static global::Microsoft.UI.Xaml.Media.LoadedImageSurface FromAbi(IntPtr thisPtr) => global::Microsoft.UI.Xaml.Media.LoadedImageSurface.FromAbi(thisPtr);
        public static IntPtr FromManaged(global::Microsoft.UI.Xaml.Media.LoadedImageSurface obj) => obj is null ? IntPtr.Zero : CreateMarshaler2(obj).Detach();
        public static unsafe MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Media.LoadedImageSurface>.MarshalerArray CreateMarshalerArray(global::Microsoft.UI.Xaml.Media.LoadedImageSurface[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Media.LoadedImageSurface>.CreateMarshalerArray2(array, (o) => CreateMarshaler2(o));
        public static (int length, IntPtr data) GetAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Media.LoadedImageSurface>.GetAbiArray(box);
        public static unsafe global::Microsoft.UI.Xaml.Media.LoadedImageSurface[] FromAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Media.LoadedImageSurface>.FromAbiArray(box, FromAbi);
        public static void CopyAbiArray(global::Microsoft.UI.Xaml.Media.LoadedImageSurface[] array, object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Media.LoadedImageSurface>.CopyAbiArray(array, box, FromAbi);
        public static (int length, IntPtr data) FromManagedArray(global::Microsoft.UI.Xaml.Media.LoadedImageSurface[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Media.LoadedImageSurface>.FromManagedArray(array, (o) => FromManaged(o));
        public static void DisposeMarshaler(IObjectReference value) => MarshalInspectable<object>.DisposeMarshaler(value);
        public static void DisposeMarshalerArray(MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Media.LoadedImageSurface>.MarshalerArray array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Media.LoadedImageSurface>.DisposeMarshalerArray(array);
        public static void DisposeAbi(IntPtr abi) => MarshalInspectable<object>.DisposeAbi(abi);
        public static unsafe void DisposeAbiArray(object box) => MarshalInspectable<object>.DisposeAbiArray(box);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    internal sealed class LoadedImageSurfaceRcwFactoryAttribute : global::WinRT.WinRTImplementationTypeRcwFactoryAttribute
    {
        public override object CreateInstance(global::WinRT.IInspectable inspectable)
            => new global::Microsoft.UI.Xaml.Media.LoadedImageSurface(inspectable.ObjRef);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    public struct Matrix3DProjection
    {

        public static IObjectReference CreateMarshaler(global::Microsoft.UI.Xaml.Media.Matrix3DProjection obj) => obj is null ? null : MarshalInspectable<global::Microsoft.UI.Xaml.Media.Matrix3DProjection>.CreateMarshaler<IUnknownVftbl>(obj, global::ABI.Microsoft.UI.Xaml.Media.IMatrix3DProjectionMethods.IID);
        public static ObjectReferenceValue CreateMarshaler2(global::Microsoft.UI.Xaml.Media.Matrix3DProjection obj) => MarshalInspectable<object>.CreateMarshaler2(obj, global::ABI.Microsoft.UI.Xaml.Media.IMatrix3DProjectionMethods.IID);
        public static IntPtr GetAbi(IObjectReference value) => value is null ? IntPtr.Zero : MarshalInterfaceHelper<object>.GetAbi(value);
        public static global::Microsoft.UI.Xaml.Media.Matrix3DProjection FromAbi(IntPtr thisPtr) => global::Microsoft.UI.Xaml.Media.Matrix3DProjection.FromAbi(thisPtr);
        public static IntPtr FromManaged(global::Microsoft.UI.Xaml.Media.Matrix3DProjection obj) => obj is null ? IntPtr.Zero : CreateMarshaler2(obj).Detach();
        public static unsafe MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Media.Matrix3DProjection>.MarshalerArray CreateMarshalerArray(global::Microsoft.UI.Xaml.Media.Matrix3DProjection[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Media.Matrix3DProjection>.CreateMarshalerArray2(array, (o) => CreateMarshaler2(o));
        public static (int length, IntPtr data) GetAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Media.Matrix3DProjection>.GetAbiArray(box);
        public static unsafe global::Microsoft.UI.Xaml.Media.Matrix3DProjection[] FromAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Media.Matrix3DProjection>.FromAbiArray(box, FromAbi);
        public static void CopyAbiArray(global::Microsoft.UI.Xaml.Media.Matrix3DProjection[] array, object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Media.Matrix3DProjection>.CopyAbiArray(array, box, FromAbi);
        public static (int length, IntPtr data) FromManagedArray(global::Microsoft.UI.Xaml.Media.Matrix3DProjection[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Media.Matrix3DProjection>.FromManagedArray(array, (o) => FromManaged(o));
        public static void DisposeMarshaler(IObjectReference value) => MarshalInspectable<object>.DisposeMarshaler(value);
        public static void DisposeMarshalerArray(MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Media.Matrix3DProjection>.MarshalerArray array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Media.Matrix3DProjection>.DisposeMarshalerArray(array);
        public static void DisposeAbi(IntPtr abi) => MarshalInspectable<object>.DisposeAbi(abi);
        public static unsafe void DisposeAbiArray(object box) => MarshalInspectable<object>.DisposeAbiArray(box);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    internal sealed class Matrix3DProjectionRcwFactoryAttribute : global::WinRT.WinRTImplementationTypeRcwFactoryAttribute
    {
        public override object CreateInstance(global::WinRT.IInspectable inspectable)
            => new global::Microsoft.UI.Xaml.Media.Matrix3DProjection(inspectable.ObjRef);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    public struct MatrixTransform
    {

        public static IObjectReference CreateMarshaler(global::Microsoft.UI.Xaml.Media.MatrixTransform obj) => obj is null ? null : MarshalInspectable<global::Microsoft.UI.Xaml.Media.MatrixTransform>.CreateMarshaler<IUnknownVftbl>(obj, global::ABI.Microsoft.UI.Xaml.Media.IMatrixTransformMethods.IID);
        public static ObjectReferenceValue CreateMarshaler2(global::Microsoft.UI.Xaml.Media.MatrixTransform obj) => MarshalInspectable<object>.CreateMarshaler2(obj, global::ABI.Microsoft.UI.Xaml.Media.IMatrixTransformMethods.IID);
        public static IntPtr GetAbi(IObjectReference value) => value is null ? IntPtr.Zero : MarshalInterfaceHelper<object>.GetAbi(value);
        public static global::Microsoft.UI.Xaml.Media.MatrixTransform FromAbi(IntPtr thisPtr) => global::Microsoft.UI.Xaml.Media.MatrixTransform.FromAbi(thisPtr);
        public static IntPtr FromManaged(global::Microsoft.UI.Xaml.Media.MatrixTransform obj) => obj is null ? IntPtr.Zero : CreateMarshaler2(obj).Detach();
        public static unsafe MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Media.MatrixTransform>.MarshalerArray CreateMarshalerArray(global::Microsoft.UI.Xaml.Media.MatrixTransform[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Media.MatrixTransform>.CreateMarshalerArray2(array, (o) => CreateMarshaler2(o));
        public static (int length, IntPtr data) GetAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Media.MatrixTransform>.GetAbiArray(box);
        public static unsafe global::Microsoft.UI.Xaml.Media.MatrixTransform[] FromAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Media.MatrixTransform>.FromAbiArray(box, FromAbi);
        public static void CopyAbiArray(global::Microsoft.UI.Xaml.Media.MatrixTransform[] array, object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Media.MatrixTransform>.CopyAbiArray(array, box, FromAbi);
        public static (int length, IntPtr data) FromManagedArray(global::Microsoft.UI.Xaml.Media.MatrixTransform[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Media.MatrixTransform>.FromManagedArray(array, (o) => FromManaged(o));
        public static void DisposeMarshaler(IObjectReference value) => MarshalInspectable<object>.DisposeMarshaler(value);
        public static void DisposeMarshalerArray(MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Media.MatrixTransform>.MarshalerArray array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Media.MatrixTransform>.DisposeMarshalerArray(array);
        public static void DisposeAbi(IntPtr abi) => MarshalInspectable<object>.DisposeAbi(abi);
        public static unsafe void DisposeAbiArray(object box) => MarshalInspectable<object>.DisposeAbiArray(box);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    internal sealed class MatrixTransformRcwFactoryAttribute : global::WinRT.WinRTImplementationTypeRcwFactoryAttribute
    {
        public override object CreateInstance(global::WinRT.IInspectable inspectable)
            => new global::Microsoft.UI.Xaml.Media.MatrixTransform(inspectable.ObjRef);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    public struct MediaTransportControlsThumbnailRequestedEventArgs
    {

        public static IObjectReference CreateMarshaler(global::Microsoft.UI.Xaml.Media.MediaTransportControlsThumbnailRequestedEventArgs obj) => obj is null ? null : MarshalInspectable<global::Microsoft.UI.Xaml.Media.MediaTransportControlsThumbnailRequestedEventArgs>.CreateMarshaler<IUnknownVftbl>(obj, global::ABI.Microsoft.UI.Xaml.Media.IMediaTransportControlsThumbnailRequestedEventArgsMethods.IID);
        public static ObjectReferenceValue CreateMarshaler2(global::Microsoft.UI.Xaml.Media.MediaTransportControlsThumbnailRequestedEventArgs obj) => MarshalInspectable<object>.CreateMarshaler2(obj, global::ABI.Microsoft.UI.Xaml.Media.IMediaTransportControlsThumbnailRequestedEventArgsMethods.IID);
        public static IntPtr GetAbi(IObjectReference value) => value is null ? IntPtr.Zero : MarshalInterfaceHelper<object>.GetAbi(value);
        public static global::Microsoft.UI.Xaml.Media.MediaTransportControlsThumbnailRequestedEventArgs FromAbi(IntPtr thisPtr) => global::Microsoft.UI.Xaml.Media.MediaTransportControlsThumbnailRequestedEventArgs.FromAbi(thisPtr);
        public static IntPtr FromManaged(global::Microsoft.UI.Xaml.Media.MediaTransportControlsThumbnailRequestedEventArgs obj) => obj is null ? IntPtr.Zero : CreateMarshaler2(obj).Detach();
        public static unsafe MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Media.MediaTransportControlsThumbnailRequestedEventArgs>.MarshalerArray CreateMarshalerArray(global::Microsoft.UI.Xaml.Media.MediaTransportControlsThumbnailRequestedEventArgs[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Media.MediaTransportControlsThumbnailRequestedEventArgs>.CreateMarshalerArray2(array, (o) => CreateMarshaler2(o));
        public static (int length, IntPtr data) GetAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Media.MediaTransportControlsThumbnailRequestedEventArgs>.GetAbiArray(box);
        public static unsafe global::Microsoft.UI.Xaml.Media.MediaTransportControlsThumbnailRequestedEventArgs[] FromAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Media.MediaTransportControlsThumbnailRequestedEventArgs>.FromAbiArray(box, FromAbi);
        public static void CopyAbiArray(global::Microsoft.UI.Xaml.Media.MediaTransportControlsThumbnailRequestedEventArgs[] array, object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Media.MediaTransportControlsThumbnailRequestedEventArgs>.CopyAbiArray(array, box, FromAbi);
        public static (int length, IntPtr data) FromManagedArray(global::Microsoft.UI.Xaml.Media.MediaTransportControlsThumbnailRequestedEventArgs[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Media.MediaTransportControlsThumbnailRequestedEventArgs>.FromManagedArray(array, (o) => FromManaged(o));
        public static void DisposeMarshaler(IObjectReference value) => MarshalInspectable<object>.DisposeMarshaler(value);
        public static void DisposeMarshalerArray(MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Media.MediaTransportControlsThumbnailRequestedEventArgs>.MarshalerArray array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Media.MediaTransportControlsThumbnailRequestedEventArgs>.DisposeMarshalerArray(array);
        public static void DisposeAbi(IntPtr abi) => MarshalInspectable<object>.DisposeAbi(abi);
        public static unsafe void DisposeAbiArray(object box) => MarshalInspectable<object>.DisposeAbiArray(box);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    internal sealed class MediaTransportControlsThumbnailRequestedEventArgsRcwFactoryAttribute : global::WinRT.WinRTImplementationTypeRcwFactoryAttribute
    {
        public override object CreateInstance(global::WinRT.IInspectable inspectable)
            => new global::Microsoft.UI.Xaml.Media.MediaTransportControlsThumbnailRequestedEventArgs(inspectable.ObjRef);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    public struct MicaBackdrop
    {

        public static IObjectReference CreateMarshaler(global::Microsoft.UI.Xaml.Media.MicaBackdrop obj) => obj is null ? null : MarshalInspectable<global::Microsoft.UI.Xaml.Media.MicaBackdrop>.CreateMarshaler<IUnknownVftbl>(obj, global::ABI.Microsoft.UI.Xaml.Media.IMicaBackdropMethods.IID);
        public static ObjectReferenceValue CreateMarshaler2(global::Microsoft.UI.Xaml.Media.MicaBackdrop obj) => MarshalInspectable<object>.CreateMarshaler2(obj, global::ABI.Microsoft.UI.Xaml.Media.IMicaBackdropMethods.IID);
        public static IntPtr GetAbi(IObjectReference value) => value is null ? IntPtr.Zero : MarshalInterfaceHelper<object>.GetAbi(value);
        public static global::Microsoft.UI.Xaml.Media.MicaBackdrop FromAbi(IntPtr thisPtr) => global::Microsoft.UI.Xaml.Media.MicaBackdrop.FromAbi(thisPtr);
        public static IntPtr FromManaged(global::Microsoft.UI.Xaml.Media.MicaBackdrop obj) => obj is null ? IntPtr.Zero : CreateMarshaler2(obj).Detach();
        public static unsafe MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Media.MicaBackdrop>.MarshalerArray CreateMarshalerArray(global::Microsoft.UI.Xaml.Media.MicaBackdrop[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Media.MicaBackdrop>.CreateMarshalerArray2(array, (o) => CreateMarshaler2(o));
        public static (int length, IntPtr data) GetAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Media.MicaBackdrop>.GetAbiArray(box);
        public static unsafe global::Microsoft.UI.Xaml.Media.MicaBackdrop[] FromAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Media.MicaBackdrop>.FromAbiArray(box, FromAbi);
        public static void CopyAbiArray(global::Microsoft.UI.Xaml.Media.MicaBackdrop[] array, object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Media.MicaBackdrop>.CopyAbiArray(array, box, FromAbi);
        public static (int length, IntPtr data) FromManagedArray(global::Microsoft.UI.Xaml.Media.MicaBackdrop[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Media.MicaBackdrop>.FromManagedArray(array, (o) => FromManaged(o));
        public static void DisposeMarshaler(IObjectReference value) => MarshalInspectable<object>.DisposeMarshaler(value);
        public static void DisposeMarshalerArray(MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Media.MicaBackdrop>.MarshalerArray array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Media.MicaBackdrop>.DisposeMarshalerArray(array);
        public static void DisposeAbi(IntPtr abi) => MarshalInspectable<object>.DisposeAbi(abi);
        public static unsafe void DisposeAbiArray(object box) => MarshalInspectable<object>.DisposeAbiArray(box);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    internal sealed class MicaBackdropRcwFactoryAttribute : global::WinRT.WinRTImplementationTypeRcwFactoryAttribute
    {
        public override object CreateInstance(global::WinRT.IInspectable inspectable)
            => new global::Microsoft.UI.Xaml.Media.MicaBackdrop(inspectable.ObjRef);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    public struct PathFigure
    {

        public static IObjectReference CreateMarshaler(global::Microsoft.UI.Xaml.Media.PathFigure obj) => obj is null ? null : MarshalInspectable<global::Microsoft.UI.Xaml.Media.PathFigure>.CreateMarshaler<IUnknownVftbl>(obj, global::ABI.Microsoft.UI.Xaml.Media.IPathFigureMethods.IID);
        public static ObjectReferenceValue CreateMarshaler2(global::Microsoft.UI.Xaml.Media.PathFigure obj) => MarshalInspectable<object>.CreateMarshaler2(obj, global::ABI.Microsoft.UI.Xaml.Media.IPathFigureMethods.IID);
        public static IntPtr GetAbi(IObjectReference value) => value is null ? IntPtr.Zero : MarshalInterfaceHelper<object>.GetAbi(value);
        public static global::Microsoft.UI.Xaml.Media.PathFigure FromAbi(IntPtr thisPtr) => global::Microsoft.UI.Xaml.Media.PathFigure.FromAbi(thisPtr);
        public static IntPtr FromManaged(global::Microsoft.UI.Xaml.Media.PathFigure obj) => obj is null ? IntPtr.Zero : CreateMarshaler2(obj).Detach();
        public static unsafe MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Media.PathFigure>.MarshalerArray CreateMarshalerArray(global::Microsoft.UI.Xaml.Media.PathFigure[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Media.PathFigure>.CreateMarshalerArray2(array, (o) => CreateMarshaler2(o));
        public static (int length, IntPtr data) GetAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Media.PathFigure>.GetAbiArray(box);
        public static unsafe global::Microsoft.UI.Xaml.Media.PathFigure[] FromAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Media.PathFigure>.FromAbiArray(box, FromAbi);
        public static void CopyAbiArray(global::Microsoft.UI.Xaml.Media.PathFigure[] array, object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Media.PathFigure>.CopyAbiArray(array, box, FromAbi);
        public static (int length, IntPtr data) FromManagedArray(global::Microsoft.UI.Xaml.Media.PathFigure[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Media.PathFigure>.FromManagedArray(array, (o) => FromManaged(o));
        public static void DisposeMarshaler(IObjectReference value) => MarshalInspectable<object>.DisposeMarshaler(value);
        public static void DisposeMarshalerArray(MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Media.PathFigure>.MarshalerArray array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Media.PathFigure>.DisposeMarshalerArray(array);
        public static void DisposeAbi(IntPtr abi) => MarshalInspectable<object>.DisposeAbi(abi);
        public static unsafe void DisposeAbiArray(object box) => MarshalInspectable<object>.DisposeAbiArray(box);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    internal sealed class PathFigureRcwFactoryAttribute : global::WinRT.WinRTImplementationTypeRcwFactoryAttribute
    {
        public override object CreateInstance(global::WinRT.IInspectable inspectable)
            => new global::Microsoft.UI.Xaml.Media.PathFigure(inspectable.ObjRef);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    public struct PathFigureCollection
    {

        public static IObjectReference CreateMarshaler(global::Microsoft.UI.Xaml.Media.PathFigureCollection obj) => obj is null ? null : MarshalInterface<global::System.Collections.Generic.IList<global::Microsoft.UI.Xaml.Media.PathFigure>>.CreateMarshaler(obj);
        public static ObjectReferenceValue CreateMarshaler2(global::Microsoft.UI.Xaml.Media.PathFigureCollection obj) => MarshalInterface<global::System.Collections.Generic.IList<global::Microsoft.UI.Xaml.Media.PathFigure>>.CreateMarshaler2(obj, global::ABI.System.Collections.Generic.IListMethods<global::Microsoft.UI.Xaml.Media.PathFigure>.IID);
        public static IntPtr GetAbi(IObjectReference value) => value is null ? IntPtr.Zero : MarshalInterfaceHelper<object>.GetAbi(value);
        public static global::Microsoft.UI.Xaml.Media.PathFigureCollection FromAbi(IntPtr thisPtr) => global::Microsoft.UI.Xaml.Media.PathFigureCollection.FromAbi(thisPtr);
        public static IntPtr FromManaged(global::Microsoft.UI.Xaml.Media.PathFigureCollection obj) => obj is null ? IntPtr.Zero : CreateMarshaler2(obj).Detach();
        public static unsafe MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Media.PathFigureCollection>.MarshalerArray CreateMarshalerArray(global::Microsoft.UI.Xaml.Media.PathFigureCollection[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Media.PathFigureCollection>.CreateMarshalerArray2(array, (o) => CreateMarshaler2(o));
        public static (int length, IntPtr data) GetAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Media.PathFigureCollection>.GetAbiArray(box);
        public static unsafe global::Microsoft.UI.Xaml.Media.PathFigureCollection[] FromAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Media.PathFigureCollection>.FromAbiArray(box, FromAbi);
        public static void CopyAbiArray(global::Microsoft.UI.Xaml.Media.PathFigureCollection[] array, object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Media.PathFigureCollection>.CopyAbiArray(array, box, FromAbi);
        public static (int length, IntPtr data) FromManagedArray(global::Microsoft.UI.Xaml.Media.PathFigureCollection[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Media.PathFigureCollection>.FromManagedArray(array, (o) => FromManaged(o));
        public static void DisposeMarshaler(IObjectReference value) => MarshalInspectable<object>.DisposeMarshaler(value);
        public static void DisposeMarshalerArray(MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Media.PathFigureCollection>.MarshalerArray array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Media.PathFigureCollection>.DisposeMarshalerArray(array);
        public static void DisposeAbi(IntPtr abi) => MarshalInspectable<object>.DisposeAbi(abi);
        public static unsafe void DisposeAbiArray(object box) => MarshalInspectable<object>.DisposeAbiArray(box);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    internal sealed class PathFigureCollectionRcwFactoryAttribute : global::WinRT.WinRTImplementationTypeRcwFactoryAttribute
    {
        public override object CreateInstance(global::WinRT.IInspectable inspectable)
            => new global::Microsoft.UI.Xaml.Media.PathFigureCollection(inspectable.ObjRef);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    public struct PathGeometry
    {

        public static IObjectReference CreateMarshaler(global::Microsoft.UI.Xaml.Media.PathGeometry obj) => obj is null ? null : MarshalInspectable<global::Microsoft.UI.Xaml.Media.PathGeometry>.CreateMarshaler<IUnknownVftbl>(obj, global::ABI.Microsoft.UI.Xaml.Media.IPathGeometryMethods.IID);
        public static ObjectReferenceValue CreateMarshaler2(global::Microsoft.UI.Xaml.Media.PathGeometry obj) => MarshalInspectable<object>.CreateMarshaler2(obj, global::ABI.Microsoft.UI.Xaml.Media.IPathGeometryMethods.IID);
        public static IntPtr GetAbi(IObjectReference value) => value is null ? IntPtr.Zero : MarshalInterfaceHelper<object>.GetAbi(value);
        public static global::Microsoft.UI.Xaml.Media.PathGeometry FromAbi(IntPtr thisPtr) => global::Microsoft.UI.Xaml.Media.PathGeometry.FromAbi(thisPtr);
        public static IntPtr FromManaged(global::Microsoft.UI.Xaml.Media.PathGeometry obj) => obj is null ? IntPtr.Zero : CreateMarshaler2(obj).Detach();
        public static unsafe MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Media.PathGeometry>.MarshalerArray CreateMarshalerArray(global::Microsoft.UI.Xaml.Media.PathGeometry[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Media.PathGeometry>.CreateMarshalerArray2(array, (o) => CreateMarshaler2(o));
        public static (int length, IntPtr data) GetAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Media.PathGeometry>.GetAbiArray(box);
        public static unsafe global::Microsoft.UI.Xaml.Media.PathGeometry[] FromAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Media.PathGeometry>.FromAbiArray(box, FromAbi);
        public static void CopyAbiArray(global::Microsoft.UI.Xaml.Media.PathGeometry[] array, object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Media.PathGeometry>.CopyAbiArray(array, box, FromAbi);
        public static (int length, IntPtr data) FromManagedArray(global::Microsoft.UI.Xaml.Media.PathGeometry[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Media.PathGeometry>.FromManagedArray(array, (o) => FromManaged(o));
        public static void DisposeMarshaler(IObjectReference value) => MarshalInspectable<object>.DisposeMarshaler(value);
        public static void DisposeMarshalerArray(MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Media.PathGeometry>.MarshalerArray array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Media.PathGeometry>.DisposeMarshalerArray(array);
        public static void DisposeAbi(IntPtr abi) => MarshalInspectable<object>.DisposeAbi(abi);
        public static unsafe void DisposeAbiArray(object box) => MarshalInspectable<object>.DisposeAbiArray(box);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    internal sealed class PathGeometryRcwFactoryAttribute : global::WinRT.WinRTImplementationTypeRcwFactoryAttribute
    {
        public override object CreateInstance(global::WinRT.IInspectable inspectable)
            => new global::Microsoft.UI.Xaml.Media.PathGeometry(inspectable.ObjRef);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    public struct PathSegment
    {

        public static IObjectReference CreateMarshaler(global::Microsoft.UI.Xaml.Media.PathSegment obj) => obj is null ? null : MarshalInspectable<global::Microsoft.UI.Xaml.Media.PathSegment>.CreateMarshaler<IUnknownVftbl>(obj, global::ABI.Microsoft.UI.Xaml.Media.IPathSegmentMethods.IID);
        public static ObjectReferenceValue CreateMarshaler2(global::Microsoft.UI.Xaml.Media.PathSegment obj) => MarshalInspectable<object>.CreateMarshaler2(obj, global::ABI.Microsoft.UI.Xaml.Media.IPathSegmentMethods.IID);
        public static IntPtr GetAbi(IObjectReference value) => value is null ? IntPtr.Zero : MarshalInterfaceHelper<object>.GetAbi(value);
        public static global::Microsoft.UI.Xaml.Media.PathSegment FromAbi(IntPtr thisPtr) => global::Microsoft.UI.Xaml.Media.PathSegment.FromAbi(thisPtr);
        public static IntPtr FromManaged(global::Microsoft.UI.Xaml.Media.PathSegment obj) => obj is null ? IntPtr.Zero : CreateMarshaler2(obj).Detach();
        public static unsafe MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Media.PathSegment>.MarshalerArray CreateMarshalerArray(global::Microsoft.UI.Xaml.Media.PathSegment[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Media.PathSegment>.CreateMarshalerArray2(array, (o) => CreateMarshaler2(o));
        public static (int length, IntPtr data) GetAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Media.PathSegment>.GetAbiArray(box);
        public static unsafe global::Microsoft.UI.Xaml.Media.PathSegment[] FromAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Media.PathSegment>.FromAbiArray(box, FromAbi);
        public static void CopyAbiArray(global::Microsoft.UI.Xaml.Media.PathSegment[] array, object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Media.PathSegment>.CopyAbiArray(array, box, FromAbi);
        public static (int length, IntPtr data) FromManagedArray(global::Microsoft.UI.Xaml.Media.PathSegment[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Media.PathSegment>.FromManagedArray(array, (o) => FromManaged(o));
        public static void DisposeMarshaler(IObjectReference value) => MarshalInspectable<object>.DisposeMarshaler(value);
        public static void DisposeMarshalerArray(MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Media.PathSegment>.MarshalerArray array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Media.PathSegment>.DisposeMarshalerArray(array);
        public static void DisposeAbi(IntPtr abi) => MarshalInspectable<object>.DisposeAbi(abi);
        public static unsafe void DisposeAbiArray(object box) => MarshalInspectable<object>.DisposeAbiArray(box);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    internal sealed class PathSegmentRcwFactoryAttribute : global::WinRT.WinRTImplementationTypeRcwFactoryAttribute
    {
        public override object CreateInstance(global::WinRT.IInspectable inspectable)
            => new global::Microsoft.UI.Xaml.Media.PathSegment(inspectable.ObjRef);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    public struct PathSegmentCollection
    {

        public static IObjectReference CreateMarshaler(global::Microsoft.UI.Xaml.Media.PathSegmentCollection obj) => obj is null ? null : MarshalInterface<global::System.Collections.Generic.IList<global::Microsoft.UI.Xaml.Media.PathSegment>>.CreateMarshaler(obj);
        public static ObjectReferenceValue CreateMarshaler2(global::Microsoft.UI.Xaml.Media.PathSegmentCollection obj) => MarshalInterface<global::System.Collections.Generic.IList<global::Microsoft.UI.Xaml.Media.PathSegment>>.CreateMarshaler2(obj, global::ABI.System.Collections.Generic.IListMethods<global::Microsoft.UI.Xaml.Media.PathSegment>.IID);
        public static IntPtr GetAbi(IObjectReference value) => value is null ? IntPtr.Zero : MarshalInterfaceHelper<object>.GetAbi(value);
        public static global::Microsoft.UI.Xaml.Media.PathSegmentCollection FromAbi(IntPtr thisPtr) => global::Microsoft.UI.Xaml.Media.PathSegmentCollection.FromAbi(thisPtr);
        public static IntPtr FromManaged(global::Microsoft.UI.Xaml.Media.PathSegmentCollection obj) => obj is null ? IntPtr.Zero : CreateMarshaler2(obj).Detach();
        public static unsafe MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Media.PathSegmentCollection>.MarshalerArray CreateMarshalerArray(global::Microsoft.UI.Xaml.Media.PathSegmentCollection[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Media.PathSegmentCollection>.CreateMarshalerArray2(array, (o) => CreateMarshaler2(o));
        public static (int length, IntPtr data) GetAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Media.PathSegmentCollection>.GetAbiArray(box);
        public static unsafe global::Microsoft.UI.Xaml.Media.PathSegmentCollection[] FromAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Media.PathSegmentCollection>.FromAbiArray(box, FromAbi);
        public static void CopyAbiArray(global::Microsoft.UI.Xaml.Media.PathSegmentCollection[] array, object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Media.PathSegmentCollection>.CopyAbiArray(array, box, FromAbi);
        public static (int length, IntPtr data) FromManagedArray(global::Microsoft.UI.Xaml.Media.PathSegmentCollection[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Media.PathSegmentCollection>.FromManagedArray(array, (o) => FromManaged(o));
        public static void DisposeMarshaler(IObjectReference value) => MarshalInspectable<object>.DisposeMarshaler(value);
        public static void DisposeMarshalerArray(MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Media.PathSegmentCollection>.MarshalerArray array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Media.PathSegmentCollection>.DisposeMarshalerArray(array);
        public static void DisposeAbi(IntPtr abi) => MarshalInspectable<object>.DisposeAbi(abi);
        public static unsafe void DisposeAbiArray(object box) => MarshalInspectable<object>.DisposeAbiArray(box);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    internal sealed class PathSegmentCollectionRcwFactoryAttribute : global::WinRT.WinRTImplementationTypeRcwFactoryAttribute
    {
        public override object CreateInstance(global::WinRT.IInspectable inspectable)
            => new global::Microsoft.UI.Xaml.Media.PathSegmentCollection(inspectable.ObjRef);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    public struct PlaneProjection
    {

        public static IObjectReference CreateMarshaler(global::Microsoft.UI.Xaml.Media.PlaneProjection obj) => obj is null ? null : MarshalInspectable<global::Microsoft.UI.Xaml.Media.PlaneProjection>.CreateMarshaler<IUnknownVftbl>(obj, global::ABI.Microsoft.UI.Xaml.Media.IPlaneProjectionMethods.IID);
        public static ObjectReferenceValue CreateMarshaler2(global::Microsoft.UI.Xaml.Media.PlaneProjection obj) => MarshalInspectable<object>.CreateMarshaler2(obj, global::ABI.Microsoft.UI.Xaml.Media.IPlaneProjectionMethods.IID);
        public static IntPtr GetAbi(IObjectReference value) => value is null ? IntPtr.Zero : MarshalInterfaceHelper<object>.GetAbi(value);
        public static global::Microsoft.UI.Xaml.Media.PlaneProjection FromAbi(IntPtr thisPtr) => global::Microsoft.UI.Xaml.Media.PlaneProjection.FromAbi(thisPtr);
        public static IntPtr FromManaged(global::Microsoft.UI.Xaml.Media.PlaneProjection obj) => obj is null ? IntPtr.Zero : CreateMarshaler2(obj).Detach();
        public static unsafe MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Media.PlaneProjection>.MarshalerArray CreateMarshalerArray(global::Microsoft.UI.Xaml.Media.PlaneProjection[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Media.PlaneProjection>.CreateMarshalerArray2(array, (o) => CreateMarshaler2(o));
        public static (int length, IntPtr data) GetAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Media.PlaneProjection>.GetAbiArray(box);
        public static unsafe global::Microsoft.UI.Xaml.Media.PlaneProjection[] FromAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Media.PlaneProjection>.FromAbiArray(box, FromAbi);
        public static void CopyAbiArray(global::Microsoft.UI.Xaml.Media.PlaneProjection[] array, object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Media.PlaneProjection>.CopyAbiArray(array, box, FromAbi);
        public static (int length, IntPtr data) FromManagedArray(global::Microsoft.UI.Xaml.Media.PlaneProjection[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Media.PlaneProjection>.FromManagedArray(array, (o) => FromManaged(o));
        public static void DisposeMarshaler(IObjectReference value) => MarshalInspectable<object>.DisposeMarshaler(value);
        public static void DisposeMarshalerArray(MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Media.PlaneProjection>.MarshalerArray array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Media.PlaneProjection>.DisposeMarshalerArray(array);
        public static void DisposeAbi(IntPtr abi) => MarshalInspectable<object>.DisposeAbi(abi);
        public static unsafe void DisposeAbiArray(object box) => MarshalInspectable<object>.DisposeAbiArray(box);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    internal sealed class PlaneProjectionRcwFactoryAttribute : global::WinRT.WinRTImplementationTypeRcwFactoryAttribute
    {
        public override object CreateInstance(global::WinRT.IInspectable inspectable)
            => new global::Microsoft.UI.Xaml.Media.PlaneProjection(inspectable.ObjRef);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    public struct PointCollection
    {

        public static IObjectReference CreateMarshaler(global::Microsoft.UI.Xaml.Media.PointCollection obj) => obj is null ? null : MarshalInterface<global::System.Collections.Generic.IList<global::Windows.Foundation.Point>>.CreateMarshaler(obj);
        public static ObjectReferenceValue CreateMarshaler2(global::Microsoft.UI.Xaml.Media.PointCollection obj) => MarshalInterface<global::System.Collections.Generic.IList<global::Windows.Foundation.Point>>.CreateMarshaler2(obj, global::ABI.System.Collections.Generic.IListMethods<global::Windows.Foundation.Point>.IID);
        public static IntPtr GetAbi(IObjectReference value) => value is null ? IntPtr.Zero : MarshalInterfaceHelper<object>.GetAbi(value);
        public static global::Microsoft.UI.Xaml.Media.PointCollection FromAbi(IntPtr thisPtr) => global::Microsoft.UI.Xaml.Media.PointCollection.FromAbi(thisPtr);
        public static IntPtr FromManaged(global::Microsoft.UI.Xaml.Media.PointCollection obj) => obj is null ? IntPtr.Zero : CreateMarshaler2(obj).Detach();
        public static unsafe MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Media.PointCollection>.MarshalerArray CreateMarshalerArray(global::Microsoft.UI.Xaml.Media.PointCollection[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Media.PointCollection>.CreateMarshalerArray2(array, (o) => CreateMarshaler2(o));
        public static (int length, IntPtr data) GetAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Media.PointCollection>.GetAbiArray(box);
        public static unsafe global::Microsoft.UI.Xaml.Media.PointCollection[] FromAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Media.PointCollection>.FromAbiArray(box, FromAbi);
        public static void CopyAbiArray(global::Microsoft.UI.Xaml.Media.PointCollection[] array, object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Media.PointCollection>.CopyAbiArray(array, box, FromAbi);
        public static (int length, IntPtr data) FromManagedArray(global::Microsoft.UI.Xaml.Media.PointCollection[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Media.PointCollection>.FromManagedArray(array, (o) => FromManaged(o));
        public static void DisposeMarshaler(IObjectReference value) => MarshalInspectable<object>.DisposeMarshaler(value);
        public static void DisposeMarshalerArray(MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Media.PointCollection>.MarshalerArray array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Media.PointCollection>.DisposeMarshalerArray(array);
        public static void DisposeAbi(IntPtr abi) => MarshalInspectable<object>.DisposeAbi(abi);
        public static unsafe void DisposeAbiArray(object box) => MarshalInspectable<object>.DisposeAbiArray(box);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    internal sealed class PointCollectionRcwFactoryAttribute : global::WinRT.WinRTImplementationTypeRcwFactoryAttribute
    {
        public override object CreateInstance(global::WinRT.IInspectable inspectable)
            => new global::Microsoft.UI.Xaml.Media.PointCollection(inspectable.ObjRef);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    public struct PolyBezierSegment
    {

        public static IObjectReference CreateMarshaler(global::Microsoft.UI.Xaml.Media.PolyBezierSegment obj) => obj is null ? null : MarshalInspectable<global::Microsoft.UI.Xaml.Media.PolyBezierSegment>.CreateMarshaler<IUnknownVftbl>(obj, global::ABI.Microsoft.UI.Xaml.Media.IPolyBezierSegmentMethods.IID);
        public static ObjectReferenceValue CreateMarshaler2(global::Microsoft.UI.Xaml.Media.PolyBezierSegment obj) => MarshalInspectable<object>.CreateMarshaler2(obj, global::ABI.Microsoft.UI.Xaml.Media.IPolyBezierSegmentMethods.IID);
        public static IntPtr GetAbi(IObjectReference value) => value is null ? IntPtr.Zero : MarshalInterfaceHelper<object>.GetAbi(value);
        public static global::Microsoft.UI.Xaml.Media.PolyBezierSegment FromAbi(IntPtr thisPtr) => global::Microsoft.UI.Xaml.Media.PolyBezierSegment.FromAbi(thisPtr);
        public static IntPtr FromManaged(global::Microsoft.UI.Xaml.Media.PolyBezierSegment obj) => obj is null ? IntPtr.Zero : CreateMarshaler2(obj).Detach();
        public static unsafe MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Media.PolyBezierSegment>.MarshalerArray CreateMarshalerArray(global::Microsoft.UI.Xaml.Media.PolyBezierSegment[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Media.PolyBezierSegment>.CreateMarshalerArray2(array, (o) => CreateMarshaler2(o));
        public static (int length, IntPtr data) GetAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Media.PolyBezierSegment>.GetAbiArray(box);
        public static unsafe global::Microsoft.UI.Xaml.Media.PolyBezierSegment[] FromAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Media.PolyBezierSegment>.FromAbiArray(box, FromAbi);
        public static void CopyAbiArray(global::Microsoft.UI.Xaml.Media.PolyBezierSegment[] array, object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Media.PolyBezierSegment>.CopyAbiArray(array, box, FromAbi);
        public static (int length, IntPtr data) FromManagedArray(global::Microsoft.UI.Xaml.Media.PolyBezierSegment[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Media.PolyBezierSegment>.FromManagedArray(array, (o) => FromManaged(o));
        public static void DisposeMarshaler(IObjectReference value) => MarshalInspectable<object>.DisposeMarshaler(value);
        public static void DisposeMarshalerArray(MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Media.PolyBezierSegment>.MarshalerArray array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Media.PolyBezierSegment>.DisposeMarshalerArray(array);
        public static void DisposeAbi(IntPtr abi) => MarshalInspectable<object>.DisposeAbi(abi);
        public static unsafe void DisposeAbiArray(object box) => MarshalInspectable<object>.DisposeAbiArray(box);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    internal sealed class PolyBezierSegmentRcwFactoryAttribute : global::WinRT.WinRTImplementationTypeRcwFactoryAttribute
    {
        public override object CreateInstance(global::WinRT.IInspectable inspectable)
            => new global::Microsoft.UI.Xaml.Media.PolyBezierSegment(inspectable.ObjRef);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    public struct PolyLineSegment
    {

        public static IObjectReference CreateMarshaler(global::Microsoft.UI.Xaml.Media.PolyLineSegment obj) => obj is null ? null : MarshalInspectable<global::Microsoft.UI.Xaml.Media.PolyLineSegment>.CreateMarshaler<IUnknownVftbl>(obj, global::ABI.Microsoft.UI.Xaml.Media.IPolyLineSegmentMethods.IID);
        public static ObjectReferenceValue CreateMarshaler2(global::Microsoft.UI.Xaml.Media.PolyLineSegment obj) => MarshalInspectable<object>.CreateMarshaler2(obj, global::ABI.Microsoft.UI.Xaml.Media.IPolyLineSegmentMethods.IID);
        public static IntPtr GetAbi(IObjectReference value) => value is null ? IntPtr.Zero : MarshalInterfaceHelper<object>.GetAbi(value);
        public static global::Microsoft.UI.Xaml.Media.PolyLineSegment FromAbi(IntPtr thisPtr) => global::Microsoft.UI.Xaml.Media.PolyLineSegment.FromAbi(thisPtr);
        public static IntPtr FromManaged(global::Microsoft.UI.Xaml.Media.PolyLineSegment obj) => obj is null ? IntPtr.Zero : CreateMarshaler2(obj).Detach();
        public static unsafe MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Media.PolyLineSegment>.MarshalerArray CreateMarshalerArray(global::Microsoft.UI.Xaml.Media.PolyLineSegment[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Media.PolyLineSegment>.CreateMarshalerArray2(array, (o) => CreateMarshaler2(o));
        public static (int length, IntPtr data) GetAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Media.PolyLineSegment>.GetAbiArray(box);
        public static unsafe global::Microsoft.UI.Xaml.Media.PolyLineSegment[] FromAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Media.PolyLineSegment>.FromAbiArray(box, FromAbi);
        public static void CopyAbiArray(global::Microsoft.UI.Xaml.Media.PolyLineSegment[] array, object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Media.PolyLineSegment>.CopyAbiArray(array, box, FromAbi);
        public static (int length, IntPtr data) FromManagedArray(global::Microsoft.UI.Xaml.Media.PolyLineSegment[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Media.PolyLineSegment>.FromManagedArray(array, (o) => FromManaged(o));
        public static void DisposeMarshaler(IObjectReference value) => MarshalInspectable<object>.DisposeMarshaler(value);
        public static void DisposeMarshalerArray(MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Media.PolyLineSegment>.MarshalerArray array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Media.PolyLineSegment>.DisposeMarshalerArray(array);
        public static void DisposeAbi(IntPtr abi) => MarshalInspectable<object>.DisposeAbi(abi);
        public static unsafe void DisposeAbiArray(object box) => MarshalInspectable<object>.DisposeAbiArray(box);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    internal sealed class PolyLineSegmentRcwFactoryAttribute : global::WinRT.WinRTImplementationTypeRcwFactoryAttribute
    {
        public override object CreateInstance(global::WinRT.IInspectable inspectable)
            => new global::Microsoft.UI.Xaml.Media.PolyLineSegment(inspectable.ObjRef);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    public struct PolyQuadraticBezierSegment
    {

        public static IObjectReference CreateMarshaler(global::Microsoft.UI.Xaml.Media.PolyQuadraticBezierSegment obj) => obj is null ? null : MarshalInspectable<global::Microsoft.UI.Xaml.Media.PolyQuadraticBezierSegment>.CreateMarshaler<IUnknownVftbl>(obj, global::ABI.Microsoft.UI.Xaml.Media.IPolyQuadraticBezierSegmentMethods.IID);
        public static ObjectReferenceValue CreateMarshaler2(global::Microsoft.UI.Xaml.Media.PolyQuadraticBezierSegment obj) => MarshalInspectable<object>.CreateMarshaler2(obj, global::ABI.Microsoft.UI.Xaml.Media.IPolyQuadraticBezierSegmentMethods.IID);
        public static IntPtr GetAbi(IObjectReference value) => value is null ? IntPtr.Zero : MarshalInterfaceHelper<object>.GetAbi(value);
        public static global::Microsoft.UI.Xaml.Media.PolyQuadraticBezierSegment FromAbi(IntPtr thisPtr) => global::Microsoft.UI.Xaml.Media.PolyQuadraticBezierSegment.FromAbi(thisPtr);
        public static IntPtr FromManaged(global::Microsoft.UI.Xaml.Media.PolyQuadraticBezierSegment obj) => obj is null ? IntPtr.Zero : CreateMarshaler2(obj).Detach();
        public static unsafe MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Media.PolyQuadraticBezierSegment>.MarshalerArray CreateMarshalerArray(global::Microsoft.UI.Xaml.Media.PolyQuadraticBezierSegment[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Media.PolyQuadraticBezierSegment>.CreateMarshalerArray2(array, (o) => CreateMarshaler2(o));
        public static (int length, IntPtr data) GetAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Media.PolyQuadraticBezierSegment>.GetAbiArray(box);
        public static unsafe global::Microsoft.UI.Xaml.Media.PolyQuadraticBezierSegment[] FromAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Media.PolyQuadraticBezierSegment>.FromAbiArray(box, FromAbi);
        public static void CopyAbiArray(global::Microsoft.UI.Xaml.Media.PolyQuadraticBezierSegment[] array, object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Media.PolyQuadraticBezierSegment>.CopyAbiArray(array, box, FromAbi);
        public static (int length, IntPtr data) FromManagedArray(global::Microsoft.UI.Xaml.Media.PolyQuadraticBezierSegment[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Media.PolyQuadraticBezierSegment>.FromManagedArray(array, (o) => FromManaged(o));
        public static void DisposeMarshaler(IObjectReference value) => MarshalInspectable<object>.DisposeMarshaler(value);
        public static void DisposeMarshalerArray(MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Media.PolyQuadraticBezierSegment>.MarshalerArray array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Media.PolyQuadraticBezierSegment>.DisposeMarshalerArray(array);
        public static void DisposeAbi(IntPtr abi) => MarshalInspectable<object>.DisposeAbi(abi);
        public static unsafe void DisposeAbiArray(object box) => MarshalInspectable<object>.DisposeAbiArray(box);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    internal sealed class PolyQuadraticBezierSegmentRcwFactoryAttribute : global::WinRT.WinRTImplementationTypeRcwFactoryAttribute
    {
        public override object CreateInstance(global::WinRT.IInspectable inspectable)
            => new global::Microsoft.UI.Xaml.Media.PolyQuadraticBezierSegment(inspectable.ObjRef);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    public struct Projection
    {

        public static IObjectReference CreateMarshaler(global::Microsoft.UI.Xaml.Media.Projection obj) => obj is null ? null : MarshalInspectable<global::Microsoft.UI.Xaml.Media.Projection>.CreateMarshaler<IUnknownVftbl>(obj, global::ABI.Microsoft.UI.Xaml.Media.IProjectionMethods.IID);
        public static ObjectReferenceValue CreateMarshaler2(global::Microsoft.UI.Xaml.Media.Projection obj) => MarshalInspectable<object>.CreateMarshaler2(obj, global::ABI.Microsoft.UI.Xaml.Media.IProjectionMethods.IID);
        public static IntPtr GetAbi(IObjectReference value) => value is null ? IntPtr.Zero : MarshalInterfaceHelper<object>.GetAbi(value);
        public static global::Microsoft.UI.Xaml.Media.Projection FromAbi(IntPtr thisPtr) => global::Microsoft.UI.Xaml.Media.Projection.FromAbi(thisPtr);
        public static IntPtr FromManaged(global::Microsoft.UI.Xaml.Media.Projection obj) => obj is null ? IntPtr.Zero : CreateMarshaler2(obj).Detach();
        public static unsafe MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Media.Projection>.MarshalerArray CreateMarshalerArray(global::Microsoft.UI.Xaml.Media.Projection[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Media.Projection>.CreateMarshalerArray2(array, (o) => CreateMarshaler2(o));
        public static (int length, IntPtr data) GetAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Media.Projection>.GetAbiArray(box);
        public static unsafe global::Microsoft.UI.Xaml.Media.Projection[] FromAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Media.Projection>.FromAbiArray(box, FromAbi);
        public static void CopyAbiArray(global::Microsoft.UI.Xaml.Media.Projection[] array, object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Media.Projection>.CopyAbiArray(array, box, FromAbi);
        public static (int length, IntPtr data) FromManagedArray(global::Microsoft.UI.Xaml.Media.Projection[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Media.Projection>.FromManagedArray(array, (o) => FromManaged(o));
        public static void DisposeMarshaler(IObjectReference value) => MarshalInspectable<object>.DisposeMarshaler(value);
        public static void DisposeMarshalerArray(MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Media.Projection>.MarshalerArray array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Media.Projection>.DisposeMarshalerArray(array);
        public static void DisposeAbi(IntPtr abi) => MarshalInspectable<object>.DisposeAbi(abi);
        public static unsafe void DisposeAbiArray(object box) => MarshalInspectable<object>.DisposeAbiArray(box);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    internal sealed class ProjectionRcwFactoryAttribute : global::WinRT.WinRTImplementationTypeRcwFactoryAttribute
    {
        public override object CreateInstance(global::WinRT.IInspectable inspectable)
            => new global::Microsoft.UI.Xaml.Media.Projection(inspectable.ObjRef);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    public struct QuadraticBezierSegment
    {

        public static IObjectReference CreateMarshaler(global::Microsoft.UI.Xaml.Media.QuadraticBezierSegment obj) => obj is null ? null : MarshalInspectable<global::Microsoft.UI.Xaml.Media.QuadraticBezierSegment>.CreateMarshaler<IUnknownVftbl>(obj, global::ABI.Microsoft.UI.Xaml.Media.IQuadraticBezierSegmentMethods.IID);
        public static ObjectReferenceValue CreateMarshaler2(global::Microsoft.UI.Xaml.Media.QuadraticBezierSegment obj) => MarshalInspectable<object>.CreateMarshaler2(obj, global::ABI.Microsoft.UI.Xaml.Media.IQuadraticBezierSegmentMethods.IID);
        public static IntPtr GetAbi(IObjectReference value) => value is null ? IntPtr.Zero : MarshalInterfaceHelper<object>.GetAbi(value);
        public static global::Microsoft.UI.Xaml.Media.QuadraticBezierSegment FromAbi(IntPtr thisPtr) => global::Microsoft.UI.Xaml.Media.QuadraticBezierSegment.FromAbi(thisPtr);
        public static IntPtr FromManaged(global::Microsoft.UI.Xaml.Media.QuadraticBezierSegment obj) => obj is null ? IntPtr.Zero : CreateMarshaler2(obj).Detach();
        public static unsafe MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Media.QuadraticBezierSegment>.MarshalerArray CreateMarshalerArray(global::Microsoft.UI.Xaml.Media.QuadraticBezierSegment[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Media.QuadraticBezierSegment>.CreateMarshalerArray2(array, (o) => CreateMarshaler2(o));
        public static (int length, IntPtr data) GetAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Media.QuadraticBezierSegment>.GetAbiArray(box);
        public static unsafe global::Microsoft.UI.Xaml.Media.QuadraticBezierSegment[] FromAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Media.QuadraticBezierSegment>.FromAbiArray(box, FromAbi);
        public static void CopyAbiArray(global::Microsoft.UI.Xaml.Media.QuadraticBezierSegment[] array, object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Media.QuadraticBezierSegment>.CopyAbiArray(array, box, FromAbi);
        public static (int length, IntPtr data) FromManagedArray(global::Microsoft.UI.Xaml.Media.QuadraticBezierSegment[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Media.QuadraticBezierSegment>.FromManagedArray(array, (o) => FromManaged(o));
        public static void DisposeMarshaler(IObjectReference value) => MarshalInspectable<object>.DisposeMarshaler(value);
        public static void DisposeMarshalerArray(MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Media.QuadraticBezierSegment>.MarshalerArray array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Media.QuadraticBezierSegment>.DisposeMarshalerArray(array);
        public static void DisposeAbi(IntPtr abi) => MarshalInspectable<object>.DisposeAbi(abi);
        public static unsafe void DisposeAbiArray(object box) => MarshalInspectable<object>.DisposeAbiArray(box);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    internal sealed class QuadraticBezierSegmentRcwFactoryAttribute : global::WinRT.WinRTImplementationTypeRcwFactoryAttribute
    {
        public override object CreateInstance(global::WinRT.IInspectable inspectable)
            => new global::Microsoft.UI.Xaml.Media.QuadraticBezierSegment(inspectable.ObjRef);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    public struct RadialGradientBrush
    {

        public static IObjectReference CreateMarshaler(global::Microsoft.UI.Xaml.Media.RadialGradientBrush obj) => obj is null ? null : MarshalInspectable<global::Microsoft.UI.Xaml.Media.RadialGradientBrush>.CreateMarshaler<IUnknownVftbl>(obj, global::ABI.Microsoft.UI.Xaml.Media.IRadialGradientBrushMethods.IID);
        public static ObjectReferenceValue CreateMarshaler2(global::Microsoft.UI.Xaml.Media.RadialGradientBrush obj) => MarshalInspectable<object>.CreateMarshaler2(obj, global::ABI.Microsoft.UI.Xaml.Media.IRadialGradientBrushMethods.IID);
        public static IntPtr GetAbi(IObjectReference value) => value is null ? IntPtr.Zero : MarshalInterfaceHelper<object>.GetAbi(value);
        public static global::Microsoft.UI.Xaml.Media.RadialGradientBrush FromAbi(IntPtr thisPtr) => global::Microsoft.UI.Xaml.Media.RadialGradientBrush.FromAbi(thisPtr);
        public static IntPtr FromManaged(global::Microsoft.UI.Xaml.Media.RadialGradientBrush obj) => obj is null ? IntPtr.Zero : CreateMarshaler2(obj).Detach();
        public static unsafe MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Media.RadialGradientBrush>.MarshalerArray CreateMarshalerArray(global::Microsoft.UI.Xaml.Media.RadialGradientBrush[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Media.RadialGradientBrush>.CreateMarshalerArray2(array, (o) => CreateMarshaler2(o));
        public static (int length, IntPtr data) GetAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Media.RadialGradientBrush>.GetAbiArray(box);
        public static unsafe global::Microsoft.UI.Xaml.Media.RadialGradientBrush[] FromAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Media.RadialGradientBrush>.FromAbiArray(box, FromAbi);
        public static void CopyAbiArray(global::Microsoft.UI.Xaml.Media.RadialGradientBrush[] array, object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Media.RadialGradientBrush>.CopyAbiArray(array, box, FromAbi);
        public static (int length, IntPtr data) FromManagedArray(global::Microsoft.UI.Xaml.Media.RadialGradientBrush[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Media.RadialGradientBrush>.FromManagedArray(array, (o) => FromManaged(o));
        public static void DisposeMarshaler(IObjectReference value) => MarshalInspectable<object>.DisposeMarshaler(value);
        public static void DisposeMarshalerArray(MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Media.RadialGradientBrush>.MarshalerArray array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Media.RadialGradientBrush>.DisposeMarshalerArray(array);
        public static void DisposeAbi(IntPtr abi) => MarshalInspectable<object>.DisposeAbi(abi);
        public static unsafe void DisposeAbiArray(object box) => MarshalInspectable<object>.DisposeAbiArray(box);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    internal sealed class RadialGradientBrushRcwFactoryAttribute : global::WinRT.WinRTImplementationTypeRcwFactoryAttribute
    {
        public override object CreateInstance(global::WinRT.IInspectable inspectable)
            => new global::Microsoft.UI.Xaml.Media.RadialGradientBrush(inspectable.ObjRef);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    public struct RectangleGeometry
    {

        public static IObjectReference CreateMarshaler(global::Microsoft.UI.Xaml.Media.RectangleGeometry obj) => obj is null ? null : MarshalInspectable<global::Microsoft.UI.Xaml.Media.RectangleGeometry>.CreateMarshaler<IUnknownVftbl>(obj, global::ABI.Microsoft.UI.Xaml.Media.IRectangleGeometryMethods.IID);
        public static ObjectReferenceValue CreateMarshaler2(global::Microsoft.UI.Xaml.Media.RectangleGeometry obj) => MarshalInspectable<object>.CreateMarshaler2(obj, global::ABI.Microsoft.UI.Xaml.Media.IRectangleGeometryMethods.IID);
        public static IntPtr GetAbi(IObjectReference value) => value is null ? IntPtr.Zero : MarshalInterfaceHelper<object>.GetAbi(value);
        public static global::Microsoft.UI.Xaml.Media.RectangleGeometry FromAbi(IntPtr thisPtr) => global::Microsoft.UI.Xaml.Media.RectangleGeometry.FromAbi(thisPtr);
        public static IntPtr FromManaged(global::Microsoft.UI.Xaml.Media.RectangleGeometry obj) => obj is null ? IntPtr.Zero : CreateMarshaler2(obj).Detach();
        public static unsafe MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Media.RectangleGeometry>.MarshalerArray CreateMarshalerArray(global::Microsoft.UI.Xaml.Media.RectangleGeometry[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Media.RectangleGeometry>.CreateMarshalerArray2(array, (o) => CreateMarshaler2(o));
        public static (int length, IntPtr data) GetAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Media.RectangleGeometry>.GetAbiArray(box);
        public static unsafe global::Microsoft.UI.Xaml.Media.RectangleGeometry[] FromAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Media.RectangleGeometry>.FromAbiArray(box, FromAbi);
        public static void CopyAbiArray(global::Microsoft.UI.Xaml.Media.RectangleGeometry[] array, object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Media.RectangleGeometry>.CopyAbiArray(array, box, FromAbi);
        public static (int length, IntPtr data) FromManagedArray(global::Microsoft.UI.Xaml.Media.RectangleGeometry[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Media.RectangleGeometry>.FromManagedArray(array, (o) => FromManaged(o));
        public static void DisposeMarshaler(IObjectReference value) => MarshalInspectable<object>.DisposeMarshaler(value);
        public static void DisposeMarshalerArray(MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Media.RectangleGeometry>.MarshalerArray array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Media.RectangleGeometry>.DisposeMarshalerArray(array);
        public static void DisposeAbi(IntPtr abi) => MarshalInspectable<object>.DisposeAbi(abi);
        public static unsafe void DisposeAbiArray(object box) => MarshalInspectable<object>.DisposeAbiArray(box);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    internal sealed class RectangleGeometryRcwFactoryAttribute : global::WinRT.WinRTImplementationTypeRcwFactoryAttribute
    {
        public override object CreateInstance(global::WinRT.IInspectable inspectable)
            => new global::Microsoft.UI.Xaml.Media.RectangleGeometry(inspectable.ObjRef);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    public struct RenderedEventArgs
    {

        public static IObjectReference CreateMarshaler(global::Microsoft.UI.Xaml.Media.RenderedEventArgs obj) => obj is null ? null : MarshalInspectable<global::Microsoft.UI.Xaml.Media.RenderedEventArgs>.CreateMarshaler<IUnknownVftbl>(obj, global::ABI.Microsoft.UI.Xaml.Media.IRenderedEventArgsMethods.IID);
        public static ObjectReferenceValue CreateMarshaler2(global::Microsoft.UI.Xaml.Media.RenderedEventArgs obj) => MarshalInspectable<object>.CreateMarshaler2(obj, global::ABI.Microsoft.UI.Xaml.Media.IRenderedEventArgsMethods.IID);
        public static IntPtr GetAbi(IObjectReference value) => value is null ? IntPtr.Zero : MarshalInterfaceHelper<object>.GetAbi(value);
        public static global::Microsoft.UI.Xaml.Media.RenderedEventArgs FromAbi(IntPtr thisPtr) => global::Microsoft.UI.Xaml.Media.RenderedEventArgs.FromAbi(thisPtr);
        public static IntPtr FromManaged(global::Microsoft.UI.Xaml.Media.RenderedEventArgs obj) => obj is null ? IntPtr.Zero : CreateMarshaler2(obj).Detach();
        public static unsafe MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Media.RenderedEventArgs>.MarshalerArray CreateMarshalerArray(global::Microsoft.UI.Xaml.Media.RenderedEventArgs[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Media.RenderedEventArgs>.CreateMarshalerArray2(array, (o) => CreateMarshaler2(o));
        public static (int length, IntPtr data) GetAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Media.RenderedEventArgs>.GetAbiArray(box);
        public static unsafe global::Microsoft.UI.Xaml.Media.RenderedEventArgs[] FromAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Media.RenderedEventArgs>.FromAbiArray(box, FromAbi);
        public static void CopyAbiArray(global::Microsoft.UI.Xaml.Media.RenderedEventArgs[] array, object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Media.RenderedEventArgs>.CopyAbiArray(array, box, FromAbi);
        public static (int length, IntPtr data) FromManagedArray(global::Microsoft.UI.Xaml.Media.RenderedEventArgs[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Media.RenderedEventArgs>.FromManagedArray(array, (o) => FromManaged(o));
        public static void DisposeMarshaler(IObjectReference value) => MarshalInspectable<object>.DisposeMarshaler(value);
        public static void DisposeMarshalerArray(MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Media.RenderedEventArgs>.MarshalerArray array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Media.RenderedEventArgs>.DisposeMarshalerArray(array);
        public static void DisposeAbi(IntPtr abi) => MarshalInspectable<object>.DisposeAbi(abi);
        public static unsafe void DisposeAbiArray(object box) => MarshalInspectable<object>.DisposeAbiArray(box);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    internal sealed class RenderedEventArgsRcwFactoryAttribute : global::WinRT.WinRTImplementationTypeRcwFactoryAttribute
    {
        public override object CreateInstance(global::WinRT.IInspectable inspectable)
            => new global::Microsoft.UI.Xaml.Media.RenderedEventArgs(inspectable.ObjRef);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    public struct RenderingEventArgs
    {

        public static IObjectReference CreateMarshaler(global::Microsoft.UI.Xaml.Media.RenderingEventArgs obj) => obj is null ? null : MarshalInspectable<global::Microsoft.UI.Xaml.Media.RenderingEventArgs>.CreateMarshaler<IUnknownVftbl>(obj, global::ABI.Microsoft.UI.Xaml.Media.IRenderingEventArgsMethods.IID);
        public static ObjectReferenceValue CreateMarshaler2(global::Microsoft.UI.Xaml.Media.RenderingEventArgs obj) => MarshalInspectable<object>.CreateMarshaler2(obj, global::ABI.Microsoft.UI.Xaml.Media.IRenderingEventArgsMethods.IID);
        public static IntPtr GetAbi(IObjectReference value) => value is null ? IntPtr.Zero : MarshalInterfaceHelper<object>.GetAbi(value);
        public static global::Microsoft.UI.Xaml.Media.RenderingEventArgs FromAbi(IntPtr thisPtr) => global::Microsoft.UI.Xaml.Media.RenderingEventArgs.FromAbi(thisPtr);
        public static IntPtr FromManaged(global::Microsoft.UI.Xaml.Media.RenderingEventArgs obj) => obj is null ? IntPtr.Zero : CreateMarshaler2(obj).Detach();
        public static unsafe MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Media.RenderingEventArgs>.MarshalerArray CreateMarshalerArray(global::Microsoft.UI.Xaml.Media.RenderingEventArgs[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Media.RenderingEventArgs>.CreateMarshalerArray2(array, (o) => CreateMarshaler2(o));
        public static (int length, IntPtr data) GetAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Media.RenderingEventArgs>.GetAbiArray(box);
        public static unsafe global::Microsoft.UI.Xaml.Media.RenderingEventArgs[] FromAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Media.RenderingEventArgs>.FromAbiArray(box, FromAbi);
        public static void CopyAbiArray(global::Microsoft.UI.Xaml.Media.RenderingEventArgs[] array, object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Media.RenderingEventArgs>.CopyAbiArray(array, box, FromAbi);
        public static (int length, IntPtr data) FromManagedArray(global::Microsoft.UI.Xaml.Media.RenderingEventArgs[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Media.RenderingEventArgs>.FromManagedArray(array, (o) => FromManaged(o));
        public static void DisposeMarshaler(IObjectReference value) => MarshalInspectable<object>.DisposeMarshaler(value);
        public static void DisposeMarshalerArray(MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Media.RenderingEventArgs>.MarshalerArray array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Media.RenderingEventArgs>.DisposeMarshalerArray(array);
        public static void DisposeAbi(IntPtr abi) => MarshalInspectable<object>.DisposeAbi(abi);
        public static unsafe void DisposeAbiArray(object box) => MarshalInspectable<object>.DisposeAbiArray(box);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    internal sealed class RenderingEventArgsRcwFactoryAttribute : global::WinRT.WinRTImplementationTypeRcwFactoryAttribute
    {
        public override object CreateInstance(global::WinRT.IInspectable inspectable)
            => new global::Microsoft.UI.Xaml.Media.RenderingEventArgs(inspectable.ObjRef);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    public struct RevealBackgroundBrush
    {

        public static IObjectReference CreateMarshaler(global::Microsoft.UI.Xaml.Media.RevealBackgroundBrush obj) => obj is null ? null : MarshalInspectable<global::Microsoft.UI.Xaml.Media.RevealBackgroundBrush>.CreateMarshaler<IUnknownVftbl>(obj, global::ABI.Microsoft.UI.Xaml.Media.IRevealBackgroundBrushMethods.IID);
        public static ObjectReferenceValue CreateMarshaler2(global::Microsoft.UI.Xaml.Media.RevealBackgroundBrush obj) => MarshalInspectable<object>.CreateMarshaler2(obj, global::ABI.Microsoft.UI.Xaml.Media.IRevealBackgroundBrushMethods.IID);
        public static IntPtr GetAbi(IObjectReference value) => value is null ? IntPtr.Zero : MarshalInterfaceHelper<object>.GetAbi(value);
        public static global::Microsoft.UI.Xaml.Media.RevealBackgroundBrush FromAbi(IntPtr thisPtr) => global::Microsoft.UI.Xaml.Media.RevealBackgroundBrush.FromAbi(thisPtr);
        public static IntPtr FromManaged(global::Microsoft.UI.Xaml.Media.RevealBackgroundBrush obj) => obj is null ? IntPtr.Zero : CreateMarshaler2(obj).Detach();
        public static unsafe MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Media.RevealBackgroundBrush>.MarshalerArray CreateMarshalerArray(global::Microsoft.UI.Xaml.Media.RevealBackgroundBrush[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Media.RevealBackgroundBrush>.CreateMarshalerArray2(array, (o) => CreateMarshaler2(o));
        public static (int length, IntPtr data) GetAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Media.RevealBackgroundBrush>.GetAbiArray(box);
        public static unsafe global::Microsoft.UI.Xaml.Media.RevealBackgroundBrush[] FromAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Media.RevealBackgroundBrush>.FromAbiArray(box, FromAbi);
        public static void CopyAbiArray(global::Microsoft.UI.Xaml.Media.RevealBackgroundBrush[] array, object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Media.RevealBackgroundBrush>.CopyAbiArray(array, box, FromAbi);
        public static (int length, IntPtr data) FromManagedArray(global::Microsoft.UI.Xaml.Media.RevealBackgroundBrush[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Media.RevealBackgroundBrush>.FromManagedArray(array, (o) => FromManaged(o));
        public static void DisposeMarshaler(IObjectReference value) => MarshalInspectable<object>.DisposeMarshaler(value);
        public static void DisposeMarshalerArray(MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Media.RevealBackgroundBrush>.MarshalerArray array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Media.RevealBackgroundBrush>.DisposeMarshalerArray(array);
        public static void DisposeAbi(IntPtr abi) => MarshalInspectable<object>.DisposeAbi(abi);
        public static unsafe void DisposeAbiArray(object box) => MarshalInspectable<object>.DisposeAbiArray(box);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    internal sealed class RevealBackgroundBrushRcwFactoryAttribute : global::WinRT.WinRTImplementationTypeRcwFactoryAttribute
    {
        public override object CreateInstance(global::WinRT.IInspectable inspectable)
            => new global::Microsoft.UI.Xaml.Media.RevealBackgroundBrush(inspectable.ObjRef);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    public struct RevealBorderBrush
    {

        public static IObjectReference CreateMarshaler(global::Microsoft.UI.Xaml.Media.RevealBorderBrush obj) => obj is null ? null : MarshalInspectable<global::Microsoft.UI.Xaml.Media.RevealBorderBrush>.CreateMarshaler<IUnknownVftbl>(obj, global::ABI.Microsoft.UI.Xaml.Media.IRevealBorderBrushMethods.IID);
        public static ObjectReferenceValue CreateMarshaler2(global::Microsoft.UI.Xaml.Media.RevealBorderBrush obj) => MarshalInspectable<object>.CreateMarshaler2(obj, global::ABI.Microsoft.UI.Xaml.Media.IRevealBorderBrushMethods.IID);
        public static IntPtr GetAbi(IObjectReference value) => value is null ? IntPtr.Zero : MarshalInterfaceHelper<object>.GetAbi(value);
        public static global::Microsoft.UI.Xaml.Media.RevealBorderBrush FromAbi(IntPtr thisPtr) => global::Microsoft.UI.Xaml.Media.RevealBorderBrush.FromAbi(thisPtr);
        public static IntPtr FromManaged(global::Microsoft.UI.Xaml.Media.RevealBorderBrush obj) => obj is null ? IntPtr.Zero : CreateMarshaler2(obj).Detach();
        public static unsafe MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Media.RevealBorderBrush>.MarshalerArray CreateMarshalerArray(global::Microsoft.UI.Xaml.Media.RevealBorderBrush[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Media.RevealBorderBrush>.CreateMarshalerArray2(array, (o) => CreateMarshaler2(o));
        public static (int length, IntPtr data) GetAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Media.RevealBorderBrush>.GetAbiArray(box);
        public static unsafe global::Microsoft.UI.Xaml.Media.RevealBorderBrush[] FromAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Media.RevealBorderBrush>.FromAbiArray(box, FromAbi);
        public static void CopyAbiArray(global::Microsoft.UI.Xaml.Media.RevealBorderBrush[] array, object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Media.RevealBorderBrush>.CopyAbiArray(array, box, FromAbi);
        public static (int length, IntPtr data) FromManagedArray(global::Microsoft.UI.Xaml.Media.RevealBorderBrush[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Media.RevealBorderBrush>.FromManagedArray(array, (o) => FromManaged(o));
        public static void DisposeMarshaler(IObjectReference value) => MarshalInspectable<object>.DisposeMarshaler(value);
        public static void DisposeMarshalerArray(MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Media.RevealBorderBrush>.MarshalerArray array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Media.RevealBorderBrush>.DisposeMarshalerArray(array);
        public static void DisposeAbi(IntPtr abi) => MarshalInspectable<object>.DisposeAbi(abi);
        public static unsafe void DisposeAbiArray(object box) => MarshalInspectable<object>.DisposeAbiArray(box);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    internal sealed class RevealBorderBrushRcwFactoryAttribute : global::WinRT.WinRTImplementationTypeRcwFactoryAttribute
    {
        public override object CreateInstance(global::WinRT.IInspectable inspectable)
            => new global::Microsoft.UI.Xaml.Media.RevealBorderBrush(inspectable.ObjRef);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    public struct RevealBrush
    {

        public static IObjectReference CreateMarshaler(global::Microsoft.UI.Xaml.Media.RevealBrush obj) => obj is null ? null : MarshalInspectable<global::Microsoft.UI.Xaml.Media.RevealBrush>.CreateMarshaler<IUnknownVftbl>(obj, global::ABI.Microsoft.UI.Xaml.Media.IRevealBrushMethods.IID);
        public static ObjectReferenceValue CreateMarshaler2(global::Microsoft.UI.Xaml.Media.RevealBrush obj) => MarshalInspectable<object>.CreateMarshaler2(obj, global::ABI.Microsoft.UI.Xaml.Media.IRevealBrushMethods.IID);
        public static IntPtr GetAbi(IObjectReference value) => value is null ? IntPtr.Zero : MarshalInterfaceHelper<object>.GetAbi(value);
        public static global::Microsoft.UI.Xaml.Media.RevealBrush FromAbi(IntPtr thisPtr) => global::Microsoft.UI.Xaml.Media.RevealBrush.FromAbi(thisPtr);
        public static IntPtr FromManaged(global::Microsoft.UI.Xaml.Media.RevealBrush obj) => obj is null ? IntPtr.Zero : CreateMarshaler2(obj).Detach();
        public static unsafe MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Media.RevealBrush>.MarshalerArray CreateMarshalerArray(global::Microsoft.UI.Xaml.Media.RevealBrush[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Media.RevealBrush>.CreateMarshalerArray2(array, (o) => CreateMarshaler2(o));
        public static (int length, IntPtr data) GetAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Media.RevealBrush>.GetAbiArray(box);
        public static unsafe global::Microsoft.UI.Xaml.Media.RevealBrush[] FromAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Media.RevealBrush>.FromAbiArray(box, FromAbi);
        public static void CopyAbiArray(global::Microsoft.UI.Xaml.Media.RevealBrush[] array, object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Media.RevealBrush>.CopyAbiArray(array, box, FromAbi);
        public static (int length, IntPtr data) FromManagedArray(global::Microsoft.UI.Xaml.Media.RevealBrush[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Media.RevealBrush>.FromManagedArray(array, (o) => FromManaged(o));
        public static void DisposeMarshaler(IObjectReference value) => MarshalInspectable<object>.DisposeMarshaler(value);
        public static void DisposeMarshalerArray(MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Media.RevealBrush>.MarshalerArray array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Media.RevealBrush>.DisposeMarshalerArray(array);
        public static void DisposeAbi(IntPtr abi) => MarshalInspectable<object>.DisposeAbi(abi);
        public static unsafe void DisposeAbiArray(object box) => MarshalInspectable<object>.DisposeAbiArray(box);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    internal sealed class RevealBrushRcwFactoryAttribute : global::WinRT.WinRTImplementationTypeRcwFactoryAttribute
    {
        public override object CreateInstance(global::WinRT.IInspectable inspectable)
            => new global::Microsoft.UI.Xaml.Media.RevealBrush(inspectable.ObjRef);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    public struct RotateTransform
    {

        public static IObjectReference CreateMarshaler(global::Microsoft.UI.Xaml.Media.RotateTransform obj) => obj is null ? null : MarshalInspectable<global::Microsoft.UI.Xaml.Media.RotateTransform>.CreateMarshaler<IUnknownVftbl>(obj, global::ABI.Microsoft.UI.Xaml.Media.IRotateTransformMethods.IID);
        public static ObjectReferenceValue CreateMarshaler2(global::Microsoft.UI.Xaml.Media.RotateTransform obj) => MarshalInspectable<object>.CreateMarshaler2(obj, global::ABI.Microsoft.UI.Xaml.Media.IRotateTransformMethods.IID);
        public static IntPtr GetAbi(IObjectReference value) => value is null ? IntPtr.Zero : MarshalInterfaceHelper<object>.GetAbi(value);
        public static global::Microsoft.UI.Xaml.Media.RotateTransform FromAbi(IntPtr thisPtr) => global::Microsoft.UI.Xaml.Media.RotateTransform.FromAbi(thisPtr);
        public static IntPtr FromManaged(global::Microsoft.UI.Xaml.Media.RotateTransform obj) => obj is null ? IntPtr.Zero : CreateMarshaler2(obj).Detach();
        public static unsafe MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Media.RotateTransform>.MarshalerArray CreateMarshalerArray(global::Microsoft.UI.Xaml.Media.RotateTransform[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Media.RotateTransform>.CreateMarshalerArray2(array, (o) => CreateMarshaler2(o));
        public static (int length, IntPtr data) GetAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Media.RotateTransform>.GetAbiArray(box);
        public static unsafe global::Microsoft.UI.Xaml.Media.RotateTransform[] FromAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Media.RotateTransform>.FromAbiArray(box, FromAbi);
        public static void CopyAbiArray(global::Microsoft.UI.Xaml.Media.RotateTransform[] array, object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Media.RotateTransform>.CopyAbiArray(array, box, FromAbi);
        public static (int length, IntPtr data) FromManagedArray(global::Microsoft.UI.Xaml.Media.RotateTransform[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Media.RotateTransform>.FromManagedArray(array, (o) => FromManaged(o));
        public static void DisposeMarshaler(IObjectReference value) => MarshalInspectable<object>.DisposeMarshaler(value);
        public static void DisposeMarshalerArray(MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Media.RotateTransform>.MarshalerArray array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Media.RotateTransform>.DisposeMarshalerArray(array);
        public static void DisposeAbi(IntPtr abi) => MarshalInspectable<object>.DisposeAbi(abi);
        public static unsafe void DisposeAbiArray(object box) => MarshalInspectable<object>.DisposeAbiArray(box);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    internal sealed class RotateTransformRcwFactoryAttribute : global::WinRT.WinRTImplementationTypeRcwFactoryAttribute
    {
        public override object CreateInstance(global::WinRT.IInspectable inspectable)
            => new global::Microsoft.UI.Xaml.Media.RotateTransform(inspectable.ObjRef);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    public struct ScaleTransform
    {

        public static IObjectReference CreateMarshaler(global::Microsoft.UI.Xaml.Media.ScaleTransform obj) => obj is null ? null : MarshalInspectable<global::Microsoft.UI.Xaml.Media.ScaleTransform>.CreateMarshaler<IUnknownVftbl>(obj, global::ABI.Microsoft.UI.Xaml.Media.IScaleTransformMethods.IID);
        public static ObjectReferenceValue CreateMarshaler2(global::Microsoft.UI.Xaml.Media.ScaleTransform obj) => MarshalInspectable<object>.CreateMarshaler2(obj, global::ABI.Microsoft.UI.Xaml.Media.IScaleTransformMethods.IID);
        public static IntPtr GetAbi(IObjectReference value) => value is null ? IntPtr.Zero : MarshalInterfaceHelper<object>.GetAbi(value);
        public static global::Microsoft.UI.Xaml.Media.ScaleTransform FromAbi(IntPtr thisPtr) => global::Microsoft.UI.Xaml.Media.ScaleTransform.FromAbi(thisPtr);
        public static IntPtr FromManaged(global::Microsoft.UI.Xaml.Media.ScaleTransform obj) => obj is null ? IntPtr.Zero : CreateMarshaler2(obj).Detach();
        public static unsafe MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Media.ScaleTransform>.MarshalerArray CreateMarshalerArray(global::Microsoft.UI.Xaml.Media.ScaleTransform[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Media.ScaleTransform>.CreateMarshalerArray2(array, (o) => CreateMarshaler2(o));
        public static (int length, IntPtr data) GetAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Media.ScaleTransform>.GetAbiArray(box);
        public static unsafe global::Microsoft.UI.Xaml.Media.ScaleTransform[] FromAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Media.ScaleTransform>.FromAbiArray(box, FromAbi);
        public static void CopyAbiArray(global::Microsoft.UI.Xaml.Media.ScaleTransform[] array, object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Media.ScaleTransform>.CopyAbiArray(array, box, FromAbi);
        public static (int length, IntPtr data) FromManagedArray(global::Microsoft.UI.Xaml.Media.ScaleTransform[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Media.ScaleTransform>.FromManagedArray(array, (o) => FromManaged(o));
        public static void DisposeMarshaler(IObjectReference value) => MarshalInspectable<object>.DisposeMarshaler(value);
        public static void DisposeMarshalerArray(MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Media.ScaleTransform>.MarshalerArray array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Media.ScaleTransform>.DisposeMarshalerArray(array);
        public static void DisposeAbi(IntPtr abi) => MarshalInspectable<object>.DisposeAbi(abi);
        public static unsafe void DisposeAbiArray(object box) => MarshalInspectable<object>.DisposeAbiArray(box);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    internal sealed class ScaleTransformRcwFactoryAttribute : global::WinRT.WinRTImplementationTypeRcwFactoryAttribute
    {
        public override object CreateInstance(global::WinRT.IInspectable inspectable)
            => new global::Microsoft.UI.Xaml.Media.ScaleTransform(inspectable.ObjRef);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    public struct Shadow
    {

        public static IObjectReference CreateMarshaler(global::Microsoft.UI.Xaml.Media.Shadow obj) => obj is null ? null : MarshalInspectable<global::Microsoft.UI.Xaml.Media.Shadow>.CreateMarshaler<IUnknownVftbl>(obj, global::ABI.Microsoft.UI.Xaml.Media.IShadowMethods.IID);
        public static ObjectReferenceValue CreateMarshaler2(global::Microsoft.UI.Xaml.Media.Shadow obj) => MarshalInspectable<object>.CreateMarshaler2(obj, global::ABI.Microsoft.UI.Xaml.Media.IShadowMethods.IID);
        public static IntPtr GetAbi(IObjectReference value) => value is null ? IntPtr.Zero : MarshalInterfaceHelper<object>.GetAbi(value);
        public static global::Microsoft.UI.Xaml.Media.Shadow FromAbi(IntPtr thisPtr) => global::Microsoft.UI.Xaml.Media.Shadow.FromAbi(thisPtr);
        public static IntPtr FromManaged(global::Microsoft.UI.Xaml.Media.Shadow obj) => obj is null ? IntPtr.Zero : CreateMarshaler2(obj).Detach();
        public static unsafe MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Media.Shadow>.MarshalerArray CreateMarshalerArray(global::Microsoft.UI.Xaml.Media.Shadow[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Media.Shadow>.CreateMarshalerArray2(array, (o) => CreateMarshaler2(o));
        public static (int length, IntPtr data) GetAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Media.Shadow>.GetAbiArray(box);
        public static unsafe global::Microsoft.UI.Xaml.Media.Shadow[] FromAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Media.Shadow>.FromAbiArray(box, FromAbi);
        public static void CopyAbiArray(global::Microsoft.UI.Xaml.Media.Shadow[] array, object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Media.Shadow>.CopyAbiArray(array, box, FromAbi);
        public static (int length, IntPtr data) FromManagedArray(global::Microsoft.UI.Xaml.Media.Shadow[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Media.Shadow>.FromManagedArray(array, (o) => FromManaged(o));
        public static void DisposeMarshaler(IObjectReference value) => MarshalInspectable<object>.DisposeMarshaler(value);
        public static void DisposeMarshalerArray(MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Media.Shadow>.MarshalerArray array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Media.Shadow>.DisposeMarshalerArray(array);
        public static void DisposeAbi(IntPtr abi) => MarshalInspectable<object>.DisposeAbi(abi);
        public static unsafe void DisposeAbiArray(object box) => MarshalInspectable<object>.DisposeAbiArray(box);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    internal sealed class ShadowRcwFactoryAttribute : global::WinRT.WinRTImplementationTypeRcwFactoryAttribute
    {
        public override object CreateInstance(global::WinRT.IInspectable inspectable)
            => new global::Microsoft.UI.Xaml.Media.Shadow(inspectable.ObjRef);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    public struct SkewTransform
    {

        public static IObjectReference CreateMarshaler(global::Microsoft.UI.Xaml.Media.SkewTransform obj) => obj is null ? null : MarshalInspectable<global::Microsoft.UI.Xaml.Media.SkewTransform>.CreateMarshaler<IUnknownVftbl>(obj, global::ABI.Microsoft.UI.Xaml.Media.ISkewTransformMethods.IID);
        public static ObjectReferenceValue CreateMarshaler2(global::Microsoft.UI.Xaml.Media.SkewTransform obj) => MarshalInspectable<object>.CreateMarshaler2(obj, global::ABI.Microsoft.UI.Xaml.Media.ISkewTransformMethods.IID);
        public static IntPtr GetAbi(IObjectReference value) => value is null ? IntPtr.Zero : MarshalInterfaceHelper<object>.GetAbi(value);
        public static global::Microsoft.UI.Xaml.Media.SkewTransform FromAbi(IntPtr thisPtr) => global::Microsoft.UI.Xaml.Media.SkewTransform.FromAbi(thisPtr);
        public static IntPtr FromManaged(global::Microsoft.UI.Xaml.Media.SkewTransform obj) => obj is null ? IntPtr.Zero : CreateMarshaler2(obj).Detach();
        public static unsafe MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Media.SkewTransform>.MarshalerArray CreateMarshalerArray(global::Microsoft.UI.Xaml.Media.SkewTransform[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Media.SkewTransform>.CreateMarshalerArray2(array, (o) => CreateMarshaler2(o));
        public static (int length, IntPtr data) GetAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Media.SkewTransform>.GetAbiArray(box);
        public static unsafe global::Microsoft.UI.Xaml.Media.SkewTransform[] FromAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Media.SkewTransform>.FromAbiArray(box, FromAbi);
        public static void CopyAbiArray(global::Microsoft.UI.Xaml.Media.SkewTransform[] array, object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Media.SkewTransform>.CopyAbiArray(array, box, FromAbi);
        public static (int length, IntPtr data) FromManagedArray(global::Microsoft.UI.Xaml.Media.SkewTransform[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Media.SkewTransform>.FromManagedArray(array, (o) => FromManaged(o));
        public static void DisposeMarshaler(IObjectReference value) => MarshalInspectable<object>.DisposeMarshaler(value);
        public static void DisposeMarshalerArray(MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Media.SkewTransform>.MarshalerArray array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Media.SkewTransform>.DisposeMarshalerArray(array);
        public static void DisposeAbi(IntPtr abi) => MarshalInspectable<object>.DisposeAbi(abi);
        public static unsafe void DisposeAbiArray(object box) => MarshalInspectable<object>.DisposeAbiArray(box);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    internal sealed class SkewTransformRcwFactoryAttribute : global::WinRT.WinRTImplementationTypeRcwFactoryAttribute
    {
        public override object CreateInstance(global::WinRT.IInspectable inspectable)
            => new global::Microsoft.UI.Xaml.Media.SkewTransform(inspectable.ObjRef);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    public struct SolidColorBrush
    {

        public static IObjectReference CreateMarshaler(global::Microsoft.UI.Xaml.Media.SolidColorBrush obj) => obj is null ? null : MarshalInspectable<global::Microsoft.UI.Xaml.Media.SolidColorBrush>.CreateMarshaler<IUnknownVftbl>(obj, global::ABI.Microsoft.UI.Xaml.Media.ISolidColorBrushMethods.IID);
        public static ObjectReferenceValue CreateMarshaler2(global::Microsoft.UI.Xaml.Media.SolidColorBrush obj) => MarshalInspectable<object>.CreateMarshaler2(obj, global::ABI.Microsoft.UI.Xaml.Media.ISolidColorBrushMethods.IID);
        public static IntPtr GetAbi(IObjectReference value) => value is null ? IntPtr.Zero : MarshalInterfaceHelper<object>.GetAbi(value);
        public static global::Microsoft.UI.Xaml.Media.SolidColorBrush FromAbi(IntPtr thisPtr) => global::Microsoft.UI.Xaml.Media.SolidColorBrush.FromAbi(thisPtr);
        public static IntPtr FromManaged(global::Microsoft.UI.Xaml.Media.SolidColorBrush obj) => obj is null ? IntPtr.Zero : CreateMarshaler2(obj).Detach();
        public static unsafe MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Media.SolidColorBrush>.MarshalerArray CreateMarshalerArray(global::Microsoft.UI.Xaml.Media.SolidColorBrush[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Media.SolidColorBrush>.CreateMarshalerArray2(array, (o) => CreateMarshaler2(o));
        public static (int length, IntPtr data) GetAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Media.SolidColorBrush>.GetAbiArray(box);
        public static unsafe global::Microsoft.UI.Xaml.Media.SolidColorBrush[] FromAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Media.SolidColorBrush>.FromAbiArray(box, FromAbi);
        public static void CopyAbiArray(global::Microsoft.UI.Xaml.Media.SolidColorBrush[] array, object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Media.SolidColorBrush>.CopyAbiArray(array, box, FromAbi);
        public static (int length, IntPtr data) FromManagedArray(global::Microsoft.UI.Xaml.Media.SolidColorBrush[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Media.SolidColorBrush>.FromManagedArray(array, (o) => FromManaged(o));
        public static void DisposeMarshaler(IObjectReference value) => MarshalInspectable<object>.DisposeMarshaler(value);
        public static void DisposeMarshalerArray(MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Media.SolidColorBrush>.MarshalerArray array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Media.SolidColorBrush>.DisposeMarshalerArray(array);
        public static void DisposeAbi(IntPtr abi) => MarshalInspectable<object>.DisposeAbi(abi);
        public static unsafe void DisposeAbiArray(object box) => MarshalInspectable<object>.DisposeAbiArray(box);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    internal sealed class SolidColorBrushRcwFactoryAttribute : global::WinRT.WinRTImplementationTypeRcwFactoryAttribute
    {
        public override object CreateInstance(global::WinRT.IInspectable inspectable)
            => new global::Microsoft.UI.Xaml.Media.SolidColorBrush(inspectable.ObjRef);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    public struct SystemBackdrop
    {

        public static IObjectReference CreateMarshaler(global::Microsoft.UI.Xaml.Media.SystemBackdrop obj) => obj is null ? null : MarshalInspectable<global::Microsoft.UI.Xaml.Media.SystemBackdrop>.CreateMarshaler<IUnknownVftbl>(obj, global::ABI.Microsoft.UI.Xaml.Media.ISystemBackdropMethods.IID);
        public static ObjectReferenceValue CreateMarshaler2(global::Microsoft.UI.Xaml.Media.SystemBackdrop obj) => MarshalInspectable<object>.CreateMarshaler2(obj, global::ABI.Microsoft.UI.Xaml.Media.ISystemBackdropMethods.IID);
        public static IntPtr GetAbi(IObjectReference value) => value is null ? IntPtr.Zero : MarshalInterfaceHelper<object>.GetAbi(value);
        public static global::Microsoft.UI.Xaml.Media.SystemBackdrop FromAbi(IntPtr thisPtr) => global::Microsoft.UI.Xaml.Media.SystemBackdrop.FromAbi(thisPtr);
        public static IntPtr FromManaged(global::Microsoft.UI.Xaml.Media.SystemBackdrop obj) => obj is null ? IntPtr.Zero : CreateMarshaler2(obj).Detach();
        public static unsafe MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Media.SystemBackdrop>.MarshalerArray CreateMarshalerArray(global::Microsoft.UI.Xaml.Media.SystemBackdrop[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Media.SystemBackdrop>.CreateMarshalerArray2(array, (o) => CreateMarshaler2(o));
        public static (int length, IntPtr data) GetAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Media.SystemBackdrop>.GetAbiArray(box);
        public static unsafe global::Microsoft.UI.Xaml.Media.SystemBackdrop[] FromAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Media.SystemBackdrop>.FromAbiArray(box, FromAbi);
        public static void CopyAbiArray(global::Microsoft.UI.Xaml.Media.SystemBackdrop[] array, object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Media.SystemBackdrop>.CopyAbiArray(array, box, FromAbi);
        public static (int length, IntPtr data) FromManagedArray(global::Microsoft.UI.Xaml.Media.SystemBackdrop[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Media.SystemBackdrop>.FromManagedArray(array, (o) => FromManaged(o));
        public static void DisposeMarshaler(IObjectReference value) => MarshalInspectable<object>.DisposeMarshaler(value);
        public static void DisposeMarshalerArray(MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Media.SystemBackdrop>.MarshalerArray array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Media.SystemBackdrop>.DisposeMarshalerArray(array);
        public static void DisposeAbi(IntPtr abi) => MarshalInspectable<object>.DisposeAbi(abi);
        public static unsafe void DisposeAbiArray(object box) => MarshalInspectable<object>.DisposeAbiArray(box);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    internal sealed class SystemBackdropRcwFactoryAttribute : global::WinRT.WinRTImplementationTypeRcwFactoryAttribute
    {
        public override object CreateInstance(global::WinRT.IInspectable inspectable)
            => new global::Microsoft.UI.Xaml.Media.SystemBackdrop(inspectable.ObjRef);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    public struct ThemeShadow
    {

        public static IObjectReference CreateMarshaler(global::Microsoft.UI.Xaml.Media.ThemeShadow obj) => obj is null ? null : MarshalInspectable<global::Microsoft.UI.Xaml.Media.ThemeShadow>.CreateMarshaler<IUnknownVftbl>(obj, global::ABI.Microsoft.UI.Xaml.Media.IThemeShadowMethods.IID);
        public static ObjectReferenceValue CreateMarshaler2(global::Microsoft.UI.Xaml.Media.ThemeShadow obj) => MarshalInspectable<object>.CreateMarshaler2(obj, global::ABI.Microsoft.UI.Xaml.Media.IThemeShadowMethods.IID);
        public static IntPtr GetAbi(IObjectReference value) => value is null ? IntPtr.Zero : MarshalInterfaceHelper<object>.GetAbi(value);
        public static global::Microsoft.UI.Xaml.Media.ThemeShadow FromAbi(IntPtr thisPtr) => global::Microsoft.UI.Xaml.Media.ThemeShadow.FromAbi(thisPtr);
        public static IntPtr FromManaged(global::Microsoft.UI.Xaml.Media.ThemeShadow obj) => obj is null ? IntPtr.Zero : CreateMarshaler2(obj).Detach();
        public static unsafe MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Media.ThemeShadow>.MarshalerArray CreateMarshalerArray(global::Microsoft.UI.Xaml.Media.ThemeShadow[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Media.ThemeShadow>.CreateMarshalerArray2(array, (o) => CreateMarshaler2(o));
        public static (int length, IntPtr data) GetAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Media.ThemeShadow>.GetAbiArray(box);
        public static unsafe global::Microsoft.UI.Xaml.Media.ThemeShadow[] FromAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Media.ThemeShadow>.FromAbiArray(box, FromAbi);
        public static void CopyAbiArray(global::Microsoft.UI.Xaml.Media.ThemeShadow[] array, object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Media.ThemeShadow>.CopyAbiArray(array, box, FromAbi);
        public static (int length, IntPtr data) FromManagedArray(global::Microsoft.UI.Xaml.Media.ThemeShadow[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Media.ThemeShadow>.FromManagedArray(array, (o) => FromManaged(o));
        public static void DisposeMarshaler(IObjectReference value) => MarshalInspectable<object>.DisposeMarshaler(value);
        public static void DisposeMarshalerArray(MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Media.ThemeShadow>.MarshalerArray array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Media.ThemeShadow>.DisposeMarshalerArray(array);
        public static void DisposeAbi(IntPtr abi) => MarshalInspectable<object>.DisposeAbi(abi);
        public static unsafe void DisposeAbiArray(object box) => MarshalInspectable<object>.DisposeAbiArray(box);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    internal sealed class ThemeShadowRcwFactoryAttribute : global::WinRT.WinRTImplementationTypeRcwFactoryAttribute
    {
        public override object CreateInstance(global::WinRT.IInspectable inspectable)
            => new global::Microsoft.UI.Xaml.Media.ThemeShadow(inspectable.ObjRef);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    public struct TileBrush
    {

        public static IObjectReference CreateMarshaler(global::Microsoft.UI.Xaml.Media.TileBrush obj) => obj is null ? null : MarshalInspectable<global::Microsoft.UI.Xaml.Media.TileBrush>.CreateMarshaler<IUnknownVftbl>(obj, global::ABI.Microsoft.UI.Xaml.Media.ITileBrushMethods.IID);
        public static ObjectReferenceValue CreateMarshaler2(global::Microsoft.UI.Xaml.Media.TileBrush obj) => MarshalInspectable<object>.CreateMarshaler2(obj, global::ABI.Microsoft.UI.Xaml.Media.ITileBrushMethods.IID);
        public static IntPtr GetAbi(IObjectReference value) => value is null ? IntPtr.Zero : MarshalInterfaceHelper<object>.GetAbi(value);
        public static global::Microsoft.UI.Xaml.Media.TileBrush FromAbi(IntPtr thisPtr) => global::Microsoft.UI.Xaml.Media.TileBrush.FromAbi(thisPtr);
        public static IntPtr FromManaged(global::Microsoft.UI.Xaml.Media.TileBrush obj) => obj is null ? IntPtr.Zero : CreateMarshaler2(obj).Detach();
        public static unsafe MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Media.TileBrush>.MarshalerArray CreateMarshalerArray(global::Microsoft.UI.Xaml.Media.TileBrush[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Media.TileBrush>.CreateMarshalerArray2(array, (o) => CreateMarshaler2(o));
        public static (int length, IntPtr data) GetAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Media.TileBrush>.GetAbiArray(box);
        public static unsafe global::Microsoft.UI.Xaml.Media.TileBrush[] FromAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Media.TileBrush>.FromAbiArray(box, FromAbi);
        public static void CopyAbiArray(global::Microsoft.UI.Xaml.Media.TileBrush[] array, object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Media.TileBrush>.CopyAbiArray(array, box, FromAbi);
        public static (int length, IntPtr data) FromManagedArray(global::Microsoft.UI.Xaml.Media.TileBrush[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Media.TileBrush>.FromManagedArray(array, (o) => FromManaged(o));
        public static void DisposeMarshaler(IObjectReference value) => MarshalInspectable<object>.DisposeMarshaler(value);
        public static void DisposeMarshalerArray(MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Media.TileBrush>.MarshalerArray array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Media.TileBrush>.DisposeMarshalerArray(array);
        public static void DisposeAbi(IntPtr abi) => MarshalInspectable<object>.DisposeAbi(abi);
        public static unsafe void DisposeAbiArray(object box) => MarshalInspectable<object>.DisposeAbiArray(box);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    internal sealed class TileBrushRcwFactoryAttribute : global::WinRT.WinRTImplementationTypeRcwFactoryAttribute
    {
        public override object CreateInstance(global::WinRT.IInspectable inspectable)
            => new global::Microsoft.UI.Xaml.Media.TileBrush(inspectable.ObjRef);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    public struct Transform
    {

        public static IObjectReference CreateMarshaler(global::Microsoft.UI.Xaml.Media.Transform obj) => obj is null ? null : MarshalInspectable<global::Microsoft.UI.Xaml.Media.Transform>.CreateMarshaler<IUnknownVftbl>(obj, global::ABI.Microsoft.UI.Xaml.Media.ITransformMethods.IID);
        public static ObjectReferenceValue CreateMarshaler2(global::Microsoft.UI.Xaml.Media.Transform obj) => MarshalInspectable<object>.CreateMarshaler2(obj, global::ABI.Microsoft.UI.Xaml.Media.ITransformMethods.IID);
        public static IntPtr GetAbi(IObjectReference value) => value is null ? IntPtr.Zero : MarshalInterfaceHelper<object>.GetAbi(value);
        public static global::Microsoft.UI.Xaml.Media.Transform FromAbi(IntPtr thisPtr) => global::Microsoft.UI.Xaml.Media.Transform.FromAbi(thisPtr);
        public static IntPtr FromManaged(global::Microsoft.UI.Xaml.Media.Transform obj) => obj is null ? IntPtr.Zero : CreateMarshaler2(obj).Detach();
        public static unsafe MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Media.Transform>.MarshalerArray CreateMarshalerArray(global::Microsoft.UI.Xaml.Media.Transform[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Media.Transform>.CreateMarshalerArray2(array, (o) => CreateMarshaler2(o));
        public static (int length, IntPtr data) GetAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Media.Transform>.GetAbiArray(box);
        public static unsafe global::Microsoft.UI.Xaml.Media.Transform[] FromAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Media.Transform>.FromAbiArray(box, FromAbi);
        public static void CopyAbiArray(global::Microsoft.UI.Xaml.Media.Transform[] array, object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Media.Transform>.CopyAbiArray(array, box, FromAbi);
        public static (int length, IntPtr data) FromManagedArray(global::Microsoft.UI.Xaml.Media.Transform[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Media.Transform>.FromManagedArray(array, (o) => FromManaged(o));
        public static void DisposeMarshaler(IObjectReference value) => MarshalInspectable<object>.DisposeMarshaler(value);
        public static void DisposeMarshalerArray(MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Media.Transform>.MarshalerArray array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Media.Transform>.DisposeMarshalerArray(array);
        public static void DisposeAbi(IntPtr abi) => MarshalInspectable<object>.DisposeAbi(abi);
        public static unsafe void DisposeAbiArray(object box) => MarshalInspectable<object>.DisposeAbiArray(box);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    internal sealed class TransformRcwFactoryAttribute : global::WinRT.WinRTImplementationTypeRcwFactoryAttribute
    {
        public override object CreateInstance(global::WinRT.IInspectable inspectable)
            => new global::Microsoft.UI.Xaml.Media.Transform(inspectable.ObjRef);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    public struct TransformCollection
    {

        public static IObjectReference CreateMarshaler(global::Microsoft.UI.Xaml.Media.TransformCollection obj) => obj is null ? null : MarshalInterface<global::System.Collections.Generic.IList<global::Microsoft.UI.Xaml.Media.Transform>>.CreateMarshaler(obj);
        public static ObjectReferenceValue CreateMarshaler2(global::Microsoft.UI.Xaml.Media.TransformCollection obj) => MarshalInterface<global::System.Collections.Generic.IList<global::Microsoft.UI.Xaml.Media.Transform>>.CreateMarshaler2(obj, global::ABI.System.Collections.Generic.IListMethods<global::Microsoft.UI.Xaml.Media.Transform>.IID);
        public static IntPtr GetAbi(IObjectReference value) => value is null ? IntPtr.Zero : MarshalInterfaceHelper<object>.GetAbi(value);
        public static global::Microsoft.UI.Xaml.Media.TransformCollection FromAbi(IntPtr thisPtr) => global::Microsoft.UI.Xaml.Media.TransformCollection.FromAbi(thisPtr);
        public static IntPtr FromManaged(global::Microsoft.UI.Xaml.Media.TransformCollection obj) => obj is null ? IntPtr.Zero : CreateMarshaler2(obj).Detach();
        public static unsafe MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Media.TransformCollection>.MarshalerArray CreateMarshalerArray(global::Microsoft.UI.Xaml.Media.TransformCollection[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Media.TransformCollection>.CreateMarshalerArray2(array, (o) => CreateMarshaler2(o));
        public static (int length, IntPtr data) GetAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Media.TransformCollection>.GetAbiArray(box);
        public static unsafe global::Microsoft.UI.Xaml.Media.TransformCollection[] FromAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Media.TransformCollection>.FromAbiArray(box, FromAbi);
        public static void CopyAbiArray(global::Microsoft.UI.Xaml.Media.TransformCollection[] array, object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Media.TransformCollection>.CopyAbiArray(array, box, FromAbi);
        public static (int length, IntPtr data) FromManagedArray(global::Microsoft.UI.Xaml.Media.TransformCollection[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Media.TransformCollection>.FromManagedArray(array, (o) => FromManaged(o));
        public static void DisposeMarshaler(IObjectReference value) => MarshalInspectable<object>.DisposeMarshaler(value);
        public static void DisposeMarshalerArray(MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Media.TransformCollection>.MarshalerArray array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Media.TransformCollection>.DisposeMarshalerArray(array);
        public static void DisposeAbi(IntPtr abi) => MarshalInspectable<object>.DisposeAbi(abi);
        public static unsafe void DisposeAbiArray(object box) => MarshalInspectable<object>.DisposeAbiArray(box);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    internal sealed class TransformCollectionRcwFactoryAttribute : global::WinRT.WinRTImplementationTypeRcwFactoryAttribute
    {
        public override object CreateInstance(global::WinRT.IInspectable inspectable)
            => new global::Microsoft.UI.Xaml.Media.TransformCollection(inspectable.ObjRef);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    public struct TransformGroup
    {

        public static IObjectReference CreateMarshaler(global::Microsoft.UI.Xaml.Media.TransformGroup obj) => obj is null ? null : MarshalInspectable<global::Microsoft.UI.Xaml.Media.TransformGroup>.CreateMarshaler<IUnknownVftbl>(obj, global::ABI.Microsoft.UI.Xaml.Media.ITransformGroupMethods.IID);
        public static ObjectReferenceValue CreateMarshaler2(global::Microsoft.UI.Xaml.Media.TransformGroup obj) => MarshalInspectable<object>.CreateMarshaler2(obj, global::ABI.Microsoft.UI.Xaml.Media.ITransformGroupMethods.IID);
        public static IntPtr GetAbi(IObjectReference value) => value is null ? IntPtr.Zero : MarshalInterfaceHelper<object>.GetAbi(value);
        public static global::Microsoft.UI.Xaml.Media.TransformGroup FromAbi(IntPtr thisPtr) => global::Microsoft.UI.Xaml.Media.TransformGroup.FromAbi(thisPtr);
        public static IntPtr FromManaged(global::Microsoft.UI.Xaml.Media.TransformGroup obj) => obj is null ? IntPtr.Zero : CreateMarshaler2(obj).Detach();
        public static unsafe MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Media.TransformGroup>.MarshalerArray CreateMarshalerArray(global::Microsoft.UI.Xaml.Media.TransformGroup[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Media.TransformGroup>.CreateMarshalerArray2(array, (o) => CreateMarshaler2(o));
        public static (int length, IntPtr data) GetAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Media.TransformGroup>.GetAbiArray(box);
        public static unsafe global::Microsoft.UI.Xaml.Media.TransformGroup[] FromAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Media.TransformGroup>.FromAbiArray(box, FromAbi);
        public static void CopyAbiArray(global::Microsoft.UI.Xaml.Media.TransformGroup[] array, object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Media.TransformGroup>.CopyAbiArray(array, box, FromAbi);
        public static (int length, IntPtr data) FromManagedArray(global::Microsoft.UI.Xaml.Media.TransformGroup[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Media.TransformGroup>.FromManagedArray(array, (o) => FromManaged(o));
        public static void DisposeMarshaler(IObjectReference value) => MarshalInspectable<object>.DisposeMarshaler(value);
        public static void DisposeMarshalerArray(MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Media.TransformGroup>.MarshalerArray array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Media.TransformGroup>.DisposeMarshalerArray(array);
        public static void DisposeAbi(IntPtr abi) => MarshalInspectable<object>.DisposeAbi(abi);
        public static unsafe void DisposeAbiArray(object box) => MarshalInspectable<object>.DisposeAbiArray(box);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    internal sealed class TransformGroupRcwFactoryAttribute : global::WinRT.WinRTImplementationTypeRcwFactoryAttribute
    {
        public override object CreateInstance(global::WinRT.IInspectable inspectable)
            => new global::Microsoft.UI.Xaml.Media.TransformGroup(inspectable.ObjRef);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    public struct TranslateTransform
    {

        public static IObjectReference CreateMarshaler(global::Microsoft.UI.Xaml.Media.TranslateTransform obj) => obj is null ? null : MarshalInspectable<global::Microsoft.UI.Xaml.Media.TranslateTransform>.CreateMarshaler<IUnknownVftbl>(obj, global::ABI.Microsoft.UI.Xaml.Media.ITranslateTransformMethods.IID);
        public static ObjectReferenceValue CreateMarshaler2(global::Microsoft.UI.Xaml.Media.TranslateTransform obj) => MarshalInspectable<object>.CreateMarshaler2(obj, global::ABI.Microsoft.UI.Xaml.Media.ITranslateTransformMethods.IID);
        public static IntPtr GetAbi(IObjectReference value) => value is null ? IntPtr.Zero : MarshalInterfaceHelper<object>.GetAbi(value);
        public static global::Microsoft.UI.Xaml.Media.TranslateTransform FromAbi(IntPtr thisPtr) => global::Microsoft.UI.Xaml.Media.TranslateTransform.FromAbi(thisPtr);
        public static IntPtr FromManaged(global::Microsoft.UI.Xaml.Media.TranslateTransform obj) => obj is null ? IntPtr.Zero : CreateMarshaler2(obj).Detach();
        public static unsafe MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Media.TranslateTransform>.MarshalerArray CreateMarshalerArray(global::Microsoft.UI.Xaml.Media.TranslateTransform[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Media.TranslateTransform>.CreateMarshalerArray2(array, (o) => CreateMarshaler2(o));
        public static (int length, IntPtr data) GetAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Media.TranslateTransform>.GetAbiArray(box);
        public static unsafe global::Microsoft.UI.Xaml.Media.TranslateTransform[] FromAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Media.TranslateTransform>.FromAbiArray(box, FromAbi);
        public static void CopyAbiArray(global::Microsoft.UI.Xaml.Media.TranslateTransform[] array, object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Media.TranslateTransform>.CopyAbiArray(array, box, FromAbi);
        public static (int length, IntPtr data) FromManagedArray(global::Microsoft.UI.Xaml.Media.TranslateTransform[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Media.TranslateTransform>.FromManagedArray(array, (o) => FromManaged(o));
        public static void DisposeMarshaler(IObjectReference value) => MarshalInspectable<object>.DisposeMarshaler(value);
        public static void DisposeMarshalerArray(MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Media.TranslateTransform>.MarshalerArray array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Media.TranslateTransform>.DisposeMarshalerArray(array);
        public static void DisposeAbi(IntPtr abi) => MarshalInspectable<object>.DisposeAbi(abi);
        public static unsafe void DisposeAbiArray(object box) => MarshalInspectable<object>.DisposeAbiArray(box);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    internal sealed class TranslateTransformRcwFactoryAttribute : global::WinRT.WinRTImplementationTypeRcwFactoryAttribute
    {
        public override object CreateInstance(global::WinRT.IInspectable inspectable)
            => new global::Microsoft.UI.Xaml.Media.TranslateTransform(inspectable.ObjRef);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    public struct VisualTreeHelper
    {

        public static IObjectReference CreateMarshaler(global::Microsoft.UI.Xaml.Media.VisualTreeHelper obj) => obj is null ? null : MarshalInspectable<global::Microsoft.UI.Xaml.Media.VisualTreeHelper>.CreateMarshaler<IUnknownVftbl>(obj, global::ABI.Microsoft.UI.Xaml.Media.IVisualTreeHelperMethods.IID);
        public static ObjectReferenceValue CreateMarshaler2(global::Microsoft.UI.Xaml.Media.VisualTreeHelper obj) => MarshalInspectable<object>.CreateMarshaler2(obj, global::ABI.Microsoft.UI.Xaml.Media.IVisualTreeHelperMethods.IID);
        public static IntPtr GetAbi(IObjectReference value) => value is null ? IntPtr.Zero : MarshalInterfaceHelper<object>.GetAbi(value);
        public static global::Microsoft.UI.Xaml.Media.VisualTreeHelper FromAbi(IntPtr thisPtr) => global::Microsoft.UI.Xaml.Media.VisualTreeHelper.FromAbi(thisPtr);
        public static IntPtr FromManaged(global::Microsoft.UI.Xaml.Media.VisualTreeHelper obj) => obj is null ? IntPtr.Zero : CreateMarshaler2(obj).Detach();
        public static unsafe MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Media.VisualTreeHelper>.MarshalerArray CreateMarshalerArray(global::Microsoft.UI.Xaml.Media.VisualTreeHelper[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Media.VisualTreeHelper>.CreateMarshalerArray2(array, (o) => CreateMarshaler2(o));
        public static (int length, IntPtr data) GetAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Media.VisualTreeHelper>.GetAbiArray(box);
        public static unsafe global::Microsoft.UI.Xaml.Media.VisualTreeHelper[] FromAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Media.VisualTreeHelper>.FromAbiArray(box, FromAbi);
        public static void CopyAbiArray(global::Microsoft.UI.Xaml.Media.VisualTreeHelper[] array, object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Media.VisualTreeHelper>.CopyAbiArray(array, box, FromAbi);
        public static (int length, IntPtr data) FromManagedArray(global::Microsoft.UI.Xaml.Media.VisualTreeHelper[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Media.VisualTreeHelper>.FromManagedArray(array, (o) => FromManaged(o));
        public static void DisposeMarshaler(IObjectReference value) => MarshalInspectable<object>.DisposeMarshaler(value);
        public static void DisposeMarshalerArray(MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Media.VisualTreeHelper>.MarshalerArray array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Media.VisualTreeHelper>.DisposeMarshalerArray(array);
        public static void DisposeAbi(IntPtr abi) => MarshalInspectable<object>.DisposeAbi(abi);
        public static unsafe void DisposeAbiArray(object box) => MarshalInspectable<object>.DisposeAbiArray(box);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    internal sealed class VisualTreeHelperRcwFactoryAttribute : global::WinRT.WinRTImplementationTypeRcwFactoryAttribute
    {
        public override object CreateInstance(global::WinRT.IInspectable inspectable)
            => new global::Microsoft.UI.Xaml.Media.VisualTreeHelper(inspectable.ObjRef);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    public struct XamlCompositionBrushBase
    {

        public static IObjectReference CreateMarshaler(global::Microsoft.UI.Xaml.Media.XamlCompositionBrushBase obj) => obj is null ? null : MarshalInspectable<global::Microsoft.UI.Xaml.Media.XamlCompositionBrushBase>.CreateMarshaler<IUnknownVftbl>(obj, global::ABI.Microsoft.UI.Xaml.Media.IXamlCompositionBrushBaseMethods.IID);
        public static ObjectReferenceValue CreateMarshaler2(global::Microsoft.UI.Xaml.Media.XamlCompositionBrushBase obj) => MarshalInspectable<object>.CreateMarshaler2(obj, global::ABI.Microsoft.UI.Xaml.Media.IXamlCompositionBrushBaseMethods.IID);
        public static IntPtr GetAbi(IObjectReference value) => value is null ? IntPtr.Zero : MarshalInterfaceHelper<object>.GetAbi(value);
        public static global::Microsoft.UI.Xaml.Media.XamlCompositionBrushBase FromAbi(IntPtr thisPtr) => global::Microsoft.UI.Xaml.Media.XamlCompositionBrushBase.FromAbi(thisPtr);
        public static IntPtr FromManaged(global::Microsoft.UI.Xaml.Media.XamlCompositionBrushBase obj) => obj is null ? IntPtr.Zero : CreateMarshaler2(obj).Detach();
        public static unsafe MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Media.XamlCompositionBrushBase>.MarshalerArray CreateMarshalerArray(global::Microsoft.UI.Xaml.Media.XamlCompositionBrushBase[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Media.XamlCompositionBrushBase>.CreateMarshalerArray2(array, (o) => CreateMarshaler2(o));
        public static (int length, IntPtr data) GetAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Media.XamlCompositionBrushBase>.GetAbiArray(box);
        public static unsafe global::Microsoft.UI.Xaml.Media.XamlCompositionBrushBase[] FromAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Media.XamlCompositionBrushBase>.FromAbiArray(box, FromAbi);
        public static void CopyAbiArray(global::Microsoft.UI.Xaml.Media.XamlCompositionBrushBase[] array, object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Media.XamlCompositionBrushBase>.CopyAbiArray(array, box, FromAbi);
        public static (int length, IntPtr data) FromManagedArray(global::Microsoft.UI.Xaml.Media.XamlCompositionBrushBase[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Media.XamlCompositionBrushBase>.FromManagedArray(array, (o) => FromManaged(o));
        public static void DisposeMarshaler(IObjectReference value) => MarshalInspectable<object>.DisposeMarshaler(value);
        public static void DisposeMarshalerArray(MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Media.XamlCompositionBrushBase>.MarshalerArray array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Media.XamlCompositionBrushBase>.DisposeMarshalerArray(array);
        public static void DisposeAbi(IntPtr abi) => MarshalInspectable<object>.DisposeAbi(abi);
        public static unsafe void DisposeAbiArray(object box) => MarshalInspectable<object>.DisposeAbiArray(box);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    internal sealed class XamlCompositionBrushBaseRcwFactoryAttribute : global::WinRT.WinRTImplementationTypeRcwFactoryAttribute
    {
        public override object CreateInstance(global::WinRT.IInspectable inspectable)
            => new global::Microsoft.UI.Xaml.Media.XamlCompositionBrushBase(inspectable.ObjRef);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    public struct XamlLight
    {

        public static IObjectReference CreateMarshaler(global::Microsoft.UI.Xaml.Media.XamlLight obj) => obj is null ? null : MarshalInspectable<global::Microsoft.UI.Xaml.Media.XamlLight>.CreateMarshaler<IUnknownVftbl>(obj, global::ABI.Microsoft.UI.Xaml.Media.IXamlLightMethods.IID);
        public static ObjectReferenceValue CreateMarshaler2(global::Microsoft.UI.Xaml.Media.XamlLight obj) => MarshalInspectable<object>.CreateMarshaler2(obj, global::ABI.Microsoft.UI.Xaml.Media.IXamlLightMethods.IID);
        public static IntPtr GetAbi(IObjectReference value) => value is null ? IntPtr.Zero : MarshalInterfaceHelper<object>.GetAbi(value);
        public static global::Microsoft.UI.Xaml.Media.XamlLight FromAbi(IntPtr thisPtr) => global::Microsoft.UI.Xaml.Media.XamlLight.FromAbi(thisPtr);
        public static IntPtr FromManaged(global::Microsoft.UI.Xaml.Media.XamlLight obj) => obj is null ? IntPtr.Zero : CreateMarshaler2(obj).Detach();
        public static unsafe MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Media.XamlLight>.MarshalerArray CreateMarshalerArray(global::Microsoft.UI.Xaml.Media.XamlLight[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Media.XamlLight>.CreateMarshalerArray2(array, (o) => CreateMarshaler2(o));
        public static (int length, IntPtr data) GetAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Media.XamlLight>.GetAbiArray(box);
        public static unsafe global::Microsoft.UI.Xaml.Media.XamlLight[] FromAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Media.XamlLight>.FromAbiArray(box, FromAbi);
        public static void CopyAbiArray(global::Microsoft.UI.Xaml.Media.XamlLight[] array, object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Media.XamlLight>.CopyAbiArray(array, box, FromAbi);
        public static (int length, IntPtr data) FromManagedArray(global::Microsoft.UI.Xaml.Media.XamlLight[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Media.XamlLight>.FromManagedArray(array, (o) => FromManaged(o));
        public static void DisposeMarshaler(IObjectReference value) => MarshalInspectable<object>.DisposeMarshaler(value);
        public static void DisposeMarshalerArray(MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Media.XamlLight>.MarshalerArray array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Media.XamlLight>.DisposeMarshalerArray(array);
        public static void DisposeAbi(IntPtr abi) => MarshalInspectable<object>.DisposeAbi(abi);
        public static unsafe void DisposeAbiArray(object box) => MarshalInspectable<object>.DisposeAbiArray(box);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    internal sealed class XamlLightRcwFactoryAttribute : global::WinRT.WinRTImplementationTypeRcwFactoryAttribute
    {
        public override object CreateInstance(global::WinRT.IInspectable inspectable)
            => new global::Microsoft.UI.Xaml.Media.XamlLight(inspectable.ObjRef);
    }
}
#pragma warning restore CA1416


namespace Microsoft.UI.Xaml.Media
{
    using global::Windows.Foundation;

    [global::WinRT.WindowsRuntimeType("Microsoft.UI")]
    [global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Media.Matrix))]
#if NET
    [global::WinRT.WinRTExposedType(typeof(global::WinRT.StructTypeDetails<Matrix, Matrix>))]
#endif
    [StructLayout(LayoutKind.Sequential)]
#if EMBED
    internal
#else
    public
#endif
    struct Matrix : IFormattable
    {
        public Matrix(double m11, double m12,
                      double m21, double m22,
                      double offsetX, double offsetY)
        {
            _m11 = m11;
            _m12 = m12;
            _m21 = m21;
            _m22 = m22;
            _offsetX = offsetX;
            _offsetY = offsetY;
        }

        // the transform is identity by default
        private static Matrix s_identity = CreateIdentity();

        public double M11
        {
            get
            {
                return _m11;
            }
            set
            {
                _m11 = value;
            }
        }

        public double M12
        {
            get
            {
                return _m12;
            }
            set
            {
                _m12 = value;
            }
        }

        public double M21
        {
            get
            {
                return _m21;
            }
            set
            {
                _m21 = value;
            }
        }

        public double M22
        {
            get
            {
                return _m22;
            }
            set
            {
                _m22 = value;
            }
        }

        public double OffsetX
        {
            get
            {
                return _offsetX;
            }
            set
            {
                _offsetX = value;
            }
        }

        public double OffsetY
        {
            get
            {
                return _offsetY;
            }
            set
            {
                _offsetY = value;
            }
        }

        public static Matrix Identity
        {
            get
            {
                return s_identity;
            }
        }

        public bool IsIdentity
        {
            get
            {
                return (_m11 == 1 && _m12 == 0 && _m21 == 0 && _m22 == 1 && _offsetX == 0 && _offsetY == 0);
            }
        }

        public override string ToString()
        {
            // Delegate to the internal method which implements all ToString calls.
            return ConvertToString(null /* format string */, null /* format provider */);
        }

        public string ToString(IFormatProvider provider)
        {
            // Delegate to the internal method which implements all ToString calls.
            return ConvertToString(null /* format string */, provider);
        }

        string IFormattable.ToString(string format, IFormatProvider provider)
        {
            // Delegate to the internal method which implements all ToString calls.
            return ConvertToString(format, provider);
        }

        private string ConvertToString(string format, IFormatProvider provider)
        {
            if (IsIdentity)
            {
                return "Identity";
            }

            // Helper to get the numeric list separator for a given culture.
            char separator = TokenizerHelper.GetNumericListSeparator(provider);
            return string.Format(provider,
                                 "{1:" + format + "}{0}{2:" + format + "}{0}{3:" + format + "}{0}{4:" + format + "}{0}{5:" + format + "}{0}{6:" + format + "}",
                                 separator,
                                 _m11,
                                 _m12,
                                 _m21,
                                 _m22,
                                 _offsetX,
                                 _offsetY);
        }

        public Point Transform(Point point)
        {
            float x = (float)point.X;
            float y = (float)point.Y;
            this.MultiplyPoint(ref x, ref y);
            Point point2 = new Point(x, y);
            return point2;
        }

        public override int GetHashCode()
        {
            // Perform field-by-field XOR of HashCodes
            return M11.GetHashCode() ^
                   M12.GetHashCode() ^
                   M21.GetHashCode() ^
                   M22.GetHashCode() ^
                   OffsetX.GetHashCode() ^
                   OffsetY.GetHashCode();
        }

        public override bool Equals(object o)
        {
            return o is Matrix && Matrix.Equals(this, (Matrix)o);
        }

        public bool Equals(Matrix value)
        {
            return Matrix.Equals(this, value);
        }

        public static bool operator ==(Matrix matrix1, Matrix matrix2)
        {
            return matrix1.M11 == matrix2.M11 &&
                   matrix1.M12 == matrix2.M12 &&
                   matrix1.M21 == matrix2.M21 &&
                   matrix1.M22 == matrix2.M22 &&
                   matrix1.OffsetX == matrix2.OffsetX &&
                   matrix1.OffsetY == matrix2.OffsetY;
        }

        public static bool operator !=(Matrix matrix1, Matrix matrix2)
        {
            return !(matrix1 == matrix2);
        }

        private static Matrix CreateIdentity()
        {
            Matrix matrix = default;
            matrix.SetMatrix(1, 0,
                             0, 1,
                             0, 0);
            return matrix;
        }

        private void SetMatrix(double m11, double m12,
                               double m21, double m22,
                               double offsetX, double offsetY)
        {
            _m11 = m11;
            _m12 = m12;
            _m21 = m21;
            _m22 = m22;
            _offsetX = offsetX;
            _offsetY = offsetY;
        }

        private void MultiplyPoint(ref float x, ref float y)
        {
            double num = (y * _m21) + _offsetX;
            double num2 = (x * _m12) + _offsetY;
            x *= (float)_m11;
            x += (float)num;
            y *= (float)_m22;
            y += (float)num2;
        }

        private static bool Equals(Matrix matrix1, Matrix matrix2)
        {
            return matrix1.M11.Equals(matrix2.M11) &&
                   matrix1.M12.Equals(matrix2.M12) &&
                   matrix1.M21.Equals(matrix2.M21) &&
                   matrix1.M22.Equals(matrix2.M22) &&
                   matrix1.OffsetX.Equals(matrix2.OffsetX) &&
                   matrix1.OffsetY.Equals(matrix2.OffsetY);
        }

        private double _m11;
        private double _m12;
        private double _m21;
        private double _m22;
        private double _offsetX;
        private double _offsetY;
    }
}

namespace ABI.Microsoft.UI.Xaml.Media
{
    #if EMBED
        internal
    #else
        public
    #endif
        static class Matrix
        {
            public static string GetGuidSignature() => $"struct(Microsoft.UI.Xaml.Media.Matrix;f8;f8;f8;f8;f8;f8)";
        }
}
