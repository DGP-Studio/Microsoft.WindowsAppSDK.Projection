//------------------------------------------------------------------------------
// <auto-generated>
//     This file was generated by cswinrt.exe version 2.2.0.241111.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Diagnostics;
using System.Diagnostics.CodeAnalysis;
using System.Linq.Expressions;
using System.Reflection;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;
using WinRT;
using WinRT.Interop;


#pragma warning disable 0169 // warning CS0169: The field '...' is never used
#pragma warning disable 0649 // warning CS0169: Field '...' is never assigned to
#pragma warning disable CA2207, CA1063, CA1033, CA1001, CA2213

namespace Microsoft.UI.Text
{
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Text")][global::WinRT.WinRTExposedType(typeof(global::WinRT.EnumTypeDetails<CaretType>))]public enum CaretType : int
    {
        Normal = unchecked((int)0),
        Null = unchecked((int)0x1),
    }
    [FlagsAttribute]
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Text")][global::WinRT.WinRTExposedType(typeof(global::WinRT.EnumTypeDetails<FindOptions>))]public enum FindOptions : uint
    {
        None = unchecked((uint)0),
        Word = unchecked((uint)0x2),
        Case = unchecked((uint)0x4),
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Text")]
    [global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Text.FontWeights))]
    [global::ABI.Microsoft.UI.Text.FontWeightsRcwFactory]
    [global::WinRT.ProjectedRuntimeClass(typeof(IFontWeights))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(TextApiContract), 65536u)]
    public sealed class FontWeights : global::System.Runtime.InteropServices.ICustomQueryInterface, IWinRTObject, IEquatable<FontWeights>
    {
        private IntPtr ThisPtr => _inner == null ? (((IWinRTObject)this).NativeObject).ThisPtr : _inner.ThisPtr;

        private readonly IObjectReference _inner = null;



        private IObjectReference _objRef_global__Microsoft_UI_Text_IFontWeights => _inner;


        public static I As<I>() => ActivationFactory.Get("Microsoft.UI.Text.FontWeights").AsInterface<I>();

        private static volatile IObjectReference ___objRef_global__Microsoft_UI_Text_IFontWeightsStatics;
        private static IObjectReference _objRef_global__Microsoft_UI_Text_IFontWeightsStatics
        {
            get
            { 
                var factory = ___objRef_global__Microsoft_UI_Text_IFontWeightsStatics;
                if (factory != null && factory.IsInCurrentContext)
                {
                    return factory;
                }
                else
                {
                    return ___objRef_global__Microsoft_UI_Text_IFontWeightsStatics = ActivationFactory.Get("Microsoft.UI.Text.FontWeights", global::ABI.Microsoft.UI.Text.IFontWeightsStaticsMethods.IID);
                }
            }
        }

        public static global::Windows.UI.Text.FontWeight Black => global::ABI.Microsoft.UI.Text.IFontWeightsStaticsMethods.get_Black(_objRef_global__Microsoft_UI_Text_IFontWeightsStatics);

        public static global::Windows.UI.Text.FontWeight Bold => global::ABI.Microsoft.UI.Text.IFontWeightsStaticsMethods.get_Bold(_objRef_global__Microsoft_UI_Text_IFontWeightsStatics);

        public static global::Windows.UI.Text.FontWeight ExtraBlack => global::ABI.Microsoft.UI.Text.IFontWeightsStaticsMethods.get_ExtraBlack(_objRef_global__Microsoft_UI_Text_IFontWeightsStatics);

        public static global::Windows.UI.Text.FontWeight ExtraBold => global::ABI.Microsoft.UI.Text.IFontWeightsStaticsMethods.get_ExtraBold(_objRef_global__Microsoft_UI_Text_IFontWeightsStatics);

        public static global::Windows.UI.Text.FontWeight ExtraLight => global::ABI.Microsoft.UI.Text.IFontWeightsStaticsMethods.get_ExtraLight(_objRef_global__Microsoft_UI_Text_IFontWeightsStatics);

        public static global::Windows.UI.Text.FontWeight Light => global::ABI.Microsoft.UI.Text.IFontWeightsStaticsMethods.get_Light(_objRef_global__Microsoft_UI_Text_IFontWeightsStatics);

        public static global::Windows.UI.Text.FontWeight Medium => global::ABI.Microsoft.UI.Text.IFontWeightsStaticsMethods.get_Medium(_objRef_global__Microsoft_UI_Text_IFontWeightsStatics);

        public static global::Windows.UI.Text.FontWeight Normal => global::ABI.Microsoft.UI.Text.IFontWeightsStaticsMethods.get_Normal(_objRef_global__Microsoft_UI_Text_IFontWeightsStatics);

        public static global::Windows.UI.Text.FontWeight SemiBold => global::ABI.Microsoft.UI.Text.IFontWeightsStaticsMethods.get_SemiBold(_objRef_global__Microsoft_UI_Text_IFontWeightsStatics);

        public static global::Windows.UI.Text.FontWeight SemiLight => global::ABI.Microsoft.UI.Text.IFontWeightsStaticsMethods.get_SemiLight(_objRef_global__Microsoft_UI_Text_IFontWeightsStatics);

        public static global::Windows.UI.Text.FontWeight Thin => global::ABI.Microsoft.UI.Text.IFontWeightsStaticsMethods.get_Thin(_objRef_global__Microsoft_UI_Text_IFontWeightsStatics);

        public static FontWeights FromAbi(IntPtr thisPtr)
        {
            if (thisPtr == IntPtr.Zero) return null;
            return MarshalInspectable<FontWeights>.FromAbi(thisPtr);
        }

        internal FontWeights(IObjectReference objRef)
        {
            _inner = objRef.As(global::ABI.Microsoft.UI.Text.IFontWeightsMethods.IID);

        }


        public static bool operator ==(FontWeights x, FontWeights y) => (x?.ThisPtr ?? IntPtr.Zero) == (y?.ThisPtr ?? IntPtr.Zero);
        public static bool operator !=(FontWeights x, FontWeights y) => !(x == y);
        public bool Equals(FontWeights other) => this == other;
        public override bool Equals(object obj) => obj is FontWeights that && this == that;
        public override int GetHashCode() => ThisPtr.GetHashCode();


        bool IWinRTObject.HasUnwrappableNativeObject => true;
        IObjectReference IWinRTObject.NativeObject => _inner;
        private volatile global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> _queryInterfaceCache;
        private global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> MakeQueryInterfaceCache()
        {
            global::System.Threading.Interlocked.CompareExchange(ref _queryInterfaceCache, new global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference>(), null); 
            return _queryInterfaceCache;
        }
        global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> IWinRTObject.QueryInterfaceCache => _queryInterfaceCache ?? MakeQueryInterfaceCache();
        private volatile global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> _additionalTypeData;
        private global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> MakeAdditionalTypeData()
        {
            global::System.Threading.Interlocked.CompareExchange(ref _additionalTypeData, new global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object>(), null); 
            return _additionalTypeData;
        }
        global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> IWinRTObject.AdditionalTypeData => _additionalTypeData ?? MakeAdditionalTypeData();

        private struct InterfaceTag<I>{};


        private bool IsOverridableInterface(Guid iid) => false;

        global::System.Runtime.InteropServices.CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(ref Guid iid, out IntPtr ppv)
        {
            ppv = IntPtr.Zero;
            if (IsOverridableInterface(iid) || global::WinRT.Interop.IID.IID_IInspectable == iid)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
            }

            if (((IWinRTObject)this).NativeObject.TryAs(iid, out ppv) >= 0)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.Handled;
            }

            return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
        }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Text")][global::WinRT.WinRTExposedType(typeof(global::WinRT.EnumTypeDetails<FormatEffect>))]public enum FormatEffect : int
    {
        Off = unchecked((int)0),
        On = unchecked((int)0x1),
        Toggle = unchecked((int)0x2),
        Undefined = unchecked((int)0x3),
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Text")][global::WinRT.WinRTExposedType(typeof(global::WinRT.EnumTypeDetails<HorizontalCharacterAlignment>))]public enum HorizontalCharacterAlignment : int
    {
        Left = unchecked((int)0),
        Right = unchecked((int)0x1),
        Center = unchecked((int)0x2),
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Text")][Guid("386CD040-5404-5A8D-8BC7-2CA989F5C065")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Text.IFontWeights))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(TextApiContract), 65536u)]
    internal interface IFontWeights
    {
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Text")][Guid("CC390DF6-76B0-5807-8B9D-E949A4E623AE")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Text.IFontWeightsStatics))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(TextApiContract), 65536u)]
    internal interface IFontWeightsStatics
    {
        global::Windows.UI.Text.FontWeight Black { get; }
        global::Windows.UI.Text.FontWeight Bold { get; }
        global::Windows.UI.Text.FontWeight ExtraBlack { get; }
        global::Windows.UI.Text.FontWeight ExtraBold { get; }
        global::Windows.UI.Text.FontWeight ExtraLight { get; }
        global::Windows.UI.Text.FontWeight Light { get; }
        global::Windows.UI.Text.FontWeight Medium { get; }
        global::Windows.UI.Text.FontWeight Normal { get; }
        global::Windows.UI.Text.FontWeight SemiBold { get; }
        global::Windows.UI.Text.FontWeight SemiLight { get; }
        global::Windows.UI.Text.FontWeight Thin { get; }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Text")][Guid("F5710050-98E5-5788-B1E3-32191EEBF94D")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Text.ITextCharacterFormat))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(TextApiContract), 65536u)]
    public interface ITextCharacterFormat
    {
        void SetClone(ITextCharacterFormat value);
        ITextCharacterFormat GetClone();
        bool IsEqual(ITextCharacterFormat format);
        FormatEffect AllCaps { get; set; }
        global::Windows.UI.Color BackgroundColor { get; set; }
        FormatEffect Bold { get; set; }
        global::Windows.UI.Text.FontStretch FontStretch { get; set; }
        global::Windows.UI.Text.FontStyle FontStyle { get; set; }
        global::Windows.UI.Color ForegroundColor { get; set; }
        FormatEffect Hidden { get; set; }
        FormatEffect Italic { get; set; }
        float Kerning { get; set; }
        string LanguageTag { get; set; }
        LinkType LinkType { get; }
        string Name { get; set; }
        FormatEffect Outline { get; set; }
        float Position { get; set; }
        FormatEffect ProtectedText { get; set; }
        float Size { get; set; }
        FormatEffect SmallCaps { get; set; }
        float Spacing { get; set; }
        FormatEffect Strikethrough { get; set; }
        FormatEffect Subscript { get; set; }
        FormatEffect Superscript { get; set; }
        TextScript TextScript { get; set; }
        UnderlineType Underline { get; set; }
        int Weight { get; set; }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Text")][Guid("CD353B3C-AF63-5CFB-918C-0F9C8931A161")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Text.ITextConstantsStatics))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(TextApiContract), 65536u)]
    internal interface ITextConstantsStatics
    {
        global::Windows.UI.Color AutoColor { get; }
        int MaxUnitCount { get; }
        int MinUnitCount { get; }
        global::Windows.UI.Color UndefinedColor { get; }
        float UndefinedFloatValue { get; }
        global::Windows.UI.Text.FontStretch UndefinedFontStretch { get; }
        global::Windows.UI.Text.FontStyle UndefinedFontStyle { get; }
        int UndefinedInt32Value { get; }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Text")][Guid("1149D57D-86A6-59DD-88D9-196F27BC5C85")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Text.ITextDocument))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(TextApiContract), 65536u)]
    internal interface ITextDocument
    {
        bool CanCopy();
        bool CanPaste();
        bool CanRedo();
        bool CanUndo();
        int ApplyDisplayUpdates();
        int BatchDisplayUpdates();
        void BeginUndoGroup();
        void EndUndoGroup();
        ITextCharacterFormat GetDefaultCharacterFormat();
        ITextParagraphFormat GetDefaultParagraphFormat();
        ITextRange GetRange(int startPosition, int endPosition);
        ITextRange GetRangeFromPoint(global::Windows.Foundation.Point point, PointOptions options);
        void GetText(TextGetOptions options, out string value);
        void LoadFromStream(TextSetOptions options, global::Windows.Storage.Streams.IRandomAccessStream value);
        void Redo();
        void SaveToStream(TextGetOptions options, global::Windows.Storage.Streams.IRandomAccessStream value);
        void SetDefaultCharacterFormat(ITextCharacterFormat value);
        void SetDefaultParagraphFormat(ITextParagraphFormat value);
        void SetText(TextSetOptions options, string value);
        void Undo();
        void ClearUndoRedoHistory();
        bool AlignmentIncludesTrailingWhitespace { get; set; }
        CaretType CaretType { get; set; }
        float DefaultTabStop { get; set; }
        bool IgnoreTrailingCharacterSpacing { get; set; }
        ITextSelection Selection { get; }
        uint UndoLimit { get; set; }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Text")][Guid("21FEBCF1-2110-5879-B1DA-B343097E71E1")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Text.ITextDocument2))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(TextApiContract), 131072u)]
    internal interface ITextDocument2
    {
        RichEditMathMode GetMathMode();
        void SetMathMode(RichEditMathMode mode);
        void GetMathML(out string value);
        void SetMathML(string value);
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Text")][Guid("219B6CDF-0D0B-5701-B8A1-6C906B3EBBE1")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Text.ITextParagraphFormat))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(TextApiContract), 65536u)]
    public interface ITextParagraphFormat
    {
        void AddTab(float position, TabAlignment align, TabLeader leader);
        void ClearAllTabs();
        void DeleteTab(float position);
        ITextParagraphFormat GetClone();
        void GetTab(int index, out float position, out TabAlignment align, out TabLeader leader);
        bool IsEqual(ITextParagraphFormat format);
        void SetClone(ITextParagraphFormat format);
        void SetIndents(float start, float left, float right);
        void SetLineSpacing(LineSpacingRule rule, float spacing);
        ParagraphAlignment Alignment { get; set; }
        float FirstLineIndent { get; }
        FormatEffect KeepTogether { get; set; }
        FormatEffect KeepWithNext { get; set; }
        float LeftIndent { get; }
        float LineSpacing { get; }
        LineSpacingRule LineSpacingRule { get; }
        MarkerAlignment ListAlignment { get; set; }
        int ListLevelIndex { get; set; }
        int ListStart { get; set; }
        MarkerStyle ListStyle { get; set; }
        float ListTab { get; set; }
        MarkerType ListType { get; set; }
        FormatEffect NoLineNumber { get; set; }
        FormatEffect PageBreakBefore { get; set; }
        float RightIndent { get; set; }
        FormatEffect RightToLeft { get; set; }
        float SpaceAfter { get; set; }
        float SpaceBefore { get; set; }
        ParagraphStyle Style { get; set; }
        int TabCount { get; }
        FormatEffect WidowControl { get; set; }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Text")][Guid("06D4ABCF-0C06-5D12-A743-85537EFD09EA")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Text.ITextRange))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(TextApiContract), 65536u)]
    public interface ITextRange
    {
        bool CanPaste(int format);
        void ChangeCase(LetterCase value);
        void Collapse(bool value);
        void Copy();
        void Cut();
        int Delete(TextRangeUnit unit, int count);
        int EndOf(TextRangeUnit unit, bool extend);
        int Expand(TextRangeUnit unit);
        int FindText(string value, int scanLength, FindOptions options);
        void GetCharacterUtf32(out uint value, int offset);
        ITextRange GetClone();
        int GetIndex(TextRangeUnit unit);
        void GetPoint(HorizontalCharacterAlignment horizontalAlign, VerticalCharacterAlignment verticalAlign, PointOptions options, out global::Windows.Foundation.Point point);
        void GetRect(PointOptions options, out global::Windows.Foundation.Rect rect, out int hit);
        void GetText(TextGetOptions options, out string value);
        void GetTextViaStream(TextGetOptions options, global::Windows.Storage.Streams.IRandomAccessStream value);
        bool InRange(ITextRange range);
        void InsertImage(int width, int height, int ascent, VerticalCharacterAlignment verticalAlign, string alternateText, global::Windows.Storage.Streams.IRandomAccessStream value);
        bool InStory(ITextRange range);
        bool IsEqual(ITextRange range);
        int Move(TextRangeUnit unit, int count);
        int MoveEnd(TextRangeUnit unit, int count);
        int MoveStart(TextRangeUnit unit, int count);
        void Paste(int format);
        void ScrollIntoView(PointOptions value);
        void MatchSelection();
        void SetIndex(TextRangeUnit unit, int index, bool extend);
        void SetPoint(global::Windows.Foundation.Point point, PointOptions options, bool extend);
        void SetRange(int startPosition, int endPosition);
        void SetText(TextSetOptions options, string value);
        void SetTextViaStream(TextSetOptions options, global::Windows.Storage.Streams.IRandomAccessStream value);
        int StartOf(TextRangeUnit unit, bool extend);
        char Character { get; set; }
        ITextCharacterFormat CharacterFormat { get; set; }
        int EndPosition { get; set; }
        ITextRange FormattedText { get; set; }
        RangeGravity Gravity { get; set; }
        int Length { get; }
        string Link { get; set; }
        ITextParagraphFormat ParagraphFormat { get; set; }
        int StartPosition { get; set; }
        int StoryLength { get; }
        string Text { get; set; }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Text")][Guid("8F5E6CB1-2B04-589F-BD24-54E5CD8DD399")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Text.ITextSelection))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(TextApiContract), 65536u)]
    public interface ITextSelection : ITextRange
    {
        int EndKey(TextRangeUnit unit, bool extend);
        int HomeKey(TextRangeUnit unit, bool extend);
        int MoveDown(TextRangeUnit unit, int count, bool extend);
        int MoveLeft(TextRangeUnit unit, int count, bool extend);
        int MoveRight(TextRangeUnit unit, int count, bool extend);
        int MoveUp(TextRangeUnit unit, int count, bool extend);
        void TypeText(string value);
        SelectionOptions Options { get; set; }
        SelectionType Type { get; }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Text")][global::WinRT.WinRTExposedType(typeof(global::WinRT.EnumTypeDetails<LetterCase>))]public enum LetterCase : int
    {
        Lower = unchecked((int)0),
        Upper = unchecked((int)0x1),
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Text")][global::WinRT.WinRTExposedType(typeof(global::WinRT.EnumTypeDetails<LineSpacingRule>))]public enum LineSpacingRule : int
    {
        Undefined = unchecked((int)0),
        Single = unchecked((int)0x1),
        OneAndHalf = unchecked((int)0x2),
        Double = unchecked((int)0x3),
        AtLeast = unchecked((int)0x4),
        Exactly = unchecked((int)0x5),
        Multiple = unchecked((int)0x6),
        Percent = unchecked((int)0x7),
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Text")][global::WinRT.WinRTExposedType(typeof(global::WinRT.EnumTypeDetails<LinkType>))]public enum LinkType : int
    {
        Undefined = unchecked((int)0),
        NotALink = unchecked((int)0x1),
        ClientLink = unchecked((int)0x2),
        FriendlyLinkName = unchecked((int)0x3),
        FriendlyLinkAddress = unchecked((int)0x4),
        AutoLink = unchecked((int)0x5),
        AutoLinkEmail = unchecked((int)0x6),
        AutoLinkPhone = unchecked((int)0x7),
        AutoLinkPath = unchecked((int)0x8),
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Text")][global::WinRT.WinRTExposedType(typeof(global::WinRT.EnumTypeDetails<MarkerAlignment>))]public enum MarkerAlignment : int
    {
        Undefined = unchecked((int)0),
        Left = unchecked((int)0x1),
        Center = unchecked((int)0x2),
        Right = unchecked((int)0x3),
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Text")][global::WinRT.WinRTExposedType(typeof(global::WinRT.EnumTypeDetails<MarkerStyle>))]public enum MarkerStyle : int
    {
        Undefined = unchecked((int)0),
        Parenthesis = unchecked((int)0x1),
        Parentheses = unchecked((int)0x2),
        Period = unchecked((int)0x3),
        Plain = unchecked((int)0x4),
        Minus = unchecked((int)0x5),
        NoNumber = unchecked((int)0x6),
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Text")][global::WinRT.WinRTExposedType(typeof(global::WinRT.EnumTypeDetails<MarkerType>))]public enum MarkerType : int
    {
        Undefined = unchecked((int)0),
        None = unchecked((int)0x1),
        Bullet = unchecked((int)0x2),
        Arabic = unchecked((int)0x3),
        LowercaseEnglishLetter = unchecked((int)0x4),
        UppercaseEnglishLetter = unchecked((int)0x5),
        LowercaseRoman = unchecked((int)0x6),
        UppercaseRoman = unchecked((int)0x7),
        UnicodeSequence = unchecked((int)0x8),
        CircledNumber = unchecked((int)0x9),
        BlackCircleWingding = unchecked((int)0xa),
        WhiteCircleWingding = unchecked((int)0xb),
        ArabicWide = unchecked((int)0xc),
        SimplifiedChinese = unchecked((int)0xd),
        TraditionalChinese = unchecked((int)0xe),
        JapanSimplifiedChinese = unchecked((int)0xf),
        JapanKorea = unchecked((int)0x10),
        ArabicDictionary = unchecked((int)0x11),
        ArabicAbjad = unchecked((int)0x12),
        Hebrew = unchecked((int)0x13),
        ThaiAlphabetic = unchecked((int)0x14),
        ThaiNumeric = unchecked((int)0x15),
        DevanagariVowel = unchecked((int)0x16),
        DevanagariConsonant = unchecked((int)0x17),
        DevanagariNumeric = unchecked((int)0x18),
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Text")][global::WinRT.WinRTExposedType(typeof(global::WinRT.EnumTypeDetails<ParagraphAlignment>))]public enum ParagraphAlignment : int
    {
        Undefined = unchecked((int)0),
        Left = unchecked((int)0x1),
        Center = unchecked((int)0x2),
        Right = unchecked((int)0x3),
        Justify = unchecked((int)0x4),
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Text")][global::WinRT.WinRTExposedType(typeof(global::WinRT.EnumTypeDetails<ParagraphStyle>))]public enum ParagraphStyle : int
    {
        Undefined = unchecked((int)0),
        None = unchecked((int)0x1),
        Normal = unchecked((int)0x2),
        Heading1 = unchecked((int)0x3),
        Heading2 = unchecked((int)0x4),
        Heading3 = unchecked((int)0x5),
        Heading4 = unchecked((int)0x6),
        Heading5 = unchecked((int)0x7),
        Heading6 = unchecked((int)0x8),
        Heading7 = unchecked((int)0x9),
        Heading8 = unchecked((int)0xa),
        Heading9 = unchecked((int)0xb),
    }
    [FlagsAttribute]
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Text")][global::WinRT.WinRTExposedType(typeof(global::WinRT.EnumTypeDetails<PointOptions>))]public enum PointOptions : uint
    {
        None = unchecked((uint)0),
        IncludeInset = unchecked((uint)0x1),
        Start = unchecked((uint)0x20),
        ClientCoordinates = unchecked((uint)0x100),
        AllowOffClient = unchecked((uint)0x200),
        Transform = unchecked((uint)0x400),
        NoHorizontalScroll = unchecked((uint)0x10000),
        NoVerticalScroll = unchecked((uint)0x40000),
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Text")][global::WinRT.WinRTExposedType(typeof(global::WinRT.EnumTypeDetails<RangeGravity>))]public enum RangeGravity : int
    {
        UIBehavior = unchecked((int)0),
        Backward = unchecked((int)0x1),
        Forward = unchecked((int)0x2),
        Inward = unchecked((int)0x3),
        Outward = unchecked((int)0x4),
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Text")][global::WinRT.WinRTExposedType(typeof(global::WinRT.EnumTypeDetails<RichEditMathMode>))]public enum RichEditMathMode : int
    {
        NoMath = unchecked((int)0),
        MathOnly = unchecked((int)0x1),
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Text")]
    [global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Text.RichEditTextDocument))]
    [global::ABI.Microsoft.UI.Text.RichEditTextDocumentRcwFactory]
    [global::WinRT.ProjectedRuntimeClass(typeof(ITextDocument))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(TextApiContract), 65536u)]
    public sealed class RichEditTextDocument : global::System.Runtime.InteropServices.ICustomQueryInterface, IWinRTObject, IEquatable<RichEditTextDocument>
    {
        private IntPtr ThisPtr => _inner == null ? (((IWinRTObject)this).NativeObject).ThisPtr : _inner.ThisPtr;

        private readonly IObjectReference _inner = null;



        private IObjectReference _objRef_global__Microsoft_UI_Text_ITextDocument => _inner;
        private volatile IObjectReference ___objRef_global__Microsoft_UI_Text_ITextDocument2;
        private IObjectReference Make___objRef_global__Microsoft_UI_Text_ITextDocument2()
        {
            global::System.Threading.Interlocked.CompareExchange(ref ___objRef_global__Microsoft_UI_Text_ITextDocument2, ((IWinRTObject)this).NativeObject.As<IUnknownVftbl>(global::ABI.Microsoft.UI.Text.ITextDocument2Methods.IID), null);
            return ___objRef_global__Microsoft_UI_Text_ITextDocument2;
        }
        private IObjectReference _objRef_global__Microsoft_UI_Text_ITextDocument2 => ___objRef_global__Microsoft_UI_Text_ITextDocument2 ?? Make___objRef_global__Microsoft_UI_Text_ITextDocument2();



        public static RichEditTextDocument FromAbi(IntPtr thisPtr)
        {
            if (thisPtr == IntPtr.Zero) return null;
            return MarshalInspectable<RichEditTextDocument>.FromAbi(thisPtr);
        }

        internal RichEditTextDocument(IObjectReference objRef)
        {
            _inner = objRef.As(global::ABI.Microsoft.UI.Text.ITextDocumentMethods.IID);

        }


        public static bool operator ==(RichEditTextDocument x, RichEditTextDocument y) => (x?.ThisPtr ?? IntPtr.Zero) == (y?.ThisPtr ?? IntPtr.Zero);
        public static bool operator !=(RichEditTextDocument x, RichEditTextDocument y) => !(x == y);
        public bool Equals(RichEditTextDocument other) => this == other;
        public override bool Equals(object obj) => obj is RichEditTextDocument that && this == that;
        public override int GetHashCode() => ThisPtr.GetHashCode();


        bool IWinRTObject.HasUnwrappableNativeObject => true;
        IObjectReference IWinRTObject.NativeObject => _inner;
        private volatile global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> _queryInterfaceCache;
        private global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> MakeQueryInterfaceCache()
        {
            global::System.Threading.Interlocked.CompareExchange(ref _queryInterfaceCache, new global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference>(), null); 
            return _queryInterfaceCache;
        }
        global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> IWinRTObject.QueryInterfaceCache => _queryInterfaceCache ?? MakeQueryInterfaceCache();
        private volatile global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> _additionalTypeData;
        private global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> MakeAdditionalTypeData()
        {
            global::System.Threading.Interlocked.CompareExchange(ref _additionalTypeData, new global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object>(), null); 
            return _additionalTypeData;
        }
        global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> IWinRTObject.AdditionalTypeData => _additionalTypeData ?? MakeAdditionalTypeData();

        private struct InterfaceTag<I>{};


        public bool CanCopy() => global::ABI.Microsoft.UI.Text.ITextDocumentMethods.CanCopy(_objRef_global__Microsoft_UI_Text_ITextDocument);

        public bool CanPaste() => global::ABI.Microsoft.UI.Text.ITextDocumentMethods.CanPaste(_objRef_global__Microsoft_UI_Text_ITextDocument);

        public bool CanRedo() => global::ABI.Microsoft.UI.Text.ITextDocumentMethods.CanRedo(_objRef_global__Microsoft_UI_Text_ITextDocument);

        public bool CanUndo() => global::ABI.Microsoft.UI.Text.ITextDocumentMethods.CanUndo(_objRef_global__Microsoft_UI_Text_ITextDocument);

        public int ApplyDisplayUpdates() => global::ABI.Microsoft.UI.Text.ITextDocumentMethods.ApplyDisplayUpdates(_objRef_global__Microsoft_UI_Text_ITextDocument);

        public int BatchDisplayUpdates() => global::ABI.Microsoft.UI.Text.ITextDocumentMethods.BatchDisplayUpdates(_objRef_global__Microsoft_UI_Text_ITextDocument);

        public void BeginUndoGroup() => global::ABI.Microsoft.UI.Text.ITextDocumentMethods.BeginUndoGroup(_objRef_global__Microsoft_UI_Text_ITextDocument);

        public void EndUndoGroup() => global::ABI.Microsoft.UI.Text.ITextDocumentMethods.EndUndoGroup(_objRef_global__Microsoft_UI_Text_ITextDocument);

        public ITextCharacterFormat GetDefaultCharacterFormat() => global::ABI.Microsoft.UI.Text.ITextDocumentMethods.GetDefaultCharacterFormat(_objRef_global__Microsoft_UI_Text_ITextDocument);

        public ITextParagraphFormat GetDefaultParagraphFormat() => global::ABI.Microsoft.UI.Text.ITextDocumentMethods.GetDefaultParagraphFormat(_objRef_global__Microsoft_UI_Text_ITextDocument);

        public ITextRange GetRange(int startPosition, int endPosition) => global::ABI.Microsoft.UI.Text.ITextDocumentMethods.GetRange(_objRef_global__Microsoft_UI_Text_ITextDocument, startPosition, endPosition);

        public ITextRange GetRangeFromPoint(global::Windows.Foundation.Point point, PointOptions options) => global::ABI.Microsoft.UI.Text.ITextDocumentMethods.GetRangeFromPoint(_objRef_global__Microsoft_UI_Text_ITextDocument, point, options);

        public void GetText(TextGetOptions options, out string value) => global::ABI.Microsoft.UI.Text.ITextDocumentMethods.GetText(_objRef_global__Microsoft_UI_Text_ITextDocument, options, out value);

        public void LoadFromStream(TextSetOptions options, global::Windows.Storage.Streams.IRandomAccessStream value) => global::ABI.Microsoft.UI.Text.ITextDocumentMethods.LoadFromStream(_objRef_global__Microsoft_UI_Text_ITextDocument, options, value);

        public void Redo() => global::ABI.Microsoft.UI.Text.ITextDocumentMethods.Redo(_objRef_global__Microsoft_UI_Text_ITextDocument);

        public void SaveToStream(TextGetOptions options, global::Windows.Storage.Streams.IRandomAccessStream value) => global::ABI.Microsoft.UI.Text.ITextDocumentMethods.SaveToStream(_objRef_global__Microsoft_UI_Text_ITextDocument, options, value);

        public void SetDefaultCharacterFormat(ITextCharacterFormat value) => global::ABI.Microsoft.UI.Text.ITextDocumentMethods.SetDefaultCharacterFormat(_objRef_global__Microsoft_UI_Text_ITextDocument, value);

        public void SetDefaultParagraphFormat(ITextParagraphFormat value) => global::ABI.Microsoft.UI.Text.ITextDocumentMethods.SetDefaultParagraphFormat(_objRef_global__Microsoft_UI_Text_ITextDocument, value);

        public void SetText(TextSetOptions options, string value) => global::ABI.Microsoft.UI.Text.ITextDocumentMethods.SetText(_objRef_global__Microsoft_UI_Text_ITextDocument, options, value);

        public void Undo() => global::ABI.Microsoft.UI.Text.ITextDocumentMethods.Undo(_objRef_global__Microsoft_UI_Text_ITextDocument);

        public void ClearUndoRedoHistory() => global::ABI.Microsoft.UI.Text.ITextDocumentMethods.ClearUndoRedoHistory(_objRef_global__Microsoft_UI_Text_ITextDocument);

        public RichEditMathMode GetMathMode() => global::ABI.Microsoft.UI.Text.ITextDocument2Methods.GetMathMode(_objRef_global__Microsoft_UI_Text_ITextDocument2);

        public void SetMathMode(RichEditMathMode mode) => global::ABI.Microsoft.UI.Text.ITextDocument2Methods.SetMathMode(_objRef_global__Microsoft_UI_Text_ITextDocument2, mode);

        public void GetMathML(out string value) => global::ABI.Microsoft.UI.Text.ITextDocument2Methods.GetMathML(_objRef_global__Microsoft_UI_Text_ITextDocument2, out value);

        public void SetMathML(string value) => global::ABI.Microsoft.UI.Text.ITextDocument2Methods.SetMathML(_objRef_global__Microsoft_UI_Text_ITextDocument2, value);

        public bool AlignmentIncludesTrailingWhitespace
        {
            get => global::ABI.Microsoft.UI.Text.ITextDocumentMethods.get_AlignmentIncludesTrailingWhitespace(_objRef_global__Microsoft_UI_Text_ITextDocument);
            set => global::ABI.Microsoft.UI.Text.ITextDocumentMethods.set_AlignmentIncludesTrailingWhitespace(_objRef_global__Microsoft_UI_Text_ITextDocument, value);
        }

        public CaretType CaretType
        {
            get => global::ABI.Microsoft.UI.Text.ITextDocumentMethods.get_CaretType(_objRef_global__Microsoft_UI_Text_ITextDocument);
            set => global::ABI.Microsoft.UI.Text.ITextDocumentMethods.set_CaretType(_objRef_global__Microsoft_UI_Text_ITextDocument, value);
        }

        public float DefaultTabStop
        {
            get => global::ABI.Microsoft.UI.Text.ITextDocumentMethods.get_DefaultTabStop(_objRef_global__Microsoft_UI_Text_ITextDocument);
            set => global::ABI.Microsoft.UI.Text.ITextDocumentMethods.set_DefaultTabStop(_objRef_global__Microsoft_UI_Text_ITextDocument, value);
        }

        public bool IgnoreTrailingCharacterSpacing
        {
            get => global::ABI.Microsoft.UI.Text.ITextDocumentMethods.get_IgnoreTrailingCharacterSpacing(_objRef_global__Microsoft_UI_Text_ITextDocument);
            set => global::ABI.Microsoft.UI.Text.ITextDocumentMethods.set_IgnoreTrailingCharacterSpacing(_objRef_global__Microsoft_UI_Text_ITextDocument, value);
        }

        public ITextSelection Selection => global::ABI.Microsoft.UI.Text.ITextDocumentMethods.get_Selection(_objRef_global__Microsoft_UI_Text_ITextDocument);

        public uint UndoLimit
        {
            get => global::ABI.Microsoft.UI.Text.ITextDocumentMethods.get_UndoLimit(_objRef_global__Microsoft_UI_Text_ITextDocument);
            set => global::ABI.Microsoft.UI.Text.ITextDocumentMethods.set_UndoLimit(_objRef_global__Microsoft_UI_Text_ITextDocument, value);
        }

        private bool IsOverridableInterface(Guid iid) => false;

        global::System.Runtime.InteropServices.CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(ref Guid iid, out IntPtr ppv)
        {
            ppv = IntPtr.Zero;
            if (IsOverridableInterface(iid) || global::WinRT.Interop.IID.IID_IInspectable == iid)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
            }

            if (((IWinRTObject)this).NativeObject.TryAs(iid, out ppv) >= 0)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.Handled;
            }

            return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
        }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Text")]
    [global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Text.RichEditTextRange))]
    [global::ABI.Microsoft.UI.Text.RichEditTextRangeRcwFactory]
    [global::WinRT.ProjectedRuntimeClass(typeof(ITextRange))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(TextApiContract), 65536u)]
    public sealed class RichEditTextRange : ITextRange, global::System.Runtime.InteropServices.ICustomQueryInterface, IWinRTObject, IEquatable<RichEditTextRange>
    {
        private IntPtr ThisPtr => _inner == null ? (((IWinRTObject)this).NativeObject).ThisPtr : _inner.ThisPtr;

        private readonly IObjectReference _inner = null;



        private IObjectReference _objRef_global__Microsoft_UI_Text_ITextRange => _inner;


        public static RichEditTextRange FromAbi(IntPtr thisPtr)
        {
            if (thisPtr == IntPtr.Zero) return null;
            return MarshalInspectable<RichEditTextRange>.FromAbi(thisPtr);
        }

        internal RichEditTextRange(IObjectReference objRef)
        {
            _inner = objRef.As(global::ABI.Microsoft.UI.Text.ITextRangeMethods.IID);

        }


        public static bool operator ==(RichEditTextRange x, RichEditTextRange y) => (x?.ThisPtr ?? IntPtr.Zero) == (y?.ThisPtr ?? IntPtr.Zero);
        public static bool operator !=(RichEditTextRange x, RichEditTextRange y) => !(x == y);
        public bool Equals(RichEditTextRange other) => this == other;
        public override bool Equals(object obj) => obj is RichEditTextRange that && this == that;
        public override int GetHashCode() => ThisPtr.GetHashCode();


        bool IWinRTObject.HasUnwrappableNativeObject => true;
        IObjectReference IWinRTObject.NativeObject => _inner;
        private volatile global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> _queryInterfaceCache;
        private global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> MakeQueryInterfaceCache()
        {
            global::System.Threading.Interlocked.CompareExchange(ref _queryInterfaceCache, new global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference>(), null); 
            return _queryInterfaceCache;
        }
        global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> IWinRTObject.QueryInterfaceCache => _queryInterfaceCache ?? MakeQueryInterfaceCache();
        private volatile global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> _additionalTypeData;
        private global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> MakeAdditionalTypeData()
        {
            global::System.Threading.Interlocked.CompareExchange(ref _additionalTypeData, new global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object>(), null); 
            return _additionalTypeData;
        }
        global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> IWinRTObject.AdditionalTypeData => _additionalTypeData ?? MakeAdditionalTypeData();

        private struct InterfaceTag<I>{};


        public bool CanPaste(int format) => global::ABI.Microsoft.UI.Text.ITextRangeMethods.CanPaste(_objRef_global__Microsoft_UI_Text_ITextRange, format);

        public void ChangeCase(LetterCase value) => global::ABI.Microsoft.UI.Text.ITextRangeMethods.ChangeCase(_objRef_global__Microsoft_UI_Text_ITextRange, value);

        public void Collapse(bool value) => global::ABI.Microsoft.UI.Text.ITextRangeMethods.Collapse(_objRef_global__Microsoft_UI_Text_ITextRange, value);

        public void Copy() => global::ABI.Microsoft.UI.Text.ITextRangeMethods.Copy(_objRef_global__Microsoft_UI_Text_ITextRange);

        public void Cut() => global::ABI.Microsoft.UI.Text.ITextRangeMethods.Cut(_objRef_global__Microsoft_UI_Text_ITextRange);

        public int Delete(TextRangeUnit unit, int count) => global::ABI.Microsoft.UI.Text.ITextRangeMethods.Delete(_objRef_global__Microsoft_UI_Text_ITextRange, unit, count);

        public int EndOf(TextRangeUnit unit, bool extend) => global::ABI.Microsoft.UI.Text.ITextRangeMethods.EndOf(_objRef_global__Microsoft_UI_Text_ITextRange, unit, extend);

        public int Expand(TextRangeUnit unit) => global::ABI.Microsoft.UI.Text.ITextRangeMethods.Expand(_objRef_global__Microsoft_UI_Text_ITextRange, unit);

        public int FindText(string value, int scanLength, FindOptions options) => global::ABI.Microsoft.UI.Text.ITextRangeMethods.FindText(_objRef_global__Microsoft_UI_Text_ITextRange, value, scanLength, options);

        public void GetCharacterUtf32(out uint value, int offset) => global::ABI.Microsoft.UI.Text.ITextRangeMethods.GetCharacterUtf32(_objRef_global__Microsoft_UI_Text_ITextRange, out value, offset);

        public ITextRange GetClone() => global::ABI.Microsoft.UI.Text.ITextRangeMethods.GetClone(_objRef_global__Microsoft_UI_Text_ITextRange);

        public int GetIndex(TextRangeUnit unit) => global::ABI.Microsoft.UI.Text.ITextRangeMethods.GetIndex(_objRef_global__Microsoft_UI_Text_ITextRange, unit);

        public void GetPoint(HorizontalCharacterAlignment horizontalAlign, VerticalCharacterAlignment verticalAlign, PointOptions options, out global::Windows.Foundation.Point point) => global::ABI.Microsoft.UI.Text.ITextRangeMethods.GetPoint(_objRef_global__Microsoft_UI_Text_ITextRange, horizontalAlign, verticalAlign, options, out point);

        public void GetRect(PointOptions options, out global::Windows.Foundation.Rect rect, out int hit) => global::ABI.Microsoft.UI.Text.ITextRangeMethods.GetRect(_objRef_global__Microsoft_UI_Text_ITextRange, options, out rect, out hit);

        public void GetText(TextGetOptions options, out string value) => global::ABI.Microsoft.UI.Text.ITextRangeMethods.GetText(_objRef_global__Microsoft_UI_Text_ITextRange, options, out value);

        public void GetTextViaStream(TextGetOptions options, global::Windows.Storage.Streams.IRandomAccessStream value) => global::ABI.Microsoft.UI.Text.ITextRangeMethods.GetTextViaStream(_objRef_global__Microsoft_UI_Text_ITextRange, options, value);

        public bool InRange(ITextRange range) => global::ABI.Microsoft.UI.Text.ITextRangeMethods.InRange(_objRef_global__Microsoft_UI_Text_ITextRange, range);

        public void InsertImage(int width, int height, int ascent, VerticalCharacterAlignment verticalAlign, string alternateText, global::Windows.Storage.Streams.IRandomAccessStream value) => global::ABI.Microsoft.UI.Text.ITextRangeMethods.InsertImage(_objRef_global__Microsoft_UI_Text_ITextRange, width, height, ascent, verticalAlign, alternateText, value);

        public bool InStory(ITextRange range) => global::ABI.Microsoft.UI.Text.ITextRangeMethods.InStory(_objRef_global__Microsoft_UI_Text_ITextRange, range);

        public bool IsEqual(ITextRange range) => global::ABI.Microsoft.UI.Text.ITextRangeMethods.IsEqual(_objRef_global__Microsoft_UI_Text_ITextRange, range);

        public int Move(TextRangeUnit unit, int count) => global::ABI.Microsoft.UI.Text.ITextRangeMethods.Move(_objRef_global__Microsoft_UI_Text_ITextRange, unit, count);

        public int MoveEnd(TextRangeUnit unit, int count) => global::ABI.Microsoft.UI.Text.ITextRangeMethods.MoveEnd(_objRef_global__Microsoft_UI_Text_ITextRange, unit, count);

        public int MoveStart(TextRangeUnit unit, int count) => global::ABI.Microsoft.UI.Text.ITextRangeMethods.MoveStart(_objRef_global__Microsoft_UI_Text_ITextRange, unit, count);

        public void Paste(int format) => global::ABI.Microsoft.UI.Text.ITextRangeMethods.Paste(_objRef_global__Microsoft_UI_Text_ITextRange, format);

        public void ScrollIntoView(PointOptions value) => global::ABI.Microsoft.UI.Text.ITextRangeMethods.ScrollIntoView(_objRef_global__Microsoft_UI_Text_ITextRange, value);

        public void MatchSelection() => global::ABI.Microsoft.UI.Text.ITextRangeMethods.MatchSelection(_objRef_global__Microsoft_UI_Text_ITextRange);

        public void SetIndex(TextRangeUnit unit, int index, bool extend) => global::ABI.Microsoft.UI.Text.ITextRangeMethods.SetIndex(_objRef_global__Microsoft_UI_Text_ITextRange, unit, index, extend);

        public void SetPoint(global::Windows.Foundation.Point point, PointOptions options, bool extend) => global::ABI.Microsoft.UI.Text.ITextRangeMethods.SetPoint(_objRef_global__Microsoft_UI_Text_ITextRange, point, options, extend);

        public void SetRange(int startPosition, int endPosition) => global::ABI.Microsoft.UI.Text.ITextRangeMethods.SetRange(_objRef_global__Microsoft_UI_Text_ITextRange, startPosition, endPosition);

        public void SetText(TextSetOptions options, string value) => global::ABI.Microsoft.UI.Text.ITextRangeMethods.SetText(_objRef_global__Microsoft_UI_Text_ITextRange, options, value);

        public void SetTextViaStream(TextSetOptions options, global::Windows.Storage.Streams.IRandomAccessStream value) => global::ABI.Microsoft.UI.Text.ITextRangeMethods.SetTextViaStream(_objRef_global__Microsoft_UI_Text_ITextRange, options, value);

        public int StartOf(TextRangeUnit unit, bool extend) => global::ABI.Microsoft.UI.Text.ITextRangeMethods.StartOf(_objRef_global__Microsoft_UI_Text_ITextRange, unit, extend);

        public char Character
        {
            get => global::ABI.Microsoft.UI.Text.ITextRangeMethods.get_Character(_objRef_global__Microsoft_UI_Text_ITextRange);
            set => global::ABI.Microsoft.UI.Text.ITextRangeMethods.set_Character(_objRef_global__Microsoft_UI_Text_ITextRange, value);
        }

        public ITextCharacterFormat CharacterFormat
        {
            get => global::ABI.Microsoft.UI.Text.ITextRangeMethods.get_CharacterFormat(_objRef_global__Microsoft_UI_Text_ITextRange);
            set => global::ABI.Microsoft.UI.Text.ITextRangeMethods.set_CharacterFormat(_objRef_global__Microsoft_UI_Text_ITextRange, value);
        }

        public int EndPosition
        {
            get => global::ABI.Microsoft.UI.Text.ITextRangeMethods.get_EndPosition(_objRef_global__Microsoft_UI_Text_ITextRange);
            set => global::ABI.Microsoft.UI.Text.ITextRangeMethods.set_EndPosition(_objRef_global__Microsoft_UI_Text_ITextRange, value);
        }

        public ITextRange FormattedText
        {
            get => global::ABI.Microsoft.UI.Text.ITextRangeMethods.get_FormattedText(_objRef_global__Microsoft_UI_Text_ITextRange);
            set => global::ABI.Microsoft.UI.Text.ITextRangeMethods.set_FormattedText(_objRef_global__Microsoft_UI_Text_ITextRange, value);
        }

        public RangeGravity Gravity
        {
            get => global::ABI.Microsoft.UI.Text.ITextRangeMethods.get_Gravity(_objRef_global__Microsoft_UI_Text_ITextRange);
            set => global::ABI.Microsoft.UI.Text.ITextRangeMethods.set_Gravity(_objRef_global__Microsoft_UI_Text_ITextRange, value);
        }

        public int Length => global::ABI.Microsoft.UI.Text.ITextRangeMethods.get_Length(_objRef_global__Microsoft_UI_Text_ITextRange);

        public string Link
        {
            get => global::ABI.Microsoft.UI.Text.ITextRangeMethods.get_Link(_objRef_global__Microsoft_UI_Text_ITextRange);
            set => global::ABI.Microsoft.UI.Text.ITextRangeMethods.set_Link(_objRef_global__Microsoft_UI_Text_ITextRange, value);
        }

        public ITextParagraphFormat ParagraphFormat
        {
            get => global::ABI.Microsoft.UI.Text.ITextRangeMethods.get_ParagraphFormat(_objRef_global__Microsoft_UI_Text_ITextRange);
            set => global::ABI.Microsoft.UI.Text.ITextRangeMethods.set_ParagraphFormat(_objRef_global__Microsoft_UI_Text_ITextRange, value);
        }

        public int StartPosition
        {
            get => global::ABI.Microsoft.UI.Text.ITextRangeMethods.get_StartPosition(_objRef_global__Microsoft_UI_Text_ITextRange);
            set => global::ABI.Microsoft.UI.Text.ITextRangeMethods.set_StartPosition(_objRef_global__Microsoft_UI_Text_ITextRange, value);
        }

        public int StoryLength => global::ABI.Microsoft.UI.Text.ITextRangeMethods.get_StoryLength(_objRef_global__Microsoft_UI_Text_ITextRange);

        public string Text
        {
            get => global::ABI.Microsoft.UI.Text.ITextRangeMethods.get_Text(_objRef_global__Microsoft_UI_Text_ITextRange);
            set => global::ABI.Microsoft.UI.Text.ITextRangeMethods.set_Text(_objRef_global__Microsoft_UI_Text_ITextRange, value);
        }

        private bool IsOverridableInterface(Guid iid) => false;

        global::System.Runtime.InteropServices.CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(ref Guid iid, out IntPtr ppv)
        {
            ppv = IntPtr.Zero;
            if (IsOverridableInterface(iid) || global::WinRT.Interop.IID.IID_IInspectable == iid)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
            }

            if (((IWinRTObject)this).NativeObject.TryAs(iid, out ppv) >= 0)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.Handled;
            }

            return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
        }
    }
    [FlagsAttribute]
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Text")][global::WinRT.WinRTExposedType(typeof(global::WinRT.EnumTypeDetails<SelectionOptions>))]public enum SelectionOptions : uint
    {
        StartActive = unchecked((uint)0x1),
        AtEndOfLine = unchecked((uint)0x2),
        Overtype = unchecked((uint)0x4),
        Active = unchecked((uint)0x8),
        Replace = unchecked((uint)0x10),
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Text")][global::WinRT.WinRTExposedType(typeof(global::WinRT.EnumTypeDetails<SelectionType>))]public enum SelectionType : int
    {
        None = unchecked((int)0),
        InsertionPoint = unchecked((int)0x1),
        Normal = unchecked((int)0x2),
        InlineShape = unchecked((int)0x7),
        Shape = unchecked((int)0x8),
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Text")][global::WinRT.WinRTExposedType(typeof(global::WinRT.EnumTypeDetails<TabAlignment>))]public enum TabAlignment : int
    {
        Left = unchecked((int)0),
        Center = unchecked((int)0x1),
        Right = unchecked((int)0x2),
        Decimal = unchecked((int)0x3),
        Bar = unchecked((int)0x4),
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Text")][global::WinRT.WinRTExposedType(typeof(global::WinRT.EnumTypeDetails<TabLeader>))]public enum TabLeader : int
    {
        Spaces = unchecked((int)0),
        Dots = unchecked((int)0x1),
        Dashes = unchecked((int)0x2),
        Lines = unchecked((int)0x3),
        ThickLines = unchecked((int)0x4),
        Equals = unchecked((int)0x5),
    }
    [global::Windows.Foundation.Metadata.ContractVersion(131072u)]
    public enum TextApiContract
    {
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Text")][global::Windows.Foundation.Metadata.ContractVersion(typeof(TextApiContract), 65536u)]
    public static class TextConstants
    {

        public static I As<I>() => ActivationFactory.Get("Microsoft.UI.Text.TextConstants").AsInterface<I>();

        private static volatile IObjectReference ___objRef_global__Microsoft_UI_Text_ITextConstantsStatics;
        private static IObjectReference _objRef_global__Microsoft_UI_Text_ITextConstantsStatics
        {
            get
            { 
                var factory = ___objRef_global__Microsoft_UI_Text_ITextConstantsStatics;
                if (factory != null && factory.IsInCurrentContext)
                {
                    return factory;
                }
                else
                {
                    return ___objRef_global__Microsoft_UI_Text_ITextConstantsStatics = ActivationFactory.Get("Microsoft.UI.Text.TextConstants", global::ABI.Microsoft.UI.Text.ITextConstantsStaticsMethods.IID);
                }
            }
        }

        public static global::Windows.UI.Color AutoColor => global::ABI.Microsoft.UI.Text.ITextConstantsStaticsMethods.get_AutoColor(_objRef_global__Microsoft_UI_Text_ITextConstantsStatics);

        public static int MaxUnitCount => global::ABI.Microsoft.UI.Text.ITextConstantsStaticsMethods.get_MaxUnitCount(_objRef_global__Microsoft_UI_Text_ITextConstantsStatics);

        public static int MinUnitCount => global::ABI.Microsoft.UI.Text.ITextConstantsStaticsMethods.get_MinUnitCount(_objRef_global__Microsoft_UI_Text_ITextConstantsStatics);

        public static global::Windows.UI.Color UndefinedColor => global::ABI.Microsoft.UI.Text.ITextConstantsStaticsMethods.get_UndefinedColor(_objRef_global__Microsoft_UI_Text_ITextConstantsStatics);

        public static float UndefinedFloatValue => global::ABI.Microsoft.UI.Text.ITextConstantsStaticsMethods.get_UndefinedFloatValue(_objRef_global__Microsoft_UI_Text_ITextConstantsStatics);

        public static global::Windows.UI.Text.FontStretch UndefinedFontStretch => global::ABI.Microsoft.UI.Text.ITextConstantsStaticsMethods.get_UndefinedFontStretch(_objRef_global__Microsoft_UI_Text_ITextConstantsStatics);

        public static global::Windows.UI.Text.FontStyle UndefinedFontStyle => global::ABI.Microsoft.UI.Text.ITextConstantsStaticsMethods.get_UndefinedFontStyle(_objRef_global__Microsoft_UI_Text_ITextConstantsStatics);

        public static int UndefinedInt32Value => global::ABI.Microsoft.UI.Text.ITextConstantsStaticsMethods.get_UndefinedInt32Value(_objRef_global__Microsoft_UI_Text_ITextConstantsStatics);
    }
    [FlagsAttribute]
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Text")][global::WinRT.WinRTExposedType(typeof(global::WinRT.EnumTypeDetails<TextGetOptions>))]public enum TextGetOptions : uint
    {
        None = unchecked((uint)0),
        AdjustCrlf = unchecked((uint)0x1),
        UseCrlf = unchecked((uint)0x2),
        UseObjectText = unchecked((uint)0x4),
        AllowFinalEop = unchecked((uint)0x8),
        NoHidden = unchecked((uint)0x20),
        IncludeNumbering = unchecked((uint)0x40),
        FormatRtf = unchecked((uint)0x2000),
        UseLf = unchecked((uint)0x1000000),
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Text")][global::WinRT.WinRTExposedType(typeof(global::WinRT.EnumTypeDetails<TextRangeUnit>))]public enum TextRangeUnit : int
    {
        Character = unchecked((int)0),
        Word = unchecked((int)0x1),
        Sentence = unchecked((int)0x2),
        Paragraph = unchecked((int)0x3),
        Line = unchecked((int)0x4),
        Story = unchecked((int)0x5),
        Screen = unchecked((int)0x6),
        Section = unchecked((int)0x7),
        Window = unchecked((int)0x8),
        CharacterFormat = unchecked((int)0x9),
        ParagraphFormat = unchecked((int)0xa),
        Object = unchecked((int)0xb),
        HardParagraph = unchecked((int)0xc),
        Cluster = unchecked((int)0xd),
        Bold = unchecked((int)0xe),
        Italic = unchecked((int)0xf),
        Underline = unchecked((int)0x10),
        Strikethrough = unchecked((int)0x11),
        ProtectedText = unchecked((int)0x12),
        Link = unchecked((int)0x13),
        SmallCaps = unchecked((int)0x14),
        AllCaps = unchecked((int)0x15),
        Hidden = unchecked((int)0x16),
        Outline = unchecked((int)0x17),
        Shadow = unchecked((int)0x18),
        Imprint = unchecked((int)0x19),
        Disabled = unchecked((int)0x1a),
        Revised = unchecked((int)0x1b),
        Subscript = unchecked((int)0x1c),
        Superscript = unchecked((int)0x1d),
        FontBound = unchecked((int)0x1e),
        LinkProtected = unchecked((int)0x1f),
        ContentLink = unchecked((int)0x20),
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Text")][global::WinRT.WinRTExposedType(typeof(global::WinRT.EnumTypeDetails<TextScript>))]public enum TextScript : int
    {
        Undefined = unchecked((int)0),
        Ansi = unchecked((int)0x1),
        EastEurope = unchecked((int)0x2),
        Cyrillic = unchecked((int)0x3),
        Greek = unchecked((int)0x4),
        Turkish = unchecked((int)0x5),
        Hebrew = unchecked((int)0x6),
        Arabic = unchecked((int)0x7),
        Baltic = unchecked((int)0x8),
        Vietnamese = unchecked((int)0x9),
        Default = unchecked((int)0xa),
        Symbol = unchecked((int)0xb),
        Thai = unchecked((int)0xc),
        ShiftJis = unchecked((int)0xd),
        GB2312 = unchecked((int)0xe),
        Hangul = unchecked((int)0xf),
        Big5 = unchecked((int)0x10),
        PC437 = unchecked((int)0x11),
        Oem = unchecked((int)0x12),
        Mac = unchecked((int)0x13),
        Armenian = unchecked((int)0x14),
        Syriac = unchecked((int)0x15),
        Thaana = unchecked((int)0x16),
        Devanagari = unchecked((int)0x17),
        Bengali = unchecked((int)0x18),
        Gurmukhi = unchecked((int)0x19),
        Gujarati = unchecked((int)0x1a),
        Oriya = unchecked((int)0x1b),
        Tamil = unchecked((int)0x1c),
        Telugu = unchecked((int)0x1d),
        Kannada = unchecked((int)0x1e),
        Malayalam = unchecked((int)0x1f),
        Sinhala = unchecked((int)0x20),
        Lao = unchecked((int)0x21),
        Tibetan = unchecked((int)0x22),
        Myanmar = unchecked((int)0x23),
        Georgian = unchecked((int)0x24),
        Jamo = unchecked((int)0x25),
        Ethiopic = unchecked((int)0x26),
        Cherokee = unchecked((int)0x27),
        Aboriginal = unchecked((int)0x28),
        Ogham = unchecked((int)0x29),
        Runic = unchecked((int)0x2a),
        Khmer = unchecked((int)0x2b),
        Mongolian = unchecked((int)0x2c),
        Braille = unchecked((int)0x2d),
        Yi = unchecked((int)0x2e),
        Limbu = unchecked((int)0x2f),
        TaiLe = unchecked((int)0x30),
        NewTaiLue = unchecked((int)0x31),
        SylotiNagri = unchecked((int)0x32),
        Kharoshthi = unchecked((int)0x33),
        Kayahli = unchecked((int)0x34),
        UnicodeSymbol = unchecked((int)0x35),
        Emoji = unchecked((int)0x36),
        Glagolitic = unchecked((int)0x37),
        Lisu = unchecked((int)0x38),
        Vai = unchecked((int)0x39),
        NKo = unchecked((int)0x3a),
        Osmanya = unchecked((int)0x3b),
        PhagsPa = unchecked((int)0x3c),
        Gothic = unchecked((int)0x3d),
        Deseret = unchecked((int)0x3e),
        Tifinagh = unchecked((int)0x3f),
    }
    [FlagsAttribute]
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Text")][global::WinRT.WinRTExposedType(typeof(global::WinRT.EnumTypeDetails<TextSetOptions>))]public enum TextSetOptions : uint
    {
        None = unchecked((uint)0),
        UnicodeBidi = unchecked((uint)0x1),
        Unlink = unchecked((uint)0x8),
        Unhide = unchecked((uint)0x10),
        CheckTextLimit = unchecked((uint)0x20),
        FormatRtf = unchecked((uint)0x2000),
        ApplyRtfDocumentDefaults = unchecked((uint)0x4000),
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Text")][global::WinRT.WinRTExposedType(typeof(global::WinRT.EnumTypeDetails<UnderlineType>))]public enum UnderlineType : int
    {
        Undefined = unchecked((int)0),
        None = unchecked((int)0x1),
        Single = unchecked((int)0x2),
        Words = unchecked((int)0x3),
        Double = unchecked((int)0x4),
        Dotted = unchecked((int)0x5),
        Dash = unchecked((int)0x6),
        DashDot = unchecked((int)0x7),
        DashDotDot = unchecked((int)0x8),
        Wave = unchecked((int)0x9),
        Thick = unchecked((int)0xa),
        Thin = unchecked((int)0xb),
        DoubleWave = unchecked((int)0xc),
        HeavyWave = unchecked((int)0xd),
        LongDash = unchecked((int)0xe),
        ThickDash = unchecked((int)0xf),
        ThickDashDot = unchecked((int)0x10),
        ThickDashDotDot = unchecked((int)0x11),
        ThickDotted = unchecked((int)0x12),
        ThickLongDash = unchecked((int)0x13),
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Text")][global::WinRT.WinRTExposedType(typeof(global::WinRT.EnumTypeDetails<VerticalCharacterAlignment>))]public enum VerticalCharacterAlignment : int
    {
        Top = unchecked((int)0),
        Baseline = unchecked((int)0x1),
        Bottom = unchecked((int)0x2),
    }
}

#pragma warning disable CA1416
namespace ABI.Microsoft.UI.Text
{
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    public struct FontWeights
    {

        public static IObjectReference CreateMarshaler(global::Microsoft.UI.Text.FontWeights obj) => obj is null ? null : MarshalInspectable<global::Microsoft.UI.Text.FontWeights>.CreateMarshaler<IUnknownVftbl>(obj, global::ABI.Microsoft.UI.Text.IFontWeightsMethods.IID);
        public static ObjectReferenceValue CreateMarshaler2(global::Microsoft.UI.Text.FontWeights obj) => MarshalInspectable<object>.CreateMarshaler2(obj, global::ABI.Microsoft.UI.Text.IFontWeightsMethods.IID);
        public static IntPtr GetAbi(IObjectReference value) => value is null ? IntPtr.Zero : MarshalInterfaceHelper<object>.GetAbi(value);
        public static global::Microsoft.UI.Text.FontWeights FromAbi(IntPtr thisPtr) => global::Microsoft.UI.Text.FontWeights.FromAbi(thisPtr);
        public static IntPtr FromManaged(global::Microsoft.UI.Text.FontWeights obj) => obj is null ? IntPtr.Zero : CreateMarshaler2(obj).Detach();
        public static unsafe MarshalInterfaceHelper<global::Microsoft.UI.Text.FontWeights>.MarshalerArray CreateMarshalerArray(global::Microsoft.UI.Text.FontWeights[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Text.FontWeights>.CreateMarshalerArray2(array, (o) => CreateMarshaler2(o));
        public static (int length, IntPtr data) GetAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Text.FontWeights>.GetAbiArray(box);
        public static unsafe global::Microsoft.UI.Text.FontWeights[] FromAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Text.FontWeights>.FromAbiArray(box, FromAbi);
        public static void CopyAbiArray(global::Microsoft.UI.Text.FontWeights[] array, object box) => MarshalInterfaceHelper<global::Microsoft.UI.Text.FontWeights>.CopyAbiArray(array, box, FromAbi);
        public static (int length, IntPtr data) FromManagedArray(global::Microsoft.UI.Text.FontWeights[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Text.FontWeights>.FromManagedArray(array, (o) => FromManaged(o));
        public static void DisposeMarshaler(IObjectReference value) => MarshalInspectable<object>.DisposeMarshaler(value);
        public static void DisposeMarshalerArray(MarshalInterfaceHelper<global::Microsoft.UI.Text.FontWeights>.MarshalerArray array) => MarshalInterfaceHelper<global::Microsoft.UI.Text.FontWeights>.DisposeMarshalerArray(array);
        public static void DisposeAbi(IntPtr abi) => MarshalInspectable<object>.DisposeAbi(abi);
        public static unsafe void DisposeAbiArray(object box) => MarshalInspectable<object>.DisposeAbiArray(box);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    internal sealed class FontWeightsRcwFactoryAttribute : global::WinRT.WinRTImplementationTypeRcwFactoryAttribute
    {
        public override object CreateInstance(global::WinRT.IInspectable inspectable)
            => new global::Microsoft.UI.Text.FontWeights(inspectable.ObjRef);
    }
    internal static class IFontWeightsMethods
    {



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0x40, 0xD0, 0x6C, 0x38, 0x4, 0x54, 0x8D, 0x5A, 0x8B, 0xC7, 0x2C, 0xA9, 0x89, 0xF5, 0xC0, 0x65 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("386CD040-5404-5A8D-8BC7-2CA989F5C065")]
    internal interface IFontWeights : global::Microsoft.UI.Text.IFontWeights
    {
    }
    internal static class IFontWeightsStaticsMethods
    {

        internal static unsafe global::Windows.UI.Text.FontWeight get_Black(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::Windows.UI.Text.FontWeight __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::Windows.UI.Text.FontWeight*, int>**)ThisPtr)[6](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }

        internal static unsafe global::Windows.UI.Text.FontWeight get_Bold(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::Windows.UI.Text.FontWeight __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::Windows.UI.Text.FontWeight*, int>**)ThisPtr)[7](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }

        internal static unsafe global::Windows.UI.Text.FontWeight get_ExtraBlack(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::Windows.UI.Text.FontWeight __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::Windows.UI.Text.FontWeight*, int>**)ThisPtr)[8](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }

        internal static unsafe global::Windows.UI.Text.FontWeight get_ExtraBold(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::Windows.UI.Text.FontWeight __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::Windows.UI.Text.FontWeight*, int>**)ThisPtr)[9](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }

        internal static unsafe global::Windows.UI.Text.FontWeight get_ExtraLight(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::Windows.UI.Text.FontWeight __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::Windows.UI.Text.FontWeight*, int>**)ThisPtr)[10](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }

        internal static unsafe global::Windows.UI.Text.FontWeight get_Light(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::Windows.UI.Text.FontWeight __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::Windows.UI.Text.FontWeight*, int>**)ThisPtr)[11](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }

        internal static unsafe global::Windows.UI.Text.FontWeight get_Medium(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::Windows.UI.Text.FontWeight __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::Windows.UI.Text.FontWeight*, int>**)ThisPtr)[12](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }

        internal static unsafe global::Windows.UI.Text.FontWeight get_Normal(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::Windows.UI.Text.FontWeight __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::Windows.UI.Text.FontWeight*, int>**)ThisPtr)[13](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }

        internal static unsafe global::Windows.UI.Text.FontWeight get_SemiBold(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::Windows.UI.Text.FontWeight __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::Windows.UI.Text.FontWeight*, int>**)ThisPtr)[14](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }

        internal static unsafe global::Windows.UI.Text.FontWeight get_SemiLight(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::Windows.UI.Text.FontWeight __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::Windows.UI.Text.FontWeight*, int>**)ThisPtr)[15](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }

        internal static unsafe global::Windows.UI.Text.FontWeight get_Thin(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::Windows.UI.Text.FontWeight __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::Windows.UI.Text.FontWeight*, int>**)ThisPtr)[16](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0xF6, 0xD, 0x39, 0xCC, 0xB0, 0x76, 0x7, 0x58, 0x8B, 0x9D, 0xE9, 0x49, 0xA4, 0xE6, 0x23, 0xAE };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("CC390DF6-76B0-5807-8B9D-E949A4E623AE")]
    internal interface IFontWeightsStatics : global::Microsoft.UI.Text.IFontWeightsStatics
    {
    }
    public static class ITextCharacterFormatMethods
    {


        public static unsafe void SetClone(IObjectReference _obj, global::Microsoft.UI.Text.ITextCharacterFormat value)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __value = default;
            try
            {
                __value = MarshalInterface<global::Microsoft.UI.Text.ITextCharacterFormat>.CreateMarshaler2(value, global::ABI.Microsoft.UI.Text.ITextCharacterFormatMethods.IID);
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, int>**)ThisPtr)[53](ThisPtr, MarshalInspectable<object>.GetAbi(__value)));
                global::System.GC.KeepAlive(_obj);
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__value);
            }
        }

        public static unsafe global::Microsoft.UI.Text.ITextCharacterFormat GetClone(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[54](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return MarshalInterface<global::Microsoft.UI.Text.ITextCharacterFormat>.FromAbi(__retval);
            }
            finally
            {
                MarshalInterface<global::Microsoft.UI.Text.ITextCharacterFormat>.DisposeAbi(__retval);
            }
        }

        public static unsafe bool IsEqual(IObjectReference _obj, global::Microsoft.UI.Text.ITextCharacterFormat format)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __format = default;
            byte __retval = default;
            try
            {
                __format = MarshalInterface<global::Microsoft.UI.Text.ITextCharacterFormat>.CreateMarshaler2(format, global::ABI.Microsoft.UI.Text.ITextCharacterFormatMethods.IID);
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, byte*, int>**)ThisPtr)[55](ThisPtr, MarshalInspectable<object>.GetAbi(__format), &__retval));
                global::System.GC.KeepAlive(_obj);
                return __retval != 0;
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__format);
            }
        }
        public static unsafe global::Microsoft.UI.Text.FormatEffect get_AllCaps(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::Microsoft.UI.Text.FormatEffect __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::Microsoft.UI.Text.FormatEffect*, int>**)ThisPtr)[6](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }
        public static unsafe void set_AllCaps(IObjectReference _obj, global::Microsoft.UI.Text.FormatEffect value)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::Microsoft.UI.Text.FormatEffect, int>**)ThisPtr)[7](ThisPtr, value));
            global::System.GC.KeepAlive(_obj);
        }

        public static unsafe global::Windows.UI.Color get_BackgroundColor(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::Windows.UI.Color __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::Windows.UI.Color*, int>**)ThisPtr)[8](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }
        public static unsafe void set_BackgroundColor(IObjectReference _obj, global::Windows.UI.Color value)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::Windows.UI.Color, int>**)ThisPtr)[9](ThisPtr, value));
            global::System.GC.KeepAlive(_obj);
        }

        public static unsafe global::Microsoft.UI.Text.FormatEffect get_Bold(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::Microsoft.UI.Text.FormatEffect __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::Microsoft.UI.Text.FormatEffect*, int>**)ThisPtr)[10](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }
        public static unsafe void set_Bold(IObjectReference _obj, global::Microsoft.UI.Text.FormatEffect value)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::Microsoft.UI.Text.FormatEffect, int>**)ThisPtr)[11](ThisPtr, value));
            global::System.GC.KeepAlive(_obj);
        }

        public static unsafe global::Windows.UI.Text.FontStretch get_FontStretch(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::Windows.UI.Text.FontStretch __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::Windows.UI.Text.FontStretch*, int>**)ThisPtr)[12](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }
        public static unsafe void set_FontStretch(IObjectReference _obj, global::Windows.UI.Text.FontStretch value)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::Windows.UI.Text.FontStretch, int>**)ThisPtr)[13](ThisPtr, value));
            global::System.GC.KeepAlive(_obj);
        }

        public static unsafe global::Windows.UI.Text.FontStyle get_FontStyle(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::Windows.UI.Text.FontStyle __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::Windows.UI.Text.FontStyle*, int>**)ThisPtr)[14](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }
        public static unsafe void set_FontStyle(IObjectReference _obj, global::Windows.UI.Text.FontStyle value)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::Windows.UI.Text.FontStyle, int>**)ThisPtr)[15](ThisPtr, value));
            global::System.GC.KeepAlive(_obj);
        }

        public static unsafe global::Windows.UI.Color get_ForegroundColor(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::Windows.UI.Color __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::Windows.UI.Color*, int>**)ThisPtr)[16](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }
        public static unsafe void set_ForegroundColor(IObjectReference _obj, global::Windows.UI.Color value)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::Windows.UI.Color, int>**)ThisPtr)[17](ThisPtr, value));
            global::System.GC.KeepAlive(_obj);
        }

        public static unsafe global::Microsoft.UI.Text.FormatEffect get_Hidden(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::Microsoft.UI.Text.FormatEffect __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::Microsoft.UI.Text.FormatEffect*, int>**)ThisPtr)[18](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }
        public static unsafe void set_Hidden(IObjectReference _obj, global::Microsoft.UI.Text.FormatEffect value)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::Microsoft.UI.Text.FormatEffect, int>**)ThisPtr)[19](ThisPtr, value));
            global::System.GC.KeepAlive(_obj);
        }

        public static unsafe global::Microsoft.UI.Text.FormatEffect get_Italic(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::Microsoft.UI.Text.FormatEffect __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::Microsoft.UI.Text.FormatEffect*, int>**)ThisPtr)[20](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }
        public static unsafe void set_Italic(IObjectReference _obj, global::Microsoft.UI.Text.FormatEffect value)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::Microsoft.UI.Text.FormatEffect, int>**)ThisPtr)[21](ThisPtr, value));
            global::System.GC.KeepAlive(_obj);
        }

        public static unsafe float get_Kerning(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            float __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, float*, int>**)ThisPtr)[22](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }
        public static unsafe void set_Kerning(IObjectReference _obj, float value)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, float, int>**)ThisPtr)[23](ThisPtr, value));
            global::System.GC.KeepAlive(_obj);
        }

        public static unsafe string get_LanguageTag(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[24](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return MarshalString.FromAbi(__retval);
            }
            finally
            {
                MarshalString.DisposeAbi(__retval);
            }
        }
        public static unsafe void set_LanguageTag(IObjectReference _obj, string value)
        {
            var ThisPtr = _obj.ThisPtr;

            MarshalString.Pinnable __value = new(value);
            fixed(void* ___value = __value)
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, int>**)ThisPtr)[25](ThisPtr, MarshalString.GetAbi(ref __value)));
                global::System.GC.KeepAlive(_obj);
            }
        }

        public static unsafe global::Microsoft.UI.Text.LinkType get_LinkType(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::Microsoft.UI.Text.LinkType __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::Microsoft.UI.Text.LinkType*, int>**)ThisPtr)[26](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }

        public static unsafe string get_Name(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[27](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return MarshalString.FromAbi(__retval);
            }
            finally
            {
                MarshalString.DisposeAbi(__retval);
            }
        }
        public static unsafe void set_Name(IObjectReference _obj, string value)
        {
            var ThisPtr = _obj.ThisPtr;

            MarshalString.Pinnable __value = new(value);
            fixed(void* ___value = __value)
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, int>**)ThisPtr)[28](ThisPtr, MarshalString.GetAbi(ref __value)));
                global::System.GC.KeepAlive(_obj);
            }
        }

        public static unsafe global::Microsoft.UI.Text.FormatEffect get_Outline(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::Microsoft.UI.Text.FormatEffect __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::Microsoft.UI.Text.FormatEffect*, int>**)ThisPtr)[29](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }
        public static unsafe void set_Outline(IObjectReference _obj, global::Microsoft.UI.Text.FormatEffect value)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::Microsoft.UI.Text.FormatEffect, int>**)ThisPtr)[30](ThisPtr, value));
            global::System.GC.KeepAlive(_obj);
        }

        public static unsafe float get_Position(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            float __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, float*, int>**)ThisPtr)[31](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }
        public static unsafe void set_Position(IObjectReference _obj, float value)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, float, int>**)ThisPtr)[32](ThisPtr, value));
            global::System.GC.KeepAlive(_obj);
        }

        public static unsafe global::Microsoft.UI.Text.FormatEffect get_ProtectedText(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::Microsoft.UI.Text.FormatEffect __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::Microsoft.UI.Text.FormatEffect*, int>**)ThisPtr)[33](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }
        public static unsafe void set_ProtectedText(IObjectReference _obj, global::Microsoft.UI.Text.FormatEffect value)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::Microsoft.UI.Text.FormatEffect, int>**)ThisPtr)[34](ThisPtr, value));
            global::System.GC.KeepAlive(_obj);
        }

        public static unsafe float get_Size(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            float __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, float*, int>**)ThisPtr)[35](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }
        public static unsafe void set_Size(IObjectReference _obj, float value)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, float, int>**)ThisPtr)[36](ThisPtr, value));
            global::System.GC.KeepAlive(_obj);
        }

        public static unsafe global::Microsoft.UI.Text.FormatEffect get_SmallCaps(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::Microsoft.UI.Text.FormatEffect __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::Microsoft.UI.Text.FormatEffect*, int>**)ThisPtr)[37](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }
        public static unsafe void set_SmallCaps(IObjectReference _obj, global::Microsoft.UI.Text.FormatEffect value)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::Microsoft.UI.Text.FormatEffect, int>**)ThisPtr)[38](ThisPtr, value));
            global::System.GC.KeepAlive(_obj);
        }

        public static unsafe float get_Spacing(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            float __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, float*, int>**)ThisPtr)[39](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }
        public static unsafe void set_Spacing(IObjectReference _obj, float value)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, float, int>**)ThisPtr)[40](ThisPtr, value));
            global::System.GC.KeepAlive(_obj);
        }

        public static unsafe global::Microsoft.UI.Text.FormatEffect get_Strikethrough(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::Microsoft.UI.Text.FormatEffect __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::Microsoft.UI.Text.FormatEffect*, int>**)ThisPtr)[41](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }
        public static unsafe void set_Strikethrough(IObjectReference _obj, global::Microsoft.UI.Text.FormatEffect value)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::Microsoft.UI.Text.FormatEffect, int>**)ThisPtr)[42](ThisPtr, value));
            global::System.GC.KeepAlive(_obj);
        }

        public static unsafe global::Microsoft.UI.Text.FormatEffect get_Subscript(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::Microsoft.UI.Text.FormatEffect __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::Microsoft.UI.Text.FormatEffect*, int>**)ThisPtr)[43](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }
        public static unsafe void set_Subscript(IObjectReference _obj, global::Microsoft.UI.Text.FormatEffect value)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::Microsoft.UI.Text.FormatEffect, int>**)ThisPtr)[44](ThisPtr, value));
            global::System.GC.KeepAlive(_obj);
        }

        public static unsafe global::Microsoft.UI.Text.FormatEffect get_Superscript(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::Microsoft.UI.Text.FormatEffect __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::Microsoft.UI.Text.FormatEffect*, int>**)ThisPtr)[45](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }
        public static unsafe void set_Superscript(IObjectReference _obj, global::Microsoft.UI.Text.FormatEffect value)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::Microsoft.UI.Text.FormatEffect, int>**)ThisPtr)[46](ThisPtr, value));
            global::System.GC.KeepAlive(_obj);
        }

        public static unsafe global::Microsoft.UI.Text.TextScript get_TextScript(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::Microsoft.UI.Text.TextScript __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::Microsoft.UI.Text.TextScript*, int>**)ThisPtr)[47](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }
        public static unsafe void set_TextScript(IObjectReference _obj, global::Microsoft.UI.Text.TextScript value)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::Microsoft.UI.Text.TextScript, int>**)ThisPtr)[48](ThisPtr, value));
            global::System.GC.KeepAlive(_obj);
        }

        public static unsafe global::Microsoft.UI.Text.UnderlineType get_Underline(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::Microsoft.UI.Text.UnderlineType __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::Microsoft.UI.Text.UnderlineType*, int>**)ThisPtr)[49](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }
        public static unsafe void set_Underline(IObjectReference _obj, global::Microsoft.UI.Text.UnderlineType value)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::Microsoft.UI.Text.UnderlineType, int>**)ThisPtr)[50](ThisPtr, value));
            global::System.GC.KeepAlive(_obj);
        }

        public static unsafe int get_Weight(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            int __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, int*, int>**)ThisPtr)[51](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }
        public static unsafe void set_Weight(IObjectReference _obj, int value)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, int, int>**)ThisPtr)[52](ThisPtr, value));
            global::System.GC.KeepAlive(_obj);
        }



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0x50, 0x0, 0x71, 0xF5, 0xE5, 0x98, 0x88, 0x57, 0xB1, 0xE3, 0x32, 0x19, 0x1E, 0xEB, 0xF9, 0x4D };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

        public static global::System.IntPtr AbiToProjectionVftablePtr => ITextCharacterFormat.AbiToProjectionVftablePtr;

    }
    [DynamicInterfaceCastableImplementation]
    [Guid("F5710050-98E5-5788-B1E3-32191EEBF94D")]
    internal unsafe interface ITextCharacterFormat : global::Microsoft.UI.Text.ITextCharacterFormat
    {

        public static readonly IntPtr AbiToProjectionVftablePtr;
        static unsafe ITextCharacterFormat()
        {
            AbiToProjectionVftablePtr = ComWrappersSupport.AllocateVtableMemory(typeof(ITextCharacterFormat), sizeof(IInspectable.Vftbl) + sizeof(IntPtr) * 50);
            *(IInspectable.Vftbl*)AbiToProjectionVftablePtr = IInspectable.Vftbl.AbiToProjectionVftable;
            ((delegate* unmanaged[Stdcall]<IntPtr, global::Microsoft.UI.Text.FormatEffect*, int>*)AbiToProjectionVftablePtr)[6] = &Do_Abi_get_AllCaps_0;
            ((delegate* unmanaged[Stdcall]<IntPtr, global::Microsoft.UI.Text.FormatEffect, int>*)AbiToProjectionVftablePtr)[7] = &Do_Abi_put_AllCaps_1;
            ((delegate* unmanaged[Stdcall]<IntPtr, global::Windows.UI.Color*, int>*)AbiToProjectionVftablePtr)[8] = &Do_Abi_get_BackgroundColor_2;
            ((delegate* unmanaged[Stdcall]<IntPtr, global::Windows.UI.Color, int>*)AbiToProjectionVftablePtr)[9] = &Do_Abi_put_BackgroundColor_3;
            ((delegate* unmanaged[Stdcall]<IntPtr, global::Microsoft.UI.Text.FormatEffect*, int>*)AbiToProjectionVftablePtr)[10] = &Do_Abi_get_Bold_4;
            ((delegate* unmanaged[Stdcall]<IntPtr, global::Microsoft.UI.Text.FormatEffect, int>*)AbiToProjectionVftablePtr)[11] = &Do_Abi_put_Bold_5;
            ((delegate* unmanaged[Stdcall]<IntPtr, global::Windows.UI.Text.FontStretch*, int>*)AbiToProjectionVftablePtr)[12] = &Do_Abi_get_FontStretch_6;
            ((delegate* unmanaged[Stdcall]<IntPtr, global::Windows.UI.Text.FontStretch, int>*)AbiToProjectionVftablePtr)[13] = &Do_Abi_put_FontStretch_7;
            ((delegate* unmanaged[Stdcall]<IntPtr, global::Windows.UI.Text.FontStyle*, int>*)AbiToProjectionVftablePtr)[14] = &Do_Abi_get_FontStyle_8;
            ((delegate* unmanaged[Stdcall]<IntPtr, global::Windows.UI.Text.FontStyle, int>*)AbiToProjectionVftablePtr)[15] = &Do_Abi_put_FontStyle_9;
            ((delegate* unmanaged[Stdcall]<IntPtr, global::Windows.UI.Color*, int>*)AbiToProjectionVftablePtr)[16] = &Do_Abi_get_ForegroundColor_10;
            ((delegate* unmanaged[Stdcall]<IntPtr, global::Windows.UI.Color, int>*)AbiToProjectionVftablePtr)[17] = &Do_Abi_put_ForegroundColor_11;
            ((delegate* unmanaged[Stdcall]<IntPtr, global::Microsoft.UI.Text.FormatEffect*, int>*)AbiToProjectionVftablePtr)[18] = &Do_Abi_get_Hidden_12;
            ((delegate* unmanaged[Stdcall]<IntPtr, global::Microsoft.UI.Text.FormatEffect, int>*)AbiToProjectionVftablePtr)[19] = &Do_Abi_put_Hidden_13;
            ((delegate* unmanaged[Stdcall]<IntPtr, global::Microsoft.UI.Text.FormatEffect*, int>*)AbiToProjectionVftablePtr)[20] = &Do_Abi_get_Italic_14;
            ((delegate* unmanaged[Stdcall]<IntPtr, global::Microsoft.UI.Text.FormatEffect, int>*)AbiToProjectionVftablePtr)[21] = &Do_Abi_put_Italic_15;
            ((delegate* unmanaged[Stdcall]<IntPtr, float*, int>*)AbiToProjectionVftablePtr)[22] = &Do_Abi_get_Kerning_16;
            ((delegate* unmanaged[Stdcall]<IntPtr, float, int>*)AbiToProjectionVftablePtr)[23] = &Do_Abi_put_Kerning_17;
            ((delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>*)AbiToProjectionVftablePtr)[24] = &Do_Abi_get_LanguageTag_18;
            ((delegate* unmanaged[Stdcall]<IntPtr, IntPtr, int>*)AbiToProjectionVftablePtr)[25] = &Do_Abi_put_LanguageTag_19;
            ((delegate* unmanaged[Stdcall]<IntPtr, global::Microsoft.UI.Text.LinkType*, int>*)AbiToProjectionVftablePtr)[26] = &Do_Abi_get_LinkType_20;
            ((delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>*)AbiToProjectionVftablePtr)[27] = &Do_Abi_get_Name_21;
            ((delegate* unmanaged[Stdcall]<IntPtr, IntPtr, int>*)AbiToProjectionVftablePtr)[28] = &Do_Abi_put_Name_22;
            ((delegate* unmanaged[Stdcall]<IntPtr, global::Microsoft.UI.Text.FormatEffect*, int>*)AbiToProjectionVftablePtr)[29] = &Do_Abi_get_Outline_23;
            ((delegate* unmanaged[Stdcall]<IntPtr, global::Microsoft.UI.Text.FormatEffect, int>*)AbiToProjectionVftablePtr)[30] = &Do_Abi_put_Outline_24;
            ((delegate* unmanaged[Stdcall]<IntPtr, float*, int>*)AbiToProjectionVftablePtr)[31] = &Do_Abi_get_Position_25;
            ((delegate* unmanaged[Stdcall]<IntPtr, float, int>*)AbiToProjectionVftablePtr)[32] = &Do_Abi_put_Position_26;
            ((delegate* unmanaged[Stdcall]<IntPtr, global::Microsoft.UI.Text.FormatEffect*, int>*)AbiToProjectionVftablePtr)[33] = &Do_Abi_get_ProtectedText_27;
            ((delegate* unmanaged[Stdcall]<IntPtr, global::Microsoft.UI.Text.FormatEffect, int>*)AbiToProjectionVftablePtr)[34] = &Do_Abi_put_ProtectedText_28;
            ((delegate* unmanaged[Stdcall]<IntPtr, float*, int>*)AbiToProjectionVftablePtr)[35] = &Do_Abi_get_Size_29;
            ((delegate* unmanaged[Stdcall]<IntPtr, float, int>*)AbiToProjectionVftablePtr)[36] = &Do_Abi_put_Size_30;
            ((delegate* unmanaged[Stdcall]<IntPtr, global::Microsoft.UI.Text.FormatEffect*, int>*)AbiToProjectionVftablePtr)[37] = &Do_Abi_get_SmallCaps_31;
            ((delegate* unmanaged[Stdcall]<IntPtr, global::Microsoft.UI.Text.FormatEffect, int>*)AbiToProjectionVftablePtr)[38] = &Do_Abi_put_SmallCaps_32;
            ((delegate* unmanaged[Stdcall]<IntPtr, float*, int>*)AbiToProjectionVftablePtr)[39] = &Do_Abi_get_Spacing_33;
            ((delegate* unmanaged[Stdcall]<IntPtr, float, int>*)AbiToProjectionVftablePtr)[40] = &Do_Abi_put_Spacing_34;
            ((delegate* unmanaged[Stdcall]<IntPtr, global::Microsoft.UI.Text.FormatEffect*, int>*)AbiToProjectionVftablePtr)[41] = &Do_Abi_get_Strikethrough_35;
            ((delegate* unmanaged[Stdcall]<IntPtr, global::Microsoft.UI.Text.FormatEffect, int>*)AbiToProjectionVftablePtr)[42] = &Do_Abi_put_Strikethrough_36;
            ((delegate* unmanaged[Stdcall]<IntPtr, global::Microsoft.UI.Text.FormatEffect*, int>*)AbiToProjectionVftablePtr)[43] = &Do_Abi_get_Subscript_37;
            ((delegate* unmanaged[Stdcall]<IntPtr, global::Microsoft.UI.Text.FormatEffect, int>*)AbiToProjectionVftablePtr)[44] = &Do_Abi_put_Subscript_38;
            ((delegate* unmanaged[Stdcall]<IntPtr, global::Microsoft.UI.Text.FormatEffect*, int>*)AbiToProjectionVftablePtr)[45] = &Do_Abi_get_Superscript_39;
            ((delegate* unmanaged[Stdcall]<IntPtr, global::Microsoft.UI.Text.FormatEffect, int>*)AbiToProjectionVftablePtr)[46] = &Do_Abi_put_Superscript_40;
            ((delegate* unmanaged[Stdcall]<IntPtr, global::Microsoft.UI.Text.TextScript*, int>*)AbiToProjectionVftablePtr)[47] = &Do_Abi_get_TextScript_41;
            ((delegate* unmanaged[Stdcall]<IntPtr, global::Microsoft.UI.Text.TextScript, int>*)AbiToProjectionVftablePtr)[48] = &Do_Abi_put_TextScript_42;
            ((delegate* unmanaged[Stdcall]<IntPtr, global::Microsoft.UI.Text.UnderlineType*, int>*)AbiToProjectionVftablePtr)[49] = &Do_Abi_get_Underline_43;
            ((delegate* unmanaged[Stdcall]<IntPtr, global::Microsoft.UI.Text.UnderlineType, int>*)AbiToProjectionVftablePtr)[50] = &Do_Abi_put_Underline_44;
            ((delegate* unmanaged[Stdcall]<IntPtr, int*, int>*)AbiToProjectionVftablePtr)[51] = &Do_Abi_get_Weight_45;
            ((delegate* unmanaged[Stdcall]<IntPtr, int, int>*)AbiToProjectionVftablePtr)[52] = &Do_Abi_put_Weight_46;
            ((delegate* unmanaged[Stdcall]<IntPtr, IntPtr, int>*)AbiToProjectionVftablePtr)[53] = &Do_Abi_SetClone_47;
            ((delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>*)AbiToProjectionVftablePtr)[54] = &Do_Abi_GetClone_48;
            ((delegate* unmanaged[Stdcall]<IntPtr, IntPtr, byte*, int>*)AbiToProjectionVftablePtr)[55] = &Do_Abi_IsEqual_49;
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvStdcall) })]
        private static unsafe int Do_Abi_SetClone_47(IntPtr thisPtr, IntPtr value)
        {



            try
            {
                global::WinRT.ComWrappersSupport.FindObject<global::Microsoft.UI.Text.ITextCharacterFormat>(thisPtr).SetClone(MarshalInterface<global::Microsoft.UI.Text.ITextCharacterFormat>.FromAbi(value));

            }
            catch (Exception __exception__)
            {
                global::WinRT.ExceptionHelpers.SetErrorInfo(__exception__);
                return global::WinRT.ExceptionHelpers.GetHRForException(__exception__);
            }
            return 0;
        }
        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvStdcall) })]
        private static unsafe int Do_Abi_GetClone_48(IntPtr thisPtr, IntPtr* result)
        {

            global::Microsoft.UI.Text.ITextCharacterFormat __result = default;

            *result = default;

            try
            {
                __result = global::WinRT.ComWrappersSupport.FindObject<global::Microsoft.UI.Text.ITextCharacterFormat>(thisPtr).GetClone();
                *result = MarshalInterface<global::Microsoft.UI.Text.ITextCharacterFormat>.FromManaged(__result);

            }
            catch (Exception __exception__)
            {
                global::WinRT.ExceptionHelpers.SetErrorInfo(__exception__);
                return global::WinRT.ExceptionHelpers.GetHRForException(__exception__);
            }
            return 0;
        }
        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvStdcall) })]
        private static unsafe int Do_Abi_IsEqual_49(IntPtr thisPtr, IntPtr format, byte* result)
        {

            bool __result = default;

            *result = default;

            try
            {
                __result = global::WinRT.ComWrappersSupport.FindObject<global::Microsoft.UI.Text.ITextCharacterFormat>(thisPtr).IsEqual(MarshalInterface<global::Microsoft.UI.Text.ITextCharacterFormat>.FromAbi(format));
                *result = (byte)(__result ? 1 : 0);

            }
            catch (Exception __exception__)
            {
                global::WinRT.ExceptionHelpers.SetErrorInfo(__exception__);
                return global::WinRT.ExceptionHelpers.GetHRForException(__exception__);
            }
            return 0;
        }
        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvStdcall) })]
        private static unsafe int Do_Abi_put_AllCaps_1(IntPtr thisPtr, global::Microsoft.UI.Text.FormatEffect value)
        {



            try
            {
                global::WinRT.ComWrappersSupport.FindObject<global::Microsoft.UI.Text.ITextCharacterFormat>(thisPtr).AllCaps = value;

            }
            catch (Exception __exception__)
            {
                global::WinRT.ExceptionHelpers.SetErrorInfo(__exception__);
                return global::WinRT.ExceptionHelpers.GetHRForException(__exception__);
            }
            return 0;
        }
        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvStdcall) })]
        private static unsafe int Do_Abi_get_AllCaps_0(IntPtr thisPtr, global::Microsoft.UI.Text.FormatEffect* value)
        {

            global::Microsoft.UI.Text.FormatEffect __value = default;

            *value = default;

            try
            {
                __value = global::WinRT.ComWrappersSupport.FindObject<global::Microsoft.UI.Text.ITextCharacterFormat>(thisPtr).AllCaps;
                *value = __value;

            }
            catch (Exception __exception__)
            {
                global::WinRT.ExceptionHelpers.SetErrorInfo(__exception__);
                return global::WinRT.ExceptionHelpers.GetHRForException(__exception__);
            }
            return 0;
        }
        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvStdcall) })]
        private static unsafe int Do_Abi_put_BackgroundColor_3(IntPtr thisPtr, global::Windows.UI.Color value)
        {



            try
            {
                global::WinRT.ComWrappersSupport.FindObject<global::Microsoft.UI.Text.ITextCharacterFormat>(thisPtr).BackgroundColor = value;

            }
            catch (Exception __exception__)
            {
                global::WinRT.ExceptionHelpers.SetErrorInfo(__exception__);
                return global::WinRT.ExceptionHelpers.GetHRForException(__exception__);
            }
            return 0;
        }
        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvStdcall) })]
        private static unsafe int Do_Abi_get_BackgroundColor_2(IntPtr thisPtr, global::Windows.UI.Color* value)
        {

            global::Windows.UI.Color __value = default;

            *value = default;

            try
            {
                __value = global::WinRT.ComWrappersSupport.FindObject<global::Microsoft.UI.Text.ITextCharacterFormat>(thisPtr).BackgroundColor;
                *value = __value;

            }
            catch (Exception __exception__)
            {
                global::WinRT.ExceptionHelpers.SetErrorInfo(__exception__);
                return global::WinRT.ExceptionHelpers.GetHRForException(__exception__);
            }
            return 0;
        }
        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvStdcall) })]
        private static unsafe int Do_Abi_put_Bold_5(IntPtr thisPtr, global::Microsoft.UI.Text.FormatEffect value)
        {



            try
            {
                global::WinRT.ComWrappersSupport.FindObject<global::Microsoft.UI.Text.ITextCharacterFormat>(thisPtr).Bold = value;

            }
            catch (Exception __exception__)
            {
                global::WinRT.ExceptionHelpers.SetErrorInfo(__exception__);
                return global::WinRT.ExceptionHelpers.GetHRForException(__exception__);
            }
            return 0;
        }
        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvStdcall) })]
        private static unsafe int Do_Abi_get_Bold_4(IntPtr thisPtr, global::Microsoft.UI.Text.FormatEffect* value)
        {

            global::Microsoft.UI.Text.FormatEffect __value = default;

            *value = default;

            try
            {
                __value = global::WinRT.ComWrappersSupport.FindObject<global::Microsoft.UI.Text.ITextCharacterFormat>(thisPtr).Bold;
                *value = __value;

            }
            catch (Exception __exception__)
            {
                global::WinRT.ExceptionHelpers.SetErrorInfo(__exception__);
                return global::WinRT.ExceptionHelpers.GetHRForException(__exception__);
            }
            return 0;
        }
        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvStdcall) })]
        private static unsafe int Do_Abi_put_FontStretch_7(IntPtr thisPtr, global::Windows.UI.Text.FontStretch value)
        {



            try
            {
                global::WinRT.ComWrappersSupport.FindObject<global::Microsoft.UI.Text.ITextCharacterFormat>(thisPtr).FontStretch = value;

            }
            catch (Exception __exception__)
            {
                global::WinRT.ExceptionHelpers.SetErrorInfo(__exception__);
                return global::WinRT.ExceptionHelpers.GetHRForException(__exception__);
            }
            return 0;
        }
        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvStdcall) })]
        private static unsafe int Do_Abi_get_FontStretch_6(IntPtr thisPtr, global::Windows.UI.Text.FontStretch* value)
        {

            global::Windows.UI.Text.FontStretch __value = default;

            *value = default;

            try
            {
                __value = global::WinRT.ComWrappersSupport.FindObject<global::Microsoft.UI.Text.ITextCharacterFormat>(thisPtr).FontStretch;
                *value = __value;

            }
            catch (Exception __exception__)
            {
                global::WinRT.ExceptionHelpers.SetErrorInfo(__exception__);
                return global::WinRT.ExceptionHelpers.GetHRForException(__exception__);
            }
            return 0;
        }
        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvStdcall) })]
        private static unsafe int Do_Abi_put_FontStyle_9(IntPtr thisPtr, global::Windows.UI.Text.FontStyle value)
        {



            try
            {
                global::WinRT.ComWrappersSupport.FindObject<global::Microsoft.UI.Text.ITextCharacterFormat>(thisPtr).FontStyle = value;

            }
            catch (Exception __exception__)
            {
                global::WinRT.ExceptionHelpers.SetErrorInfo(__exception__);
                return global::WinRT.ExceptionHelpers.GetHRForException(__exception__);
            }
            return 0;
        }
        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvStdcall) })]
        private static unsafe int Do_Abi_get_FontStyle_8(IntPtr thisPtr, global::Windows.UI.Text.FontStyle* value)
        {

            global::Windows.UI.Text.FontStyle __value = default;

            *value = default;

            try
            {
                __value = global::WinRT.ComWrappersSupport.FindObject<global::Microsoft.UI.Text.ITextCharacterFormat>(thisPtr).FontStyle;
                *value = __value;

            }
            catch (Exception __exception__)
            {
                global::WinRT.ExceptionHelpers.SetErrorInfo(__exception__);
                return global::WinRT.ExceptionHelpers.GetHRForException(__exception__);
            }
            return 0;
        }
        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvStdcall) })]
        private static unsafe int Do_Abi_put_ForegroundColor_11(IntPtr thisPtr, global::Windows.UI.Color value)
        {



            try
            {
                global::WinRT.ComWrappersSupport.FindObject<global::Microsoft.UI.Text.ITextCharacterFormat>(thisPtr).ForegroundColor = value;

            }
            catch (Exception __exception__)
            {
                global::WinRT.ExceptionHelpers.SetErrorInfo(__exception__);
                return global::WinRT.ExceptionHelpers.GetHRForException(__exception__);
            }
            return 0;
        }
        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvStdcall) })]
        private static unsafe int Do_Abi_get_ForegroundColor_10(IntPtr thisPtr, global::Windows.UI.Color* value)
        {

            global::Windows.UI.Color __value = default;

            *value = default;

            try
            {
                __value = global::WinRT.ComWrappersSupport.FindObject<global::Microsoft.UI.Text.ITextCharacterFormat>(thisPtr).ForegroundColor;
                *value = __value;

            }
            catch (Exception __exception__)
            {
                global::WinRT.ExceptionHelpers.SetErrorInfo(__exception__);
                return global::WinRT.ExceptionHelpers.GetHRForException(__exception__);
            }
            return 0;
        }
        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvStdcall) })]
        private static unsafe int Do_Abi_put_Hidden_13(IntPtr thisPtr, global::Microsoft.UI.Text.FormatEffect value)
        {



            try
            {
                global::WinRT.ComWrappersSupport.FindObject<global::Microsoft.UI.Text.ITextCharacterFormat>(thisPtr).Hidden = value;

            }
            catch (Exception __exception__)
            {
                global::WinRT.ExceptionHelpers.SetErrorInfo(__exception__);
                return global::WinRT.ExceptionHelpers.GetHRForException(__exception__);
            }
            return 0;
        }
        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvStdcall) })]
        private static unsafe int Do_Abi_get_Hidden_12(IntPtr thisPtr, global::Microsoft.UI.Text.FormatEffect* value)
        {

            global::Microsoft.UI.Text.FormatEffect __value = default;

            *value = default;

            try
            {
                __value = global::WinRT.ComWrappersSupport.FindObject<global::Microsoft.UI.Text.ITextCharacterFormat>(thisPtr).Hidden;
                *value = __value;

            }
            catch (Exception __exception__)
            {
                global::WinRT.ExceptionHelpers.SetErrorInfo(__exception__);
                return global::WinRT.ExceptionHelpers.GetHRForException(__exception__);
            }
            return 0;
        }
        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvStdcall) })]
        private static unsafe int Do_Abi_put_Italic_15(IntPtr thisPtr, global::Microsoft.UI.Text.FormatEffect value)
        {



            try
            {
                global::WinRT.ComWrappersSupport.FindObject<global::Microsoft.UI.Text.ITextCharacterFormat>(thisPtr).Italic = value;

            }
            catch (Exception __exception__)
            {
                global::WinRT.ExceptionHelpers.SetErrorInfo(__exception__);
                return global::WinRT.ExceptionHelpers.GetHRForException(__exception__);
            }
            return 0;
        }
        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvStdcall) })]
        private static unsafe int Do_Abi_get_Italic_14(IntPtr thisPtr, global::Microsoft.UI.Text.FormatEffect* value)
        {

            global::Microsoft.UI.Text.FormatEffect __value = default;

            *value = default;

            try
            {
                __value = global::WinRT.ComWrappersSupport.FindObject<global::Microsoft.UI.Text.ITextCharacterFormat>(thisPtr).Italic;
                *value = __value;

            }
            catch (Exception __exception__)
            {
                global::WinRT.ExceptionHelpers.SetErrorInfo(__exception__);
                return global::WinRT.ExceptionHelpers.GetHRForException(__exception__);
            }
            return 0;
        }
        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvStdcall) })]
        private static unsafe int Do_Abi_put_Kerning_17(IntPtr thisPtr, float value)
        {



            try
            {
                global::WinRT.ComWrappersSupport.FindObject<global::Microsoft.UI.Text.ITextCharacterFormat>(thisPtr).Kerning = value;

            }
            catch (Exception __exception__)
            {
                global::WinRT.ExceptionHelpers.SetErrorInfo(__exception__);
                return global::WinRT.ExceptionHelpers.GetHRForException(__exception__);
            }
            return 0;
        }
        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvStdcall) })]
        private static unsafe int Do_Abi_get_Kerning_16(IntPtr thisPtr, float* value)
        {

            float __value = default;

            *value = default;

            try
            {
                __value = global::WinRT.ComWrappersSupport.FindObject<global::Microsoft.UI.Text.ITextCharacterFormat>(thisPtr).Kerning;
                *value = __value;

            }
            catch (Exception __exception__)
            {
                global::WinRT.ExceptionHelpers.SetErrorInfo(__exception__);
                return global::WinRT.ExceptionHelpers.GetHRForException(__exception__);
            }
            return 0;
        }
        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvStdcall) })]
        private static unsafe int Do_Abi_put_LanguageTag_19(IntPtr thisPtr, IntPtr value)
        {



            try
            {
                global::WinRT.ComWrappersSupport.FindObject<global::Microsoft.UI.Text.ITextCharacterFormat>(thisPtr).LanguageTag = MarshalString.FromAbi(value);

            }
            catch (Exception __exception__)
            {
                global::WinRT.ExceptionHelpers.SetErrorInfo(__exception__);
                return global::WinRT.ExceptionHelpers.GetHRForException(__exception__);
            }
            return 0;
        }
        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvStdcall) })]
        private static unsafe int Do_Abi_get_LanguageTag_18(IntPtr thisPtr, IntPtr* value)
        {

            string __value = default;

            *value = default;

            try
            {
                __value = global::WinRT.ComWrappersSupport.FindObject<global::Microsoft.UI.Text.ITextCharacterFormat>(thisPtr).LanguageTag;
                *value = MarshalString.FromManaged(__value);

            }
            catch (Exception __exception__)
            {
                global::WinRT.ExceptionHelpers.SetErrorInfo(__exception__);
                return global::WinRT.ExceptionHelpers.GetHRForException(__exception__);
            }
            return 0;
        }
        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvStdcall) })]
        private static unsafe int Do_Abi_get_LinkType_20(IntPtr thisPtr, global::Microsoft.UI.Text.LinkType* value)
        {

            global::Microsoft.UI.Text.LinkType __value = default;

            *value = default;

            try
            {
                __value = global::WinRT.ComWrappersSupport.FindObject<global::Microsoft.UI.Text.ITextCharacterFormat>(thisPtr).LinkType;
                *value = __value;

            }
            catch (Exception __exception__)
            {
                global::WinRT.ExceptionHelpers.SetErrorInfo(__exception__);
                return global::WinRT.ExceptionHelpers.GetHRForException(__exception__);
            }
            return 0;
        }
        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvStdcall) })]
        private static unsafe int Do_Abi_put_Name_22(IntPtr thisPtr, IntPtr value)
        {



            try
            {
                global::WinRT.ComWrappersSupport.FindObject<global::Microsoft.UI.Text.ITextCharacterFormat>(thisPtr).Name = MarshalString.FromAbi(value);

            }
            catch (Exception __exception__)
            {
                global::WinRT.ExceptionHelpers.SetErrorInfo(__exception__);
                return global::WinRT.ExceptionHelpers.GetHRForException(__exception__);
            }
            return 0;
        }
        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvStdcall) })]
        private static unsafe int Do_Abi_get_Name_21(IntPtr thisPtr, IntPtr* value)
        {

            string __value = default;

            *value = default;

            try
            {
                __value = global::WinRT.ComWrappersSupport.FindObject<global::Microsoft.UI.Text.ITextCharacterFormat>(thisPtr).Name;
                *value = MarshalString.FromManaged(__value);

            }
            catch (Exception __exception__)
            {
                global::WinRT.ExceptionHelpers.SetErrorInfo(__exception__);
                return global::WinRT.ExceptionHelpers.GetHRForException(__exception__);
            }
            return 0;
        }
        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvStdcall) })]
        private static unsafe int Do_Abi_put_Outline_24(IntPtr thisPtr, global::Microsoft.UI.Text.FormatEffect value)
        {



            try
            {
                global::WinRT.ComWrappersSupport.FindObject<global::Microsoft.UI.Text.ITextCharacterFormat>(thisPtr).Outline = value;

            }
            catch (Exception __exception__)
            {
                global::WinRT.ExceptionHelpers.SetErrorInfo(__exception__);
                return global::WinRT.ExceptionHelpers.GetHRForException(__exception__);
            }
            return 0;
        }
        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvStdcall) })]
        private static unsafe int Do_Abi_get_Outline_23(IntPtr thisPtr, global::Microsoft.UI.Text.FormatEffect* value)
        {

            global::Microsoft.UI.Text.FormatEffect __value = default;

            *value = default;

            try
            {
                __value = global::WinRT.ComWrappersSupport.FindObject<global::Microsoft.UI.Text.ITextCharacterFormat>(thisPtr).Outline;
                *value = __value;

            }
            catch (Exception __exception__)
            {
                global::WinRT.ExceptionHelpers.SetErrorInfo(__exception__);
                return global::WinRT.ExceptionHelpers.GetHRForException(__exception__);
            }
            return 0;
        }
        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvStdcall) })]
        private static unsafe int Do_Abi_put_Position_26(IntPtr thisPtr, float value)
        {



            try
            {
                global::WinRT.ComWrappersSupport.FindObject<global::Microsoft.UI.Text.ITextCharacterFormat>(thisPtr).Position = value;

            }
            catch (Exception __exception__)
            {
                global::WinRT.ExceptionHelpers.SetErrorInfo(__exception__);
                return global::WinRT.ExceptionHelpers.GetHRForException(__exception__);
            }
            return 0;
        }
        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvStdcall) })]
        private static unsafe int Do_Abi_get_Position_25(IntPtr thisPtr, float* value)
        {

            float __value = default;

            *value = default;

            try
            {
                __value = global::WinRT.ComWrappersSupport.FindObject<global::Microsoft.UI.Text.ITextCharacterFormat>(thisPtr).Position;
                *value = __value;

            }
            catch (Exception __exception__)
            {
                global::WinRT.ExceptionHelpers.SetErrorInfo(__exception__);
                return global::WinRT.ExceptionHelpers.GetHRForException(__exception__);
            }
            return 0;
        }
        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvStdcall) })]
        private static unsafe int Do_Abi_put_ProtectedText_28(IntPtr thisPtr, global::Microsoft.UI.Text.FormatEffect value)
        {



            try
            {
                global::WinRT.ComWrappersSupport.FindObject<global::Microsoft.UI.Text.ITextCharacterFormat>(thisPtr).ProtectedText = value;

            }
            catch (Exception __exception__)
            {
                global::WinRT.ExceptionHelpers.SetErrorInfo(__exception__);
                return global::WinRT.ExceptionHelpers.GetHRForException(__exception__);
            }
            return 0;
        }
        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvStdcall) })]
        private static unsafe int Do_Abi_get_ProtectedText_27(IntPtr thisPtr, global::Microsoft.UI.Text.FormatEffect* value)
        {

            global::Microsoft.UI.Text.FormatEffect __value = default;

            *value = default;

            try
            {
                __value = global::WinRT.ComWrappersSupport.FindObject<global::Microsoft.UI.Text.ITextCharacterFormat>(thisPtr).ProtectedText;
                *value = __value;

            }
            catch (Exception __exception__)
            {
                global::WinRT.ExceptionHelpers.SetErrorInfo(__exception__);
                return global::WinRT.ExceptionHelpers.GetHRForException(__exception__);
            }
            return 0;
        }
        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvStdcall) })]
        private static unsafe int Do_Abi_put_Size_30(IntPtr thisPtr, float value)
        {



            try
            {
                global::WinRT.ComWrappersSupport.FindObject<global::Microsoft.UI.Text.ITextCharacterFormat>(thisPtr).Size = value;

            }
            catch (Exception __exception__)
            {
                global::WinRT.ExceptionHelpers.SetErrorInfo(__exception__);
                return global::WinRT.ExceptionHelpers.GetHRForException(__exception__);
            }
            return 0;
        }
        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvStdcall) })]
        private static unsafe int Do_Abi_get_Size_29(IntPtr thisPtr, float* value)
        {

            float __value = default;

            *value = default;

            try
            {
                __value = global::WinRT.ComWrappersSupport.FindObject<global::Microsoft.UI.Text.ITextCharacterFormat>(thisPtr).Size;
                *value = __value;

            }
            catch (Exception __exception__)
            {
                global::WinRT.ExceptionHelpers.SetErrorInfo(__exception__);
                return global::WinRT.ExceptionHelpers.GetHRForException(__exception__);
            }
            return 0;
        }
        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvStdcall) })]
        private static unsafe int Do_Abi_put_SmallCaps_32(IntPtr thisPtr, global::Microsoft.UI.Text.FormatEffect value)
        {



            try
            {
                global::WinRT.ComWrappersSupport.FindObject<global::Microsoft.UI.Text.ITextCharacterFormat>(thisPtr).SmallCaps = value;

            }
            catch (Exception __exception__)
            {
                global::WinRT.ExceptionHelpers.SetErrorInfo(__exception__);
                return global::WinRT.ExceptionHelpers.GetHRForException(__exception__);
            }
            return 0;
        }
        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvStdcall) })]
        private static unsafe int Do_Abi_get_SmallCaps_31(IntPtr thisPtr, global::Microsoft.UI.Text.FormatEffect* value)
        {

            global::Microsoft.UI.Text.FormatEffect __value = default;

            *value = default;

            try
            {
                __value = global::WinRT.ComWrappersSupport.FindObject<global::Microsoft.UI.Text.ITextCharacterFormat>(thisPtr).SmallCaps;
                *value = __value;

            }
            catch (Exception __exception__)
            {
                global::WinRT.ExceptionHelpers.SetErrorInfo(__exception__);
                return global::WinRT.ExceptionHelpers.GetHRForException(__exception__);
            }
            return 0;
        }
        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvStdcall) })]
        private static unsafe int Do_Abi_put_Spacing_34(IntPtr thisPtr, float value)
        {



            try
            {
                global::WinRT.ComWrappersSupport.FindObject<global::Microsoft.UI.Text.ITextCharacterFormat>(thisPtr).Spacing = value;

            }
            catch (Exception __exception__)
            {
                global::WinRT.ExceptionHelpers.SetErrorInfo(__exception__);
                return global::WinRT.ExceptionHelpers.GetHRForException(__exception__);
            }
            return 0;
        }
        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvStdcall) })]
        private static unsafe int Do_Abi_get_Spacing_33(IntPtr thisPtr, float* value)
        {

            float __value = default;

            *value = default;

            try
            {
                __value = global::WinRT.ComWrappersSupport.FindObject<global::Microsoft.UI.Text.ITextCharacterFormat>(thisPtr).Spacing;
                *value = __value;

            }
            catch (Exception __exception__)
            {
                global::WinRT.ExceptionHelpers.SetErrorInfo(__exception__);
                return global::WinRT.ExceptionHelpers.GetHRForException(__exception__);
            }
            return 0;
        }
        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvStdcall) })]
        private static unsafe int Do_Abi_put_Strikethrough_36(IntPtr thisPtr, global::Microsoft.UI.Text.FormatEffect value)
        {



            try
            {
                global::WinRT.ComWrappersSupport.FindObject<global::Microsoft.UI.Text.ITextCharacterFormat>(thisPtr).Strikethrough = value;

            }
            catch (Exception __exception__)
            {
                global::WinRT.ExceptionHelpers.SetErrorInfo(__exception__);
                return global::WinRT.ExceptionHelpers.GetHRForException(__exception__);
            }
            return 0;
        }
        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvStdcall) })]
        private static unsafe int Do_Abi_get_Strikethrough_35(IntPtr thisPtr, global::Microsoft.UI.Text.FormatEffect* value)
        {

            global::Microsoft.UI.Text.FormatEffect __value = default;

            *value = default;

            try
            {
                __value = global::WinRT.ComWrappersSupport.FindObject<global::Microsoft.UI.Text.ITextCharacterFormat>(thisPtr).Strikethrough;
                *value = __value;

            }
            catch (Exception __exception__)
            {
                global::WinRT.ExceptionHelpers.SetErrorInfo(__exception__);
                return global::WinRT.ExceptionHelpers.GetHRForException(__exception__);
            }
            return 0;
        }
        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvStdcall) })]
        private static unsafe int Do_Abi_put_Subscript_38(IntPtr thisPtr, global::Microsoft.UI.Text.FormatEffect value)
        {



            try
            {
                global::WinRT.ComWrappersSupport.FindObject<global::Microsoft.UI.Text.ITextCharacterFormat>(thisPtr).Subscript = value;

            }
            catch (Exception __exception__)
            {
                global::WinRT.ExceptionHelpers.SetErrorInfo(__exception__);
                return global::WinRT.ExceptionHelpers.GetHRForException(__exception__);
            }
            return 0;
        }
        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvStdcall) })]
        private static unsafe int Do_Abi_get_Subscript_37(IntPtr thisPtr, global::Microsoft.UI.Text.FormatEffect* value)
        {

            global::Microsoft.UI.Text.FormatEffect __value = default;

            *value = default;

            try
            {
                __value = global::WinRT.ComWrappersSupport.FindObject<global::Microsoft.UI.Text.ITextCharacterFormat>(thisPtr).Subscript;
                *value = __value;

            }
            catch (Exception __exception__)
            {
                global::WinRT.ExceptionHelpers.SetErrorInfo(__exception__);
                return global::WinRT.ExceptionHelpers.GetHRForException(__exception__);
            }
            return 0;
        }
        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvStdcall) })]
        private static unsafe int Do_Abi_put_Superscript_40(IntPtr thisPtr, global::Microsoft.UI.Text.FormatEffect value)
        {



            try
            {
                global::WinRT.ComWrappersSupport.FindObject<global::Microsoft.UI.Text.ITextCharacterFormat>(thisPtr).Superscript = value;

            }
            catch (Exception __exception__)
            {
                global::WinRT.ExceptionHelpers.SetErrorInfo(__exception__);
                return global::WinRT.ExceptionHelpers.GetHRForException(__exception__);
            }
            return 0;
        }
        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvStdcall) })]
        private static unsafe int Do_Abi_get_Superscript_39(IntPtr thisPtr, global::Microsoft.UI.Text.FormatEffect* value)
        {

            global::Microsoft.UI.Text.FormatEffect __value = default;

            *value = default;

            try
            {
                __value = global::WinRT.ComWrappersSupport.FindObject<global::Microsoft.UI.Text.ITextCharacterFormat>(thisPtr).Superscript;
                *value = __value;

            }
            catch (Exception __exception__)
            {
                global::WinRT.ExceptionHelpers.SetErrorInfo(__exception__);
                return global::WinRT.ExceptionHelpers.GetHRForException(__exception__);
            }
            return 0;
        }
        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvStdcall) })]
        private static unsafe int Do_Abi_put_TextScript_42(IntPtr thisPtr, global::Microsoft.UI.Text.TextScript value)
        {



            try
            {
                global::WinRT.ComWrappersSupport.FindObject<global::Microsoft.UI.Text.ITextCharacterFormat>(thisPtr).TextScript = value;

            }
            catch (Exception __exception__)
            {
                global::WinRT.ExceptionHelpers.SetErrorInfo(__exception__);
                return global::WinRT.ExceptionHelpers.GetHRForException(__exception__);
            }
            return 0;
        }
        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvStdcall) })]
        private static unsafe int Do_Abi_get_TextScript_41(IntPtr thisPtr, global::Microsoft.UI.Text.TextScript* value)
        {

            global::Microsoft.UI.Text.TextScript __value = default;

            *value = default;

            try
            {
                __value = global::WinRT.ComWrappersSupport.FindObject<global::Microsoft.UI.Text.ITextCharacterFormat>(thisPtr).TextScript;
                *value = __value;

            }
            catch (Exception __exception__)
            {
                global::WinRT.ExceptionHelpers.SetErrorInfo(__exception__);
                return global::WinRT.ExceptionHelpers.GetHRForException(__exception__);
            }
            return 0;
        }
        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvStdcall) })]
        private static unsafe int Do_Abi_put_Underline_44(IntPtr thisPtr, global::Microsoft.UI.Text.UnderlineType value)
        {



            try
            {
                global::WinRT.ComWrappersSupport.FindObject<global::Microsoft.UI.Text.ITextCharacterFormat>(thisPtr).Underline = value;

            }
            catch (Exception __exception__)
            {
                global::WinRT.ExceptionHelpers.SetErrorInfo(__exception__);
                return global::WinRT.ExceptionHelpers.GetHRForException(__exception__);
            }
            return 0;
        }
        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvStdcall) })]
        private static unsafe int Do_Abi_get_Underline_43(IntPtr thisPtr, global::Microsoft.UI.Text.UnderlineType* value)
        {

            global::Microsoft.UI.Text.UnderlineType __value = default;

            *value = default;

            try
            {
                __value = global::WinRT.ComWrappersSupport.FindObject<global::Microsoft.UI.Text.ITextCharacterFormat>(thisPtr).Underline;
                *value = __value;

            }
            catch (Exception __exception__)
            {
                global::WinRT.ExceptionHelpers.SetErrorInfo(__exception__);
                return global::WinRT.ExceptionHelpers.GetHRForException(__exception__);
            }
            return 0;
        }
        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvStdcall) })]
        private static unsafe int Do_Abi_put_Weight_46(IntPtr thisPtr, int value)
        {



            try
            {
                global::WinRT.ComWrappersSupport.FindObject<global::Microsoft.UI.Text.ITextCharacterFormat>(thisPtr).Weight = value;

            }
            catch (Exception __exception__)
            {
                global::WinRT.ExceptionHelpers.SetErrorInfo(__exception__);
                return global::WinRT.ExceptionHelpers.GetHRForException(__exception__);
            }
            return 0;
        }
        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvStdcall) })]
        private static unsafe int Do_Abi_get_Weight_45(IntPtr thisPtr, int* value)
        {

            int __value = default;

            *value = default;

            try
            {
                __value = global::WinRT.ComWrappersSupport.FindObject<global::Microsoft.UI.Text.ITextCharacterFormat>(thisPtr).Weight;
                *value = __value;

            }
            catch (Exception __exception__)
            {
                global::WinRT.ExceptionHelpers.SetErrorInfo(__exception__);
                return global::WinRT.ExceptionHelpers.GetHRForException(__exception__);
            }
            return 0;
        }

        unsafe void global::Microsoft.UI.Text.ITextCharacterFormat.SetClone(global::Microsoft.UI.Text.ITextCharacterFormat value)
        {
            var _obj = ((IObjectReference)((IWinRTObject)this).GetObjectReferenceForType(typeof(global::Microsoft.UI.Text.ITextCharacterFormat).TypeHandle));
            global::ABI.Microsoft.UI.Text.ITextCharacterFormatMethods.SetClone(_obj, value);
        }

        unsafe global::Microsoft.UI.Text.ITextCharacterFormat global::Microsoft.UI.Text.ITextCharacterFormat.GetClone()
        {
            var _obj = ((IObjectReference)((IWinRTObject)this).GetObjectReferenceForType(typeof(global::Microsoft.UI.Text.ITextCharacterFormat).TypeHandle));
            return global::ABI.Microsoft.UI.Text.ITextCharacterFormatMethods.GetClone(_obj);
        }

        unsafe bool global::Microsoft.UI.Text.ITextCharacterFormat.IsEqual(global::Microsoft.UI.Text.ITextCharacterFormat format)
        {
            var _obj = ((IObjectReference)((IWinRTObject)this).GetObjectReferenceForType(typeof(global::Microsoft.UI.Text.ITextCharacterFormat).TypeHandle));
            return global::ABI.Microsoft.UI.Text.ITextCharacterFormatMethods.IsEqual(_obj, format);
        }

        unsafe global::Microsoft.UI.Text.FormatEffect global::Microsoft.UI.Text.ITextCharacterFormat.AllCaps
        {
            get
            {
                var _obj = ((IObjectReference)((IWinRTObject)this).GetObjectReferenceForType(typeof(global::Microsoft.UI.Text.ITextCharacterFormat).TypeHandle));
                return global::ABI.Microsoft.UI.Text.ITextCharacterFormatMethods.get_AllCaps(_obj);
            }
            set
            {
                var _obj = ((IObjectReference)((IWinRTObject)this).GetObjectReferenceForType(typeof(global::Microsoft.UI.Text.ITextCharacterFormat).TypeHandle));
                global::ABI.Microsoft.UI.Text.ITextCharacterFormatMethods.set_AllCaps(_obj, value);
            }
        }

        unsafe global::Windows.UI.Color global::Microsoft.UI.Text.ITextCharacterFormat.BackgroundColor
        {
            get
            {
                var _obj = ((IObjectReference)((IWinRTObject)this).GetObjectReferenceForType(typeof(global::Microsoft.UI.Text.ITextCharacterFormat).TypeHandle));
                return global::ABI.Microsoft.UI.Text.ITextCharacterFormatMethods.get_BackgroundColor(_obj);
            }
            set
            {
                var _obj = ((IObjectReference)((IWinRTObject)this).GetObjectReferenceForType(typeof(global::Microsoft.UI.Text.ITextCharacterFormat).TypeHandle));
                global::ABI.Microsoft.UI.Text.ITextCharacterFormatMethods.set_BackgroundColor(_obj, value);
            }
        }

        unsafe global::Microsoft.UI.Text.FormatEffect global::Microsoft.UI.Text.ITextCharacterFormat.Bold
        {
            get
            {
                var _obj = ((IObjectReference)((IWinRTObject)this).GetObjectReferenceForType(typeof(global::Microsoft.UI.Text.ITextCharacterFormat).TypeHandle));
                return global::ABI.Microsoft.UI.Text.ITextCharacterFormatMethods.get_Bold(_obj);
            }
            set
            {
                var _obj = ((IObjectReference)((IWinRTObject)this).GetObjectReferenceForType(typeof(global::Microsoft.UI.Text.ITextCharacterFormat).TypeHandle));
                global::ABI.Microsoft.UI.Text.ITextCharacterFormatMethods.set_Bold(_obj, value);
            }
        }

        unsafe global::Windows.UI.Text.FontStretch global::Microsoft.UI.Text.ITextCharacterFormat.FontStretch
        {
            get
            {
                var _obj = ((IObjectReference)((IWinRTObject)this).GetObjectReferenceForType(typeof(global::Microsoft.UI.Text.ITextCharacterFormat).TypeHandle));
                return global::ABI.Microsoft.UI.Text.ITextCharacterFormatMethods.get_FontStretch(_obj);
            }
            set
            {
                var _obj = ((IObjectReference)((IWinRTObject)this).GetObjectReferenceForType(typeof(global::Microsoft.UI.Text.ITextCharacterFormat).TypeHandle));
                global::ABI.Microsoft.UI.Text.ITextCharacterFormatMethods.set_FontStretch(_obj, value);
            }
        }

        unsafe global::Windows.UI.Text.FontStyle global::Microsoft.UI.Text.ITextCharacterFormat.FontStyle
        {
            get
            {
                var _obj = ((IObjectReference)((IWinRTObject)this).GetObjectReferenceForType(typeof(global::Microsoft.UI.Text.ITextCharacterFormat).TypeHandle));
                return global::ABI.Microsoft.UI.Text.ITextCharacterFormatMethods.get_FontStyle(_obj);
            }
            set
            {
                var _obj = ((IObjectReference)((IWinRTObject)this).GetObjectReferenceForType(typeof(global::Microsoft.UI.Text.ITextCharacterFormat).TypeHandle));
                global::ABI.Microsoft.UI.Text.ITextCharacterFormatMethods.set_FontStyle(_obj, value);
            }
        }

        unsafe global::Windows.UI.Color global::Microsoft.UI.Text.ITextCharacterFormat.ForegroundColor
        {
            get
            {
                var _obj = ((IObjectReference)((IWinRTObject)this).GetObjectReferenceForType(typeof(global::Microsoft.UI.Text.ITextCharacterFormat).TypeHandle));
                return global::ABI.Microsoft.UI.Text.ITextCharacterFormatMethods.get_ForegroundColor(_obj);
            }
            set
            {
                var _obj = ((IObjectReference)((IWinRTObject)this).GetObjectReferenceForType(typeof(global::Microsoft.UI.Text.ITextCharacterFormat).TypeHandle));
                global::ABI.Microsoft.UI.Text.ITextCharacterFormatMethods.set_ForegroundColor(_obj, value);
            }
        }

        unsafe global::Microsoft.UI.Text.FormatEffect global::Microsoft.UI.Text.ITextCharacterFormat.Hidden
        {
            get
            {
                var _obj = ((IObjectReference)((IWinRTObject)this).GetObjectReferenceForType(typeof(global::Microsoft.UI.Text.ITextCharacterFormat).TypeHandle));
                return global::ABI.Microsoft.UI.Text.ITextCharacterFormatMethods.get_Hidden(_obj);
            }
            set
            {
                var _obj = ((IObjectReference)((IWinRTObject)this).GetObjectReferenceForType(typeof(global::Microsoft.UI.Text.ITextCharacterFormat).TypeHandle));
                global::ABI.Microsoft.UI.Text.ITextCharacterFormatMethods.set_Hidden(_obj, value);
            }
        }

        unsafe global::Microsoft.UI.Text.FormatEffect global::Microsoft.UI.Text.ITextCharacterFormat.Italic
        {
            get
            {
                var _obj = ((IObjectReference)((IWinRTObject)this).GetObjectReferenceForType(typeof(global::Microsoft.UI.Text.ITextCharacterFormat).TypeHandle));
                return global::ABI.Microsoft.UI.Text.ITextCharacterFormatMethods.get_Italic(_obj);
            }
            set
            {
                var _obj = ((IObjectReference)((IWinRTObject)this).GetObjectReferenceForType(typeof(global::Microsoft.UI.Text.ITextCharacterFormat).TypeHandle));
                global::ABI.Microsoft.UI.Text.ITextCharacterFormatMethods.set_Italic(_obj, value);
            }
        }

        unsafe float global::Microsoft.UI.Text.ITextCharacterFormat.Kerning
        {
            get
            {
                var _obj = ((IObjectReference)((IWinRTObject)this).GetObjectReferenceForType(typeof(global::Microsoft.UI.Text.ITextCharacterFormat).TypeHandle));
                return global::ABI.Microsoft.UI.Text.ITextCharacterFormatMethods.get_Kerning(_obj);
            }
            set
            {
                var _obj = ((IObjectReference)((IWinRTObject)this).GetObjectReferenceForType(typeof(global::Microsoft.UI.Text.ITextCharacterFormat).TypeHandle));
                global::ABI.Microsoft.UI.Text.ITextCharacterFormatMethods.set_Kerning(_obj, value);
            }
        }

        unsafe string global::Microsoft.UI.Text.ITextCharacterFormat.LanguageTag
        {
            get
            {
                var _obj = ((IObjectReference)((IWinRTObject)this).GetObjectReferenceForType(typeof(global::Microsoft.UI.Text.ITextCharacterFormat).TypeHandle));
                return global::ABI.Microsoft.UI.Text.ITextCharacterFormatMethods.get_LanguageTag(_obj);
            }
            set
            {
                var _obj = ((IObjectReference)((IWinRTObject)this).GetObjectReferenceForType(typeof(global::Microsoft.UI.Text.ITextCharacterFormat).TypeHandle));
                global::ABI.Microsoft.UI.Text.ITextCharacterFormatMethods.set_LanguageTag(_obj, value);
            }
        }

        unsafe global::Microsoft.UI.Text.LinkType global::Microsoft.UI.Text.ITextCharacterFormat.LinkType
        {
            get
            {
                var _obj = ((IObjectReference)((IWinRTObject)this).GetObjectReferenceForType(typeof(global::Microsoft.UI.Text.ITextCharacterFormat).TypeHandle));
                return global::ABI.Microsoft.UI.Text.ITextCharacterFormatMethods.get_LinkType(_obj);
            }
        }

        unsafe string global::Microsoft.UI.Text.ITextCharacterFormat.Name
        {
            get
            {
                var _obj = ((IObjectReference)((IWinRTObject)this).GetObjectReferenceForType(typeof(global::Microsoft.UI.Text.ITextCharacterFormat).TypeHandle));
                return global::ABI.Microsoft.UI.Text.ITextCharacterFormatMethods.get_Name(_obj);
            }
            set
            {
                var _obj = ((IObjectReference)((IWinRTObject)this).GetObjectReferenceForType(typeof(global::Microsoft.UI.Text.ITextCharacterFormat).TypeHandle));
                global::ABI.Microsoft.UI.Text.ITextCharacterFormatMethods.set_Name(_obj, value);
            }
        }

        unsafe global::Microsoft.UI.Text.FormatEffect global::Microsoft.UI.Text.ITextCharacterFormat.Outline
        {
            get
            {
                var _obj = ((IObjectReference)((IWinRTObject)this).GetObjectReferenceForType(typeof(global::Microsoft.UI.Text.ITextCharacterFormat).TypeHandle));
                return global::ABI.Microsoft.UI.Text.ITextCharacterFormatMethods.get_Outline(_obj);
            }
            set
            {
                var _obj = ((IObjectReference)((IWinRTObject)this).GetObjectReferenceForType(typeof(global::Microsoft.UI.Text.ITextCharacterFormat).TypeHandle));
                global::ABI.Microsoft.UI.Text.ITextCharacterFormatMethods.set_Outline(_obj, value);
            }
        }

        unsafe float global::Microsoft.UI.Text.ITextCharacterFormat.Position
        {
            get
            {
                var _obj = ((IObjectReference)((IWinRTObject)this).GetObjectReferenceForType(typeof(global::Microsoft.UI.Text.ITextCharacterFormat).TypeHandle));
                return global::ABI.Microsoft.UI.Text.ITextCharacterFormatMethods.get_Position(_obj);
            }
            set
            {
                var _obj = ((IObjectReference)((IWinRTObject)this).GetObjectReferenceForType(typeof(global::Microsoft.UI.Text.ITextCharacterFormat).TypeHandle));
                global::ABI.Microsoft.UI.Text.ITextCharacterFormatMethods.set_Position(_obj, value);
            }
        }

        unsafe global::Microsoft.UI.Text.FormatEffect global::Microsoft.UI.Text.ITextCharacterFormat.ProtectedText
        {
            get
            {
                var _obj = ((IObjectReference)((IWinRTObject)this).GetObjectReferenceForType(typeof(global::Microsoft.UI.Text.ITextCharacterFormat).TypeHandle));
                return global::ABI.Microsoft.UI.Text.ITextCharacterFormatMethods.get_ProtectedText(_obj);
            }
            set
            {
                var _obj = ((IObjectReference)((IWinRTObject)this).GetObjectReferenceForType(typeof(global::Microsoft.UI.Text.ITextCharacterFormat).TypeHandle));
                global::ABI.Microsoft.UI.Text.ITextCharacterFormatMethods.set_ProtectedText(_obj, value);
            }
        }

        unsafe float global::Microsoft.UI.Text.ITextCharacterFormat.Size
        {
            get
            {
                var _obj = ((IObjectReference)((IWinRTObject)this).GetObjectReferenceForType(typeof(global::Microsoft.UI.Text.ITextCharacterFormat).TypeHandle));
                return global::ABI.Microsoft.UI.Text.ITextCharacterFormatMethods.get_Size(_obj);
            }
            set
            {
                var _obj = ((IObjectReference)((IWinRTObject)this).GetObjectReferenceForType(typeof(global::Microsoft.UI.Text.ITextCharacterFormat).TypeHandle));
                global::ABI.Microsoft.UI.Text.ITextCharacterFormatMethods.set_Size(_obj, value);
            }
        }

        unsafe global::Microsoft.UI.Text.FormatEffect global::Microsoft.UI.Text.ITextCharacterFormat.SmallCaps
        {
            get
            {
                var _obj = ((IObjectReference)((IWinRTObject)this).GetObjectReferenceForType(typeof(global::Microsoft.UI.Text.ITextCharacterFormat).TypeHandle));
                return global::ABI.Microsoft.UI.Text.ITextCharacterFormatMethods.get_SmallCaps(_obj);
            }
            set
            {
                var _obj = ((IObjectReference)((IWinRTObject)this).GetObjectReferenceForType(typeof(global::Microsoft.UI.Text.ITextCharacterFormat).TypeHandle));
                global::ABI.Microsoft.UI.Text.ITextCharacterFormatMethods.set_SmallCaps(_obj, value);
            }
        }

        unsafe float global::Microsoft.UI.Text.ITextCharacterFormat.Spacing
        {
            get
            {
                var _obj = ((IObjectReference)((IWinRTObject)this).GetObjectReferenceForType(typeof(global::Microsoft.UI.Text.ITextCharacterFormat).TypeHandle));
                return global::ABI.Microsoft.UI.Text.ITextCharacterFormatMethods.get_Spacing(_obj);
            }
            set
            {
                var _obj = ((IObjectReference)((IWinRTObject)this).GetObjectReferenceForType(typeof(global::Microsoft.UI.Text.ITextCharacterFormat).TypeHandle));
                global::ABI.Microsoft.UI.Text.ITextCharacterFormatMethods.set_Spacing(_obj, value);
            }
        }

        unsafe global::Microsoft.UI.Text.FormatEffect global::Microsoft.UI.Text.ITextCharacterFormat.Strikethrough
        {
            get
            {
                var _obj = ((IObjectReference)((IWinRTObject)this).GetObjectReferenceForType(typeof(global::Microsoft.UI.Text.ITextCharacterFormat).TypeHandle));
                return global::ABI.Microsoft.UI.Text.ITextCharacterFormatMethods.get_Strikethrough(_obj);
            }
            set
            {
                var _obj = ((IObjectReference)((IWinRTObject)this).GetObjectReferenceForType(typeof(global::Microsoft.UI.Text.ITextCharacterFormat).TypeHandle));
                global::ABI.Microsoft.UI.Text.ITextCharacterFormatMethods.set_Strikethrough(_obj, value);
            }
        }

        unsafe global::Microsoft.UI.Text.FormatEffect global::Microsoft.UI.Text.ITextCharacterFormat.Subscript
        {
            get
            {
                var _obj = ((IObjectReference)((IWinRTObject)this).GetObjectReferenceForType(typeof(global::Microsoft.UI.Text.ITextCharacterFormat).TypeHandle));
                return global::ABI.Microsoft.UI.Text.ITextCharacterFormatMethods.get_Subscript(_obj);
            }
            set
            {
                var _obj = ((IObjectReference)((IWinRTObject)this).GetObjectReferenceForType(typeof(global::Microsoft.UI.Text.ITextCharacterFormat).TypeHandle));
                global::ABI.Microsoft.UI.Text.ITextCharacterFormatMethods.set_Subscript(_obj, value);
            }
        }

        unsafe global::Microsoft.UI.Text.FormatEffect global::Microsoft.UI.Text.ITextCharacterFormat.Superscript
        {
            get
            {
                var _obj = ((IObjectReference)((IWinRTObject)this).GetObjectReferenceForType(typeof(global::Microsoft.UI.Text.ITextCharacterFormat).TypeHandle));
                return global::ABI.Microsoft.UI.Text.ITextCharacterFormatMethods.get_Superscript(_obj);
            }
            set
            {
                var _obj = ((IObjectReference)((IWinRTObject)this).GetObjectReferenceForType(typeof(global::Microsoft.UI.Text.ITextCharacterFormat).TypeHandle));
                global::ABI.Microsoft.UI.Text.ITextCharacterFormatMethods.set_Superscript(_obj, value);
            }
        }

        unsafe global::Microsoft.UI.Text.TextScript global::Microsoft.UI.Text.ITextCharacterFormat.TextScript
        {
            get
            {
                var _obj = ((IObjectReference)((IWinRTObject)this).GetObjectReferenceForType(typeof(global::Microsoft.UI.Text.ITextCharacterFormat).TypeHandle));
                return global::ABI.Microsoft.UI.Text.ITextCharacterFormatMethods.get_TextScript(_obj);
            }
            set
            {
                var _obj = ((IObjectReference)((IWinRTObject)this).GetObjectReferenceForType(typeof(global::Microsoft.UI.Text.ITextCharacterFormat).TypeHandle));
                global::ABI.Microsoft.UI.Text.ITextCharacterFormatMethods.set_TextScript(_obj, value);
            }
        }

        unsafe global::Microsoft.UI.Text.UnderlineType global::Microsoft.UI.Text.ITextCharacterFormat.Underline
        {
            get
            {
                var _obj = ((IObjectReference)((IWinRTObject)this).GetObjectReferenceForType(typeof(global::Microsoft.UI.Text.ITextCharacterFormat).TypeHandle));
                return global::ABI.Microsoft.UI.Text.ITextCharacterFormatMethods.get_Underline(_obj);
            }
            set
            {
                var _obj = ((IObjectReference)((IWinRTObject)this).GetObjectReferenceForType(typeof(global::Microsoft.UI.Text.ITextCharacterFormat).TypeHandle));
                global::ABI.Microsoft.UI.Text.ITextCharacterFormatMethods.set_Underline(_obj, value);
            }
        }

        unsafe int global::Microsoft.UI.Text.ITextCharacterFormat.Weight
        {
            get
            {
                var _obj = ((IObjectReference)((IWinRTObject)this).GetObjectReferenceForType(typeof(global::Microsoft.UI.Text.ITextCharacterFormat).TypeHandle));
                return global::ABI.Microsoft.UI.Text.ITextCharacterFormatMethods.get_Weight(_obj);
            }
            set
            {
                var _obj = ((IObjectReference)((IWinRTObject)this).GetObjectReferenceForType(typeof(global::Microsoft.UI.Text.ITextCharacterFormat).TypeHandle));
                global::ABI.Microsoft.UI.Text.ITextCharacterFormatMethods.set_Weight(_obj, value);
            }
        }
    }

    internal static class ITextConstantsStaticsMethods
    {

        internal static unsafe global::Windows.UI.Color get_AutoColor(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::Windows.UI.Color __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::Windows.UI.Color*, int>**)ThisPtr)[6](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }

        internal static unsafe int get_MaxUnitCount(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            int __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, int*, int>**)ThisPtr)[8](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }

        internal static unsafe int get_MinUnitCount(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            int __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, int*, int>**)ThisPtr)[7](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }

        internal static unsafe global::Windows.UI.Color get_UndefinedColor(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::Windows.UI.Color __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::Windows.UI.Color*, int>**)ThisPtr)[9](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }

        internal static unsafe float get_UndefinedFloatValue(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            float __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, float*, int>**)ThisPtr)[10](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }

        internal static unsafe global::Windows.UI.Text.FontStretch get_UndefinedFontStretch(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::Windows.UI.Text.FontStretch __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::Windows.UI.Text.FontStretch*, int>**)ThisPtr)[12](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }

        internal static unsafe global::Windows.UI.Text.FontStyle get_UndefinedFontStyle(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::Windows.UI.Text.FontStyle __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::Windows.UI.Text.FontStyle*, int>**)ThisPtr)[13](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }

        internal static unsafe int get_UndefinedInt32Value(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            int __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, int*, int>**)ThisPtr)[11](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0x3C, 0x3B, 0x35, 0xCD, 0x63, 0xAF, 0xFB, 0x5C, 0x91, 0x8C, 0xF, 0x9C, 0x89, 0x31, 0xA1, 0x61 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("CD353B3C-AF63-5CFB-918C-0F9C8931A161")]
    internal interface ITextConstantsStatics : global::Microsoft.UI.Text.ITextConstantsStatics
    {
    }
    internal static class ITextDocumentMethods
    {


        internal static unsafe bool CanCopy(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            byte __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, byte*, int>**)ThisPtr)[13](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval != 0;
        }

        internal static unsafe bool CanPaste(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            byte __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, byte*, int>**)ThisPtr)[14](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval != 0;
        }

        internal static unsafe bool CanRedo(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            byte __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, byte*, int>**)ThisPtr)[15](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval != 0;
        }

        internal static unsafe bool CanUndo(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            byte __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, byte*, int>**)ThisPtr)[16](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval != 0;
        }

        internal static unsafe int ApplyDisplayUpdates(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            int __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, int*, int>**)ThisPtr)[17](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }

        internal static unsafe int BatchDisplayUpdates(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            int __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, int*, int>**)ThisPtr)[18](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }

        internal static unsafe void BeginUndoGroup(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, int>**)ThisPtr)[19](ThisPtr));
            global::System.GC.KeepAlive(_obj);
        }

        internal static unsafe void EndUndoGroup(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, int>**)ThisPtr)[20](ThisPtr));
            global::System.GC.KeepAlive(_obj);
        }

        internal static unsafe global::Microsoft.UI.Text.ITextCharacterFormat GetDefaultCharacterFormat(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[21](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return MarshalInterface<global::Microsoft.UI.Text.ITextCharacterFormat>.FromAbi(__retval);
            }
            finally
            {
                MarshalInterface<global::Microsoft.UI.Text.ITextCharacterFormat>.DisposeAbi(__retval);
            }
        }

        internal static unsafe global::Microsoft.UI.Text.ITextParagraphFormat GetDefaultParagraphFormat(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[22](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return MarshalInterface<global::Microsoft.UI.Text.ITextParagraphFormat>.FromAbi(__retval);
            }
            finally
            {
                MarshalInterface<global::Microsoft.UI.Text.ITextParagraphFormat>.DisposeAbi(__retval);
            }
        }

        internal static unsafe global::Microsoft.UI.Text.ITextRange GetRange(IObjectReference _obj, int startPosition, int endPosition)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, int, int, IntPtr*, int>**)ThisPtr)[23](ThisPtr, startPosition, endPosition, &__retval));
                global::System.GC.KeepAlive(_obj);
                return MarshalInterface<global::Microsoft.UI.Text.ITextRange>.FromAbi(__retval);
            }
            finally
            {
                MarshalInterface<global::Microsoft.UI.Text.ITextRange>.DisposeAbi(__retval);
            }
        }

        internal static unsafe global::Microsoft.UI.Text.ITextRange GetRangeFromPoint(IObjectReference _obj, global::Windows.Foundation.Point point, global::Microsoft.UI.Text.PointOptions options)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::Windows.Foundation.Point, global::Microsoft.UI.Text.PointOptions, IntPtr*, int>**)ThisPtr)[24](ThisPtr, point, options, &__retval));
                global::System.GC.KeepAlive(_obj);
                return MarshalInterface<global::Microsoft.UI.Text.ITextRange>.FromAbi(__retval);
            }
            finally
            {
                MarshalInterface<global::Microsoft.UI.Text.ITextRange>.DisposeAbi(__retval);
            }
        }

        internal static unsafe void GetText(IObjectReference _obj, global::Microsoft.UI.Text.TextGetOptions options, out string value)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __value = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::Microsoft.UI.Text.TextGetOptions, IntPtr*, int>**)ThisPtr)[25](ThisPtr, options, &__value));
                global::System.GC.KeepAlive(_obj);
                value = MarshalString.FromAbi(__value);
            }
            finally
            {
                MarshalString.DisposeAbi(__value);
            }
        }

        internal static unsafe void LoadFromStream(IObjectReference _obj, global::Microsoft.UI.Text.TextSetOptions options, global::Windows.Storage.Streams.IRandomAccessStream value)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __value = default;
            try
            {
                __value = MarshalInterface<global::Windows.Storage.Streams.IRandomAccessStream>.CreateMarshaler2(value, global::ABI.Windows.Storage.Streams.IRandomAccessStreamMethods.IID);
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::Microsoft.UI.Text.TextSetOptions, IntPtr, int>**)ThisPtr)[26](ThisPtr, options, MarshalInspectable<object>.GetAbi(__value)));
                global::System.GC.KeepAlive(_obj);
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__value);
            }
        }

        internal static unsafe void Redo(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, int>**)ThisPtr)[27](ThisPtr));
            global::System.GC.KeepAlive(_obj);
        }

        internal static unsafe void SaveToStream(IObjectReference _obj, global::Microsoft.UI.Text.TextGetOptions options, global::Windows.Storage.Streams.IRandomAccessStream value)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __value = default;
            try
            {
                __value = MarshalInterface<global::Windows.Storage.Streams.IRandomAccessStream>.CreateMarshaler2(value, global::ABI.Windows.Storage.Streams.IRandomAccessStreamMethods.IID);
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::Microsoft.UI.Text.TextGetOptions, IntPtr, int>**)ThisPtr)[28](ThisPtr, options, MarshalInspectable<object>.GetAbi(__value)));
                global::System.GC.KeepAlive(_obj);
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__value);
            }
        }

        internal static unsafe void SetDefaultCharacterFormat(IObjectReference _obj, global::Microsoft.UI.Text.ITextCharacterFormat value)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __value = default;
            try
            {
                __value = MarshalInterface<global::Microsoft.UI.Text.ITextCharacterFormat>.CreateMarshaler2(value, global::ABI.Microsoft.UI.Text.ITextCharacterFormatMethods.IID);
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, int>**)ThisPtr)[29](ThisPtr, MarshalInspectable<object>.GetAbi(__value)));
                global::System.GC.KeepAlive(_obj);
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__value);
            }
        }

        internal static unsafe void SetDefaultParagraphFormat(IObjectReference _obj, global::Microsoft.UI.Text.ITextParagraphFormat value)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __value = default;
            try
            {
                __value = MarshalInterface<global::Microsoft.UI.Text.ITextParagraphFormat>.CreateMarshaler2(value, global::ABI.Microsoft.UI.Text.ITextParagraphFormatMethods.IID);
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, int>**)ThisPtr)[30](ThisPtr, MarshalInspectable<object>.GetAbi(__value)));
                global::System.GC.KeepAlive(_obj);
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__value);
            }
        }

        internal static unsafe void SetText(IObjectReference _obj, global::Microsoft.UI.Text.TextSetOptions options, string value)
        {
            var ThisPtr = _obj.ThisPtr;

            MarshalString.Pinnable __value = new(value);
            fixed(void* ___value = __value)
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::Microsoft.UI.Text.TextSetOptions, IntPtr, int>**)ThisPtr)[31](ThisPtr, options, MarshalString.GetAbi(ref __value)));
                global::System.GC.KeepAlive(_obj);
            }
        }

        internal static unsafe void Undo(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, int>**)ThisPtr)[32](ThisPtr));
            global::System.GC.KeepAlive(_obj);
        }

        internal static unsafe void ClearUndoRedoHistory(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, int>**)ThisPtr)[37](ThisPtr));
            global::System.GC.KeepAlive(_obj);
        }
        internal static unsafe bool get_AlignmentIncludesTrailingWhitespace(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            byte __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, byte*, int>**)ThisPtr)[33](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval != 0;
        }
        internal static unsafe void set_AlignmentIncludesTrailingWhitespace(IObjectReference _obj, bool value)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, byte, int>**)ThisPtr)[34](ThisPtr, (byte)(value ? 1 : 0)));
            global::System.GC.KeepAlive(_obj);
        }

        internal static unsafe global::Microsoft.UI.Text.CaretType get_CaretType(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::Microsoft.UI.Text.CaretType __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::Microsoft.UI.Text.CaretType*, int>**)ThisPtr)[6](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }
        internal static unsafe void set_CaretType(IObjectReference _obj, global::Microsoft.UI.Text.CaretType value)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::Microsoft.UI.Text.CaretType, int>**)ThisPtr)[7](ThisPtr, value));
            global::System.GC.KeepAlive(_obj);
        }

        internal static unsafe float get_DefaultTabStop(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            float __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, float*, int>**)ThisPtr)[8](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }
        internal static unsafe void set_DefaultTabStop(IObjectReference _obj, float value)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, float, int>**)ThisPtr)[9](ThisPtr, value));
            global::System.GC.KeepAlive(_obj);
        }

        internal static unsafe bool get_IgnoreTrailingCharacterSpacing(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            byte __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, byte*, int>**)ThisPtr)[35](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval != 0;
        }
        internal static unsafe void set_IgnoreTrailingCharacterSpacing(IObjectReference _obj, bool value)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, byte, int>**)ThisPtr)[36](ThisPtr, (byte)(value ? 1 : 0)));
            global::System.GC.KeepAlive(_obj);
        }

        internal static unsafe global::Microsoft.UI.Text.ITextSelection get_Selection(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[10](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return MarshalInterface<global::Microsoft.UI.Text.ITextSelection>.FromAbi(__retval);
            }
            finally
            {
                MarshalInterface<global::Microsoft.UI.Text.ITextSelection>.DisposeAbi(__retval);
            }
        }

        internal static unsafe uint get_UndoLimit(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            uint __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, uint*, int>**)ThisPtr)[11](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }
        internal static unsafe void set_UndoLimit(IObjectReference _obj, uint value)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, uint, int>**)ThisPtr)[12](ThisPtr, value));
            global::System.GC.KeepAlive(_obj);
        }



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0x7D, 0xD5, 0x49, 0x11, 0xA6, 0x86, 0xDD, 0x59, 0x88, 0xD9, 0x19, 0x6F, 0x27, 0xBC, 0x5C, 0x85 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("1149D57D-86A6-59DD-88D9-196F27BC5C85")]
    internal interface ITextDocument : global::Microsoft.UI.Text.ITextDocument
    {
    }
    internal static class ITextDocument2Methods
    {


        internal static unsafe global::Microsoft.UI.Text.RichEditMathMode GetMathMode(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::Microsoft.UI.Text.RichEditMathMode __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::Microsoft.UI.Text.RichEditMathMode*, int>**)ThisPtr)[6](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }

        internal static unsafe void SetMathMode(IObjectReference _obj, global::Microsoft.UI.Text.RichEditMathMode mode)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::Microsoft.UI.Text.RichEditMathMode, int>**)ThisPtr)[7](ThisPtr, mode));
            global::System.GC.KeepAlive(_obj);
        }

        internal static unsafe void GetMathML(IObjectReference _obj, out string value)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __value = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[8](ThisPtr, &__value));
                global::System.GC.KeepAlive(_obj);
                value = MarshalString.FromAbi(__value);
            }
            finally
            {
                MarshalString.DisposeAbi(__value);
            }
        }

        internal static unsafe void SetMathML(IObjectReference _obj, string value)
        {
            var ThisPtr = _obj.ThisPtr;

            MarshalString.Pinnable __value = new(value);
            fixed(void* ___value = __value)
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, int>**)ThisPtr)[9](ThisPtr, MarshalString.GetAbi(ref __value)));
                global::System.GC.KeepAlive(_obj);
            }
        }


        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0xF1, 0xBC, 0xFE, 0x21, 0x10, 0x21, 0x79, 0x58, 0xB1, 0xDA, 0xB3, 0x43, 0x9, 0x7E, 0x71, 0xE1 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("21FEBCF1-2110-5879-B1DA-B343097E71E1")]
    internal interface ITextDocument2 : global::Microsoft.UI.Text.ITextDocument2
    {
    }
    public static class ITextParagraphFormatMethods
    {


        public static unsafe void AddTab(IObjectReference _obj, float position, global::Microsoft.UI.Text.TabAlignment align, global::Microsoft.UI.Text.TabLeader leader)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, float, global::Microsoft.UI.Text.TabAlignment, global::Microsoft.UI.Text.TabLeader, int>**)ThisPtr)[45](ThisPtr, position, align, leader));
            global::System.GC.KeepAlive(_obj);
        }

        public static unsafe void ClearAllTabs(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, int>**)ThisPtr)[46](ThisPtr));
            global::System.GC.KeepAlive(_obj);
        }

        public static unsafe void DeleteTab(IObjectReference _obj, float position)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, float, int>**)ThisPtr)[47](ThisPtr, position));
            global::System.GC.KeepAlive(_obj);
        }

        public static unsafe global::Microsoft.UI.Text.ITextParagraphFormat GetClone(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[48](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return MarshalInterface<global::Microsoft.UI.Text.ITextParagraphFormat>.FromAbi(__retval);
            }
            finally
            {
                MarshalInterface<global::Microsoft.UI.Text.ITextParagraphFormat>.DisposeAbi(__retval);
            }
        }

        public static unsafe void GetTab(IObjectReference _obj, int index, out float position, out global::Microsoft.UI.Text.TabAlignment align, out global::Microsoft.UI.Text.TabLeader leader)
        {
            var ThisPtr = _obj.ThisPtr;

            float __position = default;
            global::Microsoft.UI.Text.TabAlignment __align = default;
            global::Microsoft.UI.Text.TabLeader __leader = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, int, float*, global::Microsoft.UI.Text.TabAlignment*, global::Microsoft.UI.Text.TabLeader*, int>**)ThisPtr)[49](ThisPtr, index, &__position, &__align, &__leader));
            global::System.GC.KeepAlive(_obj);
            position = __position;
            align = __align;
            leader = __leader;
        }

        public static unsafe bool IsEqual(IObjectReference _obj, global::Microsoft.UI.Text.ITextParagraphFormat format)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __format = default;
            byte __retval = default;
            try
            {
                __format = MarshalInterface<global::Microsoft.UI.Text.ITextParagraphFormat>.CreateMarshaler2(format, global::ABI.Microsoft.UI.Text.ITextParagraphFormatMethods.IID);
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, byte*, int>**)ThisPtr)[50](ThisPtr, MarshalInspectable<object>.GetAbi(__format), &__retval));
                global::System.GC.KeepAlive(_obj);
                return __retval != 0;
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__format);
            }
        }

        public static unsafe void SetClone(IObjectReference _obj, global::Microsoft.UI.Text.ITextParagraphFormat format)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __format = default;
            try
            {
                __format = MarshalInterface<global::Microsoft.UI.Text.ITextParagraphFormat>.CreateMarshaler2(format, global::ABI.Microsoft.UI.Text.ITextParagraphFormatMethods.IID);
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, int>**)ThisPtr)[51](ThisPtr, MarshalInspectable<object>.GetAbi(__format)));
                global::System.GC.KeepAlive(_obj);
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__format);
            }
        }

        public static unsafe void SetIndents(IObjectReference _obj, float start, float left, float right)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, float, float, float, int>**)ThisPtr)[52](ThisPtr, start, left, right));
            global::System.GC.KeepAlive(_obj);
        }

        public static unsafe void SetLineSpacing(IObjectReference _obj, global::Microsoft.UI.Text.LineSpacingRule rule, float spacing)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::Microsoft.UI.Text.LineSpacingRule, float, int>**)ThisPtr)[53](ThisPtr, rule, spacing));
            global::System.GC.KeepAlive(_obj);
        }
        public static unsafe global::Microsoft.UI.Text.ParagraphAlignment get_Alignment(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::Microsoft.UI.Text.ParagraphAlignment __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::Microsoft.UI.Text.ParagraphAlignment*, int>**)ThisPtr)[6](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }
        public static unsafe void set_Alignment(IObjectReference _obj, global::Microsoft.UI.Text.ParagraphAlignment value)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::Microsoft.UI.Text.ParagraphAlignment, int>**)ThisPtr)[7](ThisPtr, value));
            global::System.GC.KeepAlive(_obj);
        }

        public static unsafe float get_FirstLineIndent(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            float __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, float*, int>**)ThisPtr)[8](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }

        public static unsafe global::Microsoft.UI.Text.FormatEffect get_KeepTogether(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::Microsoft.UI.Text.FormatEffect __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::Microsoft.UI.Text.FormatEffect*, int>**)ThisPtr)[9](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }
        public static unsafe void set_KeepTogether(IObjectReference _obj, global::Microsoft.UI.Text.FormatEffect value)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::Microsoft.UI.Text.FormatEffect, int>**)ThisPtr)[10](ThisPtr, value));
            global::System.GC.KeepAlive(_obj);
        }

        public static unsafe global::Microsoft.UI.Text.FormatEffect get_KeepWithNext(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::Microsoft.UI.Text.FormatEffect __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::Microsoft.UI.Text.FormatEffect*, int>**)ThisPtr)[11](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }
        public static unsafe void set_KeepWithNext(IObjectReference _obj, global::Microsoft.UI.Text.FormatEffect value)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::Microsoft.UI.Text.FormatEffect, int>**)ThisPtr)[12](ThisPtr, value));
            global::System.GC.KeepAlive(_obj);
        }

        public static unsafe float get_LeftIndent(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            float __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, float*, int>**)ThisPtr)[13](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }

        public static unsafe float get_LineSpacing(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            float __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, float*, int>**)ThisPtr)[14](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }

        public static unsafe global::Microsoft.UI.Text.LineSpacingRule get_LineSpacingRule(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::Microsoft.UI.Text.LineSpacingRule __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::Microsoft.UI.Text.LineSpacingRule*, int>**)ThisPtr)[15](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }

        public static unsafe global::Microsoft.UI.Text.MarkerAlignment get_ListAlignment(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::Microsoft.UI.Text.MarkerAlignment __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::Microsoft.UI.Text.MarkerAlignment*, int>**)ThisPtr)[16](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }
        public static unsafe void set_ListAlignment(IObjectReference _obj, global::Microsoft.UI.Text.MarkerAlignment value)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::Microsoft.UI.Text.MarkerAlignment, int>**)ThisPtr)[17](ThisPtr, value));
            global::System.GC.KeepAlive(_obj);
        }

        public static unsafe int get_ListLevelIndex(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            int __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, int*, int>**)ThisPtr)[18](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }
        public static unsafe void set_ListLevelIndex(IObjectReference _obj, int value)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, int, int>**)ThisPtr)[19](ThisPtr, value));
            global::System.GC.KeepAlive(_obj);
        }

        public static unsafe int get_ListStart(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            int __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, int*, int>**)ThisPtr)[20](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }
        public static unsafe void set_ListStart(IObjectReference _obj, int value)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, int, int>**)ThisPtr)[21](ThisPtr, value));
            global::System.GC.KeepAlive(_obj);
        }

        public static unsafe global::Microsoft.UI.Text.MarkerStyle get_ListStyle(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::Microsoft.UI.Text.MarkerStyle __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::Microsoft.UI.Text.MarkerStyle*, int>**)ThisPtr)[22](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }
        public static unsafe void set_ListStyle(IObjectReference _obj, global::Microsoft.UI.Text.MarkerStyle value)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::Microsoft.UI.Text.MarkerStyle, int>**)ThisPtr)[23](ThisPtr, value));
            global::System.GC.KeepAlive(_obj);
        }

        public static unsafe float get_ListTab(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            float __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, float*, int>**)ThisPtr)[24](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }
        public static unsafe void set_ListTab(IObjectReference _obj, float value)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, float, int>**)ThisPtr)[25](ThisPtr, value));
            global::System.GC.KeepAlive(_obj);
        }

        public static unsafe global::Microsoft.UI.Text.MarkerType get_ListType(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::Microsoft.UI.Text.MarkerType __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::Microsoft.UI.Text.MarkerType*, int>**)ThisPtr)[26](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }
        public static unsafe void set_ListType(IObjectReference _obj, global::Microsoft.UI.Text.MarkerType value)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::Microsoft.UI.Text.MarkerType, int>**)ThisPtr)[27](ThisPtr, value));
            global::System.GC.KeepAlive(_obj);
        }

        public static unsafe global::Microsoft.UI.Text.FormatEffect get_NoLineNumber(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::Microsoft.UI.Text.FormatEffect __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::Microsoft.UI.Text.FormatEffect*, int>**)ThisPtr)[28](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }
        public static unsafe void set_NoLineNumber(IObjectReference _obj, global::Microsoft.UI.Text.FormatEffect value)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::Microsoft.UI.Text.FormatEffect, int>**)ThisPtr)[29](ThisPtr, value));
            global::System.GC.KeepAlive(_obj);
        }

        public static unsafe global::Microsoft.UI.Text.FormatEffect get_PageBreakBefore(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::Microsoft.UI.Text.FormatEffect __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::Microsoft.UI.Text.FormatEffect*, int>**)ThisPtr)[30](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }
        public static unsafe void set_PageBreakBefore(IObjectReference _obj, global::Microsoft.UI.Text.FormatEffect value)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::Microsoft.UI.Text.FormatEffect, int>**)ThisPtr)[31](ThisPtr, value));
            global::System.GC.KeepAlive(_obj);
        }

        public static unsafe float get_RightIndent(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            float __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, float*, int>**)ThisPtr)[32](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }
        public static unsafe void set_RightIndent(IObjectReference _obj, float value)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, float, int>**)ThisPtr)[33](ThisPtr, value));
            global::System.GC.KeepAlive(_obj);
        }

        public static unsafe global::Microsoft.UI.Text.FormatEffect get_RightToLeft(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::Microsoft.UI.Text.FormatEffect __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::Microsoft.UI.Text.FormatEffect*, int>**)ThisPtr)[34](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }
        public static unsafe void set_RightToLeft(IObjectReference _obj, global::Microsoft.UI.Text.FormatEffect value)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::Microsoft.UI.Text.FormatEffect, int>**)ThisPtr)[35](ThisPtr, value));
            global::System.GC.KeepAlive(_obj);
        }

        public static unsafe float get_SpaceAfter(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            float __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, float*, int>**)ThisPtr)[38](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }
        public static unsafe void set_SpaceAfter(IObjectReference _obj, float value)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, float, int>**)ThisPtr)[39](ThisPtr, value));
            global::System.GC.KeepAlive(_obj);
        }

        public static unsafe float get_SpaceBefore(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            float __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, float*, int>**)ThisPtr)[40](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }
        public static unsafe void set_SpaceBefore(IObjectReference _obj, float value)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, float, int>**)ThisPtr)[41](ThisPtr, value));
            global::System.GC.KeepAlive(_obj);
        }

        public static unsafe global::Microsoft.UI.Text.ParagraphStyle get_Style(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::Microsoft.UI.Text.ParagraphStyle __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::Microsoft.UI.Text.ParagraphStyle*, int>**)ThisPtr)[36](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }
        public static unsafe void set_Style(IObjectReference _obj, global::Microsoft.UI.Text.ParagraphStyle value)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::Microsoft.UI.Text.ParagraphStyle, int>**)ThisPtr)[37](ThisPtr, value));
            global::System.GC.KeepAlive(_obj);
        }

        public static unsafe int get_TabCount(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            int __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, int*, int>**)ThisPtr)[44](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }

        public static unsafe global::Microsoft.UI.Text.FormatEffect get_WidowControl(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::Microsoft.UI.Text.FormatEffect __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::Microsoft.UI.Text.FormatEffect*, int>**)ThisPtr)[42](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }
        public static unsafe void set_WidowControl(IObjectReference _obj, global::Microsoft.UI.Text.FormatEffect value)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::Microsoft.UI.Text.FormatEffect, int>**)ThisPtr)[43](ThisPtr, value));
            global::System.GC.KeepAlive(_obj);
        }



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0xDF, 0x6C, 0x9B, 0x21, 0xB, 0xD, 0x1, 0x57, 0xB8, 0xA1, 0x6C, 0x90, 0x6B, 0x3E, 0xBB, 0xE1 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

        public static global::System.IntPtr AbiToProjectionVftablePtr => ITextParagraphFormat.AbiToProjectionVftablePtr;

    }
    [DynamicInterfaceCastableImplementation]
    [Guid("219B6CDF-0D0B-5701-B8A1-6C906B3EBBE1")]
    internal unsafe interface ITextParagraphFormat : global::Microsoft.UI.Text.ITextParagraphFormat
    {

        public static readonly IntPtr AbiToProjectionVftablePtr;
        static unsafe ITextParagraphFormat()
        {
            AbiToProjectionVftablePtr = ComWrappersSupport.AllocateVtableMemory(typeof(ITextParagraphFormat), sizeof(IInspectable.Vftbl) + sizeof(IntPtr) * 48);
            *(IInspectable.Vftbl*)AbiToProjectionVftablePtr = IInspectable.Vftbl.AbiToProjectionVftable;
            ((delegate* unmanaged[Stdcall]<IntPtr, global::Microsoft.UI.Text.ParagraphAlignment*, int>*)AbiToProjectionVftablePtr)[6] = &Do_Abi_get_Alignment_0;
            ((delegate* unmanaged[Stdcall]<IntPtr, global::Microsoft.UI.Text.ParagraphAlignment, int>*)AbiToProjectionVftablePtr)[7] = &Do_Abi_put_Alignment_1;
            ((delegate* unmanaged[Stdcall]<IntPtr, float*, int>*)AbiToProjectionVftablePtr)[8] = &Do_Abi_get_FirstLineIndent_2;
            ((delegate* unmanaged[Stdcall]<IntPtr, global::Microsoft.UI.Text.FormatEffect*, int>*)AbiToProjectionVftablePtr)[9] = &Do_Abi_get_KeepTogether_3;
            ((delegate* unmanaged[Stdcall]<IntPtr, global::Microsoft.UI.Text.FormatEffect, int>*)AbiToProjectionVftablePtr)[10] = &Do_Abi_put_KeepTogether_4;
            ((delegate* unmanaged[Stdcall]<IntPtr, global::Microsoft.UI.Text.FormatEffect*, int>*)AbiToProjectionVftablePtr)[11] = &Do_Abi_get_KeepWithNext_5;
            ((delegate* unmanaged[Stdcall]<IntPtr, global::Microsoft.UI.Text.FormatEffect, int>*)AbiToProjectionVftablePtr)[12] = &Do_Abi_put_KeepWithNext_6;
            ((delegate* unmanaged[Stdcall]<IntPtr, float*, int>*)AbiToProjectionVftablePtr)[13] = &Do_Abi_get_LeftIndent_7;
            ((delegate* unmanaged[Stdcall]<IntPtr, float*, int>*)AbiToProjectionVftablePtr)[14] = &Do_Abi_get_LineSpacing_8;
            ((delegate* unmanaged[Stdcall]<IntPtr, global::Microsoft.UI.Text.LineSpacingRule*, int>*)AbiToProjectionVftablePtr)[15] = &Do_Abi_get_LineSpacingRule_9;
            ((delegate* unmanaged[Stdcall]<IntPtr, global::Microsoft.UI.Text.MarkerAlignment*, int>*)AbiToProjectionVftablePtr)[16] = &Do_Abi_get_ListAlignment_10;
            ((delegate* unmanaged[Stdcall]<IntPtr, global::Microsoft.UI.Text.MarkerAlignment, int>*)AbiToProjectionVftablePtr)[17] = &Do_Abi_put_ListAlignment_11;
            ((delegate* unmanaged[Stdcall]<IntPtr, int*, int>*)AbiToProjectionVftablePtr)[18] = &Do_Abi_get_ListLevelIndex_12;
            ((delegate* unmanaged[Stdcall]<IntPtr, int, int>*)AbiToProjectionVftablePtr)[19] = &Do_Abi_put_ListLevelIndex_13;
            ((delegate* unmanaged[Stdcall]<IntPtr, int*, int>*)AbiToProjectionVftablePtr)[20] = &Do_Abi_get_ListStart_14;
            ((delegate* unmanaged[Stdcall]<IntPtr, int, int>*)AbiToProjectionVftablePtr)[21] = &Do_Abi_put_ListStart_15;
            ((delegate* unmanaged[Stdcall]<IntPtr, global::Microsoft.UI.Text.MarkerStyle*, int>*)AbiToProjectionVftablePtr)[22] = &Do_Abi_get_ListStyle_16;
            ((delegate* unmanaged[Stdcall]<IntPtr, global::Microsoft.UI.Text.MarkerStyle, int>*)AbiToProjectionVftablePtr)[23] = &Do_Abi_put_ListStyle_17;
            ((delegate* unmanaged[Stdcall]<IntPtr, float*, int>*)AbiToProjectionVftablePtr)[24] = &Do_Abi_get_ListTab_18;
            ((delegate* unmanaged[Stdcall]<IntPtr, float, int>*)AbiToProjectionVftablePtr)[25] = &Do_Abi_put_ListTab_19;
            ((delegate* unmanaged[Stdcall]<IntPtr, global::Microsoft.UI.Text.MarkerType*, int>*)AbiToProjectionVftablePtr)[26] = &Do_Abi_get_ListType_20;
            ((delegate* unmanaged[Stdcall]<IntPtr, global::Microsoft.UI.Text.MarkerType, int>*)AbiToProjectionVftablePtr)[27] = &Do_Abi_put_ListType_21;
            ((delegate* unmanaged[Stdcall]<IntPtr, global::Microsoft.UI.Text.FormatEffect*, int>*)AbiToProjectionVftablePtr)[28] = &Do_Abi_get_NoLineNumber_22;
            ((delegate* unmanaged[Stdcall]<IntPtr, global::Microsoft.UI.Text.FormatEffect, int>*)AbiToProjectionVftablePtr)[29] = &Do_Abi_put_NoLineNumber_23;
            ((delegate* unmanaged[Stdcall]<IntPtr, global::Microsoft.UI.Text.FormatEffect*, int>*)AbiToProjectionVftablePtr)[30] = &Do_Abi_get_PageBreakBefore_24;
            ((delegate* unmanaged[Stdcall]<IntPtr, global::Microsoft.UI.Text.FormatEffect, int>*)AbiToProjectionVftablePtr)[31] = &Do_Abi_put_PageBreakBefore_25;
            ((delegate* unmanaged[Stdcall]<IntPtr, float*, int>*)AbiToProjectionVftablePtr)[32] = &Do_Abi_get_RightIndent_26;
            ((delegate* unmanaged[Stdcall]<IntPtr, float, int>*)AbiToProjectionVftablePtr)[33] = &Do_Abi_put_RightIndent_27;
            ((delegate* unmanaged[Stdcall]<IntPtr, global::Microsoft.UI.Text.FormatEffect*, int>*)AbiToProjectionVftablePtr)[34] = &Do_Abi_get_RightToLeft_28;
            ((delegate* unmanaged[Stdcall]<IntPtr, global::Microsoft.UI.Text.FormatEffect, int>*)AbiToProjectionVftablePtr)[35] = &Do_Abi_put_RightToLeft_29;
            ((delegate* unmanaged[Stdcall]<IntPtr, global::Microsoft.UI.Text.ParagraphStyle*, int>*)AbiToProjectionVftablePtr)[36] = &Do_Abi_get_Style_30;
            ((delegate* unmanaged[Stdcall]<IntPtr, global::Microsoft.UI.Text.ParagraphStyle, int>*)AbiToProjectionVftablePtr)[37] = &Do_Abi_put_Style_31;
            ((delegate* unmanaged[Stdcall]<IntPtr, float*, int>*)AbiToProjectionVftablePtr)[38] = &Do_Abi_get_SpaceAfter_32;
            ((delegate* unmanaged[Stdcall]<IntPtr, float, int>*)AbiToProjectionVftablePtr)[39] = &Do_Abi_put_SpaceAfter_33;
            ((delegate* unmanaged[Stdcall]<IntPtr, float*, int>*)AbiToProjectionVftablePtr)[40] = &Do_Abi_get_SpaceBefore_34;
            ((delegate* unmanaged[Stdcall]<IntPtr, float, int>*)AbiToProjectionVftablePtr)[41] = &Do_Abi_put_SpaceBefore_35;
            ((delegate* unmanaged[Stdcall]<IntPtr, global::Microsoft.UI.Text.FormatEffect*, int>*)AbiToProjectionVftablePtr)[42] = &Do_Abi_get_WidowControl_36;
            ((delegate* unmanaged[Stdcall]<IntPtr, global::Microsoft.UI.Text.FormatEffect, int>*)AbiToProjectionVftablePtr)[43] = &Do_Abi_put_WidowControl_37;
            ((delegate* unmanaged[Stdcall]<IntPtr, int*, int>*)AbiToProjectionVftablePtr)[44] = &Do_Abi_get_TabCount_38;
            ((delegate* unmanaged[Stdcall]<IntPtr, float, global::Microsoft.UI.Text.TabAlignment, global::Microsoft.UI.Text.TabLeader, int>*)AbiToProjectionVftablePtr)[45] = &Do_Abi_AddTab_39;
            ((delegate* unmanaged[Stdcall]<IntPtr, int>*)AbiToProjectionVftablePtr)[46] = &Do_Abi_ClearAllTabs_40;
            ((delegate* unmanaged[Stdcall]<IntPtr, float, int>*)AbiToProjectionVftablePtr)[47] = &Do_Abi_DeleteTab_41;
            ((delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>*)AbiToProjectionVftablePtr)[48] = &Do_Abi_GetClone_42;
            ((delegate* unmanaged[Stdcall]<IntPtr, int, float*, global::Microsoft.UI.Text.TabAlignment*, global::Microsoft.UI.Text.TabLeader*, int>*)AbiToProjectionVftablePtr)[49] = &Do_Abi_GetTab_43;
            ((delegate* unmanaged[Stdcall]<IntPtr, IntPtr, byte*, int>*)AbiToProjectionVftablePtr)[50] = &Do_Abi_IsEqual_44;
            ((delegate* unmanaged[Stdcall]<IntPtr, IntPtr, int>*)AbiToProjectionVftablePtr)[51] = &Do_Abi_SetClone_45;
            ((delegate* unmanaged[Stdcall]<IntPtr, float, float, float, int>*)AbiToProjectionVftablePtr)[52] = &Do_Abi_SetIndents_46;
            ((delegate* unmanaged[Stdcall]<IntPtr, global::Microsoft.UI.Text.LineSpacingRule, float, int>*)AbiToProjectionVftablePtr)[53] = &Do_Abi_SetLineSpacing_47;
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvStdcall) })]
        private static unsafe int Do_Abi_AddTab_39(IntPtr thisPtr, float position, global::Microsoft.UI.Text.TabAlignment align, global::Microsoft.UI.Text.TabLeader leader)
        {



            try
            {
                global::WinRT.ComWrappersSupport.FindObject<global::Microsoft.UI.Text.ITextParagraphFormat>(thisPtr).AddTab(position, align, leader);

            }
            catch (Exception __exception__)
            {
                global::WinRT.ExceptionHelpers.SetErrorInfo(__exception__);
                return global::WinRT.ExceptionHelpers.GetHRForException(__exception__);
            }
            return 0;
        }
        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvStdcall) })]
        private static unsafe int Do_Abi_ClearAllTabs_40(IntPtr thisPtr)
        {



            try
            {
                global::WinRT.ComWrappersSupport.FindObject<global::Microsoft.UI.Text.ITextParagraphFormat>(thisPtr).ClearAllTabs();

            }
            catch (Exception __exception__)
            {
                global::WinRT.ExceptionHelpers.SetErrorInfo(__exception__);
                return global::WinRT.ExceptionHelpers.GetHRForException(__exception__);
            }
            return 0;
        }
        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvStdcall) })]
        private static unsafe int Do_Abi_DeleteTab_41(IntPtr thisPtr, float position)
        {



            try
            {
                global::WinRT.ComWrappersSupport.FindObject<global::Microsoft.UI.Text.ITextParagraphFormat>(thisPtr).DeleteTab(position);

            }
            catch (Exception __exception__)
            {
                global::WinRT.ExceptionHelpers.SetErrorInfo(__exception__);
                return global::WinRT.ExceptionHelpers.GetHRForException(__exception__);
            }
            return 0;
        }
        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvStdcall) })]
        private static unsafe int Do_Abi_GetClone_42(IntPtr thisPtr, IntPtr* result)
        {

            global::Microsoft.UI.Text.ITextParagraphFormat __result = default;

            *result = default;

            try
            {
                __result = global::WinRT.ComWrappersSupport.FindObject<global::Microsoft.UI.Text.ITextParagraphFormat>(thisPtr).GetClone();
                *result = MarshalInterface<global::Microsoft.UI.Text.ITextParagraphFormat>.FromManaged(__result);

            }
            catch (Exception __exception__)
            {
                global::WinRT.ExceptionHelpers.SetErrorInfo(__exception__);
                return global::WinRT.ExceptionHelpers.GetHRForException(__exception__);
            }
            return 0;
        }
        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvStdcall) })]
        private static unsafe int Do_Abi_GetTab_43(IntPtr thisPtr, int index, float* position, global::Microsoft.UI.Text.TabAlignment* align, global::Microsoft.UI.Text.TabLeader* leader)
        {


            *position = default;
            *align = default;
            *leader = default;
            float __position = default;
            global::Microsoft.UI.Text.TabAlignment __align = default;
            global::Microsoft.UI.Text.TabLeader __leader = default;

            try
            {
                global::WinRT.ComWrappersSupport.FindObject<global::Microsoft.UI.Text.ITextParagraphFormat>(thisPtr).GetTab(index, out __position, out __align, out __leader);
                *position = __position;
                *align = __align;
                *leader = __leader;

            }
            catch (Exception __exception__)
            {
                global::WinRT.ExceptionHelpers.SetErrorInfo(__exception__);
                return global::WinRT.ExceptionHelpers.GetHRForException(__exception__);
            }
            return 0;
        }
        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvStdcall) })]
        private static unsafe int Do_Abi_IsEqual_44(IntPtr thisPtr, IntPtr format, byte* result)
        {

            bool __result = default;

            *result = default;

            try
            {
                __result = global::WinRT.ComWrappersSupport.FindObject<global::Microsoft.UI.Text.ITextParagraphFormat>(thisPtr).IsEqual(MarshalInterface<global::Microsoft.UI.Text.ITextParagraphFormat>.FromAbi(format));
                *result = (byte)(__result ? 1 : 0);

            }
            catch (Exception __exception__)
            {
                global::WinRT.ExceptionHelpers.SetErrorInfo(__exception__);
                return global::WinRT.ExceptionHelpers.GetHRForException(__exception__);
            }
            return 0;
        }
        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvStdcall) })]
        private static unsafe int Do_Abi_SetClone_45(IntPtr thisPtr, IntPtr format)
        {



            try
            {
                global::WinRT.ComWrappersSupport.FindObject<global::Microsoft.UI.Text.ITextParagraphFormat>(thisPtr).SetClone(MarshalInterface<global::Microsoft.UI.Text.ITextParagraphFormat>.FromAbi(format));

            }
            catch (Exception __exception__)
            {
                global::WinRT.ExceptionHelpers.SetErrorInfo(__exception__);
                return global::WinRT.ExceptionHelpers.GetHRForException(__exception__);
            }
            return 0;
        }
        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvStdcall) })]
        private static unsafe int Do_Abi_SetIndents_46(IntPtr thisPtr, float start, float left, float right)
        {



            try
            {
                global::WinRT.ComWrappersSupport.FindObject<global::Microsoft.UI.Text.ITextParagraphFormat>(thisPtr).SetIndents(start, left, right);

            }
            catch (Exception __exception__)
            {
                global::WinRT.ExceptionHelpers.SetErrorInfo(__exception__);
                return global::WinRT.ExceptionHelpers.GetHRForException(__exception__);
            }
            return 0;
        }
        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvStdcall) })]
        private static unsafe int Do_Abi_SetLineSpacing_47(IntPtr thisPtr, global::Microsoft.UI.Text.LineSpacingRule rule, float spacing)
        {



            try
            {
                global::WinRT.ComWrappersSupport.FindObject<global::Microsoft.UI.Text.ITextParagraphFormat>(thisPtr).SetLineSpacing(rule, spacing);

            }
            catch (Exception __exception__)
            {
                global::WinRT.ExceptionHelpers.SetErrorInfo(__exception__);
                return global::WinRT.ExceptionHelpers.GetHRForException(__exception__);
            }
            return 0;
        }
        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvStdcall) })]
        private static unsafe int Do_Abi_put_Alignment_1(IntPtr thisPtr, global::Microsoft.UI.Text.ParagraphAlignment value)
        {



            try
            {
                global::WinRT.ComWrappersSupport.FindObject<global::Microsoft.UI.Text.ITextParagraphFormat>(thisPtr).Alignment = value;

            }
            catch (Exception __exception__)
            {
                global::WinRT.ExceptionHelpers.SetErrorInfo(__exception__);
                return global::WinRT.ExceptionHelpers.GetHRForException(__exception__);
            }
            return 0;
        }
        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvStdcall) })]
        private static unsafe int Do_Abi_get_Alignment_0(IntPtr thisPtr, global::Microsoft.UI.Text.ParagraphAlignment* value)
        {

            global::Microsoft.UI.Text.ParagraphAlignment __value = default;

            *value = default;

            try
            {
                __value = global::WinRT.ComWrappersSupport.FindObject<global::Microsoft.UI.Text.ITextParagraphFormat>(thisPtr).Alignment;
                *value = __value;

            }
            catch (Exception __exception__)
            {
                global::WinRT.ExceptionHelpers.SetErrorInfo(__exception__);
                return global::WinRT.ExceptionHelpers.GetHRForException(__exception__);
            }
            return 0;
        }
        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvStdcall) })]
        private static unsafe int Do_Abi_get_FirstLineIndent_2(IntPtr thisPtr, float* value)
        {

            float __value = default;

            *value = default;

            try
            {
                __value = global::WinRT.ComWrappersSupport.FindObject<global::Microsoft.UI.Text.ITextParagraphFormat>(thisPtr).FirstLineIndent;
                *value = __value;

            }
            catch (Exception __exception__)
            {
                global::WinRT.ExceptionHelpers.SetErrorInfo(__exception__);
                return global::WinRT.ExceptionHelpers.GetHRForException(__exception__);
            }
            return 0;
        }
        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvStdcall) })]
        private static unsafe int Do_Abi_put_KeepTogether_4(IntPtr thisPtr, global::Microsoft.UI.Text.FormatEffect value)
        {



            try
            {
                global::WinRT.ComWrappersSupport.FindObject<global::Microsoft.UI.Text.ITextParagraphFormat>(thisPtr).KeepTogether = value;

            }
            catch (Exception __exception__)
            {
                global::WinRT.ExceptionHelpers.SetErrorInfo(__exception__);
                return global::WinRT.ExceptionHelpers.GetHRForException(__exception__);
            }
            return 0;
        }
        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvStdcall) })]
        private static unsafe int Do_Abi_get_KeepTogether_3(IntPtr thisPtr, global::Microsoft.UI.Text.FormatEffect* value)
        {

            global::Microsoft.UI.Text.FormatEffect __value = default;

            *value = default;

            try
            {
                __value = global::WinRT.ComWrappersSupport.FindObject<global::Microsoft.UI.Text.ITextParagraphFormat>(thisPtr).KeepTogether;
                *value = __value;

            }
            catch (Exception __exception__)
            {
                global::WinRT.ExceptionHelpers.SetErrorInfo(__exception__);
                return global::WinRT.ExceptionHelpers.GetHRForException(__exception__);
            }
            return 0;
        }
        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvStdcall) })]
        private static unsafe int Do_Abi_put_KeepWithNext_6(IntPtr thisPtr, global::Microsoft.UI.Text.FormatEffect value)
        {



            try
            {
                global::WinRT.ComWrappersSupport.FindObject<global::Microsoft.UI.Text.ITextParagraphFormat>(thisPtr).KeepWithNext = value;

            }
            catch (Exception __exception__)
            {
                global::WinRT.ExceptionHelpers.SetErrorInfo(__exception__);
                return global::WinRT.ExceptionHelpers.GetHRForException(__exception__);
            }
            return 0;
        }
        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvStdcall) })]
        private static unsafe int Do_Abi_get_KeepWithNext_5(IntPtr thisPtr, global::Microsoft.UI.Text.FormatEffect* value)
        {

            global::Microsoft.UI.Text.FormatEffect __value = default;

            *value = default;

            try
            {
                __value = global::WinRT.ComWrappersSupport.FindObject<global::Microsoft.UI.Text.ITextParagraphFormat>(thisPtr).KeepWithNext;
                *value = __value;

            }
            catch (Exception __exception__)
            {
                global::WinRT.ExceptionHelpers.SetErrorInfo(__exception__);
                return global::WinRT.ExceptionHelpers.GetHRForException(__exception__);
            }
            return 0;
        }
        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvStdcall) })]
        private static unsafe int Do_Abi_get_LeftIndent_7(IntPtr thisPtr, float* value)
        {

            float __value = default;

            *value = default;

            try
            {
                __value = global::WinRT.ComWrappersSupport.FindObject<global::Microsoft.UI.Text.ITextParagraphFormat>(thisPtr).LeftIndent;
                *value = __value;

            }
            catch (Exception __exception__)
            {
                global::WinRT.ExceptionHelpers.SetErrorInfo(__exception__);
                return global::WinRT.ExceptionHelpers.GetHRForException(__exception__);
            }
            return 0;
        }
        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvStdcall) })]
        private static unsafe int Do_Abi_get_LineSpacing_8(IntPtr thisPtr, float* value)
        {

            float __value = default;

            *value = default;

            try
            {
                __value = global::WinRT.ComWrappersSupport.FindObject<global::Microsoft.UI.Text.ITextParagraphFormat>(thisPtr).LineSpacing;
                *value = __value;

            }
            catch (Exception __exception__)
            {
                global::WinRT.ExceptionHelpers.SetErrorInfo(__exception__);
                return global::WinRT.ExceptionHelpers.GetHRForException(__exception__);
            }
            return 0;
        }
        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvStdcall) })]
        private static unsafe int Do_Abi_get_LineSpacingRule_9(IntPtr thisPtr, global::Microsoft.UI.Text.LineSpacingRule* value)
        {

            global::Microsoft.UI.Text.LineSpacingRule __value = default;

            *value = default;

            try
            {
                __value = global::WinRT.ComWrappersSupport.FindObject<global::Microsoft.UI.Text.ITextParagraphFormat>(thisPtr).LineSpacingRule;
                *value = __value;

            }
            catch (Exception __exception__)
            {
                global::WinRT.ExceptionHelpers.SetErrorInfo(__exception__);
                return global::WinRT.ExceptionHelpers.GetHRForException(__exception__);
            }
            return 0;
        }
        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvStdcall) })]
        private static unsafe int Do_Abi_put_ListAlignment_11(IntPtr thisPtr, global::Microsoft.UI.Text.MarkerAlignment value)
        {



            try
            {
                global::WinRT.ComWrappersSupport.FindObject<global::Microsoft.UI.Text.ITextParagraphFormat>(thisPtr).ListAlignment = value;

            }
            catch (Exception __exception__)
            {
                global::WinRT.ExceptionHelpers.SetErrorInfo(__exception__);
                return global::WinRT.ExceptionHelpers.GetHRForException(__exception__);
            }
            return 0;
        }
        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvStdcall) })]
        private static unsafe int Do_Abi_get_ListAlignment_10(IntPtr thisPtr, global::Microsoft.UI.Text.MarkerAlignment* value)
        {

            global::Microsoft.UI.Text.MarkerAlignment __value = default;

            *value = default;

            try
            {
                __value = global::WinRT.ComWrappersSupport.FindObject<global::Microsoft.UI.Text.ITextParagraphFormat>(thisPtr).ListAlignment;
                *value = __value;

            }
            catch (Exception __exception__)
            {
                global::WinRT.ExceptionHelpers.SetErrorInfo(__exception__);
                return global::WinRT.ExceptionHelpers.GetHRForException(__exception__);
            }
            return 0;
        }
        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvStdcall) })]
        private static unsafe int Do_Abi_put_ListLevelIndex_13(IntPtr thisPtr, int value)
        {



            try
            {
                global::WinRT.ComWrappersSupport.FindObject<global::Microsoft.UI.Text.ITextParagraphFormat>(thisPtr).ListLevelIndex = value;

            }
            catch (Exception __exception__)
            {
                global::WinRT.ExceptionHelpers.SetErrorInfo(__exception__);
                return global::WinRT.ExceptionHelpers.GetHRForException(__exception__);
            }
            return 0;
        }
        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvStdcall) })]
        private static unsafe int Do_Abi_get_ListLevelIndex_12(IntPtr thisPtr, int* value)
        {

            int __value = default;

            *value = default;

            try
            {
                __value = global::WinRT.ComWrappersSupport.FindObject<global::Microsoft.UI.Text.ITextParagraphFormat>(thisPtr).ListLevelIndex;
                *value = __value;

            }
            catch (Exception __exception__)
            {
                global::WinRT.ExceptionHelpers.SetErrorInfo(__exception__);
                return global::WinRT.ExceptionHelpers.GetHRForException(__exception__);
            }
            return 0;
        }
        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvStdcall) })]
        private static unsafe int Do_Abi_put_ListStart_15(IntPtr thisPtr, int value)
        {



            try
            {
                global::WinRT.ComWrappersSupport.FindObject<global::Microsoft.UI.Text.ITextParagraphFormat>(thisPtr).ListStart = value;

            }
            catch (Exception __exception__)
            {
                global::WinRT.ExceptionHelpers.SetErrorInfo(__exception__);
                return global::WinRT.ExceptionHelpers.GetHRForException(__exception__);
            }
            return 0;
        }
        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvStdcall) })]
        private static unsafe int Do_Abi_get_ListStart_14(IntPtr thisPtr, int* value)
        {

            int __value = default;

            *value = default;

            try
            {
                __value = global::WinRT.ComWrappersSupport.FindObject<global::Microsoft.UI.Text.ITextParagraphFormat>(thisPtr).ListStart;
                *value = __value;

            }
            catch (Exception __exception__)
            {
                global::WinRT.ExceptionHelpers.SetErrorInfo(__exception__);
                return global::WinRT.ExceptionHelpers.GetHRForException(__exception__);
            }
            return 0;
        }
        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvStdcall) })]
        private static unsafe int Do_Abi_put_ListStyle_17(IntPtr thisPtr, global::Microsoft.UI.Text.MarkerStyle value)
        {



            try
            {
                global::WinRT.ComWrappersSupport.FindObject<global::Microsoft.UI.Text.ITextParagraphFormat>(thisPtr).ListStyle = value;

            }
            catch (Exception __exception__)
            {
                global::WinRT.ExceptionHelpers.SetErrorInfo(__exception__);
                return global::WinRT.ExceptionHelpers.GetHRForException(__exception__);
            }
            return 0;
        }
        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvStdcall) })]
        private static unsafe int Do_Abi_get_ListStyle_16(IntPtr thisPtr, global::Microsoft.UI.Text.MarkerStyle* value)
        {

            global::Microsoft.UI.Text.MarkerStyle __value = default;

            *value = default;

            try
            {
                __value = global::WinRT.ComWrappersSupport.FindObject<global::Microsoft.UI.Text.ITextParagraphFormat>(thisPtr).ListStyle;
                *value = __value;

            }
            catch (Exception __exception__)
            {
                global::WinRT.ExceptionHelpers.SetErrorInfo(__exception__);
                return global::WinRT.ExceptionHelpers.GetHRForException(__exception__);
            }
            return 0;
        }
        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvStdcall) })]
        private static unsafe int Do_Abi_put_ListTab_19(IntPtr thisPtr, float value)
        {



            try
            {
                global::WinRT.ComWrappersSupport.FindObject<global::Microsoft.UI.Text.ITextParagraphFormat>(thisPtr).ListTab = value;

            }
            catch (Exception __exception__)
            {
                global::WinRT.ExceptionHelpers.SetErrorInfo(__exception__);
                return global::WinRT.ExceptionHelpers.GetHRForException(__exception__);
            }
            return 0;
        }
        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvStdcall) })]
        private static unsafe int Do_Abi_get_ListTab_18(IntPtr thisPtr, float* value)
        {

            float __value = default;

            *value = default;

            try
            {
                __value = global::WinRT.ComWrappersSupport.FindObject<global::Microsoft.UI.Text.ITextParagraphFormat>(thisPtr).ListTab;
                *value = __value;

            }
            catch (Exception __exception__)
            {
                global::WinRT.ExceptionHelpers.SetErrorInfo(__exception__);
                return global::WinRT.ExceptionHelpers.GetHRForException(__exception__);
            }
            return 0;
        }
        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvStdcall) })]
        private static unsafe int Do_Abi_put_ListType_21(IntPtr thisPtr, global::Microsoft.UI.Text.MarkerType value)
        {



            try
            {
                global::WinRT.ComWrappersSupport.FindObject<global::Microsoft.UI.Text.ITextParagraphFormat>(thisPtr).ListType = value;

            }
            catch (Exception __exception__)
            {
                global::WinRT.ExceptionHelpers.SetErrorInfo(__exception__);
                return global::WinRT.ExceptionHelpers.GetHRForException(__exception__);
            }
            return 0;
        }
        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvStdcall) })]
        private static unsafe int Do_Abi_get_ListType_20(IntPtr thisPtr, global::Microsoft.UI.Text.MarkerType* value)
        {

            global::Microsoft.UI.Text.MarkerType __value = default;

            *value = default;

            try
            {
                __value = global::WinRT.ComWrappersSupport.FindObject<global::Microsoft.UI.Text.ITextParagraphFormat>(thisPtr).ListType;
                *value = __value;

            }
            catch (Exception __exception__)
            {
                global::WinRT.ExceptionHelpers.SetErrorInfo(__exception__);
                return global::WinRT.ExceptionHelpers.GetHRForException(__exception__);
            }
            return 0;
        }
        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvStdcall) })]
        private static unsafe int Do_Abi_put_NoLineNumber_23(IntPtr thisPtr, global::Microsoft.UI.Text.FormatEffect value)
        {



            try
            {
                global::WinRT.ComWrappersSupport.FindObject<global::Microsoft.UI.Text.ITextParagraphFormat>(thisPtr).NoLineNumber = value;

            }
            catch (Exception __exception__)
            {
                global::WinRT.ExceptionHelpers.SetErrorInfo(__exception__);
                return global::WinRT.ExceptionHelpers.GetHRForException(__exception__);
            }
            return 0;
        }
        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvStdcall) })]
        private static unsafe int Do_Abi_get_NoLineNumber_22(IntPtr thisPtr, global::Microsoft.UI.Text.FormatEffect* value)
        {

            global::Microsoft.UI.Text.FormatEffect __value = default;

            *value = default;

            try
            {
                __value = global::WinRT.ComWrappersSupport.FindObject<global::Microsoft.UI.Text.ITextParagraphFormat>(thisPtr).NoLineNumber;
                *value = __value;

            }
            catch (Exception __exception__)
            {
                global::WinRT.ExceptionHelpers.SetErrorInfo(__exception__);
                return global::WinRT.ExceptionHelpers.GetHRForException(__exception__);
            }
            return 0;
        }
        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvStdcall) })]
        private static unsafe int Do_Abi_put_PageBreakBefore_25(IntPtr thisPtr, global::Microsoft.UI.Text.FormatEffect value)
        {



            try
            {
                global::WinRT.ComWrappersSupport.FindObject<global::Microsoft.UI.Text.ITextParagraphFormat>(thisPtr).PageBreakBefore = value;

            }
            catch (Exception __exception__)
            {
                global::WinRT.ExceptionHelpers.SetErrorInfo(__exception__);
                return global::WinRT.ExceptionHelpers.GetHRForException(__exception__);
            }
            return 0;
        }
        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvStdcall) })]
        private static unsafe int Do_Abi_get_PageBreakBefore_24(IntPtr thisPtr, global::Microsoft.UI.Text.FormatEffect* value)
        {

            global::Microsoft.UI.Text.FormatEffect __value = default;

            *value = default;

            try
            {
                __value = global::WinRT.ComWrappersSupport.FindObject<global::Microsoft.UI.Text.ITextParagraphFormat>(thisPtr).PageBreakBefore;
                *value = __value;

            }
            catch (Exception __exception__)
            {
                global::WinRT.ExceptionHelpers.SetErrorInfo(__exception__);
                return global::WinRT.ExceptionHelpers.GetHRForException(__exception__);
            }
            return 0;
        }
        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvStdcall) })]
        private static unsafe int Do_Abi_put_RightIndent_27(IntPtr thisPtr, float value)
        {



            try
            {
                global::WinRT.ComWrappersSupport.FindObject<global::Microsoft.UI.Text.ITextParagraphFormat>(thisPtr).RightIndent = value;

            }
            catch (Exception __exception__)
            {
                global::WinRT.ExceptionHelpers.SetErrorInfo(__exception__);
                return global::WinRT.ExceptionHelpers.GetHRForException(__exception__);
            }
            return 0;
        }
        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvStdcall) })]
        private static unsafe int Do_Abi_get_RightIndent_26(IntPtr thisPtr, float* value)
        {

            float __value = default;

            *value = default;

            try
            {
                __value = global::WinRT.ComWrappersSupport.FindObject<global::Microsoft.UI.Text.ITextParagraphFormat>(thisPtr).RightIndent;
                *value = __value;

            }
            catch (Exception __exception__)
            {
                global::WinRT.ExceptionHelpers.SetErrorInfo(__exception__);
                return global::WinRT.ExceptionHelpers.GetHRForException(__exception__);
            }
            return 0;
        }
        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvStdcall) })]
        private static unsafe int Do_Abi_put_RightToLeft_29(IntPtr thisPtr, global::Microsoft.UI.Text.FormatEffect value)
        {



            try
            {
                global::WinRT.ComWrappersSupport.FindObject<global::Microsoft.UI.Text.ITextParagraphFormat>(thisPtr).RightToLeft = value;

            }
            catch (Exception __exception__)
            {
                global::WinRT.ExceptionHelpers.SetErrorInfo(__exception__);
                return global::WinRT.ExceptionHelpers.GetHRForException(__exception__);
            }
            return 0;
        }
        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvStdcall) })]
        private static unsafe int Do_Abi_get_RightToLeft_28(IntPtr thisPtr, global::Microsoft.UI.Text.FormatEffect* value)
        {

            global::Microsoft.UI.Text.FormatEffect __value = default;

            *value = default;

            try
            {
                __value = global::WinRT.ComWrappersSupport.FindObject<global::Microsoft.UI.Text.ITextParagraphFormat>(thisPtr).RightToLeft;
                *value = __value;

            }
            catch (Exception __exception__)
            {
                global::WinRT.ExceptionHelpers.SetErrorInfo(__exception__);
                return global::WinRT.ExceptionHelpers.GetHRForException(__exception__);
            }
            return 0;
        }
        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvStdcall) })]
        private static unsafe int Do_Abi_put_SpaceAfter_33(IntPtr thisPtr, float value)
        {



            try
            {
                global::WinRT.ComWrappersSupport.FindObject<global::Microsoft.UI.Text.ITextParagraphFormat>(thisPtr).SpaceAfter = value;

            }
            catch (Exception __exception__)
            {
                global::WinRT.ExceptionHelpers.SetErrorInfo(__exception__);
                return global::WinRT.ExceptionHelpers.GetHRForException(__exception__);
            }
            return 0;
        }
        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvStdcall) })]
        private static unsafe int Do_Abi_get_SpaceAfter_32(IntPtr thisPtr, float* value)
        {

            float __value = default;

            *value = default;

            try
            {
                __value = global::WinRT.ComWrappersSupport.FindObject<global::Microsoft.UI.Text.ITextParagraphFormat>(thisPtr).SpaceAfter;
                *value = __value;

            }
            catch (Exception __exception__)
            {
                global::WinRT.ExceptionHelpers.SetErrorInfo(__exception__);
                return global::WinRT.ExceptionHelpers.GetHRForException(__exception__);
            }
            return 0;
        }
        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvStdcall) })]
        private static unsafe int Do_Abi_put_SpaceBefore_35(IntPtr thisPtr, float value)
        {



            try
            {
                global::WinRT.ComWrappersSupport.FindObject<global::Microsoft.UI.Text.ITextParagraphFormat>(thisPtr).SpaceBefore = value;

            }
            catch (Exception __exception__)
            {
                global::WinRT.ExceptionHelpers.SetErrorInfo(__exception__);
                return global::WinRT.ExceptionHelpers.GetHRForException(__exception__);
            }
            return 0;
        }
        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvStdcall) })]
        private static unsafe int Do_Abi_get_SpaceBefore_34(IntPtr thisPtr, float* value)
        {

            float __value = default;

            *value = default;

            try
            {
                __value = global::WinRT.ComWrappersSupport.FindObject<global::Microsoft.UI.Text.ITextParagraphFormat>(thisPtr).SpaceBefore;
                *value = __value;

            }
            catch (Exception __exception__)
            {
                global::WinRT.ExceptionHelpers.SetErrorInfo(__exception__);
                return global::WinRT.ExceptionHelpers.GetHRForException(__exception__);
            }
            return 0;
        }
        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvStdcall) })]
        private static unsafe int Do_Abi_put_Style_31(IntPtr thisPtr, global::Microsoft.UI.Text.ParagraphStyle value)
        {



            try
            {
                global::WinRT.ComWrappersSupport.FindObject<global::Microsoft.UI.Text.ITextParagraphFormat>(thisPtr).Style = value;

            }
            catch (Exception __exception__)
            {
                global::WinRT.ExceptionHelpers.SetErrorInfo(__exception__);
                return global::WinRT.ExceptionHelpers.GetHRForException(__exception__);
            }
            return 0;
        }
        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvStdcall) })]
        private static unsafe int Do_Abi_get_Style_30(IntPtr thisPtr, global::Microsoft.UI.Text.ParagraphStyle* value)
        {

            global::Microsoft.UI.Text.ParagraphStyle __value = default;

            *value = default;

            try
            {
                __value = global::WinRT.ComWrappersSupport.FindObject<global::Microsoft.UI.Text.ITextParagraphFormat>(thisPtr).Style;
                *value = __value;

            }
            catch (Exception __exception__)
            {
                global::WinRT.ExceptionHelpers.SetErrorInfo(__exception__);
                return global::WinRT.ExceptionHelpers.GetHRForException(__exception__);
            }
            return 0;
        }
        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvStdcall) })]
        private static unsafe int Do_Abi_get_TabCount_38(IntPtr thisPtr, int* value)
        {

            int __value = default;

            *value = default;

            try
            {
                __value = global::WinRT.ComWrappersSupport.FindObject<global::Microsoft.UI.Text.ITextParagraphFormat>(thisPtr).TabCount;
                *value = __value;

            }
            catch (Exception __exception__)
            {
                global::WinRT.ExceptionHelpers.SetErrorInfo(__exception__);
                return global::WinRT.ExceptionHelpers.GetHRForException(__exception__);
            }
            return 0;
        }
        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvStdcall) })]
        private static unsafe int Do_Abi_put_WidowControl_37(IntPtr thisPtr, global::Microsoft.UI.Text.FormatEffect value)
        {



            try
            {
                global::WinRT.ComWrappersSupport.FindObject<global::Microsoft.UI.Text.ITextParagraphFormat>(thisPtr).WidowControl = value;

            }
            catch (Exception __exception__)
            {
                global::WinRT.ExceptionHelpers.SetErrorInfo(__exception__);
                return global::WinRT.ExceptionHelpers.GetHRForException(__exception__);
            }
            return 0;
        }
        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvStdcall) })]
        private static unsafe int Do_Abi_get_WidowControl_36(IntPtr thisPtr, global::Microsoft.UI.Text.FormatEffect* value)
        {

            global::Microsoft.UI.Text.FormatEffect __value = default;

            *value = default;

            try
            {
                __value = global::WinRT.ComWrappersSupport.FindObject<global::Microsoft.UI.Text.ITextParagraphFormat>(thisPtr).WidowControl;
                *value = __value;

            }
            catch (Exception __exception__)
            {
                global::WinRT.ExceptionHelpers.SetErrorInfo(__exception__);
                return global::WinRT.ExceptionHelpers.GetHRForException(__exception__);
            }
            return 0;
        }

        unsafe void global::Microsoft.UI.Text.ITextParagraphFormat.AddTab(float position, global::Microsoft.UI.Text.TabAlignment align, global::Microsoft.UI.Text.TabLeader leader)
        {
            var _obj = ((IObjectReference)((IWinRTObject)this).GetObjectReferenceForType(typeof(global::Microsoft.UI.Text.ITextParagraphFormat).TypeHandle));
            global::ABI.Microsoft.UI.Text.ITextParagraphFormatMethods.AddTab(_obj, position, align, leader);
        }

        unsafe void global::Microsoft.UI.Text.ITextParagraphFormat.ClearAllTabs()
        {
            var _obj = ((IObjectReference)((IWinRTObject)this).GetObjectReferenceForType(typeof(global::Microsoft.UI.Text.ITextParagraphFormat).TypeHandle));
            global::ABI.Microsoft.UI.Text.ITextParagraphFormatMethods.ClearAllTabs(_obj);
        }

        unsafe void global::Microsoft.UI.Text.ITextParagraphFormat.DeleteTab(float position)
        {
            var _obj = ((IObjectReference)((IWinRTObject)this).GetObjectReferenceForType(typeof(global::Microsoft.UI.Text.ITextParagraphFormat).TypeHandle));
            global::ABI.Microsoft.UI.Text.ITextParagraphFormatMethods.DeleteTab(_obj, position);
        }

        unsafe global::Microsoft.UI.Text.ITextParagraphFormat global::Microsoft.UI.Text.ITextParagraphFormat.GetClone()
        {
            var _obj = ((IObjectReference)((IWinRTObject)this).GetObjectReferenceForType(typeof(global::Microsoft.UI.Text.ITextParagraphFormat).TypeHandle));
            return global::ABI.Microsoft.UI.Text.ITextParagraphFormatMethods.GetClone(_obj);
        }

        unsafe void global::Microsoft.UI.Text.ITextParagraphFormat.GetTab(int index, out float position, out global::Microsoft.UI.Text.TabAlignment align, out global::Microsoft.UI.Text.TabLeader leader)
        {
            var _obj = ((IObjectReference)((IWinRTObject)this).GetObjectReferenceForType(typeof(global::Microsoft.UI.Text.ITextParagraphFormat).TypeHandle));
            global::ABI.Microsoft.UI.Text.ITextParagraphFormatMethods.GetTab(_obj, index, out position, out align, out leader);
        }

        unsafe bool global::Microsoft.UI.Text.ITextParagraphFormat.IsEqual(global::Microsoft.UI.Text.ITextParagraphFormat format)
        {
            var _obj = ((IObjectReference)((IWinRTObject)this).GetObjectReferenceForType(typeof(global::Microsoft.UI.Text.ITextParagraphFormat).TypeHandle));
            return global::ABI.Microsoft.UI.Text.ITextParagraphFormatMethods.IsEqual(_obj, format);
        }

        unsafe void global::Microsoft.UI.Text.ITextParagraphFormat.SetClone(global::Microsoft.UI.Text.ITextParagraphFormat format)
        {
            var _obj = ((IObjectReference)((IWinRTObject)this).GetObjectReferenceForType(typeof(global::Microsoft.UI.Text.ITextParagraphFormat).TypeHandle));
            global::ABI.Microsoft.UI.Text.ITextParagraphFormatMethods.SetClone(_obj, format);
        }

        unsafe void global::Microsoft.UI.Text.ITextParagraphFormat.SetIndents(float start, float left, float right)
        {
            var _obj = ((IObjectReference)((IWinRTObject)this).GetObjectReferenceForType(typeof(global::Microsoft.UI.Text.ITextParagraphFormat).TypeHandle));
            global::ABI.Microsoft.UI.Text.ITextParagraphFormatMethods.SetIndents(_obj, start, left, right);
        }

        unsafe void global::Microsoft.UI.Text.ITextParagraphFormat.SetLineSpacing(global::Microsoft.UI.Text.LineSpacingRule rule, float spacing)
        {
            var _obj = ((IObjectReference)((IWinRTObject)this).GetObjectReferenceForType(typeof(global::Microsoft.UI.Text.ITextParagraphFormat).TypeHandle));
            global::ABI.Microsoft.UI.Text.ITextParagraphFormatMethods.SetLineSpacing(_obj, rule, spacing);
        }

        unsafe global::Microsoft.UI.Text.ParagraphAlignment global::Microsoft.UI.Text.ITextParagraphFormat.Alignment
        {
            get
            {
                var _obj = ((IObjectReference)((IWinRTObject)this).GetObjectReferenceForType(typeof(global::Microsoft.UI.Text.ITextParagraphFormat).TypeHandle));
                return global::ABI.Microsoft.UI.Text.ITextParagraphFormatMethods.get_Alignment(_obj);
            }
            set
            {
                var _obj = ((IObjectReference)((IWinRTObject)this).GetObjectReferenceForType(typeof(global::Microsoft.UI.Text.ITextParagraphFormat).TypeHandle));
                global::ABI.Microsoft.UI.Text.ITextParagraphFormatMethods.set_Alignment(_obj, value);
            }
        }

        unsafe float global::Microsoft.UI.Text.ITextParagraphFormat.FirstLineIndent
        {
            get
            {
                var _obj = ((IObjectReference)((IWinRTObject)this).GetObjectReferenceForType(typeof(global::Microsoft.UI.Text.ITextParagraphFormat).TypeHandle));
                return global::ABI.Microsoft.UI.Text.ITextParagraphFormatMethods.get_FirstLineIndent(_obj);
            }
        }

        unsafe global::Microsoft.UI.Text.FormatEffect global::Microsoft.UI.Text.ITextParagraphFormat.KeepTogether
        {
            get
            {
                var _obj = ((IObjectReference)((IWinRTObject)this).GetObjectReferenceForType(typeof(global::Microsoft.UI.Text.ITextParagraphFormat).TypeHandle));
                return global::ABI.Microsoft.UI.Text.ITextParagraphFormatMethods.get_KeepTogether(_obj);
            }
            set
            {
                var _obj = ((IObjectReference)((IWinRTObject)this).GetObjectReferenceForType(typeof(global::Microsoft.UI.Text.ITextParagraphFormat).TypeHandle));
                global::ABI.Microsoft.UI.Text.ITextParagraphFormatMethods.set_KeepTogether(_obj, value);
            }
        }

        unsafe global::Microsoft.UI.Text.FormatEffect global::Microsoft.UI.Text.ITextParagraphFormat.KeepWithNext
        {
            get
            {
                var _obj = ((IObjectReference)((IWinRTObject)this).GetObjectReferenceForType(typeof(global::Microsoft.UI.Text.ITextParagraphFormat).TypeHandle));
                return global::ABI.Microsoft.UI.Text.ITextParagraphFormatMethods.get_KeepWithNext(_obj);
            }
            set
            {
                var _obj = ((IObjectReference)((IWinRTObject)this).GetObjectReferenceForType(typeof(global::Microsoft.UI.Text.ITextParagraphFormat).TypeHandle));
                global::ABI.Microsoft.UI.Text.ITextParagraphFormatMethods.set_KeepWithNext(_obj, value);
            }
        }

        unsafe float global::Microsoft.UI.Text.ITextParagraphFormat.LeftIndent
        {
            get
            {
                var _obj = ((IObjectReference)((IWinRTObject)this).GetObjectReferenceForType(typeof(global::Microsoft.UI.Text.ITextParagraphFormat).TypeHandle));
                return global::ABI.Microsoft.UI.Text.ITextParagraphFormatMethods.get_LeftIndent(_obj);
            }
        }

        unsafe float global::Microsoft.UI.Text.ITextParagraphFormat.LineSpacing
        {
            get
            {
                var _obj = ((IObjectReference)((IWinRTObject)this).GetObjectReferenceForType(typeof(global::Microsoft.UI.Text.ITextParagraphFormat).TypeHandle));
                return global::ABI.Microsoft.UI.Text.ITextParagraphFormatMethods.get_LineSpacing(_obj);
            }
        }

        unsafe global::Microsoft.UI.Text.LineSpacingRule global::Microsoft.UI.Text.ITextParagraphFormat.LineSpacingRule
        {
            get
            {
                var _obj = ((IObjectReference)((IWinRTObject)this).GetObjectReferenceForType(typeof(global::Microsoft.UI.Text.ITextParagraphFormat).TypeHandle));
                return global::ABI.Microsoft.UI.Text.ITextParagraphFormatMethods.get_LineSpacingRule(_obj);
            }
        }

        unsafe global::Microsoft.UI.Text.MarkerAlignment global::Microsoft.UI.Text.ITextParagraphFormat.ListAlignment
        {
            get
            {
                var _obj = ((IObjectReference)((IWinRTObject)this).GetObjectReferenceForType(typeof(global::Microsoft.UI.Text.ITextParagraphFormat).TypeHandle));
                return global::ABI.Microsoft.UI.Text.ITextParagraphFormatMethods.get_ListAlignment(_obj);
            }
            set
            {
                var _obj = ((IObjectReference)((IWinRTObject)this).GetObjectReferenceForType(typeof(global::Microsoft.UI.Text.ITextParagraphFormat).TypeHandle));
                global::ABI.Microsoft.UI.Text.ITextParagraphFormatMethods.set_ListAlignment(_obj, value);
            }
        }

        unsafe int global::Microsoft.UI.Text.ITextParagraphFormat.ListLevelIndex
        {
            get
            {
                var _obj = ((IObjectReference)((IWinRTObject)this).GetObjectReferenceForType(typeof(global::Microsoft.UI.Text.ITextParagraphFormat).TypeHandle));
                return global::ABI.Microsoft.UI.Text.ITextParagraphFormatMethods.get_ListLevelIndex(_obj);
            }
            set
            {
                var _obj = ((IObjectReference)((IWinRTObject)this).GetObjectReferenceForType(typeof(global::Microsoft.UI.Text.ITextParagraphFormat).TypeHandle));
                global::ABI.Microsoft.UI.Text.ITextParagraphFormatMethods.set_ListLevelIndex(_obj, value);
            }
        }

        unsafe int global::Microsoft.UI.Text.ITextParagraphFormat.ListStart
        {
            get
            {
                var _obj = ((IObjectReference)((IWinRTObject)this).GetObjectReferenceForType(typeof(global::Microsoft.UI.Text.ITextParagraphFormat).TypeHandle));
                return global::ABI.Microsoft.UI.Text.ITextParagraphFormatMethods.get_ListStart(_obj);
            }
            set
            {
                var _obj = ((IObjectReference)((IWinRTObject)this).GetObjectReferenceForType(typeof(global::Microsoft.UI.Text.ITextParagraphFormat).TypeHandle));
                global::ABI.Microsoft.UI.Text.ITextParagraphFormatMethods.set_ListStart(_obj, value);
            }
        }

        unsafe global::Microsoft.UI.Text.MarkerStyle global::Microsoft.UI.Text.ITextParagraphFormat.ListStyle
        {
            get
            {
                var _obj = ((IObjectReference)((IWinRTObject)this).GetObjectReferenceForType(typeof(global::Microsoft.UI.Text.ITextParagraphFormat).TypeHandle));
                return global::ABI.Microsoft.UI.Text.ITextParagraphFormatMethods.get_ListStyle(_obj);
            }
            set
            {
                var _obj = ((IObjectReference)((IWinRTObject)this).GetObjectReferenceForType(typeof(global::Microsoft.UI.Text.ITextParagraphFormat).TypeHandle));
                global::ABI.Microsoft.UI.Text.ITextParagraphFormatMethods.set_ListStyle(_obj, value);
            }
        }

        unsafe float global::Microsoft.UI.Text.ITextParagraphFormat.ListTab
        {
            get
            {
                var _obj = ((IObjectReference)((IWinRTObject)this).GetObjectReferenceForType(typeof(global::Microsoft.UI.Text.ITextParagraphFormat).TypeHandle));
                return global::ABI.Microsoft.UI.Text.ITextParagraphFormatMethods.get_ListTab(_obj);
            }
            set
            {
                var _obj = ((IObjectReference)((IWinRTObject)this).GetObjectReferenceForType(typeof(global::Microsoft.UI.Text.ITextParagraphFormat).TypeHandle));
                global::ABI.Microsoft.UI.Text.ITextParagraphFormatMethods.set_ListTab(_obj, value);
            }
        }

        unsafe global::Microsoft.UI.Text.MarkerType global::Microsoft.UI.Text.ITextParagraphFormat.ListType
        {
            get
            {
                var _obj = ((IObjectReference)((IWinRTObject)this).GetObjectReferenceForType(typeof(global::Microsoft.UI.Text.ITextParagraphFormat).TypeHandle));
                return global::ABI.Microsoft.UI.Text.ITextParagraphFormatMethods.get_ListType(_obj);
            }
            set
            {
                var _obj = ((IObjectReference)((IWinRTObject)this).GetObjectReferenceForType(typeof(global::Microsoft.UI.Text.ITextParagraphFormat).TypeHandle));
                global::ABI.Microsoft.UI.Text.ITextParagraphFormatMethods.set_ListType(_obj, value);
            }
        }

        unsafe global::Microsoft.UI.Text.FormatEffect global::Microsoft.UI.Text.ITextParagraphFormat.NoLineNumber
        {
            get
            {
                var _obj = ((IObjectReference)((IWinRTObject)this).GetObjectReferenceForType(typeof(global::Microsoft.UI.Text.ITextParagraphFormat).TypeHandle));
                return global::ABI.Microsoft.UI.Text.ITextParagraphFormatMethods.get_NoLineNumber(_obj);
            }
            set
            {
                var _obj = ((IObjectReference)((IWinRTObject)this).GetObjectReferenceForType(typeof(global::Microsoft.UI.Text.ITextParagraphFormat).TypeHandle));
                global::ABI.Microsoft.UI.Text.ITextParagraphFormatMethods.set_NoLineNumber(_obj, value);
            }
        }

        unsafe global::Microsoft.UI.Text.FormatEffect global::Microsoft.UI.Text.ITextParagraphFormat.PageBreakBefore
        {
            get
            {
                var _obj = ((IObjectReference)((IWinRTObject)this).GetObjectReferenceForType(typeof(global::Microsoft.UI.Text.ITextParagraphFormat).TypeHandle));
                return global::ABI.Microsoft.UI.Text.ITextParagraphFormatMethods.get_PageBreakBefore(_obj);
            }
            set
            {
                var _obj = ((IObjectReference)((IWinRTObject)this).GetObjectReferenceForType(typeof(global::Microsoft.UI.Text.ITextParagraphFormat).TypeHandle));
                global::ABI.Microsoft.UI.Text.ITextParagraphFormatMethods.set_PageBreakBefore(_obj, value);
            }
        }

        unsafe float global::Microsoft.UI.Text.ITextParagraphFormat.RightIndent
        {
            get
            {
                var _obj = ((IObjectReference)((IWinRTObject)this).GetObjectReferenceForType(typeof(global::Microsoft.UI.Text.ITextParagraphFormat).TypeHandle));
                return global::ABI.Microsoft.UI.Text.ITextParagraphFormatMethods.get_RightIndent(_obj);
            }
            set
            {
                var _obj = ((IObjectReference)((IWinRTObject)this).GetObjectReferenceForType(typeof(global::Microsoft.UI.Text.ITextParagraphFormat).TypeHandle));
                global::ABI.Microsoft.UI.Text.ITextParagraphFormatMethods.set_RightIndent(_obj, value);
            }
        }

        unsafe global::Microsoft.UI.Text.FormatEffect global::Microsoft.UI.Text.ITextParagraphFormat.RightToLeft
        {
            get
            {
                var _obj = ((IObjectReference)((IWinRTObject)this).GetObjectReferenceForType(typeof(global::Microsoft.UI.Text.ITextParagraphFormat).TypeHandle));
                return global::ABI.Microsoft.UI.Text.ITextParagraphFormatMethods.get_RightToLeft(_obj);
            }
            set
            {
                var _obj = ((IObjectReference)((IWinRTObject)this).GetObjectReferenceForType(typeof(global::Microsoft.UI.Text.ITextParagraphFormat).TypeHandle));
                global::ABI.Microsoft.UI.Text.ITextParagraphFormatMethods.set_RightToLeft(_obj, value);
            }
        }

        unsafe float global::Microsoft.UI.Text.ITextParagraphFormat.SpaceAfter
        {
            get
            {
                var _obj = ((IObjectReference)((IWinRTObject)this).GetObjectReferenceForType(typeof(global::Microsoft.UI.Text.ITextParagraphFormat).TypeHandle));
                return global::ABI.Microsoft.UI.Text.ITextParagraphFormatMethods.get_SpaceAfter(_obj);
            }
            set
            {
                var _obj = ((IObjectReference)((IWinRTObject)this).GetObjectReferenceForType(typeof(global::Microsoft.UI.Text.ITextParagraphFormat).TypeHandle));
                global::ABI.Microsoft.UI.Text.ITextParagraphFormatMethods.set_SpaceAfter(_obj, value);
            }
        }

        unsafe float global::Microsoft.UI.Text.ITextParagraphFormat.SpaceBefore
        {
            get
            {
                var _obj = ((IObjectReference)((IWinRTObject)this).GetObjectReferenceForType(typeof(global::Microsoft.UI.Text.ITextParagraphFormat).TypeHandle));
                return global::ABI.Microsoft.UI.Text.ITextParagraphFormatMethods.get_SpaceBefore(_obj);
            }
            set
            {
                var _obj = ((IObjectReference)((IWinRTObject)this).GetObjectReferenceForType(typeof(global::Microsoft.UI.Text.ITextParagraphFormat).TypeHandle));
                global::ABI.Microsoft.UI.Text.ITextParagraphFormatMethods.set_SpaceBefore(_obj, value);
            }
        }

        unsafe global::Microsoft.UI.Text.ParagraphStyle global::Microsoft.UI.Text.ITextParagraphFormat.Style
        {
            get
            {
                var _obj = ((IObjectReference)((IWinRTObject)this).GetObjectReferenceForType(typeof(global::Microsoft.UI.Text.ITextParagraphFormat).TypeHandle));
                return global::ABI.Microsoft.UI.Text.ITextParagraphFormatMethods.get_Style(_obj);
            }
            set
            {
                var _obj = ((IObjectReference)((IWinRTObject)this).GetObjectReferenceForType(typeof(global::Microsoft.UI.Text.ITextParagraphFormat).TypeHandle));
                global::ABI.Microsoft.UI.Text.ITextParagraphFormatMethods.set_Style(_obj, value);
            }
        }

        unsafe int global::Microsoft.UI.Text.ITextParagraphFormat.TabCount
        {
            get
            {
                var _obj = ((IObjectReference)((IWinRTObject)this).GetObjectReferenceForType(typeof(global::Microsoft.UI.Text.ITextParagraphFormat).TypeHandle));
                return global::ABI.Microsoft.UI.Text.ITextParagraphFormatMethods.get_TabCount(_obj);
            }
        }

        unsafe global::Microsoft.UI.Text.FormatEffect global::Microsoft.UI.Text.ITextParagraphFormat.WidowControl
        {
            get
            {
                var _obj = ((IObjectReference)((IWinRTObject)this).GetObjectReferenceForType(typeof(global::Microsoft.UI.Text.ITextParagraphFormat).TypeHandle));
                return global::ABI.Microsoft.UI.Text.ITextParagraphFormatMethods.get_WidowControl(_obj);
            }
            set
            {
                var _obj = ((IObjectReference)((IWinRTObject)this).GetObjectReferenceForType(typeof(global::Microsoft.UI.Text.ITextParagraphFormat).TypeHandle));
                global::ABI.Microsoft.UI.Text.ITextParagraphFormatMethods.set_WidowControl(_obj, value);
            }
        }
    }

    public static class ITextRangeMethods
    {


        public static unsafe bool CanPaste(IObjectReference _obj, int format)
        {
            var ThisPtr = _obj.ThisPtr;

            byte __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, int, byte*, int>**)ThisPtr)[26](ThisPtr, format, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval != 0;
        }

        public static unsafe void ChangeCase(IObjectReference _obj, global::Microsoft.UI.Text.LetterCase value)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::Microsoft.UI.Text.LetterCase, int>**)ThisPtr)[27](ThisPtr, value));
            global::System.GC.KeepAlive(_obj);
        }

        public static unsafe void Collapse(IObjectReference _obj, bool value)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, byte, int>**)ThisPtr)[28](ThisPtr, (byte)(value ? 1 : 0)));
            global::System.GC.KeepAlive(_obj);
        }

        public static unsafe void Copy(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, int>**)ThisPtr)[29](ThisPtr));
            global::System.GC.KeepAlive(_obj);
        }

        public static unsafe void Cut(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, int>**)ThisPtr)[30](ThisPtr));
            global::System.GC.KeepAlive(_obj);
        }

        public static unsafe int Delete(IObjectReference _obj, global::Microsoft.UI.Text.TextRangeUnit unit, int count)
        {
            var ThisPtr = _obj.ThisPtr;

            int __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::Microsoft.UI.Text.TextRangeUnit, int, int*, int>**)ThisPtr)[31](ThisPtr, unit, count, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }

        public static unsafe int EndOf(IObjectReference _obj, global::Microsoft.UI.Text.TextRangeUnit unit, bool extend)
        {
            var ThisPtr = _obj.ThisPtr;

            int __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::Microsoft.UI.Text.TextRangeUnit, byte, int*, int>**)ThisPtr)[32](ThisPtr, unit, (byte)(extend ? 1 : 0), &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }

        public static unsafe int Expand(IObjectReference _obj, global::Microsoft.UI.Text.TextRangeUnit unit)
        {
            var ThisPtr = _obj.ThisPtr;

            int __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::Microsoft.UI.Text.TextRangeUnit, int*, int>**)ThisPtr)[33](ThisPtr, unit, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }

        public static unsafe int FindText(IObjectReference _obj, string value, int scanLength, global::Microsoft.UI.Text.FindOptions options)
        {
            var ThisPtr = _obj.ThisPtr;

            int __retval = default;
            MarshalString.Pinnable __value = new(value);
            fixed(void* ___value = __value)
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, int, global::Microsoft.UI.Text.FindOptions, int*, int>**)ThisPtr)[34](ThisPtr, MarshalString.GetAbi(ref __value), scanLength, options, &__retval));
                global::System.GC.KeepAlive(_obj);
                return __retval;
            }
        }

        public static unsafe void GetCharacterUtf32(IObjectReference _obj, out uint value, int offset)
        {
            var ThisPtr = _obj.ThisPtr;

            uint __value = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, uint*, int, int>**)ThisPtr)[35](ThisPtr, &__value, offset));
            global::System.GC.KeepAlive(_obj);
            value = __value;
        }

        public static unsafe global::Microsoft.UI.Text.ITextRange GetClone(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[36](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return MarshalInterface<global::Microsoft.UI.Text.ITextRange>.FromAbi(__retval);
            }
            finally
            {
                MarshalInterface<global::Microsoft.UI.Text.ITextRange>.DisposeAbi(__retval);
            }
        }

        public static unsafe int GetIndex(IObjectReference _obj, global::Microsoft.UI.Text.TextRangeUnit unit)
        {
            var ThisPtr = _obj.ThisPtr;

            int __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::Microsoft.UI.Text.TextRangeUnit, int*, int>**)ThisPtr)[37](ThisPtr, unit, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }

        public static unsafe void GetPoint(IObjectReference _obj, global::Microsoft.UI.Text.HorizontalCharacterAlignment horizontalAlign, global::Microsoft.UI.Text.VerticalCharacterAlignment verticalAlign, global::Microsoft.UI.Text.PointOptions options, out global::Windows.Foundation.Point point)
        {
            var ThisPtr = _obj.ThisPtr;

            global::Windows.Foundation.Point __point = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::Microsoft.UI.Text.HorizontalCharacterAlignment, global::Microsoft.UI.Text.VerticalCharacterAlignment, global::Microsoft.UI.Text.PointOptions, global::Windows.Foundation.Point*, int>**)ThisPtr)[38](ThisPtr, horizontalAlign, verticalAlign, options, &__point));
            global::System.GC.KeepAlive(_obj);
            point = __point;
        }

        public static unsafe void GetRect(IObjectReference _obj, global::Microsoft.UI.Text.PointOptions options, out global::Windows.Foundation.Rect rect, out int hit)
        {
            var ThisPtr = _obj.ThisPtr;

            global::Windows.Foundation.Rect __rect = default;
            int __hit = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::Microsoft.UI.Text.PointOptions, global::Windows.Foundation.Rect*, int*, int>**)ThisPtr)[39](ThisPtr, options, &__rect, &__hit));
            global::System.GC.KeepAlive(_obj);
            rect = __rect;
            hit = __hit;
        }

        public static unsafe void GetText(IObjectReference _obj, global::Microsoft.UI.Text.TextGetOptions options, out string value)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __value = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::Microsoft.UI.Text.TextGetOptions, IntPtr*, int>**)ThisPtr)[40](ThisPtr, options, &__value));
                global::System.GC.KeepAlive(_obj);
                value = MarshalString.FromAbi(__value);
            }
            finally
            {
                MarshalString.DisposeAbi(__value);
            }
        }

        public static unsafe void GetTextViaStream(IObjectReference _obj, global::Microsoft.UI.Text.TextGetOptions options, global::Windows.Storage.Streams.IRandomAccessStream value)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __value = default;
            try
            {
                __value = MarshalInterface<global::Windows.Storage.Streams.IRandomAccessStream>.CreateMarshaler2(value, global::ABI.Windows.Storage.Streams.IRandomAccessStreamMethods.IID);
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::Microsoft.UI.Text.TextGetOptions, IntPtr, int>**)ThisPtr)[41](ThisPtr, options, MarshalInspectable<object>.GetAbi(__value)));
                global::System.GC.KeepAlive(_obj);
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__value);
            }
        }

        public static unsafe bool InRange(IObjectReference _obj, global::Microsoft.UI.Text.ITextRange range)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __range = default;
            byte __retval = default;
            try
            {
                __range = MarshalInterface<global::Microsoft.UI.Text.ITextRange>.CreateMarshaler2(range, global::ABI.Microsoft.UI.Text.ITextRangeMethods.IID);
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, byte*, int>**)ThisPtr)[42](ThisPtr, MarshalInspectable<object>.GetAbi(__range), &__retval));
                global::System.GC.KeepAlive(_obj);
                return __retval != 0;
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__range);
            }
        }

        public static unsafe void InsertImage(IObjectReference _obj, int width, int height, int ascent, global::Microsoft.UI.Text.VerticalCharacterAlignment verticalAlign, string alternateText, global::Windows.Storage.Streams.IRandomAccessStream value)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __value = default;
            try
            {
                __value = MarshalInterface<global::Windows.Storage.Streams.IRandomAccessStream>.CreateMarshaler2(value, global::ABI.Windows.Storage.Streams.IRandomAccessStreamMethods.IID);
                MarshalString.Pinnable __alternateText = new(alternateText);
                fixed(void* ___alternateText = __alternateText)
                {
                    global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, int, int, int, global::Microsoft.UI.Text.VerticalCharacterAlignment, IntPtr, IntPtr, int>**)ThisPtr)[43](ThisPtr, width, height, ascent, verticalAlign, MarshalString.GetAbi(ref __alternateText), MarshalInspectable<object>.GetAbi(__value)));
                    global::System.GC.KeepAlive(_obj);
                }
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__value);
            }
        }

        public static unsafe bool InStory(IObjectReference _obj, global::Microsoft.UI.Text.ITextRange range)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __range = default;
            byte __retval = default;
            try
            {
                __range = MarshalInterface<global::Microsoft.UI.Text.ITextRange>.CreateMarshaler2(range, global::ABI.Microsoft.UI.Text.ITextRangeMethods.IID);
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, byte*, int>**)ThisPtr)[44](ThisPtr, MarshalInspectable<object>.GetAbi(__range), &__retval));
                global::System.GC.KeepAlive(_obj);
                return __retval != 0;
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__range);
            }
        }

        public static unsafe bool IsEqual(IObjectReference _obj, global::Microsoft.UI.Text.ITextRange range)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __range = default;
            byte __retval = default;
            try
            {
                __range = MarshalInterface<global::Microsoft.UI.Text.ITextRange>.CreateMarshaler2(range, global::ABI.Microsoft.UI.Text.ITextRangeMethods.IID);
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, byte*, int>**)ThisPtr)[45](ThisPtr, MarshalInspectable<object>.GetAbi(__range), &__retval));
                global::System.GC.KeepAlive(_obj);
                return __retval != 0;
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__range);
            }
        }

        public static unsafe int Move(IObjectReference _obj, global::Microsoft.UI.Text.TextRangeUnit unit, int count)
        {
            var ThisPtr = _obj.ThisPtr;

            int __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::Microsoft.UI.Text.TextRangeUnit, int, int*, int>**)ThisPtr)[46](ThisPtr, unit, count, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }

        public static unsafe int MoveEnd(IObjectReference _obj, global::Microsoft.UI.Text.TextRangeUnit unit, int count)
        {
            var ThisPtr = _obj.ThisPtr;

            int __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::Microsoft.UI.Text.TextRangeUnit, int, int*, int>**)ThisPtr)[47](ThisPtr, unit, count, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }

        public static unsafe int MoveStart(IObjectReference _obj, global::Microsoft.UI.Text.TextRangeUnit unit, int count)
        {
            var ThisPtr = _obj.ThisPtr;

            int __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::Microsoft.UI.Text.TextRangeUnit, int, int*, int>**)ThisPtr)[48](ThisPtr, unit, count, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }

        public static unsafe void Paste(IObjectReference _obj, int format)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, int, int>**)ThisPtr)[49](ThisPtr, format));
            global::System.GC.KeepAlive(_obj);
        }

        public static unsafe void ScrollIntoView(IObjectReference _obj, global::Microsoft.UI.Text.PointOptions value)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::Microsoft.UI.Text.PointOptions, int>**)ThisPtr)[50](ThisPtr, value));
            global::System.GC.KeepAlive(_obj);
        }

        public static unsafe void MatchSelection(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, int>**)ThisPtr)[51](ThisPtr));
            global::System.GC.KeepAlive(_obj);
        }

        public static unsafe void SetIndex(IObjectReference _obj, global::Microsoft.UI.Text.TextRangeUnit unit, int index, bool extend)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::Microsoft.UI.Text.TextRangeUnit, int, byte, int>**)ThisPtr)[52](ThisPtr, unit, index, (byte)(extend ? 1 : 0)));
            global::System.GC.KeepAlive(_obj);
        }

        public static unsafe void SetPoint(IObjectReference _obj, global::Windows.Foundation.Point point, global::Microsoft.UI.Text.PointOptions options, bool extend)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::Windows.Foundation.Point, global::Microsoft.UI.Text.PointOptions, byte, int>**)ThisPtr)[53](ThisPtr, point, options, (byte)(extend ? 1 : 0)));
            global::System.GC.KeepAlive(_obj);
        }

        public static unsafe void SetRange(IObjectReference _obj, int startPosition, int endPosition)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, int, int, int>**)ThisPtr)[54](ThisPtr, startPosition, endPosition));
            global::System.GC.KeepAlive(_obj);
        }

        public static unsafe void SetText(IObjectReference _obj, global::Microsoft.UI.Text.TextSetOptions options, string value)
        {
            var ThisPtr = _obj.ThisPtr;

            MarshalString.Pinnable __value = new(value);
            fixed(void* ___value = __value)
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::Microsoft.UI.Text.TextSetOptions, IntPtr, int>**)ThisPtr)[55](ThisPtr, options, MarshalString.GetAbi(ref __value)));
                global::System.GC.KeepAlive(_obj);
            }
        }

        public static unsafe void SetTextViaStream(IObjectReference _obj, global::Microsoft.UI.Text.TextSetOptions options, global::Windows.Storage.Streams.IRandomAccessStream value)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __value = default;
            try
            {
                __value = MarshalInterface<global::Windows.Storage.Streams.IRandomAccessStream>.CreateMarshaler2(value, global::ABI.Windows.Storage.Streams.IRandomAccessStreamMethods.IID);
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::Microsoft.UI.Text.TextSetOptions, IntPtr, int>**)ThisPtr)[56](ThisPtr, options, MarshalInspectable<object>.GetAbi(__value)));
                global::System.GC.KeepAlive(_obj);
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__value);
            }
        }

        public static unsafe int StartOf(IObjectReference _obj, global::Microsoft.UI.Text.TextRangeUnit unit, bool extend)
        {
            var ThisPtr = _obj.ThisPtr;

            int __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::Microsoft.UI.Text.TextRangeUnit, byte, int*, int>**)ThisPtr)[57](ThisPtr, unit, (byte)(extend ? 1 : 0), &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }
        public static unsafe char get_Character(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            ushort __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, ushort*, int>**)ThisPtr)[6](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return (char)__retval;
        }
        public static unsafe void set_Character(IObjectReference _obj, char value)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, ushort, int>**)ThisPtr)[7](ThisPtr, (ushort)value));
            global::System.GC.KeepAlive(_obj);
        }

        public static unsafe global::Microsoft.UI.Text.ITextCharacterFormat get_CharacterFormat(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[8](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return MarshalInterface<global::Microsoft.UI.Text.ITextCharacterFormat>.FromAbi(__retval);
            }
            finally
            {
                MarshalInterface<global::Microsoft.UI.Text.ITextCharacterFormat>.DisposeAbi(__retval);
            }
        }
        public static unsafe void set_CharacterFormat(IObjectReference _obj, global::Microsoft.UI.Text.ITextCharacterFormat value)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __value = default;
            try
            {
                __value = MarshalInterface<global::Microsoft.UI.Text.ITextCharacterFormat>.CreateMarshaler2(value, global::ABI.Microsoft.UI.Text.ITextCharacterFormatMethods.IID);
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, int>**)ThisPtr)[9](ThisPtr, MarshalInspectable<object>.GetAbi(__value)));
                global::System.GC.KeepAlive(_obj);
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__value);
            }
        }

        public static unsafe int get_EndPosition(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            int __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, int*, int>**)ThisPtr)[12](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }
        public static unsafe void set_EndPosition(IObjectReference _obj, int value)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, int, int>**)ThisPtr)[13](ThisPtr, value));
            global::System.GC.KeepAlive(_obj);
        }

        public static unsafe global::Microsoft.UI.Text.ITextRange get_FormattedText(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[10](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return MarshalInterface<global::Microsoft.UI.Text.ITextRange>.FromAbi(__retval);
            }
            finally
            {
                MarshalInterface<global::Microsoft.UI.Text.ITextRange>.DisposeAbi(__retval);
            }
        }
        public static unsafe void set_FormattedText(IObjectReference _obj, global::Microsoft.UI.Text.ITextRange value)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __value = default;
            try
            {
                __value = MarshalInterface<global::Microsoft.UI.Text.ITextRange>.CreateMarshaler2(value, global::ABI.Microsoft.UI.Text.ITextRangeMethods.IID);
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, int>**)ThisPtr)[11](ThisPtr, MarshalInspectable<object>.GetAbi(__value)));
                global::System.GC.KeepAlive(_obj);
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__value);
            }
        }

        public static unsafe global::Microsoft.UI.Text.RangeGravity get_Gravity(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::Microsoft.UI.Text.RangeGravity __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::Microsoft.UI.Text.RangeGravity*, int>**)ThisPtr)[14](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }
        public static unsafe void set_Gravity(IObjectReference _obj, global::Microsoft.UI.Text.RangeGravity value)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::Microsoft.UI.Text.RangeGravity, int>**)ThisPtr)[15](ThisPtr, value));
            global::System.GC.KeepAlive(_obj);
        }

        public static unsafe int get_Length(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            int __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, int*, int>**)ThisPtr)[16](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }

        public static unsafe string get_Link(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[17](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return MarshalString.FromAbi(__retval);
            }
            finally
            {
                MarshalString.DisposeAbi(__retval);
            }
        }
        public static unsafe void set_Link(IObjectReference _obj, string value)
        {
            var ThisPtr = _obj.ThisPtr;

            MarshalString.Pinnable __value = new(value);
            fixed(void* ___value = __value)
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, int>**)ThisPtr)[18](ThisPtr, MarshalString.GetAbi(ref __value)));
                global::System.GC.KeepAlive(_obj);
            }
        }

        public static unsafe global::Microsoft.UI.Text.ITextParagraphFormat get_ParagraphFormat(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[19](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return MarshalInterface<global::Microsoft.UI.Text.ITextParagraphFormat>.FromAbi(__retval);
            }
            finally
            {
                MarshalInterface<global::Microsoft.UI.Text.ITextParagraphFormat>.DisposeAbi(__retval);
            }
        }
        public static unsafe void set_ParagraphFormat(IObjectReference _obj, global::Microsoft.UI.Text.ITextParagraphFormat value)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __value = default;
            try
            {
                __value = MarshalInterface<global::Microsoft.UI.Text.ITextParagraphFormat>.CreateMarshaler2(value, global::ABI.Microsoft.UI.Text.ITextParagraphFormatMethods.IID);
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, int>**)ThisPtr)[20](ThisPtr, MarshalInspectable<object>.GetAbi(__value)));
                global::System.GC.KeepAlive(_obj);
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__value);
            }
        }

        public static unsafe int get_StartPosition(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            int __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, int*, int>**)ThisPtr)[21](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }
        public static unsafe void set_StartPosition(IObjectReference _obj, int value)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, int, int>**)ThisPtr)[22](ThisPtr, value));
            global::System.GC.KeepAlive(_obj);
        }

        public static unsafe int get_StoryLength(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            int __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, int*, int>**)ThisPtr)[23](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }

        public static unsafe string get_Text(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[24](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return MarshalString.FromAbi(__retval);
            }
            finally
            {
                MarshalString.DisposeAbi(__retval);
            }
        }
        public static unsafe void set_Text(IObjectReference _obj, string value)
        {
            var ThisPtr = _obj.ThisPtr;

            MarshalString.Pinnable __value = new(value);
            fixed(void* ___value = __value)
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, int>**)ThisPtr)[25](ThisPtr, MarshalString.GetAbi(ref __value)));
                global::System.GC.KeepAlive(_obj);
            }
        }



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0xCF, 0xAB, 0xD4, 0x6, 0x6, 0xC, 0x12, 0x5D, 0xA7, 0x43, 0x85, 0x53, 0x7E, 0xFD, 0x9, 0xEA };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

        public static global::System.IntPtr AbiToProjectionVftablePtr => ITextRange.AbiToProjectionVftablePtr;

    }
    [DynamicInterfaceCastableImplementation]
    [Guid("06D4ABCF-0C06-5D12-A743-85537EFD09EA")]
    internal unsafe interface ITextRange : global::Microsoft.UI.Text.ITextRange
    {

        public static readonly IntPtr AbiToProjectionVftablePtr;
        static unsafe ITextRange()
        {
            AbiToProjectionVftablePtr = ComWrappersSupport.AllocateVtableMemory(typeof(ITextRange), sizeof(IInspectable.Vftbl) + sizeof(IntPtr) * 52);
            *(IInspectable.Vftbl*)AbiToProjectionVftablePtr = IInspectable.Vftbl.AbiToProjectionVftable;
            ((delegate* unmanaged[Stdcall]<IntPtr, ushort*, int>*)AbiToProjectionVftablePtr)[6] = &Do_Abi_get_Character_0;
            ((delegate* unmanaged[Stdcall]<IntPtr, ushort, int>*)AbiToProjectionVftablePtr)[7] = &Do_Abi_put_Character_1;
            ((delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>*)AbiToProjectionVftablePtr)[8] = &Do_Abi_get_CharacterFormat_2;
            ((delegate* unmanaged[Stdcall]<IntPtr, IntPtr, int>*)AbiToProjectionVftablePtr)[9] = &Do_Abi_put_CharacterFormat_3;
            ((delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>*)AbiToProjectionVftablePtr)[10] = &Do_Abi_get_FormattedText_4;
            ((delegate* unmanaged[Stdcall]<IntPtr, IntPtr, int>*)AbiToProjectionVftablePtr)[11] = &Do_Abi_put_FormattedText_5;
            ((delegate* unmanaged[Stdcall]<IntPtr, int*, int>*)AbiToProjectionVftablePtr)[12] = &Do_Abi_get_EndPosition_6;
            ((delegate* unmanaged[Stdcall]<IntPtr, int, int>*)AbiToProjectionVftablePtr)[13] = &Do_Abi_put_EndPosition_7;
            ((delegate* unmanaged[Stdcall]<IntPtr, global::Microsoft.UI.Text.RangeGravity*, int>*)AbiToProjectionVftablePtr)[14] = &Do_Abi_get_Gravity_8;
            ((delegate* unmanaged[Stdcall]<IntPtr, global::Microsoft.UI.Text.RangeGravity, int>*)AbiToProjectionVftablePtr)[15] = &Do_Abi_put_Gravity_9;
            ((delegate* unmanaged[Stdcall]<IntPtr, int*, int>*)AbiToProjectionVftablePtr)[16] = &Do_Abi_get_Length_10;
            ((delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>*)AbiToProjectionVftablePtr)[17] = &Do_Abi_get_Link_11;
            ((delegate* unmanaged[Stdcall]<IntPtr, IntPtr, int>*)AbiToProjectionVftablePtr)[18] = &Do_Abi_put_Link_12;
            ((delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>*)AbiToProjectionVftablePtr)[19] = &Do_Abi_get_ParagraphFormat_13;
            ((delegate* unmanaged[Stdcall]<IntPtr, IntPtr, int>*)AbiToProjectionVftablePtr)[20] = &Do_Abi_put_ParagraphFormat_14;
            ((delegate* unmanaged[Stdcall]<IntPtr, int*, int>*)AbiToProjectionVftablePtr)[21] = &Do_Abi_get_StartPosition_15;
            ((delegate* unmanaged[Stdcall]<IntPtr, int, int>*)AbiToProjectionVftablePtr)[22] = &Do_Abi_put_StartPosition_16;
            ((delegate* unmanaged[Stdcall]<IntPtr, int*, int>*)AbiToProjectionVftablePtr)[23] = &Do_Abi_get_StoryLength_17;
            ((delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>*)AbiToProjectionVftablePtr)[24] = &Do_Abi_get_Text_18;
            ((delegate* unmanaged[Stdcall]<IntPtr, IntPtr, int>*)AbiToProjectionVftablePtr)[25] = &Do_Abi_put_Text_19;
            ((delegate* unmanaged[Stdcall]<IntPtr, int, byte*, int>*)AbiToProjectionVftablePtr)[26] = &Do_Abi_CanPaste_20;
            ((delegate* unmanaged[Stdcall]<IntPtr, global::Microsoft.UI.Text.LetterCase, int>*)AbiToProjectionVftablePtr)[27] = &Do_Abi_ChangeCase_21;
            ((delegate* unmanaged[Stdcall]<IntPtr, byte, int>*)AbiToProjectionVftablePtr)[28] = &Do_Abi_Collapse_22;
            ((delegate* unmanaged[Stdcall]<IntPtr, int>*)AbiToProjectionVftablePtr)[29] = &Do_Abi_Copy_23;
            ((delegate* unmanaged[Stdcall]<IntPtr, int>*)AbiToProjectionVftablePtr)[30] = &Do_Abi_Cut_24;
            ((delegate* unmanaged[Stdcall]<IntPtr, global::Microsoft.UI.Text.TextRangeUnit, int, int*, int>*)AbiToProjectionVftablePtr)[31] = &Do_Abi_Delete_25;
            ((delegate* unmanaged[Stdcall]<IntPtr, global::Microsoft.UI.Text.TextRangeUnit, byte, int*, int>*)AbiToProjectionVftablePtr)[32] = &Do_Abi_EndOf_26;
            ((delegate* unmanaged[Stdcall]<IntPtr, global::Microsoft.UI.Text.TextRangeUnit, int*, int>*)AbiToProjectionVftablePtr)[33] = &Do_Abi_Expand_27;
            ((delegate* unmanaged[Stdcall]<IntPtr, IntPtr, int, global::Microsoft.UI.Text.FindOptions, int*, int>*)AbiToProjectionVftablePtr)[34] = &Do_Abi_FindText_28;
            ((delegate* unmanaged[Stdcall]<IntPtr, uint*, int, int>*)AbiToProjectionVftablePtr)[35] = &Do_Abi_GetCharacterUtf32_29;
            ((delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>*)AbiToProjectionVftablePtr)[36] = &Do_Abi_GetClone_30;
            ((delegate* unmanaged[Stdcall]<IntPtr, global::Microsoft.UI.Text.TextRangeUnit, int*, int>*)AbiToProjectionVftablePtr)[37] = &Do_Abi_GetIndex_31;
            ((delegate* unmanaged[Stdcall]<IntPtr, global::Microsoft.UI.Text.HorizontalCharacterAlignment, global::Microsoft.UI.Text.VerticalCharacterAlignment, global::Microsoft.UI.Text.PointOptions, global::Windows.Foundation.Point*, int>*)AbiToProjectionVftablePtr)[38] = &Do_Abi_GetPoint_32;
            ((delegate* unmanaged[Stdcall]<IntPtr, global::Microsoft.UI.Text.PointOptions, global::Windows.Foundation.Rect*, int*, int>*)AbiToProjectionVftablePtr)[39] = &Do_Abi_GetRect_33;
            ((delegate* unmanaged[Stdcall]<IntPtr, global::Microsoft.UI.Text.TextGetOptions, IntPtr*, int>*)AbiToProjectionVftablePtr)[40] = &Do_Abi_GetText_34;
            ((delegate* unmanaged[Stdcall]<IntPtr, global::Microsoft.UI.Text.TextGetOptions, IntPtr, int>*)AbiToProjectionVftablePtr)[41] = &Do_Abi_GetTextViaStream_35;
            ((delegate* unmanaged[Stdcall]<IntPtr, IntPtr, byte*, int>*)AbiToProjectionVftablePtr)[42] = &Do_Abi_InRange_36;
            ((delegate* unmanaged[Stdcall]<IntPtr, int, int, int, global::Microsoft.UI.Text.VerticalCharacterAlignment, IntPtr, IntPtr, int>*)AbiToProjectionVftablePtr)[43] = &Do_Abi_InsertImage_37;
            ((delegate* unmanaged[Stdcall]<IntPtr, IntPtr, byte*, int>*)AbiToProjectionVftablePtr)[44] = &Do_Abi_InStory_38;
            ((delegate* unmanaged[Stdcall]<IntPtr, IntPtr, byte*, int>*)AbiToProjectionVftablePtr)[45] = &Do_Abi_IsEqual_39;
            ((delegate* unmanaged[Stdcall]<IntPtr, global::Microsoft.UI.Text.TextRangeUnit, int, int*, int>*)AbiToProjectionVftablePtr)[46] = &Do_Abi_Move_40;
            ((delegate* unmanaged[Stdcall]<IntPtr, global::Microsoft.UI.Text.TextRangeUnit, int, int*, int>*)AbiToProjectionVftablePtr)[47] = &Do_Abi_MoveEnd_41;
            ((delegate* unmanaged[Stdcall]<IntPtr, global::Microsoft.UI.Text.TextRangeUnit, int, int*, int>*)AbiToProjectionVftablePtr)[48] = &Do_Abi_MoveStart_42;
            ((delegate* unmanaged[Stdcall]<IntPtr, int, int>*)AbiToProjectionVftablePtr)[49] = &Do_Abi_Paste_43;
            ((delegate* unmanaged[Stdcall]<IntPtr, global::Microsoft.UI.Text.PointOptions, int>*)AbiToProjectionVftablePtr)[50] = &Do_Abi_ScrollIntoView_44;
            ((delegate* unmanaged[Stdcall]<IntPtr, int>*)AbiToProjectionVftablePtr)[51] = &Do_Abi_MatchSelection_45;
            ((delegate* unmanaged[Stdcall]<IntPtr, global::Microsoft.UI.Text.TextRangeUnit, int, byte, int>*)AbiToProjectionVftablePtr)[52] = &Do_Abi_SetIndex_46;
            ((delegate* unmanaged[Stdcall]<IntPtr, global::Windows.Foundation.Point, global::Microsoft.UI.Text.PointOptions, byte, int>*)AbiToProjectionVftablePtr)[53] = &Do_Abi_SetPoint_47;
            ((delegate* unmanaged[Stdcall]<IntPtr, int, int, int>*)AbiToProjectionVftablePtr)[54] = &Do_Abi_SetRange_48;
            ((delegate* unmanaged[Stdcall]<IntPtr, global::Microsoft.UI.Text.TextSetOptions, IntPtr, int>*)AbiToProjectionVftablePtr)[55] = &Do_Abi_SetText_49;
            ((delegate* unmanaged[Stdcall]<IntPtr, global::Microsoft.UI.Text.TextSetOptions, IntPtr, int>*)AbiToProjectionVftablePtr)[56] = &Do_Abi_SetTextViaStream_50;
            ((delegate* unmanaged[Stdcall]<IntPtr, global::Microsoft.UI.Text.TextRangeUnit, byte, int*, int>*)AbiToProjectionVftablePtr)[57] = &Do_Abi_StartOf_51;
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvStdcall) })]
        private static unsafe int Do_Abi_CanPaste_20(IntPtr thisPtr, int format, byte* result)
        {

            bool __result = default;

            *result = default;

            try
            {
                __result = global::WinRT.ComWrappersSupport.FindObject<global::Microsoft.UI.Text.ITextRange>(thisPtr).CanPaste(format);
                *result = (byte)(__result ? 1 : 0);

            }
            catch (Exception __exception__)
            {
                global::WinRT.ExceptionHelpers.SetErrorInfo(__exception__);
                return global::WinRT.ExceptionHelpers.GetHRForException(__exception__);
            }
            return 0;
        }
        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvStdcall) })]
        private static unsafe int Do_Abi_ChangeCase_21(IntPtr thisPtr, global::Microsoft.UI.Text.LetterCase value)
        {



            try
            {
                global::WinRT.ComWrappersSupport.FindObject<global::Microsoft.UI.Text.ITextRange>(thisPtr).ChangeCase(value);

            }
            catch (Exception __exception__)
            {
                global::WinRT.ExceptionHelpers.SetErrorInfo(__exception__);
                return global::WinRT.ExceptionHelpers.GetHRForException(__exception__);
            }
            return 0;
        }
        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvStdcall) })]
        private static unsafe int Do_Abi_Collapse_22(IntPtr thisPtr, byte value)
        {



            try
            {
                global::WinRT.ComWrappersSupport.FindObject<global::Microsoft.UI.Text.ITextRange>(thisPtr).Collapse(value != 0);

            }
            catch (Exception __exception__)
            {
                global::WinRT.ExceptionHelpers.SetErrorInfo(__exception__);
                return global::WinRT.ExceptionHelpers.GetHRForException(__exception__);
            }
            return 0;
        }
        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvStdcall) })]
        private static unsafe int Do_Abi_Copy_23(IntPtr thisPtr)
        {



            try
            {
                global::WinRT.ComWrappersSupport.FindObject<global::Microsoft.UI.Text.ITextRange>(thisPtr).Copy();

            }
            catch (Exception __exception__)
            {
                global::WinRT.ExceptionHelpers.SetErrorInfo(__exception__);
                return global::WinRT.ExceptionHelpers.GetHRForException(__exception__);
            }
            return 0;
        }
        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvStdcall) })]
        private static unsafe int Do_Abi_Cut_24(IntPtr thisPtr)
        {



            try
            {
                global::WinRT.ComWrappersSupport.FindObject<global::Microsoft.UI.Text.ITextRange>(thisPtr).Cut();

            }
            catch (Exception __exception__)
            {
                global::WinRT.ExceptionHelpers.SetErrorInfo(__exception__);
                return global::WinRT.ExceptionHelpers.GetHRForException(__exception__);
            }
            return 0;
        }
        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvStdcall) })]
        private static unsafe int Do_Abi_Delete_25(IntPtr thisPtr, global::Microsoft.UI.Text.TextRangeUnit unit, int count, int* result)
        {

            int __result = default;

            *result = default;

            try
            {
                __result = global::WinRT.ComWrappersSupport.FindObject<global::Microsoft.UI.Text.ITextRange>(thisPtr).Delete(unit, count);
                *result = __result;

            }
            catch (Exception __exception__)
            {
                global::WinRT.ExceptionHelpers.SetErrorInfo(__exception__);
                return global::WinRT.ExceptionHelpers.GetHRForException(__exception__);
            }
            return 0;
        }
        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvStdcall) })]
        private static unsafe int Do_Abi_EndOf_26(IntPtr thisPtr, global::Microsoft.UI.Text.TextRangeUnit unit, byte extend, int* result)
        {

            int __result = default;

            *result = default;

            try
            {
                __result = global::WinRT.ComWrappersSupport.FindObject<global::Microsoft.UI.Text.ITextRange>(thisPtr).EndOf(unit, extend != 0);
                *result = __result;

            }
            catch (Exception __exception__)
            {
                global::WinRT.ExceptionHelpers.SetErrorInfo(__exception__);
                return global::WinRT.ExceptionHelpers.GetHRForException(__exception__);
            }
            return 0;
        }
        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvStdcall) })]
        private static unsafe int Do_Abi_Expand_27(IntPtr thisPtr, global::Microsoft.UI.Text.TextRangeUnit unit, int* result)
        {

            int __result = default;

            *result = default;

            try
            {
                __result = global::WinRT.ComWrappersSupport.FindObject<global::Microsoft.UI.Text.ITextRange>(thisPtr).Expand(unit);
                *result = __result;

            }
            catch (Exception __exception__)
            {
                global::WinRT.ExceptionHelpers.SetErrorInfo(__exception__);
                return global::WinRT.ExceptionHelpers.GetHRForException(__exception__);
            }
            return 0;
        }
        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvStdcall) })]
        private static unsafe int Do_Abi_FindText_28(IntPtr thisPtr, IntPtr value, int scanLength, global::Microsoft.UI.Text.FindOptions options, int* result)
        {

            int __result = default;

            *result = default;

            try
            {
                __result = global::WinRT.ComWrappersSupport.FindObject<global::Microsoft.UI.Text.ITextRange>(thisPtr).FindText(MarshalString.FromAbi(value), scanLength, options);
                *result = __result;

            }
            catch (Exception __exception__)
            {
                global::WinRT.ExceptionHelpers.SetErrorInfo(__exception__);
                return global::WinRT.ExceptionHelpers.GetHRForException(__exception__);
            }
            return 0;
        }
        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvStdcall) })]
        private static unsafe int Do_Abi_GetCharacterUtf32_29(IntPtr thisPtr, uint* value, int offset)
        {


            *value = default;
            uint __value = default;

            try
            {
                global::WinRT.ComWrappersSupport.FindObject<global::Microsoft.UI.Text.ITextRange>(thisPtr).GetCharacterUtf32(out __value, offset);
                *value = __value;

            }
            catch (Exception __exception__)
            {
                global::WinRT.ExceptionHelpers.SetErrorInfo(__exception__);
                return global::WinRT.ExceptionHelpers.GetHRForException(__exception__);
            }
            return 0;
        }
        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvStdcall) })]
        private static unsafe int Do_Abi_GetClone_30(IntPtr thisPtr, IntPtr* result)
        {

            global::Microsoft.UI.Text.ITextRange __result = default;

            *result = default;

            try
            {
                __result = global::WinRT.ComWrappersSupport.FindObject<global::Microsoft.UI.Text.ITextRange>(thisPtr).GetClone();
                *result = MarshalInterface<global::Microsoft.UI.Text.ITextRange>.FromManaged(__result);

            }
            catch (Exception __exception__)
            {
                global::WinRT.ExceptionHelpers.SetErrorInfo(__exception__);
                return global::WinRT.ExceptionHelpers.GetHRForException(__exception__);
            }
            return 0;
        }
        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvStdcall) })]
        private static unsafe int Do_Abi_GetIndex_31(IntPtr thisPtr, global::Microsoft.UI.Text.TextRangeUnit unit, int* result)
        {

            int __result = default;

            *result = default;

            try
            {
                __result = global::WinRT.ComWrappersSupport.FindObject<global::Microsoft.UI.Text.ITextRange>(thisPtr).GetIndex(unit);
                *result = __result;

            }
            catch (Exception __exception__)
            {
                global::WinRT.ExceptionHelpers.SetErrorInfo(__exception__);
                return global::WinRT.ExceptionHelpers.GetHRForException(__exception__);
            }
            return 0;
        }
        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvStdcall) })]
        private static unsafe int Do_Abi_GetPoint_32(IntPtr thisPtr, global::Microsoft.UI.Text.HorizontalCharacterAlignment horizontalAlign, global::Microsoft.UI.Text.VerticalCharacterAlignment verticalAlign, global::Microsoft.UI.Text.PointOptions options, global::Windows.Foundation.Point* point)
        {


            *point = default;
            global::Windows.Foundation.Point __point = default;

            try
            {
                global::WinRT.ComWrappersSupport.FindObject<global::Microsoft.UI.Text.ITextRange>(thisPtr).GetPoint(horizontalAlign, verticalAlign, options, out __point);
                *point = __point;

            }
            catch (Exception __exception__)
            {
                global::WinRT.ExceptionHelpers.SetErrorInfo(__exception__);
                return global::WinRT.ExceptionHelpers.GetHRForException(__exception__);
            }
            return 0;
        }
        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvStdcall) })]
        private static unsafe int Do_Abi_GetRect_33(IntPtr thisPtr, global::Microsoft.UI.Text.PointOptions options, global::Windows.Foundation.Rect* rect, int* hit)
        {


            *rect = default;
            *hit = default;
            global::Windows.Foundation.Rect __rect = default;
            int __hit = default;

            try
            {
                global::WinRT.ComWrappersSupport.FindObject<global::Microsoft.UI.Text.ITextRange>(thisPtr).GetRect(options, out __rect, out __hit);
                *rect = __rect;
                *hit = __hit;

            }
            catch (Exception __exception__)
            {
                global::WinRT.ExceptionHelpers.SetErrorInfo(__exception__);
                return global::WinRT.ExceptionHelpers.GetHRForException(__exception__);
            }
            return 0;
        }
        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvStdcall) })]
        private static unsafe int Do_Abi_GetText_34(IntPtr thisPtr, global::Microsoft.UI.Text.TextGetOptions options, IntPtr* value)
        {


            *value = default;
            string __value = default;

            try
            {
                global::WinRT.ComWrappersSupport.FindObject<global::Microsoft.UI.Text.ITextRange>(thisPtr).GetText(options, out __value);
                *value = MarshalString.FromManaged(__value);

            }
            catch (Exception __exception__)
            {
                global::WinRT.ExceptionHelpers.SetErrorInfo(__exception__);
                return global::WinRT.ExceptionHelpers.GetHRForException(__exception__);
            }
            return 0;
        }
        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvStdcall) })]
        private static unsafe int Do_Abi_GetTextViaStream_35(IntPtr thisPtr, global::Microsoft.UI.Text.TextGetOptions options, IntPtr value)
        {



            try
            {
                global::WinRT.ComWrappersSupport.FindObject<global::Microsoft.UI.Text.ITextRange>(thisPtr).GetTextViaStream(options, MarshalInterface<global::Windows.Storage.Streams.IRandomAccessStream>.FromAbi(value));

            }
            catch (Exception __exception__)
            {
                global::WinRT.ExceptionHelpers.SetErrorInfo(__exception__);
                return global::WinRT.ExceptionHelpers.GetHRForException(__exception__);
            }
            return 0;
        }
        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvStdcall) })]
        private static unsafe int Do_Abi_InRange_36(IntPtr thisPtr, IntPtr range, byte* result)
        {

            bool __result = default;

            *result = default;

            try
            {
                __result = global::WinRT.ComWrappersSupport.FindObject<global::Microsoft.UI.Text.ITextRange>(thisPtr).InRange(MarshalInterface<global::Microsoft.UI.Text.ITextRange>.FromAbi(range));
                *result = (byte)(__result ? 1 : 0);

            }
            catch (Exception __exception__)
            {
                global::WinRT.ExceptionHelpers.SetErrorInfo(__exception__);
                return global::WinRT.ExceptionHelpers.GetHRForException(__exception__);
            }
            return 0;
        }
        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvStdcall) })]
        private static unsafe int Do_Abi_InsertImage_37(IntPtr thisPtr, int width, int height, int ascent, global::Microsoft.UI.Text.VerticalCharacterAlignment verticalAlign, IntPtr alternateText, IntPtr value)
        {



            try
            {
                global::WinRT.ComWrappersSupport.FindObject<global::Microsoft.UI.Text.ITextRange>(thisPtr).InsertImage(width, height, ascent, verticalAlign, MarshalString.FromAbi(alternateText), MarshalInterface<global::Windows.Storage.Streams.IRandomAccessStream>.FromAbi(value));

            }
            catch (Exception __exception__)
            {
                global::WinRT.ExceptionHelpers.SetErrorInfo(__exception__);
                return global::WinRT.ExceptionHelpers.GetHRForException(__exception__);
            }
            return 0;
        }
        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvStdcall) })]
        private static unsafe int Do_Abi_InStory_38(IntPtr thisPtr, IntPtr range, byte* result)
        {

            bool __result = default;

            *result = default;

            try
            {
                __result = global::WinRT.ComWrappersSupport.FindObject<global::Microsoft.UI.Text.ITextRange>(thisPtr).InStory(MarshalInterface<global::Microsoft.UI.Text.ITextRange>.FromAbi(range));
                *result = (byte)(__result ? 1 : 0);

            }
            catch (Exception __exception__)
            {
                global::WinRT.ExceptionHelpers.SetErrorInfo(__exception__);
                return global::WinRT.ExceptionHelpers.GetHRForException(__exception__);
            }
            return 0;
        }
        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvStdcall) })]
        private static unsafe int Do_Abi_IsEqual_39(IntPtr thisPtr, IntPtr range, byte* result)
        {

            bool __result = default;

            *result = default;

            try
            {
                __result = global::WinRT.ComWrappersSupport.FindObject<global::Microsoft.UI.Text.ITextRange>(thisPtr).IsEqual(MarshalInterface<global::Microsoft.UI.Text.ITextRange>.FromAbi(range));
                *result = (byte)(__result ? 1 : 0);

            }
            catch (Exception __exception__)
            {
                global::WinRT.ExceptionHelpers.SetErrorInfo(__exception__);
                return global::WinRT.ExceptionHelpers.GetHRForException(__exception__);
            }
            return 0;
        }
        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvStdcall) })]
        private static unsafe int Do_Abi_Move_40(IntPtr thisPtr, global::Microsoft.UI.Text.TextRangeUnit unit, int count, int* result)
        {

            int __result = default;

            *result = default;

            try
            {
                __result = global::WinRT.ComWrappersSupport.FindObject<global::Microsoft.UI.Text.ITextRange>(thisPtr).Move(unit, count);
                *result = __result;

            }
            catch (Exception __exception__)
            {
                global::WinRT.ExceptionHelpers.SetErrorInfo(__exception__);
                return global::WinRT.ExceptionHelpers.GetHRForException(__exception__);
            }
            return 0;
        }
        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvStdcall) })]
        private static unsafe int Do_Abi_MoveEnd_41(IntPtr thisPtr, global::Microsoft.UI.Text.TextRangeUnit unit, int count, int* result)
        {

            int __result = default;

            *result = default;

            try
            {
                __result = global::WinRT.ComWrappersSupport.FindObject<global::Microsoft.UI.Text.ITextRange>(thisPtr).MoveEnd(unit, count);
                *result = __result;

            }
            catch (Exception __exception__)
            {
                global::WinRT.ExceptionHelpers.SetErrorInfo(__exception__);
                return global::WinRT.ExceptionHelpers.GetHRForException(__exception__);
            }
            return 0;
        }
        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvStdcall) })]
        private static unsafe int Do_Abi_MoveStart_42(IntPtr thisPtr, global::Microsoft.UI.Text.TextRangeUnit unit, int count, int* result)
        {

            int __result = default;

            *result = default;

            try
            {
                __result = global::WinRT.ComWrappersSupport.FindObject<global::Microsoft.UI.Text.ITextRange>(thisPtr).MoveStart(unit, count);
                *result = __result;

            }
            catch (Exception __exception__)
            {
                global::WinRT.ExceptionHelpers.SetErrorInfo(__exception__);
                return global::WinRT.ExceptionHelpers.GetHRForException(__exception__);
            }
            return 0;
        }
        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvStdcall) })]
        private static unsafe int Do_Abi_Paste_43(IntPtr thisPtr, int format)
        {



            try
            {
                global::WinRT.ComWrappersSupport.FindObject<global::Microsoft.UI.Text.ITextRange>(thisPtr).Paste(format);

            }
            catch (Exception __exception__)
            {
                global::WinRT.ExceptionHelpers.SetErrorInfo(__exception__);
                return global::WinRT.ExceptionHelpers.GetHRForException(__exception__);
            }
            return 0;
        }
        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvStdcall) })]
        private static unsafe int Do_Abi_ScrollIntoView_44(IntPtr thisPtr, global::Microsoft.UI.Text.PointOptions value)
        {



            try
            {
                global::WinRT.ComWrappersSupport.FindObject<global::Microsoft.UI.Text.ITextRange>(thisPtr).ScrollIntoView(value);

            }
            catch (Exception __exception__)
            {
                global::WinRT.ExceptionHelpers.SetErrorInfo(__exception__);
                return global::WinRT.ExceptionHelpers.GetHRForException(__exception__);
            }
            return 0;
        }
        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvStdcall) })]
        private static unsafe int Do_Abi_MatchSelection_45(IntPtr thisPtr)
        {



            try
            {
                global::WinRT.ComWrappersSupport.FindObject<global::Microsoft.UI.Text.ITextRange>(thisPtr).MatchSelection();

            }
            catch (Exception __exception__)
            {
                global::WinRT.ExceptionHelpers.SetErrorInfo(__exception__);
                return global::WinRT.ExceptionHelpers.GetHRForException(__exception__);
            }
            return 0;
        }
        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvStdcall) })]
        private static unsafe int Do_Abi_SetIndex_46(IntPtr thisPtr, global::Microsoft.UI.Text.TextRangeUnit unit, int index, byte extend)
        {



            try
            {
                global::WinRT.ComWrappersSupport.FindObject<global::Microsoft.UI.Text.ITextRange>(thisPtr).SetIndex(unit, index, extend != 0);

            }
            catch (Exception __exception__)
            {
                global::WinRT.ExceptionHelpers.SetErrorInfo(__exception__);
                return global::WinRT.ExceptionHelpers.GetHRForException(__exception__);
            }
            return 0;
        }
        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvStdcall) })]
        private static unsafe int Do_Abi_SetPoint_47(IntPtr thisPtr, global::Windows.Foundation.Point point, global::Microsoft.UI.Text.PointOptions options, byte extend)
        {



            try
            {
                global::WinRT.ComWrappersSupport.FindObject<global::Microsoft.UI.Text.ITextRange>(thisPtr).SetPoint(point, options, extend != 0);

            }
            catch (Exception __exception__)
            {
                global::WinRT.ExceptionHelpers.SetErrorInfo(__exception__);
                return global::WinRT.ExceptionHelpers.GetHRForException(__exception__);
            }
            return 0;
        }
        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvStdcall) })]
        private static unsafe int Do_Abi_SetRange_48(IntPtr thisPtr, int startPosition, int endPosition)
        {



            try
            {
                global::WinRT.ComWrappersSupport.FindObject<global::Microsoft.UI.Text.ITextRange>(thisPtr).SetRange(startPosition, endPosition);

            }
            catch (Exception __exception__)
            {
                global::WinRT.ExceptionHelpers.SetErrorInfo(__exception__);
                return global::WinRT.ExceptionHelpers.GetHRForException(__exception__);
            }
            return 0;
        }
        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvStdcall) })]
        private static unsafe int Do_Abi_SetText_49(IntPtr thisPtr, global::Microsoft.UI.Text.TextSetOptions options, IntPtr value)
        {



            try
            {
                global::WinRT.ComWrappersSupport.FindObject<global::Microsoft.UI.Text.ITextRange>(thisPtr).SetText(options, MarshalString.FromAbi(value));

            }
            catch (Exception __exception__)
            {
                global::WinRT.ExceptionHelpers.SetErrorInfo(__exception__);
                return global::WinRT.ExceptionHelpers.GetHRForException(__exception__);
            }
            return 0;
        }
        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvStdcall) })]
        private static unsafe int Do_Abi_SetTextViaStream_50(IntPtr thisPtr, global::Microsoft.UI.Text.TextSetOptions options, IntPtr value)
        {



            try
            {
                global::WinRT.ComWrappersSupport.FindObject<global::Microsoft.UI.Text.ITextRange>(thisPtr).SetTextViaStream(options, MarshalInterface<global::Windows.Storage.Streams.IRandomAccessStream>.FromAbi(value));

            }
            catch (Exception __exception__)
            {
                global::WinRT.ExceptionHelpers.SetErrorInfo(__exception__);
                return global::WinRT.ExceptionHelpers.GetHRForException(__exception__);
            }
            return 0;
        }
        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvStdcall) })]
        private static unsafe int Do_Abi_StartOf_51(IntPtr thisPtr, global::Microsoft.UI.Text.TextRangeUnit unit, byte extend, int* result)
        {

            int __result = default;

            *result = default;

            try
            {
                __result = global::WinRT.ComWrappersSupport.FindObject<global::Microsoft.UI.Text.ITextRange>(thisPtr).StartOf(unit, extend != 0);
                *result = __result;

            }
            catch (Exception __exception__)
            {
                global::WinRT.ExceptionHelpers.SetErrorInfo(__exception__);
                return global::WinRT.ExceptionHelpers.GetHRForException(__exception__);
            }
            return 0;
        }
        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvStdcall) })]
        private static unsafe int Do_Abi_put_Character_1(IntPtr thisPtr, ushort value)
        {



            try
            {
                global::WinRT.ComWrappersSupport.FindObject<global::Microsoft.UI.Text.ITextRange>(thisPtr).Character = (char)value;

            }
            catch (Exception __exception__)
            {
                global::WinRT.ExceptionHelpers.SetErrorInfo(__exception__);
                return global::WinRT.ExceptionHelpers.GetHRForException(__exception__);
            }
            return 0;
        }
        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvStdcall) })]
        private static unsafe int Do_Abi_get_Character_0(IntPtr thisPtr, ushort* value)
        {

            char __value = default;

            *value = default;

            try
            {
                __value = global::WinRT.ComWrappersSupport.FindObject<global::Microsoft.UI.Text.ITextRange>(thisPtr).Character;
                *value = (ushort)__value;

            }
            catch (Exception __exception__)
            {
                global::WinRT.ExceptionHelpers.SetErrorInfo(__exception__);
                return global::WinRT.ExceptionHelpers.GetHRForException(__exception__);
            }
            return 0;
        }
        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvStdcall) })]
        private static unsafe int Do_Abi_put_CharacterFormat_3(IntPtr thisPtr, IntPtr value)
        {



            try
            {
                global::WinRT.ComWrappersSupport.FindObject<global::Microsoft.UI.Text.ITextRange>(thisPtr).CharacterFormat = MarshalInterface<global::Microsoft.UI.Text.ITextCharacterFormat>.FromAbi(value);

            }
            catch (Exception __exception__)
            {
                global::WinRT.ExceptionHelpers.SetErrorInfo(__exception__);
                return global::WinRT.ExceptionHelpers.GetHRForException(__exception__);
            }
            return 0;
        }
        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvStdcall) })]
        private static unsafe int Do_Abi_get_CharacterFormat_2(IntPtr thisPtr, IntPtr* value)
        {

            global::Microsoft.UI.Text.ITextCharacterFormat __value = default;

            *value = default;

            try
            {
                __value = global::WinRT.ComWrappersSupport.FindObject<global::Microsoft.UI.Text.ITextRange>(thisPtr).CharacterFormat;
                *value = MarshalInterface<global::Microsoft.UI.Text.ITextCharacterFormat>.FromManaged(__value);

            }
            catch (Exception __exception__)
            {
                global::WinRT.ExceptionHelpers.SetErrorInfo(__exception__);
                return global::WinRT.ExceptionHelpers.GetHRForException(__exception__);
            }
            return 0;
        }
        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvStdcall) })]
        private static unsafe int Do_Abi_put_EndPosition_7(IntPtr thisPtr, int value)
        {



            try
            {
                global::WinRT.ComWrappersSupport.FindObject<global::Microsoft.UI.Text.ITextRange>(thisPtr).EndPosition = value;

            }
            catch (Exception __exception__)
            {
                global::WinRT.ExceptionHelpers.SetErrorInfo(__exception__);
                return global::WinRT.ExceptionHelpers.GetHRForException(__exception__);
            }
            return 0;
        }
        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvStdcall) })]
        private static unsafe int Do_Abi_get_EndPosition_6(IntPtr thisPtr, int* value)
        {

            int __value = default;

            *value = default;

            try
            {
                __value = global::WinRT.ComWrappersSupport.FindObject<global::Microsoft.UI.Text.ITextRange>(thisPtr).EndPosition;
                *value = __value;

            }
            catch (Exception __exception__)
            {
                global::WinRT.ExceptionHelpers.SetErrorInfo(__exception__);
                return global::WinRT.ExceptionHelpers.GetHRForException(__exception__);
            }
            return 0;
        }
        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvStdcall) })]
        private static unsafe int Do_Abi_put_FormattedText_5(IntPtr thisPtr, IntPtr value)
        {



            try
            {
                global::WinRT.ComWrappersSupport.FindObject<global::Microsoft.UI.Text.ITextRange>(thisPtr).FormattedText = MarshalInterface<global::Microsoft.UI.Text.ITextRange>.FromAbi(value);

            }
            catch (Exception __exception__)
            {
                global::WinRT.ExceptionHelpers.SetErrorInfo(__exception__);
                return global::WinRT.ExceptionHelpers.GetHRForException(__exception__);
            }
            return 0;
        }
        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvStdcall) })]
        private static unsafe int Do_Abi_get_FormattedText_4(IntPtr thisPtr, IntPtr* value)
        {

            global::Microsoft.UI.Text.ITextRange __value = default;

            *value = default;

            try
            {
                __value = global::WinRT.ComWrappersSupport.FindObject<global::Microsoft.UI.Text.ITextRange>(thisPtr).FormattedText;
                *value = MarshalInterface<global::Microsoft.UI.Text.ITextRange>.FromManaged(__value);

            }
            catch (Exception __exception__)
            {
                global::WinRT.ExceptionHelpers.SetErrorInfo(__exception__);
                return global::WinRT.ExceptionHelpers.GetHRForException(__exception__);
            }
            return 0;
        }
        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvStdcall) })]
        private static unsafe int Do_Abi_put_Gravity_9(IntPtr thisPtr, global::Microsoft.UI.Text.RangeGravity value)
        {



            try
            {
                global::WinRT.ComWrappersSupport.FindObject<global::Microsoft.UI.Text.ITextRange>(thisPtr).Gravity = value;

            }
            catch (Exception __exception__)
            {
                global::WinRT.ExceptionHelpers.SetErrorInfo(__exception__);
                return global::WinRT.ExceptionHelpers.GetHRForException(__exception__);
            }
            return 0;
        }
        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvStdcall) })]
        private static unsafe int Do_Abi_get_Gravity_8(IntPtr thisPtr, global::Microsoft.UI.Text.RangeGravity* value)
        {

            global::Microsoft.UI.Text.RangeGravity __value = default;

            *value = default;

            try
            {
                __value = global::WinRT.ComWrappersSupport.FindObject<global::Microsoft.UI.Text.ITextRange>(thisPtr).Gravity;
                *value = __value;

            }
            catch (Exception __exception__)
            {
                global::WinRT.ExceptionHelpers.SetErrorInfo(__exception__);
                return global::WinRT.ExceptionHelpers.GetHRForException(__exception__);
            }
            return 0;
        }
        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvStdcall) })]
        private static unsafe int Do_Abi_get_Length_10(IntPtr thisPtr, int* value)
        {

            int __value = default;

            *value = default;

            try
            {
                __value = global::WinRT.ComWrappersSupport.FindObject<global::Microsoft.UI.Text.ITextRange>(thisPtr).Length;
                *value = __value;

            }
            catch (Exception __exception__)
            {
                global::WinRT.ExceptionHelpers.SetErrorInfo(__exception__);
                return global::WinRT.ExceptionHelpers.GetHRForException(__exception__);
            }
            return 0;
        }
        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvStdcall) })]
        private static unsafe int Do_Abi_put_Link_12(IntPtr thisPtr, IntPtr value)
        {



            try
            {
                global::WinRT.ComWrappersSupport.FindObject<global::Microsoft.UI.Text.ITextRange>(thisPtr).Link = MarshalString.FromAbi(value);

            }
            catch (Exception __exception__)
            {
                global::WinRT.ExceptionHelpers.SetErrorInfo(__exception__);
                return global::WinRT.ExceptionHelpers.GetHRForException(__exception__);
            }
            return 0;
        }
        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvStdcall) })]
        private static unsafe int Do_Abi_get_Link_11(IntPtr thisPtr, IntPtr* value)
        {

            string __value = default;

            *value = default;

            try
            {
                __value = global::WinRT.ComWrappersSupport.FindObject<global::Microsoft.UI.Text.ITextRange>(thisPtr).Link;
                *value = MarshalString.FromManaged(__value);

            }
            catch (Exception __exception__)
            {
                global::WinRT.ExceptionHelpers.SetErrorInfo(__exception__);
                return global::WinRT.ExceptionHelpers.GetHRForException(__exception__);
            }
            return 0;
        }
        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvStdcall) })]
        private static unsafe int Do_Abi_put_ParagraphFormat_14(IntPtr thisPtr, IntPtr value)
        {



            try
            {
                global::WinRT.ComWrappersSupport.FindObject<global::Microsoft.UI.Text.ITextRange>(thisPtr).ParagraphFormat = MarshalInterface<global::Microsoft.UI.Text.ITextParagraphFormat>.FromAbi(value);

            }
            catch (Exception __exception__)
            {
                global::WinRT.ExceptionHelpers.SetErrorInfo(__exception__);
                return global::WinRT.ExceptionHelpers.GetHRForException(__exception__);
            }
            return 0;
        }
        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvStdcall) })]
        private static unsafe int Do_Abi_get_ParagraphFormat_13(IntPtr thisPtr, IntPtr* value)
        {

            global::Microsoft.UI.Text.ITextParagraphFormat __value = default;

            *value = default;

            try
            {
                __value = global::WinRT.ComWrappersSupport.FindObject<global::Microsoft.UI.Text.ITextRange>(thisPtr).ParagraphFormat;
                *value = MarshalInterface<global::Microsoft.UI.Text.ITextParagraphFormat>.FromManaged(__value);

            }
            catch (Exception __exception__)
            {
                global::WinRT.ExceptionHelpers.SetErrorInfo(__exception__);
                return global::WinRT.ExceptionHelpers.GetHRForException(__exception__);
            }
            return 0;
        }
        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvStdcall) })]
        private static unsafe int Do_Abi_put_StartPosition_16(IntPtr thisPtr, int value)
        {



            try
            {
                global::WinRT.ComWrappersSupport.FindObject<global::Microsoft.UI.Text.ITextRange>(thisPtr).StartPosition = value;

            }
            catch (Exception __exception__)
            {
                global::WinRT.ExceptionHelpers.SetErrorInfo(__exception__);
                return global::WinRT.ExceptionHelpers.GetHRForException(__exception__);
            }
            return 0;
        }
        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvStdcall) })]
        private static unsafe int Do_Abi_get_StartPosition_15(IntPtr thisPtr, int* value)
        {

            int __value = default;

            *value = default;

            try
            {
                __value = global::WinRT.ComWrappersSupport.FindObject<global::Microsoft.UI.Text.ITextRange>(thisPtr).StartPosition;
                *value = __value;

            }
            catch (Exception __exception__)
            {
                global::WinRT.ExceptionHelpers.SetErrorInfo(__exception__);
                return global::WinRT.ExceptionHelpers.GetHRForException(__exception__);
            }
            return 0;
        }
        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvStdcall) })]
        private static unsafe int Do_Abi_get_StoryLength_17(IntPtr thisPtr, int* value)
        {

            int __value = default;

            *value = default;

            try
            {
                __value = global::WinRT.ComWrappersSupport.FindObject<global::Microsoft.UI.Text.ITextRange>(thisPtr).StoryLength;
                *value = __value;

            }
            catch (Exception __exception__)
            {
                global::WinRT.ExceptionHelpers.SetErrorInfo(__exception__);
                return global::WinRT.ExceptionHelpers.GetHRForException(__exception__);
            }
            return 0;
        }
        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvStdcall) })]
        private static unsafe int Do_Abi_put_Text_19(IntPtr thisPtr, IntPtr value)
        {



            try
            {
                global::WinRT.ComWrappersSupport.FindObject<global::Microsoft.UI.Text.ITextRange>(thisPtr).Text = MarshalString.FromAbi(value);

            }
            catch (Exception __exception__)
            {
                global::WinRT.ExceptionHelpers.SetErrorInfo(__exception__);
                return global::WinRT.ExceptionHelpers.GetHRForException(__exception__);
            }
            return 0;
        }
        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvStdcall) })]
        private static unsafe int Do_Abi_get_Text_18(IntPtr thisPtr, IntPtr* value)
        {

            string __value = default;

            *value = default;

            try
            {
                __value = global::WinRT.ComWrappersSupport.FindObject<global::Microsoft.UI.Text.ITextRange>(thisPtr).Text;
                *value = MarshalString.FromManaged(__value);

            }
            catch (Exception __exception__)
            {
                global::WinRT.ExceptionHelpers.SetErrorInfo(__exception__);
                return global::WinRT.ExceptionHelpers.GetHRForException(__exception__);
            }
            return 0;
        }

        unsafe bool global::Microsoft.UI.Text.ITextRange.CanPaste(int format)
        {
            var _obj = ((IObjectReference)((IWinRTObject)this).GetObjectReferenceForType(typeof(global::Microsoft.UI.Text.ITextRange).TypeHandle));
            return global::ABI.Microsoft.UI.Text.ITextRangeMethods.CanPaste(_obj, format);
        }

        unsafe void global::Microsoft.UI.Text.ITextRange.ChangeCase(global::Microsoft.UI.Text.LetterCase value)
        {
            var _obj = ((IObjectReference)((IWinRTObject)this).GetObjectReferenceForType(typeof(global::Microsoft.UI.Text.ITextRange).TypeHandle));
            global::ABI.Microsoft.UI.Text.ITextRangeMethods.ChangeCase(_obj, value);
        }

        unsafe void global::Microsoft.UI.Text.ITextRange.Collapse(bool value)
        {
            var _obj = ((IObjectReference)((IWinRTObject)this).GetObjectReferenceForType(typeof(global::Microsoft.UI.Text.ITextRange).TypeHandle));
            global::ABI.Microsoft.UI.Text.ITextRangeMethods.Collapse(_obj, value);
        }

        unsafe void global::Microsoft.UI.Text.ITextRange.Copy()
        {
            var _obj = ((IObjectReference)((IWinRTObject)this).GetObjectReferenceForType(typeof(global::Microsoft.UI.Text.ITextRange).TypeHandle));
            global::ABI.Microsoft.UI.Text.ITextRangeMethods.Copy(_obj);
        }

        unsafe void global::Microsoft.UI.Text.ITextRange.Cut()
        {
            var _obj = ((IObjectReference)((IWinRTObject)this).GetObjectReferenceForType(typeof(global::Microsoft.UI.Text.ITextRange).TypeHandle));
            global::ABI.Microsoft.UI.Text.ITextRangeMethods.Cut(_obj);
        }

        unsafe int global::Microsoft.UI.Text.ITextRange.Delete(global::Microsoft.UI.Text.TextRangeUnit unit, int count)
        {
            var _obj = ((IObjectReference)((IWinRTObject)this).GetObjectReferenceForType(typeof(global::Microsoft.UI.Text.ITextRange).TypeHandle));
            return global::ABI.Microsoft.UI.Text.ITextRangeMethods.Delete(_obj, unit, count);
        }

        unsafe int global::Microsoft.UI.Text.ITextRange.EndOf(global::Microsoft.UI.Text.TextRangeUnit unit, bool extend)
        {
            var _obj = ((IObjectReference)((IWinRTObject)this).GetObjectReferenceForType(typeof(global::Microsoft.UI.Text.ITextRange).TypeHandle));
            return global::ABI.Microsoft.UI.Text.ITextRangeMethods.EndOf(_obj, unit, extend);
        }

        unsafe int global::Microsoft.UI.Text.ITextRange.Expand(global::Microsoft.UI.Text.TextRangeUnit unit)
        {
            var _obj = ((IObjectReference)((IWinRTObject)this).GetObjectReferenceForType(typeof(global::Microsoft.UI.Text.ITextRange).TypeHandle));
            return global::ABI.Microsoft.UI.Text.ITextRangeMethods.Expand(_obj, unit);
        }

        unsafe int global::Microsoft.UI.Text.ITextRange.FindText(string value, int scanLength, global::Microsoft.UI.Text.FindOptions options)
        {
            var _obj = ((IObjectReference)((IWinRTObject)this).GetObjectReferenceForType(typeof(global::Microsoft.UI.Text.ITextRange).TypeHandle));
            return global::ABI.Microsoft.UI.Text.ITextRangeMethods.FindText(_obj, value, scanLength, options);
        }

        unsafe void global::Microsoft.UI.Text.ITextRange.GetCharacterUtf32(out uint value, int offset)
        {
            var _obj = ((IObjectReference)((IWinRTObject)this).GetObjectReferenceForType(typeof(global::Microsoft.UI.Text.ITextRange).TypeHandle));
            global::ABI.Microsoft.UI.Text.ITextRangeMethods.GetCharacterUtf32(_obj, out value, offset);
        }

        unsafe global::Microsoft.UI.Text.ITextRange global::Microsoft.UI.Text.ITextRange.GetClone()
        {
            var _obj = ((IObjectReference)((IWinRTObject)this).GetObjectReferenceForType(typeof(global::Microsoft.UI.Text.ITextRange).TypeHandle));
            return global::ABI.Microsoft.UI.Text.ITextRangeMethods.GetClone(_obj);
        }

        unsafe int global::Microsoft.UI.Text.ITextRange.GetIndex(global::Microsoft.UI.Text.TextRangeUnit unit)
        {
            var _obj = ((IObjectReference)((IWinRTObject)this).GetObjectReferenceForType(typeof(global::Microsoft.UI.Text.ITextRange).TypeHandle));
            return global::ABI.Microsoft.UI.Text.ITextRangeMethods.GetIndex(_obj, unit);
        }

        unsafe void global::Microsoft.UI.Text.ITextRange.GetPoint(global::Microsoft.UI.Text.HorizontalCharacterAlignment horizontalAlign, global::Microsoft.UI.Text.VerticalCharacterAlignment verticalAlign, global::Microsoft.UI.Text.PointOptions options, out global::Windows.Foundation.Point point)
        {
            var _obj = ((IObjectReference)((IWinRTObject)this).GetObjectReferenceForType(typeof(global::Microsoft.UI.Text.ITextRange).TypeHandle));
            global::ABI.Microsoft.UI.Text.ITextRangeMethods.GetPoint(_obj, horizontalAlign, verticalAlign, options, out point);
        }

        unsafe void global::Microsoft.UI.Text.ITextRange.GetRect(global::Microsoft.UI.Text.PointOptions options, out global::Windows.Foundation.Rect rect, out int hit)
        {
            var _obj = ((IObjectReference)((IWinRTObject)this).GetObjectReferenceForType(typeof(global::Microsoft.UI.Text.ITextRange).TypeHandle));
            global::ABI.Microsoft.UI.Text.ITextRangeMethods.GetRect(_obj, options, out rect, out hit);
        }

        unsafe void global::Microsoft.UI.Text.ITextRange.GetText(global::Microsoft.UI.Text.TextGetOptions options, out string value)
        {
            var _obj = ((IObjectReference)((IWinRTObject)this).GetObjectReferenceForType(typeof(global::Microsoft.UI.Text.ITextRange).TypeHandle));
            global::ABI.Microsoft.UI.Text.ITextRangeMethods.GetText(_obj, options, out value);
        }

        unsafe void global::Microsoft.UI.Text.ITextRange.GetTextViaStream(global::Microsoft.UI.Text.TextGetOptions options, global::Windows.Storage.Streams.IRandomAccessStream value)
        {
            var _obj = ((IObjectReference)((IWinRTObject)this).GetObjectReferenceForType(typeof(global::Microsoft.UI.Text.ITextRange).TypeHandle));
            global::ABI.Microsoft.UI.Text.ITextRangeMethods.GetTextViaStream(_obj, options, value);
        }

        unsafe bool global::Microsoft.UI.Text.ITextRange.InRange(global::Microsoft.UI.Text.ITextRange range)
        {
            var _obj = ((IObjectReference)((IWinRTObject)this).GetObjectReferenceForType(typeof(global::Microsoft.UI.Text.ITextRange).TypeHandle));
            return global::ABI.Microsoft.UI.Text.ITextRangeMethods.InRange(_obj, range);
        }

        unsafe void global::Microsoft.UI.Text.ITextRange.InsertImage(int width, int height, int ascent, global::Microsoft.UI.Text.VerticalCharacterAlignment verticalAlign, string alternateText, global::Windows.Storage.Streams.IRandomAccessStream value)
        {
            var _obj = ((IObjectReference)((IWinRTObject)this).GetObjectReferenceForType(typeof(global::Microsoft.UI.Text.ITextRange).TypeHandle));
            global::ABI.Microsoft.UI.Text.ITextRangeMethods.InsertImage(_obj, width, height, ascent, verticalAlign, alternateText, value);
        }

        unsafe bool global::Microsoft.UI.Text.ITextRange.InStory(global::Microsoft.UI.Text.ITextRange range)
        {
            var _obj = ((IObjectReference)((IWinRTObject)this).GetObjectReferenceForType(typeof(global::Microsoft.UI.Text.ITextRange).TypeHandle));
            return global::ABI.Microsoft.UI.Text.ITextRangeMethods.InStory(_obj, range);
        }

        unsafe bool global::Microsoft.UI.Text.ITextRange.IsEqual(global::Microsoft.UI.Text.ITextRange range)
        {
            var _obj = ((IObjectReference)((IWinRTObject)this).GetObjectReferenceForType(typeof(global::Microsoft.UI.Text.ITextRange).TypeHandle));
            return global::ABI.Microsoft.UI.Text.ITextRangeMethods.IsEqual(_obj, range);
        }

        unsafe int global::Microsoft.UI.Text.ITextRange.Move(global::Microsoft.UI.Text.TextRangeUnit unit, int count)
        {
            var _obj = ((IObjectReference)((IWinRTObject)this).GetObjectReferenceForType(typeof(global::Microsoft.UI.Text.ITextRange).TypeHandle));
            return global::ABI.Microsoft.UI.Text.ITextRangeMethods.Move(_obj, unit, count);
        }

        unsafe int global::Microsoft.UI.Text.ITextRange.MoveEnd(global::Microsoft.UI.Text.TextRangeUnit unit, int count)
        {
            var _obj = ((IObjectReference)((IWinRTObject)this).GetObjectReferenceForType(typeof(global::Microsoft.UI.Text.ITextRange).TypeHandle));
            return global::ABI.Microsoft.UI.Text.ITextRangeMethods.MoveEnd(_obj, unit, count);
        }

        unsafe int global::Microsoft.UI.Text.ITextRange.MoveStart(global::Microsoft.UI.Text.TextRangeUnit unit, int count)
        {
            var _obj = ((IObjectReference)((IWinRTObject)this).GetObjectReferenceForType(typeof(global::Microsoft.UI.Text.ITextRange).TypeHandle));
            return global::ABI.Microsoft.UI.Text.ITextRangeMethods.MoveStart(_obj, unit, count);
        }

        unsafe void global::Microsoft.UI.Text.ITextRange.Paste(int format)
        {
            var _obj = ((IObjectReference)((IWinRTObject)this).GetObjectReferenceForType(typeof(global::Microsoft.UI.Text.ITextRange).TypeHandle));
            global::ABI.Microsoft.UI.Text.ITextRangeMethods.Paste(_obj, format);
        }

        unsafe void global::Microsoft.UI.Text.ITextRange.ScrollIntoView(global::Microsoft.UI.Text.PointOptions value)
        {
            var _obj = ((IObjectReference)((IWinRTObject)this).GetObjectReferenceForType(typeof(global::Microsoft.UI.Text.ITextRange).TypeHandle));
            global::ABI.Microsoft.UI.Text.ITextRangeMethods.ScrollIntoView(_obj, value);
        }

        unsafe void global::Microsoft.UI.Text.ITextRange.MatchSelection()
        {
            var _obj = ((IObjectReference)((IWinRTObject)this).GetObjectReferenceForType(typeof(global::Microsoft.UI.Text.ITextRange).TypeHandle));
            global::ABI.Microsoft.UI.Text.ITextRangeMethods.MatchSelection(_obj);
        }

        unsafe void global::Microsoft.UI.Text.ITextRange.SetIndex(global::Microsoft.UI.Text.TextRangeUnit unit, int index, bool extend)
        {
            var _obj = ((IObjectReference)((IWinRTObject)this).GetObjectReferenceForType(typeof(global::Microsoft.UI.Text.ITextRange).TypeHandle));
            global::ABI.Microsoft.UI.Text.ITextRangeMethods.SetIndex(_obj, unit, index, extend);
        }

        unsafe void global::Microsoft.UI.Text.ITextRange.SetPoint(global::Windows.Foundation.Point point, global::Microsoft.UI.Text.PointOptions options, bool extend)
        {
            var _obj = ((IObjectReference)((IWinRTObject)this).GetObjectReferenceForType(typeof(global::Microsoft.UI.Text.ITextRange).TypeHandle));
            global::ABI.Microsoft.UI.Text.ITextRangeMethods.SetPoint(_obj, point, options, extend);
        }

        unsafe void global::Microsoft.UI.Text.ITextRange.SetRange(int startPosition, int endPosition)
        {
            var _obj = ((IObjectReference)((IWinRTObject)this).GetObjectReferenceForType(typeof(global::Microsoft.UI.Text.ITextRange).TypeHandle));
            global::ABI.Microsoft.UI.Text.ITextRangeMethods.SetRange(_obj, startPosition, endPosition);
        }

        unsafe void global::Microsoft.UI.Text.ITextRange.SetText(global::Microsoft.UI.Text.TextSetOptions options, string value)
        {
            var _obj = ((IObjectReference)((IWinRTObject)this).GetObjectReferenceForType(typeof(global::Microsoft.UI.Text.ITextRange).TypeHandle));
            global::ABI.Microsoft.UI.Text.ITextRangeMethods.SetText(_obj, options, value);
        }

        unsafe void global::Microsoft.UI.Text.ITextRange.SetTextViaStream(global::Microsoft.UI.Text.TextSetOptions options, global::Windows.Storage.Streams.IRandomAccessStream value)
        {
            var _obj = ((IObjectReference)((IWinRTObject)this).GetObjectReferenceForType(typeof(global::Microsoft.UI.Text.ITextRange).TypeHandle));
            global::ABI.Microsoft.UI.Text.ITextRangeMethods.SetTextViaStream(_obj, options, value);
        }

        unsafe int global::Microsoft.UI.Text.ITextRange.StartOf(global::Microsoft.UI.Text.TextRangeUnit unit, bool extend)
        {
            var _obj = ((IObjectReference)((IWinRTObject)this).GetObjectReferenceForType(typeof(global::Microsoft.UI.Text.ITextRange).TypeHandle));
            return global::ABI.Microsoft.UI.Text.ITextRangeMethods.StartOf(_obj, unit, extend);
        }

        unsafe char global::Microsoft.UI.Text.ITextRange.Character
        {
            get
            {
                var _obj = ((IObjectReference)((IWinRTObject)this).GetObjectReferenceForType(typeof(global::Microsoft.UI.Text.ITextRange).TypeHandle));
                return global::ABI.Microsoft.UI.Text.ITextRangeMethods.get_Character(_obj);
            }
            set
            {
                var _obj = ((IObjectReference)((IWinRTObject)this).GetObjectReferenceForType(typeof(global::Microsoft.UI.Text.ITextRange).TypeHandle));
                global::ABI.Microsoft.UI.Text.ITextRangeMethods.set_Character(_obj, value);
            }
        }

        unsafe global::Microsoft.UI.Text.ITextCharacterFormat global::Microsoft.UI.Text.ITextRange.CharacterFormat
        {
            get
            {
                var _obj = ((IObjectReference)((IWinRTObject)this).GetObjectReferenceForType(typeof(global::Microsoft.UI.Text.ITextRange).TypeHandle));
                return global::ABI.Microsoft.UI.Text.ITextRangeMethods.get_CharacterFormat(_obj);
            }
            set
            {
                var _obj = ((IObjectReference)((IWinRTObject)this).GetObjectReferenceForType(typeof(global::Microsoft.UI.Text.ITextRange).TypeHandle));
                global::ABI.Microsoft.UI.Text.ITextRangeMethods.set_CharacterFormat(_obj, value);
            }
        }

        unsafe int global::Microsoft.UI.Text.ITextRange.EndPosition
        {
            get
            {
                var _obj = ((IObjectReference)((IWinRTObject)this).GetObjectReferenceForType(typeof(global::Microsoft.UI.Text.ITextRange).TypeHandle));
                return global::ABI.Microsoft.UI.Text.ITextRangeMethods.get_EndPosition(_obj);
            }
            set
            {
                var _obj = ((IObjectReference)((IWinRTObject)this).GetObjectReferenceForType(typeof(global::Microsoft.UI.Text.ITextRange).TypeHandle));
                global::ABI.Microsoft.UI.Text.ITextRangeMethods.set_EndPosition(_obj, value);
            }
        }

        unsafe global::Microsoft.UI.Text.ITextRange global::Microsoft.UI.Text.ITextRange.FormattedText
        {
            get
            {
                var _obj = ((IObjectReference)((IWinRTObject)this).GetObjectReferenceForType(typeof(global::Microsoft.UI.Text.ITextRange).TypeHandle));
                return global::ABI.Microsoft.UI.Text.ITextRangeMethods.get_FormattedText(_obj);
            }
            set
            {
                var _obj = ((IObjectReference)((IWinRTObject)this).GetObjectReferenceForType(typeof(global::Microsoft.UI.Text.ITextRange).TypeHandle));
                global::ABI.Microsoft.UI.Text.ITextRangeMethods.set_FormattedText(_obj, value);
            }
        }

        unsafe global::Microsoft.UI.Text.RangeGravity global::Microsoft.UI.Text.ITextRange.Gravity
        {
            get
            {
                var _obj = ((IObjectReference)((IWinRTObject)this).GetObjectReferenceForType(typeof(global::Microsoft.UI.Text.ITextRange).TypeHandle));
                return global::ABI.Microsoft.UI.Text.ITextRangeMethods.get_Gravity(_obj);
            }
            set
            {
                var _obj = ((IObjectReference)((IWinRTObject)this).GetObjectReferenceForType(typeof(global::Microsoft.UI.Text.ITextRange).TypeHandle));
                global::ABI.Microsoft.UI.Text.ITextRangeMethods.set_Gravity(_obj, value);
            }
        }

        unsafe int global::Microsoft.UI.Text.ITextRange.Length
        {
            get
            {
                var _obj = ((IObjectReference)((IWinRTObject)this).GetObjectReferenceForType(typeof(global::Microsoft.UI.Text.ITextRange).TypeHandle));
                return global::ABI.Microsoft.UI.Text.ITextRangeMethods.get_Length(_obj);
            }
        }

        unsafe string global::Microsoft.UI.Text.ITextRange.Link
        {
            get
            {
                var _obj = ((IObjectReference)((IWinRTObject)this).GetObjectReferenceForType(typeof(global::Microsoft.UI.Text.ITextRange).TypeHandle));
                return global::ABI.Microsoft.UI.Text.ITextRangeMethods.get_Link(_obj);
            }
            set
            {
                var _obj = ((IObjectReference)((IWinRTObject)this).GetObjectReferenceForType(typeof(global::Microsoft.UI.Text.ITextRange).TypeHandle));
                global::ABI.Microsoft.UI.Text.ITextRangeMethods.set_Link(_obj, value);
            }
        }

        unsafe global::Microsoft.UI.Text.ITextParagraphFormat global::Microsoft.UI.Text.ITextRange.ParagraphFormat
        {
            get
            {
                var _obj = ((IObjectReference)((IWinRTObject)this).GetObjectReferenceForType(typeof(global::Microsoft.UI.Text.ITextRange).TypeHandle));
                return global::ABI.Microsoft.UI.Text.ITextRangeMethods.get_ParagraphFormat(_obj);
            }
            set
            {
                var _obj = ((IObjectReference)((IWinRTObject)this).GetObjectReferenceForType(typeof(global::Microsoft.UI.Text.ITextRange).TypeHandle));
                global::ABI.Microsoft.UI.Text.ITextRangeMethods.set_ParagraphFormat(_obj, value);
            }
        }

        unsafe int global::Microsoft.UI.Text.ITextRange.StartPosition
        {
            get
            {
                var _obj = ((IObjectReference)((IWinRTObject)this).GetObjectReferenceForType(typeof(global::Microsoft.UI.Text.ITextRange).TypeHandle));
                return global::ABI.Microsoft.UI.Text.ITextRangeMethods.get_StartPosition(_obj);
            }
            set
            {
                var _obj = ((IObjectReference)((IWinRTObject)this).GetObjectReferenceForType(typeof(global::Microsoft.UI.Text.ITextRange).TypeHandle));
                global::ABI.Microsoft.UI.Text.ITextRangeMethods.set_StartPosition(_obj, value);
            }
        }

        unsafe int global::Microsoft.UI.Text.ITextRange.StoryLength
        {
            get
            {
                var _obj = ((IObjectReference)((IWinRTObject)this).GetObjectReferenceForType(typeof(global::Microsoft.UI.Text.ITextRange).TypeHandle));
                return global::ABI.Microsoft.UI.Text.ITextRangeMethods.get_StoryLength(_obj);
            }
        }

        unsafe string global::Microsoft.UI.Text.ITextRange.Text
        {
            get
            {
                var _obj = ((IObjectReference)((IWinRTObject)this).GetObjectReferenceForType(typeof(global::Microsoft.UI.Text.ITextRange).TypeHandle));
                return global::ABI.Microsoft.UI.Text.ITextRangeMethods.get_Text(_obj);
            }
            set
            {
                var _obj = ((IObjectReference)((IWinRTObject)this).GetObjectReferenceForType(typeof(global::Microsoft.UI.Text.ITextRange).TypeHandle));
                global::ABI.Microsoft.UI.Text.ITextRangeMethods.set_Text(_obj, value);
            }
        }
    }

    public static class ITextSelectionMethods
    {


        public static unsafe int EndKey(IObjectReference _obj, global::Microsoft.UI.Text.TextRangeUnit unit, bool extend)
        {
            var ThisPtr = _obj.ThisPtr;

            int __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::Microsoft.UI.Text.TextRangeUnit, byte, int*, int>**)ThisPtr)[9](ThisPtr, unit, (byte)(extend ? 1 : 0), &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }

        public static unsafe int HomeKey(IObjectReference _obj, global::Microsoft.UI.Text.TextRangeUnit unit, bool extend)
        {
            var ThisPtr = _obj.ThisPtr;

            int __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::Microsoft.UI.Text.TextRangeUnit, byte, int*, int>**)ThisPtr)[10](ThisPtr, unit, (byte)(extend ? 1 : 0), &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }

        public static unsafe int MoveDown(IObjectReference _obj, global::Microsoft.UI.Text.TextRangeUnit unit, int count, bool extend)
        {
            var ThisPtr = _obj.ThisPtr;

            int __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::Microsoft.UI.Text.TextRangeUnit, int, byte, int*, int>**)ThisPtr)[11](ThisPtr, unit, count, (byte)(extend ? 1 : 0), &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }

        public static unsafe int MoveLeft(IObjectReference _obj, global::Microsoft.UI.Text.TextRangeUnit unit, int count, bool extend)
        {
            var ThisPtr = _obj.ThisPtr;

            int __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::Microsoft.UI.Text.TextRangeUnit, int, byte, int*, int>**)ThisPtr)[12](ThisPtr, unit, count, (byte)(extend ? 1 : 0), &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }

        public static unsafe int MoveRight(IObjectReference _obj, global::Microsoft.UI.Text.TextRangeUnit unit, int count, bool extend)
        {
            var ThisPtr = _obj.ThisPtr;

            int __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::Microsoft.UI.Text.TextRangeUnit, int, byte, int*, int>**)ThisPtr)[13](ThisPtr, unit, count, (byte)(extend ? 1 : 0), &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }

        public static unsafe int MoveUp(IObjectReference _obj, global::Microsoft.UI.Text.TextRangeUnit unit, int count, bool extend)
        {
            var ThisPtr = _obj.ThisPtr;

            int __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::Microsoft.UI.Text.TextRangeUnit, int, byte, int*, int>**)ThisPtr)[14](ThisPtr, unit, count, (byte)(extend ? 1 : 0), &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }

        public static unsafe void TypeText(IObjectReference _obj, string value)
        {
            var ThisPtr = _obj.ThisPtr;

            MarshalString.Pinnable __value = new(value);
            fixed(void* ___value = __value)
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, int>**)ThisPtr)[15](ThisPtr, MarshalString.GetAbi(ref __value)));
                global::System.GC.KeepAlive(_obj);
            }
        }
        public static unsafe global::Microsoft.UI.Text.SelectionOptions get_Options(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::Microsoft.UI.Text.SelectionOptions __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::Microsoft.UI.Text.SelectionOptions*, int>**)ThisPtr)[6](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }
        public static unsafe void set_Options(IObjectReference _obj, global::Microsoft.UI.Text.SelectionOptions value)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::Microsoft.UI.Text.SelectionOptions, int>**)ThisPtr)[7](ThisPtr, value));
            global::System.GC.KeepAlive(_obj);
        }

        public static unsafe global::Microsoft.UI.Text.SelectionType get_Type(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::Microsoft.UI.Text.SelectionType __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::Microsoft.UI.Text.SelectionType*, int>**)ThisPtr)[8](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0xB1, 0x6C, 0x5E, 0x8F, 0x4, 0x2B, 0x9F, 0x58, 0xBD, 0x24, 0x54, 0xE5, 0xCD, 0x8D, 0xD3, 0x99 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

        public static global::System.IntPtr AbiToProjectionVftablePtr => ITextSelection.AbiToProjectionVftablePtr;

    }
    [DynamicInterfaceCastableImplementation]
    [Guid("8F5E6CB1-2B04-589F-BD24-54E5CD8DD399")]
    internal unsafe interface ITextSelection : global::Microsoft.UI.Text.ITextSelection
    {

        public static readonly IntPtr AbiToProjectionVftablePtr;
        static unsafe ITextSelection()
        {
            AbiToProjectionVftablePtr = ComWrappersSupport.AllocateVtableMemory(typeof(ITextSelection), sizeof(IInspectable.Vftbl) + sizeof(IntPtr) * 10);
            *(IInspectable.Vftbl*)AbiToProjectionVftablePtr = IInspectable.Vftbl.AbiToProjectionVftable;
            ((delegate* unmanaged[Stdcall]<IntPtr, global::Microsoft.UI.Text.SelectionOptions*, int>*)AbiToProjectionVftablePtr)[6] = &Do_Abi_get_Options_0;
            ((delegate* unmanaged[Stdcall]<IntPtr, global::Microsoft.UI.Text.SelectionOptions, int>*)AbiToProjectionVftablePtr)[7] = &Do_Abi_put_Options_1;
            ((delegate* unmanaged[Stdcall]<IntPtr, global::Microsoft.UI.Text.SelectionType*, int>*)AbiToProjectionVftablePtr)[8] = &Do_Abi_get_Type_2;
            ((delegate* unmanaged[Stdcall]<IntPtr, global::Microsoft.UI.Text.TextRangeUnit, byte, int*, int>*)AbiToProjectionVftablePtr)[9] = &Do_Abi_EndKey_3;
            ((delegate* unmanaged[Stdcall]<IntPtr, global::Microsoft.UI.Text.TextRangeUnit, byte, int*, int>*)AbiToProjectionVftablePtr)[10] = &Do_Abi_HomeKey_4;
            ((delegate* unmanaged[Stdcall]<IntPtr, global::Microsoft.UI.Text.TextRangeUnit, int, byte, int*, int>*)AbiToProjectionVftablePtr)[11] = &Do_Abi_MoveDown_5;
            ((delegate* unmanaged[Stdcall]<IntPtr, global::Microsoft.UI.Text.TextRangeUnit, int, byte, int*, int>*)AbiToProjectionVftablePtr)[12] = &Do_Abi_MoveLeft_6;
            ((delegate* unmanaged[Stdcall]<IntPtr, global::Microsoft.UI.Text.TextRangeUnit, int, byte, int*, int>*)AbiToProjectionVftablePtr)[13] = &Do_Abi_MoveRight_7;
            ((delegate* unmanaged[Stdcall]<IntPtr, global::Microsoft.UI.Text.TextRangeUnit, int, byte, int*, int>*)AbiToProjectionVftablePtr)[14] = &Do_Abi_MoveUp_8;
            ((delegate* unmanaged[Stdcall]<IntPtr, IntPtr, int>*)AbiToProjectionVftablePtr)[15] = &Do_Abi_TypeText_9;
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvStdcall) })]
        private static unsafe int Do_Abi_EndKey_3(IntPtr thisPtr, global::Microsoft.UI.Text.TextRangeUnit unit, byte extend, int* result)
        {

            int __result = default;

            *result = default;

            try
            {
                __result = global::WinRT.ComWrappersSupport.FindObject<global::Microsoft.UI.Text.ITextSelection>(thisPtr).EndKey(unit, extend != 0);
                *result = __result;

            }
            catch (Exception __exception__)
            {
                global::WinRT.ExceptionHelpers.SetErrorInfo(__exception__);
                return global::WinRT.ExceptionHelpers.GetHRForException(__exception__);
            }
            return 0;
        }
        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvStdcall) })]
        private static unsafe int Do_Abi_HomeKey_4(IntPtr thisPtr, global::Microsoft.UI.Text.TextRangeUnit unit, byte extend, int* result)
        {

            int __result = default;

            *result = default;

            try
            {
                __result = global::WinRT.ComWrappersSupport.FindObject<global::Microsoft.UI.Text.ITextSelection>(thisPtr).HomeKey(unit, extend != 0);
                *result = __result;

            }
            catch (Exception __exception__)
            {
                global::WinRT.ExceptionHelpers.SetErrorInfo(__exception__);
                return global::WinRT.ExceptionHelpers.GetHRForException(__exception__);
            }
            return 0;
        }
        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvStdcall) })]
        private static unsafe int Do_Abi_MoveDown_5(IntPtr thisPtr, global::Microsoft.UI.Text.TextRangeUnit unit, int count, byte extend, int* result)
        {

            int __result = default;

            *result = default;

            try
            {
                __result = global::WinRT.ComWrappersSupport.FindObject<global::Microsoft.UI.Text.ITextSelection>(thisPtr).MoveDown(unit, count, extend != 0);
                *result = __result;

            }
            catch (Exception __exception__)
            {
                global::WinRT.ExceptionHelpers.SetErrorInfo(__exception__);
                return global::WinRT.ExceptionHelpers.GetHRForException(__exception__);
            }
            return 0;
        }
        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvStdcall) })]
        private static unsafe int Do_Abi_MoveLeft_6(IntPtr thisPtr, global::Microsoft.UI.Text.TextRangeUnit unit, int count, byte extend, int* result)
        {

            int __result = default;

            *result = default;

            try
            {
                __result = global::WinRT.ComWrappersSupport.FindObject<global::Microsoft.UI.Text.ITextSelection>(thisPtr).MoveLeft(unit, count, extend != 0);
                *result = __result;

            }
            catch (Exception __exception__)
            {
                global::WinRT.ExceptionHelpers.SetErrorInfo(__exception__);
                return global::WinRT.ExceptionHelpers.GetHRForException(__exception__);
            }
            return 0;
        }
        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvStdcall) })]
        private static unsafe int Do_Abi_MoveRight_7(IntPtr thisPtr, global::Microsoft.UI.Text.TextRangeUnit unit, int count, byte extend, int* result)
        {

            int __result = default;

            *result = default;

            try
            {
                __result = global::WinRT.ComWrappersSupport.FindObject<global::Microsoft.UI.Text.ITextSelection>(thisPtr).MoveRight(unit, count, extend != 0);
                *result = __result;

            }
            catch (Exception __exception__)
            {
                global::WinRT.ExceptionHelpers.SetErrorInfo(__exception__);
                return global::WinRT.ExceptionHelpers.GetHRForException(__exception__);
            }
            return 0;
        }
        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvStdcall) })]
        private static unsafe int Do_Abi_MoveUp_8(IntPtr thisPtr, global::Microsoft.UI.Text.TextRangeUnit unit, int count, byte extend, int* result)
        {

            int __result = default;

            *result = default;

            try
            {
                __result = global::WinRT.ComWrappersSupport.FindObject<global::Microsoft.UI.Text.ITextSelection>(thisPtr).MoveUp(unit, count, extend != 0);
                *result = __result;

            }
            catch (Exception __exception__)
            {
                global::WinRT.ExceptionHelpers.SetErrorInfo(__exception__);
                return global::WinRT.ExceptionHelpers.GetHRForException(__exception__);
            }
            return 0;
        }
        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvStdcall) })]
        private static unsafe int Do_Abi_TypeText_9(IntPtr thisPtr, IntPtr value)
        {



            try
            {
                global::WinRT.ComWrappersSupport.FindObject<global::Microsoft.UI.Text.ITextSelection>(thisPtr).TypeText(MarshalString.FromAbi(value));

            }
            catch (Exception __exception__)
            {
                global::WinRT.ExceptionHelpers.SetErrorInfo(__exception__);
                return global::WinRT.ExceptionHelpers.GetHRForException(__exception__);
            }
            return 0;
        }
        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvStdcall) })]
        private static unsafe int Do_Abi_put_Options_1(IntPtr thisPtr, global::Microsoft.UI.Text.SelectionOptions value)
        {



            try
            {
                global::WinRT.ComWrappersSupport.FindObject<global::Microsoft.UI.Text.ITextSelection>(thisPtr).Options = value;

            }
            catch (Exception __exception__)
            {
                global::WinRT.ExceptionHelpers.SetErrorInfo(__exception__);
                return global::WinRT.ExceptionHelpers.GetHRForException(__exception__);
            }
            return 0;
        }
        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvStdcall) })]
        private static unsafe int Do_Abi_get_Options_0(IntPtr thisPtr, global::Microsoft.UI.Text.SelectionOptions* value)
        {

            global::Microsoft.UI.Text.SelectionOptions __value = default;

            *value = default;

            try
            {
                __value = global::WinRT.ComWrappersSupport.FindObject<global::Microsoft.UI.Text.ITextSelection>(thisPtr).Options;
                *value = __value;

            }
            catch (Exception __exception__)
            {
                global::WinRT.ExceptionHelpers.SetErrorInfo(__exception__);
                return global::WinRT.ExceptionHelpers.GetHRForException(__exception__);
            }
            return 0;
        }
        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvStdcall) })]
        private static unsafe int Do_Abi_get_Type_2(IntPtr thisPtr, global::Microsoft.UI.Text.SelectionType* value)
        {

            global::Microsoft.UI.Text.SelectionType __value = default;

            *value = default;

            try
            {
                __value = global::WinRT.ComWrappersSupport.FindObject<global::Microsoft.UI.Text.ITextSelection>(thisPtr).Type;
                *value = __value;

            }
            catch (Exception __exception__)
            {
                global::WinRT.ExceptionHelpers.SetErrorInfo(__exception__);
                return global::WinRT.ExceptionHelpers.GetHRForException(__exception__);
            }
            return 0;
        }

        unsafe int global::Microsoft.UI.Text.ITextSelection.EndKey(global::Microsoft.UI.Text.TextRangeUnit unit, bool extend)
        {
            var _obj = ((IObjectReference)((IWinRTObject)this).GetObjectReferenceForType(typeof(global::Microsoft.UI.Text.ITextSelection).TypeHandle));
            return global::ABI.Microsoft.UI.Text.ITextSelectionMethods.EndKey(_obj, unit, extend);
        }

        unsafe int global::Microsoft.UI.Text.ITextSelection.HomeKey(global::Microsoft.UI.Text.TextRangeUnit unit, bool extend)
        {
            var _obj = ((IObjectReference)((IWinRTObject)this).GetObjectReferenceForType(typeof(global::Microsoft.UI.Text.ITextSelection).TypeHandle));
            return global::ABI.Microsoft.UI.Text.ITextSelectionMethods.HomeKey(_obj, unit, extend);
        }

        unsafe int global::Microsoft.UI.Text.ITextSelection.MoveDown(global::Microsoft.UI.Text.TextRangeUnit unit, int count, bool extend)
        {
            var _obj = ((IObjectReference)((IWinRTObject)this).GetObjectReferenceForType(typeof(global::Microsoft.UI.Text.ITextSelection).TypeHandle));
            return global::ABI.Microsoft.UI.Text.ITextSelectionMethods.MoveDown(_obj, unit, count, extend);
        }

        unsafe int global::Microsoft.UI.Text.ITextSelection.MoveLeft(global::Microsoft.UI.Text.TextRangeUnit unit, int count, bool extend)
        {
            var _obj = ((IObjectReference)((IWinRTObject)this).GetObjectReferenceForType(typeof(global::Microsoft.UI.Text.ITextSelection).TypeHandle));
            return global::ABI.Microsoft.UI.Text.ITextSelectionMethods.MoveLeft(_obj, unit, count, extend);
        }

        unsafe int global::Microsoft.UI.Text.ITextSelection.MoveRight(global::Microsoft.UI.Text.TextRangeUnit unit, int count, bool extend)
        {
            var _obj = ((IObjectReference)((IWinRTObject)this).GetObjectReferenceForType(typeof(global::Microsoft.UI.Text.ITextSelection).TypeHandle));
            return global::ABI.Microsoft.UI.Text.ITextSelectionMethods.MoveRight(_obj, unit, count, extend);
        }

        unsafe int global::Microsoft.UI.Text.ITextSelection.MoveUp(global::Microsoft.UI.Text.TextRangeUnit unit, int count, bool extend)
        {
            var _obj = ((IObjectReference)((IWinRTObject)this).GetObjectReferenceForType(typeof(global::Microsoft.UI.Text.ITextSelection).TypeHandle));
            return global::ABI.Microsoft.UI.Text.ITextSelectionMethods.MoveUp(_obj, unit, count, extend);
        }

        unsafe void global::Microsoft.UI.Text.ITextSelection.TypeText(string value)
        {
            var _obj = ((IObjectReference)((IWinRTObject)this).GetObjectReferenceForType(typeof(global::Microsoft.UI.Text.ITextSelection).TypeHandle));
            global::ABI.Microsoft.UI.Text.ITextSelectionMethods.TypeText(_obj, value);
        }

        unsafe global::Microsoft.UI.Text.SelectionOptions global::Microsoft.UI.Text.ITextSelection.Options
        {
            get
            {
                var _obj = ((IObjectReference)((IWinRTObject)this).GetObjectReferenceForType(typeof(global::Microsoft.UI.Text.ITextSelection).TypeHandle));
                return global::ABI.Microsoft.UI.Text.ITextSelectionMethods.get_Options(_obj);
            }
            set
            {
                var _obj = ((IObjectReference)((IWinRTObject)this).GetObjectReferenceForType(typeof(global::Microsoft.UI.Text.ITextSelection).TypeHandle));
                global::ABI.Microsoft.UI.Text.ITextSelectionMethods.set_Options(_obj, value);
            }
        }

        unsafe global::Microsoft.UI.Text.SelectionType global::Microsoft.UI.Text.ITextSelection.Type
        {
            get
            {
                var _obj = ((IObjectReference)((IWinRTObject)this).GetObjectReferenceForType(typeof(global::Microsoft.UI.Text.ITextSelection).TypeHandle));
                return global::ABI.Microsoft.UI.Text.ITextSelectionMethods.get_Type(_obj);
            }
        }

        bool global::Microsoft.UI.Text.ITextRange.CanPaste(int format) => ((global::Microsoft.UI.Text.ITextRange)(IWinRTObject)this).CanPaste(format);

        void global::Microsoft.UI.Text.ITextRange.ChangeCase(global::Microsoft.UI.Text.LetterCase value) => ((global::Microsoft.UI.Text.ITextRange)(IWinRTObject)this).ChangeCase(value);

        void global::Microsoft.UI.Text.ITextRange.Collapse(bool value) => ((global::Microsoft.UI.Text.ITextRange)(IWinRTObject)this).Collapse(value);

        void global::Microsoft.UI.Text.ITextRange.Copy() => ((global::Microsoft.UI.Text.ITextRange)(IWinRTObject)this).Copy();

        void global::Microsoft.UI.Text.ITextRange.Cut() => ((global::Microsoft.UI.Text.ITextRange)(IWinRTObject)this).Cut();

        int global::Microsoft.UI.Text.ITextRange.Delete(global::Microsoft.UI.Text.TextRangeUnit unit, int count) => ((global::Microsoft.UI.Text.ITextRange)(IWinRTObject)this).Delete(unit, count);

        int global::Microsoft.UI.Text.ITextRange.EndOf(global::Microsoft.UI.Text.TextRangeUnit unit, bool extend) => ((global::Microsoft.UI.Text.ITextRange)(IWinRTObject)this).EndOf(unit, extend);

        int global::Microsoft.UI.Text.ITextRange.Expand(global::Microsoft.UI.Text.TextRangeUnit unit) => ((global::Microsoft.UI.Text.ITextRange)(IWinRTObject)this).Expand(unit);

        int global::Microsoft.UI.Text.ITextRange.FindText(string value, int scanLength, global::Microsoft.UI.Text.FindOptions options) => ((global::Microsoft.UI.Text.ITextRange)(IWinRTObject)this).FindText(value, scanLength, options);

        void global::Microsoft.UI.Text.ITextRange.GetCharacterUtf32(out uint value, int offset) => ((global::Microsoft.UI.Text.ITextRange)(IWinRTObject)this).GetCharacterUtf32(out value, offset);

        global::Microsoft.UI.Text.ITextRange global::Microsoft.UI.Text.ITextRange.GetClone() => ((global::Microsoft.UI.Text.ITextRange)(IWinRTObject)this).GetClone();

        int global::Microsoft.UI.Text.ITextRange.GetIndex(global::Microsoft.UI.Text.TextRangeUnit unit) => ((global::Microsoft.UI.Text.ITextRange)(IWinRTObject)this).GetIndex(unit);

        void global::Microsoft.UI.Text.ITextRange.GetPoint(global::Microsoft.UI.Text.HorizontalCharacterAlignment horizontalAlign, global::Microsoft.UI.Text.VerticalCharacterAlignment verticalAlign, global::Microsoft.UI.Text.PointOptions options, out global::Windows.Foundation.Point point) => ((global::Microsoft.UI.Text.ITextRange)(IWinRTObject)this).GetPoint(horizontalAlign, verticalAlign, options, out point);

        void global::Microsoft.UI.Text.ITextRange.GetRect(global::Microsoft.UI.Text.PointOptions options, out global::Windows.Foundation.Rect rect, out int hit) => ((global::Microsoft.UI.Text.ITextRange)(IWinRTObject)this).GetRect(options, out rect, out hit);

        void global::Microsoft.UI.Text.ITextRange.GetText(global::Microsoft.UI.Text.TextGetOptions options, out string value) => ((global::Microsoft.UI.Text.ITextRange)(IWinRTObject)this).GetText(options, out value);

        void global::Microsoft.UI.Text.ITextRange.GetTextViaStream(global::Microsoft.UI.Text.TextGetOptions options, global::Windows.Storage.Streams.IRandomAccessStream value) => ((global::Microsoft.UI.Text.ITextRange)(IWinRTObject)this).GetTextViaStream(options, value);

        bool global::Microsoft.UI.Text.ITextRange.InRange(global::Microsoft.UI.Text.ITextRange range) => ((global::Microsoft.UI.Text.ITextRange)(IWinRTObject)this).InRange(range);

        void global::Microsoft.UI.Text.ITextRange.InsertImage(int width, int height, int ascent, global::Microsoft.UI.Text.VerticalCharacterAlignment verticalAlign, string alternateText, global::Windows.Storage.Streams.IRandomAccessStream value) => ((global::Microsoft.UI.Text.ITextRange)(IWinRTObject)this).InsertImage(width, height, ascent, verticalAlign, alternateText, value);

        bool global::Microsoft.UI.Text.ITextRange.InStory(global::Microsoft.UI.Text.ITextRange range) => ((global::Microsoft.UI.Text.ITextRange)(IWinRTObject)this).InStory(range);

        bool global::Microsoft.UI.Text.ITextRange.IsEqual(global::Microsoft.UI.Text.ITextRange range) => ((global::Microsoft.UI.Text.ITextRange)(IWinRTObject)this).IsEqual(range);

        int global::Microsoft.UI.Text.ITextRange.Move(global::Microsoft.UI.Text.TextRangeUnit unit, int count) => ((global::Microsoft.UI.Text.ITextRange)(IWinRTObject)this).Move(unit, count);

        int global::Microsoft.UI.Text.ITextRange.MoveEnd(global::Microsoft.UI.Text.TextRangeUnit unit, int count) => ((global::Microsoft.UI.Text.ITextRange)(IWinRTObject)this).MoveEnd(unit, count);

        int global::Microsoft.UI.Text.ITextRange.MoveStart(global::Microsoft.UI.Text.TextRangeUnit unit, int count) => ((global::Microsoft.UI.Text.ITextRange)(IWinRTObject)this).MoveStart(unit, count);

        void global::Microsoft.UI.Text.ITextRange.Paste(int format) => ((global::Microsoft.UI.Text.ITextRange)(IWinRTObject)this).Paste(format);

        void global::Microsoft.UI.Text.ITextRange.ScrollIntoView(global::Microsoft.UI.Text.PointOptions value) => ((global::Microsoft.UI.Text.ITextRange)(IWinRTObject)this).ScrollIntoView(value);

        void global::Microsoft.UI.Text.ITextRange.MatchSelection() => ((global::Microsoft.UI.Text.ITextRange)(IWinRTObject)this).MatchSelection();

        void global::Microsoft.UI.Text.ITextRange.SetIndex(global::Microsoft.UI.Text.TextRangeUnit unit, int index, bool extend) => ((global::Microsoft.UI.Text.ITextRange)(IWinRTObject)this).SetIndex(unit, index, extend);

        void global::Microsoft.UI.Text.ITextRange.SetPoint(global::Windows.Foundation.Point point, global::Microsoft.UI.Text.PointOptions options, bool extend) => ((global::Microsoft.UI.Text.ITextRange)(IWinRTObject)this).SetPoint(point, options, extend);

        void global::Microsoft.UI.Text.ITextRange.SetRange(int startPosition, int endPosition) => ((global::Microsoft.UI.Text.ITextRange)(IWinRTObject)this).SetRange(startPosition, endPosition);

        void global::Microsoft.UI.Text.ITextRange.SetText(global::Microsoft.UI.Text.TextSetOptions options, string value) => ((global::Microsoft.UI.Text.ITextRange)(IWinRTObject)this).SetText(options, value);

        void global::Microsoft.UI.Text.ITextRange.SetTextViaStream(global::Microsoft.UI.Text.TextSetOptions options, global::Windows.Storage.Streams.IRandomAccessStream value) => ((global::Microsoft.UI.Text.ITextRange)(IWinRTObject)this).SetTextViaStream(options, value);

        int global::Microsoft.UI.Text.ITextRange.StartOf(global::Microsoft.UI.Text.TextRangeUnit unit, bool extend) => ((global::Microsoft.UI.Text.ITextRange)(IWinRTObject)this).StartOf(unit, extend);

        char global::Microsoft.UI.Text.ITextRange.Character
        {
            get => ((global::Microsoft.UI.Text.ITextRange)(IWinRTObject)this).Character;
            set => ((global::Microsoft.UI.Text.ITextRange)(IWinRTObject)this).Character = value;
        }

        global::Microsoft.UI.Text.ITextCharacterFormat global::Microsoft.UI.Text.ITextRange.CharacterFormat
        {
            get => ((global::Microsoft.UI.Text.ITextRange)(IWinRTObject)this).CharacterFormat;
            set => ((global::Microsoft.UI.Text.ITextRange)(IWinRTObject)this).CharacterFormat = value;
        }

        int global::Microsoft.UI.Text.ITextRange.EndPosition
        {
            get => ((global::Microsoft.UI.Text.ITextRange)(IWinRTObject)this).EndPosition;
            set => ((global::Microsoft.UI.Text.ITextRange)(IWinRTObject)this).EndPosition = value;
        }

        global::Microsoft.UI.Text.ITextRange global::Microsoft.UI.Text.ITextRange.FormattedText
        {
            get => ((global::Microsoft.UI.Text.ITextRange)(IWinRTObject)this).FormattedText;
            set => ((global::Microsoft.UI.Text.ITextRange)(IWinRTObject)this).FormattedText = value;
        }

        global::Microsoft.UI.Text.RangeGravity global::Microsoft.UI.Text.ITextRange.Gravity
        {
            get => ((global::Microsoft.UI.Text.ITextRange)(IWinRTObject)this).Gravity;
            set => ((global::Microsoft.UI.Text.ITextRange)(IWinRTObject)this).Gravity = value;
        }

        int global::Microsoft.UI.Text.ITextRange.Length => ((global::Microsoft.UI.Text.ITextRange)(IWinRTObject)this).Length;

        string global::Microsoft.UI.Text.ITextRange.Link
        {
            get => ((global::Microsoft.UI.Text.ITextRange)(IWinRTObject)this).Link;
            set => ((global::Microsoft.UI.Text.ITextRange)(IWinRTObject)this).Link = value;
        }

        global::Microsoft.UI.Text.ITextParagraphFormat global::Microsoft.UI.Text.ITextRange.ParagraphFormat
        {
            get => ((global::Microsoft.UI.Text.ITextRange)(IWinRTObject)this).ParagraphFormat;
            set => ((global::Microsoft.UI.Text.ITextRange)(IWinRTObject)this).ParagraphFormat = value;
        }

        int global::Microsoft.UI.Text.ITextRange.StartPosition
        {
            get => ((global::Microsoft.UI.Text.ITextRange)(IWinRTObject)this).StartPosition;
            set => ((global::Microsoft.UI.Text.ITextRange)(IWinRTObject)this).StartPosition = value;
        }

        int global::Microsoft.UI.Text.ITextRange.StoryLength => ((global::Microsoft.UI.Text.ITextRange)(IWinRTObject)this).StoryLength;

        string global::Microsoft.UI.Text.ITextRange.Text
        {
            get => ((global::Microsoft.UI.Text.ITextRange)(IWinRTObject)this).Text;
            set => ((global::Microsoft.UI.Text.ITextRange)(IWinRTObject)this).Text = value;
        }
    }

    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    public struct RichEditTextDocument
    {

        public static IObjectReference CreateMarshaler(global::Microsoft.UI.Text.RichEditTextDocument obj) => obj is null ? null : MarshalInspectable<global::Microsoft.UI.Text.RichEditTextDocument>.CreateMarshaler<IUnknownVftbl>(obj, global::ABI.Microsoft.UI.Text.ITextDocumentMethods.IID);
        public static ObjectReferenceValue CreateMarshaler2(global::Microsoft.UI.Text.RichEditTextDocument obj) => MarshalInspectable<object>.CreateMarshaler2(obj, global::ABI.Microsoft.UI.Text.ITextDocumentMethods.IID);
        public static IntPtr GetAbi(IObjectReference value) => value is null ? IntPtr.Zero : MarshalInterfaceHelper<object>.GetAbi(value);
        public static global::Microsoft.UI.Text.RichEditTextDocument FromAbi(IntPtr thisPtr) => global::Microsoft.UI.Text.RichEditTextDocument.FromAbi(thisPtr);
        public static IntPtr FromManaged(global::Microsoft.UI.Text.RichEditTextDocument obj) => obj is null ? IntPtr.Zero : CreateMarshaler2(obj).Detach();
        public static unsafe MarshalInterfaceHelper<global::Microsoft.UI.Text.RichEditTextDocument>.MarshalerArray CreateMarshalerArray(global::Microsoft.UI.Text.RichEditTextDocument[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Text.RichEditTextDocument>.CreateMarshalerArray2(array, (o) => CreateMarshaler2(o));
        public static (int length, IntPtr data) GetAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Text.RichEditTextDocument>.GetAbiArray(box);
        public static unsafe global::Microsoft.UI.Text.RichEditTextDocument[] FromAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Text.RichEditTextDocument>.FromAbiArray(box, FromAbi);
        public static void CopyAbiArray(global::Microsoft.UI.Text.RichEditTextDocument[] array, object box) => MarshalInterfaceHelper<global::Microsoft.UI.Text.RichEditTextDocument>.CopyAbiArray(array, box, FromAbi);
        public static (int length, IntPtr data) FromManagedArray(global::Microsoft.UI.Text.RichEditTextDocument[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Text.RichEditTextDocument>.FromManagedArray(array, (o) => FromManaged(o));
        public static void DisposeMarshaler(IObjectReference value) => MarshalInspectable<object>.DisposeMarshaler(value);
        public static void DisposeMarshalerArray(MarshalInterfaceHelper<global::Microsoft.UI.Text.RichEditTextDocument>.MarshalerArray array) => MarshalInterfaceHelper<global::Microsoft.UI.Text.RichEditTextDocument>.DisposeMarshalerArray(array);
        public static void DisposeAbi(IntPtr abi) => MarshalInspectable<object>.DisposeAbi(abi);
        public static unsafe void DisposeAbiArray(object box) => MarshalInspectable<object>.DisposeAbiArray(box);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    internal sealed class RichEditTextDocumentRcwFactoryAttribute : global::WinRT.WinRTImplementationTypeRcwFactoryAttribute
    {
        public override object CreateInstance(global::WinRT.IInspectable inspectable)
            => new global::Microsoft.UI.Text.RichEditTextDocument(inspectable.ObjRef);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    public struct RichEditTextRange
    {

        public static IObjectReference CreateMarshaler(global::Microsoft.UI.Text.RichEditTextRange obj) => obj is null ? null : MarshalInterface<global::Microsoft.UI.Text.ITextRange>.CreateMarshaler(obj);
        public static ObjectReferenceValue CreateMarshaler2(global::Microsoft.UI.Text.RichEditTextRange obj) => MarshalInterface<global::Microsoft.UI.Text.ITextRange>.CreateMarshaler2(obj, global::ABI.Microsoft.UI.Text.ITextRangeMethods.IID);
        public static IntPtr GetAbi(IObjectReference value) => value is null ? IntPtr.Zero : MarshalInterfaceHelper<object>.GetAbi(value);
        public static global::Microsoft.UI.Text.RichEditTextRange FromAbi(IntPtr thisPtr) => global::Microsoft.UI.Text.RichEditTextRange.FromAbi(thisPtr);
        public static IntPtr FromManaged(global::Microsoft.UI.Text.RichEditTextRange obj) => obj is null ? IntPtr.Zero : CreateMarshaler2(obj).Detach();
        public static unsafe MarshalInterfaceHelper<global::Microsoft.UI.Text.RichEditTextRange>.MarshalerArray CreateMarshalerArray(global::Microsoft.UI.Text.RichEditTextRange[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Text.RichEditTextRange>.CreateMarshalerArray2(array, (o) => CreateMarshaler2(o));
        public static (int length, IntPtr data) GetAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Text.RichEditTextRange>.GetAbiArray(box);
        public static unsafe global::Microsoft.UI.Text.RichEditTextRange[] FromAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Text.RichEditTextRange>.FromAbiArray(box, FromAbi);
        public static void CopyAbiArray(global::Microsoft.UI.Text.RichEditTextRange[] array, object box) => MarshalInterfaceHelper<global::Microsoft.UI.Text.RichEditTextRange>.CopyAbiArray(array, box, FromAbi);
        public static (int length, IntPtr data) FromManagedArray(global::Microsoft.UI.Text.RichEditTextRange[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Text.RichEditTextRange>.FromManagedArray(array, (o) => FromManaged(o));
        public static void DisposeMarshaler(IObjectReference value) => MarshalInspectable<object>.DisposeMarshaler(value);
        public static void DisposeMarshalerArray(MarshalInterfaceHelper<global::Microsoft.UI.Text.RichEditTextRange>.MarshalerArray array) => MarshalInterfaceHelper<global::Microsoft.UI.Text.RichEditTextRange>.DisposeMarshalerArray(array);
        public static void DisposeAbi(IntPtr abi) => MarshalInspectable<object>.DisposeAbi(abi);
        public static unsafe void DisposeAbiArray(object box) => MarshalInspectable<object>.DisposeAbiArray(box);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    internal sealed class RichEditTextRangeRcwFactoryAttribute : global::WinRT.WinRTImplementationTypeRcwFactoryAttribute
    {
        public override object CreateInstance(global::WinRT.IInspectable inspectable)
            => new global::Microsoft.UI.Text.RichEditTextRange(inspectable.ObjRef);
    }
}
#pragma warning restore CA1416
