//------------------------------------------------------------------------------
// <auto-generated>
//     This file was generated by cswinrt.exe version 2.2.0.241111.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Diagnostics;
using System.Diagnostics.CodeAnalysis;
using System.Linq.Expressions;
using System.Reflection;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;
using WinRT;
using WinRT.Interop;


#pragma warning disable 0169 // warning CS0169: The field '...' is never used
#pragma warning disable 0649 // warning CS0169: Field '...' is never assigned to
#pragma warning disable CA2207, CA1063, CA1033, CA1001, CA2213

namespace Microsoft.UI.Xaml.Automation.Provider
{
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")][Guid("546AB18E-986D-5DEB-8F2A-2D9303A43006")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Automation.Provider.IAnnotationProvider))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    public interface IAnnotationProvider
    {
        int AnnotationTypeId { get; }
        string AnnotationTypeName { get; }
        string Author { get; }
        string DateTime { get; }
        IRawElementProviderSimple Target { get; }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")][Guid("CAD51322-FAA9-5A2B-90F0-B762C46178B3")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Automation.Provider.ICustomNavigationProvider))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    public interface ICustomNavigationProvider
    {
        object NavigateCustom(global::Microsoft.UI.Xaml.Automation.Peers.AutomationNavigationDirection direction);
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")][Guid("9882B971-70EA-5C6D-A818-7A7AB68C6F3B")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Automation.Provider.IDockProvider))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    public interface IDockProvider
    {
        void SetDockPosition(global::Microsoft.UI.Xaml.Automation.DockPosition dockPosition);
        global::Microsoft.UI.Xaml.Automation.DockPosition DockPosition { get; }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")][Guid("C60BB643-A356-5132-A258-FFBA6C7480F2")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Automation.Provider.IDragProvider))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    public interface IDragProvider
    {
        IRawElementProviderSimple[] GetGrabbedItems();
        string DropEffect { get; }
        string[] DropEffects { get; }
        bool IsGrabbed { get; }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")][Guid("9B2A9F3D-BBB1-510D-99E8-0E0AE14A6E3B")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Automation.Provider.IDropTargetProvider))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    public interface IDropTargetProvider
    {
        string DropEffect { get; }
        string[] DropEffects { get; }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")][Guid("6CEF349C-B181-5D0B-B297-C3B0166120C3")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Automation.Provider.IExpandCollapseProvider))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    public interface IExpandCollapseProvider
    {
        void Collapse();
        void Expand();
        global::Microsoft.UI.Xaml.Automation.ExpandCollapseState ExpandCollapseState { get; }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")][Guid("D2557A0E-6909-5170-A680-60728DF339B4")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Automation.Provider.IGridItemProvider))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    public interface IGridItemProvider
    {
        int Column { get; }
        int ColumnSpan { get; }
        IRawElementProviderSimple ContainingGrid { get; }
        int Row { get; }
        int RowSpan { get; }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")][Guid("50992D5E-D225-56E9-A25A-78C372E81955")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Automation.Provider.IGridProvider))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    public interface IGridProvider
    {
        IRawElementProviderSimple GetItem(int row, int column);
        int ColumnCount { get; }
        int RowCount { get; }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")][Guid("F90BC239-ADE2-55C9-A838-A3B0579763C5")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Automation.Provider.IIRawElementProviderSimple))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    internal interface IIRawElementProviderSimple
    {
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")][Guid("02481105-3378-544D-B4E1-A1B368AFBC02")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Automation.Provider.IInvokeProvider))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    public interface IInvokeProvider
    {
        void Invoke();
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")][Guid("AD297363-694E-5885-997D-A2D6DFF415A7")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Automation.Provider.IItemContainerProvider))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    public interface IItemContainerProvider
    {
        IRawElementProviderSimple FindItemByProperty(IRawElementProviderSimple startAfter, global::Microsoft.UI.Xaml.Automation.AutomationProperty automationProperty, object value);
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")][Guid("60BE5484-3D8F-51FD-BEAB-423422EE1E03")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Automation.Provider.IMultipleViewProvider))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    public interface IMultipleViewProvider
    {
        int[] GetSupportedViews();
        string GetViewName(int viewId);
        void SetCurrentView(int viewId);
        int CurrentView { get; }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")][Guid("92953ED0-4BD8-5624-8E3D-78D45FDE9CF2")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Automation.Provider.IObjectModelProvider))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    public interface IObjectModelProvider
    {
        object GetUnderlyingObjectModel();
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")][Guid("729AE414-1E8F-5020-82BB-BB574D145FD8")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Automation.Provider.IRangeValueProvider))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    public interface IRangeValueProvider
    {
        void SetValue(double value);
        bool IsReadOnly { get; }
        double LargeChange { get; }
        double Maximum { get; }
        double Minimum { get; }
        double SmallChange { get; }
        double Value { get; }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")]
    [global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Automation.Provider.IRawElementProviderSimple))]
    [global::ABI.Microsoft.UI.Xaml.Automation.Provider.IRawElementProviderSimpleRcwFactory]
    [global::WinRT.ProjectedRuntimeClass(typeof(IIRawElementProviderSimple))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    public sealed class IRawElementProviderSimple : global::Microsoft.UI.Xaml.DependencyObject, global::System.Runtime.InteropServices.ICustomQueryInterface, IWinRTObject, IEquatable<IRawElementProviderSimple>
    {
        private IntPtr ThisPtr => _inner == null ? (((IWinRTObject)this).NativeObject).ThisPtr : _inner.ThisPtr;

        private readonly IObjectReference _inner = null;



        private IObjectReference _objRef_global__Microsoft_UI_Xaml_Automation_Provider_IIRawElementProviderSimple => _inner;


        public static new IRawElementProviderSimple FromAbi(IntPtr thisPtr)
        {
            if (thisPtr == IntPtr.Zero) return null;
            return MarshalInspectable<IRawElementProviderSimple>.FromAbi(thisPtr);
        }

        internal IRawElementProviderSimple(IObjectReference objRef)
            : base(global::WinRT.DerivedComposed.Instance)

        {
            _inner = objRef.As(global::ABI.Microsoft.UI.Xaml.Automation.Provider.IIRawElementProviderSimpleMethods.IID);

        }


        public static bool operator ==(IRawElementProviderSimple x, IRawElementProviderSimple y) => (x?.ThisPtr ?? IntPtr.Zero) == (y?.ThisPtr ?? IntPtr.Zero);
        public static bool operator !=(IRawElementProviderSimple x, IRawElementProviderSimple y) => !(x == y);
        public bool Equals(IRawElementProviderSimple other) => this == other;
        public override bool Equals(object obj) => obj is IRawElementProviderSimple that && this == that;
        public override int GetHashCode() => ThisPtr.GetHashCode();


        bool IWinRTObject.HasUnwrappableNativeObject => true;
        IObjectReference IWinRTObject.NativeObject => _inner;

        private struct InterfaceTag<I>{};


        protected override bool IsOverridableInterface(Guid iid) => base.IsOverridableInterface(iid);

        global::System.Runtime.InteropServices.CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(ref Guid iid, out IntPtr ppv)
        {
            ppv = IntPtr.Zero;
            if (IsOverridableInterface(iid) || global::WinRT.Interop.IID.IID_IInspectable == iid)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
            }

            if (((IWinRTObject)this).NativeObject.TryAs(iid, out ppv) >= 0)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.Handled;
            }

            return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
        }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")][Guid("8A6FB8EB-E5F1-58EB-8E72-8B95F236FC47")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Automation.Provider.IScrollItemProvider))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    public interface IScrollItemProvider
    {
        void ScrollIntoView();
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")][Guid("7E2E5AF3-FF50-5365-BCFE-EF424B2FD590")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Automation.Provider.IScrollProvider))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    public interface IScrollProvider
    {
        void Scroll(global::Microsoft.UI.Xaml.Automation.ScrollAmount horizontalAmount, global::Microsoft.UI.Xaml.Automation.ScrollAmount verticalAmount);
        void SetScrollPercent(double horizontalPercent, double verticalPercent);
        double HorizontalScrollPercent { get; }
        double HorizontalViewSize { get; }
        bool HorizontallyScrollable { get; }
        double VerticalScrollPercent { get; }
        double VerticalViewSize { get; }
        bool VerticallyScrollable { get; }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")][Guid("C9DFDD81-D4AC-5D31-BE7F-24FAB16060E4")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Automation.Provider.ISelectionItemProvider))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    public interface ISelectionItemProvider
    {
        void AddToSelection();
        void RemoveFromSelection();
        void Select();
        bool IsSelected { get; }
        IRawElementProviderSimple SelectionContainer { get; }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")][Guid("80D56D4E-0052-541F-9411-9D1778B3BFCA")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Automation.Provider.ISelectionProvider))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    public interface ISelectionProvider
    {
        IRawElementProviderSimple[] GetSelection();
        bool CanSelectMultiple { get; }
        bool IsSelectionRequired { get; }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")][Guid("51C1CE89-B21F-592C-8768-0ACCDEFD5738")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Automation.Provider.ISpreadsheetItemProvider))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    public interface ISpreadsheetItemProvider
    {
        IRawElementProviderSimple[] GetAnnotationObjects();
        global::Microsoft.UI.Xaml.Automation.AnnotationType[] GetAnnotationTypes();
        string Formula { get; }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")][Guid("1FF41BAC-D9E3-5E48-B5F8-9EAB0FB2D9D8")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Automation.Provider.ISpreadsheetProvider))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    public interface ISpreadsheetProvider
    {
        IRawElementProviderSimple GetItemByName(string name);
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")][Guid("D8895839-0048-54DE-9C1F-152DE6665E80")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Automation.Provider.IStylesProvider))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    public interface IStylesProvider
    {
        string ExtendedProperties { get; }
        global::Windows.UI.Color FillColor { get; }
        global::Windows.UI.Color FillPatternColor { get; }
        string FillPatternStyle { get; }
        string Shape { get; }
        int StyleId { get; }
        string StyleName { get; }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")][Guid("C5615613-936D-5289-A190-E82057E0FF5A")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Automation.Provider.ISynchronizedInputProvider))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    public interface ISynchronizedInputProvider
    {
        void Cancel();
        void StartListening(global::Microsoft.UI.Xaml.Automation.SynchronizedInputType inputType);
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")][Guid("6CE6F038-54D4-5553-A4AD-03CBCF358197")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Automation.Provider.ITableItemProvider))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    public interface ITableItemProvider
    {
        IRawElementProviderSimple[] GetColumnHeaderItems();
        IRawElementProviderSimple[] GetRowHeaderItems();
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")][Guid("9ABA6724-B22D-5DB8-8ABB-81F911F18AF2")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Automation.Provider.ITableProvider))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    public interface ITableProvider
    {
        IRawElementProviderSimple[] GetColumnHeaders();
        IRawElementProviderSimple[] GetRowHeaders();
        global::Microsoft.UI.Xaml.Automation.RowOrColumnMajor RowOrColumnMajor { get; }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")][Guid("7C72E55F-F75D-5522-AEB5-C1F82C32933B")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Automation.Provider.ITextChildProvider))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    public interface ITextChildProvider
    {
        IRawElementProviderSimple TextContainer { get; }
        ITextRangeProvider TextRange { get; }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")][Guid("7F09BBE8-BEA7-5DD3-BA6B-28DBB402FAD4")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Automation.Provider.ITextEditProvider))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    public interface ITextEditProvider : ITextProvider
    {
        ITextRangeProvider GetActiveComposition();
        ITextRangeProvider GetConversionTarget();
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")][Guid("37E7DCE6-FE7A-56A7-A47A-9462872C67EF")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Automation.Provider.ITextProvider))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    public interface ITextProvider
    {
        ITextRangeProvider[] GetSelection();
        ITextRangeProvider[] GetVisibleRanges();
        ITextRangeProvider RangeFromChild(IRawElementProviderSimple childElement);
        ITextRangeProvider RangeFromPoint(global::Windows.Foundation.Point screenLocation);
        ITextRangeProvider DocumentRange { get; }
        global::Microsoft.UI.Xaml.Automation.SupportedTextSelection SupportedTextSelection { get; }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")][Guid("6844F012-C7E6-5763-BA04-5B6DB910CD34")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Automation.Provider.ITextProvider2))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    public interface ITextProvider2 : ITextProvider
    {
        ITextRangeProvider RangeFromAnnotation(IRawElementProviderSimple annotationElement);
        ITextRangeProvider GetCaretRange(out bool isActive);
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")][Guid("84210361-6CE2-5084-BF3B-28AFA6E9851F")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Automation.Provider.ITextRangeProvider))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    public interface ITextRangeProvider
    {
        ITextRangeProvider Clone();
        bool Compare(ITextRangeProvider textRangeProvider);
        int CompareEndpoints(global::Microsoft.UI.Xaml.Automation.Text.TextPatternRangeEndpoint endpoint, ITextRangeProvider textRangeProvider, global::Microsoft.UI.Xaml.Automation.Text.TextPatternRangeEndpoint targetEndpoint);
        void ExpandToEnclosingUnit(global::Microsoft.UI.Xaml.Automation.Text.TextUnit unit);
        ITextRangeProvider FindAttribute(int attributeId, object value, bool backward);
        ITextRangeProvider FindText(string text, bool backward, bool ignoreCase);
        object GetAttributeValue(int attributeId);
        void GetBoundingRectangles(out double[] returnValue);
        IRawElementProviderSimple GetEnclosingElement();
        string GetText(int maxLength);
        int Move(global::Microsoft.UI.Xaml.Automation.Text.TextUnit unit, int count);
        int MoveEndpointByUnit(global::Microsoft.UI.Xaml.Automation.Text.TextPatternRangeEndpoint endpoint, global::Microsoft.UI.Xaml.Automation.Text.TextUnit unit, int count);
        void MoveEndpointByRange(global::Microsoft.UI.Xaml.Automation.Text.TextPatternRangeEndpoint endpoint, ITextRangeProvider textRangeProvider, global::Microsoft.UI.Xaml.Automation.Text.TextPatternRangeEndpoint targetEndpoint);
        void Select();
        void AddToSelection();
        void RemoveFromSelection();
        void ScrollIntoView(bool alignToTop);
        IRawElementProviderSimple[] GetChildren();
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")][Guid("34D4A80E-36BB-5362-A53B-490428A8B367")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Automation.Provider.ITextRangeProvider2))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    public interface ITextRangeProvider2 : ITextRangeProvider
    {
        void ShowContextMenu();
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")][Guid("021080C2-30A9-52EF-BC32-2B79847B6BA7")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Automation.Provider.IToggleProvider))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    public interface IToggleProvider
    {
        void Toggle();
        global::Microsoft.UI.Xaml.Automation.ToggleState ToggleState { get; }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")][Guid("6FD76988-8F52-5EF2-A826-9C8C4951C911")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Automation.Provider.ITransformProvider))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    public interface ITransformProvider
    {
        void Move(double x, double y);
        void Resize(double width, double height);
        void Rotate(double degrees);
        bool CanMove { get; }
        bool CanResize { get; }
        bool CanRotate { get; }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")][Guid("7D91D02D-8401-5CF8-BBC4-47391A524215")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Automation.Provider.ITransformProvider2))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    public interface ITransformProvider2 : ITransformProvider
    {
        void Zoom(double zoom);
        void ZoomByUnit(global::Microsoft.UI.Xaml.Automation.ZoomUnit zoomUnit);
        bool CanZoom { get; }
        double MaxZoom { get; }
        double MinZoom { get; }
        double ZoomLevel { get; }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")][Guid("984F11CF-4611-588E-B52E-B96A12322C71")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Automation.Provider.IValueProvider))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    public interface IValueProvider
    {
        void SetValue(string value);
        bool IsReadOnly { get; }
        string Value { get; }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")][Guid("098F858A-2E63-5985-AB87-F8EBDB1C5740")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Automation.Provider.IVirtualizedItemProvider))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    public interface IVirtualizedItemProvider
    {
        void Realize();
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")][Guid("83F1DF99-9DDF-575E-A651-2EE657FD16E0")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Automation.Provider.IWindowProvider))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    public interface IWindowProvider
    {
        void Close();
        void SetVisualState(global::Microsoft.UI.Xaml.Automation.WindowVisualState state);
        bool WaitForInputIdle(int milliseconds);
        global::Microsoft.UI.Xaml.Automation.WindowInteractionState InteractionState { get; }
        bool IsModal { get; }
        bool IsTopmost { get; }
        bool Maximizable { get; }
        bool Minimizable { get; }
        global::Microsoft.UI.Xaml.Automation.WindowVisualState VisualState { get; }
    }
}

#pragma warning disable CA1416
namespace ABI.Microsoft.UI.Xaml.Automation.Provider
{
    public static class IAnnotationProviderMethods
    {

        public static unsafe int get_AnnotationTypeId(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            int __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, int*, int>**)ThisPtr)[6](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }

        public static unsafe string get_AnnotationTypeName(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[7](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return MarshalString.FromAbi(__retval);
            }
            finally
            {
                MarshalString.DisposeAbi(__retval);
            }
        }

        public static unsafe string get_Author(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[8](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return MarshalString.FromAbi(__retval);
            }
            finally
            {
                MarshalString.DisposeAbi(__retval);
            }
        }

        public static unsafe string get_DateTime(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[9](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return MarshalString.FromAbi(__retval);
            }
            finally
            {
                MarshalString.DisposeAbi(__retval);
            }
        }

        public static unsafe global::Microsoft.UI.Xaml.Automation.Provider.IRawElementProviderSimple get_Target(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[10](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Xaml.Automation.Provider.IRawElementProviderSimple.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.UI.Xaml.Automation.Provider.IRawElementProviderSimple.DisposeAbi(__retval);
            }
        }



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0x8E, 0xB1, 0x6A, 0x54, 0x6D, 0x98, 0xEB, 0x5D, 0x8F, 0x2A, 0x2D, 0x93, 0x3, 0xA4, 0x30, 0x6 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

        public static global::System.IntPtr AbiToProjectionVftablePtr => IAnnotationProvider.AbiToProjectionVftablePtr;

    }
    [DynamicInterfaceCastableImplementation]
    [Guid("546AB18E-986D-5DEB-8F2A-2D9303A43006")]
    internal unsafe interface IAnnotationProvider : global::Microsoft.UI.Xaml.Automation.Provider.IAnnotationProvider
    {

        public static readonly IntPtr AbiToProjectionVftablePtr;
        static unsafe IAnnotationProvider()
        {
            AbiToProjectionVftablePtr = ComWrappersSupport.AllocateVtableMemory(typeof(IAnnotationProvider), sizeof(IInspectable.Vftbl) + sizeof(IntPtr) * 5);
            *(IInspectable.Vftbl*)AbiToProjectionVftablePtr = IInspectable.Vftbl.AbiToProjectionVftable;
            ((delegate* unmanaged[Stdcall]<IntPtr, int*, int>*)AbiToProjectionVftablePtr)[6] = &Do_Abi_get_AnnotationTypeId_0;
            ((delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>*)AbiToProjectionVftablePtr)[7] = &Do_Abi_get_AnnotationTypeName_1;
            ((delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>*)AbiToProjectionVftablePtr)[8] = &Do_Abi_get_Author_2;
            ((delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>*)AbiToProjectionVftablePtr)[9] = &Do_Abi_get_DateTime_3;
            ((delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>*)AbiToProjectionVftablePtr)[10] = &Do_Abi_get_Target_4;
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvStdcall) })]
        private static unsafe int Do_Abi_get_AnnotationTypeId_0(IntPtr thisPtr, int* value)
        {

            int __value = default;

            *value = default;

            try
            {
                __value = global::WinRT.ComWrappersSupport.FindObject<global::Microsoft.UI.Xaml.Automation.Provider.IAnnotationProvider>(thisPtr).AnnotationTypeId;
                *value = __value;

            }
            catch (Exception __exception__)
            {
                global::WinRT.ExceptionHelpers.SetErrorInfo(__exception__);
                return global::WinRT.ExceptionHelpers.GetHRForException(__exception__);
            }
            return 0;
        }
        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvStdcall) })]
        private static unsafe int Do_Abi_get_AnnotationTypeName_1(IntPtr thisPtr, IntPtr* value)
        {

            string __value = default;

            *value = default;

            try
            {
                __value = global::WinRT.ComWrappersSupport.FindObject<global::Microsoft.UI.Xaml.Automation.Provider.IAnnotationProvider>(thisPtr).AnnotationTypeName;
                *value = MarshalString.FromManaged(__value);

            }
            catch (Exception __exception__)
            {
                global::WinRT.ExceptionHelpers.SetErrorInfo(__exception__);
                return global::WinRT.ExceptionHelpers.GetHRForException(__exception__);
            }
            return 0;
        }
        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvStdcall) })]
        private static unsafe int Do_Abi_get_Author_2(IntPtr thisPtr, IntPtr* value)
        {

            string __value = default;

            *value = default;

            try
            {
                __value = global::WinRT.ComWrappersSupport.FindObject<global::Microsoft.UI.Xaml.Automation.Provider.IAnnotationProvider>(thisPtr).Author;
                *value = MarshalString.FromManaged(__value);

            }
            catch (Exception __exception__)
            {
                global::WinRT.ExceptionHelpers.SetErrorInfo(__exception__);
                return global::WinRT.ExceptionHelpers.GetHRForException(__exception__);
            }
            return 0;
        }
        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvStdcall) })]
        private static unsafe int Do_Abi_get_DateTime_3(IntPtr thisPtr, IntPtr* value)
        {

            string __value = default;

            *value = default;

            try
            {
                __value = global::WinRT.ComWrappersSupport.FindObject<global::Microsoft.UI.Xaml.Automation.Provider.IAnnotationProvider>(thisPtr).DateTime;
                *value = MarshalString.FromManaged(__value);

            }
            catch (Exception __exception__)
            {
                global::WinRT.ExceptionHelpers.SetErrorInfo(__exception__);
                return global::WinRT.ExceptionHelpers.GetHRForException(__exception__);
            }
            return 0;
        }
        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvStdcall) })]
        private static unsafe int Do_Abi_get_Target_4(IntPtr thisPtr, IntPtr* value)
        {

            global::Microsoft.UI.Xaml.Automation.Provider.IRawElementProviderSimple __value = default;

            *value = default;

            try
            {
                __value = global::WinRT.ComWrappersSupport.FindObject<global::Microsoft.UI.Xaml.Automation.Provider.IAnnotationProvider>(thisPtr).Target;
                *value = global::ABI.Microsoft.UI.Xaml.Automation.Provider.IRawElementProviderSimple.FromManaged(__value);

            }
            catch (Exception __exception__)
            {
                global::WinRT.ExceptionHelpers.SetErrorInfo(__exception__);
                return global::WinRT.ExceptionHelpers.GetHRForException(__exception__);
            }
            return 0;
        }

        unsafe int global::Microsoft.UI.Xaml.Automation.Provider.IAnnotationProvider.AnnotationTypeId
        {
            get
            {
                var _obj = ((IObjectReference)((IWinRTObject)this).GetObjectReferenceForType(typeof(global::Microsoft.UI.Xaml.Automation.Provider.IAnnotationProvider).TypeHandle));
                return global::ABI.Microsoft.UI.Xaml.Automation.Provider.IAnnotationProviderMethods.get_AnnotationTypeId(_obj);
            }
        }

        unsafe string global::Microsoft.UI.Xaml.Automation.Provider.IAnnotationProvider.AnnotationTypeName
        {
            get
            {
                var _obj = ((IObjectReference)((IWinRTObject)this).GetObjectReferenceForType(typeof(global::Microsoft.UI.Xaml.Automation.Provider.IAnnotationProvider).TypeHandle));
                return global::ABI.Microsoft.UI.Xaml.Automation.Provider.IAnnotationProviderMethods.get_AnnotationTypeName(_obj);
            }
        }

        unsafe string global::Microsoft.UI.Xaml.Automation.Provider.IAnnotationProvider.Author
        {
            get
            {
                var _obj = ((IObjectReference)((IWinRTObject)this).GetObjectReferenceForType(typeof(global::Microsoft.UI.Xaml.Automation.Provider.IAnnotationProvider).TypeHandle));
                return global::ABI.Microsoft.UI.Xaml.Automation.Provider.IAnnotationProviderMethods.get_Author(_obj);
            }
        }

        unsafe string global::Microsoft.UI.Xaml.Automation.Provider.IAnnotationProvider.DateTime
        {
            get
            {
                var _obj = ((IObjectReference)((IWinRTObject)this).GetObjectReferenceForType(typeof(global::Microsoft.UI.Xaml.Automation.Provider.IAnnotationProvider).TypeHandle));
                return global::ABI.Microsoft.UI.Xaml.Automation.Provider.IAnnotationProviderMethods.get_DateTime(_obj);
            }
        }

        unsafe global::Microsoft.UI.Xaml.Automation.Provider.IRawElementProviderSimple global::Microsoft.UI.Xaml.Automation.Provider.IAnnotationProvider.Target
        {
            get
            {
                var _obj = ((IObjectReference)((IWinRTObject)this).GetObjectReferenceForType(typeof(global::Microsoft.UI.Xaml.Automation.Provider.IAnnotationProvider).TypeHandle));
                return global::ABI.Microsoft.UI.Xaml.Automation.Provider.IAnnotationProviderMethods.get_Target(_obj);
            }
        }
    }

    public static class ICustomNavigationProviderMethods
    {


        public static unsafe object NavigateCustom(IObjectReference _obj, global::Microsoft.UI.Xaml.Automation.Peers.AutomationNavigationDirection direction)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::Microsoft.UI.Xaml.Automation.Peers.AutomationNavigationDirection, IntPtr*, int>**)ThisPtr)[6](ThisPtr, direction, &__retval));
                global::System.GC.KeepAlive(_obj);
                return MarshalInspectable<object>.FromAbi(__retval);
            }
            finally
            {
                MarshalInspectable<object>.DisposeAbi(__retval);
            }
        }


        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0x22, 0x13, 0xD5, 0xCA, 0xA9, 0xFA, 0x2B, 0x5A, 0x90, 0xF0, 0xB7, 0x62, 0xC4, 0x61, 0x78, 0xB3 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

        public static global::System.IntPtr AbiToProjectionVftablePtr => ICustomNavigationProvider.AbiToProjectionVftablePtr;

    }
    [DynamicInterfaceCastableImplementation]
    [Guid("CAD51322-FAA9-5A2B-90F0-B762C46178B3")]
    internal unsafe interface ICustomNavigationProvider : global::Microsoft.UI.Xaml.Automation.Provider.ICustomNavigationProvider
    {

        public static readonly IntPtr AbiToProjectionVftablePtr;
        static unsafe ICustomNavigationProvider()
        {
            AbiToProjectionVftablePtr = ComWrappersSupport.AllocateVtableMemory(typeof(ICustomNavigationProvider), sizeof(IInspectable.Vftbl) + sizeof(IntPtr) * 1);
            *(IInspectable.Vftbl*)AbiToProjectionVftablePtr = IInspectable.Vftbl.AbiToProjectionVftable;
            ((delegate* unmanaged[Stdcall]<IntPtr, global::Microsoft.UI.Xaml.Automation.Peers.AutomationNavigationDirection, IntPtr*, int>*)AbiToProjectionVftablePtr)[6] = &Do_Abi_NavigateCustom_0;
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvStdcall) })]
        private static unsafe int Do_Abi_NavigateCustom_0(IntPtr thisPtr, global::Microsoft.UI.Xaml.Automation.Peers.AutomationNavigationDirection direction, IntPtr* result)
        {

            object __result = default;

            *result = default;

            try
            {
                __result = global::WinRT.ComWrappersSupport.FindObject<global::Microsoft.UI.Xaml.Automation.Provider.ICustomNavigationProvider>(thisPtr).NavigateCustom(direction);
                *result = MarshalInspectable<object>.FromManaged(__result);

            }
            catch (Exception __exception__)
            {
                global::WinRT.ExceptionHelpers.SetErrorInfo(__exception__);
                return global::WinRT.ExceptionHelpers.GetHRForException(__exception__);
            }
            return 0;
        }

        unsafe object global::Microsoft.UI.Xaml.Automation.Provider.ICustomNavigationProvider.NavigateCustom(global::Microsoft.UI.Xaml.Automation.Peers.AutomationNavigationDirection direction)
        {
            var _obj = ((IObjectReference)((IWinRTObject)this).GetObjectReferenceForType(typeof(global::Microsoft.UI.Xaml.Automation.Provider.ICustomNavigationProvider).TypeHandle));
            return global::ABI.Microsoft.UI.Xaml.Automation.Provider.ICustomNavigationProviderMethods.NavigateCustom(_obj, direction);
        }
    }

    public static class IDockProviderMethods
    {


        public static unsafe void SetDockPosition(IObjectReference _obj, global::Microsoft.UI.Xaml.Automation.DockPosition dockPosition)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::Microsoft.UI.Xaml.Automation.DockPosition, int>**)ThisPtr)[7](ThisPtr, dockPosition));
            global::System.GC.KeepAlive(_obj);
        }
        public static unsafe global::Microsoft.UI.Xaml.Automation.DockPosition get_DockPosition(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::Microsoft.UI.Xaml.Automation.DockPosition __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::Microsoft.UI.Xaml.Automation.DockPosition*, int>**)ThisPtr)[6](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0x71, 0xB9, 0x82, 0x98, 0xEA, 0x70, 0x6D, 0x5C, 0xA8, 0x18, 0x7A, 0x7A, 0xB6, 0x8C, 0x6F, 0x3B };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

        public static global::System.IntPtr AbiToProjectionVftablePtr => IDockProvider.AbiToProjectionVftablePtr;

    }
    [DynamicInterfaceCastableImplementation]
    [Guid("9882B971-70EA-5C6D-A818-7A7AB68C6F3B")]
    internal unsafe interface IDockProvider : global::Microsoft.UI.Xaml.Automation.Provider.IDockProvider
    {

        public static readonly IntPtr AbiToProjectionVftablePtr;
        static unsafe IDockProvider()
        {
            AbiToProjectionVftablePtr = ComWrappersSupport.AllocateVtableMemory(typeof(IDockProvider), sizeof(IInspectable.Vftbl) + sizeof(IntPtr) * 2);
            *(IInspectable.Vftbl*)AbiToProjectionVftablePtr = IInspectable.Vftbl.AbiToProjectionVftable;
            ((delegate* unmanaged[Stdcall]<IntPtr, global::Microsoft.UI.Xaml.Automation.DockPosition*, int>*)AbiToProjectionVftablePtr)[6] = &Do_Abi_get_DockPosition_0;
            ((delegate* unmanaged[Stdcall]<IntPtr, global::Microsoft.UI.Xaml.Automation.DockPosition, int>*)AbiToProjectionVftablePtr)[7] = &Do_Abi_SetDockPosition_1;
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvStdcall) })]
        private static unsafe int Do_Abi_SetDockPosition_1(IntPtr thisPtr, global::Microsoft.UI.Xaml.Automation.DockPosition dockPosition)
        {



            try
            {
                global::WinRT.ComWrappersSupport.FindObject<global::Microsoft.UI.Xaml.Automation.Provider.IDockProvider>(thisPtr).SetDockPosition(dockPosition);

            }
            catch (Exception __exception__)
            {
                global::WinRT.ExceptionHelpers.SetErrorInfo(__exception__);
                return global::WinRT.ExceptionHelpers.GetHRForException(__exception__);
            }
            return 0;
        }
        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvStdcall) })]
        private static unsafe int Do_Abi_get_DockPosition_0(IntPtr thisPtr, global::Microsoft.UI.Xaml.Automation.DockPosition* value)
        {

            global::Microsoft.UI.Xaml.Automation.DockPosition __value = default;

            *value = default;

            try
            {
                __value = global::WinRT.ComWrappersSupport.FindObject<global::Microsoft.UI.Xaml.Automation.Provider.IDockProvider>(thisPtr).DockPosition;
                *value = __value;

            }
            catch (Exception __exception__)
            {
                global::WinRT.ExceptionHelpers.SetErrorInfo(__exception__);
                return global::WinRT.ExceptionHelpers.GetHRForException(__exception__);
            }
            return 0;
        }

        unsafe void global::Microsoft.UI.Xaml.Automation.Provider.IDockProvider.SetDockPosition(global::Microsoft.UI.Xaml.Automation.DockPosition dockPosition)
        {
            var _obj = ((IObjectReference)((IWinRTObject)this).GetObjectReferenceForType(typeof(global::Microsoft.UI.Xaml.Automation.Provider.IDockProvider).TypeHandle));
            global::ABI.Microsoft.UI.Xaml.Automation.Provider.IDockProviderMethods.SetDockPosition(_obj, dockPosition);
        }

        unsafe global::Microsoft.UI.Xaml.Automation.DockPosition global::Microsoft.UI.Xaml.Automation.Provider.IDockProvider.DockPosition
        {
            get
            {
                var _obj = ((IObjectReference)((IWinRTObject)this).GetObjectReferenceForType(typeof(global::Microsoft.UI.Xaml.Automation.Provider.IDockProvider).TypeHandle));
                return global::ABI.Microsoft.UI.Xaml.Automation.Provider.IDockProviderMethods.get_DockPosition(_obj);
            }
        }
    }

    public static class IDragProviderMethods
    {


        public static unsafe global::Microsoft.UI.Xaml.Automation.Provider.IRawElementProviderSimple[] GetGrabbedItems(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            int __retval_length = default;
            IntPtr __retval_data = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, int*, IntPtr*, int>**)ThisPtr)[9](ThisPtr, &__retval_length, &__retval_data));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Xaml.Automation.Provider.IRawElementProviderSimple.FromAbiArray((__retval_length, __retval_data));
            }
            finally
            {
                global::ABI.Microsoft.UI.Xaml.Automation.Provider.IRawElementProviderSimple.DisposeAbiArray((__retval_length, __retval_data));
            }
        }
        public static unsafe string get_DropEffect(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[7](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return MarshalString.FromAbi(__retval);
            }
            finally
            {
                MarshalString.DisposeAbi(__retval);
            }
        }

        public static unsafe string[] get_DropEffects(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            int __retval_length = default;
            IntPtr __retval_data = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, int*, IntPtr*, int>**)ThisPtr)[8](ThisPtr, &__retval_length, &__retval_data));
                global::System.GC.KeepAlive(_obj);
                return MarshalString.FromAbiArray((__retval_length, __retval_data));
            }
            finally
            {
                MarshalString.DisposeAbiArray((__retval_length, __retval_data));
            }
        }

        public static unsafe bool get_IsGrabbed(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            byte __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, byte*, int>**)ThisPtr)[6](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval != 0;
        }



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0x43, 0xB6, 0xB, 0xC6, 0x56, 0xA3, 0x32, 0x51, 0xA2, 0x58, 0xFF, 0xBA, 0x6C, 0x74, 0x80, 0xF2 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

        public static global::System.IntPtr AbiToProjectionVftablePtr => IDragProvider.AbiToProjectionVftablePtr;

    }
    [DynamicInterfaceCastableImplementation]
    [Guid("C60BB643-A356-5132-A258-FFBA6C7480F2")]
    internal unsafe interface IDragProvider : global::Microsoft.UI.Xaml.Automation.Provider.IDragProvider
    {

        public static readonly IntPtr AbiToProjectionVftablePtr;
        static unsafe IDragProvider()
        {
            AbiToProjectionVftablePtr = ComWrappersSupport.AllocateVtableMemory(typeof(IDragProvider), sizeof(IInspectable.Vftbl) + sizeof(IntPtr) * 4);
            *(IInspectable.Vftbl*)AbiToProjectionVftablePtr = IInspectable.Vftbl.AbiToProjectionVftable;
            ((delegate* unmanaged[Stdcall]<IntPtr, byte*, int>*)AbiToProjectionVftablePtr)[6] = &Do_Abi_get_IsGrabbed_0;
            ((delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>*)AbiToProjectionVftablePtr)[7] = &Do_Abi_get_DropEffect_1;
            ((delegate* unmanaged[Stdcall]<IntPtr, int*, IntPtr*, int>*)AbiToProjectionVftablePtr)[8] = &Do_Abi_get_DropEffects_2;
            ((delegate* unmanaged[Stdcall]<IntPtr, int*, IntPtr*, int>*)AbiToProjectionVftablePtr)[9] = &Do_Abi_GetGrabbedItems_3;
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvStdcall) })]
        private static unsafe int Do_Abi_GetGrabbedItems_3(IntPtr thisPtr, int* __resultSize, IntPtr* result)
        {

            global::Microsoft.UI.Xaml.Automation.Provider.IRawElementProviderSimple[] __result = default;

            *result = default;
            *__resultSize = default;

            try
            {
                __result = global::WinRT.ComWrappersSupport.FindObject<global::Microsoft.UI.Xaml.Automation.Provider.IDragProvider>(thisPtr).GetGrabbedItems();
                (*__resultSize, *result) = global::ABI.Microsoft.UI.Xaml.Automation.Provider.IRawElementProviderSimple.FromManagedArray(__result);

            }
            catch (Exception __exception__)
            {
                global::WinRT.ExceptionHelpers.SetErrorInfo(__exception__);
                return global::WinRT.ExceptionHelpers.GetHRForException(__exception__);
            }
            return 0;
        }
        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvStdcall) })]
        private static unsafe int Do_Abi_get_DropEffect_1(IntPtr thisPtr, IntPtr* value)
        {

            string __value = default;

            *value = default;

            try
            {
                __value = global::WinRT.ComWrappersSupport.FindObject<global::Microsoft.UI.Xaml.Automation.Provider.IDragProvider>(thisPtr).DropEffect;
                *value = MarshalString.FromManaged(__value);

            }
            catch (Exception __exception__)
            {
                global::WinRT.ExceptionHelpers.SetErrorInfo(__exception__);
                return global::WinRT.ExceptionHelpers.GetHRForException(__exception__);
            }
            return 0;
        }
        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvStdcall) })]
        private static unsafe int Do_Abi_get_DropEffects_2(IntPtr thisPtr, int* __valueSize, IntPtr* value)
        {

            string[] __value = default;

            *value = default;
            *__valueSize = default;

            try
            {
                __value = global::WinRT.ComWrappersSupport.FindObject<global::Microsoft.UI.Xaml.Automation.Provider.IDragProvider>(thisPtr).DropEffects;
                (*__valueSize, *value) = MarshalString.FromManagedArray(__value);

            }
            catch (Exception __exception__)
            {
                global::WinRT.ExceptionHelpers.SetErrorInfo(__exception__);
                return global::WinRT.ExceptionHelpers.GetHRForException(__exception__);
            }
            return 0;
        }
        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvStdcall) })]
        private static unsafe int Do_Abi_get_IsGrabbed_0(IntPtr thisPtr, byte* value)
        {

            bool __value = default;

            *value = default;

            try
            {
                __value = global::WinRT.ComWrappersSupport.FindObject<global::Microsoft.UI.Xaml.Automation.Provider.IDragProvider>(thisPtr).IsGrabbed;
                *value = (byte)(__value ? 1 : 0);

            }
            catch (Exception __exception__)
            {
                global::WinRT.ExceptionHelpers.SetErrorInfo(__exception__);
                return global::WinRT.ExceptionHelpers.GetHRForException(__exception__);
            }
            return 0;
        }

        unsafe global::Microsoft.UI.Xaml.Automation.Provider.IRawElementProviderSimple[] global::Microsoft.UI.Xaml.Automation.Provider.IDragProvider.GetGrabbedItems()
        {
            var _obj = ((IObjectReference)((IWinRTObject)this).GetObjectReferenceForType(typeof(global::Microsoft.UI.Xaml.Automation.Provider.IDragProvider).TypeHandle));
            return global::ABI.Microsoft.UI.Xaml.Automation.Provider.IDragProviderMethods.GetGrabbedItems(_obj);
        }

        unsafe string global::Microsoft.UI.Xaml.Automation.Provider.IDragProvider.DropEffect
        {
            get
            {
                var _obj = ((IObjectReference)((IWinRTObject)this).GetObjectReferenceForType(typeof(global::Microsoft.UI.Xaml.Automation.Provider.IDragProvider).TypeHandle));
                return global::ABI.Microsoft.UI.Xaml.Automation.Provider.IDragProviderMethods.get_DropEffect(_obj);
            }
        }

        unsafe string[] global::Microsoft.UI.Xaml.Automation.Provider.IDragProvider.DropEffects
        {
            get
            {
                var _obj = ((IObjectReference)((IWinRTObject)this).GetObjectReferenceForType(typeof(global::Microsoft.UI.Xaml.Automation.Provider.IDragProvider).TypeHandle));
                return global::ABI.Microsoft.UI.Xaml.Automation.Provider.IDragProviderMethods.get_DropEffects(_obj);
            }
        }

        unsafe bool global::Microsoft.UI.Xaml.Automation.Provider.IDragProvider.IsGrabbed
        {
            get
            {
                var _obj = ((IObjectReference)((IWinRTObject)this).GetObjectReferenceForType(typeof(global::Microsoft.UI.Xaml.Automation.Provider.IDragProvider).TypeHandle));
                return global::ABI.Microsoft.UI.Xaml.Automation.Provider.IDragProviderMethods.get_IsGrabbed(_obj);
            }
        }
    }

    public static class IDropTargetProviderMethods
    {

        public static unsafe string get_DropEffect(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[6](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return MarshalString.FromAbi(__retval);
            }
            finally
            {
                MarshalString.DisposeAbi(__retval);
            }
        }

        public static unsafe string[] get_DropEffects(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            int __retval_length = default;
            IntPtr __retval_data = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, int*, IntPtr*, int>**)ThisPtr)[7](ThisPtr, &__retval_length, &__retval_data));
                global::System.GC.KeepAlive(_obj);
                return MarshalString.FromAbiArray((__retval_length, __retval_data));
            }
            finally
            {
                MarshalString.DisposeAbiArray((__retval_length, __retval_data));
            }
        }



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0x3D, 0x9F, 0x2A, 0x9B, 0xB1, 0xBB, 0xD, 0x51, 0x99, 0xE8, 0xE, 0xA, 0xE1, 0x4A, 0x6E, 0x3B };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

        public static global::System.IntPtr AbiToProjectionVftablePtr => IDropTargetProvider.AbiToProjectionVftablePtr;

    }
    [DynamicInterfaceCastableImplementation]
    [Guid("9B2A9F3D-BBB1-510D-99E8-0E0AE14A6E3B")]
    internal unsafe interface IDropTargetProvider : global::Microsoft.UI.Xaml.Automation.Provider.IDropTargetProvider
    {

        public static readonly IntPtr AbiToProjectionVftablePtr;
        static unsafe IDropTargetProvider()
        {
            AbiToProjectionVftablePtr = ComWrappersSupport.AllocateVtableMemory(typeof(IDropTargetProvider), sizeof(IInspectable.Vftbl) + sizeof(IntPtr) * 2);
            *(IInspectable.Vftbl*)AbiToProjectionVftablePtr = IInspectable.Vftbl.AbiToProjectionVftable;
            ((delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>*)AbiToProjectionVftablePtr)[6] = &Do_Abi_get_DropEffect_0;
            ((delegate* unmanaged[Stdcall]<IntPtr, int*, IntPtr*, int>*)AbiToProjectionVftablePtr)[7] = &Do_Abi_get_DropEffects_1;
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvStdcall) })]
        private static unsafe int Do_Abi_get_DropEffect_0(IntPtr thisPtr, IntPtr* value)
        {

            string __value = default;

            *value = default;

            try
            {
                __value = global::WinRT.ComWrappersSupport.FindObject<global::Microsoft.UI.Xaml.Automation.Provider.IDropTargetProvider>(thisPtr).DropEffect;
                *value = MarshalString.FromManaged(__value);

            }
            catch (Exception __exception__)
            {
                global::WinRT.ExceptionHelpers.SetErrorInfo(__exception__);
                return global::WinRT.ExceptionHelpers.GetHRForException(__exception__);
            }
            return 0;
        }
        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvStdcall) })]
        private static unsafe int Do_Abi_get_DropEffects_1(IntPtr thisPtr, int* __valueSize, IntPtr* value)
        {

            string[] __value = default;

            *value = default;
            *__valueSize = default;

            try
            {
                __value = global::WinRT.ComWrappersSupport.FindObject<global::Microsoft.UI.Xaml.Automation.Provider.IDropTargetProvider>(thisPtr).DropEffects;
                (*__valueSize, *value) = MarshalString.FromManagedArray(__value);

            }
            catch (Exception __exception__)
            {
                global::WinRT.ExceptionHelpers.SetErrorInfo(__exception__);
                return global::WinRT.ExceptionHelpers.GetHRForException(__exception__);
            }
            return 0;
        }

        unsafe string global::Microsoft.UI.Xaml.Automation.Provider.IDropTargetProvider.DropEffect
        {
            get
            {
                var _obj = ((IObjectReference)((IWinRTObject)this).GetObjectReferenceForType(typeof(global::Microsoft.UI.Xaml.Automation.Provider.IDropTargetProvider).TypeHandle));
                return global::ABI.Microsoft.UI.Xaml.Automation.Provider.IDropTargetProviderMethods.get_DropEffect(_obj);
            }
        }

        unsafe string[] global::Microsoft.UI.Xaml.Automation.Provider.IDropTargetProvider.DropEffects
        {
            get
            {
                var _obj = ((IObjectReference)((IWinRTObject)this).GetObjectReferenceForType(typeof(global::Microsoft.UI.Xaml.Automation.Provider.IDropTargetProvider).TypeHandle));
                return global::ABI.Microsoft.UI.Xaml.Automation.Provider.IDropTargetProviderMethods.get_DropEffects(_obj);
            }
        }
    }

    public static class IExpandCollapseProviderMethods
    {


        public static unsafe void Collapse(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, int>**)ThisPtr)[7](ThisPtr));
            global::System.GC.KeepAlive(_obj);
        }

        public static unsafe void Expand(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, int>**)ThisPtr)[8](ThisPtr));
            global::System.GC.KeepAlive(_obj);
        }
        public static unsafe global::Microsoft.UI.Xaml.Automation.ExpandCollapseState get_ExpandCollapseState(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::Microsoft.UI.Xaml.Automation.ExpandCollapseState __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::Microsoft.UI.Xaml.Automation.ExpandCollapseState*, int>**)ThisPtr)[6](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0x9C, 0x34, 0xEF, 0x6C, 0x81, 0xB1, 0xB, 0x5D, 0xB2, 0x97, 0xC3, 0xB0, 0x16, 0x61, 0x20, 0xC3 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

        public static global::System.IntPtr AbiToProjectionVftablePtr => IExpandCollapseProvider.AbiToProjectionVftablePtr;

    }
    [DynamicInterfaceCastableImplementation]
    [Guid("6CEF349C-B181-5D0B-B297-C3B0166120C3")]
    internal unsafe interface IExpandCollapseProvider : global::Microsoft.UI.Xaml.Automation.Provider.IExpandCollapseProvider
    {

        public static readonly IntPtr AbiToProjectionVftablePtr;
        static unsafe IExpandCollapseProvider()
        {
            AbiToProjectionVftablePtr = ComWrappersSupport.AllocateVtableMemory(typeof(IExpandCollapseProvider), sizeof(IInspectable.Vftbl) + sizeof(IntPtr) * 3);
            *(IInspectable.Vftbl*)AbiToProjectionVftablePtr = IInspectable.Vftbl.AbiToProjectionVftable;
            ((delegate* unmanaged[Stdcall]<IntPtr, global::Microsoft.UI.Xaml.Automation.ExpandCollapseState*, int>*)AbiToProjectionVftablePtr)[6] = &Do_Abi_get_ExpandCollapseState_0;
            ((delegate* unmanaged[Stdcall]<IntPtr, int>*)AbiToProjectionVftablePtr)[7] = &Do_Abi_Collapse_1;
            ((delegate* unmanaged[Stdcall]<IntPtr, int>*)AbiToProjectionVftablePtr)[8] = &Do_Abi_Expand_2;
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvStdcall) })]
        private static unsafe int Do_Abi_Collapse_1(IntPtr thisPtr)
        {



            try
            {
                global::WinRT.ComWrappersSupport.FindObject<global::Microsoft.UI.Xaml.Automation.Provider.IExpandCollapseProvider>(thisPtr).Collapse();

            }
            catch (Exception __exception__)
            {
                global::WinRT.ExceptionHelpers.SetErrorInfo(__exception__);
                return global::WinRT.ExceptionHelpers.GetHRForException(__exception__);
            }
            return 0;
        }
        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvStdcall) })]
        private static unsafe int Do_Abi_Expand_2(IntPtr thisPtr)
        {



            try
            {
                global::WinRT.ComWrappersSupport.FindObject<global::Microsoft.UI.Xaml.Automation.Provider.IExpandCollapseProvider>(thisPtr).Expand();

            }
            catch (Exception __exception__)
            {
                global::WinRT.ExceptionHelpers.SetErrorInfo(__exception__);
                return global::WinRT.ExceptionHelpers.GetHRForException(__exception__);
            }
            return 0;
        }
        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvStdcall) })]
        private static unsafe int Do_Abi_get_ExpandCollapseState_0(IntPtr thisPtr, global::Microsoft.UI.Xaml.Automation.ExpandCollapseState* value)
        {

            global::Microsoft.UI.Xaml.Automation.ExpandCollapseState __value = default;

            *value = default;

            try
            {
                __value = global::WinRT.ComWrappersSupport.FindObject<global::Microsoft.UI.Xaml.Automation.Provider.IExpandCollapseProvider>(thisPtr).ExpandCollapseState;
                *value = __value;

            }
            catch (Exception __exception__)
            {
                global::WinRT.ExceptionHelpers.SetErrorInfo(__exception__);
                return global::WinRT.ExceptionHelpers.GetHRForException(__exception__);
            }
            return 0;
        }

        unsafe void global::Microsoft.UI.Xaml.Automation.Provider.IExpandCollapseProvider.Collapse()
        {
            var _obj = ((IObjectReference)((IWinRTObject)this).GetObjectReferenceForType(typeof(global::Microsoft.UI.Xaml.Automation.Provider.IExpandCollapseProvider).TypeHandle));
            global::ABI.Microsoft.UI.Xaml.Automation.Provider.IExpandCollapseProviderMethods.Collapse(_obj);
        }

        unsafe void global::Microsoft.UI.Xaml.Automation.Provider.IExpandCollapseProvider.Expand()
        {
            var _obj = ((IObjectReference)((IWinRTObject)this).GetObjectReferenceForType(typeof(global::Microsoft.UI.Xaml.Automation.Provider.IExpandCollapseProvider).TypeHandle));
            global::ABI.Microsoft.UI.Xaml.Automation.Provider.IExpandCollapseProviderMethods.Expand(_obj);
        }

        unsafe global::Microsoft.UI.Xaml.Automation.ExpandCollapseState global::Microsoft.UI.Xaml.Automation.Provider.IExpandCollapseProvider.ExpandCollapseState
        {
            get
            {
                var _obj = ((IObjectReference)((IWinRTObject)this).GetObjectReferenceForType(typeof(global::Microsoft.UI.Xaml.Automation.Provider.IExpandCollapseProvider).TypeHandle));
                return global::ABI.Microsoft.UI.Xaml.Automation.Provider.IExpandCollapseProviderMethods.get_ExpandCollapseState(_obj);
            }
        }
    }

    public static class IGridItemProviderMethods
    {

        public static unsafe int get_Column(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            int __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, int*, int>**)ThisPtr)[6](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }

        public static unsafe int get_ColumnSpan(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            int __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, int*, int>**)ThisPtr)[7](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }

        public static unsafe global::Microsoft.UI.Xaml.Automation.Provider.IRawElementProviderSimple get_ContainingGrid(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[8](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Xaml.Automation.Provider.IRawElementProviderSimple.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.UI.Xaml.Automation.Provider.IRawElementProviderSimple.DisposeAbi(__retval);
            }
        }

        public static unsafe int get_Row(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            int __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, int*, int>**)ThisPtr)[9](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }

        public static unsafe int get_RowSpan(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            int __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, int*, int>**)ThisPtr)[10](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0xE, 0x7A, 0x55, 0xD2, 0x9, 0x69, 0x70, 0x51, 0xA6, 0x80, 0x60, 0x72, 0x8D, 0xF3, 0x39, 0xB4 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

        public static global::System.IntPtr AbiToProjectionVftablePtr => IGridItemProvider.AbiToProjectionVftablePtr;

    }
    [DynamicInterfaceCastableImplementation]
    [Guid("D2557A0E-6909-5170-A680-60728DF339B4")]
    internal unsafe interface IGridItemProvider : global::Microsoft.UI.Xaml.Automation.Provider.IGridItemProvider
    {

        public static readonly IntPtr AbiToProjectionVftablePtr;
        static unsafe IGridItemProvider()
        {
            AbiToProjectionVftablePtr = ComWrappersSupport.AllocateVtableMemory(typeof(IGridItemProvider), sizeof(IInspectable.Vftbl) + sizeof(IntPtr) * 5);
            *(IInspectable.Vftbl*)AbiToProjectionVftablePtr = IInspectable.Vftbl.AbiToProjectionVftable;
            ((delegate* unmanaged[Stdcall]<IntPtr, int*, int>*)AbiToProjectionVftablePtr)[6] = &Do_Abi_get_Column_0;
            ((delegate* unmanaged[Stdcall]<IntPtr, int*, int>*)AbiToProjectionVftablePtr)[7] = &Do_Abi_get_ColumnSpan_1;
            ((delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>*)AbiToProjectionVftablePtr)[8] = &Do_Abi_get_ContainingGrid_2;
            ((delegate* unmanaged[Stdcall]<IntPtr, int*, int>*)AbiToProjectionVftablePtr)[9] = &Do_Abi_get_Row_3;
            ((delegate* unmanaged[Stdcall]<IntPtr, int*, int>*)AbiToProjectionVftablePtr)[10] = &Do_Abi_get_RowSpan_4;
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvStdcall) })]
        private static unsafe int Do_Abi_get_Column_0(IntPtr thisPtr, int* value)
        {

            int __value = default;

            *value = default;

            try
            {
                __value = global::WinRT.ComWrappersSupport.FindObject<global::Microsoft.UI.Xaml.Automation.Provider.IGridItemProvider>(thisPtr).Column;
                *value = __value;

            }
            catch (Exception __exception__)
            {
                global::WinRT.ExceptionHelpers.SetErrorInfo(__exception__);
                return global::WinRT.ExceptionHelpers.GetHRForException(__exception__);
            }
            return 0;
        }
        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvStdcall) })]
        private static unsafe int Do_Abi_get_ColumnSpan_1(IntPtr thisPtr, int* value)
        {

            int __value = default;

            *value = default;

            try
            {
                __value = global::WinRT.ComWrappersSupport.FindObject<global::Microsoft.UI.Xaml.Automation.Provider.IGridItemProvider>(thisPtr).ColumnSpan;
                *value = __value;

            }
            catch (Exception __exception__)
            {
                global::WinRT.ExceptionHelpers.SetErrorInfo(__exception__);
                return global::WinRT.ExceptionHelpers.GetHRForException(__exception__);
            }
            return 0;
        }
        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvStdcall) })]
        private static unsafe int Do_Abi_get_ContainingGrid_2(IntPtr thisPtr, IntPtr* value)
        {

            global::Microsoft.UI.Xaml.Automation.Provider.IRawElementProviderSimple __value = default;

            *value = default;

            try
            {
                __value = global::WinRT.ComWrappersSupport.FindObject<global::Microsoft.UI.Xaml.Automation.Provider.IGridItemProvider>(thisPtr).ContainingGrid;
                *value = global::ABI.Microsoft.UI.Xaml.Automation.Provider.IRawElementProviderSimple.FromManaged(__value);

            }
            catch (Exception __exception__)
            {
                global::WinRT.ExceptionHelpers.SetErrorInfo(__exception__);
                return global::WinRT.ExceptionHelpers.GetHRForException(__exception__);
            }
            return 0;
        }
        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvStdcall) })]
        private static unsafe int Do_Abi_get_Row_3(IntPtr thisPtr, int* value)
        {

            int __value = default;

            *value = default;

            try
            {
                __value = global::WinRT.ComWrappersSupport.FindObject<global::Microsoft.UI.Xaml.Automation.Provider.IGridItemProvider>(thisPtr).Row;
                *value = __value;

            }
            catch (Exception __exception__)
            {
                global::WinRT.ExceptionHelpers.SetErrorInfo(__exception__);
                return global::WinRT.ExceptionHelpers.GetHRForException(__exception__);
            }
            return 0;
        }
        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvStdcall) })]
        private static unsafe int Do_Abi_get_RowSpan_4(IntPtr thisPtr, int* value)
        {

            int __value = default;

            *value = default;

            try
            {
                __value = global::WinRT.ComWrappersSupport.FindObject<global::Microsoft.UI.Xaml.Automation.Provider.IGridItemProvider>(thisPtr).RowSpan;
                *value = __value;

            }
            catch (Exception __exception__)
            {
                global::WinRT.ExceptionHelpers.SetErrorInfo(__exception__);
                return global::WinRT.ExceptionHelpers.GetHRForException(__exception__);
            }
            return 0;
        }

        unsafe int global::Microsoft.UI.Xaml.Automation.Provider.IGridItemProvider.Column
        {
            get
            {
                var _obj = ((IObjectReference)((IWinRTObject)this).GetObjectReferenceForType(typeof(global::Microsoft.UI.Xaml.Automation.Provider.IGridItemProvider).TypeHandle));
                return global::ABI.Microsoft.UI.Xaml.Automation.Provider.IGridItemProviderMethods.get_Column(_obj);
            }
        }

        unsafe int global::Microsoft.UI.Xaml.Automation.Provider.IGridItemProvider.ColumnSpan
        {
            get
            {
                var _obj = ((IObjectReference)((IWinRTObject)this).GetObjectReferenceForType(typeof(global::Microsoft.UI.Xaml.Automation.Provider.IGridItemProvider).TypeHandle));
                return global::ABI.Microsoft.UI.Xaml.Automation.Provider.IGridItemProviderMethods.get_ColumnSpan(_obj);
            }
        }

        unsafe global::Microsoft.UI.Xaml.Automation.Provider.IRawElementProviderSimple global::Microsoft.UI.Xaml.Automation.Provider.IGridItemProvider.ContainingGrid
        {
            get
            {
                var _obj = ((IObjectReference)((IWinRTObject)this).GetObjectReferenceForType(typeof(global::Microsoft.UI.Xaml.Automation.Provider.IGridItemProvider).TypeHandle));
                return global::ABI.Microsoft.UI.Xaml.Automation.Provider.IGridItemProviderMethods.get_ContainingGrid(_obj);
            }
        }

        unsafe int global::Microsoft.UI.Xaml.Automation.Provider.IGridItemProvider.Row
        {
            get
            {
                var _obj = ((IObjectReference)((IWinRTObject)this).GetObjectReferenceForType(typeof(global::Microsoft.UI.Xaml.Automation.Provider.IGridItemProvider).TypeHandle));
                return global::ABI.Microsoft.UI.Xaml.Automation.Provider.IGridItemProviderMethods.get_Row(_obj);
            }
        }

        unsafe int global::Microsoft.UI.Xaml.Automation.Provider.IGridItemProvider.RowSpan
        {
            get
            {
                var _obj = ((IObjectReference)((IWinRTObject)this).GetObjectReferenceForType(typeof(global::Microsoft.UI.Xaml.Automation.Provider.IGridItemProvider).TypeHandle));
                return global::ABI.Microsoft.UI.Xaml.Automation.Provider.IGridItemProviderMethods.get_RowSpan(_obj);
            }
        }
    }

    public static class IGridProviderMethods
    {


        public static unsafe global::Microsoft.UI.Xaml.Automation.Provider.IRawElementProviderSimple GetItem(IObjectReference _obj, int row, int column)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, int, int, IntPtr*, int>**)ThisPtr)[8](ThisPtr, row, column, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Xaml.Automation.Provider.IRawElementProviderSimple.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.UI.Xaml.Automation.Provider.IRawElementProviderSimple.DisposeAbi(__retval);
            }
        }
        public static unsafe int get_ColumnCount(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            int __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, int*, int>**)ThisPtr)[6](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }

        public static unsafe int get_RowCount(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            int __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, int*, int>**)ThisPtr)[7](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0x5E, 0x2D, 0x99, 0x50, 0x25, 0xD2, 0xE9, 0x56, 0xA2, 0x5A, 0x78, 0xC3, 0x72, 0xE8, 0x19, 0x55 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

        public static global::System.IntPtr AbiToProjectionVftablePtr => IGridProvider.AbiToProjectionVftablePtr;

    }
    [DynamicInterfaceCastableImplementation]
    [Guid("50992D5E-D225-56E9-A25A-78C372E81955")]
    internal unsafe interface IGridProvider : global::Microsoft.UI.Xaml.Automation.Provider.IGridProvider
    {

        public static readonly IntPtr AbiToProjectionVftablePtr;
        static unsafe IGridProvider()
        {
            AbiToProjectionVftablePtr = ComWrappersSupport.AllocateVtableMemory(typeof(IGridProvider), sizeof(IInspectable.Vftbl) + sizeof(IntPtr) * 3);
            *(IInspectable.Vftbl*)AbiToProjectionVftablePtr = IInspectable.Vftbl.AbiToProjectionVftable;
            ((delegate* unmanaged[Stdcall]<IntPtr, int*, int>*)AbiToProjectionVftablePtr)[6] = &Do_Abi_get_ColumnCount_0;
            ((delegate* unmanaged[Stdcall]<IntPtr, int*, int>*)AbiToProjectionVftablePtr)[7] = &Do_Abi_get_RowCount_1;
            ((delegate* unmanaged[Stdcall]<IntPtr, int, int, IntPtr*, int>*)AbiToProjectionVftablePtr)[8] = &Do_Abi_GetItem_2;
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvStdcall) })]
        private static unsafe int Do_Abi_GetItem_2(IntPtr thisPtr, int row, int column, IntPtr* result)
        {

            global::Microsoft.UI.Xaml.Automation.Provider.IRawElementProviderSimple __result = default;

            *result = default;

            try
            {
                __result = global::WinRT.ComWrappersSupport.FindObject<global::Microsoft.UI.Xaml.Automation.Provider.IGridProvider>(thisPtr).GetItem(row, column);
                *result = global::ABI.Microsoft.UI.Xaml.Automation.Provider.IRawElementProviderSimple.FromManaged(__result);

            }
            catch (Exception __exception__)
            {
                global::WinRT.ExceptionHelpers.SetErrorInfo(__exception__);
                return global::WinRT.ExceptionHelpers.GetHRForException(__exception__);
            }
            return 0;
        }
        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvStdcall) })]
        private static unsafe int Do_Abi_get_ColumnCount_0(IntPtr thisPtr, int* value)
        {

            int __value = default;

            *value = default;

            try
            {
                __value = global::WinRT.ComWrappersSupport.FindObject<global::Microsoft.UI.Xaml.Automation.Provider.IGridProvider>(thisPtr).ColumnCount;
                *value = __value;

            }
            catch (Exception __exception__)
            {
                global::WinRT.ExceptionHelpers.SetErrorInfo(__exception__);
                return global::WinRT.ExceptionHelpers.GetHRForException(__exception__);
            }
            return 0;
        }
        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvStdcall) })]
        private static unsafe int Do_Abi_get_RowCount_1(IntPtr thisPtr, int* value)
        {

            int __value = default;

            *value = default;

            try
            {
                __value = global::WinRT.ComWrappersSupport.FindObject<global::Microsoft.UI.Xaml.Automation.Provider.IGridProvider>(thisPtr).RowCount;
                *value = __value;

            }
            catch (Exception __exception__)
            {
                global::WinRT.ExceptionHelpers.SetErrorInfo(__exception__);
                return global::WinRT.ExceptionHelpers.GetHRForException(__exception__);
            }
            return 0;
        }

        unsafe global::Microsoft.UI.Xaml.Automation.Provider.IRawElementProviderSimple global::Microsoft.UI.Xaml.Automation.Provider.IGridProvider.GetItem(int row, int column)
        {
            var _obj = ((IObjectReference)((IWinRTObject)this).GetObjectReferenceForType(typeof(global::Microsoft.UI.Xaml.Automation.Provider.IGridProvider).TypeHandle));
            return global::ABI.Microsoft.UI.Xaml.Automation.Provider.IGridProviderMethods.GetItem(_obj, row, column);
        }

        unsafe int global::Microsoft.UI.Xaml.Automation.Provider.IGridProvider.ColumnCount
        {
            get
            {
                var _obj = ((IObjectReference)((IWinRTObject)this).GetObjectReferenceForType(typeof(global::Microsoft.UI.Xaml.Automation.Provider.IGridProvider).TypeHandle));
                return global::ABI.Microsoft.UI.Xaml.Automation.Provider.IGridProviderMethods.get_ColumnCount(_obj);
            }
        }

        unsafe int global::Microsoft.UI.Xaml.Automation.Provider.IGridProvider.RowCount
        {
            get
            {
                var _obj = ((IObjectReference)((IWinRTObject)this).GetObjectReferenceForType(typeof(global::Microsoft.UI.Xaml.Automation.Provider.IGridProvider).TypeHandle));
                return global::ABI.Microsoft.UI.Xaml.Automation.Provider.IGridProviderMethods.get_RowCount(_obj);
            }
        }
    }

    internal static class IIRawElementProviderSimpleMethods
    {



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0x39, 0xC2, 0xB, 0xF9, 0xE2, 0xAD, 0xC9, 0x55, 0xA8, 0x38, 0xA3, 0xB0, 0x57, 0x97, 0x63, 0xC5 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("F90BC239-ADE2-55C9-A838-A3B0579763C5")]
    internal interface IIRawElementProviderSimple : global::Microsoft.UI.Xaml.Automation.Provider.IIRawElementProviderSimple
    {
    }
    public static class IInvokeProviderMethods
    {


        public static unsafe void Invoke(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, int>**)ThisPtr)[6](ThisPtr));
            global::System.GC.KeepAlive(_obj);
        }


        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0x5, 0x11, 0x48, 0x2, 0x78, 0x33, 0x4D, 0x54, 0xB4, 0xE1, 0xA1, 0xB3, 0x68, 0xAF, 0xBC, 0x2 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

        public static global::System.IntPtr AbiToProjectionVftablePtr => IInvokeProvider.AbiToProjectionVftablePtr;

    }
    [DynamicInterfaceCastableImplementation]
    [Guid("02481105-3378-544D-B4E1-A1B368AFBC02")]
    internal unsafe interface IInvokeProvider : global::Microsoft.UI.Xaml.Automation.Provider.IInvokeProvider
    {

        public static readonly IntPtr AbiToProjectionVftablePtr;
        static unsafe IInvokeProvider()
        {
            AbiToProjectionVftablePtr = ComWrappersSupport.AllocateVtableMemory(typeof(IInvokeProvider), sizeof(IInspectable.Vftbl) + sizeof(IntPtr) * 1);
            *(IInspectable.Vftbl*)AbiToProjectionVftablePtr = IInspectable.Vftbl.AbiToProjectionVftable;
            ((delegate* unmanaged[Stdcall]<IntPtr, int>*)AbiToProjectionVftablePtr)[6] = &Do_Abi_Invoke_0;
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvStdcall) })]
        private static unsafe int Do_Abi_Invoke_0(IntPtr thisPtr)
        {



            try
            {
                global::WinRT.ComWrappersSupport.FindObject<global::Microsoft.UI.Xaml.Automation.Provider.IInvokeProvider>(thisPtr).Invoke();

            }
            catch (Exception __exception__)
            {
                global::WinRT.ExceptionHelpers.SetErrorInfo(__exception__);
                return global::WinRT.ExceptionHelpers.GetHRForException(__exception__);
            }
            return 0;
        }

        unsafe void global::Microsoft.UI.Xaml.Automation.Provider.IInvokeProvider.Invoke()
        {
            var _obj = ((IObjectReference)((IWinRTObject)this).GetObjectReferenceForType(typeof(global::Microsoft.UI.Xaml.Automation.Provider.IInvokeProvider).TypeHandle));
            global::ABI.Microsoft.UI.Xaml.Automation.Provider.IInvokeProviderMethods.Invoke(_obj);
        }
    }

    public static class IItemContainerProviderMethods
    {


        public static unsafe global::Microsoft.UI.Xaml.Automation.Provider.IRawElementProviderSimple FindItemByProperty(IObjectReference _obj, global::Microsoft.UI.Xaml.Automation.Provider.IRawElementProviderSimple startAfter, global::Microsoft.UI.Xaml.Automation.AutomationProperty automationProperty, object value)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __startAfter = default;
            ObjectReferenceValue __automationProperty = default;
            ObjectReferenceValue __value = default;
            IntPtr __retval = default;
            try
            {
                __startAfter = global::ABI.Microsoft.UI.Xaml.Automation.Provider.IRawElementProviderSimple.CreateMarshaler2(startAfter);
                __automationProperty = global::ABI.Microsoft.UI.Xaml.Automation.AutomationProperty.CreateMarshaler2(automationProperty);
                __value = MarshalInspectable<object>.CreateMarshaler2(value);
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, IntPtr, IntPtr, IntPtr*, int>**)ThisPtr)[6](ThisPtr, MarshalInspectable<object>.GetAbi(__startAfter), MarshalInspectable<object>.GetAbi(__automationProperty), MarshalInspectable<object>.GetAbi(__value), &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Xaml.Automation.Provider.IRawElementProviderSimple.FromAbi(__retval);
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__startAfter);
                MarshalInspectable<object>.DisposeMarshaler(__automationProperty);
                MarshalInspectable<object>.DisposeMarshaler(__value);
                global::ABI.Microsoft.UI.Xaml.Automation.Provider.IRawElementProviderSimple.DisposeAbi(__retval);
            }
        }


        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0x63, 0x73, 0x29, 0xAD, 0x4E, 0x69, 0x85, 0x58, 0x99, 0x7D, 0xA2, 0xD6, 0xDF, 0xF4, 0x15, 0xA7 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

        public static global::System.IntPtr AbiToProjectionVftablePtr => IItemContainerProvider.AbiToProjectionVftablePtr;

    }
    [DynamicInterfaceCastableImplementation]
    [Guid("AD297363-694E-5885-997D-A2D6DFF415A7")]
    internal unsafe interface IItemContainerProvider : global::Microsoft.UI.Xaml.Automation.Provider.IItemContainerProvider
    {

        public static readonly IntPtr AbiToProjectionVftablePtr;
        static unsafe IItemContainerProvider()
        {
            AbiToProjectionVftablePtr = ComWrappersSupport.AllocateVtableMemory(typeof(IItemContainerProvider), sizeof(IInspectable.Vftbl) + sizeof(IntPtr) * 1);
            *(IInspectable.Vftbl*)AbiToProjectionVftablePtr = IInspectable.Vftbl.AbiToProjectionVftable;
            ((delegate* unmanaged[Stdcall]<IntPtr, IntPtr, IntPtr, IntPtr, IntPtr*, int>*)AbiToProjectionVftablePtr)[6] = &Do_Abi_FindItemByProperty_0;
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvStdcall) })]
        private static unsafe int Do_Abi_FindItemByProperty_0(IntPtr thisPtr, IntPtr startAfter, IntPtr automationProperty, IntPtr value, IntPtr* result)
        {

            global::Microsoft.UI.Xaml.Automation.Provider.IRawElementProviderSimple __result = default;

            *result = default;

            try
            {
                __result = global::WinRT.ComWrappersSupport.FindObject<global::Microsoft.UI.Xaml.Automation.Provider.IItemContainerProvider>(thisPtr).FindItemByProperty(global::ABI.Microsoft.UI.Xaml.Automation.Provider.IRawElementProviderSimple.FromAbi(startAfter), global::ABI.Microsoft.UI.Xaml.Automation.AutomationProperty.FromAbi(automationProperty), MarshalInspectable<object>.FromAbi(value));
                *result = global::ABI.Microsoft.UI.Xaml.Automation.Provider.IRawElementProviderSimple.FromManaged(__result);

            }
            catch (Exception __exception__)
            {
                global::WinRT.ExceptionHelpers.SetErrorInfo(__exception__);
                return global::WinRT.ExceptionHelpers.GetHRForException(__exception__);
            }
            return 0;
        }

        unsafe global::Microsoft.UI.Xaml.Automation.Provider.IRawElementProviderSimple global::Microsoft.UI.Xaml.Automation.Provider.IItemContainerProvider.FindItemByProperty(global::Microsoft.UI.Xaml.Automation.Provider.IRawElementProviderSimple startAfter, global::Microsoft.UI.Xaml.Automation.AutomationProperty automationProperty, object value)
        {
            var _obj = ((IObjectReference)((IWinRTObject)this).GetObjectReferenceForType(typeof(global::Microsoft.UI.Xaml.Automation.Provider.IItemContainerProvider).TypeHandle));
            return global::ABI.Microsoft.UI.Xaml.Automation.Provider.IItemContainerProviderMethods.FindItemByProperty(_obj, startAfter, automationProperty, value);
        }
    }

    public static class IMultipleViewProviderMethods
    {


        public static unsafe int[] GetSupportedViews(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            int __retval_length = default;
            IntPtr __retval_data = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, int*, IntPtr*, int>**)ThisPtr)[7](ThisPtr, &__retval_length, &__retval_data));
                global::System.GC.KeepAlive(_obj);
                return MarshalBlittable<int>.FromAbiArray((__retval_length, __retval_data));
            }
            finally
            {
                MarshalBlittable<int>.DisposeAbiArray((__retval_length, __retval_data));
            }
        }

        public static unsafe string GetViewName(IObjectReference _obj, int viewId)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, int, IntPtr*, int>**)ThisPtr)[8](ThisPtr, viewId, &__retval));
                global::System.GC.KeepAlive(_obj);
                return MarshalString.FromAbi(__retval);
            }
            finally
            {
                MarshalString.DisposeAbi(__retval);
            }
        }

        public static unsafe void SetCurrentView(IObjectReference _obj, int viewId)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, int, int>**)ThisPtr)[9](ThisPtr, viewId));
            global::System.GC.KeepAlive(_obj);
        }
        public static unsafe int get_CurrentView(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            int __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, int*, int>**)ThisPtr)[6](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0x84, 0x54, 0xBE, 0x60, 0x8F, 0x3D, 0xFD, 0x51, 0xBE, 0xAB, 0x42, 0x34, 0x22, 0xEE, 0x1E, 0x3 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

        public static global::System.IntPtr AbiToProjectionVftablePtr => IMultipleViewProvider.AbiToProjectionVftablePtr;

    }
    [DynamicInterfaceCastableImplementation]
    [Guid("60BE5484-3D8F-51FD-BEAB-423422EE1E03")]
    internal unsafe interface IMultipleViewProvider : global::Microsoft.UI.Xaml.Automation.Provider.IMultipleViewProvider
    {

        public static readonly IntPtr AbiToProjectionVftablePtr;
        static unsafe IMultipleViewProvider()
        {
            AbiToProjectionVftablePtr = ComWrappersSupport.AllocateVtableMemory(typeof(IMultipleViewProvider), sizeof(IInspectable.Vftbl) + sizeof(IntPtr) * 4);
            *(IInspectable.Vftbl*)AbiToProjectionVftablePtr = IInspectable.Vftbl.AbiToProjectionVftable;
            ((delegate* unmanaged[Stdcall]<IntPtr, int*, int>*)AbiToProjectionVftablePtr)[6] = &Do_Abi_get_CurrentView_0;
            ((delegate* unmanaged[Stdcall]<IntPtr, int*, IntPtr*, int>*)AbiToProjectionVftablePtr)[7] = &Do_Abi_GetSupportedViews_1;
            ((delegate* unmanaged[Stdcall]<IntPtr, int, IntPtr*, int>*)AbiToProjectionVftablePtr)[8] = &Do_Abi_GetViewName_2;
            ((delegate* unmanaged[Stdcall]<IntPtr, int, int>*)AbiToProjectionVftablePtr)[9] = &Do_Abi_SetCurrentView_3;
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvStdcall) })]
        private static unsafe int Do_Abi_GetSupportedViews_1(IntPtr thisPtr, int* __resultSize, IntPtr* result)
        {

            int[] __result = default;

            *result = default;
            *__resultSize = default;

            try
            {
                __result = global::WinRT.ComWrappersSupport.FindObject<global::Microsoft.UI.Xaml.Automation.Provider.IMultipleViewProvider>(thisPtr).GetSupportedViews();
                (*__resultSize, *result) = MarshalBlittable<int>.FromManagedArray(__result);

            }
            catch (Exception __exception__)
            {
                global::WinRT.ExceptionHelpers.SetErrorInfo(__exception__);
                return global::WinRT.ExceptionHelpers.GetHRForException(__exception__);
            }
            return 0;
        }
        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvStdcall) })]
        private static unsafe int Do_Abi_GetViewName_2(IntPtr thisPtr, int viewId, IntPtr* result)
        {

            string __result = default;

            *result = default;

            try
            {
                __result = global::WinRT.ComWrappersSupport.FindObject<global::Microsoft.UI.Xaml.Automation.Provider.IMultipleViewProvider>(thisPtr).GetViewName(viewId);
                *result = MarshalString.FromManaged(__result);

            }
            catch (Exception __exception__)
            {
                global::WinRT.ExceptionHelpers.SetErrorInfo(__exception__);
                return global::WinRT.ExceptionHelpers.GetHRForException(__exception__);
            }
            return 0;
        }
        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvStdcall) })]
        private static unsafe int Do_Abi_SetCurrentView_3(IntPtr thisPtr, int viewId)
        {



            try
            {
                global::WinRT.ComWrappersSupport.FindObject<global::Microsoft.UI.Xaml.Automation.Provider.IMultipleViewProvider>(thisPtr).SetCurrentView(viewId);

            }
            catch (Exception __exception__)
            {
                global::WinRT.ExceptionHelpers.SetErrorInfo(__exception__);
                return global::WinRT.ExceptionHelpers.GetHRForException(__exception__);
            }
            return 0;
        }
        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvStdcall) })]
        private static unsafe int Do_Abi_get_CurrentView_0(IntPtr thisPtr, int* value)
        {

            int __value = default;

            *value = default;

            try
            {
                __value = global::WinRT.ComWrappersSupport.FindObject<global::Microsoft.UI.Xaml.Automation.Provider.IMultipleViewProvider>(thisPtr).CurrentView;
                *value = __value;

            }
            catch (Exception __exception__)
            {
                global::WinRT.ExceptionHelpers.SetErrorInfo(__exception__);
                return global::WinRT.ExceptionHelpers.GetHRForException(__exception__);
            }
            return 0;
        }

        unsafe int[] global::Microsoft.UI.Xaml.Automation.Provider.IMultipleViewProvider.GetSupportedViews()
        {
            var _obj = ((IObjectReference)((IWinRTObject)this).GetObjectReferenceForType(typeof(global::Microsoft.UI.Xaml.Automation.Provider.IMultipleViewProvider).TypeHandle));
            return global::ABI.Microsoft.UI.Xaml.Automation.Provider.IMultipleViewProviderMethods.GetSupportedViews(_obj);
        }

        unsafe string global::Microsoft.UI.Xaml.Automation.Provider.IMultipleViewProvider.GetViewName(int viewId)
        {
            var _obj = ((IObjectReference)((IWinRTObject)this).GetObjectReferenceForType(typeof(global::Microsoft.UI.Xaml.Automation.Provider.IMultipleViewProvider).TypeHandle));
            return global::ABI.Microsoft.UI.Xaml.Automation.Provider.IMultipleViewProviderMethods.GetViewName(_obj, viewId);
        }

        unsafe void global::Microsoft.UI.Xaml.Automation.Provider.IMultipleViewProvider.SetCurrentView(int viewId)
        {
            var _obj = ((IObjectReference)((IWinRTObject)this).GetObjectReferenceForType(typeof(global::Microsoft.UI.Xaml.Automation.Provider.IMultipleViewProvider).TypeHandle));
            global::ABI.Microsoft.UI.Xaml.Automation.Provider.IMultipleViewProviderMethods.SetCurrentView(_obj, viewId);
        }

        unsafe int global::Microsoft.UI.Xaml.Automation.Provider.IMultipleViewProvider.CurrentView
        {
            get
            {
                var _obj = ((IObjectReference)((IWinRTObject)this).GetObjectReferenceForType(typeof(global::Microsoft.UI.Xaml.Automation.Provider.IMultipleViewProvider).TypeHandle));
                return global::ABI.Microsoft.UI.Xaml.Automation.Provider.IMultipleViewProviderMethods.get_CurrentView(_obj);
            }
        }
    }

    public static class IObjectModelProviderMethods
    {


        public static unsafe object GetUnderlyingObjectModel(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[6](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return MarshalInspectable<object>.FromAbi(__retval);
            }
            finally
            {
                MarshalInspectable<object>.DisposeAbi(__retval);
            }
        }


        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0xD0, 0x3E, 0x95, 0x92, 0xD8, 0x4B, 0x24, 0x56, 0x8E, 0x3D, 0x78, 0xD4, 0x5F, 0xDE, 0x9C, 0xF2 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

        public static global::System.IntPtr AbiToProjectionVftablePtr => IObjectModelProvider.AbiToProjectionVftablePtr;

    }
    [DynamicInterfaceCastableImplementation]
    [Guid("92953ED0-4BD8-5624-8E3D-78D45FDE9CF2")]
    internal unsafe interface IObjectModelProvider : global::Microsoft.UI.Xaml.Automation.Provider.IObjectModelProvider
    {

        public static readonly IntPtr AbiToProjectionVftablePtr;
        static unsafe IObjectModelProvider()
        {
            AbiToProjectionVftablePtr = ComWrappersSupport.AllocateVtableMemory(typeof(IObjectModelProvider), sizeof(IInspectable.Vftbl) + sizeof(IntPtr) * 1);
            *(IInspectable.Vftbl*)AbiToProjectionVftablePtr = IInspectable.Vftbl.AbiToProjectionVftable;
            ((delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>*)AbiToProjectionVftablePtr)[6] = &Do_Abi_GetUnderlyingObjectModel_0;
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvStdcall) })]
        private static unsafe int Do_Abi_GetUnderlyingObjectModel_0(IntPtr thisPtr, IntPtr* result)
        {

            object __result = default;

            *result = default;

            try
            {
                __result = global::WinRT.ComWrappersSupport.FindObject<global::Microsoft.UI.Xaml.Automation.Provider.IObjectModelProvider>(thisPtr).GetUnderlyingObjectModel();
                *result = MarshalInspectable<object>.FromManaged(__result);

            }
            catch (Exception __exception__)
            {
                global::WinRT.ExceptionHelpers.SetErrorInfo(__exception__);
                return global::WinRT.ExceptionHelpers.GetHRForException(__exception__);
            }
            return 0;
        }

        unsafe object global::Microsoft.UI.Xaml.Automation.Provider.IObjectModelProvider.GetUnderlyingObjectModel()
        {
            var _obj = ((IObjectReference)((IWinRTObject)this).GetObjectReferenceForType(typeof(global::Microsoft.UI.Xaml.Automation.Provider.IObjectModelProvider).TypeHandle));
            return global::ABI.Microsoft.UI.Xaml.Automation.Provider.IObjectModelProviderMethods.GetUnderlyingObjectModel(_obj);
        }
    }

    public static class IRangeValueProviderMethods
    {


        public static unsafe void SetValue(IObjectReference _obj, double value)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, double, int>**)ThisPtr)[12](ThisPtr, value));
            global::System.GC.KeepAlive(_obj);
        }
        public static unsafe bool get_IsReadOnly(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            byte __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, byte*, int>**)ThisPtr)[6](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval != 0;
        }

        public static unsafe double get_LargeChange(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            double __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, double*, int>**)ThisPtr)[7](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }

        public static unsafe double get_Maximum(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            double __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, double*, int>**)ThisPtr)[8](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }

        public static unsafe double get_Minimum(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            double __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, double*, int>**)ThisPtr)[9](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }

        public static unsafe double get_SmallChange(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            double __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, double*, int>**)ThisPtr)[10](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }

        public static unsafe double get_Value(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            double __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, double*, int>**)ThisPtr)[11](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0x14, 0xE4, 0x9A, 0x72, 0x8F, 0x1E, 0x20, 0x50, 0x82, 0xBB, 0xBB, 0x57, 0x4D, 0x14, 0x5F, 0xD8 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

        public static global::System.IntPtr AbiToProjectionVftablePtr => IRangeValueProvider.AbiToProjectionVftablePtr;

    }
    [DynamicInterfaceCastableImplementation]
    [Guid("729AE414-1E8F-5020-82BB-BB574D145FD8")]
    internal unsafe interface IRangeValueProvider : global::Microsoft.UI.Xaml.Automation.Provider.IRangeValueProvider
    {

        public static readonly IntPtr AbiToProjectionVftablePtr;
        static unsafe IRangeValueProvider()
        {
            AbiToProjectionVftablePtr = ComWrappersSupport.AllocateVtableMemory(typeof(IRangeValueProvider), sizeof(IInspectable.Vftbl) + sizeof(IntPtr) * 7);
            *(IInspectable.Vftbl*)AbiToProjectionVftablePtr = IInspectable.Vftbl.AbiToProjectionVftable;
            ((delegate* unmanaged[Stdcall]<IntPtr, byte*, int>*)AbiToProjectionVftablePtr)[6] = &Do_Abi_get_IsReadOnly_0;
            ((delegate* unmanaged[Stdcall]<IntPtr, double*, int>*)AbiToProjectionVftablePtr)[7] = &Do_Abi_get_LargeChange_1;
            ((delegate* unmanaged[Stdcall]<IntPtr, double*, int>*)AbiToProjectionVftablePtr)[8] = &Do_Abi_get_Maximum_2;
            ((delegate* unmanaged[Stdcall]<IntPtr, double*, int>*)AbiToProjectionVftablePtr)[9] = &Do_Abi_get_Minimum_3;
            ((delegate* unmanaged[Stdcall]<IntPtr, double*, int>*)AbiToProjectionVftablePtr)[10] = &Do_Abi_get_SmallChange_4;
            ((delegate* unmanaged[Stdcall]<IntPtr, double*, int>*)AbiToProjectionVftablePtr)[11] = &Do_Abi_get_Value_5;
            ((delegate* unmanaged[Stdcall]<IntPtr, double, int>*)AbiToProjectionVftablePtr)[12] = &Do_Abi_SetValue_6;
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvStdcall) })]
        private static unsafe int Do_Abi_SetValue_6(IntPtr thisPtr, double value)
        {



            try
            {
                global::WinRT.ComWrappersSupport.FindObject<global::Microsoft.UI.Xaml.Automation.Provider.IRangeValueProvider>(thisPtr).SetValue(value);

            }
            catch (Exception __exception__)
            {
                global::WinRT.ExceptionHelpers.SetErrorInfo(__exception__);
                return global::WinRT.ExceptionHelpers.GetHRForException(__exception__);
            }
            return 0;
        }
        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvStdcall) })]
        private static unsafe int Do_Abi_get_IsReadOnly_0(IntPtr thisPtr, byte* value)
        {

            bool __value = default;

            *value = default;

            try
            {
                __value = global::WinRT.ComWrappersSupport.FindObject<global::Microsoft.UI.Xaml.Automation.Provider.IRangeValueProvider>(thisPtr).IsReadOnly;
                *value = (byte)(__value ? 1 : 0);

            }
            catch (Exception __exception__)
            {
                global::WinRT.ExceptionHelpers.SetErrorInfo(__exception__);
                return global::WinRT.ExceptionHelpers.GetHRForException(__exception__);
            }
            return 0;
        }
        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvStdcall) })]
        private static unsafe int Do_Abi_get_LargeChange_1(IntPtr thisPtr, double* value)
        {

            double __value = default;

            *value = default;

            try
            {
                __value = global::WinRT.ComWrappersSupport.FindObject<global::Microsoft.UI.Xaml.Automation.Provider.IRangeValueProvider>(thisPtr).LargeChange;
                *value = __value;

            }
            catch (Exception __exception__)
            {
                global::WinRT.ExceptionHelpers.SetErrorInfo(__exception__);
                return global::WinRT.ExceptionHelpers.GetHRForException(__exception__);
            }
            return 0;
        }
        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvStdcall) })]
        private static unsafe int Do_Abi_get_Maximum_2(IntPtr thisPtr, double* value)
        {

            double __value = default;

            *value = default;

            try
            {
                __value = global::WinRT.ComWrappersSupport.FindObject<global::Microsoft.UI.Xaml.Automation.Provider.IRangeValueProvider>(thisPtr).Maximum;
                *value = __value;

            }
            catch (Exception __exception__)
            {
                global::WinRT.ExceptionHelpers.SetErrorInfo(__exception__);
                return global::WinRT.ExceptionHelpers.GetHRForException(__exception__);
            }
            return 0;
        }
        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvStdcall) })]
        private static unsafe int Do_Abi_get_Minimum_3(IntPtr thisPtr, double* value)
        {

            double __value = default;

            *value = default;

            try
            {
                __value = global::WinRT.ComWrappersSupport.FindObject<global::Microsoft.UI.Xaml.Automation.Provider.IRangeValueProvider>(thisPtr).Minimum;
                *value = __value;

            }
            catch (Exception __exception__)
            {
                global::WinRT.ExceptionHelpers.SetErrorInfo(__exception__);
                return global::WinRT.ExceptionHelpers.GetHRForException(__exception__);
            }
            return 0;
        }
        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvStdcall) })]
        private static unsafe int Do_Abi_get_SmallChange_4(IntPtr thisPtr, double* value)
        {

            double __value = default;

            *value = default;

            try
            {
                __value = global::WinRT.ComWrappersSupport.FindObject<global::Microsoft.UI.Xaml.Automation.Provider.IRangeValueProvider>(thisPtr).SmallChange;
                *value = __value;

            }
            catch (Exception __exception__)
            {
                global::WinRT.ExceptionHelpers.SetErrorInfo(__exception__);
                return global::WinRT.ExceptionHelpers.GetHRForException(__exception__);
            }
            return 0;
        }
        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvStdcall) })]
        private static unsafe int Do_Abi_get_Value_5(IntPtr thisPtr, double* value)
        {

            double __value = default;

            *value = default;

            try
            {
                __value = global::WinRT.ComWrappersSupport.FindObject<global::Microsoft.UI.Xaml.Automation.Provider.IRangeValueProvider>(thisPtr).Value;
                *value = __value;

            }
            catch (Exception __exception__)
            {
                global::WinRT.ExceptionHelpers.SetErrorInfo(__exception__);
                return global::WinRT.ExceptionHelpers.GetHRForException(__exception__);
            }
            return 0;
        }

        unsafe void global::Microsoft.UI.Xaml.Automation.Provider.IRangeValueProvider.SetValue(double value)
        {
            var _obj = ((IObjectReference)((IWinRTObject)this).GetObjectReferenceForType(typeof(global::Microsoft.UI.Xaml.Automation.Provider.IRangeValueProvider).TypeHandle));
            global::ABI.Microsoft.UI.Xaml.Automation.Provider.IRangeValueProviderMethods.SetValue(_obj, value);
        }

        unsafe bool global::Microsoft.UI.Xaml.Automation.Provider.IRangeValueProvider.IsReadOnly
        {
            get
            {
                var _obj = ((IObjectReference)((IWinRTObject)this).GetObjectReferenceForType(typeof(global::Microsoft.UI.Xaml.Automation.Provider.IRangeValueProvider).TypeHandle));
                return global::ABI.Microsoft.UI.Xaml.Automation.Provider.IRangeValueProviderMethods.get_IsReadOnly(_obj);
            }
        }

        unsafe double global::Microsoft.UI.Xaml.Automation.Provider.IRangeValueProvider.LargeChange
        {
            get
            {
                var _obj = ((IObjectReference)((IWinRTObject)this).GetObjectReferenceForType(typeof(global::Microsoft.UI.Xaml.Automation.Provider.IRangeValueProvider).TypeHandle));
                return global::ABI.Microsoft.UI.Xaml.Automation.Provider.IRangeValueProviderMethods.get_LargeChange(_obj);
            }
        }

        unsafe double global::Microsoft.UI.Xaml.Automation.Provider.IRangeValueProvider.Maximum
        {
            get
            {
                var _obj = ((IObjectReference)((IWinRTObject)this).GetObjectReferenceForType(typeof(global::Microsoft.UI.Xaml.Automation.Provider.IRangeValueProvider).TypeHandle));
                return global::ABI.Microsoft.UI.Xaml.Automation.Provider.IRangeValueProviderMethods.get_Maximum(_obj);
            }
        }

        unsafe double global::Microsoft.UI.Xaml.Automation.Provider.IRangeValueProvider.Minimum
        {
            get
            {
                var _obj = ((IObjectReference)((IWinRTObject)this).GetObjectReferenceForType(typeof(global::Microsoft.UI.Xaml.Automation.Provider.IRangeValueProvider).TypeHandle));
                return global::ABI.Microsoft.UI.Xaml.Automation.Provider.IRangeValueProviderMethods.get_Minimum(_obj);
            }
        }

        unsafe double global::Microsoft.UI.Xaml.Automation.Provider.IRangeValueProvider.SmallChange
        {
            get
            {
                var _obj = ((IObjectReference)((IWinRTObject)this).GetObjectReferenceForType(typeof(global::Microsoft.UI.Xaml.Automation.Provider.IRangeValueProvider).TypeHandle));
                return global::ABI.Microsoft.UI.Xaml.Automation.Provider.IRangeValueProviderMethods.get_SmallChange(_obj);
            }
        }

        unsafe double global::Microsoft.UI.Xaml.Automation.Provider.IRangeValueProvider.Value
        {
            get
            {
                var _obj = ((IObjectReference)((IWinRTObject)this).GetObjectReferenceForType(typeof(global::Microsoft.UI.Xaml.Automation.Provider.IRangeValueProvider).TypeHandle));
                return global::ABI.Microsoft.UI.Xaml.Automation.Provider.IRangeValueProviderMethods.get_Value(_obj);
            }
        }
    }

    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    public struct IRawElementProviderSimple
    {

        public static IObjectReference CreateMarshaler(global::Microsoft.UI.Xaml.Automation.Provider.IRawElementProviderSimple obj) => obj is null ? null : MarshalInspectable<global::Microsoft.UI.Xaml.Automation.Provider.IRawElementProviderSimple>.CreateMarshaler<IUnknownVftbl>(obj, global::ABI.Microsoft.UI.Xaml.Automation.Provider.IIRawElementProviderSimpleMethods.IID);
        public static ObjectReferenceValue CreateMarshaler2(global::Microsoft.UI.Xaml.Automation.Provider.IRawElementProviderSimple obj) => MarshalInspectable<object>.CreateMarshaler2(obj, global::ABI.Microsoft.UI.Xaml.Automation.Provider.IIRawElementProviderSimpleMethods.IID);
        public static IntPtr GetAbi(IObjectReference value) => value is null ? IntPtr.Zero : MarshalInterfaceHelper<object>.GetAbi(value);
        public static global::Microsoft.UI.Xaml.Automation.Provider.IRawElementProviderSimple FromAbi(IntPtr thisPtr) => global::Microsoft.UI.Xaml.Automation.Provider.IRawElementProviderSimple.FromAbi(thisPtr);
        public static IntPtr FromManaged(global::Microsoft.UI.Xaml.Automation.Provider.IRawElementProviderSimple obj) => obj is null ? IntPtr.Zero : CreateMarshaler2(obj).Detach();
        public static unsafe MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Provider.IRawElementProviderSimple>.MarshalerArray CreateMarshalerArray(global::Microsoft.UI.Xaml.Automation.Provider.IRawElementProviderSimple[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Provider.IRawElementProviderSimple>.CreateMarshalerArray2(array, (o) => CreateMarshaler2(o));
        public static (int length, IntPtr data) GetAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Provider.IRawElementProviderSimple>.GetAbiArray(box);
        public static unsafe global::Microsoft.UI.Xaml.Automation.Provider.IRawElementProviderSimple[] FromAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Provider.IRawElementProviderSimple>.FromAbiArray(box, FromAbi);
        public static void CopyAbiArray(global::Microsoft.UI.Xaml.Automation.Provider.IRawElementProviderSimple[] array, object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Provider.IRawElementProviderSimple>.CopyAbiArray(array, box, FromAbi);
        public static (int length, IntPtr data) FromManagedArray(global::Microsoft.UI.Xaml.Automation.Provider.IRawElementProviderSimple[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Provider.IRawElementProviderSimple>.FromManagedArray(array, (o) => FromManaged(o));
        public static void DisposeMarshaler(IObjectReference value) => MarshalInspectable<object>.DisposeMarshaler(value);
        public static void DisposeMarshalerArray(MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Provider.IRawElementProviderSimple>.MarshalerArray array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Automation.Provider.IRawElementProviderSimple>.DisposeMarshalerArray(array);
        public static void DisposeAbi(IntPtr abi) => MarshalInspectable<object>.DisposeAbi(abi);
        public static unsafe void DisposeAbiArray(object box) => MarshalInspectable<object>.DisposeAbiArray(box);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    internal sealed class IRawElementProviderSimpleRcwFactoryAttribute : global::WinRT.WinRTImplementationTypeRcwFactoryAttribute
    {
        public override object CreateInstance(global::WinRT.IInspectable inspectable)
            => new global::Microsoft.UI.Xaml.Automation.Provider.IRawElementProviderSimple(inspectable.ObjRef);
    }
    public static class IScrollItemProviderMethods
    {


        public static unsafe void ScrollIntoView(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, int>**)ThisPtr)[6](ThisPtr));
            global::System.GC.KeepAlive(_obj);
        }


        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0xEB, 0xB8, 0x6F, 0x8A, 0xF1, 0xE5, 0xEB, 0x58, 0x8E, 0x72, 0x8B, 0x95, 0xF2, 0x36, 0xFC, 0x47 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

        public static global::System.IntPtr AbiToProjectionVftablePtr => IScrollItemProvider.AbiToProjectionVftablePtr;

    }
    [DynamicInterfaceCastableImplementation]
    [Guid("8A6FB8EB-E5F1-58EB-8E72-8B95F236FC47")]
    internal unsafe interface IScrollItemProvider : global::Microsoft.UI.Xaml.Automation.Provider.IScrollItemProvider
    {

        public static readonly IntPtr AbiToProjectionVftablePtr;
        static unsafe IScrollItemProvider()
        {
            AbiToProjectionVftablePtr = ComWrappersSupport.AllocateVtableMemory(typeof(IScrollItemProvider), sizeof(IInspectable.Vftbl) + sizeof(IntPtr) * 1);
            *(IInspectable.Vftbl*)AbiToProjectionVftablePtr = IInspectable.Vftbl.AbiToProjectionVftable;
            ((delegate* unmanaged[Stdcall]<IntPtr, int>*)AbiToProjectionVftablePtr)[6] = &Do_Abi_ScrollIntoView_0;
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvStdcall) })]
        private static unsafe int Do_Abi_ScrollIntoView_0(IntPtr thisPtr)
        {



            try
            {
                global::WinRT.ComWrappersSupport.FindObject<global::Microsoft.UI.Xaml.Automation.Provider.IScrollItemProvider>(thisPtr).ScrollIntoView();

            }
            catch (Exception __exception__)
            {
                global::WinRT.ExceptionHelpers.SetErrorInfo(__exception__);
                return global::WinRT.ExceptionHelpers.GetHRForException(__exception__);
            }
            return 0;
        }

        unsafe void global::Microsoft.UI.Xaml.Automation.Provider.IScrollItemProvider.ScrollIntoView()
        {
            var _obj = ((IObjectReference)((IWinRTObject)this).GetObjectReferenceForType(typeof(global::Microsoft.UI.Xaml.Automation.Provider.IScrollItemProvider).TypeHandle));
            global::ABI.Microsoft.UI.Xaml.Automation.Provider.IScrollItemProviderMethods.ScrollIntoView(_obj);
        }
    }

    public static class IScrollProviderMethods
    {


        public static unsafe void Scroll(IObjectReference _obj, global::Microsoft.UI.Xaml.Automation.ScrollAmount horizontalAmount, global::Microsoft.UI.Xaml.Automation.ScrollAmount verticalAmount)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::Microsoft.UI.Xaml.Automation.ScrollAmount, global::Microsoft.UI.Xaml.Automation.ScrollAmount, int>**)ThisPtr)[12](ThisPtr, horizontalAmount, verticalAmount));
            global::System.GC.KeepAlive(_obj);
        }

        public static unsafe void SetScrollPercent(IObjectReference _obj, double horizontalPercent, double verticalPercent)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, double, double, int>**)ThisPtr)[13](ThisPtr, horizontalPercent, verticalPercent));
            global::System.GC.KeepAlive(_obj);
        }
        public static unsafe double get_HorizontalScrollPercent(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            double __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, double*, int>**)ThisPtr)[7](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }

        public static unsafe double get_HorizontalViewSize(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            double __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, double*, int>**)ThisPtr)[8](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }

        public static unsafe bool get_HorizontallyScrollable(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            byte __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, byte*, int>**)ThisPtr)[6](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval != 0;
        }

        public static unsafe double get_VerticalScrollPercent(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            double __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, double*, int>**)ThisPtr)[10](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }

        public static unsafe double get_VerticalViewSize(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            double __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, double*, int>**)ThisPtr)[11](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }

        public static unsafe bool get_VerticallyScrollable(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            byte __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, byte*, int>**)ThisPtr)[9](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval != 0;
        }



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0xF3, 0x5A, 0x2E, 0x7E, 0x50, 0xFF, 0x65, 0x53, 0xBC, 0xFE, 0xEF, 0x42, 0x4B, 0x2F, 0xD5, 0x90 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

        public static global::System.IntPtr AbiToProjectionVftablePtr => IScrollProvider.AbiToProjectionVftablePtr;

    }
    [DynamicInterfaceCastableImplementation]
    [Guid("7E2E5AF3-FF50-5365-BCFE-EF424B2FD590")]
    internal unsafe interface IScrollProvider : global::Microsoft.UI.Xaml.Automation.Provider.IScrollProvider
    {

        public static readonly IntPtr AbiToProjectionVftablePtr;
        static unsafe IScrollProvider()
        {
            AbiToProjectionVftablePtr = ComWrappersSupport.AllocateVtableMemory(typeof(IScrollProvider), sizeof(IInspectable.Vftbl) + sizeof(IntPtr) * 8);
            *(IInspectable.Vftbl*)AbiToProjectionVftablePtr = IInspectable.Vftbl.AbiToProjectionVftable;
            ((delegate* unmanaged[Stdcall]<IntPtr, byte*, int>*)AbiToProjectionVftablePtr)[6] = &Do_Abi_get_HorizontallyScrollable_0;
            ((delegate* unmanaged[Stdcall]<IntPtr, double*, int>*)AbiToProjectionVftablePtr)[7] = &Do_Abi_get_HorizontalScrollPercent_1;
            ((delegate* unmanaged[Stdcall]<IntPtr, double*, int>*)AbiToProjectionVftablePtr)[8] = &Do_Abi_get_HorizontalViewSize_2;
            ((delegate* unmanaged[Stdcall]<IntPtr, byte*, int>*)AbiToProjectionVftablePtr)[9] = &Do_Abi_get_VerticallyScrollable_3;
            ((delegate* unmanaged[Stdcall]<IntPtr, double*, int>*)AbiToProjectionVftablePtr)[10] = &Do_Abi_get_VerticalScrollPercent_4;
            ((delegate* unmanaged[Stdcall]<IntPtr, double*, int>*)AbiToProjectionVftablePtr)[11] = &Do_Abi_get_VerticalViewSize_5;
            ((delegate* unmanaged[Stdcall]<IntPtr, global::Microsoft.UI.Xaml.Automation.ScrollAmount, global::Microsoft.UI.Xaml.Automation.ScrollAmount, int>*)AbiToProjectionVftablePtr)[12] = &Do_Abi_Scroll_6;
            ((delegate* unmanaged[Stdcall]<IntPtr, double, double, int>*)AbiToProjectionVftablePtr)[13] = &Do_Abi_SetScrollPercent_7;
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvStdcall) })]
        private static unsafe int Do_Abi_Scroll_6(IntPtr thisPtr, global::Microsoft.UI.Xaml.Automation.ScrollAmount horizontalAmount, global::Microsoft.UI.Xaml.Automation.ScrollAmount verticalAmount)
        {



            try
            {
                global::WinRT.ComWrappersSupport.FindObject<global::Microsoft.UI.Xaml.Automation.Provider.IScrollProvider>(thisPtr).Scroll(horizontalAmount, verticalAmount);

            }
            catch (Exception __exception__)
            {
                global::WinRT.ExceptionHelpers.SetErrorInfo(__exception__);
                return global::WinRT.ExceptionHelpers.GetHRForException(__exception__);
            }
            return 0;
        }
        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvStdcall) })]
        private static unsafe int Do_Abi_SetScrollPercent_7(IntPtr thisPtr, double horizontalPercent, double verticalPercent)
        {



            try
            {
                global::WinRT.ComWrappersSupport.FindObject<global::Microsoft.UI.Xaml.Automation.Provider.IScrollProvider>(thisPtr).SetScrollPercent(horizontalPercent, verticalPercent);

            }
            catch (Exception __exception__)
            {
                global::WinRT.ExceptionHelpers.SetErrorInfo(__exception__);
                return global::WinRT.ExceptionHelpers.GetHRForException(__exception__);
            }
            return 0;
        }
        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvStdcall) })]
        private static unsafe int Do_Abi_get_HorizontalScrollPercent_1(IntPtr thisPtr, double* value)
        {

            double __value = default;

            *value = default;

            try
            {
                __value = global::WinRT.ComWrappersSupport.FindObject<global::Microsoft.UI.Xaml.Automation.Provider.IScrollProvider>(thisPtr).HorizontalScrollPercent;
                *value = __value;

            }
            catch (Exception __exception__)
            {
                global::WinRT.ExceptionHelpers.SetErrorInfo(__exception__);
                return global::WinRT.ExceptionHelpers.GetHRForException(__exception__);
            }
            return 0;
        }
        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvStdcall) })]
        private static unsafe int Do_Abi_get_HorizontalViewSize_2(IntPtr thisPtr, double* value)
        {

            double __value = default;

            *value = default;

            try
            {
                __value = global::WinRT.ComWrappersSupport.FindObject<global::Microsoft.UI.Xaml.Automation.Provider.IScrollProvider>(thisPtr).HorizontalViewSize;
                *value = __value;

            }
            catch (Exception __exception__)
            {
                global::WinRT.ExceptionHelpers.SetErrorInfo(__exception__);
                return global::WinRT.ExceptionHelpers.GetHRForException(__exception__);
            }
            return 0;
        }
        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvStdcall) })]
        private static unsafe int Do_Abi_get_HorizontallyScrollable_0(IntPtr thisPtr, byte* value)
        {

            bool __value = default;

            *value = default;

            try
            {
                __value = global::WinRT.ComWrappersSupport.FindObject<global::Microsoft.UI.Xaml.Automation.Provider.IScrollProvider>(thisPtr).HorizontallyScrollable;
                *value = (byte)(__value ? 1 : 0);

            }
            catch (Exception __exception__)
            {
                global::WinRT.ExceptionHelpers.SetErrorInfo(__exception__);
                return global::WinRT.ExceptionHelpers.GetHRForException(__exception__);
            }
            return 0;
        }
        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvStdcall) })]
        private static unsafe int Do_Abi_get_VerticalScrollPercent_4(IntPtr thisPtr, double* value)
        {

            double __value = default;

            *value = default;

            try
            {
                __value = global::WinRT.ComWrappersSupport.FindObject<global::Microsoft.UI.Xaml.Automation.Provider.IScrollProvider>(thisPtr).VerticalScrollPercent;
                *value = __value;

            }
            catch (Exception __exception__)
            {
                global::WinRT.ExceptionHelpers.SetErrorInfo(__exception__);
                return global::WinRT.ExceptionHelpers.GetHRForException(__exception__);
            }
            return 0;
        }
        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvStdcall) })]
        private static unsafe int Do_Abi_get_VerticalViewSize_5(IntPtr thisPtr, double* value)
        {

            double __value = default;

            *value = default;

            try
            {
                __value = global::WinRT.ComWrappersSupport.FindObject<global::Microsoft.UI.Xaml.Automation.Provider.IScrollProvider>(thisPtr).VerticalViewSize;
                *value = __value;

            }
            catch (Exception __exception__)
            {
                global::WinRT.ExceptionHelpers.SetErrorInfo(__exception__);
                return global::WinRT.ExceptionHelpers.GetHRForException(__exception__);
            }
            return 0;
        }
        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvStdcall) })]
        private static unsafe int Do_Abi_get_VerticallyScrollable_3(IntPtr thisPtr, byte* value)
        {

            bool __value = default;

            *value = default;

            try
            {
                __value = global::WinRT.ComWrappersSupport.FindObject<global::Microsoft.UI.Xaml.Automation.Provider.IScrollProvider>(thisPtr).VerticallyScrollable;
                *value = (byte)(__value ? 1 : 0);

            }
            catch (Exception __exception__)
            {
                global::WinRT.ExceptionHelpers.SetErrorInfo(__exception__);
                return global::WinRT.ExceptionHelpers.GetHRForException(__exception__);
            }
            return 0;
        }

        unsafe void global::Microsoft.UI.Xaml.Automation.Provider.IScrollProvider.Scroll(global::Microsoft.UI.Xaml.Automation.ScrollAmount horizontalAmount, global::Microsoft.UI.Xaml.Automation.ScrollAmount verticalAmount)
        {
            var _obj = ((IObjectReference)((IWinRTObject)this).GetObjectReferenceForType(typeof(global::Microsoft.UI.Xaml.Automation.Provider.IScrollProvider).TypeHandle));
            global::ABI.Microsoft.UI.Xaml.Automation.Provider.IScrollProviderMethods.Scroll(_obj, horizontalAmount, verticalAmount);
        }

        unsafe void global::Microsoft.UI.Xaml.Automation.Provider.IScrollProvider.SetScrollPercent(double horizontalPercent, double verticalPercent)
        {
            var _obj = ((IObjectReference)((IWinRTObject)this).GetObjectReferenceForType(typeof(global::Microsoft.UI.Xaml.Automation.Provider.IScrollProvider).TypeHandle));
            global::ABI.Microsoft.UI.Xaml.Automation.Provider.IScrollProviderMethods.SetScrollPercent(_obj, horizontalPercent, verticalPercent);
        }

        unsafe double global::Microsoft.UI.Xaml.Automation.Provider.IScrollProvider.HorizontalScrollPercent
        {
            get
            {
                var _obj = ((IObjectReference)((IWinRTObject)this).GetObjectReferenceForType(typeof(global::Microsoft.UI.Xaml.Automation.Provider.IScrollProvider).TypeHandle));
                return global::ABI.Microsoft.UI.Xaml.Automation.Provider.IScrollProviderMethods.get_HorizontalScrollPercent(_obj);
            }
        }

        unsafe double global::Microsoft.UI.Xaml.Automation.Provider.IScrollProvider.HorizontalViewSize
        {
            get
            {
                var _obj = ((IObjectReference)((IWinRTObject)this).GetObjectReferenceForType(typeof(global::Microsoft.UI.Xaml.Automation.Provider.IScrollProvider).TypeHandle));
                return global::ABI.Microsoft.UI.Xaml.Automation.Provider.IScrollProviderMethods.get_HorizontalViewSize(_obj);
            }
        }

        unsafe bool global::Microsoft.UI.Xaml.Automation.Provider.IScrollProvider.HorizontallyScrollable
        {
            get
            {
                var _obj = ((IObjectReference)((IWinRTObject)this).GetObjectReferenceForType(typeof(global::Microsoft.UI.Xaml.Automation.Provider.IScrollProvider).TypeHandle));
                return global::ABI.Microsoft.UI.Xaml.Automation.Provider.IScrollProviderMethods.get_HorizontallyScrollable(_obj);
            }
        }

        unsafe double global::Microsoft.UI.Xaml.Automation.Provider.IScrollProvider.VerticalScrollPercent
        {
            get
            {
                var _obj = ((IObjectReference)((IWinRTObject)this).GetObjectReferenceForType(typeof(global::Microsoft.UI.Xaml.Automation.Provider.IScrollProvider).TypeHandle));
                return global::ABI.Microsoft.UI.Xaml.Automation.Provider.IScrollProviderMethods.get_VerticalScrollPercent(_obj);
            }
        }

        unsafe double global::Microsoft.UI.Xaml.Automation.Provider.IScrollProvider.VerticalViewSize
        {
            get
            {
                var _obj = ((IObjectReference)((IWinRTObject)this).GetObjectReferenceForType(typeof(global::Microsoft.UI.Xaml.Automation.Provider.IScrollProvider).TypeHandle));
                return global::ABI.Microsoft.UI.Xaml.Automation.Provider.IScrollProviderMethods.get_VerticalViewSize(_obj);
            }
        }

        unsafe bool global::Microsoft.UI.Xaml.Automation.Provider.IScrollProvider.VerticallyScrollable
        {
            get
            {
                var _obj = ((IObjectReference)((IWinRTObject)this).GetObjectReferenceForType(typeof(global::Microsoft.UI.Xaml.Automation.Provider.IScrollProvider).TypeHandle));
                return global::ABI.Microsoft.UI.Xaml.Automation.Provider.IScrollProviderMethods.get_VerticallyScrollable(_obj);
            }
        }
    }

    public static class ISelectionItemProviderMethods
    {


        public static unsafe void AddToSelection(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, int>**)ThisPtr)[8](ThisPtr));
            global::System.GC.KeepAlive(_obj);
        }

        public static unsafe void RemoveFromSelection(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, int>**)ThisPtr)[9](ThisPtr));
            global::System.GC.KeepAlive(_obj);
        }

        public static unsafe void Select(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, int>**)ThisPtr)[10](ThisPtr));
            global::System.GC.KeepAlive(_obj);
        }
        public static unsafe bool get_IsSelected(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            byte __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, byte*, int>**)ThisPtr)[6](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval != 0;
        }

        public static unsafe global::Microsoft.UI.Xaml.Automation.Provider.IRawElementProviderSimple get_SelectionContainer(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[7](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Xaml.Automation.Provider.IRawElementProviderSimple.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.UI.Xaml.Automation.Provider.IRawElementProviderSimple.DisposeAbi(__retval);
            }
        }



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0x81, 0xDD, 0xDF, 0xC9, 0xAC, 0xD4, 0x31, 0x5D, 0xBE, 0x7F, 0x24, 0xFA, 0xB1, 0x60, 0x60, 0xE4 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

        public static global::System.IntPtr AbiToProjectionVftablePtr => ISelectionItemProvider.AbiToProjectionVftablePtr;

    }
    [DynamicInterfaceCastableImplementation]
    [Guid("C9DFDD81-D4AC-5D31-BE7F-24FAB16060E4")]
    internal unsafe interface ISelectionItemProvider : global::Microsoft.UI.Xaml.Automation.Provider.ISelectionItemProvider
    {

        public static readonly IntPtr AbiToProjectionVftablePtr;
        static unsafe ISelectionItemProvider()
        {
            AbiToProjectionVftablePtr = ComWrappersSupport.AllocateVtableMemory(typeof(ISelectionItemProvider), sizeof(IInspectable.Vftbl) + sizeof(IntPtr) * 5);
            *(IInspectable.Vftbl*)AbiToProjectionVftablePtr = IInspectable.Vftbl.AbiToProjectionVftable;
            ((delegate* unmanaged[Stdcall]<IntPtr, byte*, int>*)AbiToProjectionVftablePtr)[6] = &Do_Abi_get_IsSelected_0;
            ((delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>*)AbiToProjectionVftablePtr)[7] = &Do_Abi_get_SelectionContainer_1;
            ((delegate* unmanaged[Stdcall]<IntPtr, int>*)AbiToProjectionVftablePtr)[8] = &Do_Abi_AddToSelection_2;
            ((delegate* unmanaged[Stdcall]<IntPtr, int>*)AbiToProjectionVftablePtr)[9] = &Do_Abi_RemoveFromSelection_3;
            ((delegate* unmanaged[Stdcall]<IntPtr, int>*)AbiToProjectionVftablePtr)[10] = &Do_Abi_Select_4;
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvStdcall) })]
        private static unsafe int Do_Abi_AddToSelection_2(IntPtr thisPtr)
        {



            try
            {
                global::WinRT.ComWrappersSupport.FindObject<global::Microsoft.UI.Xaml.Automation.Provider.ISelectionItemProvider>(thisPtr).AddToSelection();

            }
            catch (Exception __exception__)
            {
                global::WinRT.ExceptionHelpers.SetErrorInfo(__exception__);
                return global::WinRT.ExceptionHelpers.GetHRForException(__exception__);
            }
            return 0;
        }
        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvStdcall) })]
        private static unsafe int Do_Abi_RemoveFromSelection_3(IntPtr thisPtr)
        {



            try
            {
                global::WinRT.ComWrappersSupport.FindObject<global::Microsoft.UI.Xaml.Automation.Provider.ISelectionItemProvider>(thisPtr).RemoveFromSelection();

            }
            catch (Exception __exception__)
            {
                global::WinRT.ExceptionHelpers.SetErrorInfo(__exception__);
                return global::WinRT.ExceptionHelpers.GetHRForException(__exception__);
            }
            return 0;
        }
        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvStdcall) })]
        private static unsafe int Do_Abi_Select_4(IntPtr thisPtr)
        {



            try
            {
                global::WinRT.ComWrappersSupport.FindObject<global::Microsoft.UI.Xaml.Automation.Provider.ISelectionItemProvider>(thisPtr).Select();

            }
            catch (Exception __exception__)
            {
                global::WinRT.ExceptionHelpers.SetErrorInfo(__exception__);
                return global::WinRT.ExceptionHelpers.GetHRForException(__exception__);
            }
            return 0;
        }
        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvStdcall) })]
        private static unsafe int Do_Abi_get_IsSelected_0(IntPtr thisPtr, byte* value)
        {

            bool __value = default;

            *value = default;

            try
            {
                __value = global::WinRT.ComWrappersSupport.FindObject<global::Microsoft.UI.Xaml.Automation.Provider.ISelectionItemProvider>(thisPtr).IsSelected;
                *value = (byte)(__value ? 1 : 0);

            }
            catch (Exception __exception__)
            {
                global::WinRT.ExceptionHelpers.SetErrorInfo(__exception__);
                return global::WinRT.ExceptionHelpers.GetHRForException(__exception__);
            }
            return 0;
        }
        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvStdcall) })]
        private static unsafe int Do_Abi_get_SelectionContainer_1(IntPtr thisPtr, IntPtr* value)
        {

            global::Microsoft.UI.Xaml.Automation.Provider.IRawElementProviderSimple __value = default;

            *value = default;

            try
            {
                __value = global::WinRT.ComWrappersSupport.FindObject<global::Microsoft.UI.Xaml.Automation.Provider.ISelectionItemProvider>(thisPtr).SelectionContainer;
                *value = global::ABI.Microsoft.UI.Xaml.Automation.Provider.IRawElementProviderSimple.FromManaged(__value);

            }
            catch (Exception __exception__)
            {
                global::WinRT.ExceptionHelpers.SetErrorInfo(__exception__);
                return global::WinRT.ExceptionHelpers.GetHRForException(__exception__);
            }
            return 0;
        }

        unsafe void global::Microsoft.UI.Xaml.Automation.Provider.ISelectionItemProvider.AddToSelection()
        {
            var _obj = ((IObjectReference)((IWinRTObject)this).GetObjectReferenceForType(typeof(global::Microsoft.UI.Xaml.Automation.Provider.ISelectionItemProvider).TypeHandle));
            global::ABI.Microsoft.UI.Xaml.Automation.Provider.ISelectionItemProviderMethods.AddToSelection(_obj);
        }

        unsafe void global::Microsoft.UI.Xaml.Automation.Provider.ISelectionItemProvider.RemoveFromSelection()
        {
            var _obj = ((IObjectReference)((IWinRTObject)this).GetObjectReferenceForType(typeof(global::Microsoft.UI.Xaml.Automation.Provider.ISelectionItemProvider).TypeHandle));
            global::ABI.Microsoft.UI.Xaml.Automation.Provider.ISelectionItemProviderMethods.RemoveFromSelection(_obj);
        }

        unsafe void global::Microsoft.UI.Xaml.Automation.Provider.ISelectionItemProvider.Select()
        {
            var _obj = ((IObjectReference)((IWinRTObject)this).GetObjectReferenceForType(typeof(global::Microsoft.UI.Xaml.Automation.Provider.ISelectionItemProvider).TypeHandle));
            global::ABI.Microsoft.UI.Xaml.Automation.Provider.ISelectionItemProviderMethods.Select(_obj);
        }

        unsafe bool global::Microsoft.UI.Xaml.Automation.Provider.ISelectionItemProvider.IsSelected
        {
            get
            {
                var _obj = ((IObjectReference)((IWinRTObject)this).GetObjectReferenceForType(typeof(global::Microsoft.UI.Xaml.Automation.Provider.ISelectionItemProvider).TypeHandle));
                return global::ABI.Microsoft.UI.Xaml.Automation.Provider.ISelectionItemProviderMethods.get_IsSelected(_obj);
            }
        }

        unsafe global::Microsoft.UI.Xaml.Automation.Provider.IRawElementProviderSimple global::Microsoft.UI.Xaml.Automation.Provider.ISelectionItemProvider.SelectionContainer
        {
            get
            {
                var _obj = ((IObjectReference)((IWinRTObject)this).GetObjectReferenceForType(typeof(global::Microsoft.UI.Xaml.Automation.Provider.ISelectionItemProvider).TypeHandle));
                return global::ABI.Microsoft.UI.Xaml.Automation.Provider.ISelectionItemProviderMethods.get_SelectionContainer(_obj);
            }
        }
    }

    public static class ISelectionProviderMethods
    {


        public static unsafe global::Microsoft.UI.Xaml.Automation.Provider.IRawElementProviderSimple[] GetSelection(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            int __retval_length = default;
            IntPtr __retval_data = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, int*, IntPtr*, int>**)ThisPtr)[8](ThisPtr, &__retval_length, &__retval_data));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Xaml.Automation.Provider.IRawElementProviderSimple.FromAbiArray((__retval_length, __retval_data));
            }
            finally
            {
                global::ABI.Microsoft.UI.Xaml.Automation.Provider.IRawElementProviderSimple.DisposeAbiArray((__retval_length, __retval_data));
            }
        }
        public static unsafe bool get_CanSelectMultiple(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            byte __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, byte*, int>**)ThisPtr)[6](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval != 0;
        }

        public static unsafe bool get_IsSelectionRequired(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            byte __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, byte*, int>**)ThisPtr)[7](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval != 0;
        }



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0x4E, 0x6D, 0xD5, 0x80, 0x52, 0x0, 0x1F, 0x54, 0x94, 0x11, 0x9D, 0x17, 0x78, 0xB3, 0xBF, 0xCA };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

        public static global::System.IntPtr AbiToProjectionVftablePtr => ISelectionProvider.AbiToProjectionVftablePtr;

    }
    [DynamicInterfaceCastableImplementation]
    [Guid("80D56D4E-0052-541F-9411-9D1778B3BFCA")]
    internal unsafe interface ISelectionProvider : global::Microsoft.UI.Xaml.Automation.Provider.ISelectionProvider
    {

        public static readonly IntPtr AbiToProjectionVftablePtr;
        static unsafe ISelectionProvider()
        {
            AbiToProjectionVftablePtr = ComWrappersSupport.AllocateVtableMemory(typeof(ISelectionProvider), sizeof(IInspectable.Vftbl) + sizeof(IntPtr) * 3);
            *(IInspectable.Vftbl*)AbiToProjectionVftablePtr = IInspectable.Vftbl.AbiToProjectionVftable;
            ((delegate* unmanaged[Stdcall]<IntPtr, byte*, int>*)AbiToProjectionVftablePtr)[6] = &Do_Abi_get_CanSelectMultiple_0;
            ((delegate* unmanaged[Stdcall]<IntPtr, byte*, int>*)AbiToProjectionVftablePtr)[7] = &Do_Abi_get_IsSelectionRequired_1;
            ((delegate* unmanaged[Stdcall]<IntPtr, int*, IntPtr*, int>*)AbiToProjectionVftablePtr)[8] = &Do_Abi_GetSelection_2;
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvStdcall) })]
        private static unsafe int Do_Abi_GetSelection_2(IntPtr thisPtr, int* __resultSize, IntPtr* result)
        {

            global::Microsoft.UI.Xaml.Automation.Provider.IRawElementProviderSimple[] __result = default;

            *result = default;
            *__resultSize = default;

            try
            {
                __result = global::WinRT.ComWrappersSupport.FindObject<global::Microsoft.UI.Xaml.Automation.Provider.ISelectionProvider>(thisPtr).GetSelection();
                (*__resultSize, *result) = global::ABI.Microsoft.UI.Xaml.Automation.Provider.IRawElementProviderSimple.FromManagedArray(__result);

            }
            catch (Exception __exception__)
            {
                global::WinRT.ExceptionHelpers.SetErrorInfo(__exception__);
                return global::WinRT.ExceptionHelpers.GetHRForException(__exception__);
            }
            return 0;
        }
        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvStdcall) })]
        private static unsafe int Do_Abi_get_CanSelectMultiple_0(IntPtr thisPtr, byte* value)
        {

            bool __value = default;

            *value = default;

            try
            {
                __value = global::WinRT.ComWrappersSupport.FindObject<global::Microsoft.UI.Xaml.Automation.Provider.ISelectionProvider>(thisPtr).CanSelectMultiple;
                *value = (byte)(__value ? 1 : 0);

            }
            catch (Exception __exception__)
            {
                global::WinRT.ExceptionHelpers.SetErrorInfo(__exception__);
                return global::WinRT.ExceptionHelpers.GetHRForException(__exception__);
            }
            return 0;
        }
        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvStdcall) })]
        private static unsafe int Do_Abi_get_IsSelectionRequired_1(IntPtr thisPtr, byte* value)
        {

            bool __value = default;

            *value = default;

            try
            {
                __value = global::WinRT.ComWrappersSupport.FindObject<global::Microsoft.UI.Xaml.Automation.Provider.ISelectionProvider>(thisPtr).IsSelectionRequired;
                *value = (byte)(__value ? 1 : 0);

            }
            catch (Exception __exception__)
            {
                global::WinRT.ExceptionHelpers.SetErrorInfo(__exception__);
                return global::WinRT.ExceptionHelpers.GetHRForException(__exception__);
            }
            return 0;
        }

        unsafe global::Microsoft.UI.Xaml.Automation.Provider.IRawElementProviderSimple[] global::Microsoft.UI.Xaml.Automation.Provider.ISelectionProvider.GetSelection()
        {
            var _obj = ((IObjectReference)((IWinRTObject)this).GetObjectReferenceForType(typeof(global::Microsoft.UI.Xaml.Automation.Provider.ISelectionProvider).TypeHandle));
            return global::ABI.Microsoft.UI.Xaml.Automation.Provider.ISelectionProviderMethods.GetSelection(_obj);
        }

        unsafe bool global::Microsoft.UI.Xaml.Automation.Provider.ISelectionProvider.CanSelectMultiple
        {
            get
            {
                var _obj = ((IObjectReference)((IWinRTObject)this).GetObjectReferenceForType(typeof(global::Microsoft.UI.Xaml.Automation.Provider.ISelectionProvider).TypeHandle));
                return global::ABI.Microsoft.UI.Xaml.Automation.Provider.ISelectionProviderMethods.get_CanSelectMultiple(_obj);
            }
        }

        unsafe bool global::Microsoft.UI.Xaml.Automation.Provider.ISelectionProvider.IsSelectionRequired
        {
            get
            {
                var _obj = ((IObjectReference)((IWinRTObject)this).GetObjectReferenceForType(typeof(global::Microsoft.UI.Xaml.Automation.Provider.ISelectionProvider).TypeHandle));
                return global::ABI.Microsoft.UI.Xaml.Automation.Provider.ISelectionProviderMethods.get_IsSelectionRequired(_obj);
            }
        }
    }

    public static class ISpreadsheetItemProviderMethods
    {


        public static unsafe global::Microsoft.UI.Xaml.Automation.Provider.IRawElementProviderSimple[] GetAnnotationObjects(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            int __retval_length = default;
            IntPtr __retval_data = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, int*, IntPtr*, int>**)ThisPtr)[7](ThisPtr, &__retval_length, &__retval_data));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Xaml.Automation.Provider.IRawElementProviderSimple.FromAbiArray((__retval_length, __retval_data));
            }
            finally
            {
                global::ABI.Microsoft.UI.Xaml.Automation.Provider.IRawElementProviderSimple.DisposeAbiArray((__retval_length, __retval_data));
            }
        }

        public static unsafe global::Microsoft.UI.Xaml.Automation.AnnotationType[] GetAnnotationTypes(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            int __retval_length = default;
            IntPtr __retval_data = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, int*, IntPtr*, int>**)ThisPtr)[8](ThisPtr, &__retval_length, &__retval_data));
                global::System.GC.KeepAlive(_obj);
                return MarshalNonBlittable<global::Microsoft.UI.Xaml.Automation.AnnotationType>.FromAbiArray((__retval_length, __retval_data));
            }
            finally
            {
                MarshalNonBlittable<global::Microsoft.UI.Xaml.Automation.AnnotationType>.DisposeAbiArray((__retval_length, __retval_data));
            }
        }
        public static unsafe string get_Formula(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[6](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return MarshalString.FromAbi(__retval);
            }
            finally
            {
                MarshalString.DisposeAbi(__retval);
            }
        }



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0x89, 0xCE, 0xC1, 0x51, 0x1F, 0xB2, 0x2C, 0x59, 0x87, 0x68, 0xA, 0xCC, 0xDE, 0xFD, 0x57, 0x38 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

        public static global::System.IntPtr AbiToProjectionVftablePtr => ISpreadsheetItemProvider.AbiToProjectionVftablePtr;

    }
    [DynamicInterfaceCastableImplementation]
    [Guid("51C1CE89-B21F-592C-8768-0ACCDEFD5738")]
    internal unsafe interface ISpreadsheetItemProvider : global::Microsoft.UI.Xaml.Automation.Provider.ISpreadsheetItemProvider
    {

        public static readonly IntPtr AbiToProjectionVftablePtr;
        static unsafe ISpreadsheetItemProvider()
        {
            AbiToProjectionVftablePtr = ComWrappersSupport.AllocateVtableMemory(typeof(ISpreadsheetItemProvider), sizeof(IInspectable.Vftbl) + sizeof(IntPtr) * 3);
            *(IInspectable.Vftbl*)AbiToProjectionVftablePtr = IInspectable.Vftbl.AbiToProjectionVftable;
            ((delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>*)AbiToProjectionVftablePtr)[6] = &Do_Abi_get_Formula_0;
            ((delegate* unmanaged[Stdcall]<IntPtr, int*, IntPtr*, int>*)AbiToProjectionVftablePtr)[7] = &Do_Abi_GetAnnotationObjects_1;
            ((delegate* unmanaged[Stdcall]<IntPtr, int*, IntPtr*, int>*)AbiToProjectionVftablePtr)[8] = &Do_Abi_GetAnnotationTypes_2;
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvStdcall) })]
        private static unsafe int Do_Abi_GetAnnotationObjects_1(IntPtr thisPtr, int* __resultSize, IntPtr* result)
        {

            global::Microsoft.UI.Xaml.Automation.Provider.IRawElementProviderSimple[] __result = default;

            *result = default;
            *__resultSize = default;

            try
            {
                __result = global::WinRT.ComWrappersSupport.FindObject<global::Microsoft.UI.Xaml.Automation.Provider.ISpreadsheetItemProvider>(thisPtr).GetAnnotationObjects();
                (*__resultSize, *result) = global::ABI.Microsoft.UI.Xaml.Automation.Provider.IRawElementProviderSimple.FromManagedArray(__result);

            }
            catch (Exception __exception__)
            {
                global::WinRT.ExceptionHelpers.SetErrorInfo(__exception__);
                return global::WinRT.ExceptionHelpers.GetHRForException(__exception__);
            }
            return 0;
        }
        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvStdcall) })]
        private static unsafe int Do_Abi_GetAnnotationTypes_2(IntPtr thisPtr, int* __resultSize, IntPtr* result)
        {

            global::Microsoft.UI.Xaml.Automation.AnnotationType[] __result = default;

            *result = default;
            *__resultSize = default;

            try
            {
                __result = global::WinRT.ComWrappersSupport.FindObject<global::Microsoft.UI.Xaml.Automation.Provider.ISpreadsheetItemProvider>(thisPtr).GetAnnotationTypes();
                (*__resultSize, *result) = MarshalNonBlittable<global::Microsoft.UI.Xaml.Automation.AnnotationType>.FromManagedArray(__result);

            }
            catch (Exception __exception__)
            {
                global::WinRT.ExceptionHelpers.SetErrorInfo(__exception__);
                return global::WinRT.ExceptionHelpers.GetHRForException(__exception__);
            }
            return 0;
        }
        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvStdcall) })]
        private static unsafe int Do_Abi_get_Formula_0(IntPtr thisPtr, IntPtr* value)
        {

            string __value = default;

            *value = default;

            try
            {
                __value = global::WinRT.ComWrappersSupport.FindObject<global::Microsoft.UI.Xaml.Automation.Provider.ISpreadsheetItemProvider>(thisPtr).Formula;
                *value = MarshalString.FromManaged(__value);

            }
            catch (Exception __exception__)
            {
                global::WinRT.ExceptionHelpers.SetErrorInfo(__exception__);
                return global::WinRT.ExceptionHelpers.GetHRForException(__exception__);
            }
            return 0;
        }

        unsafe global::Microsoft.UI.Xaml.Automation.Provider.IRawElementProviderSimple[] global::Microsoft.UI.Xaml.Automation.Provider.ISpreadsheetItemProvider.GetAnnotationObjects()
        {
            var _obj = ((IObjectReference)((IWinRTObject)this).GetObjectReferenceForType(typeof(global::Microsoft.UI.Xaml.Automation.Provider.ISpreadsheetItemProvider).TypeHandle));
            return global::ABI.Microsoft.UI.Xaml.Automation.Provider.ISpreadsheetItemProviderMethods.GetAnnotationObjects(_obj);
        }

        unsafe global::Microsoft.UI.Xaml.Automation.AnnotationType[] global::Microsoft.UI.Xaml.Automation.Provider.ISpreadsheetItemProvider.GetAnnotationTypes()
        {
            var _obj = ((IObjectReference)((IWinRTObject)this).GetObjectReferenceForType(typeof(global::Microsoft.UI.Xaml.Automation.Provider.ISpreadsheetItemProvider).TypeHandle));
            return global::ABI.Microsoft.UI.Xaml.Automation.Provider.ISpreadsheetItemProviderMethods.GetAnnotationTypes(_obj);
        }

        unsafe string global::Microsoft.UI.Xaml.Automation.Provider.ISpreadsheetItemProvider.Formula
        {
            get
            {
                var _obj = ((IObjectReference)((IWinRTObject)this).GetObjectReferenceForType(typeof(global::Microsoft.UI.Xaml.Automation.Provider.ISpreadsheetItemProvider).TypeHandle));
                return global::ABI.Microsoft.UI.Xaml.Automation.Provider.ISpreadsheetItemProviderMethods.get_Formula(_obj);
            }
        }
    }

    public static class ISpreadsheetProviderMethods
    {


        public static unsafe global::Microsoft.UI.Xaml.Automation.Provider.IRawElementProviderSimple GetItemByName(IObjectReference _obj, string name)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                MarshalString.Pinnable __name = new(name);
                fixed(void* ___name = __name)
                {
                    global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, IntPtr*, int>**)ThisPtr)[6](ThisPtr, MarshalString.GetAbi(ref __name), &__retval));
                    global::System.GC.KeepAlive(_obj);
                    return global::ABI.Microsoft.UI.Xaml.Automation.Provider.IRawElementProviderSimple.FromAbi(__retval);
                }
            }
            finally
            {
                global::ABI.Microsoft.UI.Xaml.Automation.Provider.IRawElementProviderSimple.DisposeAbi(__retval);
            }
        }


        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0xAC, 0x1B, 0xF4, 0x1F, 0xE3, 0xD9, 0x48, 0x5E, 0xB5, 0xF8, 0x9E, 0xAB, 0xF, 0xB2, 0xD9, 0xD8 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

        public static global::System.IntPtr AbiToProjectionVftablePtr => ISpreadsheetProvider.AbiToProjectionVftablePtr;

    }
    [DynamicInterfaceCastableImplementation]
    [Guid("1FF41BAC-D9E3-5E48-B5F8-9EAB0FB2D9D8")]
    internal unsafe interface ISpreadsheetProvider : global::Microsoft.UI.Xaml.Automation.Provider.ISpreadsheetProvider
    {

        public static readonly IntPtr AbiToProjectionVftablePtr;
        static unsafe ISpreadsheetProvider()
        {
            AbiToProjectionVftablePtr = ComWrappersSupport.AllocateVtableMemory(typeof(ISpreadsheetProvider), sizeof(IInspectable.Vftbl) + sizeof(IntPtr) * 1);
            *(IInspectable.Vftbl*)AbiToProjectionVftablePtr = IInspectable.Vftbl.AbiToProjectionVftable;
            ((delegate* unmanaged[Stdcall]<IntPtr, IntPtr, IntPtr*, int>*)AbiToProjectionVftablePtr)[6] = &Do_Abi_GetItemByName_0;
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvStdcall) })]
        private static unsafe int Do_Abi_GetItemByName_0(IntPtr thisPtr, IntPtr name, IntPtr* result)
        {

            global::Microsoft.UI.Xaml.Automation.Provider.IRawElementProviderSimple __result = default;

            *result = default;

            try
            {
                __result = global::WinRT.ComWrappersSupport.FindObject<global::Microsoft.UI.Xaml.Automation.Provider.ISpreadsheetProvider>(thisPtr).GetItemByName(MarshalString.FromAbi(name));
                *result = global::ABI.Microsoft.UI.Xaml.Automation.Provider.IRawElementProviderSimple.FromManaged(__result);

            }
            catch (Exception __exception__)
            {
                global::WinRT.ExceptionHelpers.SetErrorInfo(__exception__);
                return global::WinRT.ExceptionHelpers.GetHRForException(__exception__);
            }
            return 0;
        }

        unsafe global::Microsoft.UI.Xaml.Automation.Provider.IRawElementProviderSimple global::Microsoft.UI.Xaml.Automation.Provider.ISpreadsheetProvider.GetItemByName(string name)
        {
            var _obj = ((IObjectReference)((IWinRTObject)this).GetObjectReferenceForType(typeof(global::Microsoft.UI.Xaml.Automation.Provider.ISpreadsheetProvider).TypeHandle));
            return global::ABI.Microsoft.UI.Xaml.Automation.Provider.ISpreadsheetProviderMethods.GetItemByName(_obj, name);
        }
    }

    public static class IStylesProviderMethods
    {

        public static unsafe string get_ExtendedProperties(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[6](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return MarshalString.FromAbi(__retval);
            }
            finally
            {
                MarshalString.DisposeAbi(__retval);
            }
        }

        public static unsafe global::Windows.UI.Color get_FillColor(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::Windows.UI.Color __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::Windows.UI.Color*, int>**)ThisPtr)[7](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }

        public static unsafe global::Windows.UI.Color get_FillPatternColor(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::Windows.UI.Color __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::Windows.UI.Color*, int>**)ThisPtr)[8](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }

        public static unsafe string get_FillPatternStyle(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[9](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return MarshalString.FromAbi(__retval);
            }
            finally
            {
                MarshalString.DisposeAbi(__retval);
            }
        }

        public static unsafe string get_Shape(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[10](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return MarshalString.FromAbi(__retval);
            }
            finally
            {
                MarshalString.DisposeAbi(__retval);
            }
        }

        public static unsafe int get_StyleId(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            int __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, int*, int>**)ThisPtr)[11](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }

        public static unsafe string get_StyleName(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[12](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return MarshalString.FromAbi(__retval);
            }
            finally
            {
                MarshalString.DisposeAbi(__retval);
            }
        }



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0x39, 0x58, 0x89, 0xD8, 0x48, 0x0, 0xDE, 0x54, 0x9C, 0x1F, 0x15, 0x2D, 0xE6, 0x66, 0x5E, 0x80 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

        public static global::System.IntPtr AbiToProjectionVftablePtr => IStylesProvider.AbiToProjectionVftablePtr;

    }
    [DynamicInterfaceCastableImplementation]
    [Guid("D8895839-0048-54DE-9C1F-152DE6665E80")]
    internal unsafe interface IStylesProvider : global::Microsoft.UI.Xaml.Automation.Provider.IStylesProvider
    {

        public static readonly IntPtr AbiToProjectionVftablePtr;
        static unsafe IStylesProvider()
        {
            AbiToProjectionVftablePtr = ComWrappersSupport.AllocateVtableMemory(typeof(IStylesProvider), sizeof(IInspectable.Vftbl) + sizeof(IntPtr) * 7);
            *(IInspectable.Vftbl*)AbiToProjectionVftablePtr = IInspectable.Vftbl.AbiToProjectionVftable;
            ((delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>*)AbiToProjectionVftablePtr)[6] = &Do_Abi_get_ExtendedProperties_0;
            ((delegate* unmanaged[Stdcall]<IntPtr, global::Windows.UI.Color*, int>*)AbiToProjectionVftablePtr)[7] = &Do_Abi_get_FillColor_1;
            ((delegate* unmanaged[Stdcall]<IntPtr, global::Windows.UI.Color*, int>*)AbiToProjectionVftablePtr)[8] = &Do_Abi_get_FillPatternColor_2;
            ((delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>*)AbiToProjectionVftablePtr)[9] = &Do_Abi_get_FillPatternStyle_3;
            ((delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>*)AbiToProjectionVftablePtr)[10] = &Do_Abi_get_Shape_4;
            ((delegate* unmanaged[Stdcall]<IntPtr, int*, int>*)AbiToProjectionVftablePtr)[11] = &Do_Abi_get_StyleId_5;
            ((delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>*)AbiToProjectionVftablePtr)[12] = &Do_Abi_get_StyleName_6;
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvStdcall) })]
        private static unsafe int Do_Abi_get_ExtendedProperties_0(IntPtr thisPtr, IntPtr* value)
        {

            string __value = default;

            *value = default;

            try
            {
                __value = global::WinRT.ComWrappersSupport.FindObject<global::Microsoft.UI.Xaml.Automation.Provider.IStylesProvider>(thisPtr).ExtendedProperties;
                *value = MarshalString.FromManaged(__value);

            }
            catch (Exception __exception__)
            {
                global::WinRT.ExceptionHelpers.SetErrorInfo(__exception__);
                return global::WinRT.ExceptionHelpers.GetHRForException(__exception__);
            }
            return 0;
        }
        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvStdcall) })]
        private static unsafe int Do_Abi_get_FillColor_1(IntPtr thisPtr, global::Windows.UI.Color* value)
        {

            global::Windows.UI.Color __value = default;

            *value = default;

            try
            {
                __value = global::WinRT.ComWrappersSupport.FindObject<global::Microsoft.UI.Xaml.Automation.Provider.IStylesProvider>(thisPtr).FillColor;
                *value = __value;

            }
            catch (Exception __exception__)
            {
                global::WinRT.ExceptionHelpers.SetErrorInfo(__exception__);
                return global::WinRT.ExceptionHelpers.GetHRForException(__exception__);
            }
            return 0;
        }
        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvStdcall) })]
        private static unsafe int Do_Abi_get_FillPatternColor_2(IntPtr thisPtr, global::Windows.UI.Color* value)
        {

            global::Windows.UI.Color __value = default;

            *value = default;

            try
            {
                __value = global::WinRT.ComWrappersSupport.FindObject<global::Microsoft.UI.Xaml.Automation.Provider.IStylesProvider>(thisPtr).FillPatternColor;
                *value = __value;

            }
            catch (Exception __exception__)
            {
                global::WinRT.ExceptionHelpers.SetErrorInfo(__exception__);
                return global::WinRT.ExceptionHelpers.GetHRForException(__exception__);
            }
            return 0;
        }
        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvStdcall) })]
        private static unsafe int Do_Abi_get_FillPatternStyle_3(IntPtr thisPtr, IntPtr* value)
        {

            string __value = default;

            *value = default;

            try
            {
                __value = global::WinRT.ComWrappersSupport.FindObject<global::Microsoft.UI.Xaml.Automation.Provider.IStylesProvider>(thisPtr).FillPatternStyle;
                *value = MarshalString.FromManaged(__value);

            }
            catch (Exception __exception__)
            {
                global::WinRT.ExceptionHelpers.SetErrorInfo(__exception__);
                return global::WinRT.ExceptionHelpers.GetHRForException(__exception__);
            }
            return 0;
        }
        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvStdcall) })]
        private static unsafe int Do_Abi_get_Shape_4(IntPtr thisPtr, IntPtr* value)
        {

            string __value = default;

            *value = default;

            try
            {
                __value = global::WinRT.ComWrappersSupport.FindObject<global::Microsoft.UI.Xaml.Automation.Provider.IStylesProvider>(thisPtr).Shape;
                *value = MarshalString.FromManaged(__value);

            }
            catch (Exception __exception__)
            {
                global::WinRT.ExceptionHelpers.SetErrorInfo(__exception__);
                return global::WinRT.ExceptionHelpers.GetHRForException(__exception__);
            }
            return 0;
        }
        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvStdcall) })]
        private static unsafe int Do_Abi_get_StyleId_5(IntPtr thisPtr, int* value)
        {

            int __value = default;

            *value = default;

            try
            {
                __value = global::WinRT.ComWrappersSupport.FindObject<global::Microsoft.UI.Xaml.Automation.Provider.IStylesProvider>(thisPtr).StyleId;
                *value = __value;

            }
            catch (Exception __exception__)
            {
                global::WinRT.ExceptionHelpers.SetErrorInfo(__exception__);
                return global::WinRT.ExceptionHelpers.GetHRForException(__exception__);
            }
            return 0;
        }
        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvStdcall) })]
        private static unsafe int Do_Abi_get_StyleName_6(IntPtr thisPtr, IntPtr* value)
        {

            string __value = default;

            *value = default;

            try
            {
                __value = global::WinRT.ComWrappersSupport.FindObject<global::Microsoft.UI.Xaml.Automation.Provider.IStylesProvider>(thisPtr).StyleName;
                *value = MarshalString.FromManaged(__value);

            }
            catch (Exception __exception__)
            {
                global::WinRT.ExceptionHelpers.SetErrorInfo(__exception__);
                return global::WinRT.ExceptionHelpers.GetHRForException(__exception__);
            }
            return 0;
        }

        unsafe string global::Microsoft.UI.Xaml.Automation.Provider.IStylesProvider.ExtendedProperties
        {
            get
            {
                var _obj = ((IObjectReference)((IWinRTObject)this).GetObjectReferenceForType(typeof(global::Microsoft.UI.Xaml.Automation.Provider.IStylesProvider).TypeHandle));
                return global::ABI.Microsoft.UI.Xaml.Automation.Provider.IStylesProviderMethods.get_ExtendedProperties(_obj);
            }
        }

        unsafe global::Windows.UI.Color global::Microsoft.UI.Xaml.Automation.Provider.IStylesProvider.FillColor
        {
            get
            {
                var _obj = ((IObjectReference)((IWinRTObject)this).GetObjectReferenceForType(typeof(global::Microsoft.UI.Xaml.Automation.Provider.IStylesProvider).TypeHandle));
                return global::ABI.Microsoft.UI.Xaml.Automation.Provider.IStylesProviderMethods.get_FillColor(_obj);
            }
        }

        unsafe global::Windows.UI.Color global::Microsoft.UI.Xaml.Automation.Provider.IStylesProvider.FillPatternColor
        {
            get
            {
                var _obj = ((IObjectReference)((IWinRTObject)this).GetObjectReferenceForType(typeof(global::Microsoft.UI.Xaml.Automation.Provider.IStylesProvider).TypeHandle));
                return global::ABI.Microsoft.UI.Xaml.Automation.Provider.IStylesProviderMethods.get_FillPatternColor(_obj);
            }
        }

        unsafe string global::Microsoft.UI.Xaml.Automation.Provider.IStylesProvider.FillPatternStyle
        {
            get
            {
                var _obj = ((IObjectReference)((IWinRTObject)this).GetObjectReferenceForType(typeof(global::Microsoft.UI.Xaml.Automation.Provider.IStylesProvider).TypeHandle));
                return global::ABI.Microsoft.UI.Xaml.Automation.Provider.IStylesProviderMethods.get_FillPatternStyle(_obj);
            }
        }

        unsafe string global::Microsoft.UI.Xaml.Automation.Provider.IStylesProvider.Shape
        {
            get
            {
                var _obj = ((IObjectReference)((IWinRTObject)this).GetObjectReferenceForType(typeof(global::Microsoft.UI.Xaml.Automation.Provider.IStylesProvider).TypeHandle));
                return global::ABI.Microsoft.UI.Xaml.Automation.Provider.IStylesProviderMethods.get_Shape(_obj);
            }
        }

        unsafe int global::Microsoft.UI.Xaml.Automation.Provider.IStylesProvider.StyleId
        {
            get
            {
                var _obj = ((IObjectReference)((IWinRTObject)this).GetObjectReferenceForType(typeof(global::Microsoft.UI.Xaml.Automation.Provider.IStylesProvider).TypeHandle));
                return global::ABI.Microsoft.UI.Xaml.Automation.Provider.IStylesProviderMethods.get_StyleId(_obj);
            }
        }

        unsafe string global::Microsoft.UI.Xaml.Automation.Provider.IStylesProvider.StyleName
        {
            get
            {
                var _obj = ((IObjectReference)((IWinRTObject)this).GetObjectReferenceForType(typeof(global::Microsoft.UI.Xaml.Automation.Provider.IStylesProvider).TypeHandle));
                return global::ABI.Microsoft.UI.Xaml.Automation.Provider.IStylesProviderMethods.get_StyleName(_obj);
            }
        }
    }

    public static class ISynchronizedInputProviderMethods
    {


        public static unsafe void Cancel(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, int>**)ThisPtr)[6](ThisPtr));
            global::System.GC.KeepAlive(_obj);
        }

        public static unsafe void StartListening(IObjectReference _obj, global::Microsoft.UI.Xaml.Automation.SynchronizedInputType inputType)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::Microsoft.UI.Xaml.Automation.SynchronizedInputType, int>**)ThisPtr)[7](ThisPtr, inputType));
            global::System.GC.KeepAlive(_obj);
        }


        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0x13, 0x56, 0x61, 0xC5, 0x6D, 0x93, 0x89, 0x52, 0xA1, 0x90, 0xE8, 0x20, 0x57, 0xE0, 0xFF, 0x5A };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

        public static global::System.IntPtr AbiToProjectionVftablePtr => ISynchronizedInputProvider.AbiToProjectionVftablePtr;

    }
    [DynamicInterfaceCastableImplementation]
    [Guid("C5615613-936D-5289-A190-E82057E0FF5A")]
    internal unsafe interface ISynchronizedInputProvider : global::Microsoft.UI.Xaml.Automation.Provider.ISynchronizedInputProvider
    {

        public static readonly IntPtr AbiToProjectionVftablePtr;
        static unsafe ISynchronizedInputProvider()
        {
            AbiToProjectionVftablePtr = ComWrappersSupport.AllocateVtableMemory(typeof(ISynchronizedInputProvider), sizeof(IInspectable.Vftbl) + sizeof(IntPtr) * 2);
            *(IInspectable.Vftbl*)AbiToProjectionVftablePtr = IInspectable.Vftbl.AbiToProjectionVftable;
            ((delegate* unmanaged[Stdcall]<IntPtr, int>*)AbiToProjectionVftablePtr)[6] = &Do_Abi_Cancel_0;
            ((delegate* unmanaged[Stdcall]<IntPtr, global::Microsoft.UI.Xaml.Automation.SynchronizedInputType, int>*)AbiToProjectionVftablePtr)[7] = &Do_Abi_StartListening_1;
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvStdcall) })]
        private static unsafe int Do_Abi_Cancel_0(IntPtr thisPtr)
        {



            try
            {
                global::WinRT.ComWrappersSupport.FindObject<global::Microsoft.UI.Xaml.Automation.Provider.ISynchronizedInputProvider>(thisPtr).Cancel();

            }
            catch (Exception __exception__)
            {
                global::WinRT.ExceptionHelpers.SetErrorInfo(__exception__);
                return global::WinRT.ExceptionHelpers.GetHRForException(__exception__);
            }
            return 0;
        }
        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvStdcall) })]
        private static unsafe int Do_Abi_StartListening_1(IntPtr thisPtr, global::Microsoft.UI.Xaml.Automation.SynchronizedInputType inputType)
        {



            try
            {
                global::WinRT.ComWrappersSupport.FindObject<global::Microsoft.UI.Xaml.Automation.Provider.ISynchronizedInputProvider>(thisPtr).StartListening(inputType);

            }
            catch (Exception __exception__)
            {
                global::WinRT.ExceptionHelpers.SetErrorInfo(__exception__);
                return global::WinRT.ExceptionHelpers.GetHRForException(__exception__);
            }
            return 0;
        }

        unsafe void global::Microsoft.UI.Xaml.Automation.Provider.ISynchronizedInputProvider.Cancel()
        {
            var _obj = ((IObjectReference)((IWinRTObject)this).GetObjectReferenceForType(typeof(global::Microsoft.UI.Xaml.Automation.Provider.ISynchronizedInputProvider).TypeHandle));
            global::ABI.Microsoft.UI.Xaml.Automation.Provider.ISynchronizedInputProviderMethods.Cancel(_obj);
        }

        unsafe void global::Microsoft.UI.Xaml.Automation.Provider.ISynchronizedInputProvider.StartListening(global::Microsoft.UI.Xaml.Automation.SynchronizedInputType inputType)
        {
            var _obj = ((IObjectReference)((IWinRTObject)this).GetObjectReferenceForType(typeof(global::Microsoft.UI.Xaml.Automation.Provider.ISynchronizedInputProvider).TypeHandle));
            global::ABI.Microsoft.UI.Xaml.Automation.Provider.ISynchronizedInputProviderMethods.StartListening(_obj, inputType);
        }
    }

    public static class ITableItemProviderMethods
    {


        public static unsafe global::Microsoft.UI.Xaml.Automation.Provider.IRawElementProviderSimple[] GetColumnHeaderItems(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            int __retval_length = default;
            IntPtr __retval_data = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, int*, IntPtr*, int>**)ThisPtr)[6](ThisPtr, &__retval_length, &__retval_data));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Xaml.Automation.Provider.IRawElementProviderSimple.FromAbiArray((__retval_length, __retval_data));
            }
            finally
            {
                global::ABI.Microsoft.UI.Xaml.Automation.Provider.IRawElementProviderSimple.DisposeAbiArray((__retval_length, __retval_data));
            }
        }

        public static unsafe global::Microsoft.UI.Xaml.Automation.Provider.IRawElementProviderSimple[] GetRowHeaderItems(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            int __retval_length = default;
            IntPtr __retval_data = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, int*, IntPtr*, int>**)ThisPtr)[7](ThisPtr, &__retval_length, &__retval_data));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Xaml.Automation.Provider.IRawElementProviderSimple.FromAbiArray((__retval_length, __retval_data));
            }
            finally
            {
                global::ABI.Microsoft.UI.Xaml.Automation.Provider.IRawElementProviderSimple.DisposeAbiArray((__retval_length, __retval_data));
            }
        }


        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0x38, 0xF0, 0xE6, 0x6C, 0xD4, 0x54, 0x53, 0x55, 0xA4, 0xAD, 0x3, 0xCB, 0xCF, 0x35, 0x81, 0x97 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

        public static global::System.IntPtr AbiToProjectionVftablePtr => ITableItemProvider.AbiToProjectionVftablePtr;

    }
    [DynamicInterfaceCastableImplementation]
    [Guid("6CE6F038-54D4-5553-A4AD-03CBCF358197")]
    internal unsafe interface ITableItemProvider : global::Microsoft.UI.Xaml.Automation.Provider.ITableItemProvider
    {

        public static readonly IntPtr AbiToProjectionVftablePtr;
        static unsafe ITableItemProvider()
        {
            AbiToProjectionVftablePtr = ComWrappersSupport.AllocateVtableMemory(typeof(ITableItemProvider), sizeof(IInspectable.Vftbl) + sizeof(IntPtr) * 2);
            *(IInspectable.Vftbl*)AbiToProjectionVftablePtr = IInspectable.Vftbl.AbiToProjectionVftable;
            ((delegate* unmanaged[Stdcall]<IntPtr, int*, IntPtr*, int>*)AbiToProjectionVftablePtr)[6] = &Do_Abi_GetColumnHeaderItems_0;
            ((delegate* unmanaged[Stdcall]<IntPtr, int*, IntPtr*, int>*)AbiToProjectionVftablePtr)[7] = &Do_Abi_GetRowHeaderItems_1;
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvStdcall) })]
        private static unsafe int Do_Abi_GetColumnHeaderItems_0(IntPtr thisPtr, int* __resultSize, IntPtr* result)
        {

            global::Microsoft.UI.Xaml.Automation.Provider.IRawElementProviderSimple[] __result = default;

            *result = default;
            *__resultSize = default;

            try
            {
                __result = global::WinRT.ComWrappersSupport.FindObject<global::Microsoft.UI.Xaml.Automation.Provider.ITableItemProvider>(thisPtr).GetColumnHeaderItems();
                (*__resultSize, *result) = global::ABI.Microsoft.UI.Xaml.Automation.Provider.IRawElementProviderSimple.FromManagedArray(__result);

            }
            catch (Exception __exception__)
            {
                global::WinRT.ExceptionHelpers.SetErrorInfo(__exception__);
                return global::WinRT.ExceptionHelpers.GetHRForException(__exception__);
            }
            return 0;
        }
        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvStdcall) })]
        private static unsafe int Do_Abi_GetRowHeaderItems_1(IntPtr thisPtr, int* __resultSize, IntPtr* result)
        {

            global::Microsoft.UI.Xaml.Automation.Provider.IRawElementProviderSimple[] __result = default;

            *result = default;
            *__resultSize = default;

            try
            {
                __result = global::WinRT.ComWrappersSupport.FindObject<global::Microsoft.UI.Xaml.Automation.Provider.ITableItemProvider>(thisPtr).GetRowHeaderItems();
                (*__resultSize, *result) = global::ABI.Microsoft.UI.Xaml.Automation.Provider.IRawElementProviderSimple.FromManagedArray(__result);

            }
            catch (Exception __exception__)
            {
                global::WinRT.ExceptionHelpers.SetErrorInfo(__exception__);
                return global::WinRT.ExceptionHelpers.GetHRForException(__exception__);
            }
            return 0;
        }

        unsafe global::Microsoft.UI.Xaml.Automation.Provider.IRawElementProviderSimple[] global::Microsoft.UI.Xaml.Automation.Provider.ITableItemProvider.GetColumnHeaderItems()
        {
            var _obj = ((IObjectReference)((IWinRTObject)this).GetObjectReferenceForType(typeof(global::Microsoft.UI.Xaml.Automation.Provider.ITableItemProvider).TypeHandle));
            return global::ABI.Microsoft.UI.Xaml.Automation.Provider.ITableItemProviderMethods.GetColumnHeaderItems(_obj);
        }

        unsafe global::Microsoft.UI.Xaml.Automation.Provider.IRawElementProviderSimple[] global::Microsoft.UI.Xaml.Automation.Provider.ITableItemProvider.GetRowHeaderItems()
        {
            var _obj = ((IObjectReference)((IWinRTObject)this).GetObjectReferenceForType(typeof(global::Microsoft.UI.Xaml.Automation.Provider.ITableItemProvider).TypeHandle));
            return global::ABI.Microsoft.UI.Xaml.Automation.Provider.ITableItemProviderMethods.GetRowHeaderItems(_obj);
        }
    }

    public static class ITableProviderMethods
    {


        public static unsafe global::Microsoft.UI.Xaml.Automation.Provider.IRawElementProviderSimple[] GetColumnHeaders(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            int __retval_length = default;
            IntPtr __retval_data = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, int*, IntPtr*, int>**)ThisPtr)[7](ThisPtr, &__retval_length, &__retval_data));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Xaml.Automation.Provider.IRawElementProviderSimple.FromAbiArray((__retval_length, __retval_data));
            }
            finally
            {
                global::ABI.Microsoft.UI.Xaml.Automation.Provider.IRawElementProviderSimple.DisposeAbiArray((__retval_length, __retval_data));
            }
        }

        public static unsafe global::Microsoft.UI.Xaml.Automation.Provider.IRawElementProviderSimple[] GetRowHeaders(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            int __retval_length = default;
            IntPtr __retval_data = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, int*, IntPtr*, int>**)ThisPtr)[8](ThisPtr, &__retval_length, &__retval_data));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Xaml.Automation.Provider.IRawElementProviderSimple.FromAbiArray((__retval_length, __retval_data));
            }
            finally
            {
                global::ABI.Microsoft.UI.Xaml.Automation.Provider.IRawElementProviderSimple.DisposeAbiArray((__retval_length, __retval_data));
            }
        }
        public static unsafe global::Microsoft.UI.Xaml.Automation.RowOrColumnMajor get_RowOrColumnMajor(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::Microsoft.UI.Xaml.Automation.RowOrColumnMajor __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::Microsoft.UI.Xaml.Automation.RowOrColumnMajor*, int>**)ThisPtr)[6](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0x24, 0x67, 0xBA, 0x9A, 0x2D, 0xB2, 0xB8, 0x5D, 0x8A, 0xBB, 0x81, 0xF9, 0x11, 0xF1, 0x8A, 0xF2 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

        public static global::System.IntPtr AbiToProjectionVftablePtr => ITableProvider.AbiToProjectionVftablePtr;

    }
    [DynamicInterfaceCastableImplementation]
    [Guid("9ABA6724-B22D-5DB8-8ABB-81F911F18AF2")]
    internal unsafe interface ITableProvider : global::Microsoft.UI.Xaml.Automation.Provider.ITableProvider
    {

        public static readonly IntPtr AbiToProjectionVftablePtr;
        static unsafe ITableProvider()
        {
            AbiToProjectionVftablePtr = ComWrappersSupport.AllocateVtableMemory(typeof(ITableProvider), sizeof(IInspectable.Vftbl) + sizeof(IntPtr) * 3);
            *(IInspectable.Vftbl*)AbiToProjectionVftablePtr = IInspectable.Vftbl.AbiToProjectionVftable;
            ((delegate* unmanaged[Stdcall]<IntPtr, global::Microsoft.UI.Xaml.Automation.RowOrColumnMajor*, int>*)AbiToProjectionVftablePtr)[6] = &Do_Abi_get_RowOrColumnMajor_0;
            ((delegate* unmanaged[Stdcall]<IntPtr, int*, IntPtr*, int>*)AbiToProjectionVftablePtr)[7] = &Do_Abi_GetColumnHeaders_1;
            ((delegate* unmanaged[Stdcall]<IntPtr, int*, IntPtr*, int>*)AbiToProjectionVftablePtr)[8] = &Do_Abi_GetRowHeaders_2;
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvStdcall) })]
        private static unsafe int Do_Abi_GetColumnHeaders_1(IntPtr thisPtr, int* __resultSize, IntPtr* result)
        {

            global::Microsoft.UI.Xaml.Automation.Provider.IRawElementProviderSimple[] __result = default;

            *result = default;
            *__resultSize = default;

            try
            {
                __result = global::WinRT.ComWrappersSupport.FindObject<global::Microsoft.UI.Xaml.Automation.Provider.ITableProvider>(thisPtr).GetColumnHeaders();
                (*__resultSize, *result) = global::ABI.Microsoft.UI.Xaml.Automation.Provider.IRawElementProviderSimple.FromManagedArray(__result);

            }
            catch (Exception __exception__)
            {
                global::WinRT.ExceptionHelpers.SetErrorInfo(__exception__);
                return global::WinRT.ExceptionHelpers.GetHRForException(__exception__);
            }
            return 0;
        }
        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvStdcall) })]
        private static unsafe int Do_Abi_GetRowHeaders_2(IntPtr thisPtr, int* __resultSize, IntPtr* result)
        {

            global::Microsoft.UI.Xaml.Automation.Provider.IRawElementProviderSimple[] __result = default;

            *result = default;
            *__resultSize = default;

            try
            {
                __result = global::WinRT.ComWrappersSupport.FindObject<global::Microsoft.UI.Xaml.Automation.Provider.ITableProvider>(thisPtr).GetRowHeaders();
                (*__resultSize, *result) = global::ABI.Microsoft.UI.Xaml.Automation.Provider.IRawElementProviderSimple.FromManagedArray(__result);

            }
            catch (Exception __exception__)
            {
                global::WinRT.ExceptionHelpers.SetErrorInfo(__exception__);
                return global::WinRT.ExceptionHelpers.GetHRForException(__exception__);
            }
            return 0;
        }
        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvStdcall) })]
        private static unsafe int Do_Abi_get_RowOrColumnMajor_0(IntPtr thisPtr, global::Microsoft.UI.Xaml.Automation.RowOrColumnMajor* value)
        {

            global::Microsoft.UI.Xaml.Automation.RowOrColumnMajor __value = default;

            *value = default;

            try
            {
                __value = global::WinRT.ComWrappersSupport.FindObject<global::Microsoft.UI.Xaml.Automation.Provider.ITableProvider>(thisPtr).RowOrColumnMajor;
                *value = __value;

            }
            catch (Exception __exception__)
            {
                global::WinRT.ExceptionHelpers.SetErrorInfo(__exception__);
                return global::WinRT.ExceptionHelpers.GetHRForException(__exception__);
            }
            return 0;
        }

        unsafe global::Microsoft.UI.Xaml.Automation.Provider.IRawElementProviderSimple[] global::Microsoft.UI.Xaml.Automation.Provider.ITableProvider.GetColumnHeaders()
        {
            var _obj = ((IObjectReference)((IWinRTObject)this).GetObjectReferenceForType(typeof(global::Microsoft.UI.Xaml.Automation.Provider.ITableProvider).TypeHandle));
            return global::ABI.Microsoft.UI.Xaml.Automation.Provider.ITableProviderMethods.GetColumnHeaders(_obj);
        }

        unsafe global::Microsoft.UI.Xaml.Automation.Provider.IRawElementProviderSimple[] global::Microsoft.UI.Xaml.Automation.Provider.ITableProvider.GetRowHeaders()
        {
            var _obj = ((IObjectReference)((IWinRTObject)this).GetObjectReferenceForType(typeof(global::Microsoft.UI.Xaml.Automation.Provider.ITableProvider).TypeHandle));
            return global::ABI.Microsoft.UI.Xaml.Automation.Provider.ITableProviderMethods.GetRowHeaders(_obj);
        }

        unsafe global::Microsoft.UI.Xaml.Automation.RowOrColumnMajor global::Microsoft.UI.Xaml.Automation.Provider.ITableProvider.RowOrColumnMajor
        {
            get
            {
                var _obj = ((IObjectReference)((IWinRTObject)this).GetObjectReferenceForType(typeof(global::Microsoft.UI.Xaml.Automation.Provider.ITableProvider).TypeHandle));
                return global::ABI.Microsoft.UI.Xaml.Automation.Provider.ITableProviderMethods.get_RowOrColumnMajor(_obj);
            }
        }
    }

    public static class ITextChildProviderMethods
    {

        public static unsafe global::Microsoft.UI.Xaml.Automation.Provider.IRawElementProviderSimple get_TextContainer(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[6](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Xaml.Automation.Provider.IRawElementProviderSimple.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.UI.Xaml.Automation.Provider.IRawElementProviderSimple.DisposeAbi(__retval);
            }
        }

        public static unsafe global::Microsoft.UI.Xaml.Automation.Provider.ITextRangeProvider get_TextRange(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[7](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return MarshalInterface<global::Microsoft.UI.Xaml.Automation.Provider.ITextRangeProvider>.FromAbi(__retval);
            }
            finally
            {
                MarshalInterface<global::Microsoft.UI.Xaml.Automation.Provider.ITextRangeProvider>.DisposeAbi(__retval);
            }
        }



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0x5F, 0xE5, 0x72, 0x7C, 0x5D, 0xF7, 0x22, 0x55, 0xAE, 0xB5, 0xC1, 0xF8, 0x2C, 0x32, 0x93, 0x3B };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

        public static global::System.IntPtr AbiToProjectionVftablePtr => ITextChildProvider.AbiToProjectionVftablePtr;

    }
    [DynamicInterfaceCastableImplementation]
    [Guid("7C72E55F-F75D-5522-AEB5-C1F82C32933B")]
    internal unsafe interface ITextChildProvider : global::Microsoft.UI.Xaml.Automation.Provider.ITextChildProvider
    {

        public static readonly IntPtr AbiToProjectionVftablePtr;
        static unsafe ITextChildProvider()
        {
            AbiToProjectionVftablePtr = ComWrappersSupport.AllocateVtableMemory(typeof(ITextChildProvider), sizeof(IInspectable.Vftbl) + sizeof(IntPtr) * 2);
            *(IInspectable.Vftbl*)AbiToProjectionVftablePtr = IInspectable.Vftbl.AbiToProjectionVftable;
            ((delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>*)AbiToProjectionVftablePtr)[6] = &Do_Abi_get_TextContainer_0;
            ((delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>*)AbiToProjectionVftablePtr)[7] = &Do_Abi_get_TextRange_1;
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvStdcall) })]
        private static unsafe int Do_Abi_get_TextContainer_0(IntPtr thisPtr, IntPtr* value)
        {

            global::Microsoft.UI.Xaml.Automation.Provider.IRawElementProviderSimple __value = default;

            *value = default;

            try
            {
                __value = global::WinRT.ComWrappersSupport.FindObject<global::Microsoft.UI.Xaml.Automation.Provider.ITextChildProvider>(thisPtr).TextContainer;
                *value = global::ABI.Microsoft.UI.Xaml.Automation.Provider.IRawElementProviderSimple.FromManaged(__value);

            }
            catch (Exception __exception__)
            {
                global::WinRT.ExceptionHelpers.SetErrorInfo(__exception__);
                return global::WinRT.ExceptionHelpers.GetHRForException(__exception__);
            }
            return 0;
        }
        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvStdcall) })]
        private static unsafe int Do_Abi_get_TextRange_1(IntPtr thisPtr, IntPtr* value)
        {

            global::Microsoft.UI.Xaml.Automation.Provider.ITextRangeProvider __value = default;

            *value = default;

            try
            {
                __value = global::WinRT.ComWrappersSupport.FindObject<global::Microsoft.UI.Xaml.Automation.Provider.ITextChildProvider>(thisPtr).TextRange;
                *value = MarshalInterface<global::Microsoft.UI.Xaml.Automation.Provider.ITextRangeProvider>.FromManaged(__value);

            }
            catch (Exception __exception__)
            {
                global::WinRT.ExceptionHelpers.SetErrorInfo(__exception__);
                return global::WinRT.ExceptionHelpers.GetHRForException(__exception__);
            }
            return 0;
        }

        unsafe global::Microsoft.UI.Xaml.Automation.Provider.IRawElementProviderSimple global::Microsoft.UI.Xaml.Automation.Provider.ITextChildProvider.TextContainer
        {
            get
            {
                var _obj = ((IObjectReference)((IWinRTObject)this).GetObjectReferenceForType(typeof(global::Microsoft.UI.Xaml.Automation.Provider.ITextChildProvider).TypeHandle));
                return global::ABI.Microsoft.UI.Xaml.Automation.Provider.ITextChildProviderMethods.get_TextContainer(_obj);
            }
        }

        unsafe global::Microsoft.UI.Xaml.Automation.Provider.ITextRangeProvider global::Microsoft.UI.Xaml.Automation.Provider.ITextChildProvider.TextRange
        {
            get
            {
                var _obj = ((IObjectReference)((IWinRTObject)this).GetObjectReferenceForType(typeof(global::Microsoft.UI.Xaml.Automation.Provider.ITextChildProvider).TypeHandle));
                return global::ABI.Microsoft.UI.Xaml.Automation.Provider.ITextChildProviderMethods.get_TextRange(_obj);
            }
        }
    }

    public static class ITextEditProviderMethods
    {


        public static unsafe global::Microsoft.UI.Xaml.Automation.Provider.ITextRangeProvider GetActiveComposition(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[6](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return MarshalInterface<global::Microsoft.UI.Xaml.Automation.Provider.ITextRangeProvider>.FromAbi(__retval);
            }
            finally
            {
                MarshalInterface<global::Microsoft.UI.Xaml.Automation.Provider.ITextRangeProvider>.DisposeAbi(__retval);
            }
        }

        public static unsafe global::Microsoft.UI.Xaml.Automation.Provider.ITextRangeProvider GetConversionTarget(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[7](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return MarshalInterface<global::Microsoft.UI.Xaml.Automation.Provider.ITextRangeProvider>.FromAbi(__retval);
            }
            finally
            {
                MarshalInterface<global::Microsoft.UI.Xaml.Automation.Provider.ITextRangeProvider>.DisposeAbi(__retval);
            }
        }


        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0xE8, 0xBB, 0x9, 0x7F, 0xA7, 0xBE, 0xD3, 0x5D, 0xBA, 0x6B, 0x28, 0xDB, 0xB4, 0x2, 0xFA, 0xD4 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

        public static global::System.IntPtr AbiToProjectionVftablePtr => ITextEditProvider.AbiToProjectionVftablePtr;

    }
    [DynamicInterfaceCastableImplementation]
    [Guid("7F09BBE8-BEA7-5DD3-BA6B-28DBB402FAD4")]
    internal unsafe interface ITextEditProvider : global::Microsoft.UI.Xaml.Automation.Provider.ITextEditProvider
    {

        public static readonly IntPtr AbiToProjectionVftablePtr;
        static unsafe ITextEditProvider()
        {
            AbiToProjectionVftablePtr = ComWrappersSupport.AllocateVtableMemory(typeof(ITextEditProvider), sizeof(IInspectable.Vftbl) + sizeof(IntPtr) * 2);
            *(IInspectable.Vftbl*)AbiToProjectionVftablePtr = IInspectable.Vftbl.AbiToProjectionVftable;
            ((delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>*)AbiToProjectionVftablePtr)[6] = &Do_Abi_GetActiveComposition_0;
            ((delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>*)AbiToProjectionVftablePtr)[7] = &Do_Abi_GetConversionTarget_1;
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvStdcall) })]
        private static unsafe int Do_Abi_GetActiveComposition_0(IntPtr thisPtr, IntPtr* result)
        {

            global::Microsoft.UI.Xaml.Automation.Provider.ITextRangeProvider __result = default;

            *result = default;

            try
            {
                __result = global::WinRT.ComWrappersSupport.FindObject<global::Microsoft.UI.Xaml.Automation.Provider.ITextEditProvider>(thisPtr).GetActiveComposition();
                *result = MarshalInterface<global::Microsoft.UI.Xaml.Automation.Provider.ITextRangeProvider>.FromManaged(__result);

            }
            catch (Exception __exception__)
            {
                global::WinRT.ExceptionHelpers.SetErrorInfo(__exception__);
                return global::WinRT.ExceptionHelpers.GetHRForException(__exception__);
            }
            return 0;
        }
        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvStdcall) })]
        private static unsafe int Do_Abi_GetConversionTarget_1(IntPtr thisPtr, IntPtr* result)
        {

            global::Microsoft.UI.Xaml.Automation.Provider.ITextRangeProvider __result = default;

            *result = default;

            try
            {
                __result = global::WinRT.ComWrappersSupport.FindObject<global::Microsoft.UI.Xaml.Automation.Provider.ITextEditProvider>(thisPtr).GetConversionTarget();
                *result = MarshalInterface<global::Microsoft.UI.Xaml.Automation.Provider.ITextRangeProvider>.FromManaged(__result);

            }
            catch (Exception __exception__)
            {
                global::WinRT.ExceptionHelpers.SetErrorInfo(__exception__);
                return global::WinRT.ExceptionHelpers.GetHRForException(__exception__);
            }
            return 0;
        }

        unsafe global::Microsoft.UI.Xaml.Automation.Provider.ITextRangeProvider global::Microsoft.UI.Xaml.Automation.Provider.ITextEditProvider.GetActiveComposition()
        {
            var _obj = ((IObjectReference)((IWinRTObject)this).GetObjectReferenceForType(typeof(global::Microsoft.UI.Xaml.Automation.Provider.ITextEditProvider).TypeHandle));
            return global::ABI.Microsoft.UI.Xaml.Automation.Provider.ITextEditProviderMethods.GetActiveComposition(_obj);
        }

        unsafe global::Microsoft.UI.Xaml.Automation.Provider.ITextRangeProvider global::Microsoft.UI.Xaml.Automation.Provider.ITextEditProvider.GetConversionTarget()
        {
            var _obj = ((IObjectReference)((IWinRTObject)this).GetObjectReferenceForType(typeof(global::Microsoft.UI.Xaml.Automation.Provider.ITextEditProvider).TypeHandle));
            return global::ABI.Microsoft.UI.Xaml.Automation.Provider.ITextEditProviderMethods.GetConversionTarget(_obj);
        }

        global::Microsoft.UI.Xaml.Automation.Provider.ITextRangeProvider[] global::Microsoft.UI.Xaml.Automation.Provider.ITextProvider.GetSelection() => ((global::Microsoft.UI.Xaml.Automation.Provider.ITextProvider)(IWinRTObject)this).GetSelection();

        global::Microsoft.UI.Xaml.Automation.Provider.ITextRangeProvider[] global::Microsoft.UI.Xaml.Automation.Provider.ITextProvider.GetVisibleRanges() => ((global::Microsoft.UI.Xaml.Automation.Provider.ITextProvider)(IWinRTObject)this).GetVisibleRanges();

        global::Microsoft.UI.Xaml.Automation.Provider.ITextRangeProvider global::Microsoft.UI.Xaml.Automation.Provider.ITextProvider.RangeFromChild(global::Microsoft.UI.Xaml.Automation.Provider.IRawElementProviderSimple childElement) => ((global::Microsoft.UI.Xaml.Automation.Provider.ITextProvider)(IWinRTObject)this).RangeFromChild(childElement);

        global::Microsoft.UI.Xaml.Automation.Provider.ITextRangeProvider global::Microsoft.UI.Xaml.Automation.Provider.ITextProvider.RangeFromPoint(global::Windows.Foundation.Point screenLocation) => ((global::Microsoft.UI.Xaml.Automation.Provider.ITextProvider)(IWinRTObject)this).RangeFromPoint(screenLocation);

        global::Microsoft.UI.Xaml.Automation.Provider.ITextRangeProvider global::Microsoft.UI.Xaml.Automation.Provider.ITextProvider.DocumentRange => ((global::Microsoft.UI.Xaml.Automation.Provider.ITextProvider)(IWinRTObject)this).DocumentRange;

        global::Microsoft.UI.Xaml.Automation.SupportedTextSelection global::Microsoft.UI.Xaml.Automation.Provider.ITextProvider.SupportedTextSelection => ((global::Microsoft.UI.Xaml.Automation.Provider.ITextProvider)(IWinRTObject)this).SupportedTextSelection;
    }

    public static class ITextProviderMethods
    {


        public static unsafe global::Microsoft.UI.Xaml.Automation.Provider.ITextRangeProvider[] GetSelection(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            int __retval_length = default;
            IntPtr __retval_data = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, int*, IntPtr*, int>**)ThisPtr)[8](ThisPtr, &__retval_length, &__retval_data));
                global::System.GC.KeepAlive(_obj);
                return MarshalInterface<global::Microsoft.UI.Xaml.Automation.Provider.ITextRangeProvider>.FromAbiArray((__retval_length, __retval_data));
            }
            finally
            {
                MarshalInterface<global::Microsoft.UI.Xaml.Automation.Provider.ITextRangeProvider>.DisposeAbiArray((__retval_length, __retval_data));
            }
        }

        public static unsafe global::Microsoft.UI.Xaml.Automation.Provider.ITextRangeProvider[] GetVisibleRanges(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            int __retval_length = default;
            IntPtr __retval_data = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, int*, IntPtr*, int>**)ThisPtr)[9](ThisPtr, &__retval_length, &__retval_data));
                global::System.GC.KeepAlive(_obj);
                return MarshalInterface<global::Microsoft.UI.Xaml.Automation.Provider.ITextRangeProvider>.FromAbiArray((__retval_length, __retval_data));
            }
            finally
            {
                MarshalInterface<global::Microsoft.UI.Xaml.Automation.Provider.ITextRangeProvider>.DisposeAbiArray((__retval_length, __retval_data));
            }
        }

        public static unsafe global::Microsoft.UI.Xaml.Automation.Provider.ITextRangeProvider RangeFromChild(IObjectReference _obj, global::Microsoft.UI.Xaml.Automation.Provider.IRawElementProviderSimple childElement)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __childElement = default;
            IntPtr __retval = default;
            try
            {
                __childElement = global::ABI.Microsoft.UI.Xaml.Automation.Provider.IRawElementProviderSimple.CreateMarshaler2(childElement);
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, IntPtr*, int>**)ThisPtr)[10](ThisPtr, MarshalInspectable<object>.GetAbi(__childElement), &__retval));
                global::System.GC.KeepAlive(_obj);
                return MarshalInterface<global::Microsoft.UI.Xaml.Automation.Provider.ITextRangeProvider>.FromAbi(__retval);
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__childElement);
                MarshalInterface<global::Microsoft.UI.Xaml.Automation.Provider.ITextRangeProvider>.DisposeAbi(__retval);
            }
        }

        public static unsafe global::Microsoft.UI.Xaml.Automation.Provider.ITextRangeProvider RangeFromPoint(IObjectReference _obj, global::Windows.Foundation.Point screenLocation)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::Windows.Foundation.Point, IntPtr*, int>**)ThisPtr)[11](ThisPtr, screenLocation, &__retval));
                global::System.GC.KeepAlive(_obj);
                return MarshalInterface<global::Microsoft.UI.Xaml.Automation.Provider.ITextRangeProvider>.FromAbi(__retval);
            }
            finally
            {
                MarshalInterface<global::Microsoft.UI.Xaml.Automation.Provider.ITextRangeProvider>.DisposeAbi(__retval);
            }
        }
        public static unsafe global::Microsoft.UI.Xaml.Automation.Provider.ITextRangeProvider get_DocumentRange(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[6](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return MarshalInterface<global::Microsoft.UI.Xaml.Automation.Provider.ITextRangeProvider>.FromAbi(__retval);
            }
            finally
            {
                MarshalInterface<global::Microsoft.UI.Xaml.Automation.Provider.ITextRangeProvider>.DisposeAbi(__retval);
            }
        }

        public static unsafe global::Microsoft.UI.Xaml.Automation.SupportedTextSelection get_SupportedTextSelection(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::Microsoft.UI.Xaml.Automation.SupportedTextSelection __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::Microsoft.UI.Xaml.Automation.SupportedTextSelection*, int>**)ThisPtr)[7](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0xE6, 0xDC, 0xE7, 0x37, 0x7A, 0xFE, 0xA7, 0x56, 0xA4, 0x7A, 0x94, 0x62, 0x87, 0x2C, 0x67, 0xEF };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

        public static global::System.IntPtr AbiToProjectionVftablePtr => ITextProvider.AbiToProjectionVftablePtr;

    }
    [DynamicInterfaceCastableImplementation]
    [Guid("37E7DCE6-FE7A-56A7-A47A-9462872C67EF")]
    internal unsafe interface ITextProvider : global::Microsoft.UI.Xaml.Automation.Provider.ITextProvider
    {

        public static readonly IntPtr AbiToProjectionVftablePtr;
        static unsafe ITextProvider()
        {
            AbiToProjectionVftablePtr = ComWrappersSupport.AllocateVtableMemory(typeof(ITextProvider), sizeof(IInspectable.Vftbl) + sizeof(IntPtr) * 6);
            *(IInspectable.Vftbl*)AbiToProjectionVftablePtr = IInspectable.Vftbl.AbiToProjectionVftable;
            ((delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>*)AbiToProjectionVftablePtr)[6] = &Do_Abi_get_DocumentRange_0;
            ((delegate* unmanaged[Stdcall]<IntPtr, global::Microsoft.UI.Xaml.Automation.SupportedTextSelection*, int>*)AbiToProjectionVftablePtr)[7] = &Do_Abi_get_SupportedTextSelection_1;
            ((delegate* unmanaged[Stdcall]<IntPtr, int*, IntPtr*, int>*)AbiToProjectionVftablePtr)[8] = &Do_Abi_GetSelection_2;
            ((delegate* unmanaged[Stdcall]<IntPtr, int*, IntPtr*, int>*)AbiToProjectionVftablePtr)[9] = &Do_Abi_GetVisibleRanges_3;
            ((delegate* unmanaged[Stdcall]<IntPtr, IntPtr, IntPtr*, int>*)AbiToProjectionVftablePtr)[10] = &Do_Abi_RangeFromChild_4;
            ((delegate* unmanaged[Stdcall]<IntPtr, global::Windows.Foundation.Point, IntPtr*, int>*)AbiToProjectionVftablePtr)[11] = &Do_Abi_RangeFromPoint_5;
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvStdcall) })]
        private static unsafe int Do_Abi_GetSelection_2(IntPtr thisPtr, int* __resultSize, IntPtr* result)
        {

            global::Microsoft.UI.Xaml.Automation.Provider.ITextRangeProvider[] __result = default;

            *result = default;
            *__resultSize = default;

            try
            {
                __result = global::WinRT.ComWrappersSupport.FindObject<global::Microsoft.UI.Xaml.Automation.Provider.ITextProvider>(thisPtr).GetSelection();
                (*__resultSize, *result) = MarshalInterface<global::Microsoft.UI.Xaml.Automation.Provider.ITextRangeProvider>.FromManagedArray(__result);

            }
            catch (Exception __exception__)
            {
                global::WinRT.ExceptionHelpers.SetErrorInfo(__exception__);
                return global::WinRT.ExceptionHelpers.GetHRForException(__exception__);
            }
            return 0;
        }
        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvStdcall) })]
        private static unsafe int Do_Abi_GetVisibleRanges_3(IntPtr thisPtr, int* __resultSize, IntPtr* result)
        {

            global::Microsoft.UI.Xaml.Automation.Provider.ITextRangeProvider[] __result = default;

            *result = default;
            *__resultSize = default;

            try
            {
                __result = global::WinRT.ComWrappersSupport.FindObject<global::Microsoft.UI.Xaml.Automation.Provider.ITextProvider>(thisPtr).GetVisibleRanges();
                (*__resultSize, *result) = MarshalInterface<global::Microsoft.UI.Xaml.Automation.Provider.ITextRangeProvider>.FromManagedArray(__result);

            }
            catch (Exception __exception__)
            {
                global::WinRT.ExceptionHelpers.SetErrorInfo(__exception__);
                return global::WinRT.ExceptionHelpers.GetHRForException(__exception__);
            }
            return 0;
        }
        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvStdcall) })]
        private static unsafe int Do_Abi_RangeFromChild_4(IntPtr thisPtr, IntPtr childElement, IntPtr* result)
        {

            global::Microsoft.UI.Xaml.Automation.Provider.ITextRangeProvider __result = default;

            *result = default;

            try
            {
                __result = global::WinRT.ComWrappersSupport.FindObject<global::Microsoft.UI.Xaml.Automation.Provider.ITextProvider>(thisPtr).RangeFromChild(global::ABI.Microsoft.UI.Xaml.Automation.Provider.IRawElementProviderSimple.FromAbi(childElement));
                *result = MarshalInterface<global::Microsoft.UI.Xaml.Automation.Provider.ITextRangeProvider>.FromManaged(__result);

            }
            catch (Exception __exception__)
            {
                global::WinRT.ExceptionHelpers.SetErrorInfo(__exception__);
                return global::WinRT.ExceptionHelpers.GetHRForException(__exception__);
            }
            return 0;
        }
        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvStdcall) })]
        private static unsafe int Do_Abi_RangeFromPoint_5(IntPtr thisPtr, global::Windows.Foundation.Point screenLocation, IntPtr* result)
        {

            global::Microsoft.UI.Xaml.Automation.Provider.ITextRangeProvider __result = default;

            *result = default;

            try
            {
                __result = global::WinRT.ComWrappersSupport.FindObject<global::Microsoft.UI.Xaml.Automation.Provider.ITextProvider>(thisPtr).RangeFromPoint(screenLocation);
                *result = MarshalInterface<global::Microsoft.UI.Xaml.Automation.Provider.ITextRangeProvider>.FromManaged(__result);

            }
            catch (Exception __exception__)
            {
                global::WinRT.ExceptionHelpers.SetErrorInfo(__exception__);
                return global::WinRT.ExceptionHelpers.GetHRForException(__exception__);
            }
            return 0;
        }
        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvStdcall) })]
        private static unsafe int Do_Abi_get_DocumentRange_0(IntPtr thisPtr, IntPtr* value)
        {

            global::Microsoft.UI.Xaml.Automation.Provider.ITextRangeProvider __value = default;

            *value = default;

            try
            {
                __value = global::WinRT.ComWrappersSupport.FindObject<global::Microsoft.UI.Xaml.Automation.Provider.ITextProvider>(thisPtr).DocumentRange;
                *value = MarshalInterface<global::Microsoft.UI.Xaml.Automation.Provider.ITextRangeProvider>.FromManaged(__value);

            }
            catch (Exception __exception__)
            {
                global::WinRT.ExceptionHelpers.SetErrorInfo(__exception__);
                return global::WinRT.ExceptionHelpers.GetHRForException(__exception__);
            }
            return 0;
        }
        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvStdcall) })]
        private static unsafe int Do_Abi_get_SupportedTextSelection_1(IntPtr thisPtr, global::Microsoft.UI.Xaml.Automation.SupportedTextSelection* value)
        {

            global::Microsoft.UI.Xaml.Automation.SupportedTextSelection __value = default;

            *value = default;

            try
            {
                __value = global::WinRT.ComWrappersSupport.FindObject<global::Microsoft.UI.Xaml.Automation.Provider.ITextProvider>(thisPtr).SupportedTextSelection;
                *value = __value;

            }
            catch (Exception __exception__)
            {
                global::WinRT.ExceptionHelpers.SetErrorInfo(__exception__);
                return global::WinRT.ExceptionHelpers.GetHRForException(__exception__);
            }
            return 0;
        }

        unsafe global::Microsoft.UI.Xaml.Automation.Provider.ITextRangeProvider[] global::Microsoft.UI.Xaml.Automation.Provider.ITextProvider.GetSelection()
        {
            var _obj = ((IObjectReference)((IWinRTObject)this).GetObjectReferenceForType(typeof(global::Microsoft.UI.Xaml.Automation.Provider.ITextProvider).TypeHandle));
            return global::ABI.Microsoft.UI.Xaml.Automation.Provider.ITextProviderMethods.GetSelection(_obj);
        }

        unsafe global::Microsoft.UI.Xaml.Automation.Provider.ITextRangeProvider[] global::Microsoft.UI.Xaml.Automation.Provider.ITextProvider.GetVisibleRanges()
        {
            var _obj = ((IObjectReference)((IWinRTObject)this).GetObjectReferenceForType(typeof(global::Microsoft.UI.Xaml.Automation.Provider.ITextProvider).TypeHandle));
            return global::ABI.Microsoft.UI.Xaml.Automation.Provider.ITextProviderMethods.GetVisibleRanges(_obj);
        }

        unsafe global::Microsoft.UI.Xaml.Automation.Provider.ITextRangeProvider global::Microsoft.UI.Xaml.Automation.Provider.ITextProvider.RangeFromChild(global::Microsoft.UI.Xaml.Automation.Provider.IRawElementProviderSimple childElement)
        {
            var _obj = ((IObjectReference)((IWinRTObject)this).GetObjectReferenceForType(typeof(global::Microsoft.UI.Xaml.Automation.Provider.ITextProvider).TypeHandle));
            return global::ABI.Microsoft.UI.Xaml.Automation.Provider.ITextProviderMethods.RangeFromChild(_obj, childElement);
        }

        unsafe global::Microsoft.UI.Xaml.Automation.Provider.ITextRangeProvider global::Microsoft.UI.Xaml.Automation.Provider.ITextProvider.RangeFromPoint(global::Windows.Foundation.Point screenLocation)
        {
            var _obj = ((IObjectReference)((IWinRTObject)this).GetObjectReferenceForType(typeof(global::Microsoft.UI.Xaml.Automation.Provider.ITextProvider).TypeHandle));
            return global::ABI.Microsoft.UI.Xaml.Automation.Provider.ITextProviderMethods.RangeFromPoint(_obj, screenLocation);
        }

        unsafe global::Microsoft.UI.Xaml.Automation.Provider.ITextRangeProvider global::Microsoft.UI.Xaml.Automation.Provider.ITextProvider.DocumentRange
        {
            get
            {
                var _obj = ((IObjectReference)((IWinRTObject)this).GetObjectReferenceForType(typeof(global::Microsoft.UI.Xaml.Automation.Provider.ITextProvider).TypeHandle));
                return global::ABI.Microsoft.UI.Xaml.Automation.Provider.ITextProviderMethods.get_DocumentRange(_obj);
            }
        }

        unsafe global::Microsoft.UI.Xaml.Automation.SupportedTextSelection global::Microsoft.UI.Xaml.Automation.Provider.ITextProvider.SupportedTextSelection
        {
            get
            {
                var _obj = ((IObjectReference)((IWinRTObject)this).GetObjectReferenceForType(typeof(global::Microsoft.UI.Xaml.Automation.Provider.ITextProvider).TypeHandle));
                return global::ABI.Microsoft.UI.Xaml.Automation.Provider.ITextProviderMethods.get_SupportedTextSelection(_obj);
            }
        }
    }

    public static class ITextProvider2Methods
    {


        public static unsafe global::Microsoft.UI.Xaml.Automation.Provider.ITextRangeProvider RangeFromAnnotation(IObjectReference _obj, global::Microsoft.UI.Xaml.Automation.Provider.IRawElementProviderSimple annotationElement)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __annotationElement = default;
            IntPtr __retval = default;
            try
            {
                __annotationElement = global::ABI.Microsoft.UI.Xaml.Automation.Provider.IRawElementProviderSimple.CreateMarshaler2(annotationElement);
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, IntPtr*, int>**)ThisPtr)[6](ThisPtr, MarshalInspectable<object>.GetAbi(__annotationElement), &__retval));
                global::System.GC.KeepAlive(_obj);
                return MarshalInterface<global::Microsoft.UI.Xaml.Automation.Provider.ITextRangeProvider>.FromAbi(__retval);
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__annotationElement);
                MarshalInterface<global::Microsoft.UI.Xaml.Automation.Provider.ITextRangeProvider>.DisposeAbi(__retval);
            }
        }

        public static unsafe global::Microsoft.UI.Xaml.Automation.Provider.ITextRangeProvider GetCaretRange(IObjectReference _obj, out bool isActive)
        {
            var ThisPtr = _obj.ThisPtr;

            byte __isActive = default;
            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, byte*, IntPtr*, int>**)ThisPtr)[7](ThisPtr, &__isActive, &__retval));
                global::System.GC.KeepAlive(_obj);
                isActive = __isActive != 0;
                return MarshalInterface<global::Microsoft.UI.Xaml.Automation.Provider.ITextRangeProvider>.FromAbi(__retval);
            }
            finally
            {
                MarshalInterface<global::Microsoft.UI.Xaml.Automation.Provider.ITextRangeProvider>.DisposeAbi(__retval);
            }
        }


        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0x12, 0xF0, 0x44, 0x68, 0xE6, 0xC7, 0x63, 0x57, 0xBA, 0x4, 0x5B, 0x6D, 0xB9, 0x10, 0xCD, 0x34 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

        public static global::System.IntPtr AbiToProjectionVftablePtr => ITextProvider2.AbiToProjectionVftablePtr;

    }
    [DynamicInterfaceCastableImplementation]
    [Guid("6844F012-C7E6-5763-BA04-5B6DB910CD34")]
    internal unsafe interface ITextProvider2 : global::Microsoft.UI.Xaml.Automation.Provider.ITextProvider2
    {

        public static readonly IntPtr AbiToProjectionVftablePtr;
        static unsafe ITextProvider2()
        {
            AbiToProjectionVftablePtr = ComWrappersSupport.AllocateVtableMemory(typeof(ITextProvider2), sizeof(IInspectable.Vftbl) + sizeof(IntPtr) * 2);
            *(IInspectable.Vftbl*)AbiToProjectionVftablePtr = IInspectable.Vftbl.AbiToProjectionVftable;
            ((delegate* unmanaged[Stdcall]<IntPtr, IntPtr, IntPtr*, int>*)AbiToProjectionVftablePtr)[6] = &Do_Abi_RangeFromAnnotation_0;
            ((delegate* unmanaged[Stdcall]<IntPtr, byte*, IntPtr*, int>*)AbiToProjectionVftablePtr)[7] = &Do_Abi_GetCaretRange_1;
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvStdcall) })]
        private static unsafe int Do_Abi_RangeFromAnnotation_0(IntPtr thisPtr, IntPtr annotationElement, IntPtr* result)
        {

            global::Microsoft.UI.Xaml.Automation.Provider.ITextRangeProvider __result = default;

            *result = default;

            try
            {
                __result = global::WinRT.ComWrappersSupport.FindObject<global::Microsoft.UI.Xaml.Automation.Provider.ITextProvider2>(thisPtr).RangeFromAnnotation(global::ABI.Microsoft.UI.Xaml.Automation.Provider.IRawElementProviderSimple.FromAbi(annotationElement));
                *result = MarshalInterface<global::Microsoft.UI.Xaml.Automation.Provider.ITextRangeProvider>.FromManaged(__result);

            }
            catch (Exception __exception__)
            {
                global::WinRT.ExceptionHelpers.SetErrorInfo(__exception__);
                return global::WinRT.ExceptionHelpers.GetHRForException(__exception__);
            }
            return 0;
        }
        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvStdcall) })]
        private static unsafe int Do_Abi_GetCaretRange_1(IntPtr thisPtr, byte* isActive, IntPtr* returnValue)
        {

            global::Microsoft.UI.Xaml.Automation.Provider.ITextRangeProvider __returnValue = default;

            *isActive = default;
            *returnValue = default;
            bool __isActive = default;

            try
            {
                __returnValue = global::WinRT.ComWrappersSupport.FindObject<global::Microsoft.UI.Xaml.Automation.Provider.ITextProvider2>(thisPtr).GetCaretRange(out __isActive);
                *isActive = (byte)(__isActive ? 1 : 0);
                *returnValue = MarshalInterface<global::Microsoft.UI.Xaml.Automation.Provider.ITextRangeProvider>.FromManaged(__returnValue);

            }
            catch (Exception __exception__)
            {
                global::WinRT.ExceptionHelpers.SetErrorInfo(__exception__);
                return global::WinRT.ExceptionHelpers.GetHRForException(__exception__);
            }
            return 0;
        }

        unsafe global::Microsoft.UI.Xaml.Automation.Provider.ITextRangeProvider global::Microsoft.UI.Xaml.Automation.Provider.ITextProvider2.RangeFromAnnotation(global::Microsoft.UI.Xaml.Automation.Provider.IRawElementProviderSimple annotationElement)
        {
            var _obj = ((IObjectReference)((IWinRTObject)this).GetObjectReferenceForType(typeof(global::Microsoft.UI.Xaml.Automation.Provider.ITextProvider2).TypeHandle));
            return global::ABI.Microsoft.UI.Xaml.Automation.Provider.ITextProvider2Methods.RangeFromAnnotation(_obj, annotationElement);
        }

        unsafe global::Microsoft.UI.Xaml.Automation.Provider.ITextRangeProvider global::Microsoft.UI.Xaml.Automation.Provider.ITextProvider2.GetCaretRange(out bool isActive)
        {
            var _obj = ((IObjectReference)((IWinRTObject)this).GetObjectReferenceForType(typeof(global::Microsoft.UI.Xaml.Automation.Provider.ITextProvider2).TypeHandle));
            return global::ABI.Microsoft.UI.Xaml.Automation.Provider.ITextProvider2Methods.GetCaretRange(_obj, out isActive);
        }

        global::Microsoft.UI.Xaml.Automation.Provider.ITextRangeProvider[] global::Microsoft.UI.Xaml.Automation.Provider.ITextProvider.GetSelection() => ((global::Microsoft.UI.Xaml.Automation.Provider.ITextProvider)(IWinRTObject)this).GetSelection();

        global::Microsoft.UI.Xaml.Automation.Provider.ITextRangeProvider[] global::Microsoft.UI.Xaml.Automation.Provider.ITextProvider.GetVisibleRanges() => ((global::Microsoft.UI.Xaml.Automation.Provider.ITextProvider)(IWinRTObject)this).GetVisibleRanges();

        global::Microsoft.UI.Xaml.Automation.Provider.ITextRangeProvider global::Microsoft.UI.Xaml.Automation.Provider.ITextProvider.RangeFromChild(global::Microsoft.UI.Xaml.Automation.Provider.IRawElementProviderSimple childElement) => ((global::Microsoft.UI.Xaml.Automation.Provider.ITextProvider)(IWinRTObject)this).RangeFromChild(childElement);

        global::Microsoft.UI.Xaml.Automation.Provider.ITextRangeProvider global::Microsoft.UI.Xaml.Automation.Provider.ITextProvider.RangeFromPoint(global::Windows.Foundation.Point screenLocation) => ((global::Microsoft.UI.Xaml.Automation.Provider.ITextProvider)(IWinRTObject)this).RangeFromPoint(screenLocation);

        global::Microsoft.UI.Xaml.Automation.Provider.ITextRangeProvider global::Microsoft.UI.Xaml.Automation.Provider.ITextProvider.DocumentRange => ((global::Microsoft.UI.Xaml.Automation.Provider.ITextProvider)(IWinRTObject)this).DocumentRange;

        global::Microsoft.UI.Xaml.Automation.SupportedTextSelection global::Microsoft.UI.Xaml.Automation.Provider.ITextProvider.SupportedTextSelection => ((global::Microsoft.UI.Xaml.Automation.Provider.ITextProvider)(IWinRTObject)this).SupportedTextSelection;
    }

    public static class ITextRangeProviderMethods
    {


        public static unsafe global::Microsoft.UI.Xaml.Automation.Provider.ITextRangeProvider Clone(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[6](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return MarshalInterface<global::Microsoft.UI.Xaml.Automation.Provider.ITextRangeProvider>.FromAbi(__retval);
            }
            finally
            {
                MarshalInterface<global::Microsoft.UI.Xaml.Automation.Provider.ITextRangeProvider>.DisposeAbi(__retval);
            }
        }

        public static unsafe bool Compare(IObjectReference _obj, global::Microsoft.UI.Xaml.Automation.Provider.ITextRangeProvider textRangeProvider)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __textRangeProvider = default;
            byte __retval = default;
            try
            {
                __textRangeProvider = MarshalInterface<global::Microsoft.UI.Xaml.Automation.Provider.ITextRangeProvider>.CreateMarshaler2(textRangeProvider, global::ABI.Microsoft.UI.Xaml.Automation.Provider.ITextRangeProviderMethods.IID);
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, byte*, int>**)ThisPtr)[7](ThisPtr, MarshalInspectable<object>.GetAbi(__textRangeProvider), &__retval));
                global::System.GC.KeepAlive(_obj);
                return __retval != 0;
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__textRangeProvider);
            }
        }

        public static unsafe int CompareEndpoints(IObjectReference _obj, global::Microsoft.UI.Xaml.Automation.Text.TextPatternRangeEndpoint endpoint, global::Microsoft.UI.Xaml.Automation.Provider.ITextRangeProvider textRangeProvider, global::Microsoft.UI.Xaml.Automation.Text.TextPatternRangeEndpoint targetEndpoint)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __textRangeProvider = default;
            int __retval = default;
            try
            {
                __textRangeProvider = MarshalInterface<global::Microsoft.UI.Xaml.Automation.Provider.ITextRangeProvider>.CreateMarshaler2(textRangeProvider, global::ABI.Microsoft.UI.Xaml.Automation.Provider.ITextRangeProviderMethods.IID);
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::Microsoft.UI.Xaml.Automation.Text.TextPatternRangeEndpoint, IntPtr, global::Microsoft.UI.Xaml.Automation.Text.TextPatternRangeEndpoint, int*, int>**)ThisPtr)[8](ThisPtr, endpoint, MarshalInspectable<object>.GetAbi(__textRangeProvider), targetEndpoint, &__retval));
                global::System.GC.KeepAlive(_obj);
                return __retval;
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__textRangeProvider);
            }
        }

        public static unsafe void ExpandToEnclosingUnit(IObjectReference _obj, global::Microsoft.UI.Xaml.Automation.Text.TextUnit unit)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::Microsoft.UI.Xaml.Automation.Text.TextUnit, int>**)ThisPtr)[9](ThisPtr, unit));
            global::System.GC.KeepAlive(_obj);
        }

        public static unsafe global::Microsoft.UI.Xaml.Automation.Provider.ITextRangeProvider FindAttribute(IObjectReference _obj, int attributeId, object value, bool backward)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __value = default;
            IntPtr __retval = default;
            try
            {
                __value = MarshalInspectable<object>.CreateMarshaler2(value);
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, int, IntPtr, byte, IntPtr*, int>**)ThisPtr)[10](ThisPtr, attributeId, MarshalInspectable<object>.GetAbi(__value), (byte)(backward ? 1 : 0), &__retval));
                global::System.GC.KeepAlive(_obj);
                return MarshalInterface<global::Microsoft.UI.Xaml.Automation.Provider.ITextRangeProvider>.FromAbi(__retval);
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__value);
                MarshalInterface<global::Microsoft.UI.Xaml.Automation.Provider.ITextRangeProvider>.DisposeAbi(__retval);
            }
        }

        public static unsafe global::Microsoft.UI.Xaml.Automation.Provider.ITextRangeProvider FindText(IObjectReference _obj, string text, bool backward, bool ignoreCase)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                MarshalString.Pinnable __text = new(text);
                fixed(void* ___text = __text)
                {
                    global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, byte, byte, IntPtr*, int>**)ThisPtr)[11](ThisPtr, MarshalString.GetAbi(ref __text), (byte)(backward ? 1 : 0), (byte)(ignoreCase ? 1 : 0), &__retval));
                    global::System.GC.KeepAlive(_obj);
                    return MarshalInterface<global::Microsoft.UI.Xaml.Automation.Provider.ITextRangeProvider>.FromAbi(__retval);
                }
            }
            finally
            {
                MarshalInterface<global::Microsoft.UI.Xaml.Automation.Provider.ITextRangeProvider>.DisposeAbi(__retval);
            }
        }

        public static unsafe object GetAttributeValue(IObjectReference _obj, int attributeId)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, int, IntPtr*, int>**)ThisPtr)[12](ThisPtr, attributeId, &__retval));
                global::System.GC.KeepAlive(_obj);
                return MarshalInspectable<object>.FromAbi(__retval);
            }
            finally
            {
                MarshalInspectable<object>.DisposeAbi(__retval);
            }
        }

        public static unsafe void GetBoundingRectangles(IObjectReference _obj, out double[] returnValue)
        {
            var ThisPtr = _obj.ThisPtr;

            int __returnValue_length = default;
            IntPtr __returnValue_data = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, int*, IntPtr*, int>**)ThisPtr)[13](ThisPtr, &__returnValue_length, &__returnValue_data));
                global::System.GC.KeepAlive(_obj);
                returnValue = MarshalBlittable<double>.FromAbiArray((__returnValue_length, __returnValue_data));
            }
            finally
            {
                MarshalBlittable<double>.DisposeAbiArray((__returnValue_length, __returnValue_data));
            }
        }

        public static unsafe global::Microsoft.UI.Xaml.Automation.Provider.IRawElementProviderSimple GetEnclosingElement(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[14](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Xaml.Automation.Provider.IRawElementProviderSimple.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.UI.Xaml.Automation.Provider.IRawElementProviderSimple.DisposeAbi(__retval);
            }
        }

        public static unsafe string GetText(IObjectReference _obj, int maxLength)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, int, IntPtr*, int>**)ThisPtr)[15](ThisPtr, maxLength, &__retval));
                global::System.GC.KeepAlive(_obj);
                return MarshalString.FromAbi(__retval);
            }
            finally
            {
                MarshalString.DisposeAbi(__retval);
            }
        }

        public static unsafe int Move(IObjectReference _obj, global::Microsoft.UI.Xaml.Automation.Text.TextUnit unit, int count)
        {
            var ThisPtr = _obj.ThisPtr;

            int __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::Microsoft.UI.Xaml.Automation.Text.TextUnit, int, int*, int>**)ThisPtr)[16](ThisPtr, unit, count, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }

        public static unsafe int MoveEndpointByUnit(IObjectReference _obj, global::Microsoft.UI.Xaml.Automation.Text.TextPatternRangeEndpoint endpoint, global::Microsoft.UI.Xaml.Automation.Text.TextUnit unit, int count)
        {
            var ThisPtr = _obj.ThisPtr;

            int __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::Microsoft.UI.Xaml.Automation.Text.TextPatternRangeEndpoint, global::Microsoft.UI.Xaml.Automation.Text.TextUnit, int, int*, int>**)ThisPtr)[17](ThisPtr, endpoint, unit, count, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }

        public static unsafe void MoveEndpointByRange(IObjectReference _obj, global::Microsoft.UI.Xaml.Automation.Text.TextPatternRangeEndpoint endpoint, global::Microsoft.UI.Xaml.Automation.Provider.ITextRangeProvider textRangeProvider, global::Microsoft.UI.Xaml.Automation.Text.TextPatternRangeEndpoint targetEndpoint)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __textRangeProvider = default;
            try
            {
                __textRangeProvider = MarshalInterface<global::Microsoft.UI.Xaml.Automation.Provider.ITextRangeProvider>.CreateMarshaler2(textRangeProvider, global::ABI.Microsoft.UI.Xaml.Automation.Provider.ITextRangeProviderMethods.IID);
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::Microsoft.UI.Xaml.Automation.Text.TextPatternRangeEndpoint, IntPtr, global::Microsoft.UI.Xaml.Automation.Text.TextPatternRangeEndpoint, int>**)ThisPtr)[18](ThisPtr, endpoint, MarshalInspectable<object>.GetAbi(__textRangeProvider), targetEndpoint));
                global::System.GC.KeepAlive(_obj);
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__textRangeProvider);
            }
        }

        public static unsafe void Select(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, int>**)ThisPtr)[19](ThisPtr));
            global::System.GC.KeepAlive(_obj);
        }

        public static unsafe void AddToSelection(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, int>**)ThisPtr)[20](ThisPtr));
            global::System.GC.KeepAlive(_obj);
        }

        public static unsafe void RemoveFromSelection(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, int>**)ThisPtr)[21](ThisPtr));
            global::System.GC.KeepAlive(_obj);
        }

        public static unsafe void ScrollIntoView(IObjectReference _obj, bool alignToTop)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, byte, int>**)ThisPtr)[22](ThisPtr, (byte)(alignToTop ? 1 : 0)));
            global::System.GC.KeepAlive(_obj);
        }

        public static unsafe global::Microsoft.UI.Xaml.Automation.Provider.IRawElementProviderSimple[] GetChildren(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            int __retval_length = default;
            IntPtr __retval_data = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, int*, IntPtr*, int>**)ThisPtr)[23](ThisPtr, &__retval_length, &__retval_data));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Xaml.Automation.Provider.IRawElementProviderSimple.FromAbiArray((__retval_length, __retval_data));
            }
            finally
            {
                global::ABI.Microsoft.UI.Xaml.Automation.Provider.IRawElementProviderSimple.DisposeAbiArray((__retval_length, __retval_data));
            }
        }


        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0x61, 0x3, 0x21, 0x84, 0xE2, 0x6C, 0x84, 0x50, 0xBF, 0x3B, 0x28, 0xAF, 0xA6, 0xE9, 0x85, 0x1F };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

        public static global::System.IntPtr AbiToProjectionVftablePtr => ITextRangeProvider.AbiToProjectionVftablePtr;

    }
    [DynamicInterfaceCastableImplementation]
    [Guid("84210361-6CE2-5084-BF3B-28AFA6E9851F")]
    internal unsafe interface ITextRangeProvider : global::Microsoft.UI.Xaml.Automation.Provider.ITextRangeProvider
    {

        public static readonly IntPtr AbiToProjectionVftablePtr;
        static unsafe ITextRangeProvider()
        {
            AbiToProjectionVftablePtr = ComWrappersSupport.AllocateVtableMemory(typeof(ITextRangeProvider), sizeof(IInspectable.Vftbl) + sizeof(IntPtr) * 18);
            *(IInspectable.Vftbl*)AbiToProjectionVftablePtr = IInspectable.Vftbl.AbiToProjectionVftable;
            ((delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>*)AbiToProjectionVftablePtr)[6] = &Do_Abi_Clone_0;
            ((delegate* unmanaged[Stdcall]<IntPtr, IntPtr, byte*, int>*)AbiToProjectionVftablePtr)[7] = &Do_Abi_Compare_1;
            ((delegate* unmanaged[Stdcall]<IntPtr, global::Microsoft.UI.Xaml.Automation.Text.TextPatternRangeEndpoint, IntPtr, global::Microsoft.UI.Xaml.Automation.Text.TextPatternRangeEndpoint, int*, int>*)AbiToProjectionVftablePtr)[8] = &Do_Abi_CompareEndpoints_2;
            ((delegate* unmanaged[Stdcall]<IntPtr, global::Microsoft.UI.Xaml.Automation.Text.TextUnit, int>*)AbiToProjectionVftablePtr)[9] = &Do_Abi_ExpandToEnclosingUnit_3;
            ((delegate* unmanaged[Stdcall]<IntPtr, int, IntPtr, byte, IntPtr*, int>*)AbiToProjectionVftablePtr)[10] = &Do_Abi_FindAttribute_4;
            ((delegate* unmanaged[Stdcall]<IntPtr, IntPtr, byte, byte, IntPtr*, int>*)AbiToProjectionVftablePtr)[11] = &Do_Abi_FindText_5;
            ((delegate* unmanaged[Stdcall]<IntPtr, int, IntPtr*, int>*)AbiToProjectionVftablePtr)[12] = &Do_Abi_GetAttributeValue_6;
            ((delegate* unmanaged[Stdcall]<IntPtr, int*, IntPtr*, int>*)AbiToProjectionVftablePtr)[13] = &Do_Abi_GetBoundingRectangles_7;
            ((delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>*)AbiToProjectionVftablePtr)[14] = &Do_Abi_GetEnclosingElement_8;
            ((delegate* unmanaged[Stdcall]<IntPtr, int, IntPtr*, int>*)AbiToProjectionVftablePtr)[15] = &Do_Abi_GetText_9;
            ((delegate* unmanaged[Stdcall]<IntPtr, global::Microsoft.UI.Xaml.Automation.Text.TextUnit, int, int*, int>*)AbiToProjectionVftablePtr)[16] = &Do_Abi_Move_10;
            ((delegate* unmanaged[Stdcall]<IntPtr, global::Microsoft.UI.Xaml.Automation.Text.TextPatternRangeEndpoint, global::Microsoft.UI.Xaml.Automation.Text.TextUnit, int, int*, int>*)AbiToProjectionVftablePtr)[17] = &Do_Abi_MoveEndpointByUnit_11;
            ((delegate* unmanaged[Stdcall]<IntPtr, global::Microsoft.UI.Xaml.Automation.Text.TextPatternRangeEndpoint, IntPtr, global::Microsoft.UI.Xaml.Automation.Text.TextPatternRangeEndpoint, int>*)AbiToProjectionVftablePtr)[18] = &Do_Abi_MoveEndpointByRange_12;
            ((delegate* unmanaged[Stdcall]<IntPtr, int>*)AbiToProjectionVftablePtr)[19] = &Do_Abi_Select_13;
            ((delegate* unmanaged[Stdcall]<IntPtr, int>*)AbiToProjectionVftablePtr)[20] = &Do_Abi_AddToSelection_14;
            ((delegate* unmanaged[Stdcall]<IntPtr, int>*)AbiToProjectionVftablePtr)[21] = &Do_Abi_RemoveFromSelection_15;
            ((delegate* unmanaged[Stdcall]<IntPtr, byte, int>*)AbiToProjectionVftablePtr)[22] = &Do_Abi_ScrollIntoView_16;
            ((delegate* unmanaged[Stdcall]<IntPtr, int*, IntPtr*, int>*)AbiToProjectionVftablePtr)[23] = &Do_Abi_GetChildren_17;
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvStdcall) })]
        private static unsafe int Do_Abi_Clone_0(IntPtr thisPtr, IntPtr* result)
        {

            global::Microsoft.UI.Xaml.Automation.Provider.ITextRangeProvider __result = default;

            *result = default;

            try
            {
                __result = global::WinRT.ComWrappersSupport.FindObject<global::Microsoft.UI.Xaml.Automation.Provider.ITextRangeProvider>(thisPtr).Clone();
                *result = MarshalInterface<global::Microsoft.UI.Xaml.Automation.Provider.ITextRangeProvider>.FromManaged(__result);

            }
            catch (Exception __exception__)
            {
                global::WinRT.ExceptionHelpers.SetErrorInfo(__exception__);
                return global::WinRT.ExceptionHelpers.GetHRForException(__exception__);
            }
            return 0;
        }
        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvStdcall) })]
        private static unsafe int Do_Abi_Compare_1(IntPtr thisPtr, IntPtr textRangeProvider, byte* result)
        {

            bool __result = default;

            *result = default;

            try
            {
                __result = global::WinRT.ComWrappersSupport.FindObject<global::Microsoft.UI.Xaml.Automation.Provider.ITextRangeProvider>(thisPtr).Compare(MarshalInterface<global::Microsoft.UI.Xaml.Automation.Provider.ITextRangeProvider>.FromAbi(textRangeProvider));
                *result = (byte)(__result ? 1 : 0);

            }
            catch (Exception __exception__)
            {
                global::WinRT.ExceptionHelpers.SetErrorInfo(__exception__);
                return global::WinRT.ExceptionHelpers.GetHRForException(__exception__);
            }
            return 0;
        }
        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvStdcall) })]
        private static unsafe int Do_Abi_CompareEndpoints_2(IntPtr thisPtr, global::Microsoft.UI.Xaml.Automation.Text.TextPatternRangeEndpoint endpoint, IntPtr textRangeProvider, global::Microsoft.UI.Xaml.Automation.Text.TextPatternRangeEndpoint targetEndpoint, int* result)
        {

            int __result = default;

            *result = default;

            try
            {
                __result = global::WinRT.ComWrappersSupport.FindObject<global::Microsoft.UI.Xaml.Automation.Provider.ITextRangeProvider>(thisPtr).CompareEndpoints(endpoint, MarshalInterface<global::Microsoft.UI.Xaml.Automation.Provider.ITextRangeProvider>.FromAbi(textRangeProvider), targetEndpoint);
                *result = __result;

            }
            catch (Exception __exception__)
            {
                global::WinRT.ExceptionHelpers.SetErrorInfo(__exception__);
                return global::WinRT.ExceptionHelpers.GetHRForException(__exception__);
            }
            return 0;
        }
        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvStdcall) })]
        private static unsafe int Do_Abi_ExpandToEnclosingUnit_3(IntPtr thisPtr, global::Microsoft.UI.Xaml.Automation.Text.TextUnit unit)
        {



            try
            {
                global::WinRT.ComWrappersSupport.FindObject<global::Microsoft.UI.Xaml.Automation.Provider.ITextRangeProvider>(thisPtr).ExpandToEnclosingUnit(unit);

            }
            catch (Exception __exception__)
            {
                global::WinRT.ExceptionHelpers.SetErrorInfo(__exception__);
                return global::WinRT.ExceptionHelpers.GetHRForException(__exception__);
            }
            return 0;
        }
        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvStdcall) })]
        private static unsafe int Do_Abi_FindAttribute_4(IntPtr thisPtr, int attributeId, IntPtr value, byte backward, IntPtr* result)
        {

            global::Microsoft.UI.Xaml.Automation.Provider.ITextRangeProvider __result = default;

            *result = default;

            try
            {
                __result = global::WinRT.ComWrappersSupport.FindObject<global::Microsoft.UI.Xaml.Automation.Provider.ITextRangeProvider>(thisPtr).FindAttribute(attributeId, MarshalInspectable<object>.FromAbi(value), backward != 0);
                *result = MarshalInterface<global::Microsoft.UI.Xaml.Automation.Provider.ITextRangeProvider>.FromManaged(__result);

            }
            catch (Exception __exception__)
            {
                global::WinRT.ExceptionHelpers.SetErrorInfo(__exception__);
                return global::WinRT.ExceptionHelpers.GetHRForException(__exception__);
            }
            return 0;
        }
        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvStdcall) })]
        private static unsafe int Do_Abi_FindText_5(IntPtr thisPtr, IntPtr text, byte backward, byte ignoreCase, IntPtr* result)
        {

            global::Microsoft.UI.Xaml.Automation.Provider.ITextRangeProvider __result = default;

            *result = default;

            try
            {
                __result = global::WinRT.ComWrappersSupport.FindObject<global::Microsoft.UI.Xaml.Automation.Provider.ITextRangeProvider>(thisPtr).FindText(MarshalString.FromAbi(text), backward != 0, ignoreCase != 0);
                *result = MarshalInterface<global::Microsoft.UI.Xaml.Automation.Provider.ITextRangeProvider>.FromManaged(__result);

            }
            catch (Exception __exception__)
            {
                global::WinRT.ExceptionHelpers.SetErrorInfo(__exception__);
                return global::WinRT.ExceptionHelpers.GetHRForException(__exception__);
            }
            return 0;
        }
        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvStdcall) })]
        private static unsafe int Do_Abi_GetAttributeValue_6(IntPtr thisPtr, int attributeId, IntPtr* result)
        {

            object __result = default;

            *result = default;

            try
            {
                __result = global::WinRT.ComWrappersSupport.FindObject<global::Microsoft.UI.Xaml.Automation.Provider.ITextRangeProvider>(thisPtr).GetAttributeValue(attributeId);
                *result = MarshalInspectable<object>.FromManaged(__result);

            }
            catch (Exception __exception__)
            {
                global::WinRT.ExceptionHelpers.SetErrorInfo(__exception__);
                return global::WinRT.ExceptionHelpers.GetHRForException(__exception__);
            }
            return 0;
        }
        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvStdcall) })]
        private static unsafe int Do_Abi_GetBoundingRectangles_7(IntPtr thisPtr, int* __returnValueSize, IntPtr* returnValue)
        {


            *returnValue = default;
            *__returnValueSize = default;
            double[] __returnValue = default;

            try
            {
                global::WinRT.ComWrappersSupport.FindObject<global::Microsoft.UI.Xaml.Automation.Provider.ITextRangeProvider>(thisPtr).GetBoundingRectangles(out __returnValue);
                (*__returnValueSize, *returnValue) = MarshalBlittable<double>.FromManagedArray(__returnValue);

            }
            catch (Exception __exception__)
            {
                global::WinRT.ExceptionHelpers.SetErrorInfo(__exception__);
                return global::WinRT.ExceptionHelpers.GetHRForException(__exception__);
            }
            return 0;
        }
        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvStdcall) })]
        private static unsafe int Do_Abi_GetEnclosingElement_8(IntPtr thisPtr, IntPtr* result)
        {

            global::Microsoft.UI.Xaml.Automation.Provider.IRawElementProviderSimple __result = default;

            *result = default;

            try
            {
                __result = global::WinRT.ComWrappersSupport.FindObject<global::Microsoft.UI.Xaml.Automation.Provider.ITextRangeProvider>(thisPtr).GetEnclosingElement();
                *result = global::ABI.Microsoft.UI.Xaml.Automation.Provider.IRawElementProviderSimple.FromManaged(__result);

            }
            catch (Exception __exception__)
            {
                global::WinRT.ExceptionHelpers.SetErrorInfo(__exception__);
                return global::WinRT.ExceptionHelpers.GetHRForException(__exception__);
            }
            return 0;
        }
        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvStdcall) })]
        private static unsafe int Do_Abi_GetText_9(IntPtr thisPtr, int maxLength, IntPtr* result)
        {

            string __result = default;

            *result = default;

            try
            {
                __result = global::WinRT.ComWrappersSupport.FindObject<global::Microsoft.UI.Xaml.Automation.Provider.ITextRangeProvider>(thisPtr).GetText(maxLength);
                *result = MarshalString.FromManaged(__result);

            }
            catch (Exception __exception__)
            {
                global::WinRT.ExceptionHelpers.SetErrorInfo(__exception__);
                return global::WinRT.ExceptionHelpers.GetHRForException(__exception__);
            }
            return 0;
        }
        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvStdcall) })]
        private static unsafe int Do_Abi_Move_10(IntPtr thisPtr, global::Microsoft.UI.Xaml.Automation.Text.TextUnit unit, int count, int* result)
        {

            int __result = default;

            *result = default;

            try
            {
                __result = global::WinRT.ComWrappersSupport.FindObject<global::Microsoft.UI.Xaml.Automation.Provider.ITextRangeProvider>(thisPtr).Move(unit, count);
                *result = __result;

            }
            catch (Exception __exception__)
            {
                global::WinRT.ExceptionHelpers.SetErrorInfo(__exception__);
                return global::WinRT.ExceptionHelpers.GetHRForException(__exception__);
            }
            return 0;
        }
        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvStdcall) })]
        private static unsafe int Do_Abi_MoveEndpointByUnit_11(IntPtr thisPtr, global::Microsoft.UI.Xaml.Automation.Text.TextPatternRangeEndpoint endpoint, global::Microsoft.UI.Xaml.Automation.Text.TextUnit unit, int count, int* result)
        {

            int __result = default;

            *result = default;

            try
            {
                __result = global::WinRT.ComWrappersSupport.FindObject<global::Microsoft.UI.Xaml.Automation.Provider.ITextRangeProvider>(thisPtr).MoveEndpointByUnit(endpoint, unit, count);
                *result = __result;

            }
            catch (Exception __exception__)
            {
                global::WinRT.ExceptionHelpers.SetErrorInfo(__exception__);
                return global::WinRT.ExceptionHelpers.GetHRForException(__exception__);
            }
            return 0;
        }
        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvStdcall) })]
        private static unsafe int Do_Abi_MoveEndpointByRange_12(IntPtr thisPtr, global::Microsoft.UI.Xaml.Automation.Text.TextPatternRangeEndpoint endpoint, IntPtr textRangeProvider, global::Microsoft.UI.Xaml.Automation.Text.TextPatternRangeEndpoint targetEndpoint)
        {



            try
            {
                global::WinRT.ComWrappersSupport.FindObject<global::Microsoft.UI.Xaml.Automation.Provider.ITextRangeProvider>(thisPtr).MoveEndpointByRange(endpoint, MarshalInterface<global::Microsoft.UI.Xaml.Automation.Provider.ITextRangeProvider>.FromAbi(textRangeProvider), targetEndpoint);

            }
            catch (Exception __exception__)
            {
                global::WinRT.ExceptionHelpers.SetErrorInfo(__exception__);
                return global::WinRT.ExceptionHelpers.GetHRForException(__exception__);
            }
            return 0;
        }
        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvStdcall) })]
        private static unsafe int Do_Abi_Select_13(IntPtr thisPtr)
        {



            try
            {
                global::WinRT.ComWrappersSupport.FindObject<global::Microsoft.UI.Xaml.Automation.Provider.ITextRangeProvider>(thisPtr).Select();

            }
            catch (Exception __exception__)
            {
                global::WinRT.ExceptionHelpers.SetErrorInfo(__exception__);
                return global::WinRT.ExceptionHelpers.GetHRForException(__exception__);
            }
            return 0;
        }
        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvStdcall) })]
        private static unsafe int Do_Abi_AddToSelection_14(IntPtr thisPtr)
        {



            try
            {
                global::WinRT.ComWrappersSupport.FindObject<global::Microsoft.UI.Xaml.Automation.Provider.ITextRangeProvider>(thisPtr).AddToSelection();

            }
            catch (Exception __exception__)
            {
                global::WinRT.ExceptionHelpers.SetErrorInfo(__exception__);
                return global::WinRT.ExceptionHelpers.GetHRForException(__exception__);
            }
            return 0;
        }
        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvStdcall) })]
        private static unsafe int Do_Abi_RemoveFromSelection_15(IntPtr thisPtr)
        {



            try
            {
                global::WinRT.ComWrappersSupport.FindObject<global::Microsoft.UI.Xaml.Automation.Provider.ITextRangeProvider>(thisPtr).RemoveFromSelection();

            }
            catch (Exception __exception__)
            {
                global::WinRT.ExceptionHelpers.SetErrorInfo(__exception__);
                return global::WinRT.ExceptionHelpers.GetHRForException(__exception__);
            }
            return 0;
        }
        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvStdcall) })]
        private static unsafe int Do_Abi_ScrollIntoView_16(IntPtr thisPtr, byte alignToTop)
        {



            try
            {
                global::WinRT.ComWrappersSupport.FindObject<global::Microsoft.UI.Xaml.Automation.Provider.ITextRangeProvider>(thisPtr).ScrollIntoView(alignToTop != 0);

            }
            catch (Exception __exception__)
            {
                global::WinRT.ExceptionHelpers.SetErrorInfo(__exception__);
                return global::WinRT.ExceptionHelpers.GetHRForException(__exception__);
            }
            return 0;
        }
        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvStdcall) })]
        private static unsafe int Do_Abi_GetChildren_17(IntPtr thisPtr, int* __resultSize, IntPtr* result)
        {

            global::Microsoft.UI.Xaml.Automation.Provider.IRawElementProviderSimple[] __result = default;

            *result = default;
            *__resultSize = default;

            try
            {
                __result = global::WinRT.ComWrappersSupport.FindObject<global::Microsoft.UI.Xaml.Automation.Provider.ITextRangeProvider>(thisPtr).GetChildren();
                (*__resultSize, *result) = global::ABI.Microsoft.UI.Xaml.Automation.Provider.IRawElementProviderSimple.FromManagedArray(__result);

            }
            catch (Exception __exception__)
            {
                global::WinRT.ExceptionHelpers.SetErrorInfo(__exception__);
                return global::WinRT.ExceptionHelpers.GetHRForException(__exception__);
            }
            return 0;
        }

        unsafe global::Microsoft.UI.Xaml.Automation.Provider.ITextRangeProvider global::Microsoft.UI.Xaml.Automation.Provider.ITextRangeProvider.Clone()
        {
            var _obj = ((IObjectReference)((IWinRTObject)this).GetObjectReferenceForType(typeof(global::Microsoft.UI.Xaml.Automation.Provider.ITextRangeProvider).TypeHandle));
            return global::ABI.Microsoft.UI.Xaml.Automation.Provider.ITextRangeProviderMethods.Clone(_obj);
        }

        unsafe bool global::Microsoft.UI.Xaml.Automation.Provider.ITextRangeProvider.Compare(global::Microsoft.UI.Xaml.Automation.Provider.ITextRangeProvider textRangeProvider)
        {
            var _obj = ((IObjectReference)((IWinRTObject)this).GetObjectReferenceForType(typeof(global::Microsoft.UI.Xaml.Automation.Provider.ITextRangeProvider).TypeHandle));
            return global::ABI.Microsoft.UI.Xaml.Automation.Provider.ITextRangeProviderMethods.Compare(_obj, textRangeProvider);
        }

        unsafe int global::Microsoft.UI.Xaml.Automation.Provider.ITextRangeProvider.CompareEndpoints(global::Microsoft.UI.Xaml.Automation.Text.TextPatternRangeEndpoint endpoint, global::Microsoft.UI.Xaml.Automation.Provider.ITextRangeProvider textRangeProvider, global::Microsoft.UI.Xaml.Automation.Text.TextPatternRangeEndpoint targetEndpoint)
        {
            var _obj = ((IObjectReference)((IWinRTObject)this).GetObjectReferenceForType(typeof(global::Microsoft.UI.Xaml.Automation.Provider.ITextRangeProvider).TypeHandle));
            return global::ABI.Microsoft.UI.Xaml.Automation.Provider.ITextRangeProviderMethods.CompareEndpoints(_obj, endpoint, textRangeProvider, targetEndpoint);
        }

        unsafe void global::Microsoft.UI.Xaml.Automation.Provider.ITextRangeProvider.ExpandToEnclosingUnit(global::Microsoft.UI.Xaml.Automation.Text.TextUnit unit)
        {
            var _obj = ((IObjectReference)((IWinRTObject)this).GetObjectReferenceForType(typeof(global::Microsoft.UI.Xaml.Automation.Provider.ITextRangeProvider).TypeHandle));
            global::ABI.Microsoft.UI.Xaml.Automation.Provider.ITextRangeProviderMethods.ExpandToEnclosingUnit(_obj, unit);
        }

        unsafe global::Microsoft.UI.Xaml.Automation.Provider.ITextRangeProvider global::Microsoft.UI.Xaml.Automation.Provider.ITextRangeProvider.FindAttribute(int attributeId, object value, bool backward)
        {
            var _obj = ((IObjectReference)((IWinRTObject)this).GetObjectReferenceForType(typeof(global::Microsoft.UI.Xaml.Automation.Provider.ITextRangeProvider).TypeHandle));
            return global::ABI.Microsoft.UI.Xaml.Automation.Provider.ITextRangeProviderMethods.FindAttribute(_obj, attributeId, value, backward);
        }

        unsafe global::Microsoft.UI.Xaml.Automation.Provider.ITextRangeProvider global::Microsoft.UI.Xaml.Automation.Provider.ITextRangeProvider.FindText(string text, bool backward, bool ignoreCase)
        {
            var _obj = ((IObjectReference)((IWinRTObject)this).GetObjectReferenceForType(typeof(global::Microsoft.UI.Xaml.Automation.Provider.ITextRangeProvider).TypeHandle));
            return global::ABI.Microsoft.UI.Xaml.Automation.Provider.ITextRangeProviderMethods.FindText(_obj, text, backward, ignoreCase);
        }

        unsafe object global::Microsoft.UI.Xaml.Automation.Provider.ITextRangeProvider.GetAttributeValue(int attributeId)
        {
            var _obj = ((IObjectReference)((IWinRTObject)this).GetObjectReferenceForType(typeof(global::Microsoft.UI.Xaml.Automation.Provider.ITextRangeProvider).TypeHandle));
            return global::ABI.Microsoft.UI.Xaml.Automation.Provider.ITextRangeProviderMethods.GetAttributeValue(_obj, attributeId);
        }

        unsafe void global::Microsoft.UI.Xaml.Automation.Provider.ITextRangeProvider.GetBoundingRectangles(out double[] returnValue)
        {
            var _obj = ((IObjectReference)((IWinRTObject)this).GetObjectReferenceForType(typeof(global::Microsoft.UI.Xaml.Automation.Provider.ITextRangeProvider).TypeHandle));
            global::ABI.Microsoft.UI.Xaml.Automation.Provider.ITextRangeProviderMethods.GetBoundingRectangles(_obj, out returnValue);
        }

        unsafe global::Microsoft.UI.Xaml.Automation.Provider.IRawElementProviderSimple global::Microsoft.UI.Xaml.Automation.Provider.ITextRangeProvider.GetEnclosingElement()
        {
            var _obj = ((IObjectReference)((IWinRTObject)this).GetObjectReferenceForType(typeof(global::Microsoft.UI.Xaml.Automation.Provider.ITextRangeProvider).TypeHandle));
            return global::ABI.Microsoft.UI.Xaml.Automation.Provider.ITextRangeProviderMethods.GetEnclosingElement(_obj);
        }

        unsafe string global::Microsoft.UI.Xaml.Automation.Provider.ITextRangeProvider.GetText(int maxLength)
        {
            var _obj = ((IObjectReference)((IWinRTObject)this).GetObjectReferenceForType(typeof(global::Microsoft.UI.Xaml.Automation.Provider.ITextRangeProvider).TypeHandle));
            return global::ABI.Microsoft.UI.Xaml.Automation.Provider.ITextRangeProviderMethods.GetText(_obj, maxLength);
        }

        unsafe int global::Microsoft.UI.Xaml.Automation.Provider.ITextRangeProvider.Move(global::Microsoft.UI.Xaml.Automation.Text.TextUnit unit, int count)
        {
            var _obj = ((IObjectReference)((IWinRTObject)this).GetObjectReferenceForType(typeof(global::Microsoft.UI.Xaml.Automation.Provider.ITextRangeProvider).TypeHandle));
            return global::ABI.Microsoft.UI.Xaml.Automation.Provider.ITextRangeProviderMethods.Move(_obj, unit, count);
        }

        unsafe int global::Microsoft.UI.Xaml.Automation.Provider.ITextRangeProvider.MoveEndpointByUnit(global::Microsoft.UI.Xaml.Automation.Text.TextPatternRangeEndpoint endpoint, global::Microsoft.UI.Xaml.Automation.Text.TextUnit unit, int count)
        {
            var _obj = ((IObjectReference)((IWinRTObject)this).GetObjectReferenceForType(typeof(global::Microsoft.UI.Xaml.Automation.Provider.ITextRangeProvider).TypeHandle));
            return global::ABI.Microsoft.UI.Xaml.Automation.Provider.ITextRangeProviderMethods.MoveEndpointByUnit(_obj, endpoint, unit, count);
        }

        unsafe void global::Microsoft.UI.Xaml.Automation.Provider.ITextRangeProvider.MoveEndpointByRange(global::Microsoft.UI.Xaml.Automation.Text.TextPatternRangeEndpoint endpoint, global::Microsoft.UI.Xaml.Automation.Provider.ITextRangeProvider textRangeProvider, global::Microsoft.UI.Xaml.Automation.Text.TextPatternRangeEndpoint targetEndpoint)
        {
            var _obj = ((IObjectReference)((IWinRTObject)this).GetObjectReferenceForType(typeof(global::Microsoft.UI.Xaml.Automation.Provider.ITextRangeProvider).TypeHandle));
            global::ABI.Microsoft.UI.Xaml.Automation.Provider.ITextRangeProviderMethods.MoveEndpointByRange(_obj, endpoint, textRangeProvider, targetEndpoint);
        }

        unsafe void global::Microsoft.UI.Xaml.Automation.Provider.ITextRangeProvider.Select()
        {
            var _obj = ((IObjectReference)((IWinRTObject)this).GetObjectReferenceForType(typeof(global::Microsoft.UI.Xaml.Automation.Provider.ITextRangeProvider).TypeHandle));
            global::ABI.Microsoft.UI.Xaml.Automation.Provider.ITextRangeProviderMethods.Select(_obj);
        }

        unsafe void global::Microsoft.UI.Xaml.Automation.Provider.ITextRangeProvider.AddToSelection()
        {
            var _obj = ((IObjectReference)((IWinRTObject)this).GetObjectReferenceForType(typeof(global::Microsoft.UI.Xaml.Automation.Provider.ITextRangeProvider).TypeHandle));
            global::ABI.Microsoft.UI.Xaml.Automation.Provider.ITextRangeProviderMethods.AddToSelection(_obj);
        }

        unsafe void global::Microsoft.UI.Xaml.Automation.Provider.ITextRangeProvider.RemoveFromSelection()
        {
            var _obj = ((IObjectReference)((IWinRTObject)this).GetObjectReferenceForType(typeof(global::Microsoft.UI.Xaml.Automation.Provider.ITextRangeProvider).TypeHandle));
            global::ABI.Microsoft.UI.Xaml.Automation.Provider.ITextRangeProviderMethods.RemoveFromSelection(_obj);
        }

        unsafe void global::Microsoft.UI.Xaml.Automation.Provider.ITextRangeProvider.ScrollIntoView(bool alignToTop)
        {
            var _obj = ((IObjectReference)((IWinRTObject)this).GetObjectReferenceForType(typeof(global::Microsoft.UI.Xaml.Automation.Provider.ITextRangeProvider).TypeHandle));
            global::ABI.Microsoft.UI.Xaml.Automation.Provider.ITextRangeProviderMethods.ScrollIntoView(_obj, alignToTop);
        }

        unsafe global::Microsoft.UI.Xaml.Automation.Provider.IRawElementProviderSimple[] global::Microsoft.UI.Xaml.Automation.Provider.ITextRangeProvider.GetChildren()
        {
            var _obj = ((IObjectReference)((IWinRTObject)this).GetObjectReferenceForType(typeof(global::Microsoft.UI.Xaml.Automation.Provider.ITextRangeProvider).TypeHandle));
            return global::ABI.Microsoft.UI.Xaml.Automation.Provider.ITextRangeProviderMethods.GetChildren(_obj);
        }
    }

    public static class ITextRangeProvider2Methods
    {


        public static unsafe void ShowContextMenu(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, int>**)ThisPtr)[6](ThisPtr));
            global::System.GC.KeepAlive(_obj);
        }


        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0xE, 0xA8, 0xD4, 0x34, 0xBB, 0x36, 0x62, 0x53, 0xA5, 0x3B, 0x49, 0x4, 0x28, 0xA8, 0xB3, 0x67 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

        public static global::System.IntPtr AbiToProjectionVftablePtr => ITextRangeProvider2.AbiToProjectionVftablePtr;

    }
    [DynamicInterfaceCastableImplementation]
    [Guid("34D4A80E-36BB-5362-A53B-490428A8B367")]
    internal unsafe interface ITextRangeProvider2 : global::Microsoft.UI.Xaml.Automation.Provider.ITextRangeProvider2
    {

        public static readonly IntPtr AbiToProjectionVftablePtr;
        static unsafe ITextRangeProvider2()
        {
            AbiToProjectionVftablePtr = ComWrappersSupport.AllocateVtableMemory(typeof(ITextRangeProvider2), sizeof(IInspectable.Vftbl) + sizeof(IntPtr) * 1);
            *(IInspectable.Vftbl*)AbiToProjectionVftablePtr = IInspectable.Vftbl.AbiToProjectionVftable;
            ((delegate* unmanaged[Stdcall]<IntPtr, int>*)AbiToProjectionVftablePtr)[6] = &Do_Abi_ShowContextMenu_0;
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvStdcall) })]
        private static unsafe int Do_Abi_ShowContextMenu_0(IntPtr thisPtr)
        {



            try
            {
                global::WinRT.ComWrappersSupport.FindObject<global::Microsoft.UI.Xaml.Automation.Provider.ITextRangeProvider2>(thisPtr).ShowContextMenu();

            }
            catch (Exception __exception__)
            {
                global::WinRT.ExceptionHelpers.SetErrorInfo(__exception__);
                return global::WinRT.ExceptionHelpers.GetHRForException(__exception__);
            }
            return 0;
        }

        unsafe void global::Microsoft.UI.Xaml.Automation.Provider.ITextRangeProvider2.ShowContextMenu()
        {
            var _obj = ((IObjectReference)((IWinRTObject)this).GetObjectReferenceForType(typeof(global::Microsoft.UI.Xaml.Automation.Provider.ITextRangeProvider2).TypeHandle));
            global::ABI.Microsoft.UI.Xaml.Automation.Provider.ITextRangeProvider2Methods.ShowContextMenu(_obj);
        }

        global::Microsoft.UI.Xaml.Automation.Provider.ITextRangeProvider global::Microsoft.UI.Xaml.Automation.Provider.ITextRangeProvider.Clone() => ((global::Microsoft.UI.Xaml.Automation.Provider.ITextRangeProvider)(IWinRTObject)this).Clone();

        bool global::Microsoft.UI.Xaml.Automation.Provider.ITextRangeProvider.Compare(global::Microsoft.UI.Xaml.Automation.Provider.ITextRangeProvider textRangeProvider) => ((global::Microsoft.UI.Xaml.Automation.Provider.ITextRangeProvider)(IWinRTObject)this).Compare(textRangeProvider);

        int global::Microsoft.UI.Xaml.Automation.Provider.ITextRangeProvider.CompareEndpoints(global::Microsoft.UI.Xaml.Automation.Text.TextPatternRangeEndpoint endpoint, global::Microsoft.UI.Xaml.Automation.Provider.ITextRangeProvider textRangeProvider, global::Microsoft.UI.Xaml.Automation.Text.TextPatternRangeEndpoint targetEndpoint) => ((global::Microsoft.UI.Xaml.Automation.Provider.ITextRangeProvider)(IWinRTObject)this).CompareEndpoints(endpoint, textRangeProvider, targetEndpoint);

        void global::Microsoft.UI.Xaml.Automation.Provider.ITextRangeProvider.ExpandToEnclosingUnit(global::Microsoft.UI.Xaml.Automation.Text.TextUnit unit) => ((global::Microsoft.UI.Xaml.Automation.Provider.ITextRangeProvider)(IWinRTObject)this).ExpandToEnclosingUnit(unit);

        global::Microsoft.UI.Xaml.Automation.Provider.ITextRangeProvider global::Microsoft.UI.Xaml.Automation.Provider.ITextRangeProvider.FindAttribute(int attributeId, object value, bool backward) => ((global::Microsoft.UI.Xaml.Automation.Provider.ITextRangeProvider)(IWinRTObject)this).FindAttribute(attributeId, value, backward);

        global::Microsoft.UI.Xaml.Automation.Provider.ITextRangeProvider global::Microsoft.UI.Xaml.Automation.Provider.ITextRangeProvider.FindText(string text, bool backward, bool ignoreCase) => ((global::Microsoft.UI.Xaml.Automation.Provider.ITextRangeProvider)(IWinRTObject)this).FindText(text, backward, ignoreCase);

        object global::Microsoft.UI.Xaml.Automation.Provider.ITextRangeProvider.GetAttributeValue(int attributeId) => ((global::Microsoft.UI.Xaml.Automation.Provider.ITextRangeProvider)(IWinRTObject)this).GetAttributeValue(attributeId);

        void global::Microsoft.UI.Xaml.Automation.Provider.ITextRangeProvider.GetBoundingRectangles(out double[] returnValue) => ((global::Microsoft.UI.Xaml.Automation.Provider.ITextRangeProvider)(IWinRTObject)this).GetBoundingRectangles(out returnValue);

        global::Microsoft.UI.Xaml.Automation.Provider.IRawElementProviderSimple global::Microsoft.UI.Xaml.Automation.Provider.ITextRangeProvider.GetEnclosingElement() => ((global::Microsoft.UI.Xaml.Automation.Provider.ITextRangeProvider)(IWinRTObject)this).GetEnclosingElement();

        string global::Microsoft.UI.Xaml.Automation.Provider.ITextRangeProvider.GetText(int maxLength) => ((global::Microsoft.UI.Xaml.Automation.Provider.ITextRangeProvider)(IWinRTObject)this).GetText(maxLength);

        int global::Microsoft.UI.Xaml.Automation.Provider.ITextRangeProvider.Move(global::Microsoft.UI.Xaml.Automation.Text.TextUnit unit, int count) => ((global::Microsoft.UI.Xaml.Automation.Provider.ITextRangeProvider)(IWinRTObject)this).Move(unit, count);

        int global::Microsoft.UI.Xaml.Automation.Provider.ITextRangeProvider.MoveEndpointByUnit(global::Microsoft.UI.Xaml.Automation.Text.TextPatternRangeEndpoint endpoint, global::Microsoft.UI.Xaml.Automation.Text.TextUnit unit, int count) => ((global::Microsoft.UI.Xaml.Automation.Provider.ITextRangeProvider)(IWinRTObject)this).MoveEndpointByUnit(endpoint, unit, count);

        void global::Microsoft.UI.Xaml.Automation.Provider.ITextRangeProvider.MoveEndpointByRange(global::Microsoft.UI.Xaml.Automation.Text.TextPatternRangeEndpoint endpoint, global::Microsoft.UI.Xaml.Automation.Provider.ITextRangeProvider textRangeProvider, global::Microsoft.UI.Xaml.Automation.Text.TextPatternRangeEndpoint targetEndpoint) => ((global::Microsoft.UI.Xaml.Automation.Provider.ITextRangeProvider)(IWinRTObject)this).MoveEndpointByRange(endpoint, textRangeProvider, targetEndpoint);

        void global::Microsoft.UI.Xaml.Automation.Provider.ITextRangeProvider.Select() => ((global::Microsoft.UI.Xaml.Automation.Provider.ITextRangeProvider)(IWinRTObject)this).Select();

        void global::Microsoft.UI.Xaml.Automation.Provider.ITextRangeProvider.AddToSelection() => ((global::Microsoft.UI.Xaml.Automation.Provider.ITextRangeProvider)(IWinRTObject)this).AddToSelection();

        void global::Microsoft.UI.Xaml.Automation.Provider.ITextRangeProvider.RemoveFromSelection() => ((global::Microsoft.UI.Xaml.Automation.Provider.ITextRangeProvider)(IWinRTObject)this).RemoveFromSelection();

        void global::Microsoft.UI.Xaml.Automation.Provider.ITextRangeProvider.ScrollIntoView(bool alignToTop) => ((global::Microsoft.UI.Xaml.Automation.Provider.ITextRangeProvider)(IWinRTObject)this).ScrollIntoView(alignToTop);

        global::Microsoft.UI.Xaml.Automation.Provider.IRawElementProviderSimple[] global::Microsoft.UI.Xaml.Automation.Provider.ITextRangeProvider.GetChildren() => ((global::Microsoft.UI.Xaml.Automation.Provider.ITextRangeProvider)(IWinRTObject)this).GetChildren();
    }

    public static class IToggleProviderMethods
    {


        public static unsafe void Toggle(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, int>**)ThisPtr)[7](ThisPtr));
            global::System.GC.KeepAlive(_obj);
        }
        public static unsafe global::Microsoft.UI.Xaml.Automation.ToggleState get_ToggleState(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::Microsoft.UI.Xaml.Automation.ToggleState __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::Microsoft.UI.Xaml.Automation.ToggleState*, int>**)ThisPtr)[6](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0xC2, 0x80, 0x10, 0x2, 0xA9, 0x30, 0xEF, 0x52, 0xBC, 0x32, 0x2B, 0x79, 0x84, 0x7B, 0x6B, 0xA7 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

        public static global::System.IntPtr AbiToProjectionVftablePtr => IToggleProvider.AbiToProjectionVftablePtr;

    }
    [DynamicInterfaceCastableImplementation]
    [Guid("021080C2-30A9-52EF-BC32-2B79847B6BA7")]
    internal unsafe interface IToggleProvider : global::Microsoft.UI.Xaml.Automation.Provider.IToggleProvider
    {

        public static readonly IntPtr AbiToProjectionVftablePtr;
        static unsafe IToggleProvider()
        {
            AbiToProjectionVftablePtr = ComWrappersSupport.AllocateVtableMemory(typeof(IToggleProvider), sizeof(IInspectable.Vftbl) + sizeof(IntPtr) * 2);
            *(IInspectable.Vftbl*)AbiToProjectionVftablePtr = IInspectable.Vftbl.AbiToProjectionVftable;
            ((delegate* unmanaged[Stdcall]<IntPtr, global::Microsoft.UI.Xaml.Automation.ToggleState*, int>*)AbiToProjectionVftablePtr)[6] = &Do_Abi_get_ToggleState_0;
            ((delegate* unmanaged[Stdcall]<IntPtr, int>*)AbiToProjectionVftablePtr)[7] = &Do_Abi_Toggle_1;
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvStdcall) })]
        private static unsafe int Do_Abi_Toggle_1(IntPtr thisPtr)
        {



            try
            {
                global::WinRT.ComWrappersSupport.FindObject<global::Microsoft.UI.Xaml.Automation.Provider.IToggleProvider>(thisPtr).Toggle();

            }
            catch (Exception __exception__)
            {
                global::WinRT.ExceptionHelpers.SetErrorInfo(__exception__);
                return global::WinRT.ExceptionHelpers.GetHRForException(__exception__);
            }
            return 0;
        }
        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvStdcall) })]
        private static unsafe int Do_Abi_get_ToggleState_0(IntPtr thisPtr, global::Microsoft.UI.Xaml.Automation.ToggleState* value)
        {

            global::Microsoft.UI.Xaml.Automation.ToggleState __value = default;

            *value = default;

            try
            {
                __value = global::WinRT.ComWrappersSupport.FindObject<global::Microsoft.UI.Xaml.Automation.Provider.IToggleProvider>(thisPtr).ToggleState;
                *value = __value;

            }
            catch (Exception __exception__)
            {
                global::WinRT.ExceptionHelpers.SetErrorInfo(__exception__);
                return global::WinRT.ExceptionHelpers.GetHRForException(__exception__);
            }
            return 0;
        }

        unsafe void global::Microsoft.UI.Xaml.Automation.Provider.IToggleProvider.Toggle()
        {
            var _obj = ((IObjectReference)((IWinRTObject)this).GetObjectReferenceForType(typeof(global::Microsoft.UI.Xaml.Automation.Provider.IToggleProvider).TypeHandle));
            global::ABI.Microsoft.UI.Xaml.Automation.Provider.IToggleProviderMethods.Toggle(_obj);
        }

        unsafe global::Microsoft.UI.Xaml.Automation.ToggleState global::Microsoft.UI.Xaml.Automation.Provider.IToggleProvider.ToggleState
        {
            get
            {
                var _obj = ((IObjectReference)((IWinRTObject)this).GetObjectReferenceForType(typeof(global::Microsoft.UI.Xaml.Automation.Provider.IToggleProvider).TypeHandle));
                return global::ABI.Microsoft.UI.Xaml.Automation.Provider.IToggleProviderMethods.get_ToggleState(_obj);
            }
        }
    }

    public static class ITransformProviderMethods
    {


        public static unsafe void Move(IObjectReference _obj, double x, double y)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, double, double, int>**)ThisPtr)[9](ThisPtr, x, y));
            global::System.GC.KeepAlive(_obj);
        }

        public static unsafe void Resize(IObjectReference _obj, double width, double height)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, double, double, int>**)ThisPtr)[10](ThisPtr, width, height));
            global::System.GC.KeepAlive(_obj);
        }

        public static unsafe void Rotate(IObjectReference _obj, double degrees)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, double, int>**)ThisPtr)[11](ThisPtr, degrees));
            global::System.GC.KeepAlive(_obj);
        }
        public static unsafe bool get_CanMove(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            byte __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, byte*, int>**)ThisPtr)[6](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval != 0;
        }

        public static unsafe bool get_CanResize(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            byte __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, byte*, int>**)ThisPtr)[7](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval != 0;
        }

        public static unsafe bool get_CanRotate(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            byte __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, byte*, int>**)ThisPtr)[8](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval != 0;
        }



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0x88, 0x69, 0xD7, 0x6F, 0x52, 0x8F, 0xF2, 0x5E, 0xA8, 0x26, 0x9C, 0x8C, 0x49, 0x51, 0xC9, 0x11 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

        public static global::System.IntPtr AbiToProjectionVftablePtr => ITransformProvider.AbiToProjectionVftablePtr;

    }
    [DynamicInterfaceCastableImplementation]
    [Guid("6FD76988-8F52-5EF2-A826-9C8C4951C911")]
    internal unsafe interface ITransformProvider : global::Microsoft.UI.Xaml.Automation.Provider.ITransformProvider
    {

        public static readonly IntPtr AbiToProjectionVftablePtr;
        static unsafe ITransformProvider()
        {
            AbiToProjectionVftablePtr = ComWrappersSupport.AllocateVtableMemory(typeof(ITransformProvider), sizeof(IInspectable.Vftbl) + sizeof(IntPtr) * 6);
            *(IInspectable.Vftbl*)AbiToProjectionVftablePtr = IInspectable.Vftbl.AbiToProjectionVftable;
            ((delegate* unmanaged[Stdcall]<IntPtr, byte*, int>*)AbiToProjectionVftablePtr)[6] = &Do_Abi_get_CanMove_0;
            ((delegate* unmanaged[Stdcall]<IntPtr, byte*, int>*)AbiToProjectionVftablePtr)[7] = &Do_Abi_get_CanResize_1;
            ((delegate* unmanaged[Stdcall]<IntPtr, byte*, int>*)AbiToProjectionVftablePtr)[8] = &Do_Abi_get_CanRotate_2;
            ((delegate* unmanaged[Stdcall]<IntPtr, double, double, int>*)AbiToProjectionVftablePtr)[9] = &Do_Abi_Move_3;
            ((delegate* unmanaged[Stdcall]<IntPtr, double, double, int>*)AbiToProjectionVftablePtr)[10] = &Do_Abi_Resize_4;
            ((delegate* unmanaged[Stdcall]<IntPtr, double, int>*)AbiToProjectionVftablePtr)[11] = &Do_Abi_Rotate_5;
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvStdcall) })]
        private static unsafe int Do_Abi_Move_3(IntPtr thisPtr, double x, double y)
        {



            try
            {
                global::WinRT.ComWrappersSupport.FindObject<global::Microsoft.UI.Xaml.Automation.Provider.ITransformProvider>(thisPtr).Move(x, y);

            }
            catch (Exception __exception__)
            {
                global::WinRT.ExceptionHelpers.SetErrorInfo(__exception__);
                return global::WinRT.ExceptionHelpers.GetHRForException(__exception__);
            }
            return 0;
        }
        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvStdcall) })]
        private static unsafe int Do_Abi_Resize_4(IntPtr thisPtr, double width, double height)
        {



            try
            {
                global::WinRT.ComWrappersSupport.FindObject<global::Microsoft.UI.Xaml.Automation.Provider.ITransformProvider>(thisPtr).Resize(width, height);

            }
            catch (Exception __exception__)
            {
                global::WinRT.ExceptionHelpers.SetErrorInfo(__exception__);
                return global::WinRT.ExceptionHelpers.GetHRForException(__exception__);
            }
            return 0;
        }
        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvStdcall) })]
        private static unsafe int Do_Abi_Rotate_5(IntPtr thisPtr, double degrees)
        {



            try
            {
                global::WinRT.ComWrappersSupport.FindObject<global::Microsoft.UI.Xaml.Automation.Provider.ITransformProvider>(thisPtr).Rotate(degrees);

            }
            catch (Exception __exception__)
            {
                global::WinRT.ExceptionHelpers.SetErrorInfo(__exception__);
                return global::WinRT.ExceptionHelpers.GetHRForException(__exception__);
            }
            return 0;
        }
        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvStdcall) })]
        private static unsafe int Do_Abi_get_CanMove_0(IntPtr thisPtr, byte* value)
        {

            bool __value = default;

            *value = default;

            try
            {
                __value = global::WinRT.ComWrappersSupport.FindObject<global::Microsoft.UI.Xaml.Automation.Provider.ITransformProvider>(thisPtr).CanMove;
                *value = (byte)(__value ? 1 : 0);

            }
            catch (Exception __exception__)
            {
                global::WinRT.ExceptionHelpers.SetErrorInfo(__exception__);
                return global::WinRT.ExceptionHelpers.GetHRForException(__exception__);
            }
            return 0;
        }
        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvStdcall) })]
        private static unsafe int Do_Abi_get_CanResize_1(IntPtr thisPtr, byte* value)
        {

            bool __value = default;

            *value = default;

            try
            {
                __value = global::WinRT.ComWrappersSupport.FindObject<global::Microsoft.UI.Xaml.Automation.Provider.ITransformProvider>(thisPtr).CanResize;
                *value = (byte)(__value ? 1 : 0);

            }
            catch (Exception __exception__)
            {
                global::WinRT.ExceptionHelpers.SetErrorInfo(__exception__);
                return global::WinRT.ExceptionHelpers.GetHRForException(__exception__);
            }
            return 0;
        }
        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvStdcall) })]
        private static unsafe int Do_Abi_get_CanRotate_2(IntPtr thisPtr, byte* value)
        {

            bool __value = default;

            *value = default;

            try
            {
                __value = global::WinRT.ComWrappersSupport.FindObject<global::Microsoft.UI.Xaml.Automation.Provider.ITransformProvider>(thisPtr).CanRotate;
                *value = (byte)(__value ? 1 : 0);

            }
            catch (Exception __exception__)
            {
                global::WinRT.ExceptionHelpers.SetErrorInfo(__exception__);
                return global::WinRT.ExceptionHelpers.GetHRForException(__exception__);
            }
            return 0;
        }

        unsafe void global::Microsoft.UI.Xaml.Automation.Provider.ITransformProvider.Move(double x, double y)
        {
            var _obj = ((IObjectReference)((IWinRTObject)this).GetObjectReferenceForType(typeof(global::Microsoft.UI.Xaml.Automation.Provider.ITransformProvider).TypeHandle));
            global::ABI.Microsoft.UI.Xaml.Automation.Provider.ITransformProviderMethods.Move(_obj, x, y);
        }

        unsafe void global::Microsoft.UI.Xaml.Automation.Provider.ITransformProvider.Resize(double width, double height)
        {
            var _obj = ((IObjectReference)((IWinRTObject)this).GetObjectReferenceForType(typeof(global::Microsoft.UI.Xaml.Automation.Provider.ITransformProvider).TypeHandle));
            global::ABI.Microsoft.UI.Xaml.Automation.Provider.ITransformProviderMethods.Resize(_obj, width, height);
        }

        unsafe void global::Microsoft.UI.Xaml.Automation.Provider.ITransformProvider.Rotate(double degrees)
        {
            var _obj = ((IObjectReference)((IWinRTObject)this).GetObjectReferenceForType(typeof(global::Microsoft.UI.Xaml.Automation.Provider.ITransformProvider).TypeHandle));
            global::ABI.Microsoft.UI.Xaml.Automation.Provider.ITransformProviderMethods.Rotate(_obj, degrees);
        }

        unsafe bool global::Microsoft.UI.Xaml.Automation.Provider.ITransformProvider.CanMove
        {
            get
            {
                var _obj = ((IObjectReference)((IWinRTObject)this).GetObjectReferenceForType(typeof(global::Microsoft.UI.Xaml.Automation.Provider.ITransformProvider).TypeHandle));
                return global::ABI.Microsoft.UI.Xaml.Automation.Provider.ITransformProviderMethods.get_CanMove(_obj);
            }
        }

        unsafe bool global::Microsoft.UI.Xaml.Automation.Provider.ITransformProvider.CanResize
        {
            get
            {
                var _obj = ((IObjectReference)((IWinRTObject)this).GetObjectReferenceForType(typeof(global::Microsoft.UI.Xaml.Automation.Provider.ITransformProvider).TypeHandle));
                return global::ABI.Microsoft.UI.Xaml.Automation.Provider.ITransformProviderMethods.get_CanResize(_obj);
            }
        }

        unsafe bool global::Microsoft.UI.Xaml.Automation.Provider.ITransformProvider.CanRotate
        {
            get
            {
                var _obj = ((IObjectReference)((IWinRTObject)this).GetObjectReferenceForType(typeof(global::Microsoft.UI.Xaml.Automation.Provider.ITransformProvider).TypeHandle));
                return global::ABI.Microsoft.UI.Xaml.Automation.Provider.ITransformProviderMethods.get_CanRotate(_obj);
            }
        }
    }

    public static class ITransformProvider2Methods
    {


        public static unsafe void Zoom(IObjectReference _obj, double zoom)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, double, int>**)ThisPtr)[10](ThisPtr, zoom));
            global::System.GC.KeepAlive(_obj);
        }

        public static unsafe void ZoomByUnit(IObjectReference _obj, global::Microsoft.UI.Xaml.Automation.ZoomUnit zoomUnit)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::Microsoft.UI.Xaml.Automation.ZoomUnit, int>**)ThisPtr)[11](ThisPtr, zoomUnit));
            global::System.GC.KeepAlive(_obj);
        }
        public static unsafe bool get_CanZoom(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            byte __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, byte*, int>**)ThisPtr)[6](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval != 0;
        }

        public static unsafe double get_MaxZoom(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            double __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, double*, int>**)ThisPtr)[8](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }

        public static unsafe double get_MinZoom(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            double __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, double*, int>**)ThisPtr)[9](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }

        public static unsafe double get_ZoomLevel(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            double __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, double*, int>**)ThisPtr)[7](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0x2D, 0xD0, 0x91, 0x7D, 0x1, 0x84, 0xF8, 0x5C, 0xBB, 0xC4, 0x47, 0x39, 0x1A, 0x52, 0x42, 0x15 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

        public static global::System.IntPtr AbiToProjectionVftablePtr => ITransformProvider2.AbiToProjectionVftablePtr;

    }
    [DynamicInterfaceCastableImplementation]
    [Guid("7D91D02D-8401-5CF8-BBC4-47391A524215")]
    internal unsafe interface ITransformProvider2 : global::Microsoft.UI.Xaml.Automation.Provider.ITransformProvider2
    {

        public static readonly IntPtr AbiToProjectionVftablePtr;
        static unsafe ITransformProvider2()
        {
            AbiToProjectionVftablePtr = ComWrappersSupport.AllocateVtableMemory(typeof(ITransformProvider2), sizeof(IInspectable.Vftbl) + sizeof(IntPtr) * 6);
            *(IInspectable.Vftbl*)AbiToProjectionVftablePtr = IInspectable.Vftbl.AbiToProjectionVftable;
            ((delegate* unmanaged[Stdcall]<IntPtr, byte*, int>*)AbiToProjectionVftablePtr)[6] = &Do_Abi_get_CanZoom_0;
            ((delegate* unmanaged[Stdcall]<IntPtr, double*, int>*)AbiToProjectionVftablePtr)[7] = &Do_Abi_get_ZoomLevel_1;
            ((delegate* unmanaged[Stdcall]<IntPtr, double*, int>*)AbiToProjectionVftablePtr)[8] = &Do_Abi_get_MaxZoom_2;
            ((delegate* unmanaged[Stdcall]<IntPtr, double*, int>*)AbiToProjectionVftablePtr)[9] = &Do_Abi_get_MinZoom_3;
            ((delegate* unmanaged[Stdcall]<IntPtr, double, int>*)AbiToProjectionVftablePtr)[10] = &Do_Abi_Zoom_4;
            ((delegate* unmanaged[Stdcall]<IntPtr, global::Microsoft.UI.Xaml.Automation.ZoomUnit, int>*)AbiToProjectionVftablePtr)[11] = &Do_Abi_ZoomByUnit_5;
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvStdcall) })]
        private static unsafe int Do_Abi_Zoom_4(IntPtr thisPtr, double zoom)
        {



            try
            {
                global::WinRT.ComWrappersSupport.FindObject<global::Microsoft.UI.Xaml.Automation.Provider.ITransformProvider2>(thisPtr).Zoom(zoom);

            }
            catch (Exception __exception__)
            {
                global::WinRT.ExceptionHelpers.SetErrorInfo(__exception__);
                return global::WinRT.ExceptionHelpers.GetHRForException(__exception__);
            }
            return 0;
        }
        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvStdcall) })]
        private static unsafe int Do_Abi_ZoomByUnit_5(IntPtr thisPtr, global::Microsoft.UI.Xaml.Automation.ZoomUnit zoomUnit)
        {



            try
            {
                global::WinRT.ComWrappersSupport.FindObject<global::Microsoft.UI.Xaml.Automation.Provider.ITransformProvider2>(thisPtr).ZoomByUnit(zoomUnit);

            }
            catch (Exception __exception__)
            {
                global::WinRT.ExceptionHelpers.SetErrorInfo(__exception__);
                return global::WinRT.ExceptionHelpers.GetHRForException(__exception__);
            }
            return 0;
        }
        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvStdcall) })]
        private static unsafe int Do_Abi_get_CanZoom_0(IntPtr thisPtr, byte* value)
        {

            bool __value = default;

            *value = default;

            try
            {
                __value = global::WinRT.ComWrappersSupport.FindObject<global::Microsoft.UI.Xaml.Automation.Provider.ITransformProvider2>(thisPtr).CanZoom;
                *value = (byte)(__value ? 1 : 0);

            }
            catch (Exception __exception__)
            {
                global::WinRT.ExceptionHelpers.SetErrorInfo(__exception__);
                return global::WinRT.ExceptionHelpers.GetHRForException(__exception__);
            }
            return 0;
        }
        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvStdcall) })]
        private static unsafe int Do_Abi_get_MaxZoom_2(IntPtr thisPtr, double* value)
        {

            double __value = default;

            *value = default;

            try
            {
                __value = global::WinRT.ComWrappersSupport.FindObject<global::Microsoft.UI.Xaml.Automation.Provider.ITransformProvider2>(thisPtr).MaxZoom;
                *value = __value;

            }
            catch (Exception __exception__)
            {
                global::WinRT.ExceptionHelpers.SetErrorInfo(__exception__);
                return global::WinRT.ExceptionHelpers.GetHRForException(__exception__);
            }
            return 0;
        }
        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvStdcall) })]
        private static unsafe int Do_Abi_get_MinZoom_3(IntPtr thisPtr, double* value)
        {

            double __value = default;

            *value = default;

            try
            {
                __value = global::WinRT.ComWrappersSupport.FindObject<global::Microsoft.UI.Xaml.Automation.Provider.ITransformProvider2>(thisPtr).MinZoom;
                *value = __value;

            }
            catch (Exception __exception__)
            {
                global::WinRT.ExceptionHelpers.SetErrorInfo(__exception__);
                return global::WinRT.ExceptionHelpers.GetHRForException(__exception__);
            }
            return 0;
        }
        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvStdcall) })]
        private static unsafe int Do_Abi_get_ZoomLevel_1(IntPtr thisPtr, double* value)
        {

            double __value = default;

            *value = default;

            try
            {
                __value = global::WinRT.ComWrappersSupport.FindObject<global::Microsoft.UI.Xaml.Automation.Provider.ITransformProvider2>(thisPtr).ZoomLevel;
                *value = __value;

            }
            catch (Exception __exception__)
            {
                global::WinRT.ExceptionHelpers.SetErrorInfo(__exception__);
                return global::WinRT.ExceptionHelpers.GetHRForException(__exception__);
            }
            return 0;
        }

        unsafe void global::Microsoft.UI.Xaml.Automation.Provider.ITransformProvider2.Zoom(double zoom)
        {
            var _obj = ((IObjectReference)((IWinRTObject)this).GetObjectReferenceForType(typeof(global::Microsoft.UI.Xaml.Automation.Provider.ITransformProvider2).TypeHandle));
            global::ABI.Microsoft.UI.Xaml.Automation.Provider.ITransformProvider2Methods.Zoom(_obj, zoom);
        }

        unsafe void global::Microsoft.UI.Xaml.Automation.Provider.ITransformProvider2.ZoomByUnit(global::Microsoft.UI.Xaml.Automation.ZoomUnit zoomUnit)
        {
            var _obj = ((IObjectReference)((IWinRTObject)this).GetObjectReferenceForType(typeof(global::Microsoft.UI.Xaml.Automation.Provider.ITransformProvider2).TypeHandle));
            global::ABI.Microsoft.UI.Xaml.Automation.Provider.ITransformProvider2Methods.ZoomByUnit(_obj, zoomUnit);
        }

        unsafe bool global::Microsoft.UI.Xaml.Automation.Provider.ITransformProvider2.CanZoom
        {
            get
            {
                var _obj = ((IObjectReference)((IWinRTObject)this).GetObjectReferenceForType(typeof(global::Microsoft.UI.Xaml.Automation.Provider.ITransformProvider2).TypeHandle));
                return global::ABI.Microsoft.UI.Xaml.Automation.Provider.ITransformProvider2Methods.get_CanZoom(_obj);
            }
        }

        unsafe double global::Microsoft.UI.Xaml.Automation.Provider.ITransformProvider2.MaxZoom
        {
            get
            {
                var _obj = ((IObjectReference)((IWinRTObject)this).GetObjectReferenceForType(typeof(global::Microsoft.UI.Xaml.Automation.Provider.ITransformProvider2).TypeHandle));
                return global::ABI.Microsoft.UI.Xaml.Automation.Provider.ITransformProvider2Methods.get_MaxZoom(_obj);
            }
        }

        unsafe double global::Microsoft.UI.Xaml.Automation.Provider.ITransformProvider2.MinZoom
        {
            get
            {
                var _obj = ((IObjectReference)((IWinRTObject)this).GetObjectReferenceForType(typeof(global::Microsoft.UI.Xaml.Automation.Provider.ITransformProvider2).TypeHandle));
                return global::ABI.Microsoft.UI.Xaml.Automation.Provider.ITransformProvider2Methods.get_MinZoom(_obj);
            }
        }

        unsafe double global::Microsoft.UI.Xaml.Automation.Provider.ITransformProvider2.ZoomLevel
        {
            get
            {
                var _obj = ((IObjectReference)((IWinRTObject)this).GetObjectReferenceForType(typeof(global::Microsoft.UI.Xaml.Automation.Provider.ITransformProvider2).TypeHandle));
                return global::ABI.Microsoft.UI.Xaml.Automation.Provider.ITransformProvider2Methods.get_ZoomLevel(_obj);
            }
        }

        void global::Microsoft.UI.Xaml.Automation.Provider.ITransformProvider.Move(double x, double y) => ((global::Microsoft.UI.Xaml.Automation.Provider.ITransformProvider)(IWinRTObject)this).Move(x, y);

        void global::Microsoft.UI.Xaml.Automation.Provider.ITransformProvider.Resize(double width, double height) => ((global::Microsoft.UI.Xaml.Automation.Provider.ITransformProvider)(IWinRTObject)this).Resize(width, height);

        void global::Microsoft.UI.Xaml.Automation.Provider.ITransformProvider.Rotate(double degrees) => ((global::Microsoft.UI.Xaml.Automation.Provider.ITransformProvider)(IWinRTObject)this).Rotate(degrees);

        bool global::Microsoft.UI.Xaml.Automation.Provider.ITransformProvider.CanMove => ((global::Microsoft.UI.Xaml.Automation.Provider.ITransformProvider)(IWinRTObject)this).CanMove;

        bool global::Microsoft.UI.Xaml.Automation.Provider.ITransformProvider.CanResize => ((global::Microsoft.UI.Xaml.Automation.Provider.ITransformProvider)(IWinRTObject)this).CanResize;

        bool global::Microsoft.UI.Xaml.Automation.Provider.ITransformProvider.CanRotate => ((global::Microsoft.UI.Xaml.Automation.Provider.ITransformProvider)(IWinRTObject)this).CanRotate;
    }

    public static class IValueProviderMethods
    {


        public static unsafe void SetValue(IObjectReference _obj, string value)
        {
            var ThisPtr = _obj.ThisPtr;

            MarshalString.Pinnable __value = new(value);
            fixed(void* ___value = __value)
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, int>**)ThisPtr)[8](ThisPtr, MarshalString.GetAbi(ref __value)));
                global::System.GC.KeepAlive(_obj);
            }
        }
        public static unsafe bool get_IsReadOnly(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            byte __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, byte*, int>**)ThisPtr)[6](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval != 0;
        }

        public static unsafe string get_Value(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[7](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return MarshalString.FromAbi(__retval);
            }
            finally
            {
                MarshalString.DisposeAbi(__retval);
            }
        }



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0xCF, 0x11, 0x4F, 0x98, 0x11, 0x46, 0x8E, 0x58, 0xB5, 0x2E, 0xB9, 0x6A, 0x12, 0x32, 0x2C, 0x71 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

        public static global::System.IntPtr AbiToProjectionVftablePtr => IValueProvider.AbiToProjectionVftablePtr;

    }
    [DynamicInterfaceCastableImplementation]
    [Guid("984F11CF-4611-588E-B52E-B96A12322C71")]
    internal unsafe interface IValueProvider : global::Microsoft.UI.Xaml.Automation.Provider.IValueProvider
    {

        public static readonly IntPtr AbiToProjectionVftablePtr;
        static unsafe IValueProvider()
        {
            AbiToProjectionVftablePtr = ComWrappersSupport.AllocateVtableMemory(typeof(IValueProvider), sizeof(IInspectable.Vftbl) + sizeof(IntPtr) * 3);
            *(IInspectable.Vftbl*)AbiToProjectionVftablePtr = IInspectable.Vftbl.AbiToProjectionVftable;
            ((delegate* unmanaged[Stdcall]<IntPtr, byte*, int>*)AbiToProjectionVftablePtr)[6] = &Do_Abi_get_IsReadOnly_0;
            ((delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>*)AbiToProjectionVftablePtr)[7] = &Do_Abi_get_Value_1;
            ((delegate* unmanaged[Stdcall]<IntPtr, IntPtr, int>*)AbiToProjectionVftablePtr)[8] = &Do_Abi_SetValue_2;
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvStdcall) })]
        private static unsafe int Do_Abi_SetValue_2(IntPtr thisPtr, IntPtr value)
        {



            try
            {
                global::WinRT.ComWrappersSupport.FindObject<global::Microsoft.UI.Xaml.Automation.Provider.IValueProvider>(thisPtr).SetValue(MarshalString.FromAbi(value));

            }
            catch (Exception __exception__)
            {
                global::WinRT.ExceptionHelpers.SetErrorInfo(__exception__);
                return global::WinRT.ExceptionHelpers.GetHRForException(__exception__);
            }
            return 0;
        }
        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvStdcall) })]
        private static unsafe int Do_Abi_get_IsReadOnly_0(IntPtr thisPtr, byte* value)
        {

            bool __value = default;

            *value = default;

            try
            {
                __value = global::WinRT.ComWrappersSupport.FindObject<global::Microsoft.UI.Xaml.Automation.Provider.IValueProvider>(thisPtr).IsReadOnly;
                *value = (byte)(__value ? 1 : 0);

            }
            catch (Exception __exception__)
            {
                global::WinRT.ExceptionHelpers.SetErrorInfo(__exception__);
                return global::WinRT.ExceptionHelpers.GetHRForException(__exception__);
            }
            return 0;
        }
        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvStdcall) })]
        private static unsafe int Do_Abi_get_Value_1(IntPtr thisPtr, IntPtr* value)
        {

            string __value = default;

            *value = default;

            try
            {
                __value = global::WinRT.ComWrappersSupport.FindObject<global::Microsoft.UI.Xaml.Automation.Provider.IValueProvider>(thisPtr).Value;
                *value = MarshalString.FromManaged(__value);

            }
            catch (Exception __exception__)
            {
                global::WinRT.ExceptionHelpers.SetErrorInfo(__exception__);
                return global::WinRT.ExceptionHelpers.GetHRForException(__exception__);
            }
            return 0;
        }

        unsafe void global::Microsoft.UI.Xaml.Automation.Provider.IValueProvider.SetValue(string value)
        {
            var _obj = ((IObjectReference)((IWinRTObject)this).GetObjectReferenceForType(typeof(global::Microsoft.UI.Xaml.Automation.Provider.IValueProvider).TypeHandle));
            global::ABI.Microsoft.UI.Xaml.Automation.Provider.IValueProviderMethods.SetValue(_obj, value);
        }

        unsafe bool global::Microsoft.UI.Xaml.Automation.Provider.IValueProvider.IsReadOnly
        {
            get
            {
                var _obj = ((IObjectReference)((IWinRTObject)this).GetObjectReferenceForType(typeof(global::Microsoft.UI.Xaml.Automation.Provider.IValueProvider).TypeHandle));
                return global::ABI.Microsoft.UI.Xaml.Automation.Provider.IValueProviderMethods.get_IsReadOnly(_obj);
            }
        }

        unsafe string global::Microsoft.UI.Xaml.Automation.Provider.IValueProvider.Value
        {
            get
            {
                var _obj = ((IObjectReference)((IWinRTObject)this).GetObjectReferenceForType(typeof(global::Microsoft.UI.Xaml.Automation.Provider.IValueProvider).TypeHandle));
                return global::ABI.Microsoft.UI.Xaml.Automation.Provider.IValueProviderMethods.get_Value(_obj);
            }
        }
    }

    public static class IVirtualizedItemProviderMethods
    {


        public static unsafe void Realize(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, int>**)ThisPtr)[6](ThisPtr));
            global::System.GC.KeepAlive(_obj);
        }


        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0x8A, 0x85, 0x8F, 0x9, 0x63, 0x2E, 0x85, 0x59, 0xAB, 0x87, 0xF8, 0xEB, 0xDB, 0x1C, 0x57, 0x40 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

        public static global::System.IntPtr AbiToProjectionVftablePtr => IVirtualizedItemProvider.AbiToProjectionVftablePtr;

    }
    [DynamicInterfaceCastableImplementation]
    [Guid("098F858A-2E63-5985-AB87-F8EBDB1C5740")]
    internal unsafe interface IVirtualizedItemProvider : global::Microsoft.UI.Xaml.Automation.Provider.IVirtualizedItemProvider
    {

        public static readonly IntPtr AbiToProjectionVftablePtr;
        static unsafe IVirtualizedItemProvider()
        {
            AbiToProjectionVftablePtr = ComWrappersSupport.AllocateVtableMemory(typeof(IVirtualizedItemProvider), sizeof(IInspectable.Vftbl) + sizeof(IntPtr) * 1);
            *(IInspectable.Vftbl*)AbiToProjectionVftablePtr = IInspectable.Vftbl.AbiToProjectionVftable;
            ((delegate* unmanaged[Stdcall]<IntPtr, int>*)AbiToProjectionVftablePtr)[6] = &Do_Abi_Realize_0;
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvStdcall) })]
        private static unsafe int Do_Abi_Realize_0(IntPtr thisPtr)
        {



            try
            {
                global::WinRT.ComWrappersSupport.FindObject<global::Microsoft.UI.Xaml.Automation.Provider.IVirtualizedItemProvider>(thisPtr).Realize();

            }
            catch (Exception __exception__)
            {
                global::WinRT.ExceptionHelpers.SetErrorInfo(__exception__);
                return global::WinRT.ExceptionHelpers.GetHRForException(__exception__);
            }
            return 0;
        }

        unsafe void global::Microsoft.UI.Xaml.Automation.Provider.IVirtualizedItemProvider.Realize()
        {
            var _obj = ((IObjectReference)((IWinRTObject)this).GetObjectReferenceForType(typeof(global::Microsoft.UI.Xaml.Automation.Provider.IVirtualizedItemProvider).TypeHandle));
            global::ABI.Microsoft.UI.Xaml.Automation.Provider.IVirtualizedItemProviderMethods.Realize(_obj);
        }
    }

    public static class IWindowProviderMethods
    {


        public static unsafe void Close(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, int>**)ThisPtr)[12](ThisPtr));
            global::System.GC.KeepAlive(_obj);
        }

        public static unsafe void SetVisualState(IObjectReference _obj, global::Microsoft.UI.Xaml.Automation.WindowVisualState state)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::Microsoft.UI.Xaml.Automation.WindowVisualState, int>**)ThisPtr)[13](ThisPtr, state));
            global::System.GC.KeepAlive(_obj);
        }

        public static unsafe bool WaitForInputIdle(IObjectReference _obj, int milliseconds)
        {
            var ThisPtr = _obj.ThisPtr;

            byte __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, int, byte*, int>**)ThisPtr)[14](ThisPtr, milliseconds, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval != 0;
        }
        public static unsafe global::Microsoft.UI.Xaml.Automation.WindowInteractionState get_InteractionState(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::Microsoft.UI.Xaml.Automation.WindowInteractionState __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::Microsoft.UI.Xaml.Automation.WindowInteractionState*, int>**)ThisPtr)[10](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }

        public static unsafe bool get_IsModal(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            byte __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, byte*, int>**)ThisPtr)[6](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval != 0;
        }

        public static unsafe bool get_IsTopmost(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            byte __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, byte*, int>**)ThisPtr)[7](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval != 0;
        }

        public static unsafe bool get_Maximizable(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            byte __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, byte*, int>**)ThisPtr)[8](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval != 0;
        }

        public static unsafe bool get_Minimizable(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            byte __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, byte*, int>**)ThisPtr)[9](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval != 0;
        }

        public static unsafe global::Microsoft.UI.Xaml.Automation.WindowVisualState get_VisualState(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::Microsoft.UI.Xaml.Automation.WindowVisualState __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::Microsoft.UI.Xaml.Automation.WindowVisualState*, int>**)ThisPtr)[11](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0x99, 0xDF, 0xF1, 0x83, 0xDF, 0x9D, 0x5E, 0x57, 0xA6, 0x51, 0x2E, 0xE6, 0x57, 0xFD, 0x16, 0xE0 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

        public static global::System.IntPtr AbiToProjectionVftablePtr => IWindowProvider.AbiToProjectionVftablePtr;

    }
    [DynamicInterfaceCastableImplementation]
    [Guid("83F1DF99-9DDF-575E-A651-2EE657FD16E0")]
    internal unsafe interface IWindowProvider : global::Microsoft.UI.Xaml.Automation.Provider.IWindowProvider
    {

        public static readonly IntPtr AbiToProjectionVftablePtr;
        static unsafe IWindowProvider()
        {
            AbiToProjectionVftablePtr = ComWrappersSupport.AllocateVtableMemory(typeof(IWindowProvider), sizeof(IInspectable.Vftbl) + sizeof(IntPtr) * 9);
            *(IInspectable.Vftbl*)AbiToProjectionVftablePtr = IInspectable.Vftbl.AbiToProjectionVftable;
            ((delegate* unmanaged[Stdcall]<IntPtr, byte*, int>*)AbiToProjectionVftablePtr)[6] = &Do_Abi_get_IsModal_0;
            ((delegate* unmanaged[Stdcall]<IntPtr, byte*, int>*)AbiToProjectionVftablePtr)[7] = &Do_Abi_get_IsTopmost_1;
            ((delegate* unmanaged[Stdcall]<IntPtr, byte*, int>*)AbiToProjectionVftablePtr)[8] = &Do_Abi_get_Maximizable_2;
            ((delegate* unmanaged[Stdcall]<IntPtr, byte*, int>*)AbiToProjectionVftablePtr)[9] = &Do_Abi_get_Minimizable_3;
            ((delegate* unmanaged[Stdcall]<IntPtr, global::Microsoft.UI.Xaml.Automation.WindowInteractionState*, int>*)AbiToProjectionVftablePtr)[10] = &Do_Abi_get_InteractionState_4;
            ((delegate* unmanaged[Stdcall]<IntPtr, global::Microsoft.UI.Xaml.Automation.WindowVisualState*, int>*)AbiToProjectionVftablePtr)[11] = &Do_Abi_get_VisualState_5;
            ((delegate* unmanaged[Stdcall]<IntPtr, int>*)AbiToProjectionVftablePtr)[12] = &Do_Abi_Close_6;
            ((delegate* unmanaged[Stdcall]<IntPtr, global::Microsoft.UI.Xaml.Automation.WindowVisualState, int>*)AbiToProjectionVftablePtr)[13] = &Do_Abi_SetVisualState_7;
            ((delegate* unmanaged[Stdcall]<IntPtr, int, byte*, int>*)AbiToProjectionVftablePtr)[14] = &Do_Abi_WaitForInputIdle_8;
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvStdcall) })]
        private static unsafe int Do_Abi_Close_6(IntPtr thisPtr)
        {



            try
            {
                global::WinRT.ComWrappersSupport.FindObject<global::Microsoft.UI.Xaml.Automation.Provider.IWindowProvider>(thisPtr).Close();

            }
            catch (Exception __exception__)
            {
                global::WinRT.ExceptionHelpers.SetErrorInfo(__exception__);
                return global::WinRT.ExceptionHelpers.GetHRForException(__exception__);
            }
            return 0;
        }
        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvStdcall) })]
        private static unsafe int Do_Abi_SetVisualState_7(IntPtr thisPtr, global::Microsoft.UI.Xaml.Automation.WindowVisualState state)
        {



            try
            {
                global::WinRT.ComWrappersSupport.FindObject<global::Microsoft.UI.Xaml.Automation.Provider.IWindowProvider>(thisPtr).SetVisualState(state);

            }
            catch (Exception __exception__)
            {
                global::WinRT.ExceptionHelpers.SetErrorInfo(__exception__);
                return global::WinRT.ExceptionHelpers.GetHRForException(__exception__);
            }
            return 0;
        }
        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvStdcall) })]
        private static unsafe int Do_Abi_WaitForInputIdle_8(IntPtr thisPtr, int milliseconds, byte* result)
        {

            bool __result = default;

            *result = default;

            try
            {
                __result = global::WinRT.ComWrappersSupport.FindObject<global::Microsoft.UI.Xaml.Automation.Provider.IWindowProvider>(thisPtr).WaitForInputIdle(milliseconds);
                *result = (byte)(__result ? 1 : 0);

            }
            catch (Exception __exception__)
            {
                global::WinRT.ExceptionHelpers.SetErrorInfo(__exception__);
                return global::WinRT.ExceptionHelpers.GetHRForException(__exception__);
            }
            return 0;
        }
        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvStdcall) })]
        private static unsafe int Do_Abi_get_InteractionState_4(IntPtr thisPtr, global::Microsoft.UI.Xaml.Automation.WindowInteractionState* value)
        {

            global::Microsoft.UI.Xaml.Automation.WindowInteractionState __value = default;

            *value = default;

            try
            {
                __value = global::WinRT.ComWrappersSupport.FindObject<global::Microsoft.UI.Xaml.Automation.Provider.IWindowProvider>(thisPtr).InteractionState;
                *value = __value;

            }
            catch (Exception __exception__)
            {
                global::WinRT.ExceptionHelpers.SetErrorInfo(__exception__);
                return global::WinRT.ExceptionHelpers.GetHRForException(__exception__);
            }
            return 0;
        }
        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvStdcall) })]
        private static unsafe int Do_Abi_get_IsModal_0(IntPtr thisPtr, byte* value)
        {

            bool __value = default;

            *value = default;

            try
            {
                __value = global::WinRT.ComWrappersSupport.FindObject<global::Microsoft.UI.Xaml.Automation.Provider.IWindowProvider>(thisPtr).IsModal;
                *value = (byte)(__value ? 1 : 0);

            }
            catch (Exception __exception__)
            {
                global::WinRT.ExceptionHelpers.SetErrorInfo(__exception__);
                return global::WinRT.ExceptionHelpers.GetHRForException(__exception__);
            }
            return 0;
        }
        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvStdcall) })]
        private static unsafe int Do_Abi_get_IsTopmost_1(IntPtr thisPtr, byte* value)
        {

            bool __value = default;

            *value = default;

            try
            {
                __value = global::WinRT.ComWrappersSupport.FindObject<global::Microsoft.UI.Xaml.Automation.Provider.IWindowProvider>(thisPtr).IsTopmost;
                *value = (byte)(__value ? 1 : 0);

            }
            catch (Exception __exception__)
            {
                global::WinRT.ExceptionHelpers.SetErrorInfo(__exception__);
                return global::WinRT.ExceptionHelpers.GetHRForException(__exception__);
            }
            return 0;
        }
        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvStdcall) })]
        private static unsafe int Do_Abi_get_Maximizable_2(IntPtr thisPtr, byte* value)
        {

            bool __value = default;

            *value = default;

            try
            {
                __value = global::WinRT.ComWrappersSupport.FindObject<global::Microsoft.UI.Xaml.Automation.Provider.IWindowProvider>(thisPtr).Maximizable;
                *value = (byte)(__value ? 1 : 0);

            }
            catch (Exception __exception__)
            {
                global::WinRT.ExceptionHelpers.SetErrorInfo(__exception__);
                return global::WinRT.ExceptionHelpers.GetHRForException(__exception__);
            }
            return 0;
        }
        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvStdcall) })]
        private static unsafe int Do_Abi_get_Minimizable_3(IntPtr thisPtr, byte* value)
        {

            bool __value = default;

            *value = default;

            try
            {
                __value = global::WinRT.ComWrappersSupport.FindObject<global::Microsoft.UI.Xaml.Automation.Provider.IWindowProvider>(thisPtr).Minimizable;
                *value = (byte)(__value ? 1 : 0);

            }
            catch (Exception __exception__)
            {
                global::WinRT.ExceptionHelpers.SetErrorInfo(__exception__);
                return global::WinRT.ExceptionHelpers.GetHRForException(__exception__);
            }
            return 0;
        }
        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvStdcall) })]
        private static unsafe int Do_Abi_get_VisualState_5(IntPtr thisPtr, global::Microsoft.UI.Xaml.Automation.WindowVisualState* value)
        {

            global::Microsoft.UI.Xaml.Automation.WindowVisualState __value = default;

            *value = default;

            try
            {
                __value = global::WinRT.ComWrappersSupport.FindObject<global::Microsoft.UI.Xaml.Automation.Provider.IWindowProvider>(thisPtr).VisualState;
                *value = __value;

            }
            catch (Exception __exception__)
            {
                global::WinRT.ExceptionHelpers.SetErrorInfo(__exception__);
                return global::WinRT.ExceptionHelpers.GetHRForException(__exception__);
            }
            return 0;
        }

        unsafe void global::Microsoft.UI.Xaml.Automation.Provider.IWindowProvider.Close()
        {
            var _obj = ((IObjectReference)((IWinRTObject)this).GetObjectReferenceForType(typeof(global::Microsoft.UI.Xaml.Automation.Provider.IWindowProvider).TypeHandle));
            global::ABI.Microsoft.UI.Xaml.Automation.Provider.IWindowProviderMethods.Close(_obj);
        }

        unsafe void global::Microsoft.UI.Xaml.Automation.Provider.IWindowProvider.SetVisualState(global::Microsoft.UI.Xaml.Automation.WindowVisualState state)
        {
            var _obj = ((IObjectReference)((IWinRTObject)this).GetObjectReferenceForType(typeof(global::Microsoft.UI.Xaml.Automation.Provider.IWindowProvider).TypeHandle));
            global::ABI.Microsoft.UI.Xaml.Automation.Provider.IWindowProviderMethods.SetVisualState(_obj, state);
        }

        unsafe bool global::Microsoft.UI.Xaml.Automation.Provider.IWindowProvider.WaitForInputIdle(int milliseconds)
        {
            var _obj = ((IObjectReference)((IWinRTObject)this).GetObjectReferenceForType(typeof(global::Microsoft.UI.Xaml.Automation.Provider.IWindowProvider).TypeHandle));
            return global::ABI.Microsoft.UI.Xaml.Automation.Provider.IWindowProviderMethods.WaitForInputIdle(_obj, milliseconds);
        }

        unsafe global::Microsoft.UI.Xaml.Automation.WindowInteractionState global::Microsoft.UI.Xaml.Automation.Provider.IWindowProvider.InteractionState
        {
            get
            {
                var _obj = ((IObjectReference)((IWinRTObject)this).GetObjectReferenceForType(typeof(global::Microsoft.UI.Xaml.Automation.Provider.IWindowProvider).TypeHandle));
                return global::ABI.Microsoft.UI.Xaml.Automation.Provider.IWindowProviderMethods.get_InteractionState(_obj);
            }
        }

        unsafe bool global::Microsoft.UI.Xaml.Automation.Provider.IWindowProvider.IsModal
        {
            get
            {
                var _obj = ((IObjectReference)((IWinRTObject)this).GetObjectReferenceForType(typeof(global::Microsoft.UI.Xaml.Automation.Provider.IWindowProvider).TypeHandle));
                return global::ABI.Microsoft.UI.Xaml.Automation.Provider.IWindowProviderMethods.get_IsModal(_obj);
            }
        }

        unsafe bool global::Microsoft.UI.Xaml.Automation.Provider.IWindowProvider.IsTopmost
        {
            get
            {
                var _obj = ((IObjectReference)((IWinRTObject)this).GetObjectReferenceForType(typeof(global::Microsoft.UI.Xaml.Automation.Provider.IWindowProvider).TypeHandle));
                return global::ABI.Microsoft.UI.Xaml.Automation.Provider.IWindowProviderMethods.get_IsTopmost(_obj);
            }
        }

        unsafe bool global::Microsoft.UI.Xaml.Automation.Provider.IWindowProvider.Maximizable
        {
            get
            {
                var _obj = ((IObjectReference)((IWinRTObject)this).GetObjectReferenceForType(typeof(global::Microsoft.UI.Xaml.Automation.Provider.IWindowProvider).TypeHandle));
                return global::ABI.Microsoft.UI.Xaml.Automation.Provider.IWindowProviderMethods.get_Maximizable(_obj);
            }
        }

        unsafe bool global::Microsoft.UI.Xaml.Automation.Provider.IWindowProvider.Minimizable
        {
            get
            {
                var _obj = ((IObjectReference)((IWinRTObject)this).GetObjectReferenceForType(typeof(global::Microsoft.UI.Xaml.Automation.Provider.IWindowProvider).TypeHandle));
                return global::ABI.Microsoft.UI.Xaml.Automation.Provider.IWindowProviderMethods.get_Minimizable(_obj);
            }
        }

        unsafe global::Microsoft.UI.Xaml.Automation.WindowVisualState global::Microsoft.UI.Xaml.Automation.Provider.IWindowProvider.VisualState
        {
            get
            {
                var _obj = ((IObjectReference)((IWinRTObject)this).GetObjectReferenceForType(typeof(global::Microsoft.UI.Xaml.Automation.Provider.IWindowProvider).TypeHandle));
                return global::ABI.Microsoft.UI.Xaml.Automation.Provider.IWindowProviderMethods.get_VisualState(_obj);
            }
        }
    }

}
#pragma warning restore CA1416
