//------------------------------------------------------------------------------
// <auto-generated>
//     This file was generated by cswinrt.exe version 2.2.0.241111.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Diagnostics;
using System.Diagnostics.CodeAnalysis;
using System.Linq.Expressions;
using System.Reflection;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;
using WinRT;
using WinRT.Interop;


#pragma warning disable 0169 // warning CS0169: The field '...' is never used
#pragma warning disable 0649 // warning CS0169: Field '...' is never assigned to
#pragma warning disable CA2207, CA1063, CA1033, CA1001, CA2213

namespace Microsoft.Windows.AppNotifications.Builder
{
    [global::WinRT.WindowsRuntimeType("Microsoft.Windows.AppNotifications.Builder")][global::WinRT.WinRTExposedType(typeof(global::WinRT.EnumTypeDetails<AppNotificationAudioLooping>))][global::Windows.Foundation.Metadata.ContractVersion(typeof(AppNotificationBuilderContract), 65536u)]
    public enum AppNotificationAudioLooping : int
    {
        None = unchecked((int)0),
        Loop = unchecked((int)0x1),
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.Windows.AppNotifications.Builder")]
    [global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.Windows.AppNotifications.Builder.AppNotificationBuilder))]
    [global::ABI.Microsoft.Windows.AppNotifications.Builder.AppNotificationBuilderRcwFactory]
    [global::WinRT.ProjectedRuntimeClass(typeof(IAppNotificationBuilder))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(AppNotificationBuilderContract), 65536u)]
    public sealed class AppNotificationBuilder : global::System.Runtime.InteropServices.ICustomQueryInterface, IWinRTObject, IEquatable<AppNotificationBuilder>
    {
        private IntPtr ThisPtr => _inner == null ? (((IWinRTObject)this).NativeObject).ThisPtr : _inner.ThisPtr;

        private readonly IObjectReference _inner = null;



        private IObjectReference _objRef_global__Microsoft_Windows_AppNotifications_Builder_IAppNotificationBuilder => _inner;


        private static volatile IObjectReference ___objRef_global__Microsoft_Windows_AppNotifications_Builder_AppNotificationBuilder;
        private static IObjectReference _objRef_global__Microsoft_Windows_AppNotifications_Builder_AppNotificationBuilder
        {
            get
            { 
                var factory = ___objRef_global__Microsoft_Windows_AppNotifications_Builder_AppNotificationBuilder;
                if (factory != null && factory.IsInCurrentContext)
                {
                    return factory;
                }
                else
                {
                    return ___objRef_global__Microsoft_Windows_AppNotifications_Builder_AppNotificationBuilder = ActivationFactory.Get("Microsoft.Windows.AppNotifications.Builder.AppNotificationBuilder");
                }
            }
        }

        public AppNotificationBuilder() 
        {
            _inner = global::ABI.WinRT.Interop.IActivationFactoryMethods.ActivateInstanceUnsafe(_objRef_global__Microsoft_Windows_AppNotifications_Builder_AppNotificationBuilder, global::ABI.Microsoft.Windows.AppNotifications.Builder.IAppNotificationBuilderMethods.IID);
            ComWrappersSupport.RegisterObjectForInterface(this, ThisPtr);
            ComWrappersHelper.Init(_inner, false);

        }

        public static I As<I>() => ActivationFactory.Get("Microsoft.Windows.AppNotifications.Builder.AppNotificationBuilder").AsInterface<I>();

        private static volatile IObjectReference ___objRef_global__Microsoft_Windows_AppNotifications_Builder_IAppNotificationBuilderStatics;
        private static IObjectReference _objRef_global__Microsoft_Windows_AppNotifications_Builder_IAppNotificationBuilderStatics
        {
            get
            { 
                var factory = ___objRef_global__Microsoft_Windows_AppNotifications_Builder_IAppNotificationBuilderStatics;
                if (factory != null && factory.IsInCurrentContext)
                {
                    return factory;
                }
                else
                {
                    return ___objRef_global__Microsoft_Windows_AppNotifications_Builder_IAppNotificationBuilderStatics = ActivationFactory.Get("Microsoft.Windows.AppNotifications.Builder.AppNotificationBuilder", global::ABI.Microsoft.Windows.AppNotifications.Builder.IAppNotificationBuilderStaticsMethods.IID);
                }
            }
        }

        public static bool IsUrgentScenarioSupported() => global::ABI.Microsoft.Windows.AppNotifications.Builder.IAppNotificationBuilderStaticsMethods.IsUrgentScenarioSupported(_objRef_global__Microsoft_Windows_AppNotifications_Builder_IAppNotificationBuilderStatics);

        public static AppNotificationBuilder FromAbi(IntPtr thisPtr)
        {
            if (thisPtr == IntPtr.Zero) return null;
            return MarshalInspectable<AppNotificationBuilder>.FromAbi(thisPtr);
        }

        internal AppNotificationBuilder(IObjectReference objRef)
        {
            _inner = objRef.As(global::ABI.Microsoft.Windows.AppNotifications.Builder.IAppNotificationBuilderMethods.IID);

        }


        public static bool operator ==(AppNotificationBuilder x, AppNotificationBuilder y) => (x?.ThisPtr ?? IntPtr.Zero) == (y?.ThisPtr ?? IntPtr.Zero);
        public static bool operator !=(AppNotificationBuilder x, AppNotificationBuilder y) => !(x == y);
        public bool Equals(AppNotificationBuilder other) => this == other;
        public override bool Equals(object obj) => obj is AppNotificationBuilder that && this == that;
        public override int GetHashCode() => ThisPtr.GetHashCode();


        bool IWinRTObject.HasUnwrappableNativeObject => true;
        IObjectReference IWinRTObject.NativeObject => _inner;
        private volatile global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> _queryInterfaceCache;
        private global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> MakeQueryInterfaceCache()
        {
            global::System.Threading.Interlocked.CompareExchange(ref _queryInterfaceCache, new global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference>(), null); 
            return _queryInterfaceCache;
        }
        global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> IWinRTObject.QueryInterfaceCache => _queryInterfaceCache ?? MakeQueryInterfaceCache();
        private volatile global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> _additionalTypeData;
        private global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> MakeAdditionalTypeData()
        {
            global::System.Threading.Interlocked.CompareExchange(ref _additionalTypeData, new global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object>(), null); 
            return _additionalTypeData;
        }
        global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> IWinRTObject.AdditionalTypeData => _additionalTypeData ?? MakeAdditionalTypeData();

        private struct InterfaceTag<I>{};


        public AppNotificationBuilder AddArgument(string key, string value) => global::ABI.Microsoft.Windows.AppNotifications.Builder.IAppNotificationBuilderMethods.AddArgument(_objRef_global__Microsoft_Windows_AppNotifications_Builder_IAppNotificationBuilder, key, value);

        public AppNotificationBuilder SetTimeStamp(global::System.DateTimeOffset value) => global::ABI.Microsoft.Windows.AppNotifications.Builder.IAppNotificationBuilderMethods.SetTimeStamp(_objRef_global__Microsoft_Windows_AppNotifications_Builder_IAppNotificationBuilder, value);

        public AppNotificationBuilder SetDuration(AppNotificationDuration duration) => global::ABI.Microsoft.Windows.AppNotifications.Builder.IAppNotificationBuilderMethods.SetDuration(_objRef_global__Microsoft_Windows_AppNotifications_Builder_IAppNotificationBuilder, duration);

        public AppNotificationBuilder SetScenario(AppNotificationScenario value) => global::ABI.Microsoft.Windows.AppNotifications.Builder.IAppNotificationBuilderMethods.SetScenario(_objRef_global__Microsoft_Windows_AppNotifications_Builder_IAppNotificationBuilder, value);

        public AppNotificationBuilder AddText(string text) => global::ABI.Microsoft.Windows.AppNotifications.Builder.IAppNotificationBuilderMethods.AddText(_objRef_global__Microsoft_Windows_AppNotifications_Builder_IAppNotificationBuilder, text);

        public AppNotificationBuilder AddText(string text, AppNotificationTextProperties properties) => global::ABI.Microsoft.Windows.AppNotifications.Builder.IAppNotificationBuilderMethods.AddText(_objRef_global__Microsoft_Windows_AppNotifications_Builder_IAppNotificationBuilder, text, properties);

        public AppNotificationBuilder SetAttributionText(string text) => global::ABI.Microsoft.Windows.AppNotifications.Builder.IAppNotificationBuilderMethods.SetAttributionText(_objRef_global__Microsoft_Windows_AppNotifications_Builder_IAppNotificationBuilder, text);

        public AppNotificationBuilder SetAttributionText(string text, string language) => global::ABI.Microsoft.Windows.AppNotifications.Builder.IAppNotificationBuilderMethods.SetAttributionText(_objRef_global__Microsoft_Windows_AppNotifications_Builder_IAppNotificationBuilder, text, language);

        public AppNotificationBuilder SetInlineImage(global::System.Uri imageUri) => global::ABI.Microsoft.Windows.AppNotifications.Builder.IAppNotificationBuilderMethods.SetInlineImage(_objRef_global__Microsoft_Windows_AppNotifications_Builder_IAppNotificationBuilder, imageUri);

        public AppNotificationBuilder SetInlineImage(global::System.Uri imageUri, AppNotificationImageCrop imageCrop) => global::ABI.Microsoft.Windows.AppNotifications.Builder.IAppNotificationBuilderMethods.SetInlineImage(_objRef_global__Microsoft_Windows_AppNotifications_Builder_IAppNotificationBuilder, imageUri, imageCrop);

        public AppNotificationBuilder SetInlineImage(global::System.Uri imageUri, AppNotificationImageCrop imagecrop, string alternateText) => global::ABI.Microsoft.Windows.AppNotifications.Builder.IAppNotificationBuilderMethods.SetInlineImage(_objRef_global__Microsoft_Windows_AppNotifications_Builder_IAppNotificationBuilder, imageUri, imagecrop, alternateText);

        public AppNotificationBuilder SetAppLogoOverride(global::System.Uri imageUri) => global::ABI.Microsoft.Windows.AppNotifications.Builder.IAppNotificationBuilderMethods.SetAppLogoOverride(_objRef_global__Microsoft_Windows_AppNotifications_Builder_IAppNotificationBuilder, imageUri);

        public AppNotificationBuilder SetAppLogoOverride(global::System.Uri imageUri, AppNotificationImageCrop imageCrop) => global::ABI.Microsoft.Windows.AppNotifications.Builder.IAppNotificationBuilderMethods.SetAppLogoOverride(_objRef_global__Microsoft_Windows_AppNotifications_Builder_IAppNotificationBuilder, imageUri, imageCrop);

        public AppNotificationBuilder SetAppLogoOverride(global::System.Uri imageUri, AppNotificationImageCrop imageCrop, string alternateText) => global::ABI.Microsoft.Windows.AppNotifications.Builder.IAppNotificationBuilderMethods.SetAppLogoOverride(_objRef_global__Microsoft_Windows_AppNotifications_Builder_IAppNotificationBuilder, imageUri, imageCrop, alternateText);

        public AppNotificationBuilder SetHeroImage(global::System.Uri imageUri) => global::ABI.Microsoft.Windows.AppNotifications.Builder.IAppNotificationBuilderMethods.SetHeroImage(_objRef_global__Microsoft_Windows_AppNotifications_Builder_IAppNotificationBuilder, imageUri);

        public AppNotificationBuilder SetHeroImage(global::System.Uri imageUri, string alternateText) => global::ABI.Microsoft.Windows.AppNotifications.Builder.IAppNotificationBuilderMethods.SetHeroImage(_objRef_global__Microsoft_Windows_AppNotifications_Builder_IAppNotificationBuilder, imageUri, alternateText);

        public AppNotificationBuilder SetAudioUri(global::System.Uri audioUri) => global::ABI.Microsoft.Windows.AppNotifications.Builder.IAppNotificationBuilderMethods.SetAudioUri(_objRef_global__Microsoft_Windows_AppNotifications_Builder_IAppNotificationBuilder, audioUri);

        public AppNotificationBuilder SetAudioUri(global::System.Uri audioUri, AppNotificationAudioLooping loop) => global::ABI.Microsoft.Windows.AppNotifications.Builder.IAppNotificationBuilderMethods.SetAudioUri(_objRef_global__Microsoft_Windows_AppNotifications_Builder_IAppNotificationBuilder, audioUri, loop);

        public AppNotificationBuilder SetAudioEvent(AppNotificationSoundEvent appNotificationSoundEvent) => global::ABI.Microsoft.Windows.AppNotifications.Builder.IAppNotificationBuilderMethods.SetAudioEvent(_objRef_global__Microsoft_Windows_AppNotifications_Builder_IAppNotificationBuilder, appNotificationSoundEvent);

        public AppNotificationBuilder SetAudioEvent(AppNotificationSoundEvent appNotificationSoundEvent, AppNotificationAudioLooping loop) => global::ABI.Microsoft.Windows.AppNotifications.Builder.IAppNotificationBuilderMethods.SetAudioEvent(_objRef_global__Microsoft_Windows_AppNotifications_Builder_IAppNotificationBuilder, appNotificationSoundEvent, loop);

        public AppNotificationBuilder MuteAudio() => global::ABI.Microsoft.Windows.AppNotifications.Builder.IAppNotificationBuilderMethods.MuteAudio(_objRef_global__Microsoft_Windows_AppNotifications_Builder_IAppNotificationBuilder);

        public AppNotificationBuilder AddTextBox(string id) => global::ABI.Microsoft.Windows.AppNotifications.Builder.IAppNotificationBuilderMethods.AddTextBox(_objRef_global__Microsoft_Windows_AppNotifications_Builder_IAppNotificationBuilder, id);

        public AppNotificationBuilder AddTextBox(string id, string placeHolderText, string title) => global::ABI.Microsoft.Windows.AppNotifications.Builder.IAppNotificationBuilderMethods.AddTextBox(_objRef_global__Microsoft_Windows_AppNotifications_Builder_IAppNotificationBuilder, id, placeHolderText, title);

        public AppNotificationBuilder AddButton(AppNotificationButton value) => global::ABI.Microsoft.Windows.AppNotifications.Builder.IAppNotificationBuilderMethods.AddButton(_objRef_global__Microsoft_Windows_AppNotifications_Builder_IAppNotificationBuilder, value);

        public AppNotificationBuilder AddComboBox(AppNotificationComboBox value) => global::ABI.Microsoft.Windows.AppNotifications.Builder.IAppNotificationBuilderMethods.AddComboBox(_objRef_global__Microsoft_Windows_AppNotifications_Builder_IAppNotificationBuilder, value);

        public AppNotificationBuilder AddProgressBar(AppNotificationProgressBar value) => global::ABI.Microsoft.Windows.AppNotifications.Builder.IAppNotificationBuilderMethods.AddProgressBar(_objRef_global__Microsoft_Windows_AppNotifications_Builder_IAppNotificationBuilder, value);

        public global::Microsoft.Windows.AppNotifications.AppNotification BuildNotification() => global::ABI.Microsoft.Windows.AppNotifications.Builder.IAppNotificationBuilderMethods.BuildNotification(_objRef_global__Microsoft_Windows_AppNotifications_Builder_IAppNotificationBuilder);

        public AppNotificationBuilder SetTag(string value) => global::ABI.Microsoft.Windows.AppNotifications.Builder.IAppNotificationBuilderMethods.SetTag(_objRef_global__Microsoft_Windows_AppNotifications_Builder_IAppNotificationBuilder, value);

        public AppNotificationBuilder SetGroup(string group) => global::ABI.Microsoft.Windows.AppNotifications.Builder.IAppNotificationBuilderMethods.SetGroup(_objRef_global__Microsoft_Windows_AppNotifications_Builder_IAppNotificationBuilder, group);

        private bool IsOverridableInterface(Guid iid) => false;

        global::System.Runtime.InteropServices.CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(ref Guid iid, out IntPtr ppv)
        {
            ppv = IntPtr.Zero;
            if (IsOverridableInterface(iid) || global::WinRT.Interop.IID.IID_IInspectable == iid)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
            }

            if (((IWinRTObject)this).NativeObject.TryAs(iid, out ppv) >= 0)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.Handled;
            }

            return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
        }
    }
    [global::Windows.Foundation.Metadata.ContractVersion(131072u)]
    public enum AppNotificationBuilderContract
    {
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.Windows.AppNotifications.Builder")]
    [global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.Windows.AppNotifications.Builder.AppNotificationButton))]
    [global::ABI.Microsoft.Windows.AppNotifications.Builder.AppNotificationButtonRcwFactory]
    [global::WinRT.ProjectedRuntimeClass(typeof(IAppNotificationButton))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(AppNotificationBuilderContract), 65536u)]
    public sealed class AppNotificationButton : global::System.Runtime.InteropServices.ICustomQueryInterface, IWinRTObject, IEquatable<AppNotificationButton>
    {
        private IntPtr ThisPtr => _inner == null ? (((IWinRTObject)this).NativeObject).ThisPtr : _inner.ThisPtr;

        private readonly IObjectReference _inner = null;



        private IObjectReference _objRef_global__Microsoft_Windows_AppNotifications_Builder_IAppNotificationButton => _inner;


        private static volatile IObjectReference ___objRef_global__Microsoft_Windows_AppNotifications_Builder_AppNotificationButton;
        private static IObjectReference _objRef_global__Microsoft_Windows_AppNotifications_Builder_AppNotificationButton
        {
            get
            { 
                var factory = ___objRef_global__Microsoft_Windows_AppNotifications_Builder_AppNotificationButton;
                if (factory != null && factory.IsInCurrentContext)
                {
                    return factory;
                }
                else
                {
                    return ___objRef_global__Microsoft_Windows_AppNotifications_Builder_AppNotificationButton = ActivationFactory.Get("Microsoft.Windows.AppNotifications.Builder.AppNotificationButton");
                }
            }
        }

        public AppNotificationButton() 
        {
            _inner = global::ABI.WinRT.Interop.IActivationFactoryMethods.ActivateInstanceUnsafe(_objRef_global__Microsoft_Windows_AppNotifications_Builder_AppNotificationButton, global::ABI.Microsoft.Windows.AppNotifications.Builder.IAppNotificationButtonMethods.IID);
            ComWrappersSupport.RegisterObjectForInterface(this, ThisPtr);
            ComWrappersHelper.Init(_inner, false);

        }

        private static class _IAppNotificationButtonFactoryMethods
        {
            public static unsafe IntPtr CreateInstance(IObjectReference _obj, string content)
            {
                var ThisPtr = _obj.ThisPtr;

                IntPtr __retval = default;
                MarshalString.Pinnable __content = new(content);
                fixed(void* ___content = __content)
                {
                    global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, IntPtr*, int>**)ThisPtr)[6](ThisPtr, MarshalString.GetAbi(ref __content), &__retval));
                    global::System.GC.KeepAlive(_obj);
                    return __retval;
                }
            }
        }

        private static volatile IObjectReference ___objRef_global__Microsoft_Windows_AppNotifications_Builder_IAppNotificationButtonFactory;
        private static IObjectReference _objRef_global__Microsoft_Windows_AppNotifications_Builder_IAppNotificationButtonFactory
        {
            get
            { 
                var factory = ___objRef_global__Microsoft_Windows_AppNotifications_Builder_IAppNotificationButtonFactory;
                if (factory != null && factory.IsInCurrentContext)
                {
                    return factory;
                }
                else
                {
                    return ___objRef_global__Microsoft_Windows_AppNotifications_Builder_IAppNotificationButtonFactory = ActivationFactory.Get("Microsoft.Windows.AppNotifications.Builder.AppNotificationButton", global::ABI.Microsoft.Windows.AppNotifications.Builder.IAppNotificationButtonFactoryMethods.IID);
                }
            }
        }

        public AppNotificationButton(string content) 
        { 
        IntPtr ptr = (_IAppNotificationButtonFactoryMethods.CreateInstance(_objRef_global__Microsoft_Windows_AppNotifications_Builder_IAppNotificationButtonFactory, content)); 
        try 
        { 
        _inner = ComWrappersSupport.GetObjectReferenceForInterface(ptr, global::ABI.Microsoft.Windows.AppNotifications.Builder.IAppNotificationButtonMethods.IID, false); 

        } 
        finally 
        { 
        MarshalInspectable<object>.DisposeAbi(ptr); 
        }

        ComWrappersSupport.RegisterObjectForInterface(this, ThisPtr);
        ComWrappersHelper.Init(_inner, false);
        }

        public static I As<I>() => ActivationFactory.Get("Microsoft.Windows.AppNotifications.Builder.AppNotificationButton").AsInterface<I>();

        private static volatile IObjectReference ___objRef_global__Microsoft_Windows_AppNotifications_Builder_IAppNotificationButtonStatics;
        private static IObjectReference _objRef_global__Microsoft_Windows_AppNotifications_Builder_IAppNotificationButtonStatics
        {
            get
            { 
                var factory = ___objRef_global__Microsoft_Windows_AppNotifications_Builder_IAppNotificationButtonStatics;
                if (factory != null && factory.IsInCurrentContext)
                {
                    return factory;
                }
                else
                {
                    return ___objRef_global__Microsoft_Windows_AppNotifications_Builder_IAppNotificationButtonStatics = ActivationFactory.Get("Microsoft.Windows.AppNotifications.Builder.AppNotificationButton", global::ABI.Microsoft.Windows.AppNotifications.Builder.IAppNotificationButtonStaticsMethods.IID);
                }
            }
        }

        public static bool IsToolTipSupported() => global::ABI.Microsoft.Windows.AppNotifications.Builder.IAppNotificationButtonStaticsMethods.IsToolTipSupported(_objRef_global__Microsoft_Windows_AppNotifications_Builder_IAppNotificationButtonStatics);

        public static bool IsButtonStyleSupported() => global::ABI.Microsoft.Windows.AppNotifications.Builder.IAppNotificationButtonStaticsMethods.IsButtonStyleSupported(_objRef_global__Microsoft_Windows_AppNotifications_Builder_IAppNotificationButtonStatics);

        public static AppNotificationButton FromAbi(IntPtr thisPtr)
        {
            if (thisPtr == IntPtr.Zero) return null;
            return MarshalInspectable<AppNotificationButton>.FromAbi(thisPtr);
        }

        internal AppNotificationButton(IObjectReference objRef)
        {
            _inner = objRef.As(global::ABI.Microsoft.Windows.AppNotifications.Builder.IAppNotificationButtonMethods.IID);

        }


        public static bool operator ==(AppNotificationButton x, AppNotificationButton y) => (x?.ThisPtr ?? IntPtr.Zero) == (y?.ThisPtr ?? IntPtr.Zero);
        public static bool operator !=(AppNotificationButton x, AppNotificationButton y) => !(x == y);
        public bool Equals(AppNotificationButton other) => this == other;
        public override bool Equals(object obj) => obj is AppNotificationButton that && this == that;
        public override int GetHashCode() => ThisPtr.GetHashCode();


        bool IWinRTObject.HasUnwrappableNativeObject => true;
        IObjectReference IWinRTObject.NativeObject => _inner;
        private volatile global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> _queryInterfaceCache;
        private global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> MakeQueryInterfaceCache()
        {
            global::System.Threading.Interlocked.CompareExchange(ref _queryInterfaceCache, new global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference>(), null); 
            return _queryInterfaceCache;
        }
        global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> IWinRTObject.QueryInterfaceCache => _queryInterfaceCache ?? MakeQueryInterfaceCache();
        private volatile global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> _additionalTypeData;
        private global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> MakeAdditionalTypeData()
        {
            global::System.Threading.Interlocked.CompareExchange(ref _additionalTypeData, new global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object>(), null); 
            return _additionalTypeData;
        }
        global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> IWinRTObject.AdditionalTypeData => _additionalTypeData ?? MakeAdditionalTypeData();

        private struct InterfaceTag<I>{};


        public AppNotificationButton AddArgument(string key, string value) => global::ABI.Microsoft.Windows.AppNotifications.Builder.IAppNotificationButtonMethods.AddArgument(_objRef_global__Microsoft_Windows_AppNotifications_Builder_IAppNotificationButton, key, value);

        public AppNotificationButton SetIcon(global::System.Uri value) => global::ABI.Microsoft.Windows.AppNotifications.Builder.IAppNotificationButtonMethods.SetIcon(_objRef_global__Microsoft_Windows_AppNotifications_Builder_IAppNotificationButton, value);

        public AppNotificationButton SetToolTip(string value) => global::ABI.Microsoft.Windows.AppNotifications.Builder.IAppNotificationButtonMethods.SetToolTip(_objRef_global__Microsoft_Windows_AppNotifications_Builder_IAppNotificationButton, value);

        public AppNotificationButton SetContextMenuPlacement() => global::ABI.Microsoft.Windows.AppNotifications.Builder.IAppNotificationButtonMethods.SetContextMenuPlacement(_objRef_global__Microsoft_Windows_AppNotifications_Builder_IAppNotificationButton);

        public AppNotificationButton SetButtonStyle(AppNotificationButtonStyle value) => global::ABI.Microsoft.Windows.AppNotifications.Builder.IAppNotificationButtonMethods.SetButtonStyle(_objRef_global__Microsoft_Windows_AppNotifications_Builder_IAppNotificationButton, value);

        public AppNotificationButton SetInputId(string value) => global::ABI.Microsoft.Windows.AppNotifications.Builder.IAppNotificationButtonMethods.SetInputId(_objRef_global__Microsoft_Windows_AppNotifications_Builder_IAppNotificationButton, value);

        public AppNotificationButton SetInvokeUri(global::System.Uri protocolUri) => global::ABI.Microsoft.Windows.AppNotifications.Builder.IAppNotificationButtonMethods.SetInvokeUri(_objRef_global__Microsoft_Windows_AppNotifications_Builder_IAppNotificationButton, protocolUri);

        public AppNotificationButton SetInvokeUri(global::System.Uri protocolUri, string targetAppId) => global::ABI.Microsoft.Windows.AppNotifications.Builder.IAppNotificationButtonMethods.SetInvokeUri(_objRef_global__Microsoft_Windows_AppNotifications_Builder_IAppNotificationButton, protocolUri, targetAppId);

        public global::System.Collections.Generic.IDictionary<string, string> Arguments
        {
            get => global::ABI.Microsoft.Windows.AppNotifications.Builder.IAppNotificationButtonMethods.get_Arguments(_objRef_global__Microsoft_Windows_AppNotifications_Builder_IAppNotificationButton);
            set => global::ABI.Microsoft.Windows.AppNotifications.Builder.IAppNotificationButtonMethods.set_Arguments(_objRef_global__Microsoft_Windows_AppNotifications_Builder_IAppNotificationButton, value);
        }

        public AppNotificationButtonStyle ButtonStyle
        {
            get => global::ABI.Microsoft.Windows.AppNotifications.Builder.IAppNotificationButtonMethods.get_ButtonStyle(_objRef_global__Microsoft_Windows_AppNotifications_Builder_IAppNotificationButton);
            set => global::ABI.Microsoft.Windows.AppNotifications.Builder.IAppNotificationButtonMethods.set_ButtonStyle(_objRef_global__Microsoft_Windows_AppNotifications_Builder_IAppNotificationButton, value);
        }

        public string Content
        {
            get => global::ABI.Microsoft.Windows.AppNotifications.Builder.IAppNotificationButtonMethods.get_Content(_objRef_global__Microsoft_Windows_AppNotifications_Builder_IAppNotificationButton);
            set => global::ABI.Microsoft.Windows.AppNotifications.Builder.IAppNotificationButtonMethods.set_Content(_objRef_global__Microsoft_Windows_AppNotifications_Builder_IAppNotificationButton, value);
        }

        public bool ContextMenuPlacement
        {
            get => global::ABI.Microsoft.Windows.AppNotifications.Builder.IAppNotificationButtonMethods.get_ContextMenuPlacement(_objRef_global__Microsoft_Windows_AppNotifications_Builder_IAppNotificationButton);
            set => global::ABI.Microsoft.Windows.AppNotifications.Builder.IAppNotificationButtonMethods.set_ContextMenuPlacement(_objRef_global__Microsoft_Windows_AppNotifications_Builder_IAppNotificationButton, value);
        }

        public global::System.Uri Icon
        {
            get => global::ABI.Microsoft.Windows.AppNotifications.Builder.IAppNotificationButtonMethods.get_Icon(_objRef_global__Microsoft_Windows_AppNotifications_Builder_IAppNotificationButton);
            set => global::ABI.Microsoft.Windows.AppNotifications.Builder.IAppNotificationButtonMethods.set_Icon(_objRef_global__Microsoft_Windows_AppNotifications_Builder_IAppNotificationButton, value);
        }

        public string InputId
        {
            get => global::ABI.Microsoft.Windows.AppNotifications.Builder.IAppNotificationButtonMethods.get_InputId(_objRef_global__Microsoft_Windows_AppNotifications_Builder_IAppNotificationButton);
            set => global::ABI.Microsoft.Windows.AppNotifications.Builder.IAppNotificationButtonMethods.set_InputId(_objRef_global__Microsoft_Windows_AppNotifications_Builder_IAppNotificationButton, value);
        }

        public global::System.Uri InvokeUri
        {
            get => global::ABI.Microsoft.Windows.AppNotifications.Builder.IAppNotificationButtonMethods.get_InvokeUri(_objRef_global__Microsoft_Windows_AppNotifications_Builder_IAppNotificationButton);
            set => global::ABI.Microsoft.Windows.AppNotifications.Builder.IAppNotificationButtonMethods.set_InvokeUri(_objRef_global__Microsoft_Windows_AppNotifications_Builder_IAppNotificationButton, value);
        }

        public string TargetAppId
        {
            get => global::ABI.Microsoft.Windows.AppNotifications.Builder.IAppNotificationButtonMethods.get_TargetAppId(_objRef_global__Microsoft_Windows_AppNotifications_Builder_IAppNotificationButton);
            set => global::ABI.Microsoft.Windows.AppNotifications.Builder.IAppNotificationButtonMethods.set_TargetAppId(_objRef_global__Microsoft_Windows_AppNotifications_Builder_IAppNotificationButton, value);
        }

        public string ToolTip
        {
            get => global::ABI.Microsoft.Windows.AppNotifications.Builder.IAppNotificationButtonMethods.get_ToolTip(_objRef_global__Microsoft_Windows_AppNotifications_Builder_IAppNotificationButton);
            set => global::ABI.Microsoft.Windows.AppNotifications.Builder.IAppNotificationButtonMethods.set_ToolTip(_objRef_global__Microsoft_Windows_AppNotifications_Builder_IAppNotificationButton, value);
        }

        private bool IsOverridableInterface(Guid iid) => false;

        global::System.Runtime.InteropServices.CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(ref Guid iid, out IntPtr ppv)
        {
            ppv = IntPtr.Zero;
            if (IsOverridableInterface(iid) || global::WinRT.Interop.IID.IID_IInspectable == iid)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
            }

            if (((IWinRTObject)this).NativeObject.TryAs(iid, out ppv) >= 0)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.Handled;
            }

            return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
        }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.Windows.AppNotifications.Builder")][global::WinRT.WinRTExposedType(typeof(global::WinRT.EnumTypeDetails<AppNotificationButtonStyle>))][global::Windows.Foundation.Metadata.ContractVersion(typeof(AppNotificationBuilderContract), 65536u)]
    public enum AppNotificationButtonStyle : int
    {
        Default = unchecked((int)0),
        Success = unchecked((int)0x1),
        Critical = unchecked((int)0x2),
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.Windows.AppNotifications.Builder")]
    [global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.Windows.AppNotifications.Builder.AppNotificationComboBox))]
    [global::ABI.Microsoft.Windows.AppNotifications.Builder.AppNotificationComboBoxRcwFactory]
    [global::WinRT.ProjectedRuntimeClass(typeof(IAppNotificationComboBox))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(AppNotificationBuilderContract), 65536u)]
    public sealed class AppNotificationComboBox : global::System.Runtime.InteropServices.ICustomQueryInterface, IWinRTObject, IEquatable<AppNotificationComboBox>
    {
        private IntPtr ThisPtr => _inner == null ? (((IWinRTObject)this).NativeObject).ThisPtr : _inner.ThisPtr;

        private readonly IObjectReference _inner = null;



        private IObjectReference _objRef_global__Microsoft_Windows_AppNotifications_Builder_IAppNotificationComboBox => _inner;


        private static class _IAppNotificationComboBoxFactoryMethods
        {
            public static unsafe IntPtr CreateInstance(IObjectReference _obj, string id)
            {
                var ThisPtr = _obj.ThisPtr;

                IntPtr __retval = default;
                MarshalString.Pinnable __id = new(id);
                fixed(void* ___id = __id)
                {
                    global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, IntPtr*, int>**)ThisPtr)[6](ThisPtr, MarshalString.GetAbi(ref __id), &__retval));
                    global::System.GC.KeepAlive(_obj);
                    return __retval;
                }
            }
        }

        private static volatile IObjectReference ___objRef_global__Microsoft_Windows_AppNotifications_Builder_IAppNotificationComboBoxFactory;
        private static IObjectReference _objRef_global__Microsoft_Windows_AppNotifications_Builder_IAppNotificationComboBoxFactory
        {
            get
            { 
                var factory = ___objRef_global__Microsoft_Windows_AppNotifications_Builder_IAppNotificationComboBoxFactory;
                if (factory != null && factory.IsInCurrentContext)
                {
                    return factory;
                }
                else
                {
                    return ___objRef_global__Microsoft_Windows_AppNotifications_Builder_IAppNotificationComboBoxFactory = ActivationFactory.Get("Microsoft.Windows.AppNotifications.Builder.AppNotificationComboBox", global::ABI.Microsoft.Windows.AppNotifications.Builder.IAppNotificationComboBoxFactoryMethods.IID);
                }
            }
        }

        public AppNotificationComboBox(string id) 
        { 
        IntPtr ptr = (_IAppNotificationComboBoxFactoryMethods.CreateInstance(_objRef_global__Microsoft_Windows_AppNotifications_Builder_IAppNotificationComboBoxFactory, id)); 
        try 
        { 
        _inner = ComWrappersSupport.GetObjectReferenceForInterface(ptr, global::ABI.Microsoft.Windows.AppNotifications.Builder.IAppNotificationComboBoxMethods.IID, false); 

        } 
        finally 
        { 
        MarshalInspectable<object>.DisposeAbi(ptr); 
        }

        ComWrappersSupport.RegisterObjectForInterface(this, ThisPtr);
        ComWrappersHelper.Init(_inner, false);
        }

        public static AppNotificationComboBox FromAbi(IntPtr thisPtr)
        {
            if (thisPtr == IntPtr.Zero) return null;
            return MarshalInspectable<AppNotificationComboBox>.FromAbi(thisPtr);
        }

        internal AppNotificationComboBox(IObjectReference objRef)
        {
            _inner = objRef.As(global::ABI.Microsoft.Windows.AppNotifications.Builder.IAppNotificationComboBoxMethods.IID);

        }


        public static bool operator ==(AppNotificationComboBox x, AppNotificationComboBox y) => (x?.ThisPtr ?? IntPtr.Zero) == (y?.ThisPtr ?? IntPtr.Zero);
        public static bool operator !=(AppNotificationComboBox x, AppNotificationComboBox y) => !(x == y);
        public bool Equals(AppNotificationComboBox other) => this == other;
        public override bool Equals(object obj) => obj is AppNotificationComboBox that && this == that;
        public override int GetHashCode() => ThisPtr.GetHashCode();


        bool IWinRTObject.HasUnwrappableNativeObject => true;
        IObjectReference IWinRTObject.NativeObject => _inner;
        private volatile global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> _queryInterfaceCache;
        private global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> MakeQueryInterfaceCache()
        {
            global::System.Threading.Interlocked.CompareExchange(ref _queryInterfaceCache, new global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference>(), null); 
            return _queryInterfaceCache;
        }
        global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> IWinRTObject.QueryInterfaceCache => _queryInterfaceCache ?? MakeQueryInterfaceCache();
        private volatile global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> _additionalTypeData;
        private global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> MakeAdditionalTypeData()
        {
            global::System.Threading.Interlocked.CompareExchange(ref _additionalTypeData, new global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object>(), null); 
            return _additionalTypeData;
        }
        global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> IWinRTObject.AdditionalTypeData => _additionalTypeData ?? MakeAdditionalTypeData();

        private struct InterfaceTag<I>{};


        public AppNotificationComboBox AddItem(string id, string content) => global::ABI.Microsoft.Windows.AppNotifications.Builder.IAppNotificationComboBoxMethods.AddItem(_objRef_global__Microsoft_Windows_AppNotifications_Builder_IAppNotificationComboBox, id, content);

        public AppNotificationComboBox SetTitle(string value) => global::ABI.Microsoft.Windows.AppNotifications.Builder.IAppNotificationComboBoxMethods.SetTitle(_objRef_global__Microsoft_Windows_AppNotifications_Builder_IAppNotificationComboBox, value);

        public AppNotificationComboBox SetSelectedItem(string id) => global::ABI.Microsoft.Windows.AppNotifications.Builder.IAppNotificationComboBoxMethods.SetSelectedItem(_objRef_global__Microsoft_Windows_AppNotifications_Builder_IAppNotificationComboBox, id);

        public global::System.Collections.Generic.IDictionary<string, string> Items
        {
            get => global::ABI.Microsoft.Windows.AppNotifications.Builder.IAppNotificationComboBoxMethods.get_Items(_objRef_global__Microsoft_Windows_AppNotifications_Builder_IAppNotificationComboBox);
            set => global::ABI.Microsoft.Windows.AppNotifications.Builder.IAppNotificationComboBoxMethods.set_Items(_objRef_global__Microsoft_Windows_AppNotifications_Builder_IAppNotificationComboBox, value);
        }

        public string SelectedItem
        {
            get => global::ABI.Microsoft.Windows.AppNotifications.Builder.IAppNotificationComboBoxMethods.get_SelectedItem(_objRef_global__Microsoft_Windows_AppNotifications_Builder_IAppNotificationComboBox);
            set => global::ABI.Microsoft.Windows.AppNotifications.Builder.IAppNotificationComboBoxMethods.set_SelectedItem(_objRef_global__Microsoft_Windows_AppNotifications_Builder_IAppNotificationComboBox, value);
        }

        public string Title
        {
            get => global::ABI.Microsoft.Windows.AppNotifications.Builder.IAppNotificationComboBoxMethods.get_Title(_objRef_global__Microsoft_Windows_AppNotifications_Builder_IAppNotificationComboBox);
            set => global::ABI.Microsoft.Windows.AppNotifications.Builder.IAppNotificationComboBoxMethods.set_Title(_objRef_global__Microsoft_Windows_AppNotifications_Builder_IAppNotificationComboBox, value);
        }

        private bool IsOverridableInterface(Guid iid) => false;

        global::System.Runtime.InteropServices.CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(ref Guid iid, out IntPtr ppv)
        {
            ppv = IntPtr.Zero;
            if (IsOverridableInterface(iid) || global::WinRT.Interop.IID.IID_IInspectable == iid)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
            }

            if (((IWinRTObject)this).NativeObject.TryAs(iid, out ppv) >= 0)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.Handled;
            }

            return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
        }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.Windows.AppNotifications.Builder")][global::WinRT.WinRTExposedType(typeof(global::WinRT.EnumTypeDetails<AppNotificationDuration>))][global::Windows.Foundation.Metadata.ContractVersion(typeof(AppNotificationBuilderContract), 65536u)]
    public enum AppNotificationDuration : int
    {
        Default = unchecked((int)0),
        Long = unchecked((int)0x1),
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.Windows.AppNotifications.Builder")][global::WinRT.WinRTExposedType(typeof(global::WinRT.EnumTypeDetails<AppNotificationImageCrop>))][global::Windows.Foundation.Metadata.ContractVersion(typeof(AppNotificationBuilderContract), 65536u)]
    public enum AppNotificationImageCrop : int
    {
        Default = unchecked((int)0),
        Circle = unchecked((int)0x1),
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.Windows.AppNotifications.Builder")]
    [global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.Windows.AppNotifications.Builder.AppNotificationProgressBar))]
    [global::ABI.Microsoft.Windows.AppNotifications.Builder.AppNotificationProgressBarRcwFactory]
    [global::WinRT.ProjectedRuntimeClass(typeof(IAppNotificationProgressBar))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(AppNotificationBuilderContract), 65536u)]
    public sealed class AppNotificationProgressBar : global::System.Runtime.InteropServices.ICustomQueryInterface, IWinRTObject, IEquatable<AppNotificationProgressBar>
    {
        private IntPtr ThisPtr => _inner == null ? (((IWinRTObject)this).NativeObject).ThisPtr : _inner.ThisPtr;

        private readonly IObjectReference _inner = null;



        private IObjectReference _objRef_global__Microsoft_Windows_AppNotifications_Builder_IAppNotificationProgressBar => _inner;


        private static volatile IObjectReference ___objRef_global__Microsoft_Windows_AppNotifications_Builder_AppNotificationProgressBar;
        private static IObjectReference _objRef_global__Microsoft_Windows_AppNotifications_Builder_AppNotificationProgressBar
        {
            get
            { 
                var factory = ___objRef_global__Microsoft_Windows_AppNotifications_Builder_AppNotificationProgressBar;
                if (factory != null && factory.IsInCurrentContext)
                {
                    return factory;
                }
                else
                {
                    return ___objRef_global__Microsoft_Windows_AppNotifications_Builder_AppNotificationProgressBar = ActivationFactory.Get("Microsoft.Windows.AppNotifications.Builder.AppNotificationProgressBar");
                }
            }
        }

        public AppNotificationProgressBar() 
        {
            _inner = global::ABI.WinRT.Interop.IActivationFactoryMethods.ActivateInstanceUnsafe(_objRef_global__Microsoft_Windows_AppNotifications_Builder_AppNotificationProgressBar, global::ABI.Microsoft.Windows.AppNotifications.Builder.IAppNotificationProgressBarMethods.IID);
            ComWrappersSupport.RegisterObjectForInterface(this, ThisPtr);
            ComWrappersHelper.Init(_inner, false);

        }

        public static AppNotificationProgressBar FromAbi(IntPtr thisPtr)
        {
            if (thisPtr == IntPtr.Zero) return null;
            return MarshalInspectable<AppNotificationProgressBar>.FromAbi(thisPtr);
        }

        internal AppNotificationProgressBar(IObjectReference objRef)
        {
            _inner = objRef.As(global::ABI.Microsoft.Windows.AppNotifications.Builder.IAppNotificationProgressBarMethods.IID);

        }


        public static bool operator ==(AppNotificationProgressBar x, AppNotificationProgressBar y) => (x?.ThisPtr ?? IntPtr.Zero) == (y?.ThisPtr ?? IntPtr.Zero);
        public static bool operator !=(AppNotificationProgressBar x, AppNotificationProgressBar y) => !(x == y);
        public bool Equals(AppNotificationProgressBar other) => this == other;
        public override bool Equals(object obj) => obj is AppNotificationProgressBar that && this == that;
        public override int GetHashCode() => ThisPtr.GetHashCode();


        bool IWinRTObject.HasUnwrappableNativeObject => true;
        IObjectReference IWinRTObject.NativeObject => _inner;
        private volatile global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> _queryInterfaceCache;
        private global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> MakeQueryInterfaceCache()
        {
            global::System.Threading.Interlocked.CompareExchange(ref _queryInterfaceCache, new global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference>(), null); 
            return _queryInterfaceCache;
        }
        global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> IWinRTObject.QueryInterfaceCache => _queryInterfaceCache ?? MakeQueryInterfaceCache();
        private volatile global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> _additionalTypeData;
        private global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> MakeAdditionalTypeData()
        {
            global::System.Threading.Interlocked.CompareExchange(ref _additionalTypeData, new global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object>(), null); 
            return _additionalTypeData;
        }
        global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> IWinRTObject.AdditionalTypeData => _additionalTypeData ?? MakeAdditionalTypeData();

        private struct InterfaceTag<I>{};


        public AppNotificationProgressBar SetTitle(string value) => global::ABI.Microsoft.Windows.AppNotifications.Builder.IAppNotificationProgressBarMethods.SetTitle(_objRef_global__Microsoft_Windows_AppNotifications_Builder_IAppNotificationProgressBar, value);

        public AppNotificationProgressBar BindTitle() => global::ABI.Microsoft.Windows.AppNotifications.Builder.IAppNotificationProgressBarMethods.BindTitle(_objRef_global__Microsoft_Windows_AppNotifications_Builder_IAppNotificationProgressBar);

        public AppNotificationProgressBar SetStatus(string value) => global::ABI.Microsoft.Windows.AppNotifications.Builder.IAppNotificationProgressBarMethods.SetStatus(_objRef_global__Microsoft_Windows_AppNotifications_Builder_IAppNotificationProgressBar, value);

        public AppNotificationProgressBar BindStatus() => global::ABI.Microsoft.Windows.AppNotifications.Builder.IAppNotificationProgressBarMethods.BindStatus(_objRef_global__Microsoft_Windows_AppNotifications_Builder_IAppNotificationProgressBar);

        public AppNotificationProgressBar SetValue(double value) => global::ABI.Microsoft.Windows.AppNotifications.Builder.IAppNotificationProgressBarMethods.SetValue(_objRef_global__Microsoft_Windows_AppNotifications_Builder_IAppNotificationProgressBar, value);

        public AppNotificationProgressBar BindValue() => global::ABI.Microsoft.Windows.AppNotifications.Builder.IAppNotificationProgressBarMethods.BindValue(_objRef_global__Microsoft_Windows_AppNotifications_Builder_IAppNotificationProgressBar);

        public AppNotificationProgressBar SetValueStringOverride(string value) => global::ABI.Microsoft.Windows.AppNotifications.Builder.IAppNotificationProgressBarMethods.SetValueStringOverride(_objRef_global__Microsoft_Windows_AppNotifications_Builder_IAppNotificationProgressBar, value);

        public AppNotificationProgressBar BindValueStringOverride() => global::ABI.Microsoft.Windows.AppNotifications.Builder.IAppNotificationProgressBarMethods.BindValueStringOverride(_objRef_global__Microsoft_Windows_AppNotifications_Builder_IAppNotificationProgressBar);

        public string Status
        {
            get => global::ABI.Microsoft.Windows.AppNotifications.Builder.IAppNotificationProgressBarMethods.get_Status(_objRef_global__Microsoft_Windows_AppNotifications_Builder_IAppNotificationProgressBar);
            set => global::ABI.Microsoft.Windows.AppNotifications.Builder.IAppNotificationProgressBarMethods.set_Status(_objRef_global__Microsoft_Windows_AppNotifications_Builder_IAppNotificationProgressBar, value);
        }

        public string Title
        {
            get => global::ABI.Microsoft.Windows.AppNotifications.Builder.IAppNotificationProgressBarMethods.get_Title(_objRef_global__Microsoft_Windows_AppNotifications_Builder_IAppNotificationProgressBar);
            set => global::ABI.Microsoft.Windows.AppNotifications.Builder.IAppNotificationProgressBarMethods.set_Title(_objRef_global__Microsoft_Windows_AppNotifications_Builder_IAppNotificationProgressBar, value);
        }

        public double Value
        {
            get => global::ABI.Microsoft.Windows.AppNotifications.Builder.IAppNotificationProgressBarMethods.get_Value(_objRef_global__Microsoft_Windows_AppNotifications_Builder_IAppNotificationProgressBar);
            set => global::ABI.Microsoft.Windows.AppNotifications.Builder.IAppNotificationProgressBarMethods.set_Value(_objRef_global__Microsoft_Windows_AppNotifications_Builder_IAppNotificationProgressBar, value);
        }

        public string ValueStringOverride
        {
            get => global::ABI.Microsoft.Windows.AppNotifications.Builder.IAppNotificationProgressBarMethods.get_ValueStringOverride(_objRef_global__Microsoft_Windows_AppNotifications_Builder_IAppNotificationProgressBar);
            set => global::ABI.Microsoft.Windows.AppNotifications.Builder.IAppNotificationProgressBarMethods.set_ValueStringOverride(_objRef_global__Microsoft_Windows_AppNotifications_Builder_IAppNotificationProgressBar, value);
        }

        private bool IsOverridableInterface(Guid iid) => false;

        global::System.Runtime.InteropServices.CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(ref Guid iid, out IntPtr ppv)
        {
            ppv = IntPtr.Zero;
            if (IsOverridableInterface(iid) || global::WinRT.Interop.IID.IID_IInspectable == iid)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
            }

            if (((IWinRTObject)this).NativeObject.TryAs(iid, out ppv) >= 0)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.Handled;
            }

            return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
        }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.Windows.AppNotifications.Builder")][global::WinRT.WinRTExposedType(typeof(global::WinRT.EnumTypeDetails<AppNotificationScenario>))][global::Windows.Foundation.Metadata.ContractVersion(typeof(AppNotificationBuilderContract), 65536u)]
    public enum AppNotificationScenario : int
    {
        Default = unchecked((int)0),
        Reminder = unchecked((int)0x1),
        Alarm = unchecked((int)0x2),
        IncomingCall = unchecked((int)0x3),
        Urgent = unchecked((int)0x4),
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.Windows.AppNotifications.Builder")][global::WinRT.WinRTExposedType(typeof(global::WinRT.EnumTypeDetails<AppNotificationSoundEvent>))][global::Windows.Foundation.Metadata.ContractVersion(typeof(AppNotificationBuilderContract), 65536u)]
    public enum AppNotificationSoundEvent : int
    {
        Default = unchecked((int)0),
        IM = unchecked((int)0x1),
        Mail = unchecked((int)0x2),
        Reminder = unchecked((int)0x3),
        SMS = unchecked((int)0x4),
        Alarm = unchecked((int)0x5),
        Alarm2 = unchecked((int)0x6),
        Alarm3 = unchecked((int)0x7),
        Alarm4 = unchecked((int)0x8),
        Alarm5 = unchecked((int)0x9),
        Alarm6 = unchecked((int)0xa),
        Alarm7 = unchecked((int)0xb),
        Alarm8 = unchecked((int)0xc),
        Alarm9 = unchecked((int)0xd),
        Alarm10 = unchecked((int)0xe),
        Call = unchecked((int)0xf),
        Call2 = unchecked((int)0x10),
        Call3 = unchecked((int)0x11),
        Call4 = unchecked((int)0x12),
        Call5 = unchecked((int)0x13),
        Call6 = unchecked((int)0x14),
        Call7 = unchecked((int)0x15),
        Call8 = unchecked((int)0x16),
        Call9 = unchecked((int)0x17),
        Call10 = unchecked((int)0x18),
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.Windows.AppNotifications.Builder")]
    [global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.Windows.AppNotifications.Builder.AppNotificationTextProperties))]
    [global::ABI.Microsoft.Windows.AppNotifications.Builder.AppNotificationTextPropertiesRcwFactory]
    [global::WinRT.ProjectedRuntimeClass(typeof(IAppNotificationTextProperties))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(AppNotificationBuilderContract), 65536u)]
    public sealed class AppNotificationTextProperties : global::System.Runtime.InteropServices.ICustomQueryInterface, IWinRTObject, IEquatable<AppNotificationTextProperties>
    {
        private IntPtr ThisPtr => _inner == null ? (((IWinRTObject)this).NativeObject).ThisPtr : _inner.ThisPtr;

        private readonly IObjectReference _inner = null;



        private IObjectReference _objRef_global__Microsoft_Windows_AppNotifications_Builder_IAppNotificationTextProperties => _inner;


        private static volatile IObjectReference ___objRef_global__Microsoft_Windows_AppNotifications_Builder_AppNotificationTextProperties;
        private static IObjectReference _objRef_global__Microsoft_Windows_AppNotifications_Builder_AppNotificationTextProperties
        {
            get
            { 
                var factory = ___objRef_global__Microsoft_Windows_AppNotifications_Builder_AppNotificationTextProperties;
                if (factory != null && factory.IsInCurrentContext)
                {
                    return factory;
                }
                else
                {
                    return ___objRef_global__Microsoft_Windows_AppNotifications_Builder_AppNotificationTextProperties = ActivationFactory.Get("Microsoft.Windows.AppNotifications.Builder.AppNotificationTextProperties");
                }
            }
        }

        public AppNotificationTextProperties() 
        {
            _inner = global::ABI.WinRT.Interop.IActivationFactoryMethods.ActivateInstanceUnsafe(_objRef_global__Microsoft_Windows_AppNotifications_Builder_AppNotificationTextProperties, global::ABI.Microsoft.Windows.AppNotifications.Builder.IAppNotificationTextPropertiesMethods.IID);
            ComWrappersSupport.RegisterObjectForInterface(this, ThisPtr);
            ComWrappersHelper.Init(_inner, false);

        }

        public static AppNotificationTextProperties FromAbi(IntPtr thisPtr)
        {
            if (thisPtr == IntPtr.Zero) return null;
            return MarshalInspectable<AppNotificationTextProperties>.FromAbi(thisPtr);
        }

        internal AppNotificationTextProperties(IObjectReference objRef)
        {
            _inner = objRef.As(global::ABI.Microsoft.Windows.AppNotifications.Builder.IAppNotificationTextPropertiesMethods.IID);

        }


        public static bool operator ==(AppNotificationTextProperties x, AppNotificationTextProperties y) => (x?.ThisPtr ?? IntPtr.Zero) == (y?.ThisPtr ?? IntPtr.Zero);
        public static bool operator !=(AppNotificationTextProperties x, AppNotificationTextProperties y) => !(x == y);
        public bool Equals(AppNotificationTextProperties other) => this == other;
        public override bool Equals(object obj) => obj is AppNotificationTextProperties that && this == that;
        public override int GetHashCode() => ThisPtr.GetHashCode();


        bool IWinRTObject.HasUnwrappableNativeObject => true;
        IObjectReference IWinRTObject.NativeObject => _inner;
        private volatile global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> _queryInterfaceCache;
        private global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> MakeQueryInterfaceCache()
        {
            global::System.Threading.Interlocked.CompareExchange(ref _queryInterfaceCache, new global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference>(), null); 
            return _queryInterfaceCache;
        }
        global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> IWinRTObject.QueryInterfaceCache => _queryInterfaceCache ?? MakeQueryInterfaceCache();
        private volatile global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> _additionalTypeData;
        private global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> MakeAdditionalTypeData()
        {
            global::System.Threading.Interlocked.CompareExchange(ref _additionalTypeData, new global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object>(), null); 
            return _additionalTypeData;
        }
        global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> IWinRTObject.AdditionalTypeData => _additionalTypeData ?? MakeAdditionalTypeData();

        private struct InterfaceTag<I>{};


        public AppNotificationTextProperties SetLanguage(string value) => global::ABI.Microsoft.Windows.AppNotifications.Builder.IAppNotificationTextPropertiesMethods.SetLanguage(_objRef_global__Microsoft_Windows_AppNotifications_Builder_IAppNotificationTextProperties, value);

        public AppNotificationTextProperties SetIncomingCallAlignment() => global::ABI.Microsoft.Windows.AppNotifications.Builder.IAppNotificationTextPropertiesMethods.SetIncomingCallAlignment(_objRef_global__Microsoft_Windows_AppNotifications_Builder_IAppNotificationTextProperties);

        public AppNotificationTextProperties SetMaxLines(int value) => global::ABI.Microsoft.Windows.AppNotifications.Builder.IAppNotificationTextPropertiesMethods.SetMaxLines(_objRef_global__Microsoft_Windows_AppNotifications_Builder_IAppNotificationTextProperties, value);

        public bool IncomingCallAlignment
        {
            get => global::ABI.Microsoft.Windows.AppNotifications.Builder.IAppNotificationTextPropertiesMethods.get_IncomingCallAlignment(_objRef_global__Microsoft_Windows_AppNotifications_Builder_IAppNotificationTextProperties);
            set => global::ABI.Microsoft.Windows.AppNotifications.Builder.IAppNotificationTextPropertiesMethods.set_IncomingCallAlignment(_objRef_global__Microsoft_Windows_AppNotifications_Builder_IAppNotificationTextProperties, value);
        }

        public string Language
        {
            get => global::ABI.Microsoft.Windows.AppNotifications.Builder.IAppNotificationTextPropertiesMethods.get_Language(_objRef_global__Microsoft_Windows_AppNotifications_Builder_IAppNotificationTextProperties);
            set => global::ABI.Microsoft.Windows.AppNotifications.Builder.IAppNotificationTextPropertiesMethods.set_Language(_objRef_global__Microsoft_Windows_AppNotifications_Builder_IAppNotificationTextProperties, value);
        }

        public int MaxLines
        {
            get => global::ABI.Microsoft.Windows.AppNotifications.Builder.IAppNotificationTextPropertiesMethods.get_MaxLines(_objRef_global__Microsoft_Windows_AppNotifications_Builder_IAppNotificationTextProperties);
            set => global::ABI.Microsoft.Windows.AppNotifications.Builder.IAppNotificationTextPropertiesMethods.set_MaxLines(_objRef_global__Microsoft_Windows_AppNotifications_Builder_IAppNotificationTextProperties, value);
        }

        private bool IsOverridableInterface(Guid iid) => false;

        global::System.Runtime.InteropServices.CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(ref Guid iid, out IntPtr ppv)
        {
            ppv = IntPtr.Zero;
            if (IsOverridableInterface(iid) || global::WinRT.Interop.IID.IID_IInspectable == iid)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
            }

            if (((IWinRTObject)this).NativeObject.TryAs(iid, out ppv) >= 0)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.Handled;
            }

            return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
        }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.Windows.AppNotifications.Builder")][Guid("E801D31F-CE03-505C-ADEC-8A02724EC9DE")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.Windows.AppNotifications.Builder.IAppNotificationBuilder))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(AppNotificationBuilderContract), 65536u)]
    internal interface IAppNotificationBuilder
    {
        AppNotificationBuilder AddArgument(string key, string value);
        AppNotificationBuilder SetTimeStamp(global::System.DateTimeOffset value);
        AppNotificationBuilder SetDuration(AppNotificationDuration duration);
        AppNotificationBuilder SetScenario(AppNotificationScenario value);
        [global::Windows.Foundation.Metadata.Overload(@"AddText")]
        AppNotificationBuilder AddText(string text);
        [global::Windows.Foundation.Metadata.Overload(@"AddText2")]
        AppNotificationBuilder AddText(string text, AppNotificationTextProperties properties);
        [global::Windows.Foundation.Metadata.Overload(@"SetAttributionText")]
        AppNotificationBuilder SetAttributionText(string text);
        [global::Windows.Foundation.Metadata.Overload(@"SetAttributionText2")]
        AppNotificationBuilder SetAttributionText(string text, string language);
        [global::Windows.Foundation.Metadata.Overload(@"SetInlineImage")]
        AppNotificationBuilder SetInlineImage(global::System.Uri imageUri);
        [global::Windows.Foundation.Metadata.Overload(@"SetInlineImage2")]
        AppNotificationBuilder SetInlineImage(global::System.Uri imageUri, AppNotificationImageCrop imageCrop);
        [global::Windows.Foundation.Metadata.Overload(@"SetInlineImage3")]
        AppNotificationBuilder SetInlineImage(global::System.Uri imageUri, AppNotificationImageCrop imagecrop, string alternateText);
        [global::Windows.Foundation.Metadata.Overload(@"SetAppLogoOverride")]
        AppNotificationBuilder SetAppLogoOverride(global::System.Uri imageUri);
        [global::Windows.Foundation.Metadata.Overload(@"SetAppLogoOverride2")]
        AppNotificationBuilder SetAppLogoOverride(global::System.Uri imageUri, AppNotificationImageCrop imageCrop);
        [global::Windows.Foundation.Metadata.Overload(@"SetAppLogoOverride3")]
        AppNotificationBuilder SetAppLogoOverride(global::System.Uri imageUri, AppNotificationImageCrop imageCrop, string alternateText);
        [global::Windows.Foundation.Metadata.Overload(@"SetHeroImage")]
        AppNotificationBuilder SetHeroImage(global::System.Uri imageUri);
        [global::Windows.Foundation.Metadata.Overload(@"SetHeroImage2")]
        AppNotificationBuilder SetHeroImage(global::System.Uri imageUri, string alternateText);
        [global::Windows.Foundation.Metadata.Overload(@"SetAudioUri")]
        AppNotificationBuilder SetAudioUri(global::System.Uri audioUri);
        [global::Windows.Foundation.Metadata.Overload(@"SetAudioUri2")]
        AppNotificationBuilder SetAudioUri(global::System.Uri audioUri, AppNotificationAudioLooping loop);
        [global::Windows.Foundation.Metadata.Overload(@"SetAudioEvent")]
        AppNotificationBuilder SetAudioEvent(AppNotificationSoundEvent appNotificationSoundEvent);
        [global::Windows.Foundation.Metadata.Overload(@"SetAudioEvent2")]
        AppNotificationBuilder SetAudioEvent(AppNotificationSoundEvent appNotificationSoundEvent, AppNotificationAudioLooping loop);
        AppNotificationBuilder MuteAudio();
        [global::Windows.Foundation.Metadata.Overload(@"AddTextBox")]
        AppNotificationBuilder AddTextBox(string id);
        [global::Windows.Foundation.Metadata.Overload(@"AddTextBox2")]
        AppNotificationBuilder AddTextBox(string id, string placeHolderText, string title);
        AppNotificationBuilder AddButton(AppNotificationButton value);
        AppNotificationBuilder AddComboBox(AppNotificationComboBox value);
        AppNotificationBuilder AddProgressBar(AppNotificationProgressBar value);
        global::Microsoft.Windows.AppNotifications.AppNotification BuildNotification();
        AppNotificationBuilder SetTag(string value);
        AppNotificationBuilder SetGroup(string group);
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.Windows.AppNotifications.Builder")][Guid("C7042D2A-D319-520E-A314-50081C8888CC")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.Windows.AppNotifications.Builder.IAppNotificationBuilderStatics))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(AppNotificationBuilderContract), 65536u)]
    internal interface IAppNotificationBuilderStatics
    {
        bool IsUrgentScenarioSupported();
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.Windows.AppNotifications.Builder")][Guid("A7C03031-5634-5098-AEC9-47ECB60C3499")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.Windows.AppNotifications.Builder.IAppNotificationButton))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(AppNotificationBuilderContract), 65536u)]
    internal interface IAppNotificationButton
    {
        AppNotificationButton AddArgument(string key, string value);
        AppNotificationButton SetIcon(global::System.Uri value);
        AppNotificationButton SetToolTip(string value);
        AppNotificationButton SetContextMenuPlacement();
        AppNotificationButton SetButtonStyle(AppNotificationButtonStyle value);
        AppNotificationButton SetInputId(string value);
        [global::Windows.Foundation.Metadata.Overload(@"SetInvokeUri")]
        AppNotificationButton SetInvokeUri(global::System.Uri protocolUri);
        [global::Windows.Foundation.Metadata.Overload(@"SetInvokeUri2")]
        AppNotificationButton SetInvokeUri(global::System.Uri protocolUri, string targetAppId);
        global::System.Collections.Generic.IDictionary<string, string> Arguments { get; set; }
        AppNotificationButtonStyle ButtonStyle { get; set; }
        string Content { get; set; }
        bool ContextMenuPlacement { get; set; }
        global::System.Uri Icon { get; set; }
        string InputId { get; set; }
        global::System.Uri InvokeUri { get; set; }
        string TargetAppId { get; set; }
        string ToolTip { get; set; }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.Windows.AppNotifications.Builder")][Guid("4F109286-0A6D-5A5E-9E8F-9FE31669FBB8")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.Windows.AppNotifications.Builder.IAppNotificationButtonFactory))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(AppNotificationBuilderContract), 65536u)]
    internal interface IAppNotificationButtonFactory
    {
        AppNotificationButton CreateInstance(string content);
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.Windows.AppNotifications.Builder")][Guid("FEAD7C18-4144-59A4-9611-86B7E8191853")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.Windows.AppNotifications.Builder.IAppNotificationButtonStatics))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(AppNotificationBuilderContract), 65536u)]
    internal interface IAppNotificationButtonStatics
    {
        bool IsToolTipSupported();
        bool IsButtonStyleSupported();
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.Windows.AppNotifications.Builder")][Guid("4547C9E2-4815-538C-BE26-040CE17F8B62")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.Windows.AppNotifications.Builder.IAppNotificationComboBox))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(AppNotificationBuilderContract), 65536u)]
    internal interface IAppNotificationComboBox
    {
        AppNotificationComboBox AddItem(string id, string content);
        AppNotificationComboBox SetTitle(string value);
        AppNotificationComboBox SetSelectedItem(string id);
        global::System.Collections.Generic.IDictionary<string, string> Items { get; set; }
        string SelectedItem { get; set; }
        string Title { get; set; }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.Windows.AppNotifications.Builder")][Guid("1B31B5B0-9D86-59ED-8629-A79498AB5D4B")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.Windows.AppNotifications.Builder.IAppNotificationComboBoxFactory))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(AppNotificationBuilderContract), 65536u)]
    internal interface IAppNotificationComboBoxFactory
    {
        AppNotificationComboBox CreateInstance(string id);
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.Windows.AppNotifications.Builder")][Guid("FCED62F2-2074-5641-8630-87A14315AC86")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.Windows.AppNotifications.Builder.IAppNotificationProgressBar))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(AppNotificationBuilderContract), 65536u)]
    internal interface IAppNotificationProgressBar
    {
        AppNotificationProgressBar SetTitle(string value);
        AppNotificationProgressBar BindTitle();
        AppNotificationProgressBar SetStatus(string value);
        AppNotificationProgressBar BindStatus();
        AppNotificationProgressBar SetValue(double value);
        AppNotificationProgressBar BindValue();
        AppNotificationProgressBar SetValueStringOverride(string value);
        AppNotificationProgressBar BindValueStringOverride();
        string Status { get; set; }
        string Title { get; set; }
        double Value { get; set; }
        string ValueStringOverride { get; set; }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.Windows.AppNotifications.Builder")][Guid("23A30D0B-5258-5853-932E-9521A3642AFB")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.Windows.AppNotifications.Builder.IAppNotificationTextProperties))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(AppNotificationBuilderContract), 65536u)]
    internal interface IAppNotificationTextProperties
    {
        AppNotificationTextProperties SetLanguage(string value);
        AppNotificationTextProperties SetIncomingCallAlignment();
        AppNotificationTextProperties SetMaxLines(int value);
        bool IncomingCallAlignment { get; set; }
        string Language { get; set; }
        int MaxLines { get; set; }
    }
}

#pragma warning disable CA1416
namespace ABI.Microsoft.Windows.AppNotifications.Builder
{
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    public struct AppNotificationBuilder
    {

        public static IObjectReference CreateMarshaler(global::Microsoft.Windows.AppNotifications.Builder.AppNotificationBuilder obj) => obj is null ? null : MarshalInspectable<global::Microsoft.Windows.AppNotifications.Builder.AppNotificationBuilder>.CreateMarshaler<IUnknownVftbl>(obj, global::ABI.Microsoft.Windows.AppNotifications.Builder.IAppNotificationBuilderMethods.IID);
        public static ObjectReferenceValue CreateMarshaler2(global::Microsoft.Windows.AppNotifications.Builder.AppNotificationBuilder obj) => MarshalInspectable<object>.CreateMarshaler2(obj, global::ABI.Microsoft.Windows.AppNotifications.Builder.IAppNotificationBuilderMethods.IID);
        public static IntPtr GetAbi(IObjectReference value) => value is null ? IntPtr.Zero : MarshalInterfaceHelper<object>.GetAbi(value);
        public static global::Microsoft.Windows.AppNotifications.Builder.AppNotificationBuilder FromAbi(IntPtr thisPtr) => global::Microsoft.Windows.AppNotifications.Builder.AppNotificationBuilder.FromAbi(thisPtr);
        public static IntPtr FromManaged(global::Microsoft.Windows.AppNotifications.Builder.AppNotificationBuilder obj) => obj is null ? IntPtr.Zero : CreateMarshaler2(obj).Detach();
        public static unsafe MarshalInterfaceHelper<global::Microsoft.Windows.AppNotifications.Builder.AppNotificationBuilder>.MarshalerArray CreateMarshalerArray(global::Microsoft.Windows.AppNotifications.Builder.AppNotificationBuilder[] array) => MarshalInterfaceHelper<global::Microsoft.Windows.AppNotifications.Builder.AppNotificationBuilder>.CreateMarshalerArray2(array, (o) => CreateMarshaler2(o));
        public static (int length, IntPtr data) GetAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.Windows.AppNotifications.Builder.AppNotificationBuilder>.GetAbiArray(box);
        public static unsafe global::Microsoft.Windows.AppNotifications.Builder.AppNotificationBuilder[] FromAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.Windows.AppNotifications.Builder.AppNotificationBuilder>.FromAbiArray(box, FromAbi);
        public static void CopyAbiArray(global::Microsoft.Windows.AppNotifications.Builder.AppNotificationBuilder[] array, object box) => MarshalInterfaceHelper<global::Microsoft.Windows.AppNotifications.Builder.AppNotificationBuilder>.CopyAbiArray(array, box, FromAbi);
        public static (int length, IntPtr data) FromManagedArray(global::Microsoft.Windows.AppNotifications.Builder.AppNotificationBuilder[] array) => MarshalInterfaceHelper<global::Microsoft.Windows.AppNotifications.Builder.AppNotificationBuilder>.FromManagedArray(array, (o) => FromManaged(o));
        public static void DisposeMarshaler(IObjectReference value) => MarshalInspectable<object>.DisposeMarshaler(value);
        public static void DisposeMarshalerArray(MarshalInterfaceHelper<global::Microsoft.Windows.AppNotifications.Builder.AppNotificationBuilder>.MarshalerArray array) => MarshalInterfaceHelper<global::Microsoft.Windows.AppNotifications.Builder.AppNotificationBuilder>.DisposeMarshalerArray(array);
        public static void DisposeAbi(IntPtr abi) => MarshalInspectable<object>.DisposeAbi(abi);
        public static unsafe void DisposeAbiArray(object box) => MarshalInspectable<object>.DisposeAbiArray(box);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    internal sealed class AppNotificationBuilderRcwFactoryAttribute : global::WinRT.WinRTImplementationTypeRcwFactoryAttribute
    {
        public override object CreateInstance(global::WinRT.IInspectable inspectable)
            => new global::Microsoft.Windows.AppNotifications.Builder.AppNotificationBuilder(inspectable.ObjRef);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    public struct AppNotificationButton
    {

        public static IObjectReference CreateMarshaler(global::Microsoft.Windows.AppNotifications.Builder.AppNotificationButton obj) => obj is null ? null : MarshalInspectable<global::Microsoft.Windows.AppNotifications.Builder.AppNotificationButton>.CreateMarshaler<IUnknownVftbl>(obj, global::ABI.Microsoft.Windows.AppNotifications.Builder.IAppNotificationButtonMethods.IID);
        public static ObjectReferenceValue CreateMarshaler2(global::Microsoft.Windows.AppNotifications.Builder.AppNotificationButton obj) => MarshalInspectable<object>.CreateMarshaler2(obj, global::ABI.Microsoft.Windows.AppNotifications.Builder.IAppNotificationButtonMethods.IID);
        public static IntPtr GetAbi(IObjectReference value) => value is null ? IntPtr.Zero : MarshalInterfaceHelper<object>.GetAbi(value);
        public static global::Microsoft.Windows.AppNotifications.Builder.AppNotificationButton FromAbi(IntPtr thisPtr) => global::Microsoft.Windows.AppNotifications.Builder.AppNotificationButton.FromAbi(thisPtr);
        public static IntPtr FromManaged(global::Microsoft.Windows.AppNotifications.Builder.AppNotificationButton obj) => obj is null ? IntPtr.Zero : CreateMarshaler2(obj).Detach();
        public static unsafe MarshalInterfaceHelper<global::Microsoft.Windows.AppNotifications.Builder.AppNotificationButton>.MarshalerArray CreateMarshalerArray(global::Microsoft.Windows.AppNotifications.Builder.AppNotificationButton[] array) => MarshalInterfaceHelper<global::Microsoft.Windows.AppNotifications.Builder.AppNotificationButton>.CreateMarshalerArray2(array, (o) => CreateMarshaler2(o));
        public static (int length, IntPtr data) GetAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.Windows.AppNotifications.Builder.AppNotificationButton>.GetAbiArray(box);
        public static unsafe global::Microsoft.Windows.AppNotifications.Builder.AppNotificationButton[] FromAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.Windows.AppNotifications.Builder.AppNotificationButton>.FromAbiArray(box, FromAbi);
        public static void CopyAbiArray(global::Microsoft.Windows.AppNotifications.Builder.AppNotificationButton[] array, object box) => MarshalInterfaceHelper<global::Microsoft.Windows.AppNotifications.Builder.AppNotificationButton>.CopyAbiArray(array, box, FromAbi);
        public static (int length, IntPtr data) FromManagedArray(global::Microsoft.Windows.AppNotifications.Builder.AppNotificationButton[] array) => MarshalInterfaceHelper<global::Microsoft.Windows.AppNotifications.Builder.AppNotificationButton>.FromManagedArray(array, (o) => FromManaged(o));
        public static void DisposeMarshaler(IObjectReference value) => MarshalInspectable<object>.DisposeMarshaler(value);
        public static void DisposeMarshalerArray(MarshalInterfaceHelper<global::Microsoft.Windows.AppNotifications.Builder.AppNotificationButton>.MarshalerArray array) => MarshalInterfaceHelper<global::Microsoft.Windows.AppNotifications.Builder.AppNotificationButton>.DisposeMarshalerArray(array);
        public static void DisposeAbi(IntPtr abi) => MarshalInspectable<object>.DisposeAbi(abi);
        public static unsafe void DisposeAbiArray(object box) => MarshalInspectable<object>.DisposeAbiArray(box);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    internal sealed class AppNotificationButtonRcwFactoryAttribute : global::WinRT.WinRTImplementationTypeRcwFactoryAttribute
    {
        public override object CreateInstance(global::WinRT.IInspectable inspectable)
            => new global::Microsoft.Windows.AppNotifications.Builder.AppNotificationButton(inspectable.ObjRef);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    public struct AppNotificationComboBox
    {

        public static IObjectReference CreateMarshaler(global::Microsoft.Windows.AppNotifications.Builder.AppNotificationComboBox obj) => obj is null ? null : MarshalInspectable<global::Microsoft.Windows.AppNotifications.Builder.AppNotificationComboBox>.CreateMarshaler<IUnknownVftbl>(obj, global::ABI.Microsoft.Windows.AppNotifications.Builder.IAppNotificationComboBoxMethods.IID);
        public static ObjectReferenceValue CreateMarshaler2(global::Microsoft.Windows.AppNotifications.Builder.AppNotificationComboBox obj) => MarshalInspectable<object>.CreateMarshaler2(obj, global::ABI.Microsoft.Windows.AppNotifications.Builder.IAppNotificationComboBoxMethods.IID);
        public static IntPtr GetAbi(IObjectReference value) => value is null ? IntPtr.Zero : MarshalInterfaceHelper<object>.GetAbi(value);
        public static global::Microsoft.Windows.AppNotifications.Builder.AppNotificationComboBox FromAbi(IntPtr thisPtr) => global::Microsoft.Windows.AppNotifications.Builder.AppNotificationComboBox.FromAbi(thisPtr);
        public static IntPtr FromManaged(global::Microsoft.Windows.AppNotifications.Builder.AppNotificationComboBox obj) => obj is null ? IntPtr.Zero : CreateMarshaler2(obj).Detach();
        public static unsafe MarshalInterfaceHelper<global::Microsoft.Windows.AppNotifications.Builder.AppNotificationComboBox>.MarshalerArray CreateMarshalerArray(global::Microsoft.Windows.AppNotifications.Builder.AppNotificationComboBox[] array) => MarshalInterfaceHelper<global::Microsoft.Windows.AppNotifications.Builder.AppNotificationComboBox>.CreateMarshalerArray2(array, (o) => CreateMarshaler2(o));
        public static (int length, IntPtr data) GetAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.Windows.AppNotifications.Builder.AppNotificationComboBox>.GetAbiArray(box);
        public static unsafe global::Microsoft.Windows.AppNotifications.Builder.AppNotificationComboBox[] FromAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.Windows.AppNotifications.Builder.AppNotificationComboBox>.FromAbiArray(box, FromAbi);
        public static void CopyAbiArray(global::Microsoft.Windows.AppNotifications.Builder.AppNotificationComboBox[] array, object box) => MarshalInterfaceHelper<global::Microsoft.Windows.AppNotifications.Builder.AppNotificationComboBox>.CopyAbiArray(array, box, FromAbi);
        public static (int length, IntPtr data) FromManagedArray(global::Microsoft.Windows.AppNotifications.Builder.AppNotificationComboBox[] array) => MarshalInterfaceHelper<global::Microsoft.Windows.AppNotifications.Builder.AppNotificationComboBox>.FromManagedArray(array, (o) => FromManaged(o));
        public static void DisposeMarshaler(IObjectReference value) => MarshalInspectable<object>.DisposeMarshaler(value);
        public static void DisposeMarshalerArray(MarshalInterfaceHelper<global::Microsoft.Windows.AppNotifications.Builder.AppNotificationComboBox>.MarshalerArray array) => MarshalInterfaceHelper<global::Microsoft.Windows.AppNotifications.Builder.AppNotificationComboBox>.DisposeMarshalerArray(array);
        public static void DisposeAbi(IntPtr abi) => MarshalInspectable<object>.DisposeAbi(abi);
        public static unsafe void DisposeAbiArray(object box) => MarshalInspectable<object>.DisposeAbiArray(box);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    internal sealed class AppNotificationComboBoxRcwFactoryAttribute : global::WinRT.WinRTImplementationTypeRcwFactoryAttribute
    {
        public override object CreateInstance(global::WinRT.IInspectable inspectable)
            => new global::Microsoft.Windows.AppNotifications.Builder.AppNotificationComboBox(inspectable.ObjRef);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    public struct AppNotificationProgressBar
    {

        public static IObjectReference CreateMarshaler(global::Microsoft.Windows.AppNotifications.Builder.AppNotificationProgressBar obj) => obj is null ? null : MarshalInspectable<global::Microsoft.Windows.AppNotifications.Builder.AppNotificationProgressBar>.CreateMarshaler<IUnknownVftbl>(obj, global::ABI.Microsoft.Windows.AppNotifications.Builder.IAppNotificationProgressBarMethods.IID);
        public static ObjectReferenceValue CreateMarshaler2(global::Microsoft.Windows.AppNotifications.Builder.AppNotificationProgressBar obj) => MarshalInspectable<object>.CreateMarshaler2(obj, global::ABI.Microsoft.Windows.AppNotifications.Builder.IAppNotificationProgressBarMethods.IID);
        public static IntPtr GetAbi(IObjectReference value) => value is null ? IntPtr.Zero : MarshalInterfaceHelper<object>.GetAbi(value);
        public static global::Microsoft.Windows.AppNotifications.Builder.AppNotificationProgressBar FromAbi(IntPtr thisPtr) => global::Microsoft.Windows.AppNotifications.Builder.AppNotificationProgressBar.FromAbi(thisPtr);
        public static IntPtr FromManaged(global::Microsoft.Windows.AppNotifications.Builder.AppNotificationProgressBar obj) => obj is null ? IntPtr.Zero : CreateMarshaler2(obj).Detach();
        public static unsafe MarshalInterfaceHelper<global::Microsoft.Windows.AppNotifications.Builder.AppNotificationProgressBar>.MarshalerArray CreateMarshalerArray(global::Microsoft.Windows.AppNotifications.Builder.AppNotificationProgressBar[] array) => MarshalInterfaceHelper<global::Microsoft.Windows.AppNotifications.Builder.AppNotificationProgressBar>.CreateMarshalerArray2(array, (o) => CreateMarshaler2(o));
        public static (int length, IntPtr data) GetAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.Windows.AppNotifications.Builder.AppNotificationProgressBar>.GetAbiArray(box);
        public static unsafe global::Microsoft.Windows.AppNotifications.Builder.AppNotificationProgressBar[] FromAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.Windows.AppNotifications.Builder.AppNotificationProgressBar>.FromAbiArray(box, FromAbi);
        public static void CopyAbiArray(global::Microsoft.Windows.AppNotifications.Builder.AppNotificationProgressBar[] array, object box) => MarshalInterfaceHelper<global::Microsoft.Windows.AppNotifications.Builder.AppNotificationProgressBar>.CopyAbiArray(array, box, FromAbi);
        public static (int length, IntPtr data) FromManagedArray(global::Microsoft.Windows.AppNotifications.Builder.AppNotificationProgressBar[] array) => MarshalInterfaceHelper<global::Microsoft.Windows.AppNotifications.Builder.AppNotificationProgressBar>.FromManagedArray(array, (o) => FromManaged(o));
        public static void DisposeMarshaler(IObjectReference value) => MarshalInspectable<object>.DisposeMarshaler(value);
        public static void DisposeMarshalerArray(MarshalInterfaceHelper<global::Microsoft.Windows.AppNotifications.Builder.AppNotificationProgressBar>.MarshalerArray array) => MarshalInterfaceHelper<global::Microsoft.Windows.AppNotifications.Builder.AppNotificationProgressBar>.DisposeMarshalerArray(array);
        public static void DisposeAbi(IntPtr abi) => MarshalInspectable<object>.DisposeAbi(abi);
        public static unsafe void DisposeAbiArray(object box) => MarshalInspectable<object>.DisposeAbiArray(box);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    internal sealed class AppNotificationProgressBarRcwFactoryAttribute : global::WinRT.WinRTImplementationTypeRcwFactoryAttribute
    {
        public override object CreateInstance(global::WinRT.IInspectable inspectable)
            => new global::Microsoft.Windows.AppNotifications.Builder.AppNotificationProgressBar(inspectable.ObjRef);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    public struct AppNotificationTextProperties
    {

        public static IObjectReference CreateMarshaler(global::Microsoft.Windows.AppNotifications.Builder.AppNotificationTextProperties obj) => obj is null ? null : MarshalInspectable<global::Microsoft.Windows.AppNotifications.Builder.AppNotificationTextProperties>.CreateMarshaler<IUnknownVftbl>(obj, global::ABI.Microsoft.Windows.AppNotifications.Builder.IAppNotificationTextPropertiesMethods.IID);
        public static ObjectReferenceValue CreateMarshaler2(global::Microsoft.Windows.AppNotifications.Builder.AppNotificationTextProperties obj) => MarshalInspectable<object>.CreateMarshaler2(obj, global::ABI.Microsoft.Windows.AppNotifications.Builder.IAppNotificationTextPropertiesMethods.IID);
        public static IntPtr GetAbi(IObjectReference value) => value is null ? IntPtr.Zero : MarshalInterfaceHelper<object>.GetAbi(value);
        public static global::Microsoft.Windows.AppNotifications.Builder.AppNotificationTextProperties FromAbi(IntPtr thisPtr) => global::Microsoft.Windows.AppNotifications.Builder.AppNotificationTextProperties.FromAbi(thisPtr);
        public static IntPtr FromManaged(global::Microsoft.Windows.AppNotifications.Builder.AppNotificationTextProperties obj) => obj is null ? IntPtr.Zero : CreateMarshaler2(obj).Detach();
        public static unsafe MarshalInterfaceHelper<global::Microsoft.Windows.AppNotifications.Builder.AppNotificationTextProperties>.MarshalerArray CreateMarshalerArray(global::Microsoft.Windows.AppNotifications.Builder.AppNotificationTextProperties[] array) => MarshalInterfaceHelper<global::Microsoft.Windows.AppNotifications.Builder.AppNotificationTextProperties>.CreateMarshalerArray2(array, (o) => CreateMarshaler2(o));
        public static (int length, IntPtr data) GetAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.Windows.AppNotifications.Builder.AppNotificationTextProperties>.GetAbiArray(box);
        public static unsafe global::Microsoft.Windows.AppNotifications.Builder.AppNotificationTextProperties[] FromAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.Windows.AppNotifications.Builder.AppNotificationTextProperties>.FromAbiArray(box, FromAbi);
        public static void CopyAbiArray(global::Microsoft.Windows.AppNotifications.Builder.AppNotificationTextProperties[] array, object box) => MarshalInterfaceHelper<global::Microsoft.Windows.AppNotifications.Builder.AppNotificationTextProperties>.CopyAbiArray(array, box, FromAbi);
        public static (int length, IntPtr data) FromManagedArray(global::Microsoft.Windows.AppNotifications.Builder.AppNotificationTextProperties[] array) => MarshalInterfaceHelper<global::Microsoft.Windows.AppNotifications.Builder.AppNotificationTextProperties>.FromManagedArray(array, (o) => FromManaged(o));
        public static void DisposeMarshaler(IObjectReference value) => MarshalInspectable<object>.DisposeMarshaler(value);
        public static void DisposeMarshalerArray(MarshalInterfaceHelper<global::Microsoft.Windows.AppNotifications.Builder.AppNotificationTextProperties>.MarshalerArray array) => MarshalInterfaceHelper<global::Microsoft.Windows.AppNotifications.Builder.AppNotificationTextProperties>.DisposeMarshalerArray(array);
        public static void DisposeAbi(IntPtr abi) => MarshalInspectable<object>.DisposeAbi(abi);
        public static unsafe void DisposeAbiArray(object box) => MarshalInspectable<object>.DisposeAbiArray(box);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    internal sealed class AppNotificationTextPropertiesRcwFactoryAttribute : global::WinRT.WinRTImplementationTypeRcwFactoryAttribute
    {
        public override object CreateInstance(global::WinRT.IInspectable inspectable)
            => new global::Microsoft.Windows.AppNotifications.Builder.AppNotificationTextProperties(inspectable.ObjRef);
    }
    internal static class IAppNotificationBuilderMethods
    {


        internal static unsafe global::Microsoft.Windows.AppNotifications.Builder.AppNotificationBuilder AddArgument(IObjectReference _obj, string key, string value)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                MarshalString.Pinnable __key = new(key);
                MarshalString.Pinnable __value = new(value);
                fixed(void* ___key = __key, ___value = __value)
                {
                    global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, IntPtr, IntPtr*, int>**)ThisPtr)[6](ThisPtr, MarshalString.GetAbi(ref __key), MarshalString.GetAbi(ref __value), &__retval));
                    global::System.GC.KeepAlive(_obj);
                    return global::ABI.Microsoft.Windows.AppNotifications.Builder.AppNotificationBuilder.FromAbi(__retval);
                }
            }
            finally
            {
                global::ABI.Microsoft.Windows.AppNotifications.Builder.AppNotificationBuilder.DisposeAbi(__retval);
            }
        }

        internal static unsafe global::Microsoft.Windows.AppNotifications.Builder.AppNotificationBuilder SetTimeStamp(IObjectReference _obj, global::System.DateTimeOffset value)
        {
            var ThisPtr = _obj.ThisPtr;

            global::ABI.System.DateTimeOffset.Marshaler __value = default;
            IntPtr __retval = default;
            try
            {
                __value = global::ABI.System.DateTimeOffset.CreateMarshaler(value);
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::ABI.System.DateTimeOffset, IntPtr*, int>**)ThisPtr)[7](ThisPtr, global::ABI.System.DateTimeOffset.GetAbi(__value), &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.Windows.AppNotifications.Builder.AppNotificationBuilder.FromAbi(__retval);
            }
            finally
            {
                global::ABI.System.DateTimeOffset.DisposeMarshaler(__value);
                global::ABI.Microsoft.Windows.AppNotifications.Builder.AppNotificationBuilder.DisposeAbi(__retval);
            }
        }

        internal static unsafe global::Microsoft.Windows.AppNotifications.Builder.AppNotificationBuilder SetDuration(IObjectReference _obj, global::Microsoft.Windows.AppNotifications.Builder.AppNotificationDuration duration)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::Microsoft.Windows.AppNotifications.Builder.AppNotificationDuration, IntPtr*, int>**)ThisPtr)[8](ThisPtr, duration, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.Windows.AppNotifications.Builder.AppNotificationBuilder.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.Windows.AppNotifications.Builder.AppNotificationBuilder.DisposeAbi(__retval);
            }
        }

        internal static unsafe global::Microsoft.Windows.AppNotifications.Builder.AppNotificationBuilder SetScenario(IObjectReference _obj, global::Microsoft.Windows.AppNotifications.Builder.AppNotificationScenario value)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::Microsoft.Windows.AppNotifications.Builder.AppNotificationScenario, IntPtr*, int>**)ThisPtr)[9](ThisPtr, value, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.Windows.AppNotifications.Builder.AppNotificationBuilder.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.Windows.AppNotifications.Builder.AppNotificationBuilder.DisposeAbi(__retval);
            }
        }

        internal static unsafe global::Microsoft.Windows.AppNotifications.Builder.AppNotificationBuilder AddText(IObjectReference _obj, string text)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                MarshalString.Pinnable __text = new(text);
                fixed(void* ___text = __text)
                {
                    global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, IntPtr*, int>**)ThisPtr)[10](ThisPtr, MarshalString.GetAbi(ref __text), &__retval));
                    global::System.GC.KeepAlive(_obj);
                    return global::ABI.Microsoft.Windows.AppNotifications.Builder.AppNotificationBuilder.FromAbi(__retval);
                }
            }
            finally
            {
                global::ABI.Microsoft.Windows.AppNotifications.Builder.AppNotificationBuilder.DisposeAbi(__retval);
            }
        }

        internal static unsafe global::Microsoft.Windows.AppNotifications.Builder.AppNotificationBuilder AddText(IObjectReference _obj, string text, global::Microsoft.Windows.AppNotifications.Builder.AppNotificationTextProperties properties)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __properties = default;
            IntPtr __retval = default;
            try
            {
                __properties = global::ABI.Microsoft.Windows.AppNotifications.Builder.AppNotificationTextProperties.CreateMarshaler2(properties);
                MarshalString.Pinnable __text = new(text);
                fixed(void* ___text = __text)
                {
                    global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, IntPtr, IntPtr*, int>**)ThisPtr)[11](ThisPtr, MarshalString.GetAbi(ref __text), MarshalInspectable<object>.GetAbi(__properties), &__retval));
                    global::System.GC.KeepAlive(_obj);
                    return global::ABI.Microsoft.Windows.AppNotifications.Builder.AppNotificationBuilder.FromAbi(__retval);
                }
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__properties);
                global::ABI.Microsoft.Windows.AppNotifications.Builder.AppNotificationBuilder.DisposeAbi(__retval);
            }
        }

        internal static unsafe global::Microsoft.Windows.AppNotifications.Builder.AppNotificationBuilder SetAttributionText(IObjectReference _obj, string text)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                MarshalString.Pinnable __text = new(text);
                fixed(void* ___text = __text)
                {
                    global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, IntPtr*, int>**)ThisPtr)[12](ThisPtr, MarshalString.GetAbi(ref __text), &__retval));
                    global::System.GC.KeepAlive(_obj);
                    return global::ABI.Microsoft.Windows.AppNotifications.Builder.AppNotificationBuilder.FromAbi(__retval);
                }
            }
            finally
            {
                global::ABI.Microsoft.Windows.AppNotifications.Builder.AppNotificationBuilder.DisposeAbi(__retval);
            }
        }

        internal static unsafe global::Microsoft.Windows.AppNotifications.Builder.AppNotificationBuilder SetAttributionText(IObjectReference _obj, string text, string language)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                MarshalString.Pinnable __text = new(text);
                MarshalString.Pinnable __language = new(language);
                fixed(void* ___text = __text, ___language = __language)
                {
                    global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, IntPtr, IntPtr*, int>**)ThisPtr)[13](ThisPtr, MarshalString.GetAbi(ref __text), MarshalString.GetAbi(ref __language), &__retval));
                    global::System.GC.KeepAlive(_obj);
                    return global::ABI.Microsoft.Windows.AppNotifications.Builder.AppNotificationBuilder.FromAbi(__retval);
                }
            }
            finally
            {
                global::ABI.Microsoft.Windows.AppNotifications.Builder.AppNotificationBuilder.DisposeAbi(__retval);
            }
        }

        internal static unsafe global::Microsoft.Windows.AppNotifications.Builder.AppNotificationBuilder SetInlineImage(IObjectReference _obj, global::System.Uri imageUri)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __imageUri = default;
            IntPtr __retval = default;
            try
            {
                __imageUri = global::ABI.System.Uri.CreateMarshaler2(imageUri);
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, IntPtr*, int>**)ThisPtr)[14](ThisPtr, MarshalInspectable<object>.GetAbi(__imageUri), &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.Windows.AppNotifications.Builder.AppNotificationBuilder.FromAbi(__retval);
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__imageUri);
                global::ABI.Microsoft.Windows.AppNotifications.Builder.AppNotificationBuilder.DisposeAbi(__retval);
            }
        }

        internal static unsafe global::Microsoft.Windows.AppNotifications.Builder.AppNotificationBuilder SetInlineImage(IObjectReference _obj, global::System.Uri imageUri, global::Microsoft.Windows.AppNotifications.Builder.AppNotificationImageCrop imageCrop)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __imageUri = default;
            IntPtr __retval = default;
            try
            {
                __imageUri = global::ABI.System.Uri.CreateMarshaler2(imageUri);
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, global::Microsoft.Windows.AppNotifications.Builder.AppNotificationImageCrop, IntPtr*, int>**)ThisPtr)[15](ThisPtr, MarshalInspectable<object>.GetAbi(__imageUri), imageCrop, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.Windows.AppNotifications.Builder.AppNotificationBuilder.FromAbi(__retval);
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__imageUri);
                global::ABI.Microsoft.Windows.AppNotifications.Builder.AppNotificationBuilder.DisposeAbi(__retval);
            }
        }

        internal static unsafe global::Microsoft.Windows.AppNotifications.Builder.AppNotificationBuilder SetInlineImage(IObjectReference _obj, global::System.Uri imageUri, global::Microsoft.Windows.AppNotifications.Builder.AppNotificationImageCrop imagecrop, string alternateText)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __imageUri = default;
            IntPtr __retval = default;
            try
            {
                __imageUri = global::ABI.System.Uri.CreateMarshaler2(imageUri);
                MarshalString.Pinnable __alternateText = new(alternateText);
                fixed(void* ___alternateText = __alternateText)
                {
                    global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, global::Microsoft.Windows.AppNotifications.Builder.AppNotificationImageCrop, IntPtr, IntPtr*, int>**)ThisPtr)[16](ThisPtr, MarshalInspectable<object>.GetAbi(__imageUri), imagecrop, MarshalString.GetAbi(ref __alternateText), &__retval));
                    global::System.GC.KeepAlive(_obj);
                    return global::ABI.Microsoft.Windows.AppNotifications.Builder.AppNotificationBuilder.FromAbi(__retval);
                }
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__imageUri);
                global::ABI.Microsoft.Windows.AppNotifications.Builder.AppNotificationBuilder.DisposeAbi(__retval);
            }
        }

        internal static unsafe global::Microsoft.Windows.AppNotifications.Builder.AppNotificationBuilder SetAppLogoOverride(IObjectReference _obj, global::System.Uri imageUri)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __imageUri = default;
            IntPtr __retval = default;
            try
            {
                __imageUri = global::ABI.System.Uri.CreateMarshaler2(imageUri);
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, IntPtr*, int>**)ThisPtr)[17](ThisPtr, MarshalInspectable<object>.GetAbi(__imageUri), &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.Windows.AppNotifications.Builder.AppNotificationBuilder.FromAbi(__retval);
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__imageUri);
                global::ABI.Microsoft.Windows.AppNotifications.Builder.AppNotificationBuilder.DisposeAbi(__retval);
            }
        }

        internal static unsafe global::Microsoft.Windows.AppNotifications.Builder.AppNotificationBuilder SetAppLogoOverride(IObjectReference _obj, global::System.Uri imageUri, global::Microsoft.Windows.AppNotifications.Builder.AppNotificationImageCrop imageCrop)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __imageUri = default;
            IntPtr __retval = default;
            try
            {
                __imageUri = global::ABI.System.Uri.CreateMarshaler2(imageUri);
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, global::Microsoft.Windows.AppNotifications.Builder.AppNotificationImageCrop, IntPtr*, int>**)ThisPtr)[18](ThisPtr, MarshalInspectable<object>.GetAbi(__imageUri), imageCrop, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.Windows.AppNotifications.Builder.AppNotificationBuilder.FromAbi(__retval);
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__imageUri);
                global::ABI.Microsoft.Windows.AppNotifications.Builder.AppNotificationBuilder.DisposeAbi(__retval);
            }
        }

        internal static unsafe global::Microsoft.Windows.AppNotifications.Builder.AppNotificationBuilder SetAppLogoOverride(IObjectReference _obj, global::System.Uri imageUri, global::Microsoft.Windows.AppNotifications.Builder.AppNotificationImageCrop imageCrop, string alternateText)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __imageUri = default;
            IntPtr __retval = default;
            try
            {
                __imageUri = global::ABI.System.Uri.CreateMarshaler2(imageUri);
                MarshalString.Pinnable __alternateText = new(alternateText);
                fixed(void* ___alternateText = __alternateText)
                {
                    global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, global::Microsoft.Windows.AppNotifications.Builder.AppNotificationImageCrop, IntPtr, IntPtr*, int>**)ThisPtr)[19](ThisPtr, MarshalInspectable<object>.GetAbi(__imageUri), imageCrop, MarshalString.GetAbi(ref __alternateText), &__retval));
                    global::System.GC.KeepAlive(_obj);
                    return global::ABI.Microsoft.Windows.AppNotifications.Builder.AppNotificationBuilder.FromAbi(__retval);
                }
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__imageUri);
                global::ABI.Microsoft.Windows.AppNotifications.Builder.AppNotificationBuilder.DisposeAbi(__retval);
            }
        }

        internal static unsafe global::Microsoft.Windows.AppNotifications.Builder.AppNotificationBuilder SetHeroImage(IObjectReference _obj, global::System.Uri imageUri)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __imageUri = default;
            IntPtr __retval = default;
            try
            {
                __imageUri = global::ABI.System.Uri.CreateMarshaler2(imageUri);
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, IntPtr*, int>**)ThisPtr)[20](ThisPtr, MarshalInspectable<object>.GetAbi(__imageUri), &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.Windows.AppNotifications.Builder.AppNotificationBuilder.FromAbi(__retval);
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__imageUri);
                global::ABI.Microsoft.Windows.AppNotifications.Builder.AppNotificationBuilder.DisposeAbi(__retval);
            }
        }

        internal static unsafe global::Microsoft.Windows.AppNotifications.Builder.AppNotificationBuilder SetHeroImage(IObjectReference _obj, global::System.Uri imageUri, string alternateText)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __imageUri = default;
            IntPtr __retval = default;
            try
            {
                __imageUri = global::ABI.System.Uri.CreateMarshaler2(imageUri);
                MarshalString.Pinnable __alternateText = new(alternateText);
                fixed(void* ___alternateText = __alternateText)
                {
                    global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, IntPtr, IntPtr*, int>**)ThisPtr)[21](ThisPtr, MarshalInspectable<object>.GetAbi(__imageUri), MarshalString.GetAbi(ref __alternateText), &__retval));
                    global::System.GC.KeepAlive(_obj);
                    return global::ABI.Microsoft.Windows.AppNotifications.Builder.AppNotificationBuilder.FromAbi(__retval);
                }
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__imageUri);
                global::ABI.Microsoft.Windows.AppNotifications.Builder.AppNotificationBuilder.DisposeAbi(__retval);
            }
        }

        internal static unsafe global::Microsoft.Windows.AppNotifications.Builder.AppNotificationBuilder SetAudioUri(IObjectReference _obj, global::System.Uri audioUri)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __audioUri = default;
            IntPtr __retval = default;
            try
            {
                __audioUri = global::ABI.System.Uri.CreateMarshaler2(audioUri);
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, IntPtr*, int>**)ThisPtr)[22](ThisPtr, MarshalInspectable<object>.GetAbi(__audioUri), &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.Windows.AppNotifications.Builder.AppNotificationBuilder.FromAbi(__retval);
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__audioUri);
                global::ABI.Microsoft.Windows.AppNotifications.Builder.AppNotificationBuilder.DisposeAbi(__retval);
            }
        }

        internal static unsafe global::Microsoft.Windows.AppNotifications.Builder.AppNotificationBuilder SetAudioUri(IObjectReference _obj, global::System.Uri audioUri, global::Microsoft.Windows.AppNotifications.Builder.AppNotificationAudioLooping loop)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __audioUri = default;
            IntPtr __retval = default;
            try
            {
                __audioUri = global::ABI.System.Uri.CreateMarshaler2(audioUri);
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, global::Microsoft.Windows.AppNotifications.Builder.AppNotificationAudioLooping, IntPtr*, int>**)ThisPtr)[23](ThisPtr, MarshalInspectable<object>.GetAbi(__audioUri), loop, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.Windows.AppNotifications.Builder.AppNotificationBuilder.FromAbi(__retval);
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__audioUri);
                global::ABI.Microsoft.Windows.AppNotifications.Builder.AppNotificationBuilder.DisposeAbi(__retval);
            }
        }

        internal static unsafe global::Microsoft.Windows.AppNotifications.Builder.AppNotificationBuilder SetAudioEvent(IObjectReference _obj, global::Microsoft.Windows.AppNotifications.Builder.AppNotificationSoundEvent appNotificationSoundEvent)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::Microsoft.Windows.AppNotifications.Builder.AppNotificationSoundEvent, IntPtr*, int>**)ThisPtr)[24](ThisPtr, appNotificationSoundEvent, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.Windows.AppNotifications.Builder.AppNotificationBuilder.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.Windows.AppNotifications.Builder.AppNotificationBuilder.DisposeAbi(__retval);
            }
        }

        internal static unsafe global::Microsoft.Windows.AppNotifications.Builder.AppNotificationBuilder SetAudioEvent(IObjectReference _obj, global::Microsoft.Windows.AppNotifications.Builder.AppNotificationSoundEvent appNotificationSoundEvent, global::Microsoft.Windows.AppNotifications.Builder.AppNotificationAudioLooping loop)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::Microsoft.Windows.AppNotifications.Builder.AppNotificationSoundEvent, global::Microsoft.Windows.AppNotifications.Builder.AppNotificationAudioLooping, IntPtr*, int>**)ThisPtr)[25](ThisPtr, appNotificationSoundEvent, loop, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.Windows.AppNotifications.Builder.AppNotificationBuilder.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.Windows.AppNotifications.Builder.AppNotificationBuilder.DisposeAbi(__retval);
            }
        }

        internal static unsafe global::Microsoft.Windows.AppNotifications.Builder.AppNotificationBuilder MuteAudio(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[26](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.Windows.AppNotifications.Builder.AppNotificationBuilder.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.Windows.AppNotifications.Builder.AppNotificationBuilder.DisposeAbi(__retval);
            }
        }

        internal static unsafe global::Microsoft.Windows.AppNotifications.Builder.AppNotificationBuilder AddTextBox(IObjectReference _obj, string id)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                MarshalString.Pinnable __id = new(id);
                fixed(void* ___id = __id)
                {
                    global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, IntPtr*, int>**)ThisPtr)[27](ThisPtr, MarshalString.GetAbi(ref __id), &__retval));
                    global::System.GC.KeepAlive(_obj);
                    return global::ABI.Microsoft.Windows.AppNotifications.Builder.AppNotificationBuilder.FromAbi(__retval);
                }
            }
            finally
            {
                global::ABI.Microsoft.Windows.AppNotifications.Builder.AppNotificationBuilder.DisposeAbi(__retval);
            }
        }

        internal static unsafe global::Microsoft.Windows.AppNotifications.Builder.AppNotificationBuilder AddTextBox(IObjectReference _obj, string id, string placeHolderText, string title)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                MarshalString.Pinnable __id = new(id);
                MarshalString.Pinnable __placeHolderText = new(placeHolderText);
                MarshalString.Pinnable __title = new(title);
                fixed(void* ___id = __id, ___placeHolderText = __placeHolderText, ___title = __title)
                {
                    global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, IntPtr, IntPtr, IntPtr*, int>**)ThisPtr)[28](ThisPtr, MarshalString.GetAbi(ref __id), MarshalString.GetAbi(ref __placeHolderText), MarshalString.GetAbi(ref __title), &__retval));
                    global::System.GC.KeepAlive(_obj);
                    return global::ABI.Microsoft.Windows.AppNotifications.Builder.AppNotificationBuilder.FromAbi(__retval);
                }
            }
            finally
            {
                global::ABI.Microsoft.Windows.AppNotifications.Builder.AppNotificationBuilder.DisposeAbi(__retval);
            }
        }

        internal static unsafe global::Microsoft.Windows.AppNotifications.Builder.AppNotificationBuilder AddButton(IObjectReference _obj, global::Microsoft.Windows.AppNotifications.Builder.AppNotificationButton value)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __value = default;
            IntPtr __retval = default;
            try
            {
                __value = global::ABI.Microsoft.Windows.AppNotifications.Builder.AppNotificationButton.CreateMarshaler2(value);
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, IntPtr*, int>**)ThisPtr)[29](ThisPtr, MarshalInspectable<object>.GetAbi(__value), &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.Windows.AppNotifications.Builder.AppNotificationBuilder.FromAbi(__retval);
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__value);
                global::ABI.Microsoft.Windows.AppNotifications.Builder.AppNotificationBuilder.DisposeAbi(__retval);
            }
        }

        internal static unsafe global::Microsoft.Windows.AppNotifications.Builder.AppNotificationBuilder AddComboBox(IObjectReference _obj, global::Microsoft.Windows.AppNotifications.Builder.AppNotificationComboBox value)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __value = default;
            IntPtr __retval = default;
            try
            {
                __value = global::ABI.Microsoft.Windows.AppNotifications.Builder.AppNotificationComboBox.CreateMarshaler2(value);
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, IntPtr*, int>**)ThisPtr)[30](ThisPtr, MarshalInspectable<object>.GetAbi(__value), &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.Windows.AppNotifications.Builder.AppNotificationBuilder.FromAbi(__retval);
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__value);
                global::ABI.Microsoft.Windows.AppNotifications.Builder.AppNotificationBuilder.DisposeAbi(__retval);
            }
        }

        internal static unsafe global::Microsoft.Windows.AppNotifications.Builder.AppNotificationBuilder AddProgressBar(IObjectReference _obj, global::Microsoft.Windows.AppNotifications.Builder.AppNotificationProgressBar value)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __value = default;
            IntPtr __retval = default;
            try
            {
                __value = global::ABI.Microsoft.Windows.AppNotifications.Builder.AppNotificationProgressBar.CreateMarshaler2(value);
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, IntPtr*, int>**)ThisPtr)[31](ThisPtr, MarshalInspectable<object>.GetAbi(__value), &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.Windows.AppNotifications.Builder.AppNotificationBuilder.FromAbi(__retval);
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__value);
                global::ABI.Microsoft.Windows.AppNotifications.Builder.AppNotificationBuilder.DisposeAbi(__retval);
            }
        }

        internal static unsafe global::Microsoft.Windows.AppNotifications.AppNotification BuildNotification(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[32](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.Windows.AppNotifications.AppNotification.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.Windows.AppNotifications.AppNotification.DisposeAbi(__retval);
            }
        }

        internal static unsafe global::Microsoft.Windows.AppNotifications.Builder.AppNotificationBuilder SetTag(IObjectReference _obj, string value)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                MarshalString.Pinnable __value = new(value);
                fixed(void* ___value = __value)
                {
                    global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, IntPtr*, int>**)ThisPtr)[33](ThisPtr, MarshalString.GetAbi(ref __value), &__retval));
                    global::System.GC.KeepAlive(_obj);
                    return global::ABI.Microsoft.Windows.AppNotifications.Builder.AppNotificationBuilder.FromAbi(__retval);
                }
            }
            finally
            {
                global::ABI.Microsoft.Windows.AppNotifications.Builder.AppNotificationBuilder.DisposeAbi(__retval);
            }
        }

        internal static unsafe global::Microsoft.Windows.AppNotifications.Builder.AppNotificationBuilder SetGroup(IObjectReference _obj, string group)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                MarshalString.Pinnable __group = new(group);
                fixed(void* ___group = __group)
                {
                    global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, IntPtr*, int>**)ThisPtr)[34](ThisPtr, MarshalString.GetAbi(ref __group), &__retval));
                    global::System.GC.KeepAlive(_obj);
                    return global::ABI.Microsoft.Windows.AppNotifications.Builder.AppNotificationBuilder.FromAbi(__retval);
                }
            }
            finally
            {
                global::ABI.Microsoft.Windows.AppNotifications.Builder.AppNotificationBuilder.DisposeAbi(__retval);
            }
        }


        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0x1F, 0xD3, 0x1, 0xE8, 0x3, 0xCE, 0x5C, 0x50, 0xAD, 0xEC, 0x8A, 0x2, 0x72, 0x4E, 0xC9, 0xDE };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("E801D31F-CE03-505C-ADEC-8A02724EC9DE")]
    internal interface IAppNotificationBuilder : global::Microsoft.Windows.AppNotifications.Builder.IAppNotificationBuilder
    {
    }
    internal static class IAppNotificationBuilderStaticsMethods
    {


        internal static unsafe bool IsUrgentScenarioSupported(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            byte __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, byte*, int>**)ThisPtr)[6](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval != 0;
        }


        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0x2A, 0x2D, 0x4, 0xC7, 0x19, 0xD3, 0xE, 0x52, 0xA3, 0x14, 0x50, 0x8, 0x1C, 0x88, 0x88, 0xCC };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("C7042D2A-D319-520E-A314-50081C8888CC")]
    internal interface IAppNotificationBuilderStatics : global::Microsoft.Windows.AppNotifications.Builder.IAppNotificationBuilderStatics
    {
    }
    internal static class IAppNotificationButtonMethods
    {


        internal static unsafe global::Microsoft.Windows.AppNotifications.Builder.AppNotificationButton AddArgument(IObjectReference _obj, string key, string value)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                MarshalString.Pinnable __key = new(key);
                MarshalString.Pinnable __value = new(value);
                fixed(void* ___key = __key, ___value = __value)
                {
                    global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, IntPtr, IntPtr*, int>**)ThisPtr)[24](ThisPtr, MarshalString.GetAbi(ref __key), MarshalString.GetAbi(ref __value), &__retval));
                    global::System.GC.KeepAlive(_obj);
                    return global::ABI.Microsoft.Windows.AppNotifications.Builder.AppNotificationButton.FromAbi(__retval);
                }
            }
            finally
            {
                global::ABI.Microsoft.Windows.AppNotifications.Builder.AppNotificationButton.DisposeAbi(__retval);
            }
        }

        internal static unsafe global::Microsoft.Windows.AppNotifications.Builder.AppNotificationButton SetIcon(IObjectReference _obj, global::System.Uri value)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __value = default;
            IntPtr __retval = default;
            try
            {
                __value = global::ABI.System.Uri.CreateMarshaler2(value);
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, IntPtr*, int>**)ThisPtr)[25](ThisPtr, MarshalInspectable<object>.GetAbi(__value), &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.Windows.AppNotifications.Builder.AppNotificationButton.FromAbi(__retval);
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__value);
                global::ABI.Microsoft.Windows.AppNotifications.Builder.AppNotificationButton.DisposeAbi(__retval);
            }
        }

        internal static unsafe global::Microsoft.Windows.AppNotifications.Builder.AppNotificationButton SetToolTip(IObjectReference _obj, string value)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                MarshalString.Pinnable __value = new(value);
                fixed(void* ___value = __value)
                {
                    global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, IntPtr*, int>**)ThisPtr)[26](ThisPtr, MarshalString.GetAbi(ref __value), &__retval));
                    global::System.GC.KeepAlive(_obj);
                    return global::ABI.Microsoft.Windows.AppNotifications.Builder.AppNotificationButton.FromAbi(__retval);
                }
            }
            finally
            {
                global::ABI.Microsoft.Windows.AppNotifications.Builder.AppNotificationButton.DisposeAbi(__retval);
            }
        }

        internal static unsafe global::Microsoft.Windows.AppNotifications.Builder.AppNotificationButton SetContextMenuPlacement(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[27](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.Windows.AppNotifications.Builder.AppNotificationButton.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.Windows.AppNotifications.Builder.AppNotificationButton.DisposeAbi(__retval);
            }
        }

        internal static unsafe global::Microsoft.Windows.AppNotifications.Builder.AppNotificationButton SetButtonStyle(IObjectReference _obj, global::Microsoft.Windows.AppNotifications.Builder.AppNotificationButtonStyle value)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::Microsoft.Windows.AppNotifications.Builder.AppNotificationButtonStyle, IntPtr*, int>**)ThisPtr)[28](ThisPtr, value, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.Windows.AppNotifications.Builder.AppNotificationButton.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.Windows.AppNotifications.Builder.AppNotificationButton.DisposeAbi(__retval);
            }
        }

        internal static unsafe global::Microsoft.Windows.AppNotifications.Builder.AppNotificationButton SetInputId(IObjectReference _obj, string value)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                MarshalString.Pinnable __value = new(value);
                fixed(void* ___value = __value)
                {
                    global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, IntPtr*, int>**)ThisPtr)[29](ThisPtr, MarshalString.GetAbi(ref __value), &__retval));
                    global::System.GC.KeepAlive(_obj);
                    return global::ABI.Microsoft.Windows.AppNotifications.Builder.AppNotificationButton.FromAbi(__retval);
                }
            }
            finally
            {
                global::ABI.Microsoft.Windows.AppNotifications.Builder.AppNotificationButton.DisposeAbi(__retval);
            }
        }

        internal static unsafe global::Microsoft.Windows.AppNotifications.Builder.AppNotificationButton SetInvokeUri(IObjectReference _obj, global::System.Uri protocolUri)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __protocolUri = default;
            IntPtr __retval = default;
            try
            {
                __protocolUri = global::ABI.System.Uri.CreateMarshaler2(protocolUri);
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, IntPtr*, int>**)ThisPtr)[30](ThisPtr, MarshalInspectable<object>.GetAbi(__protocolUri), &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.Windows.AppNotifications.Builder.AppNotificationButton.FromAbi(__retval);
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__protocolUri);
                global::ABI.Microsoft.Windows.AppNotifications.Builder.AppNotificationButton.DisposeAbi(__retval);
            }
        }

        internal static unsafe global::Microsoft.Windows.AppNotifications.Builder.AppNotificationButton SetInvokeUri(IObjectReference _obj, global::System.Uri protocolUri, string targetAppId)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __protocolUri = default;
            IntPtr __retval = default;
            try
            {
                __protocolUri = global::ABI.System.Uri.CreateMarshaler2(protocolUri);
                MarshalString.Pinnable __targetAppId = new(targetAppId);
                fixed(void* ___targetAppId = __targetAppId)
                {
                    global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, IntPtr, IntPtr*, int>**)ThisPtr)[31](ThisPtr, MarshalInspectable<object>.GetAbi(__protocolUri), MarshalString.GetAbi(ref __targetAppId), &__retval));
                    global::System.GC.KeepAlive(_obj);
                    return global::ABI.Microsoft.Windows.AppNotifications.Builder.AppNotificationButton.FromAbi(__retval);
                }
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__protocolUri);
                global::ABI.Microsoft.Windows.AppNotifications.Builder.AppNotificationButton.DisposeAbi(__retval);
            }
        }
        internal static unsafe global::System.Collections.Generic.IDictionary<string, string> get_Arguments(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[8](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                _ = global::WinRT.GenericTypeInstantiations.Windows_Foundation_Collections_IMap_2_String__String.EnsureInitialized();
                return MarshalInterface<global::System.Collections.Generic.IDictionary<string, string>>.FromAbi(__retval);
            }
            finally
            {
                MarshalInterface<global::System.Collections.Generic.IDictionary<string, string>>.DisposeAbi(__retval);
            }
        }
        internal static unsafe void set_Arguments(IObjectReference _obj, global::System.Collections.Generic.IDictionary<string, string> value)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __value = default;
            try
            {
                __value = MarshalInterface<global::System.Collections.Generic.IDictionary<string, string>>.CreateMarshaler2(value, global::ABI.System.Collections.Generic.IDictionaryMethods<string, string>.IID);
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, int>**)ThisPtr)[9](ThisPtr, MarshalInspectable<object>.GetAbi(__value)));
                global::System.GC.KeepAlive(_obj);
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__value);
            }
        }

        internal static unsafe global::Microsoft.Windows.AppNotifications.Builder.AppNotificationButtonStyle get_ButtonStyle(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::Microsoft.Windows.AppNotifications.Builder.AppNotificationButtonStyle __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::Microsoft.Windows.AppNotifications.Builder.AppNotificationButtonStyle*, int>**)ThisPtr)[16](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }
        internal static unsafe void set_ButtonStyle(IObjectReference _obj, global::Microsoft.Windows.AppNotifications.Builder.AppNotificationButtonStyle value)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::Microsoft.Windows.AppNotifications.Builder.AppNotificationButtonStyle, int>**)ThisPtr)[17](ThisPtr, value));
            global::System.GC.KeepAlive(_obj);
        }

        internal static unsafe string get_Content(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[6](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return MarshalString.FromAbi(__retval);
            }
            finally
            {
                MarshalString.DisposeAbi(__retval);
            }
        }
        internal static unsafe void set_Content(IObjectReference _obj, string value)
        {
            var ThisPtr = _obj.ThisPtr;

            MarshalString.Pinnable __value = new(value);
            fixed(void* ___value = __value)
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, int>**)ThisPtr)[7](ThisPtr, MarshalString.GetAbi(ref __value)));
                global::System.GC.KeepAlive(_obj);
            }
        }

        internal static unsafe bool get_ContextMenuPlacement(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            byte __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, byte*, int>**)ThisPtr)[14](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval != 0;
        }
        internal static unsafe void set_ContextMenuPlacement(IObjectReference _obj, bool value)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, byte, int>**)ThisPtr)[15](ThisPtr, (byte)(value ? 1 : 0)));
            global::System.GC.KeepAlive(_obj);
        }

        internal static unsafe global::System.Uri get_Icon(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[10](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.System.Uri.FromAbi(__retval);
            }
            finally
            {
                global::ABI.System.Uri.DisposeAbi(__retval);
            }
        }
        internal static unsafe void set_Icon(IObjectReference _obj, global::System.Uri value)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __value = default;
            try
            {
                __value = global::ABI.System.Uri.CreateMarshaler2(value);
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, int>**)ThisPtr)[11](ThisPtr, MarshalInspectable<object>.GetAbi(__value)));
                global::System.GC.KeepAlive(_obj);
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__value);
            }
        }

        internal static unsafe string get_InputId(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[18](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return MarshalString.FromAbi(__retval);
            }
            finally
            {
                MarshalString.DisposeAbi(__retval);
            }
        }
        internal static unsafe void set_InputId(IObjectReference _obj, string value)
        {
            var ThisPtr = _obj.ThisPtr;

            MarshalString.Pinnable __value = new(value);
            fixed(void* ___value = __value)
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, int>**)ThisPtr)[19](ThisPtr, MarshalString.GetAbi(ref __value)));
                global::System.GC.KeepAlive(_obj);
            }
        }

        internal static unsafe global::System.Uri get_InvokeUri(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[20](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.System.Uri.FromAbi(__retval);
            }
            finally
            {
                global::ABI.System.Uri.DisposeAbi(__retval);
            }
        }
        internal static unsafe void set_InvokeUri(IObjectReference _obj, global::System.Uri value)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __value = default;
            try
            {
                __value = global::ABI.System.Uri.CreateMarshaler2(value);
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, int>**)ThisPtr)[21](ThisPtr, MarshalInspectable<object>.GetAbi(__value)));
                global::System.GC.KeepAlive(_obj);
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__value);
            }
        }

        internal static unsafe string get_TargetAppId(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[22](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return MarshalString.FromAbi(__retval);
            }
            finally
            {
                MarshalString.DisposeAbi(__retval);
            }
        }
        internal static unsafe void set_TargetAppId(IObjectReference _obj, string value)
        {
            var ThisPtr = _obj.ThisPtr;

            MarshalString.Pinnable __value = new(value);
            fixed(void* ___value = __value)
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, int>**)ThisPtr)[23](ThisPtr, MarshalString.GetAbi(ref __value)));
                global::System.GC.KeepAlive(_obj);
            }
        }

        internal static unsafe string get_ToolTip(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[12](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return MarshalString.FromAbi(__retval);
            }
            finally
            {
                MarshalString.DisposeAbi(__retval);
            }
        }
        internal static unsafe void set_ToolTip(IObjectReference _obj, string value)
        {
            var ThisPtr = _obj.ThisPtr;

            MarshalString.Pinnable __value = new(value);
            fixed(void* ___value = __value)
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, int>**)ThisPtr)[13](ThisPtr, MarshalString.GetAbi(ref __value)));
                global::System.GC.KeepAlive(_obj);
            }
        }



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0x31, 0x30, 0xC0, 0xA7, 0x34, 0x56, 0x98, 0x50, 0xAE, 0xC9, 0x47, 0xEC, 0xB6, 0xC, 0x34, 0x99 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("A7C03031-5634-5098-AEC9-47ECB60C3499")]
    internal interface IAppNotificationButton : global::Microsoft.Windows.AppNotifications.Builder.IAppNotificationButton
    {
    }
    internal static class IAppNotificationButtonFactoryMethods
    {


        internal static unsafe global::Microsoft.Windows.AppNotifications.Builder.AppNotificationButton CreateInstance(IObjectReference _obj, string content)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                MarshalString.Pinnable __content = new(content);
                fixed(void* ___content = __content)
                {
                    global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, IntPtr*, int>**)ThisPtr)[6](ThisPtr, MarshalString.GetAbi(ref __content), &__retval));
                    global::System.GC.KeepAlive(_obj);
                    return global::ABI.Microsoft.Windows.AppNotifications.Builder.AppNotificationButton.FromAbi(__retval);
                }
            }
            finally
            {
                global::ABI.Microsoft.Windows.AppNotifications.Builder.AppNotificationButton.DisposeAbi(__retval);
            }
        }


        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0x86, 0x92, 0x10, 0x4F, 0x6D, 0xA, 0x5E, 0x5A, 0x9E, 0x8F, 0x9F, 0xE3, 0x16, 0x69, 0xFB, 0xB8 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("4F109286-0A6D-5A5E-9E8F-9FE31669FBB8")]
    internal interface IAppNotificationButtonFactory : global::Microsoft.Windows.AppNotifications.Builder.IAppNotificationButtonFactory
    {
    }
    internal static class IAppNotificationButtonStaticsMethods
    {


        internal static unsafe bool IsToolTipSupported(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            byte __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, byte*, int>**)ThisPtr)[6](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval != 0;
        }

        internal static unsafe bool IsButtonStyleSupported(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            byte __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, byte*, int>**)ThisPtr)[7](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval != 0;
        }


        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0x18, 0x7C, 0xAD, 0xFE, 0x44, 0x41, 0xA4, 0x59, 0x96, 0x11, 0x86, 0xB7, 0xE8, 0x19, 0x18, 0x53 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("FEAD7C18-4144-59A4-9611-86B7E8191853")]
    internal interface IAppNotificationButtonStatics : global::Microsoft.Windows.AppNotifications.Builder.IAppNotificationButtonStatics
    {
    }
    internal static class IAppNotificationComboBoxMethods
    {


        internal static unsafe global::Microsoft.Windows.AppNotifications.Builder.AppNotificationComboBox AddItem(IObjectReference _obj, string id, string content)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                MarshalString.Pinnable __id = new(id);
                MarshalString.Pinnable __content = new(content);
                fixed(void* ___id = __id, ___content = __content)
                {
                    global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, IntPtr, IntPtr*, int>**)ThisPtr)[12](ThisPtr, MarshalString.GetAbi(ref __id), MarshalString.GetAbi(ref __content), &__retval));
                    global::System.GC.KeepAlive(_obj);
                    return global::ABI.Microsoft.Windows.AppNotifications.Builder.AppNotificationComboBox.FromAbi(__retval);
                }
            }
            finally
            {
                global::ABI.Microsoft.Windows.AppNotifications.Builder.AppNotificationComboBox.DisposeAbi(__retval);
            }
        }

        internal static unsafe global::Microsoft.Windows.AppNotifications.Builder.AppNotificationComboBox SetTitle(IObjectReference _obj, string value)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                MarshalString.Pinnable __value = new(value);
                fixed(void* ___value = __value)
                {
                    global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, IntPtr*, int>**)ThisPtr)[13](ThisPtr, MarshalString.GetAbi(ref __value), &__retval));
                    global::System.GC.KeepAlive(_obj);
                    return global::ABI.Microsoft.Windows.AppNotifications.Builder.AppNotificationComboBox.FromAbi(__retval);
                }
            }
            finally
            {
                global::ABI.Microsoft.Windows.AppNotifications.Builder.AppNotificationComboBox.DisposeAbi(__retval);
            }
        }

        internal static unsafe global::Microsoft.Windows.AppNotifications.Builder.AppNotificationComboBox SetSelectedItem(IObjectReference _obj, string id)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                MarshalString.Pinnable __id = new(id);
                fixed(void* ___id = __id)
                {
                    global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, IntPtr*, int>**)ThisPtr)[14](ThisPtr, MarshalString.GetAbi(ref __id), &__retval));
                    global::System.GC.KeepAlive(_obj);
                    return global::ABI.Microsoft.Windows.AppNotifications.Builder.AppNotificationComboBox.FromAbi(__retval);
                }
            }
            finally
            {
                global::ABI.Microsoft.Windows.AppNotifications.Builder.AppNotificationComboBox.DisposeAbi(__retval);
            }
        }
        internal static unsafe global::System.Collections.Generic.IDictionary<string, string> get_Items(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[6](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                _ = global::WinRT.GenericTypeInstantiations.Windows_Foundation_Collections_IMap_2_String__String.EnsureInitialized();
                return MarshalInterface<global::System.Collections.Generic.IDictionary<string, string>>.FromAbi(__retval);
            }
            finally
            {
                MarshalInterface<global::System.Collections.Generic.IDictionary<string, string>>.DisposeAbi(__retval);
            }
        }
        internal static unsafe void set_Items(IObjectReference _obj, global::System.Collections.Generic.IDictionary<string, string> value)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __value = default;
            try
            {
                __value = MarshalInterface<global::System.Collections.Generic.IDictionary<string, string>>.CreateMarshaler2(value, global::ABI.System.Collections.Generic.IDictionaryMethods<string, string>.IID);
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, int>**)ThisPtr)[7](ThisPtr, MarshalInspectable<object>.GetAbi(__value)));
                global::System.GC.KeepAlive(_obj);
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__value);
            }
        }

        internal static unsafe string get_SelectedItem(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[10](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return MarshalString.FromAbi(__retval);
            }
            finally
            {
                MarshalString.DisposeAbi(__retval);
            }
        }
        internal static unsafe void set_SelectedItem(IObjectReference _obj, string value)
        {
            var ThisPtr = _obj.ThisPtr;

            MarshalString.Pinnable __value = new(value);
            fixed(void* ___value = __value)
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, int>**)ThisPtr)[11](ThisPtr, MarshalString.GetAbi(ref __value)));
                global::System.GC.KeepAlive(_obj);
            }
        }

        internal static unsafe string get_Title(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[8](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return MarshalString.FromAbi(__retval);
            }
            finally
            {
                MarshalString.DisposeAbi(__retval);
            }
        }
        internal static unsafe void set_Title(IObjectReference _obj, string value)
        {
            var ThisPtr = _obj.ThisPtr;

            MarshalString.Pinnable __value = new(value);
            fixed(void* ___value = __value)
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, int>**)ThisPtr)[9](ThisPtr, MarshalString.GetAbi(ref __value)));
                global::System.GC.KeepAlive(_obj);
            }
        }



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0xE2, 0xC9, 0x47, 0x45, 0x15, 0x48, 0x8C, 0x53, 0xBE, 0x26, 0x4, 0xC, 0xE1, 0x7F, 0x8B, 0x62 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("4547C9E2-4815-538C-BE26-040CE17F8B62")]
    internal interface IAppNotificationComboBox : global::Microsoft.Windows.AppNotifications.Builder.IAppNotificationComboBox
    {
    }
    internal static class IAppNotificationComboBoxFactoryMethods
    {


        internal static unsafe global::Microsoft.Windows.AppNotifications.Builder.AppNotificationComboBox CreateInstance(IObjectReference _obj, string id)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                MarshalString.Pinnable __id = new(id);
                fixed(void* ___id = __id)
                {
                    global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, IntPtr*, int>**)ThisPtr)[6](ThisPtr, MarshalString.GetAbi(ref __id), &__retval));
                    global::System.GC.KeepAlive(_obj);
                    return global::ABI.Microsoft.Windows.AppNotifications.Builder.AppNotificationComboBox.FromAbi(__retval);
                }
            }
            finally
            {
                global::ABI.Microsoft.Windows.AppNotifications.Builder.AppNotificationComboBox.DisposeAbi(__retval);
            }
        }


        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0xB0, 0xB5, 0x31, 0x1B, 0x86, 0x9D, 0xED, 0x59, 0x86, 0x29, 0xA7, 0x94, 0x98, 0xAB, 0x5D, 0x4B };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("1B31B5B0-9D86-59ED-8629-A79498AB5D4B")]
    internal interface IAppNotificationComboBoxFactory : global::Microsoft.Windows.AppNotifications.Builder.IAppNotificationComboBoxFactory
    {
    }
    internal static class IAppNotificationProgressBarMethods
    {


        internal static unsafe global::Microsoft.Windows.AppNotifications.Builder.AppNotificationProgressBar SetTitle(IObjectReference _obj, string value)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                MarshalString.Pinnable __value = new(value);
                fixed(void* ___value = __value)
                {
                    global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, IntPtr*, int>**)ThisPtr)[14](ThisPtr, MarshalString.GetAbi(ref __value), &__retval));
                    global::System.GC.KeepAlive(_obj);
                    return global::ABI.Microsoft.Windows.AppNotifications.Builder.AppNotificationProgressBar.FromAbi(__retval);
                }
            }
            finally
            {
                global::ABI.Microsoft.Windows.AppNotifications.Builder.AppNotificationProgressBar.DisposeAbi(__retval);
            }
        }

        internal static unsafe global::Microsoft.Windows.AppNotifications.Builder.AppNotificationProgressBar BindTitle(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[15](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.Windows.AppNotifications.Builder.AppNotificationProgressBar.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.Windows.AppNotifications.Builder.AppNotificationProgressBar.DisposeAbi(__retval);
            }
        }

        internal static unsafe global::Microsoft.Windows.AppNotifications.Builder.AppNotificationProgressBar SetStatus(IObjectReference _obj, string value)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                MarshalString.Pinnable __value = new(value);
                fixed(void* ___value = __value)
                {
                    global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, IntPtr*, int>**)ThisPtr)[16](ThisPtr, MarshalString.GetAbi(ref __value), &__retval));
                    global::System.GC.KeepAlive(_obj);
                    return global::ABI.Microsoft.Windows.AppNotifications.Builder.AppNotificationProgressBar.FromAbi(__retval);
                }
            }
            finally
            {
                global::ABI.Microsoft.Windows.AppNotifications.Builder.AppNotificationProgressBar.DisposeAbi(__retval);
            }
        }

        internal static unsafe global::Microsoft.Windows.AppNotifications.Builder.AppNotificationProgressBar BindStatus(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[17](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.Windows.AppNotifications.Builder.AppNotificationProgressBar.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.Windows.AppNotifications.Builder.AppNotificationProgressBar.DisposeAbi(__retval);
            }
        }

        internal static unsafe global::Microsoft.Windows.AppNotifications.Builder.AppNotificationProgressBar SetValue(IObjectReference _obj, double value)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, double, IntPtr*, int>**)ThisPtr)[18](ThisPtr, value, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.Windows.AppNotifications.Builder.AppNotificationProgressBar.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.Windows.AppNotifications.Builder.AppNotificationProgressBar.DisposeAbi(__retval);
            }
        }

        internal static unsafe global::Microsoft.Windows.AppNotifications.Builder.AppNotificationProgressBar BindValue(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[19](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.Windows.AppNotifications.Builder.AppNotificationProgressBar.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.Windows.AppNotifications.Builder.AppNotificationProgressBar.DisposeAbi(__retval);
            }
        }

        internal static unsafe global::Microsoft.Windows.AppNotifications.Builder.AppNotificationProgressBar SetValueStringOverride(IObjectReference _obj, string value)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                MarshalString.Pinnable __value = new(value);
                fixed(void* ___value = __value)
                {
                    global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, IntPtr*, int>**)ThisPtr)[20](ThisPtr, MarshalString.GetAbi(ref __value), &__retval));
                    global::System.GC.KeepAlive(_obj);
                    return global::ABI.Microsoft.Windows.AppNotifications.Builder.AppNotificationProgressBar.FromAbi(__retval);
                }
            }
            finally
            {
                global::ABI.Microsoft.Windows.AppNotifications.Builder.AppNotificationProgressBar.DisposeAbi(__retval);
            }
        }

        internal static unsafe global::Microsoft.Windows.AppNotifications.Builder.AppNotificationProgressBar BindValueStringOverride(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[21](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.Windows.AppNotifications.Builder.AppNotificationProgressBar.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.Windows.AppNotifications.Builder.AppNotificationProgressBar.DisposeAbi(__retval);
            }
        }
        internal static unsafe string get_Status(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[8](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return MarshalString.FromAbi(__retval);
            }
            finally
            {
                MarshalString.DisposeAbi(__retval);
            }
        }
        internal static unsafe void set_Status(IObjectReference _obj, string value)
        {
            var ThisPtr = _obj.ThisPtr;

            MarshalString.Pinnable __value = new(value);
            fixed(void* ___value = __value)
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, int>**)ThisPtr)[9](ThisPtr, MarshalString.GetAbi(ref __value)));
                global::System.GC.KeepAlive(_obj);
            }
        }

        internal static unsafe string get_Title(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[6](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return MarshalString.FromAbi(__retval);
            }
            finally
            {
                MarshalString.DisposeAbi(__retval);
            }
        }
        internal static unsafe void set_Title(IObjectReference _obj, string value)
        {
            var ThisPtr = _obj.ThisPtr;

            MarshalString.Pinnable __value = new(value);
            fixed(void* ___value = __value)
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, int>**)ThisPtr)[7](ThisPtr, MarshalString.GetAbi(ref __value)));
                global::System.GC.KeepAlive(_obj);
            }
        }

        internal static unsafe double get_Value(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            double __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, double*, int>**)ThisPtr)[10](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }
        internal static unsafe void set_Value(IObjectReference _obj, double value)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, double, int>**)ThisPtr)[11](ThisPtr, value));
            global::System.GC.KeepAlive(_obj);
        }

        internal static unsafe string get_ValueStringOverride(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[12](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return MarshalString.FromAbi(__retval);
            }
            finally
            {
                MarshalString.DisposeAbi(__retval);
            }
        }
        internal static unsafe void set_ValueStringOverride(IObjectReference _obj, string value)
        {
            var ThisPtr = _obj.ThisPtr;

            MarshalString.Pinnable __value = new(value);
            fixed(void* ___value = __value)
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, int>**)ThisPtr)[13](ThisPtr, MarshalString.GetAbi(ref __value)));
                global::System.GC.KeepAlive(_obj);
            }
        }



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0xF2, 0x62, 0xED, 0xFC, 0x74, 0x20, 0x41, 0x56, 0x86, 0x30, 0x87, 0xA1, 0x43, 0x15, 0xAC, 0x86 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("FCED62F2-2074-5641-8630-87A14315AC86")]
    internal interface IAppNotificationProgressBar : global::Microsoft.Windows.AppNotifications.Builder.IAppNotificationProgressBar
    {
    }
    internal static class IAppNotificationTextPropertiesMethods
    {


        internal static unsafe global::Microsoft.Windows.AppNotifications.Builder.AppNotificationTextProperties SetLanguage(IObjectReference _obj, string value)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                MarshalString.Pinnable __value = new(value);
                fixed(void* ___value = __value)
                {
                    global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, IntPtr*, int>**)ThisPtr)[12](ThisPtr, MarshalString.GetAbi(ref __value), &__retval));
                    global::System.GC.KeepAlive(_obj);
                    return global::ABI.Microsoft.Windows.AppNotifications.Builder.AppNotificationTextProperties.FromAbi(__retval);
                }
            }
            finally
            {
                global::ABI.Microsoft.Windows.AppNotifications.Builder.AppNotificationTextProperties.DisposeAbi(__retval);
            }
        }

        internal static unsafe global::Microsoft.Windows.AppNotifications.Builder.AppNotificationTextProperties SetIncomingCallAlignment(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[13](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.Windows.AppNotifications.Builder.AppNotificationTextProperties.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.Windows.AppNotifications.Builder.AppNotificationTextProperties.DisposeAbi(__retval);
            }
        }

        internal static unsafe global::Microsoft.Windows.AppNotifications.Builder.AppNotificationTextProperties SetMaxLines(IObjectReference _obj, int value)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, int, IntPtr*, int>**)ThisPtr)[14](ThisPtr, value, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.Windows.AppNotifications.Builder.AppNotificationTextProperties.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.Windows.AppNotifications.Builder.AppNotificationTextProperties.DisposeAbi(__retval);
            }
        }
        internal static unsafe bool get_IncomingCallAlignment(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            byte __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, byte*, int>**)ThisPtr)[8](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval != 0;
        }
        internal static unsafe void set_IncomingCallAlignment(IObjectReference _obj, bool value)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, byte, int>**)ThisPtr)[9](ThisPtr, (byte)(value ? 1 : 0)));
            global::System.GC.KeepAlive(_obj);
        }

        internal static unsafe string get_Language(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[6](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return MarshalString.FromAbi(__retval);
            }
            finally
            {
                MarshalString.DisposeAbi(__retval);
            }
        }
        internal static unsafe void set_Language(IObjectReference _obj, string value)
        {
            var ThisPtr = _obj.ThisPtr;

            MarshalString.Pinnable __value = new(value);
            fixed(void* ___value = __value)
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, int>**)ThisPtr)[7](ThisPtr, MarshalString.GetAbi(ref __value)));
                global::System.GC.KeepAlive(_obj);
            }
        }

        internal static unsafe int get_MaxLines(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            int __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, int*, int>**)ThisPtr)[10](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }
        internal static unsafe void set_MaxLines(IObjectReference _obj, int value)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, int, int>**)ThisPtr)[11](ThisPtr, value));
            global::System.GC.KeepAlive(_obj);
        }



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0xB, 0xD, 0xA3, 0x23, 0x58, 0x52, 0x53, 0x58, 0x93, 0x2E, 0x95, 0x21, 0xA3, 0x64, 0x2A, 0xFB };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("23A30D0B-5258-5853-932E-9521A3642AFB")]
    internal interface IAppNotificationTextProperties : global::Microsoft.Windows.AppNotifications.Builder.IAppNotificationTextProperties
    {
    }
}
#pragma warning restore CA1416
