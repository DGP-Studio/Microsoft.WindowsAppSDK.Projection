//------------------------------------------------------------------------------
// <auto-generated>
//     This file was generated by cswinrt.exe version 2.2.0.241111.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Diagnostics;
using System.Diagnostics.CodeAnalysis;
using System.Linq.Expressions;
using System.Reflection;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;
using WinRT;
using WinRT.Interop;


#pragma warning disable 0169 // warning CS0169: The field '...' is never used
#pragma warning disable 0649 // warning CS0169: Field '...' is never assigned to
#pragma warning disable CA2207, CA1063, CA1033, CA1001, CA2213

namespace Microsoft.Windows.Widgets.Feeds.Providers
{
    [global::WinRT.WindowsRuntimeType("Microsoft.Windows.Widgets")]
    [global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.Windows.Widgets.Feeds.Providers.CustomQueryParametersRequestedArgs))]
    [global::ABI.Microsoft.Windows.Widgets.Feeds.Providers.CustomQueryParametersRequestedArgsRcwFactory]
    [global::WinRT.ProjectedRuntimeClass(typeof(ICustomQueryParametersRequestedArgs))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.Windows.Widgets.WidgetContract), 262144u)]
    public sealed class CustomQueryParametersRequestedArgs : global::System.Runtime.InteropServices.ICustomQueryInterface, IWinRTObject, IEquatable<CustomQueryParametersRequestedArgs>
    {
        private IntPtr ThisPtr => _inner == null ? (((IWinRTObject)this).NativeObject).ThisPtr : _inner.ThisPtr;

        private readonly IObjectReference _inner = null;



        private IObjectReference _objRef_global__Microsoft_Windows_Widgets_Feeds_Providers_ICustomQueryParametersRequestedArgs => _inner;


        public static CustomQueryParametersRequestedArgs FromAbi(IntPtr thisPtr)
        {
            if (thisPtr == IntPtr.Zero) return null;
            return MarshalInspectable<CustomQueryParametersRequestedArgs>.FromAbi(thisPtr);
        }

        internal CustomQueryParametersRequestedArgs(IObjectReference objRef)
        {
            _inner = objRef.As(global::ABI.Microsoft.Windows.Widgets.Feeds.Providers.ICustomQueryParametersRequestedArgsMethods.IID);

        }


        public static bool operator ==(CustomQueryParametersRequestedArgs x, CustomQueryParametersRequestedArgs y) => (x?.ThisPtr ?? IntPtr.Zero) == (y?.ThisPtr ?? IntPtr.Zero);
        public static bool operator !=(CustomQueryParametersRequestedArgs x, CustomQueryParametersRequestedArgs y) => !(x == y);
        public bool Equals(CustomQueryParametersRequestedArgs other) => this == other;
        public override bool Equals(object obj) => obj is CustomQueryParametersRequestedArgs that && this == that;
        public override int GetHashCode() => ThisPtr.GetHashCode();


        bool IWinRTObject.HasUnwrappableNativeObject => true;
        IObjectReference IWinRTObject.NativeObject => _inner;
        private volatile global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> _queryInterfaceCache;
        private global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> MakeQueryInterfaceCache()
        {
            global::System.Threading.Interlocked.CompareExchange(ref _queryInterfaceCache, new global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference>(), null); 
            return _queryInterfaceCache;
        }
        global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> IWinRTObject.QueryInterfaceCache => _queryInterfaceCache ?? MakeQueryInterfaceCache();
        private volatile global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> _additionalTypeData;
        private global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> MakeAdditionalTypeData()
        {
            global::System.Threading.Interlocked.CompareExchange(ref _additionalTypeData, new global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object>(), null); 
            return _additionalTypeData;
        }
        global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> IWinRTObject.AdditionalTypeData => _additionalTypeData ?? MakeAdditionalTypeData();

        private struct InterfaceTag<I>{};


        public string FeedProviderDefinitionId => global::ABI.Microsoft.Windows.Widgets.Feeds.Providers.ICustomQueryParametersRequestedArgsMethods.get_FeedProviderDefinitionId(_objRef_global__Microsoft_Windows_Widgets_Feeds_Providers_ICustomQueryParametersRequestedArgs);

        private bool IsOverridableInterface(Guid iid) => false;

        global::System.Runtime.InteropServices.CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(ref Guid iid, out IntPtr ppv)
        {
            ppv = IntPtr.Zero;
            if (IsOverridableInterface(iid) || global::WinRT.Interop.IID.IID_IInspectable == iid)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
            }

            if (((IWinRTObject)this).NativeObject.TryAs(iid, out ppv) >= 0)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.Handled;
            }

            return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
        }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.Windows.Widgets")]
    [global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.Windows.Widgets.Feeds.Providers.CustomQueryParametersUpdateOptions))]
    [global::ABI.Microsoft.Windows.Widgets.Feeds.Providers.CustomQueryParametersUpdateOptionsRcwFactory]
    [global::WinRT.ProjectedRuntimeClass(typeof(ICustomQueryParametersUpdateOptions))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.Windows.Widgets.WidgetContract), 262144u)]
    public sealed class CustomQueryParametersUpdateOptions : global::System.Runtime.InteropServices.ICustomQueryInterface, IWinRTObject, IEquatable<CustomQueryParametersUpdateOptions>
    {
        private IntPtr ThisPtr => _inner == null ? (((IWinRTObject)this).NativeObject).ThisPtr : _inner.ThisPtr;

        private readonly IObjectReference _inner = null;



        private IObjectReference _objRef_global__Microsoft_Windows_Widgets_Feeds_Providers_ICustomQueryParametersUpdateOptions => _inner;


        private static class _ICustomQueryParametersUpdateOptionsFactoryMethods
        {
            public static unsafe IntPtr CreateInstance(IObjectReference _obj, string feedProviderDefinitionId, string customQueryParameters)
            {
                var ThisPtr = _obj.ThisPtr;

                IntPtr __retval = default;
                MarshalString.Pinnable __feedProviderDefinitionId = new(feedProviderDefinitionId);
                MarshalString.Pinnable __customQueryParameters = new(customQueryParameters);
                fixed(void* ___feedProviderDefinitionId = __feedProviderDefinitionId, ___customQueryParameters = __customQueryParameters)
                {
                    global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, IntPtr, IntPtr*, int>**)ThisPtr)[6](ThisPtr, MarshalString.GetAbi(ref __feedProviderDefinitionId), MarshalString.GetAbi(ref __customQueryParameters), &__retval));
                    global::System.GC.KeepAlive(_obj);
                    return __retval;
                }
            }
        }

        private static volatile IObjectReference ___objRef_global__Microsoft_Windows_Widgets_Feeds_Providers_ICustomQueryParametersUpdateOptionsFactory;
        private static IObjectReference _objRef_global__Microsoft_Windows_Widgets_Feeds_Providers_ICustomQueryParametersUpdateOptionsFactory
        {
            get
            { 
                var factory = ___objRef_global__Microsoft_Windows_Widgets_Feeds_Providers_ICustomQueryParametersUpdateOptionsFactory;
                if (factory != null && factory.IsInCurrentContext)
                {
                    return factory;
                }
                else
                {
                    return ___objRef_global__Microsoft_Windows_Widgets_Feeds_Providers_ICustomQueryParametersUpdateOptionsFactory = ActivationFactory.Get("Microsoft.Windows.Widgets.Feeds.Providers.CustomQueryParametersUpdateOptions", global::ABI.Microsoft.Windows.Widgets.Feeds.Providers.ICustomQueryParametersUpdateOptionsFactoryMethods.IID);
                }
            }
        }

        public CustomQueryParametersUpdateOptions(string feedProviderDefinitionId, string customQueryParameters) 
        { 
        IntPtr ptr = (_ICustomQueryParametersUpdateOptionsFactoryMethods.CreateInstance(_objRef_global__Microsoft_Windows_Widgets_Feeds_Providers_ICustomQueryParametersUpdateOptionsFactory, feedProviderDefinitionId, customQueryParameters)); 
        try 
        { 
        _inner = ComWrappersSupport.GetObjectReferenceForInterface(ptr, global::ABI.Microsoft.Windows.Widgets.Feeds.Providers.ICustomQueryParametersUpdateOptionsMethods.IID, false); 

        } 
        finally 
        { 
        MarshalInspectable<object>.DisposeAbi(ptr); 
        }

        ComWrappersSupport.RegisterObjectForInterface(this, ThisPtr);
        ComWrappersHelper.Init(_inner, false);
        }

        public static CustomQueryParametersUpdateOptions FromAbi(IntPtr thisPtr)
        {
            if (thisPtr == IntPtr.Zero) return null;
            return MarshalInspectable<CustomQueryParametersUpdateOptions>.FromAbi(thisPtr);
        }

        internal CustomQueryParametersUpdateOptions(IObjectReference objRef)
        {
            _inner = objRef.As(global::ABI.Microsoft.Windows.Widgets.Feeds.Providers.ICustomQueryParametersUpdateOptionsMethods.IID);

        }


        public static bool operator ==(CustomQueryParametersUpdateOptions x, CustomQueryParametersUpdateOptions y) => (x?.ThisPtr ?? IntPtr.Zero) == (y?.ThisPtr ?? IntPtr.Zero);
        public static bool operator !=(CustomQueryParametersUpdateOptions x, CustomQueryParametersUpdateOptions y) => !(x == y);
        public bool Equals(CustomQueryParametersUpdateOptions other) => this == other;
        public override bool Equals(object obj) => obj is CustomQueryParametersUpdateOptions that && this == that;
        public override int GetHashCode() => ThisPtr.GetHashCode();


        bool IWinRTObject.HasUnwrappableNativeObject => true;
        IObjectReference IWinRTObject.NativeObject => _inner;
        private volatile global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> _queryInterfaceCache;
        private global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> MakeQueryInterfaceCache()
        {
            global::System.Threading.Interlocked.CompareExchange(ref _queryInterfaceCache, new global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference>(), null); 
            return _queryInterfaceCache;
        }
        global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> IWinRTObject.QueryInterfaceCache => _queryInterfaceCache ?? MakeQueryInterfaceCache();
        private volatile global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> _additionalTypeData;
        private global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> MakeAdditionalTypeData()
        {
            global::System.Threading.Interlocked.CompareExchange(ref _additionalTypeData, new global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object>(), null); 
            return _additionalTypeData;
        }
        global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> IWinRTObject.AdditionalTypeData => _additionalTypeData ?? MakeAdditionalTypeData();

        private struct InterfaceTag<I>{};


        public string CustomQueryParameters => global::ABI.Microsoft.Windows.Widgets.Feeds.Providers.ICustomQueryParametersUpdateOptionsMethods.get_CustomQueryParameters(_objRef_global__Microsoft_Windows_Widgets_Feeds_Providers_ICustomQueryParametersUpdateOptions);

        public string FeedProviderDefinitionId => global::ABI.Microsoft.Windows.Widgets.Feeds.Providers.ICustomQueryParametersUpdateOptionsMethods.get_FeedProviderDefinitionId(_objRef_global__Microsoft_Windows_Widgets_Feeds_Providers_ICustomQueryParametersUpdateOptions);

        private bool IsOverridableInterface(Guid iid) => false;

        global::System.Runtime.InteropServices.CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(ref Guid iid, out IntPtr ppv)
        {
            ppv = IntPtr.Zero;
            if (IsOverridableInterface(iid) || global::WinRT.Interop.IID.IID_IInspectable == iid)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
            }

            if (((IWinRTObject)this).NativeObject.TryAs(iid, out ppv) >= 0)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.Handled;
            }

            return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
        }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.Windows.Widgets")]
    [global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.Windows.Widgets.Feeds.Providers.FeedAnalyticsInfoReportedArgs))]
    [global::ABI.Microsoft.Windows.Widgets.Feeds.Providers.FeedAnalyticsInfoReportedArgsRcwFactory]
    [global::WinRT.ProjectedRuntimeClass(typeof(IFeedAnalyticsInfoReportedArgs))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.Windows.Widgets.WidgetContract), 327680u)]
    public sealed class FeedAnalyticsInfoReportedArgs : global::System.Runtime.InteropServices.ICustomQueryInterface, IWinRTObject, IEquatable<FeedAnalyticsInfoReportedArgs>
    {
        private IntPtr ThisPtr => _inner == null ? (((IWinRTObject)this).NativeObject).ThisPtr : _inner.ThisPtr;

        private readonly IObjectReference _inner = null;



        private IObjectReference _objRef_global__Microsoft_Windows_Widgets_Feeds_Providers_IFeedAnalyticsInfoReportedArgs => _inner;


        public static FeedAnalyticsInfoReportedArgs FromAbi(IntPtr thisPtr)
        {
            if (thisPtr == IntPtr.Zero) return null;
            return MarshalInspectable<FeedAnalyticsInfoReportedArgs>.FromAbi(thisPtr);
        }

        internal FeedAnalyticsInfoReportedArgs(IObjectReference objRef)
        {
            _inner = objRef.As(global::ABI.Microsoft.Windows.Widgets.Feeds.Providers.IFeedAnalyticsInfoReportedArgsMethods.IID);

        }


        public static bool operator ==(FeedAnalyticsInfoReportedArgs x, FeedAnalyticsInfoReportedArgs y) => (x?.ThisPtr ?? IntPtr.Zero) == (y?.ThisPtr ?? IntPtr.Zero);
        public static bool operator !=(FeedAnalyticsInfoReportedArgs x, FeedAnalyticsInfoReportedArgs y) => !(x == y);
        public bool Equals(FeedAnalyticsInfoReportedArgs other) => this == other;
        public override bool Equals(object obj) => obj is FeedAnalyticsInfoReportedArgs that && this == that;
        public override int GetHashCode() => ThisPtr.GetHashCode();


        bool IWinRTObject.HasUnwrappableNativeObject => true;
        IObjectReference IWinRTObject.NativeObject => _inner;
        private volatile global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> _queryInterfaceCache;
        private global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> MakeQueryInterfaceCache()
        {
            global::System.Threading.Interlocked.CompareExchange(ref _queryInterfaceCache, new global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference>(), null); 
            return _queryInterfaceCache;
        }
        global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> IWinRTObject.QueryInterfaceCache => _queryInterfaceCache ?? MakeQueryInterfaceCache();
        private volatile global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> _additionalTypeData;
        private global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> MakeAdditionalTypeData()
        {
            global::System.Threading.Interlocked.CompareExchange(ref _additionalTypeData, new global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object>(), null); 
            return _additionalTypeData;
        }
        global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> IWinRTObject.AdditionalTypeData => _additionalTypeData ?? MakeAdditionalTypeData();

        private struct InterfaceTag<I>{};


        public string AnalyticsJson => global::ABI.Microsoft.Windows.Widgets.Feeds.Providers.IFeedAnalyticsInfoReportedArgsMethods.get_AnalyticsJson(_objRef_global__Microsoft_Windows_Widgets_Feeds_Providers_IFeedAnalyticsInfoReportedArgs);

        public string FeedDefinitionId => global::ABI.Microsoft.Windows.Widgets.Feeds.Providers.IFeedAnalyticsInfoReportedArgsMethods.get_FeedDefinitionId(_objRef_global__Microsoft_Windows_Widgets_Feeds_Providers_IFeedAnalyticsInfoReportedArgs);

        public string FeedProviderDefinitionId => global::ABI.Microsoft.Windows.Widgets.Feeds.Providers.IFeedAnalyticsInfoReportedArgsMethods.get_FeedProviderDefinitionId(_objRef_global__Microsoft_Windows_Widgets_Feeds_Providers_IFeedAnalyticsInfoReportedArgs);

        private bool IsOverridableInterface(Guid iid) => false;

        global::System.Runtime.InteropServices.CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(ref Guid iid, out IntPtr ppv)
        {
            ppv = IntPtr.Zero;
            if (IsOverridableInterface(iid) || global::WinRT.Interop.IID.IID_IInspectable == iid)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
            }

            if (((IWinRTObject)this).NativeObject.TryAs(iid, out ppv) >= 0)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.Handled;
            }

            return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
        }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.Windows.Widgets")]
    [global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.Windows.Widgets.Feeds.Providers.FeedDisabledArgs))]
    [global::ABI.Microsoft.Windows.Widgets.Feeds.Providers.FeedDisabledArgsRcwFactory]
    [global::WinRT.ProjectedRuntimeClass(typeof(IFeedDisabledArgs))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.Windows.Widgets.WidgetContract), 262144u)]
    public sealed class FeedDisabledArgs : global::System.Runtime.InteropServices.ICustomQueryInterface, IWinRTObject, IEquatable<FeedDisabledArgs>
    {
        private IntPtr ThisPtr => _inner == null ? (((IWinRTObject)this).NativeObject).ThisPtr : _inner.ThisPtr;

        private readonly IObjectReference _inner = null;



        private IObjectReference _objRef_global__Microsoft_Windows_Widgets_Feeds_Providers_IFeedDisabledArgs => _inner;


        public static FeedDisabledArgs FromAbi(IntPtr thisPtr)
        {
            if (thisPtr == IntPtr.Zero) return null;
            return MarshalInspectable<FeedDisabledArgs>.FromAbi(thisPtr);
        }

        internal FeedDisabledArgs(IObjectReference objRef)
        {
            _inner = objRef.As(global::ABI.Microsoft.Windows.Widgets.Feeds.Providers.IFeedDisabledArgsMethods.IID);

        }


        public static bool operator ==(FeedDisabledArgs x, FeedDisabledArgs y) => (x?.ThisPtr ?? IntPtr.Zero) == (y?.ThisPtr ?? IntPtr.Zero);
        public static bool operator !=(FeedDisabledArgs x, FeedDisabledArgs y) => !(x == y);
        public bool Equals(FeedDisabledArgs other) => this == other;
        public override bool Equals(object obj) => obj is FeedDisabledArgs that && this == that;
        public override int GetHashCode() => ThisPtr.GetHashCode();


        bool IWinRTObject.HasUnwrappableNativeObject => true;
        IObjectReference IWinRTObject.NativeObject => _inner;
        private volatile global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> _queryInterfaceCache;
        private global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> MakeQueryInterfaceCache()
        {
            global::System.Threading.Interlocked.CompareExchange(ref _queryInterfaceCache, new global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference>(), null); 
            return _queryInterfaceCache;
        }
        global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> IWinRTObject.QueryInterfaceCache => _queryInterfaceCache ?? MakeQueryInterfaceCache();
        private volatile global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> _additionalTypeData;
        private global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> MakeAdditionalTypeData()
        {
            global::System.Threading.Interlocked.CompareExchange(ref _additionalTypeData, new global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object>(), null); 
            return _additionalTypeData;
        }
        global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> IWinRTObject.AdditionalTypeData => _additionalTypeData ?? MakeAdditionalTypeData();

        private struct InterfaceTag<I>{};


        public string FeedDefinitionId => global::ABI.Microsoft.Windows.Widgets.Feeds.Providers.IFeedDisabledArgsMethods.get_FeedDefinitionId(_objRef_global__Microsoft_Windows_Widgets_Feeds_Providers_IFeedDisabledArgs);

        public string FeedProviderDefinitionId => global::ABI.Microsoft.Windows.Widgets.Feeds.Providers.IFeedDisabledArgsMethods.get_FeedProviderDefinitionId(_objRef_global__Microsoft_Windows_Widgets_Feeds_Providers_IFeedDisabledArgs);

        private bool IsOverridableInterface(Guid iid) => false;

        global::System.Runtime.InteropServices.CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(ref Guid iid, out IntPtr ppv)
        {
            ppv = IntPtr.Zero;
            if (IsOverridableInterface(iid) || global::WinRT.Interop.IID.IID_IInspectable == iid)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
            }

            if (((IWinRTObject)this).NativeObject.TryAs(iid, out ppv) >= 0)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.Handled;
            }

            return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
        }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.Windows.Widgets")]
    [global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.Windows.Widgets.Feeds.Providers.FeedEnabledArgs))]
    [global::ABI.Microsoft.Windows.Widgets.Feeds.Providers.FeedEnabledArgsRcwFactory]
    [global::WinRT.ProjectedRuntimeClass(typeof(IFeedEnabledArgs))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.Windows.Widgets.WidgetContract), 262144u)]
    public sealed class FeedEnabledArgs : global::System.Runtime.InteropServices.ICustomQueryInterface, IWinRTObject, IEquatable<FeedEnabledArgs>
    {
        private IntPtr ThisPtr => _inner == null ? (((IWinRTObject)this).NativeObject).ThisPtr : _inner.ThisPtr;

        private readonly IObjectReference _inner = null;



        private IObjectReference _objRef_global__Microsoft_Windows_Widgets_Feeds_Providers_IFeedEnabledArgs => _inner;


        public static FeedEnabledArgs FromAbi(IntPtr thisPtr)
        {
            if (thisPtr == IntPtr.Zero) return null;
            return MarshalInspectable<FeedEnabledArgs>.FromAbi(thisPtr);
        }

        internal FeedEnabledArgs(IObjectReference objRef)
        {
            _inner = objRef.As(global::ABI.Microsoft.Windows.Widgets.Feeds.Providers.IFeedEnabledArgsMethods.IID);

        }


        public static bool operator ==(FeedEnabledArgs x, FeedEnabledArgs y) => (x?.ThisPtr ?? IntPtr.Zero) == (y?.ThisPtr ?? IntPtr.Zero);
        public static bool operator !=(FeedEnabledArgs x, FeedEnabledArgs y) => !(x == y);
        public bool Equals(FeedEnabledArgs other) => this == other;
        public override bool Equals(object obj) => obj is FeedEnabledArgs that && this == that;
        public override int GetHashCode() => ThisPtr.GetHashCode();


        bool IWinRTObject.HasUnwrappableNativeObject => true;
        IObjectReference IWinRTObject.NativeObject => _inner;
        private volatile global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> _queryInterfaceCache;
        private global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> MakeQueryInterfaceCache()
        {
            global::System.Threading.Interlocked.CompareExchange(ref _queryInterfaceCache, new global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference>(), null); 
            return _queryInterfaceCache;
        }
        global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> IWinRTObject.QueryInterfaceCache => _queryInterfaceCache ?? MakeQueryInterfaceCache();
        private volatile global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> _additionalTypeData;
        private global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> MakeAdditionalTypeData()
        {
            global::System.Threading.Interlocked.CompareExchange(ref _additionalTypeData, new global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object>(), null); 
            return _additionalTypeData;
        }
        global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> IWinRTObject.AdditionalTypeData => _additionalTypeData ?? MakeAdditionalTypeData();

        private struct InterfaceTag<I>{};


        public string FeedDefinitionId => global::ABI.Microsoft.Windows.Widgets.Feeds.Providers.IFeedEnabledArgsMethods.get_FeedDefinitionId(_objRef_global__Microsoft_Windows_Widgets_Feeds_Providers_IFeedEnabledArgs);

        public string FeedProviderDefinitionId => global::ABI.Microsoft.Windows.Widgets.Feeds.Providers.IFeedEnabledArgsMethods.get_FeedProviderDefinitionId(_objRef_global__Microsoft_Windows_Widgets_Feeds_Providers_IFeedEnabledArgs);

        private bool IsOverridableInterface(Guid iid) => false;

        global::System.Runtime.InteropServices.CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(ref Guid iid, out IntPtr ppv)
        {
            ppv = IntPtr.Zero;
            if (IsOverridableInterface(iid) || global::WinRT.Interop.IID.IID_IInspectable == iid)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
            }

            if (((IWinRTObject)this).NativeObject.TryAs(iid, out ppv) >= 0)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.Handled;
            }

            return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
        }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.Windows.Widgets")]
    [global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.Windows.Widgets.Feeds.Providers.FeedErrorInfoReportedArgs))]
    [global::ABI.Microsoft.Windows.Widgets.Feeds.Providers.FeedErrorInfoReportedArgsRcwFactory]
    [global::WinRT.ProjectedRuntimeClass(typeof(IFeedErrorInfoReportedArgs))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.Windows.Widgets.WidgetContract), 327680u)]
    public sealed class FeedErrorInfoReportedArgs : global::System.Runtime.InteropServices.ICustomQueryInterface, IWinRTObject, IEquatable<FeedErrorInfoReportedArgs>
    {
        private IntPtr ThisPtr => _inner == null ? (((IWinRTObject)this).NativeObject).ThisPtr : _inner.ThisPtr;

        private readonly IObjectReference _inner = null;



        private IObjectReference _objRef_global__Microsoft_Windows_Widgets_Feeds_Providers_IFeedErrorInfoReportedArgs => _inner;


        public static FeedErrorInfoReportedArgs FromAbi(IntPtr thisPtr)
        {
            if (thisPtr == IntPtr.Zero) return null;
            return MarshalInspectable<FeedErrorInfoReportedArgs>.FromAbi(thisPtr);
        }

        internal FeedErrorInfoReportedArgs(IObjectReference objRef)
        {
            _inner = objRef.As(global::ABI.Microsoft.Windows.Widgets.Feeds.Providers.IFeedErrorInfoReportedArgsMethods.IID);

        }


        public static bool operator ==(FeedErrorInfoReportedArgs x, FeedErrorInfoReportedArgs y) => (x?.ThisPtr ?? IntPtr.Zero) == (y?.ThisPtr ?? IntPtr.Zero);
        public static bool operator !=(FeedErrorInfoReportedArgs x, FeedErrorInfoReportedArgs y) => !(x == y);
        public bool Equals(FeedErrorInfoReportedArgs other) => this == other;
        public override bool Equals(object obj) => obj is FeedErrorInfoReportedArgs that && this == that;
        public override int GetHashCode() => ThisPtr.GetHashCode();


        bool IWinRTObject.HasUnwrappableNativeObject => true;
        IObjectReference IWinRTObject.NativeObject => _inner;
        private volatile global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> _queryInterfaceCache;
        private global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> MakeQueryInterfaceCache()
        {
            global::System.Threading.Interlocked.CompareExchange(ref _queryInterfaceCache, new global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference>(), null); 
            return _queryInterfaceCache;
        }
        global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> IWinRTObject.QueryInterfaceCache => _queryInterfaceCache ?? MakeQueryInterfaceCache();
        private volatile global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> _additionalTypeData;
        private global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> MakeAdditionalTypeData()
        {
            global::System.Threading.Interlocked.CompareExchange(ref _additionalTypeData, new global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object>(), null); 
            return _additionalTypeData;
        }
        global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> IWinRTObject.AdditionalTypeData => _additionalTypeData ?? MakeAdditionalTypeData();

        private struct InterfaceTag<I>{};


        public string ErrorJson => global::ABI.Microsoft.Windows.Widgets.Feeds.Providers.IFeedErrorInfoReportedArgsMethods.get_ErrorJson(_objRef_global__Microsoft_Windows_Widgets_Feeds_Providers_IFeedErrorInfoReportedArgs);

        public string FeedDefinitionId => global::ABI.Microsoft.Windows.Widgets.Feeds.Providers.IFeedErrorInfoReportedArgsMethods.get_FeedDefinitionId(_objRef_global__Microsoft_Windows_Widgets_Feeds_Providers_IFeedErrorInfoReportedArgs);

        public string FeedProviderDefinitionId => global::ABI.Microsoft.Windows.Widgets.Feeds.Providers.IFeedErrorInfoReportedArgsMethods.get_FeedProviderDefinitionId(_objRef_global__Microsoft_Windows_Widgets_Feeds_Providers_IFeedErrorInfoReportedArgs);

        private bool IsOverridableInterface(Guid iid) => false;

        global::System.Runtime.InteropServices.CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(ref Guid iid, out IntPtr ppv)
        {
            ppv = IntPtr.Zero;
            if (IsOverridableInterface(iid) || global::WinRT.Interop.IID.IID_IInspectable == iid)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
            }

            if (((IWinRTObject)this).NativeObject.TryAs(iid, out ppv) >= 0)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.Handled;
            }

            return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
        }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.Windows.Widgets")]
    [global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.Windows.Widgets.Feeds.Providers.FeedManager))]
    [global::ABI.Microsoft.Windows.Widgets.Feeds.Providers.FeedManagerRcwFactory]
    [global::WinRT.ProjectedRuntimeClass(typeof(IFeedManager))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.Windows.Widgets.WidgetContract), 262144u)]
    public sealed class FeedManager : IFeedManager, IFeedManager2, IFeedManager3, global::System.Runtime.InteropServices.ICustomQueryInterface, IWinRTObject, IEquatable<FeedManager>
    {
        private IntPtr ThisPtr => _inner == null ? (((IWinRTObject)this).NativeObject).ThisPtr : _inner.ThisPtr;

        private readonly IObjectReference _inner = null;



        private IObjectReference _objRef_global__Microsoft_Windows_Widgets_Feeds_Providers_IFeedManager => _inner;
        private volatile IObjectReference ___objRef_global__Microsoft_Windows_Widgets_Feeds_Providers_IFeedManager2;
        private IObjectReference Make___objRef_global__Microsoft_Windows_Widgets_Feeds_Providers_IFeedManager2()
        {
            global::System.Threading.Interlocked.CompareExchange(ref ___objRef_global__Microsoft_Windows_Widgets_Feeds_Providers_IFeedManager2, ((IWinRTObject)this).NativeObject.As<IUnknownVftbl>(global::ABI.Microsoft.Windows.Widgets.Feeds.Providers.IFeedManager2Methods.IID), null);
            return ___objRef_global__Microsoft_Windows_Widgets_Feeds_Providers_IFeedManager2;
        }
        private IObjectReference _objRef_global__Microsoft_Windows_Widgets_Feeds_Providers_IFeedManager2 => ___objRef_global__Microsoft_Windows_Widgets_Feeds_Providers_IFeedManager2 ?? Make___objRef_global__Microsoft_Windows_Widgets_Feeds_Providers_IFeedManager2();

        private volatile IObjectReference ___objRef_global__Microsoft_Windows_Widgets_Feeds_Providers_IFeedManager3;
        private IObjectReference Make___objRef_global__Microsoft_Windows_Widgets_Feeds_Providers_IFeedManager3()
        {
            global::System.Threading.Interlocked.CompareExchange(ref ___objRef_global__Microsoft_Windows_Widgets_Feeds_Providers_IFeedManager3, ((IWinRTObject)this).NativeObject.As<IUnknownVftbl>(global::ABI.Microsoft.Windows.Widgets.Feeds.Providers.IFeedManager3Methods.IID), null);
            return ___objRef_global__Microsoft_Windows_Widgets_Feeds_Providers_IFeedManager3;
        }
        private IObjectReference _objRef_global__Microsoft_Windows_Widgets_Feeds_Providers_IFeedManager3 => ___objRef_global__Microsoft_Windows_Widgets_Feeds_Providers_IFeedManager3 ?? Make___objRef_global__Microsoft_Windows_Widgets_Feeds_Providers_IFeedManager3();



        public static I As<I>() => ActivationFactory.Get("Microsoft.Windows.Widgets.Feeds.Providers.FeedManager").AsInterface<I>();

        private static volatile IObjectReference ___objRef_global__Microsoft_Windows_Widgets_Feeds_Providers_IFeedManagerStatics;
        private static IObjectReference _objRef_global__Microsoft_Windows_Widgets_Feeds_Providers_IFeedManagerStatics
        {
            get
            { 
                var factory = ___objRef_global__Microsoft_Windows_Widgets_Feeds_Providers_IFeedManagerStatics;
                if (factory != null && factory.IsInCurrentContext)
                {
                    return factory;
                }
                else
                {
                    return ___objRef_global__Microsoft_Windows_Widgets_Feeds_Providers_IFeedManagerStatics = ActivationFactory.Get("Microsoft.Windows.Widgets.Feeds.Providers.FeedManager", global::ABI.Microsoft.Windows.Widgets.Feeds.Providers.IFeedManagerStaticsMethods.IID);
                }
            }
        }

        public static FeedManager GetDefault() => global::ABI.Microsoft.Windows.Widgets.Feeds.Providers.IFeedManagerStaticsMethods.GetDefault(_objRef_global__Microsoft_Windows_Widgets_Feeds_Providers_IFeedManagerStatics);

        public static FeedManager FromAbi(IntPtr thisPtr)
        {
            if (thisPtr == IntPtr.Zero) return null;
            return MarshalInspectable<FeedManager>.FromAbi(thisPtr);
        }

        internal FeedManager(IObjectReference objRef)
        {
            _inner = objRef.As(global::ABI.Microsoft.Windows.Widgets.Feeds.Providers.IFeedManagerMethods.IID);

        }


        public static bool operator ==(FeedManager x, FeedManager y) => (x?.ThisPtr ?? IntPtr.Zero) == (y?.ThisPtr ?? IntPtr.Zero);
        public static bool operator !=(FeedManager x, FeedManager y) => !(x == y);
        public bool Equals(FeedManager other) => this == other;
        public override bool Equals(object obj) => obj is FeedManager that && this == that;
        public override int GetHashCode() => ThisPtr.GetHashCode();


        bool IWinRTObject.HasUnwrappableNativeObject => true;
        IObjectReference IWinRTObject.NativeObject => _inner;
        private volatile global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> _queryInterfaceCache;
        private global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> MakeQueryInterfaceCache()
        {
            global::System.Threading.Interlocked.CompareExchange(ref _queryInterfaceCache, new global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference>(), null); 
            return _queryInterfaceCache;
        }
        global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> IWinRTObject.QueryInterfaceCache => _queryInterfaceCache ?? MakeQueryInterfaceCache();
        private volatile global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> _additionalTypeData;
        private global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> MakeAdditionalTypeData()
        {
            global::System.Threading.Interlocked.CompareExchange(ref _additionalTypeData, new global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object>(), null); 
            return _additionalTypeData;
        }
        global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> IWinRTObject.AdditionalTypeData => _additionalTypeData ?? MakeAdditionalTypeData();

        private struct InterfaceTag<I>{};


        public FeedProviderInfo[] GetEnabledFeedProviders() => global::ABI.Microsoft.Windows.Widgets.Feeds.Providers.IFeedManagerMethods.GetEnabledFeedProviders(_objRef_global__Microsoft_Windows_Widgets_Feeds_Providers_IFeedManager);

        public void SetCustomQueryParameters(CustomQueryParametersUpdateOptions options) => global::ABI.Microsoft.Windows.Widgets.Feeds.Providers.IFeedManagerMethods.SetCustomQueryParameters(_objRef_global__Microsoft_Windows_Widgets_Feeds_Providers_IFeedManager, options);

        public void SendMessageToContent(string feedProviderDefinitionId, string feedDefinitionId, string message) => global::ABI.Microsoft.Windows.Widgets.Feeds.Providers.IFeedManager2Methods.SendMessageToContent(_objRef_global__Microsoft_Windows_Widgets_Feeds_Providers_IFeedManager2, feedProviderDefinitionId, feedDefinitionId, message);

        public void TryShowAnnouncement(string feedProviderDefinitionId, string feedDefinitionId, global::Microsoft.Windows.Widgets.Notifications.FeedAnnouncement announcement) => global::ABI.Microsoft.Windows.Widgets.Feeds.Providers.IFeedManager2Methods.TryShowAnnouncement(_objRef_global__Microsoft_Windows_Widgets_Feeds_Providers_IFeedManager2, feedProviderDefinitionId, feedDefinitionId, announcement);

        public void TryRemoveAnnouncementById(string feedProviderDefinitionId, string feedDefinitionId, string announcementId) => global::ABI.Microsoft.Windows.Widgets.Feeds.Providers.IFeedManager3Methods.TryRemoveAnnouncementById(_objRef_global__Microsoft_Windows_Widgets_Feeds_Providers_IFeedManager3, feedProviderDefinitionId, feedDefinitionId, announcementId);

        private bool IsOverridableInterface(Guid iid) => false;

        global::System.Runtime.InteropServices.CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(ref Guid iid, out IntPtr ppv)
        {
            ppv = IntPtr.Zero;
            if (IsOverridableInterface(iid) || global::WinRT.Interop.IID.IID_IInspectable == iid)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
            }

            if (((IWinRTObject)this).NativeObject.TryAs(iid, out ppv) >= 0)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.Handled;
            }

            return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
        }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.Windows.Widgets")]
    [global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.Windows.Widgets.Feeds.Providers.FeedMessageReceivedArgs))]
    [global::ABI.Microsoft.Windows.Widgets.Feeds.Providers.FeedMessageReceivedArgsRcwFactory]
    [global::WinRT.ProjectedRuntimeClass(typeof(IFeedMessageReceivedArgs))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.Windows.Widgets.WidgetContract), 327680u)]
    public sealed class FeedMessageReceivedArgs : global::System.Runtime.InteropServices.ICustomQueryInterface, IWinRTObject, IEquatable<FeedMessageReceivedArgs>
    {
        private IntPtr ThisPtr => _inner == null ? (((IWinRTObject)this).NativeObject).ThisPtr : _inner.ThisPtr;

        private readonly IObjectReference _inner = null;



        private IObjectReference _objRef_global__Microsoft_Windows_Widgets_Feeds_Providers_IFeedMessageReceivedArgs => _inner;


        public static FeedMessageReceivedArgs FromAbi(IntPtr thisPtr)
        {
            if (thisPtr == IntPtr.Zero) return null;
            return MarshalInspectable<FeedMessageReceivedArgs>.FromAbi(thisPtr);
        }

        internal FeedMessageReceivedArgs(IObjectReference objRef)
        {
            _inner = objRef.As(global::ABI.Microsoft.Windows.Widgets.Feeds.Providers.IFeedMessageReceivedArgsMethods.IID);

        }


        public static bool operator ==(FeedMessageReceivedArgs x, FeedMessageReceivedArgs y) => (x?.ThisPtr ?? IntPtr.Zero) == (y?.ThisPtr ?? IntPtr.Zero);
        public static bool operator !=(FeedMessageReceivedArgs x, FeedMessageReceivedArgs y) => !(x == y);
        public bool Equals(FeedMessageReceivedArgs other) => this == other;
        public override bool Equals(object obj) => obj is FeedMessageReceivedArgs that && this == that;
        public override int GetHashCode() => ThisPtr.GetHashCode();


        bool IWinRTObject.HasUnwrappableNativeObject => true;
        IObjectReference IWinRTObject.NativeObject => _inner;
        private volatile global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> _queryInterfaceCache;
        private global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> MakeQueryInterfaceCache()
        {
            global::System.Threading.Interlocked.CompareExchange(ref _queryInterfaceCache, new global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference>(), null); 
            return _queryInterfaceCache;
        }
        global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> IWinRTObject.QueryInterfaceCache => _queryInterfaceCache ?? MakeQueryInterfaceCache();
        private volatile global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> _additionalTypeData;
        private global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> MakeAdditionalTypeData()
        {
            global::System.Threading.Interlocked.CompareExchange(ref _additionalTypeData, new global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object>(), null); 
            return _additionalTypeData;
        }
        global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> IWinRTObject.AdditionalTypeData => _additionalTypeData ?? MakeAdditionalTypeData();

        private struct InterfaceTag<I>{};


        public string FeedDefinitionId => global::ABI.Microsoft.Windows.Widgets.Feeds.Providers.IFeedMessageReceivedArgsMethods.get_FeedDefinitionId(_objRef_global__Microsoft_Windows_Widgets_Feeds_Providers_IFeedMessageReceivedArgs);

        public string FeedProviderDefinitionId => global::ABI.Microsoft.Windows.Widgets.Feeds.Providers.IFeedMessageReceivedArgsMethods.get_FeedProviderDefinitionId(_objRef_global__Microsoft_Windows_Widgets_Feeds_Providers_IFeedMessageReceivedArgs);

        public string Message => global::ABI.Microsoft.Windows.Widgets.Feeds.Providers.IFeedMessageReceivedArgsMethods.get_Message(_objRef_global__Microsoft_Windows_Widgets_Feeds_Providers_IFeedMessageReceivedArgs);

        private bool IsOverridableInterface(Guid iid) => false;

        global::System.Runtime.InteropServices.CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(ref Guid iid, out IntPtr ppv)
        {
            ppv = IntPtr.Zero;
            if (IsOverridableInterface(iid) || global::WinRT.Interop.IID.IID_IInspectable == iid)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
            }

            if (((IWinRTObject)this).NativeObject.TryAs(iid, out ppv) >= 0)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.Handled;
            }

            return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
        }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.Windows.Widgets")]
    [global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.Windows.Widgets.Feeds.Providers.FeedProviderDisabledArgs))]
    [global::ABI.Microsoft.Windows.Widgets.Feeds.Providers.FeedProviderDisabledArgsRcwFactory]
    [global::WinRT.ProjectedRuntimeClass(typeof(IFeedProviderDisabledArgs))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.Windows.Widgets.WidgetContract), 262144u)]
    public sealed class FeedProviderDisabledArgs : global::System.Runtime.InteropServices.ICustomQueryInterface, IWinRTObject, IEquatable<FeedProviderDisabledArgs>
    {
        private IntPtr ThisPtr => _inner == null ? (((IWinRTObject)this).NativeObject).ThisPtr : _inner.ThisPtr;

        private readonly IObjectReference _inner = null;



        private IObjectReference _objRef_global__Microsoft_Windows_Widgets_Feeds_Providers_IFeedProviderDisabledArgs => _inner;


        public static FeedProviderDisabledArgs FromAbi(IntPtr thisPtr)
        {
            if (thisPtr == IntPtr.Zero) return null;
            return MarshalInspectable<FeedProviderDisabledArgs>.FromAbi(thisPtr);
        }

        internal FeedProviderDisabledArgs(IObjectReference objRef)
        {
            _inner = objRef.As(global::ABI.Microsoft.Windows.Widgets.Feeds.Providers.IFeedProviderDisabledArgsMethods.IID);

        }


        public static bool operator ==(FeedProviderDisabledArgs x, FeedProviderDisabledArgs y) => (x?.ThisPtr ?? IntPtr.Zero) == (y?.ThisPtr ?? IntPtr.Zero);
        public static bool operator !=(FeedProviderDisabledArgs x, FeedProviderDisabledArgs y) => !(x == y);
        public bool Equals(FeedProviderDisabledArgs other) => this == other;
        public override bool Equals(object obj) => obj is FeedProviderDisabledArgs that && this == that;
        public override int GetHashCode() => ThisPtr.GetHashCode();


        bool IWinRTObject.HasUnwrappableNativeObject => true;
        IObjectReference IWinRTObject.NativeObject => _inner;
        private volatile global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> _queryInterfaceCache;
        private global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> MakeQueryInterfaceCache()
        {
            global::System.Threading.Interlocked.CompareExchange(ref _queryInterfaceCache, new global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference>(), null); 
            return _queryInterfaceCache;
        }
        global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> IWinRTObject.QueryInterfaceCache => _queryInterfaceCache ?? MakeQueryInterfaceCache();
        private volatile global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> _additionalTypeData;
        private global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> MakeAdditionalTypeData()
        {
            global::System.Threading.Interlocked.CompareExchange(ref _additionalTypeData, new global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object>(), null); 
            return _additionalTypeData;
        }
        global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> IWinRTObject.AdditionalTypeData => _additionalTypeData ?? MakeAdditionalTypeData();

        private struct InterfaceTag<I>{};


        public string FeedProviderDefinitionId => global::ABI.Microsoft.Windows.Widgets.Feeds.Providers.IFeedProviderDisabledArgsMethods.get_FeedProviderDefinitionId(_objRef_global__Microsoft_Windows_Widgets_Feeds_Providers_IFeedProviderDisabledArgs);

        private bool IsOverridableInterface(Guid iid) => false;

        global::System.Runtime.InteropServices.CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(ref Guid iid, out IntPtr ppv)
        {
            ppv = IntPtr.Zero;
            if (IsOverridableInterface(iid) || global::WinRT.Interop.IID.IID_IInspectable == iid)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
            }

            if (((IWinRTObject)this).NativeObject.TryAs(iid, out ppv) >= 0)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.Handled;
            }

            return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
        }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.Windows.Widgets")]
    [global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.Windows.Widgets.Feeds.Providers.FeedProviderEnabledArgs))]
    [global::ABI.Microsoft.Windows.Widgets.Feeds.Providers.FeedProviderEnabledArgsRcwFactory]
    [global::WinRT.ProjectedRuntimeClass(typeof(IFeedProviderEnabledArgs))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.Windows.Widgets.WidgetContract), 262144u)]
    public sealed class FeedProviderEnabledArgs : global::System.Runtime.InteropServices.ICustomQueryInterface, IWinRTObject, IEquatable<FeedProviderEnabledArgs>
    {
        private IntPtr ThisPtr => _inner == null ? (((IWinRTObject)this).NativeObject).ThisPtr : _inner.ThisPtr;

        private readonly IObjectReference _inner = null;



        private IObjectReference _objRef_global__Microsoft_Windows_Widgets_Feeds_Providers_IFeedProviderEnabledArgs => _inner;


        public static FeedProviderEnabledArgs FromAbi(IntPtr thisPtr)
        {
            if (thisPtr == IntPtr.Zero) return null;
            return MarshalInspectable<FeedProviderEnabledArgs>.FromAbi(thisPtr);
        }

        internal FeedProviderEnabledArgs(IObjectReference objRef)
        {
            _inner = objRef.As(global::ABI.Microsoft.Windows.Widgets.Feeds.Providers.IFeedProviderEnabledArgsMethods.IID);

        }


        public static bool operator ==(FeedProviderEnabledArgs x, FeedProviderEnabledArgs y) => (x?.ThisPtr ?? IntPtr.Zero) == (y?.ThisPtr ?? IntPtr.Zero);
        public static bool operator !=(FeedProviderEnabledArgs x, FeedProviderEnabledArgs y) => !(x == y);
        public bool Equals(FeedProviderEnabledArgs other) => this == other;
        public override bool Equals(object obj) => obj is FeedProviderEnabledArgs that && this == that;
        public override int GetHashCode() => ThisPtr.GetHashCode();


        bool IWinRTObject.HasUnwrappableNativeObject => true;
        IObjectReference IWinRTObject.NativeObject => _inner;
        private volatile global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> _queryInterfaceCache;
        private global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> MakeQueryInterfaceCache()
        {
            global::System.Threading.Interlocked.CompareExchange(ref _queryInterfaceCache, new global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference>(), null); 
            return _queryInterfaceCache;
        }
        global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> IWinRTObject.QueryInterfaceCache => _queryInterfaceCache ?? MakeQueryInterfaceCache();
        private volatile global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> _additionalTypeData;
        private global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> MakeAdditionalTypeData()
        {
            global::System.Threading.Interlocked.CompareExchange(ref _additionalTypeData, new global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object>(), null); 
            return _additionalTypeData;
        }
        global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> IWinRTObject.AdditionalTypeData => _additionalTypeData ?? MakeAdditionalTypeData();

        private struct InterfaceTag<I>{};


        public string FeedProviderDefinitionId => global::ABI.Microsoft.Windows.Widgets.Feeds.Providers.IFeedProviderEnabledArgsMethods.get_FeedProviderDefinitionId(_objRef_global__Microsoft_Windows_Widgets_Feeds_Providers_IFeedProviderEnabledArgs);

        private bool IsOverridableInterface(Guid iid) => false;

        global::System.Runtime.InteropServices.CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(ref Guid iid, out IntPtr ppv)
        {
            ppv = IntPtr.Zero;
            if (IsOverridableInterface(iid) || global::WinRT.Interop.IID.IID_IInspectable == iid)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
            }

            if (((IWinRTObject)this).NativeObject.TryAs(iid, out ppv) >= 0)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.Handled;
            }

            return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
        }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.Windows.Widgets")]
    [global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.Windows.Widgets.Feeds.Providers.FeedProviderInfo))]
    [global::ABI.Microsoft.Windows.Widgets.Feeds.Providers.FeedProviderInfoRcwFactory]
    [global::WinRT.ProjectedRuntimeClass(typeof(IFeedProviderInfo))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.Windows.Widgets.WidgetContract), 262144u)]
    public sealed class FeedProviderInfo : global::System.Runtime.InteropServices.ICustomQueryInterface, IWinRTObject, IEquatable<FeedProviderInfo>
    {
        private IntPtr ThisPtr => _inner == null ? (((IWinRTObject)this).NativeObject).ThisPtr : _inner.ThisPtr;

        private readonly IObjectReference _inner = null;



        private IObjectReference _objRef_global__Microsoft_Windows_Widgets_Feeds_Providers_IFeedProviderInfo => _inner;


        public static FeedProviderInfo FromAbi(IntPtr thisPtr)
        {
            if (thisPtr == IntPtr.Zero) return null;
            return MarshalInspectable<FeedProviderInfo>.FromAbi(thisPtr);
        }

        internal FeedProviderInfo(IObjectReference objRef)
        {
            _inner = objRef.As(global::ABI.Microsoft.Windows.Widgets.Feeds.Providers.IFeedProviderInfoMethods.IID);

        }


        public static bool operator ==(FeedProviderInfo x, FeedProviderInfo y) => (x?.ThisPtr ?? IntPtr.Zero) == (y?.ThisPtr ?? IntPtr.Zero);
        public static bool operator !=(FeedProviderInfo x, FeedProviderInfo y) => !(x == y);
        public bool Equals(FeedProviderInfo other) => this == other;
        public override bool Equals(object obj) => obj is FeedProviderInfo that && this == that;
        public override int GetHashCode() => ThisPtr.GetHashCode();


        bool IWinRTObject.HasUnwrappableNativeObject => true;
        IObjectReference IWinRTObject.NativeObject => _inner;
        private volatile global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> _queryInterfaceCache;
        private global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> MakeQueryInterfaceCache()
        {
            global::System.Threading.Interlocked.CompareExchange(ref _queryInterfaceCache, new global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference>(), null); 
            return _queryInterfaceCache;
        }
        global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> IWinRTObject.QueryInterfaceCache => _queryInterfaceCache ?? MakeQueryInterfaceCache();
        private volatile global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> _additionalTypeData;
        private global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> MakeAdditionalTypeData()
        {
            global::System.Threading.Interlocked.CompareExchange(ref _additionalTypeData, new global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object>(), null); 
            return _additionalTypeData;
        }
        global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> IWinRTObject.AdditionalTypeData => _additionalTypeData ?? MakeAdditionalTypeData();

        private struct InterfaceTag<I>{};


        public string[] EnabledFeedDefinitionIds => global::ABI.Microsoft.Windows.Widgets.Feeds.Providers.IFeedProviderInfoMethods.get_EnabledFeedDefinitionIds(_objRef_global__Microsoft_Windows_Widgets_Feeds_Providers_IFeedProviderInfo);

        public string FeedProviderDefinitionId => global::ABI.Microsoft.Windows.Widgets.Feeds.Providers.IFeedProviderInfoMethods.get_FeedProviderDefinitionId(_objRef_global__Microsoft_Windows_Widgets_Feeds_Providers_IFeedProviderInfo);

        private bool IsOverridableInterface(Guid iid) => false;

        global::System.Runtime.InteropServices.CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(ref Guid iid, out IntPtr ppv)
        {
            ppv = IntPtr.Zero;
            if (IsOverridableInterface(iid) || global::WinRT.Interop.IID.IID_IInspectable == iid)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
            }

            if (((IWinRTObject)this).NativeObject.TryAs(iid, out ppv) >= 0)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.Handled;
            }

            return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
        }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.Windows.Widgets")]
    [global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.Windows.Widgets.Feeds.Providers.FeedResourceRequest))]
    [global::ABI.Microsoft.Windows.Widgets.Feeds.Providers.FeedResourceRequestRcwFactory]
    [global::WinRT.ProjectedRuntimeClass(typeof(IFeedResourceRequest))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.Windows.Widgets.WidgetContract), 327680u)]
    public sealed class FeedResourceRequest : global::System.Runtime.InteropServices.ICustomQueryInterface, IWinRTObject, IEquatable<FeedResourceRequest>
    {
        private IntPtr ThisPtr => _inner == null ? (((IWinRTObject)this).NativeObject).ThisPtr : _inner.ThisPtr;

        private readonly IObjectReference _inner = null;



        private IObjectReference _objRef_global__Microsoft_Windows_Widgets_Feeds_Providers_IFeedResourceRequest => _inner;


        public static FeedResourceRequest FromAbi(IntPtr thisPtr)
        {
            if (thisPtr == IntPtr.Zero) return null;
            return MarshalInspectable<FeedResourceRequest>.FromAbi(thisPtr);
        }

        internal FeedResourceRequest(IObjectReference objRef)
        {
            _inner = objRef.As(global::ABI.Microsoft.Windows.Widgets.Feeds.Providers.IFeedResourceRequestMethods.IID);

        }


        public static bool operator ==(FeedResourceRequest x, FeedResourceRequest y) => (x?.ThisPtr ?? IntPtr.Zero) == (y?.ThisPtr ?? IntPtr.Zero);
        public static bool operator !=(FeedResourceRequest x, FeedResourceRequest y) => !(x == y);
        public bool Equals(FeedResourceRequest other) => this == other;
        public override bool Equals(object obj) => obj is FeedResourceRequest that && this == that;
        public override int GetHashCode() => ThisPtr.GetHashCode();


        bool IWinRTObject.HasUnwrappableNativeObject => true;
        IObjectReference IWinRTObject.NativeObject => _inner;
        private volatile global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> _queryInterfaceCache;
        private global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> MakeQueryInterfaceCache()
        {
            global::System.Threading.Interlocked.CompareExchange(ref _queryInterfaceCache, new global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference>(), null); 
            return _queryInterfaceCache;
        }
        global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> IWinRTObject.QueryInterfaceCache => _queryInterfaceCache ?? MakeQueryInterfaceCache();
        private volatile global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> _additionalTypeData;
        private global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> MakeAdditionalTypeData()
        {
            global::System.Threading.Interlocked.CompareExchange(ref _additionalTypeData, new global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object>(), null); 
            return _additionalTypeData;
        }
        global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> IWinRTObject.AdditionalTypeData => _additionalTypeData ?? MakeAdditionalTypeData();

        private struct InterfaceTag<I>{};


        public global::Windows.Storage.Streams.IRandomAccessStreamReference Content
        {
            get => global::ABI.Microsoft.Windows.Widgets.Feeds.Providers.IFeedResourceRequestMethods.get_Content(_objRef_global__Microsoft_Windows_Widgets_Feeds_Providers_IFeedResourceRequest);
            set => global::ABI.Microsoft.Windows.Widgets.Feeds.Providers.IFeedResourceRequestMethods.set_Content(_objRef_global__Microsoft_Windows_Widgets_Feeds_Providers_IFeedResourceRequest, value);
        }

        public global::Windows.Foundation.Collections.StringMap Headers
        {
            get => global::ABI.Microsoft.Windows.Widgets.Feeds.Providers.IFeedResourceRequestMethods.get_Headers(_objRef_global__Microsoft_Windows_Widgets_Feeds_Providers_IFeedResourceRequest);
            set => global::ABI.Microsoft.Windows.Widgets.Feeds.Providers.IFeedResourceRequestMethods.set_Headers(_objRef_global__Microsoft_Windows_Widgets_Feeds_Providers_IFeedResourceRequest, value);
        }

        public string Method
        {
            get => global::ABI.Microsoft.Windows.Widgets.Feeds.Providers.IFeedResourceRequestMethods.get_Method(_objRef_global__Microsoft_Windows_Widgets_Feeds_Providers_IFeedResourceRequest);
            set => global::ABI.Microsoft.Windows.Widgets.Feeds.Providers.IFeedResourceRequestMethods.set_Method(_objRef_global__Microsoft_Windows_Widgets_Feeds_Providers_IFeedResourceRequest, value);
        }

        public string Uri => global::ABI.Microsoft.Windows.Widgets.Feeds.Providers.IFeedResourceRequestMethods.get_Uri(_objRef_global__Microsoft_Windows_Widgets_Feeds_Providers_IFeedResourceRequest);

        private bool IsOverridableInterface(Guid iid) => false;

        global::System.Runtime.InteropServices.CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(ref Guid iid, out IntPtr ppv)
        {
            ppv = IntPtr.Zero;
            if (IsOverridableInterface(iid) || global::WinRT.Interop.IID.IID_IInspectable == iid)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
            }

            if (((IWinRTObject)this).NativeObject.TryAs(iid, out ppv) >= 0)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.Handled;
            }

            return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
        }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.Windows.Widgets")]
    [global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.Windows.Widgets.Feeds.Providers.FeedResourceRequestedArgs))]
    [global::ABI.Microsoft.Windows.Widgets.Feeds.Providers.FeedResourceRequestedArgsRcwFactory]
    [global::WinRT.ProjectedRuntimeClass(typeof(IFeedResourceRequestedArgs))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.Windows.Widgets.WidgetContract), 327680u)]
    public sealed class FeedResourceRequestedArgs : global::System.Runtime.InteropServices.ICustomQueryInterface, IWinRTObject, IEquatable<FeedResourceRequestedArgs>
    {
        private IntPtr ThisPtr => _inner == null ? (((IWinRTObject)this).NativeObject).ThisPtr : _inner.ThisPtr;

        private readonly IObjectReference _inner = null;



        private IObjectReference _objRef_global__Microsoft_Windows_Widgets_Feeds_Providers_IFeedResourceRequestedArgs => _inner;


        public static FeedResourceRequestedArgs FromAbi(IntPtr thisPtr)
        {
            if (thisPtr == IntPtr.Zero) return null;
            return MarshalInspectable<FeedResourceRequestedArgs>.FromAbi(thisPtr);
        }

        internal FeedResourceRequestedArgs(IObjectReference objRef)
        {
            _inner = objRef.As(global::ABI.Microsoft.Windows.Widgets.Feeds.Providers.IFeedResourceRequestedArgsMethods.IID);

        }


        public static bool operator ==(FeedResourceRequestedArgs x, FeedResourceRequestedArgs y) => (x?.ThisPtr ?? IntPtr.Zero) == (y?.ThisPtr ?? IntPtr.Zero);
        public static bool operator !=(FeedResourceRequestedArgs x, FeedResourceRequestedArgs y) => !(x == y);
        public bool Equals(FeedResourceRequestedArgs other) => this == other;
        public override bool Equals(object obj) => obj is FeedResourceRequestedArgs that && this == that;
        public override int GetHashCode() => ThisPtr.GetHashCode();


        bool IWinRTObject.HasUnwrappableNativeObject => true;
        IObjectReference IWinRTObject.NativeObject => _inner;
        private volatile global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> _queryInterfaceCache;
        private global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> MakeQueryInterfaceCache()
        {
            global::System.Threading.Interlocked.CompareExchange(ref _queryInterfaceCache, new global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference>(), null); 
            return _queryInterfaceCache;
        }
        global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> IWinRTObject.QueryInterfaceCache => _queryInterfaceCache ?? MakeQueryInterfaceCache();
        private volatile global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> _additionalTypeData;
        private global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> MakeAdditionalTypeData()
        {
            global::System.Threading.Interlocked.CompareExchange(ref _additionalTypeData, new global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object>(), null); 
            return _additionalTypeData;
        }
        global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> IWinRTObject.AdditionalTypeData => _additionalTypeData ?? MakeAdditionalTypeData();

        private struct InterfaceTag<I>{};


        public global::Windows.Foundation.Deferral GetDeferral() => global::ABI.Microsoft.Windows.Widgets.Feeds.Providers.IFeedResourceRequestedArgsMethods.GetDeferral(_objRef_global__Microsoft_Windows_Widgets_Feeds_Providers_IFeedResourceRequestedArgs);

        public string FeedDefinitionId => global::ABI.Microsoft.Windows.Widgets.Feeds.Providers.IFeedResourceRequestedArgsMethods.get_FeedDefinitionId(_objRef_global__Microsoft_Windows_Widgets_Feeds_Providers_IFeedResourceRequestedArgs);

        public string FeedProviderDefinitionId => global::ABI.Microsoft.Windows.Widgets.Feeds.Providers.IFeedResourceRequestedArgsMethods.get_FeedProviderDefinitionId(_objRef_global__Microsoft_Windows_Widgets_Feeds_Providers_IFeedResourceRequestedArgs);

        public FeedResourceRequest Request => global::ABI.Microsoft.Windows.Widgets.Feeds.Providers.IFeedResourceRequestedArgsMethods.get_Request(_objRef_global__Microsoft_Windows_Widgets_Feeds_Providers_IFeedResourceRequestedArgs);

        public FeedResourceResponse Response
        {
            get => global::ABI.Microsoft.Windows.Widgets.Feeds.Providers.IFeedResourceRequestedArgsMethods.get_Response(_objRef_global__Microsoft_Windows_Widgets_Feeds_Providers_IFeedResourceRequestedArgs);
            set => global::ABI.Microsoft.Windows.Widgets.Feeds.Providers.IFeedResourceRequestedArgsMethods.set_Response(_objRef_global__Microsoft_Windows_Widgets_Feeds_Providers_IFeedResourceRequestedArgs, value);
        }

        private bool IsOverridableInterface(Guid iid) => false;

        global::System.Runtime.InteropServices.CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(ref Guid iid, out IntPtr ppv)
        {
            ppv = IntPtr.Zero;
            if (IsOverridableInterface(iid) || global::WinRT.Interop.IID.IID_IInspectable == iid)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
            }

            if (((IWinRTObject)this).NativeObject.TryAs(iid, out ppv) >= 0)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.Handled;
            }

            return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
        }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.Windows.Widgets")]
    [global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.Windows.Widgets.Feeds.Providers.FeedResourceResponse))]
    [global::ABI.Microsoft.Windows.Widgets.Feeds.Providers.FeedResourceResponseRcwFactory]
    [global::WinRT.ProjectedRuntimeClass(typeof(IFeedResourceResponse))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.Windows.Widgets.WidgetContract), 327680u)]
    public sealed class FeedResourceResponse : global::System.Runtime.InteropServices.ICustomQueryInterface, IWinRTObject, IEquatable<FeedResourceResponse>
    {
        private IntPtr ThisPtr => _inner == null ? (((IWinRTObject)this).NativeObject).ThisPtr : _inner.ThisPtr;

        private readonly IObjectReference _inner = null;



        private IObjectReference _objRef_global__Microsoft_Windows_Widgets_Feeds_Providers_IFeedResourceResponse => _inner;


        private static class _IFeedResourceResponseFactoryMethods
        {
            public static unsafe IntPtr CreateInstance(IObjectReference _obj, global::Windows.Storage.Streams.IRandomAccessStreamReference content, string reasonPhrase, int statusCode)
            {
                var ThisPtr = _obj.ThisPtr;

                ObjectReferenceValue __content = default;
                IntPtr __retval = default;
                try
                {
                    __content = MarshalInterface<global::Windows.Storage.Streams.IRandomAccessStreamReference>.CreateMarshaler2(content, global::ABI.Windows.Storage.Streams.IRandomAccessStreamReferenceMethods.IID);
                    MarshalString.Pinnable __reasonPhrase = new(reasonPhrase);
                    fixed(void* ___reasonPhrase = __reasonPhrase)
                    {
                        global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, IntPtr, int, IntPtr*, int>**)ThisPtr)[6](ThisPtr, MarshalInspectable<object>.GetAbi(__content), MarshalString.GetAbi(ref __reasonPhrase), statusCode, &__retval));
                        global::System.GC.KeepAlive(_obj);
                        return __retval;
                    }
                }
                finally
                {
                    MarshalInspectable<object>.DisposeMarshaler(__content);
                }
            }
        }

        private static volatile IObjectReference ___objRef_global__Microsoft_Windows_Widgets_Feeds_Providers_IFeedResourceResponseFactory;
        private static IObjectReference _objRef_global__Microsoft_Windows_Widgets_Feeds_Providers_IFeedResourceResponseFactory
        {
            get
            { 
                var factory = ___objRef_global__Microsoft_Windows_Widgets_Feeds_Providers_IFeedResourceResponseFactory;
                if (factory != null && factory.IsInCurrentContext)
                {
                    return factory;
                }
                else
                {
                    return ___objRef_global__Microsoft_Windows_Widgets_Feeds_Providers_IFeedResourceResponseFactory = ActivationFactory.Get("Microsoft.Windows.Widgets.Feeds.Providers.FeedResourceResponse", global::ABI.Microsoft.Windows.Widgets.Feeds.Providers.IFeedResourceResponseFactoryMethods.IID);
                }
            }
        }

        public FeedResourceResponse(global::Windows.Storage.Streams.IRandomAccessStreamReference content, string reasonPhrase, int statusCode) 
        { 
        IntPtr ptr = (_IFeedResourceResponseFactoryMethods.CreateInstance(_objRef_global__Microsoft_Windows_Widgets_Feeds_Providers_IFeedResourceResponseFactory, content, reasonPhrase, statusCode)); 
        try 
        { 
        _inner = ComWrappersSupport.GetObjectReferenceForInterface(ptr, global::ABI.Microsoft.Windows.Widgets.Feeds.Providers.IFeedResourceResponseMethods.IID, false); 

        } 
        finally 
        { 
        MarshalInspectable<object>.DisposeAbi(ptr); 
        }

        ComWrappersSupport.RegisterObjectForInterface(this, ThisPtr);
        ComWrappersHelper.Init(_inner, false);
        }

        public static FeedResourceResponse FromAbi(IntPtr thisPtr)
        {
            if (thisPtr == IntPtr.Zero) return null;
            return MarshalInspectable<FeedResourceResponse>.FromAbi(thisPtr);
        }

        internal FeedResourceResponse(IObjectReference objRef)
        {
            _inner = objRef.As(global::ABI.Microsoft.Windows.Widgets.Feeds.Providers.IFeedResourceResponseMethods.IID);

        }


        public static bool operator ==(FeedResourceResponse x, FeedResourceResponse y) => (x?.ThisPtr ?? IntPtr.Zero) == (y?.ThisPtr ?? IntPtr.Zero);
        public static bool operator !=(FeedResourceResponse x, FeedResourceResponse y) => !(x == y);
        public bool Equals(FeedResourceResponse other) => this == other;
        public override bool Equals(object obj) => obj is FeedResourceResponse that && this == that;
        public override int GetHashCode() => ThisPtr.GetHashCode();


        bool IWinRTObject.HasUnwrappableNativeObject => true;
        IObjectReference IWinRTObject.NativeObject => _inner;
        private volatile global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> _queryInterfaceCache;
        private global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> MakeQueryInterfaceCache()
        {
            global::System.Threading.Interlocked.CompareExchange(ref _queryInterfaceCache, new global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference>(), null); 
            return _queryInterfaceCache;
        }
        global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> IWinRTObject.QueryInterfaceCache => _queryInterfaceCache ?? MakeQueryInterfaceCache();
        private volatile global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> _additionalTypeData;
        private global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> MakeAdditionalTypeData()
        {
            global::System.Threading.Interlocked.CompareExchange(ref _additionalTypeData, new global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object>(), null); 
            return _additionalTypeData;
        }
        global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> IWinRTObject.AdditionalTypeData => _additionalTypeData ?? MakeAdditionalTypeData();

        private struct InterfaceTag<I>{};


        public global::Windows.Storage.Streams.IRandomAccessStreamReference Content => global::ABI.Microsoft.Windows.Widgets.Feeds.Providers.IFeedResourceResponseMethods.get_Content(_objRef_global__Microsoft_Windows_Widgets_Feeds_Providers_IFeedResourceResponse);

        public global::System.Collections.Generic.IEnumerable<global::System.Collections.Generic.KeyValuePair<string, string>> Headers
        {
            get => global::ABI.Microsoft.Windows.Widgets.Feeds.Providers.IFeedResourceResponseMethods.get_Headers(_objRef_global__Microsoft_Windows_Widgets_Feeds_Providers_IFeedResourceResponse);
            set => global::ABI.Microsoft.Windows.Widgets.Feeds.Providers.IFeedResourceResponseMethods.set_Headers(_objRef_global__Microsoft_Windows_Widgets_Feeds_Providers_IFeedResourceResponse, value);
        }

        public string ReasonPhrase => global::ABI.Microsoft.Windows.Widgets.Feeds.Providers.IFeedResourceResponseMethods.get_ReasonPhrase(_objRef_global__Microsoft_Windows_Widgets_Feeds_Providers_IFeedResourceResponse);

        public int StatusCode => global::ABI.Microsoft.Windows.Widgets.Feeds.Providers.IFeedResourceResponseMethods.get_StatusCode(_objRef_global__Microsoft_Windows_Widgets_Feeds_Providers_IFeedResourceResponse);

        private bool IsOverridableInterface(Guid iid) => false;

        global::System.Runtime.InteropServices.CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(ref Guid iid, out IntPtr ppv)
        {
            ppv = IntPtr.Zero;
            if (IsOverridableInterface(iid) || global::WinRT.Interop.IID.IID_IInspectable == iid)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
            }

            if (((IWinRTObject)this).NativeObject.TryAs(iid, out ppv) >= 0)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.Handled;
            }

            return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
        }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.Windows.Widgets")][Guid("DC2B0CD8-7936-5346-9371-B21484C7D859")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.Windows.Widgets.Feeds.Providers.ICustomQueryParametersRequestedArgs))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.Windows.Widgets.WidgetContract), 262144u)]
    internal interface ICustomQueryParametersRequestedArgs
    {
        string FeedProviderDefinitionId { get; }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.Windows.Widgets")][Guid("753F1177-4909-568A-B070-98A3139205EC")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.Windows.Widgets.Feeds.Providers.ICustomQueryParametersUpdateOptions))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.Windows.Widgets.WidgetContract), 262144u)]
    internal interface ICustomQueryParametersUpdateOptions
    {
        string CustomQueryParameters { get; }
        string FeedProviderDefinitionId { get; }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.Windows.Widgets")][Guid("34E318CD-3884-53C0-911C-225F32228FAE")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.Windows.Widgets.Feeds.Providers.ICustomQueryParametersUpdateOptionsFactory))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.Windows.Widgets.WidgetContract), 262144u)]
    internal interface ICustomQueryParametersUpdateOptionsFactory
    {
        CustomQueryParametersUpdateOptions CreateInstance(string feedProviderDefinitionId, string customQueryParameters);
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.Windows.Widgets")][Guid("3C0E3D65-ED47-5B8A-B650-39A7EDF18942")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.Windows.Widgets.Feeds.Providers.IFeedAnalyticsInfoReportedArgs))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.Windows.Widgets.WidgetContract), 327680u)]
    internal interface IFeedAnalyticsInfoReportedArgs
    {
        string AnalyticsJson { get; }
        string FeedDefinitionId { get; }
        string FeedProviderDefinitionId { get; }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.Windows.Widgets")][Guid("5D44AE2A-072C-4DF9-9FE5-34D5D2E9FF63")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.Windows.Widgets.Feeds.Providers.IFeedAnnouncementInvokedTarget))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.Windows.Widgets.WidgetContract), 327680u)]
    public interface IFeedAnnouncementInvokedTarget
    {
        void OnAnnouncementInvoked(global::Microsoft.Windows.Widgets.Notifications.FeedAnnouncementInvokedArgs args);
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.Windows.Widgets")][Guid("95300612-ACA7-53C0-9CF6-D803689132C1")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.Windows.Widgets.Feeds.Providers.IFeedDisabledArgs))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.Windows.Widgets.WidgetContract), 262144u)]
    internal interface IFeedDisabledArgs
    {
        string FeedDefinitionId { get; }
        string FeedProviderDefinitionId { get; }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.Windows.Widgets")][Guid("EFF4B2D7-7347-5969-A77D-CAC433F0FDAE")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.Windows.Widgets.Feeds.Providers.IFeedEnabledArgs))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.Windows.Widgets.WidgetContract), 262144u)]
    internal interface IFeedEnabledArgs
    {
        string FeedDefinitionId { get; }
        string FeedProviderDefinitionId { get; }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.Windows.Widgets")][Guid("62DE018C-161E-52D0-9DBE-AEC106FB6600")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.Windows.Widgets.Feeds.Providers.IFeedErrorInfoReportedArgs))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.Windows.Widgets.WidgetContract), 327680u)]
    internal interface IFeedErrorInfoReportedArgs
    {
        string ErrorJson { get; }
        string FeedDefinitionId { get; }
        string FeedProviderDefinitionId { get; }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.Windows.Widgets")][Guid("87DF6A84-15AA-45CB-8911-5CAFAB57F723")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.Windows.Widgets.Feeds.Providers.IFeedManager))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.Windows.Widgets.WidgetContract), 262144u)]
    public interface IFeedManager
    {
        FeedProviderInfo[] GetEnabledFeedProviders();
        void SetCustomQueryParameters(CustomQueryParametersUpdateOptions options);
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.Windows.Widgets")][Guid("5838300A-A069-455D-9943-BA078ADA00D8")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.Windows.Widgets.Feeds.Providers.IFeedManager2))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.Windows.Widgets.WidgetContract), 327680u)]
    public interface IFeedManager2
    {
        void SendMessageToContent(string feedProviderDefinitionId, string feedDefinitionId, string message);
        void TryShowAnnouncement(string feedProviderDefinitionId, string feedDefinitionId, global::Microsoft.Windows.Widgets.Notifications.FeedAnnouncement announcement);
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.Windows.Widgets")][Guid("A6AF915B-0CDC-46F1-A4D6-10D8C644984A")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.Windows.Widgets.Feeds.Providers.IFeedManager3))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.Windows.Widgets.WidgetContract), 458752u)]
    public interface IFeedManager3
    {
        void TryRemoveAnnouncementById(string feedProviderDefinitionId, string feedDefinitionId, string announcementId);
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.Windows.Widgets")][Guid("4BAF5174-77D6-5E2A-94EA-4F14CCDB1F2C")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.Windows.Widgets.Feeds.Providers.IFeedManagerStatics))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.Windows.Widgets.WidgetContract), 262144u)]
    internal interface IFeedManagerStatics
    {
        FeedManager GetDefault();
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.Windows.Widgets")][Guid("4ED6ECF9-4C74-5A0B-AE04-BEF6DD776F8A")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.Windows.Widgets.Feeds.Providers.IFeedMessageReceivedArgs))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.Windows.Widgets.WidgetContract), 327680u)]
    internal interface IFeedMessageReceivedArgs
    {
        string FeedDefinitionId { get; }
        string FeedProviderDefinitionId { get; }
        string Message { get; }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.Windows.Widgets")][Guid("7293A12B-0329-458D-AC25-5332BE478FDE")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.Windows.Widgets.Feeds.Providers.IFeedProvider))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.Windows.Widgets.WidgetContract), 262144u)]
    public interface IFeedProvider
    {
        void OnFeedProviderEnabled(FeedProviderEnabledArgs args);
        void OnFeedProviderDisabled(FeedProviderDisabledArgs args);
        void OnFeedEnabled(FeedEnabledArgs args);
        void OnFeedDisabled(FeedDisabledArgs args);
        void OnCustomQueryParametersRequested(CustomQueryParametersRequestedArgs args);
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.Windows.Widgets")][Guid("F6885791-3085-4BD7-9CB1-4F1354C3A687")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.Windows.Widgets.Feeds.Providers.IFeedProviderAnalytics))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.Windows.Widgets.WidgetContract), 327680u)]
    public interface IFeedProviderAnalytics
    {
        void OnAnalyticsInfoReported(FeedAnalyticsInfoReportedArgs args);
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.Windows.Widgets")][Guid("19B65AEC-E01D-5E8C-AB5F-324212E7CD30")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.Windows.Widgets.Feeds.Providers.IFeedProviderDisabledArgs))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.Windows.Widgets.WidgetContract), 262144u)]
    internal interface IFeedProviderDisabledArgs
    {
        string FeedProviderDefinitionId { get; }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.Windows.Widgets")][Guid("821FC9AF-0DE6-5A9B-9AE6-E179117B40E4")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.Windows.Widgets.Feeds.Providers.IFeedProviderEnabledArgs))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.Windows.Widgets.WidgetContract), 262144u)]
    internal interface IFeedProviderEnabledArgs
    {
        string FeedProviderDefinitionId { get; }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.Windows.Widgets")][Guid("6611E00A-D86C-49A3-9381-B7DA67EE62DC")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.Windows.Widgets.Feeds.Providers.IFeedProviderErrors))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.Windows.Widgets.WidgetContract), 327680u)]
    public interface IFeedProviderErrors
    {
        void OnErrorInfoReported(FeedErrorInfoReportedArgs args);
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.Windows.Widgets")][Guid("73C37049-3C03-5896-8532-F9DFDAEB723F")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.Windows.Widgets.Feeds.Providers.IFeedProviderInfo))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.Windows.Widgets.WidgetContract), 262144u)]
    internal interface IFeedProviderInfo
    {
        string[] EnabledFeedDefinitionIds { get; }
        string FeedProviderDefinitionId { get; }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.Windows.Widgets")][Guid("60C2442A-4C9D-4880-BA26-CACA9E567DD4")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.Windows.Widgets.Feeds.Providers.IFeedProviderMessage))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.Windows.Widgets.WidgetContract), 327680u)]
    public interface IFeedProviderMessage
    {
        void OnMessageReceived(FeedMessageReceivedArgs args);
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.Windows.Widgets")][Guid("E1B6266D-88A0-416C-9440-E341CB047CD3")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.Windows.Widgets.Feeds.Providers.IFeedResourceProvider))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.Windows.Widgets.WidgetContract), 327680u)]
    public interface IFeedResourceProvider
    {
        void OnResourceRequested(FeedResourceRequestedArgs args);
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.Windows.Widgets")][Guid("E62E479C-E21F-5863-B4C9-DF1BE2227981")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.Windows.Widgets.Feeds.Providers.IFeedResourceRequest))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.Windows.Widgets.WidgetContract), 327680u)]
    internal interface IFeedResourceRequest
    {
        global::Windows.Storage.Streams.IRandomAccessStreamReference Content { get; set; }
        global::Windows.Foundation.Collections.StringMap Headers { get; set; }
        string Method { get; set; }
        string Uri { get; }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.Windows.Widgets")][Guid("360EB709-0BC9-52C1-9C70-3C7D413173D8")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.Windows.Widgets.Feeds.Providers.IFeedResourceRequestedArgs))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.Windows.Widgets.WidgetContract), 327680u)]
    internal interface IFeedResourceRequestedArgs
    {
        global::Windows.Foundation.Deferral GetDeferral();
        string FeedDefinitionId { get; }
        string FeedProviderDefinitionId { get; }
        FeedResourceRequest Request { get; }
        FeedResourceResponse Response { get; set; }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.Windows.Widgets")][Guid("F831824E-7AEF-53FC-B7EE-32ADE675A3AD")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.Windows.Widgets.Feeds.Providers.IFeedResourceResponse))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.Windows.Widgets.WidgetContract), 327680u)]
    internal interface IFeedResourceResponse
    {
        global::Windows.Storage.Streams.IRandomAccessStreamReference Content { get; }
        global::System.Collections.Generic.IEnumerable<global::System.Collections.Generic.KeyValuePair<string, string>> Headers { get; set; }
        string ReasonPhrase { get; }
        int StatusCode { get; }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.Windows.Widgets")][Guid("DB01690D-2547-5D7A-B625-D1629F443C5C")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.Windows.Widgets.Feeds.Providers.IFeedResourceResponseFactory))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.Windows.Widgets.WidgetContract), 327680u)]
    internal interface IFeedResourceResponseFactory
    {
        FeedResourceResponse CreateInstance(global::Windows.Storage.Streams.IRandomAccessStreamReference content, string reasonPhrase, int statusCode);
    }
}

#pragma warning disable CA1416
namespace ABI.Microsoft.Windows.Widgets.Feeds.Providers
{
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    public struct CustomQueryParametersRequestedArgs
    {

        public static IObjectReference CreateMarshaler(global::Microsoft.Windows.Widgets.Feeds.Providers.CustomQueryParametersRequestedArgs obj) => obj is null ? null : MarshalInspectable<global::Microsoft.Windows.Widgets.Feeds.Providers.CustomQueryParametersRequestedArgs>.CreateMarshaler<IUnknownVftbl>(obj, global::ABI.Microsoft.Windows.Widgets.Feeds.Providers.ICustomQueryParametersRequestedArgsMethods.IID);
        public static ObjectReferenceValue CreateMarshaler2(global::Microsoft.Windows.Widgets.Feeds.Providers.CustomQueryParametersRequestedArgs obj) => MarshalInspectable<object>.CreateMarshaler2(obj, global::ABI.Microsoft.Windows.Widgets.Feeds.Providers.ICustomQueryParametersRequestedArgsMethods.IID);
        public static IntPtr GetAbi(IObjectReference value) => value is null ? IntPtr.Zero : MarshalInterfaceHelper<object>.GetAbi(value);
        public static global::Microsoft.Windows.Widgets.Feeds.Providers.CustomQueryParametersRequestedArgs FromAbi(IntPtr thisPtr) => global::Microsoft.Windows.Widgets.Feeds.Providers.CustomQueryParametersRequestedArgs.FromAbi(thisPtr);
        public static IntPtr FromManaged(global::Microsoft.Windows.Widgets.Feeds.Providers.CustomQueryParametersRequestedArgs obj) => obj is null ? IntPtr.Zero : CreateMarshaler2(obj).Detach();
        public static unsafe MarshalInterfaceHelper<global::Microsoft.Windows.Widgets.Feeds.Providers.CustomQueryParametersRequestedArgs>.MarshalerArray CreateMarshalerArray(global::Microsoft.Windows.Widgets.Feeds.Providers.CustomQueryParametersRequestedArgs[] array) => MarshalInterfaceHelper<global::Microsoft.Windows.Widgets.Feeds.Providers.CustomQueryParametersRequestedArgs>.CreateMarshalerArray2(array, (o) => CreateMarshaler2(o));
        public static (int length, IntPtr data) GetAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.Windows.Widgets.Feeds.Providers.CustomQueryParametersRequestedArgs>.GetAbiArray(box);
        public static unsafe global::Microsoft.Windows.Widgets.Feeds.Providers.CustomQueryParametersRequestedArgs[] FromAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.Windows.Widgets.Feeds.Providers.CustomQueryParametersRequestedArgs>.FromAbiArray(box, FromAbi);
        public static void CopyAbiArray(global::Microsoft.Windows.Widgets.Feeds.Providers.CustomQueryParametersRequestedArgs[] array, object box) => MarshalInterfaceHelper<global::Microsoft.Windows.Widgets.Feeds.Providers.CustomQueryParametersRequestedArgs>.CopyAbiArray(array, box, FromAbi);
        public static (int length, IntPtr data) FromManagedArray(global::Microsoft.Windows.Widgets.Feeds.Providers.CustomQueryParametersRequestedArgs[] array) => MarshalInterfaceHelper<global::Microsoft.Windows.Widgets.Feeds.Providers.CustomQueryParametersRequestedArgs>.FromManagedArray(array, (o) => FromManaged(o));
        public static void DisposeMarshaler(IObjectReference value) => MarshalInspectable<object>.DisposeMarshaler(value);
        public static void DisposeMarshalerArray(MarshalInterfaceHelper<global::Microsoft.Windows.Widgets.Feeds.Providers.CustomQueryParametersRequestedArgs>.MarshalerArray array) => MarshalInterfaceHelper<global::Microsoft.Windows.Widgets.Feeds.Providers.CustomQueryParametersRequestedArgs>.DisposeMarshalerArray(array);
        public static void DisposeAbi(IntPtr abi) => MarshalInspectable<object>.DisposeAbi(abi);
        public static unsafe void DisposeAbiArray(object box) => MarshalInspectable<object>.DisposeAbiArray(box);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    internal sealed class CustomQueryParametersRequestedArgsRcwFactoryAttribute : global::WinRT.WinRTImplementationTypeRcwFactoryAttribute
    {
        public override object CreateInstance(global::WinRT.IInspectable inspectable)
            => new global::Microsoft.Windows.Widgets.Feeds.Providers.CustomQueryParametersRequestedArgs(inspectable.ObjRef);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    public struct CustomQueryParametersUpdateOptions
    {

        public static IObjectReference CreateMarshaler(global::Microsoft.Windows.Widgets.Feeds.Providers.CustomQueryParametersUpdateOptions obj) => obj is null ? null : MarshalInspectable<global::Microsoft.Windows.Widgets.Feeds.Providers.CustomQueryParametersUpdateOptions>.CreateMarshaler<IUnknownVftbl>(obj, global::ABI.Microsoft.Windows.Widgets.Feeds.Providers.ICustomQueryParametersUpdateOptionsMethods.IID);
        public static ObjectReferenceValue CreateMarshaler2(global::Microsoft.Windows.Widgets.Feeds.Providers.CustomQueryParametersUpdateOptions obj) => MarshalInspectable<object>.CreateMarshaler2(obj, global::ABI.Microsoft.Windows.Widgets.Feeds.Providers.ICustomQueryParametersUpdateOptionsMethods.IID);
        public static IntPtr GetAbi(IObjectReference value) => value is null ? IntPtr.Zero : MarshalInterfaceHelper<object>.GetAbi(value);
        public static global::Microsoft.Windows.Widgets.Feeds.Providers.CustomQueryParametersUpdateOptions FromAbi(IntPtr thisPtr) => global::Microsoft.Windows.Widgets.Feeds.Providers.CustomQueryParametersUpdateOptions.FromAbi(thisPtr);
        public static IntPtr FromManaged(global::Microsoft.Windows.Widgets.Feeds.Providers.CustomQueryParametersUpdateOptions obj) => obj is null ? IntPtr.Zero : CreateMarshaler2(obj).Detach();
        public static unsafe MarshalInterfaceHelper<global::Microsoft.Windows.Widgets.Feeds.Providers.CustomQueryParametersUpdateOptions>.MarshalerArray CreateMarshalerArray(global::Microsoft.Windows.Widgets.Feeds.Providers.CustomQueryParametersUpdateOptions[] array) => MarshalInterfaceHelper<global::Microsoft.Windows.Widgets.Feeds.Providers.CustomQueryParametersUpdateOptions>.CreateMarshalerArray2(array, (o) => CreateMarshaler2(o));
        public static (int length, IntPtr data) GetAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.Windows.Widgets.Feeds.Providers.CustomQueryParametersUpdateOptions>.GetAbiArray(box);
        public static unsafe global::Microsoft.Windows.Widgets.Feeds.Providers.CustomQueryParametersUpdateOptions[] FromAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.Windows.Widgets.Feeds.Providers.CustomQueryParametersUpdateOptions>.FromAbiArray(box, FromAbi);
        public static void CopyAbiArray(global::Microsoft.Windows.Widgets.Feeds.Providers.CustomQueryParametersUpdateOptions[] array, object box) => MarshalInterfaceHelper<global::Microsoft.Windows.Widgets.Feeds.Providers.CustomQueryParametersUpdateOptions>.CopyAbiArray(array, box, FromAbi);
        public static (int length, IntPtr data) FromManagedArray(global::Microsoft.Windows.Widgets.Feeds.Providers.CustomQueryParametersUpdateOptions[] array) => MarshalInterfaceHelper<global::Microsoft.Windows.Widgets.Feeds.Providers.CustomQueryParametersUpdateOptions>.FromManagedArray(array, (o) => FromManaged(o));
        public static void DisposeMarshaler(IObjectReference value) => MarshalInspectable<object>.DisposeMarshaler(value);
        public static void DisposeMarshalerArray(MarshalInterfaceHelper<global::Microsoft.Windows.Widgets.Feeds.Providers.CustomQueryParametersUpdateOptions>.MarshalerArray array) => MarshalInterfaceHelper<global::Microsoft.Windows.Widgets.Feeds.Providers.CustomQueryParametersUpdateOptions>.DisposeMarshalerArray(array);
        public static void DisposeAbi(IntPtr abi) => MarshalInspectable<object>.DisposeAbi(abi);
        public static unsafe void DisposeAbiArray(object box) => MarshalInspectable<object>.DisposeAbiArray(box);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    internal sealed class CustomQueryParametersUpdateOptionsRcwFactoryAttribute : global::WinRT.WinRTImplementationTypeRcwFactoryAttribute
    {
        public override object CreateInstance(global::WinRT.IInspectable inspectable)
            => new global::Microsoft.Windows.Widgets.Feeds.Providers.CustomQueryParametersUpdateOptions(inspectable.ObjRef);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    public struct FeedAnalyticsInfoReportedArgs
    {

        public static IObjectReference CreateMarshaler(global::Microsoft.Windows.Widgets.Feeds.Providers.FeedAnalyticsInfoReportedArgs obj) => obj is null ? null : MarshalInspectable<global::Microsoft.Windows.Widgets.Feeds.Providers.FeedAnalyticsInfoReportedArgs>.CreateMarshaler<IUnknownVftbl>(obj, global::ABI.Microsoft.Windows.Widgets.Feeds.Providers.IFeedAnalyticsInfoReportedArgsMethods.IID);
        public static ObjectReferenceValue CreateMarshaler2(global::Microsoft.Windows.Widgets.Feeds.Providers.FeedAnalyticsInfoReportedArgs obj) => MarshalInspectable<object>.CreateMarshaler2(obj, global::ABI.Microsoft.Windows.Widgets.Feeds.Providers.IFeedAnalyticsInfoReportedArgsMethods.IID);
        public static IntPtr GetAbi(IObjectReference value) => value is null ? IntPtr.Zero : MarshalInterfaceHelper<object>.GetAbi(value);
        public static global::Microsoft.Windows.Widgets.Feeds.Providers.FeedAnalyticsInfoReportedArgs FromAbi(IntPtr thisPtr) => global::Microsoft.Windows.Widgets.Feeds.Providers.FeedAnalyticsInfoReportedArgs.FromAbi(thisPtr);
        public static IntPtr FromManaged(global::Microsoft.Windows.Widgets.Feeds.Providers.FeedAnalyticsInfoReportedArgs obj) => obj is null ? IntPtr.Zero : CreateMarshaler2(obj).Detach();
        public static unsafe MarshalInterfaceHelper<global::Microsoft.Windows.Widgets.Feeds.Providers.FeedAnalyticsInfoReportedArgs>.MarshalerArray CreateMarshalerArray(global::Microsoft.Windows.Widgets.Feeds.Providers.FeedAnalyticsInfoReportedArgs[] array) => MarshalInterfaceHelper<global::Microsoft.Windows.Widgets.Feeds.Providers.FeedAnalyticsInfoReportedArgs>.CreateMarshalerArray2(array, (o) => CreateMarshaler2(o));
        public static (int length, IntPtr data) GetAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.Windows.Widgets.Feeds.Providers.FeedAnalyticsInfoReportedArgs>.GetAbiArray(box);
        public static unsafe global::Microsoft.Windows.Widgets.Feeds.Providers.FeedAnalyticsInfoReportedArgs[] FromAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.Windows.Widgets.Feeds.Providers.FeedAnalyticsInfoReportedArgs>.FromAbiArray(box, FromAbi);
        public static void CopyAbiArray(global::Microsoft.Windows.Widgets.Feeds.Providers.FeedAnalyticsInfoReportedArgs[] array, object box) => MarshalInterfaceHelper<global::Microsoft.Windows.Widgets.Feeds.Providers.FeedAnalyticsInfoReportedArgs>.CopyAbiArray(array, box, FromAbi);
        public static (int length, IntPtr data) FromManagedArray(global::Microsoft.Windows.Widgets.Feeds.Providers.FeedAnalyticsInfoReportedArgs[] array) => MarshalInterfaceHelper<global::Microsoft.Windows.Widgets.Feeds.Providers.FeedAnalyticsInfoReportedArgs>.FromManagedArray(array, (o) => FromManaged(o));
        public static void DisposeMarshaler(IObjectReference value) => MarshalInspectable<object>.DisposeMarshaler(value);
        public static void DisposeMarshalerArray(MarshalInterfaceHelper<global::Microsoft.Windows.Widgets.Feeds.Providers.FeedAnalyticsInfoReportedArgs>.MarshalerArray array) => MarshalInterfaceHelper<global::Microsoft.Windows.Widgets.Feeds.Providers.FeedAnalyticsInfoReportedArgs>.DisposeMarshalerArray(array);
        public static void DisposeAbi(IntPtr abi) => MarshalInspectable<object>.DisposeAbi(abi);
        public static unsafe void DisposeAbiArray(object box) => MarshalInspectable<object>.DisposeAbiArray(box);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    internal sealed class FeedAnalyticsInfoReportedArgsRcwFactoryAttribute : global::WinRT.WinRTImplementationTypeRcwFactoryAttribute
    {
        public override object CreateInstance(global::WinRT.IInspectable inspectable)
            => new global::Microsoft.Windows.Widgets.Feeds.Providers.FeedAnalyticsInfoReportedArgs(inspectable.ObjRef);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    public struct FeedDisabledArgs
    {

        public static IObjectReference CreateMarshaler(global::Microsoft.Windows.Widgets.Feeds.Providers.FeedDisabledArgs obj) => obj is null ? null : MarshalInspectable<global::Microsoft.Windows.Widgets.Feeds.Providers.FeedDisabledArgs>.CreateMarshaler<IUnknownVftbl>(obj, global::ABI.Microsoft.Windows.Widgets.Feeds.Providers.IFeedDisabledArgsMethods.IID);
        public static ObjectReferenceValue CreateMarshaler2(global::Microsoft.Windows.Widgets.Feeds.Providers.FeedDisabledArgs obj) => MarshalInspectable<object>.CreateMarshaler2(obj, global::ABI.Microsoft.Windows.Widgets.Feeds.Providers.IFeedDisabledArgsMethods.IID);
        public static IntPtr GetAbi(IObjectReference value) => value is null ? IntPtr.Zero : MarshalInterfaceHelper<object>.GetAbi(value);
        public static global::Microsoft.Windows.Widgets.Feeds.Providers.FeedDisabledArgs FromAbi(IntPtr thisPtr) => global::Microsoft.Windows.Widgets.Feeds.Providers.FeedDisabledArgs.FromAbi(thisPtr);
        public static IntPtr FromManaged(global::Microsoft.Windows.Widgets.Feeds.Providers.FeedDisabledArgs obj) => obj is null ? IntPtr.Zero : CreateMarshaler2(obj).Detach();
        public static unsafe MarshalInterfaceHelper<global::Microsoft.Windows.Widgets.Feeds.Providers.FeedDisabledArgs>.MarshalerArray CreateMarshalerArray(global::Microsoft.Windows.Widgets.Feeds.Providers.FeedDisabledArgs[] array) => MarshalInterfaceHelper<global::Microsoft.Windows.Widgets.Feeds.Providers.FeedDisabledArgs>.CreateMarshalerArray2(array, (o) => CreateMarshaler2(o));
        public static (int length, IntPtr data) GetAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.Windows.Widgets.Feeds.Providers.FeedDisabledArgs>.GetAbiArray(box);
        public static unsafe global::Microsoft.Windows.Widgets.Feeds.Providers.FeedDisabledArgs[] FromAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.Windows.Widgets.Feeds.Providers.FeedDisabledArgs>.FromAbiArray(box, FromAbi);
        public static void CopyAbiArray(global::Microsoft.Windows.Widgets.Feeds.Providers.FeedDisabledArgs[] array, object box) => MarshalInterfaceHelper<global::Microsoft.Windows.Widgets.Feeds.Providers.FeedDisabledArgs>.CopyAbiArray(array, box, FromAbi);
        public static (int length, IntPtr data) FromManagedArray(global::Microsoft.Windows.Widgets.Feeds.Providers.FeedDisabledArgs[] array) => MarshalInterfaceHelper<global::Microsoft.Windows.Widgets.Feeds.Providers.FeedDisabledArgs>.FromManagedArray(array, (o) => FromManaged(o));
        public static void DisposeMarshaler(IObjectReference value) => MarshalInspectable<object>.DisposeMarshaler(value);
        public static void DisposeMarshalerArray(MarshalInterfaceHelper<global::Microsoft.Windows.Widgets.Feeds.Providers.FeedDisabledArgs>.MarshalerArray array) => MarshalInterfaceHelper<global::Microsoft.Windows.Widgets.Feeds.Providers.FeedDisabledArgs>.DisposeMarshalerArray(array);
        public static void DisposeAbi(IntPtr abi) => MarshalInspectable<object>.DisposeAbi(abi);
        public static unsafe void DisposeAbiArray(object box) => MarshalInspectable<object>.DisposeAbiArray(box);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    internal sealed class FeedDisabledArgsRcwFactoryAttribute : global::WinRT.WinRTImplementationTypeRcwFactoryAttribute
    {
        public override object CreateInstance(global::WinRT.IInspectable inspectable)
            => new global::Microsoft.Windows.Widgets.Feeds.Providers.FeedDisabledArgs(inspectable.ObjRef);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    public struct FeedEnabledArgs
    {

        public static IObjectReference CreateMarshaler(global::Microsoft.Windows.Widgets.Feeds.Providers.FeedEnabledArgs obj) => obj is null ? null : MarshalInspectable<global::Microsoft.Windows.Widgets.Feeds.Providers.FeedEnabledArgs>.CreateMarshaler<IUnknownVftbl>(obj, global::ABI.Microsoft.Windows.Widgets.Feeds.Providers.IFeedEnabledArgsMethods.IID);
        public static ObjectReferenceValue CreateMarshaler2(global::Microsoft.Windows.Widgets.Feeds.Providers.FeedEnabledArgs obj) => MarshalInspectable<object>.CreateMarshaler2(obj, global::ABI.Microsoft.Windows.Widgets.Feeds.Providers.IFeedEnabledArgsMethods.IID);
        public static IntPtr GetAbi(IObjectReference value) => value is null ? IntPtr.Zero : MarshalInterfaceHelper<object>.GetAbi(value);
        public static global::Microsoft.Windows.Widgets.Feeds.Providers.FeedEnabledArgs FromAbi(IntPtr thisPtr) => global::Microsoft.Windows.Widgets.Feeds.Providers.FeedEnabledArgs.FromAbi(thisPtr);
        public static IntPtr FromManaged(global::Microsoft.Windows.Widgets.Feeds.Providers.FeedEnabledArgs obj) => obj is null ? IntPtr.Zero : CreateMarshaler2(obj).Detach();
        public static unsafe MarshalInterfaceHelper<global::Microsoft.Windows.Widgets.Feeds.Providers.FeedEnabledArgs>.MarshalerArray CreateMarshalerArray(global::Microsoft.Windows.Widgets.Feeds.Providers.FeedEnabledArgs[] array) => MarshalInterfaceHelper<global::Microsoft.Windows.Widgets.Feeds.Providers.FeedEnabledArgs>.CreateMarshalerArray2(array, (o) => CreateMarshaler2(o));
        public static (int length, IntPtr data) GetAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.Windows.Widgets.Feeds.Providers.FeedEnabledArgs>.GetAbiArray(box);
        public static unsafe global::Microsoft.Windows.Widgets.Feeds.Providers.FeedEnabledArgs[] FromAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.Windows.Widgets.Feeds.Providers.FeedEnabledArgs>.FromAbiArray(box, FromAbi);
        public static void CopyAbiArray(global::Microsoft.Windows.Widgets.Feeds.Providers.FeedEnabledArgs[] array, object box) => MarshalInterfaceHelper<global::Microsoft.Windows.Widgets.Feeds.Providers.FeedEnabledArgs>.CopyAbiArray(array, box, FromAbi);
        public static (int length, IntPtr data) FromManagedArray(global::Microsoft.Windows.Widgets.Feeds.Providers.FeedEnabledArgs[] array) => MarshalInterfaceHelper<global::Microsoft.Windows.Widgets.Feeds.Providers.FeedEnabledArgs>.FromManagedArray(array, (o) => FromManaged(o));
        public static void DisposeMarshaler(IObjectReference value) => MarshalInspectable<object>.DisposeMarshaler(value);
        public static void DisposeMarshalerArray(MarshalInterfaceHelper<global::Microsoft.Windows.Widgets.Feeds.Providers.FeedEnabledArgs>.MarshalerArray array) => MarshalInterfaceHelper<global::Microsoft.Windows.Widgets.Feeds.Providers.FeedEnabledArgs>.DisposeMarshalerArray(array);
        public static void DisposeAbi(IntPtr abi) => MarshalInspectable<object>.DisposeAbi(abi);
        public static unsafe void DisposeAbiArray(object box) => MarshalInspectable<object>.DisposeAbiArray(box);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    internal sealed class FeedEnabledArgsRcwFactoryAttribute : global::WinRT.WinRTImplementationTypeRcwFactoryAttribute
    {
        public override object CreateInstance(global::WinRT.IInspectable inspectable)
            => new global::Microsoft.Windows.Widgets.Feeds.Providers.FeedEnabledArgs(inspectable.ObjRef);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    public struct FeedErrorInfoReportedArgs
    {

        public static IObjectReference CreateMarshaler(global::Microsoft.Windows.Widgets.Feeds.Providers.FeedErrorInfoReportedArgs obj) => obj is null ? null : MarshalInspectable<global::Microsoft.Windows.Widgets.Feeds.Providers.FeedErrorInfoReportedArgs>.CreateMarshaler<IUnknownVftbl>(obj, global::ABI.Microsoft.Windows.Widgets.Feeds.Providers.IFeedErrorInfoReportedArgsMethods.IID);
        public static ObjectReferenceValue CreateMarshaler2(global::Microsoft.Windows.Widgets.Feeds.Providers.FeedErrorInfoReportedArgs obj) => MarshalInspectable<object>.CreateMarshaler2(obj, global::ABI.Microsoft.Windows.Widgets.Feeds.Providers.IFeedErrorInfoReportedArgsMethods.IID);
        public static IntPtr GetAbi(IObjectReference value) => value is null ? IntPtr.Zero : MarshalInterfaceHelper<object>.GetAbi(value);
        public static global::Microsoft.Windows.Widgets.Feeds.Providers.FeedErrorInfoReportedArgs FromAbi(IntPtr thisPtr) => global::Microsoft.Windows.Widgets.Feeds.Providers.FeedErrorInfoReportedArgs.FromAbi(thisPtr);
        public static IntPtr FromManaged(global::Microsoft.Windows.Widgets.Feeds.Providers.FeedErrorInfoReportedArgs obj) => obj is null ? IntPtr.Zero : CreateMarshaler2(obj).Detach();
        public static unsafe MarshalInterfaceHelper<global::Microsoft.Windows.Widgets.Feeds.Providers.FeedErrorInfoReportedArgs>.MarshalerArray CreateMarshalerArray(global::Microsoft.Windows.Widgets.Feeds.Providers.FeedErrorInfoReportedArgs[] array) => MarshalInterfaceHelper<global::Microsoft.Windows.Widgets.Feeds.Providers.FeedErrorInfoReportedArgs>.CreateMarshalerArray2(array, (o) => CreateMarshaler2(o));
        public static (int length, IntPtr data) GetAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.Windows.Widgets.Feeds.Providers.FeedErrorInfoReportedArgs>.GetAbiArray(box);
        public static unsafe global::Microsoft.Windows.Widgets.Feeds.Providers.FeedErrorInfoReportedArgs[] FromAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.Windows.Widgets.Feeds.Providers.FeedErrorInfoReportedArgs>.FromAbiArray(box, FromAbi);
        public static void CopyAbiArray(global::Microsoft.Windows.Widgets.Feeds.Providers.FeedErrorInfoReportedArgs[] array, object box) => MarshalInterfaceHelper<global::Microsoft.Windows.Widgets.Feeds.Providers.FeedErrorInfoReportedArgs>.CopyAbiArray(array, box, FromAbi);
        public static (int length, IntPtr data) FromManagedArray(global::Microsoft.Windows.Widgets.Feeds.Providers.FeedErrorInfoReportedArgs[] array) => MarshalInterfaceHelper<global::Microsoft.Windows.Widgets.Feeds.Providers.FeedErrorInfoReportedArgs>.FromManagedArray(array, (o) => FromManaged(o));
        public static void DisposeMarshaler(IObjectReference value) => MarshalInspectable<object>.DisposeMarshaler(value);
        public static void DisposeMarshalerArray(MarshalInterfaceHelper<global::Microsoft.Windows.Widgets.Feeds.Providers.FeedErrorInfoReportedArgs>.MarshalerArray array) => MarshalInterfaceHelper<global::Microsoft.Windows.Widgets.Feeds.Providers.FeedErrorInfoReportedArgs>.DisposeMarshalerArray(array);
        public static void DisposeAbi(IntPtr abi) => MarshalInspectable<object>.DisposeAbi(abi);
        public static unsafe void DisposeAbiArray(object box) => MarshalInspectable<object>.DisposeAbiArray(box);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    internal sealed class FeedErrorInfoReportedArgsRcwFactoryAttribute : global::WinRT.WinRTImplementationTypeRcwFactoryAttribute
    {
        public override object CreateInstance(global::WinRT.IInspectable inspectable)
            => new global::Microsoft.Windows.Widgets.Feeds.Providers.FeedErrorInfoReportedArgs(inspectable.ObjRef);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    public struct FeedManager
    {

        public static IObjectReference CreateMarshaler(global::Microsoft.Windows.Widgets.Feeds.Providers.FeedManager obj) => obj is null ? null : MarshalInterface<global::Microsoft.Windows.Widgets.Feeds.Providers.IFeedManager>.CreateMarshaler(obj);
        public static ObjectReferenceValue CreateMarshaler2(global::Microsoft.Windows.Widgets.Feeds.Providers.FeedManager obj) => MarshalInterface<global::Microsoft.Windows.Widgets.Feeds.Providers.IFeedManager>.CreateMarshaler2(obj, global::ABI.Microsoft.Windows.Widgets.Feeds.Providers.IFeedManagerMethods.IID);
        public static IntPtr GetAbi(IObjectReference value) => value is null ? IntPtr.Zero : MarshalInterfaceHelper<object>.GetAbi(value);
        public static global::Microsoft.Windows.Widgets.Feeds.Providers.FeedManager FromAbi(IntPtr thisPtr) => global::Microsoft.Windows.Widgets.Feeds.Providers.FeedManager.FromAbi(thisPtr);
        public static IntPtr FromManaged(global::Microsoft.Windows.Widgets.Feeds.Providers.FeedManager obj) => obj is null ? IntPtr.Zero : CreateMarshaler2(obj).Detach();
        public static unsafe MarshalInterfaceHelper<global::Microsoft.Windows.Widgets.Feeds.Providers.FeedManager>.MarshalerArray CreateMarshalerArray(global::Microsoft.Windows.Widgets.Feeds.Providers.FeedManager[] array) => MarshalInterfaceHelper<global::Microsoft.Windows.Widgets.Feeds.Providers.FeedManager>.CreateMarshalerArray2(array, (o) => CreateMarshaler2(o));
        public static (int length, IntPtr data) GetAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.Windows.Widgets.Feeds.Providers.FeedManager>.GetAbiArray(box);
        public static unsafe global::Microsoft.Windows.Widgets.Feeds.Providers.FeedManager[] FromAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.Windows.Widgets.Feeds.Providers.FeedManager>.FromAbiArray(box, FromAbi);
        public static void CopyAbiArray(global::Microsoft.Windows.Widgets.Feeds.Providers.FeedManager[] array, object box) => MarshalInterfaceHelper<global::Microsoft.Windows.Widgets.Feeds.Providers.FeedManager>.CopyAbiArray(array, box, FromAbi);
        public static (int length, IntPtr data) FromManagedArray(global::Microsoft.Windows.Widgets.Feeds.Providers.FeedManager[] array) => MarshalInterfaceHelper<global::Microsoft.Windows.Widgets.Feeds.Providers.FeedManager>.FromManagedArray(array, (o) => FromManaged(o));
        public static void DisposeMarshaler(IObjectReference value) => MarshalInspectable<object>.DisposeMarshaler(value);
        public static void DisposeMarshalerArray(MarshalInterfaceHelper<global::Microsoft.Windows.Widgets.Feeds.Providers.FeedManager>.MarshalerArray array) => MarshalInterfaceHelper<global::Microsoft.Windows.Widgets.Feeds.Providers.FeedManager>.DisposeMarshalerArray(array);
        public static void DisposeAbi(IntPtr abi) => MarshalInspectable<object>.DisposeAbi(abi);
        public static unsafe void DisposeAbiArray(object box) => MarshalInspectable<object>.DisposeAbiArray(box);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    internal sealed class FeedManagerRcwFactoryAttribute : global::WinRT.WinRTImplementationTypeRcwFactoryAttribute
    {
        public override object CreateInstance(global::WinRT.IInspectable inspectable)
            => new global::Microsoft.Windows.Widgets.Feeds.Providers.FeedManager(inspectable.ObjRef);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    public struct FeedMessageReceivedArgs
    {

        public static IObjectReference CreateMarshaler(global::Microsoft.Windows.Widgets.Feeds.Providers.FeedMessageReceivedArgs obj) => obj is null ? null : MarshalInspectable<global::Microsoft.Windows.Widgets.Feeds.Providers.FeedMessageReceivedArgs>.CreateMarshaler<IUnknownVftbl>(obj, global::ABI.Microsoft.Windows.Widgets.Feeds.Providers.IFeedMessageReceivedArgsMethods.IID);
        public static ObjectReferenceValue CreateMarshaler2(global::Microsoft.Windows.Widgets.Feeds.Providers.FeedMessageReceivedArgs obj) => MarshalInspectable<object>.CreateMarshaler2(obj, global::ABI.Microsoft.Windows.Widgets.Feeds.Providers.IFeedMessageReceivedArgsMethods.IID);
        public static IntPtr GetAbi(IObjectReference value) => value is null ? IntPtr.Zero : MarshalInterfaceHelper<object>.GetAbi(value);
        public static global::Microsoft.Windows.Widgets.Feeds.Providers.FeedMessageReceivedArgs FromAbi(IntPtr thisPtr) => global::Microsoft.Windows.Widgets.Feeds.Providers.FeedMessageReceivedArgs.FromAbi(thisPtr);
        public static IntPtr FromManaged(global::Microsoft.Windows.Widgets.Feeds.Providers.FeedMessageReceivedArgs obj) => obj is null ? IntPtr.Zero : CreateMarshaler2(obj).Detach();
        public static unsafe MarshalInterfaceHelper<global::Microsoft.Windows.Widgets.Feeds.Providers.FeedMessageReceivedArgs>.MarshalerArray CreateMarshalerArray(global::Microsoft.Windows.Widgets.Feeds.Providers.FeedMessageReceivedArgs[] array) => MarshalInterfaceHelper<global::Microsoft.Windows.Widgets.Feeds.Providers.FeedMessageReceivedArgs>.CreateMarshalerArray2(array, (o) => CreateMarshaler2(o));
        public static (int length, IntPtr data) GetAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.Windows.Widgets.Feeds.Providers.FeedMessageReceivedArgs>.GetAbiArray(box);
        public static unsafe global::Microsoft.Windows.Widgets.Feeds.Providers.FeedMessageReceivedArgs[] FromAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.Windows.Widgets.Feeds.Providers.FeedMessageReceivedArgs>.FromAbiArray(box, FromAbi);
        public static void CopyAbiArray(global::Microsoft.Windows.Widgets.Feeds.Providers.FeedMessageReceivedArgs[] array, object box) => MarshalInterfaceHelper<global::Microsoft.Windows.Widgets.Feeds.Providers.FeedMessageReceivedArgs>.CopyAbiArray(array, box, FromAbi);
        public static (int length, IntPtr data) FromManagedArray(global::Microsoft.Windows.Widgets.Feeds.Providers.FeedMessageReceivedArgs[] array) => MarshalInterfaceHelper<global::Microsoft.Windows.Widgets.Feeds.Providers.FeedMessageReceivedArgs>.FromManagedArray(array, (o) => FromManaged(o));
        public static void DisposeMarshaler(IObjectReference value) => MarshalInspectable<object>.DisposeMarshaler(value);
        public static void DisposeMarshalerArray(MarshalInterfaceHelper<global::Microsoft.Windows.Widgets.Feeds.Providers.FeedMessageReceivedArgs>.MarshalerArray array) => MarshalInterfaceHelper<global::Microsoft.Windows.Widgets.Feeds.Providers.FeedMessageReceivedArgs>.DisposeMarshalerArray(array);
        public static void DisposeAbi(IntPtr abi) => MarshalInspectable<object>.DisposeAbi(abi);
        public static unsafe void DisposeAbiArray(object box) => MarshalInspectable<object>.DisposeAbiArray(box);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    internal sealed class FeedMessageReceivedArgsRcwFactoryAttribute : global::WinRT.WinRTImplementationTypeRcwFactoryAttribute
    {
        public override object CreateInstance(global::WinRT.IInspectable inspectable)
            => new global::Microsoft.Windows.Widgets.Feeds.Providers.FeedMessageReceivedArgs(inspectable.ObjRef);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    public struct FeedProviderDisabledArgs
    {

        public static IObjectReference CreateMarshaler(global::Microsoft.Windows.Widgets.Feeds.Providers.FeedProviderDisabledArgs obj) => obj is null ? null : MarshalInspectable<global::Microsoft.Windows.Widgets.Feeds.Providers.FeedProviderDisabledArgs>.CreateMarshaler<IUnknownVftbl>(obj, global::ABI.Microsoft.Windows.Widgets.Feeds.Providers.IFeedProviderDisabledArgsMethods.IID);
        public static ObjectReferenceValue CreateMarshaler2(global::Microsoft.Windows.Widgets.Feeds.Providers.FeedProviderDisabledArgs obj) => MarshalInspectable<object>.CreateMarshaler2(obj, global::ABI.Microsoft.Windows.Widgets.Feeds.Providers.IFeedProviderDisabledArgsMethods.IID);
        public static IntPtr GetAbi(IObjectReference value) => value is null ? IntPtr.Zero : MarshalInterfaceHelper<object>.GetAbi(value);
        public static global::Microsoft.Windows.Widgets.Feeds.Providers.FeedProviderDisabledArgs FromAbi(IntPtr thisPtr) => global::Microsoft.Windows.Widgets.Feeds.Providers.FeedProviderDisabledArgs.FromAbi(thisPtr);
        public static IntPtr FromManaged(global::Microsoft.Windows.Widgets.Feeds.Providers.FeedProviderDisabledArgs obj) => obj is null ? IntPtr.Zero : CreateMarshaler2(obj).Detach();
        public static unsafe MarshalInterfaceHelper<global::Microsoft.Windows.Widgets.Feeds.Providers.FeedProviderDisabledArgs>.MarshalerArray CreateMarshalerArray(global::Microsoft.Windows.Widgets.Feeds.Providers.FeedProviderDisabledArgs[] array) => MarshalInterfaceHelper<global::Microsoft.Windows.Widgets.Feeds.Providers.FeedProviderDisabledArgs>.CreateMarshalerArray2(array, (o) => CreateMarshaler2(o));
        public static (int length, IntPtr data) GetAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.Windows.Widgets.Feeds.Providers.FeedProviderDisabledArgs>.GetAbiArray(box);
        public static unsafe global::Microsoft.Windows.Widgets.Feeds.Providers.FeedProviderDisabledArgs[] FromAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.Windows.Widgets.Feeds.Providers.FeedProviderDisabledArgs>.FromAbiArray(box, FromAbi);
        public static void CopyAbiArray(global::Microsoft.Windows.Widgets.Feeds.Providers.FeedProviderDisabledArgs[] array, object box) => MarshalInterfaceHelper<global::Microsoft.Windows.Widgets.Feeds.Providers.FeedProviderDisabledArgs>.CopyAbiArray(array, box, FromAbi);
        public static (int length, IntPtr data) FromManagedArray(global::Microsoft.Windows.Widgets.Feeds.Providers.FeedProviderDisabledArgs[] array) => MarshalInterfaceHelper<global::Microsoft.Windows.Widgets.Feeds.Providers.FeedProviderDisabledArgs>.FromManagedArray(array, (o) => FromManaged(o));
        public static void DisposeMarshaler(IObjectReference value) => MarshalInspectable<object>.DisposeMarshaler(value);
        public static void DisposeMarshalerArray(MarshalInterfaceHelper<global::Microsoft.Windows.Widgets.Feeds.Providers.FeedProviderDisabledArgs>.MarshalerArray array) => MarshalInterfaceHelper<global::Microsoft.Windows.Widgets.Feeds.Providers.FeedProviderDisabledArgs>.DisposeMarshalerArray(array);
        public static void DisposeAbi(IntPtr abi) => MarshalInspectable<object>.DisposeAbi(abi);
        public static unsafe void DisposeAbiArray(object box) => MarshalInspectable<object>.DisposeAbiArray(box);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    internal sealed class FeedProviderDisabledArgsRcwFactoryAttribute : global::WinRT.WinRTImplementationTypeRcwFactoryAttribute
    {
        public override object CreateInstance(global::WinRT.IInspectable inspectable)
            => new global::Microsoft.Windows.Widgets.Feeds.Providers.FeedProviderDisabledArgs(inspectable.ObjRef);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    public struct FeedProviderEnabledArgs
    {

        public static IObjectReference CreateMarshaler(global::Microsoft.Windows.Widgets.Feeds.Providers.FeedProviderEnabledArgs obj) => obj is null ? null : MarshalInspectable<global::Microsoft.Windows.Widgets.Feeds.Providers.FeedProviderEnabledArgs>.CreateMarshaler<IUnknownVftbl>(obj, global::ABI.Microsoft.Windows.Widgets.Feeds.Providers.IFeedProviderEnabledArgsMethods.IID);
        public static ObjectReferenceValue CreateMarshaler2(global::Microsoft.Windows.Widgets.Feeds.Providers.FeedProviderEnabledArgs obj) => MarshalInspectable<object>.CreateMarshaler2(obj, global::ABI.Microsoft.Windows.Widgets.Feeds.Providers.IFeedProviderEnabledArgsMethods.IID);
        public static IntPtr GetAbi(IObjectReference value) => value is null ? IntPtr.Zero : MarshalInterfaceHelper<object>.GetAbi(value);
        public static global::Microsoft.Windows.Widgets.Feeds.Providers.FeedProviderEnabledArgs FromAbi(IntPtr thisPtr) => global::Microsoft.Windows.Widgets.Feeds.Providers.FeedProviderEnabledArgs.FromAbi(thisPtr);
        public static IntPtr FromManaged(global::Microsoft.Windows.Widgets.Feeds.Providers.FeedProviderEnabledArgs obj) => obj is null ? IntPtr.Zero : CreateMarshaler2(obj).Detach();
        public static unsafe MarshalInterfaceHelper<global::Microsoft.Windows.Widgets.Feeds.Providers.FeedProviderEnabledArgs>.MarshalerArray CreateMarshalerArray(global::Microsoft.Windows.Widgets.Feeds.Providers.FeedProviderEnabledArgs[] array) => MarshalInterfaceHelper<global::Microsoft.Windows.Widgets.Feeds.Providers.FeedProviderEnabledArgs>.CreateMarshalerArray2(array, (o) => CreateMarshaler2(o));
        public static (int length, IntPtr data) GetAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.Windows.Widgets.Feeds.Providers.FeedProviderEnabledArgs>.GetAbiArray(box);
        public static unsafe global::Microsoft.Windows.Widgets.Feeds.Providers.FeedProviderEnabledArgs[] FromAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.Windows.Widgets.Feeds.Providers.FeedProviderEnabledArgs>.FromAbiArray(box, FromAbi);
        public static void CopyAbiArray(global::Microsoft.Windows.Widgets.Feeds.Providers.FeedProviderEnabledArgs[] array, object box) => MarshalInterfaceHelper<global::Microsoft.Windows.Widgets.Feeds.Providers.FeedProviderEnabledArgs>.CopyAbiArray(array, box, FromAbi);
        public static (int length, IntPtr data) FromManagedArray(global::Microsoft.Windows.Widgets.Feeds.Providers.FeedProviderEnabledArgs[] array) => MarshalInterfaceHelper<global::Microsoft.Windows.Widgets.Feeds.Providers.FeedProviderEnabledArgs>.FromManagedArray(array, (o) => FromManaged(o));
        public static void DisposeMarshaler(IObjectReference value) => MarshalInspectable<object>.DisposeMarshaler(value);
        public static void DisposeMarshalerArray(MarshalInterfaceHelper<global::Microsoft.Windows.Widgets.Feeds.Providers.FeedProviderEnabledArgs>.MarshalerArray array) => MarshalInterfaceHelper<global::Microsoft.Windows.Widgets.Feeds.Providers.FeedProviderEnabledArgs>.DisposeMarshalerArray(array);
        public static void DisposeAbi(IntPtr abi) => MarshalInspectable<object>.DisposeAbi(abi);
        public static unsafe void DisposeAbiArray(object box) => MarshalInspectable<object>.DisposeAbiArray(box);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    internal sealed class FeedProviderEnabledArgsRcwFactoryAttribute : global::WinRT.WinRTImplementationTypeRcwFactoryAttribute
    {
        public override object CreateInstance(global::WinRT.IInspectable inspectable)
            => new global::Microsoft.Windows.Widgets.Feeds.Providers.FeedProviderEnabledArgs(inspectable.ObjRef);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    public struct FeedProviderInfo
    {

        public static IObjectReference CreateMarshaler(global::Microsoft.Windows.Widgets.Feeds.Providers.FeedProviderInfo obj) => obj is null ? null : MarshalInspectable<global::Microsoft.Windows.Widgets.Feeds.Providers.FeedProviderInfo>.CreateMarshaler<IUnknownVftbl>(obj, global::ABI.Microsoft.Windows.Widgets.Feeds.Providers.IFeedProviderInfoMethods.IID);
        public static ObjectReferenceValue CreateMarshaler2(global::Microsoft.Windows.Widgets.Feeds.Providers.FeedProviderInfo obj) => MarshalInspectable<object>.CreateMarshaler2(obj, global::ABI.Microsoft.Windows.Widgets.Feeds.Providers.IFeedProviderInfoMethods.IID);
        public static IntPtr GetAbi(IObjectReference value) => value is null ? IntPtr.Zero : MarshalInterfaceHelper<object>.GetAbi(value);
        public static global::Microsoft.Windows.Widgets.Feeds.Providers.FeedProviderInfo FromAbi(IntPtr thisPtr) => global::Microsoft.Windows.Widgets.Feeds.Providers.FeedProviderInfo.FromAbi(thisPtr);
        public static IntPtr FromManaged(global::Microsoft.Windows.Widgets.Feeds.Providers.FeedProviderInfo obj) => obj is null ? IntPtr.Zero : CreateMarshaler2(obj).Detach();
        public static unsafe MarshalInterfaceHelper<global::Microsoft.Windows.Widgets.Feeds.Providers.FeedProviderInfo>.MarshalerArray CreateMarshalerArray(global::Microsoft.Windows.Widgets.Feeds.Providers.FeedProviderInfo[] array) => MarshalInterfaceHelper<global::Microsoft.Windows.Widgets.Feeds.Providers.FeedProviderInfo>.CreateMarshalerArray2(array, (o) => CreateMarshaler2(o));
        public static (int length, IntPtr data) GetAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.Windows.Widgets.Feeds.Providers.FeedProviderInfo>.GetAbiArray(box);
        public static unsafe global::Microsoft.Windows.Widgets.Feeds.Providers.FeedProviderInfo[] FromAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.Windows.Widgets.Feeds.Providers.FeedProviderInfo>.FromAbiArray(box, FromAbi);
        public static void CopyAbiArray(global::Microsoft.Windows.Widgets.Feeds.Providers.FeedProviderInfo[] array, object box) => MarshalInterfaceHelper<global::Microsoft.Windows.Widgets.Feeds.Providers.FeedProviderInfo>.CopyAbiArray(array, box, FromAbi);
        public static (int length, IntPtr data) FromManagedArray(global::Microsoft.Windows.Widgets.Feeds.Providers.FeedProviderInfo[] array) => MarshalInterfaceHelper<global::Microsoft.Windows.Widgets.Feeds.Providers.FeedProviderInfo>.FromManagedArray(array, (o) => FromManaged(o));
        public static void DisposeMarshaler(IObjectReference value) => MarshalInspectable<object>.DisposeMarshaler(value);
        public static void DisposeMarshalerArray(MarshalInterfaceHelper<global::Microsoft.Windows.Widgets.Feeds.Providers.FeedProviderInfo>.MarshalerArray array) => MarshalInterfaceHelper<global::Microsoft.Windows.Widgets.Feeds.Providers.FeedProviderInfo>.DisposeMarshalerArray(array);
        public static void DisposeAbi(IntPtr abi) => MarshalInspectable<object>.DisposeAbi(abi);
        public static unsafe void DisposeAbiArray(object box) => MarshalInspectable<object>.DisposeAbiArray(box);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    internal sealed class FeedProviderInfoRcwFactoryAttribute : global::WinRT.WinRTImplementationTypeRcwFactoryAttribute
    {
        public override object CreateInstance(global::WinRT.IInspectable inspectable)
            => new global::Microsoft.Windows.Widgets.Feeds.Providers.FeedProviderInfo(inspectable.ObjRef);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    public struct FeedResourceRequest
    {

        public static IObjectReference CreateMarshaler(global::Microsoft.Windows.Widgets.Feeds.Providers.FeedResourceRequest obj) => obj is null ? null : MarshalInspectable<global::Microsoft.Windows.Widgets.Feeds.Providers.FeedResourceRequest>.CreateMarshaler<IUnknownVftbl>(obj, global::ABI.Microsoft.Windows.Widgets.Feeds.Providers.IFeedResourceRequestMethods.IID);
        public static ObjectReferenceValue CreateMarshaler2(global::Microsoft.Windows.Widgets.Feeds.Providers.FeedResourceRequest obj) => MarshalInspectable<object>.CreateMarshaler2(obj, global::ABI.Microsoft.Windows.Widgets.Feeds.Providers.IFeedResourceRequestMethods.IID);
        public static IntPtr GetAbi(IObjectReference value) => value is null ? IntPtr.Zero : MarshalInterfaceHelper<object>.GetAbi(value);
        public static global::Microsoft.Windows.Widgets.Feeds.Providers.FeedResourceRequest FromAbi(IntPtr thisPtr) => global::Microsoft.Windows.Widgets.Feeds.Providers.FeedResourceRequest.FromAbi(thisPtr);
        public static IntPtr FromManaged(global::Microsoft.Windows.Widgets.Feeds.Providers.FeedResourceRequest obj) => obj is null ? IntPtr.Zero : CreateMarshaler2(obj).Detach();
        public static unsafe MarshalInterfaceHelper<global::Microsoft.Windows.Widgets.Feeds.Providers.FeedResourceRequest>.MarshalerArray CreateMarshalerArray(global::Microsoft.Windows.Widgets.Feeds.Providers.FeedResourceRequest[] array) => MarshalInterfaceHelper<global::Microsoft.Windows.Widgets.Feeds.Providers.FeedResourceRequest>.CreateMarshalerArray2(array, (o) => CreateMarshaler2(o));
        public static (int length, IntPtr data) GetAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.Windows.Widgets.Feeds.Providers.FeedResourceRequest>.GetAbiArray(box);
        public static unsafe global::Microsoft.Windows.Widgets.Feeds.Providers.FeedResourceRequest[] FromAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.Windows.Widgets.Feeds.Providers.FeedResourceRequest>.FromAbiArray(box, FromAbi);
        public static void CopyAbiArray(global::Microsoft.Windows.Widgets.Feeds.Providers.FeedResourceRequest[] array, object box) => MarshalInterfaceHelper<global::Microsoft.Windows.Widgets.Feeds.Providers.FeedResourceRequest>.CopyAbiArray(array, box, FromAbi);
        public static (int length, IntPtr data) FromManagedArray(global::Microsoft.Windows.Widgets.Feeds.Providers.FeedResourceRequest[] array) => MarshalInterfaceHelper<global::Microsoft.Windows.Widgets.Feeds.Providers.FeedResourceRequest>.FromManagedArray(array, (o) => FromManaged(o));
        public static void DisposeMarshaler(IObjectReference value) => MarshalInspectable<object>.DisposeMarshaler(value);
        public static void DisposeMarshalerArray(MarshalInterfaceHelper<global::Microsoft.Windows.Widgets.Feeds.Providers.FeedResourceRequest>.MarshalerArray array) => MarshalInterfaceHelper<global::Microsoft.Windows.Widgets.Feeds.Providers.FeedResourceRequest>.DisposeMarshalerArray(array);
        public static void DisposeAbi(IntPtr abi) => MarshalInspectable<object>.DisposeAbi(abi);
        public static unsafe void DisposeAbiArray(object box) => MarshalInspectable<object>.DisposeAbiArray(box);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    internal sealed class FeedResourceRequestRcwFactoryAttribute : global::WinRT.WinRTImplementationTypeRcwFactoryAttribute
    {
        public override object CreateInstance(global::WinRT.IInspectable inspectable)
            => new global::Microsoft.Windows.Widgets.Feeds.Providers.FeedResourceRequest(inspectable.ObjRef);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    public struct FeedResourceRequestedArgs
    {

        public static IObjectReference CreateMarshaler(global::Microsoft.Windows.Widgets.Feeds.Providers.FeedResourceRequestedArgs obj) => obj is null ? null : MarshalInspectable<global::Microsoft.Windows.Widgets.Feeds.Providers.FeedResourceRequestedArgs>.CreateMarshaler<IUnknownVftbl>(obj, global::ABI.Microsoft.Windows.Widgets.Feeds.Providers.IFeedResourceRequestedArgsMethods.IID);
        public static ObjectReferenceValue CreateMarshaler2(global::Microsoft.Windows.Widgets.Feeds.Providers.FeedResourceRequestedArgs obj) => MarshalInspectable<object>.CreateMarshaler2(obj, global::ABI.Microsoft.Windows.Widgets.Feeds.Providers.IFeedResourceRequestedArgsMethods.IID);
        public static IntPtr GetAbi(IObjectReference value) => value is null ? IntPtr.Zero : MarshalInterfaceHelper<object>.GetAbi(value);
        public static global::Microsoft.Windows.Widgets.Feeds.Providers.FeedResourceRequestedArgs FromAbi(IntPtr thisPtr) => global::Microsoft.Windows.Widgets.Feeds.Providers.FeedResourceRequestedArgs.FromAbi(thisPtr);
        public static IntPtr FromManaged(global::Microsoft.Windows.Widgets.Feeds.Providers.FeedResourceRequestedArgs obj) => obj is null ? IntPtr.Zero : CreateMarshaler2(obj).Detach();
        public static unsafe MarshalInterfaceHelper<global::Microsoft.Windows.Widgets.Feeds.Providers.FeedResourceRequestedArgs>.MarshalerArray CreateMarshalerArray(global::Microsoft.Windows.Widgets.Feeds.Providers.FeedResourceRequestedArgs[] array) => MarshalInterfaceHelper<global::Microsoft.Windows.Widgets.Feeds.Providers.FeedResourceRequestedArgs>.CreateMarshalerArray2(array, (o) => CreateMarshaler2(o));
        public static (int length, IntPtr data) GetAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.Windows.Widgets.Feeds.Providers.FeedResourceRequestedArgs>.GetAbiArray(box);
        public static unsafe global::Microsoft.Windows.Widgets.Feeds.Providers.FeedResourceRequestedArgs[] FromAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.Windows.Widgets.Feeds.Providers.FeedResourceRequestedArgs>.FromAbiArray(box, FromAbi);
        public static void CopyAbiArray(global::Microsoft.Windows.Widgets.Feeds.Providers.FeedResourceRequestedArgs[] array, object box) => MarshalInterfaceHelper<global::Microsoft.Windows.Widgets.Feeds.Providers.FeedResourceRequestedArgs>.CopyAbiArray(array, box, FromAbi);
        public static (int length, IntPtr data) FromManagedArray(global::Microsoft.Windows.Widgets.Feeds.Providers.FeedResourceRequestedArgs[] array) => MarshalInterfaceHelper<global::Microsoft.Windows.Widgets.Feeds.Providers.FeedResourceRequestedArgs>.FromManagedArray(array, (o) => FromManaged(o));
        public static void DisposeMarshaler(IObjectReference value) => MarshalInspectable<object>.DisposeMarshaler(value);
        public static void DisposeMarshalerArray(MarshalInterfaceHelper<global::Microsoft.Windows.Widgets.Feeds.Providers.FeedResourceRequestedArgs>.MarshalerArray array) => MarshalInterfaceHelper<global::Microsoft.Windows.Widgets.Feeds.Providers.FeedResourceRequestedArgs>.DisposeMarshalerArray(array);
        public static void DisposeAbi(IntPtr abi) => MarshalInspectable<object>.DisposeAbi(abi);
        public static unsafe void DisposeAbiArray(object box) => MarshalInspectable<object>.DisposeAbiArray(box);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    internal sealed class FeedResourceRequestedArgsRcwFactoryAttribute : global::WinRT.WinRTImplementationTypeRcwFactoryAttribute
    {
        public override object CreateInstance(global::WinRT.IInspectable inspectable)
            => new global::Microsoft.Windows.Widgets.Feeds.Providers.FeedResourceRequestedArgs(inspectable.ObjRef);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    public struct FeedResourceResponse
    {

        public static IObjectReference CreateMarshaler(global::Microsoft.Windows.Widgets.Feeds.Providers.FeedResourceResponse obj) => obj is null ? null : MarshalInspectable<global::Microsoft.Windows.Widgets.Feeds.Providers.FeedResourceResponse>.CreateMarshaler<IUnknownVftbl>(obj, global::ABI.Microsoft.Windows.Widgets.Feeds.Providers.IFeedResourceResponseMethods.IID);
        public static ObjectReferenceValue CreateMarshaler2(global::Microsoft.Windows.Widgets.Feeds.Providers.FeedResourceResponse obj) => MarshalInspectable<object>.CreateMarshaler2(obj, global::ABI.Microsoft.Windows.Widgets.Feeds.Providers.IFeedResourceResponseMethods.IID);
        public static IntPtr GetAbi(IObjectReference value) => value is null ? IntPtr.Zero : MarshalInterfaceHelper<object>.GetAbi(value);
        public static global::Microsoft.Windows.Widgets.Feeds.Providers.FeedResourceResponse FromAbi(IntPtr thisPtr) => global::Microsoft.Windows.Widgets.Feeds.Providers.FeedResourceResponse.FromAbi(thisPtr);
        public static IntPtr FromManaged(global::Microsoft.Windows.Widgets.Feeds.Providers.FeedResourceResponse obj) => obj is null ? IntPtr.Zero : CreateMarshaler2(obj).Detach();
        public static unsafe MarshalInterfaceHelper<global::Microsoft.Windows.Widgets.Feeds.Providers.FeedResourceResponse>.MarshalerArray CreateMarshalerArray(global::Microsoft.Windows.Widgets.Feeds.Providers.FeedResourceResponse[] array) => MarshalInterfaceHelper<global::Microsoft.Windows.Widgets.Feeds.Providers.FeedResourceResponse>.CreateMarshalerArray2(array, (o) => CreateMarshaler2(o));
        public static (int length, IntPtr data) GetAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.Windows.Widgets.Feeds.Providers.FeedResourceResponse>.GetAbiArray(box);
        public static unsafe global::Microsoft.Windows.Widgets.Feeds.Providers.FeedResourceResponse[] FromAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.Windows.Widgets.Feeds.Providers.FeedResourceResponse>.FromAbiArray(box, FromAbi);
        public static void CopyAbiArray(global::Microsoft.Windows.Widgets.Feeds.Providers.FeedResourceResponse[] array, object box) => MarshalInterfaceHelper<global::Microsoft.Windows.Widgets.Feeds.Providers.FeedResourceResponse>.CopyAbiArray(array, box, FromAbi);
        public static (int length, IntPtr data) FromManagedArray(global::Microsoft.Windows.Widgets.Feeds.Providers.FeedResourceResponse[] array) => MarshalInterfaceHelper<global::Microsoft.Windows.Widgets.Feeds.Providers.FeedResourceResponse>.FromManagedArray(array, (o) => FromManaged(o));
        public static void DisposeMarshaler(IObjectReference value) => MarshalInspectable<object>.DisposeMarshaler(value);
        public static void DisposeMarshalerArray(MarshalInterfaceHelper<global::Microsoft.Windows.Widgets.Feeds.Providers.FeedResourceResponse>.MarshalerArray array) => MarshalInterfaceHelper<global::Microsoft.Windows.Widgets.Feeds.Providers.FeedResourceResponse>.DisposeMarshalerArray(array);
        public static void DisposeAbi(IntPtr abi) => MarshalInspectable<object>.DisposeAbi(abi);
        public static unsafe void DisposeAbiArray(object box) => MarshalInspectable<object>.DisposeAbiArray(box);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    internal sealed class FeedResourceResponseRcwFactoryAttribute : global::WinRT.WinRTImplementationTypeRcwFactoryAttribute
    {
        public override object CreateInstance(global::WinRT.IInspectable inspectable)
            => new global::Microsoft.Windows.Widgets.Feeds.Providers.FeedResourceResponse(inspectable.ObjRef);
    }
    internal static class ICustomQueryParametersRequestedArgsMethods
    {

        internal static unsafe string get_FeedProviderDefinitionId(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[6](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return MarshalString.FromAbi(__retval);
            }
            finally
            {
                MarshalString.DisposeAbi(__retval);
            }
        }



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0xD8, 0xC, 0x2B, 0xDC, 0x36, 0x79, 0x46, 0x53, 0x93, 0x71, 0xB2, 0x14, 0x84, 0xC7, 0xD8, 0x59 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("DC2B0CD8-7936-5346-9371-B21484C7D859")]
    internal interface ICustomQueryParametersRequestedArgs : global::Microsoft.Windows.Widgets.Feeds.Providers.ICustomQueryParametersRequestedArgs
    {
    }
    internal static class ICustomQueryParametersUpdateOptionsMethods
    {

        internal static unsafe string get_CustomQueryParameters(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[7](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return MarshalString.FromAbi(__retval);
            }
            finally
            {
                MarshalString.DisposeAbi(__retval);
            }
        }

        internal static unsafe string get_FeedProviderDefinitionId(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[6](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return MarshalString.FromAbi(__retval);
            }
            finally
            {
                MarshalString.DisposeAbi(__retval);
            }
        }



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0x77, 0x11, 0x3F, 0x75, 0x9, 0x49, 0x8A, 0x56, 0xB0, 0x70, 0x98, 0xA3, 0x13, 0x92, 0x5, 0xEC };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("753F1177-4909-568A-B070-98A3139205EC")]
    internal interface ICustomQueryParametersUpdateOptions : global::Microsoft.Windows.Widgets.Feeds.Providers.ICustomQueryParametersUpdateOptions
    {
    }
    internal static class ICustomQueryParametersUpdateOptionsFactoryMethods
    {


        internal static unsafe global::Microsoft.Windows.Widgets.Feeds.Providers.CustomQueryParametersUpdateOptions CreateInstance(IObjectReference _obj, string feedProviderDefinitionId, string customQueryParameters)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                MarshalString.Pinnable __feedProviderDefinitionId = new(feedProviderDefinitionId);
                MarshalString.Pinnable __customQueryParameters = new(customQueryParameters);
                fixed(void* ___feedProviderDefinitionId = __feedProviderDefinitionId, ___customQueryParameters = __customQueryParameters)
                {
                    global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, IntPtr, IntPtr*, int>**)ThisPtr)[6](ThisPtr, MarshalString.GetAbi(ref __feedProviderDefinitionId), MarshalString.GetAbi(ref __customQueryParameters), &__retval));
                    global::System.GC.KeepAlive(_obj);
                    return global::ABI.Microsoft.Windows.Widgets.Feeds.Providers.CustomQueryParametersUpdateOptions.FromAbi(__retval);
                }
            }
            finally
            {
                global::ABI.Microsoft.Windows.Widgets.Feeds.Providers.CustomQueryParametersUpdateOptions.DisposeAbi(__retval);
            }
        }


        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0xCD, 0x18, 0xE3, 0x34, 0x84, 0x38, 0xC0, 0x53, 0x91, 0x1C, 0x22, 0x5F, 0x32, 0x22, 0x8F, 0xAE };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("34E318CD-3884-53C0-911C-225F32228FAE")]
    internal interface ICustomQueryParametersUpdateOptionsFactory : global::Microsoft.Windows.Widgets.Feeds.Providers.ICustomQueryParametersUpdateOptionsFactory
    {
    }
    internal static class IFeedAnalyticsInfoReportedArgsMethods
    {

        internal static unsafe string get_AnalyticsJson(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[8](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return MarshalString.FromAbi(__retval);
            }
            finally
            {
                MarshalString.DisposeAbi(__retval);
            }
        }

        internal static unsafe string get_FeedDefinitionId(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[7](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return MarshalString.FromAbi(__retval);
            }
            finally
            {
                MarshalString.DisposeAbi(__retval);
            }
        }

        internal static unsafe string get_FeedProviderDefinitionId(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[6](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return MarshalString.FromAbi(__retval);
            }
            finally
            {
                MarshalString.DisposeAbi(__retval);
            }
        }



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0x65, 0x3D, 0xE, 0x3C, 0x47, 0xED, 0x8A, 0x5B, 0xB6, 0x50, 0x39, 0xA7, 0xED, 0xF1, 0x89, 0x42 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("3C0E3D65-ED47-5B8A-B650-39A7EDF18942")]
    internal interface IFeedAnalyticsInfoReportedArgs : global::Microsoft.Windows.Widgets.Feeds.Providers.IFeedAnalyticsInfoReportedArgs
    {
    }
    public static class IFeedAnnouncementInvokedTargetMethods
    {


        public static unsafe void OnAnnouncementInvoked(IObjectReference _obj, global::Microsoft.Windows.Widgets.Notifications.FeedAnnouncementInvokedArgs args)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __args = default;
            try
            {
                __args = global::ABI.Microsoft.Windows.Widgets.Notifications.FeedAnnouncementInvokedArgs.CreateMarshaler2(args);
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, int>**)ThisPtr)[6](ThisPtr, MarshalInspectable<object>.GetAbi(__args)));
                global::System.GC.KeepAlive(_obj);
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__args);
            }
        }


        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0x2A, 0xAE, 0x44, 0x5D, 0x2C, 0x7, 0xF9, 0x4D, 0x9F, 0xE5, 0x34, 0xD5, 0xD2, 0xE9, 0xFF, 0x63 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

        public static global::System.IntPtr AbiToProjectionVftablePtr => IFeedAnnouncementInvokedTarget.AbiToProjectionVftablePtr;

    }
    [DynamicInterfaceCastableImplementation]
    [Guid("5D44AE2A-072C-4DF9-9FE5-34D5D2E9FF63")]
    internal unsafe interface IFeedAnnouncementInvokedTarget : global::Microsoft.Windows.Widgets.Feeds.Providers.IFeedAnnouncementInvokedTarget
    {

        public static readonly IntPtr AbiToProjectionVftablePtr;
        static unsafe IFeedAnnouncementInvokedTarget()
        {
            AbiToProjectionVftablePtr = ComWrappersSupport.AllocateVtableMemory(typeof(IFeedAnnouncementInvokedTarget), sizeof(IInspectable.Vftbl) + sizeof(IntPtr) * 1);
            *(IInspectable.Vftbl*)AbiToProjectionVftablePtr = IInspectable.Vftbl.AbiToProjectionVftable;
            ((delegate* unmanaged[Stdcall]<IntPtr, IntPtr, int>*)AbiToProjectionVftablePtr)[6] = &Do_Abi_OnAnnouncementInvoked_0;
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvStdcall) })]
        private static unsafe int Do_Abi_OnAnnouncementInvoked_0(IntPtr thisPtr, IntPtr args)
        {



            try
            {
                global::WinRT.ComWrappersSupport.FindObject<global::Microsoft.Windows.Widgets.Feeds.Providers.IFeedAnnouncementInvokedTarget>(thisPtr).OnAnnouncementInvoked(global::ABI.Microsoft.Windows.Widgets.Notifications.FeedAnnouncementInvokedArgs.FromAbi(args));

            }
            catch (Exception __exception__)
            {
                global::WinRT.ExceptionHelpers.SetErrorInfo(__exception__);
                return global::WinRT.ExceptionHelpers.GetHRForException(__exception__);
            }
            return 0;
        }

        unsafe void global::Microsoft.Windows.Widgets.Feeds.Providers.IFeedAnnouncementInvokedTarget.OnAnnouncementInvoked(global::Microsoft.Windows.Widgets.Notifications.FeedAnnouncementInvokedArgs args)
        {
            var _obj = ((IObjectReference)((IWinRTObject)this).GetObjectReferenceForType(typeof(global::Microsoft.Windows.Widgets.Feeds.Providers.IFeedAnnouncementInvokedTarget).TypeHandle));
            global::ABI.Microsoft.Windows.Widgets.Feeds.Providers.IFeedAnnouncementInvokedTargetMethods.OnAnnouncementInvoked(_obj, args);
        }
    }

    internal static class IFeedDisabledArgsMethods
    {

        internal static unsafe string get_FeedDefinitionId(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[7](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return MarshalString.FromAbi(__retval);
            }
            finally
            {
                MarshalString.DisposeAbi(__retval);
            }
        }

        internal static unsafe string get_FeedProviderDefinitionId(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[6](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return MarshalString.FromAbi(__retval);
            }
            finally
            {
                MarshalString.DisposeAbi(__retval);
            }
        }



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0x12, 0x6, 0x30, 0x95, 0xA7, 0xAC, 0xC0, 0x53, 0x9C, 0xF6, 0xD8, 0x3, 0x68, 0x91, 0x32, 0xC1 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("95300612-ACA7-53C0-9CF6-D803689132C1")]
    internal interface IFeedDisabledArgs : global::Microsoft.Windows.Widgets.Feeds.Providers.IFeedDisabledArgs
    {
    }
    internal static class IFeedEnabledArgsMethods
    {

        internal static unsafe string get_FeedDefinitionId(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[7](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return MarshalString.FromAbi(__retval);
            }
            finally
            {
                MarshalString.DisposeAbi(__retval);
            }
        }

        internal static unsafe string get_FeedProviderDefinitionId(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[6](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return MarshalString.FromAbi(__retval);
            }
            finally
            {
                MarshalString.DisposeAbi(__retval);
            }
        }



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0xD7, 0xB2, 0xF4, 0xEF, 0x47, 0x73, 0x69, 0x59, 0xA7, 0x7D, 0xCA, 0xC4, 0x33, 0xF0, 0xFD, 0xAE };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("EFF4B2D7-7347-5969-A77D-CAC433F0FDAE")]
    internal interface IFeedEnabledArgs : global::Microsoft.Windows.Widgets.Feeds.Providers.IFeedEnabledArgs
    {
    }
    internal static class IFeedErrorInfoReportedArgsMethods
    {

        internal static unsafe string get_ErrorJson(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[8](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return MarshalString.FromAbi(__retval);
            }
            finally
            {
                MarshalString.DisposeAbi(__retval);
            }
        }

        internal static unsafe string get_FeedDefinitionId(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[7](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return MarshalString.FromAbi(__retval);
            }
            finally
            {
                MarshalString.DisposeAbi(__retval);
            }
        }

        internal static unsafe string get_FeedProviderDefinitionId(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[6](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return MarshalString.FromAbi(__retval);
            }
            finally
            {
                MarshalString.DisposeAbi(__retval);
            }
        }



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0x8C, 0x1, 0xDE, 0x62, 0x1E, 0x16, 0xD0, 0x52, 0x9D, 0xBE, 0xAE, 0xC1, 0x6, 0xFB, 0x66, 0x0 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("62DE018C-161E-52D0-9DBE-AEC106FB6600")]
    internal interface IFeedErrorInfoReportedArgs : global::Microsoft.Windows.Widgets.Feeds.Providers.IFeedErrorInfoReportedArgs
    {
    }
    public static class IFeedManagerMethods
    {


        public static unsafe global::Microsoft.Windows.Widgets.Feeds.Providers.FeedProviderInfo[] GetEnabledFeedProviders(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            int __retval_length = default;
            IntPtr __retval_data = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, int*, IntPtr*, int>**)ThisPtr)[6](ThisPtr, &__retval_length, &__retval_data));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.Windows.Widgets.Feeds.Providers.FeedProviderInfo.FromAbiArray((__retval_length, __retval_data));
            }
            finally
            {
                global::ABI.Microsoft.Windows.Widgets.Feeds.Providers.FeedProviderInfo.DisposeAbiArray((__retval_length, __retval_data));
            }
        }

        public static unsafe void SetCustomQueryParameters(IObjectReference _obj, global::Microsoft.Windows.Widgets.Feeds.Providers.CustomQueryParametersUpdateOptions options)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __options = default;
            try
            {
                __options = global::ABI.Microsoft.Windows.Widgets.Feeds.Providers.CustomQueryParametersUpdateOptions.CreateMarshaler2(options);
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, int>**)ThisPtr)[7](ThisPtr, MarshalInspectable<object>.GetAbi(__options)));
                global::System.GC.KeepAlive(_obj);
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__options);
            }
        }


        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0x84, 0x6A, 0xDF, 0x87, 0xAA, 0x15, 0xCB, 0x45, 0x89, 0x11, 0x5C, 0xAF, 0xAB, 0x57, 0xF7, 0x23 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

        public static global::System.IntPtr AbiToProjectionVftablePtr => IFeedManager.AbiToProjectionVftablePtr;

    }
    [DynamicInterfaceCastableImplementation]
    [Guid("87DF6A84-15AA-45CB-8911-5CAFAB57F723")]
    internal unsafe interface IFeedManager : global::Microsoft.Windows.Widgets.Feeds.Providers.IFeedManager
    {

        public static readonly IntPtr AbiToProjectionVftablePtr;
        static unsafe IFeedManager()
        {
            AbiToProjectionVftablePtr = ComWrappersSupport.AllocateVtableMemory(typeof(IFeedManager), sizeof(IInspectable.Vftbl) + sizeof(IntPtr) * 2);
            *(IInspectable.Vftbl*)AbiToProjectionVftablePtr = IInspectable.Vftbl.AbiToProjectionVftable;
            ((delegate* unmanaged[Stdcall]<IntPtr, int*, IntPtr*, int>*)AbiToProjectionVftablePtr)[6] = &Do_Abi_GetEnabledFeedProviders_0;
            ((delegate* unmanaged[Stdcall]<IntPtr, IntPtr, int>*)AbiToProjectionVftablePtr)[7] = &Do_Abi_SetCustomQueryParameters_1;
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvStdcall) })]
        private static unsafe int Do_Abi_GetEnabledFeedProviders_0(IntPtr thisPtr, int* __resultSize, IntPtr* result)
        {

            global::Microsoft.Windows.Widgets.Feeds.Providers.FeedProviderInfo[] __result = default;

            *result = default;
            *__resultSize = default;

            try
            {
                __result = global::WinRT.ComWrappersSupport.FindObject<global::Microsoft.Windows.Widgets.Feeds.Providers.IFeedManager>(thisPtr).GetEnabledFeedProviders();
                (*__resultSize, *result) = global::ABI.Microsoft.Windows.Widgets.Feeds.Providers.FeedProviderInfo.FromManagedArray(__result);

            }
            catch (Exception __exception__)
            {
                global::WinRT.ExceptionHelpers.SetErrorInfo(__exception__);
                return global::WinRT.ExceptionHelpers.GetHRForException(__exception__);
            }
            return 0;
        }
        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvStdcall) })]
        private static unsafe int Do_Abi_SetCustomQueryParameters_1(IntPtr thisPtr, IntPtr options)
        {



            try
            {
                global::WinRT.ComWrappersSupport.FindObject<global::Microsoft.Windows.Widgets.Feeds.Providers.IFeedManager>(thisPtr).SetCustomQueryParameters(global::ABI.Microsoft.Windows.Widgets.Feeds.Providers.CustomQueryParametersUpdateOptions.FromAbi(options));

            }
            catch (Exception __exception__)
            {
                global::WinRT.ExceptionHelpers.SetErrorInfo(__exception__);
                return global::WinRT.ExceptionHelpers.GetHRForException(__exception__);
            }
            return 0;
        }

        unsafe global::Microsoft.Windows.Widgets.Feeds.Providers.FeedProviderInfo[] global::Microsoft.Windows.Widgets.Feeds.Providers.IFeedManager.GetEnabledFeedProviders()
        {
            var _obj = ((IObjectReference)((IWinRTObject)this).GetObjectReferenceForType(typeof(global::Microsoft.Windows.Widgets.Feeds.Providers.IFeedManager).TypeHandle));
            return global::ABI.Microsoft.Windows.Widgets.Feeds.Providers.IFeedManagerMethods.GetEnabledFeedProviders(_obj);
        }

        unsafe void global::Microsoft.Windows.Widgets.Feeds.Providers.IFeedManager.SetCustomQueryParameters(global::Microsoft.Windows.Widgets.Feeds.Providers.CustomQueryParametersUpdateOptions options)
        {
            var _obj = ((IObjectReference)((IWinRTObject)this).GetObjectReferenceForType(typeof(global::Microsoft.Windows.Widgets.Feeds.Providers.IFeedManager).TypeHandle));
            global::ABI.Microsoft.Windows.Widgets.Feeds.Providers.IFeedManagerMethods.SetCustomQueryParameters(_obj, options);
        }
    }

    public static class IFeedManager2Methods
    {


        public static unsafe void SendMessageToContent(IObjectReference _obj, string feedProviderDefinitionId, string feedDefinitionId, string message)
        {
            var ThisPtr = _obj.ThisPtr;

            MarshalString.Pinnable __feedProviderDefinitionId = new(feedProviderDefinitionId);
            MarshalString.Pinnable __feedDefinitionId = new(feedDefinitionId);
            MarshalString.Pinnable __message = new(message);
            fixed(void* ___feedProviderDefinitionId = __feedProviderDefinitionId, ___feedDefinitionId = __feedDefinitionId, ___message = __message)
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, IntPtr, IntPtr, int>**)ThisPtr)[6](ThisPtr, MarshalString.GetAbi(ref __feedProviderDefinitionId), MarshalString.GetAbi(ref __feedDefinitionId), MarshalString.GetAbi(ref __message)));
                global::System.GC.KeepAlive(_obj);
            }
        }

        public static unsafe void TryShowAnnouncement(IObjectReference _obj, string feedProviderDefinitionId, string feedDefinitionId, global::Microsoft.Windows.Widgets.Notifications.FeedAnnouncement announcement)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __announcement = default;
            try
            {
                __announcement = global::ABI.Microsoft.Windows.Widgets.Notifications.FeedAnnouncement.CreateMarshaler2(announcement);
                MarshalString.Pinnable __feedProviderDefinitionId = new(feedProviderDefinitionId);
                MarshalString.Pinnable __feedDefinitionId = new(feedDefinitionId);
                fixed(void* ___feedProviderDefinitionId = __feedProviderDefinitionId, ___feedDefinitionId = __feedDefinitionId)
                {
                    global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, IntPtr, IntPtr, int>**)ThisPtr)[7](ThisPtr, MarshalString.GetAbi(ref __feedProviderDefinitionId), MarshalString.GetAbi(ref __feedDefinitionId), MarshalInspectable<object>.GetAbi(__announcement)));
                    global::System.GC.KeepAlive(_obj);
                }
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__announcement);
            }
        }


        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0xA, 0x30, 0x38, 0x58, 0x69, 0xA0, 0x5D, 0x45, 0x99, 0x43, 0xBA, 0x7, 0x8A, 0xDA, 0x0, 0xD8 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

        public static global::System.IntPtr AbiToProjectionVftablePtr => IFeedManager2.AbiToProjectionVftablePtr;

    }
    [DynamicInterfaceCastableImplementation]
    [Guid("5838300A-A069-455D-9943-BA078ADA00D8")]
    internal unsafe interface IFeedManager2 : global::Microsoft.Windows.Widgets.Feeds.Providers.IFeedManager2
    {

        public static readonly IntPtr AbiToProjectionVftablePtr;
        static unsafe IFeedManager2()
        {
            AbiToProjectionVftablePtr = ComWrappersSupport.AllocateVtableMemory(typeof(IFeedManager2), sizeof(IInspectable.Vftbl) + sizeof(IntPtr) * 2);
            *(IInspectable.Vftbl*)AbiToProjectionVftablePtr = IInspectable.Vftbl.AbiToProjectionVftable;
            ((delegate* unmanaged[Stdcall]<IntPtr, IntPtr, IntPtr, IntPtr, int>*)AbiToProjectionVftablePtr)[6] = &Do_Abi_SendMessageToContent_0;
            ((delegate* unmanaged[Stdcall]<IntPtr, IntPtr, IntPtr, IntPtr, int>*)AbiToProjectionVftablePtr)[7] = &Do_Abi_TryShowAnnouncement_1;
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvStdcall) })]
        private static unsafe int Do_Abi_SendMessageToContent_0(IntPtr thisPtr, IntPtr feedProviderDefinitionId, IntPtr feedDefinitionId, IntPtr message)
        {



            try
            {
                global::WinRT.ComWrappersSupport.FindObject<global::Microsoft.Windows.Widgets.Feeds.Providers.IFeedManager2>(thisPtr).SendMessageToContent(MarshalString.FromAbi(feedProviderDefinitionId), MarshalString.FromAbi(feedDefinitionId), MarshalString.FromAbi(message));

            }
            catch (Exception __exception__)
            {
                global::WinRT.ExceptionHelpers.SetErrorInfo(__exception__);
                return global::WinRT.ExceptionHelpers.GetHRForException(__exception__);
            }
            return 0;
        }
        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvStdcall) })]
        private static unsafe int Do_Abi_TryShowAnnouncement_1(IntPtr thisPtr, IntPtr feedProviderDefinitionId, IntPtr feedDefinitionId, IntPtr announcement)
        {



            try
            {
                global::WinRT.ComWrappersSupport.FindObject<global::Microsoft.Windows.Widgets.Feeds.Providers.IFeedManager2>(thisPtr).TryShowAnnouncement(MarshalString.FromAbi(feedProviderDefinitionId), MarshalString.FromAbi(feedDefinitionId), global::ABI.Microsoft.Windows.Widgets.Notifications.FeedAnnouncement.FromAbi(announcement));

            }
            catch (Exception __exception__)
            {
                global::WinRT.ExceptionHelpers.SetErrorInfo(__exception__);
                return global::WinRT.ExceptionHelpers.GetHRForException(__exception__);
            }
            return 0;
        }

        unsafe void global::Microsoft.Windows.Widgets.Feeds.Providers.IFeedManager2.SendMessageToContent(string feedProviderDefinitionId, string feedDefinitionId, string message)
        {
            var _obj = ((IObjectReference)((IWinRTObject)this).GetObjectReferenceForType(typeof(global::Microsoft.Windows.Widgets.Feeds.Providers.IFeedManager2).TypeHandle));
            global::ABI.Microsoft.Windows.Widgets.Feeds.Providers.IFeedManager2Methods.SendMessageToContent(_obj, feedProviderDefinitionId, feedDefinitionId, message);
        }

        unsafe void global::Microsoft.Windows.Widgets.Feeds.Providers.IFeedManager2.TryShowAnnouncement(string feedProviderDefinitionId, string feedDefinitionId, global::Microsoft.Windows.Widgets.Notifications.FeedAnnouncement announcement)
        {
            var _obj = ((IObjectReference)((IWinRTObject)this).GetObjectReferenceForType(typeof(global::Microsoft.Windows.Widgets.Feeds.Providers.IFeedManager2).TypeHandle));
            global::ABI.Microsoft.Windows.Widgets.Feeds.Providers.IFeedManager2Methods.TryShowAnnouncement(_obj, feedProviderDefinitionId, feedDefinitionId, announcement);
        }
    }

    public static class IFeedManager3Methods
    {


        public static unsafe void TryRemoveAnnouncementById(IObjectReference _obj, string feedProviderDefinitionId, string feedDefinitionId, string announcementId)
        {
            var ThisPtr = _obj.ThisPtr;

            MarshalString.Pinnable __feedProviderDefinitionId = new(feedProviderDefinitionId);
            MarshalString.Pinnable __feedDefinitionId = new(feedDefinitionId);
            MarshalString.Pinnable __announcementId = new(announcementId);
            fixed(void* ___feedProviderDefinitionId = __feedProviderDefinitionId, ___feedDefinitionId = __feedDefinitionId, ___announcementId = __announcementId)
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, IntPtr, IntPtr, int>**)ThisPtr)[6](ThisPtr, MarshalString.GetAbi(ref __feedProviderDefinitionId), MarshalString.GetAbi(ref __feedDefinitionId), MarshalString.GetAbi(ref __announcementId)));
                global::System.GC.KeepAlive(_obj);
            }
        }


        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0x5B, 0x91, 0xAF, 0xA6, 0xDC, 0xC, 0xF1, 0x46, 0xA4, 0xD6, 0x10, 0xD8, 0xC6, 0x44, 0x98, 0x4A };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

        public static global::System.IntPtr AbiToProjectionVftablePtr => IFeedManager3.AbiToProjectionVftablePtr;

    }
    [DynamicInterfaceCastableImplementation]
    [Guid("A6AF915B-0CDC-46F1-A4D6-10D8C644984A")]
    internal unsafe interface IFeedManager3 : global::Microsoft.Windows.Widgets.Feeds.Providers.IFeedManager3
    {

        public static readonly IntPtr AbiToProjectionVftablePtr;
        static unsafe IFeedManager3()
        {
            AbiToProjectionVftablePtr = ComWrappersSupport.AllocateVtableMemory(typeof(IFeedManager3), sizeof(IInspectable.Vftbl) + sizeof(IntPtr) * 1);
            *(IInspectable.Vftbl*)AbiToProjectionVftablePtr = IInspectable.Vftbl.AbiToProjectionVftable;
            ((delegate* unmanaged[Stdcall]<IntPtr, IntPtr, IntPtr, IntPtr, int>*)AbiToProjectionVftablePtr)[6] = &Do_Abi_TryRemoveAnnouncementById_0;
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvStdcall) })]
        private static unsafe int Do_Abi_TryRemoveAnnouncementById_0(IntPtr thisPtr, IntPtr feedProviderDefinitionId, IntPtr feedDefinitionId, IntPtr announcementId)
        {



            try
            {
                global::WinRT.ComWrappersSupport.FindObject<global::Microsoft.Windows.Widgets.Feeds.Providers.IFeedManager3>(thisPtr).TryRemoveAnnouncementById(MarshalString.FromAbi(feedProviderDefinitionId), MarshalString.FromAbi(feedDefinitionId), MarshalString.FromAbi(announcementId));

            }
            catch (Exception __exception__)
            {
                global::WinRT.ExceptionHelpers.SetErrorInfo(__exception__);
                return global::WinRT.ExceptionHelpers.GetHRForException(__exception__);
            }
            return 0;
        }

        unsafe void global::Microsoft.Windows.Widgets.Feeds.Providers.IFeedManager3.TryRemoveAnnouncementById(string feedProviderDefinitionId, string feedDefinitionId, string announcementId)
        {
            var _obj = ((IObjectReference)((IWinRTObject)this).GetObjectReferenceForType(typeof(global::Microsoft.Windows.Widgets.Feeds.Providers.IFeedManager3).TypeHandle));
            global::ABI.Microsoft.Windows.Widgets.Feeds.Providers.IFeedManager3Methods.TryRemoveAnnouncementById(_obj, feedProviderDefinitionId, feedDefinitionId, announcementId);
        }
    }

    internal static class IFeedManagerStaticsMethods
    {


        internal static unsafe global::Microsoft.Windows.Widgets.Feeds.Providers.FeedManager GetDefault(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[6](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.Windows.Widgets.Feeds.Providers.FeedManager.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.Windows.Widgets.Feeds.Providers.FeedManager.DisposeAbi(__retval);
            }
        }


        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0x74, 0x51, 0xAF, 0x4B, 0xD6, 0x77, 0x2A, 0x5E, 0x94, 0xEA, 0x4F, 0x14, 0xCC, 0xDB, 0x1F, 0x2C };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("4BAF5174-77D6-5E2A-94EA-4F14CCDB1F2C")]
    internal interface IFeedManagerStatics : global::Microsoft.Windows.Widgets.Feeds.Providers.IFeedManagerStatics
    {
    }
    internal static class IFeedMessageReceivedArgsMethods
    {

        internal static unsafe string get_FeedDefinitionId(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[7](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return MarshalString.FromAbi(__retval);
            }
            finally
            {
                MarshalString.DisposeAbi(__retval);
            }
        }

        internal static unsafe string get_FeedProviderDefinitionId(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[6](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return MarshalString.FromAbi(__retval);
            }
            finally
            {
                MarshalString.DisposeAbi(__retval);
            }
        }

        internal static unsafe string get_Message(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[8](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return MarshalString.FromAbi(__retval);
            }
            finally
            {
                MarshalString.DisposeAbi(__retval);
            }
        }



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0xF9, 0xEC, 0xD6, 0x4E, 0x74, 0x4C, 0xB, 0x5A, 0xAE, 0x4, 0xBE, 0xF6, 0xDD, 0x77, 0x6F, 0x8A };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("4ED6ECF9-4C74-5A0B-AE04-BEF6DD776F8A")]
    internal interface IFeedMessageReceivedArgs : global::Microsoft.Windows.Widgets.Feeds.Providers.IFeedMessageReceivedArgs
    {
    }
    public static class IFeedProviderMethods
    {


        public static unsafe void OnFeedProviderEnabled(IObjectReference _obj, global::Microsoft.Windows.Widgets.Feeds.Providers.FeedProviderEnabledArgs args)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __args = default;
            try
            {
                __args = global::ABI.Microsoft.Windows.Widgets.Feeds.Providers.FeedProviderEnabledArgs.CreateMarshaler2(args);
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, int>**)ThisPtr)[6](ThisPtr, MarshalInspectable<object>.GetAbi(__args)));
                global::System.GC.KeepAlive(_obj);
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__args);
            }
        }

        public static unsafe void OnFeedProviderDisabled(IObjectReference _obj, global::Microsoft.Windows.Widgets.Feeds.Providers.FeedProviderDisabledArgs args)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __args = default;
            try
            {
                __args = global::ABI.Microsoft.Windows.Widgets.Feeds.Providers.FeedProviderDisabledArgs.CreateMarshaler2(args);
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, int>**)ThisPtr)[7](ThisPtr, MarshalInspectable<object>.GetAbi(__args)));
                global::System.GC.KeepAlive(_obj);
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__args);
            }
        }

        public static unsafe void OnFeedEnabled(IObjectReference _obj, global::Microsoft.Windows.Widgets.Feeds.Providers.FeedEnabledArgs args)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __args = default;
            try
            {
                __args = global::ABI.Microsoft.Windows.Widgets.Feeds.Providers.FeedEnabledArgs.CreateMarshaler2(args);
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, int>**)ThisPtr)[8](ThisPtr, MarshalInspectable<object>.GetAbi(__args)));
                global::System.GC.KeepAlive(_obj);
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__args);
            }
        }

        public static unsafe void OnFeedDisabled(IObjectReference _obj, global::Microsoft.Windows.Widgets.Feeds.Providers.FeedDisabledArgs args)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __args = default;
            try
            {
                __args = global::ABI.Microsoft.Windows.Widgets.Feeds.Providers.FeedDisabledArgs.CreateMarshaler2(args);
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, int>**)ThisPtr)[9](ThisPtr, MarshalInspectable<object>.GetAbi(__args)));
                global::System.GC.KeepAlive(_obj);
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__args);
            }
        }

        public static unsafe void OnCustomQueryParametersRequested(IObjectReference _obj, global::Microsoft.Windows.Widgets.Feeds.Providers.CustomQueryParametersRequestedArgs args)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __args = default;
            try
            {
                __args = global::ABI.Microsoft.Windows.Widgets.Feeds.Providers.CustomQueryParametersRequestedArgs.CreateMarshaler2(args);
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, int>**)ThisPtr)[10](ThisPtr, MarshalInspectable<object>.GetAbi(__args)));
                global::System.GC.KeepAlive(_obj);
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__args);
            }
        }


        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0x2B, 0xA1, 0x93, 0x72, 0x29, 0x3, 0x8D, 0x45, 0xAC, 0x25, 0x53, 0x32, 0xBE, 0x47, 0x8F, 0xDE };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

        public static global::System.IntPtr AbiToProjectionVftablePtr => IFeedProvider.AbiToProjectionVftablePtr;

    }
    [DynamicInterfaceCastableImplementation]
    [Guid("7293A12B-0329-458D-AC25-5332BE478FDE")]
    internal unsafe interface IFeedProvider : global::Microsoft.Windows.Widgets.Feeds.Providers.IFeedProvider
    {

        public static readonly IntPtr AbiToProjectionVftablePtr;
        static unsafe IFeedProvider()
        {
            AbiToProjectionVftablePtr = ComWrappersSupport.AllocateVtableMemory(typeof(IFeedProvider), sizeof(IInspectable.Vftbl) + sizeof(IntPtr) * 5);
            *(IInspectable.Vftbl*)AbiToProjectionVftablePtr = IInspectable.Vftbl.AbiToProjectionVftable;
            ((delegate* unmanaged[Stdcall]<IntPtr, IntPtr, int>*)AbiToProjectionVftablePtr)[6] = &Do_Abi_OnFeedProviderEnabled_0;
            ((delegate* unmanaged[Stdcall]<IntPtr, IntPtr, int>*)AbiToProjectionVftablePtr)[7] = &Do_Abi_OnFeedProviderDisabled_1;
            ((delegate* unmanaged[Stdcall]<IntPtr, IntPtr, int>*)AbiToProjectionVftablePtr)[8] = &Do_Abi_OnFeedEnabled_2;
            ((delegate* unmanaged[Stdcall]<IntPtr, IntPtr, int>*)AbiToProjectionVftablePtr)[9] = &Do_Abi_OnFeedDisabled_3;
            ((delegate* unmanaged[Stdcall]<IntPtr, IntPtr, int>*)AbiToProjectionVftablePtr)[10] = &Do_Abi_OnCustomQueryParametersRequested_4;
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvStdcall) })]
        private static unsafe int Do_Abi_OnFeedProviderEnabled_0(IntPtr thisPtr, IntPtr args)
        {



            try
            {
                global::WinRT.ComWrappersSupport.FindObject<global::Microsoft.Windows.Widgets.Feeds.Providers.IFeedProvider>(thisPtr).OnFeedProviderEnabled(global::ABI.Microsoft.Windows.Widgets.Feeds.Providers.FeedProviderEnabledArgs.FromAbi(args));

            }
            catch (Exception __exception__)
            {
                global::WinRT.ExceptionHelpers.SetErrorInfo(__exception__);
                return global::WinRT.ExceptionHelpers.GetHRForException(__exception__);
            }
            return 0;
        }
        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvStdcall) })]
        private static unsafe int Do_Abi_OnFeedProviderDisabled_1(IntPtr thisPtr, IntPtr args)
        {



            try
            {
                global::WinRT.ComWrappersSupport.FindObject<global::Microsoft.Windows.Widgets.Feeds.Providers.IFeedProvider>(thisPtr).OnFeedProviderDisabled(global::ABI.Microsoft.Windows.Widgets.Feeds.Providers.FeedProviderDisabledArgs.FromAbi(args));

            }
            catch (Exception __exception__)
            {
                global::WinRT.ExceptionHelpers.SetErrorInfo(__exception__);
                return global::WinRT.ExceptionHelpers.GetHRForException(__exception__);
            }
            return 0;
        }
        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvStdcall) })]
        private static unsafe int Do_Abi_OnFeedEnabled_2(IntPtr thisPtr, IntPtr args)
        {



            try
            {
                global::WinRT.ComWrappersSupport.FindObject<global::Microsoft.Windows.Widgets.Feeds.Providers.IFeedProvider>(thisPtr).OnFeedEnabled(global::ABI.Microsoft.Windows.Widgets.Feeds.Providers.FeedEnabledArgs.FromAbi(args));

            }
            catch (Exception __exception__)
            {
                global::WinRT.ExceptionHelpers.SetErrorInfo(__exception__);
                return global::WinRT.ExceptionHelpers.GetHRForException(__exception__);
            }
            return 0;
        }
        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvStdcall) })]
        private static unsafe int Do_Abi_OnFeedDisabled_3(IntPtr thisPtr, IntPtr args)
        {



            try
            {
                global::WinRT.ComWrappersSupport.FindObject<global::Microsoft.Windows.Widgets.Feeds.Providers.IFeedProvider>(thisPtr).OnFeedDisabled(global::ABI.Microsoft.Windows.Widgets.Feeds.Providers.FeedDisabledArgs.FromAbi(args));

            }
            catch (Exception __exception__)
            {
                global::WinRT.ExceptionHelpers.SetErrorInfo(__exception__);
                return global::WinRT.ExceptionHelpers.GetHRForException(__exception__);
            }
            return 0;
        }
        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvStdcall) })]
        private static unsafe int Do_Abi_OnCustomQueryParametersRequested_4(IntPtr thisPtr, IntPtr args)
        {



            try
            {
                global::WinRT.ComWrappersSupport.FindObject<global::Microsoft.Windows.Widgets.Feeds.Providers.IFeedProvider>(thisPtr).OnCustomQueryParametersRequested(global::ABI.Microsoft.Windows.Widgets.Feeds.Providers.CustomQueryParametersRequestedArgs.FromAbi(args));

            }
            catch (Exception __exception__)
            {
                global::WinRT.ExceptionHelpers.SetErrorInfo(__exception__);
                return global::WinRT.ExceptionHelpers.GetHRForException(__exception__);
            }
            return 0;
        }

        unsafe void global::Microsoft.Windows.Widgets.Feeds.Providers.IFeedProvider.OnFeedProviderEnabled(global::Microsoft.Windows.Widgets.Feeds.Providers.FeedProviderEnabledArgs args)
        {
            var _obj = ((IObjectReference)((IWinRTObject)this).GetObjectReferenceForType(typeof(global::Microsoft.Windows.Widgets.Feeds.Providers.IFeedProvider).TypeHandle));
            global::ABI.Microsoft.Windows.Widgets.Feeds.Providers.IFeedProviderMethods.OnFeedProviderEnabled(_obj, args);
        }

        unsafe void global::Microsoft.Windows.Widgets.Feeds.Providers.IFeedProvider.OnFeedProviderDisabled(global::Microsoft.Windows.Widgets.Feeds.Providers.FeedProviderDisabledArgs args)
        {
            var _obj = ((IObjectReference)((IWinRTObject)this).GetObjectReferenceForType(typeof(global::Microsoft.Windows.Widgets.Feeds.Providers.IFeedProvider).TypeHandle));
            global::ABI.Microsoft.Windows.Widgets.Feeds.Providers.IFeedProviderMethods.OnFeedProviderDisabled(_obj, args);
        }

        unsafe void global::Microsoft.Windows.Widgets.Feeds.Providers.IFeedProvider.OnFeedEnabled(global::Microsoft.Windows.Widgets.Feeds.Providers.FeedEnabledArgs args)
        {
            var _obj = ((IObjectReference)((IWinRTObject)this).GetObjectReferenceForType(typeof(global::Microsoft.Windows.Widgets.Feeds.Providers.IFeedProvider).TypeHandle));
            global::ABI.Microsoft.Windows.Widgets.Feeds.Providers.IFeedProviderMethods.OnFeedEnabled(_obj, args);
        }

        unsafe void global::Microsoft.Windows.Widgets.Feeds.Providers.IFeedProvider.OnFeedDisabled(global::Microsoft.Windows.Widgets.Feeds.Providers.FeedDisabledArgs args)
        {
            var _obj = ((IObjectReference)((IWinRTObject)this).GetObjectReferenceForType(typeof(global::Microsoft.Windows.Widgets.Feeds.Providers.IFeedProvider).TypeHandle));
            global::ABI.Microsoft.Windows.Widgets.Feeds.Providers.IFeedProviderMethods.OnFeedDisabled(_obj, args);
        }

        unsafe void global::Microsoft.Windows.Widgets.Feeds.Providers.IFeedProvider.OnCustomQueryParametersRequested(global::Microsoft.Windows.Widgets.Feeds.Providers.CustomQueryParametersRequestedArgs args)
        {
            var _obj = ((IObjectReference)((IWinRTObject)this).GetObjectReferenceForType(typeof(global::Microsoft.Windows.Widgets.Feeds.Providers.IFeedProvider).TypeHandle));
            global::ABI.Microsoft.Windows.Widgets.Feeds.Providers.IFeedProviderMethods.OnCustomQueryParametersRequested(_obj, args);
        }
    }

    public static class IFeedProviderAnalyticsMethods
    {


        public static unsafe void OnAnalyticsInfoReported(IObjectReference _obj, global::Microsoft.Windows.Widgets.Feeds.Providers.FeedAnalyticsInfoReportedArgs args)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __args = default;
            try
            {
                __args = global::ABI.Microsoft.Windows.Widgets.Feeds.Providers.FeedAnalyticsInfoReportedArgs.CreateMarshaler2(args);
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, int>**)ThisPtr)[6](ThisPtr, MarshalInspectable<object>.GetAbi(__args)));
                global::System.GC.KeepAlive(_obj);
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__args);
            }
        }


        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0x91, 0x57, 0x88, 0xF6, 0x85, 0x30, 0xD7, 0x4B, 0x9C, 0xB1, 0x4F, 0x13, 0x54, 0xC3, 0xA6, 0x87 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

        public static global::System.IntPtr AbiToProjectionVftablePtr => IFeedProviderAnalytics.AbiToProjectionVftablePtr;

    }
    [DynamicInterfaceCastableImplementation]
    [Guid("F6885791-3085-4BD7-9CB1-4F1354C3A687")]
    internal unsafe interface IFeedProviderAnalytics : global::Microsoft.Windows.Widgets.Feeds.Providers.IFeedProviderAnalytics
    {

        public static readonly IntPtr AbiToProjectionVftablePtr;
        static unsafe IFeedProviderAnalytics()
        {
            AbiToProjectionVftablePtr = ComWrappersSupport.AllocateVtableMemory(typeof(IFeedProviderAnalytics), sizeof(IInspectable.Vftbl) + sizeof(IntPtr) * 1);
            *(IInspectable.Vftbl*)AbiToProjectionVftablePtr = IInspectable.Vftbl.AbiToProjectionVftable;
            ((delegate* unmanaged[Stdcall]<IntPtr, IntPtr, int>*)AbiToProjectionVftablePtr)[6] = &Do_Abi_OnAnalyticsInfoReported_0;
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvStdcall) })]
        private static unsafe int Do_Abi_OnAnalyticsInfoReported_0(IntPtr thisPtr, IntPtr args)
        {



            try
            {
                global::WinRT.ComWrappersSupport.FindObject<global::Microsoft.Windows.Widgets.Feeds.Providers.IFeedProviderAnalytics>(thisPtr).OnAnalyticsInfoReported(global::ABI.Microsoft.Windows.Widgets.Feeds.Providers.FeedAnalyticsInfoReportedArgs.FromAbi(args));

            }
            catch (Exception __exception__)
            {
                global::WinRT.ExceptionHelpers.SetErrorInfo(__exception__);
                return global::WinRT.ExceptionHelpers.GetHRForException(__exception__);
            }
            return 0;
        }

        unsafe void global::Microsoft.Windows.Widgets.Feeds.Providers.IFeedProviderAnalytics.OnAnalyticsInfoReported(global::Microsoft.Windows.Widgets.Feeds.Providers.FeedAnalyticsInfoReportedArgs args)
        {
            var _obj = ((IObjectReference)((IWinRTObject)this).GetObjectReferenceForType(typeof(global::Microsoft.Windows.Widgets.Feeds.Providers.IFeedProviderAnalytics).TypeHandle));
            global::ABI.Microsoft.Windows.Widgets.Feeds.Providers.IFeedProviderAnalyticsMethods.OnAnalyticsInfoReported(_obj, args);
        }
    }

    internal static class IFeedProviderDisabledArgsMethods
    {

        internal static unsafe string get_FeedProviderDefinitionId(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[6](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return MarshalString.FromAbi(__retval);
            }
            finally
            {
                MarshalString.DisposeAbi(__retval);
            }
        }



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0xEC, 0x5A, 0xB6, 0x19, 0x1D, 0xE0, 0x8C, 0x5E, 0xAB, 0x5F, 0x32, 0x42, 0x12, 0xE7, 0xCD, 0x30 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("19B65AEC-E01D-5E8C-AB5F-324212E7CD30")]
    internal interface IFeedProviderDisabledArgs : global::Microsoft.Windows.Widgets.Feeds.Providers.IFeedProviderDisabledArgs
    {
    }
    internal static class IFeedProviderEnabledArgsMethods
    {

        internal static unsafe string get_FeedProviderDefinitionId(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[6](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return MarshalString.FromAbi(__retval);
            }
            finally
            {
                MarshalString.DisposeAbi(__retval);
            }
        }



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0xAF, 0xC9, 0x1F, 0x82, 0xE6, 0xD, 0x9B, 0x5A, 0x9A, 0xE6, 0xE1, 0x79, 0x11, 0x7B, 0x40, 0xE4 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("821FC9AF-0DE6-5A9B-9AE6-E179117B40E4")]
    internal interface IFeedProviderEnabledArgs : global::Microsoft.Windows.Widgets.Feeds.Providers.IFeedProviderEnabledArgs
    {
    }
    public static class IFeedProviderErrorsMethods
    {


        public static unsafe void OnErrorInfoReported(IObjectReference _obj, global::Microsoft.Windows.Widgets.Feeds.Providers.FeedErrorInfoReportedArgs args)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __args = default;
            try
            {
                __args = global::ABI.Microsoft.Windows.Widgets.Feeds.Providers.FeedErrorInfoReportedArgs.CreateMarshaler2(args);
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, int>**)ThisPtr)[6](ThisPtr, MarshalInspectable<object>.GetAbi(__args)));
                global::System.GC.KeepAlive(_obj);
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__args);
            }
        }


        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0xA, 0xE0, 0x11, 0x66, 0x6C, 0xD8, 0xA3, 0x49, 0x93, 0x81, 0xB7, 0xDA, 0x67, 0xEE, 0x62, 0xDC };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

        public static global::System.IntPtr AbiToProjectionVftablePtr => IFeedProviderErrors.AbiToProjectionVftablePtr;

    }
    [DynamicInterfaceCastableImplementation]
    [Guid("6611E00A-D86C-49A3-9381-B7DA67EE62DC")]
    internal unsafe interface IFeedProviderErrors : global::Microsoft.Windows.Widgets.Feeds.Providers.IFeedProviderErrors
    {

        public static readonly IntPtr AbiToProjectionVftablePtr;
        static unsafe IFeedProviderErrors()
        {
            AbiToProjectionVftablePtr = ComWrappersSupport.AllocateVtableMemory(typeof(IFeedProviderErrors), sizeof(IInspectable.Vftbl) + sizeof(IntPtr) * 1);
            *(IInspectable.Vftbl*)AbiToProjectionVftablePtr = IInspectable.Vftbl.AbiToProjectionVftable;
            ((delegate* unmanaged[Stdcall]<IntPtr, IntPtr, int>*)AbiToProjectionVftablePtr)[6] = &Do_Abi_OnErrorInfoReported_0;
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvStdcall) })]
        private static unsafe int Do_Abi_OnErrorInfoReported_0(IntPtr thisPtr, IntPtr args)
        {



            try
            {
                global::WinRT.ComWrappersSupport.FindObject<global::Microsoft.Windows.Widgets.Feeds.Providers.IFeedProviderErrors>(thisPtr).OnErrorInfoReported(global::ABI.Microsoft.Windows.Widgets.Feeds.Providers.FeedErrorInfoReportedArgs.FromAbi(args));

            }
            catch (Exception __exception__)
            {
                global::WinRT.ExceptionHelpers.SetErrorInfo(__exception__);
                return global::WinRT.ExceptionHelpers.GetHRForException(__exception__);
            }
            return 0;
        }

        unsafe void global::Microsoft.Windows.Widgets.Feeds.Providers.IFeedProviderErrors.OnErrorInfoReported(global::Microsoft.Windows.Widgets.Feeds.Providers.FeedErrorInfoReportedArgs args)
        {
            var _obj = ((IObjectReference)((IWinRTObject)this).GetObjectReferenceForType(typeof(global::Microsoft.Windows.Widgets.Feeds.Providers.IFeedProviderErrors).TypeHandle));
            global::ABI.Microsoft.Windows.Widgets.Feeds.Providers.IFeedProviderErrorsMethods.OnErrorInfoReported(_obj, args);
        }
    }

    internal static class IFeedProviderInfoMethods
    {

        internal static unsafe string[] get_EnabledFeedDefinitionIds(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            int __retval_length = default;
            IntPtr __retval_data = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, int*, IntPtr*, int>**)ThisPtr)[7](ThisPtr, &__retval_length, &__retval_data));
                global::System.GC.KeepAlive(_obj);
                return MarshalString.FromAbiArray((__retval_length, __retval_data));
            }
            finally
            {
                MarshalString.DisposeAbiArray((__retval_length, __retval_data));
            }
        }

        internal static unsafe string get_FeedProviderDefinitionId(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[6](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return MarshalString.FromAbi(__retval);
            }
            finally
            {
                MarshalString.DisposeAbi(__retval);
            }
        }



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0x49, 0x70, 0xC3, 0x73, 0x3, 0x3C, 0x96, 0x58, 0x85, 0x32, 0xF9, 0xDF, 0xDA, 0xEB, 0x72, 0x3F };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("73C37049-3C03-5896-8532-F9DFDAEB723F")]
    internal interface IFeedProviderInfo : global::Microsoft.Windows.Widgets.Feeds.Providers.IFeedProviderInfo
    {
    }
    public static class IFeedProviderMessageMethods
    {


        public static unsafe void OnMessageReceived(IObjectReference _obj, global::Microsoft.Windows.Widgets.Feeds.Providers.FeedMessageReceivedArgs args)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __args = default;
            try
            {
                __args = global::ABI.Microsoft.Windows.Widgets.Feeds.Providers.FeedMessageReceivedArgs.CreateMarshaler2(args);
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, int>**)ThisPtr)[6](ThisPtr, MarshalInspectable<object>.GetAbi(__args)));
                global::System.GC.KeepAlive(_obj);
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__args);
            }
        }


        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0x2A, 0x44, 0xC2, 0x60, 0x9D, 0x4C, 0x80, 0x48, 0xBA, 0x26, 0xCA, 0xCA, 0x9E, 0x56, 0x7D, 0xD4 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

        public static global::System.IntPtr AbiToProjectionVftablePtr => IFeedProviderMessage.AbiToProjectionVftablePtr;

    }
    [DynamicInterfaceCastableImplementation]
    [Guid("60C2442A-4C9D-4880-BA26-CACA9E567DD4")]
    internal unsafe interface IFeedProviderMessage : global::Microsoft.Windows.Widgets.Feeds.Providers.IFeedProviderMessage
    {

        public static readonly IntPtr AbiToProjectionVftablePtr;
        static unsafe IFeedProviderMessage()
        {
            AbiToProjectionVftablePtr = ComWrappersSupport.AllocateVtableMemory(typeof(IFeedProviderMessage), sizeof(IInspectable.Vftbl) + sizeof(IntPtr) * 1);
            *(IInspectable.Vftbl*)AbiToProjectionVftablePtr = IInspectable.Vftbl.AbiToProjectionVftable;
            ((delegate* unmanaged[Stdcall]<IntPtr, IntPtr, int>*)AbiToProjectionVftablePtr)[6] = &Do_Abi_OnMessageReceived_0;
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvStdcall) })]
        private static unsafe int Do_Abi_OnMessageReceived_0(IntPtr thisPtr, IntPtr args)
        {



            try
            {
                global::WinRT.ComWrappersSupport.FindObject<global::Microsoft.Windows.Widgets.Feeds.Providers.IFeedProviderMessage>(thisPtr).OnMessageReceived(global::ABI.Microsoft.Windows.Widgets.Feeds.Providers.FeedMessageReceivedArgs.FromAbi(args));

            }
            catch (Exception __exception__)
            {
                global::WinRT.ExceptionHelpers.SetErrorInfo(__exception__);
                return global::WinRT.ExceptionHelpers.GetHRForException(__exception__);
            }
            return 0;
        }

        unsafe void global::Microsoft.Windows.Widgets.Feeds.Providers.IFeedProviderMessage.OnMessageReceived(global::Microsoft.Windows.Widgets.Feeds.Providers.FeedMessageReceivedArgs args)
        {
            var _obj = ((IObjectReference)((IWinRTObject)this).GetObjectReferenceForType(typeof(global::Microsoft.Windows.Widgets.Feeds.Providers.IFeedProviderMessage).TypeHandle));
            global::ABI.Microsoft.Windows.Widgets.Feeds.Providers.IFeedProviderMessageMethods.OnMessageReceived(_obj, args);
        }
    }

    public static class IFeedResourceProviderMethods
    {


        public static unsafe void OnResourceRequested(IObjectReference _obj, global::Microsoft.Windows.Widgets.Feeds.Providers.FeedResourceRequestedArgs args)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __args = default;
            try
            {
                __args = global::ABI.Microsoft.Windows.Widgets.Feeds.Providers.FeedResourceRequestedArgs.CreateMarshaler2(args);
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, int>**)ThisPtr)[6](ThisPtr, MarshalInspectable<object>.GetAbi(__args)));
                global::System.GC.KeepAlive(_obj);
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__args);
            }
        }


        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0x6D, 0x26, 0xB6, 0xE1, 0xA0, 0x88, 0x6C, 0x41, 0x94, 0x40, 0xE3, 0x41, 0xCB, 0x4, 0x7C, 0xD3 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

        public static global::System.IntPtr AbiToProjectionVftablePtr => IFeedResourceProvider.AbiToProjectionVftablePtr;

    }
    [DynamicInterfaceCastableImplementation]
    [Guid("E1B6266D-88A0-416C-9440-E341CB047CD3")]
    internal unsafe interface IFeedResourceProvider : global::Microsoft.Windows.Widgets.Feeds.Providers.IFeedResourceProvider
    {

        public static readonly IntPtr AbiToProjectionVftablePtr;
        static unsafe IFeedResourceProvider()
        {
            AbiToProjectionVftablePtr = ComWrappersSupport.AllocateVtableMemory(typeof(IFeedResourceProvider), sizeof(IInspectable.Vftbl) + sizeof(IntPtr) * 1);
            *(IInspectable.Vftbl*)AbiToProjectionVftablePtr = IInspectable.Vftbl.AbiToProjectionVftable;
            ((delegate* unmanaged[Stdcall]<IntPtr, IntPtr, int>*)AbiToProjectionVftablePtr)[6] = &Do_Abi_OnResourceRequested_0;
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvStdcall) })]
        private static unsafe int Do_Abi_OnResourceRequested_0(IntPtr thisPtr, IntPtr args)
        {



            try
            {
                global::WinRT.ComWrappersSupport.FindObject<global::Microsoft.Windows.Widgets.Feeds.Providers.IFeedResourceProvider>(thisPtr).OnResourceRequested(global::ABI.Microsoft.Windows.Widgets.Feeds.Providers.FeedResourceRequestedArgs.FromAbi(args));

            }
            catch (Exception __exception__)
            {
                global::WinRT.ExceptionHelpers.SetErrorInfo(__exception__);
                return global::WinRT.ExceptionHelpers.GetHRForException(__exception__);
            }
            return 0;
        }

        unsafe void global::Microsoft.Windows.Widgets.Feeds.Providers.IFeedResourceProvider.OnResourceRequested(global::Microsoft.Windows.Widgets.Feeds.Providers.FeedResourceRequestedArgs args)
        {
            var _obj = ((IObjectReference)((IWinRTObject)this).GetObjectReferenceForType(typeof(global::Microsoft.Windows.Widgets.Feeds.Providers.IFeedResourceProvider).TypeHandle));
            global::ABI.Microsoft.Windows.Widgets.Feeds.Providers.IFeedResourceProviderMethods.OnResourceRequested(_obj, args);
        }
    }

    internal static class IFeedResourceRequestMethods
    {

        internal static unsafe global::Windows.Storage.Streams.IRandomAccessStreamReference get_Content(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[9](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return MarshalInterface<global::Windows.Storage.Streams.IRandomAccessStreamReference>.FromAbi(__retval);
            }
            finally
            {
                MarshalInterface<global::Windows.Storage.Streams.IRandomAccessStreamReference>.DisposeAbi(__retval);
            }
        }
        internal static unsafe void set_Content(IObjectReference _obj, global::Windows.Storage.Streams.IRandomAccessStreamReference value)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __value = default;
            try
            {
                __value = MarshalInterface<global::Windows.Storage.Streams.IRandomAccessStreamReference>.CreateMarshaler2(value, global::ABI.Windows.Storage.Streams.IRandomAccessStreamReferenceMethods.IID);
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, int>**)ThisPtr)[10](ThisPtr, MarshalInspectable<object>.GetAbi(__value)));
                global::System.GC.KeepAlive(_obj);
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__value);
            }
        }

        internal static unsafe global::Windows.Foundation.Collections.StringMap get_Headers(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[11](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Windows.Foundation.Collections.StringMap.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Windows.Foundation.Collections.StringMap.DisposeAbi(__retval);
            }
        }
        internal static unsafe void set_Headers(IObjectReference _obj, global::Windows.Foundation.Collections.StringMap value)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __value = default;
            try
            {
                __value = global::ABI.Windows.Foundation.Collections.StringMap.CreateMarshaler2(value);
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, int>**)ThisPtr)[12](ThisPtr, MarshalInspectable<object>.GetAbi(__value)));
                global::System.GC.KeepAlive(_obj);
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__value);
            }
        }

        internal static unsafe string get_Method(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[7](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return MarshalString.FromAbi(__retval);
            }
            finally
            {
                MarshalString.DisposeAbi(__retval);
            }
        }
        internal static unsafe void set_Method(IObjectReference _obj, string value)
        {
            var ThisPtr = _obj.ThisPtr;

            MarshalString.Pinnable __value = new(value);
            fixed(void* ___value = __value)
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, int>**)ThisPtr)[8](ThisPtr, MarshalString.GetAbi(ref __value)));
                global::System.GC.KeepAlive(_obj);
            }
        }

        internal static unsafe string get_Uri(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[6](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return MarshalString.FromAbi(__retval);
            }
            finally
            {
                MarshalString.DisposeAbi(__retval);
            }
        }



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0x9C, 0x47, 0x2E, 0xE6, 0x1F, 0xE2, 0x63, 0x58, 0xB4, 0xC9, 0xDF, 0x1B, 0xE2, 0x22, 0x79, 0x81 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("E62E479C-E21F-5863-B4C9-DF1BE2227981")]
    internal interface IFeedResourceRequest : global::Microsoft.Windows.Widgets.Feeds.Providers.IFeedResourceRequest
    {
    }
    internal static class IFeedResourceRequestedArgsMethods
    {


        internal static unsafe global::Windows.Foundation.Deferral GetDeferral(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[11](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Windows.Foundation.Deferral.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Windows.Foundation.Deferral.DisposeAbi(__retval);
            }
        }
        internal static unsafe string get_FeedDefinitionId(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[7](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return MarshalString.FromAbi(__retval);
            }
            finally
            {
                MarshalString.DisposeAbi(__retval);
            }
        }

        internal static unsafe string get_FeedProviderDefinitionId(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[6](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return MarshalString.FromAbi(__retval);
            }
            finally
            {
                MarshalString.DisposeAbi(__retval);
            }
        }

        internal static unsafe global::Microsoft.Windows.Widgets.Feeds.Providers.FeedResourceRequest get_Request(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[8](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.Windows.Widgets.Feeds.Providers.FeedResourceRequest.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.Windows.Widgets.Feeds.Providers.FeedResourceRequest.DisposeAbi(__retval);
            }
        }

        internal static unsafe global::Microsoft.Windows.Widgets.Feeds.Providers.FeedResourceResponse get_Response(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[9](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.Windows.Widgets.Feeds.Providers.FeedResourceResponse.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.Windows.Widgets.Feeds.Providers.FeedResourceResponse.DisposeAbi(__retval);
            }
        }
        internal static unsafe void set_Response(IObjectReference _obj, global::Microsoft.Windows.Widgets.Feeds.Providers.FeedResourceResponse value)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __value = default;
            try
            {
                __value = global::ABI.Microsoft.Windows.Widgets.Feeds.Providers.FeedResourceResponse.CreateMarshaler2(value);
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, int>**)ThisPtr)[10](ThisPtr, MarshalInspectable<object>.GetAbi(__value)));
                global::System.GC.KeepAlive(_obj);
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__value);
            }
        }



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0x9, 0xB7, 0xE, 0x36, 0xC9, 0xB, 0xC1, 0x52, 0x9C, 0x70, 0x3C, 0x7D, 0x41, 0x31, 0x73, 0xD8 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("360EB709-0BC9-52C1-9C70-3C7D413173D8")]
    internal interface IFeedResourceRequestedArgs : global::Microsoft.Windows.Widgets.Feeds.Providers.IFeedResourceRequestedArgs
    {
    }
    internal static class IFeedResourceResponseMethods
    {

        internal static unsafe global::Windows.Storage.Streams.IRandomAccessStreamReference get_Content(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[6](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return MarshalInterface<global::Windows.Storage.Streams.IRandomAccessStreamReference>.FromAbi(__retval);
            }
            finally
            {
                MarshalInterface<global::Windows.Storage.Streams.IRandomAccessStreamReference>.DisposeAbi(__retval);
            }
        }

        internal static unsafe global::System.Collections.Generic.IEnumerable<global::System.Collections.Generic.KeyValuePair<string, string>> get_Headers(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[7](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                _ = global::WinRT.GenericTypeInstantiations.Windows_Foundation_Collections_IIterable_1_Windows_Foundation_Collections_IKeyValuePair_2_String__String_.EnsureInitialized();
                return MarshalInterface<global::System.Collections.Generic.IEnumerable<global::System.Collections.Generic.KeyValuePair<string, string>>>.FromAbi(__retval);
            }
            finally
            {
                MarshalInterface<global::System.Collections.Generic.IEnumerable<global::System.Collections.Generic.KeyValuePair<string, string>>>.DisposeAbi(__retval);
            }
        }
        internal static unsafe void set_Headers(IObjectReference _obj, global::System.Collections.Generic.IEnumerable<global::System.Collections.Generic.KeyValuePair<string, string>> value)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __value = default;
            try
            {
                __value = MarshalInterface<global::System.Collections.Generic.IEnumerable<global::System.Collections.Generic.KeyValuePair<string, string>>>.CreateMarshaler2(value, global::ABI.System.Collections.Generic.IEnumerableMethods<global::System.Collections.Generic.KeyValuePair<string, string>>.IID);
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, int>**)ThisPtr)[8](ThisPtr, MarshalInspectable<object>.GetAbi(__value)));
                global::System.GC.KeepAlive(_obj);
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__value);
            }
        }

        internal static unsafe string get_ReasonPhrase(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[9](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return MarshalString.FromAbi(__retval);
            }
            finally
            {
                MarshalString.DisposeAbi(__retval);
            }
        }

        internal static unsafe int get_StatusCode(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            int __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, int*, int>**)ThisPtr)[10](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0x4E, 0x82, 0x31, 0xF8, 0xEF, 0x7A, 0xFC, 0x53, 0xB7, 0xEE, 0x32, 0xAD, 0xE6, 0x75, 0xA3, 0xAD };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("F831824E-7AEF-53FC-B7EE-32ADE675A3AD")]
    internal interface IFeedResourceResponse : global::Microsoft.Windows.Widgets.Feeds.Providers.IFeedResourceResponse
    {
    }
    internal static class IFeedResourceResponseFactoryMethods
    {


        internal static unsafe global::Microsoft.Windows.Widgets.Feeds.Providers.FeedResourceResponse CreateInstance(IObjectReference _obj, global::Windows.Storage.Streams.IRandomAccessStreamReference content, string reasonPhrase, int statusCode)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __content = default;
            IntPtr __retval = default;
            try
            {
                __content = MarshalInterface<global::Windows.Storage.Streams.IRandomAccessStreamReference>.CreateMarshaler2(content, global::ABI.Windows.Storage.Streams.IRandomAccessStreamReferenceMethods.IID);
                MarshalString.Pinnable __reasonPhrase = new(reasonPhrase);
                fixed(void* ___reasonPhrase = __reasonPhrase)
                {
                    global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, IntPtr, int, IntPtr*, int>**)ThisPtr)[6](ThisPtr, MarshalInspectable<object>.GetAbi(__content), MarshalString.GetAbi(ref __reasonPhrase), statusCode, &__retval));
                    global::System.GC.KeepAlive(_obj);
                    return global::ABI.Microsoft.Windows.Widgets.Feeds.Providers.FeedResourceResponse.FromAbi(__retval);
                }
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__content);
                global::ABI.Microsoft.Windows.Widgets.Feeds.Providers.FeedResourceResponse.DisposeAbi(__retval);
            }
        }


        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0xD, 0x69, 0x1, 0xDB, 0x47, 0x25, 0x7A, 0x5D, 0xB6, 0x25, 0xD1, 0x62, 0x9F, 0x44, 0x3C, 0x5C };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("DB01690D-2547-5D7A-B625-D1629F443C5C")]
    internal interface IFeedResourceResponseFactory : global::Microsoft.Windows.Widgets.Feeds.Providers.IFeedResourceResponseFactory
    {
    }
}
#pragma warning restore CA1416
