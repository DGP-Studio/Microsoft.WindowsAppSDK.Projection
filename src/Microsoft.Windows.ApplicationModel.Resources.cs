//------------------------------------------------------------------------------
// <auto-generated>
//     This file was generated by cswinrt.exe version 2.2.0.241111.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Diagnostics;
using System.Diagnostics.CodeAnalysis;
using System.Linq.Expressions;
using System.Reflection;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;
using WinRT;
using WinRT.Interop;


#pragma warning disable 0169 // warning CS0169: The field '...' is never used
#pragma warning disable 0649 // warning CS0169: Field '...' is never assigned to
#pragma warning disable CA2207, CA1063, CA1033, CA1001, CA2213

namespace Microsoft.Windows.ApplicationModel.Resources
{
    [global::WinRT.WindowsRuntimeType("Microsoft.Windows.ApplicationModel.Resources")][Guid("DD6CDEDC-559B-50C8-AC53-82FE21F915F3")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.Windows.ApplicationModel.Resources.IKnownResourceQualifierNameStatics))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(MrtCoreContract), 65536u)]
    internal interface IKnownResourceQualifierNameStatics
    {
        string Contrast { get; }
        string Custom { get; }
        string DeviceFamily { get; }
        string HomeRegion { get; }
        string Language { get; }
        string LayoutDirection { get; }
        string Scale { get; }
        string TargetSize { get; }
        string Theme { get; }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.Windows.ApplicationModel.Resources")][Guid("6C54BC0C-EF1E-57B8-B478-34FECE737356")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.Windows.ApplicationModel.Resources.IResourceCandidate))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(MrtCoreContract), 65536u)]
    internal interface IResourceCandidate
    {
        ResourceCandidateKind Kind { get; }
        global::System.Collections.Generic.IReadOnlyDictionary<string, string> QualifierValues { get; }
        byte[] ValueAsBytes { get; }
        string ValueAsString { get; }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.Windows.ApplicationModel.Resources")][Guid("BB2B30F8-C19B-5F43-88D9-69AD728A32F4")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.Windows.ApplicationModel.Resources.IResourceCandidateFactory))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(MrtCoreContract), 65536u)]
    internal interface IResourceCandidateFactory
    {
        ResourceCandidate CreateInstance(ResourceCandidateKind kind, string data);
        ResourceCandidate CreateInstance2(byte[] data);
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.Windows.ApplicationModel.Resources")][Guid("96FB48DC-F77D-55FF-AF12-34861E3D4939")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.Windows.ApplicationModel.Resources.IResourceContext))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(MrtCoreContract), 65536u)]
    public interface IResourceContext
    {
        global::System.Collections.Generic.IDictionary<string, string> QualifierValues { get; }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.Windows.ApplicationModel.Resources")][Guid("7A3B1158-798C-5949-969D-03510B9CE6CA")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.Windows.ApplicationModel.Resources.IResourceContext2))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(MrtCoreContract), 65536u)]
    internal interface IResourceContext2
    {
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.Windows.ApplicationModel.Resources")][Guid("BC3F76BF-DA46-54CD-8715-8B8AAF16EAAC")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.Windows.ApplicationModel.Resources.IResourceLoader))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(MrtCoreContract), 65536u)]
    internal interface IResourceLoader
    {
        string GetString(string resourceId);
        string GetStringForUri(global::System.Uri resourceUri);
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.Windows.ApplicationModel.Resources")][Guid("871F83AA-FB34-50D6-B9B9-2C35F3FFC004")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.Windows.ApplicationModel.Resources.IResourceLoaderFactory))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(MrtCoreContract), 65536u)]
    internal interface IResourceLoaderFactory
    {
        ResourceLoader CreateInstance(string fileName);
        ResourceLoader CreateInstance2(string fileName, string resourceMap);
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.Windows.ApplicationModel.Resources")][Guid("EC9C894A-1466-5F2F-8EEE-A70CBD2B51BB")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.Windows.ApplicationModel.Resources.IResourceLoaderStatics))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(MrtCoreContract), 65536u)]
    internal interface IResourceLoaderStatics
    {
        string GetDefaultResourceFilePath();
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.Windows.ApplicationModel.Resources")][Guid("AC2291EF-81BE-5C99-A0AE-BCEE0180B8A8")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.Windows.ApplicationModel.Resources.IResourceManager))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(MrtCoreContract), 65536u)]
    public interface IResourceManager
    {
        ResourceContext CreateResourceContext();
        ResourceMap MainResourceMap { get; }
        event global::Windows.Foundation.TypedEventHandler<ResourceManager, ResourceNotFoundEventArgs> ResourceNotFound;
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.Windows.ApplicationModel.Resources")][Guid("7EC10160-A154-5C42-8268-30E306B1F585")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.Windows.ApplicationModel.Resources.IResourceManager2))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(MrtCoreContract), 65536u)]
    internal interface IResourceManager2
    {
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.Windows.ApplicationModel.Resources")][Guid("D6ACF18F-458A-535B-A5C4-AC2DC4E49099")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.Windows.ApplicationModel.Resources.IResourceManagerFactory))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(MrtCoreContract), 65536u)]
    internal interface IResourceManagerFactory
    {
        ResourceManager CreateInstance(string fileName);
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.Windows.ApplicationModel.Resources")][Guid("4ABBD9BC-DF4E-5C7B-812C-7E7BB0C22377")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.Windows.ApplicationModel.Resources.IResourceMap))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(MrtCoreContract), 65536u)]
    internal interface IResourceMap
    {
        ResourceMap GetSubtree(string reference);
        ResourceMap TryGetSubtree(string reference);
        [global::Windows.Foundation.Metadata.Overload(@"GetValue")]
        ResourceCandidate GetValue(string resource);
        [global::Windows.Foundation.Metadata.Overload(@"GetValueWithContext")]
        ResourceCandidate GetValue(string resource, ResourceContext context);
        [global::Windows.Foundation.Metadata.Overload(@"GetValueByIndex")]
        global::System.Collections.Generic.KeyValuePair<string, ResourceCandidate> GetValueByIndex(uint index);
        [global::Windows.Foundation.Metadata.Overload(@"GetValueByIndexWithContext")]
        global::System.Collections.Generic.KeyValuePair<string, ResourceCandidate> GetValueByIndex(uint index, ResourceContext context);
        [global::Windows.Foundation.Metadata.Overload(@"TryGetValue")]
        ResourceCandidate TryGetValue(string resource);
        [global::Windows.Foundation.Metadata.Overload(@"TryGetValueWithContext")]
        ResourceCandidate TryGetValue(string resource, ResourceContext context);
        uint ResourceCount { get; }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.Windows.ApplicationModel.Resources")][Guid("64ABB08B-E77D-5B26-830F-15941E0E8200")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.Windows.ApplicationModel.Resources.IResourceNotFoundEventArgs))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(MrtCoreContract), 65536u)]
    internal interface IResourceNotFoundEventArgs
    {
        void SetResolvedCandidate(ResourceCandidate candidate);
        ResourceContext Context { get; }
        string Name { get; }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.Windows.ApplicationModel.Resources")][global::Windows.Foundation.Metadata.ContractVersion(typeof(MrtCoreContract), 65536u)]
    public static class KnownResourceQualifierName
    {

        public static I As<I>() => ActivationFactory.Get("Microsoft.Windows.ApplicationModel.Resources.KnownResourceQualifierName").AsInterface<I>();

        private static volatile IObjectReference ___objRef_global__Microsoft_Windows_ApplicationModel_Resources_IKnownResourceQualifierNameStatics;
        private static IObjectReference _objRef_global__Microsoft_Windows_ApplicationModel_Resources_IKnownResourceQualifierNameStatics
        {
            get
            { 
                var factory = ___objRef_global__Microsoft_Windows_ApplicationModel_Resources_IKnownResourceQualifierNameStatics;
                if (factory != null && factory.IsInCurrentContext)
                {
                    return factory;
                }
                else
                {
                    return ___objRef_global__Microsoft_Windows_ApplicationModel_Resources_IKnownResourceQualifierNameStatics = ActivationFactory.Get("Microsoft.Windows.ApplicationModel.Resources.KnownResourceQualifierName", global::ABI.Microsoft.Windows.ApplicationModel.Resources.IKnownResourceQualifierNameStaticsMethods.IID);
                }
            }
        }

        public static string Contrast => global::ABI.Microsoft.Windows.ApplicationModel.Resources.IKnownResourceQualifierNameStaticsMethods.get_Contrast(_objRef_global__Microsoft_Windows_ApplicationModel_Resources_IKnownResourceQualifierNameStatics);

        public static string Custom => global::ABI.Microsoft.Windows.ApplicationModel.Resources.IKnownResourceQualifierNameStaticsMethods.get_Custom(_objRef_global__Microsoft_Windows_ApplicationModel_Resources_IKnownResourceQualifierNameStatics);

        public static string DeviceFamily => global::ABI.Microsoft.Windows.ApplicationModel.Resources.IKnownResourceQualifierNameStaticsMethods.get_DeviceFamily(_objRef_global__Microsoft_Windows_ApplicationModel_Resources_IKnownResourceQualifierNameStatics);

        public static string HomeRegion => global::ABI.Microsoft.Windows.ApplicationModel.Resources.IKnownResourceQualifierNameStaticsMethods.get_HomeRegion(_objRef_global__Microsoft_Windows_ApplicationModel_Resources_IKnownResourceQualifierNameStatics);

        public static string Language => global::ABI.Microsoft.Windows.ApplicationModel.Resources.IKnownResourceQualifierNameStaticsMethods.get_Language(_objRef_global__Microsoft_Windows_ApplicationModel_Resources_IKnownResourceQualifierNameStatics);

        public static string LayoutDirection => global::ABI.Microsoft.Windows.ApplicationModel.Resources.IKnownResourceQualifierNameStaticsMethods.get_LayoutDirection(_objRef_global__Microsoft_Windows_ApplicationModel_Resources_IKnownResourceQualifierNameStatics);

        public static string Scale => global::ABI.Microsoft.Windows.ApplicationModel.Resources.IKnownResourceQualifierNameStaticsMethods.get_Scale(_objRef_global__Microsoft_Windows_ApplicationModel_Resources_IKnownResourceQualifierNameStatics);

        public static string TargetSize => global::ABI.Microsoft.Windows.ApplicationModel.Resources.IKnownResourceQualifierNameStaticsMethods.get_TargetSize(_objRef_global__Microsoft_Windows_ApplicationModel_Resources_IKnownResourceQualifierNameStatics);

        public static string Theme => global::ABI.Microsoft.Windows.ApplicationModel.Resources.IKnownResourceQualifierNameStaticsMethods.get_Theme(_objRef_global__Microsoft_Windows_ApplicationModel_Resources_IKnownResourceQualifierNameStatics);
    }
    [global::Windows.Foundation.Metadata.ContractVersion(131072u)]
    public enum MrtCoreContract
    {
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.Windows.ApplicationModel.Resources")]
    [global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.Windows.ApplicationModel.Resources.ResourceCandidate))]
    [global::ABI.Microsoft.Windows.ApplicationModel.Resources.ResourceCandidateRcwFactory]
    [global::WinRT.ProjectedRuntimeClass(typeof(IResourceCandidate))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(MrtCoreContract), 65536u)]
    public sealed class ResourceCandidate : global::System.Runtime.InteropServices.ICustomQueryInterface, IWinRTObject, IEquatable<ResourceCandidate>
    {
        private IntPtr ThisPtr => _inner == null ? (((IWinRTObject)this).NativeObject).ThisPtr : _inner.ThisPtr;

        private readonly IObjectReference _inner = null;



        private IObjectReference _objRef_global__Microsoft_Windows_ApplicationModel_Resources_IResourceCandidate => _inner;


        private static class _IResourceCandidateFactoryMethods
        {
            public static unsafe IntPtr CreateInstance(IObjectReference _obj, ResourceCandidateKind kind, string data)
            {
                var ThisPtr = _obj.ThisPtr;

                IntPtr __retval = default;
                MarshalString.Pinnable __data = new(data);
                fixed(void* ___data = __data)
                {
                    global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, ResourceCandidateKind, IntPtr, IntPtr*, int>**)ThisPtr)[6](ThisPtr, kind, MarshalString.GetAbi(ref __data), &__retval));
                    global::System.GC.KeepAlive(_obj);
                    return __retval;
                }
            }

            public static unsafe IntPtr CreateInstance2(IObjectReference _obj, byte[] data)
            {
                var ThisPtr = _obj.ThisPtr;

                MarshalBlittable<byte>.MarshalerArray __data = default;
                int __data_length = default;
                IntPtr __data_data = default;
                IntPtr __retval = default;
                try
                {
                    __data = MarshalBlittable<byte>.CreateMarshalerArray(data);
                    (__data_length, __data_data) = MarshalBlittable<byte>.GetAbiArray(__data);
                    global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, int, IntPtr, IntPtr*, int>**)ThisPtr)[7](ThisPtr, __data_length, __data_data, &__retval));
                    global::System.GC.KeepAlive(_obj);
                    return __retval;
                }
                finally
                {
                    MarshalBlittable<byte>.DisposeMarshalerArray(__data);
                }
            }
        }

        private static volatile IObjectReference ___objRef_global__Microsoft_Windows_ApplicationModel_Resources_IResourceCandidateFactory;
        private static IObjectReference _objRef_global__Microsoft_Windows_ApplicationModel_Resources_IResourceCandidateFactory
        {
            get
            { 
                var factory = ___objRef_global__Microsoft_Windows_ApplicationModel_Resources_IResourceCandidateFactory;
                if (factory != null && factory.IsInCurrentContext)
                {
                    return factory;
                }
                else
                {
                    return ___objRef_global__Microsoft_Windows_ApplicationModel_Resources_IResourceCandidateFactory = ActivationFactory.Get("Microsoft.Windows.ApplicationModel.Resources.ResourceCandidate", global::ABI.Microsoft.Windows.ApplicationModel.Resources.IResourceCandidateFactoryMethods.IID);
                }
            }
        }

        public ResourceCandidate(ResourceCandidateKind kind, string data) 
        { 
        IntPtr ptr = (_IResourceCandidateFactoryMethods.CreateInstance(_objRef_global__Microsoft_Windows_ApplicationModel_Resources_IResourceCandidateFactory, kind, data)); 
        try 
        { 
        _inner = ComWrappersSupport.GetObjectReferenceForInterface(ptr, global::ABI.Microsoft.Windows.ApplicationModel.Resources.IResourceCandidateMethods.IID, false); 

        } 
        finally 
        { 
        MarshalInspectable<object>.DisposeAbi(ptr); 
        }

        ComWrappersSupport.RegisterObjectForInterface(this, ThisPtr);
        ComWrappersHelper.Init(_inner, false);
        }

        public ResourceCandidate(byte[] data) 
        { 
        IntPtr ptr = (_IResourceCandidateFactoryMethods.CreateInstance2(_objRef_global__Microsoft_Windows_ApplicationModel_Resources_IResourceCandidateFactory, data)); 
        try 
        { 
        _inner = ComWrappersSupport.GetObjectReferenceForInterface(ptr, global::ABI.Microsoft.Windows.ApplicationModel.Resources.IResourceCandidateMethods.IID, false); 

        } 
        finally 
        { 
        MarshalInspectable<object>.DisposeAbi(ptr); 
        }

        ComWrappersSupport.RegisterObjectForInterface(this, ThisPtr);
        ComWrappersHelper.Init(_inner, false);
        }

        public static ResourceCandidate FromAbi(IntPtr thisPtr)
        {
            if (thisPtr == IntPtr.Zero) return null;
            return MarshalInspectable<ResourceCandidate>.FromAbi(thisPtr);
        }

        internal ResourceCandidate(IObjectReference objRef)
        {
            _inner = objRef.As(global::ABI.Microsoft.Windows.ApplicationModel.Resources.IResourceCandidateMethods.IID);

        }


        public static bool operator ==(ResourceCandidate x, ResourceCandidate y) => (x?.ThisPtr ?? IntPtr.Zero) == (y?.ThisPtr ?? IntPtr.Zero);
        public static bool operator !=(ResourceCandidate x, ResourceCandidate y) => !(x == y);
        public bool Equals(ResourceCandidate other) => this == other;
        public override bool Equals(object obj) => obj is ResourceCandidate that && this == that;
        public override int GetHashCode() => ThisPtr.GetHashCode();


        bool IWinRTObject.HasUnwrappableNativeObject => true;
        IObjectReference IWinRTObject.NativeObject => _inner;
        private volatile global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> _queryInterfaceCache;
        private global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> MakeQueryInterfaceCache()
        {
            global::System.Threading.Interlocked.CompareExchange(ref _queryInterfaceCache, new global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference>(), null); 
            return _queryInterfaceCache;
        }
        global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> IWinRTObject.QueryInterfaceCache => _queryInterfaceCache ?? MakeQueryInterfaceCache();
        private volatile global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> _additionalTypeData;
        private global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> MakeAdditionalTypeData()
        {
            global::System.Threading.Interlocked.CompareExchange(ref _additionalTypeData, new global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object>(), null); 
            return _additionalTypeData;
        }
        global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> IWinRTObject.AdditionalTypeData => _additionalTypeData ?? MakeAdditionalTypeData();

        private struct InterfaceTag<I>{};


        public ResourceCandidateKind Kind => global::ABI.Microsoft.Windows.ApplicationModel.Resources.IResourceCandidateMethods.get_Kind(_objRef_global__Microsoft_Windows_ApplicationModel_Resources_IResourceCandidate);

        public global::System.Collections.Generic.IReadOnlyDictionary<string, string> QualifierValues => global::ABI.Microsoft.Windows.ApplicationModel.Resources.IResourceCandidateMethods.get_QualifierValues(_objRef_global__Microsoft_Windows_ApplicationModel_Resources_IResourceCandidate);

        public byte[] ValueAsBytes => global::ABI.Microsoft.Windows.ApplicationModel.Resources.IResourceCandidateMethods.get_ValueAsBytes(_objRef_global__Microsoft_Windows_ApplicationModel_Resources_IResourceCandidate);

        public string ValueAsString => global::ABI.Microsoft.Windows.ApplicationModel.Resources.IResourceCandidateMethods.get_ValueAsString(_objRef_global__Microsoft_Windows_ApplicationModel_Resources_IResourceCandidate);

        private bool IsOverridableInterface(Guid iid) => false;

        global::System.Runtime.InteropServices.CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(ref Guid iid, out IntPtr ppv)
        {
            ppv = IntPtr.Zero;
            if (IsOverridableInterface(iid) || global::WinRT.Interop.IID.IID_IInspectable == iid)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
            }

            if (((IWinRTObject)this).NativeObject.TryAs(iid, out ppv) >= 0)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.Handled;
            }

            return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
        }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.Windows.ApplicationModel.Resources")][global::WinRT.WinRTExposedType(typeof(global::WinRT.EnumTypeDetails<ResourceCandidateKind>))][global::Windows.Foundation.Metadata.ContractVersion(typeof(MrtCoreContract), 65536u)]
    public enum ResourceCandidateKind : int
    {
        Unknown = unchecked((int)0),
        String = unchecked((int)0x1),
        FilePath = unchecked((int)0x2),
        EmbeddedData = unchecked((int)0x3),
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.Windows.ApplicationModel.Resources")]
    [global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.Windows.ApplicationModel.Resources.ResourceContext))]
    [global::ABI.Microsoft.Windows.ApplicationModel.Resources.ResourceContextRcwFactory]
    [global::WinRT.ProjectedRuntimeClass(typeof(IResourceContext))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(MrtCoreContract), 65536u)]
    public sealed class ResourceContext : IResourceContext, global::System.Runtime.InteropServices.ICustomQueryInterface, IWinRTObject, IEquatable<ResourceContext>
    {
        private IntPtr ThisPtr => _inner == null ? (((IWinRTObject)this).NativeObject).ThisPtr : _inner.ThisPtr;

        private readonly IObjectReference _inner = null;




        private volatile IObjectReference ___objRef_global__Microsoft_Windows_ApplicationModel_Resources_IResourceContext2;
        private IObjectReference Make___objRef_global__Microsoft_Windows_ApplicationModel_Resources_IResourceContext2()
        {
            global::System.Threading.Interlocked.CompareExchange(ref ___objRef_global__Microsoft_Windows_ApplicationModel_Resources_IResourceContext2, ((IWinRTObject)this).NativeObject.As<IUnknownVftbl>(global::ABI.Microsoft.Windows.ApplicationModel.Resources.IResourceContext2Methods.IID), null);
            return ___objRef_global__Microsoft_Windows_ApplicationModel_Resources_IResourceContext2;
        }
        private IObjectReference _objRef_global__Microsoft_Windows_ApplicationModel_Resources_IResourceContext2 => ___objRef_global__Microsoft_Windows_ApplicationModel_Resources_IResourceContext2 ?? Make___objRef_global__Microsoft_Windows_ApplicationModel_Resources_IResourceContext2();
        private IObjectReference _objRef_global__Microsoft_Windows_ApplicationModel_Resources_IResourceContext => _inner;


        public static ResourceContext FromAbi(IntPtr thisPtr)
        {
            if (thisPtr == IntPtr.Zero) return null;
            return MarshalInspectable<ResourceContext>.FromAbi(thisPtr);
        }

        internal ResourceContext(IObjectReference objRef)
        {
            _inner = objRef.As(global::ABI.Microsoft.Windows.ApplicationModel.Resources.IResourceContextMethods.IID);

        }


        public static bool operator ==(ResourceContext x, ResourceContext y) => (x?.ThisPtr ?? IntPtr.Zero) == (y?.ThisPtr ?? IntPtr.Zero);
        public static bool operator !=(ResourceContext x, ResourceContext y) => !(x == y);
        public bool Equals(ResourceContext other) => this == other;
        public override bool Equals(object obj) => obj is ResourceContext that && this == that;
        public override int GetHashCode() => ThisPtr.GetHashCode();


        bool IWinRTObject.HasUnwrappableNativeObject => true;
        IObjectReference IWinRTObject.NativeObject => _inner;
        private volatile global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> _queryInterfaceCache;
        private global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> MakeQueryInterfaceCache()
        {
            global::System.Threading.Interlocked.CompareExchange(ref _queryInterfaceCache, new global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference>(), null); 
            return _queryInterfaceCache;
        }
        global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> IWinRTObject.QueryInterfaceCache => _queryInterfaceCache ?? MakeQueryInterfaceCache();
        private volatile global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> _additionalTypeData;
        private global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> MakeAdditionalTypeData()
        {
            global::System.Threading.Interlocked.CompareExchange(ref _additionalTypeData, new global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object>(), null); 
            return _additionalTypeData;
        }
        global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> IWinRTObject.AdditionalTypeData => _additionalTypeData ?? MakeAdditionalTypeData();

        private struct InterfaceTag<I>{};


        public global::System.Collections.Generic.IDictionary<string, string> QualifierValues => global::ABI.Microsoft.Windows.ApplicationModel.Resources.IResourceContextMethods.get_QualifierValues(_objRef_global__Microsoft_Windows_ApplicationModel_Resources_IResourceContext);

        private bool IsOverridableInterface(Guid iid) => false;

        global::System.Runtime.InteropServices.CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(ref Guid iid, out IntPtr ppv)
        {
            ppv = IntPtr.Zero;
            if (IsOverridableInterface(iid) || global::WinRT.Interop.IID.IID_IInspectable == iid)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
            }

            if (((IWinRTObject)this).NativeObject.TryAs(iid, out ppv) >= 0)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.Handled;
            }

            return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
        }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.Windows.ApplicationModel.Resources")]
    [global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.Windows.ApplicationModel.Resources.ResourceLoader))]
    [global::ABI.Microsoft.Windows.ApplicationModel.Resources.ResourceLoaderRcwFactory]
    [global::WinRT.ProjectedRuntimeClass(typeof(IResourceLoader))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(MrtCoreContract), 65536u)]
    public sealed class ResourceLoader : global::System.Runtime.InteropServices.ICustomQueryInterface, IWinRTObject, IEquatable<ResourceLoader>
    {
        private IntPtr ThisPtr => _inner == null ? (((IWinRTObject)this).NativeObject).ThisPtr : _inner.ThisPtr;

        private readonly IObjectReference _inner = null;



        private IObjectReference _objRef_global__Microsoft_Windows_ApplicationModel_Resources_IResourceLoader => _inner;


        private static volatile IObjectReference ___objRef_global__Microsoft_Windows_ApplicationModel_Resources_ResourceLoader;
        private static IObjectReference _objRef_global__Microsoft_Windows_ApplicationModel_Resources_ResourceLoader
        {
            get
            { 
                var factory = ___objRef_global__Microsoft_Windows_ApplicationModel_Resources_ResourceLoader;
                if (factory != null && factory.IsInCurrentContext)
                {
                    return factory;
                }
                else
                {
                    return ___objRef_global__Microsoft_Windows_ApplicationModel_Resources_ResourceLoader = ActivationFactory.Get("Microsoft.Windows.ApplicationModel.Resources.ResourceLoader");
                }
            }
        }

        public ResourceLoader() 
        {
            _inner = global::ABI.WinRT.Interop.IActivationFactoryMethods.ActivateInstanceUnsafe(_objRef_global__Microsoft_Windows_ApplicationModel_Resources_ResourceLoader, global::ABI.Microsoft.Windows.ApplicationModel.Resources.IResourceLoaderMethods.IID);
            ComWrappersSupport.RegisterObjectForInterface(this, ThisPtr);
            ComWrappersHelper.Init(_inner, false);

        }

        private static class _IResourceLoaderFactoryMethods
        {
            public static unsafe IntPtr CreateInstance(IObjectReference _obj, string fileName)
            {
                var ThisPtr = _obj.ThisPtr;

                IntPtr __retval = default;
                MarshalString.Pinnable __fileName = new(fileName);
                fixed(void* ___fileName = __fileName)
                {
                    global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, IntPtr*, int>**)ThisPtr)[6](ThisPtr, MarshalString.GetAbi(ref __fileName), &__retval));
                    global::System.GC.KeepAlive(_obj);
                    return __retval;
                }
            }

            public static unsafe IntPtr CreateInstance2(IObjectReference _obj, string fileName, string resourceMap)
            {
                var ThisPtr = _obj.ThisPtr;

                IntPtr __retval = default;
                MarshalString.Pinnable __fileName = new(fileName);
                MarshalString.Pinnable __resourceMap = new(resourceMap);
                fixed(void* ___fileName = __fileName, ___resourceMap = __resourceMap)
                {
                    global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, IntPtr, IntPtr*, int>**)ThisPtr)[7](ThisPtr, MarshalString.GetAbi(ref __fileName), MarshalString.GetAbi(ref __resourceMap), &__retval));
                    global::System.GC.KeepAlive(_obj);
                    return __retval;
                }
            }
        }

        private static volatile IObjectReference ___objRef_global__Microsoft_Windows_ApplicationModel_Resources_IResourceLoaderFactory;
        private static IObjectReference _objRef_global__Microsoft_Windows_ApplicationModel_Resources_IResourceLoaderFactory
        {
            get
            { 
                var factory = ___objRef_global__Microsoft_Windows_ApplicationModel_Resources_IResourceLoaderFactory;
                if (factory != null && factory.IsInCurrentContext)
                {
                    return factory;
                }
                else
                {
                    return ___objRef_global__Microsoft_Windows_ApplicationModel_Resources_IResourceLoaderFactory = ActivationFactory.Get("Microsoft.Windows.ApplicationModel.Resources.ResourceLoader", global::ABI.Microsoft.Windows.ApplicationModel.Resources.IResourceLoaderFactoryMethods.IID);
                }
            }
        }

        public ResourceLoader(string fileName) 
        { 
        IntPtr ptr = (_IResourceLoaderFactoryMethods.CreateInstance(_objRef_global__Microsoft_Windows_ApplicationModel_Resources_IResourceLoaderFactory, fileName)); 
        try 
        { 
        _inner = ComWrappersSupport.GetObjectReferenceForInterface(ptr, global::ABI.Microsoft.Windows.ApplicationModel.Resources.IResourceLoaderMethods.IID, false); 

        } 
        finally 
        { 
        MarshalInspectable<object>.DisposeAbi(ptr); 
        }

        ComWrappersSupport.RegisterObjectForInterface(this, ThisPtr);
        ComWrappersHelper.Init(_inner, false);
        }

        public ResourceLoader(string fileName, string resourceMap) 
        { 
        IntPtr ptr = (_IResourceLoaderFactoryMethods.CreateInstance2(_objRef_global__Microsoft_Windows_ApplicationModel_Resources_IResourceLoaderFactory, fileName, resourceMap)); 
        try 
        { 
        _inner = ComWrappersSupport.GetObjectReferenceForInterface(ptr, global::ABI.Microsoft.Windows.ApplicationModel.Resources.IResourceLoaderMethods.IID, false); 

        } 
        finally 
        { 
        MarshalInspectable<object>.DisposeAbi(ptr); 
        }

        ComWrappersSupport.RegisterObjectForInterface(this, ThisPtr);
        ComWrappersHelper.Init(_inner, false);
        }

        public static I As<I>() => ActivationFactory.Get("Microsoft.Windows.ApplicationModel.Resources.ResourceLoader").AsInterface<I>();

        private static volatile IObjectReference ___objRef_global__Microsoft_Windows_ApplicationModel_Resources_IResourceLoaderStatics;
        private static IObjectReference _objRef_global__Microsoft_Windows_ApplicationModel_Resources_IResourceLoaderStatics
        {
            get
            { 
                var factory = ___objRef_global__Microsoft_Windows_ApplicationModel_Resources_IResourceLoaderStatics;
                if (factory != null && factory.IsInCurrentContext)
                {
                    return factory;
                }
                else
                {
                    return ___objRef_global__Microsoft_Windows_ApplicationModel_Resources_IResourceLoaderStatics = ActivationFactory.Get("Microsoft.Windows.ApplicationModel.Resources.ResourceLoader", global::ABI.Microsoft.Windows.ApplicationModel.Resources.IResourceLoaderStaticsMethods.IID);
                }
            }
        }

        public static string GetDefaultResourceFilePath() => global::ABI.Microsoft.Windows.ApplicationModel.Resources.IResourceLoaderStaticsMethods.GetDefaultResourceFilePath(_objRef_global__Microsoft_Windows_ApplicationModel_Resources_IResourceLoaderStatics);

        public static ResourceLoader FromAbi(IntPtr thisPtr)
        {
            if (thisPtr == IntPtr.Zero) return null;
            return MarshalInspectable<ResourceLoader>.FromAbi(thisPtr);
        }

        internal ResourceLoader(IObjectReference objRef)
        {
            _inner = objRef.As(global::ABI.Microsoft.Windows.ApplicationModel.Resources.IResourceLoaderMethods.IID);

        }


        public static bool operator ==(ResourceLoader x, ResourceLoader y) => (x?.ThisPtr ?? IntPtr.Zero) == (y?.ThisPtr ?? IntPtr.Zero);
        public static bool operator !=(ResourceLoader x, ResourceLoader y) => !(x == y);
        public bool Equals(ResourceLoader other) => this == other;
        public override bool Equals(object obj) => obj is ResourceLoader that && this == that;
        public override int GetHashCode() => ThisPtr.GetHashCode();


        bool IWinRTObject.HasUnwrappableNativeObject => true;
        IObjectReference IWinRTObject.NativeObject => _inner;
        private volatile global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> _queryInterfaceCache;
        private global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> MakeQueryInterfaceCache()
        {
            global::System.Threading.Interlocked.CompareExchange(ref _queryInterfaceCache, new global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference>(), null); 
            return _queryInterfaceCache;
        }
        global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> IWinRTObject.QueryInterfaceCache => _queryInterfaceCache ?? MakeQueryInterfaceCache();
        private volatile global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> _additionalTypeData;
        private global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> MakeAdditionalTypeData()
        {
            global::System.Threading.Interlocked.CompareExchange(ref _additionalTypeData, new global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object>(), null); 
            return _additionalTypeData;
        }
        global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> IWinRTObject.AdditionalTypeData => _additionalTypeData ?? MakeAdditionalTypeData();

        private struct InterfaceTag<I>{};


        public string GetString(string resourceId) => global::ABI.Microsoft.Windows.ApplicationModel.Resources.IResourceLoaderMethods.GetString(_objRef_global__Microsoft_Windows_ApplicationModel_Resources_IResourceLoader, resourceId);

        public string GetStringForUri(global::System.Uri resourceUri) => global::ABI.Microsoft.Windows.ApplicationModel.Resources.IResourceLoaderMethods.GetStringForUri(_objRef_global__Microsoft_Windows_ApplicationModel_Resources_IResourceLoader, resourceUri);

        private bool IsOverridableInterface(Guid iid) => false;

        global::System.Runtime.InteropServices.CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(ref Guid iid, out IntPtr ppv)
        {
            ppv = IntPtr.Zero;
            if (IsOverridableInterface(iid) || global::WinRT.Interop.IID.IID_IInspectable == iid)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
            }

            if (((IWinRTObject)this).NativeObject.TryAs(iid, out ppv) >= 0)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.Handled;
            }

            return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
        }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.Windows.ApplicationModel.Resources")]
    [global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.Windows.ApplicationModel.Resources.ResourceManager))]
    [global::ABI.Microsoft.Windows.ApplicationModel.Resources.ResourceManagerRcwFactory]
    [global::WinRT.ProjectedRuntimeClass(typeof(IResourceManager))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(MrtCoreContract), 65536u)]
    public sealed class ResourceManager : IResourceManager, global::System.Runtime.InteropServices.ICustomQueryInterface, IWinRTObject, IEquatable<ResourceManager>
    {
        private IntPtr ThisPtr => _inner == null ? (((IWinRTObject)this).NativeObject).ThisPtr : _inner.ThisPtr;

        private readonly IObjectReference _inner = null;




        private volatile IObjectReference ___objRef_global__Microsoft_Windows_ApplicationModel_Resources_IResourceManager2;
        private IObjectReference Make___objRef_global__Microsoft_Windows_ApplicationModel_Resources_IResourceManager2()
        {
            global::System.Threading.Interlocked.CompareExchange(ref ___objRef_global__Microsoft_Windows_ApplicationModel_Resources_IResourceManager2, ((IWinRTObject)this).NativeObject.As<IUnknownVftbl>(global::ABI.Microsoft.Windows.ApplicationModel.Resources.IResourceManager2Methods.IID), null);
            return ___objRef_global__Microsoft_Windows_ApplicationModel_Resources_IResourceManager2;
        }
        private IObjectReference _objRef_global__Microsoft_Windows_ApplicationModel_Resources_IResourceManager2 => ___objRef_global__Microsoft_Windows_ApplicationModel_Resources_IResourceManager2 ?? Make___objRef_global__Microsoft_Windows_ApplicationModel_Resources_IResourceManager2();
        private IObjectReference _objRef_global__Microsoft_Windows_ApplicationModel_Resources_IResourceManager => _inner;


        private static volatile IObjectReference ___objRef_global__Microsoft_Windows_ApplicationModel_Resources_ResourceManager;
        private static IObjectReference _objRef_global__Microsoft_Windows_ApplicationModel_Resources_ResourceManager
        {
            get
            { 
                var factory = ___objRef_global__Microsoft_Windows_ApplicationModel_Resources_ResourceManager;
                if (factory != null && factory.IsInCurrentContext)
                {
                    return factory;
                }
                else
                {
                    return ___objRef_global__Microsoft_Windows_ApplicationModel_Resources_ResourceManager = ActivationFactory.Get("Microsoft.Windows.ApplicationModel.Resources.ResourceManager");
                }
            }
        }

        public ResourceManager() 
        {
            _inner = global::ABI.WinRT.Interop.IActivationFactoryMethods.ActivateInstanceUnsafe(_objRef_global__Microsoft_Windows_ApplicationModel_Resources_ResourceManager, global::ABI.Microsoft.Windows.ApplicationModel.Resources.IResourceManagerMethods.IID);
            ComWrappersSupport.RegisterObjectForInterface(this, ThisPtr);
            ComWrappersHelper.Init(_inner, false);

        }

        private static class _IResourceManagerFactoryMethods
        {
            public static unsafe IntPtr CreateInstance(IObjectReference _obj, string fileName)
            {
                var ThisPtr = _obj.ThisPtr;

                IntPtr __retval = default;
                MarshalString.Pinnable __fileName = new(fileName);
                fixed(void* ___fileName = __fileName)
                {
                    global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, IntPtr*, int>**)ThisPtr)[6](ThisPtr, MarshalString.GetAbi(ref __fileName), &__retval));
                    global::System.GC.KeepAlive(_obj);
                    return __retval;
                }
            }
        }

        private static volatile IObjectReference ___objRef_global__Microsoft_Windows_ApplicationModel_Resources_IResourceManagerFactory;
        private static IObjectReference _objRef_global__Microsoft_Windows_ApplicationModel_Resources_IResourceManagerFactory
        {
            get
            { 
                var factory = ___objRef_global__Microsoft_Windows_ApplicationModel_Resources_IResourceManagerFactory;
                if (factory != null && factory.IsInCurrentContext)
                {
                    return factory;
                }
                else
                {
                    return ___objRef_global__Microsoft_Windows_ApplicationModel_Resources_IResourceManagerFactory = ActivationFactory.Get("Microsoft.Windows.ApplicationModel.Resources.ResourceManager", global::ABI.Microsoft.Windows.ApplicationModel.Resources.IResourceManagerFactoryMethods.IID);
                }
            }
        }

        public ResourceManager(string fileName) 
        { 
        IntPtr ptr = (_IResourceManagerFactoryMethods.CreateInstance(_objRef_global__Microsoft_Windows_ApplicationModel_Resources_IResourceManagerFactory, fileName)); 
        try 
        { 
        _inner = ComWrappersSupport.GetObjectReferenceForInterface(ptr, global::ABI.Microsoft.Windows.ApplicationModel.Resources.IResourceManagerMethods.IID, false); 

        } 
        finally 
        { 
        MarshalInspectable<object>.DisposeAbi(ptr); 
        }

        ComWrappersSupport.RegisterObjectForInterface(this, ThisPtr);
        ComWrappersHelper.Init(_inner, false);
        }

        public static ResourceManager FromAbi(IntPtr thisPtr)
        {
            if (thisPtr == IntPtr.Zero) return null;
            return MarshalInspectable<ResourceManager>.FromAbi(thisPtr);
        }

        internal ResourceManager(IObjectReference objRef)
        {
            _inner = objRef.As(global::ABI.Microsoft.Windows.ApplicationModel.Resources.IResourceManagerMethods.IID);

        }


        public static bool operator ==(ResourceManager x, ResourceManager y) => (x?.ThisPtr ?? IntPtr.Zero) == (y?.ThisPtr ?? IntPtr.Zero);
        public static bool operator !=(ResourceManager x, ResourceManager y) => !(x == y);
        public bool Equals(ResourceManager other) => this == other;
        public override bool Equals(object obj) => obj is ResourceManager that && this == that;
        public override int GetHashCode() => ThisPtr.GetHashCode();


        bool IWinRTObject.HasUnwrappableNativeObject => true;
        IObjectReference IWinRTObject.NativeObject => _inner;
        private volatile global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> _queryInterfaceCache;
        private global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> MakeQueryInterfaceCache()
        {
            global::System.Threading.Interlocked.CompareExchange(ref _queryInterfaceCache, new global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference>(), null); 
            return _queryInterfaceCache;
        }
        global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> IWinRTObject.QueryInterfaceCache => _queryInterfaceCache ?? MakeQueryInterfaceCache();
        private volatile global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> _additionalTypeData;
        private global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> MakeAdditionalTypeData()
        {
            global::System.Threading.Interlocked.CompareExchange(ref _additionalTypeData, new global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object>(), null); 
            return _additionalTypeData;
        }
        global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> IWinRTObject.AdditionalTypeData => _additionalTypeData ?? MakeAdditionalTypeData();

        private struct InterfaceTag<I>{};


        public ResourceContext CreateResourceContext() => global::ABI.Microsoft.Windows.ApplicationModel.Resources.IResourceManagerMethods.CreateResourceContext(_objRef_global__Microsoft_Windows_ApplicationModel_Resources_IResourceManager);

        public event global::Windows.Foundation.TypedEventHandler<ResourceManager, ResourceNotFoundEventArgs> ResourceNotFound
        {
            add => global::ABI.Microsoft.Windows.ApplicationModel.Resources.IResourceManagerMethods.Get_ResourceNotFound2(_objRef_global__Microsoft_Windows_ApplicationModel_Resources_IResourceManager, (IWinRTObject)this).Subscribe(value);
            remove => global::ABI.Microsoft.Windows.ApplicationModel.Resources.IResourceManagerMethods.Get_ResourceNotFound2(_objRef_global__Microsoft_Windows_ApplicationModel_Resources_IResourceManager, (IWinRTObject)this).Unsubscribe(value);
        }

        public ResourceMap MainResourceMap => global::ABI.Microsoft.Windows.ApplicationModel.Resources.IResourceManagerMethods.get_MainResourceMap(_objRef_global__Microsoft_Windows_ApplicationModel_Resources_IResourceManager);

        private bool IsOverridableInterface(Guid iid) => false;

        global::System.Runtime.InteropServices.CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(ref Guid iid, out IntPtr ppv)
        {
            ppv = IntPtr.Zero;
            if (IsOverridableInterface(iid) || global::WinRT.Interop.IID.IID_IInspectable == iid)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
            }

            if (((IWinRTObject)this).NativeObject.TryAs(iid, out ppv) >= 0)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.Handled;
            }

            return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
        }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.Windows.ApplicationModel.Resources")]
    [global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.Windows.ApplicationModel.Resources.ResourceMap))]
    [global::ABI.Microsoft.Windows.ApplicationModel.Resources.ResourceMapRcwFactory]
    [global::WinRT.ProjectedRuntimeClass(typeof(IResourceMap))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(MrtCoreContract), 65536u)]
    public sealed class ResourceMap : global::System.Runtime.InteropServices.ICustomQueryInterface, IWinRTObject, IEquatable<ResourceMap>
    {
        private IntPtr ThisPtr => _inner == null ? (((IWinRTObject)this).NativeObject).ThisPtr : _inner.ThisPtr;

        private readonly IObjectReference _inner = null;



        private IObjectReference _objRef_global__Microsoft_Windows_ApplicationModel_Resources_IResourceMap => _inner;


        public static ResourceMap FromAbi(IntPtr thisPtr)
        {
            if (thisPtr == IntPtr.Zero) return null;
            return MarshalInspectable<ResourceMap>.FromAbi(thisPtr);
        }

        internal ResourceMap(IObjectReference objRef)
        {
            _inner = objRef.As(global::ABI.Microsoft.Windows.ApplicationModel.Resources.IResourceMapMethods.IID);

        }


        public static bool operator ==(ResourceMap x, ResourceMap y) => (x?.ThisPtr ?? IntPtr.Zero) == (y?.ThisPtr ?? IntPtr.Zero);
        public static bool operator !=(ResourceMap x, ResourceMap y) => !(x == y);
        public bool Equals(ResourceMap other) => this == other;
        public override bool Equals(object obj) => obj is ResourceMap that && this == that;
        public override int GetHashCode() => ThisPtr.GetHashCode();


        bool IWinRTObject.HasUnwrappableNativeObject => true;
        IObjectReference IWinRTObject.NativeObject => _inner;
        private volatile global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> _queryInterfaceCache;
        private global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> MakeQueryInterfaceCache()
        {
            global::System.Threading.Interlocked.CompareExchange(ref _queryInterfaceCache, new global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference>(), null); 
            return _queryInterfaceCache;
        }
        global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> IWinRTObject.QueryInterfaceCache => _queryInterfaceCache ?? MakeQueryInterfaceCache();
        private volatile global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> _additionalTypeData;
        private global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> MakeAdditionalTypeData()
        {
            global::System.Threading.Interlocked.CompareExchange(ref _additionalTypeData, new global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object>(), null); 
            return _additionalTypeData;
        }
        global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> IWinRTObject.AdditionalTypeData => _additionalTypeData ?? MakeAdditionalTypeData();

        private struct InterfaceTag<I>{};


        public ResourceMap GetSubtree(string reference) => global::ABI.Microsoft.Windows.ApplicationModel.Resources.IResourceMapMethods.GetSubtree(_objRef_global__Microsoft_Windows_ApplicationModel_Resources_IResourceMap, reference);

        public ResourceMap TryGetSubtree(string reference) => global::ABI.Microsoft.Windows.ApplicationModel.Resources.IResourceMapMethods.TryGetSubtree(_objRef_global__Microsoft_Windows_ApplicationModel_Resources_IResourceMap, reference);

        public ResourceCandidate GetValue(string resource) => global::ABI.Microsoft.Windows.ApplicationModel.Resources.IResourceMapMethods.GetValue(_objRef_global__Microsoft_Windows_ApplicationModel_Resources_IResourceMap, resource);

        public ResourceCandidate GetValue(string resource, ResourceContext context) => global::ABI.Microsoft.Windows.ApplicationModel.Resources.IResourceMapMethods.GetValue(_objRef_global__Microsoft_Windows_ApplicationModel_Resources_IResourceMap, resource, context);

        public global::System.Collections.Generic.KeyValuePair<string, ResourceCandidate> GetValueByIndex(uint index) => global::ABI.Microsoft.Windows.ApplicationModel.Resources.IResourceMapMethods.GetValueByIndex(_objRef_global__Microsoft_Windows_ApplicationModel_Resources_IResourceMap, index);

        public global::System.Collections.Generic.KeyValuePair<string, ResourceCandidate> GetValueByIndex(uint index, ResourceContext context) => global::ABI.Microsoft.Windows.ApplicationModel.Resources.IResourceMapMethods.GetValueByIndex(_objRef_global__Microsoft_Windows_ApplicationModel_Resources_IResourceMap, index, context);

        public ResourceCandidate TryGetValue(string resource) => global::ABI.Microsoft.Windows.ApplicationModel.Resources.IResourceMapMethods.TryGetValue(_objRef_global__Microsoft_Windows_ApplicationModel_Resources_IResourceMap, resource);

        public ResourceCandidate TryGetValue(string resource, ResourceContext context) => global::ABI.Microsoft.Windows.ApplicationModel.Resources.IResourceMapMethods.TryGetValue(_objRef_global__Microsoft_Windows_ApplicationModel_Resources_IResourceMap, resource, context);

        public uint ResourceCount => global::ABI.Microsoft.Windows.ApplicationModel.Resources.IResourceMapMethods.get_ResourceCount(_objRef_global__Microsoft_Windows_ApplicationModel_Resources_IResourceMap);

        private bool IsOverridableInterface(Guid iid) => false;

        global::System.Runtime.InteropServices.CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(ref Guid iid, out IntPtr ppv)
        {
            ppv = IntPtr.Zero;
            if (IsOverridableInterface(iid) || global::WinRT.Interop.IID.IID_IInspectable == iid)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
            }

            if (((IWinRTObject)this).NativeObject.TryAs(iid, out ppv) >= 0)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.Handled;
            }

            return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
        }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.Windows.ApplicationModel.Resources")]
    [global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.Windows.ApplicationModel.Resources.ResourceNotFoundEventArgs))]
    [global::ABI.Microsoft.Windows.ApplicationModel.Resources.ResourceNotFoundEventArgsRcwFactory]
    [global::WinRT.ProjectedRuntimeClass(typeof(IResourceNotFoundEventArgs))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(MrtCoreContract), 65536u)]
    public sealed class ResourceNotFoundEventArgs : global::System.Runtime.InteropServices.ICustomQueryInterface, IWinRTObject, IEquatable<ResourceNotFoundEventArgs>
    {
        private IntPtr ThisPtr => _inner == null ? (((IWinRTObject)this).NativeObject).ThisPtr : _inner.ThisPtr;

        private readonly IObjectReference _inner = null;



        private IObjectReference _objRef_global__Microsoft_Windows_ApplicationModel_Resources_IResourceNotFoundEventArgs => _inner;


        public static ResourceNotFoundEventArgs FromAbi(IntPtr thisPtr)
        {
            if (thisPtr == IntPtr.Zero) return null;
            return MarshalInspectable<ResourceNotFoundEventArgs>.FromAbi(thisPtr);
        }

        internal ResourceNotFoundEventArgs(IObjectReference objRef)
        {
            _inner = objRef.As(global::ABI.Microsoft.Windows.ApplicationModel.Resources.IResourceNotFoundEventArgsMethods.IID);

        }


        public static bool operator ==(ResourceNotFoundEventArgs x, ResourceNotFoundEventArgs y) => (x?.ThisPtr ?? IntPtr.Zero) == (y?.ThisPtr ?? IntPtr.Zero);
        public static bool operator !=(ResourceNotFoundEventArgs x, ResourceNotFoundEventArgs y) => !(x == y);
        public bool Equals(ResourceNotFoundEventArgs other) => this == other;
        public override bool Equals(object obj) => obj is ResourceNotFoundEventArgs that && this == that;
        public override int GetHashCode() => ThisPtr.GetHashCode();


        bool IWinRTObject.HasUnwrappableNativeObject => true;
        IObjectReference IWinRTObject.NativeObject => _inner;
        private volatile global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> _queryInterfaceCache;
        private global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> MakeQueryInterfaceCache()
        {
            global::System.Threading.Interlocked.CompareExchange(ref _queryInterfaceCache, new global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference>(), null); 
            return _queryInterfaceCache;
        }
        global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> IWinRTObject.QueryInterfaceCache => _queryInterfaceCache ?? MakeQueryInterfaceCache();
        private volatile global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> _additionalTypeData;
        private global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> MakeAdditionalTypeData()
        {
            global::System.Threading.Interlocked.CompareExchange(ref _additionalTypeData, new global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object>(), null); 
            return _additionalTypeData;
        }
        global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> IWinRTObject.AdditionalTypeData => _additionalTypeData ?? MakeAdditionalTypeData();

        private struct InterfaceTag<I>{};


        public void SetResolvedCandidate(ResourceCandidate candidate) => global::ABI.Microsoft.Windows.ApplicationModel.Resources.IResourceNotFoundEventArgsMethods.SetResolvedCandidate(_objRef_global__Microsoft_Windows_ApplicationModel_Resources_IResourceNotFoundEventArgs, candidate);

        public ResourceContext Context => global::ABI.Microsoft.Windows.ApplicationModel.Resources.IResourceNotFoundEventArgsMethods.get_Context(_objRef_global__Microsoft_Windows_ApplicationModel_Resources_IResourceNotFoundEventArgs);

        public string Name => global::ABI.Microsoft.Windows.ApplicationModel.Resources.IResourceNotFoundEventArgsMethods.get_Name(_objRef_global__Microsoft_Windows_ApplicationModel_Resources_IResourceNotFoundEventArgs);

        private bool IsOverridableInterface(Guid iid) => false;

        global::System.Runtime.InteropServices.CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(ref Guid iid, out IntPtr ppv)
        {
            ppv = IntPtr.Zero;
            if (IsOverridableInterface(iid) || global::WinRT.Interop.IID.IID_IInspectable == iid)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
            }

            if (((IWinRTObject)this).NativeObject.TryAs(iid, out ppv) >= 0)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.Handled;
            }

            return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
        }
    }
}

#pragma warning disable CA1416
namespace ABI.Microsoft.Windows.ApplicationModel.Resources
{
    internal static class IKnownResourceQualifierNameStaticsMethods
    {

        internal static unsafe string get_Contrast(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[6](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return MarshalString.FromAbi(__retval);
            }
            finally
            {
                MarshalString.DisposeAbi(__retval);
            }
        }

        internal static unsafe string get_Custom(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[7](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return MarshalString.FromAbi(__retval);
            }
            finally
            {
                MarshalString.DisposeAbi(__retval);
            }
        }

        internal static unsafe string get_DeviceFamily(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[8](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return MarshalString.FromAbi(__retval);
            }
            finally
            {
                MarshalString.DisposeAbi(__retval);
            }
        }

        internal static unsafe string get_HomeRegion(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[9](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return MarshalString.FromAbi(__retval);
            }
            finally
            {
                MarshalString.DisposeAbi(__retval);
            }
        }

        internal static unsafe string get_Language(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[10](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return MarshalString.FromAbi(__retval);
            }
            finally
            {
                MarshalString.DisposeAbi(__retval);
            }
        }

        internal static unsafe string get_LayoutDirection(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[11](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return MarshalString.FromAbi(__retval);
            }
            finally
            {
                MarshalString.DisposeAbi(__retval);
            }
        }

        internal static unsafe string get_Scale(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[12](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return MarshalString.FromAbi(__retval);
            }
            finally
            {
                MarshalString.DisposeAbi(__retval);
            }
        }

        internal static unsafe string get_TargetSize(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[13](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return MarshalString.FromAbi(__retval);
            }
            finally
            {
                MarshalString.DisposeAbi(__retval);
            }
        }

        internal static unsafe string get_Theme(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[14](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return MarshalString.FromAbi(__retval);
            }
            finally
            {
                MarshalString.DisposeAbi(__retval);
            }
        }



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0xDC, 0xDE, 0x6C, 0xDD, 0x9B, 0x55, 0xC8, 0x50, 0xAC, 0x53, 0x82, 0xFE, 0x21, 0xF9, 0x15, 0xF3 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("DD6CDEDC-559B-50C8-AC53-82FE21F915F3")]
    internal interface IKnownResourceQualifierNameStatics : global::Microsoft.Windows.ApplicationModel.Resources.IKnownResourceQualifierNameStatics
    {
    }
    internal static class IResourceCandidateMethods
    {

        internal static unsafe global::Microsoft.Windows.ApplicationModel.Resources.ResourceCandidateKind get_Kind(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::Microsoft.Windows.ApplicationModel.Resources.ResourceCandidateKind __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::Microsoft.Windows.ApplicationModel.Resources.ResourceCandidateKind*, int>**)ThisPtr)[8](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }

        internal static unsafe global::System.Collections.Generic.IReadOnlyDictionary<string, string> get_QualifierValues(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[9](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                _ = global::WinRT.GenericTypeInstantiations.Windows_Foundation_Collections_IMapView_2_String__String.EnsureInitialized();
                return MarshalInterface<global::System.Collections.Generic.IReadOnlyDictionary<string, string>>.FromAbi(__retval);
            }
            finally
            {
                MarshalInterface<global::System.Collections.Generic.IReadOnlyDictionary<string, string>>.DisposeAbi(__retval);
            }
        }

        internal static unsafe byte[] get_ValueAsBytes(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            int __retval_length = default;
            IntPtr __retval_data = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, int*, IntPtr*, int>**)ThisPtr)[7](ThisPtr, &__retval_length, &__retval_data));
                global::System.GC.KeepAlive(_obj);
                return MarshalBlittable<byte>.FromAbiArray((__retval_length, __retval_data));
            }
            finally
            {
                MarshalBlittable<byte>.DisposeAbiArray((__retval_length, __retval_data));
            }
        }

        internal static unsafe string get_ValueAsString(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[6](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return MarshalString.FromAbi(__retval);
            }
            finally
            {
                MarshalString.DisposeAbi(__retval);
            }
        }



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0xC, 0xBC, 0x54, 0x6C, 0x1E, 0xEF, 0xB8, 0x57, 0xB4, 0x78, 0x34, 0xFE, 0xCE, 0x73, 0x73, 0x56 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("6C54BC0C-EF1E-57B8-B478-34FECE737356")]
    internal interface IResourceCandidate : global::Microsoft.Windows.ApplicationModel.Resources.IResourceCandidate
    {
    }
    internal static class IResourceCandidateFactoryMethods
    {


        internal static unsafe global::Microsoft.Windows.ApplicationModel.Resources.ResourceCandidate CreateInstance(IObjectReference _obj, global::Microsoft.Windows.ApplicationModel.Resources.ResourceCandidateKind kind, string data)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                MarshalString.Pinnable __data = new(data);
                fixed(void* ___data = __data)
                {
                    global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::Microsoft.Windows.ApplicationModel.Resources.ResourceCandidateKind, IntPtr, IntPtr*, int>**)ThisPtr)[6](ThisPtr, kind, MarshalString.GetAbi(ref __data), &__retval));
                    global::System.GC.KeepAlive(_obj);
                    return global::ABI.Microsoft.Windows.ApplicationModel.Resources.ResourceCandidate.FromAbi(__retval);
                }
            }
            finally
            {
                global::ABI.Microsoft.Windows.ApplicationModel.Resources.ResourceCandidate.DisposeAbi(__retval);
            }
        }

        internal static unsafe global::Microsoft.Windows.ApplicationModel.Resources.ResourceCandidate CreateInstance2(IObjectReference _obj, byte[] data)
        {
            var ThisPtr = _obj.ThisPtr;

            MarshalBlittable<byte>.MarshalerArray __data = default;
            int __data_length = default;
            IntPtr __data_data = default;
            IntPtr __retval = default;
            try
            {
                __data = MarshalBlittable<byte>.CreateMarshalerArray(data);
                (__data_length, __data_data) = MarshalBlittable<byte>.GetAbiArray(__data);
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, int, IntPtr, IntPtr*, int>**)ThisPtr)[7](ThisPtr, __data_length, __data_data, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.Windows.ApplicationModel.Resources.ResourceCandidate.FromAbi(__retval);
            }
            finally
            {
                MarshalBlittable<byte>.DisposeMarshalerArray(__data);
                global::ABI.Microsoft.Windows.ApplicationModel.Resources.ResourceCandidate.DisposeAbi(__retval);
            }
        }


        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0xF8, 0x30, 0x2B, 0xBB, 0x9B, 0xC1, 0x43, 0x5F, 0x88, 0xD9, 0x69, 0xAD, 0x72, 0x8A, 0x32, 0xF4 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("BB2B30F8-C19B-5F43-88D9-69AD728A32F4")]
    internal interface IResourceCandidateFactory : global::Microsoft.Windows.ApplicationModel.Resources.IResourceCandidateFactory
    {
    }
    public static class IResourceContextMethods
    {

        public static unsafe global::System.Collections.Generic.IDictionary<string, string> get_QualifierValues(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[6](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                _ = global::WinRT.GenericTypeInstantiations.Windows_Foundation_Collections_IMap_2_String__String.EnsureInitialized();
                return MarshalInterface<global::System.Collections.Generic.IDictionary<string, string>>.FromAbi(__retval);
            }
            finally
            {
                MarshalInterface<global::System.Collections.Generic.IDictionary<string, string>>.DisposeAbi(__retval);
            }
        }



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0xDC, 0x48, 0xFB, 0x96, 0x7D, 0xF7, 0xFF, 0x55, 0xAF, 0x12, 0x34, 0x86, 0x1E, 0x3D, 0x49, 0x39 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

        public static global::System.IntPtr AbiToProjectionVftablePtr => IResourceContext.AbiToProjectionVftablePtr;

    }
    [DynamicInterfaceCastableImplementation]
    [Guid("96FB48DC-F77D-55FF-AF12-34861E3D4939")]
    internal unsafe interface IResourceContext : global::Microsoft.Windows.ApplicationModel.Resources.IResourceContext
    {

        public static readonly IntPtr AbiToProjectionVftablePtr;
        static unsafe IResourceContext()
        {
            AbiToProjectionVftablePtr = ComWrappersSupport.AllocateVtableMemory(typeof(IResourceContext), sizeof(IInspectable.Vftbl) + sizeof(IntPtr) * 1);
            *(IInspectable.Vftbl*)AbiToProjectionVftablePtr = IInspectable.Vftbl.AbiToProjectionVftable;
            ((delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>*)AbiToProjectionVftablePtr)[6] = &Do_Abi_get_QualifierValues_0;
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvStdcall) })]
        private static unsafe int Do_Abi_get_QualifierValues_0(IntPtr thisPtr, IntPtr* value)
        {
            _ = global::WinRT.GenericTypeInstantiations.Windows_Foundation_Collections_IMap_2_String__String.EnsureInitialized();

            global::System.Collections.Generic.IDictionary<string, string> __value = default;

            *value = default;

            try
            {
                __value = global::WinRT.ComWrappersSupport.FindObject<global::Microsoft.Windows.ApplicationModel.Resources.IResourceContext>(thisPtr).QualifierValues;
                *value = MarshalInterface<global::System.Collections.Generic.IDictionary<string, string>>.FromManaged(__value);

            }
            catch (Exception __exception__)
            {
                global::WinRT.ExceptionHelpers.SetErrorInfo(__exception__);
                return global::WinRT.ExceptionHelpers.GetHRForException(__exception__);
            }
            return 0;
        }

        unsafe global::System.Collections.Generic.IDictionary<string, string> global::Microsoft.Windows.ApplicationModel.Resources.IResourceContext.QualifierValues
        {
            get
            {
                var _obj = ((IObjectReference)((IWinRTObject)this).GetObjectReferenceForType(typeof(global::Microsoft.Windows.ApplicationModel.Resources.IResourceContext).TypeHandle));
                return global::ABI.Microsoft.Windows.ApplicationModel.Resources.IResourceContextMethods.get_QualifierValues(_obj);
            }
        }
    }

    internal static class IResourceContext2Methods
    {



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0x58, 0x11, 0x3B, 0x7A, 0x8C, 0x79, 0x49, 0x59, 0x96, 0x9D, 0x3, 0x51, 0xB, 0x9C, 0xE6, 0xCA };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("7A3B1158-798C-5949-969D-03510B9CE6CA")]
    internal interface IResourceContext2 : global::Microsoft.Windows.ApplicationModel.Resources.IResourceContext2
    {
    }
    internal static class IResourceLoaderMethods
    {


        internal static unsafe string GetString(IObjectReference _obj, string resourceId)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                MarshalString.Pinnable __resourceId = new(resourceId);
                fixed(void* ___resourceId = __resourceId)
                {
                    global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, IntPtr*, int>**)ThisPtr)[6](ThisPtr, MarshalString.GetAbi(ref __resourceId), &__retval));
                    global::System.GC.KeepAlive(_obj);
                    return MarshalString.FromAbi(__retval);
                }
            }
            finally
            {
                MarshalString.DisposeAbi(__retval);
            }
        }

        internal static unsafe string GetStringForUri(IObjectReference _obj, global::System.Uri resourceUri)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __resourceUri = default;
            IntPtr __retval = default;
            try
            {
                __resourceUri = global::ABI.System.Uri.CreateMarshaler2(resourceUri);
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, IntPtr*, int>**)ThisPtr)[7](ThisPtr, MarshalInspectable<object>.GetAbi(__resourceUri), &__retval));
                global::System.GC.KeepAlive(_obj);
                return MarshalString.FromAbi(__retval);
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__resourceUri);
                MarshalString.DisposeAbi(__retval);
            }
        }


        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0xBF, 0x76, 0x3F, 0xBC, 0x46, 0xDA, 0xCD, 0x54, 0x87, 0x15, 0x8B, 0x8A, 0xAF, 0x16, 0xEA, 0xAC };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("BC3F76BF-DA46-54CD-8715-8B8AAF16EAAC")]
    internal interface IResourceLoader : global::Microsoft.Windows.ApplicationModel.Resources.IResourceLoader
    {
    }
    internal static class IResourceLoaderFactoryMethods
    {


        internal static unsafe global::Microsoft.Windows.ApplicationModel.Resources.ResourceLoader CreateInstance(IObjectReference _obj, string fileName)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                MarshalString.Pinnable __fileName = new(fileName);
                fixed(void* ___fileName = __fileName)
                {
                    global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, IntPtr*, int>**)ThisPtr)[6](ThisPtr, MarshalString.GetAbi(ref __fileName), &__retval));
                    global::System.GC.KeepAlive(_obj);
                    return global::ABI.Microsoft.Windows.ApplicationModel.Resources.ResourceLoader.FromAbi(__retval);
                }
            }
            finally
            {
                global::ABI.Microsoft.Windows.ApplicationModel.Resources.ResourceLoader.DisposeAbi(__retval);
            }
        }

        internal static unsafe global::Microsoft.Windows.ApplicationModel.Resources.ResourceLoader CreateInstance2(IObjectReference _obj, string fileName, string resourceMap)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                MarshalString.Pinnable __fileName = new(fileName);
                MarshalString.Pinnable __resourceMap = new(resourceMap);
                fixed(void* ___fileName = __fileName, ___resourceMap = __resourceMap)
                {
                    global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, IntPtr, IntPtr*, int>**)ThisPtr)[7](ThisPtr, MarshalString.GetAbi(ref __fileName), MarshalString.GetAbi(ref __resourceMap), &__retval));
                    global::System.GC.KeepAlive(_obj);
                    return global::ABI.Microsoft.Windows.ApplicationModel.Resources.ResourceLoader.FromAbi(__retval);
                }
            }
            finally
            {
                global::ABI.Microsoft.Windows.ApplicationModel.Resources.ResourceLoader.DisposeAbi(__retval);
            }
        }


        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0xAA, 0x83, 0x1F, 0x87, 0x34, 0xFB, 0xD6, 0x50, 0xB9, 0xB9, 0x2C, 0x35, 0xF3, 0xFF, 0xC0, 0x4 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("871F83AA-FB34-50D6-B9B9-2C35F3FFC004")]
    internal interface IResourceLoaderFactory : global::Microsoft.Windows.ApplicationModel.Resources.IResourceLoaderFactory
    {
    }
    internal static class IResourceLoaderStaticsMethods
    {


        internal static unsafe string GetDefaultResourceFilePath(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[6](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return MarshalString.FromAbi(__retval);
            }
            finally
            {
                MarshalString.DisposeAbi(__retval);
            }
        }


        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0x4A, 0x89, 0x9C, 0xEC, 0x66, 0x14, 0x2F, 0x5F, 0x8E, 0xEE, 0xA7, 0xC, 0xBD, 0x2B, 0x51, 0xBB };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("EC9C894A-1466-5F2F-8EEE-A70CBD2B51BB")]
    internal interface IResourceLoaderStatics : global::Microsoft.Windows.ApplicationModel.Resources.IResourceLoaderStatics
    {
    }
    public static class IResourceManagerMethods
    {


        public static unsafe global::Microsoft.Windows.ApplicationModel.Resources.ResourceContext CreateResourceContext(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[7](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.Windows.ApplicationModel.Resources.ResourceContext.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.Windows.ApplicationModel.Resources.ResourceContext.DisposeAbi(__retval);
            }
        }
        public static unsafe global::Microsoft.Windows.ApplicationModel.Resources.ResourceMap get_MainResourceMap(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[6](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.Windows.ApplicationModel.Resources.ResourceMap.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.Windows.ApplicationModel.Resources.ResourceMap.DisposeAbi(__retval);
            }
        }


        private volatile static global::System.Runtime.CompilerServices.ConditionalWeakTable<object, global::ABI.WinRT.Interop.EventSource<global::Windows.Foundation.TypedEventHandler<global::Microsoft.Windows.ApplicationModel.Resources.ResourceManager, global::Microsoft.Windows.ApplicationModel.Resources.ResourceNotFoundEventArgs>>> _ResourceNotFound_;
        private static global::System.Runtime.CompilerServices.ConditionalWeakTable<object, global::ABI.WinRT.Interop.EventSource<global::Windows.Foundation.TypedEventHandler<global::Microsoft.Windows.ApplicationModel.Resources.ResourceManager, global::Microsoft.Windows.ApplicationModel.Resources.ResourceNotFoundEventArgs>>> MakeResourceNotFoundTable()
        {
            
            global::System.Threading.Interlocked.CompareExchange(ref _ResourceNotFound_, new(), null);
            return _ResourceNotFound_;
        }
        private static global::System.Runtime.CompilerServices.ConditionalWeakTable<object, global::ABI.WinRT.Interop.EventSource<global::Windows.Foundation.TypedEventHandler<global::Microsoft.Windows.ApplicationModel.Resources.ResourceManager, global::Microsoft.Windows.ApplicationModel.Resources.ResourceNotFoundEventArgs>>> _ResourceNotFound => _ResourceNotFound_ ?? MakeResourceNotFoundTable();

        public static unsafe (Action<global::Windows.Foundation.TypedEventHandler<global::Microsoft.Windows.ApplicationModel.Resources.ResourceManager, global::Microsoft.Windows.ApplicationModel.Resources.ResourceNotFoundEventArgs>>, Action<global::Windows.Foundation.TypedEventHandler<global::Microsoft.Windows.ApplicationModel.Resources.ResourceManager, global::Microsoft.Windows.ApplicationModel.Resources.ResourceNotFoundEventArgs>>) Get_ResourceNotFound(IObjectReference _obj, object _thisObj)
        {
            var eventSource = Get_ResourceNotFound2(_obj, _thisObj);
            return (eventSource.Subscribe, eventSource.Unsubscribe);
        }

        public static unsafe global::ABI.WinRT.Interop.EventSource<global::Windows.Foundation.TypedEventHandler<global::Microsoft.Windows.ApplicationModel.Resources.ResourceManager, global::Microsoft.Windows.ApplicationModel.Resources.ResourceNotFoundEventArgs>> Get_ResourceNotFound2(IObjectReference _obj, object _thisObj)
        {
            return _ResourceNotFound.GetValue(_thisObj, (key) =>
            {

                var ThisPtr = _obj.ThisPtr;

                return 
                new _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_Windows_ApplicationModel_Resources_ResourceManager__global__Microsoft_Windows_ApplicationModel_Resources_ResourceNotFoundEventArgs_(_obj,
                (*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, global::WinRT.EventRegistrationToken*, int>**)ThisPtr)[8],
                (*(delegate* unmanaged[Stdcall]<IntPtr, global::WinRT.EventRegistrationToken, int>**)ThisPtr)[9],
                0);
            });
        }


        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0xEF, 0x91, 0x22, 0xAC, 0xBE, 0x81, 0x99, 0x5C, 0xA0, 0xAE, 0xBC, 0xEE, 0x1, 0x80, 0xB8, 0xA8 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

        public static global::System.IntPtr AbiToProjectionVftablePtr => IResourceManager.AbiToProjectionVftablePtr;

    }
    [DynamicInterfaceCastableImplementation]
    [Guid("AC2291EF-81BE-5C99-A0AE-BCEE0180B8A8")]
    internal unsafe interface IResourceManager : global::Microsoft.Windows.ApplicationModel.Resources.IResourceManager
    {

        public static readonly IntPtr AbiToProjectionVftablePtr;
        static unsafe IResourceManager()
        {
            AbiToProjectionVftablePtr = ComWrappersSupport.AllocateVtableMemory(typeof(IResourceManager), sizeof(IInspectable.Vftbl) + sizeof(IntPtr) * 4);
            *(IInspectable.Vftbl*)AbiToProjectionVftablePtr = IInspectable.Vftbl.AbiToProjectionVftable;
            ((delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>*)AbiToProjectionVftablePtr)[6] = &Do_Abi_get_MainResourceMap_0;
            ((delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>*)AbiToProjectionVftablePtr)[7] = &Do_Abi_CreateResourceContext_1;
            ((delegate* unmanaged[Stdcall]<IntPtr, IntPtr, global::WinRT.EventRegistrationToken*, int>*)AbiToProjectionVftablePtr)[8] = &Do_Abi_add_ResourceNotFound_2;
            ((delegate* unmanaged[Stdcall]<IntPtr, global::WinRT.EventRegistrationToken, int>*)AbiToProjectionVftablePtr)[9] = &Do_Abi_remove_ResourceNotFound_3;
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvStdcall) })]
        private static unsafe int Do_Abi_CreateResourceContext_1(IntPtr thisPtr, IntPtr* result)
        {

            global::Microsoft.Windows.ApplicationModel.Resources.ResourceContext __result = default;

            *result = default;

            try
            {
                __result = global::WinRT.ComWrappersSupport.FindObject<global::Microsoft.Windows.ApplicationModel.Resources.IResourceManager>(thisPtr).CreateResourceContext();
                *result = global::ABI.Microsoft.Windows.ApplicationModel.Resources.ResourceContext.FromManaged(__result);

            }
            catch (Exception __exception__)
            {
                global::WinRT.ExceptionHelpers.SetErrorInfo(__exception__);
                return global::WinRT.ExceptionHelpers.GetHRForException(__exception__);
            }
            return 0;
        }
        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvStdcall) })]
        private static unsafe int Do_Abi_get_MainResourceMap_0(IntPtr thisPtr, IntPtr* value)
        {

            global::Microsoft.Windows.ApplicationModel.Resources.ResourceMap __value = default;

            *value = default;

            try
            {
                __value = global::WinRT.ComWrappersSupport.FindObject<global::Microsoft.Windows.ApplicationModel.Resources.IResourceManager>(thisPtr).MainResourceMap;
                *value = global::ABI.Microsoft.Windows.ApplicationModel.Resources.ResourceMap.FromManaged(__value);

            }
            catch (Exception __exception__)
            {
                global::WinRT.ExceptionHelpers.SetErrorInfo(__exception__);
                return global::WinRT.ExceptionHelpers.GetHRForException(__exception__);
            }
            return 0;
        }
        private volatile static global::System.Runtime.CompilerServices.ConditionalWeakTable<global::Microsoft.Windows.ApplicationModel.Resources.IResourceManager, global::WinRT.EventRegistrationTokenTable<global::Windows.Foundation.TypedEventHandler<global::Microsoft.Windows.ApplicationModel.Resources.ResourceManager, global::Microsoft.Windows.ApplicationModel.Resources.ResourceNotFoundEventArgs>>> _ResourceNotFound_tokenTables;
        private static global::System.Runtime.CompilerServices.ConditionalWeakTable<global::Microsoft.Windows.ApplicationModel.Resources.IResourceManager, global::WinRT.EventRegistrationTokenTable<global::Windows.Foundation.TypedEventHandler<global::Microsoft.Windows.ApplicationModel.Resources.ResourceManager, global::Microsoft.Windows.ApplicationModel.Resources.ResourceNotFoundEventArgs>>> MakeResourceNotFoundTable()
        {
            global::System.Threading.Interlocked.CompareExchange(ref _ResourceNotFound_tokenTables, new(), null);
            return _ResourceNotFound_tokenTables;
        }
        private static global::System.Runtime.CompilerServices.ConditionalWeakTable<global::Microsoft.Windows.ApplicationModel.Resources.IResourceManager, global::WinRT.EventRegistrationTokenTable<global::Windows.Foundation.TypedEventHandler<global::Microsoft.Windows.ApplicationModel.Resources.ResourceManager, global::Microsoft.Windows.ApplicationModel.Resources.ResourceNotFoundEventArgs>>> _ResourceNotFound_TokenTables => _ResourceNotFound_tokenTables ?? MakeResourceNotFoundTable();

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvStdcall) })]
        private static unsafe int Do_Abi_add_ResourceNotFound_2(IntPtr thisPtr, IntPtr handler, global::WinRT.EventRegistrationToken* token)
        {
            _ = global::WinRT.GenericTypeInstantiations.Windows_Foundation_TypedEventHandler_2_Microsoft_Windows_ApplicationModel_Resources_ResourceManager__Microsoft_Windows_ApplicationModel_Resources_ResourceNotFoundEventArgs.EnsureInitialized();
            *token = default;
            try
            {
                var __this = global::WinRT.ComWrappersSupport.FindObject<global::Microsoft.Windows.ApplicationModel.Resources.IResourceManager>(thisPtr);
                var __handler = global::ABI.Windows.Foundation.TypedEventHandler<global::Microsoft.Windows.ApplicationModel.Resources.ResourceManager, global::Microsoft.Windows.ApplicationModel.Resources.ResourceNotFoundEventArgs>.FromAbi(handler);
                *token = _ResourceNotFound_TokenTables.GetOrCreateValue(__this).AddEventHandler(__handler);
                __this.ResourceNotFound += __handler;
                return 0;
            }
            catch (Exception __ex)
            {
                return __ex.HResult;
            }
        }
        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvStdcall) })]
        private static unsafe int Do_Abi_remove_ResourceNotFound_3(IntPtr thisPtr, global::WinRT.EventRegistrationToken token)
        {
            try
            {
                var __this = global::WinRT.ComWrappersSupport.FindObject<global::Microsoft.Windows.ApplicationModel.Resources.IResourceManager>(thisPtr);
                if(__this != null && _ResourceNotFound_TokenTables.TryGetValue(__this, out var __table) && __table.RemoveEventHandler(token, out var __handler))
                {
                    __this.ResourceNotFound -= __handler;
                }
                return 0;
            }
            catch (Exception __ex)
            {
                return __ex.HResult;
            }
        }

        unsafe global::Microsoft.Windows.ApplicationModel.Resources.ResourceContext global::Microsoft.Windows.ApplicationModel.Resources.IResourceManager.CreateResourceContext()
        {
            var _obj = ((IObjectReference)((IWinRTObject)this).GetObjectReferenceForType(typeof(global::Microsoft.Windows.ApplicationModel.Resources.IResourceManager).TypeHandle));
            return global::ABI.Microsoft.Windows.ApplicationModel.Resources.IResourceManagerMethods.CreateResourceContext(_obj);
        }

        unsafe global::Microsoft.Windows.ApplicationModel.Resources.ResourceMap global::Microsoft.Windows.ApplicationModel.Resources.IResourceManager.MainResourceMap
        {
            get
            {
                var _obj = ((IObjectReference)((IWinRTObject)this).GetObjectReferenceForType(typeof(global::Microsoft.Windows.ApplicationModel.Resources.IResourceManager).TypeHandle));
                return global::ABI.Microsoft.Windows.ApplicationModel.Resources.IResourceManagerMethods.get_MainResourceMap(_obj);
            }
        }

        event global::Windows.Foundation.TypedEventHandler<global::Microsoft.Windows.ApplicationModel.Resources.ResourceManager, global::Microsoft.Windows.ApplicationModel.Resources.ResourceNotFoundEventArgs> global::Microsoft.Windows.ApplicationModel.Resources.IResourceManager.ResourceNotFound
        {
            add 
            {
                var _obj = ((IObjectReference)((IWinRTObject)this).GetObjectReferenceForType(typeof(global::Microsoft.Windows.ApplicationModel.Resources.IResourceManager).TypeHandle));
                global::ABI.Microsoft.Windows.ApplicationModel.Resources.IResourceManagerMethods.Get_ResourceNotFound2(_obj, (IWinRTObject)this).Subscribe(value);
            }
            remove
            {
                var _obj = ((IObjectReference)((IWinRTObject)this).GetObjectReferenceForType(typeof(global::Microsoft.Windows.ApplicationModel.Resources.IResourceManager).TypeHandle));
                global::ABI.Microsoft.Windows.ApplicationModel.Resources.IResourceManagerMethods.Get_ResourceNotFound2(_obj, (IWinRTObject)this).Unsubscribe(value);
            }
        }
    }

    internal static class IResourceManager2Methods
    {



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0x60, 0x1, 0xC1, 0x7E, 0x54, 0xA1, 0x42, 0x5C, 0x82, 0x68, 0x30, 0xE3, 0x6, 0xB1, 0xF5, 0x85 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("7EC10160-A154-5C42-8268-30E306B1F585")]
    internal interface IResourceManager2 : global::Microsoft.Windows.ApplicationModel.Resources.IResourceManager2
    {
    }
    internal static class IResourceManagerFactoryMethods
    {


        internal static unsafe global::Microsoft.Windows.ApplicationModel.Resources.ResourceManager CreateInstance(IObjectReference _obj, string fileName)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                MarshalString.Pinnable __fileName = new(fileName);
                fixed(void* ___fileName = __fileName)
                {
                    global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, IntPtr*, int>**)ThisPtr)[6](ThisPtr, MarshalString.GetAbi(ref __fileName), &__retval));
                    global::System.GC.KeepAlive(_obj);
                    return global::ABI.Microsoft.Windows.ApplicationModel.Resources.ResourceManager.FromAbi(__retval);
                }
            }
            finally
            {
                global::ABI.Microsoft.Windows.ApplicationModel.Resources.ResourceManager.DisposeAbi(__retval);
            }
        }


        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0x8F, 0xF1, 0xAC, 0xD6, 0x8A, 0x45, 0x5B, 0x53, 0xA5, 0xC4, 0xAC, 0x2D, 0xC4, 0xE4, 0x90, 0x99 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("D6ACF18F-458A-535B-A5C4-AC2DC4E49099")]
    internal interface IResourceManagerFactory : global::Microsoft.Windows.ApplicationModel.Resources.IResourceManagerFactory
    {
    }
    internal static class IResourceMapMethods
    {


        internal static unsafe global::Microsoft.Windows.ApplicationModel.Resources.ResourceMap GetSubtree(IObjectReference _obj, string reference)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                MarshalString.Pinnable __reference = new(reference);
                fixed(void* ___reference = __reference)
                {
                    global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, IntPtr*, int>**)ThisPtr)[7](ThisPtr, MarshalString.GetAbi(ref __reference), &__retval));
                    global::System.GC.KeepAlive(_obj);
                    return global::ABI.Microsoft.Windows.ApplicationModel.Resources.ResourceMap.FromAbi(__retval);
                }
            }
            finally
            {
                global::ABI.Microsoft.Windows.ApplicationModel.Resources.ResourceMap.DisposeAbi(__retval);
            }
        }

        internal static unsafe global::Microsoft.Windows.ApplicationModel.Resources.ResourceMap TryGetSubtree(IObjectReference _obj, string reference)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                MarshalString.Pinnable __reference = new(reference);
                fixed(void* ___reference = __reference)
                {
                    global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, IntPtr*, int>**)ThisPtr)[8](ThisPtr, MarshalString.GetAbi(ref __reference), &__retval));
                    global::System.GC.KeepAlive(_obj);
                    return global::ABI.Microsoft.Windows.ApplicationModel.Resources.ResourceMap.FromAbi(__retval);
                }
            }
            finally
            {
                global::ABI.Microsoft.Windows.ApplicationModel.Resources.ResourceMap.DisposeAbi(__retval);
            }
        }

        internal static unsafe global::Microsoft.Windows.ApplicationModel.Resources.ResourceCandidate GetValue(IObjectReference _obj, string resource)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                MarshalString.Pinnable __resource = new(resource);
                fixed(void* ___resource = __resource)
                {
                    global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, IntPtr*, int>**)ThisPtr)[9](ThisPtr, MarshalString.GetAbi(ref __resource), &__retval));
                    global::System.GC.KeepAlive(_obj);
                    return global::ABI.Microsoft.Windows.ApplicationModel.Resources.ResourceCandidate.FromAbi(__retval);
                }
            }
            finally
            {
                global::ABI.Microsoft.Windows.ApplicationModel.Resources.ResourceCandidate.DisposeAbi(__retval);
            }
        }

        internal static unsafe global::Microsoft.Windows.ApplicationModel.Resources.ResourceCandidate GetValue(IObjectReference _obj, string resource, global::Microsoft.Windows.ApplicationModel.Resources.ResourceContext context)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __context = default;
            IntPtr __retval = default;
            try
            {
                __context = global::ABI.Microsoft.Windows.ApplicationModel.Resources.ResourceContext.CreateMarshaler2(context);
                MarshalString.Pinnable __resource = new(resource);
                fixed(void* ___resource = __resource)
                {
                    global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, IntPtr, IntPtr*, int>**)ThisPtr)[10](ThisPtr, MarshalString.GetAbi(ref __resource), MarshalInspectable<object>.GetAbi(__context), &__retval));
                    global::System.GC.KeepAlive(_obj);
                    return global::ABI.Microsoft.Windows.ApplicationModel.Resources.ResourceCandidate.FromAbi(__retval);
                }
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__context);
                global::ABI.Microsoft.Windows.ApplicationModel.Resources.ResourceCandidate.DisposeAbi(__retval);
            }
        }

        internal static unsafe global::System.Collections.Generic.KeyValuePair<string, global::Microsoft.Windows.ApplicationModel.Resources.ResourceCandidate> GetValueByIndex(IObjectReference _obj, uint index)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, uint, IntPtr*, int>**)ThisPtr)[11](ThisPtr, index, &__retval));
                global::System.GC.KeepAlive(_obj);
                _ = global::WinRT.GenericTypeInstantiations.Windows_Foundation_Collections_IKeyValuePair_2_String__Microsoft_Windows_ApplicationModel_Resources_ResourceCandidate.EnsureInitialized();
                return MarshalInterface<global::System.Collections.Generic.KeyValuePair<string, global::Microsoft.Windows.ApplicationModel.Resources.ResourceCandidate>>.FromAbi(__retval);
            }
            finally
            {
                MarshalInterface<global::System.Collections.Generic.KeyValuePair<string, global::Microsoft.Windows.ApplicationModel.Resources.ResourceCandidate>>.DisposeAbi(__retval);
            }
        }

        internal static unsafe global::System.Collections.Generic.KeyValuePair<string, global::Microsoft.Windows.ApplicationModel.Resources.ResourceCandidate> GetValueByIndex(IObjectReference _obj, uint index, global::Microsoft.Windows.ApplicationModel.Resources.ResourceContext context)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __context = default;
            IntPtr __retval = default;
            try
            {
                __context = global::ABI.Microsoft.Windows.ApplicationModel.Resources.ResourceContext.CreateMarshaler2(context);
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, uint, IntPtr, IntPtr*, int>**)ThisPtr)[12](ThisPtr, index, MarshalInspectable<object>.GetAbi(__context), &__retval));
                global::System.GC.KeepAlive(_obj);
                _ = global::WinRT.GenericTypeInstantiations.Windows_Foundation_Collections_IKeyValuePair_2_String__Microsoft_Windows_ApplicationModel_Resources_ResourceCandidate.EnsureInitialized();
                return MarshalInterface<global::System.Collections.Generic.KeyValuePair<string, global::Microsoft.Windows.ApplicationModel.Resources.ResourceCandidate>>.FromAbi(__retval);
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__context);
                MarshalInterface<global::System.Collections.Generic.KeyValuePair<string, global::Microsoft.Windows.ApplicationModel.Resources.ResourceCandidate>>.DisposeAbi(__retval);
            }
        }

        internal static unsafe global::Microsoft.Windows.ApplicationModel.Resources.ResourceCandidate TryGetValue(IObjectReference _obj, string resource)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                MarshalString.Pinnable __resource = new(resource);
                fixed(void* ___resource = __resource)
                {
                    global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, IntPtr*, int>**)ThisPtr)[13](ThisPtr, MarshalString.GetAbi(ref __resource), &__retval));
                    global::System.GC.KeepAlive(_obj);
                    return global::ABI.Microsoft.Windows.ApplicationModel.Resources.ResourceCandidate.FromAbi(__retval);
                }
            }
            finally
            {
                global::ABI.Microsoft.Windows.ApplicationModel.Resources.ResourceCandidate.DisposeAbi(__retval);
            }
        }

        internal static unsafe global::Microsoft.Windows.ApplicationModel.Resources.ResourceCandidate TryGetValue(IObjectReference _obj, string resource, global::Microsoft.Windows.ApplicationModel.Resources.ResourceContext context)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __context = default;
            IntPtr __retval = default;
            try
            {
                __context = global::ABI.Microsoft.Windows.ApplicationModel.Resources.ResourceContext.CreateMarshaler2(context);
                MarshalString.Pinnable __resource = new(resource);
                fixed(void* ___resource = __resource)
                {
                    global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, IntPtr, IntPtr*, int>**)ThisPtr)[14](ThisPtr, MarshalString.GetAbi(ref __resource), MarshalInspectable<object>.GetAbi(__context), &__retval));
                    global::System.GC.KeepAlive(_obj);
                    return global::ABI.Microsoft.Windows.ApplicationModel.Resources.ResourceCandidate.FromAbi(__retval);
                }
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__context);
                global::ABI.Microsoft.Windows.ApplicationModel.Resources.ResourceCandidate.DisposeAbi(__retval);
            }
        }
        internal static unsafe uint get_ResourceCount(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            uint __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, uint*, int>**)ThisPtr)[6](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0xBC, 0xD9, 0xBB, 0x4A, 0x4E, 0xDF, 0x7B, 0x5C, 0x81, 0x2C, 0x7E, 0x7B, 0xB0, 0xC2, 0x23, 0x77 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("4ABBD9BC-DF4E-5C7B-812C-7E7BB0C22377")]
    internal interface IResourceMap : global::Microsoft.Windows.ApplicationModel.Resources.IResourceMap
    {
    }
    internal static class IResourceNotFoundEventArgsMethods
    {


        internal static unsafe void SetResolvedCandidate(IObjectReference _obj, global::Microsoft.Windows.ApplicationModel.Resources.ResourceCandidate candidate)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __candidate = default;
            try
            {
                __candidate = global::ABI.Microsoft.Windows.ApplicationModel.Resources.ResourceCandidate.CreateMarshaler2(candidate);
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, int>**)ThisPtr)[8](ThisPtr, MarshalInspectable<object>.GetAbi(__candidate)));
                global::System.GC.KeepAlive(_obj);
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__candidate);
            }
        }
        internal static unsafe global::Microsoft.Windows.ApplicationModel.Resources.ResourceContext get_Context(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[6](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.Windows.ApplicationModel.Resources.ResourceContext.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.Windows.ApplicationModel.Resources.ResourceContext.DisposeAbi(__retval);
            }
        }

        internal static unsafe string get_Name(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[7](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return MarshalString.FromAbi(__retval);
            }
            finally
            {
                MarshalString.DisposeAbi(__retval);
            }
        }



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0x8B, 0xB0, 0xAB, 0x64, 0x7D, 0xE7, 0x26, 0x5B, 0x83, 0xF, 0x15, 0x94, 0x1E, 0xE, 0x82, 0x0 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("64ABB08B-E77D-5B26-830F-15941E0E8200")]
    internal interface IResourceNotFoundEventArgs : global::Microsoft.Windows.ApplicationModel.Resources.IResourceNotFoundEventArgs
    {
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    public struct ResourceCandidate
    {

        public static IObjectReference CreateMarshaler(global::Microsoft.Windows.ApplicationModel.Resources.ResourceCandidate obj) => obj is null ? null : MarshalInspectable<global::Microsoft.Windows.ApplicationModel.Resources.ResourceCandidate>.CreateMarshaler<IUnknownVftbl>(obj, global::ABI.Microsoft.Windows.ApplicationModel.Resources.IResourceCandidateMethods.IID);
        public static ObjectReferenceValue CreateMarshaler2(global::Microsoft.Windows.ApplicationModel.Resources.ResourceCandidate obj) => MarshalInspectable<object>.CreateMarshaler2(obj, global::ABI.Microsoft.Windows.ApplicationModel.Resources.IResourceCandidateMethods.IID);
        public static IntPtr GetAbi(IObjectReference value) => value is null ? IntPtr.Zero : MarshalInterfaceHelper<object>.GetAbi(value);
        public static global::Microsoft.Windows.ApplicationModel.Resources.ResourceCandidate FromAbi(IntPtr thisPtr) => global::Microsoft.Windows.ApplicationModel.Resources.ResourceCandidate.FromAbi(thisPtr);
        public static IntPtr FromManaged(global::Microsoft.Windows.ApplicationModel.Resources.ResourceCandidate obj) => obj is null ? IntPtr.Zero : CreateMarshaler2(obj).Detach();
        public static unsafe MarshalInterfaceHelper<global::Microsoft.Windows.ApplicationModel.Resources.ResourceCandidate>.MarshalerArray CreateMarshalerArray(global::Microsoft.Windows.ApplicationModel.Resources.ResourceCandidate[] array) => MarshalInterfaceHelper<global::Microsoft.Windows.ApplicationModel.Resources.ResourceCandidate>.CreateMarshalerArray2(array, (o) => CreateMarshaler2(o));
        public static (int length, IntPtr data) GetAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.Windows.ApplicationModel.Resources.ResourceCandidate>.GetAbiArray(box);
        public static unsafe global::Microsoft.Windows.ApplicationModel.Resources.ResourceCandidate[] FromAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.Windows.ApplicationModel.Resources.ResourceCandidate>.FromAbiArray(box, FromAbi);
        public static void CopyAbiArray(global::Microsoft.Windows.ApplicationModel.Resources.ResourceCandidate[] array, object box) => MarshalInterfaceHelper<global::Microsoft.Windows.ApplicationModel.Resources.ResourceCandidate>.CopyAbiArray(array, box, FromAbi);
        public static (int length, IntPtr data) FromManagedArray(global::Microsoft.Windows.ApplicationModel.Resources.ResourceCandidate[] array) => MarshalInterfaceHelper<global::Microsoft.Windows.ApplicationModel.Resources.ResourceCandidate>.FromManagedArray(array, (o) => FromManaged(o));
        public static void DisposeMarshaler(IObjectReference value) => MarshalInspectable<object>.DisposeMarshaler(value);
        public static void DisposeMarshalerArray(MarshalInterfaceHelper<global::Microsoft.Windows.ApplicationModel.Resources.ResourceCandidate>.MarshalerArray array) => MarshalInterfaceHelper<global::Microsoft.Windows.ApplicationModel.Resources.ResourceCandidate>.DisposeMarshalerArray(array);
        public static void DisposeAbi(IntPtr abi) => MarshalInspectable<object>.DisposeAbi(abi);
        public static unsafe void DisposeAbiArray(object box) => MarshalInspectable<object>.DisposeAbiArray(box);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    internal sealed class ResourceCandidateRcwFactoryAttribute : global::WinRT.WinRTImplementationTypeRcwFactoryAttribute
    {
        public override object CreateInstance(global::WinRT.IInspectable inspectable)
            => new global::Microsoft.Windows.ApplicationModel.Resources.ResourceCandidate(inspectable.ObjRef);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    public struct ResourceContext
    {

        public static IObjectReference CreateMarshaler(global::Microsoft.Windows.ApplicationModel.Resources.ResourceContext obj) => obj is null ? null : MarshalInterface<global::Microsoft.Windows.ApplicationModel.Resources.IResourceContext>.CreateMarshaler(obj);
        public static ObjectReferenceValue CreateMarshaler2(global::Microsoft.Windows.ApplicationModel.Resources.ResourceContext obj) => MarshalInterface<global::Microsoft.Windows.ApplicationModel.Resources.IResourceContext>.CreateMarshaler2(obj, global::ABI.Microsoft.Windows.ApplicationModel.Resources.IResourceContextMethods.IID);
        public static IntPtr GetAbi(IObjectReference value) => value is null ? IntPtr.Zero : MarshalInterfaceHelper<object>.GetAbi(value);
        public static global::Microsoft.Windows.ApplicationModel.Resources.ResourceContext FromAbi(IntPtr thisPtr) => global::Microsoft.Windows.ApplicationModel.Resources.ResourceContext.FromAbi(thisPtr);
        public static IntPtr FromManaged(global::Microsoft.Windows.ApplicationModel.Resources.ResourceContext obj) => obj is null ? IntPtr.Zero : CreateMarshaler2(obj).Detach();
        public static unsafe MarshalInterfaceHelper<global::Microsoft.Windows.ApplicationModel.Resources.ResourceContext>.MarshalerArray CreateMarshalerArray(global::Microsoft.Windows.ApplicationModel.Resources.ResourceContext[] array) => MarshalInterfaceHelper<global::Microsoft.Windows.ApplicationModel.Resources.ResourceContext>.CreateMarshalerArray2(array, (o) => CreateMarshaler2(o));
        public static (int length, IntPtr data) GetAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.Windows.ApplicationModel.Resources.ResourceContext>.GetAbiArray(box);
        public static unsafe global::Microsoft.Windows.ApplicationModel.Resources.ResourceContext[] FromAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.Windows.ApplicationModel.Resources.ResourceContext>.FromAbiArray(box, FromAbi);
        public static void CopyAbiArray(global::Microsoft.Windows.ApplicationModel.Resources.ResourceContext[] array, object box) => MarshalInterfaceHelper<global::Microsoft.Windows.ApplicationModel.Resources.ResourceContext>.CopyAbiArray(array, box, FromAbi);
        public static (int length, IntPtr data) FromManagedArray(global::Microsoft.Windows.ApplicationModel.Resources.ResourceContext[] array) => MarshalInterfaceHelper<global::Microsoft.Windows.ApplicationModel.Resources.ResourceContext>.FromManagedArray(array, (o) => FromManaged(o));
        public static void DisposeMarshaler(IObjectReference value) => MarshalInspectable<object>.DisposeMarshaler(value);
        public static void DisposeMarshalerArray(MarshalInterfaceHelper<global::Microsoft.Windows.ApplicationModel.Resources.ResourceContext>.MarshalerArray array) => MarshalInterfaceHelper<global::Microsoft.Windows.ApplicationModel.Resources.ResourceContext>.DisposeMarshalerArray(array);
        public static void DisposeAbi(IntPtr abi) => MarshalInspectable<object>.DisposeAbi(abi);
        public static unsafe void DisposeAbiArray(object box) => MarshalInspectable<object>.DisposeAbiArray(box);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    internal sealed class ResourceContextRcwFactoryAttribute : global::WinRT.WinRTImplementationTypeRcwFactoryAttribute
    {
        public override object CreateInstance(global::WinRT.IInspectable inspectable)
            => new global::Microsoft.Windows.ApplicationModel.Resources.ResourceContext(inspectable.ObjRef);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    public struct ResourceLoader
    {

        public static IObjectReference CreateMarshaler(global::Microsoft.Windows.ApplicationModel.Resources.ResourceLoader obj) => obj is null ? null : MarshalInspectable<global::Microsoft.Windows.ApplicationModel.Resources.ResourceLoader>.CreateMarshaler<IUnknownVftbl>(obj, global::ABI.Microsoft.Windows.ApplicationModel.Resources.IResourceLoaderMethods.IID);
        public static ObjectReferenceValue CreateMarshaler2(global::Microsoft.Windows.ApplicationModel.Resources.ResourceLoader obj) => MarshalInspectable<object>.CreateMarshaler2(obj, global::ABI.Microsoft.Windows.ApplicationModel.Resources.IResourceLoaderMethods.IID);
        public static IntPtr GetAbi(IObjectReference value) => value is null ? IntPtr.Zero : MarshalInterfaceHelper<object>.GetAbi(value);
        public static global::Microsoft.Windows.ApplicationModel.Resources.ResourceLoader FromAbi(IntPtr thisPtr) => global::Microsoft.Windows.ApplicationModel.Resources.ResourceLoader.FromAbi(thisPtr);
        public static IntPtr FromManaged(global::Microsoft.Windows.ApplicationModel.Resources.ResourceLoader obj) => obj is null ? IntPtr.Zero : CreateMarshaler2(obj).Detach();
        public static unsafe MarshalInterfaceHelper<global::Microsoft.Windows.ApplicationModel.Resources.ResourceLoader>.MarshalerArray CreateMarshalerArray(global::Microsoft.Windows.ApplicationModel.Resources.ResourceLoader[] array) => MarshalInterfaceHelper<global::Microsoft.Windows.ApplicationModel.Resources.ResourceLoader>.CreateMarshalerArray2(array, (o) => CreateMarshaler2(o));
        public static (int length, IntPtr data) GetAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.Windows.ApplicationModel.Resources.ResourceLoader>.GetAbiArray(box);
        public static unsafe global::Microsoft.Windows.ApplicationModel.Resources.ResourceLoader[] FromAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.Windows.ApplicationModel.Resources.ResourceLoader>.FromAbiArray(box, FromAbi);
        public static void CopyAbiArray(global::Microsoft.Windows.ApplicationModel.Resources.ResourceLoader[] array, object box) => MarshalInterfaceHelper<global::Microsoft.Windows.ApplicationModel.Resources.ResourceLoader>.CopyAbiArray(array, box, FromAbi);
        public static (int length, IntPtr data) FromManagedArray(global::Microsoft.Windows.ApplicationModel.Resources.ResourceLoader[] array) => MarshalInterfaceHelper<global::Microsoft.Windows.ApplicationModel.Resources.ResourceLoader>.FromManagedArray(array, (o) => FromManaged(o));
        public static void DisposeMarshaler(IObjectReference value) => MarshalInspectable<object>.DisposeMarshaler(value);
        public static void DisposeMarshalerArray(MarshalInterfaceHelper<global::Microsoft.Windows.ApplicationModel.Resources.ResourceLoader>.MarshalerArray array) => MarshalInterfaceHelper<global::Microsoft.Windows.ApplicationModel.Resources.ResourceLoader>.DisposeMarshalerArray(array);
        public static void DisposeAbi(IntPtr abi) => MarshalInspectable<object>.DisposeAbi(abi);
        public static unsafe void DisposeAbiArray(object box) => MarshalInspectable<object>.DisposeAbiArray(box);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    internal sealed class ResourceLoaderRcwFactoryAttribute : global::WinRT.WinRTImplementationTypeRcwFactoryAttribute
    {
        public override object CreateInstance(global::WinRT.IInspectable inspectable)
            => new global::Microsoft.Windows.ApplicationModel.Resources.ResourceLoader(inspectable.ObjRef);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    public struct ResourceManager
    {

        public static IObjectReference CreateMarshaler(global::Microsoft.Windows.ApplicationModel.Resources.ResourceManager obj) => obj is null ? null : MarshalInterface<global::Microsoft.Windows.ApplicationModel.Resources.IResourceManager>.CreateMarshaler(obj);
        public static ObjectReferenceValue CreateMarshaler2(global::Microsoft.Windows.ApplicationModel.Resources.ResourceManager obj) => MarshalInterface<global::Microsoft.Windows.ApplicationModel.Resources.IResourceManager>.CreateMarshaler2(obj, global::ABI.Microsoft.Windows.ApplicationModel.Resources.IResourceManagerMethods.IID);
        public static IntPtr GetAbi(IObjectReference value) => value is null ? IntPtr.Zero : MarshalInterfaceHelper<object>.GetAbi(value);
        public static global::Microsoft.Windows.ApplicationModel.Resources.ResourceManager FromAbi(IntPtr thisPtr) => global::Microsoft.Windows.ApplicationModel.Resources.ResourceManager.FromAbi(thisPtr);
        public static IntPtr FromManaged(global::Microsoft.Windows.ApplicationModel.Resources.ResourceManager obj) => obj is null ? IntPtr.Zero : CreateMarshaler2(obj).Detach();
        public static unsafe MarshalInterfaceHelper<global::Microsoft.Windows.ApplicationModel.Resources.ResourceManager>.MarshalerArray CreateMarshalerArray(global::Microsoft.Windows.ApplicationModel.Resources.ResourceManager[] array) => MarshalInterfaceHelper<global::Microsoft.Windows.ApplicationModel.Resources.ResourceManager>.CreateMarshalerArray2(array, (o) => CreateMarshaler2(o));
        public static (int length, IntPtr data) GetAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.Windows.ApplicationModel.Resources.ResourceManager>.GetAbiArray(box);
        public static unsafe global::Microsoft.Windows.ApplicationModel.Resources.ResourceManager[] FromAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.Windows.ApplicationModel.Resources.ResourceManager>.FromAbiArray(box, FromAbi);
        public static void CopyAbiArray(global::Microsoft.Windows.ApplicationModel.Resources.ResourceManager[] array, object box) => MarshalInterfaceHelper<global::Microsoft.Windows.ApplicationModel.Resources.ResourceManager>.CopyAbiArray(array, box, FromAbi);
        public static (int length, IntPtr data) FromManagedArray(global::Microsoft.Windows.ApplicationModel.Resources.ResourceManager[] array) => MarshalInterfaceHelper<global::Microsoft.Windows.ApplicationModel.Resources.ResourceManager>.FromManagedArray(array, (o) => FromManaged(o));
        public static void DisposeMarshaler(IObjectReference value) => MarshalInspectable<object>.DisposeMarshaler(value);
        public static void DisposeMarshalerArray(MarshalInterfaceHelper<global::Microsoft.Windows.ApplicationModel.Resources.ResourceManager>.MarshalerArray array) => MarshalInterfaceHelper<global::Microsoft.Windows.ApplicationModel.Resources.ResourceManager>.DisposeMarshalerArray(array);
        public static void DisposeAbi(IntPtr abi) => MarshalInspectable<object>.DisposeAbi(abi);
        public static unsafe void DisposeAbiArray(object box) => MarshalInspectable<object>.DisposeAbiArray(box);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    internal sealed class ResourceManagerRcwFactoryAttribute : global::WinRT.WinRTImplementationTypeRcwFactoryAttribute
    {
        public override object CreateInstance(global::WinRT.IInspectable inspectable)
            => new global::Microsoft.Windows.ApplicationModel.Resources.ResourceManager(inspectable.ObjRef);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    public struct ResourceMap
    {

        public static IObjectReference CreateMarshaler(global::Microsoft.Windows.ApplicationModel.Resources.ResourceMap obj) => obj is null ? null : MarshalInspectable<global::Microsoft.Windows.ApplicationModel.Resources.ResourceMap>.CreateMarshaler<IUnknownVftbl>(obj, global::ABI.Microsoft.Windows.ApplicationModel.Resources.IResourceMapMethods.IID);
        public static ObjectReferenceValue CreateMarshaler2(global::Microsoft.Windows.ApplicationModel.Resources.ResourceMap obj) => MarshalInspectable<object>.CreateMarshaler2(obj, global::ABI.Microsoft.Windows.ApplicationModel.Resources.IResourceMapMethods.IID);
        public static IntPtr GetAbi(IObjectReference value) => value is null ? IntPtr.Zero : MarshalInterfaceHelper<object>.GetAbi(value);
        public static global::Microsoft.Windows.ApplicationModel.Resources.ResourceMap FromAbi(IntPtr thisPtr) => global::Microsoft.Windows.ApplicationModel.Resources.ResourceMap.FromAbi(thisPtr);
        public static IntPtr FromManaged(global::Microsoft.Windows.ApplicationModel.Resources.ResourceMap obj) => obj is null ? IntPtr.Zero : CreateMarshaler2(obj).Detach();
        public static unsafe MarshalInterfaceHelper<global::Microsoft.Windows.ApplicationModel.Resources.ResourceMap>.MarshalerArray CreateMarshalerArray(global::Microsoft.Windows.ApplicationModel.Resources.ResourceMap[] array) => MarshalInterfaceHelper<global::Microsoft.Windows.ApplicationModel.Resources.ResourceMap>.CreateMarshalerArray2(array, (o) => CreateMarshaler2(o));
        public static (int length, IntPtr data) GetAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.Windows.ApplicationModel.Resources.ResourceMap>.GetAbiArray(box);
        public static unsafe global::Microsoft.Windows.ApplicationModel.Resources.ResourceMap[] FromAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.Windows.ApplicationModel.Resources.ResourceMap>.FromAbiArray(box, FromAbi);
        public static void CopyAbiArray(global::Microsoft.Windows.ApplicationModel.Resources.ResourceMap[] array, object box) => MarshalInterfaceHelper<global::Microsoft.Windows.ApplicationModel.Resources.ResourceMap>.CopyAbiArray(array, box, FromAbi);
        public static (int length, IntPtr data) FromManagedArray(global::Microsoft.Windows.ApplicationModel.Resources.ResourceMap[] array) => MarshalInterfaceHelper<global::Microsoft.Windows.ApplicationModel.Resources.ResourceMap>.FromManagedArray(array, (o) => FromManaged(o));
        public static void DisposeMarshaler(IObjectReference value) => MarshalInspectable<object>.DisposeMarshaler(value);
        public static void DisposeMarshalerArray(MarshalInterfaceHelper<global::Microsoft.Windows.ApplicationModel.Resources.ResourceMap>.MarshalerArray array) => MarshalInterfaceHelper<global::Microsoft.Windows.ApplicationModel.Resources.ResourceMap>.DisposeMarshalerArray(array);
        public static void DisposeAbi(IntPtr abi) => MarshalInspectable<object>.DisposeAbi(abi);
        public static unsafe void DisposeAbiArray(object box) => MarshalInspectable<object>.DisposeAbiArray(box);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    internal sealed class ResourceMapRcwFactoryAttribute : global::WinRT.WinRTImplementationTypeRcwFactoryAttribute
    {
        public override object CreateInstance(global::WinRT.IInspectable inspectable)
            => new global::Microsoft.Windows.ApplicationModel.Resources.ResourceMap(inspectable.ObjRef);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    public struct ResourceNotFoundEventArgs
    {

        public static IObjectReference CreateMarshaler(global::Microsoft.Windows.ApplicationModel.Resources.ResourceNotFoundEventArgs obj) => obj is null ? null : MarshalInspectable<global::Microsoft.Windows.ApplicationModel.Resources.ResourceNotFoundEventArgs>.CreateMarshaler<IUnknownVftbl>(obj, global::ABI.Microsoft.Windows.ApplicationModel.Resources.IResourceNotFoundEventArgsMethods.IID);
        public static ObjectReferenceValue CreateMarshaler2(global::Microsoft.Windows.ApplicationModel.Resources.ResourceNotFoundEventArgs obj) => MarshalInspectable<object>.CreateMarshaler2(obj, global::ABI.Microsoft.Windows.ApplicationModel.Resources.IResourceNotFoundEventArgsMethods.IID);
        public static IntPtr GetAbi(IObjectReference value) => value is null ? IntPtr.Zero : MarshalInterfaceHelper<object>.GetAbi(value);
        public static global::Microsoft.Windows.ApplicationModel.Resources.ResourceNotFoundEventArgs FromAbi(IntPtr thisPtr) => global::Microsoft.Windows.ApplicationModel.Resources.ResourceNotFoundEventArgs.FromAbi(thisPtr);
        public static IntPtr FromManaged(global::Microsoft.Windows.ApplicationModel.Resources.ResourceNotFoundEventArgs obj) => obj is null ? IntPtr.Zero : CreateMarshaler2(obj).Detach();
        public static unsafe MarshalInterfaceHelper<global::Microsoft.Windows.ApplicationModel.Resources.ResourceNotFoundEventArgs>.MarshalerArray CreateMarshalerArray(global::Microsoft.Windows.ApplicationModel.Resources.ResourceNotFoundEventArgs[] array) => MarshalInterfaceHelper<global::Microsoft.Windows.ApplicationModel.Resources.ResourceNotFoundEventArgs>.CreateMarshalerArray2(array, (o) => CreateMarshaler2(o));
        public static (int length, IntPtr data) GetAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.Windows.ApplicationModel.Resources.ResourceNotFoundEventArgs>.GetAbiArray(box);
        public static unsafe global::Microsoft.Windows.ApplicationModel.Resources.ResourceNotFoundEventArgs[] FromAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.Windows.ApplicationModel.Resources.ResourceNotFoundEventArgs>.FromAbiArray(box, FromAbi);
        public static void CopyAbiArray(global::Microsoft.Windows.ApplicationModel.Resources.ResourceNotFoundEventArgs[] array, object box) => MarshalInterfaceHelper<global::Microsoft.Windows.ApplicationModel.Resources.ResourceNotFoundEventArgs>.CopyAbiArray(array, box, FromAbi);
        public static (int length, IntPtr data) FromManagedArray(global::Microsoft.Windows.ApplicationModel.Resources.ResourceNotFoundEventArgs[] array) => MarshalInterfaceHelper<global::Microsoft.Windows.ApplicationModel.Resources.ResourceNotFoundEventArgs>.FromManagedArray(array, (o) => FromManaged(o));
        public static void DisposeMarshaler(IObjectReference value) => MarshalInspectable<object>.DisposeMarshaler(value);
        public static void DisposeMarshalerArray(MarshalInterfaceHelper<global::Microsoft.Windows.ApplicationModel.Resources.ResourceNotFoundEventArgs>.MarshalerArray array) => MarshalInterfaceHelper<global::Microsoft.Windows.ApplicationModel.Resources.ResourceNotFoundEventArgs>.DisposeMarshalerArray(array);
        public static void DisposeAbi(IntPtr abi) => MarshalInspectable<object>.DisposeAbi(abi);
        public static unsafe void DisposeAbiArray(object box) => MarshalInspectable<object>.DisposeAbiArray(box);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    internal sealed class ResourceNotFoundEventArgsRcwFactoryAttribute : global::WinRT.WinRTImplementationTypeRcwFactoryAttribute
    {
        public override object CreateInstance(global::WinRT.IInspectable inspectable)
            => new global::Microsoft.Windows.ApplicationModel.Resources.ResourceNotFoundEventArgs(inspectable.ObjRef);
    }
}
#pragma warning restore CA1416
