//------------------------------------------------------------------------------
// <auto-generated>
//     This file was generated by cswinrt.exe version 2.2.0.241111.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Diagnostics;
using System.Diagnostics.CodeAnalysis;
using System.Linq.Expressions;
using System.Reflection;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;
using WinRT;
using WinRT.Interop;


#pragma warning disable 0169 // warning CS0169: The field '...' is never used
#pragma warning disable 0649 // warning CS0169: Field '...' is never assigned to
#pragma warning disable CA2207, CA1063, CA1033, CA1001, CA2213

namespace Microsoft.Windows.Widgets.Providers
{
    [global::WinRT.WindowsRuntimeType("Microsoft.Windows.Widgets")][Guid("C593CC57-04B9-52CA-88AD-46FEA21EA340")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.Windows.Widgets.Providers.IWidgetActionInvokedArgs))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.Windows.Widgets.WidgetContract), 65536u)]
    internal interface IWidgetActionInvokedArgs
    {
        string CustomState { get; }
        string Data { get; }
        string Verb { get; }
        WidgetContext WidgetContext { get; }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.Windows.Widgets")][Guid("1D9E5FB5-2BCE-5350-87B1-D63199526639")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.Windows.Widgets.Providers.IWidgetAnalyticsInfoReportedArgs))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.Windows.Widgets.WidgetContract), 131072u)]
    internal interface IWidgetAnalyticsInfoReportedArgs
    {
        string AnalyticsJson { get; }
        WidgetContext WidgetContext { get; }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.Windows.Widgets")][Guid("903C518B-40BC-5BC6-88F7-AF9D81C0CDC1")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.Windows.Widgets.Providers.IWidgetContext))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.Windows.Widgets.WidgetContract), 65536u)]
    internal interface IWidgetContext
    {
        string DefinitionId { get; }
        string Id { get; }
        bool IsActive { get; }
        global::Microsoft.Windows.Widgets.WidgetSize Size { get; }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.Windows.Widgets")][Guid("2C226D54-2252-576B-A197-370B28D25C2F")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.Windows.Widgets.Providers.IWidgetContextChangedArgs))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.Windows.Widgets.WidgetContract), 65536u)]
    internal interface IWidgetContextChangedArgs
    {
        WidgetContext WidgetContext { get; }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.Windows.Widgets")][Guid("41DEA311-DD9B-5B8B-B493-3A30552116B8")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.Windows.Widgets.Providers.IWidgetCustomizationRequestedArgs))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.Windows.Widgets.WidgetContract), 131072u)]
    internal interface IWidgetCustomizationRequestedArgs
    {
        string CustomState { get; }
        WidgetContext WidgetContext { get; }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.Windows.Widgets")][Guid("30EFA627-B21F-55D5-B91A-B23B4AA13645")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.Windows.Widgets.Providers.IWidgetErrorInfoReportedArgs))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.Windows.Widgets.WidgetContract), 131072u)]
    internal interface IWidgetErrorInfoReportedArgs
    {
        string ErrorJson { get; }
        WidgetContext WidgetContext { get; }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.Windows.Widgets")][Guid("CEA11F42-A020-5DB5-89E2-B7DECE4AE5CB")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.Windows.Widgets.Providers.IWidgetInfo))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.Windows.Widgets.WidgetContract), 65536u)]
    internal interface IWidgetInfo
    {
        string CustomState { get; }
        string Data { get; }
        global::System.DateTimeOffset LastUpdateTime { get; }
        string Template { get; }
        WidgetContext WidgetContext { get; }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.Windows.Widgets")][Guid("081B0A6F-D784-5408-BB29-252FEF2926D4")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.Windows.Widgets.Providers.IWidgetInfo2))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.Windows.Widgets.WidgetContract), 589824u)]
    internal interface IWidgetInfo2
    {
        bool IsPlaceholderContent { get; }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.Windows.Widgets")][Guid("71CB10C0-671E-48E3-B995-207940397123")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.Windows.Widgets.Providers.IWidgetManager))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.Windows.Widgets.WidgetContract), 65536u)]
    public interface IWidgetManager
    {
        void UpdateWidget(WidgetUpdateRequestOptions widgetUpdateRequestOptions);
        string[] GetWidgetIds();
        WidgetInfo GetWidgetInfo(string widgetId);
        WidgetInfo[] GetWidgetInfos();
        void DeleteWidget(string widgetId);
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.Windows.Widgets")][Guid("55C65A27-8845-406C-9EE1-1E79F0556BEF")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.Windows.Widgets.Providers.IWidgetManager2))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.Windows.Widgets.WidgetContract), 393216u)]
    public interface IWidgetManager2
    {
        void SendMessageToContent(string widgetId, string message);
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.Windows.Widgets")][Guid("7F233B06-28E5-5E2B-8C04-A4FA747C28C7")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.Windows.Widgets.Providers.IWidgetManagerStatics))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.Windows.Widgets.WidgetContract), 65536u)]
    internal interface IWidgetManagerStatics
    {
        WidgetManager GetDefault();
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.Windows.Widgets")][Guid("2261CB2B-C741-5F96-9ADB-FB3A7667BCB6")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.Windows.Widgets.Providers.IWidgetMessageReceivedArgs))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.Windows.Widgets.WidgetContract), 393216u)]
    internal interface IWidgetMessageReceivedArgs
    {
        string Message { get; }
        WidgetContext WidgetContext { get; }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.Windows.Widgets")][Guid("5C5774CC-72A0-452D-B9ED-075C0DD25EED")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.Windows.Widgets.Providers.IWidgetProvider))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.Windows.Widgets.WidgetContract), 65536u)]
    public interface IWidgetProvider
    {
        void CreateWidget(WidgetContext widgetContext);
        void DeleteWidget(string widgetId, string customState);
        void OnActionInvoked(WidgetActionInvokedArgs actionInvokedArgs);
        void OnWidgetContextChanged(WidgetContextChangedArgs contextChangedArgs);
        void Activate(WidgetContext widgetContext);
        void Deactivate(string widgetId);
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.Windows.Widgets")][Guid("38C3A963-DD93-479D-9276-04BF84EE1816")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.Windows.Widgets.Providers.IWidgetProvider2))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.Windows.Widgets.WidgetContract), 131072u)]
    public interface IWidgetProvider2
    {
        void OnCustomizationRequested(WidgetCustomizationRequestedArgs customizationRequestedArgs);
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.Windows.Widgets")][Guid("661985A5-D187-482D-9EEF-6FDA05D21845")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.Windows.Widgets.Providers.IWidgetProviderAnalytics))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.Windows.Widgets.WidgetContract), 131072u)]
    public interface IWidgetProviderAnalytics
    {
        void OnAnalyticsInfoReported(WidgetAnalyticsInfoReportedArgs args);
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.Windows.Widgets")][Guid("90C1B5F0-0D3A-4AC6-ABB7-C97B367B8FCC")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.Windows.Widgets.Providers.IWidgetProviderErrors))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.Windows.Widgets.WidgetContract), 131072u)]
    public interface IWidgetProviderErrors
    {
        void OnErrorInfoReported(WidgetErrorInfoReportedArgs args);
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.Windows.Widgets")][Guid("EA4DC186-9E24-4B35-A5EF-A9F5DF72D6AC")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.Windows.Widgets.Providers.IWidgetProviderMessage))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.Windows.Widgets.WidgetContract), 393216u)]
    public interface IWidgetProviderMessage
    {
        void OnMessageReceived(WidgetMessageReceivedArgs args);
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.Windows.Widgets")][Guid("DCF328C0-012C-40F5-BB28-3A1C714D027D")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.Windows.Widgets.Providers.IWidgetResourceProvider))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.Windows.Widgets.WidgetContract), 393216u)]
    public interface IWidgetResourceProvider
    {
        void OnResourceRequested(WidgetResourceRequestedArgs args);
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.Windows.Widgets")][Guid("113D249F-82D9-57CB-8CEA-9A5291F2FE22")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.Windows.Widgets.Providers.IWidgetResourceRequest))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.Windows.Widgets.WidgetContract), 393216u)]
    internal interface IWidgetResourceRequest
    {
        global::Windows.Storage.Streams.IRandomAccessStreamReference Content { get; set; }
        global::System.Collections.Generic.IDictionary<string, string> Headers { get; }
        string Method { get; set; }
        string Uri { get; }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.Windows.Widgets")][Guid("2BB30F4D-0166-58E3-AAF6-31B2AE970BCD")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.Windows.Widgets.Providers.IWidgetResourceRequestedArgs))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.Windows.Widgets.WidgetContract), 393216u)]
    internal interface IWidgetResourceRequestedArgs
    {
        global::Windows.Foundation.Deferral GetDeferral();
        WidgetResourceRequest Request { get; }
        WidgetResourceResponse Response { get; set; }
        WidgetContext WidgetContext { get; }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.Windows.Widgets")][Guid("03A2D32C-2E9E-54A3-B084-1479D5060F80")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.Windows.Widgets.Providers.IWidgetResourceResponse))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.Windows.Widgets.WidgetContract), 393216u)]
    internal interface IWidgetResourceResponse
    {
        global::Windows.Storage.Streams.IRandomAccessStreamReference Content { get; }
        global::System.Collections.Generic.IDictionary<string, string> Headers { get; }
        string ReasonPhrase { get; }
        int StatusCode { get; }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.Windows.Widgets")][Guid("08881EF1-A78A-5804-B070-9153A8657F85")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.Windows.Widgets.Providers.IWidgetResourceResponseFactory))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.Windows.Widgets.WidgetContract), 393216u)]
    internal interface IWidgetResourceResponseFactory
    {
        WidgetResourceResponse CreateInstance(global::Windows.Storage.Streams.IRandomAccessStreamReference content, string reasonPhrase, int statusCode);
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.Windows.Widgets")][Guid("B09CA8F7-7424-5687-BAAF-7DD6FA639672")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.Windows.Widgets.Providers.IWidgetUpdateRequestOptions))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.Windows.Widgets.WidgetContract), 65536u)]
    internal interface IWidgetUpdateRequestOptions
    {
        string CustomState { get; set; }
        string Data { get; set; }
        string Template { get; set; }
        string WidgetId { get; }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.Windows.Widgets")][Guid("77C4EFC4-38F3-57A5-ABA1-F83F257B899E")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.Windows.Widgets.Providers.IWidgetUpdateRequestOptions2))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.Windows.Widgets.WidgetContract), 589824u)]
    internal interface IWidgetUpdateRequestOptions2
    {
        global::System.Nullable<bool> IsPlaceholderContent { get; set; }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.Windows.Widgets")][Guid("E0E00AF8-1D10-57A8-9419-3F568E854DAA")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.Windows.Widgets.Providers.IWidgetUpdateRequestOptionsFactory))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.Windows.Widgets.WidgetContract), 65536u)]
    internal interface IWidgetUpdateRequestOptionsFactory
    {
        WidgetUpdateRequestOptions CreateInstance(string widgetId);
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.Windows.Widgets")][Guid("4645B5E3-D332-5D11-82F0-3607E5DF6018")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.Windows.Widgets.Providers.IWidgetUpdateRequestOptionsStatics))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.Windows.Widgets.WidgetContract), 65536u)]
    internal interface IWidgetUpdateRequestOptionsStatics
    {
        string UnsetValue { get; }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.Windows.Widgets")]
    [global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.Windows.Widgets.Providers.WidgetActionInvokedArgs))]
    [global::ABI.Microsoft.Windows.Widgets.Providers.WidgetActionInvokedArgsRcwFactory]
    [global::WinRT.ProjectedRuntimeClass(typeof(IWidgetActionInvokedArgs))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.Windows.Widgets.WidgetContract), 65536u)]
    public sealed class WidgetActionInvokedArgs : global::System.Runtime.InteropServices.ICustomQueryInterface, IWinRTObject, IEquatable<WidgetActionInvokedArgs>
    {
        private IntPtr ThisPtr => _inner == null ? (((IWinRTObject)this).NativeObject).ThisPtr : _inner.ThisPtr;

        private readonly IObjectReference _inner = null;



        private IObjectReference _objRef_global__Microsoft_Windows_Widgets_Providers_IWidgetActionInvokedArgs => _inner;


        public static WidgetActionInvokedArgs FromAbi(IntPtr thisPtr)
        {
            if (thisPtr == IntPtr.Zero) return null;
            return MarshalInspectable<WidgetActionInvokedArgs>.FromAbi(thisPtr);
        }

        internal WidgetActionInvokedArgs(IObjectReference objRef)
        {
            _inner = objRef.As(global::ABI.Microsoft.Windows.Widgets.Providers.IWidgetActionInvokedArgsMethods.IID);

        }


        public static bool operator ==(WidgetActionInvokedArgs x, WidgetActionInvokedArgs y) => (x?.ThisPtr ?? IntPtr.Zero) == (y?.ThisPtr ?? IntPtr.Zero);
        public static bool operator !=(WidgetActionInvokedArgs x, WidgetActionInvokedArgs y) => !(x == y);
        public bool Equals(WidgetActionInvokedArgs other) => this == other;
        public override bool Equals(object obj) => obj is WidgetActionInvokedArgs that && this == that;
        public override int GetHashCode() => ThisPtr.GetHashCode();


        bool IWinRTObject.HasUnwrappableNativeObject => true;
        IObjectReference IWinRTObject.NativeObject => _inner;
        private volatile global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> _queryInterfaceCache;
        private global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> MakeQueryInterfaceCache()
        {
            global::System.Threading.Interlocked.CompareExchange(ref _queryInterfaceCache, new global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference>(), null); 
            return _queryInterfaceCache;
        }
        global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> IWinRTObject.QueryInterfaceCache => _queryInterfaceCache ?? MakeQueryInterfaceCache();
        private volatile global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> _additionalTypeData;
        private global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> MakeAdditionalTypeData()
        {
            global::System.Threading.Interlocked.CompareExchange(ref _additionalTypeData, new global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object>(), null); 
            return _additionalTypeData;
        }
        global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> IWinRTObject.AdditionalTypeData => _additionalTypeData ?? MakeAdditionalTypeData();

        private struct InterfaceTag<I>{};


        public string CustomState => global::ABI.Microsoft.Windows.Widgets.Providers.IWidgetActionInvokedArgsMethods.get_CustomState(_objRef_global__Microsoft_Windows_Widgets_Providers_IWidgetActionInvokedArgs);

        public string Data => global::ABI.Microsoft.Windows.Widgets.Providers.IWidgetActionInvokedArgsMethods.get_Data(_objRef_global__Microsoft_Windows_Widgets_Providers_IWidgetActionInvokedArgs);

        public string Verb => global::ABI.Microsoft.Windows.Widgets.Providers.IWidgetActionInvokedArgsMethods.get_Verb(_objRef_global__Microsoft_Windows_Widgets_Providers_IWidgetActionInvokedArgs);

        public WidgetContext WidgetContext => global::ABI.Microsoft.Windows.Widgets.Providers.IWidgetActionInvokedArgsMethods.get_WidgetContext(_objRef_global__Microsoft_Windows_Widgets_Providers_IWidgetActionInvokedArgs);

        private bool IsOverridableInterface(Guid iid) => false;

        global::System.Runtime.InteropServices.CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(ref Guid iid, out IntPtr ppv)
        {
            ppv = IntPtr.Zero;
            if (IsOverridableInterface(iid) || global::WinRT.Interop.IID.IID_IInspectable == iid)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
            }

            if (((IWinRTObject)this).NativeObject.TryAs(iid, out ppv) >= 0)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.Handled;
            }

            return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
        }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.Windows.Widgets")]
    [global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.Windows.Widgets.Providers.WidgetAnalyticsInfoReportedArgs))]
    [global::ABI.Microsoft.Windows.Widgets.Providers.WidgetAnalyticsInfoReportedArgsRcwFactory]
    [global::WinRT.ProjectedRuntimeClass(typeof(IWidgetAnalyticsInfoReportedArgs))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.Windows.Widgets.WidgetContract), 131072u)]
    public sealed class WidgetAnalyticsInfoReportedArgs : global::System.Runtime.InteropServices.ICustomQueryInterface, IWinRTObject, IEquatable<WidgetAnalyticsInfoReportedArgs>
    {
        private IntPtr ThisPtr => _inner == null ? (((IWinRTObject)this).NativeObject).ThisPtr : _inner.ThisPtr;

        private readonly IObjectReference _inner = null;



        private IObjectReference _objRef_global__Microsoft_Windows_Widgets_Providers_IWidgetAnalyticsInfoReportedArgs => _inner;


        public static WidgetAnalyticsInfoReportedArgs FromAbi(IntPtr thisPtr)
        {
            if (thisPtr == IntPtr.Zero) return null;
            return MarshalInspectable<WidgetAnalyticsInfoReportedArgs>.FromAbi(thisPtr);
        }

        internal WidgetAnalyticsInfoReportedArgs(IObjectReference objRef)
        {
            _inner = objRef.As(global::ABI.Microsoft.Windows.Widgets.Providers.IWidgetAnalyticsInfoReportedArgsMethods.IID);

        }


        public static bool operator ==(WidgetAnalyticsInfoReportedArgs x, WidgetAnalyticsInfoReportedArgs y) => (x?.ThisPtr ?? IntPtr.Zero) == (y?.ThisPtr ?? IntPtr.Zero);
        public static bool operator !=(WidgetAnalyticsInfoReportedArgs x, WidgetAnalyticsInfoReportedArgs y) => !(x == y);
        public bool Equals(WidgetAnalyticsInfoReportedArgs other) => this == other;
        public override bool Equals(object obj) => obj is WidgetAnalyticsInfoReportedArgs that && this == that;
        public override int GetHashCode() => ThisPtr.GetHashCode();


        bool IWinRTObject.HasUnwrappableNativeObject => true;
        IObjectReference IWinRTObject.NativeObject => _inner;
        private volatile global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> _queryInterfaceCache;
        private global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> MakeQueryInterfaceCache()
        {
            global::System.Threading.Interlocked.CompareExchange(ref _queryInterfaceCache, new global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference>(), null); 
            return _queryInterfaceCache;
        }
        global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> IWinRTObject.QueryInterfaceCache => _queryInterfaceCache ?? MakeQueryInterfaceCache();
        private volatile global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> _additionalTypeData;
        private global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> MakeAdditionalTypeData()
        {
            global::System.Threading.Interlocked.CompareExchange(ref _additionalTypeData, new global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object>(), null); 
            return _additionalTypeData;
        }
        global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> IWinRTObject.AdditionalTypeData => _additionalTypeData ?? MakeAdditionalTypeData();

        private struct InterfaceTag<I>{};


        public string AnalyticsJson => global::ABI.Microsoft.Windows.Widgets.Providers.IWidgetAnalyticsInfoReportedArgsMethods.get_AnalyticsJson(_objRef_global__Microsoft_Windows_Widgets_Providers_IWidgetAnalyticsInfoReportedArgs);

        public WidgetContext WidgetContext => global::ABI.Microsoft.Windows.Widgets.Providers.IWidgetAnalyticsInfoReportedArgsMethods.get_WidgetContext(_objRef_global__Microsoft_Windows_Widgets_Providers_IWidgetAnalyticsInfoReportedArgs);

        private bool IsOverridableInterface(Guid iid) => false;

        global::System.Runtime.InteropServices.CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(ref Guid iid, out IntPtr ppv)
        {
            ppv = IntPtr.Zero;
            if (IsOverridableInterface(iid) || global::WinRT.Interop.IID.IID_IInspectable == iid)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
            }

            if (((IWinRTObject)this).NativeObject.TryAs(iid, out ppv) >= 0)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.Handled;
            }

            return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
        }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.Windows.Widgets")]
    [global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.Windows.Widgets.Providers.WidgetContext))]
    [global::ABI.Microsoft.Windows.Widgets.Providers.WidgetContextRcwFactory]
    [global::WinRT.ProjectedRuntimeClass(typeof(IWidgetContext))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.Windows.Widgets.WidgetContract), 65536u)]
    public sealed class WidgetContext : global::System.Runtime.InteropServices.ICustomQueryInterface, IWinRTObject, IEquatable<WidgetContext>
    {
        private IntPtr ThisPtr => _inner == null ? (((IWinRTObject)this).NativeObject).ThisPtr : _inner.ThisPtr;

        private readonly IObjectReference _inner = null;



        private IObjectReference _objRef_global__Microsoft_Windows_Widgets_Providers_IWidgetContext => _inner;


        public static WidgetContext FromAbi(IntPtr thisPtr)
        {
            if (thisPtr == IntPtr.Zero) return null;
            return MarshalInspectable<WidgetContext>.FromAbi(thisPtr);
        }

        internal WidgetContext(IObjectReference objRef)
        {
            _inner = objRef.As(global::ABI.Microsoft.Windows.Widgets.Providers.IWidgetContextMethods.IID);

        }


        public static bool operator ==(WidgetContext x, WidgetContext y) => (x?.ThisPtr ?? IntPtr.Zero) == (y?.ThisPtr ?? IntPtr.Zero);
        public static bool operator !=(WidgetContext x, WidgetContext y) => !(x == y);
        public bool Equals(WidgetContext other) => this == other;
        public override bool Equals(object obj) => obj is WidgetContext that && this == that;
        public override int GetHashCode() => ThisPtr.GetHashCode();


        bool IWinRTObject.HasUnwrappableNativeObject => true;
        IObjectReference IWinRTObject.NativeObject => _inner;
        private volatile global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> _queryInterfaceCache;
        private global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> MakeQueryInterfaceCache()
        {
            global::System.Threading.Interlocked.CompareExchange(ref _queryInterfaceCache, new global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference>(), null); 
            return _queryInterfaceCache;
        }
        global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> IWinRTObject.QueryInterfaceCache => _queryInterfaceCache ?? MakeQueryInterfaceCache();
        private volatile global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> _additionalTypeData;
        private global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> MakeAdditionalTypeData()
        {
            global::System.Threading.Interlocked.CompareExchange(ref _additionalTypeData, new global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object>(), null); 
            return _additionalTypeData;
        }
        global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> IWinRTObject.AdditionalTypeData => _additionalTypeData ?? MakeAdditionalTypeData();

        private struct InterfaceTag<I>{};


        public string DefinitionId => global::ABI.Microsoft.Windows.Widgets.Providers.IWidgetContextMethods.get_DefinitionId(_objRef_global__Microsoft_Windows_Widgets_Providers_IWidgetContext);

        public string Id => global::ABI.Microsoft.Windows.Widgets.Providers.IWidgetContextMethods.get_Id(_objRef_global__Microsoft_Windows_Widgets_Providers_IWidgetContext);

        public bool IsActive => global::ABI.Microsoft.Windows.Widgets.Providers.IWidgetContextMethods.get_IsActive(_objRef_global__Microsoft_Windows_Widgets_Providers_IWidgetContext);

        public global::Microsoft.Windows.Widgets.WidgetSize Size => global::ABI.Microsoft.Windows.Widgets.Providers.IWidgetContextMethods.get_Size(_objRef_global__Microsoft_Windows_Widgets_Providers_IWidgetContext);

        private bool IsOverridableInterface(Guid iid) => false;

        global::System.Runtime.InteropServices.CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(ref Guid iid, out IntPtr ppv)
        {
            ppv = IntPtr.Zero;
            if (IsOverridableInterface(iid) || global::WinRT.Interop.IID.IID_IInspectable == iid)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
            }

            if (((IWinRTObject)this).NativeObject.TryAs(iid, out ppv) >= 0)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.Handled;
            }

            return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
        }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.Windows.Widgets")]
    [global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.Windows.Widgets.Providers.WidgetContextChangedArgs))]
    [global::ABI.Microsoft.Windows.Widgets.Providers.WidgetContextChangedArgsRcwFactory]
    [global::WinRT.ProjectedRuntimeClass(typeof(IWidgetContextChangedArgs))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.Windows.Widgets.WidgetContract), 65536u)]
    public sealed class WidgetContextChangedArgs : global::System.Runtime.InteropServices.ICustomQueryInterface, IWinRTObject, IEquatable<WidgetContextChangedArgs>
    {
        private IntPtr ThisPtr => _inner == null ? (((IWinRTObject)this).NativeObject).ThisPtr : _inner.ThisPtr;

        private readonly IObjectReference _inner = null;



        private IObjectReference _objRef_global__Microsoft_Windows_Widgets_Providers_IWidgetContextChangedArgs => _inner;


        public static WidgetContextChangedArgs FromAbi(IntPtr thisPtr)
        {
            if (thisPtr == IntPtr.Zero) return null;
            return MarshalInspectable<WidgetContextChangedArgs>.FromAbi(thisPtr);
        }

        internal WidgetContextChangedArgs(IObjectReference objRef)
        {
            _inner = objRef.As(global::ABI.Microsoft.Windows.Widgets.Providers.IWidgetContextChangedArgsMethods.IID);

        }


        public static bool operator ==(WidgetContextChangedArgs x, WidgetContextChangedArgs y) => (x?.ThisPtr ?? IntPtr.Zero) == (y?.ThisPtr ?? IntPtr.Zero);
        public static bool operator !=(WidgetContextChangedArgs x, WidgetContextChangedArgs y) => !(x == y);
        public bool Equals(WidgetContextChangedArgs other) => this == other;
        public override bool Equals(object obj) => obj is WidgetContextChangedArgs that && this == that;
        public override int GetHashCode() => ThisPtr.GetHashCode();


        bool IWinRTObject.HasUnwrappableNativeObject => true;
        IObjectReference IWinRTObject.NativeObject => _inner;
        private volatile global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> _queryInterfaceCache;
        private global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> MakeQueryInterfaceCache()
        {
            global::System.Threading.Interlocked.CompareExchange(ref _queryInterfaceCache, new global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference>(), null); 
            return _queryInterfaceCache;
        }
        global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> IWinRTObject.QueryInterfaceCache => _queryInterfaceCache ?? MakeQueryInterfaceCache();
        private volatile global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> _additionalTypeData;
        private global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> MakeAdditionalTypeData()
        {
            global::System.Threading.Interlocked.CompareExchange(ref _additionalTypeData, new global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object>(), null); 
            return _additionalTypeData;
        }
        global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> IWinRTObject.AdditionalTypeData => _additionalTypeData ?? MakeAdditionalTypeData();

        private struct InterfaceTag<I>{};


        public WidgetContext WidgetContext => global::ABI.Microsoft.Windows.Widgets.Providers.IWidgetContextChangedArgsMethods.get_WidgetContext(_objRef_global__Microsoft_Windows_Widgets_Providers_IWidgetContextChangedArgs);

        private bool IsOverridableInterface(Guid iid) => false;

        global::System.Runtime.InteropServices.CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(ref Guid iid, out IntPtr ppv)
        {
            ppv = IntPtr.Zero;
            if (IsOverridableInterface(iid) || global::WinRT.Interop.IID.IID_IInspectable == iid)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
            }

            if (((IWinRTObject)this).NativeObject.TryAs(iid, out ppv) >= 0)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.Handled;
            }

            return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
        }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.Windows.Widgets")]
    [global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.Windows.Widgets.Providers.WidgetCustomizationRequestedArgs))]
    [global::ABI.Microsoft.Windows.Widgets.Providers.WidgetCustomizationRequestedArgsRcwFactory]
    [global::WinRT.ProjectedRuntimeClass(typeof(IWidgetCustomizationRequestedArgs))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.Windows.Widgets.WidgetContract), 131072u)]
    public sealed class WidgetCustomizationRequestedArgs : global::System.Runtime.InteropServices.ICustomQueryInterface, IWinRTObject, IEquatable<WidgetCustomizationRequestedArgs>
    {
        private IntPtr ThisPtr => _inner == null ? (((IWinRTObject)this).NativeObject).ThisPtr : _inner.ThisPtr;

        private readonly IObjectReference _inner = null;



        private IObjectReference _objRef_global__Microsoft_Windows_Widgets_Providers_IWidgetCustomizationRequestedArgs => _inner;


        public static WidgetCustomizationRequestedArgs FromAbi(IntPtr thisPtr)
        {
            if (thisPtr == IntPtr.Zero) return null;
            return MarshalInspectable<WidgetCustomizationRequestedArgs>.FromAbi(thisPtr);
        }

        internal WidgetCustomizationRequestedArgs(IObjectReference objRef)
        {
            _inner = objRef.As(global::ABI.Microsoft.Windows.Widgets.Providers.IWidgetCustomizationRequestedArgsMethods.IID);

        }


        public static bool operator ==(WidgetCustomizationRequestedArgs x, WidgetCustomizationRequestedArgs y) => (x?.ThisPtr ?? IntPtr.Zero) == (y?.ThisPtr ?? IntPtr.Zero);
        public static bool operator !=(WidgetCustomizationRequestedArgs x, WidgetCustomizationRequestedArgs y) => !(x == y);
        public bool Equals(WidgetCustomizationRequestedArgs other) => this == other;
        public override bool Equals(object obj) => obj is WidgetCustomizationRequestedArgs that && this == that;
        public override int GetHashCode() => ThisPtr.GetHashCode();


        bool IWinRTObject.HasUnwrappableNativeObject => true;
        IObjectReference IWinRTObject.NativeObject => _inner;
        private volatile global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> _queryInterfaceCache;
        private global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> MakeQueryInterfaceCache()
        {
            global::System.Threading.Interlocked.CompareExchange(ref _queryInterfaceCache, new global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference>(), null); 
            return _queryInterfaceCache;
        }
        global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> IWinRTObject.QueryInterfaceCache => _queryInterfaceCache ?? MakeQueryInterfaceCache();
        private volatile global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> _additionalTypeData;
        private global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> MakeAdditionalTypeData()
        {
            global::System.Threading.Interlocked.CompareExchange(ref _additionalTypeData, new global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object>(), null); 
            return _additionalTypeData;
        }
        global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> IWinRTObject.AdditionalTypeData => _additionalTypeData ?? MakeAdditionalTypeData();

        private struct InterfaceTag<I>{};


        public string CustomState => global::ABI.Microsoft.Windows.Widgets.Providers.IWidgetCustomizationRequestedArgsMethods.get_CustomState(_objRef_global__Microsoft_Windows_Widgets_Providers_IWidgetCustomizationRequestedArgs);

        public WidgetContext WidgetContext => global::ABI.Microsoft.Windows.Widgets.Providers.IWidgetCustomizationRequestedArgsMethods.get_WidgetContext(_objRef_global__Microsoft_Windows_Widgets_Providers_IWidgetCustomizationRequestedArgs);

        private bool IsOverridableInterface(Guid iid) => false;

        global::System.Runtime.InteropServices.CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(ref Guid iid, out IntPtr ppv)
        {
            ppv = IntPtr.Zero;
            if (IsOverridableInterface(iid) || global::WinRT.Interop.IID.IID_IInspectable == iid)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
            }

            if (((IWinRTObject)this).NativeObject.TryAs(iid, out ppv) >= 0)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.Handled;
            }

            return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
        }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.Windows.Widgets")]
    [global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.Windows.Widgets.Providers.WidgetErrorInfoReportedArgs))]
    [global::ABI.Microsoft.Windows.Widgets.Providers.WidgetErrorInfoReportedArgsRcwFactory]
    [global::WinRT.ProjectedRuntimeClass(typeof(IWidgetErrorInfoReportedArgs))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.Windows.Widgets.WidgetContract), 131072u)]
    public sealed class WidgetErrorInfoReportedArgs : global::System.Runtime.InteropServices.ICustomQueryInterface, IWinRTObject, IEquatable<WidgetErrorInfoReportedArgs>
    {
        private IntPtr ThisPtr => _inner == null ? (((IWinRTObject)this).NativeObject).ThisPtr : _inner.ThisPtr;

        private readonly IObjectReference _inner = null;



        private IObjectReference _objRef_global__Microsoft_Windows_Widgets_Providers_IWidgetErrorInfoReportedArgs => _inner;


        public static WidgetErrorInfoReportedArgs FromAbi(IntPtr thisPtr)
        {
            if (thisPtr == IntPtr.Zero) return null;
            return MarshalInspectable<WidgetErrorInfoReportedArgs>.FromAbi(thisPtr);
        }

        internal WidgetErrorInfoReportedArgs(IObjectReference objRef)
        {
            _inner = objRef.As(global::ABI.Microsoft.Windows.Widgets.Providers.IWidgetErrorInfoReportedArgsMethods.IID);

        }


        public static bool operator ==(WidgetErrorInfoReportedArgs x, WidgetErrorInfoReportedArgs y) => (x?.ThisPtr ?? IntPtr.Zero) == (y?.ThisPtr ?? IntPtr.Zero);
        public static bool operator !=(WidgetErrorInfoReportedArgs x, WidgetErrorInfoReportedArgs y) => !(x == y);
        public bool Equals(WidgetErrorInfoReportedArgs other) => this == other;
        public override bool Equals(object obj) => obj is WidgetErrorInfoReportedArgs that && this == that;
        public override int GetHashCode() => ThisPtr.GetHashCode();


        bool IWinRTObject.HasUnwrappableNativeObject => true;
        IObjectReference IWinRTObject.NativeObject => _inner;
        private volatile global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> _queryInterfaceCache;
        private global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> MakeQueryInterfaceCache()
        {
            global::System.Threading.Interlocked.CompareExchange(ref _queryInterfaceCache, new global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference>(), null); 
            return _queryInterfaceCache;
        }
        global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> IWinRTObject.QueryInterfaceCache => _queryInterfaceCache ?? MakeQueryInterfaceCache();
        private volatile global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> _additionalTypeData;
        private global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> MakeAdditionalTypeData()
        {
            global::System.Threading.Interlocked.CompareExchange(ref _additionalTypeData, new global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object>(), null); 
            return _additionalTypeData;
        }
        global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> IWinRTObject.AdditionalTypeData => _additionalTypeData ?? MakeAdditionalTypeData();

        private struct InterfaceTag<I>{};


        public string ErrorJson => global::ABI.Microsoft.Windows.Widgets.Providers.IWidgetErrorInfoReportedArgsMethods.get_ErrorJson(_objRef_global__Microsoft_Windows_Widgets_Providers_IWidgetErrorInfoReportedArgs);

        public WidgetContext WidgetContext => global::ABI.Microsoft.Windows.Widgets.Providers.IWidgetErrorInfoReportedArgsMethods.get_WidgetContext(_objRef_global__Microsoft_Windows_Widgets_Providers_IWidgetErrorInfoReportedArgs);

        private bool IsOverridableInterface(Guid iid) => false;

        global::System.Runtime.InteropServices.CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(ref Guid iid, out IntPtr ppv)
        {
            ppv = IntPtr.Zero;
            if (IsOverridableInterface(iid) || global::WinRT.Interop.IID.IID_IInspectable == iid)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
            }

            if (((IWinRTObject)this).NativeObject.TryAs(iid, out ppv) >= 0)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.Handled;
            }

            return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
        }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.Windows.Widgets")]
    [global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.Windows.Widgets.Providers.WidgetInfo))]
    [global::ABI.Microsoft.Windows.Widgets.Providers.WidgetInfoRcwFactory]
    [global::WinRT.ProjectedRuntimeClass(typeof(IWidgetInfo))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.Windows.Widgets.WidgetContract), 65536u)]
    public sealed class WidgetInfo : global::System.Runtime.InteropServices.ICustomQueryInterface, IWinRTObject, IEquatable<WidgetInfo>
    {
        private IntPtr ThisPtr => _inner == null ? (((IWinRTObject)this).NativeObject).ThisPtr : _inner.ThisPtr;

        private readonly IObjectReference _inner = null;



        private IObjectReference _objRef_global__Microsoft_Windows_Widgets_Providers_IWidgetInfo => _inner;
        private volatile IObjectReference ___objRef_global__Microsoft_Windows_Widgets_Providers_IWidgetInfo2;
        private IObjectReference Make___objRef_global__Microsoft_Windows_Widgets_Providers_IWidgetInfo2()
        {
            global::System.Threading.Interlocked.CompareExchange(ref ___objRef_global__Microsoft_Windows_Widgets_Providers_IWidgetInfo2, ((IWinRTObject)this).NativeObject.As<IUnknownVftbl>(global::ABI.Microsoft.Windows.Widgets.Providers.IWidgetInfo2Methods.IID), null);
            return ___objRef_global__Microsoft_Windows_Widgets_Providers_IWidgetInfo2;
        }
        private IObjectReference _objRef_global__Microsoft_Windows_Widgets_Providers_IWidgetInfo2 => ___objRef_global__Microsoft_Windows_Widgets_Providers_IWidgetInfo2 ?? Make___objRef_global__Microsoft_Windows_Widgets_Providers_IWidgetInfo2();



        public static WidgetInfo FromAbi(IntPtr thisPtr)
        {
            if (thisPtr == IntPtr.Zero) return null;
            return MarshalInspectable<WidgetInfo>.FromAbi(thisPtr);
        }

        internal WidgetInfo(IObjectReference objRef)
        {
            _inner = objRef.As(global::ABI.Microsoft.Windows.Widgets.Providers.IWidgetInfoMethods.IID);

        }


        public static bool operator ==(WidgetInfo x, WidgetInfo y) => (x?.ThisPtr ?? IntPtr.Zero) == (y?.ThisPtr ?? IntPtr.Zero);
        public static bool operator !=(WidgetInfo x, WidgetInfo y) => !(x == y);
        public bool Equals(WidgetInfo other) => this == other;
        public override bool Equals(object obj) => obj is WidgetInfo that && this == that;
        public override int GetHashCode() => ThisPtr.GetHashCode();


        bool IWinRTObject.HasUnwrappableNativeObject => true;
        IObjectReference IWinRTObject.NativeObject => _inner;
        private volatile global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> _queryInterfaceCache;
        private global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> MakeQueryInterfaceCache()
        {
            global::System.Threading.Interlocked.CompareExchange(ref _queryInterfaceCache, new global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference>(), null); 
            return _queryInterfaceCache;
        }
        global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> IWinRTObject.QueryInterfaceCache => _queryInterfaceCache ?? MakeQueryInterfaceCache();
        private volatile global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> _additionalTypeData;
        private global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> MakeAdditionalTypeData()
        {
            global::System.Threading.Interlocked.CompareExchange(ref _additionalTypeData, new global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object>(), null); 
            return _additionalTypeData;
        }
        global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> IWinRTObject.AdditionalTypeData => _additionalTypeData ?? MakeAdditionalTypeData();

        private struct InterfaceTag<I>{};


        public string CustomState => global::ABI.Microsoft.Windows.Widgets.Providers.IWidgetInfoMethods.get_CustomState(_objRef_global__Microsoft_Windows_Widgets_Providers_IWidgetInfo);

        public string Data => global::ABI.Microsoft.Windows.Widgets.Providers.IWidgetInfoMethods.get_Data(_objRef_global__Microsoft_Windows_Widgets_Providers_IWidgetInfo);

        public bool IsPlaceholderContent => global::ABI.Microsoft.Windows.Widgets.Providers.IWidgetInfo2Methods.get_IsPlaceholderContent(_objRef_global__Microsoft_Windows_Widgets_Providers_IWidgetInfo2);

        public global::System.DateTimeOffset LastUpdateTime => global::ABI.Microsoft.Windows.Widgets.Providers.IWidgetInfoMethods.get_LastUpdateTime(_objRef_global__Microsoft_Windows_Widgets_Providers_IWidgetInfo);

        public string Template => global::ABI.Microsoft.Windows.Widgets.Providers.IWidgetInfoMethods.get_Template(_objRef_global__Microsoft_Windows_Widgets_Providers_IWidgetInfo);

        public WidgetContext WidgetContext => global::ABI.Microsoft.Windows.Widgets.Providers.IWidgetInfoMethods.get_WidgetContext(_objRef_global__Microsoft_Windows_Widgets_Providers_IWidgetInfo);

        private bool IsOverridableInterface(Guid iid) => false;

        global::System.Runtime.InteropServices.CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(ref Guid iid, out IntPtr ppv)
        {
            ppv = IntPtr.Zero;
            if (IsOverridableInterface(iid) || global::WinRT.Interop.IID.IID_IInspectable == iid)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
            }

            if (((IWinRTObject)this).NativeObject.TryAs(iid, out ppv) >= 0)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.Handled;
            }

            return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
        }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.Windows.Widgets")]
    [global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.Windows.Widgets.Providers.WidgetManager))]
    [global::ABI.Microsoft.Windows.Widgets.Providers.WidgetManagerRcwFactory]
    [global::WinRT.ProjectedRuntimeClass(typeof(IWidgetManager))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.Windows.Widgets.WidgetContract), 65536u)]
    public sealed class WidgetManager : IWidgetManager, IWidgetManager2, global::System.Runtime.InteropServices.ICustomQueryInterface, IWinRTObject, IEquatable<WidgetManager>
    {
        private IntPtr ThisPtr => _inner == null ? (((IWinRTObject)this).NativeObject).ThisPtr : _inner.ThisPtr;

        private readonly IObjectReference _inner = null;



        private IObjectReference _objRef_global__Microsoft_Windows_Widgets_Providers_IWidgetManager => _inner;
        private volatile IObjectReference ___objRef_global__Microsoft_Windows_Widgets_Providers_IWidgetManager2;
        private IObjectReference Make___objRef_global__Microsoft_Windows_Widgets_Providers_IWidgetManager2()
        {
            global::System.Threading.Interlocked.CompareExchange(ref ___objRef_global__Microsoft_Windows_Widgets_Providers_IWidgetManager2, ((IWinRTObject)this).NativeObject.As<IUnknownVftbl>(global::ABI.Microsoft.Windows.Widgets.Providers.IWidgetManager2Methods.IID), null);
            return ___objRef_global__Microsoft_Windows_Widgets_Providers_IWidgetManager2;
        }
        private IObjectReference _objRef_global__Microsoft_Windows_Widgets_Providers_IWidgetManager2 => ___objRef_global__Microsoft_Windows_Widgets_Providers_IWidgetManager2 ?? Make___objRef_global__Microsoft_Windows_Widgets_Providers_IWidgetManager2();



        public static I As<I>() => ActivationFactory.Get("Microsoft.Windows.Widgets.Providers.WidgetManager").AsInterface<I>();

        private static volatile IObjectReference ___objRef_global__Microsoft_Windows_Widgets_Providers_IWidgetManagerStatics;
        private static IObjectReference _objRef_global__Microsoft_Windows_Widgets_Providers_IWidgetManagerStatics
        {
            get
            { 
                var factory = ___objRef_global__Microsoft_Windows_Widgets_Providers_IWidgetManagerStatics;
                if (factory != null && factory.IsInCurrentContext)
                {
                    return factory;
                }
                else
                {
                    return ___objRef_global__Microsoft_Windows_Widgets_Providers_IWidgetManagerStatics = ActivationFactory.Get("Microsoft.Windows.Widgets.Providers.WidgetManager", global::ABI.Microsoft.Windows.Widgets.Providers.IWidgetManagerStaticsMethods.IID);
                }
            }
        }

        public static WidgetManager GetDefault() => global::ABI.Microsoft.Windows.Widgets.Providers.IWidgetManagerStaticsMethods.GetDefault(_objRef_global__Microsoft_Windows_Widgets_Providers_IWidgetManagerStatics);

        public static WidgetManager FromAbi(IntPtr thisPtr)
        {
            if (thisPtr == IntPtr.Zero) return null;
            return MarshalInspectable<WidgetManager>.FromAbi(thisPtr);
        }

        internal WidgetManager(IObjectReference objRef)
        {
            _inner = objRef.As(global::ABI.Microsoft.Windows.Widgets.Providers.IWidgetManagerMethods.IID);

        }


        public static bool operator ==(WidgetManager x, WidgetManager y) => (x?.ThisPtr ?? IntPtr.Zero) == (y?.ThisPtr ?? IntPtr.Zero);
        public static bool operator !=(WidgetManager x, WidgetManager y) => !(x == y);
        public bool Equals(WidgetManager other) => this == other;
        public override bool Equals(object obj) => obj is WidgetManager that && this == that;
        public override int GetHashCode() => ThisPtr.GetHashCode();


        bool IWinRTObject.HasUnwrappableNativeObject => true;
        IObjectReference IWinRTObject.NativeObject => _inner;
        private volatile global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> _queryInterfaceCache;
        private global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> MakeQueryInterfaceCache()
        {
            global::System.Threading.Interlocked.CompareExchange(ref _queryInterfaceCache, new global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference>(), null); 
            return _queryInterfaceCache;
        }
        global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> IWinRTObject.QueryInterfaceCache => _queryInterfaceCache ?? MakeQueryInterfaceCache();
        private volatile global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> _additionalTypeData;
        private global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> MakeAdditionalTypeData()
        {
            global::System.Threading.Interlocked.CompareExchange(ref _additionalTypeData, new global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object>(), null); 
            return _additionalTypeData;
        }
        global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> IWinRTObject.AdditionalTypeData => _additionalTypeData ?? MakeAdditionalTypeData();

        private struct InterfaceTag<I>{};


        public void UpdateWidget(WidgetUpdateRequestOptions widgetUpdateRequestOptions) => global::ABI.Microsoft.Windows.Widgets.Providers.IWidgetManagerMethods.UpdateWidget(_objRef_global__Microsoft_Windows_Widgets_Providers_IWidgetManager, widgetUpdateRequestOptions);

        public string[] GetWidgetIds() => global::ABI.Microsoft.Windows.Widgets.Providers.IWidgetManagerMethods.GetWidgetIds(_objRef_global__Microsoft_Windows_Widgets_Providers_IWidgetManager);

        public WidgetInfo GetWidgetInfo(string widgetId) => global::ABI.Microsoft.Windows.Widgets.Providers.IWidgetManagerMethods.GetWidgetInfo(_objRef_global__Microsoft_Windows_Widgets_Providers_IWidgetManager, widgetId);

        public WidgetInfo[] GetWidgetInfos() => global::ABI.Microsoft.Windows.Widgets.Providers.IWidgetManagerMethods.GetWidgetInfos(_objRef_global__Microsoft_Windows_Widgets_Providers_IWidgetManager);

        public void DeleteWidget(string widgetId) => global::ABI.Microsoft.Windows.Widgets.Providers.IWidgetManagerMethods.DeleteWidget(_objRef_global__Microsoft_Windows_Widgets_Providers_IWidgetManager, widgetId);

        public void SendMessageToContent(string widgetId, string message) => global::ABI.Microsoft.Windows.Widgets.Providers.IWidgetManager2Methods.SendMessageToContent(_objRef_global__Microsoft_Windows_Widgets_Providers_IWidgetManager2, widgetId, message);

        private bool IsOverridableInterface(Guid iid) => false;

        global::System.Runtime.InteropServices.CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(ref Guid iid, out IntPtr ppv)
        {
            ppv = IntPtr.Zero;
            if (IsOverridableInterface(iid) || global::WinRT.Interop.IID.IID_IInspectable == iid)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
            }

            if (((IWinRTObject)this).NativeObject.TryAs(iid, out ppv) >= 0)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.Handled;
            }

            return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
        }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.Windows.Widgets")]
    [global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.Windows.Widgets.Providers.WidgetMessageReceivedArgs))]
    [global::ABI.Microsoft.Windows.Widgets.Providers.WidgetMessageReceivedArgsRcwFactory]
    [global::WinRT.ProjectedRuntimeClass(typeof(IWidgetMessageReceivedArgs))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.Windows.Widgets.WidgetContract), 393216u)]
    public sealed class WidgetMessageReceivedArgs : global::System.Runtime.InteropServices.ICustomQueryInterface, IWinRTObject, IEquatable<WidgetMessageReceivedArgs>
    {
        private IntPtr ThisPtr => _inner == null ? (((IWinRTObject)this).NativeObject).ThisPtr : _inner.ThisPtr;

        private readonly IObjectReference _inner = null;



        private IObjectReference _objRef_global__Microsoft_Windows_Widgets_Providers_IWidgetMessageReceivedArgs => _inner;


        public static WidgetMessageReceivedArgs FromAbi(IntPtr thisPtr)
        {
            if (thisPtr == IntPtr.Zero) return null;
            return MarshalInspectable<WidgetMessageReceivedArgs>.FromAbi(thisPtr);
        }

        internal WidgetMessageReceivedArgs(IObjectReference objRef)
        {
            _inner = objRef.As(global::ABI.Microsoft.Windows.Widgets.Providers.IWidgetMessageReceivedArgsMethods.IID);

        }


        public static bool operator ==(WidgetMessageReceivedArgs x, WidgetMessageReceivedArgs y) => (x?.ThisPtr ?? IntPtr.Zero) == (y?.ThisPtr ?? IntPtr.Zero);
        public static bool operator !=(WidgetMessageReceivedArgs x, WidgetMessageReceivedArgs y) => !(x == y);
        public bool Equals(WidgetMessageReceivedArgs other) => this == other;
        public override bool Equals(object obj) => obj is WidgetMessageReceivedArgs that && this == that;
        public override int GetHashCode() => ThisPtr.GetHashCode();


        bool IWinRTObject.HasUnwrappableNativeObject => true;
        IObjectReference IWinRTObject.NativeObject => _inner;
        private volatile global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> _queryInterfaceCache;
        private global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> MakeQueryInterfaceCache()
        {
            global::System.Threading.Interlocked.CompareExchange(ref _queryInterfaceCache, new global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference>(), null); 
            return _queryInterfaceCache;
        }
        global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> IWinRTObject.QueryInterfaceCache => _queryInterfaceCache ?? MakeQueryInterfaceCache();
        private volatile global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> _additionalTypeData;
        private global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> MakeAdditionalTypeData()
        {
            global::System.Threading.Interlocked.CompareExchange(ref _additionalTypeData, new global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object>(), null); 
            return _additionalTypeData;
        }
        global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> IWinRTObject.AdditionalTypeData => _additionalTypeData ?? MakeAdditionalTypeData();

        private struct InterfaceTag<I>{};


        public string Message => global::ABI.Microsoft.Windows.Widgets.Providers.IWidgetMessageReceivedArgsMethods.get_Message(_objRef_global__Microsoft_Windows_Widgets_Providers_IWidgetMessageReceivedArgs);

        public WidgetContext WidgetContext => global::ABI.Microsoft.Windows.Widgets.Providers.IWidgetMessageReceivedArgsMethods.get_WidgetContext(_objRef_global__Microsoft_Windows_Widgets_Providers_IWidgetMessageReceivedArgs);

        private bool IsOverridableInterface(Guid iid) => false;

        global::System.Runtime.InteropServices.CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(ref Guid iid, out IntPtr ppv)
        {
            ppv = IntPtr.Zero;
            if (IsOverridableInterface(iid) || global::WinRT.Interop.IID.IID_IInspectable == iid)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
            }

            if (((IWinRTObject)this).NativeObject.TryAs(iid, out ppv) >= 0)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.Handled;
            }

            return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
        }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.Windows.Widgets")]
    [global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.Windows.Widgets.Providers.WidgetResourceRequest))]
    [global::ABI.Microsoft.Windows.Widgets.Providers.WidgetResourceRequestRcwFactory]
    [global::WinRT.ProjectedRuntimeClass(typeof(IWidgetResourceRequest))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.Windows.Widgets.WidgetContract), 393216u)]
    public sealed class WidgetResourceRequest : global::System.Runtime.InteropServices.ICustomQueryInterface, IWinRTObject, IEquatable<WidgetResourceRequest>
    {
        private IntPtr ThisPtr => _inner == null ? (((IWinRTObject)this).NativeObject).ThisPtr : _inner.ThisPtr;

        private readonly IObjectReference _inner = null;



        private IObjectReference _objRef_global__Microsoft_Windows_Widgets_Providers_IWidgetResourceRequest => _inner;


        public static WidgetResourceRequest FromAbi(IntPtr thisPtr)
        {
            if (thisPtr == IntPtr.Zero) return null;
            return MarshalInspectable<WidgetResourceRequest>.FromAbi(thisPtr);
        }

        internal WidgetResourceRequest(IObjectReference objRef)
        {
            _inner = objRef.As(global::ABI.Microsoft.Windows.Widgets.Providers.IWidgetResourceRequestMethods.IID);

        }


        public static bool operator ==(WidgetResourceRequest x, WidgetResourceRequest y) => (x?.ThisPtr ?? IntPtr.Zero) == (y?.ThisPtr ?? IntPtr.Zero);
        public static bool operator !=(WidgetResourceRequest x, WidgetResourceRequest y) => !(x == y);
        public bool Equals(WidgetResourceRequest other) => this == other;
        public override bool Equals(object obj) => obj is WidgetResourceRequest that && this == that;
        public override int GetHashCode() => ThisPtr.GetHashCode();


        bool IWinRTObject.HasUnwrappableNativeObject => true;
        IObjectReference IWinRTObject.NativeObject => _inner;
        private volatile global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> _queryInterfaceCache;
        private global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> MakeQueryInterfaceCache()
        {
            global::System.Threading.Interlocked.CompareExchange(ref _queryInterfaceCache, new global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference>(), null); 
            return _queryInterfaceCache;
        }
        global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> IWinRTObject.QueryInterfaceCache => _queryInterfaceCache ?? MakeQueryInterfaceCache();
        private volatile global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> _additionalTypeData;
        private global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> MakeAdditionalTypeData()
        {
            global::System.Threading.Interlocked.CompareExchange(ref _additionalTypeData, new global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object>(), null); 
            return _additionalTypeData;
        }
        global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> IWinRTObject.AdditionalTypeData => _additionalTypeData ?? MakeAdditionalTypeData();

        private struct InterfaceTag<I>{};


        public global::Windows.Storage.Streams.IRandomAccessStreamReference Content
        {
            get => global::ABI.Microsoft.Windows.Widgets.Providers.IWidgetResourceRequestMethods.get_Content(_objRef_global__Microsoft_Windows_Widgets_Providers_IWidgetResourceRequest);
            set => global::ABI.Microsoft.Windows.Widgets.Providers.IWidgetResourceRequestMethods.set_Content(_objRef_global__Microsoft_Windows_Widgets_Providers_IWidgetResourceRequest, value);
        }

        public global::System.Collections.Generic.IDictionary<string, string> Headers => global::ABI.Microsoft.Windows.Widgets.Providers.IWidgetResourceRequestMethods.get_Headers(_objRef_global__Microsoft_Windows_Widgets_Providers_IWidgetResourceRequest);

        public string Method
        {
            get => global::ABI.Microsoft.Windows.Widgets.Providers.IWidgetResourceRequestMethods.get_Method(_objRef_global__Microsoft_Windows_Widgets_Providers_IWidgetResourceRequest);
            set => global::ABI.Microsoft.Windows.Widgets.Providers.IWidgetResourceRequestMethods.set_Method(_objRef_global__Microsoft_Windows_Widgets_Providers_IWidgetResourceRequest, value);
        }

        public string Uri => global::ABI.Microsoft.Windows.Widgets.Providers.IWidgetResourceRequestMethods.get_Uri(_objRef_global__Microsoft_Windows_Widgets_Providers_IWidgetResourceRequest);

        private bool IsOverridableInterface(Guid iid) => false;

        global::System.Runtime.InteropServices.CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(ref Guid iid, out IntPtr ppv)
        {
            ppv = IntPtr.Zero;
            if (IsOverridableInterface(iid) || global::WinRT.Interop.IID.IID_IInspectable == iid)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
            }

            if (((IWinRTObject)this).NativeObject.TryAs(iid, out ppv) >= 0)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.Handled;
            }

            return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
        }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.Windows.Widgets")]
    [global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.Windows.Widgets.Providers.WidgetResourceRequestedArgs))]
    [global::ABI.Microsoft.Windows.Widgets.Providers.WidgetResourceRequestedArgsRcwFactory]
    [global::WinRT.ProjectedRuntimeClass(typeof(IWidgetResourceRequestedArgs))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.Windows.Widgets.WidgetContract), 393216u)]
    public sealed class WidgetResourceRequestedArgs : global::System.Runtime.InteropServices.ICustomQueryInterface, IWinRTObject, IEquatable<WidgetResourceRequestedArgs>
    {
        private IntPtr ThisPtr => _inner == null ? (((IWinRTObject)this).NativeObject).ThisPtr : _inner.ThisPtr;

        private readonly IObjectReference _inner = null;



        private IObjectReference _objRef_global__Microsoft_Windows_Widgets_Providers_IWidgetResourceRequestedArgs => _inner;


        public static WidgetResourceRequestedArgs FromAbi(IntPtr thisPtr)
        {
            if (thisPtr == IntPtr.Zero) return null;
            return MarshalInspectable<WidgetResourceRequestedArgs>.FromAbi(thisPtr);
        }

        internal WidgetResourceRequestedArgs(IObjectReference objRef)
        {
            _inner = objRef.As(global::ABI.Microsoft.Windows.Widgets.Providers.IWidgetResourceRequestedArgsMethods.IID);

        }


        public static bool operator ==(WidgetResourceRequestedArgs x, WidgetResourceRequestedArgs y) => (x?.ThisPtr ?? IntPtr.Zero) == (y?.ThisPtr ?? IntPtr.Zero);
        public static bool operator !=(WidgetResourceRequestedArgs x, WidgetResourceRequestedArgs y) => !(x == y);
        public bool Equals(WidgetResourceRequestedArgs other) => this == other;
        public override bool Equals(object obj) => obj is WidgetResourceRequestedArgs that && this == that;
        public override int GetHashCode() => ThisPtr.GetHashCode();


        bool IWinRTObject.HasUnwrappableNativeObject => true;
        IObjectReference IWinRTObject.NativeObject => _inner;
        private volatile global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> _queryInterfaceCache;
        private global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> MakeQueryInterfaceCache()
        {
            global::System.Threading.Interlocked.CompareExchange(ref _queryInterfaceCache, new global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference>(), null); 
            return _queryInterfaceCache;
        }
        global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> IWinRTObject.QueryInterfaceCache => _queryInterfaceCache ?? MakeQueryInterfaceCache();
        private volatile global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> _additionalTypeData;
        private global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> MakeAdditionalTypeData()
        {
            global::System.Threading.Interlocked.CompareExchange(ref _additionalTypeData, new global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object>(), null); 
            return _additionalTypeData;
        }
        global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> IWinRTObject.AdditionalTypeData => _additionalTypeData ?? MakeAdditionalTypeData();

        private struct InterfaceTag<I>{};


        public global::Windows.Foundation.Deferral GetDeferral() => global::ABI.Microsoft.Windows.Widgets.Providers.IWidgetResourceRequestedArgsMethods.GetDeferral(_objRef_global__Microsoft_Windows_Widgets_Providers_IWidgetResourceRequestedArgs);

        public WidgetResourceRequest Request => global::ABI.Microsoft.Windows.Widgets.Providers.IWidgetResourceRequestedArgsMethods.get_Request(_objRef_global__Microsoft_Windows_Widgets_Providers_IWidgetResourceRequestedArgs);

        public WidgetResourceResponse Response
        {
            get => global::ABI.Microsoft.Windows.Widgets.Providers.IWidgetResourceRequestedArgsMethods.get_Response(_objRef_global__Microsoft_Windows_Widgets_Providers_IWidgetResourceRequestedArgs);
            set => global::ABI.Microsoft.Windows.Widgets.Providers.IWidgetResourceRequestedArgsMethods.set_Response(_objRef_global__Microsoft_Windows_Widgets_Providers_IWidgetResourceRequestedArgs, value);
        }

        public WidgetContext WidgetContext => global::ABI.Microsoft.Windows.Widgets.Providers.IWidgetResourceRequestedArgsMethods.get_WidgetContext(_objRef_global__Microsoft_Windows_Widgets_Providers_IWidgetResourceRequestedArgs);

        private bool IsOverridableInterface(Guid iid) => false;

        global::System.Runtime.InteropServices.CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(ref Guid iid, out IntPtr ppv)
        {
            ppv = IntPtr.Zero;
            if (IsOverridableInterface(iid) || global::WinRT.Interop.IID.IID_IInspectable == iid)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
            }

            if (((IWinRTObject)this).NativeObject.TryAs(iid, out ppv) >= 0)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.Handled;
            }

            return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
        }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.Windows.Widgets")]
    [global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.Windows.Widgets.Providers.WidgetResourceResponse))]
    [global::ABI.Microsoft.Windows.Widgets.Providers.WidgetResourceResponseRcwFactory]
    [global::WinRT.ProjectedRuntimeClass(typeof(IWidgetResourceResponse))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.Windows.Widgets.WidgetContract), 393216u)]
    public sealed class WidgetResourceResponse : global::System.Runtime.InteropServices.ICustomQueryInterface, IWinRTObject, IEquatable<WidgetResourceResponse>
    {
        private IntPtr ThisPtr => _inner == null ? (((IWinRTObject)this).NativeObject).ThisPtr : _inner.ThisPtr;

        private readonly IObjectReference _inner = null;



        private IObjectReference _objRef_global__Microsoft_Windows_Widgets_Providers_IWidgetResourceResponse => _inner;


        private static class _IWidgetResourceResponseFactoryMethods
        {
            public static unsafe IntPtr CreateInstance(IObjectReference _obj, global::Windows.Storage.Streams.IRandomAccessStreamReference content, string reasonPhrase, int statusCode)
            {
                var ThisPtr = _obj.ThisPtr;

                ObjectReferenceValue __content = default;
                IntPtr __retval = default;
                try
                {
                    __content = MarshalInterface<global::Windows.Storage.Streams.IRandomAccessStreamReference>.CreateMarshaler2(content, global::ABI.Windows.Storage.Streams.IRandomAccessStreamReferenceMethods.IID);
                    MarshalString.Pinnable __reasonPhrase = new(reasonPhrase);
                    fixed(void* ___reasonPhrase = __reasonPhrase)
                    {
                        global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, IntPtr, int, IntPtr*, int>**)ThisPtr)[6](ThisPtr, MarshalInspectable<object>.GetAbi(__content), MarshalString.GetAbi(ref __reasonPhrase), statusCode, &__retval));
                        global::System.GC.KeepAlive(_obj);
                        return __retval;
                    }
                }
                finally
                {
                    MarshalInspectable<object>.DisposeMarshaler(__content);
                }
            }
        }

        private static volatile IObjectReference ___objRef_global__Microsoft_Windows_Widgets_Providers_IWidgetResourceResponseFactory;
        private static IObjectReference _objRef_global__Microsoft_Windows_Widgets_Providers_IWidgetResourceResponseFactory
        {
            get
            { 
                var factory = ___objRef_global__Microsoft_Windows_Widgets_Providers_IWidgetResourceResponseFactory;
                if (factory != null && factory.IsInCurrentContext)
                {
                    return factory;
                }
                else
                {
                    return ___objRef_global__Microsoft_Windows_Widgets_Providers_IWidgetResourceResponseFactory = ActivationFactory.Get("Microsoft.Windows.Widgets.Providers.WidgetResourceResponse", global::ABI.Microsoft.Windows.Widgets.Providers.IWidgetResourceResponseFactoryMethods.IID);
                }
            }
        }

        public WidgetResourceResponse(global::Windows.Storage.Streams.IRandomAccessStreamReference content, string reasonPhrase, int statusCode) 
        { 
        IntPtr ptr = (_IWidgetResourceResponseFactoryMethods.CreateInstance(_objRef_global__Microsoft_Windows_Widgets_Providers_IWidgetResourceResponseFactory, content, reasonPhrase, statusCode)); 
        try 
        { 
        _inner = ComWrappersSupport.GetObjectReferenceForInterface(ptr, global::ABI.Microsoft.Windows.Widgets.Providers.IWidgetResourceResponseMethods.IID, false); 

        } 
        finally 
        { 
        MarshalInspectable<object>.DisposeAbi(ptr); 
        }

        ComWrappersSupport.RegisterObjectForInterface(this, ThisPtr);
        ComWrappersHelper.Init(_inner, false);
        }

        public static WidgetResourceResponse FromAbi(IntPtr thisPtr)
        {
            if (thisPtr == IntPtr.Zero) return null;
            return MarshalInspectable<WidgetResourceResponse>.FromAbi(thisPtr);
        }

        internal WidgetResourceResponse(IObjectReference objRef)
        {
            _inner = objRef.As(global::ABI.Microsoft.Windows.Widgets.Providers.IWidgetResourceResponseMethods.IID);

        }


        public static bool operator ==(WidgetResourceResponse x, WidgetResourceResponse y) => (x?.ThisPtr ?? IntPtr.Zero) == (y?.ThisPtr ?? IntPtr.Zero);
        public static bool operator !=(WidgetResourceResponse x, WidgetResourceResponse y) => !(x == y);
        public bool Equals(WidgetResourceResponse other) => this == other;
        public override bool Equals(object obj) => obj is WidgetResourceResponse that && this == that;
        public override int GetHashCode() => ThisPtr.GetHashCode();


        bool IWinRTObject.HasUnwrappableNativeObject => true;
        IObjectReference IWinRTObject.NativeObject => _inner;
        private volatile global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> _queryInterfaceCache;
        private global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> MakeQueryInterfaceCache()
        {
            global::System.Threading.Interlocked.CompareExchange(ref _queryInterfaceCache, new global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference>(), null); 
            return _queryInterfaceCache;
        }
        global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> IWinRTObject.QueryInterfaceCache => _queryInterfaceCache ?? MakeQueryInterfaceCache();
        private volatile global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> _additionalTypeData;
        private global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> MakeAdditionalTypeData()
        {
            global::System.Threading.Interlocked.CompareExchange(ref _additionalTypeData, new global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object>(), null); 
            return _additionalTypeData;
        }
        global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> IWinRTObject.AdditionalTypeData => _additionalTypeData ?? MakeAdditionalTypeData();

        private struct InterfaceTag<I>{};


        public global::Windows.Storage.Streams.IRandomAccessStreamReference Content => global::ABI.Microsoft.Windows.Widgets.Providers.IWidgetResourceResponseMethods.get_Content(_objRef_global__Microsoft_Windows_Widgets_Providers_IWidgetResourceResponse);

        public global::System.Collections.Generic.IDictionary<string, string> Headers => global::ABI.Microsoft.Windows.Widgets.Providers.IWidgetResourceResponseMethods.get_Headers(_objRef_global__Microsoft_Windows_Widgets_Providers_IWidgetResourceResponse);

        public string ReasonPhrase => global::ABI.Microsoft.Windows.Widgets.Providers.IWidgetResourceResponseMethods.get_ReasonPhrase(_objRef_global__Microsoft_Windows_Widgets_Providers_IWidgetResourceResponse);

        public int StatusCode => global::ABI.Microsoft.Windows.Widgets.Providers.IWidgetResourceResponseMethods.get_StatusCode(_objRef_global__Microsoft_Windows_Widgets_Providers_IWidgetResourceResponse);

        private bool IsOverridableInterface(Guid iid) => false;

        global::System.Runtime.InteropServices.CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(ref Guid iid, out IntPtr ppv)
        {
            ppv = IntPtr.Zero;
            if (IsOverridableInterface(iid) || global::WinRT.Interop.IID.IID_IInspectable == iid)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
            }

            if (((IWinRTObject)this).NativeObject.TryAs(iid, out ppv) >= 0)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.Handled;
            }

            return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
        }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.Windows.Widgets")]
    [global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.Windows.Widgets.Providers.WidgetUpdateRequestOptions))]
    [global::ABI.Microsoft.Windows.Widgets.Providers.WidgetUpdateRequestOptionsRcwFactory]
    [global::WinRT.ProjectedRuntimeClass(typeof(IWidgetUpdateRequestOptions))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.Windows.Widgets.WidgetContract), 65536u)]
    public sealed class WidgetUpdateRequestOptions : global::System.Runtime.InteropServices.ICustomQueryInterface, IWinRTObject, IEquatable<WidgetUpdateRequestOptions>
    {
        private IntPtr ThisPtr => _inner == null ? (((IWinRTObject)this).NativeObject).ThisPtr : _inner.ThisPtr;

        private readonly IObjectReference _inner = null;



        private IObjectReference _objRef_global__Microsoft_Windows_Widgets_Providers_IWidgetUpdateRequestOptions => _inner;
        private volatile IObjectReference ___objRef_global__Microsoft_Windows_Widgets_Providers_IWidgetUpdateRequestOptions2;
        private IObjectReference Make___objRef_global__Microsoft_Windows_Widgets_Providers_IWidgetUpdateRequestOptions2()
        {
            global::System.Threading.Interlocked.CompareExchange(ref ___objRef_global__Microsoft_Windows_Widgets_Providers_IWidgetUpdateRequestOptions2, ((IWinRTObject)this).NativeObject.As<IUnknownVftbl>(global::ABI.Microsoft.Windows.Widgets.Providers.IWidgetUpdateRequestOptions2Methods.IID), null);
            return ___objRef_global__Microsoft_Windows_Widgets_Providers_IWidgetUpdateRequestOptions2;
        }
        private IObjectReference _objRef_global__Microsoft_Windows_Widgets_Providers_IWidgetUpdateRequestOptions2 => ___objRef_global__Microsoft_Windows_Widgets_Providers_IWidgetUpdateRequestOptions2 ?? Make___objRef_global__Microsoft_Windows_Widgets_Providers_IWidgetUpdateRequestOptions2();



        private static class _IWidgetUpdateRequestOptionsFactoryMethods
        {
            public static unsafe IntPtr CreateInstance(IObjectReference _obj, string widgetId)
            {
                var ThisPtr = _obj.ThisPtr;

                IntPtr __retval = default;
                MarshalString.Pinnable __widgetId = new(widgetId);
                fixed(void* ___widgetId = __widgetId)
                {
                    global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, IntPtr*, int>**)ThisPtr)[6](ThisPtr, MarshalString.GetAbi(ref __widgetId), &__retval));
                    global::System.GC.KeepAlive(_obj);
                    return __retval;
                }
            }
        }

        private static volatile IObjectReference ___objRef_global__Microsoft_Windows_Widgets_Providers_IWidgetUpdateRequestOptionsFactory;
        private static IObjectReference _objRef_global__Microsoft_Windows_Widgets_Providers_IWidgetUpdateRequestOptionsFactory
        {
            get
            { 
                var factory = ___objRef_global__Microsoft_Windows_Widgets_Providers_IWidgetUpdateRequestOptionsFactory;
                if (factory != null && factory.IsInCurrentContext)
                {
                    return factory;
                }
                else
                {
                    return ___objRef_global__Microsoft_Windows_Widgets_Providers_IWidgetUpdateRequestOptionsFactory = ActivationFactory.Get("Microsoft.Windows.Widgets.Providers.WidgetUpdateRequestOptions", global::ABI.Microsoft.Windows.Widgets.Providers.IWidgetUpdateRequestOptionsFactoryMethods.IID);
                }
            }
        }

        public WidgetUpdateRequestOptions(string widgetId) 
        { 
        IntPtr ptr = (_IWidgetUpdateRequestOptionsFactoryMethods.CreateInstance(_objRef_global__Microsoft_Windows_Widgets_Providers_IWidgetUpdateRequestOptionsFactory, widgetId)); 
        try 
        { 
        _inner = ComWrappersSupport.GetObjectReferenceForInterface(ptr, global::ABI.Microsoft.Windows.Widgets.Providers.IWidgetUpdateRequestOptionsMethods.IID, false); 

        } 
        finally 
        { 
        MarshalInspectable<object>.DisposeAbi(ptr); 
        }

        ComWrappersSupport.RegisterObjectForInterface(this, ThisPtr);
        ComWrappersHelper.Init(_inner, false);
        }

        public static I As<I>() => ActivationFactory.Get("Microsoft.Windows.Widgets.Providers.WidgetUpdateRequestOptions").AsInterface<I>();

        private static volatile IObjectReference ___objRef_global__Microsoft_Windows_Widgets_Providers_IWidgetUpdateRequestOptionsStatics;
        private static IObjectReference _objRef_global__Microsoft_Windows_Widgets_Providers_IWidgetUpdateRequestOptionsStatics
        {
            get
            { 
                var factory = ___objRef_global__Microsoft_Windows_Widgets_Providers_IWidgetUpdateRequestOptionsStatics;
                if (factory != null && factory.IsInCurrentContext)
                {
                    return factory;
                }
                else
                {
                    return ___objRef_global__Microsoft_Windows_Widgets_Providers_IWidgetUpdateRequestOptionsStatics = ActivationFactory.Get("Microsoft.Windows.Widgets.Providers.WidgetUpdateRequestOptions", global::ABI.Microsoft.Windows.Widgets.Providers.IWidgetUpdateRequestOptionsStaticsMethods.IID);
                }
            }
        }

        public static string UnsetValue => global::ABI.Microsoft.Windows.Widgets.Providers.IWidgetUpdateRequestOptionsStaticsMethods.get_UnsetValue(_objRef_global__Microsoft_Windows_Widgets_Providers_IWidgetUpdateRequestOptionsStatics);

        public static WidgetUpdateRequestOptions FromAbi(IntPtr thisPtr)
        {
            if (thisPtr == IntPtr.Zero) return null;
            return MarshalInspectable<WidgetUpdateRequestOptions>.FromAbi(thisPtr);
        }

        internal WidgetUpdateRequestOptions(IObjectReference objRef)
        {
            _inner = objRef.As(global::ABI.Microsoft.Windows.Widgets.Providers.IWidgetUpdateRequestOptionsMethods.IID);

        }


        public static bool operator ==(WidgetUpdateRequestOptions x, WidgetUpdateRequestOptions y) => (x?.ThisPtr ?? IntPtr.Zero) == (y?.ThisPtr ?? IntPtr.Zero);
        public static bool operator !=(WidgetUpdateRequestOptions x, WidgetUpdateRequestOptions y) => !(x == y);
        public bool Equals(WidgetUpdateRequestOptions other) => this == other;
        public override bool Equals(object obj) => obj is WidgetUpdateRequestOptions that && this == that;
        public override int GetHashCode() => ThisPtr.GetHashCode();


        bool IWinRTObject.HasUnwrappableNativeObject => true;
        IObjectReference IWinRTObject.NativeObject => _inner;
        private volatile global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> _queryInterfaceCache;
        private global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> MakeQueryInterfaceCache()
        {
            global::System.Threading.Interlocked.CompareExchange(ref _queryInterfaceCache, new global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference>(), null); 
            return _queryInterfaceCache;
        }
        global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> IWinRTObject.QueryInterfaceCache => _queryInterfaceCache ?? MakeQueryInterfaceCache();
        private volatile global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> _additionalTypeData;
        private global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> MakeAdditionalTypeData()
        {
            global::System.Threading.Interlocked.CompareExchange(ref _additionalTypeData, new global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object>(), null); 
            return _additionalTypeData;
        }
        global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> IWinRTObject.AdditionalTypeData => _additionalTypeData ?? MakeAdditionalTypeData();

        private struct InterfaceTag<I>{};


        public string CustomState
        {
            get => global::ABI.Microsoft.Windows.Widgets.Providers.IWidgetUpdateRequestOptionsMethods.get_CustomState(_objRef_global__Microsoft_Windows_Widgets_Providers_IWidgetUpdateRequestOptions);
            set => global::ABI.Microsoft.Windows.Widgets.Providers.IWidgetUpdateRequestOptionsMethods.set_CustomState(_objRef_global__Microsoft_Windows_Widgets_Providers_IWidgetUpdateRequestOptions, value);
        }

        public string Data
        {
            get => global::ABI.Microsoft.Windows.Widgets.Providers.IWidgetUpdateRequestOptionsMethods.get_Data(_objRef_global__Microsoft_Windows_Widgets_Providers_IWidgetUpdateRequestOptions);
            set => global::ABI.Microsoft.Windows.Widgets.Providers.IWidgetUpdateRequestOptionsMethods.set_Data(_objRef_global__Microsoft_Windows_Widgets_Providers_IWidgetUpdateRequestOptions, value);
        }

        public global::System.Nullable<bool> IsPlaceholderContent
        {
            get => global::ABI.Microsoft.Windows.Widgets.Providers.IWidgetUpdateRequestOptions2Methods.get_IsPlaceholderContent(_objRef_global__Microsoft_Windows_Widgets_Providers_IWidgetUpdateRequestOptions2);
            set => global::ABI.Microsoft.Windows.Widgets.Providers.IWidgetUpdateRequestOptions2Methods.set_IsPlaceholderContent(_objRef_global__Microsoft_Windows_Widgets_Providers_IWidgetUpdateRequestOptions2, value);
        }

        public string Template
        {
            get => global::ABI.Microsoft.Windows.Widgets.Providers.IWidgetUpdateRequestOptionsMethods.get_Template(_objRef_global__Microsoft_Windows_Widgets_Providers_IWidgetUpdateRequestOptions);
            set => global::ABI.Microsoft.Windows.Widgets.Providers.IWidgetUpdateRequestOptionsMethods.set_Template(_objRef_global__Microsoft_Windows_Widgets_Providers_IWidgetUpdateRequestOptions, value);
        }

        public string WidgetId => global::ABI.Microsoft.Windows.Widgets.Providers.IWidgetUpdateRequestOptionsMethods.get_WidgetId(_objRef_global__Microsoft_Windows_Widgets_Providers_IWidgetUpdateRequestOptions);

        private bool IsOverridableInterface(Guid iid) => false;

        global::System.Runtime.InteropServices.CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(ref Guid iid, out IntPtr ppv)
        {
            ppv = IntPtr.Zero;
            if (IsOverridableInterface(iid) || global::WinRT.Interop.IID.IID_IInspectable == iid)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
            }

            if (((IWinRTObject)this).NativeObject.TryAs(iid, out ppv) >= 0)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.Handled;
            }

            return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
        }
    }
}

#pragma warning disable CA1416
namespace ABI.Microsoft.Windows.Widgets.Providers
{
    internal static class IWidgetActionInvokedArgsMethods
    {

        internal static unsafe string get_CustomState(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[9](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return MarshalString.FromAbi(__retval);
            }
            finally
            {
                MarshalString.DisposeAbi(__retval);
            }
        }

        internal static unsafe string get_Data(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[8](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return MarshalString.FromAbi(__retval);
            }
            finally
            {
                MarshalString.DisposeAbi(__retval);
            }
        }

        internal static unsafe string get_Verb(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[7](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return MarshalString.FromAbi(__retval);
            }
            finally
            {
                MarshalString.DisposeAbi(__retval);
            }
        }

        internal static unsafe global::Microsoft.Windows.Widgets.Providers.WidgetContext get_WidgetContext(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[6](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.Windows.Widgets.Providers.WidgetContext.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.Windows.Widgets.Providers.WidgetContext.DisposeAbi(__retval);
            }
        }



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0x57, 0xCC, 0x93, 0xC5, 0xB9, 0x4, 0xCA, 0x52, 0x88, 0xAD, 0x46, 0xFE, 0xA2, 0x1E, 0xA3, 0x40 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("C593CC57-04B9-52CA-88AD-46FEA21EA340")]
    internal interface IWidgetActionInvokedArgs : global::Microsoft.Windows.Widgets.Providers.IWidgetActionInvokedArgs
    {
    }
    internal static class IWidgetAnalyticsInfoReportedArgsMethods
    {

        internal static unsafe string get_AnalyticsJson(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[7](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return MarshalString.FromAbi(__retval);
            }
            finally
            {
                MarshalString.DisposeAbi(__retval);
            }
        }

        internal static unsafe global::Microsoft.Windows.Widgets.Providers.WidgetContext get_WidgetContext(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[6](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.Windows.Widgets.Providers.WidgetContext.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.Windows.Widgets.Providers.WidgetContext.DisposeAbi(__retval);
            }
        }



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0xB5, 0x5F, 0x9E, 0x1D, 0xCE, 0x2B, 0x50, 0x53, 0x87, 0xB1, 0xD6, 0x31, 0x99, 0x52, 0x66, 0x39 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("1D9E5FB5-2BCE-5350-87B1-D63199526639")]
    internal interface IWidgetAnalyticsInfoReportedArgs : global::Microsoft.Windows.Widgets.Providers.IWidgetAnalyticsInfoReportedArgs
    {
    }
    internal static class IWidgetContextMethods
    {

        internal static unsafe string get_DefinitionId(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[7](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return MarshalString.FromAbi(__retval);
            }
            finally
            {
                MarshalString.DisposeAbi(__retval);
            }
        }

        internal static unsafe string get_Id(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[6](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return MarshalString.FromAbi(__retval);
            }
            finally
            {
                MarshalString.DisposeAbi(__retval);
            }
        }

        internal static unsafe bool get_IsActive(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            byte __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, byte*, int>**)ThisPtr)[9](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval != 0;
        }

        internal static unsafe global::Microsoft.Windows.Widgets.WidgetSize get_Size(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::Microsoft.Windows.Widgets.WidgetSize __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::Microsoft.Windows.Widgets.WidgetSize*, int>**)ThisPtr)[8](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0x8B, 0x51, 0x3C, 0x90, 0xBC, 0x40, 0xC6, 0x5B, 0x88, 0xF7, 0xAF, 0x9D, 0x81, 0xC0, 0xCD, 0xC1 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("903C518B-40BC-5BC6-88F7-AF9D81C0CDC1")]
    internal interface IWidgetContext : global::Microsoft.Windows.Widgets.Providers.IWidgetContext
    {
    }
    internal static class IWidgetContextChangedArgsMethods
    {

        internal static unsafe global::Microsoft.Windows.Widgets.Providers.WidgetContext get_WidgetContext(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[6](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.Windows.Widgets.Providers.WidgetContext.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.Windows.Widgets.Providers.WidgetContext.DisposeAbi(__retval);
            }
        }



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0x54, 0x6D, 0x22, 0x2C, 0x52, 0x22, 0x6B, 0x57, 0xA1, 0x97, 0x37, 0xB, 0x28, 0xD2, 0x5C, 0x2F };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("2C226D54-2252-576B-A197-370B28D25C2F")]
    internal interface IWidgetContextChangedArgs : global::Microsoft.Windows.Widgets.Providers.IWidgetContextChangedArgs
    {
    }
    internal static class IWidgetCustomizationRequestedArgsMethods
    {

        internal static unsafe string get_CustomState(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[7](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return MarshalString.FromAbi(__retval);
            }
            finally
            {
                MarshalString.DisposeAbi(__retval);
            }
        }

        internal static unsafe global::Microsoft.Windows.Widgets.Providers.WidgetContext get_WidgetContext(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[6](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.Windows.Widgets.Providers.WidgetContext.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.Windows.Widgets.Providers.WidgetContext.DisposeAbi(__retval);
            }
        }



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0x11, 0xA3, 0xDE, 0x41, 0x9B, 0xDD, 0x8B, 0x5B, 0xB4, 0x93, 0x3A, 0x30, 0x55, 0x21, 0x16, 0xB8 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("41DEA311-DD9B-5B8B-B493-3A30552116B8")]
    internal interface IWidgetCustomizationRequestedArgs : global::Microsoft.Windows.Widgets.Providers.IWidgetCustomizationRequestedArgs
    {
    }
    internal static class IWidgetErrorInfoReportedArgsMethods
    {

        internal static unsafe string get_ErrorJson(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[7](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return MarshalString.FromAbi(__retval);
            }
            finally
            {
                MarshalString.DisposeAbi(__retval);
            }
        }

        internal static unsafe global::Microsoft.Windows.Widgets.Providers.WidgetContext get_WidgetContext(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[6](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.Windows.Widgets.Providers.WidgetContext.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.Windows.Widgets.Providers.WidgetContext.DisposeAbi(__retval);
            }
        }



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0x27, 0xA6, 0xEF, 0x30, 0x1F, 0xB2, 0xD5, 0x55, 0xB9, 0x1A, 0xB2, 0x3B, 0x4A, 0xA1, 0x36, 0x45 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("30EFA627-B21F-55D5-B91A-B23B4AA13645")]
    internal interface IWidgetErrorInfoReportedArgs : global::Microsoft.Windows.Widgets.Providers.IWidgetErrorInfoReportedArgs
    {
    }
    internal static class IWidgetInfoMethods
    {

        internal static unsafe string get_CustomState(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[9](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return MarshalString.FromAbi(__retval);
            }
            finally
            {
                MarshalString.DisposeAbi(__retval);
            }
        }

        internal static unsafe string get_Data(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[8](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return MarshalString.FromAbi(__retval);
            }
            finally
            {
                MarshalString.DisposeAbi(__retval);
            }
        }

        internal static unsafe global::System.DateTimeOffset get_LastUpdateTime(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::ABI.System.DateTimeOffset __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::ABI.System.DateTimeOffset*, int>**)ThisPtr)[10](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.System.DateTimeOffset.FromAbi(__retval);
            }
            finally
            {
                global::ABI.System.DateTimeOffset.DisposeAbi(__retval);
            }
        }

        internal static unsafe string get_Template(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[7](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return MarshalString.FromAbi(__retval);
            }
            finally
            {
                MarshalString.DisposeAbi(__retval);
            }
        }

        internal static unsafe global::Microsoft.Windows.Widgets.Providers.WidgetContext get_WidgetContext(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[6](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.Windows.Widgets.Providers.WidgetContext.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.Windows.Widgets.Providers.WidgetContext.DisposeAbi(__retval);
            }
        }



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0x42, 0x1F, 0xA1, 0xCE, 0x20, 0xA0, 0xB5, 0x5D, 0x89, 0xE2, 0xB7, 0xDE, 0xCE, 0x4A, 0xE5, 0xCB };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("CEA11F42-A020-5DB5-89E2-B7DECE4AE5CB")]
    internal interface IWidgetInfo : global::Microsoft.Windows.Widgets.Providers.IWidgetInfo
    {
    }
    internal static class IWidgetInfo2Methods
    {

        internal static unsafe bool get_IsPlaceholderContent(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            byte __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, byte*, int>**)ThisPtr)[6](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval != 0;
        }



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0x6F, 0xA, 0x1B, 0x8, 0x84, 0xD7, 0x8, 0x54, 0xBB, 0x29, 0x25, 0x2F, 0xEF, 0x29, 0x26, 0xD4 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("081B0A6F-D784-5408-BB29-252FEF2926D4")]
    internal interface IWidgetInfo2 : global::Microsoft.Windows.Widgets.Providers.IWidgetInfo2
    {
    }
    public static class IWidgetManagerMethods
    {


        public static unsafe void UpdateWidget(IObjectReference _obj, global::Microsoft.Windows.Widgets.Providers.WidgetUpdateRequestOptions widgetUpdateRequestOptions)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __widgetUpdateRequestOptions = default;
            try
            {
                __widgetUpdateRequestOptions = global::ABI.Microsoft.Windows.Widgets.Providers.WidgetUpdateRequestOptions.CreateMarshaler2(widgetUpdateRequestOptions);
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, int>**)ThisPtr)[6](ThisPtr, MarshalInspectable<object>.GetAbi(__widgetUpdateRequestOptions)));
                global::System.GC.KeepAlive(_obj);
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__widgetUpdateRequestOptions);
            }
        }

        public static unsafe string[] GetWidgetIds(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            int __retval_length = default;
            IntPtr __retval_data = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, int*, IntPtr*, int>**)ThisPtr)[7](ThisPtr, &__retval_length, &__retval_data));
                global::System.GC.KeepAlive(_obj);
                return MarshalString.FromAbiArray((__retval_length, __retval_data));
            }
            finally
            {
                MarshalString.DisposeAbiArray((__retval_length, __retval_data));
            }
        }

        public static unsafe global::Microsoft.Windows.Widgets.Providers.WidgetInfo GetWidgetInfo(IObjectReference _obj, string widgetId)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                MarshalString.Pinnable __widgetId = new(widgetId);
                fixed(void* ___widgetId = __widgetId)
                {
                    global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, IntPtr*, int>**)ThisPtr)[8](ThisPtr, MarshalString.GetAbi(ref __widgetId), &__retval));
                    global::System.GC.KeepAlive(_obj);
                    return global::ABI.Microsoft.Windows.Widgets.Providers.WidgetInfo.FromAbi(__retval);
                }
            }
            finally
            {
                global::ABI.Microsoft.Windows.Widgets.Providers.WidgetInfo.DisposeAbi(__retval);
            }
        }

        public static unsafe global::Microsoft.Windows.Widgets.Providers.WidgetInfo[] GetWidgetInfos(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            int __retval_length = default;
            IntPtr __retval_data = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, int*, IntPtr*, int>**)ThisPtr)[9](ThisPtr, &__retval_length, &__retval_data));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.Windows.Widgets.Providers.WidgetInfo.FromAbiArray((__retval_length, __retval_data));
            }
            finally
            {
                global::ABI.Microsoft.Windows.Widgets.Providers.WidgetInfo.DisposeAbiArray((__retval_length, __retval_data));
            }
        }

        public static unsafe void DeleteWidget(IObjectReference _obj, string widgetId)
        {
            var ThisPtr = _obj.ThisPtr;

            MarshalString.Pinnable __widgetId = new(widgetId);
            fixed(void* ___widgetId = __widgetId)
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, int>**)ThisPtr)[10](ThisPtr, MarshalString.GetAbi(ref __widgetId)));
                global::System.GC.KeepAlive(_obj);
            }
        }


        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0xC0, 0x10, 0xCB, 0x71, 0x1E, 0x67, 0xE3, 0x48, 0xB9, 0x95, 0x20, 0x79, 0x40, 0x39, 0x71, 0x23 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

        public static global::System.IntPtr AbiToProjectionVftablePtr => IWidgetManager.AbiToProjectionVftablePtr;

    }
    [DynamicInterfaceCastableImplementation]
    [Guid("71CB10C0-671E-48E3-B995-207940397123")]
    internal unsafe interface IWidgetManager : global::Microsoft.Windows.Widgets.Providers.IWidgetManager
    {

        public static readonly IntPtr AbiToProjectionVftablePtr;
        static unsafe IWidgetManager()
        {
            AbiToProjectionVftablePtr = ComWrappersSupport.AllocateVtableMemory(typeof(IWidgetManager), sizeof(IInspectable.Vftbl) + sizeof(IntPtr) * 5);
            *(IInspectable.Vftbl*)AbiToProjectionVftablePtr = IInspectable.Vftbl.AbiToProjectionVftable;
            ((delegate* unmanaged[Stdcall]<IntPtr, IntPtr, int>*)AbiToProjectionVftablePtr)[6] = &Do_Abi_UpdateWidget_0;
            ((delegate* unmanaged[Stdcall]<IntPtr, int*, IntPtr*, int>*)AbiToProjectionVftablePtr)[7] = &Do_Abi_GetWidgetIds_1;
            ((delegate* unmanaged[Stdcall]<IntPtr, IntPtr, IntPtr*, int>*)AbiToProjectionVftablePtr)[8] = &Do_Abi_GetWidgetInfo_2;
            ((delegate* unmanaged[Stdcall]<IntPtr, int*, IntPtr*, int>*)AbiToProjectionVftablePtr)[9] = &Do_Abi_GetWidgetInfos_3;
            ((delegate* unmanaged[Stdcall]<IntPtr, IntPtr, int>*)AbiToProjectionVftablePtr)[10] = &Do_Abi_DeleteWidget_4;
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvStdcall) })]
        private static unsafe int Do_Abi_UpdateWidget_0(IntPtr thisPtr, IntPtr widgetUpdateRequestOptions)
        {



            try
            {
                global::WinRT.ComWrappersSupport.FindObject<global::Microsoft.Windows.Widgets.Providers.IWidgetManager>(thisPtr).UpdateWidget(global::ABI.Microsoft.Windows.Widgets.Providers.WidgetUpdateRequestOptions.FromAbi(widgetUpdateRequestOptions));

            }
            catch (Exception __exception__)
            {
                global::WinRT.ExceptionHelpers.SetErrorInfo(__exception__);
                return global::WinRT.ExceptionHelpers.GetHRForException(__exception__);
            }
            return 0;
        }
        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvStdcall) })]
        private static unsafe int Do_Abi_GetWidgetIds_1(IntPtr thisPtr, int* __resultSize, IntPtr* result)
        {

            string[] __result = default;

            *result = default;
            *__resultSize = default;

            try
            {
                __result = global::WinRT.ComWrappersSupport.FindObject<global::Microsoft.Windows.Widgets.Providers.IWidgetManager>(thisPtr).GetWidgetIds();
                (*__resultSize, *result) = MarshalString.FromManagedArray(__result);

            }
            catch (Exception __exception__)
            {
                global::WinRT.ExceptionHelpers.SetErrorInfo(__exception__);
                return global::WinRT.ExceptionHelpers.GetHRForException(__exception__);
            }
            return 0;
        }
        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvStdcall) })]
        private static unsafe int Do_Abi_GetWidgetInfo_2(IntPtr thisPtr, IntPtr widgetId, IntPtr* result)
        {

            global::Microsoft.Windows.Widgets.Providers.WidgetInfo __result = default;

            *result = default;

            try
            {
                __result = global::WinRT.ComWrappersSupport.FindObject<global::Microsoft.Windows.Widgets.Providers.IWidgetManager>(thisPtr).GetWidgetInfo(MarshalString.FromAbi(widgetId));
                *result = global::ABI.Microsoft.Windows.Widgets.Providers.WidgetInfo.FromManaged(__result);

            }
            catch (Exception __exception__)
            {
                global::WinRT.ExceptionHelpers.SetErrorInfo(__exception__);
                return global::WinRT.ExceptionHelpers.GetHRForException(__exception__);
            }
            return 0;
        }
        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvStdcall) })]
        private static unsafe int Do_Abi_GetWidgetInfos_3(IntPtr thisPtr, int* __resultSize, IntPtr* result)
        {

            global::Microsoft.Windows.Widgets.Providers.WidgetInfo[] __result = default;

            *result = default;
            *__resultSize = default;

            try
            {
                __result = global::WinRT.ComWrappersSupport.FindObject<global::Microsoft.Windows.Widgets.Providers.IWidgetManager>(thisPtr).GetWidgetInfos();
                (*__resultSize, *result) = global::ABI.Microsoft.Windows.Widgets.Providers.WidgetInfo.FromManagedArray(__result);

            }
            catch (Exception __exception__)
            {
                global::WinRT.ExceptionHelpers.SetErrorInfo(__exception__);
                return global::WinRT.ExceptionHelpers.GetHRForException(__exception__);
            }
            return 0;
        }
        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvStdcall) })]
        private static unsafe int Do_Abi_DeleteWidget_4(IntPtr thisPtr, IntPtr widgetId)
        {



            try
            {
                global::WinRT.ComWrappersSupport.FindObject<global::Microsoft.Windows.Widgets.Providers.IWidgetManager>(thisPtr).DeleteWidget(MarshalString.FromAbi(widgetId));

            }
            catch (Exception __exception__)
            {
                global::WinRT.ExceptionHelpers.SetErrorInfo(__exception__);
                return global::WinRT.ExceptionHelpers.GetHRForException(__exception__);
            }
            return 0;
        }

        unsafe void global::Microsoft.Windows.Widgets.Providers.IWidgetManager.UpdateWidget(global::Microsoft.Windows.Widgets.Providers.WidgetUpdateRequestOptions widgetUpdateRequestOptions)
        {
            var _obj = ((IObjectReference)((IWinRTObject)this).GetObjectReferenceForType(typeof(global::Microsoft.Windows.Widgets.Providers.IWidgetManager).TypeHandle));
            global::ABI.Microsoft.Windows.Widgets.Providers.IWidgetManagerMethods.UpdateWidget(_obj, widgetUpdateRequestOptions);
        }

        unsafe string[] global::Microsoft.Windows.Widgets.Providers.IWidgetManager.GetWidgetIds()
        {
            var _obj = ((IObjectReference)((IWinRTObject)this).GetObjectReferenceForType(typeof(global::Microsoft.Windows.Widgets.Providers.IWidgetManager).TypeHandle));
            return global::ABI.Microsoft.Windows.Widgets.Providers.IWidgetManagerMethods.GetWidgetIds(_obj);
        }

        unsafe global::Microsoft.Windows.Widgets.Providers.WidgetInfo global::Microsoft.Windows.Widgets.Providers.IWidgetManager.GetWidgetInfo(string widgetId)
        {
            var _obj = ((IObjectReference)((IWinRTObject)this).GetObjectReferenceForType(typeof(global::Microsoft.Windows.Widgets.Providers.IWidgetManager).TypeHandle));
            return global::ABI.Microsoft.Windows.Widgets.Providers.IWidgetManagerMethods.GetWidgetInfo(_obj, widgetId);
        }

        unsafe global::Microsoft.Windows.Widgets.Providers.WidgetInfo[] global::Microsoft.Windows.Widgets.Providers.IWidgetManager.GetWidgetInfos()
        {
            var _obj = ((IObjectReference)((IWinRTObject)this).GetObjectReferenceForType(typeof(global::Microsoft.Windows.Widgets.Providers.IWidgetManager).TypeHandle));
            return global::ABI.Microsoft.Windows.Widgets.Providers.IWidgetManagerMethods.GetWidgetInfos(_obj);
        }

        unsafe void global::Microsoft.Windows.Widgets.Providers.IWidgetManager.DeleteWidget(string widgetId)
        {
            var _obj = ((IObjectReference)((IWinRTObject)this).GetObjectReferenceForType(typeof(global::Microsoft.Windows.Widgets.Providers.IWidgetManager).TypeHandle));
            global::ABI.Microsoft.Windows.Widgets.Providers.IWidgetManagerMethods.DeleteWidget(_obj, widgetId);
        }
    }

    public static class IWidgetManager2Methods
    {


        public static unsafe void SendMessageToContent(IObjectReference _obj, string widgetId, string message)
        {
            var ThisPtr = _obj.ThisPtr;

            MarshalString.Pinnable __widgetId = new(widgetId);
            MarshalString.Pinnable __message = new(message);
            fixed(void* ___widgetId = __widgetId, ___message = __message)
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, IntPtr, int>**)ThisPtr)[6](ThisPtr, MarshalString.GetAbi(ref __widgetId), MarshalString.GetAbi(ref __message)));
                global::System.GC.KeepAlive(_obj);
            }
        }


        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0x27, 0x5A, 0xC6, 0x55, 0x45, 0x88, 0x6C, 0x40, 0x9E, 0xE1, 0x1E, 0x79, 0xF0, 0x55, 0x6B, 0xEF };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

        public static global::System.IntPtr AbiToProjectionVftablePtr => IWidgetManager2.AbiToProjectionVftablePtr;

    }
    [DynamicInterfaceCastableImplementation]
    [Guid("55C65A27-8845-406C-9EE1-1E79F0556BEF")]
    internal unsafe interface IWidgetManager2 : global::Microsoft.Windows.Widgets.Providers.IWidgetManager2
    {

        public static readonly IntPtr AbiToProjectionVftablePtr;
        static unsafe IWidgetManager2()
        {
            AbiToProjectionVftablePtr = ComWrappersSupport.AllocateVtableMemory(typeof(IWidgetManager2), sizeof(IInspectable.Vftbl) + sizeof(IntPtr) * 1);
            *(IInspectable.Vftbl*)AbiToProjectionVftablePtr = IInspectable.Vftbl.AbiToProjectionVftable;
            ((delegate* unmanaged[Stdcall]<IntPtr, IntPtr, IntPtr, int>*)AbiToProjectionVftablePtr)[6] = &Do_Abi_SendMessageToContent_0;
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvStdcall) })]
        private static unsafe int Do_Abi_SendMessageToContent_0(IntPtr thisPtr, IntPtr widgetId, IntPtr message)
        {



            try
            {
                global::WinRT.ComWrappersSupport.FindObject<global::Microsoft.Windows.Widgets.Providers.IWidgetManager2>(thisPtr).SendMessageToContent(MarshalString.FromAbi(widgetId), MarshalString.FromAbi(message));

            }
            catch (Exception __exception__)
            {
                global::WinRT.ExceptionHelpers.SetErrorInfo(__exception__);
                return global::WinRT.ExceptionHelpers.GetHRForException(__exception__);
            }
            return 0;
        }

        unsafe void global::Microsoft.Windows.Widgets.Providers.IWidgetManager2.SendMessageToContent(string widgetId, string message)
        {
            var _obj = ((IObjectReference)((IWinRTObject)this).GetObjectReferenceForType(typeof(global::Microsoft.Windows.Widgets.Providers.IWidgetManager2).TypeHandle));
            global::ABI.Microsoft.Windows.Widgets.Providers.IWidgetManager2Methods.SendMessageToContent(_obj, widgetId, message);
        }
    }

    internal static class IWidgetManagerStaticsMethods
    {


        internal static unsafe global::Microsoft.Windows.Widgets.Providers.WidgetManager GetDefault(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[6](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.Windows.Widgets.Providers.WidgetManager.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.Windows.Widgets.Providers.WidgetManager.DisposeAbi(__retval);
            }
        }


        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0x6, 0x3B, 0x23, 0x7F, 0xE5, 0x28, 0x2B, 0x5E, 0x8C, 0x4, 0xA4, 0xFA, 0x74, 0x7C, 0x28, 0xC7 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("7F233B06-28E5-5E2B-8C04-A4FA747C28C7")]
    internal interface IWidgetManagerStatics : global::Microsoft.Windows.Widgets.Providers.IWidgetManagerStatics
    {
    }
    internal static class IWidgetMessageReceivedArgsMethods
    {

        internal static unsafe string get_Message(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[7](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return MarshalString.FromAbi(__retval);
            }
            finally
            {
                MarshalString.DisposeAbi(__retval);
            }
        }

        internal static unsafe global::Microsoft.Windows.Widgets.Providers.WidgetContext get_WidgetContext(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[6](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.Windows.Widgets.Providers.WidgetContext.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.Windows.Widgets.Providers.WidgetContext.DisposeAbi(__retval);
            }
        }



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0x2B, 0xCB, 0x61, 0x22, 0x41, 0xC7, 0x96, 0x5F, 0x9A, 0xDB, 0xFB, 0x3A, 0x76, 0x67, 0xBC, 0xB6 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("2261CB2B-C741-5F96-9ADB-FB3A7667BCB6")]
    internal interface IWidgetMessageReceivedArgs : global::Microsoft.Windows.Widgets.Providers.IWidgetMessageReceivedArgs
    {
    }
    public static class IWidgetProviderMethods
    {


        public static unsafe void CreateWidget(IObjectReference _obj, global::Microsoft.Windows.Widgets.Providers.WidgetContext widgetContext)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __widgetContext = default;
            try
            {
                __widgetContext = global::ABI.Microsoft.Windows.Widgets.Providers.WidgetContext.CreateMarshaler2(widgetContext);
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, int>**)ThisPtr)[6](ThisPtr, MarshalInspectable<object>.GetAbi(__widgetContext)));
                global::System.GC.KeepAlive(_obj);
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__widgetContext);
            }
        }

        public static unsafe void DeleteWidget(IObjectReference _obj, string widgetId, string customState)
        {
            var ThisPtr = _obj.ThisPtr;

            MarshalString.Pinnable __widgetId = new(widgetId);
            MarshalString.Pinnable __customState = new(customState);
            fixed(void* ___widgetId = __widgetId, ___customState = __customState)
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, IntPtr, int>**)ThisPtr)[7](ThisPtr, MarshalString.GetAbi(ref __widgetId), MarshalString.GetAbi(ref __customState)));
                global::System.GC.KeepAlive(_obj);
            }
        }

        public static unsafe void OnActionInvoked(IObjectReference _obj, global::Microsoft.Windows.Widgets.Providers.WidgetActionInvokedArgs actionInvokedArgs)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __actionInvokedArgs = default;
            try
            {
                __actionInvokedArgs = global::ABI.Microsoft.Windows.Widgets.Providers.WidgetActionInvokedArgs.CreateMarshaler2(actionInvokedArgs);
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, int>**)ThisPtr)[8](ThisPtr, MarshalInspectable<object>.GetAbi(__actionInvokedArgs)));
                global::System.GC.KeepAlive(_obj);
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__actionInvokedArgs);
            }
        }

        public static unsafe void OnWidgetContextChanged(IObjectReference _obj, global::Microsoft.Windows.Widgets.Providers.WidgetContextChangedArgs contextChangedArgs)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __contextChangedArgs = default;
            try
            {
                __contextChangedArgs = global::ABI.Microsoft.Windows.Widgets.Providers.WidgetContextChangedArgs.CreateMarshaler2(contextChangedArgs);
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, int>**)ThisPtr)[9](ThisPtr, MarshalInspectable<object>.GetAbi(__contextChangedArgs)));
                global::System.GC.KeepAlive(_obj);
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__contextChangedArgs);
            }
        }

        public static unsafe void Activate(IObjectReference _obj, global::Microsoft.Windows.Widgets.Providers.WidgetContext widgetContext)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __widgetContext = default;
            try
            {
                __widgetContext = global::ABI.Microsoft.Windows.Widgets.Providers.WidgetContext.CreateMarshaler2(widgetContext);
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, int>**)ThisPtr)[10](ThisPtr, MarshalInspectable<object>.GetAbi(__widgetContext)));
                global::System.GC.KeepAlive(_obj);
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__widgetContext);
            }
        }

        public static unsafe void Deactivate(IObjectReference _obj, string widgetId)
        {
            var ThisPtr = _obj.ThisPtr;

            MarshalString.Pinnable __widgetId = new(widgetId);
            fixed(void* ___widgetId = __widgetId)
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, int>**)ThisPtr)[11](ThisPtr, MarshalString.GetAbi(ref __widgetId)));
                global::System.GC.KeepAlive(_obj);
            }
        }


        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0xCC, 0x74, 0x57, 0x5C, 0xA0, 0x72, 0x2D, 0x45, 0xB9, 0xED, 0x7, 0x5C, 0xD, 0xD2, 0x5E, 0xED };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

        public static global::System.IntPtr AbiToProjectionVftablePtr => IWidgetProvider.AbiToProjectionVftablePtr;

    }
    [DynamicInterfaceCastableImplementation]
    [Guid("5C5774CC-72A0-452D-B9ED-075C0DD25EED")]
    internal unsafe interface IWidgetProvider : global::Microsoft.Windows.Widgets.Providers.IWidgetProvider
    {

        public static readonly IntPtr AbiToProjectionVftablePtr;
        static unsafe IWidgetProvider()
        {
            AbiToProjectionVftablePtr = ComWrappersSupport.AllocateVtableMemory(typeof(IWidgetProvider), sizeof(IInspectable.Vftbl) + sizeof(IntPtr) * 6);
            *(IInspectable.Vftbl*)AbiToProjectionVftablePtr = IInspectable.Vftbl.AbiToProjectionVftable;
            ((delegate* unmanaged[Stdcall]<IntPtr, IntPtr, int>*)AbiToProjectionVftablePtr)[6] = &Do_Abi_CreateWidget_0;
            ((delegate* unmanaged[Stdcall]<IntPtr, IntPtr, IntPtr, int>*)AbiToProjectionVftablePtr)[7] = &Do_Abi_DeleteWidget_1;
            ((delegate* unmanaged[Stdcall]<IntPtr, IntPtr, int>*)AbiToProjectionVftablePtr)[8] = &Do_Abi_OnActionInvoked_2;
            ((delegate* unmanaged[Stdcall]<IntPtr, IntPtr, int>*)AbiToProjectionVftablePtr)[9] = &Do_Abi_OnWidgetContextChanged_3;
            ((delegate* unmanaged[Stdcall]<IntPtr, IntPtr, int>*)AbiToProjectionVftablePtr)[10] = &Do_Abi_Activate_4;
            ((delegate* unmanaged[Stdcall]<IntPtr, IntPtr, int>*)AbiToProjectionVftablePtr)[11] = &Do_Abi_Deactivate_5;
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvStdcall) })]
        private static unsafe int Do_Abi_CreateWidget_0(IntPtr thisPtr, IntPtr widgetContext)
        {



            try
            {
                global::WinRT.ComWrappersSupport.FindObject<global::Microsoft.Windows.Widgets.Providers.IWidgetProvider>(thisPtr).CreateWidget(global::ABI.Microsoft.Windows.Widgets.Providers.WidgetContext.FromAbi(widgetContext));

            }
            catch (Exception __exception__)
            {
                global::WinRT.ExceptionHelpers.SetErrorInfo(__exception__);
                return global::WinRT.ExceptionHelpers.GetHRForException(__exception__);
            }
            return 0;
        }
        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvStdcall) })]
        private static unsafe int Do_Abi_DeleteWidget_1(IntPtr thisPtr, IntPtr widgetId, IntPtr customState)
        {



            try
            {
                global::WinRT.ComWrappersSupport.FindObject<global::Microsoft.Windows.Widgets.Providers.IWidgetProvider>(thisPtr).DeleteWidget(MarshalString.FromAbi(widgetId), MarshalString.FromAbi(customState));

            }
            catch (Exception __exception__)
            {
                global::WinRT.ExceptionHelpers.SetErrorInfo(__exception__);
                return global::WinRT.ExceptionHelpers.GetHRForException(__exception__);
            }
            return 0;
        }
        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvStdcall) })]
        private static unsafe int Do_Abi_OnActionInvoked_2(IntPtr thisPtr, IntPtr actionInvokedArgs)
        {



            try
            {
                global::WinRT.ComWrappersSupport.FindObject<global::Microsoft.Windows.Widgets.Providers.IWidgetProvider>(thisPtr).OnActionInvoked(global::ABI.Microsoft.Windows.Widgets.Providers.WidgetActionInvokedArgs.FromAbi(actionInvokedArgs));

            }
            catch (Exception __exception__)
            {
                global::WinRT.ExceptionHelpers.SetErrorInfo(__exception__);
                return global::WinRT.ExceptionHelpers.GetHRForException(__exception__);
            }
            return 0;
        }
        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvStdcall) })]
        private static unsafe int Do_Abi_OnWidgetContextChanged_3(IntPtr thisPtr, IntPtr contextChangedArgs)
        {



            try
            {
                global::WinRT.ComWrappersSupport.FindObject<global::Microsoft.Windows.Widgets.Providers.IWidgetProvider>(thisPtr).OnWidgetContextChanged(global::ABI.Microsoft.Windows.Widgets.Providers.WidgetContextChangedArgs.FromAbi(contextChangedArgs));

            }
            catch (Exception __exception__)
            {
                global::WinRT.ExceptionHelpers.SetErrorInfo(__exception__);
                return global::WinRT.ExceptionHelpers.GetHRForException(__exception__);
            }
            return 0;
        }
        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvStdcall) })]
        private static unsafe int Do_Abi_Activate_4(IntPtr thisPtr, IntPtr widgetContext)
        {



            try
            {
                global::WinRT.ComWrappersSupport.FindObject<global::Microsoft.Windows.Widgets.Providers.IWidgetProvider>(thisPtr).Activate(global::ABI.Microsoft.Windows.Widgets.Providers.WidgetContext.FromAbi(widgetContext));

            }
            catch (Exception __exception__)
            {
                global::WinRT.ExceptionHelpers.SetErrorInfo(__exception__);
                return global::WinRT.ExceptionHelpers.GetHRForException(__exception__);
            }
            return 0;
        }
        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvStdcall) })]
        private static unsafe int Do_Abi_Deactivate_5(IntPtr thisPtr, IntPtr widgetId)
        {



            try
            {
                global::WinRT.ComWrappersSupport.FindObject<global::Microsoft.Windows.Widgets.Providers.IWidgetProvider>(thisPtr).Deactivate(MarshalString.FromAbi(widgetId));

            }
            catch (Exception __exception__)
            {
                global::WinRT.ExceptionHelpers.SetErrorInfo(__exception__);
                return global::WinRT.ExceptionHelpers.GetHRForException(__exception__);
            }
            return 0;
        }

        unsafe void global::Microsoft.Windows.Widgets.Providers.IWidgetProvider.CreateWidget(global::Microsoft.Windows.Widgets.Providers.WidgetContext widgetContext)
        {
            var _obj = ((IObjectReference)((IWinRTObject)this).GetObjectReferenceForType(typeof(global::Microsoft.Windows.Widgets.Providers.IWidgetProvider).TypeHandle));
            global::ABI.Microsoft.Windows.Widgets.Providers.IWidgetProviderMethods.CreateWidget(_obj, widgetContext);
        }

        unsafe void global::Microsoft.Windows.Widgets.Providers.IWidgetProvider.DeleteWidget(string widgetId, string customState)
        {
            var _obj = ((IObjectReference)((IWinRTObject)this).GetObjectReferenceForType(typeof(global::Microsoft.Windows.Widgets.Providers.IWidgetProvider).TypeHandle));
            global::ABI.Microsoft.Windows.Widgets.Providers.IWidgetProviderMethods.DeleteWidget(_obj, widgetId, customState);
        }

        unsafe void global::Microsoft.Windows.Widgets.Providers.IWidgetProvider.OnActionInvoked(global::Microsoft.Windows.Widgets.Providers.WidgetActionInvokedArgs actionInvokedArgs)
        {
            var _obj = ((IObjectReference)((IWinRTObject)this).GetObjectReferenceForType(typeof(global::Microsoft.Windows.Widgets.Providers.IWidgetProvider).TypeHandle));
            global::ABI.Microsoft.Windows.Widgets.Providers.IWidgetProviderMethods.OnActionInvoked(_obj, actionInvokedArgs);
        }

        unsafe void global::Microsoft.Windows.Widgets.Providers.IWidgetProvider.OnWidgetContextChanged(global::Microsoft.Windows.Widgets.Providers.WidgetContextChangedArgs contextChangedArgs)
        {
            var _obj = ((IObjectReference)((IWinRTObject)this).GetObjectReferenceForType(typeof(global::Microsoft.Windows.Widgets.Providers.IWidgetProvider).TypeHandle));
            global::ABI.Microsoft.Windows.Widgets.Providers.IWidgetProviderMethods.OnWidgetContextChanged(_obj, contextChangedArgs);
        }

        unsafe void global::Microsoft.Windows.Widgets.Providers.IWidgetProvider.Activate(global::Microsoft.Windows.Widgets.Providers.WidgetContext widgetContext)
        {
            var _obj = ((IObjectReference)((IWinRTObject)this).GetObjectReferenceForType(typeof(global::Microsoft.Windows.Widgets.Providers.IWidgetProvider).TypeHandle));
            global::ABI.Microsoft.Windows.Widgets.Providers.IWidgetProviderMethods.Activate(_obj, widgetContext);
        }

        unsafe void global::Microsoft.Windows.Widgets.Providers.IWidgetProvider.Deactivate(string widgetId)
        {
            var _obj = ((IObjectReference)((IWinRTObject)this).GetObjectReferenceForType(typeof(global::Microsoft.Windows.Widgets.Providers.IWidgetProvider).TypeHandle));
            global::ABI.Microsoft.Windows.Widgets.Providers.IWidgetProviderMethods.Deactivate(_obj, widgetId);
        }
    }

    public static class IWidgetProvider2Methods
    {


        public static unsafe void OnCustomizationRequested(IObjectReference _obj, global::Microsoft.Windows.Widgets.Providers.WidgetCustomizationRequestedArgs customizationRequestedArgs)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __customizationRequestedArgs = default;
            try
            {
                __customizationRequestedArgs = global::ABI.Microsoft.Windows.Widgets.Providers.WidgetCustomizationRequestedArgs.CreateMarshaler2(customizationRequestedArgs);
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, int>**)ThisPtr)[6](ThisPtr, MarshalInspectable<object>.GetAbi(__customizationRequestedArgs)));
                global::System.GC.KeepAlive(_obj);
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__customizationRequestedArgs);
            }
        }


        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0x63, 0xA9, 0xC3, 0x38, 0x93, 0xDD, 0x9D, 0x47, 0x92, 0x76, 0x4, 0xBF, 0x84, 0xEE, 0x18, 0x16 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

        public static global::System.IntPtr AbiToProjectionVftablePtr => IWidgetProvider2.AbiToProjectionVftablePtr;

    }
    [DynamicInterfaceCastableImplementation]
    [Guid("38C3A963-DD93-479D-9276-04BF84EE1816")]
    internal unsafe interface IWidgetProvider2 : global::Microsoft.Windows.Widgets.Providers.IWidgetProvider2
    {

        public static readonly IntPtr AbiToProjectionVftablePtr;
        static unsafe IWidgetProvider2()
        {
            AbiToProjectionVftablePtr = ComWrappersSupport.AllocateVtableMemory(typeof(IWidgetProvider2), sizeof(IInspectable.Vftbl) + sizeof(IntPtr) * 1);
            *(IInspectable.Vftbl*)AbiToProjectionVftablePtr = IInspectable.Vftbl.AbiToProjectionVftable;
            ((delegate* unmanaged[Stdcall]<IntPtr, IntPtr, int>*)AbiToProjectionVftablePtr)[6] = &Do_Abi_OnCustomizationRequested_0;
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvStdcall) })]
        private static unsafe int Do_Abi_OnCustomizationRequested_0(IntPtr thisPtr, IntPtr customizationRequestedArgs)
        {



            try
            {
                global::WinRT.ComWrappersSupport.FindObject<global::Microsoft.Windows.Widgets.Providers.IWidgetProvider2>(thisPtr).OnCustomizationRequested(global::ABI.Microsoft.Windows.Widgets.Providers.WidgetCustomizationRequestedArgs.FromAbi(customizationRequestedArgs));

            }
            catch (Exception __exception__)
            {
                global::WinRT.ExceptionHelpers.SetErrorInfo(__exception__);
                return global::WinRT.ExceptionHelpers.GetHRForException(__exception__);
            }
            return 0;
        }

        unsafe void global::Microsoft.Windows.Widgets.Providers.IWidgetProvider2.OnCustomizationRequested(global::Microsoft.Windows.Widgets.Providers.WidgetCustomizationRequestedArgs customizationRequestedArgs)
        {
            var _obj = ((IObjectReference)((IWinRTObject)this).GetObjectReferenceForType(typeof(global::Microsoft.Windows.Widgets.Providers.IWidgetProvider2).TypeHandle));
            global::ABI.Microsoft.Windows.Widgets.Providers.IWidgetProvider2Methods.OnCustomizationRequested(_obj, customizationRequestedArgs);
        }
    }

    public static class IWidgetProviderAnalyticsMethods
    {


        public static unsafe void OnAnalyticsInfoReported(IObjectReference _obj, global::Microsoft.Windows.Widgets.Providers.WidgetAnalyticsInfoReportedArgs args)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __args = default;
            try
            {
                __args = global::ABI.Microsoft.Windows.Widgets.Providers.WidgetAnalyticsInfoReportedArgs.CreateMarshaler2(args);
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, int>**)ThisPtr)[6](ThisPtr, MarshalInspectable<object>.GetAbi(__args)));
                global::System.GC.KeepAlive(_obj);
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__args);
            }
        }


        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0xA5, 0x85, 0x19, 0x66, 0x87, 0xD1, 0x2D, 0x48, 0x9E, 0xEF, 0x6F, 0xDA, 0x5, 0xD2, 0x18, 0x45 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

        public static global::System.IntPtr AbiToProjectionVftablePtr => IWidgetProviderAnalytics.AbiToProjectionVftablePtr;

    }
    [DynamicInterfaceCastableImplementation]
    [Guid("661985A5-D187-482D-9EEF-6FDA05D21845")]
    internal unsafe interface IWidgetProviderAnalytics : global::Microsoft.Windows.Widgets.Providers.IWidgetProviderAnalytics
    {

        public static readonly IntPtr AbiToProjectionVftablePtr;
        static unsafe IWidgetProviderAnalytics()
        {
            AbiToProjectionVftablePtr = ComWrappersSupport.AllocateVtableMemory(typeof(IWidgetProviderAnalytics), sizeof(IInspectable.Vftbl) + sizeof(IntPtr) * 1);
            *(IInspectable.Vftbl*)AbiToProjectionVftablePtr = IInspectable.Vftbl.AbiToProjectionVftable;
            ((delegate* unmanaged[Stdcall]<IntPtr, IntPtr, int>*)AbiToProjectionVftablePtr)[6] = &Do_Abi_OnAnalyticsInfoReported_0;
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvStdcall) })]
        private static unsafe int Do_Abi_OnAnalyticsInfoReported_0(IntPtr thisPtr, IntPtr args)
        {



            try
            {
                global::WinRT.ComWrappersSupport.FindObject<global::Microsoft.Windows.Widgets.Providers.IWidgetProviderAnalytics>(thisPtr).OnAnalyticsInfoReported(global::ABI.Microsoft.Windows.Widgets.Providers.WidgetAnalyticsInfoReportedArgs.FromAbi(args));

            }
            catch (Exception __exception__)
            {
                global::WinRT.ExceptionHelpers.SetErrorInfo(__exception__);
                return global::WinRT.ExceptionHelpers.GetHRForException(__exception__);
            }
            return 0;
        }

        unsafe void global::Microsoft.Windows.Widgets.Providers.IWidgetProviderAnalytics.OnAnalyticsInfoReported(global::Microsoft.Windows.Widgets.Providers.WidgetAnalyticsInfoReportedArgs args)
        {
            var _obj = ((IObjectReference)((IWinRTObject)this).GetObjectReferenceForType(typeof(global::Microsoft.Windows.Widgets.Providers.IWidgetProviderAnalytics).TypeHandle));
            global::ABI.Microsoft.Windows.Widgets.Providers.IWidgetProviderAnalyticsMethods.OnAnalyticsInfoReported(_obj, args);
        }
    }

    public static class IWidgetProviderErrorsMethods
    {


        public static unsafe void OnErrorInfoReported(IObjectReference _obj, global::Microsoft.Windows.Widgets.Providers.WidgetErrorInfoReportedArgs args)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __args = default;
            try
            {
                __args = global::ABI.Microsoft.Windows.Widgets.Providers.WidgetErrorInfoReportedArgs.CreateMarshaler2(args);
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, int>**)ThisPtr)[6](ThisPtr, MarshalInspectable<object>.GetAbi(__args)));
                global::System.GC.KeepAlive(_obj);
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__args);
            }
        }


        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0xF0, 0xB5, 0xC1, 0x90, 0x3A, 0xD, 0xC6, 0x4A, 0xAB, 0xB7, 0xC9, 0x7B, 0x36, 0x7B, 0x8F, 0xCC };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

        public static global::System.IntPtr AbiToProjectionVftablePtr => IWidgetProviderErrors.AbiToProjectionVftablePtr;

    }
    [DynamicInterfaceCastableImplementation]
    [Guid("90C1B5F0-0D3A-4AC6-ABB7-C97B367B8FCC")]
    internal unsafe interface IWidgetProviderErrors : global::Microsoft.Windows.Widgets.Providers.IWidgetProviderErrors
    {

        public static readonly IntPtr AbiToProjectionVftablePtr;
        static unsafe IWidgetProviderErrors()
        {
            AbiToProjectionVftablePtr = ComWrappersSupport.AllocateVtableMemory(typeof(IWidgetProviderErrors), sizeof(IInspectable.Vftbl) + sizeof(IntPtr) * 1);
            *(IInspectable.Vftbl*)AbiToProjectionVftablePtr = IInspectable.Vftbl.AbiToProjectionVftable;
            ((delegate* unmanaged[Stdcall]<IntPtr, IntPtr, int>*)AbiToProjectionVftablePtr)[6] = &Do_Abi_OnErrorInfoReported_0;
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvStdcall) })]
        private static unsafe int Do_Abi_OnErrorInfoReported_0(IntPtr thisPtr, IntPtr args)
        {



            try
            {
                global::WinRT.ComWrappersSupport.FindObject<global::Microsoft.Windows.Widgets.Providers.IWidgetProviderErrors>(thisPtr).OnErrorInfoReported(global::ABI.Microsoft.Windows.Widgets.Providers.WidgetErrorInfoReportedArgs.FromAbi(args));

            }
            catch (Exception __exception__)
            {
                global::WinRT.ExceptionHelpers.SetErrorInfo(__exception__);
                return global::WinRT.ExceptionHelpers.GetHRForException(__exception__);
            }
            return 0;
        }

        unsafe void global::Microsoft.Windows.Widgets.Providers.IWidgetProviderErrors.OnErrorInfoReported(global::Microsoft.Windows.Widgets.Providers.WidgetErrorInfoReportedArgs args)
        {
            var _obj = ((IObjectReference)((IWinRTObject)this).GetObjectReferenceForType(typeof(global::Microsoft.Windows.Widgets.Providers.IWidgetProviderErrors).TypeHandle));
            global::ABI.Microsoft.Windows.Widgets.Providers.IWidgetProviderErrorsMethods.OnErrorInfoReported(_obj, args);
        }
    }

    public static class IWidgetProviderMessageMethods
    {


        public static unsafe void OnMessageReceived(IObjectReference _obj, global::Microsoft.Windows.Widgets.Providers.WidgetMessageReceivedArgs args)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __args = default;
            try
            {
                __args = global::ABI.Microsoft.Windows.Widgets.Providers.WidgetMessageReceivedArgs.CreateMarshaler2(args);
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, int>**)ThisPtr)[6](ThisPtr, MarshalInspectable<object>.GetAbi(__args)));
                global::System.GC.KeepAlive(_obj);
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__args);
            }
        }


        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0x86, 0xC1, 0x4D, 0xEA, 0x24, 0x9E, 0x35, 0x4B, 0xA5, 0xEF, 0xA9, 0xF5, 0xDF, 0x72, 0xD6, 0xAC };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

        public static global::System.IntPtr AbiToProjectionVftablePtr => IWidgetProviderMessage.AbiToProjectionVftablePtr;

    }
    [DynamicInterfaceCastableImplementation]
    [Guid("EA4DC186-9E24-4B35-A5EF-A9F5DF72D6AC")]
    internal unsafe interface IWidgetProviderMessage : global::Microsoft.Windows.Widgets.Providers.IWidgetProviderMessage
    {

        public static readonly IntPtr AbiToProjectionVftablePtr;
        static unsafe IWidgetProviderMessage()
        {
            AbiToProjectionVftablePtr = ComWrappersSupport.AllocateVtableMemory(typeof(IWidgetProviderMessage), sizeof(IInspectable.Vftbl) + sizeof(IntPtr) * 1);
            *(IInspectable.Vftbl*)AbiToProjectionVftablePtr = IInspectable.Vftbl.AbiToProjectionVftable;
            ((delegate* unmanaged[Stdcall]<IntPtr, IntPtr, int>*)AbiToProjectionVftablePtr)[6] = &Do_Abi_OnMessageReceived_0;
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvStdcall) })]
        private static unsafe int Do_Abi_OnMessageReceived_0(IntPtr thisPtr, IntPtr args)
        {



            try
            {
                global::WinRT.ComWrappersSupport.FindObject<global::Microsoft.Windows.Widgets.Providers.IWidgetProviderMessage>(thisPtr).OnMessageReceived(global::ABI.Microsoft.Windows.Widgets.Providers.WidgetMessageReceivedArgs.FromAbi(args));

            }
            catch (Exception __exception__)
            {
                global::WinRT.ExceptionHelpers.SetErrorInfo(__exception__);
                return global::WinRT.ExceptionHelpers.GetHRForException(__exception__);
            }
            return 0;
        }

        unsafe void global::Microsoft.Windows.Widgets.Providers.IWidgetProviderMessage.OnMessageReceived(global::Microsoft.Windows.Widgets.Providers.WidgetMessageReceivedArgs args)
        {
            var _obj = ((IObjectReference)((IWinRTObject)this).GetObjectReferenceForType(typeof(global::Microsoft.Windows.Widgets.Providers.IWidgetProviderMessage).TypeHandle));
            global::ABI.Microsoft.Windows.Widgets.Providers.IWidgetProviderMessageMethods.OnMessageReceived(_obj, args);
        }
    }

    public static class IWidgetResourceProviderMethods
    {


        public static unsafe void OnResourceRequested(IObjectReference _obj, global::Microsoft.Windows.Widgets.Providers.WidgetResourceRequestedArgs args)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __args = default;
            try
            {
                __args = global::ABI.Microsoft.Windows.Widgets.Providers.WidgetResourceRequestedArgs.CreateMarshaler2(args);
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, int>**)ThisPtr)[6](ThisPtr, MarshalInspectable<object>.GetAbi(__args)));
                global::System.GC.KeepAlive(_obj);
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__args);
            }
        }


        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0xC0, 0x28, 0xF3, 0xDC, 0x2C, 0x1, 0xF5, 0x40, 0xBB, 0x28, 0x3A, 0x1C, 0x71, 0x4D, 0x2, 0x7D };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

        public static global::System.IntPtr AbiToProjectionVftablePtr => IWidgetResourceProvider.AbiToProjectionVftablePtr;

    }
    [DynamicInterfaceCastableImplementation]
    [Guid("DCF328C0-012C-40F5-BB28-3A1C714D027D")]
    internal unsafe interface IWidgetResourceProvider : global::Microsoft.Windows.Widgets.Providers.IWidgetResourceProvider
    {

        public static readonly IntPtr AbiToProjectionVftablePtr;
        static unsafe IWidgetResourceProvider()
        {
            AbiToProjectionVftablePtr = ComWrappersSupport.AllocateVtableMemory(typeof(IWidgetResourceProvider), sizeof(IInspectable.Vftbl) + sizeof(IntPtr) * 1);
            *(IInspectable.Vftbl*)AbiToProjectionVftablePtr = IInspectable.Vftbl.AbiToProjectionVftable;
            ((delegate* unmanaged[Stdcall]<IntPtr, IntPtr, int>*)AbiToProjectionVftablePtr)[6] = &Do_Abi_OnResourceRequested_0;
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvStdcall) })]
        private static unsafe int Do_Abi_OnResourceRequested_0(IntPtr thisPtr, IntPtr args)
        {



            try
            {
                global::WinRT.ComWrappersSupport.FindObject<global::Microsoft.Windows.Widgets.Providers.IWidgetResourceProvider>(thisPtr).OnResourceRequested(global::ABI.Microsoft.Windows.Widgets.Providers.WidgetResourceRequestedArgs.FromAbi(args));

            }
            catch (Exception __exception__)
            {
                global::WinRT.ExceptionHelpers.SetErrorInfo(__exception__);
                return global::WinRT.ExceptionHelpers.GetHRForException(__exception__);
            }
            return 0;
        }

        unsafe void global::Microsoft.Windows.Widgets.Providers.IWidgetResourceProvider.OnResourceRequested(global::Microsoft.Windows.Widgets.Providers.WidgetResourceRequestedArgs args)
        {
            var _obj = ((IObjectReference)((IWinRTObject)this).GetObjectReferenceForType(typeof(global::Microsoft.Windows.Widgets.Providers.IWidgetResourceProvider).TypeHandle));
            global::ABI.Microsoft.Windows.Widgets.Providers.IWidgetResourceProviderMethods.OnResourceRequested(_obj, args);
        }
    }

    internal static class IWidgetResourceRequestMethods
    {

        internal static unsafe global::Windows.Storage.Streams.IRandomAccessStreamReference get_Content(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[9](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return MarshalInterface<global::Windows.Storage.Streams.IRandomAccessStreamReference>.FromAbi(__retval);
            }
            finally
            {
                MarshalInterface<global::Windows.Storage.Streams.IRandomAccessStreamReference>.DisposeAbi(__retval);
            }
        }
        internal static unsafe void set_Content(IObjectReference _obj, global::Windows.Storage.Streams.IRandomAccessStreamReference value)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __value = default;
            try
            {
                __value = MarshalInterface<global::Windows.Storage.Streams.IRandomAccessStreamReference>.CreateMarshaler2(value, global::ABI.Windows.Storage.Streams.IRandomAccessStreamReferenceMethods.IID);
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, int>**)ThisPtr)[10](ThisPtr, MarshalInspectable<object>.GetAbi(__value)));
                global::System.GC.KeepAlive(_obj);
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__value);
            }
        }

        internal static unsafe global::System.Collections.Generic.IDictionary<string, string> get_Headers(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[11](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                _ = global::WinRT.GenericTypeInstantiations.Windows_Foundation_Collections_IMap_2_String__String.EnsureInitialized();
                return MarshalInterface<global::System.Collections.Generic.IDictionary<string, string>>.FromAbi(__retval);
            }
            finally
            {
                MarshalInterface<global::System.Collections.Generic.IDictionary<string, string>>.DisposeAbi(__retval);
            }
        }

        internal static unsafe string get_Method(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[7](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return MarshalString.FromAbi(__retval);
            }
            finally
            {
                MarshalString.DisposeAbi(__retval);
            }
        }
        internal static unsafe void set_Method(IObjectReference _obj, string value)
        {
            var ThisPtr = _obj.ThisPtr;

            MarshalString.Pinnable __value = new(value);
            fixed(void* ___value = __value)
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, int>**)ThisPtr)[8](ThisPtr, MarshalString.GetAbi(ref __value)));
                global::System.GC.KeepAlive(_obj);
            }
        }

        internal static unsafe string get_Uri(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[6](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return MarshalString.FromAbi(__retval);
            }
            finally
            {
                MarshalString.DisposeAbi(__retval);
            }
        }



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0x9F, 0x24, 0x3D, 0x11, 0xD9, 0x82, 0xCB, 0x57, 0x8C, 0xEA, 0x9A, 0x52, 0x91, 0xF2, 0xFE, 0x22 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("113D249F-82D9-57CB-8CEA-9A5291F2FE22")]
    internal interface IWidgetResourceRequest : global::Microsoft.Windows.Widgets.Providers.IWidgetResourceRequest
    {
    }
    internal static class IWidgetResourceRequestedArgsMethods
    {


        internal static unsafe global::Windows.Foundation.Deferral GetDeferral(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[10](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Windows.Foundation.Deferral.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Windows.Foundation.Deferral.DisposeAbi(__retval);
            }
        }
        internal static unsafe global::Microsoft.Windows.Widgets.Providers.WidgetResourceRequest get_Request(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[7](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.Windows.Widgets.Providers.WidgetResourceRequest.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.Windows.Widgets.Providers.WidgetResourceRequest.DisposeAbi(__retval);
            }
        }

        internal static unsafe global::Microsoft.Windows.Widgets.Providers.WidgetResourceResponse get_Response(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[8](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.Windows.Widgets.Providers.WidgetResourceResponse.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.Windows.Widgets.Providers.WidgetResourceResponse.DisposeAbi(__retval);
            }
        }
        internal static unsafe void set_Response(IObjectReference _obj, global::Microsoft.Windows.Widgets.Providers.WidgetResourceResponse value)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __value = default;
            try
            {
                __value = global::ABI.Microsoft.Windows.Widgets.Providers.WidgetResourceResponse.CreateMarshaler2(value);
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, int>**)ThisPtr)[9](ThisPtr, MarshalInspectable<object>.GetAbi(__value)));
                global::System.GC.KeepAlive(_obj);
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__value);
            }
        }

        internal static unsafe global::Microsoft.Windows.Widgets.Providers.WidgetContext get_WidgetContext(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[6](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.Windows.Widgets.Providers.WidgetContext.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.Windows.Widgets.Providers.WidgetContext.DisposeAbi(__retval);
            }
        }



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0x4D, 0xF, 0xB3, 0x2B, 0x66, 0x1, 0xE3, 0x58, 0xAA, 0xF6, 0x31, 0xB2, 0xAE, 0x97, 0xB, 0xCD };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("2BB30F4D-0166-58E3-AAF6-31B2AE970BCD")]
    internal interface IWidgetResourceRequestedArgs : global::Microsoft.Windows.Widgets.Providers.IWidgetResourceRequestedArgs
    {
    }
    internal static class IWidgetResourceResponseMethods
    {

        internal static unsafe global::Windows.Storage.Streams.IRandomAccessStreamReference get_Content(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[6](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return MarshalInterface<global::Windows.Storage.Streams.IRandomAccessStreamReference>.FromAbi(__retval);
            }
            finally
            {
                MarshalInterface<global::Windows.Storage.Streams.IRandomAccessStreamReference>.DisposeAbi(__retval);
            }
        }

        internal static unsafe global::System.Collections.Generic.IDictionary<string, string> get_Headers(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[7](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                _ = global::WinRT.GenericTypeInstantiations.Windows_Foundation_Collections_IMap_2_String__String.EnsureInitialized();
                return MarshalInterface<global::System.Collections.Generic.IDictionary<string, string>>.FromAbi(__retval);
            }
            finally
            {
                MarshalInterface<global::System.Collections.Generic.IDictionary<string, string>>.DisposeAbi(__retval);
            }
        }

        internal static unsafe string get_ReasonPhrase(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[8](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return MarshalString.FromAbi(__retval);
            }
            finally
            {
                MarshalString.DisposeAbi(__retval);
            }
        }

        internal static unsafe int get_StatusCode(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            int __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, int*, int>**)ThisPtr)[9](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0x2C, 0xD3, 0xA2, 0x3, 0x9E, 0x2E, 0xA3, 0x54, 0xB0, 0x84, 0x14, 0x79, 0xD5, 0x6, 0xF, 0x80 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("03A2D32C-2E9E-54A3-B084-1479D5060F80")]
    internal interface IWidgetResourceResponse : global::Microsoft.Windows.Widgets.Providers.IWidgetResourceResponse
    {
    }
    internal static class IWidgetResourceResponseFactoryMethods
    {


        internal static unsafe global::Microsoft.Windows.Widgets.Providers.WidgetResourceResponse CreateInstance(IObjectReference _obj, global::Windows.Storage.Streams.IRandomAccessStreamReference content, string reasonPhrase, int statusCode)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __content = default;
            IntPtr __retval = default;
            try
            {
                __content = MarshalInterface<global::Windows.Storage.Streams.IRandomAccessStreamReference>.CreateMarshaler2(content, global::ABI.Windows.Storage.Streams.IRandomAccessStreamReferenceMethods.IID);
                MarshalString.Pinnable __reasonPhrase = new(reasonPhrase);
                fixed(void* ___reasonPhrase = __reasonPhrase)
                {
                    global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, IntPtr, int, IntPtr*, int>**)ThisPtr)[6](ThisPtr, MarshalInspectable<object>.GetAbi(__content), MarshalString.GetAbi(ref __reasonPhrase), statusCode, &__retval));
                    global::System.GC.KeepAlive(_obj);
                    return global::ABI.Microsoft.Windows.Widgets.Providers.WidgetResourceResponse.FromAbi(__retval);
                }
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__content);
                global::ABI.Microsoft.Windows.Widgets.Providers.WidgetResourceResponse.DisposeAbi(__retval);
            }
        }


        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0xF1, 0x1E, 0x88, 0x8, 0x8A, 0xA7, 0x4, 0x58, 0xB0, 0x70, 0x91, 0x53, 0xA8, 0x65, 0x7F, 0x85 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("08881EF1-A78A-5804-B070-9153A8657F85")]
    internal interface IWidgetResourceResponseFactory : global::Microsoft.Windows.Widgets.Providers.IWidgetResourceResponseFactory
    {
    }
    internal static class IWidgetUpdateRequestOptionsMethods
    {

        internal static unsafe string get_CustomState(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[11](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return MarshalString.FromAbi(__retval);
            }
            finally
            {
                MarshalString.DisposeAbi(__retval);
            }
        }
        internal static unsafe void set_CustomState(IObjectReference _obj, string value)
        {
            var ThisPtr = _obj.ThisPtr;

            MarshalString.Pinnable __value = new(value);
            fixed(void* ___value = __value)
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, int>**)ThisPtr)[12](ThisPtr, MarshalString.GetAbi(ref __value)));
                global::System.GC.KeepAlive(_obj);
            }
        }

        internal static unsafe string get_Data(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[9](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return MarshalString.FromAbi(__retval);
            }
            finally
            {
                MarshalString.DisposeAbi(__retval);
            }
        }
        internal static unsafe void set_Data(IObjectReference _obj, string value)
        {
            var ThisPtr = _obj.ThisPtr;

            MarshalString.Pinnable __value = new(value);
            fixed(void* ___value = __value)
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, int>**)ThisPtr)[10](ThisPtr, MarshalString.GetAbi(ref __value)));
                global::System.GC.KeepAlive(_obj);
            }
        }

        internal static unsafe string get_Template(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[7](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return MarshalString.FromAbi(__retval);
            }
            finally
            {
                MarshalString.DisposeAbi(__retval);
            }
        }
        internal static unsafe void set_Template(IObjectReference _obj, string value)
        {
            var ThisPtr = _obj.ThisPtr;

            MarshalString.Pinnable __value = new(value);
            fixed(void* ___value = __value)
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, int>**)ThisPtr)[8](ThisPtr, MarshalString.GetAbi(ref __value)));
                global::System.GC.KeepAlive(_obj);
            }
        }

        internal static unsafe string get_WidgetId(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[6](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return MarshalString.FromAbi(__retval);
            }
            finally
            {
                MarshalString.DisposeAbi(__retval);
            }
        }



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0xF7, 0xA8, 0x9C, 0xB0, 0x24, 0x74, 0x87, 0x56, 0xBA, 0xAF, 0x7D, 0xD6, 0xFA, 0x63, 0x96, 0x72 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("B09CA8F7-7424-5687-BAAF-7DD6FA639672")]
    internal interface IWidgetUpdateRequestOptions : global::Microsoft.Windows.Widgets.Providers.IWidgetUpdateRequestOptions
    {
    }
    internal static class IWidgetUpdateRequestOptions2Methods
    {

        internal static unsafe global::System.Nullable<bool> get_IsPlaceholderContent(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[6](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return MarshalInterface<global::System.Nullable<bool>>.FromAbi(__retval);
            }
            finally
            {
                MarshalInterface<global::System.Nullable<bool>>.DisposeAbi(__retval);
            }
        }
        internal static unsafe void set_IsPlaceholderContent(IObjectReference _obj, global::System.Nullable<bool> value)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __value = default;
            try
            {
                __value = MarshalInterface<global::System.Nullable<bool>>.CreateMarshaler2(value, global::ABI.System.Nullable<bool>.PIID);
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, int>**)ThisPtr)[7](ThisPtr, MarshalInspectable<object>.GetAbi(__value)));
                global::System.GC.KeepAlive(_obj);
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__value);
            }
        }



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0xC4, 0xEF, 0xC4, 0x77, 0xF3, 0x38, 0xA5, 0x57, 0xAB, 0xA1, 0xF8, 0x3F, 0x25, 0x7B, 0x89, 0x9E };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("77C4EFC4-38F3-57A5-ABA1-F83F257B899E")]
    internal interface IWidgetUpdateRequestOptions2 : global::Microsoft.Windows.Widgets.Providers.IWidgetUpdateRequestOptions2
    {
    }
    internal static class IWidgetUpdateRequestOptionsFactoryMethods
    {


        internal static unsafe global::Microsoft.Windows.Widgets.Providers.WidgetUpdateRequestOptions CreateInstance(IObjectReference _obj, string widgetId)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                MarshalString.Pinnable __widgetId = new(widgetId);
                fixed(void* ___widgetId = __widgetId)
                {
                    global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, IntPtr*, int>**)ThisPtr)[6](ThisPtr, MarshalString.GetAbi(ref __widgetId), &__retval));
                    global::System.GC.KeepAlive(_obj);
                    return global::ABI.Microsoft.Windows.Widgets.Providers.WidgetUpdateRequestOptions.FromAbi(__retval);
                }
            }
            finally
            {
                global::ABI.Microsoft.Windows.Widgets.Providers.WidgetUpdateRequestOptions.DisposeAbi(__retval);
            }
        }


        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0xF8, 0xA, 0xE0, 0xE0, 0x10, 0x1D, 0xA8, 0x57, 0x94, 0x19, 0x3F, 0x56, 0x8E, 0x85, 0x4D, 0xAA };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("E0E00AF8-1D10-57A8-9419-3F568E854DAA")]
    internal interface IWidgetUpdateRequestOptionsFactory : global::Microsoft.Windows.Widgets.Providers.IWidgetUpdateRequestOptionsFactory
    {
    }
    internal static class IWidgetUpdateRequestOptionsStaticsMethods
    {

        internal static unsafe string get_UnsetValue(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[6](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return MarshalString.FromAbi(__retval);
            }
            finally
            {
                MarshalString.DisposeAbi(__retval);
            }
        }



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0xE3, 0xB5, 0x45, 0x46, 0x32, 0xD3, 0x11, 0x5D, 0x82, 0xF0, 0x36, 0x7, 0xE5, 0xDF, 0x60, 0x18 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("4645B5E3-D332-5D11-82F0-3607E5DF6018")]
    internal interface IWidgetUpdateRequestOptionsStatics : global::Microsoft.Windows.Widgets.Providers.IWidgetUpdateRequestOptionsStatics
    {
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    public struct WidgetActionInvokedArgs
    {

        public static IObjectReference CreateMarshaler(global::Microsoft.Windows.Widgets.Providers.WidgetActionInvokedArgs obj) => obj is null ? null : MarshalInspectable<global::Microsoft.Windows.Widgets.Providers.WidgetActionInvokedArgs>.CreateMarshaler<IUnknownVftbl>(obj, global::ABI.Microsoft.Windows.Widgets.Providers.IWidgetActionInvokedArgsMethods.IID);
        public static ObjectReferenceValue CreateMarshaler2(global::Microsoft.Windows.Widgets.Providers.WidgetActionInvokedArgs obj) => MarshalInspectable<object>.CreateMarshaler2(obj, global::ABI.Microsoft.Windows.Widgets.Providers.IWidgetActionInvokedArgsMethods.IID);
        public static IntPtr GetAbi(IObjectReference value) => value is null ? IntPtr.Zero : MarshalInterfaceHelper<object>.GetAbi(value);
        public static global::Microsoft.Windows.Widgets.Providers.WidgetActionInvokedArgs FromAbi(IntPtr thisPtr) => global::Microsoft.Windows.Widgets.Providers.WidgetActionInvokedArgs.FromAbi(thisPtr);
        public static IntPtr FromManaged(global::Microsoft.Windows.Widgets.Providers.WidgetActionInvokedArgs obj) => obj is null ? IntPtr.Zero : CreateMarshaler2(obj).Detach();
        public static unsafe MarshalInterfaceHelper<global::Microsoft.Windows.Widgets.Providers.WidgetActionInvokedArgs>.MarshalerArray CreateMarshalerArray(global::Microsoft.Windows.Widgets.Providers.WidgetActionInvokedArgs[] array) => MarshalInterfaceHelper<global::Microsoft.Windows.Widgets.Providers.WidgetActionInvokedArgs>.CreateMarshalerArray2(array, (o) => CreateMarshaler2(o));
        public static (int length, IntPtr data) GetAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.Windows.Widgets.Providers.WidgetActionInvokedArgs>.GetAbiArray(box);
        public static unsafe global::Microsoft.Windows.Widgets.Providers.WidgetActionInvokedArgs[] FromAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.Windows.Widgets.Providers.WidgetActionInvokedArgs>.FromAbiArray(box, FromAbi);
        public static void CopyAbiArray(global::Microsoft.Windows.Widgets.Providers.WidgetActionInvokedArgs[] array, object box) => MarshalInterfaceHelper<global::Microsoft.Windows.Widgets.Providers.WidgetActionInvokedArgs>.CopyAbiArray(array, box, FromAbi);
        public static (int length, IntPtr data) FromManagedArray(global::Microsoft.Windows.Widgets.Providers.WidgetActionInvokedArgs[] array) => MarshalInterfaceHelper<global::Microsoft.Windows.Widgets.Providers.WidgetActionInvokedArgs>.FromManagedArray(array, (o) => FromManaged(o));
        public static void DisposeMarshaler(IObjectReference value) => MarshalInspectable<object>.DisposeMarshaler(value);
        public static void DisposeMarshalerArray(MarshalInterfaceHelper<global::Microsoft.Windows.Widgets.Providers.WidgetActionInvokedArgs>.MarshalerArray array) => MarshalInterfaceHelper<global::Microsoft.Windows.Widgets.Providers.WidgetActionInvokedArgs>.DisposeMarshalerArray(array);
        public static void DisposeAbi(IntPtr abi) => MarshalInspectable<object>.DisposeAbi(abi);
        public static unsafe void DisposeAbiArray(object box) => MarshalInspectable<object>.DisposeAbiArray(box);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    internal sealed class WidgetActionInvokedArgsRcwFactoryAttribute : global::WinRT.WinRTImplementationTypeRcwFactoryAttribute
    {
        public override object CreateInstance(global::WinRT.IInspectable inspectable)
            => new global::Microsoft.Windows.Widgets.Providers.WidgetActionInvokedArgs(inspectable.ObjRef);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    public struct WidgetAnalyticsInfoReportedArgs
    {

        public static IObjectReference CreateMarshaler(global::Microsoft.Windows.Widgets.Providers.WidgetAnalyticsInfoReportedArgs obj) => obj is null ? null : MarshalInspectable<global::Microsoft.Windows.Widgets.Providers.WidgetAnalyticsInfoReportedArgs>.CreateMarshaler<IUnknownVftbl>(obj, global::ABI.Microsoft.Windows.Widgets.Providers.IWidgetAnalyticsInfoReportedArgsMethods.IID);
        public static ObjectReferenceValue CreateMarshaler2(global::Microsoft.Windows.Widgets.Providers.WidgetAnalyticsInfoReportedArgs obj) => MarshalInspectable<object>.CreateMarshaler2(obj, global::ABI.Microsoft.Windows.Widgets.Providers.IWidgetAnalyticsInfoReportedArgsMethods.IID);
        public static IntPtr GetAbi(IObjectReference value) => value is null ? IntPtr.Zero : MarshalInterfaceHelper<object>.GetAbi(value);
        public static global::Microsoft.Windows.Widgets.Providers.WidgetAnalyticsInfoReportedArgs FromAbi(IntPtr thisPtr) => global::Microsoft.Windows.Widgets.Providers.WidgetAnalyticsInfoReportedArgs.FromAbi(thisPtr);
        public static IntPtr FromManaged(global::Microsoft.Windows.Widgets.Providers.WidgetAnalyticsInfoReportedArgs obj) => obj is null ? IntPtr.Zero : CreateMarshaler2(obj).Detach();
        public static unsafe MarshalInterfaceHelper<global::Microsoft.Windows.Widgets.Providers.WidgetAnalyticsInfoReportedArgs>.MarshalerArray CreateMarshalerArray(global::Microsoft.Windows.Widgets.Providers.WidgetAnalyticsInfoReportedArgs[] array) => MarshalInterfaceHelper<global::Microsoft.Windows.Widgets.Providers.WidgetAnalyticsInfoReportedArgs>.CreateMarshalerArray2(array, (o) => CreateMarshaler2(o));
        public static (int length, IntPtr data) GetAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.Windows.Widgets.Providers.WidgetAnalyticsInfoReportedArgs>.GetAbiArray(box);
        public static unsafe global::Microsoft.Windows.Widgets.Providers.WidgetAnalyticsInfoReportedArgs[] FromAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.Windows.Widgets.Providers.WidgetAnalyticsInfoReportedArgs>.FromAbiArray(box, FromAbi);
        public static void CopyAbiArray(global::Microsoft.Windows.Widgets.Providers.WidgetAnalyticsInfoReportedArgs[] array, object box) => MarshalInterfaceHelper<global::Microsoft.Windows.Widgets.Providers.WidgetAnalyticsInfoReportedArgs>.CopyAbiArray(array, box, FromAbi);
        public static (int length, IntPtr data) FromManagedArray(global::Microsoft.Windows.Widgets.Providers.WidgetAnalyticsInfoReportedArgs[] array) => MarshalInterfaceHelper<global::Microsoft.Windows.Widgets.Providers.WidgetAnalyticsInfoReportedArgs>.FromManagedArray(array, (o) => FromManaged(o));
        public static void DisposeMarshaler(IObjectReference value) => MarshalInspectable<object>.DisposeMarshaler(value);
        public static void DisposeMarshalerArray(MarshalInterfaceHelper<global::Microsoft.Windows.Widgets.Providers.WidgetAnalyticsInfoReportedArgs>.MarshalerArray array) => MarshalInterfaceHelper<global::Microsoft.Windows.Widgets.Providers.WidgetAnalyticsInfoReportedArgs>.DisposeMarshalerArray(array);
        public static void DisposeAbi(IntPtr abi) => MarshalInspectable<object>.DisposeAbi(abi);
        public static unsafe void DisposeAbiArray(object box) => MarshalInspectable<object>.DisposeAbiArray(box);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    internal sealed class WidgetAnalyticsInfoReportedArgsRcwFactoryAttribute : global::WinRT.WinRTImplementationTypeRcwFactoryAttribute
    {
        public override object CreateInstance(global::WinRT.IInspectable inspectable)
            => new global::Microsoft.Windows.Widgets.Providers.WidgetAnalyticsInfoReportedArgs(inspectable.ObjRef);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    public struct WidgetContext
    {

        public static IObjectReference CreateMarshaler(global::Microsoft.Windows.Widgets.Providers.WidgetContext obj) => obj is null ? null : MarshalInspectable<global::Microsoft.Windows.Widgets.Providers.WidgetContext>.CreateMarshaler<IUnknownVftbl>(obj, global::ABI.Microsoft.Windows.Widgets.Providers.IWidgetContextMethods.IID);
        public static ObjectReferenceValue CreateMarshaler2(global::Microsoft.Windows.Widgets.Providers.WidgetContext obj) => MarshalInspectable<object>.CreateMarshaler2(obj, global::ABI.Microsoft.Windows.Widgets.Providers.IWidgetContextMethods.IID);
        public static IntPtr GetAbi(IObjectReference value) => value is null ? IntPtr.Zero : MarshalInterfaceHelper<object>.GetAbi(value);
        public static global::Microsoft.Windows.Widgets.Providers.WidgetContext FromAbi(IntPtr thisPtr) => global::Microsoft.Windows.Widgets.Providers.WidgetContext.FromAbi(thisPtr);
        public static IntPtr FromManaged(global::Microsoft.Windows.Widgets.Providers.WidgetContext obj) => obj is null ? IntPtr.Zero : CreateMarshaler2(obj).Detach();
        public static unsafe MarshalInterfaceHelper<global::Microsoft.Windows.Widgets.Providers.WidgetContext>.MarshalerArray CreateMarshalerArray(global::Microsoft.Windows.Widgets.Providers.WidgetContext[] array) => MarshalInterfaceHelper<global::Microsoft.Windows.Widgets.Providers.WidgetContext>.CreateMarshalerArray2(array, (o) => CreateMarshaler2(o));
        public static (int length, IntPtr data) GetAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.Windows.Widgets.Providers.WidgetContext>.GetAbiArray(box);
        public static unsafe global::Microsoft.Windows.Widgets.Providers.WidgetContext[] FromAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.Windows.Widgets.Providers.WidgetContext>.FromAbiArray(box, FromAbi);
        public static void CopyAbiArray(global::Microsoft.Windows.Widgets.Providers.WidgetContext[] array, object box) => MarshalInterfaceHelper<global::Microsoft.Windows.Widgets.Providers.WidgetContext>.CopyAbiArray(array, box, FromAbi);
        public static (int length, IntPtr data) FromManagedArray(global::Microsoft.Windows.Widgets.Providers.WidgetContext[] array) => MarshalInterfaceHelper<global::Microsoft.Windows.Widgets.Providers.WidgetContext>.FromManagedArray(array, (o) => FromManaged(o));
        public static void DisposeMarshaler(IObjectReference value) => MarshalInspectable<object>.DisposeMarshaler(value);
        public static void DisposeMarshalerArray(MarshalInterfaceHelper<global::Microsoft.Windows.Widgets.Providers.WidgetContext>.MarshalerArray array) => MarshalInterfaceHelper<global::Microsoft.Windows.Widgets.Providers.WidgetContext>.DisposeMarshalerArray(array);
        public static void DisposeAbi(IntPtr abi) => MarshalInspectable<object>.DisposeAbi(abi);
        public static unsafe void DisposeAbiArray(object box) => MarshalInspectable<object>.DisposeAbiArray(box);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    internal sealed class WidgetContextRcwFactoryAttribute : global::WinRT.WinRTImplementationTypeRcwFactoryAttribute
    {
        public override object CreateInstance(global::WinRT.IInspectable inspectable)
            => new global::Microsoft.Windows.Widgets.Providers.WidgetContext(inspectable.ObjRef);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    public struct WidgetContextChangedArgs
    {

        public static IObjectReference CreateMarshaler(global::Microsoft.Windows.Widgets.Providers.WidgetContextChangedArgs obj) => obj is null ? null : MarshalInspectable<global::Microsoft.Windows.Widgets.Providers.WidgetContextChangedArgs>.CreateMarshaler<IUnknownVftbl>(obj, global::ABI.Microsoft.Windows.Widgets.Providers.IWidgetContextChangedArgsMethods.IID);
        public static ObjectReferenceValue CreateMarshaler2(global::Microsoft.Windows.Widgets.Providers.WidgetContextChangedArgs obj) => MarshalInspectable<object>.CreateMarshaler2(obj, global::ABI.Microsoft.Windows.Widgets.Providers.IWidgetContextChangedArgsMethods.IID);
        public static IntPtr GetAbi(IObjectReference value) => value is null ? IntPtr.Zero : MarshalInterfaceHelper<object>.GetAbi(value);
        public static global::Microsoft.Windows.Widgets.Providers.WidgetContextChangedArgs FromAbi(IntPtr thisPtr) => global::Microsoft.Windows.Widgets.Providers.WidgetContextChangedArgs.FromAbi(thisPtr);
        public static IntPtr FromManaged(global::Microsoft.Windows.Widgets.Providers.WidgetContextChangedArgs obj) => obj is null ? IntPtr.Zero : CreateMarshaler2(obj).Detach();
        public static unsafe MarshalInterfaceHelper<global::Microsoft.Windows.Widgets.Providers.WidgetContextChangedArgs>.MarshalerArray CreateMarshalerArray(global::Microsoft.Windows.Widgets.Providers.WidgetContextChangedArgs[] array) => MarshalInterfaceHelper<global::Microsoft.Windows.Widgets.Providers.WidgetContextChangedArgs>.CreateMarshalerArray2(array, (o) => CreateMarshaler2(o));
        public static (int length, IntPtr data) GetAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.Windows.Widgets.Providers.WidgetContextChangedArgs>.GetAbiArray(box);
        public static unsafe global::Microsoft.Windows.Widgets.Providers.WidgetContextChangedArgs[] FromAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.Windows.Widgets.Providers.WidgetContextChangedArgs>.FromAbiArray(box, FromAbi);
        public static void CopyAbiArray(global::Microsoft.Windows.Widgets.Providers.WidgetContextChangedArgs[] array, object box) => MarshalInterfaceHelper<global::Microsoft.Windows.Widgets.Providers.WidgetContextChangedArgs>.CopyAbiArray(array, box, FromAbi);
        public static (int length, IntPtr data) FromManagedArray(global::Microsoft.Windows.Widgets.Providers.WidgetContextChangedArgs[] array) => MarshalInterfaceHelper<global::Microsoft.Windows.Widgets.Providers.WidgetContextChangedArgs>.FromManagedArray(array, (o) => FromManaged(o));
        public static void DisposeMarshaler(IObjectReference value) => MarshalInspectable<object>.DisposeMarshaler(value);
        public static void DisposeMarshalerArray(MarshalInterfaceHelper<global::Microsoft.Windows.Widgets.Providers.WidgetContextChangedArgs>.MarshalerArray array) => MarshalInterfaceHelper<global::Microsoft.Windows.Widgets.Providers.WidgetContextChangedArgs>.DisposeMarshalerArray(array);
        public static void DisposeAbi(IntPtr abi) => MarshalInspectable<object>.DisposeAbi(abi);
        public static unsafe void DisposeAbiArray(object box) => MarshalInspectable<object>.DisposeAbiArray(box);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    internal sealed class WidgetContextChangedArgsRcwFactoryAttribute : global::WinRT.WinRTImplementationTypeRcwFactoryAttribute
    {
        public override object CreateInstance(global::WinRT.IInspectable inspectable)
            => new global::Microsoft.Windows.Widgets.Providers.WidgetContextChangedArgs(inspectable.ObjRef);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    public struct WidgetCustomizationRequestedArgs
    {

        public static IObjectReference CreateMarshaler(global::Microsoft.Windows.Widgets.Providers.WidgetCustomizationRequestedArgs obj) => obj is null ? null : MarshalInspectable<global::Microsoft.Windows.Widgets.Providers.WidgetCustomizationRequestedArgs>.CreateMarshaler<IUnknownVftbl>(obj, global::ABI.Microsoft.Windows.Widgets.Providers.IWidgetCustomizationRequestedArgsMethods.IID);
        public static ObjectReferenceValue CreateMarshaler2(global::Microsoft.Windows.Widgets.Providers.WidgetCustomizationRequestedArgs obj) => MarshalInspectable<object>.CreateMarshaler2(obj, global::ABI.Microsoft.Windows.Widgets.Providers.IWidgetCustomizationRequestedArgsMethods.IID);
        public static IntPtr GetAbi(IObjectReference value) => value is null ? IntPtr.Zero : MarshalInterfaceHelper<object>.GetAbi(value);
        public static global::Microsoft.Windows.Widgets.Providers.WidgetCustomizationRequestedArgs FromAbi(IntPtr thisPtr) => global::Microsoft.Windows.Widgets.Providers.WidgetCustomizationRequestedArgs.FromAbi(thisPtr);
        public static IntPtr FromManaged(global::Microsoft.Windows.Widgets.Providers.WidgetCustomizationRequestedArgs obj) => obj is null ? IntPtr.Zero : CreateMarshaler2(obj).Detach();
        public static unsafe MarshalInterfaceHelper<global::Microsoft.Windows.Widgets.Providers.WidgetCustomizationRequestedArgs>.MarshalerArray CreateMarshalerArray(global::Microsoft.Windows.Widgets.Providers.WidgetCustomizationRequestedArgs[] array) => MarshalInterfaceHelper<global::Microsoft.Windows.Widgets.Providers.WidgetCustomizationRequestedArgs>.CreateMarshalerArray2(array, (o) => CreateMarshaler2(o));
        public static (int length, IntPtr data) GetAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.Windows.Widgets.Providers.WidgetCustomizationRequestedArgs>.GetAbiArray(box);
        public static unsafe global::Microsoft.Windows.Widgets.Providers.WidgetCustomizationRequestedArgs[] FromAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.Windows.Widgets.Providers.WidgetCustomizationRequestedArgs>.FromAbiArray(box, FromAbi);
        public static void CopyAbiArray(global::Microsoft.Windows.Widgets.Providers.WidgetCustomizationRequestedArgs[] array, object box) => MarshalInterfaceHelper<global::Microsoft.Windows.Widgets.Providers.WidgetCustomizationRequestedArgs>.CopyAbiArray(array, box, FromAbi);
        public static (int length, IntPtr data) FromManagedArray(global::Microsoft.Windows.Widgets.Providers.WidgetCustomizationRequestedArgs[] array) => MarshalInterfaceHelper<global::Microsoft.Windows.Widgets.Providers.WidgetCustomizationRequestedArgs>.FromManagedArray(array, (o) => FromManaged(o));
        public static void DisposeMarshaler(IObjectReference value) => MarshalInspectable<object>.DisposeMarshaler(value);
        public static void DisposeMarshalerArray(MarshalInterfaceHelper<global::Microsoft.Windows.Widgets.Providers.WidgetCustomizationRequestedArgs>.MarshalerArray array) => MarshalInterfaceHelper<global::Microsoft.Windows.Widgets.Providers.WidgetCustomizationRequestedArgs>.DisposeMarshalerArray(array);
        public static void DisposeAbi(IntPtr abi) => MarshalInspectable<object>.DisposeAbi(abi);
        public static unsafe void DisposeAbiArray(object box) => MarshalInspectable<object>.DisposeAbiArray(box);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    internal sealed class WidgetCustomizationRequestedArgsRcwFactoryAttribute : global::WinRT.WinRTImplementationTypeRcwFactoryAttribute
    {
        public override object CreateInstance(global::WinRT.IInspectable inspectable)
            => new global::Microsoft.Windows.Widgets.Providers.WidgetCustomizationRequestedArgs(inspectable.ObjRef);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    public struct WidgetErrorInfoReportedArgs
    {

        public static IObjectReference CreateMarshaler(global::Microsoft.Windows.Widgets.Providers.WidgetErrorInfoReportedArgs obj) => obj is null ? null : MarshalInspectable<global::Microsoft.Windows.Widgets.Providers.WidgetErrorInfoReportedArgs>.CreateMarshaler<IUnknownVftbl>(obj, global::ABI.Microsoft.Windows.Widgets.Providers.IWidgetErrorInfoReportedArgsMethods.IID);
        public static ObjectReferenceValue CreateMarshaler2(global::Microsoft.Windows.Widgets.Providers.WidgetErrorInfoReportedArgs obj) => MarshalInspectable<object>.CreateMarshaler2(obj, global::ABI.Microsoft.Windows.Widgets.Providers.IWidgetErrorInfoReportedArgsMethods.IID);
        public static IntPtr GetAbi(IObjectReference value) => value is null ? IntPtr.Zero : MarshalInterfaceHelper<object>.GetAbi(value);
        public static global::Microsoft.Windows.Widgets.Providers.WidgetErrorInfoReportedArgs FromAbi(IntPtr thisPtr) => global::Microsoft.Windows.Widgets.Providers.WidgetErrorInfoReportedArgs.FromAbi(thisPtr);
        public static IntPtr FromManaged(global::Microsoft.Windows.Widgets.Providers.WidgetErrorInfoReportedArgs obj) => obj is null ? IntPtr.Zero : CreateMarshaler2(obj).Detach();
        public static unsafe MarshalInterfaceHelper<global::Microsoft.Windows.Widgets.Providers.WidgetErrorInfoReportedArgs>.MarshalerArray CreateMarshalerArray(global::Microsoft.Windows.Widgets.Providers.WidgetErrorInfoReportedArgs[] array) => MarshalInterfaceHelper<global::Microsoft.Windows.Widgets.Providers.WidgetErrorInfoReportedArgs>.CreateMarshalerArray2(array, (o) => CreateMarshaler2(o));
        public static (int length, IntPtr data) GetAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.Windows.Widgets.Providers.WidgetErrorInfoReportedArgs>.GetAbiArray(box);
        public static unsafe global::Microsoft.Windows.Widgets.Providers.WidgetErrorInfoReportedArgs[] FromAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.Windows.Widgets.Providers.WidgetErrorInfoReportedArgs>.FromAbiArray(box, FromAbi);
        public static void CopyAbiArray(global::Microsoft.Windows.Widgets.Providers.WidgetErrorInfoReportedArgs[] array, object box) => MarshalInterfaceHelper<global::Microsoft.Windows.Widgets.Providers.WidgetErrorInfoReportedArgs>.CopyAbiArray(array, box, FromAbi);
        public static (int length, IntPtr data) FromManagedArray(global::Microsoft.Windows.Widgets.Providers.WidgetErrorInfoReportedArgs[] array) => MarshalInterfaceHelper<global::Microsoft.Windows.Widgets.Providers.WidgetErrorInfoReportedArgs>.FromManagedArray(array, (o) => FromManaged(o));
        public static void DisposeMarshaler(IObjectReference value) => MarshalInspectable<object>.DisposeMarshaler(value);
        public static void DisposeMarshalerArray(MarshalInterfaceHelper<global::Microsoft.Windows.Widgets.Providers.WidgetErrorInfoReportedArgs>.MarshalerArray array) => MarshalInterfaceHelper<global::Microsoft.Windows.Widgets.Providers.WidgetErrorInfoReportedArgs>.DisposeMarshalerArray(array);
        public static void DisposeAbi(IntPtr abi) => MarshalInspectable<object>.DisposeAbi(abi);
        public static unsafe void DisposeAbiArray(object box) => MarshalInspectable<object>.DisposeAbiArray(box);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    internal sealed class WidgetErrorInfoReportedArgsRcwFactoryAttribute : global::WinRT.WinRTImplementationTypeRcwFactoryAttribute
    {
        public override object CreateInstance(global::WinRT.IInspectable inspectable)
            => new global::Microsoft.Windows.Widgets.Providers.WidgetErrorInfoReportedArgs(inspectable.ObjRef);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    public struct WidgetInfo
    {

        public static IObjectReference CreateMarshaler(global::Microsoft.Windows.Widgets.Providers.WidgetInfo obj) => obj is null ? null : MarshalInspectable<global::Microsoft.Windows.Widgets.Providers.WidgetInfo>.CreateMarshaler<IUnknownVftbl>(obj, global::ABI.Microsoft.Windows.Widgets.Providers.IWidgetInfoMethods.IID);
        public static ObjectReferenceValue CreateMarshaler2(global::Microsoft.Windows.Widgets.Providers.WidgetInfo obj) => MarshalInspectable<object>.CreateMarshaler2(obj, global::ABI.Microsoft.Windows.Widgets.Providers.IWidgetInfoMethods.IID);
        public static IntPtr GetAbi(IObjectReference value) => value is null ? IntPtr.Zero : MarshalInterfaceHelper<object>.GetAbi(value);
        public static global::Microsoft.Windows.Widgets.Providers.WidgetInfo FromAbi(IntPtr thisPtr) => global::Microsoft.Windows.Widgets.Providers.WidgetInfo.FromAbi(thisPtr);
        public static IntPtr FromManaged(global::Microsoft.Windows.Widgets.Providers.WidgetInfo obj) => obj is null ? IntPtr.Zero : CreateMarshaler2(obj).Detach();
        public static unsafe MarshalInterfaceHelper<global::Microsoft.Windows.Widgets.Providers.WidgetInfo>.MarshalerArray CreateMarshalerArray(global::Microsoft.Windows.Widgets.Providers.WidgetInfo[] array) => MarshalInterfaceHelper<global::Microsoft.Windows.Widgets.Providers.WidgetInfo>.CreateMarshalerArray2(array, (o) => CreateMarshaler2(o));
        public static (int length, IntPtr data) GetAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.Windows.Widgets.Providers.WidgetInfo>.GetAbiArray(box);
        public static unsafe global::Microsoft.Windows.Widgets.Providers.WidgetInfo[] FromAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.Windows.Widgets.Providers.WidgetInfo>.FromAbiArray(box, FromAbi);
        public static void CopyAbiArray(global::Microsoft.Windows.Widgets.Providers.WidgetInfo[] array, object box) => MarshalInterfaceHelper<global::Microsoft.Windows.Widgets.Providers.WidgetInfo>.CopyAbiArray(array, box, FromAbi);
        public static (int length, IntPtr data) FromManagedArray(global::Microsoft.Windows.Widgets.Providers.WidgetInfo[] array) => MarshalInterfaceHelper<global::Microsoft.Windows.Widgets.Providers.WidgetInfo>.FromManagedArray(array, (o) => FromManaged(o));
        public static void DisposeMarshaler(IObjectReference value) => MarshalInspectable<object>.DisposeMarshaler(value);
        public static void DisposeMarshalerArray(MarshalInterfaceHelper<global::Microsoft.Windows.Widgets.Providers.WidgetInfo>.MarshalerArray array) => MarshalInterfaceHelper<global::Microsoft.Windows.Widgets.Providers.WidgetInfo>.DisposeMarshalerArray(array);
        public static void DisposeAbi(IntPtr abi) => MarshalInspectable<object>.DisposeAbi(abi);
        public static unsafe void DisposeAbiArray(object box) => MarshalInspectable<object>.DisposeAbiArray(box);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    internal sealed class WidgetInfoRcwFactoryAttribute : global::WinRT.WinRTImplementationTypeRcwFactoryAttribute
    {
        public override object CreateInstance(global::WinRT.IInspectable inspectable)
            => new global::Microsoft.Windows.Widgets.Providers.WidgetInfo(inspectable.ObjRef);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    public struct WidgetManager
    {

        public static IObjectReference CreateMarshaler(global::Microsoft.Windows.Widgets.Providers.WidgetManager obj) => obj is null ? null : MarshalInterface<global::Microsoft.Windows.Widgets.Providers.IWidgetManager>.CreateMarshaler(obj);
        public static ObjectReferenceValue CreateMarshaler2(global::Microsoft.Windows.Widgets.Providers.WidgetManager obj) => MarshalInterface<global::Microsoft.Windows.Widgets.Providers.IWidgetManager>.CreateMarshaler2(obj, global::ABI.Microsoft.Windows.Widgets.Providers.IWidgetManagerMethods.IID);
        public static IntPtr GetAbi(IObjectReference value) => value is null ? IntPtr.Zero : MarshalInterfaceHelper<object>.GetAbi(value);
        public static global::Microsoft.Windows.Widgets.Providers.WidgetManager FromAbi(IntPtr thisPtr) => global::Microsoft.Windows.Widgets.Providers.WidgetManager.FromAbi(thisPtr);
        public static IntPtr FromManaged(global::Microsoft.Windows.Widgets.Providers.WidgetManager obj) => obj is null ? IntPtr.Zero : CreateMarshaler2(obj).Detach();
        public static unsafe MarshalInterfaceHelper<global::Microsoft.Windows.Widgets.Providers.WidgetManager>.MarshalerArray CreateMarshalerArray(global::Microsoft.Windows.Widgets.Providers.WidgetManager[] array) => MarshalInterfaceHelper<global::Microsoft.Windows.Widgets.Providers.WidgetManager>.CreateMarshalerArray2(array, (o) => CreateMarshaler2(o));
        public static (int length, IntPtr data) GetAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.Windows.Widgets.Providers.WidgetManager>.GetAbiArray(box);
        public static unsafe global::Microsoft.Windows.Widgets.Providers.WidgetManager[] FromAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.Windows.Widgets.Providers.WidgetManager>.FromAbiArray(box, FromAbi);
        public static void CopyAbiArray(global::Microsoft.Windows.Widgets.Providers.WidgetManager[] array, object box) => MarshalInterfaceHelper<global::Microsoft.Windows.Widgets.Providers.WidgetManager>.CopyAbiArray(array, box, FromAbi);
        public static (int length, IntPtr data) FromManagedArray(global::Microsoft.Windows.Widgets.Providers.WidgetManager[] array) => MarshalInterfaceHelper<global::Microsoft.Windows.Widgets.Providers.WidgetManager>.FromManagedArray(array, (o) => FromManaged(o));
        public static void DisposeMarshaler(IObjectReference value) => MarshalInspectable<object>.DisposeMarshaler(value);
        public static void DisposeMarshalerArray(MarshalInterfaceHelper<global::Microsoft.Windows.Widgets.Providers.WidgetManager>.MarshalerArray array) => MarshalInterfaceHelper<global::Microsoft.Windows.Widgets.Providers.WidgetManager>.DisposeMarshalerArray(array);
        public static void DisposeAbi(IntPtr abi) => MarshalInspectable<object>.DisposeAbi(abi);
        public static unsafe void DisposeAbiArray(object box) => MarshalInspectable<object>.DisposeAbiArray(box);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    internal sealed class WidgetManagerRcwFactoryAttribute : global::WinRT.WinRTImplementationTypeRcwFactoryAttribute
    {
        public override object CreateInstance(global::WinRT.IInspectable inspectable)
            => new global::Microsoft.Windows.Widgets.Providers.WidgetManager(inspectable.ObjRef);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    public struct WidgetMessageReceivedArgs
    {

        public static IObjectReference CreateMarshaler(global::Microsoft.Windows.Widgets.Providers.WidgetMessageReceivedArgs obj) => obj is null ? null : MarshalInspectable<global::Microsoft.Windows.Widgets.Providers.WidgetMessageReceivedArgs>.CreateMarshaler<IUnknownVftbl>(obj, global::ABI.Microsoft.Windows.Widgets.Providers.IWidgetMessageReceivedArgsMethods.IID);
        public static ObjectReferenceValue CreateMarshaler2(global::Microsoft.Windows.Widgets.Providers.WidgetMessageReceivedArgs obj) => MarshalInspectable<object>.CreateMarshaler2(obj, global::ABI.Microsoft.Windows.Widgets.Providers.IWidgetMessageReceivedArgsMethods.IID);
        public static IntPtr GetAbi(IObjectReference value) => value is null ? IntPtr.Zero : MarshalInterfaceHelper<object>.GetAbi(value);
        public static global::Microsoft.Windows.Widgets.Providers.WidgetMessageReceivedArgs FromAbi(IntPtr thisPtr) => global::Microsoft.Windows.Widgets.Providers.WidgetMessageReceivedArgs.FromAbi(thisPtr);
        public static IntPtr FromManaged(global::Microsoft.Windows.Widgets.Providers.WidgetMessageReceivedArgs obj) => obj is null ? IntPtr.Zero : CreateMarshaler2(obj).Detach();
        public static unsafe MarshalInterfaceHelper<global::Microsoft.Windows.Widgets.Providers.WidgetMessageReceivedArgs>.MarshalerArray CreateMarshalerArray(global::Microsoft.Windows.Widgets.Providers.WidgetMessageReceivedArgs[] array) => MarshalInterfaceHelper<global::Microsoft.Windows.Widgets.Providers.WidgetMessageReceivedArgs>.CreateMarshalerArray2(array, (o) => CreateMarshaler2(o));
        public static (int length, IntPtr data) GetAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.Windows.Widgets.Providers.WidgetMessageReceivedArgs>.GetAbiArray(box);
        public static unsafe global::Microsoft.Windows.Widgets.Providers.WidgetMessageReceivedArgs[] FromAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.Windows.Widgets.Providers.WidgetMessageReceivedArgs>.FromAbiArray(box, FromAbi);
        public static void CopyAbiArray(global::Microsoft.Windows.Widgets.Providers.WidgetMessageReceivedArgs[] array, object box) => MarshalInterfaceHelper<global::Microsoft.Windows.Widgets.Providers.WidgetMessageReceivedArgs>.CopyAbiArray(array, box, FromAbi);
        public static (int length, IntPtr data) FromManagedArray(global::Microsoft.Windows.Widgets.Providers.WidgetMessageReceivedArgs[] array) => MarshalInterfaceHelper<global::Microsoft.Windows.Widgets.Providers.WidgetMessageReceivedArgs>.FromManagedArray(array, (o) => FromManaged(o));
        public static void DisposeMarshaler(IObjectReference value) => MarshalInspectable<object>.DisposeMarshaler(value);
        public static void DisposeMarshalerArray(MarshalInterfaceHelper<global::Microsoft.Windows.Widgets.Providers.WidgetMessageReceivedArgs>.MarshalerArray array) => MarshalInterfaceHelper<global::Microsoft.Windows.Widgets.Providers.WidgetMessageReceivedArgs>.DisposeMarshalerArray(array);
        public static void DisposeAbi(IntPtr abi) => MarshalInspectable<object>.DisposeAbi(abi);
        public static unsafe void DisposeAbiArray(object box) => MarshalInspectable<object>.DisposeAbiArray(box);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    internal sealed class WidgetMessageReceivedArgsRcwFactoryAttribute : global::WinRT.WinRTImplementationTypeRcwFactoryAttribute
    {
        public override object CreateInstance(global::WinRT.IInspectable inspectable)
            => new global::Microsoft.Windows.Widgets.Providers.WidgetMessageReceivedArgs(inspectable.ObjRef);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    public struct WidgetResourceRequest
    {

        public static IObjectReference CreateMarshaler(global::Microsoft.Windows.Widgets.Providers.WidgetResourceRequest obj) => obj is null ? null : MarshalInspectable<global::Microsoft.Windows.Widgets.Providers.WidgetResourceRequest>.CreateMarshaler<IUnknownVftbl>(obj, global::ABI.Microsoft.Windows.Widgets.Providers.IWidgetResourceRequestMethods.IID);
        public static ObjectReferenceValue CreateMarshaler2(global::Microsoft.Windows.Widgets.Providers.WidgetResourceRequest obj) => MarshalInspectable<object>.CreateMarshaler2(obj, global::ABI.Microsoft.Windows.Widgets.Providers.IWidgetResourceRequestMethods.IID);
        public static IntPtr GetAbi(IObjectReference value) => value is null ? IntPtr.Zero : MarshalInterfaceHelper<object>.GetAbi(value);
        public static global::Microsoft.Windows.Widgets.Providers.WidgetResourceRequest FromAbi(IntPtr thisPtr) => global::Microsoft.Windows.Widgets.Providers.WidgetResourceRequest.FromAbi(thisPtr);
        public static IntPtr FromManaged(global::Microsoft.Windows.Widgets.Providers.WidgetResourceRequest obj) => obj is null ? IntPtr.Zero : CreateMarshaler2(obj).Detach();
        public static unsafe MarshalInterfaceHelper<global::Microsoft.Windows.Widgets.Providers.WidgetResourceRequest>.MarshalerArray CreateMarshalerArray(global::Microsoft.Windows.Widgets.Providers.WidgetResourceRequest[] array) => MarshalInterfaceHelper<global::Microsoft.Windows.Widgets.Providers.WidgetResourceRequest>.CreateMarshalerArray2(array, (o) => CreateMarshaler2(o));
        public static (int length, IntPtr data) GetAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.Windows.Widgets.Providers.WidgetResourceRequest>.GetAbiArray(box);
        public static unsafe global::Microsoft.Windows.Widgets.Providers.WidgetResourceRequest[] FromAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.Windows.Widgets.Providers.WidgetResourceRequest>.FromAbiArray(box, FromAbi);
        public static void CopyAbiArray(global::Microsoft.Windows.Widgets.Providers.WidgetResourceRequest[] array, object box) => MarshalInterfaceHelper<global::Microsoft.Windows.Widgets.Providers.WidgetResourceRequest>.CopyAbiArray(array, box, FromAbi);
        public static (int length, IntPtr data) FromManagedArray(global::Microsoft.Windows.Widgets.Providers.WidgetResourceRequest[] array) => MarshalInterfaceHelper<global::Microsoft.Windows.Widgets.Providers.WidgetResourceRequest>.FromManagedArray(array, (o) => FromManaged(o));
        public static void DisposeMarshaler(IObjectReference value) => MarshalInspectable<object>.DisposeMarshaler(value);
        public static void DisposeMarshalerArray(MarshalInterfaceHelper<global::Microsoft.Windows.Widgets.Providers.WidgetResourceRequest>.MarshalerArray array) => MarshalInterfaceHelper<global::Microsoft.Windows.Widgets.Providers.WidgetResourceRequest>.DisposeMarshalerArray(array);
        public static void DisposeAbi(IntPtr abi) => MarshalInspectable<object>.DisposeAbi(abi);
        public static unsafe void DisposeAbiArray(object box) => MarshalInspectable<object>.DisposeAbiArray(box);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    internal sealed class WidgetResourceRequestRcwFactoryAttribute : global::WinRT.WinRTImplementationTypeRcwFactoryAttribute
    {
        public override object CreateInstance(global::WinRT.IInspectable inspectable)
            => new global::Microsoft.Windows.Widgets.Providers.WidgetResourceRequest(inspectable.ObjRef);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    public struct WidgetResourceRequestedArgs
    {

        public static IObjectReference CreateMarshaler(global::Microsoft.Windows.Widgets.Providers.WidgetResourceRequestedArgs obj) => obj is null ? null : MarshalInspectable<global::Microsoft.Windows.Widgets.Providers.WidgetResourceRequestedArgs>.CreateMarshaler<IUnknownVftbl>(obj, global::ABI.Microsoft.Windows.Widgets.Providers.IWidgetResourceRequestedArgsMethods.IID);
        public static ObjectReferenceValue CreateMarshaler2(global::Microsoft.Windows.Widgets.Providers.WidgetResourceRequestedArgs obj) => MarshalInspectable<object>.CreateMarshaler2(obj, global::ABI.Microsoft.Windows.Widgets.Providers.IWidgetResourceRequestedArgsMethods.IID);
        public static IntPtr GetAbi(IObjectReference value) => value is null ? IntPtr.Zero : MarshalInterfaceHelper<object>.GetAbi(value);
        public static global::Microsoft.Windows.Widgets.Providers.WidgetResourceRequestedArgs FromAbi(IntPtr thisPtr) => global::Microsoft.Windows.Widgets.Providers.WidgetResourceRequestedArgs.FromAbi(thisPtr);
        public static IntPtr FromManaged(global::Microsoft.Windows.Widgets.Providers.WidgetResourceRequestedArgs obj) => obj is null ? IntPtr.Zero : CreateMarshaler2(obj).Detach();
        public static unsafe MarshalInterfaceHelper<global::Microsoft.Windows.Widgets.Providers.WidgetResourceRequestedArgs>.MarshalerArray CreateMarshalerArray(global::Microsoft.Windows.Widgets.Providers.WidgetResourceRequestedArgs[] array) => MarshalInterfaceHelper<global::Microsoft.Windows.Widgets.Providers.WidgetResourceRequestedArgs>.CreateMarshalerArray2(array, (o) => CreateMarshaler2(o));
        public static (int length, IntPtr data) GetAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.Windows.Widgets.Providers.WidgetResourceRequestedArgs>.GetAbiArray(box);
        public static unsafe global::Microsoft.Windows.Widgets.Providers.WidgetResourceRequestedArgs[] FromAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.Windows.Widgets.Providers.WidgetResourceRequestedArgs>.FromAbiArray(box, FromAbi);
        public static void CopyAbiArray(global::Microsoft.Windows.Widgets.Providers.WidgetResourceRequestedArgs[] array, object box) => MarshalInterfaceHelper<global::Microsoft.Windows.Widgets.Providers.WidgetResourceRequestedArgs>.CopyAbiArray(array, box, FromAbi);
        public static (int length, IntPtr data) FromManagedArray(global::Microsoft.Windows.Widgets.Providers.WidgetResourceRequestedArgs[] array) => MarshalInterfaceHelper<global::Microsoft.Windows.Widgets.Providers.WidgetResourceRequestedArgs>.FromManagedArray(array, (o) => FromManaged(o));
        public static void DisposeMarshaler(IObjectReference value) => MarshalInspectable<object>.DisposeMarshaler(value);
        public static void DisposeMarshalerArray(MarshalInterfaceHelper<global::Microsoft.Windows.Widgets.Providers.WidgetResourceRequestedArgs>.MarshalerArray array) => MarshalInterfaceHelper<global::Microsoft.Windows.Widgets.Providers.WidgetResourceRequestedArgs>.DisposeMarshalerArray(array);
        public static void DisposeAbi(IntPtr abi) => MarshalInspectable<object>.DisposeAbi(abi);
        public static unsafe void DisposeAbiArray(object box) => MarshalInspectable<object>.DisposeAbiArray(box);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    internal sealed class WidgetResourceRequestedArgsRcwFactoryAttribute : global::WinRT.WinRTImplementationTypeRcwFactoryAttribute
    {
        public override object CreateInstance(global::WinRT.IInspectable inspectable)
            => new global::Microsoft.Windows.Widgets.Providers.WidgetResourceRequestedArgs(inspectable.ObjRef);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    public struct WidgetResourceResponse
    {

        public static IObjectReference CreateMarshaler(global::Microsoft.Windows.Widgets.Providers.WidgetResourceResponse obj) => obj is null ? null : MarshalInspectable<global::Microsoft.Windows.Widgets.Providers.WidgetResourceResponse>.CreateMarshaler<IUnknownVftbl>(obj, global::ABI.Microsoft.Windows.Widgets.Providers.IWidgetResourceResponseMethods.IID);
        public static ObjectReferenceValue CreateMarshaler2(global::Microsoft.Windows.Widgets.Providers.WidgetResourceResponse obj) => MarshalInspectable<object>.CreateMarshaler2(obj, global::ABI.Microsoft.Windows.Widgets.Providers.IWidgetResourceResponseMethods.IID);
        public static IntPtr GetAbi(IObjectReference value) => value is null ? IntPtr.Zero : MarshalInterfaceHelper<object>.GetAbi(value);
        public static global::Microsoft.Windows.Widgets.Providers.WidgetResourceResponse FromAbi(IntPtr thisPtr) => global::Microsoft.Windows.Widgets.Providers.WidgetResourceResponse.FromAbi(thisPtr);
        public static IntPtr FromManaged(global::Microsoft.Windows.Widgets.Providers.WidgetResourceResponse obj) => obj is null ? IntPtr.Zero : CreateMarshaler2(obj).Detach();
        public static unsafe MarshalInterfaceHelper<global::Microsoft.Windows.Widgets.Providers.WidgetResourceResponse>.MarshalerArray CreateMarshalerArray(global::Microsoft.Windows.Widgets.Providers.WidgetResourceResponse[] array) => MarshalInterfaceHelper<global::Microsoft.Windows.Widgets.Providers.WidgetResourceResponse>.CreateMarshalerArray2(array, (o) => CreateMarshaler2(o));
        public static (int length, IntPtr data) GetAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.Windows.Widgets.Providers.WidgetResourceResponse>.GetAbiArray(box);
        public static unsafe global::Microsoft.Windows.Widgets.Providers.WidgetResourceResponse[] FromAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.Windows.Widgets.Providers.WidgetResourceResponse>.FromAbiArray(box, FromAbi);
        public static void CopyAbiArray(global::Microsoft.Windows.Widgets.Providers.WidgetResourceResponse[] array, object box) => MarshalInterfaceHelper<global::Microsoft.Windows.Widgets.Providers.WidgetResourceResponse>.CopyAbiArray(array, box, FromAbi);
        public static (int length, IntPtr data) FromManagedArray(global::Microsoft.Windows.Widgets.Providers.WidgetResourceResponse[] array) => MarshalInterfaceHelper<global::Microsoft.Windows.Widgets.Providers.WidgetResourceResponse>.FromManagedArray(array, (o) => FromManaged(o));
        public static void DisposeMarshaler(IObjectReference value) => MarshalInspectable<object>.DisposeMarshaler(value);
        public static void DisposeMarshalerArray(MarshalInterfaceHelper<global::Microsoft.Windows.Widgets.Providers.WidgetResourceResponse>.MarshalerArray array) => MarshalInterfaceHelper<global::Microsoft.Windows.Widgets.Providers.WidgetResourceResponse>.DisposeMarshalerArray(array);
        public static void DisposeAbi(IntPtr abi) => MarshalInspectable<object>.DisposeAbi(abi);
        public static unsafe void DisposeAbiArray(object box) => MarshalInspectable<object>.DisposeAbiArray(box);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    internal sealed class WidgetResourceResponseRcwFactoryAttribute : global::WinRT.WinRTImplementationTypeRcwFactoryAttribute
    {
        public override object CreateInstance(global::WinRT.IInspectable inspectable)
            => new global::Microsoft.Windows.Widgets.Providers.WidgetResourceResponse(inspectable.ObjRef);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    public struct WidgetUpdateRequestOptions
    {

        public static IObjectReference CreateMarshaler(global::Microsoft.Windows.Widgets.Providers.WidgetUpdateRequestOptions obj) => obj is null ? null : MarshalInspectable<global::Microsoft.Windows.Widgets.Providers.WidgetUpdateRequestOptions>.CreateMarshaler<IUnknownVftbl>(obj, global::ABI.Microsoft.Windows.Widgets.Providers.IWidgetUpdateRequestOptionsMethods.IID);
        public static ObjectReferenceValue CreateMarshaler2(global::Microsoft.Windows.Widgets.Providers.WidgetUpdateRequestOptions obj) => MarshalInspectable<object>.CreateMarshaler2(obj, global::ABI.Microsoft.Windows.Widgets.Providers.IWidgetUpdateRequestOptionsMethods.IID);
        public static IntPtr GetAbi(IObjectReference value) => value is null ? IntPtr.Zero : MarshalInterfaceHelper<object>.GetAbi(value);
        public static global::Microsoft.Windows.Widgets.Providers.WidgetUpdateRequestOptions FromAbi(IntPtr thisPtr) => global::Microsoft.Windows.Widgets.Providers.WidgetUpdateRequestOptions.FromAbi(thisPtr);
        public static IntPtr FromManaged(global::Microsoft.Windows.Widgets.Providers.WidgetUpdateRequestOptions obj) => obj is null ? IntPtr.Zero : CreateMarshaler2(obj).Detach();
        public static unsafe MarshalInterfaceHelper<global::Microsoft.Windows.Widgets.Providers.WidgetUpdateRequestOptions>.MarshalerArray CreateMarshalerArray(global::Microsoft.Windows.Widgets.Providers.WidgetUpdateRequestOptions[] array) => MarshalInterfaceHelper<global::Microsoft.Windows.Widgets.Providers.WidgetUpdateRequestOptions>.CreateMarshalerArray2(array, (o) => CreateMarshaler2(o));
        public static (int length, IntPtr data) GetAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.Windows.Widgets.Providers.WidgetUpdateRequestOptions>.GetAbiArray(box);
        public static unsafe global::Microsoft.Windows.Widgets.Providers.WidgetUpdateRequestOptions[] FromAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.Windows.Widgets.Providers.WidgetUpdateRequestOptions>.FromAbiArray(box, FromAbi);
        public static void CopyAbiArray(global::Microsoft.Windows.Widgets.Providers.WidgetUpdateRequestOptions[] array, object box) => MarshalInterfaceHelper<global::Microsoft.Windows.Widgets.Providers.WidgetUpdateRequestOptions>.CopyAbiArray(array, box, FromAbi);
        public static (int length, IntPtr data) FromManagedArray(global::Microsoft.Windows.Widgets.Providers.WidgetUpdateRequestOptions[] array) => MarshalInterfaceHelper<global::Microsoft.Windows.Widgets.Providers.WidgetUpdateRequestOptions>.FromManagedArray(array, (o) => FromManaged(o));
        public static void DisposeMarshaler(IObjectReference value) => MarshalInspectable<object>.DisposeMarshaler(value);
        public static void DisposeMarshalerArray(MarshalInterfaceHelper<global::Microsoft.Windows.Widgets.Providers.WidgetUpdateRequestOptions>.MarshalerArray array) => MarshalInterfaceHelper<global::Microsoft.Windows.Widgets.Providers.WidgetUpdateRequestOptions>.DisposeMarshalerArray(array);
        public static void DisposeAbi(IntPtr abi) => MarshalInspectable<object>.DisposeAbi(abi);
        public static unsafe void DisposeAbiArray(object box) => MarshalInspectable<object>.DisposeAbiArray(box);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    internal sealed class WidgetUpdateRequestOptionsRcwFactoryAttribute : global::WinRT.WinRTImplementationTypeRcwFactoryAttribute
    {
        public override object CreateInstance(global::WinRT.IInspectable inspectable)
            => new global::Microsoft.Windows.Widgets.Providers.WidgetUpdateRequestOptions(inspectable.ObjRef);
    }
}
#pragma warning restore CA1416
