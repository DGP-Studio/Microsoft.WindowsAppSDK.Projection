//------------------------------------------------------------------------------
// <auto-generated>
//     This file was generated by cswinrt.exe version 2.2.0.241111.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Diagnostics;
using System.Diagnostics.CodeAnalysis;
using System.Linq.Expressions;
using System.Reflection;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;
using WinRT;
using WinRT.Interop;


#pragma warning disable 0169 // warning CS0169: The field '...' is never used
#pragma warning disable 0649 // warning CS0169: Field '...' is never assigned to
#pragma warning disable CA2207, CA1063, CA1033, CA1001, CA2213

namespace Microsoft.Windows.ApplicationModel.DynamicDependency
{
    [global::WinRT.WindowsRuntimeType("Microsoft.Windows.ApplicationModel.DynamicDependency")]
    [global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.Windows.ApplicationModel.DynamicDependency.AddPackageDependencyOptions))]
    [global::ABI.Microsoft.Windows.ApplicationModel.DynamicDependency.AddPackageDependencyOptionsRcwFactory]
    [global::WinRT.ProjectedRuntimeClass(typeof(IAddPackageDependencyOptions))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(DynamicDependencyContract), 65536u)]
    public sealed class AddPackageDependencyOptions : global::System.Runtime.InteropServices.ICustomQueryInterface, IWinRTObject, IEquatable<AddPackageDependencyOptions>
    {
        private IntPtr ThisPtr => _inner == null ? (((IWinRTObject)this).NativeObject).ThisPtr : _inner.ThisPtr;

        private readonly IObjectReference _inner = null;



        private IObjectReference _objRef_global__Microsoft_Windows_ApplicationModel_DynamicDependency_IAddPackageDependencyOptions => _inner;


        private static volatile IObjectReference ___objRef_global__Microsoft_Windows_ApplicationModel_DynamicDependency_AddPackageDependencyOptions;
        private static IObjectReference _objRef_global__Microsoft_Windows_ApplicationModel_DynamicDependency_AddPackageDependencyOptions
        {
            get
            { 
                var factory = ___objRef_global__Microsoft_Windows_ApplicationModel_DynamicDependency_AddPackageDependencyOptions;
                if (factory != null && factory.IsInCurrentContext)
                {
                    return factory;
                }
                else
                {
                    return ___objRef_global__Microsoft_Windows_ApplicationModel_DynamicDependency_AddPackageDependencyOptions = ActivationFactory.Get("Microsoft.Windows.ApplicationModel.DynamicDependency.AddPackageDependencyOptions");
                }
            }
        }

        public AddPackageDependencyOptions() 
        {
            _inner = global::ABI.WinRT.Interop.IActivationFactoryMethods.ActivateInstanceUnsafe(_objRef_global__Microsoft_Windows_ApplicationModel_DynamicDependency_AddPackageDependencyOptions, global::ABI.Microsoft.Windows.ApplicationModel.DynamicDependency.IAddPackageDependencyOptionsMethods.IID);
            ComWrappersSupport.RegisterObjectForInterface(this, ThisPtr);
            ComWrappersHelper.Init(_inner, false);

        }

        public static AddPackageDependencyOptions FromAbi(IntPtr thisPtr)
        {
            if (thisPtr == IntPtr.Zero) return null;
            return MarshalInspectable<AddPackageDependencyOptions>.FromAbi(thisPtr);
        }

        internal AddPackageDependencyOptions(IObjectReference objRef)
        {
            _inner = objRef.As(global::ABI.Microsoft.Windows.ApplicationModel.DynamicDependency.IAddPackageDependencyOptionsMethods.IID);

        }


        public static bool operator ==(AddPackageDependencyOptions x, AddPackageDependencyOptions y) => (x?.ThisPtr ?? IntPtr.Zero) == (y?.ThisPtr ?? IntPtr.Zero);
        public static bool operator !=(AddPackageDependencyOptions x, AddPackageDependencyOptions y) => !(x == y);
        public bool Equals(AddPackageDependencyOptions other) => this == other;
        public override bool Equals(object obj) => obj is AddPackageDependencyOptions that && this == that;
        public override int GetHashCode() => ThisPtr.GetHashCode();


        bool IWinRTObject.HasUnwrappableNativeObject => true;
        IObjectReference IWinRTObject.NativeObject => _inner;
        private volatile global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> _queryInterfaceCache;
        private global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> MakeQueryInterfaceCache()
        {
            global::System.Threading.Interlocked.CompareExchange(ref _queryInterfaceCache, new global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference>(), null); 
            return _queryInterfaceCache;
        }
        global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> IWinRTObject.QueryInterfaceCache => _queryInterfaceCache ?? MakeQueryInterfaceCache();
        private volatile global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> _additionalTypeData;
        private global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> MakeAdditionalTypeData()
        {
            global::System.Threading.Interlocked.CompareExchange(ref _additionalTypeData, new global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object>(), null); 
            return _additionalTypeData;
        }
        global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> IWinRTObject.AdditionalTypeData => _additionalTypeData ?? MakeAdditionalTypeData();

        private struct InterfaceTag<I>{};


        public bool PrependIfRankCollision
        {
            get => global::ABI.Microsoft.Windows.ApplicationModel.DynamicDependency.IAddPackageDependencyOptionsMethods.get_PrependIfRankCollision(_objRef_global__Microsoft_Windows_ApplicationModel_DynamicDependency_IAddPackageDependencyOptions);
            set => global::ABI.Microsoft.Windows.ApplicationModel.DynamicDependency.IAddPackageDependencyOptionsMethods.set_PrependIfRankCollision(_objRef_global__Microsoft_Windows_ApplicationModel_DynamicDependency_IAddPackageDependencyOptions, value);
        }

        public int Rank
        {
            get => global::ABI.Microsoft.Windows.ApplicationModel.DynamicDependency.IAddPackageDependencyOptionsMethods.get_Rank(_objRef_global__Microsoft_Windows_ApplicationModel_DynamicDependency_IAddPackageDependencyOptions);
            set => global::ABI.Microsoft.Windows.ApplicationModel.DynamicDependency.IAddPackageDependencyOptionsMethods.set_Rank(_objRef_global__Microsoft_Windows_ApplicationModel_DynamicDependency_IAddPackageDependencyOptions, value);
        }

        private bool IsOverridableInterface(Guid iid) => false;

        global::System.Runtime.InteropServices.CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(ref Guid iid, out IntPtr ppv)
        {
            ppv = IntPtr.Zero;
            if (IsOverridableInterface(iid) || global::WinRT.Interop.IID.IID_IInspectable == iid)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
            }

            if (((IWinRTObject)this).NativeObject.TryAs(iid, out ppv) >= 0)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.Handled;
            }

            return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
        }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.Windows.ApplicationModel.DynamicDependency")]
    [global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.Windows.ApplicationModel.DynamicDependency.CreatePackageDependencyOptions))]
    [global::ABI.Microsoft.Windows.ApplicationModel.DynamicDependency.CreatePackageDependencyOptionsRcwFactory]
    [global::WinRT.ProjectedRuntimeClass(typeof(ICreatePackageDependencyOptions))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(DynamicDependencyContract), 65536u)]
    public sealed class CreatePackageDependencyOptions : global::System.Runtime.InteropServices.ICustomQueryInterface, IWinRTObject, IEquatable<CreatePackageDependencyOptions>
    {
        private IntPtr ThisPtr => _inner == null ? (((IWinRTObject)this).NativeObject).ThisPtr : _inner.ThisPtr;

        private readonly IObjectReference _inner = null;



        private IObjectReference _objRef_global__Microsoft_Windows_ApplicationModel_DynamicDependency_ICreatePackageDependencyOptions => _inner;


        private static volatile IObjectReference ___objRef_global__Microsoft_Windows_ApplicationModel_DynamicDependency_CreatePackageDependencyOptions;
        private static IObjectReference _objRef_global__Microsoft_Windows_ApplicationModel_DynamicDependency_CreatePackageDependencyOptions
        {
            get
            { 
                var factory = ___objRef_global__Microsoft_Windows_ApplicationModel_DynamicDependency_CreatePackageDependencyOptions;
                if (factory != null && factory.IsInCurrentContext)
                {
                    return factory;
                }
                else
                {
                    return ___objRef_global__Microsoft_Windows_ApplicationModel_DynamicDependency_CreatePackageDependencyOptions = ActivationFactory.Get("Microsoft.Windows.ApplicationModel.DynamicDependency.CreatePackageDependencyOptions");
                }
            }
        }

        public CreatePackageDependencyOptions() 
        {
            _inner = global::ABI.WinRT.Interop.IActivationFactoryMethods.ActivateInstanceUnsafe(_objRef_global__Microsoft_Windows_ApplicationModel_DynamicDependency_CreatePackageDependencyOptions, global::ABI.Microsoft.Windows.ApplicationModel.DynamicDependency.ICreatePackageDependencyOptionsMethods.IID);
            ComWrappersSupport.RegisterObjectForInterface(this, ThisPtr);
            ComWrappersHelper.Init(_inner, false);

        }

        public static CreatePackageDependencyOptions FromAbi(IntPtr thisPtr)
        {
            if (thisPtr == IntPtr.Zero) return null;
            return MarshalInspectable<CreatePackageDependencyOptions>.FromAbi(thisPtr);
        }

        internal CreatePackageDependencyOptions(IObjectReference objRef)
        {
            _inner = objRef.As(global::ABI.Microsoft.Windows.ApplicationModel.DynamicDependency.ICreatePackageDependencyOptionsMethods.IID);

        }


        public static bool operator ==(CreatePackageDependencyOptions x, CreatePackageDependencyOptions y) => (x?.ThisPtr ?? IntPtr.Zero) == (y?.ThisPtr ?? IntPtr.Zero);
        public static bool operator !=(CreatePackageDependencyOptions x, CreatePackageDependencyOptions y) => !(x == y);
        public bool Equals(CreatePackageDependencyOptions other) => this == other;
        public override bool Equals(object obj) => obj is CreatePackageDependencyOptions that && this == that;
        public override int GetHashCode() => ThisPtr.GetHashCode();


        bool IWinRTObject.HasUnwrappableNativeObject => true;
        IObjectReference IWinRTObject.NativeObject => _inner;
        private volatile global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> _queryInterfaceCache;
        private global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> MakeQueryInterfaceCache()
        {
            global::System.Threading.Interlocked.CompareExchange(ref _queryInterfaceCache, new global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference>(), null); 
            return _queryInterfaceCache;
        }
        global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> IWinRTObject.QueryInterfaceCache => _queryInterfaceCache ?? MakeQueryInterfaceCache();
        private volatile global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> _additionalTypeData;
        private global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> MakeAdditionalTypeData()
        {
            global::System.Threading.Interlocked.CompareExchange(ref _additionalTypeData, new global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object>(), null); 
            return _additionalTypeData;
        }
        global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> IWinRTObject.AdditionalTypeData => _additionalTypeData ?? MakeAdditionalTypeData();

        private struct InterfaceTag<I>{};


        public PackageDependencyProcessorArchitectures Architectures
        {
            get => global::ABI.Microsoft.Windows.ApplicationModel.DynamicDependency.ICreatePackageDependencyOptionsMethods.get_Architectures(_objRef_global__Microsoft_Windows_ApplicationModel_DynamicDependency_ICreatePackageDependencyOptions);
            set => global::ABI.Microsoft.Windows.ApplicationModel.DynamicDependency.ICreatePackageDependencyOptionsMethods.set_Architectures(_objRef_global__Microsoft_Windows_ApplicationModel_DynamicDependency_ICreatePackageDependencyOptions, value);
        }

        public string LifetimeArtifact
        {
            get => global::ABI.Microsoft.Windows.ApplicationModel.DynamicDependency.ICreatePackageDependencyOptionsMethods.get_LifetimeArtifact(_objRef_global__Microsoft_Windows_ApplicationModel_DynamicDependency_ICreatePackageDependencyOptions);
            set => global::ABI.Microsoft.Windows.ApplicationModel.DynamicDependency.ICreatePackageDependencyOptionsMethods.set_LifetimeArtifact(_objRef_global__Microsoft_Windows_ApplicationModel_DynamicDependency_ICreatePackageDependencyOptions, value);
        }

        public PackageDependencyLifetimeArtifactKind LifetimeArtifactKind
        {
            get => global::ABI.Microsoft.Windows.ApplicationModel.DynamicDependency.ICreatePackageDependencyOptionsMethods.get_LifetimeArtifactKind(_objRef_global__Microsoft_Windows_ApplicationModel_DynamicDependency_ICreatePackageDependencyOptions);
            set => global::ABI.Microsoft.Windows.ApplicationModel.DynamicDependency.ICreatePackageDependencyOptionsMethods.set_LifetimeArtifactKind(_objRef_global__Microsoft_Windows_ApplicationModel_DynamicDependency_ICreatePackageDependencyOptions, value);
        }

        public bool VerifyDependencyResolution
        {
            get => global::ABI.Microsoft.Windows.ApplicationModel.DynamicDependency.ICreatePackageDependencyOptionsMethods.get_VerifyDependencyResolution(_objRef_global__Microsoft_Windows_ApplicationModel_DynamicDependency_ICreatePackageDependencyOptions);
            set => global::ABI.Microsoft.Windows.ApplicationModel.DynamicDependency.ICreatePackageDependencyOptionsMethods.set_VerifyDependencyResolution(_objRef_global__Microsoft_Windows_ApplicationModel_DynamicDependency_ICreatePackageDependencyOptions, value);
        }

        private bool IsOverridableInterface(Guid iid) => false;

        global::System.Runtime.InteropServices.CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(ref Guid iid, out IntPtr ppv)
        {
            ppv = IntPtr.Zero;
            if (IsOverridableInterface(iid) || global::WinRT.Interop.IID.IID_IInspectable == iid)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
            }

            if (((IWinRTObject)this).NativeObject.TryAs(iid, out ppv) >= 0)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.Handled;
            }

            return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
        }
    }
    [global::Windows.Foundation.Metadata.ContractVersion(131072u)]
    public enum DynamicDependencyContract
    {
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.Windows.ApplicationModel.DynamicDependency")][Guid("01B801FD-24E3-5E6B-9F1C-805AB410B604")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.Windows.ApplicationModel.DynamicDependency.IAddPackageDependencyOptions))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(DynamicDependencyContract), 65536u)]
    internal interface IAddPackageDependencyOptions
    {
        bool PrependIfRankCollision { get; set; }
        int Rank { get; set; }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.Windows.ApplicationModel.DynamicDependency")][Guid("CDBB820F-3C69-55DC-A017-B4132574C5D6")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.Windows.ApplicationModel.DynamicDependency.ICreatePackageDependencyOptions))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(DynamicDependencyContract), 65536u)]
    internal interface ICreatePackageDependencyOptions
    {
        PackageDependencyProcessorArchitectures Architectures { get; set; }
        string LifetimeArtifact { get; set; }
        PackageDependencyLifetimeArtifactKind LifetimeArtifactKind { get; set; }
        bool VerifyDependencyResolution { get; set; }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.Windows.ApplicationModel.DynamicDependency")][Guid("32AE7B95-E358-5A48-9669-C97D85AD6556")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.Windows.ApplicationModel.DynamicDependency.IPackageDependency))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(DynamicDependencyContract), 65536u)]
    internal interface IPackageDependency
    {
        void Delete();
        [global::Windows.Foundation.Metadata.Overload(@"Add")]
        PackageDependencyContext Add();
        [global::Windows.Foundation.Metadata.Overload(@"Add2")]
        PackageDependencyContext Add(AddPackageDependencyOptions options);
        string Id { get; }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.Windows.ApplicationModel.DynamicDependency")][Guid("9902C35A-A3F5-5645-AF0F-CDF9FCA00D5E")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.Windows.ApplicationModel.DynamicDependency.IPackageDependencyContext))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(DynamicDependencyContract), 65536u)]
    internal interface IPackageDependencyContext
    {
        void Remove();
        PackageDependencyContextId ContextId { get; }
        string PackageDependencyId { get; }
        string PackageFullName { get; }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.Windows.ApplicationModel.DynamicDependency")][Guid("9914F24F-BEBF-516B-ADAB-5C3E8BF323F8")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.Windows.ApplicationModel.DynamicDependency.IPackageDependencyContextFactory))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(DynamicDependencyContract), 65536u)]
    internal interface IPackageDependencyContextFactory
    {
        PackageDependencyContext CreateInstance(PackageDependencyContextId contextId);
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.Windows.ApplicationModel.DynamicDependency")][Guid("260583BD-A4AB-53FD-A190-C446BFDB5384")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.Windows.ApplicationModel.DynamicDependency.IPackageDependencyRankStatics))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(DynamicDependencyContract), 65536u)]
    internal interface IPackageDependencyRankStatics
    {
        int Default { get; }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.Windows.ApplicationModel.DynamicDependency")][Guid("17B656E1-1A58-5F3C-84A8-4430F6E749C2")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.Windows.ApplicationModel.DynamicDependency.IPackageDependencyStatics))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(DynamicDependencyContract), 65536u)]
    internal interface IPackageDependencyStatics
    {
        PackageDependency GetFromId(string id);
        PackageDependency GetFromIdForSystem(string id);
        [global::Windows.Foundation.Metadata.Overload(@"Create")]
        PackageDependency Create(string packageFamilyName, global::Windows.ApplicationModel.PackageVersion minVersion);
        [global::Windows.Foundation.Metadata.Overload(@"Create2")]
        PackageDependency Create(string packageFamilyName, global::Windows.ApplicationModel.PackageVersion minVersion, CreatePackageDependencyOptions options);
        PackageDependency CreateForSystem(string packageFamilyName, global::Windows.ApplicationModel.PackageVersion minVersion, CreatePackageDependencyOptions options);
        uint GenerationId { get; }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.Windows.ApplicationModel.DynamicDependency")][Guid("C7C6E4F3-C0CA-5FDB-BEF2-57E6020FFE4E")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.Windows.ApplicationModel.DynamicDependency.IPackageDependencyStatics2))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(DynamicDependencyContract), 131072u)]
    internal interface IPackageDependencyStatics2
    {
        uint PackageGraphRevisionId { get; }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.Windows.ApplicationModel.DynamicDependency")]
    [global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.Windows.ApplicationModel.DynamicDependency.PackageDependency))]
    [global::ABI.Microsoft.Windows.ApplicationModel.DynamicDependency.PackageDependencyRcwFactory]
    [global::WinRT.ProjectedRuntimeClass(typeof(IPackageDependency))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(DynamicDependencyContract), 65536u)]
    public sealed class PackageDependency : global::System.Runtime.InteropServices.ICustomQueryInterface, IWinRTObject, IEquatable<PackageDependency>
    {
        private IntPtr ThisPtr => _inner == null ? (((IWinRTObject)this).NativeObject).ThisPtr : _inner.ThisPtr;

        private readonly IObjectReference _inner = null;



        private IObjectReference _objRef_global__Microsoft_Windows_ApplicationModel_DynamicDependency_IPackageDependency => _inner;


        public static I As<I>() => ActivationFactory.Get("Microsoft.Windows.ApplicationModel.DynamicDependency.PackageDependency").AsInterface<I>();

        private static volatile IObjectReference ___objRef_global__Microsoft_Windows_ApplicationModel_DynamicDependency_IPackageDependencyStatics;
        private static IObjectReference _objRef_global__Microsoft_Windows_ApplicationModel_DynamicDependency_IPackageDependencyStatics
        {
            get
            { 
                var factory = ___objRef_global__Microsoft_Windows_ApplicationModel_DynamicDependency_IPackageDependencyStatics;
                if (factory != null && factory.IsInCurrentContext)
                {
                    return factory;
                }
                else
                {
                    return ___objRef_global__Microsoft_Windows_ApplicationModel_DynamicDependency_IPackageDependencyStatics = ActivationFactory.Get("Microsoft.Windows.ApplicationModel.DynamicDependency.PackageDependency", global::ABI.Microsoft.Windows.ApplicationModel.DynamicDependency.IPackageDependencyStaticsMethods.IID);
                }
            }
        }

        public static PackageDependency GetFromId(string id) => global::ABI.Microsoft.Windows.ApplicationModel.DynamicDependency.IPackageDependencyStaticsMethods.GetFromId(_objRef_global__Microsoft_Windows_ApplicationModel_DynamicDependency_IPackageDependencyStatics, id);

        public static PackageDependency GetFromIdForSystem(string id) => global::ABI.Microsoft.Windows.ApplicationModel.DynamicDependency.IPackageDependencyStaticsMethods.GetFromIdForSystem(_objRef_global__Microsoft_Windows_ApplicationModel_DynamicDependency_IPackageDependencyStatics, id);

        public static PackageDependency Create(string packageFamilyName, global::Windows.ApplicationModel.PackageVersion minVersion) => global::ABI.Microsoft.Windows.ApplicationModel.DynamicDependency.IPackageDependencyStaticsMethods.Create(_objRef_global__Microsoft_Windows_ApplicationModel_DynamicDependency_IPackageDependencyStatics, packageFamilyName, minVersion);

        public static PackageDependency Create(string packageFamilyName, global::Windows.ApplicationModel.PackageVersion minVersion, CreatePackageDependencyOptions options) => global::ABI.Microsoft.Windows.ApplicationModel.DynamicDependency.IPackageDependencyStaticsMethods.Create(_objRef_global__Microsoft_Windows_ApplicationModel_DynamicDependency_IPackageDependencyStatics, packageFamilyName, minVersion, options);

        public static PackageDependency CreateForSystem(string packageFamilyName, global::Windows.ApplicationModel.PackageVersion minVersion, CreatePackageDependencyOptions options) => global::ABI.Microsoft.Windows.ApplicationModel.DynamicDependency.IPackageDependencyStaticsMethods.CreateForSystem(_objRef_global__Microsoft_Windows_ApplicationModel_DynamicDependency_IPackageDependencyStatics, packageFamilyName, minVersion, options);

        private static volatile IObjectReference ___objRef_global__Microsoft_Windows_ApplicationModel_DynamicDependency_IPackageDependencyStatics2;
        private static IObjectReference _objRef_global__Microsoft_Windows_ApplicationModel_DynamicDependency_IPackageDependencyStatics2
        {
            get
            { 
                var factory = ___objRef_global__Microsoft_Windows_ApplicationModel_DynamicDependency_IPackageDependencyStatics2;
                if (factory != null && factory.IsInCurrentContext)
                {
                    return factory;
                }
                else
                {
                    return ___objRef_global__Microsoft_Windows_ApplicationModel_DynamicDependency_IPackageDependencyStatics2 = ActivationFactory.Get("Microsoft.Windows.ApplicationModel.DynamicDependency.PackageDependency", global::ABI.Microsoft.Windows.ApplicationModel.DynamicDependency.IPackageDependencyStatics2Methods.IID);
                }
            }
        }

        public static uint GenerationId => global::ABI.Microsoft.Windows.ApplicationModel.DynamicDependency.IPackageDependencyStaticsMethods.get_GenerationId(_objRef_global__Microsoft_Windows_ApplicationModel_DynamicDependency_IPackageDependencyStatics);

        public static uint PackageGraphRevisionId => global::ABI.Microsoft.Windows.ApplicationModel.DynamicDependency.IPackageDependencyStatics2Methods.get_PackageGraphRevisionId(_objRef_global__Microsoft_Windows_ApplicationModel_DynamicDependency_IPackageDependencyStatics2);

        public static PackageDependency FromAbi(IntPtr thisPtr)
        {
            if (thisPtr == IntPtr.Zero) return null;
            return MarshalInspectable<PackageDependency>.FromAbi(thisPtr);
        }

        internal PackageDependency(IObjectReference objRef)
        {
            _inner = objRef.As(global::ABI.Microsoft.Windows.ApplicationModel.DynamicDependency.IPackageDependencyMethods.IID);

        }


        public static bool operator ==(PackageDependency x, PackageDependency y) => (x?.ThisPtr ?? IntPtr.Zero) == (y?.ThisPtr ?? IntPtr.Zero);
        public static bool operator !=(PackageDependency x, PackageDependency y) => !(x == y);
        public bool Equals(PackageDependency other) => this == other;
        public override bool Equals(object obj) => obj is PackageDependency that && this == that;
        public override int GetHashCode() => ThisPtr.GetHashCode();


        bool IWinRTObject.HasUnwrappableNativeObject => true;
        IObjectReference IWinRTObject.NativeObject => _inner;
        private volatile global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> _queryInterfaceCache;
        private global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> MakeQueryInterfaceCache()
        {
            global::System.Threading.Interlocked.CompareExchange(ref _queryInterfaceCache, new global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference>(), null); 
            return _queryInterfaceCache;
        }
        global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> IWinRTObject.QueryInterfaceCache => _queryInterfaceCache ?? MakeQueryInterfaceCache();
        private volatile global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> _additionalTypeData;
        private global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> MakeAdditionalTypeData()
        {
            global::System.Threading.Interlocked.CompareExchange(ref _additionalTypeData, new global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object>(), null); 
            return _additionalTypeData;
        }
        global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> IWinRTObject.AdditionalTypeData => _additionalTypeData ?? MakeAdditionalTypeData();

        private struct InterfaceTag<I>{};


        public void Delete() => global::ABI.Microsoft.Windows.ApplicationModel.DynamicDependency.IPackageDependencyMethods.Delete(_objRef_global__Microsoft_Windows_ApplicationModel_DynamicDependency_IPackageDependency);

        public PackageDependencyContext Add() => global::ABI.Microsoft.Windows.ApplicationModel.DynamicDependency.IPackageDependencyMethods.Add(_objRef_global__Microsoft_Windows_ApplicationModel_DynamicDependency_IPackageDependency);

        public PackageDependencyContext Add(AddPackageDependencyOptions options) => global::ABI.Microsoft.Windows.ApplicationModel.DynamicDependency.IPackageDependencyMethods.Add(_objRef_global__Microsoft_Windows_ApplicationModel_DynamicDependency_IPackageDependency, options);

        public string Id => global::ABI.Microsoft.Windows.ApplicationModel.DynamicDependency.IPackageDependencyMethods.get_Id(_objRef_global__Microsoft_Windows_ApplicationModel_DynamicDependency_IPackageDependency);

        private bool IsOverridableInterface(Guid iid) => false;

        global::System.Runtime.InteropServices.CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(ref Guid iid, out IntPtr ppv)
        {
            ppv = IntPtr.Zero;
            if (IsOverridableInterface(iid) || global::WinRT.Interop.IID.IID_IInspectable == iid)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
            }

            if (((IWinRTObject)this).NativeObject.TryAs(iid, out ppv) >= 0)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.Handled;
            }

            return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
        }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.Windows.ApplicationModel.DynamicDependency")]
    [global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.Windows.ApplicationModel.DynamicDependency.PackageDependencyContext))]
    [global::ABI.Microsoft.Windows.ApplicationModel.DynamicDependency.PackageDependencyContextRcwFactory]
    [global::WinRT.ProjectedRuntimeClass(typeof(IPackageDependencyContext))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(DynamicDependencyContract), 65536u)]
    public sealed class PackageDependencyContext : global::System.Runtime.InteropServices.ICustomQueryInterface, IWinRTObject, IEquatable<PackageDependencyContext>
    {
        private IntPtr ThisPtr => _inner == null ? (((IWinRTObject)this).NativeObject).ThisPtr : _inner.ThisPtr;

        private readonly IObjectReference _inner = null;



        private IObjectReference _objRef_global__Microsoft_Windows_ApplicationModel_DynamicDependency_IPackageDependencyContext => _inner;


        private static class _IPackageDependencyContextFactoryMethods
        {
            public static unsafe IntPtr CreateInstance(IObjectReference _obj, PackageDependencyContextId contextId)
            {
                var ThisPtr = _obj.ThisPtr;

                IntPtr __retval = default;
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, PackageDependencyContextId, IntPtr*, int>**)ThisPtr)[6](ThisPtr, contextId, &__retval));
                global::System.GC.KeepAlive(_obj);
                return __retval;
            }
        }

        private static volatile IObjectReference ___objRef_global__Microsoft_Windows_ApplicationModel_DynamicDependency_IPackageDependencyContextFactory;
        private static IObjectReference _objRef_global__Microsoft_Windows_ApplicationModel_DynamicDependency_IPackageDependencyContextFactory
        {
            get
            { 
                var factory = ___objRef_global__Microsoft_Windows_ApplicationModel_DynamicDependency_IPackageDependencyContextFactory;
                if (factory != null && factory.IsInCurrentContext)
                {
                    return factory;
                }
                else
                {
                    return ___objRef_global__Microsoft_Windows_ApplicationModel_DynamicDependency_IPackageDependencyContextFactory = ActivationFactory.Get("Microsoft.Windows.ApplicationModel.DynamicDependency.PackageDependencyContext", global::ABI.Microsoft.Windows.ApplicationModel.DynamicDependency.IPackageDependencyContextFactoryMethods.IID);
                }
            }
        }

        public PackageDependencyContext(PackageDependencyContextId contextId) 
        { 
        IntPtr ptr = (_IPackageDependencyContextFactoryMethods.CreateInstance(_objRef_global__Microsoft_Windows_ApplicationModel_DynamicDependency_IPackageDependencyContextFactory, contextId)); 
        try 
        { 
        _inner = ComWrappersSupport.GetObjectReferenceForInterface(ptr, global::ABI.Microsoft.Windows.ApplicationModel.DynamicDependency.IPackageDependencyContextMethods.IID, false); 

        } 
        finally 
        { 
        MarshalInspectable<object>.DisposeAbi(ptr); 
        }

        ComWrappersSupport.RegisterObjectForInterface(this, ThisPtr);
        ComWrappersHelper.Init(_inner, false);
        }

        public static PackageDependencyContext FromAbi(IntPtr thisPtr)
        {
            if (thisPtr == IntPtr.Zero) return null;
            return MarshalInspectable<PackageDependencyContext>.FromAbi(thisPtr);
        }

        internal PackageDependencyContext(IObjectReference objRef)
        {
            _inner = objRef.As(global::ABI.Microsoft.Windows.ApplicationModel.DynamicDependency.IPackageDependencyContextMethods.IID);

        }


        public static bool operator ==(PackageDependencyContext x, PackageDependencyContext y) => (x?.ThisPtr ?? IntPtr.Zero) == (y?.ThisPtr ?? IntPtr.Zero);
        public static bool operator !=(PackageDependencyContext x, PackageDependencyContext y) => !(x == y);
        public bool Equals(PackageDependencyContext other) => this == other;
        public override bool Equals(object obj) => obj is PackageDependencyContext that && this == that;
        public override int GetHashCode() => ThisPtr.GetHashCode();


        bool IWinRTObject.HasUnwrappableNativeObject => true;
        IObjectReference IWinRTObject.NativeObject => _inner;
        private volatile global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> _queryInterfaceCache;
        private global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> MakeQueryInterfaceCache()
        {
            global::System.Threading.Interlocked.CompareExchange(ref _queryInterfaceCache, new global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference>(), null); 
            return _queryInterfaceCache;
        }
        global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> IWinRTObject.QueryInterfaceCache => _queryInterfaceCache ?? MakeQueryInterfaceCache();
        private volatile global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> _additionalTypeData;
        private global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> MakeAdditionalTypeData()
        {
            global::System.Threading.Interlocked.CompareExchange(ref _additionalTypeData, new global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object>(), null); 
            return _additionalTypeData;
        }
        global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> IWinRTObject.AdditionalTypeData => _additionalTypeData ?? MakeAdditionalTypeData();

        private struct InterfaceTag<I>{};


        public void Remove() => global::ABI.Microsoft.Windows.ApplicationModel.DynamicDependency.IPackageDependencyContextMethods.Remove(_objRef_global__Microsoft_Windows_ApplicationModel_DynamicDependency_IPackageDependencyContext);

        public PackageDependencyContextId ContextId => global::ABI.Microsoft.Windows.ApplicationModel.DynamicDependency.IPackageDependencyContextMethods.get_ContextId(_objRef_global__Microsoft_Windows_ApplicationModel_DynamicDependency_IPackageDependencyContext);

        public string PackageDependencyId => global::ABI.Microsoft.Windows.ApplicationModel.DynamicDependency.IPackageDependencyContextMethods.get_PackageDependencyId(_objRef_global__Microsoft_Windows_ApplicationModel_DynamicDependency_IPackageDependencyContext);

        public string PackageFullName => global::ABI.Microsoft.Windows.ApplicationModel.DynamicDependency.IPackageDependencyContextMethods.get_PackageFullName(_objRef_global__Microsoft_Windows_ApplicationModel_DynamicDependency_IPackageDependencyContext);

        private bool IsOverridableInterface(Guid iid) => false;

        global::System.Runtime.InteropServices.CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(ref Guid iid, out IntPtr ppv)
        {
            ppv = IntPtr.Zero;
            if (IsOverridableInterface(iid) || global::WinRT.Interop.IID.IID_IInspectable == iid)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
            }

            if (((IWinRTObject)this).NativeObject.TryAs(iid, out ppv) >= 0)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.Handled;
            }

            return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
        }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.Windows.ApplicationModel.DynamicDependency", "struct(Microsoft.Windows.ApplicationModel.DynamicDependency.PackageDependencyContextId;u8)")][global::WinRT.WindowsRuntimeHelperType][global::WinRT.WinRTExposedType(typeof(global::WinRT.StructTypeDetails<PackageDependencyContextId, PackageDependencyContextId>))][global::Windows.Foundation.Metadata.ContractVersion(typeof(DynamicDependencyContract), 65536u)]
    public struct PackageDependencyContextId: IEquatable<PackageDependencyContextId>
    {
        public ulong Id;

        public PackageDependencyContextId(ulong _Id)
        {
            Id = _Id; 
        }

        public static bool operator ==(PackageDependencyContextId x, PackageDependencyContextId y) => x.Id == y.Id;
        public static bool operator !=(PackageDependencyContextId x, PackageDependencyContextId y) => !(x == y);
        public bool Equals(PackageDependencyContextId other) => this == other;
        public override bool Equals(object obj) => obj is PackageDependencyContextId that && this == that;
        public override int GetHashCode() => Id.GetHashCode();
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.Windows.ApplicationModel.DynamicDependency")][global::WinRT.WinRTExposedType(typeof(global::WinRT.EnumTypeDetails<PackageDependencyLifetimeArtifactKind>))][global::Windows.Foundation.Metadata.ContractVersion(typeof(DynamicDependencyContract), 65536u)]
    public enum PackageDependencyLifetimeArtifactKind : int
    {
        Process = unchecked((int)0),
        FilePath = unchecked((int)0x1),
        RegistryKey = unchecked((int)0x2),
    }
    [FlagsAttribute]
    [global::WinRT.WindowsRuntimeType("Microsoft.Windows.ApplicationModel.DynamicDependency")][global::WinRT.WinRTExposedType(typeof(global::WinRT.EnumTypeDetails<PackageDependencyProcessorArchitectures>))][global::Windows.Foundation.Metadata.ContractVersion(typeof(DynamicDependencyContract), 65536u)]
    public enum PackageDependencyProcessorArchitectures : uint
    {
        None = unchecked((uint)0),
        Neutral = unchecked((uint)0x1),
        X86 = unchecked((uint)0x2),
        X64 = unchecked((uint)0x4),
        Arm = unchecked((uint)0x8),
        Arm64 = unchecked((uint)0x10),
        X86OnArm64 = unchecked((uint)0x20),
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.Windows.ApplicationModel.DynamicDependency")][global::Windows.Foundation.Metadata.ContractVersion(typeof(DynamicDependencyContract), 65536u)]
    public static class PackageDependencyRank
    {

        public static I As<I>() => ActivationFactory.Get("Microsoft.Windows.ApplicationModel.DynamicDependency.PackageDependencyRank").AsInterface<I>();

        private static volatile IObjectReference ___objRef_global__Microsoft_Windows_ApplicationModel_DynamicDependency_IPackageDependencyRankStatics;
        private static IObjectReference _objRef_global__Microsoft_Windows_ApplicationModel_DynamicDependency_IPackageDependencyRankStatics
        {
            get
            { 
                var factory = ___objRef_global__Microsoft_Windows_ApplicationModel_DynamicDependency_IPackageDependencyRankStatics;
                if (factory != null && factory.IsInCurrentContext)
                {
                    return factory;
                }
                else
                {
                    return ___objRef_global__Microsoft_Windows_ApplicationModel_DynamicDependency_IPackageDependencyRankStatics = ActivationFactory.Get("Microsoft.Windows.ApplicationModel.DynamicDependency.PackageDependencyRank", global::ABI.Microsoft.Windows.ApplicationModel.DynamicDependency.IPackageDependencyRankStaticsMethods.IID);
                }
            }
        }

        public static int Default => global::ABI.Microsoft.Windows.ApplicationModel.DynamicDependency.IPackageDependencyRankStaticsMethods.get_Default(_objRef_global__Microsoft_Windows_ApplicationModel_DynamicDependency_IPackageDependencyRankStatics);
    }
}

#pragma warning disable CA1416
namespace ABI.Microsoft.Windows.ApplicationModel.DynamicDependency
{
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    public struct AddPackageDependencyOptions
    {

        public static IObjectReference CreateMarshaler(global::Microsoft.Windows.ApplicationModel.DynamicDependency.AddPackageDependencyOptions obj) => obj is null ? null : MarshalInspectable<global::Microsoft.Windows.ApplicationModel.DynamicDependency.AddPackageDependencyOptions>.CreateMarshaler<IUnknownVftbl>(obj, global::ABI.Microsoft.Windows.ApplicationModel.DynamicDependency.IAddPackageDependencyOptionsMethods.IID);
        public static ObjectReferenceValue CreateMarshaler2(global::Microsoft.Windows.ApplicationModel.DynamicDependency.AddPackageDependencyOptions obj) => MarshalInspectable<object>.CreateMarshaler2(obj, global::ABI.Microsoft.Windows.ApplicationModel.DynamicDependency.IAddPackageDependencyOptionsMethods.IID);
        public static IntPtr GetAbi(IObjectReference value) => value is null ? IntPtr.Zero : MarshalInterfaceHelper<object>.GetAbi(value);
        public static global::Microsoft.Windows.ApplicationModel.DynamicDependency.AddPackageDependencyOptions FromAbi(IntPtr thisPtr) => global::Microsoft.Windows.ApplicationModel.DynamicDependency.AddPackageDependencyOptions.FromAbi(thisPtr);
        public static IntPtr FromManaged(global::Microsoft.Windows.ApplicationModel.DynamicDependency.AddPackageDependencyOptions obj) => obj is null ? IntPtr.Zero : CreateMarshaler2(obj).Detach();
        public static unsafe MarshalInterfaceHelper<global::Microsoft.Windows.ApplicationModel.DynamicDependency.AddPackageDependencyOptions>.MarshalerArray CreateMarshalerArray(global::Microsoft.Windows.ApplicationModel.DynamicDependency.AddPackageDependencyOptions[] array) => MarshalInterfaceHelper<global::Microsoft.Windows.ApplicationModel.DynamicDependency.AddPackageDependencyOptions>.CreateMarshalerArray2(array, (o) => CreateMarshaler2(o));
        public static (int length, IntPtr data) GetAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.Windows.ApplicationModel.DynamicDependency.AddPackageDependencyOptions>.GetAbiArray(box);
        public static unsafe global::Microsoft.Windows.ApplicationModel.DynamicDependency.AddPackageDependencyOptions[] FromAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.Windows.ApplicationModel.DynamicDependency.AddPackageDependencyOptions>.FromAbiArray(box, FromAbi);
        public static void CopyAbiArray(global::Microsoft.Windows.ApplicationModel.DynamicDependency.AddPackageDependencyOptions[] array, object box) => MarshalInterfaceHelper<global::Microsoft.Windows.ApplicationModel.DynamicDependency.AddPackageDependencyOptions>.CopyAbiArray(array, box, FromAbi);
        public static (int length, IntPtr data) FromManagedArray(global::Microsoft.Windows.ApplicationModel.DynamicDependency.AddPackageDependencyOptions[] array) => MarshalInterfaceHelper<global::Microsoft.Windows.ApplicationModel.DynamicDependency.AddPackageDependencyOptions>.FromManagedArray(array, (o) => FromManaged(o));
        public static void DisposeMarshaler(IObjectReference value) => MarshalInspectable<object>.DisposeMarshaler(value);
        public static void DisposeMarshalerArray(MarshalInterfaceHelper<global::Microsoft.Windows.ApplicationModel.DynamicDependency.AddPackageDependencyOptions>.MarshalerArray array) => MarshalInterfaceHelper<global::Microsoft.Windows.ApplicationModel.DynamicDependency.AddPackageDependencyOptions>.DisposeMarshalerArray(array);
        public static void DisposeAbi(IntPtr abi) => MarshalInspectable<object>.DisposeAbi(abi);
        public static unsafe void DisposeAbiArray(object box) => MarshalInspectable<object>.DisposeAbiArray(box);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    internal sealed class AddPackageDependencyOptionsRcwFactoryAttribute : global::WinRT.WinRTImplementationTypeRcwFactoryAttribute
    {
        public override object CreateInstance(global::WinRT.IInspectable inspectable)
            => new global::Microsoft.Windows.ApplicationModel.DynamicDependency.AddPackageDependencyOptions(inspectable.ObjRef);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    public struct CreatePackageDependencyOptions
    {

        public static IObjectReference CreateMarshaler(global::Microsoft.Windows.ApplicationModel.DynamicDependency.CreatePackageDependencyOptions obj) => obj is null ? null : MarshalInspectable<global::Microsoft.Windows.ApplicationModel.DynamicDependency.CreatePackageDependencyOptions>.CreateMarshaler<IUnknownVftbl>(obj, global::ABI.Microsoft.Windows.ApplicationModel.DynamicDependency.ICreatePackageDependencyOptionsMethods.IID);
        public static ObjectReferenceValue CreateMarshaler2(global::Microsoft.Windows.ApplicationModel.DynamicDependency.CreatePackageDependencyOptions obj) => MarshalInspectable<object>.CreateMarshaler2(obj, global::ABI.Microsoft.Windows.ApplicationModel.DynamicDependency.ICreatePackageDependencyOptionsMethods.IID);
        public static IntPtr GetAbi(IObjectReference value) => value is null ? IntPtr.Zero : MarshalInterfaceHelper<object>.GetAbi(value);
        public static global::Microsoft.Windows.ApplicationModel.DynamicDependency.CreatePackageDependencyOptions FromAbi(IntPtr thisPtr) => global::Microsoft.Windows.ApplicationModel.DynamicDependency.CreatePackageDependencyOptions.FromAbi(thisPtr);
        public static IntPtr FromManaged(global::Microsoft.Windows.ApplicationModel.DynamicDependency.CreatePackageDependencyOptions obj) => obj is null ? IntPtr.Zero : CreateMarshaler2(obj).Detach();
        public static unsafe MarshalInterfaceHelper<global::Microsoft.Windows.ApplicationModel.DynamicDependency.CreatePackageDependencyOptions>.MarshalerArray CreateMarshalerArray(global::Microsoft.Windows.ApplicationModel.DynamicDependency.CreatePackageDependencyOptions[] array) => MarshalInterfaceHelper<global::Microsoft.Windows.ApplicationModel.DynamicDependency.CreatePackageDependencyOptions>.CreateMarshalerArray2(array, (o) => CreateMarshaler2(o));
        public static (int length, IntPtr data) GetAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.Windows.ApplicationModel.DynamicDependency.CreatePackageDependencyOptions>.GetAbiArray(box);
        public static unsafe global::Microsoft.Windows.ApplicationModel.DynamicDependency.CreatePackageDependencyOptions[] FromAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.Windows.ApplicationModel.DynamicDependency.CreatePackageDependencyOptions>.FromAbiArray(box, FromAbi);
        public static void CopyAbiArray(global::Microsoft.Windows.ApplicationModel.DynamicDependency.CreatePackageDependencyOptions[] array, object box) => MarshalInterfaceHelper<global::Microsoft.Windows.ApplicationModel.DynamicDependency.CreatePackageDependencyOptions>.CopyAbiArray(array, box, FromAbi);
        public static (int length, IntPtr data) FromManagedArray(global::Microsoft.Windows.ApplicationModel.DynamicDependency.CreatePackageDependencyOptions[] array) => MarshalInterfaceHelper<global::Microsoft.Windows.ApplicationModel.DynamicDependency.CreatePackageDependencyOptions>.FromManagedArray(array, (o) => FromManaged(o));
        public static void DisposeMarshaler(IObjectReference value) => MarshalInspectable<object>.DisposeMarshaler(value);
        public static void DisposeMarshalerArray(MarshalInterfaceHelper<global::Microsoft.Windows.ApplicationModel.DynamicDependency.CreatePackageDependencyOptions>.MarshalerArray array) => MarshalInterfaceHelper<global::Microsoft.Windows.ApplicationModel.DynamicDependency.CreatePackageDependencyOptions>.DisposeMarshalerArray(array);
        public static void DisposeAbi(IntPtr abi) => MarshalInspectable<object>.DisposeAbi(abi);
        public static unsafe void DisposeAbiArray(object box) => MarshalInspectable<object>.DisposeAbiArray(box);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    internal sealed class CreatePackageDependencyOptionsRcwFactoryAttribute : global::WinRT.WinRTImplementationTypeRcwFactoryAttribute
    {
        public override object CreateInstance(global::WinRT.IInspectable inspectable)
            => new global::Microsoft.Windows.ApplicationModel.DynamicDependency.CreatePackageDependencyOptions(inspectable.ObjRef);
    }
    internal static class IAddPackageDependencyOptionsMethods
    {

        internal static unsafe bool get_PrependIfRankCollision(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            byte __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, byte*, int>**)ThisPtr)[8](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval != 0;
        }
        internal static unsafe void set_PrependIfRankCollision(IObjectReference _obj, bool value)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, byte, int>**)ThisPtr)[9](ThisPtr, (byte)(value ? 1 : 0)));
            global::System.GC.KeepAlive(_obj);
        }

        internal static unsafe int get_Rank(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            int __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, int*, int>**)ThisPtr)[6](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }
        internal static unsafe void set_Rank(IObjectReference _obj, int value)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, int, int>**)ThisPtr)[7](ThisPtr, value));
            global::System.GC.KeepAlive(_obj);
        }



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0xFD, 0x1, 0xB8, 0x1, 0xE3, 0x24, 0x6B, 0x5E, 0x9F, 0x1C, 0x80, 0x5A, 0xB4, 0x10, 0xB6, 0x4 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("01B801FD-24E3-5E6B-9F1C-805AB410B604")]
    internal interface IAddPackageDependencyOptions : global::Microsoft.Windows.ApplicationModel.DynamicDependency.IAddPackageDependencyOptions
    {
    }
    internal static class ICreatePackageDependencyOptionsMethods
    {

        internal static unsafe global::Microsoft.Windows.ApplicationModel.DynamicDependency.PackageDependencyProcessorArchitectures get_Architectures(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::Microsoft.Windows.ApplicationModel.DynamicDependency.PackageDependencyProcessorArchitectures __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::Microsoft.Windows.ApplicationModel.DynamicDependency.PackageDependencyProcessorArchitectures*, int>**)ThisPtr)[6](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }
        internal static unsafe void set_Architectures(IObjectReference _obj, global::Microsoft.Windows.ApplicationModel.DynamicDependency.PackageDependencyProcessorArchitectures value)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::Microsoft.Windows.ApplicationModel.DynamicDependency.PackageDependencyProcessorArchitectures, int>**)ThisPtr)[7](ThisPtr, value));
            global::System.GC.KeepAlive(_obj);
        }

        internal static unsafe string get_LifetimeArtifact(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[12](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return MarshalString.FromAbi(__retval);
            }
            finally
            {
                MarshalString.DisposeAbi(__retval);
            }
        }
        internal static unsafe void set_LifetimeArtifact(IObjectReference _obj, string value)
        {
            var ThisPtr = _obj.ThisPtr;

            MarshalString.Pinnable __value = new(value);
            fixed(void* ___value = __value)
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, int>**)ThisPtr)[13](ThisPtr, MarshalString.GetAbi(ref __value)));
                global::System.GC.KeepAlive(_obj);
            }
        }

        internal static unsafe global::Microsoft.Windows.ApplicationModel.DynamicDependency.PackageDependencyLifetimeArtifactKind get_LifetimeArtifactKind(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::Microsoft.Windows.ApplicationModel.DynamicDependency.PackageDependencyLifetimeArtifactKind __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::Microsoft.Windows.ApplicationModel.DynamicDependency.PackageDependencyLifetimeArtifactKind*, int>**)ThisPtr)[10](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }
        internal static unsafe void set_LifetimeArtifactKind(IObjectReference _obj, global::Microsoft.Windows.ApplicationModel.DynamicDependency.PackageDependencyLifetimeArtifactKind value)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::Microsoft.Windows.ApplicationModel.DynamicDependency.PackageDependencyLifetimeArtifactKind, int>**)ThisPtr)[11](ThisPtr, value));
            global::System.GC.KeepAlive(_obj);
        }

        internal static unsafe bool get_VerifyDependencyResolution(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            byte __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, byte*, int>**)ThisPtr)[8](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval != 0;
        }
        internal static unsafe void set_VerifyDependencyResolution(IObjectReference _obj, bool value)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, byte, int>**)ThisPtr)[9](ThisPtr, (byte)(value ? 1 : 0)));
            global::System.GC.KeepAlive(_obj);
        }



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0xF, 0x82, 0xBB, 0xCD, 0x69, 0x3C, 0xDC, 0x55, 0xA0, 0x17, 0xB4, 0x13, 0x25, 0x74, 0xC5, 0xD6 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("CDBB820F-3C69-55DC-A017-B4132574C5D6")]
    internal interface ICreatePackageDependencyOptions : global::Microsoft.Windows.ApplicationModel.DynamicDependency.ICreatePackageDependencyOptions
    {
    }
    internal static class IPackageDependencyMethods
    {


        internal static unsafe void Delete(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, int>**)ThisPtr)[7](ThisPtr));
            global::System.GC.KeepAlive(_obj);
        }

        internal static unsafe global::Microsoft.Windows.ApplicationModel.DynamicDependency.PackageDependencyContext Add(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[8](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.Windows.ApplicationModel.DynamicDependency.PackageDependencyContext.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.Windows.ApplicationModel.DynamicDependency.PackageDependencyContext.DisposeAbi(__retval);
            }
        }

        internal static unsafe global::Microsoft.Windows.ApplicationModel.DynamicDependency.PackageDependencyContext Add(IObjectReference _obj, global::Microsoft.Windows.ApplicationModel.DynamicDependency.AddPackageDependencyOptions options)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __options = default;
            IntPtr __retval = default;
            try
            {
                __options = global::ABI.Microsoft.Windows.ApplicationModel.DynamicDependency.AddPackageDependencyOptions.CreateMarshaler2(options);
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, IntPtr*, int>**)ThisPtr)[9](ThisPtr, MarshalInspectable<object>.GetAbi(__options), &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.Windows.ApplicationModel.DynamicDependency.PackageDependencyContext.FromAbi(__retval);
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__options);
                global::ABI.Microsoft.Windows.ApplicationModel.DynamicDependency.PackageDependencyContext.DisposeAbi(__retval);
            }
        }
        internal static unsafe string get_Id(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[6](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return MarshalString.FromAbi(__retval);
            }
            finally
            {
                MarshalString.DisposeAbi(__retval);
            }
        }



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0x95, 0x7B, 0xAE, 0x32, 0x58, 0xE3, 0x48, 0x5A, 0x96, 0x69, 0xC9, 0x7D, 0x85, 0xAD, 0x65, 0x56 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("32AE7B95-E358-5A48-9669-C97D85AD6556")]
    internal interface IPackageDependency : global::Microsoft.Windows.ApplicationModel.DynamicDependency.IPackageDependency
    {
    }
    internal static class IPackageDependencyContextMethods
    {


        internal static unsafe void Remove(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, int>**)ThisPtr)[9](ThisPtr));
            global::System.GC.KeepAlive(_obj);
        }
        internal static unsafe global::Microsoft.Windows.ApplicationModel.DynamicDependency.PackageDependencyContextId get_ContextId(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::Microsoft.Windows.ApplicationModel.DynamicDependency.PackageDependencyContextId __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::Microsoft.Windows.ApplicationModel.DynamicDependency.PackageDependencyContextId*, int>**)ThisPtr)[6](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }

        internal static unsafe string get_PackageDependencyId(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[7](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return MarshalString.FromAbi(__retval);
            }
            finally
            {
                MarshalString.DisposeAbi(__retval);
            }
        }

        internal static unsafe string get_PackageFullName(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[8](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return MarshalString.FromAbi(__retval);
            }
            finally
            {
                MarshalString.DisposeAbi(__retval);
            }
        }



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0x5A, 0xC3, 0x2, 0x99, 0xF5, 0xA3, 0x45, 0x56, 0xAF, 0xF, 0xCD, 0xF9, 0xFC, 0xA0, 0xD, 0x5E };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("9902C35A-A3F5-5645-AF0F-CDF9FCA00D5E")]
    internal interface IPackageDependencyContext : global::Microsoft.Windows.ApplicationModel.DynamicDependency.IPackageDependencyContext
    {
    }
    internal static class IPackageDependencyContextFactoryMethods
    {


        internal static unsafe global::Microsoft.Windows.ApplicationModel.DynamicDependency.PackageDependencyContext CreateInstance(IObjectReference _obj, global::Microsoft.Windows.ApplicationModel.DynamicDependency.PackageDependencyContextId contextId)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::Microsoft.Windows.ApplicationModel.DynamicDependency.PackageDependencyContextId, IntPtr*, int>**)ThisPtr)[6](ThisPtr, contextId, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.Windows.ApplicationModel.DynamicDependency.PackageDependencyContext.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.Windows.ApplicationModel.DynamicDependency.PackageDependencyContext.DisposeAbi(__retval);
            }
        }


        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0x4F, 0xF2, 0x14, 0x99, 0xBF, 0xBE, 0x6B, 0x51, 0xAD, 0xAB, 0x5C, 0x3E, 0x8B, 0xF3, 0x23, 0xF8 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("9914F24F-BEBF-516B-ADAB-5C3E8BF323F8")]
    internal interface IPackageDependencyContextFactory : global::Microsoft.Windows.ApplicationModel.DynamicDependency.IPackageDependencyContextFactory
    {
    }
    internal static class IPackageDependencyRankStaticsMethods
    {

        internal static unsafe int get_Default(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            int __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, int*, int>**)ThisPtr)[6](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0xBD, 0x83, 0x5, 0x26, 0xAB, 0xA4, 0xFD, 0x53, 0xA1, 0x90, 0xC4, 0x46, 0xBF, 0xDB, 0x53, 0x84 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("260583BD-A4AB-53FD-A190-C446BFDB5384")]
    internal interface IPackageDependencyRankStatics : global::Microsoft.Windows.ApplicationModel.DynamicDependency.IPackageDependencyRankStatics
    {
    }
    internal static class IPackageDependencyStaticsMethods
    {


        internal static unsafe global::Microsoft.Windows.ApplicationModel.DynamicDependency.PackageDependency GetFromId(IObjectReference _obj, string id)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                MarshalString.Pinnable __id = new(id);
                fixed(void* ___id = __id)
                {
                    global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, IntPtr*, int>**)ThisPtr)[6](ThisPtr, MarshalString.GetAbi(ref __id), &__retval));
                    global::System.GC.KeepAlive(_obj);
                    return global::ABI.Microsoft.Windows.ApplicationModel.DynamicDependency.PackageDependency.FromAbi(__retval);
                }
            }
            finally
            {
                global::ABI.Microsoft.Windows.ApplicationModel.DynamicDependency.PackageDependency.DisposeAbi(__retval);
            }
        }

        internal static unsafe global::Microsoft.Windows.ApplicationModel.DynamicDependency.PackageDependency GetFromIdForSystem(IObjectReference _obj, string id)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                MarshalString.Pinnable __id = new(id);
                fixed(void* ___id = __id)
                {
                    global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, IntPtr*, int>**)ThisPtr)[7](ThisPtr, MarshalString.GetAbi(ref __id), &__retval));
                    global::System.GC.KeepAlive(_obj);
                    return global::ABI.Microsoft.Windows.ApplicationModel.DynamicDependency.PackageDependency.FromAbi(__retval);
                }
            }
            finally
            {
                global::ABI.Microsoft.Windows.ApplicationModel.DynamicDependency.PackageDependency.DisposeAbi(__retval);
            }
        }

        internal static unsafe global::Microsoft.Windows.ApplicationModel.DynamicDependency.PackageDependency Create(IObjectReference _obj, string packageFamilyName, global::Windows.ApplicationModel.PackageVersion minVersion)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                MarshalString.Pinnable __packageFamilyName = new(packageFamilyName);
                fixed(void* ___packageFamilyName = __packageFamilyName)
                {
                    global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, global::Windows.ApplicationModel.PackageVersion, IntPtr*, int>**)ThisPtr)[8](ThisPtr, MarshalString.GetAbi(ref __packageFamilyName), minVersion, &__retval));
                    global::System.GC.KeepAlive(_obj);
                    return global::ABI.Microsoft.Windows.ApplicationModel.DynamicDependency.PackageDependency.FromAbi(__retval);
                }
            }
            finally
            {
                global::ABI.Microsoft.Windows.ApplicationModel.DynamicDependency.PackageDependency.DisposeAbi(__retval);
            }
        }

        internal static unsafe global::Microsoft.Windows.ApplicationModel.DynamicDependency.PackageDependency Create(IObjectReference _obj, string packageFamilyName, global::Windows.ApplicationModel.PackageVersion minVersion, global::Microsoft.Windows.ApplicationModel.DynamicDependency.CreatePackageDependencyOptions options)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __options = default;
            IntPtr __retval = default;
            try
            {
                __options = global::ABI.Microsoft.Windows.ApplicationModel.DynamicDependency.CreatePackageDependencyOptions.CreateMarshaler2(options);
                MarshalString.Pinnable __packageFamilyName = new(packageFamilyName);
                fixed(void* ___packageFamilyName = __packageFamilyName)
                {
                    global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, global::Windows.ApplicationModel.PackageVersion, IntPtr, IntPtr*, int>**)ThisPtr)[9](ThisPtr, MarshalString.GetAbi(ref __packageFamilyName), minVersion, MarshalInspectable<object>.GetAbi(__options), &__retval));
                    global::System.GC.KeepAlive(_obj);
                    return global::ABI.Microsoft.Windows.ApplicationModel.DynamicDependency.PackageDependency.FromAbi(__retval);
                }
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__options);
                global::ABI.Microsoft.Windows.ApplicationModel.DynamicDependency.PackageDependency.DisposeAbi(__retval);
            }
        }

        internal static unsafe global::Microsoft.Windows.ApplicationModel.DynamicDependency.PackageDependency CreateForSystem(IObjectReference _obj, string packageFamilyName, global::Windows.ApplicationModel.PackageVersion minVersion, global::Microsoft.Windows.ApplicationModel.DynamicDependency.CreatePackageDependencyOptions options)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __options = default;
            IntPtr __retval = default;
            try
            {
                __options = global::ABI.Microsoft.Windows.ApplicationModel.DynamicDependency.CreatePackageDependencyOptions.CreateMarshaler2(options);
                MarshalString.Pinnable __packageFamilyName = new(packageFamilyName);
                fixed(void* ___packageFamilyName = __packageFamilyName)
                {
                    global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, global::Windows.ApplicationModel.PackageVersion, IntPtr, IntPtr*, int>**)ThisPtr)[10](ThisPtr, MarshalString.GetAbi(ref __packageFamilyName), minVersion, MarshalInspectable<object>.GetAbi(__options), &__retval));
                    global::System.GC.KeepAlive(_obj);
                    return global::ABI.Microsoft.Windows.ApplicationModel.DynamicDependency.PackageDependency.FromAbi(__retval);
                }
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__options);
                global::ABI.Microsoft.Windows.ApplicationModel.DynamicDependency.PackageDependency.DisposeAbi(__retval);
            }
        }
        internal static unsafe uint get_GenerationId(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            uint __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, uint*, int>**)ThisPtr)[11](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0xE1, 0x56, 0xB6, 0x17, 0x58, 0x1A, 0x3C, 0x5F, 0x84, 0xA8, 0x44, 0x30, 0xF6, 0xE7, 0x49, 0xC2 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("17B656E1-1A58-5F3C-84A8-4430F6E749C2")]
    internal interface IPackageDependencyStatics : global::Microsoft.Windows.ApplicationModel.DynamicDependency.IPackageDependencyStatics
    {
    }
    internal static class IPackageDependencyStatics2Methods
    {

        internal static unsafe uint get_PackageGraphRevisionId(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            uint __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, uint*, int>**)ThisPtr)[6](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0xF3, 0xE4, 0xC6, 0xC7, 0xCA, 0xC0, 0xDB, 0x5F, 0xBE, 0xF2, 0x57, 0xE6, 0x2, 0xF, 0xFE, 0x4E };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("C7C6E4F3-C0CA-5FDB-BEF2-57E6020FFE4E")]
    internal interface IPackageDependencyStatics2 : global::Microsoft.Windows.ApplicationModel.DynamicDependency.IPackageDependencyStatics2
    {
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    public struct PackageDependency
    {

        public static IObjectReference CreateMarshaler(global::Microsoft.Windows.ApplicationModel.DynamicDependency.PackageDependency obj) => obj is null ? null : MarshalInspectable<global::Microsoft.Windows.ApplicationModel.DynamicDependency.PackageDependency>.CreateMarshaler<IUnknownVftbl>(obj, global::ABI.Microsoft.Windows.ApplicationModel.DynamicDependency.IPackageDependencyMethods.IID);
        public static ObjectReferenceValue CreateMarshaler2(global::Microsoft.Windows.ApplicationModel.DynamicDependency.PackageDependency obj) => MarshalInspectable<object>.CreateMarshaler2(obj, global::ABI.Microsoft.Windows.ApplicationModel.DynamicDependency.IPackageDependencyMethods.IID);
        public static IntPtr GetAbi(IObjectReference value) => value is null ? IntPtr.Zero : MarshalInterfaceHelper<object>.GetAbi(value);
        public static global::Microsoft.Windows.ApplicationModel.DynamicDependency.PackageDependency FromAbi(IntPtr thisPtr) => global::Microsoft.Windows.ApplicationModel.DynamicDependency.PackageDependency.FromAbi(thisPtr);
        public static IntPtr FromManaged(global::Microsoft.Windows.ApplicationModel.DynamicDependency.PackageDependency obj) => obj is null ? IntPtr.Zero : CreateMarshaler2(obj).Detach();
        public static unsafe MarshalInterfaceHelper<global::Microsoft.Windows.ApplicationModel.DynamicDependency.PackageDependency>.MarshalerArray CreateMarshalerArray(global::Microsoft.Windows.ApplicationModel.DynamicDependency.PackageDependency[] array) => MarshalInterfaceHelper<global::Microsoft.Windows.ApplicationModel.DynamicDependency.PackageDependency>.CreateMarshalerArray2(array, (o) => CreateMarshaler2(o));
        public static (int length, IntPtr data) GetAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.Windows.ApplicationModel.DynamicDependency.PackageDependency>.GetAbiArray(box);
        public static unsafe global::Microsoft.Windows.ApplicationModel.DynamicDependency.PackageDependency[] FromAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.Windows.ApplicationModel.DynamicDependency.PackageDependency>.FromAbiArray(box, FromAbi);
        public static void CopyAbiArray(global::Microsoft.Windows.ApplicationModel.DynamicDependency.PackageDependency[] array, object box) => MarshalInterfaceHelper<global::Microsoft.Windows.ApplicationModel.DynamicDependency.PackageDependency>.CopyAbiArray(array, box, FromAbi);
        public static (int length, IntPtr data) FromManagedArray(global::Microsoft.Windows.ApplicationModel.DynamicDependency.PackageDependency[] array) => MarshalInterfaceHelper<global::Microsoft.Windows.ApplicationModel.DynamicDependency.PackageDependency>.FromManagedArray(array, (o) => FromManaged(o));
        public static void DisposeMarshaler(IObjectReference value) => MarshalInspectable<object>.DisposeMarshaler(value);
        public static void DisposeMarshalerArray(MarshalInterfaceHelper<global::Microsoft.Windows.ApplicationModel.DynamicDependency.PackageDependency>.MarshalerArray array) => MarshalInterfaceHelper<global::Microsoft.Windows.ApplicationModel.DynamicDependency.PackageDependency>.DisposeMarshalerArray(array);
        public static void DisposeAbi(IntPtr abi) => MarshalInspectable<object>.DisposeAbi(abi);
        public static unsafe void DisposeAbiArray(object box) => MarshalInspectable<object>.DisposeAbiArray(box);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    internal sealed class PackageDependencyRcwFactoryAttribute : global::WinRT.WinRTImplementationTypeRcwFactoryAttribute
    {
        public override object CreateInstance(global::WinRT.IInspectable inspectable)
            => new global::Microsoft.Windows.ApplicationModel.DynamicDependency.PackageDependency(inspectable.ObjRef);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    public struct PackageDependencyContext
    {

        public static IObjectReference CreateMarshaler(global::Microsoft.Windows.ApplicationModel.DynamicDependency.PackageDependencyContext obj) => obj is null ? null : MarshalInspectable<global::Microsoft.Windows.ApplicationModel.DynamicDependency.PackageDependencyContext>.CreateMarshaler<IUnknownVftbl>(obj, global::ABI.Microsoft.Windows.ApplicationModel.DynamicDependency.IPackageDependencyContextMethods.IID);
        public static ObjectReferenceValue CreateMarshaler2(global::Microsoft.Windows.ApplicationModel.DynamicDependency.PackageDependencyContext obj) => MarshalInspectable<object>.CreateMarshaler2(obj, global::ABI.Microsoft.Windows.ApplicationModel.DynamicDependency.IPackageDependencyContextMethods.IID);
        public static IntPtr GetAbi(IObjectReference value) => value is null ? IntPtr.Zero : MarshalInterfaceHelper<object>.GetAbi(value);
        public static global::Microsoft.Windows.ApplicationModel.DynamicDependency.PackageDependencyContext FromAbi(IntPtr thisPtr) => global::Microsoft.Windows.ApplicationModel.DynamicDependency.PackageDependencyContext.FromAbi(thisPtr);
        public static IntPtr FromManaged(global::Microsoft.Windows.ApplicationModel.DynamicDependency.PackageDependencyContext obj) => obj is null ? IntPtr.Zero : CreateMarshaler2(obj).Detach();
        public static unsafe MarshalInterfaceHelper<global::Microsoft.Windows.ApplicationModel.DynamicDependency.PackageDependencyContext>.MarshalerArray CreateMarshalerArray(global::Microsoft.Windows.ApplicationModel.DynamicDependency.PackageDependencyContext[] array) => MarshalInterfaceHelper<global::Microsoft.Windows.ApplicationModel.DynamicDependency.PackageDependencyContext>.CreateMarshalerArray2(array, (o) => CreateMarshaler2(o));
        public static (int length, IntPtr data) GetAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.Windows.ApplicationModel.DynamicDependency.PackageDependencyContext>.GetAbiArray(box);
        public static unsafe global::Microsoft.Windows.ApplicationModel.DynamicDependency.PackageDependencyContext[] FromAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.Windows.ApplicationModel.DynamicDependency.PackageDependencyContext>.FromAbiArray(box, FromAbi);
        public static void CopyAbiArray(global::Microsoft.Windows.ApplicationModel.DynamicDependency.PackageDependencyContext[] array, object box) => MarshalInterfaceHelper<global::Microsoft.Windows.ApplicationModel.DynamicDependency.PackageDependencyContext>.CopyAbiArray(array, box, FromAbi);
        public static (int length, IntPtr data) FromManagedArray(global::Microsoft.Windows.ApplicationModel.DynamicDependency.PackageDependencyContext[] array) => MarshalInterfaceHelper<global::Microsoft.Windows.ApplicationModel.DynamicDependency.PackageDependencyContext>.FromManagedArray(array, (o) => FromManaged(o));
        public static void DisposeMarshaler(IObjectReference value) => MarshalInspectable<object>.DisposeMarshaler(value);
        public static void DisposeMarshalerArray(MarshalInterfaceHelper<global::Microsoft.Windows.ApplicationModel.DynamicDependency.PackageDependencyContext>.MarshalerArray array) => MarshalInterfaceHelper<global::Microsoft.Windows.ApplicationModel.DynamicDependency.PackageDependencyContext>.DisposeMarshalerArray(array);
        public static void DisposeAbi(IntPtr abi) => MarshalInspectable<object>.DisposeAbi(abi);
        public static unsafe void DisposeAbiArray(object box) => MarshalInspectable<object>.DisposeAbiArray(box);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    internal sealed class PackageDependencyContextRcwFactoryAttribute : global::WinRT.WinRTImplementationTypeRcwFactoryAttribute
    {
        public override object CreateInstance(global::WinRT.IInspectable inspectable)
            => new global::Microsoft.Windows.ApplicationModel.DynamicDependency.PackageDependencyContext(inspectable.ObjRef);
    }
}
#pragma warning restore CA1416
