//------------------------------------------------------------------------------
// <auto-generated>
//     This file was generated by cswinrt.exe version 2.2.0.241111.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Diagnostics;
using System.Diagnostics.CodeAnalysis;
using System.Linq.Expressions;
using System.Reflection;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;
using WinRT;
using WinRT.Interop;


#pragma warning disable 0169 // warning CS0169: The field '...' is never used
#pragma warning disable 0649 // warning CS0169: Field '...' is never assigned to
#pragma warning disable CA2207, CA1063, CA1033, CA1001, CA2213

namespace Microsoft.UI.Xaml.Documents
{
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")]
    [global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Documents.Block))]
    [global::ABI.Microsoft.UI.Xaml.Documents.BlockRcwFactory]
    [global::WinRT.ProjectedRuntimeClass(typeof(IBlock))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    public class Block : TextElement, global::System.Runtime.InteropServices.ICustomQueryInterface, IWinRTObject, IEquatable<Block>
    {
        private IntPtr ThisPtr => _inner == null ? (((IWinRTObject)this).NativeObject).ThisPtr : _inner.ThisPtr;

        private readonly IObjectReference _inner = null;




        private volatile IObjectReference ___objRef_global__Microsoft_UI_Xaml_Documents_IBlock;
        private IObjectReference Make___objRef_global__Microsoft_UI_Xaml_Documents_IBlock()
        {
            global::System.Threading.Interlocked.CompareExchange(ref ___objRef_global__Microsoft_UI_Xaml_Documents_IBlock, ((IWinRTObject)this).NativeObject.As<IUnknownVftbl>(global::ABI.Microsoft.UI.Xaml.Documents.IBlockMethods.IID), null);
            return ___objRef_global__Microsoft_UI_Xaml_Documents_IBlock;
        }
        private IObjectReference _objRef_global__Microsoft_UI_Xaml_Documents_IBlock => ___objRef_global__Microsoft_UI_Xaml_Documents_IBlock ?? Make___objRef_global__Microsoft_UI_Xaml_Documents_IBlock();



        private static class _IBlockFactoryMethods
        {
            public static unsafe IntPtr CreateInstance(IObjectReference _obj, object baseInterface, out IntPtr innerInterface)
            {
                var ThisPtr = _obj.ThisPtr;

                ObjectReferenceValue __baseInterface = default;
                IntPtr __innerInterface = default;
                IntPtr __retval = default;
                try
                {
                    __baseInterface = MarshalInspectable<object>.CreateMarshaler2(baseInterface);
                    global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, IntPtr*, IntPtr*, int>**)ThisPtr)[6](ThisPtr, MarshalInspectable<object>.GetAbi(__baseInterface), &__innerInterface, &__retval));
                    global::System.GC.KeepAlive(_obj);
                    innerInterface = __innerInterface;
                    return __retval;
                }
                finally
                {
                    MarshalInspectable<object>.DisposeMarshaler(__baseInterface);
                }
            }
        }

        private static volatile IObjectReference ___objRef_global__Microsoft_UI_Xaml_Documents_IBlockFactory;
        private static IObjectReference _objRef_global__Microsoft_UI_Xaml_Documents_IBlockFactory
        {
            get
            { 
                var factory = ___objRef_global__Microsoft_UI_Xaml_Documents_IBlockFactory;
                if (factory != null && factory.IsInCurrentContext)
                {
                    return factory;
                }
                else
                {
                    return ___objRef_global__Microsoft_UI_Xaml_Documents_IBlockFactory = ActivationFactory.Get("Microsoft.UI.Xaml.Documents.Block", global::ABI.Microsoft.UI.Xaml.Documents.IBlockFactoryMethods.IID);
                }
            }
        }

        protected Block():base(global::WinRT.DerivedComposed.Instance)
        {
            bool isAggregation = this.GetType() != typeof(Block);
            object baseInspectable = isAggregation ? this : null;
            IntPtr composed = _IBlockFactoryMethods.CreateInstance(_objRef_global__Microsoft_UI_Xaml_Documents_IBlockFactory,  baseInspectable, out IntPtr inner);
            try
            {
                ComWrappersHelper.Init(isAggregation, this, composed, inner, global::ABI.Microsoft.UI.Xaml.Documents.IBlockMethods.IID, out _inner);

            }
            finally
            {
                Marshal.Release(inner);   
            }
        }

        public static new I As<I>() => ActivationFactory.Get("Microsoft.UI.Xaml.Documents.Block").AsInterface<I>();

        private static volatile IObjectReference ___objRef_global__Microsoft_UI_Xaml_Documents_IBlockStatics;
        private static IObjectReference _objRef_global__Microsoft_UI_Xaml_Documents_IBlockStatics
        {
            get
            { 
                var factory = ___objRef_global__Microsoft_UI_Xaml_Documents_IBlockStatics;
                if (factory != null && factory.IsInCurrentContext)
                {
                    return factory;
                }
                else
                {
                    return ___objRef_global__Microsoft_UI_Xaml_Documents_IBlockStatics = ActivationFactory.Get("Microsoft.UI.Xaml.Documents.Block", global::ABI.Microsoft.UI.Xaml.Documents.IBlockStaticsMethods.IID);
                }
            }
        }

        public static global::Microsoft.UI.Xaml.DependencyProperty HorizontalTextAlignmentProperty => global::ABI.Microsoft.UI.Xaml.Documents.IBlockStaticsMethods.get_HorizontalTextAlignmentProperty(_objRef_global__Microsoft_UI_Xaml_Documents_IBlockStatics);

        public static global::Microsoft.UI.Xaml.DependencyProperty LineHeightProperty => global::ABI.Microsoft.UI.Xaml.Documents.IBlockStaticsMethods.get_LineHeightProperty(_objRef_global__Microsoft_UI_Xaml_Documents_IBlockStatics);

        public static global::Microsoft.UI.Xaml.DependencyProperty LineStackingStrategyProperty => global::ABI.Microsoft.UI.Xaml.Documents.IBlockStaticsMethods.get_LineStackingStrategyProperty(_objRef_global__Microsoft_UI_Xaml_Documents_IBlockStatics);

        public static global::Microsoft.UI.Xaml.DependencyProperty MarginProperty => global::ABI.Microsoft.UI.Xaml.Documents.IBlockStaticsMethods.get_MarginProperty(_objRef_global__Microsoft_UI_Xaml_Documents_IBlockStatics);

        public static global::Microsoft.UI.Xaml.DependencyProperty TextAlignmentProperty => global::ABI.Microsoft.UI.Xaml.Documents.IBlockStaticsMethods.get_TextAlignmentProperty(_objRef_global__Microsoft_UI_Xaml_Documents_IBlockStatics);

        public static new Block FromAbi(IntPtr thisPtr)
        {
            if (thisPtr == IntPtr.Zero) return null;
            return MarshalInspectable<Block>.FromAbi(thisPtr);
        }

        protected internal Block(IObjectReference objRef)
            : base(global::WinRT.DerivedComposed.Instance)

        {
            _inner = objRef.As(global::ABI.Microsoft.UI.Xaml.Documents.IBlockMethods.IID);

        }


        public static bool operator ==(Block x, Block y) => (x?.ThisPtr ?? IntPtr.Zero) == (y?.ThisPtr ?? IntPtr.Zero);
        public static bool operator !=(Block x, Block y) => !(x == y);
        public bool Equals(Block other) => this == other;
        public override bool Equals(object obj) => obj is Block that && this == that;
        public override int GetHashCode() => ThisPtr.GetHashCode();


        protected Block(global::WinRT.DerivedComposed _):base(_)
        {

        }
        bool IWinRTObject.HasUnwrappableNativeObject => this.GetType() == typeof(Block);
        IObjectReference IWinRTObject.NativeObject => _inner;

        private struct InterfaceTag<I>{};


        public global::Microsoft.UI.Xaml.TextAlignment HorizontalTextAlignment
        {
            get => global::ABI.Microsoft.UI.Xaml.Documents.IBlockMethods.get_HorizontalTextAlignment(_objRef_global__Microsoft_UI_Xaml_Documents_IBlock);
            set => global::ABI.Microsoft.UI.Xaml.Documents.IBlockMethods.set_HorizontalTextAlignment(_objRef_global__Microsoft_UI_Xaml_Documents_IBlock, value);
        }

        public double LineHeight
        {
            get => global::ABI.Microsoft.UI.Xaml.Documents.IBlockMethods.get_LineHeight(_objRef_global__Microsoft_UI_Xaml_Documents_IBlock);
            set => global::ABI.Microsoft.UI.Xaml.Documents.IBlockMethods.set_LineHeight(_objRef_global__Microsoft_UI_Xaml_Documents_IBlock, value);
        }

        public global::Microsoft.UI.Xaml.LineStackingStrategy LineStackingStrategy
        {
            get => global::ABI.Microsoft.UI.Xaml.Documents.IBlockMethods.get_LineStackingStrategy(_objRef_global__Microsoft_UI_Xaml_Documents_IBlock);
            set => global::ABI.Microsoft.UI.Xaml.Documents.IBlockMethods.set_LineStackingStrategy(_objRef_global__Microsoft_UI_Xaml_Documents_IBlock, value);
        }

        public global::Microsoft.UI.Xaml.Thickness Margin
        {
            get => global::ABI.Microsoft.UI.Xaml.Documents.IBlockMethods.get_Margin(_objRef_global__Microsoft_UI_Xaml_Documents_IBlock);
            set => global::ABI.Microsoft.UI.Xaml.Documents.IBlockMethods.set_Margin(_objRef_global__Microsoft_UI_Xaml_Documents_IBlock, value);
        }

        public global::Microsoft.UI.Xaml.TextAlignment TextAlignment
        {
            get => global::ABI.Microsoft.UI.Xaml.Documents.IBlockMethods.get_TextAlignment(_objRef_global__Microsoft_UI_Xaml_Documents_IBlock);
            set => global::ABI.Microsoft.UI.Xaml.Documents.IBlockMethods.set_TextAlignment(_objRef_global__Microsoft_UI_Xaml_Documents_IBlock, value);
        }

        protected override bool IsOverridableInterface(Guid iid) => base.IsOverridableInterface(iid);

        global::System.Runtime.InteropServices.CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(ref Guid iid, out IntPtr ppv)
        {
            ppv = IntPtr.Zero;
            if (IsOverridableInterface(iid) || global::WinRT.Interop.IID.IID_IInspectable == iid)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
            }

            if (((IWinRTObject)this).NativeObject.TryAs(iid, out ppv) >= 0)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.Handled;
            }

            return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
        }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")]
    [global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Documents.BlockCollection))]
    [global::ABI.Microsoft.UI.Xaml.Documents.BlockCollectionRcwFactory]
    [global::WinRT.ProjectedRuntimeClass(typeof(global::System.Collections.Generic.IList<Block>))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    public sealed class BlockCollection : global::System.Collections.Generic.IList<Block>, global::System.Collections.Generic.IEnumerable<Block>, global::System.Runtime.InteropServices.ICustomQueryInterface, IWinRTObject, IEquatable<BlockCollection>
    {
        private IntPtr ThisPtr => _inner == null ? (((IWinRTObject)this).NativeObject).ThisPtr : _inner.ThisPtr;

        private readonly IObjectReference _inner = null;




        private volatile IObjectReference ___objRef_global__System_Collections_Generic_IList_Block_;
        private IObjectReference Make___objRef_global__System_Collections_Generic_IList_Block_()
        {
            _ = global::WinRT.GenericTypeInstantiations.Windows_Foundation_Collections_IVector_1_Microsoft_UI_Xaml_Documents_Block.EnsureInitialized();
            global::System.Threading.Interlocked.CompareExchange(ref ___objRef_global__System_Collections_Generic_IList_Block_, ((IWinRTObject)this).NativeObject.As<IUnknownVftbl>(global::ABI.System.Collections.Generic.IListMethods<Block>.IID), null);
            return ___objRef_global__System_Collections_Generic_IList_Block_;
        }
        private IObjectReference _objRef_global__System_Collections_Generic_IList_Block_ => ___objRef_global__System_Collections_Generic_IList_Block_ ?? Make___objRef_global__System_Collections_Generic_IList_Block_();

        private volatile IObjectReference ___objRef_global__System_Collections_Generic_IEnumerable_Block_;
        private IObjectReference Make___objRef_global__System_Collections_Generic_IEnumerable_Block_()
        {
            _ = global::WinRT.GenericTypeInstantiations.Windows_Foundation_Collections_IIterable_1_Microsoft_UI_Xaml_Documents_Block.EnsureInitialized();
            global::System.Threading.Interlocked.CompareExchange(ref ___objRef_global__System_Collections_Generic_IEnumerable_Block_, ((IWinRTObject)this).NativeObject.As<IUnknownVftbl>(global::ABI.System.Collections.Generic.IEnumerableMethods<Block>.IID), null);
            return ___objRef_global__System_Collections_Generic_IEnumerable_Block_;
        }
        private IObjectReference _objRef_global__System_Collections_Generic_IEnumerable_Block_ => ___objRef_global__System_Collections_Generic_IEnumerable_Block_ ?? Make___objRef_global__System_Collections_Generic_IEnumerable_Block_();



        public static BlockCollection FromAbi(IntPtr thisPtr)
        {
            if (thisPtr == IntPtr.Zero) return null;
            return MarshalInspectable<BlockCollection>.FromAbi(thisPtr);
        }

        internal BlockCollection(IObjectReference objRef)
        {
            _inner = objRef.As(global::ABI.System.Collections.Generic.IListMethods<Block>.IID);

        }


        public static bool operator ==(BlockCollection x, BlockCollection y) => (x?.ThisPtr ?? IntPtr.Zero) == (y?.ThisPtr ?? IntPtr.Zero);
        public static bool operator !=(BlockCollection x, BlockCollection y) => !(x == y);
        public bool Equals(BlockCollection other) => this == other;
        public override bool Equals(object obj) => obj is BlockCollection that && this == that;
        public override int GetHashCode() => ThisPtr.GetHashCode();


        bool IWinRTObject.HasUnwrappableNativeObject => true;
        IObjectReference IWinRTObject.NativeObject => _inner;
        private volatile global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> _queryInterfaceCache;
        private global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> MakeQueryInterfaceCache()
        {
            global::System.Threading.Interlocked.CompareExchange(ref _queryInterfaceCache, new global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference>(), null); 
            return _queryInterfaceCache;
        }
        global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> IWinRTObject.QueryInterfaceCache => _queryInterfaceCache ?? MakeQueryInterfaceCache();
        private volatile global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> _additionalTypeData;
        private global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> MakeAdditionalTypeData()
        {
            global::System.Threading.Interlocked.CompareExchange(ref _additionalTypeData, new global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object>(), null); 
            return _additionalTypeData;
        }
        global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> IWinRTObject.AdditionalTypeData => _additionalTypeData ?? MakeAdditionalTypeData();

        private struct InterfaceTag<I>{};


        public int Count => global::ABI.System.Collections.Generic.IListMethods<Block>.get_Count(_objRef_global__System_Collections_Generic_IList_Block_);
        public bool IsReadOnly => global::ABI.System.Collections.Generic.IListMethods<Block>.get_IsReadOnly(_objRef_global__System_Collections_Generic_IList_Block_);
        [global::System.Runtime.CompilerServices.IndexerName("ListItem")]
        public Block this[int index] 
        {
            get => global::ABI.System.Collections.Generic.IListMethods<Block>.Indexer_Get(_objRef_global__System_Collections_Generic_IList_Block_, index);
            set => global::ABI.System.Collections.Generic.IListMethods<Block>.Indexer_Set(_objRef_global__System_Collections_Generic_IList_Block_, index, value);
        }
        public int IndexOf(Block item) => global::ABI.System.Collections.Generic.IListMethods<Block>.IndexOf(_objRef_global__System_Collections_Generic_IList_Block_, item);
        public void Insert(int index, Block item) => global::ABI.System.Collections.Generic.IListMethods<Block>.Insert(_objRef_global__System_Collections_Generic_IList_Block_, index, item);
        public void RemoveAt(int index) => global::ABI.System.Collections.Generic.IListMethods<Block>.RemoveAt(_objRef_global__System_Collections_Generic_IList_Block_, index);
        public void Add(Block item) => global::ABI.System.Collections.Generic.IListMethods<Block>.Add(_objRef_global__System_Collections_Generic_IList_Block_, item);
        public void Clear() => global::ABI.System.Collections.Generic.IListMethods<Block>.Clear(_objRef_global__System_Collections_Generic_IList_Block_);
        public bool Contains(Block item) => global::ABI.System.Collections.Generic.IListMethods<Block>.Contains(_objRef_global__System_Collections_Generic_IList_Block_, item);
        public void CopyTo(Block[] array, int arrayIndex) => global::ABI.System.Collections.Generic.IListMethods<Block>.CopyTo(_objRef_global__System_Collections_Generic_IList_Block_, array, arrayIndex);
        public bool Remove(Block item) => global::ABI.System.Collections.Generic.IListMethods<Block>.Remove(_objRef_global__System_Collections_Generic_IList_Block_, item);

        public IEnumerator<Block> GetEnumerator() => global::ABI.System.Collections.Generic.IEnumerableMethods<Block>.GetEnumerator(_objRef_global__System_Collections_Generic_IEnumerable_Block_);

        IEnumerator IEnumerable.GetEnumerator() => GetEnumerator();

        private bool IsOverridableInterface(Guid iid) => false;

        global::System.Runtime.InteropServices.CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(ref Guid iid, out IntPtr ppv)
        {
            ppv = IntPtr.Zero;
            if (IsOverridableInterface(iid) || global::WinRT.Interop.IID.IID_IInspectable == iid)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
            }

            if (((IWinRTObject)this).NativeObject.TryAs(iid, out ppv) >= 0)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.Handled;
            }

            return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
        }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")]
    [global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Documents.Bold))]
    [global::ABI.Microsoft.UI.Xaml.Documents.BoldRcwFactory]
    [global::WinRT.ProjectedRuntimeClass(typeof(IBold))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    public sealed class Bold : Span, global::System.Runtime.InteropServices.ICustomQueryInterface, IWinRTObject, IEquatable<Bold>
    {
        private IntPtr ThisPtr => _inner == null ? (((IWinRTObject)this).NativeObject).ThisPtr : _inner.ThisPtr;

        private readonly IObjectReference _inner = null;



        private IObjectReference _objRef_global__Microsoft_UI_Xaml_Documents_IBold => _inner;


        private static volatile IObjectReference ___objRef_global__Microsoft_UI_Xaml_Documents_Bold;
        private static IObjectReference _objRef_global__Microsoft_UI_Xaml_Documents_Bold
        {
            get
            { 
                var factory = ___objRef_global__Microsoft_UI_Xaml_Documents_Bold;
                if (factory != null && factory.IsInCurrentContext)
                {
                    return factory;
                }
                else
                {
                    return ___objRef_global__Microsoft_UI_Xaml_Documents_Bold = ActivationFactory.Get("Microsoft.UI.Xaml.Documents.Bold");
                }
            }
        }

        public Bold() :base(global::WinRT.DerivedComposed.Instance)
        {
            _inner = global::ABI.WinRT.Interop.IActivationFactoryMethods.ActivateInstanceUnsafe(_objRef_global__Microsoft_UI_Xaml_Documents_Bold, global::ABI.Microsoft.UI.Xaml.Documents.IBoldMethods.IID);
            ComWrappersSupport.RegisterObjectForInterface(this, ThisPtr);
            ComWrappersHelper.Init(_inner, false);

        }

        public static new Bold FromAbi(IntPtr thisPtr)
        {
            if (thisPtr == IntPtr.Zero) return null;
            return MarshalInspectable<Bold>.FromAbi(thisPtr);
        }

        internal Bold(IObjectReference objRef)
            : base(global::WinRT.DerivedComposed.Instance)

        {
            _inner = objRef.As(global::ABI.Microsoft.UI.Xaml.Documents.IBoldMethods.IID);

        }


        public static bool operator ==(Bold x, Bold y) => (x?.ThisPtr ?? IntPtr.Zero) == (y?.ThisPtr ?? IntPtr.Zero);
        public static bool operator !=(Bold x, Bold y) => !(x == y);
        public bool Equals(Bold other) => this == other;
        public override bool Equals(object obj) => obj is Bold that && this == that;
        public override int GetHashCode() => ThisPtr.GetHashCode();


        bool IWinRTObject.HasUnwrappableNativeObject => true;
        IObjectReference IWinRTObject.NativeObject => _inner;

        private struct InterfaceTag<I>{};


        protected override bool IsOverridableInterface(Guid iid) => base.IsOverridableInterface(iid);

        global::System.Runtime.InteropServices.CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(ref Guid iid, out IntPtr ppv)
        {
            ppv = IntPtr.Zero;
            if (IsOverridableInterface(iid) || global::WinRT.Interop.IID.IID_IInspectable == iid)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
            }

            if (((IWinRTObject)this).NativeObject.TryAs(iid, out ppv) >= 0)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.Handled;
            }

            return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
        }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")]
    [global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Documents.Glyphs))]
    [global::ABI.Microsoft.UI.Xaml.Documents.GlyphsRcwFactory]
    [global::WinRT.ProjectedRuntimeClass(typeof(IGlyphs))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    public sealed class Glyphs : global::Microsoft.UI.Xaml.FrameworkElement, global::System.Runtime.InteropServices.ICustomQueryInterface, IWinRTObject, IEquatable<Glyphs>
    {
        private IntPtr ThisPtr => _inner == null ? (((IWinRTObject)this).NativeObject).ThisPtr : _inner.ThisPtr;

        private readonly IObjectReference _inner = null;



        private IObjectReference _objRef_global__Microsoft_UI_Xaml_Documents_IGlyphs => _inner;


        private static volatile IObjectReference ___objRef_global__Microsoft_UI_Xaml_Documents_Glyphs;
        private static IObjectReference _objRef_global__Microsoft_UI_Xaml_Documents_Glyphs
        {
            get
            { 
                var factory = ___objRef_global__Microsoft_UI_Xaml_Documents_Glyphs;
                if (factory != null && factory.IsInCurrentContext)
                {
                    return factory;
                }
                else
                {
                    return ___objRef_global__Microsoft_UI_Xaml_Documents_Glyphs = ActivationFactory.Get("Microsoft.UI.Xaml.Documents.Glyphs");
                }
            }
        }

        public Glyphs() :base(global::WinRT.DerivedComposed.Instance)
        {
            _inner = global::ABI.WinRT.Interop.IActivationFactoryMethods.ActivateInstanceUnsafe(_objRef_global__Microsoft_UI_Xaml_Documents_Glyphs, global::ABI.Microsoft.UI.Xaml.Documents.IGlyphsMethods.IID);
            ComWrappersSupport.RegisterObjectForInterface(this, ThisPtr);
            ComWrappersHelper.Init(_inner, false);

        }

        public static new I As<I>() => ActivationFactory.Get("Microsoft.UI.Xaml.Documents.Glyphs").AsInterface<I>();

        private static volatile IObjectReference ___objRef_global__Microsoft_UI_Xaml_Documents_IGlyphsStatics;
        private static IObjectReference _objRef_global__Microsoft_UI_Xaml_Documents_IGlyphsStatics
        {
            get
            { 
                var factory = ___objRef_global__Microsoft_UI_Xaml_Documents_IGlyphsStatics;
                if (factory != null && factory.IsInCurrentContext)
                {
                    return factory;
                }
                else
                {
                    return ___objRef_global__Microsoft_UI_Xaml_Documents_IGlyphsStatics = ActivationFactory.Get("Microsoft.UI.Xaml.Documents.Glyphs", global::ABI.Microsoft.UI.Xaml.Documents.IGlyphsStaticsMethods.IID);
                }
            }
        }

        public static global::Microsoft.UI.Xaml.DependencyProperty ColorFontPaletteIndexProperty => global::ABI.Microsoft.UI.Xaml.Documents.IGlyphsStaticsMethods.get_ColorFontPaletteIndexProperty(_objRef_global__Microsoft_UI_Xaml_Documents_IGlyphsStatics);

        public static global::Microsoft.UI.Xaml.DependencyProperty FillProperty => global::ABI.Microsoft.UI.Xaml.Documents.IGlyphsStaticsMethods.get_FillProperty(_objRef_global__Microsoft_UI_Xaml_Documents_IGlyphsStatics);

        public static global::Microsoft.UI.Xaml.DependencyProperty FontRenderingEmSizeProperty => global::ABI.Microsoft.UI.Xaml.Documents.IGlyphsStaticsMethods.get_FontRenderingEmSizeProperty(_objRef_global__Microsoft_UI_Xaml_Documents_IGlyphsStatics);

        public static global::Microsoft.UI.Xaml.DependencyProperty FontUriProperty => global::ABI.Microsoft.UI.Xaml.Documents.IGlyphsStaticsMethods.get_FontUriProperty(_objRef_global__Microsoft_UI_Xaml_Documents_IGlyphsStatics);

        public static global::Microsoft.UI.Xaml.DependencyProperty IndicesProperty => global::ABI.Microsoft.UI.Xaml.Documents.IGlyphsStaticsMethods.get_IndicesProperty(_objRef_global__Microsoft_UI_Xaml_Documents_IGlyphsStatics);

        public static global::Microsoft.UI.Xaml.DependencyProperty IsColorFontEnabledProperty => global::ABI.Microsoft.UI.Xaml.Documents.IGlyphsStaticsMethods.get_IsColorFontEnabledProperty(_objRef_global__Microsoft_UI_Xaml_Documents_IGlyphsStatics);

        public static global::Microsoft.UI.Xaml.DependencyProperty OriginXProperty => global::ABI.Microsoft.UI.Xaml.Documents.IGlyphsStaticsMethods.get_OriginXProperty(_objRef_global__Microsoft_UI_Xaml_Documents_IGlyphsStatics);

        public static global::Microsoft.UI.Xaml.DependencyProperty OriginYProperty => global::ABI.Microsoft.UI.Xaml.Documents.IGlyphsStaticsMethods.get_OriginYProperty(_objRef_global__Microsoft_UI_Xaml_Documents_IGlyphsStatics);

        public static global::Microsoft.UI.Xaml.DependencyProperty StyleSimulationsProperty => global::ABI.Microsoft.UI.Xaml.Documents.IGlyphsStaticsMethods.get_StyleSimulationsProperty(_objRef_global__Microsoft_UI_Xaml_Documents_IGlyphsStatics);

        public static global::Microsoft.UI.Xaml.DependencyProperty UnicodeStringProperty => global::ABI.Microsoft.UI.Xaml.Documents.IGlyphsStaticsMethods.get_UnicodeStringProperty(_objRef_global__Microsoft_UI_Xaml_Documents_IGlyphsStatics);

        public static new Glyphs FromAbi(IntPtr thisPtr)
        {
            if (thisPtr == IntPtr.Zero) return null;
            return MarshalInspectable<Glyphs>.FromAbi(thisPtr);
        }

        internal Glyphs(IObjectReference objRef)
            : base(global::WinRT.DerivedComposed.Instance)

        {
            _inner = objRef.As(global::ABI.Microsoft.UI.Xaml.Documents.IGlyphsMethods.IID);

        }


        public static bool operator ==(Glyphs x, Glyphs y) => (x?.ThisPtr ?? IntPtr.Zero) == (y?.ThisPtr ?? IntPtr.Zero);
        public static bool operator !=(Glyphs x, Glyphs y) => !(x == y);
        public bool Equals(Glyphs other) => this == other;
        public override bool Equals(object obj) => obj is Glyphs that && this == that;
        public override int GetHashCode() => ThisPtr.GetHashCode();


        bool IWinRTObject.HasUnwrappableNativeObject => true;
        IObjectReference IWinRTObject.NativeObject => _inner;

        private struct InterfaceTag<I>{};


        public int ColorFontPaletteIndex
        {
            get => global::ABI.Microsoft.UI.Xaml.Documents.IGlyphsMethods.get_ColorFontPaletteIndex(_objRef_global__Microsoft_UI_Xaml_Documents_IGlyphs);
            set => global::ABI.Microsoft.UI.Xaml.Documents.IGlyphsMethods.set_ColorFontPaletteIndex(_objRef_global__Microsoft_UI_Xaml_Documents_IGlyphs, value);
        }

        public global::Microsoft.UI.Xaml.Media.Brush Fill
        {
            get => global::ABI.Microsoft.UI.Xaml.Documents.IGlyphsMethods.get_Fill(_objRef_global__Microsoft_UI_Xaml_Documents_IGlyphs);
            set => global::ABI.Microsoft.UI.Xaml.Documents.IGlyphsMethods.set_Fill(_objRef_global__Microsoft_UI_Xaml_Documents_IGlyphs, value);
        }

        public double FontRenderingEmSize
        {
            get => global::ABI.Microsoft.UI.Xaml.Documents.IGlyphsMethods.get_FontRenderingEmSize(_objRef_global__Microsoft_UI_Xaml_Documents_IGlyphs);
            set => global::ABI.Microsoft.UI.Xaml.Documents.IGlyphsMethods.set_FontRenderingEmSize(_objRef_global__Microsoft_UI_Xaml_Documents_IGlyphs, value);
        }

        public global::System.Uri FontUri
        {
            get => global::ABI.Microsoft.UI.Xaml.Documents.IGlyphsMethods.get_FontUri(_objRef_global__Microsoft_UI_Xaml_Documents_IGlyphs);
            set => global::ABI.Microsoft.UI.Xaml.Documents.IGlyphsMethods.set_FontUri(_objRef_global__Microsoft_UI_Xaml_Documents_IGlyphs, value);
        }

        public string Indices
        {
            get => global::ABI.Microsoft.UI.Xaml.Documents.IGlyphsMethods.get_Indices(_objRef_global__Microsoft_UI_Xaml_Documents_IGlyphs);
            set => global::ABI.Microsoft.UI.Xaml.Documents.IGlyphsMethods.set_Indices(_objRef_global__Microsoft_UI_Xaml_Documents_IGlyphs, value);
        }

        public bool IsColorFontEnabled
        {
            get => global::ABI.Microsoft.UI.Xaml.Documents.IGlyphsMethods.get_IsColorFontEnabled(_objRef_global__Microsoft_UI_Xaml_Documents_IGlyphs);
            set => global::ABI.Microsoft.UI.Xaml.Documents.IGlyphsMethods.set_IsColorFontEnabled(_objRef_global__Microsoft_UI_Xaml_Documents_IGlyphs, value);
        }

        public double OriginX
        {
            get => global::ABI.Microsoft.UI.Xaml.Documents.IGlyphsMethods.get_OriginX(_objRef_global__Microsoft_UI_Xaml_Documents_IGlyphs);
            set => global::ABI.Microsoft.UI.Xaml.Documents.IGlyphsMethods.set_OriginX(_objRef_global__Microsoft_UI_Xaml_Documents_IGlyphs, value);
        }

        public double OriginY
        {
            get => global::ABI.Microsoft.UI.Xaml.Documents.IGlyphsMethods.get_OriginY(_objRef_global__Microsoft_UI_Xaml_Documents_IGlyphs);
            set => global::ABI.Microsoft.UI.Xaml.Documents.IGlyphsMethods.set_OriginY(_objRef_global__Microsoft_UI_Xaml_Documents_IGlyphs, value);
        }

        public global::Microsoft.UI.Xaml.Media.StyleSimulations StyleSimulations
        {
            get => global::ABI.Microsoft.UI.Xaml.Documents.IGlyphsMethods.get_StyleSimulations(_objRef_global__Microsoft_UI_Xaml_Documents_IGlyphs);
            set => global::ABI.Microsoft.UI.Xaml.Documents.IGlyphsMethods.set_StyleSimulations(_objRef_global__Microsoft_UI_Xaml_Documents_IGlyphs, value);
        }

        public string UnicodeString
        {
            get => global::ABI.Microsoft.UI.Xaml.Documents.IGlyphsMethods.get_UnicodeString(_objRef_global__Microsoft_UI_Xaml_Documents_IGlyphs);
            set => global::ABI.Microsoft.UI.Xaml.Documents.IGlyphsMethods.set_UnicodeString(_objRef_global__Microsoft_UI_Xaml_Documents_IGlyphs, value);
        }

        protected override bool IsOverridableInterface(Guid iid) => base.IsOverridableInterface(iid);

        global::System.Runtime.InteropServices.CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(ref Guid iid, out IntPtr ppv)
        {
            ppv = IntPtr.Zero;
            if (IsOverridableInterface(iid) || global::WinRT.Interop.IID.IID_IInspectable == iid)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
            }

            if (((IWinRTObject)this).NativeObject.TryAs(iid, out ppv) >= 0)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.Handled;
            }

            return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
        }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")]
    [global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Documents.Hyperlink))]
    [global::ABI.Microsoft.UI.Xaml.Documents.HyperlinkRcwFactory]
    [global::WinRT.ProjectedRuntimeClass(typeof(IHyperlink))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    public sealed class Hyperlink : Span, global::System.Runtime.InteropServices.ICustomQueryInterface, IWinRTObject, IEquatable<Hyperlink>
    {
        private IntPtr ThisPtr => _inner == null ? (((IWinRTObject)this).NativeObject).ThisPtr : _inner.ThisPtr;

        private readonly IObjectReference _inner = null;



        private IObjectReference _objRef_global__Microsoft_UI_Xaml_Documents_IHyperlink => _inner;


        private static volatile IObjectReference ___objRef_global__Microsoft_UI_Xaml_Documents_Hyperlink;
        private static IObjectReference _objRef_global__Microsoft_UI_Xaml_Documents_Hyperlink
        {
            get
            { 
                var factory = ___objRef_global__Microsoft_UI_Xaml_Documents_Hyperlink;
                if (factory != null && factory.IsInCurrentContext)
                {
                    return factory;
                }
                else
                {
                    return ___objRef_global__Microsoft_UI_Xaml_Documents_Hyperlink = ActivationFactory.Get("Microsoft.UI.Xaml.Documents.Hyperlink");
                }
            }
        }

        public Hyperlink() :base(global::WinRT.DerivedComposed.Instance)
        {
            _inner = global::ABI.WinRT.Interop.IActivationFactoryMethods.ActivateInstanceUnsafe(_objRef_global__Microsoft_UI_Xaml_Documents_Hyperlink, global::ABI.Microsoft.UI.Xaml.Documents.IHyperlinkMethods.IID);
            ComWrappersSupport.RegisterObjectForInterface(this, ThisPtr);
            ComWrappersHelper.Init(_inner, false);

        }

        public static new I As<I>() => ActivationFactory.Get("Microsoft.UI.Xaml.Documents.Hyperlink").AsInterface<I>();

        private static volatile IObjectReference ___objRef_global__Microsoft_UI_Xaml_Documents_IHyperlinkStatics;
        private static IObjectReference _objRef_global__Microsoft_UI_Xaml_Documents_IHyperlinkStatics
        {
            get
            { 
                var factory = ___objRef_global__Microsoft_UI_Xaml_Documents_IHyperlinkStatics;
                if (factory != null && factory.IsInCurrentContext)
                {
                    return factory;
                }
                else
                {
                    return ___objRef_global__Microsoft_UI_Xaml_Documents_IHyperlinkStatics = ActivationFactory.Get("Microsoft.UI.Xaml.Documents.Hyperlink", global::ABI.Microsoft.UI.Xaml.Documents.IHyperlinkStaticsMethods.IID);
                }
            }
        }

        public static global::Microsoft.UI.Xaml.DependencyProperty ElementSoundModeProperty => global::ABI.Microsoft.UI.Xaml.Documents.IHyperlinkStaticsMethods.get_ElementSoundModeProperty(_objRef_global__Microsoft_UI_Xaml_Documents_IHyperlinkStatics);

        public static global::Microsoft.UI.Xaml.DependencyProperty FocusStateProperty => global::ABI.Microsoft.UI.Xaml.Documents.IHyperlinkStaticsMethods.get_FocusStateProperty(_objRef_global__Microsoft_UI_Xaml_Documents_IHyperlinkStatics);

        public static global::Microsoft.UI.Xaml.DependencyProperty IsTabStopProperty => global::ABI.Microsoft.UI.Xaml.Documents.IHyperlinkStaticsMethods.get_IsTabStopProperty(_objRef_global__Microsoft_UI_Xaml_Documents_IHyperlinkStatics);

        public static global::Microsoft.UI.Xaml.DependencyProperty NavigateUriProperty => global::ABI.Microsoft.UI.Xaml.Documents.IHyperlinkStaticsMethods.get_NavigateUriProperty(_objRef_global__Microsoft_UI_Xaml_Documents_IHyperlinkStatics);

        public static global::Microsoft.UI.Xaml.DependencyProperty TabIndexProperty => global::ABI.Microsoft.UI.Xaml.Documents.IHyperlinkStaticsMethods.get_TabIndexProperty(_objRef_global__Microsoft_UI_Xaml_Documents_IHyperlinkStatics);

        public static global::Microsoft.UI.Xaml.DependencyProperty UnderlineStyleProperty => global::ABI.Microsoft.UI.Xaml.Documents.IHyperlinkStaticsMethods.get_UnderlineStyleProperty(_objRef_global__Microsoft_UI_Xaml_Documents_IHyperlinkStatics);

        public static global::Microsoft.UI.Xaml.DependencyProperty XYFocusDownNavigationStrategyProperty => global::ABI.Microsoft.UI.Xaml.Documents.IHyperlinkStaticsMethods.get_XYFocusDownNavigationStrategyProperty(_objRef_global__Microsoft_UI_Xaml_Documents_IHyperlinkStatics);

        public static global::Microsoft.UI.Xaml.DependencyProperty XYFocusDownProperty => global::ABI.Microsoft.UI.Xaml.Documents.IHyperlinkStaticsMethods.get_XYFocusDownProperty(_objRef_global__Microsoft_UI_Xaml_Documents_IHyperlinkStatics);

        public static global::Microsoft.UI.Xaml.DependencyProperty XYFocusLeftNavigationStrategyProperty => global::ABI.Microsoft.UI.Xaml.Documents.IHyperlinkStaticsMethods.get_XYFocusLeftNavigationStrategyProperty(_objRef_global__Microsoft_UI_Xaml_Documents_IHyperlinkStatics);

        public static global::Microsoft.UI.Xaml.DependencyProperty XYFocusLeftProperty => global::ABI.Microsoft.UI.Xaml.Documents.IHyperlinkStaticsMethods.get_XYFocusLeftProperty(_objRef_global__Microsoft_UI_Xaml_Documents_IHyperlinkStatics);

        public static global::Microsoft.UI.Xaml.DependencyProperty XYFocusRightNavigationStrategyProperty => global::ABI.Microsoft.UI.Xaml.Documents.IHyperlinkStaticsMethods.get_XYFocusRightNavigationStrategyProperty(_objRef_global__Microsoft_UI_Xaml_Documents_IHyperlinkStatics);

        public static global::Microsoft.UI.Xaml.DependencyProperty XYFocusRightProperty => global::ABI.Microsoft.UI.Xaml.Documents.IHyperlinkStaticsMethods.get_XYFocusRightProperty(_objRef_global__Microsoft_UI_Xaml_Documents_IHyperlinkStatics);

        public static global::Microsoft.UI.Xaml.DependencyProperty XYFocusUpNavigationStrategyProperty => global::ABI.Microsoft.UI.Xaml.Documents.IHyperlinkStaticsMethods.get_XYFocusUpNavigationStrategyProperty(_objRef_global__Microsoft_UI_Xaml_Documents_IHyperlinkStatics);

        public static global::Microsoft.UI.Xaml.DependencyProperty XYFocusUpProperty => global::ABI.Microsoft.UI.Xaml.Documents.IHyperlinkStaticsMethods.get_XYFocusUpProperty(_objRef_global__Microsoft_UI_Xaml_Documents_IHyperlinkStatics);

        public static new Hyperlink FromAbi(IntPtr thisPtr)
        {
            if (thisPtr == IntPtr.Zero) return null;
            return MarshalInspectable<Hyperlink>.FromAbi(thisPtr);
        }

        internal Hyperlink(IObjectReference objRef)
            : base(global::WinRT.DerivedComposed.Instance)

        {
            _inner = objRef.As(global::ABI.Microsoft.UI.Xaml.Documents.IHyperlinkMethods.IID);

        }


        public static bool operator ==(Hyperlink x, Hyperlink y) => (x?.ThisPtr ?? IntPtr.Zero) == (y?.ThisPtr ?? IntPtr.Zero);
        public static bool operator !=(Hyperlink x, Hyperlink y) => !(x == y);
        public bool Equals(Hyperlink other) => this == other;
        public override bool Equals(object obj) => obj is Hyperlink that && this == that;
        public override int GetHashCode() => ThisPtr.GetHashCode();


        bool IWinRTObject.HasUnwrappableNativeObject => true;
        IObjectReference IWinRTObject.NativeObject => _inner;

        private struct InterfaceTag<I>{};


        public bool Focus(global::Microsoft.UI.Xaml.FocusState value) => global::ABI.Microsoft.UI.Xaml.Documents.IHyperlinkMethods.Focus(_objRef_global__Microsoft_UI_Xaml_Documents_IHyperlink, value);

        public event global::Windows.Foundation.TypedEventHandler<Hyperlink, HyperlinkClickEventArgs> Click
        {
            add => global::ABI.Microsoft.UI.Xaml.Documents.IHyperlinkMethods.Get_Click2(_objRef_global__Microsoft_UI_Xaml_Documents_IHyperlink, (IWinRTObject)this).Subscribe(value);
            remove => global::ABI.Microsoft.UI.Xaml.Documents.IHyperlinkMethods.Get_Click2(_objRef_global__Microsoft_UI_Xaml_Documents_IHyperlink, (IWinRTObject)this).Unsubscribe(value);
        }

        public event global::Microsoft.UI.Xaml.RoutedEventHandler GotFocus
        {
            add => global::ABI.Microsoft.UI.Xaml.Documents.IHyperlinkMethods.Get_GotFocus2(_objRef_global__Microsoft_UI_Xaml_Documents_IHyperlink, (IWinRTObject)this).Subscribe(value);
            remove => global::ABI.Microsoft.UI.Xaml.Documents.IHyperlinkMethods.Get_GotFocus2(_objRef_global__Microsoft_UI_Xaml_Documents_IHyperlink, (IWinRTObject)this).Unsubscribe(value);
        }

        public event global::Microsoft.UI.Xaml.RoutedEventHandler LostFocus
        {
            add => global::ABI.Microsoft.UI.Xaml.Documents.IHyperlinkMethods.Get_LostFocus2(_objRef_global__Microsoft_UI_Xaml_Documents_IHyperlink, (IWinRTObject)this).Subscribe(value);
            remove => global::ABI.Microsoft.UI.Xaml.Documents.IHyperlinkMethods.Get_LostFocus2(_objRef_global__Microsoft_UI_Xaml_Documents_IHyperlink, (IWinRTObject)this).Unsubscribe(value);
        }

        public global::Microsoft.UI.Xaml.ElementSoundMode ElementSoundMode
        {
            get => global::ABI.Microsoft.UI.Xaml.Documents.IHyperlinkMethods.get_ElementSoundMode(_objRef_global__Microsoft_UI_Xaml_Documents_IHyperlink);
            set => global::ABI.Microsoft.UI.Xaml.Documents.IHyperlinkMethods.set_ElementSoundMode(_objRef_global__Microsoft_UI_Xaml_Documents_IHyperlink, value);
        }

        public global::Microsoft.UI.Xaml.FocusState FocusState => global::ABI.Microsoft.UI.Xaml.Documents.IHyperlinkMethods.get_FocusState(_objRef_global__Microsoft_UI_Xaml_Documents_IHyperlink);

        public bool IsTabStop
        {
            get => global::ABI.Microsoft.UI.Xaml.Documents.IHyperlinkMethods.get_IsTabStop(_objRef_global__Microsoft_UI_Xaml_Documents_IHyperlink);
            set => global::ABI.Microsoft.UI.Xaml.Documents.IHyperlinkMethods.set_IsTabStop(_objRef_global__Microsoft_UI_Xaml_Documents_IHyperlink, value);
        }

        public global::System.Uri NavigateUri
        {
            get => global::ABI.Microsoft.UI.Xaml.Documents.IHyperlinkMethods.get_NavigateUri(_objRef_global__Microsoft_UI_Xaml_Documents_IHyperlink);
            set => global::ABI.Microsoft.UI.Xaml.Documents.IHyperlinkMethods.set_NavigateUri(_objRef_global__Microsoft_UI_Xaml_Documents_IHyperlink, value);
        }

        public int TabIndex
        {
            get => global::ABI.Microsoft.UI.Xaml.Documents.IHyperlinkMethods.get_TabIndex(_objRef_global__Microsoft_UI_Xaml_Documents_IHyperlink);
            set => global::ABI.Microsoft.UI.Xaml.Documents.IHyperlinkMethods.set_TabIndex(_objRef_global__Microsoft_UI_Xaml_Documents_IHyperlink, value);
        }

        public UnderlineStyle UnderlineStyle
        {
            get => global::ABI.Microsoft.UI.Xaml.Documents.IHyperlinkMethods.get_UnderlineStyle(_objRef_global__Microsoft_UI_Xaml_Documents_IHyperlink);
            set => global::ABI.Microsoft.UI.Xaml.Documents.IHyperlinkMethods.set_UnderlineStyle(_objRef_global__Microsoft_UI_Xaml_Documents_IHyperlink, value);
        }

        public global::Microsoft.UI.Xaml.DependencyObject XYFocusDown
        {
            get => global::ABI.Microsoft.UI.Xaml.Documents.IHyperlinkMethods.get_XYFocusDown(_objRef_global__Microsoft_UI_Xaml_Documents_IHyperlink);
            set => global::ABI.Microsoft.UI.Xaml.Documents.IHyperlinkMethods.set_XYFocusDown(_objRef_global__Microsoft_UI_Xaml_Documents_IHyperlink, value);
        }

        public global::Microsoft.UI.Xaml.Input.XYFocusNavigationStrategy XYFocusDownNavigationStrategy
        {
            get => global::ABI.Microsoft.UI.Xaml.Documents.IHyperlinkMethods.get_XYFocusDownNavigationStrategy(_objRef_global__Microsoft_UI_Xaml_Documents_IHyperlink);
            set => global::ABI.Microsoft.UI.Xaml.Documents.IHyperlinkMethods.set_XYFocusDownNavigationStrategy(_objRef_global__Microsoft_UI_Xaml_Documents_IHyperlink, value);
        }

        public global::Microsoft.UI.Xaml.DependencyObject XYFocusLeft
        {
            get => global::ABI.Microsoft.UI.Xaml.Documents.IHyperlinkMethods.get_XYFocusLeft(_objRef_global__Microsoft_UI_Xaml_Documents_IHyperlink);
            set => global::ABI.Microsoft.UI.Xaml.Documents.IHyperlinkMethods.set_XYFocusLeft(_objRef_global__Microsoft_UI_Xaml_Documents_IHyperlink, value);
        }

        public global::Microsoft.UI.Xaml.Input.XYFocusNavigationStrategy XYFocusLeftNavigationStrategy
        {
            get => global::ABI.Microsoft.UI.Xaml.Documents.IHyperlinkMethods.get_XYFocusLeftNavigationStrategy(_objRef_global__Microsoft_UI_Xaml_Documents_IHyperlink);
            set => global::ABI.Microsoft.UI.Xaml.Documents.IHyperlinkMethods.set_XYFocusLeftNavigationStrategy(_objRef_global__Microsoft_UI_Xaml_Documents_IHyperlink, value);
        }

        public global::Microsoft.UI.Xaml.DependencyObject XYFocusRight
        {
            get => global::ABI.Microsoft.UI.Xaml.Documents.IHyperlinkMethods.get_XYFocusRight(_objRef_global__Microsoft_UI_Xaml_Documents_IHyperlink);
            set => global::ABI.Microsoft.UI.Xaml.Documents.IHyperlinkMethods.set_XYFocusRight(_objRef_global__Microsoft_UI_Xaml_Documents_IHyperlink, value);
        }

        public global::Microsoft.UI.Xaml.Input.XYFocusNavigationStrategy XYFocusRightNavigationStrategy
        {
            get => global::ABI.Microsoft.UI.Xaml.Documents.IHyperlinkMethods.get_XYFocusRightNavigationStrategy(_objRef_global__Microsoft_UI_Xaml_Documents_IHyperlink);
            set => global::ABI.Microsoft.UI.Xaml.Documents.IHyperlinkMethods.set_XYFocusRightNavigationStrategy(_objRef_global__Microsoft_UI_Xaml_Documents_IHyperlink, value);
        }

        public global::Microsoft.UI.Xaml.DependencyObject XYFocusUp
        {
            get => global::ABI.Microsoft.UI.Xaml.Documents.IHyperlinkMethods.get_XYFocusUp(_objRef_global__Microsoft_UI_Xaml_Documents_IHyperlink);
            set => global::ABI.Microsoft.UI.Xaml.Documents.IHyperlinkMethods.set_XYFocusUp(_objRef_global__Microsoft_UI_Xaml_Documents_IHyperlink, value);
        }

        public global::Microsoft.UI.Xaml.Input.XYFocusNavigationStrategy XYFocusUpNavigationStrategy
        {
            get => global::ABI.Microsoft.UI.Xaml.Documents.IHyperlinkMethods.get_XYFocusUpNavigationStrategy(_objRef_global__Microsoft_UI_Xaml_Documents_IHyperlink);
            set => global::ABI.Microsoft.UI.Xaml.Documents.IHyperlinkMethods.set_XYFocusUpNavigationStrategy(_objRef_global__Microsoft_UI_Xaml_Documents_IHyperlink, value);
        }

        protected override bool IsOverridableInterface(Guid iid) => base.IsOverridableInterface(iid);

        global::System.Runtime.InteropServices.CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(ref Guid iid, out IntPtr ppv)
        {
            ppv = IntPtr.Zero;
            if (IsOverridableInterface(iid) || global::WinRT.Interop.IID.IID_IInspectable == iid)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
            }

            if (((IWinRTObject)this).NativeObject.TryAs(iid, out ppv) >= 0)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.Handled;
            }

            return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
        }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")]
    [global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Documents.HyperlinkClickEventArgs))]
    [global::ABI.Microsoft.UI.Xaml.Documents.HyperlinkClickEventArgsRcwFactory]
    [global::WinRT.ProjectedRuntimeClass(typeof(IHyperlinkClickEventArgs))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    public sealed class HyperlinkClickEventArgs : global::Microsoft.UI.Xaml.RoutedEventArgs, global::System.Runtime.InteropServices.ICustomQueryInterface, IWinRTObject, IEquatable<HyperlinkClickEventArgs>
    {
        private IntPtr ThisPtr => _inner == null ? (((IWinRTObject)this).NativeObject).ThisPtr : _inner.ThisPtr;

        private readonly IObjectReference _inner = null;



        private IObjectReference _objRef_global__Microsoft_UI_Xaml_Documents_IHyperlinkClickEventArgs => _inner;


        public static new HyperlinkClickEventArgs FromAbi(IntPtr thisPtr)
        {
            if (thisPtr == IntPtr.Zero) return null;
            return MarshalInspectable<HyperlinkClickEventArgs>.FromAbi(thisPtr);
        }

        internal HyperlinkClickEventArgs(IObjectReference objRef)
            : base(global::WinRT.DerivedComposed.Instance)

        {
            _inner = objRef.As(global::ABI.Microsoft.UI.Xaml.Documents.IHyperlinkClickEventArgsMethods.IID);

        }


        public static bool operator ==(HyperlinkClickEventArgs x, HyperlinkClickEventArgs y) => (x?.ThisPtr ?? IntPtr.Zero) == (y?.ThisPtr ?? IntPtr.Zero);
        public static bool operator !=(HyperlinkClickEventArgs x, HyperlinkClickEventArgs y) => !(x == y);
        public bool Equals(HyperlinkClickEventArgs other) => this == other;
        public override bool Equals(object obj) => obj is HyperlinkClickEventArgs that && this == that;
        public override int GetHashCode() => ThisPtr.GetHashCode();


        bool IWinRTObject.HasUnwrappableNativeObject => true;
        IObjectReference IWinRTObject.NativeObject => _inner;

        private struct InterfaceTag<I>{};


        protected override bool IsOverridableInterface(Guid iid) => base.IsOverridableInterface(iid);

        global::System.Runtime.InteropServices.CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(ref Guid iid, out IntPtr ppv)
        {
            ppv = IntPtr.Zero;
            if (IsOverridableInterface(iid) || global::WinRT.Interop.IID.IID_IInspectable == iid)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
            }

            if (((IWinRTObject)this).NativeObject.TryAs(iid, out ppv) >= 0)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.Handled;
            }

            return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
        }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")][Guid("8149D507-672F-5FD5-A10A-351389BA9659")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Documents.IBlock))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    internal interface IBlock
    {
        global::Microsoft.UI.Xaml.TextAlignment HorizontalTextAlignment { get; set; }
        double LineHeight { get; set; }
        global::Microsoft.UI.Xaml.LineStackingStrategy LineStackingStrategy { get; set; }
        global::Microsoft.UI.Xaml.Thickness Margin { get; set; }
        global::Microsoft.UI.Xaml.TextAlignment TextAlignment { get; set; }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")][Guid("21BD671C-33E2-56EF-BE37-A128E898452C")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Documents.IBlockFactory))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    internal interface IBlockFactory
    {
        Block CreateInstance(object baseInterface, out object innerInterface);
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")][Guid("830FEEDF-9AA6-56CD-983E-055500171B45")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Documents.IBlockStatics))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    internal interface IBlockStatics
    {
        global::Microsoft.UI.Xaml.DependencyProperty HorizontalTextAlignmentProperty { get; }
        global::Microsoft.UI.Xaml.DependencyProperty LineHeightProperty { get; }
        global::Microsoft.UI.Xaml.DependencyProperty LineStackingStrategyProperty { get; }
        global::Microsoft.UI.Xaml.DependencyProperty MarginProperty { get; }
        global::Microsoft.UI.Xaml.DependencyProperty TextAlignmentProperty { get; }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")][Guid("241A5F5A-C164-597F-B0DB-FAC7431297F2")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Documents.IBold))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    internal interface IBold
    {
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")][Guid("0FBF8CFE-18E7-5E45-9FA3-D2D0927958F4")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Documents.IGlyphs))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    internal interface IGlyphs
    {
        int ColorFontPaletteIndex { get; set; }
        global::Microsoft.UI.Xaml.Media.Brush Fill { get; set; }
        double FontRenderingEmSize { get; set; }
        global::System.Uri FontUri { get; set; }
        string Indices { get; set; }
        bool IsColorFontEnabled { get; set; }
        double OriginX { get; set; }
        double OriginY { get; set; }
        global::Microsoft.UI.Xaml.Media.StyleSimulations StyleSimulations { get; set; }
        string UnicodeString { get; set; }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")][Guid("8D9E241A-3E0E-5100-8EDE-E008034FF8AE")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Documents.IGlyphsStatics))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    internal interface IGlyphsStatics
    {
        global::Microsoft.UI.Xaml.DependencyProperty ColorFontPaletteIndexProperty { get; }
        global::Microsoft.UI.Xaml.DependencyProperty FillProperty { get; }
        global::Microsoft.UI.Xaml.DependencyProperty FontRenderingEmSizeProperty { get; }
        global::Microsoft.UI.Xaml.DependencyProperty FontUriProperty { get; }
        global::Microsoft.UI.Xaml.DependencyProperty IndicesProperty { get; }
        global::Microsoft.UI.Xaml.DependencyProperty IsColorFontEnabledProperty { get; }
        global::Microsoft.UI.Xaml.DependencyProperty OriginXProperty { get; }
        global::Microsoft.UI.Xaml.DependencyProperty OriginYProperty { get; }
        global::Microsoft.UI.Xaml.DependencyProperty StyleSimulationsProperty { get; }
        global::Microsoft.UI.Xaml.DependencyProperty UnicodeStringProperty { get; }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")][Guid("AC09BD16-CDFA-54C2-8D03-A474181545B1")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Documents.IHyperlink))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    internal interface IHyperlink
    {
        bool Focus(global::Microsoft.UI.Xaml.FocusState value);
        global::Microsoft.UI.Xaml.ElementSoundMode ElementSoundMode { get; set; }
        global::Microsoft.UI.Xaml.FocusState FocusState { get; }
        bool IsTabStop { get; set; }
        global::System.Uri NavigateUri { get; set; }
        int TabIndex { get; set; }
        UnderlineStyle UnderlineStyle { get; set; }
        global::Microsoft.UI.Xaml.DependencyObject XYFocusDown { get; set; }
        global::Microsoft.UI.Xaml.Input.XYFocusNavigationStrategy XYFocusDownNavigationStrategy { get; set; }
        global::Microsoft.UI.Xaml.DependencyObject XYFocusLeft { get; set; }
        global::Microsoft.UI.Xaml.Input.XYFocusNavigationStrategy XYFocusLeftNavigationStrategy { get; set; }
        global::Microsoft.UI.Xaml.DependencyObject XYFocusRight { get; set; }
        global::Microsoft.UI.Xaml.Input.XYFocusNavigationStrategy XYFocusRightNavigationStrategy { get; set; }
        global::Microsoft.UI.Xaml.DependencyObject XYFocusUp { get; set; }
        global::Microsoft.UI.Xaml.Input.XYFocusNavigationStrategy XYFocusUpNavigationStrategy { get; set; }
        event global::Windows.Foundation.TypedEventHandler<Hyperlink, HyperlinkClickEventArgs> Click;
        event global::Microsoft.UI.Xaml.RoutedEventHandler GotFocus;
        event global::Microsoft.UI.Xaml.RoutedEventHandler LostFocus;
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")][Guid("F8F89552-873D-5EF5-82BF-C79A9509B07C")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Documents.IHyperlinkClickEventArgs))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    internal interface IHyperlinkClickEventArgs
    {
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")][Guid("E13598F4-7BC7-5AB9-885B-70F32F8C9531")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Documents.IHyperlinkStatics))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    internal interface IHyperlinkStatics
    {
        global::Microsoft.UI.Xaml.DependencyProperty ElementSoundModeProperty { get; }
        global::Microsoft.UI.Xaml.DependencyProperty FocusStateProperty { get; }
        global::Microsoft.UI.Xaml.DependencyProperty IsTabStopProperty { get; }
        global::Microsoft.UI.Xaml.DependencyProperty NavigateUriProperty { get; }
        global::Microsoft.UI.Xaml.DependencyProperty TabIndexProperty { get; }
        global::Microsoft.UI.Xaml.DependencyProperty UnderlineStyleProperty { get; }
        global::Microsoft.UI.Xaml.DependencyProperty XYFocusDownNavigationStrategyProperty { get; }
        global::Microsoft.UI.Xaml.DependencyProperty XYFocusDownProperty { get; }
        global::Microsoft.UI.Xaml.DependencyProperty XYFocusLeftNavigationStrategyProperty { get; }
        global::Microsoft.UI.Xaml.DependencyProperty XYFocusLeftProperty { get; }
        global::Microsoft.UI.Xaml.DependencyProperty XYFocusRightNavigationStrategyProperty { get; }
        global::Microsoft.UI.Xaml.DependencyProperty XYFocusRightProperty { get; }
        global::Microsoft.UI.Xaml.DependencyProperty XYFocusUpNavigationStrategyProperty { get; }
        global::Microsoft.UI.Xaml.DependencyProperty XYFocusUpProperty { get; }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")][Guid("813D427A-8980-5A79-A8FA-F27919CFB24F")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Documents.IInline))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    internal interface IInline
    {
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")][Guid("FD253A36-FA2B-5B30-89A8-9F577871EC07")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Documents.IInlineFactory))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    internal interface IInlineFactory
    {
        Inline CreateInstance(object baseInterface, out object innerInterface);
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")][Guid("D529BEF6-C05A-5BAD-85E8-640127CF86F5")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Documents.IInlineUIContainer))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    internal interface IInlineUIContainer
    {
        global::Microsoft.UI.Xaml.UIElement Child { get; set; }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")][Guid("CA3CBEBD-7A8D-5D7A-8FDF-538E8A680F6C")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Documents.IItalic))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    internal interface IItalic
    {
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")][Guid("09307599-7CC2-5F54-B106-728620C16F76")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Documents.ILineBreak))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    internal interface ILineBreak
    {
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")][Guid("9ED64C77-329D-502F-A257-F58398EDAB51")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Documents.IParagraph))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    internal interface IParagraph
    {
        InlineCollection Inlines { get; }
        double TextIndent { get; set; }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")][Guid("4EB89AB1-66C8-5FC0-AA5F-48C8092CEB5F")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Documents.IParagraphStatics))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    internal interface IParagraphStatics
    {
        global::Microsoft.UI.Xaml.DependencyProperty TextIndentProperty { get; }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")][Guid("1F905239-37CB-590B-9132-3FFB7741906E")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Documents.IRun))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    internal interface IRun
    {
        global::Microsoft.UI.Xaml.FlowDirection FlowDirection { get; set; }
        string Text { get; set; }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")][Guid("051B3C5B-7600-51A5-80C5-93EB50FD684F")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Documents.IRunStatics))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    internal interface IRunStatics
    {
        global::Microsoft.UI.Xaml.DependencyProperty FlowDirectionProperty { get; }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")][Guid("91B93D4D-4E28-57B9-BFFB-3566C2A3C2A1")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Documents.ISpan))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    internal interface ISpan
    {
        InlineCollection Inlines { get; set; }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")][Guid("A6E87C16-C175-55C8-BBD3-CE40F9D0A680")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Documents.ISpanFactory))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    internal interface ISpanFactory
    {
        Span CreateInstance(object baseInterface, out object innerInterface);
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")][Guid("A122BA22-833F-5220-A47E-6CD507531ABE")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Documents.ITextElement))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    internal interface ITextElement
    {
        object FindName(string name);
        string AccessKey { get; set; }
        global::Microsoft.UI.Xaml.DependencyObject AccessKeyScopeOwner { get; set; }
        bool AllowFocusOnInteraction { get; set; }
        int CharacterSpacing { get; set; }
        TextPointer ContentEnd { get; }
        TextPointer ContentStart { get; }
        TextPointer ElementEnd { get; }
        TextPointer ElementStart { get; }
        bool ExitDisplayModeOnAccessKeyInvoked { get; set; }
        global::Microsoft.UI.Xaml.Media.FontFamily FontFamily { get; set; }
        double FontSize { get; set; }
        global::Windows.UI.Text.FontStretch FontStretch { get; set; }
        global::Windows.UI.Text.FontStyle FontStyle { get; set; }
        global::Windows.UI.Text.FontWeight FontWeight { get; set; }
        global::Microsoft.UI.Xaml.Media.Brush Foreground { get; set; }
        bool IsAccessKeyScope { get; set; }
        bool IsTextScaleFactorEnabled { get; set; }
        double KeyTipHorizontalOffset { get; set; }
        global::Microsoft.UI.Xaml.Input.KeyTipPlacementMode KeyTipPlacementMode { get; set; }
        double KeyTipVerticalOffset { get; set; }
        string Language { get; set; }
        string Name { get; }
        global::Windows.UI.Text.TextDecorations TextDecorations { get; set; }
        global::Microsoft.UI.Xaml.XamlRoot XamlRoot { get; set; }
        event global::Windows.Foundation.TypedEventHandler<TextElement, global::Microsoft.UI.Xaml.Input.AccessKeyDisplayDismissedEventArgs> AccessKeyDisplayDismissed;
        event global::Windows.Foundation.TypedEventHandler<TextElement, global::Microsoft.UI.Xaml.Input.AccessKeyDisplayRequestedEventArgs> AccessKeyDisplayRequested;
        event global::Windows.Foundation.TypedEventHandler<TextElement, global::Microsoft.UI.Xaml.Input.AccessKeyInvokedEventArgs> AccessKeyInvoked;
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")][Guid("DF51FB95-A5E6-5B16-8E88-9F7CBFA234B1")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Documents.ITextElementFactory))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    internal interface ITextElementFactory
    {
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")][Guid("41B01380-E49F-5FDA-8C72-ACC1AC1E91DF")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Documents.ITextElementOverrides))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    internal interface ITextElementOverrides
    {
        void OnDisconnectVisualChildren();
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")][Guid("C9B55919-E1FE-5ACD-BAC7-C9D7F413B35C")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Documents.ITextElementStatics))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    internal interface ITextElementStatics
    {
        global::Microsoft.UI.Xaml.DependencyProperty AccessKeyProperty { get; }
        global::Microsoft.UI.Xaml.DependencyProperty AccessKeyScopeOwnerProperty { get; }
        global::Microsoft.UI.Xaml.DependencyProperty AllowFocusOnInteractionProperty { get; }
        global::Microsoft.UI.Xaml.DependencyProperty CharacterSpacingProperty { get; }
        global::Microsoft.UI.Xaml.DependencyProperty ExitDisplayModeOnAccessKeyInvokedProperty { get; }
        global::Microsoft.UI.Xaml.DependencyProperty FontFamilyProperty { get; }
        global::Microsoft.UI.Xaml.DependencyProperty FontSizeProperty { get; }
        global::Microsoft.UI.Xaml.DependencyProperty FontStretchProperty { get; }
        global::Microsoft.UI.Xaml.DependencyProperty FontStyleProperty { get; }
        global::Microsoft.UI.Xaml.DependencyProperty FontWeightProperty { get; }
        global::Microsoft.UI.Xaml.DependencyProperty ForegroundProperty { get; }
        global::Microsoft.UI.Xaml.DependencyProperty IsAccessKeyScopeProperty { get; }
        global::Microsoft.UI.Xaml.DependencyProperty IsTextScaleFactorEnabledProperty { get; }
        global::Microsoft.UI.Xaml.DependencyProperty KeyTipHorizontalOffsetProperty { get; }
        global::Microsoft.UI.Xaml.DependencyProperty KeyTipPlacementModeProperty { get; }
        global::Microsoft.UI.Xaml.DependencyProperty KeyTipVerticalOffsetProperty { get; }
        global::Microsoft.UI.Xaml.DependencyProperty LanguageProperty { get; }
        global::Microsoft.UI.Xaml.DependencyProperty TextDecorationsProperty { get; }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")][Guid("B756E861-1D2B-5F6F-81FD-C51A5BC068FF")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Documents.ITextHighlighter))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    internal interface ITextHighlighter
    {
        global::Microsoft.UI.Xaml.Media.Brush Background { get; set; }
        global::Microsoft.UI.Xaml.Media.Brush Foreground { get; set; }
        global::System.Collections.Generic.IList<TextRange> Ranges { get; }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")][Guid("5C21AAF0-3A17-5468-8AAC-BE14DB0ED8C1")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Documents.ITextHighlighterBase))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    internal interface ITextHighlighterBase
    {
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")][Guid("E091E461-53AB-599E-AAEA-800ADC72DA4F")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Documents.ITextHighlighterBaseFactory))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    internal interface ITextHighlighterBaseFactory
    {
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")][Guid("69C7311F-C019-5B93-B511-81418543BAB7")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Documents.ITextHighlighterFactory))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    internal interface ITextHighlighterFactory
    {
        TextHighlighter CreateInstance(object baseInterface, out object innerInterface);
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")][Guid("4975047A-87AD-51A2-977C-E771DE4F4035")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Documents.ITextHighlighterStatics))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    internal interface ITextHighlighterStatics
    {
        global::Microsoft.UI.Xaml.DependencyProperty BackgroundProperty { get; }
        global::Microsoft.UI.Xaml.DependencyProperty ForegroundProperty { get; }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")][Guid("842EB385-EE41-5930-979B-438FA7525A51")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Documents.ITextPointer))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    internal interface ITextPointer
    {
        global::Windows.Foundation.Rect GetCharacterRect(LogicalDirection direction);
        TextPointer GetPositionAtOffset(int offset, LogicalDirection direction);
        LogicalDirection LogicalDirection { get; }
        int Offset { get; }
        global::Microsoft.UI.Xaml.DependencyObject Parent { get; }
        global::Microsoft.UI.Xaml.FrameworkElement VisualParent { get; }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")][Guid("FA27E2E3-BE5E-5D21-9A5E-90CF102AF828")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Documents.ITypography))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    internal interface ITypography
    {
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")][Guid("55FE4535-2125-533A-ADA8-27BE2B9E1193")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Documents.ITypographyStatics))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    internal interface ITypographyStatics
    {
        int GetAnnotationAlternates(global::Microsoft.UI.Xaml.DependencyObject element);
        void SetAnnotationAlternates(global::Microsoft.UI.Xaml.DependencyObject element, int value);
        bool GetEastAsianExpertForms(global::Microsoft.UI.Xaml.DependencyObject element);
        void SetEastAsianExpertForms(global::Microsoft.UI.Xaml.DependencyObject element, bool value);
        global::Microsoft.UI.Xaml.FontEastAsianLanguage GetEastAsianLanguage(global::Microsoft.UI.Xaml.DependencyObject element);
        void SetEastAsianLanguage(global::Microsoft.UI.Xaml.DependencyObject element, global::Microsoft.UI.Xaml.FontEastAsianLanguage value);
        global::Microsoft.UI.Xaml.FontEastAsianWidths GetEastAsianWidths(global::Microsoft.UI.Xaml.DependencyObject element);
        void SetEastAsianWidths(global::Microsoft.UI.Xaml.DependencyObject element, global::Microsoft.UI.Xaml.FontEastAsianWidths value);
        bool GetStandardLigatures(global::Microsoft.UI.Xaml.DependencyObject element);
        void SetStandardLigatures(global::Microsoft.UI.Xaml.DependencyObject element, bool value);
        bool GetContextualLigatures(global::Microsoft.UI.Xaml.DependencyObject element);
        void SetContextualLigatures(global::Microsoft.UI.Xaml.DependencyObject element, bool value);
        bool GetDiscretionaryLigatures(global::Microsoft.UI.Xaml.DependencyObject element);
        void SetDiscretionaryLigatures(global::Microsoft.UI.Xaml.DependencyObject element, bool value);
        bool GetHistoricalLigatures(global::Microsoft.UI.Xaml.DependencyObject element);
        void SetHistoricalLigatures(global::Microsoft.UI.Xaml.DependencyObject element, bool value);
        int GetStandardSwashes(global::Microsoft.UI.Xaml.DependencyObject element);
        void SetStandardSwashes(global::Microsoft.UI.Xaml.DependencyObject element, int value);
        int GetContextualSwashes(global::Microsoft.UI.Xaml.DependencyObject element);
        void SetContextualSwashes(global::Microsoft.UI.Xaml.DependencyObject element, int value);
        bool GetContextualAlternates(global::Microsoft.UI.Xaml.DependencyObject element);
        void SetContextualAlternates(global::Microsoft.UI.Xaml.DependencyObject element, bool value);
        int GetStylisticAlternates(global::Microsoft.UI.Xaml.DependencyObject element);
        void SetStylisticAlternates(global::Microsoft.UI.Xaml.DependencyObject element, int value);
        bool GetStylisticSet1(global::Microsoft.UI.Xaml.DependencyObject element);
        void SetStylisticSet1(global::Microsoft.UI.Xaml.DependencyObject element, bool value);
        bool GetStylisticSet2(global::Microsoft.UI.Xaml.DependencyObject element);
        void SetStylisticSet2(global::Microsoft.UI.Xaml.DependencyObject element, bool value);
        bool GetStylisticSet3(global::Microsoft.UI.Xaml.DependencyObject element);
        void SetStylisticSet3(global::Microsoft.UI.Xaml.DependencyObject element, bool value);
        bool GetStylisticSet4(global::Microsoft.UI.Xaml.DependencyObject element);
        void SetStylisticSet4(global::Microsoft.UI.Xaml.DependencyObject element, bool value);
        bool GetStylisticSet5(global::Microsoft.UI.Xaml.DependencyObject element);
        void SetStylisticSet5(global::Microsoft.UI.Xaml.DependencyObject element, bool value);
        bool GetStylisticSet6(global::Microsoft.UI.Xaml.DependencyObject element);
        void SetStylisticSet6(global::Microsoft.UI.Xaml.DependencyObject element, bool value);
        bool GetStylisticSet7(global::Microsoft.UI.Xaml.DependencyObject element);
        void SetStylisticSet7(global::Microsoft.UI.Xaml.DependencyObject element, bool value);
        bool GetStylisticSet8(global::Microsoft.UI.Xaml.DependencyObject element);
        void SetStylisticSet8(global::Microsoft.UI.Xaml.DependencyObject element, bool value);
        bool GetStylisticSet9(global::Microsoft.UI.Xaml.DependencyObject element);
        void SetStylisticSet9(global::Microsoft.UI.Xaml.DependencyObject element, bool value);
        bool GetStylisticSet10(global::Microsoft.UI.Xaml.DependencyObject element);
        void SetStylisticSet10(global::Microsoft.UI.Xaml.DependencyObject element, bool value);
        bool GetStylisticSet11(global::Microsoft.UI.Xaml.DependencyObject element);
        void SetStylisticSet11(global::Microsoft.UI.Xaml.DependencyObject element, bool value);
        bool GetStylisticSet12(global::Microsoft.UI.Xaml.DependencyObject element);
        void SetStylisticSet12(global::Microsoft.UI.Xaml.DependencyObject element, bool value);
        bool GetStylisticSet13(global::Microsoft.UI.Xaml.DependencyObject element);
        void SetStylisticSet13(global::Microsoft.UI.Xaml.DependencyObject element, bool value);
        bool GetStylisticSet14(global::Microsoft.UI.Xaml.DependencyObject element);
        void SetStylisticSet14(global::Microsoft.UI.Xaml.DependencyObject element, bool value);
        bool GetStylisticSet15(global::Microsoft.UI.Xaml.DependencyObject element);
        void SetStylisticSet15(global::Microsoft.UI.Xaml.DependencyObject element, bool value);
        bool GetStylisticSet16(global::Microsoft.UI.Xaml.DependencyObject element);
        void SetStylisticSet16(global::Microsoft.UI.Xaml.DependencyObject element, bool value);
        bool GetStylisticSet17(global::Microsoft.UI.Xaml.DependencyObject element);
        void SetStylisticSet17(global::Microsoft.UI.Xaml.DependencyObject element, bool value);
        bool GetStylisticSet18(global::Microsoft.UI.Xaml.DependencyObject element);
        void SetStylisticSet18(global::Microsoft.UI.Xaml.DependencyObject element, bool value);
        bool GetStylisticSet19(global::Microsoft.UI.Xaml.DependencyObject element);
        void SetStylisticSet19(global::Microsoft.UI.Xaml.DependencyObject element, bool value);
        bool GetStylisticSet20(global::Microsoft.UI.Xaml.DependencyObject element);
        void SetStylisticSet20(global::Microsoft.UI.Xaml.DependencyObject element, bool value);
        global::Microsoft.UI.Xaml.FontCapitals GetCapitals(global::Microsoft.UI.Xaml.DependencyObject element);
        void SetCapitals(global::Microsoft.UI.Xaml.DependencyObject element, global::Microsoft.UI.Xaml.FontCapitals value);
        bool GetCapitalSpacing(global::Microsoft.UI.Xaml.DependencyObject element);
        void SetCapitalSpacing(global::Microsoft.UI.Xaml.DependencyObject element, bool value);
        bool GetKerning(global::Microsoft.UI.Xaml.DependencyObject element);
        void SetKerning(global::Microsoft.UI.Xaml.DependencyObject element, bool value);
        bool GetCaseSensitiveForms(global::Microsoft.UI.Xaml.DependencyObject element);
        void SetCaseSensitiveForms(global::Microsoft.UI.Xaml.DependencyObject element, bool value);
        bool GetHistoricalForms(global::Microsoft.UI.Xaml.DependencyObject element);
        void SetHistoricalForms(global::Microsoft.UI.Xaml.DependencyObject element, bool value);
        global::Microsoft.UI.Xaml.FontFraction GetFraction(global::Microsoft.UI.Xaml.DependencyObject element);
        void SetFraction(global::Microsoft.UI.Xaml.DependencyObject element, global::Microsoft.UI.Xaml.FontFraction value);
        global::Microsoft.UI.Xaml.FontNumeralStyle GetNumeralStyle(global::Microsoft.UI.Xaml.DependencyObject element);
        void SetNumeralStyle(global::Microsoft.UI.Xaml.DependencyObject element, global::Microsoft.UI.Xaml.FontNumeralStyle value);
        global::Microsoft.UI.Xaml.FontNumeralAlignment GetNumeralAlignment(global::Microsoft.UI.Xaml.DependencyObject element);
        void SetNumeralAlignment(global::Microsoft.UI.Xaml.DependencyObject element, global::Microsoft.UI.Xaml.FontNumeralAlignment value);
        bool GetSlashedZero(global::Microsoft.UI.Xaml.DependencyObject element);
        void SetSlashedZero(global::Microsoft.UI.Xaml.DependencyObject element, bool value);
        bool GetMathematicalGreek(global::Microsoft.UI.Xaml.DependencyObject element);
        void SetMathematicalGreek(global::Microsoft.UI.Xaml.DependencyObject element, bool value);
        global::Microsoft.UI.Xaml.FontVariants GetVariants(global::Microsoft.UI.Xaml.DependencyObject element);
        void SetVariants(global::Microsoft.UI.Xaml.DependencyObject element, global::Microsoft.UI.Xaml.FontVariants value);
        global::Microsoft.UI.Xaml.DependencyProperty AnnotationAlternatesProperty { get; }
        global::Microsoft.UI.Xaml.DependencyProperty CapitalSpacingProperty { get; }
        global::Microsoft.UI.Xaml.DependencyProperty CapitalsProperty { get; }
        global::Microsoft.UI.Xaml.DependencyProperty CaseSensitiveFormsProperty { get; }
        global::Microsoft.UI.Xaml.DependencyProperty ContextualAlternatesProperty { get; }
        global::Microsoft.UI.Xaml.DependencyProperty ContextualLigaturesProperty { get; }
        global::Microsoft.UI.Xaml.DependencyProperty ContextualSwashesProperty { get; }
        global::Microsoft.UI.Xaml.DependencyProperty DiscretionaryLigaturesProperty { get; }
        global::Microsoft.UI.Xaml.DependencyProperty EastAsianExpertFormsProperty { get; }
        global::Microsoft.UI.Xaml.DependencyProperty EastAsianLanguageProperty { get; }
        global::Microsoft.UI.Xaml.DependencyProperty EastAsianWidthsProperty { get; }
        global::Microsoft.UI.Xaml.DependencyProperty FractionProperty { get; }
        global::Microsoft.UI.Xaml.DependencyProperty HistoricalFormsProperty { get; }
        global::Microsoft.UI.Xaml.DependencyProperty HistoricalLigaturesProperty { get; }
        global::Microsoft.UI.Xaml.DependencyProperty KerningProperty { get; }
        global::Microsoft.UI.Xaml.DependencyProperty MathematicalGreekProperty { get; }
        global::Microsoft.UI.Xaml.DependencyProperty NumeralAlignmentProperty { get; }
        global::Microsoft.UI.Xaml.DependencyProperty NumeralStyleProperty { get; }
        global::Microsoft.UI.Xaml.DependencyProperty SlashedZeroProperty { get; }
        global::Microsoft.UI.Xaml.DependencyProperty StandardLigaturesProperty { get; }
        global::Microsoft.UI.Xaml.DependencyProperty StandardSwashesProperty { get; }
        global::Microsoft.UI.Xaml.DependencyProperty StylisticAlternatesProperty { get; }
        global::Microsoft.UI.Xaml.DependencyProperty StylisticSet10Property { get; }
        global::Microsoft.UI.Xaml.DependencyProperty StylisticSet11Property { get; }
        global::Microsoft.UI.Xaml.DependencyProperty StylisticSet12Property { get; }
        global::Microsoft.UI.Xaml.DependencyProperty StylisticSet13Property { get; }
        global::Microsoft.UI.Xaml.DependencyProperty StylisticSet14Property { get; }
        global::Microsoft.UI.Xaml.DependencyProperty StylisticSet15Property { get; }
        global::Microsoft.UI.Xaml.DependencyProperty StylisticSet16Property { get; }
        global::Microsoft.UI.Xaml.DependencyProperty StylisticSet17Property { get; }
        global::Microsoft.UI.Xaml.DependencyProperty StylisticSet18Property { get; }
        global::Microsoft.UI.Xaml.DependencyProperty StylisticSet19Property { get; }
        global::Microsoft.UI.Xaml.DependencyProperty StylisticSet1Property { get; }
        global::Microsoft.UI.Xaml.DependencyProperty StylisticSet20Property { get; }
        global::Microsoft.UI.Xaml.DependencyProperty StylisticSet2Property { get; }
        global::Microsoft.UI.Xaml.DependencyProperty StylisticSet3Property { get; }
        global::Microsoft.UI.Xaml.DependencyProperty StylisticSet4Property { get; }
        global::Microsoft.UI.Xaml.DependencyProperty StylisticSet5Property { get; }
        global::Microsoft.UI.Xaml.DependencyProperty StylisticSet6Property { get; }
        global::Microsoft.UI.Xaml.DependencyProperty StylisticSet7Property { get; }
        global::Microsoft.UI.Xaml.DependencyProperty StylisticSet8Property { get; }
        global::Microsoft.UI.Xaml.DependencyProperty StylisticSet9Property { get; }
        global::Microsoft.UI.Xaml.DependencyProperty VariantsProperty { get; }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")][Guid("68AAEC6E-EA71-5ED2-B83E-91684B25EFB9")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Documents.IUnderline))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    internal interface IUnderline
    {
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")]
    [global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Documents.Inline))]
    [global::ABI.Microsoft.UI.Xaml.Documents.InlineRcwFactory]
    [global::WinRT.ProjectedRuntimeClass(typeof(IInline))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    public class Inline : TextElement, global::System.Runtime.InteropServices.ICustomQueryInterface, IWinRTObject, IEquatable<Inline>
    {
        private IntPtr ThisPtr => _inner == null ? (((IWinRTObject)this).NativeObject).ThisPtr : _inner.ThisPtr;

        private readonly IObjectReference _inner = null;




        private volatile IObjectReference ___objRef_global__Microsoft_UI_Xaml_Documents_IInline;
        private IObjectReference Make___objRef_global__Microsoft_UI_Xaml_Documents_IInline()
        {
            global::System.Threading.Interlocked.CompareExchange(ref ___objRef_global__Microsoft_UI_Xaml_Documents_IInline, ((IWinRTObject)this).NativeObject.As<IUnknownVftbl>(global::ABI.Microsoft.UI.Xaml.Documents.IInlineMethods.IID), null);
            return ___objRef_global__Microsoft_UI_Xaml_Documents_IInline;
        }
        private IObjectReference _objRef_global__Microsoft_UI_Xaml_Documents_IInline => ___objRef_global__Microsoft_UI_Xaml_Documents_IInline ?? Make___objRef_global__Microsoft_UI_Xaml_Documents_IInline();



        private static class _IInlineFactoryMethods
        {
            public static unsafe IntPtr CreateInstance(IObjectReference _obj, object baseInterface, out IntPtr innerInterface)
            {
                var ThisPtr = _obj.ThisPtr;

                ObjectReferenceValue __baseInterface = default;
                IntPtr __innerInterface = default;
                IntPtr __retval = default;
                try
                {
                    __baseInterface = MarshalInspectable<object>.CreateMarshaler2(baseInterface);
                    global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, IntPtr*, IntPtr*, int>**)ThisPtr)[6](ThisPtr, MarshalInspectable<object>.GetAbi(__baseInterface), &__innerInterface, &__retval));
                    global::System.GC.KeepAlive(_obj);
                    innerInterface = __innerInterface;
                    return __retval;
                }
                finally
                {
                    MarshalInspectable<object>.DisposeMarshaler(__baseInterface);
                }
            }
        }

        private static volatile IObjectReference ___objRef_global__Microsoft_UI_Xaml_Documents_IInlineFactory;
        private static IObjectReference _objRef_global__Microsoft_UI_Xaml_Documents_IInlineFactory
        {
            get
            { 
                var factory = ___objRef_global__Microsoft_UI_Xaml_Documents_IInlineFactory;
                if (factory != null && factory.IsInCurrentContext)
                {
                    return factory;
                }
                else
                {
                    return ___objRef_global__Microsoft_UI_Xaml_Documents_IInlineFactory = ActivationFactory.Get("Microsoft.UI.Xaml.Documents.Inline", global::ABI.Microsoft.UI.Xaml.Documents.IInlineFactoryMethods.IID);
                }
            }
        }

        protected Inline():base(global::WinRT.DerivedComposed.Instance)
        {
            bool isAggregation = this.GetType() != typeof(Inline);
            object baseInspectable = isAggregation ? this : null;
            IntPtr composed = _IInlineFactoryMethods.CreateInstance(_objRef_global__Microsoft_UI_Xaml_Documents_IInlineFactory,  baseInspectable, out IntPtr inner);
            try
            {
                ComWrappersHelper.Init(isAggregation, this, composed, inner, global::ABI.Microsoft.UI.Xaml.Documents.IInlineMethods.IID, out _inner);

            }
            finally
            {
                Marshal.Release(inner);   
            }
        }

        public static new Inline FromAbi(IntPtr thisPtr)
        {
            if (thisPtr == IntPtr.Zero) return null;
            return MarshalInspectable<Inline>.FromAbi(thisPtr);
        }

        protected internal Inline(IObjectReference objRef)
            : base(global::WinRT.DerivedComposed.Instance)

        {
            _inner = objRef.As(global::ABI.Microsoft.UI.Xaml.Documents.IInlineMethods.IID);

        }


        public static bool operator ==(Inline x, Inline y) => (x?.ThisPtr ?? IntPtr.Zero) == (y?.ThisPtr ?? IntPtr.Zero);
        public static bool operator !=(Inline x, Inline y) => !(x == y);
        public bool Equals(Inline other) => this == other;
        public override bool Equals(object obj) => obj is Inline that && this == that;
        public override int GetHashCode() => ThisPtr.GetHashCode();


        protected Inline(global::WinRT.DerivedComposed _):base(_)
        {

        }
        bool IWinRTObject.HasUnwrappableNativeObject => this.GetType() == typeof(Inline);
        IObjectReference IWinRTObject.NativeObject => _inner;

        private struct InterfaceTag<I>{};


        protected override bool IsOverridableInterface(Guid iid) => base.IsOverridableInterface(iid);

        global::System.Runtime.InteropServices.CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(ref Guid iid, out IntPtr ppv)
        {
            ppv = IntPtr.Zero;
            if (IsOverridableInterface(iid) || global::WinRT.Interop.IID.IID_IInspectable == iid)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
            }

            if (((IWinRTObject)this).NativeObject.TryAs(iid, out ppv) >= 0)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.Handled;
            }

            return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
        }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")]
    [global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Documents.InlineCollection))]
    [global::ABI.Microsoft.UI.Xaml.Documents.InlineCollectionRcwFactory]
    [global::WinRT.ProjectedRuntimeClass(typeof(global::System.Collections.Generic.IList<Inline>))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    public sealed class InlineCollection : global::System.Collections.Generic.IList<Inline>, global::System.Collections.Generic.IEnumerable<Inline>, global::System.Runtime.InteropServices.ICustomQueryInterface, IWinRTObject, IEquatable<InlineCollection>
    {
        private IntPtr ThisPtr => _inner == null ? (((IWinRTObject)this).NativeObject).ThisPtr : _inner.ThisPtr;

        private readonly IObjectReference _inner = null;




        private volatile IObjectReference ___objRef_global__System_Collections_Generic_IList_Inline_;
        private IObjectReference Make___objRef_global__System_Collections_Generic_IList_Inline_()
        {
            _ = global::WinRT.GenericTypeInstantiations.Windows_Foundation_Collections_IVector_1_Microsoft_UI_Xaml_Documents_Inline.EnsureInitialized();
            global::System.Threading.Interlocked.CompareExchange(ref ___objRef_global__System_Collections_Generic_IList_Inline_, ((IWinRTObject)this).NativeObject.As<IUnknownVftbl>(global::ABI.System.Collections.Generic.IListMethods<Inline>.IID), null);
            return ___objRef_global__System_Collections_Generic_IList_Inline_;
        }
        private IObjectReference _objRef_global__System_Collections_Generic_IList_Inline_ => ___objRef_global__System_Collections_Generic_IList_Inline_ ?? Make___objRef_global__System_Collections_Generic_IList_Inline_();

        private volatile IObjectReference ___objRef_global__System_Collections_Generic_IEnumerable_Inline_;
        private IObjectReference Make___objRef_global__System_Collections_Generic_IEnumerable_Inline_()
        {
            _ = global::WinRT.GenericTypeInstantiations.Windows_Foundation_Collections_IIterable_1_Microsoft_UI_Xaml_Documents_Inline.EnsureInitialized();
            global::System.Threading.Interlocked.CompareExchange(ref ___objRef_global__System_Collections_Generic_IEnumerable_Inline_, ((IWinRTObject)this).NativeObject.As<IUnknownVftbl>(global::ABI.System.Collections.Generic.IEnumerableMethods<Inline>.IID), null);
            return ___objRef_global__System_Collections_Generic_IEnumerable_Inline_;
        }
        private IObjectReference _objRef_global__System_Collections_Generic_IEnumerable_Inline_ => ___objRef_global__System_Collections_Generic_IEnumerable_Inline_ ?? Make___objRef_global__System_Collections_Generic_IEnumerable_Inline_();



        public static InlineCollection FromAbi(IntPtr thisPtr)
        {
            if (thisPtr == IntPtr.Zero) return null;
            return MarshalInspectable<InlineCollection>.FromAbi(thisPtr);
        }

        internal InlineCollection(IObjectReference objRef)
        {
            _inner = objRef.As(global::ABI.System.Collections.Generic.IListMethods<Inline>.IID);

        }


        public static bool operator ==(InlineCollection x, InlineCollection y) => (x?.ThisPtr ?? IntPtr.Zero) == (y?.ThisPtr ?? IntPtr.Zero);
        public static bool operator !=(InlineCollection x, InlineCollection y) => !(x == y);
        public bool Equals(InlineCollection other) => this == other;
        public override bool Equals(object obj) => obj is InlineCollection that && this == that;
        public override int GetHashCode() => ThisPtr.GetHashCode();


        bool IWinRTObject.HasUnwrappableNativeObject => true;
        IObjectReference IWinRTObject.NativeObject => _inner;
        private volatile global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> _queryInterfaceCache;
        private global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> MakeQueryInterfaceCache()
        {
            global::System.Threading.Interlocked.CompareExchange(ref _queryInterfaceCache, new global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference>(), null); 
            return _queryInterfaceCache;
        }
        global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> IWinRTObject.QueryInterfaceCache => _queryInterfaceCache ?? MakeQueryInterfaceCache();
        private volatile global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> _additionalTypeData;
        private global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> MakeAdditionalTypeData()
        {
            global::System.Threading.Interlocked.CompareExchange(ref _additionalTypeData, new global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object>(), null); 
            return _additionalTypeData;
        }
        global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> IWinRTObject.AdditionalTypeData => _additionalTypeData ?? MakeAdditionalTypeData();

        private struct InterfaceTag<I>{};


        public int Count => global::ABI.System.Collections.Generic.IListMethods<Inline>.get_Count(_objRef_global__System_Collections_Generic_IList_Inline_);
        public bool IsReadOnly => global::ABI.System.Collections.Generic.IListMethods<Inline>.get_IsReadOnly(_objRef_global__System_Collections_Generic_IList_Inline_);
        [global::System.Runtime.CompilerServices.IndexerName("ListItem")]
        public Inline this[int index] 
        {
            get => global::ABI.System.Collections.Generic.IListMethods<Inline>.Indexer_Get(_objRef_global__System_Collections_Generic_IList_Inline_, index);
            set => global::ABI.System.Collections.Generic.IListMethods<Inline>.Indexer_Set(_objRef_global__System_Collections_Generic_IList_Inline_, index, value);
        }
        public int IndexOf(Inline item) => global::ABI.System.Collections.Generic.IListMethods<Inline>.IndexOf(_objRef_global__System_Collections_Generic_IList_Inline_, item);
        public void Insert(int index, Inline item) => global::ABI.System.Collections.Generic.IListMethods<Inline>.Insert(_objRef_global__System_Collections_Generic_IList_Inline_, index, item);
        public void RemoveAt(int index) => global::ABI.System.Collections.Generic.IListMethods<Inline>.RemoveAt(_objRef_global__System_Collections_Generic_IList_Inline_, index);
        public void Add(Inline item) => global::ABI.System.Collections.Generic.IListMethods<Inline>.Add(_objRef_global__System_Collections_Generic_IList_Inline_, item);
        public void Clear() => global::ABI.System.Collections.Generic.IListMethods<Inline>.Clear(_objRef_global__System_Collections_Generic_IList_Inline_);
        public bool Contains(Inline item) => global::ABI.System.Collections.Generic.IListMethods<Inline>.Contains(_objRef_global__System_Collections_Generic_IList_Inline_, item);
        public void CopyTo(Inline[] array, int arrayIndex) => global::ABI.System.Collections.Generic.IListMethods<Inline>.CopyTo(_objRef_global__System_Collections_Generic_IList_Inline_, array, arrayIndex);
        public bool Remove(Inline item) => global::ABI.System.Collections.Generic.IListMethods<Inline>.Remove(_objRef_global__System_Collections_Generic_IList_Inline_, item);

        public IEnumerator<Inline> GetEnumerator() => global::ABI.System.Collections.Generic.IEnumerableMethods<Inline>.GetEnumerator(_objRef_global__System_Collections_Generic_IEnumerable_Inline_);

        IEnumerator IEnumerable.GetEnumerator() => GetEnumerator();

        private bool IsOverridableInterface(Guid iid) => false;

        global::System.Runtime.InteropServices.CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(ref Guid iid, out IntPtr ppv)
        {
            ppv = IntPtr.Zero;
            if (IsOverridableInterface(iid) || global::WinRT.Interop.IID.IID_IInspectable == iid)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
            }

            if (((IWinRTObject)this).NativeObject.TryAs(iid, out ppv) >= 0)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.Handled;
            }

            return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
        }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")]
    [global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Documents.InlineUIContainer))]
    [global::ABI.Microsoft.UI.Xaml.Documents.InlineUIContainerRcwFactory]
    [global::WinRT.ProjectedRuntimeClass(typeof(IInlineUIContainer))]
    [global::Microsoft.UI.Xaml.Markup.ContentProperty(Name = @"Child")]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    public sealed class InlineUIContainer : Inline, global::System.Runtime.InteropServices.ICustomQueryInterface, IWinRTObject, IEquatable<InlineUIContainer>
    {
        private IntPtr ThisPtr => _inner == null ? (((IWinRTObject)this).NativeObject).ThisPtr : _inner.ThisPtr;

        private readonly IObjectReference _inner = null;



        private IObjectReference _objRef_global__Microsoft_UI_Xaml_Documents_IInlineUIContainer => _inner;


        private static volatile IObjectReference ___objRef_global__Microsoft_UI_Xaml_Documents_InlineUIContainer;
        private static IObjectReference _objRef_global__Microsoft_UI_Xaml_Documents_InlineUIContainer
        {
            get
            { 
                var factory = ___objRef_global__Microsoft_UI_Xaml_Documents_InlineUIContainer;
                if (factory != null && factory.IsInCurrentContext)
                {
                    return factory;
                }
                else
                {
                    return ___objRef_global__Microsoft_UI_Xaml_Documents_InlineUIContainer = ActivationFactory.Get("Microsoft.UI.Xaml.Documents.InlineUIContainer");
                }
            }
        }

        public InlineUIContainer() :base(global::WinRT.DerivedComposed.Instance)
        {
            _inner = global::ABI.WinRT.Interop.IActivationFactoryMethods.ActivateInstanceUnsafe(_objRef_global__Microsoft_UI_Xaml_Documents_InlineUIContainer, global::ABI.Microsoft.UI.Xaml.Documents.IInlineUIContainerMethods.IID);
            ComWrappersSupport.RegisterObjectForInterface(this, ThisPtr);
            ComWrappersHelper.Init(_inner, false);

        }

        public static new InlineUIContainer FromAbi(IntPtr thisPtr)
        {
            if (thisPtr == IntPtr.Zero) return null;
            return MarshalInspectable<InlineUIContainer>.FromAbi(thisPtr);
        }

        internal InlineUIContainer(IObjectReference objRef)
            : base(global::WinRT.DerivedComposed.Instance)

        {
            _inner = objRef.As(global::ABI.Microsoft.UI.Xaml.Documents.IInlineUIContainerMethods.IID);

        }


        public static bool operator ==(InlineUIContainer x, InlineUIContainer y) => (x?.ThisPtr ?? IntPtr.Zero) == (y?.ThisPtr ?? IntPtr.Zero);
        public static bool operator !=(InlineUIContainer x, InlineUIContainer y) => !(x == y);
        public bool Equals(InlineUIContainer other) => this == other;
        public override bool Equals(object obj) => obj is InlineUIContainer that && this == that;
        public override int GetHashCode() => ThisPtr.GetHashCode();


        bool IWinRTObject.HasUnwrappableNativeObject => true;
        IObjectReference IWinRTObject.NativeObject => _inner;

        private struct InterfaceTag<I>{};


        public global::Microsoft.UI.Xaml.UIElement Child
        {
            get => global::ABI.Microsoft.UI.Xaml.Documents.IInlineUIContainerMethods.get_Child(_objRef_global__Microsoft_UI_Xaml_Documents_IInlineUIContainer);
            set => global::ABI.Microsoft.UI.Xaml.Documents.IInlineUIContainerMethods.set_Child(_objRef_global__Microsoft_UI_Xaml_Documents_IInlineUIContainer, value);
        }

        protected override bool IsOverridableInterface(Guid iid) => base.IsOverridableInterface(iid);

        global::System.Runtime.InteropServices.CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(ref Guid iid, out IntPtr ppv)
        {
            ppv = IntPtr.Zero;
            if (IsOverridableInterface(iid) || global::WinRT.Interop.IID.IID_IInspectable == iid)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
            }

            if (((IWinRTObject)this).NativeObject.TryAs(iid, out ppv) >= 0)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.Handled;
            }

            return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
        }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")]
    [global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Documents.Italic))]
    [global::ABI.Microsoft.UI.Xaml.Documents.ItalicRcwFactory]
    [global::WinRT.ProjectedRuntimeClass(typeof(IItalic))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    public sealed class Italic : Span, global::System.Runtime.InteropServices.ICustomQueryInterface, IWinRTObject, IEquatable<Italic>
    {
        private IntPtr ThisPtr => _inner == null ? (((IWinRTObject)this).NativeObject).ThisPtr : _inner.ThisPtr;

        private readonly IObjectReference _inner = null;



        private IObjectReference _objRef_global__Microsoft_UI_Xaml_Documents_IItalic => _inner;


        private static volatile IObjectReference ___objRef_global__Microsoft_UI_Xaml_Documents_Italic;
        private static IObjectReference _objRef_global__Microsoft_UI_Xaml_Documents_Italic
        {
            get
            { 
                var factory = ___objRef_global__Microsoft_UI_Xaml_Documents_Italic;
                if (factory != null && factory.IsInCurrentContext)
                {
                    return factory;
                }
                else
                {
                    return ___objRef_global__Microsoft_UI_Xaml_Documents_Italic = ActivationFactory.Get("Microsoft.UI.Xaml.Documents.Italic");
                }
            }
        }

        public Italic() :base(global::WinRT.DerivedComposed.Instance)
        {
            _inner = global::ABI.WinRT.Interop.IActivationFactoryMethods.ActivateInstanceUnsafe(_objRef_global__Microsoft_UI_Xaml_Documents_Italic, global::ABI.Microsoft.UI.Xaml.Documents.IItalicMethods.IID);
            ComWrappersSupport.RegisterObjectForInterface(this, ThisPtr);
            ComWrappersHelper.Init(_inner, false);

        }

        public static new Italic FromAbi(IntPtr thisPtr)
        {
            if (thisPtr == IntPtr.Zero) return null;
            return MarshalInspectable<Italic>.FromAbi(thisPtr);
        }

        internal Italic(IObjectReference objRef)
            : base(global::WinRT.DerivedComposed.Instance)

        {
            _inner = objRef.As(global::ABI.Microsoft.UI.Xaml.Documents.IItalicMethods.IID);

        }


        public static bool operator ==(Italic x, Italic y) => (x?.ThisPtr ?? IntPtr.Zero) == (y?.ThisPtr ?? IntPtr.Zero);
        public static bool operator !=(Italic x, Italic y) => !(x == y);
        public bool Equals(Italic other) => this == other;
        public override bool Equals(object obj) => obj is Italic that && this == that;
        public override int GetHashCode() => ThisPtr.GetHashCode();


        bool IWinRTObject.HasUnwrappableNativeObject => true;
        IObjectReference IWinRTObject.NativeObject => _inner;

        private struct InterfaceTag<I>{};


        protected override bool IsOverridableInterface(Guid iid) => base.IsOverridableInterface(iid);

        global::System.Runtime.InteropServices.CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(ref Guid iid, out IntPtr ppv)
        {
            ppv = IntPtr.Zero;
            if (IsOverridableInterface(iid) || global::WinRT.Interop.IID.IID_IInspectable == iid)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
            }

            if (((IWinRTObject)this).NativeObject.TryAs(iid, out ppv) >= 0)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.Handled;
            }

            return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
        }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")]
    [global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Documents.LineBreak))]
    [global::ABI.Microsoft.UI.Xaml.Documents.LineBreakRcwFactory]
    [global::WinRT.ProjectedRuntimeClass(typeof(ILineBreak))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    public sealed class LineBreak : Inline, global::System.Runtime.InteropServices.ICustomQueryInterface, IWinRTObject, IEquatable<LineBreak>
    {
        private IntPtr ThisPtr => _inner == null ? (((IWinRTObject)this).NativeObject).ThisPtr : _inner.ThisPtr;

        private readonly IObjectReference _inner = null;



        private IObjectReference _objRef_global__Microsoft_UI_Xaml_Documents_ILineBreak => _inner;


        private static volatile IObjectReference ___objRef_global__Microsoft_UI_Xaml_Documents_LineBreak;
        private static IObjectReference _objRef_global__Microsoft_UI_Xaml_Documents_LineBreak
        {
            get
            { 
                var factory = ___objRef_global__Microsoft_UI_Xaml_Documents_LineBreak;
                if (factory != null && factory.IsInCurrentContext)
                {
                    return factory;
                }
                else
                {
                    return ___objRef_global__Microsoft_UI_Xaml_Documents_LineBreak = ActivationFactory.Get("Microsoft.UI.Xaml.Documents.LineBreak");
                }
            }
        }

        public LineBreak() :base(global::WinRT.DerivedComposed.Instance)
        {
            _inner = global::ABI.WinRT.Interop.IActivationFactoryMethods.ActivateInstanceUnsafe(_objRef_global__Microsoft_UI_Xaml_Documents_LineBreak, global::ABI.Microsoft.UI.Xaml.Documents.ILineBreakMethods.IID);
            ComWrappersSupport.RegisterObjectForInterface(this, ThisPtr);
            ComWrappersHelper.Init(_inner, false);

        }

        public static new LineBreak FromAbi(IntPtr thisPtr)
        {
            if (thisPtr == IntPtr.Zero) return null;
            return MarshalInspectable<LineBreak>.FromAbi(thisPtr);
        }

        internal LineBreak(IObjectReference objRef)
            : base(global::WinRT.DerivedComposed.Instance)

        {
            _inner = objRef.As(global::ABI.Microsoft.UI.Xaml.Documents.ILineBreakMethods.IID);

        }


        public static bool operator ==(LineBreak x, LineBreak y) => (x?.ThisPtr ?? IntPtr.Zero) == (y?.ThisPtr ?? IntPtr.Zero);
        public static bool operator !=(LineBreak x, LineBreak y) => !(x == y);
        public bool Equals(LineBreak other) => this == other;
        public override bool Equals(object obj) => obj is LineBreak that && this == that;
        public override int GetHashCode() => ThisPtr.GetHashCode();


        bool IWinRTObject.HasUnwrappableNativeObject => true;
        IObjectReference IWinRTObject.NativeObject => _inner;

        private struct InterfaceTag<I>{};


        protected override bool IsOverridableInterface(Guid iid) => base.IsOverridableInterface(iid);

        global::System.Runtime.InteropServices.CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(ref Guid iid, out IntPtr ppv)
        {
            ppv = IntPtr.Zero;
            if (IsOverridableInterface(iid) || global::WinRT.Interop.IID.IID_IInspectable == iid)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
            }

            if (((IWinRTObject)this).NativeObject.TryAs(iid, out ppv) >= 0)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.Handled;
            }

            return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
        }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")][global::WinRT.WinRTExposedType(typeof(global::WinRT.EnumTypeDetails<LogicalDirection>))][global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    public enum LogicalDirection : int
    {
        Backward = unchecked((int)0),
        Forward = unchecked((int)0x1),
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")]
    [global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Documents.Paragraph))]
    [global::ABI.Microsoft.UI.Xaml.Documents.ParagraphRcwFactory]
    [global::WinRT.ProjectedRuntimeClass(typeof(IParagraph))]
    [global::Microsoft.UI.Xaml.Markup.ContentProperty(Name = @"Inlines")]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    public sealed class Paragraph : Block, global::System.Runtime.InteropServices.ICustomQueryInterface, IWinRTObject, IEquatable<Paragraph>
    {
        private IntPtr ThisPtr => _inner == null ? (((IWinRTObject)this).NativeObject).ThisPtr : _inner.ThisPtr;

        private readonly IObjectReference _inner = null;



        private IObjectReference _objRef_global__Microsoft_UI_Xaml_Documents_IParagraph => _inner;


        private static volatile IObjectReference ___objRef_global__Microsoft_UI_Xaml_Documents_Paragraph;
        private static IObjectReference _objRef_global__Microsoft_UI_Xaml_Documents_Paragraph
        {
            get
            { 
                var factory = ___objRef_global__Microsoft_UI_Xaml_Documents_Paragraph;
                if (factory != null && factory.IsInCurrentContext)
                {
                    return factory;
                }
                else
                {
                    return ___objRef_global__Microsoft_UI_Xaml_Documents_Paragraph = ActivationFactory.Get("Microsoft.UI.Xaml.Documents.Paragraph");
                }
            }
        }

        public Paragraph() :base(global::WinRT.DerivedComposed.Instance)
        {
            _inner = global::ABI.WinRT.Interop.IActivationFactoryMethods.ActivateInstanceUnsafe(_objRef_global__Microsoft_UI_Xaml_Documents_Paragraph, global::ABI.Microsoft.UI.Xaml.Documents.IParagraphMethods.IID);
            ComWrappersSupport.RegisterObjectForInterface(this, ThisPtr);
            ComWrappersHelper.Init(_inner, false);

        }

        public static new I As<I>() => ActivationFactory.Get("Microsoft.UI.Xaml.Documents.Paragraph").AsInterface<I>();

        private static volatile IObjectReference ___objRef_global__Microsoft_UI_Xaml_Documents_IParagraphStatics;
        private static IObjectReference _objRef_global__Microsoft_UI_Xaml_Documents_IParagraphStatics
        {
            get
            { 
                var factory = ___objRef_global__Microsoft_UI_Xaml_Documents_IParagraphStatics;
                if (factory != null && factory.IsInCurrentContext)
                {
                    return factory;
                }
                else
                {
                    return ___objRef_global__Microsoft_UI_Xaml_Documents_IParagraphStatics = ActivationFactory.Get("Microsoft.UI.Xaml.Documents.Paragraph", global::ABI.Microsoft.UI.Xaml.Documents.IParagraphStaticsMethods.IID);
                }
            }
        }

        public static global::Microsoft.UI.Xaml.DependencyProperty TextIndentProperty => global::ABI.Microsoft.UI.Xaml.Documents.IParagraphStaticsMethods.get_TextIndentProperty(_objRef_global__Microsoft_UI_Xaml_Documents_IParagraphStatics);

        public static new Paragraph FromAbi(IntPtr thisPtr)
        {
            if (thisPtr == IntPtr.Zero) return null;
            return MarshalInspectable<Paragraph>.FromAbi(thisPtr);
        }

        internal Paragraph(IObjectReference objRef)
            : base(global::WinRT.DerivedComposed.Instance)

        {
            _inner = objRef.As(global::ABI.Microsoft.UI.Xaml.Documents.IParagraphMethods.IID);

        }


        public static bool operator ==(Paragraph x, Paragraph y) => (x?.ThisPtr ?? IntPtr.Zero) == (y?.ThisPtr ?? IntPtr.Zero);
        public static bool operator !=(Paragraph x, Paragraph y) => !(x == y);
        public bool Equals(Paragraph other) => this == other;
        public override bool Equals(object obj) => obj is Paragraph that && this == that;
        public override int GetHashCode() => ThisPtr.GetHashCode();


        bool IWinRTObject.HasUnwrappableNativeObject => true;
        IObjectReference IWinRTObject.NativeObject => _inner;

        private struct InterfaceTag<I>{};


        public InlineCollection Inlines => global::ABI.Microsoft.UI.Xaml.Documents.IParagraphMethods.get_Inlines(_objRef_global__Microsoft_UI_Xaml_Documents_IParagraph);

        public double TextIndent
        {
            get => global::ABI.Microsoft.UI.Xaml.Documents.IParagraphMethods.get_TextIndent(_objRef_global__Microsoft_UI_Xaml_Documents_IParagraph);
            set => global::ABI.Microsoft.UI.Xaml.Documents.IParagraphMethods.set_TextIndent(_objRef_global__Microsoft_UI_Xaml_Documents_IParagraph, value);
        }

        protected override bool IsOverridableInterface(Guid iid) => base.IsOverridableInterface(iid);

        global::System.Runtime.InteropServices.CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(ref Guid iid, out IntPtr ppv)
        {
            ppv = IntPtr.Zero;
            if (IsOverridableInterface(iid) || global::WinRT.Interop.IID.IID_IInspectable == iid)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
            }

            if (((IWinRTObject)this).NativeObject.TryAs(iid, out ppv) >= 0)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.Handled;
            }

            return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
        }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")]
    [global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Documents.Run))]
    [global::ABI.Microsoft.UI.Xaml.Documents.RunRcwFactory]
    [global::WinRT.ProjectedRuntimeClass(typeof(IRun))]
    [global::Microsoft.UI.Xaml.Markup.ContentProperty(Name = @"Text")]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    public sealed class Run : Inline, global::System.Runtime.InteropServices.ICustomQueryInterface, IWinRTObject, IEquatable<Run>
    {
        private IntPtr ThisPtr => _inner == null ? (((IWinRTObject)this).NativeObject).ThisPtr : _inner.ThisPtr;

        private readonly IObjectReference _inner = null;



        private IObjectReference _objRef_global__Microsoft_UI_Xaml_Documents_IRun => _inner;


        private static volatile IObjectReference ___objRef_global__Microsoft_UI_Xaml_Documents_Run;
        private static IObjectReference _objRef_global__Microsoft_UI_Xaml_Documents_Run
        {
            get
            { 
                var factory = ___objRef_global__Microsoft_UI_Xaml_Documents_Run;
                if (factory != null && factory.IsInCurrentContext)
                {
                    return factory;
                }
                else
                {
                    return ___objRef_global__Microsoft_UI_Xaml_Documents_Run = ActivationFactory.Get("Microsoft.UI.Xaml.Documents.Run");
                }
            }
        }

        public Run() :base(global::WinRT.DerivedComposed.Instance)
        {
            _inner = global::ABI.WinRT.Interop.IActivationFactoryMethods.ActivateInstanceUnsafe(_objRef_global__Microsoft_UI_Xaml_Documents_Run, global::ABI.Microsoft.UI.Xaml.Documents.IRunMethods.IID);
            ComWrappersSupport.RegisterObjectForInterface(this, ThisPtr);
            ComWrappersHelper.Init(_inner, false);

        }

        public static new I As<I>() => ActivationFactory.Get("Microsoft.UI.Xaml.Documents.Run").AsInterface<I>();

        private static volatile IObjectReference ___objRef_global__Microsoft_UI_Xaml_Documents_IRunStatics;
        private static IObjectReference _objRef_global__Microsoft_UI_Xaml_Documents_IRunStatics
        {
            get
            { 
                var factory = ___objRef_global__Microsoft_UI_Xaml_Documents_IRunStatics;
                if (factory != null && factory.IsInCurrentContext)
                {
                    return factory;
                }
                else
                {
                    return ___objRef_global__Microsoft_UI_Xaml_Documents_IRunStatics = ActivationFactory.Get("Microsoft.UI.Xaml.Documents.Run", global::ABI.Microsoft.UI.Xaml.Documents.IRunStaticsMethods.IID);
                }
            }
        }

        public static global::Microsoft.UI.Xaml.DependencyProperty FlowDirectionProperty => global::ABI.Microsoft.UI.Xaml.Documents.IRunStaticsMethods.get_FlowDirectionProperty(_objRef_global__Microsoft_UI_Xaml_Documents_IRunStatics);

        public static new Run FromAbi(IntPtr thisPtr)
        {
            if (thisPtr == IntPtr.Zero) return null;
            return MarshalInspectable<Run>.FromAbi(thisPtr);
        }

        internal Run(IObjectReference objRef)
            : base(global::WinRT.DerivedComposed.Instance)

        {
            _inner = objRef.As(global::ABI.Microsoft.UI.Xaml.Documents.IRunMethods.IID);

        }


        public static bool operator ==(Run x, Run y) => (x?.ThisPtr ?? IntPtr.Zero) == (y?.ThisPtr ?? IntPtr.Zero);
        public static bool operator !=(Run x, Run y) => !(x == y);
        public bool Equals(Run other) => this == other;
        public override bool Equals(object obj) => obj is Run that && this == that;
        public override int GetHashCode() => ThisPtr.GetHashCode();


        bool IWinRTObject.HasUnwrappableNativeObject => true;
        IObjectReference IWinRTObject.NativeObject => _inner;

        private struct InterfaceTag<I>{};


        public global::Microsoft.UI.Xaml.FlowDirection FlowDirection
        {
            get => global::ABI.Microsoft.UI.Xaml.Documents.IRunMethods.get_FlowDirection(_objRef_global__Microsoft_UI_Xaml_Documents_IRun);
            set => global::ABI.Microsoft.UI.Xaml.Documents.IRunMethods.set_FlowDirection(_objRef_global__Microsoft_UI_Xaml_Documents_IRun, value);
        }

        public string Text
        {
            get => global::ABI.Microsoft.UI.Xaml.Documents.IRunMethods.get_Text(_objRef_global__Microsoft_UI_Xaml_Documents_IRun);
            set => global::ABI.Microsoft.UI.Xaml.Documents.IRunMethods.set_Text(_objRef_global__Microsoft_UI_Xaml_Documents_IRun, value);
        }

        protected override bool IsOverridableInterface(Guid iid) => base.IsOverridableInterface(iid);

        global::System.Runtime.InteropServices.CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(ref Guid iid, out IntPtr ppv)
        {
            ppv = IntPtr.Zero;
            if (IsOverridableInterface(iid) || global::WinRT.Interop.IID.IID_IInspectable == iid)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
            }

            if (((IWinRTObject)this).NativeObject.TryAs(iid, out ppv) >= 0)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.Handled;
            }

            return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
        }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")]
    [global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Documents.Span))]
    [global::ABI.Microsoft.UI.Xaml.Documents.SpanRcwFactory]
    [global::WinRT.ProjectedRuntimeClass(typeof(ISpan))]
    [global::Microsoft.UI.Xaml.Markup.ContentProperty(Name = @"Inlines")]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    public class Span : Inline, global::System.Runtime.InteropServices.ICustomQueryInterface, IWinRTObject, IEquatable<Span>
    {
        private IntPtr ThisPtr => _inner == null ? (((IWinRTObject)this).NativeObject).ThisPtr : _inner.ThisPtr;

        private readonly IObjectReference _inner = null;




        private volatile IObjectReference ___objRef_global__Microsoft_UI_Xaml_Documents_ISpan;
        private IObjectReference Make___objRef_global__Microsoft_UI_Xaml_Documents_ISpan()
        {
            global::System.Threading.Interlocked.CompareExchange(ref ___objRef_global__Microsoft_UI_Xaml_Documents_ISpan, ((IWinRTObject)this).NativeObject.As<IUnknownVftbl>(global::ABI.Microsoft.UI.Xaml.Documents.ISpanMethods.IID), null);
            return ___objRef_global__Microsoft_UI_Xaml_Documents_ISpan;
        }
        private IObjectReference _objRef_global__Microsoft_UI_Xaml_Documents_ISpan => ___objRef_global__Microsoft_UI_Xaml_Documents_ISpan ?? Make___objRef_global__Microsoft_UI_Xaml_Documents_ISpan();



        private static class _ISpanFactoryMethods
        {
            public static unsafe IntPtr CreateInstance(IObjectReference _obj, object baseInterface, out IntPtr innerInterface)
            {
                var ThisPtr = _obj.ThisPtr;

                ObjectReferenceValue __baseInterface = default;
                IntPtr __innerInterface = default;
                IntPtr __retval = default;
                try
                {
                    __baseInterface = MarshalInspectable<object>.CreateMarshaler2(baseInterface);
                    global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, IntPtr*, IntPtr*, int>**)ThisPtr)[6](ThisPtr, MarshalInspectable<object>.GetAbi(__baseInterface), &__innerInterface, &__retval));
                    global::System.GC.KeepAlive(_obj);
                    innerInterface = __innerInterface;
                    return __retval;
                }
                finally
                {
                    MarshalInspectable<object>.DisposeMarshaler(__baseInterface);
                }
            }
        }

        private static volatile IObjectReference ___objRef_global__Microsoft_UI_Xaml_Documents_ISpanFactory;
        private static IObjectReference _objRef_global__Microsoft_UI_Xaml_Documents_ISpanFactory
        {
            get
            { 
                var factory = ___objRef_global__Microsoft_UI_Xaml_Documents_ISpanFactory;
                if (factory != null && factory.IsInCurrentContext)
                {
                    return factory;
                }
                else
                {
                    return ___objRef_global__Microsoft_UI_Xaml_Documents_ISpanFactory = ActivationFactory.Get("Microsoft.UI.Xaml.Documents.Span", global::ABI.Microsoft.UI.Xaml.Documents.ISpanFactoryMethods.IID);
                }
            }
        }

        public Span():base(global::WinRT.DerivedComposed.Instance)
        {
            bool isAggregation = this.GetType() != typeof(Span);
            object baseInspectable = isAggregation ? this : null;
            IntPtr composed = _ISpanFactoryMethods.CreateInstance(_objRef_global__Microsoft_UI_Xaml_Documents_ISpanFactory,  baseInspectable, out IntPtr inner);
            try
            {
                ComWrappersHelper.Init(isAggregation, this, composed, inner, global::ABI.Microsoft.UI.Xaml.Documents.ISpanMethods.IID, out _inner);

            }
            finally
            {
                Marshal.Release(inner);   
            }
        }

        public static new Span FromAbi(IntPtr thisPtr)
        {
            if (thisPtr == IntPtr.Zero) return null;
            return MarshalInspectable<Span>.FromAbi(thisPtr);
        }

        protected internal Span(IObjectReference objRef)
            : base(global::WinRT.DerivedComposed.Instance)

        {
            _inner = objRef.As(global::ABI.Microsoft.UI.Xaml.Documents.ISpanMethods.IID);

        }


        public static bool operator ==(Span x, Span y) => (x?.ThisPtr ?? IntPtr.Zero) == (y?.ThisPtr ?? IntPtr.Zero);
        public static bool operator !=(Span x, Span y) => !(x == y);
        public bool Equals(Span other) => this == other;
        public override bool Equals(object obj) => obj is Span that && this == that;
        public override int GetHashCode() => ThisPtr.GetHashCode();


        protected Span(global::WinRT.DerivedComposed _):base(_)
        {

        }
        bool IWinRTObject.HasUnwrappableNativeObject => this.GetType() == typeof(Span);
        IObjectReference IWinRTObject.NativeObject => _inner;

        private struct InterfaceTag<I>{};


        public InlineCollection Inlines
        {
            get => global::ABI.Microsoft.UI.Xaml.Documents.ISpanMethods.get_Inlines(_objRef_global__Microsoft_UI_Xaml_Documents_ISpan);
            set => global::ABI.Microsoft.UI.Xaml.Documents.ISpanMethods.set_Inlines(_objRef_global__Microsoft_UI_Xaml_Documents_ISpan, value);
        }

        protected override bool IsOverridableInterface(Guid iid) => base.IsOverridableInterface(iid);

        global::System.Runtime.InteropServices.CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(ref Guid iid, out IntPtr ppv)
        {
            ppv = IntPtr.Zero;
            if (IsOverridableInterface(iid) || global::WinRT.Interop.IID.IID_IInspectable == iid)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
            }

            if (((IWinRTObject)this).NativeObject.TryAs(iid, out ppv) >= 0)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.Handled;
            }

            return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
        }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")]
    [global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Documents.TextElement))]
    [global::ABI.Microsoft.UI.Xaml.Documents.TextElementRcwFactory]
    [global::WinRT.ProjectedRuntimeClass(typeof(ITextElement))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    public class TextElement : global::Microsoft.UI.Xaml.DependencyObject, ITextElementOverrides, global::System.Runtime.InteropServices.ICustomQueryInterface, IWinRTObject, IEquatable<TextElement>
    {
        private IntPtr ThisPtr => _inner == null ? (((IWinRTObject)this).NativeObject).ThisPtr : _inner.ThisPtr;

        private readonly IObjectReference _inner = null;




        private volatile IObjectReference ___objRef_global__Microsoft_UI_Xaml_Documents_ITextElement;
        private IObjectReference Make___objRef_global__Microsoft_UI_Xaml_Documents_ITextElement()
        {
            global::System.Threading.Interlocked.CompareExchange(ref ___objRef_global__Microsoft_UI_Xaml_Documents_ITextElement, ((IWinRTObject)this).NativeObject.As<IUnknownVftbl>(global::ABI.Microsoft.UI.Xaml.Documents.ITextElementMethods.IID), null);
            return ___objRef_global__Microsoft_UI_Xaml_Documents_ITextElement;
        }
        private IObjectReference _objRef_global__Microsoft_UI_Xaml_Documents_ITextElement => ___objRef_global__Microsoft_UI_Xaml_Documents_ITextElement ?? Make___objRef_global__Microsoft_UI_Xaml_Documents_ITextElement();

        private volatile IObjectReference ___objRef_global__Microsoft_UI_Xaml_Documents_ITextElementOverrides;
        private IObjectReference Make___objRef_global__Microsoft_UI_Xaml_Documents_ITextElementOverrides()
        {
            global::System.Threading.Interlocked.CompareExchange(ref ___objRef_global__Microsoft_UI_Xaml_Documents_ITextElementOverrides, ((IWinRTObject)this).NativeObject.As<IUnknownVftbl>(global::ABI.Microsoft.UI.Xaml.Documents.ITextElementOverridesMethods.IID), null);
            return ___objRef_global__Microsoft_UI_Xaml_Documents_ITextElementOverrides;
        }
        private IObjectReference _objRef_global__Microsoft_UI_Xaml_Documents_ITextElementOverrides => ___objRef_global__Microsoft_UI_Xaml_Documents_ITextElementOverrides ?? Make___objRef_global__Microsoft_UI_Xaml_Documents_ITextElementOverrides();



        private static class _ITextElementFactoryMethods
        {}

        private static volatile IObjectReference ___objRef_global__Microsoft_UI_Xaml_Documents_ITextElementFactory;
        private static IObjectReference _objRef_global__Microsoft_UI_Xaml_Documents_ITextElementFactory
        {
            get
            { 
                var factory = ___objRef_global__Microsoft_UI_Xaml_Documents_ITextElementFactory;
                if (factory != null && factory.IsInCurrentContext)
                {
                    return factory;
                }
                else
                {
                    return ___objRef_global__Microsoft_UI_Xaml_Documents_ITextElementFactory = ActivationFactory.Get("Microsoft.UI.Xaml.Documents.TextElement", global::ABI.Microsoft.UI.Xaml.Documents.ITextElementFactoryMethods.IID);
                }
            }
        }

        public static I As<I>() => ActivationFactory.Get("Microsoft.UI.Xaml.Documents.TextElement").AsInterface<I>();

        private static volatile IObjectReference ___objRef_global__Microsoft_UI_Xaml_Documents_ITextElementStatics;
        private static IObjectReference _objRef_global__Microsoft_UI_Xaml_Documents_ITextElementStatics
        {
            get
            { 
                var factory = ___objRef_global__Microsoft_UI_Xaml_Documents_ITextElementStatics;
                if (factory != null && factory.IsInCurrentContext)
                {
                    return factory;
                }
                else
                {
                    return ___objRef_global__Microsoft_UI_Xaml_Documents_ITextElementStatics = ActivationFactory.Get("Microsoft.UI.Xaml.Documents.TextElement", global::ABI.Microsoft.UI.Xaml.Documents.ITextElementStaticsMethods.IID);
                }
            }
        }

        public static global::Microsoft.UI.Xaml.DependencyProperty AccessKeyProperty => global::ABI.Microsoft.UI.Xaml.Documents.ITextElementStaticsMethods.get_AccessKeyProperty(_objRef_global__Microsoft_UI_Xaml_Documents_ITextElementStatics);

        public static global::Microsoft.UI.Xaml.DependencyProperty AccessKeyScopeOwnerProperty => global::ABI.Microsoft.UI.Xaml.Documents.ITextElementStaticsMethods.get_AccessKeyScopeOwnerProperty(_objRef_global__Microsoft_UI_Xaml_Documents_ITextElementStatics);

        public static global::Microsoft.UI.Xaml.DependencyProperty AllowFocusOnInteractionProperty => global::ABI.Microsoft.UI.Xaml.Documents.ITextElementStaticsMethods.get_AllowFocusOnInteractionProperty(_objRef_global__Microsoft_UI_Xaml_Documents_ITextElementStatics);

        public static global::Microsoft.UI.Xaml.DependencyProperty CharacterSpacingProperty => global::ABI.Microsoft.UI.Xaml.Documents.ITextElementStaticsMethods.get_CharacterSpacingProperty(_objRef_global__Microsoft_UI_Xaml_Documents_ITextElementStatics);

        public static global::Microsoft.UI.Xaml.DependencyProperty ExitDisplayModeOnAccessKeyInvokedProperty => global::ABI.Microsoft.UI.Xaml.Documents.ITextElementStaticsMethods.get_ExitDisplayModeOnAccessKeyInvokedProperty(_objRef_global__Microsoft_UI_Xaml_Documents_ITextElementStatics);

        public static global::Microsoft.UI.Xaml.DependencyProperty FontFamilyProperty => global::ABI.Microsoft.UI.Xaml.Documents.ITextElementStaticsMethods.get_FontFamilyProperty(_objRef_global__Microsoft_UI_Xaml_Documents_ITextElementStatics);

        public static global::Microsoft.UI.Xaml.DependencyProperty FontSizeProperty => global::ABI.Microsoft.UI.Xaml.Documents.ITextElementStaticsMethods.get_FontSizeProperty(_objRef_global__Microsoft_UI_Xaml_Documents_ITextElementStatics);

        public static global::Microsoft.UI.Xaml.DependencyProperty FontStretchProperty => global::ABI.Microsoft.UI.Xaml.Documents.ITextElementStaticsMethods.get_FontStretchProperty(_objRef_global__Microsoft_UI_Xaml_Documents_ITextElementStatics);

        public static global::Microsoft.UI.Xaml.DependencyProperty FontStyleProperty => global::ABI.Microsoft.UI.Xaml.Documents.ITextElementStaticsMethods.get_FontStyleProperty(_objRef_global__Microsoft_UI_Xaml_Documents_ITextElementStatics);

        public static global::Microsoft.UI.Xaml.DependencyProperty FontWeightProperty => global::ABI.Microsoft.UI.Xaml.Documents.ITextElementStaticsMethods.get_FontWeightProperty(_objRef_global__Microsoft_UI_Xaml_Documents_ITextElementStatics);

        public static global::Microsoft.UI.Xaml.DependencyProperty ForegroundProperty => global::ABI.Microsoft.UI.Xaml.Documents.ITextElementStaticsMethods.get_ForegroundProperty(_objRef_global__Microsoft_UI_Xaml_Documents_ITextElementStatics);

        public static global::Microsoft.UI.Xaml.DependencyProperty IsAccessKeyScopeProperty => global::ABI.Microsoft.UI.Xaml.Documents.ITextElementStaticsMethods.get_IsAccessKeyScopeProperty(_objRef_global__Microsoft_UI_Xaml_Documents_ITextElementStatics);

        public static global::Microsoft.UI.Xaml.DependencyProperty IsTextScaleFactorEnabledProperty => global::ABI.Microsoft.UI.Xaml.Documents.ITextElementStaticsMethods.get_IsTextScaleFactorEnabledProperty(_objRef_global__Microsoft_UI_Xaml_Documents_ITextElementStatics);

        public static global::Microsoft.UI.Xaml.DependencyProperty KeyTipHorizontalOffsetProperty => global::ABI.Microsoft.UI.Xaml.Documents.ITextElementStaticsMethods.get_KeyTipHorizontalOffsetProperty(_objRef_global__Microsoft_UI_Xaml_Documents_ITextElementStatics);

        public static global::Microsoft.UI.Xaml.DependencyProperty KeyTipPlacementModeProperty => global::ABI.Microsoft.UI.Xaml.Documents.ITextElementStaticsMethods.get_KeyTipPlacementModeProperty(_objRef_global__Microsoft_UI_Xaml_Documents_ITextElementStatics);

        public static global::Microsoft.UI.Xaml.DependencyProperty KeyTipVerticalOffsetProperty => global::ABI.Microsoft.UI.Xaml.Documents.ITextElementStaticsMethods.get_KeyTipVerticalOffsetProperty(_objRef_global__Microsoft_UI_Xaml_Documents_ITextElementStatics);

        public static global::Microsoft.UI.Xaml.DependencyProperty LanguageProperty => global::ABI.Microsoft.UI.Xaml.Documents.ITextElementStaticsMethods.get_LanguageProperty(_objRef_global__Microsoft_UI_Xaml_Documents_ITextElementStatics);

        public static global::Microsoft.UI.Xaml.DependencyProperty TextDecorationsProperty => global::ABI.Microsoft.UI.Xaml.Documents.ITextElementStaticsMethods.get_TextDecorationsProperty(_objRef_global__Microsoft_UI_Xaml_Documents_ITextElementStatics);

        public static new TextElement FromAbi(IntPtr thisPtr)
        {
            if (thisPtr == IntPtr.Zero) return null;
            return MarshalInspectable<TextElement>.FromAbi(thisPtr);
        }

        protected internal TextElement(IObjectReference objRef)
            : base(global::WinRT.DerivedComposed.Instance)

        {
            _inner = objRef.As(global::ABI.Microsoft.UI.Xaml.Documents.ITextElementMethods.IID);

        }


        public static bool operator ==(TextElement x, TextElement y) => (x?.ThisPtr ?? IntPtr.Zero) == (y?.ThisPtr ?? IntPtr.Zero);
        public static bool operator !=(TextElement x, TextElement y) => !(x == y);
        public bool Equals(TextElement other) => this == other;
        public override bool Equals(object obj) => obj is TextElement that && this == that;
        public override int GetHashCode() => ThisPtr.GetHashCode();


        protected TextElement(global::WinRT.DerivedComposed _):base(_)
        {

        }
        bool IWinRTObject.HasUnwrappableNativeObject => this.GetType() == typeof(TextElement);
        IObjectReference IWinRTObject.NativeObject => _inner;

        private struct InterfaceTag<I>{};


        public object FindName(string name) => global::ABI.Microsoft.UI.Xaml.Documents.ITextElementMethods.FindName(_objRef_global__Microsoft_UI_Xaml_Documents_ITextElement, name);

        public event global::Windows.Foundation.TypedEventHandler<TextElement, global::Microsoft.UI.Xaml.Input.AccessKeyDisplayDismissedEventArgs> AccessKeyDisplayDismissed
        {
            add => global::ABI.Microsoft.UI.Xaml.Documents.ITextElementMethods.Get_AccessKeyDisplayDismissed2(_objRef_global__Microsoft_UI_Xaml_Documents_ITextElement, (IWinRTObject)this).Subscribe(value);
            remove => global::ABI.Microsoft.UI.Xaml.Documents.ITextElementMethods.Get_AccessKeyDisplayDismissed2(_objRef_global__Microsoft_UI_Xaml_Documents_ITextElement, (IWinRTObject)this).Unsubscribe(value);
        }

        public event global::Windows.Foundation.TypedEventHandler<TextElement, global::Microsoft.UI.Xaml.Input.AccessKeyDisplayRequestedEventArgs> AccessKeyDisplayRequested
        {
            add => global::ABI.Microsoft.UI.Xaml.Documents.ITextElementMethods.Get_AccessKeyDisplayRequested2(_objRef_global__Microsoft_UI_Xaml_Documents_ITextElement, (IWinRTObject)this).Subscribe(value);
            remove => global::ABI.Microsoft.UI.Xaml.Documents.ITextElementMethods.Get_AccessKeyDisplayRequested2(_objRef_global__Microsoft_UI_Xaml_Documents_ITextElement, (IWinRTObject)this).Unsubscribe(value);
        }

        public event global::Windows.Foundation.TypedEventHandler<TextElement, global::Microsoft.UI.Xaml.Input.AccessKeyInvokedEventArgs> AccessKeyInvoked
        {
            add => global::ABI.Microsoft.UI.Xaml.Documents.ITextElementMethods.Get_AccessKeyInvoked2(_objRef_global__Microsoft_UI_Xaml_Documents_ITextElement, (IWinRTObject)this).Subscribe(value);
            remove => global::ABI.Microsoft.UI.Xaml.Documents.ITextElementMethods.Get_AccessKeyInvoked2(_objRef_global__Microsoft_UI_Xaml_Documents_ITextElement, (IWinRTObject)this).Unsubscribe(value);
        }

        protected virtual void OnDisconnectVisualChildren() => global::ABI.Microsoft.UI.Xaml.Documents.ITextElementOverridesMethods.OnDisconnectVisualChildren(_objRef_global__Microsoft_UI_Xaml_Documents_ITextElementOverrides);

        void ITextElementOverrides.OnDisconnectVisualChildren() => OnDisconnectVisualChildren();
        public string AccessKey
        {
            get => global::ABI.Microsoft.UI.Xaml.Documents.ITextElementMethods.get_AccessKey(_objRef_global__Microsoft_UI_Xaml_Documents_ITextElement);
            set => global::ABI.Microsoft.UI.Xaml.Documents.ITextElementMethods.set_AccessKey(_objRef_global__Microsoft_UI_Xaml_Documents_ITextElement, value);
        }

        public global::Microsoft.UI.Xaml.DependencyObject AccessKeyScopeOwner
        {
            get => global::ABI.Microsoft.UI.Xaml.Documents.ITextElementMethods.get_AccessKeyScopeOwner(_objRef_global__Microsoft_UI_Xaml_Documents_ITextElement);
            set => global::ABI.Microsoft.UI.Xaml.Documents.ITextElementMethods.set_AccessKeyScopeOwner(_objRef_global__Microsoft_UI_Xaml_Documents_ITextElement, value);
        }

        public bool AllowFocusOnInteraction
        {
            get => global::ABI.Microsoft.UI.Xaml.Documents.ITextElementMethods.get_AllowFocusOnInteraction(_objRef_global__Microsoft_UI_Xaml_Documents_ITextElement);
            set => global::ABI.Microsoft.UI.Xaml.Documents.ITextElementMethods.set_AllowFocusOnInteraction(_objRef_global__Microsoft_UI_Xaml_Documents_ITextElement, value);
        }

        public int CharacterSpacing
        {
            get => global::ABI.Microsoft.UI.Xaml.Documents.ITextElementMethods.get_CharacterSpacing(_objRef_global__Microsoft_UI_Xaml_Documents_ITextElement);
            set => global::ABI.Microsoft.UI.Xaml.Documents.ITextElementMethods.set_CharacterSpacing(_objRef_global__Microsoft_UI_Xaml_Documents_ITextElement, value);
        }

        public TextPointer ContentEnd => global::ABI.Microsoft.UI.Xaml.Documents.ITextElementMethods.get_ContentEnd(_objRef_global__Microsoft_UI_Xaml_Documents_ITextElement);

        public TextPointer ContentStart => global::ABI.Microsoft.UI.Xaml.Documents.ITextElementMethods.get_ContentStart(_objRef_global__Microsoft_UI_Xaml_Documents_ITextElement);

        public TextPointer ElementEnd => global::ABI.Microsoft.UI.Xaml.Documents.ITextElementMethods.get_ElementEnd(_objRef_global__Microsoft_UI_Xaml_Documents_ITextElement);

        public TextPointer ElementStart => global::ABI.Microsoft.UI.Xaml.Documents.ITextElementMethods.get_ElementStart(_objRef_global__Microsoft_UI_Xaml_Documents_ITextElement);

        public bool ExitDisplayModeOnAccessKeyInvoked
        {
            get => global::ABI.Microsoft.UI.Xaml.Documents.ITextElementMethods.get_ExitDisplayModeOnAccessKeyInvoked(_objRef_global__Microsoft_UI_Xaml_Documents_ITextElement);
            set => global::ABI.Microsoft.UI.Xaml.Documents.ITextElementMethods.set_ExitDisplayModeOnAccessKeyInvoked(_objRef_global__Microsoft_UI_Xaml_Documents_ITextElement, value);
        }

        public global::Microsoft.UI.Xaml.Media.FontFamily FontFamily
        {
            get => global::ABI.Microsoft.UI.Xaml.Documents.ITextElementMethods.get_FontFamily(_objRef_global__Microsoft_UI_Xaml_Documents_ITextElement);
            set => global::ABI.Microsoft.UI.Xaml.Documents.ITextElementMethods.set_FontFamily(_objRef_global__Microsoft_UI_Xaml_Documents_ITextElement, value);
        }

        public double FontSize
        {
            get => global::ABI.Microsoft.UI.Xaml.Documents.ITextElementMethods.get_FontSize(_objRef_global__Microsoft_UI_Xaml_Documents_ITextElement);
            set => global::ABI.Microsoft.UI.Xaml.Documents.ITextElementMethods.set_FontSize(_objRef_global__Microsoft_UI_Xaml_Documents_ITextElement, value);
        }

        public global::Windows.UI.Text.FontStretch FontStretch
        {
            get => global::ABI.Microsoft.UI.Xaml.Documents.ITextElementMethods.get_FontStretch(_objRef_global__Microsoft_UI_Xaml_Documents_ITextElement);
            set => global::ABI.Microsoft.UI.Xaml.Documents.ITextElementMethods.set_FontStretch(_objRef_global__Microsoft_UI_Xaml_Documents_ITextElement, value);
        }

        public global::Windows.UI.Text.FontStyle FontStyle
        {
            get => global::ABI.Microsoft.UI.Xaml.Documents.ITextElementMethods.get_FontStyle(_objRef_global__Microsoft_UI_Xaml_Documents_ITextElement);
            set => global::ABI.Microsoft.UI.Xaml.Documents.ITextElementMethods.set_FontStyle(_objRef_global__Microsoft_UI_Xaml_Documents_ITextElement, value);
        }

        public global::Windows.UI.Text.FontWeight FontWeight
        {
            get => global::ABI.Microsoft.UI.Xaml.Documents.ITextElementMethods.get_FontWeight(_objRef_global__Microsoft_UI_Xaml_Documents_ITextElement);
            set => global::ABI.Microsoft.UI.Xaml.Documents.ITextElementMethods.set_FontWeight(_objRef_global__Microsoft_UI_Xaml_Documents_ITextElement, value);
        }

        public global::Microsoft.UI.Xaml.Media.Brush Foreground
        {
            get => global::ABI.Microsoft.UI.Xaml.Documents.ITextElementMethods.get_Foreground(_objRef_global__Microsoft_UI_Xaml_Documents_ITextElement);
            set => global::ABI.Microsoft.UI.Xaml.Documents.ITextElementMethods.set_Foreground(_objRef_global__Microsoft_UI_Xaml_Documents_ITextElement, value);
        }

        public bool IsAccessKeyScope
        {
            get => global::ABI.Microsoft.UI.Xaml.Documents.ITextElementMethods.get_IsAccessKeyScope(_objRef_global__Microsoft_UI_Xaml_Documents_ITextElement);
            set => global::ABI.Microsoft.UI.Xaml.Documents.ITextElementMethods.set_IsAccessKeyScope(_objRef_global__Microsoft_UI_Xaml_Documents_ITextElement, value);
        }

        public bool IsTextScaleFactorEnabled
        {
            get => global::ABI.Microsoft.UI.Xaml.Documents.ITextElementMethods.get_IsTextScaleFactorEnabled(_objRef_global__Microsoft_UI_Xaml_Documents_ITextElement);
            set => global::ABI.Microsoft.UI.Xaml.Documents.ITextElementMethods.set_IsTextScaleFactorEnabled(_objRef_global__Microsoft_UI_Xaml_Documents_ITextElement, value);
        }

        public double KeyTipHorizontalOffset
        {
            get => global::ABI.Microsoft.UI.Xaml.Documents.ITextElementMethods.get_KeyTipHorizontalOffset(_objRef_global__Microsoft_UI_Xaml_Documents_ITextElement);
            set => global::ABI.Microsoft.UI.Xaml.Documents.ITextElementMethods.set_KeyTipHorizontalOffset(_objRef_global__Microsoft_UI_Xaml_Documents_ITextElement, value);
        }

        public global::Microsoft.UI.Xaml.Input.KeyTipPlacementMode KeyTipPlacementMode
        {
            get => global::ABI.Microsoft.UI.Xaml.Documents.ITextElementMethods.get_KeyTipPlacementMode(_objRef_global__Microsoft_UI_Xaml_Documents_ITextElement);
            set => global::ABI.Microsoft.UI.Xaml.Documents.ITextElementMethods.set_KeyTipPlacementMode(_objRef_global__Microsoft_UI_Xaml_Documents_ITextElement, value);
        }

        public double KeyTipVerticalOffset
        {
            get => global::ABI.Microsoft.UI.Xaml.Documents.ITextElementMethods.get_KeyTipVerticalOffset(_objRef_global__Microsoft_UI_Xaml_Documents_ITextElement);
            set => global::ABI.Microsoft.UI.Xaml.Documents.ITextElementMethods.set_KeyTipVerticalOffset(_objRef_global__Microsoft_UI_Xaml_Documents_ITextElement, value);
        }

        public string Language
        {
            get => global::ABI.Microsoft.UI.Xaml.Documents.ITextElementMethods.get_Language(_objRef_global__Microsoft_UI_Xaml_Documents_ITextElement);
            set => global::ABI.Microsoft.UI.Xaml.Documents.ITextElementMethods.set_Language(_objRef_global__Microsoft_UI_Xaml_Documents_ITextElement, value);
        }

        public string Name => global::ABI.Microsoft.UI.Xaml.Documents.ITextElementMethods.get_Name(_objRef_global__Microsoft_UI_Xaml_Documents_ITextElement);

        public global::Windows.UI.Text.TextDecorations TextDecorations
        {
            get => global::ABI.Microsoft.UI.Xaml.Documents.ITextElementMethods.get_TextDecorations(_objRef_global__Microsoft_UI_Xaml_Documents_ITextElement);
            set => global::ABI.Microsoft.UI.Xaml.Documents.ITextElementMethods.set_TextDecorations(_objRef_global__Microsoft_UI_Xaml_Documents_ITextElement, value);
        }

        public global::Microsoft.UI.Xaml.XamlRoot XamlRoot
        {
            get => global::ABI.Microsoft.UI.Xaml.Documents.ITextElementMethods.get_XamlRoot(_objRef_global__Microsoft_UI_Xaml_Documents_ITextElement);
            set => global::ABI.Microsoft.UI.Xaml.Documents.ITextElementMethods.set_XamlRoot(_objRef_global__Microsoft_UI_Xaml_Documents_ITextElement, value);
        }

        protected override bool IsOverridableInterface(Guid iid) => global::ABI.Microsoft.UI.Xaml.Documents.ITextElementOverridesMethods.IID == iid || base.IsOverridableInterface(iid);

        global::System.Runtime.InteropServices.CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(ref Guid iid, out IntPtr ppv)
        {
            ppv = IntPtr.Zero;
            if (IsOverridableInterface(iid) || global::WinRT.Interop.IID.IID_IInspectable == iid)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
            }

            if (((IWinRTObject)this).NativeObject.TryAs(iid, out ppv) >= 0)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.Handled;
            }

            return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
        }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")]
    [global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Documents.TextHighlighter))]
    [global::ABI.Microsoft.UI.Xaml.Documents.TextHighlighterRcwFactory]
    [global::WinRT.ProjectedRuntimeClass(typeof(ITextHighlighter))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    public class TextHighlighter : global::System.Runtime.InteropServices.ICustomQueryInterface, IWinRTObject, IEquatable<TextHighlighter>
    {
        private IntPtr ThisPtr => _inner == null ? (((IWinRTObject)this).NativeObject).ThisPtr : _inner.ThisPtr;

        private readonly IObjectReference _inner = null;




        private volatile IObjectReference ___objRef_global__Microsoft_UI_Xaml_Documents_ITextHighlighter;
        private IObjectReference Make___objRef_global__Microsoft_UI_Xaml_Documents_ITextHighlighter()
        {
            global::System.Threading.Interlocked.CompareExchange(ref ___objRef_global__Microsoft_UI_Xaml_Documents_ITextHighlighter, ((IWinRTObject)this).NativeObject.As<IUnknownVftbl>(global::ABI.Microsoft.UI.Xaml.Documents.ITextHighlighterMethods.IID), null);
            return ___objRef_global__Microsoft_UI_Xaml_Documents_ITextHighlighter;
        }
        private IObjectReference _objRef_global__Microsoft_UI_Xaml_Documents_ITextHighlighter => ___objRef_global__Microsoft_UI_Xaml_Documents_ITextHighlighter ?? Make___objRef_global__Microsoft_UI_Xaml_Documents_ITextHighlighter();



        private static class _ITextHighlighterFactoryMethods
        {
            public static unsafe IntPtr CreateInstance(IObjectReference _obj, object baseInterface, out IntPtr innerInterface)
            {
                var ThisPtr = _obj.ThisPtr;

                ObjectReferenceValue __baseInterface = default;
                IntPtr __innerInterface = default;
                IntPtr __retval = default;
                try
                {
                    __baseInterface = MarshalInspectable<object>.CreateMarshaler2(baseInterface);
                    global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, IntPtr*, IntPtr*, int>**)ThisPtr)[6](ThisPtr, MarshalInspectable<object>.GetAbi(__baseInterface), &__innerInterface, &__retval));
                    global::System.GC.KeepAlive(_obj);
                    innerInterface = __innerInterface;
                    return __retval;
                }
                finally
                {
                    MarshalInspectable<object>.DisposeMarshaler(__baseInterface);
                }
            }
        }

        private static volatile IObjectReference ___objRef_global__Microsoft_UI_Xaml_Documents_ITextHighlighterFactory;
        private static IObjectReference _objRef_global__Microsoft_UI_Xaml_Documents_ITextHighlighterFactory
        {
            get
            { 
                var factory = ___objRef_global__Microsoft_UI_Xaml_Documents_ITextHighlighterFactory;
                if (factory != null && factory.IsInCurrentContext)
                {
                    return factory;
                }
                else
                {
                    return ___objRef_global__Microsoft_UI_Xaml_Documents_ITextHighlighterFactory = ActivationFactory.Get("Microsoft.UI.Xaml.Documents.TextHighlighter", global::ABI.Microsoft.UI.Xaml.Documents.ITextHighlighterFactoryMethods.IID);
                }
            }
        }

        public TextHighlighter()
        {
            bool isAggregation = this.GetType() != typeof(TextHighlighter);
            object baseInspectable = isAggregation ? this : null;
            IntPtr composed = _ITextHighlighterFactoryMethods.CreateInstance(_objRef_global__Microsoft_UI_Xaml_Documents_ITextHighlighterFactory,  baseInspectable, out IntPtr inner);
            try
            {
                ComWrappersHelper.Init(isAggregation, this, composed, inner, global::ABI.Microsoft.UI.Xaml.Documents.ITextHighlighterMethods.IID, out _inner);

            }
            finally
            {
                Marshal.Release(inner);   
            }
        }

        public static I As<I>() => ActivationFactory.Get("Microsoft.UI.Xaml.Documents.TextHighlighter").AsInterface<I>();

        private static volatile IObjectReference ___objRef_global__Microsoft_UI_Xaml_Documents_ITextHighlighterStatics;
        private static IObjectReference _objRef_global__Microsoft_UI_Xaml_Documents_ITextHighlighterStatics
        {
            get
            { 
                var factory = ___objRef_global__Microsoft_UI_Xaml_Documents_ITextHighlighterStatics;
                if (factory != null && factory.IsInCurrentContext)
                {
                    return factory;
                }
                else
                {
                    return ___objRef_global__Microsoft_UI_Xaml_Documents_ITextHighlighterStatics = ActivationFactory.Get("Microsoft.UI.Xaml.Documents.TextHighlighter", global::ABI.Microsoft.UI.Xaml.Documents.ITextHighlighterStaticsMethods.IID);
                }
            }
        }

        public static global::Microsoft.UI.Xaml.DependencyProperty BackgroundProperty => global::ABI.Microsoft.UI.Xaml.Documents.ITextHighlighterStaticsMethods.get_BackgroundProperty(_objRef_global__Microsoft_UI_Xaml_Documents_ITextHighlighterStatics);

        public static global::Microsoft.UI.Xaml.DependencyProperty ForegroundProperty => global::ABI.Microsoft.UI.Xaml.Documents.ITextHighlighterStaticsMethods.get_ForegroundProperty(_objRef_global__Microsoft_UI_Xaml_Documents_ITextHighlighterStatics);

        public static TextHighlighter FromAbi(IntPtr thisPtr)
        {
            if (thisPtr == IntPtr.Zero) return null;
            return MarshalInspectable<TextHighlighter>.FromAbi(thisPtr);
        }

        protected internal TextHighlighter(IObjectReference objRef)
        {
            _inner = objRef.As(global::ABI.Microsoft.UI.Xaml.Documents.ITextHighlighterMethods.IID);

        }


        public static bool operator ==(TextHighlighter x, TextHighlighter y) => (x?.ThisPtr ?? IntPtr.Zero) == (y?.ThisPtr ?? IntPtr.Zero);
        public static bool operator !=(TextHighlighter x, TextHighlighter y) => !(x == y);
        public bool Equals(TextHighlighter other) => this == other;
        public override bool Equals(object obj) => obj is TextHighlighter that && this == that;
        public override int GetHashCode() => ThisPtr.GetHashCode();


        protected TextHighlighter(global::WinRT.DerivedComposed _)
        {

        }
        bool IWinRTObject.HasUnwrappableNativeObject => this.GetType() == typeof(TextHighlighter);
        IObjectReference IWinRTObject.NativeObject => _inner;
        private volatile global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> _queryInterfaceCache;
        private global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> MakeQueryInterfaceCache()
        {
            global::System.Threading.Interlocked.CompareExchange(ref _queryInterfaceCache, new global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference>(), null); 
            return _queryInterfaceCache;
        }
        global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> IWinRTObject.QueryInterfaceCache => _queryInterfaceCache ?? MakeQueryInterfaceCache();
        private volatile global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> _additionalTypeData;
        private global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> MakeAdditionalTypeData()
        {
            global::System.Threading.Interlocked.CompareExchange(ref _additionalTypeData, new global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object>(), null); 
            return _additionalTypeData;
        }
        global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> IWinRTObject.AdditionalTypeData => _additionalTypeData ?? MakeAdditionalTypeData();

        private struct InterfaceTag<I>{};


        public global::Microsoft.UI.Xaml.Media.Brush Background
        {
            get => global::ABI.Microsoft.UI.Xaml.Documents.ITextHighlighterMethods.get_Background(_objRef_global__Microsoft_UI_Xaml_Documents_ITextHighlighter);
            set => global::ABI.Microsoft.UI.Xaml.Documents.ITextHighlighterMethods.set_Background(_objRef_global__Microsoft_UI_Xaml_Documents_ITextHighlighter, value);
        }

        public global::Microsoft.UI.Xaml.Media.Brush Foreground
        {
            get => global::ABI.Microsoft.UI.Xaml.Documents.ITextHighlighterMethods.get_Foreground(_objRef_global__Microsoft_UI_Xaml_Documents_ITextHighlighter);
            set => global::ABI.Microsoft.UI.Xaml.Documents.ITextHighlighterMethods.set_Foreground(_objRef_global__Microsoft_UI_Xaml_Documents_ITextHighlighter, value);
        }

        public global::System.Collections.Generic.IList<TextRange> Ranges => global::ABI.Microsoft.UI.Xaml.Documents.ITextHighlighterMethods.get_Ranges(_objRef_global__Microsoft_UI_Xaml_Documents_ITextHighlighter);

        protected virtual bool IsOverridableInterface(Guid iid) => false;

        global::System.Runtime.InteropServices.CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(ref Guid iid, out IntPtr ppv)
        {
            ppv = IntPtr.Zero;
            if (IsOverridableInterface(iid) || global::WinRT.Interop.IID.IID_IInspectable == iid)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
            }

            if (((IWinRTObject)this).NativeObject.TryAs(iid, out ppv) >= 0)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.Handled;
            }

            return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
        }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")]
    [global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Documents.TextHighlighterBase))]
    [global::ABI.Microsoft.UI.Xaml.Documents.TextHighlighterBaseRcwFactory]
    [global::WinRT.ProjectedRuntimeClass(typeof(ITextHighlighterBase))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    public class TextHighlighterBase : global::Microsoft.UI.Xaml.DependencyObject, global::System.Runtime.InteropServices.ICustomQueryInterface, IWinRTObject, IEquatable<TextHighlighterBase>
    {
        private IntPtr ThisPtr => _inner == null ? (((IWinRTObject)this).NativeObject).ThisPtr : _inner.ThisPtr;

        private readonly IObjectReference _inner = null;




        private volatile IObjectReference ___objRef_global__Microsoft_UI_Xaml_Documents_ITextHighlighterBase;
        private IObjectReference Make___objRef_global__Microsoft_UI_Xaml_Documents_ITextHighlighterBase()
        {
            global::System.Threading.Interlocked.CompareExchange(ref ___objRef_global__Microsoft_UI_Xaml_Documents_ITextHighlighterBase, ((IWinRTObject)this).NativeObject.As<IUnknownVftbl>(global::ABI.Microsoft.UI.Xaml.Documents.ITextHighlighterBaseMethods.IID), null);
            return ___objRef_global__Microsoft_UI_Xaml_Documents_ITextHighlighterBase;
        }
        private IObjectReference _objRef_global__Microsoft_UI_Xaml_Documents_ITextHighlighterBase => ___objRef_global__Microsoft_UI_Xaml_Documents_ITextHighlighterBase ?? Make___objRef_global__Microsoft_UI_Xaml_Documents_ITextHighlighterBase();



        private static class _ITextHighlighterBaseFactoryMethods
        {}

        private static volatile IObjectReference ___objRef_global__Microsoft_UI_Xaml_Documents_ITextHighlighterBaseFactory;
        private static IObjectReference _objRef_global__Microsoft_UI_Xaml_Documents_ITextHighlighterBaseFactory
        {
            get
            { 
                var factory = ___objRef_global__Microsoft_UI_Xaml_Documents_ITextHighlighterBaseFactory;
                if (factory != null && factory.IsInCurrentContext)
                {
                    return factory;
                }
                else
                {
                    return ___objRef_global__Microsoft_UI_Xaml_Documents_ITextHighlighterBaseFactory = ActivationFactory.Get("Microsoft.UI.Xaml.Documents.TextHighlighterBase", global::ABI.Microsoft.UI.Xaml.Documents.ITextHighlighterBaseFactoryMethods.IID);
                }
            }
        }

        public static new TextHighlighterBase FromAbi(IntPtr thisPtr)
        {
            if (thisPtr == IntPtr.Zero) return null;
            return MarshalInspectable<TextHighlighterBase>.FromAbi(thisPtr);
        }

        protected internal TextHighlighterBase(IObjectReference objRef)
            : base(global::WinRT.DerivedComposed.Instance)

        {
            _inner = objRef.As(global::ABI.Microsoft.UI.Xaml.Documents.ITextHighlighterBaseMethods.IID);

        }


        public static bool operator ==(TextHighlighterBase x, TextHighlighterBase y) => (x?.ThisPtr ?? IntPtr.Zero) == (y?.ThisPtr ?? IntPtr.Zero);
        public static bool operator !=(TextHighlighterBase x, TextHighlighterBase y) => !(x == y);
        public bool Equals(TextHighlighterBase other) => this == other;
        public override bool Equals(object obj) => obj is TextHighlighterBase that && this == that;
        public override int GetHashCode() => ThisPtr.GetHashCode();


        protected TextHighlighterBase(global::WinRT.DerivedComposed _):base(_)
        {

        }
        bool IWinRTObject.HasUnwrappableNativeObject => this.GetType() == typeof(TextHighlighterBase);
        IObjectReference IWinRTObject.NativeObject => _inner;

        private struct InterfaceTag<I>{};


        protected override bool IsOverridableInterface(Guid iid) => base.IsOverridableInterface(iid);

        global::System.Runtime.InteropServices.CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(ref Guid iid, out IntPtr ppv)
        {
            ppv = IntPtr.Zero;
            if (IsOverridableInterface(iid) || global::WinRT.Interop.IID.IID_IInspectable == iid)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
            }

            if (((IWinRTObject)this).NativeObject.TryAs(iid, out ppv) >= 0)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.Handled;
            }

            return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
        }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")]
    [global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Documents.TextPointer))]
    [global::ABI.Microsoft.UI.Xaml.Documents.TextPointerRcwFactory]
    [global::WinRT.ProjectedRuntimeClass(typeof(ITextPointer))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    public sealed class TextPointer : global::System.Runtime.InteropServices.ICustomQueryInterface, IWinRTObject, IEquatable<TextPointer>
    {
        private IntPtr ThisPtr => _inner == null ? (((IWinRTObject)this).NativeObject).ThisPtr : _inner.ThisPtr;

        private readonly IObjectReference _inner = null;



        private IObjectReference _objRef_global__Microsoft_UI_Xaml_Documents_ITextPointer => _inner;


        public static TextPointer FromAbi(IntPtr thisPtr)
        {
            if (thisPtr == IntPtr.Zero) return null;
            return MarshalInspectable<TextPointer>.FromAbi(thisPtr);
        }

        internal TextPointer(IObjectReference objRef)
        {
            _inner = objRef.As(global::ABI.Microsoft.UI.Xaml.Documents.ITextPointerMethods.IID);

        }


        public static bool operator ==(TextPointer x, TextPointer y) => (x?.ThisPtr ?? IntPtr.Zero) == (y?.ThisPtr ?? IntPtr.Zero);
        public static bool operator !=(TextPointer x, TextPointer y) => !(x == y);
        public bool Equals(TextPointer other) => this == other;
        public override bool Equals(object obj) => obj is TextPointer that && this == that;
        public override int GetHashCode() => ThisPtr.GetHashCode();


        bool IWinRTObject.HasUnwrappableNativeObject => true;
        IObjectReference IWinRTObject.NativeObject => _inner;
        private volatile global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> _queryInterfaceCache;
        private global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> MakeQueryInterfaceCache()
        {
            global::System.Threading.Interlocked.CompareExchange(ref _queryInterfaceCache, new global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference>(), null); 
            return _queryInterfaceCache;
        }
        global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> IWinRTObject.QueryInterfaceCache => _queryInterfaceCache ?? MakeQueryInterfaceCache();
        private volatile global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> _additionalTypeData;
        private global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> MakeAdditionalTypeData()
        {
            global::System.Threading.Interlocked.CompareExchange(ref _additionalTypeData, new global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object>(), null); 
            return _additionalTypeData;
        }
        global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> IWinRTObject.AdditionalTypeData => _additionalTypeData ?? MakeAdditionalTypeData();

        private struct InterfaceTag<I>{};


        public global::Windows.Foundation.Rect GetCharacterRect(LogicalDirection direction) => global::ABI.Microsoft.UI.Xaml.Documents.ITextPointerMethods.GetCharacterRect(_objRef_global__Microsoft_UI_Xaml_Documents_ITextPointer, direction);

        public TextPointer GetPositionAtOffset(int offset, LogicalDirection direction) => global::ABI.Microsoft.UI.Xaml.Documents.ITextPointerMethods.GetPositionAtOffset(_objRef_global__Microsoft_UI_Xaml_Documents_ITextPointer, offset, direction);

        public LogicalDirection LogicalDirection => global::ABI.Microsoft.UI.Xaml.Documents.ITextPointerMethods.get_LogicalDirection(_objRef_global__Microsoft_UI_Xaml_Documents_ITextPointer);

        public int Offset => global::ABI.Microsoft.UI.Xaml.Documents.ITextPointerMethods.get_Offset(_objRef_global__Microsoft_UI_Xaml_Documents_ITextPointer);

        public global::Microsoft.UI.Xaml.DependencyObject Parent => global::ABI.Microsoft.UI.Xaml.Documents.ITextPointerMethods.get_Parent(_objRef_global__Microsoft_UI_Xaml_Documents_ITextPointer);

        public global::Microsoft.UI.Xaml.FrameworkElement VisualParent => global::ABI.Microsoft.UI.Xaml.Documents.ITextPointerMethods.get_VisualParent(_objRef_global__Microsoft_UI_Xaml_Documents_ITextPointer);

        private bool IsOverridableInterface(Guid iid) => false;

        global::System.Runtime.InteropServices.CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(ref Guid iid, out IntPtr ppv)
        {
            ppv = IntPtr.Zero;
            if (IsOverridableInterface(iid) || global::WinRT.Interop.IID.IID_IInspectable == iid)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
            }

            if (((IWinRTObject)this).NativeObject.TryAs(iid, out ppv) >= 0)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.Handled;
            }

            return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
        }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml", "struct(Microsoft.UI.Xaml.Documents.TextRange;i4;i4)")][global::WinRT.WindowsRuntimeHelperType][global::WinRT.WinRTExposedType(typeof(global::WinRT.StructTypeDetails<TextRange, TextRange>))][global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    public struct TextRange: IEquatable<TextRange>
    {
        public int StartIndex;
        public int Length;

        public TextRange(int _StartIndex, int _Length)
        {
            StartIndex = _StartIndex; Length = _Length; 
        }

        public static bool operator ==(TextRange x, TextRange y) => x.StartIndex == y.StartIndex && x.Length == y.Length;
        public static bool operator !=(TextRange x, TextRange y) => !(x == y);
        public bool Equals(TextRange other) => this == other;
        public override bool Equals(object obj) => obj is TextRange that && this == that;
        public override int GetHashCode() => StartIndex.GetHashCode() ^ Length.GetHashCode();
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")]
    [global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Documents.Typography))]
    [global::ABI.Microsoft.UI.Xaml.Documents.TypographyRcwFactory]
    [global::WinRT.ProjectedRuntimeClass(typeof(ITypography))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    public sealed class Typography : global::System.Runtime.InteropServices.ICustomQueryInterface, IWinRTObject, IEquatable<Typography>
    {
        private IntPtr ThisPtr => _inner == null ? (((IWinRTObject)this).NativeObject).ThisPtr : _inner.ThisPtr;

        private readonly IObjectReference _inner = null;



        private IObjectReference _objRef_global__Microsoft_UI_Xaml_Documents_ITypography => _inner;


        public static I As<I>() => ActivationFactory.Get("Microsoft.UI.Xaml.Documents.Typography").AsInterface<I>();

        private static volatile IObjectReference ___objRef_global__Microsoft_UI_Xaml_Documents_ITypographyStatics;
        private static IObjectReference _objRef_global__Microsoft_UI_Xaml_Documents_ITypographyStatics
        {
            get
            { 
                var factory = ___objRef_global__Microsoft_UI_Xaml_Documents_ITypographyStatics;
                if (factory != null && factory.IsInCurrentContext)
                {
                    return factory;
                }
                else
                {
                    return ___objRef_global__Microsoft_UI_Xaml_Documents_ITypographyStatics = ActivationFactory.Get("Microsoft.UI.Xaml.Documents.Typography", global::ABI.Microsoft.UI.Xaml.Documents.ITypographyStaticsMethods.IID);
                }
            }
        }

        public static int GetAnnotationAlternates(global::Microsoft.UI.Xaml.DependencyObject element) => global::ABI.Microsoft.UI.Xaml.Documents.ITypographyStaticsMethods.GetAnnotationAlternates(_objRef_global__Microsoft_UI_Xaml_Documents_ITypographyStatics, element);

        public static void SetAnnotationAlternates(global::Microsoft.UI.Xaml.DependencyObject element, int value) => global::ABI.Microsoft.UI.Xaml.Documents.ITypographyStaticsMethods.SetAnnotationAlternates(_objRef_global__Microsoft_UI_Xaml_Documents_ITypographyStatics, element, value);

        public static bool GetEastAsianExpertForms(global::Microsoft.UI.Xaml.DependencyObject element) => global::ABI.Microsoft.UI.Xaml.Documents.ITypographyStaticsMethods.GetEastAsianExpertForms(_objRef_global__Microsoft_UI_Xaml_Documents_ITypographyStatics, element);

        public static void SetEastAsianExpertForms(global::Microsoft.UI.Xaml.DependencyObject element, bool value) => global::ABI.Microsoft.UI.Xaml.Documents.ITypographyStaticsMethods.SetEastAsianExpertForms(_objRef_global__Microsoft_UI_Xaml_Documents_ITypographyStatics, element, value);

        public static global::Microsoft.UI.Xaml.FontEastAsianLanguage GetEastAsianLanguage(global::Microsoft.UI.Xaml.DependencyObject element) => global::ABI.Microsoft.UI.Xaml.Documents.ITypographyStaticsMethods.GetEastAsianLanguage(_objRef_global__Microsoft_UI_Xaml_Documents_ITypographyStatics, element);

        public static void SetEastAsianLanguage(global::Microsoft.UI.Xaml.DependencyObject element, global::Microsoft.UI.Xaml.FontEastAsianLanguage value) => global::ABI.Microsoft.UI.Xaml.Documents.ITypographyStaticsMethods.SetEastAsianLanguage(_objRef_global__Microsoft_UI_Xaml_Documents_ITypographyStatics, element, value);

        public static global::Microsoft.UI.Xaml.FontEastAsianWidths GetEastAsianWidths(global::Microsoft.UI.Xaml.DependencyObject element) => global::ABI.Microsoft.UI.Xaml.Documents.ITypographyStaticsMethods.GetEastAsianWidths(_objRef_global__Microsoft_UI_Xaml_Documents_ITypographyStatics, element);

        public static void SetEastAsianWidths(global::Microsoft.UI.Xaml.DependencyObject element, global::Microsoft.UI.Xaml.FontEastAsianWidths value) => global::ABI.Microsoft.UI.Xaml.Documents.ITypographyStaticsMethods.SetEastAsianWidths(_objRef_global__Microsoft_UI_Xaml_Documents_ITypographyStatics, element, value);

        public static bool GetStandardLigatures(global::Microsoft.UI.Xaml.DependencyObject element) => global::ABI.Microsoft.UI.Xaml.Documents.ITypographyStaticsMethods.GetStandardLigatures(_objRef_global__Microsoft_UI_Xaml_Documents_ITypographyStatics, element);

        public static void SetStandardLigatures(global::Microsoft.UI.Xaml.DependencyObject element, bool value) => global::ABI.Microsoft.UI.Xaml.Documents.ITypographyStaticsMethods.SetStandardLigatures(_objRef_global__Microsoft_UI_Xaml_Documents_ITypographyStatics, element, value);

        public static bool GetContextualLigatures(global::Microsoft.UI.Xaml.DependencyObject element) => global::ABI.Microsoft.UI.Xaml.Documents.ITypographyStaticsMethods.GetContextualLigatures(_objRef_global__Microsoft_UI_Xaml_Documents_ITypographyStatics, element);

        public static void SetContextualLigatures(global::Microsoft.UI.Xaml.DependencyObject element, bool value) => global::ABI.Microsoft.UI.Xaml.Documents.ITypographyStaticsMethods.SetContextualLigatures(_objRef_global__Microsoft_UI_Xaml_Documents_ITypographyStatics, element, value);

        public static bool GetDiscretionaryLigatures(global::Microsoft.UI.Xaml.DependencyObject element) => global::ABI.Microsoft.UI.Xaml.Documents.ITypographyStaticsMethods.GetDiscretionaryLigatures(_objRef_global__Microsoft_UI_Xaml_Documents_ITypographyStatics, element);

        public static void SetDiscretionaryLigatures(global::Microsoft.UI.Xaml.DependencyObject element, bool value) => global::ABI.Microsoft.UI.Xaml.Documents.ITypographyStaticsMethods.SetDiscretionaryLigatures(_objRef_global__Microsoft_UI_Xaml_Documents_ITypographyStatics, element, value);

        public static bool GetHistoricalLigatures(global::Microsoft.UI.Xaml.DependencyObject element) => global::ABI.Microsoft.UI.Xaml.Documents.ITypographyStaticsMethods.GetHistoricalLigatures(_objRef_global__Microsoft_UI_Xaml_Documents_ITypographyStatics, element);

        public static void SetHistoricalLigatures(global::Microsoft.UI.Xaml.DependencyObject element, bool value) => global::ABI.Microsoft.UI.Xaml.Documents.ITypographyStaticsMethods.SetHistoricalLigatures(_objRef_global__Microsoft_UI_Xaml_Documents_ITypographyStatics, element, value);

        public static int GetStandardSwashes(global::Microsoft.UI.Xaml.DependencyObject element) => global::ABI.Microsoft.UI.Xaml.Documents.ITypographyStaticsMethods.GetStandardSwashes(_objRef_global__Microsoft_UI_Xaml_Documents_ITypographyStatics, element);

        public static void SetStandardSwashes(global::Microsoft.UI.Xaml.DependencyObject element, int value) => global::ABI.Microsoft.UI.Xaml.Documents.ITypographyStaticsMethods.SetStandardSwashes(_objRef_global__Microsoft_UI_Xaml_Documents_ITypographyStatics, element, value);

        public static int GetContextualSwashes(global::Microsoft.UI.Xaml.DependencyObject element) => global::ABI.Microsoft.UI.Xaml.Documents.ITypographyStaticsMethods.GetContextualSwashes(_objRef_global__Microsoft_UI_Xaml_Documents_ITypographyStatics, element);

        public static void SetContextualSwashes(global::Microsoft.UI.Xaml.DependencyObject element, int value) => global::ABI.Microsoft.UI.Xaml.Documents.ITypographyStaticsMethods.SetContextualSwashes(_objRef_global__Microsoft_UI_Xaml_Documents_ITypographyStatics, element, value);

        public static bool GetContextualAlternates(global::Microsoft.UI.Xaml.DependencyObject element) => global::ABI.Microsoft.UI.Xaml.Documents.ITypographyStaticsMethods.GetContextualAlternates(_objRef_global__Microsoft_UI_Xaml_Documents_ITypographyStatics, element);

        public static void SetContextualAlternates(global::Microsoft.UI.Xaml.DependencyObject element, bool value) => global::ABI.Microsoft.UI.Xaml.Documents.ITypographyStaticsMethods.SetContextualAlternates(_objRef_global__Microsoft_UI_Xaml_Documents_ITypographyStatics, element, value);

        public static int GetStylisticAlternates(global::Microsoft.UI.Xaml.DependencyObject element) => global::ABI.Microsoft.UI.Xaml.Documents.ITypographyStaticsMethods.GetStylisticAlternates(_objRef_global__Microsoft_UI_Xaml_Documents_ITypographyStatics, element);

        public static void SetStylisticAlternates(global::Microsoft.UI.Xaml.DependencyObject element, int value) => global::ABI.Microsoft.UI.Xaml.Documents.ITypographyStaticsMethods.SetStylisticAlternates(_objRef_global__Microsoft_UI_Xaml_Documents_ITypographyStatics, element, value);

        public static bool GetStylisticSet1(global::Microsoft.UI.Xaml.DependencyObject element) => global::ABI.Microsoft.UI.Xaml.Documents.ITypographyStaticsMethods.GetStylisticSet1(_objRef_global__Microsoft_UI_Xaml_Documents_ITypographyStatics, element);

        public static void SetStylisticSet1(global::Microsoft.UI.Xaml.DependencyObject element, bool value) => global::ABI.Microsoft.UI.Xaml.Documents.ITypographyStaticsMethods.SetStylisticSet1(_objRef_global__Microsoft_UI_Xaml_Documents_ITypographyStatics, element, value);

        public static bool GetStylisticSet2(global::Microsoft.UI.Xaml.DependencyObject element) => global::ABI.Microsoft.UI.Xaml.Documents.ITypographyStaticsMethods.GetStylisticSet2(_objRef_global__Microsoft_UI_Xaml_Documents_ITypographyStatics, element);

        public static void SetStylisticSet2(global::Microsoft.UI.Xaml.DependencyObject element, bool value) => global::ABI.Microsoft.UI.Xaml.Documents.ITypographyStaticsMethods.SetStylisticSet2(_objRef_global__Microsoft_UI_Xaml_Documents_ITypographyStatics, element, value);

        public static bool GetStylisticSet3(global::Microsoft.UI.Xaml.DependencyObject element) => global::ABI.Microsoft.UI.Xaml.Documents.ITypographyStaticsMethods.GetStylisticSet3(_objRef_global__Microsoft_UI_Xaml_Documents_ITypographyStatics, element);

        public static void SetStylisticSet3(global::Microsoft.UI.Xaml.DependencyObject element, bool value) => global::ABI.Microsoft.UI.Xaml.Documents.ITypographyStaticsMethods.SetStylisticSet3(_objRef_global__Microsoft_UI_Xaml_Documents_ITypographyStatics, element, value);

        public static bool GetStylisticSet4(global::Microsoft.UI.Xaml.DependencyObject element) => global::ABI.Microsoft.UI.Xaml.Documents.ITypographyStaticsMethods.GetStylisticSet4(_objRef_global__Microsoft_UI_Xaml_Documents_ITypographyStatics, element);

        public static void SetStylisticSet4(global::Microsoft.UI.Xaml.DependencyObject element, bool value) => global::ABI.Microsoft.UI.Xaml.Documents.ITypographyStaticsMethods.SetStylisticSet4(_objRef_global__Microsoft_UI_Xaml_Documents_ITypographyStatics, element, value);

        public static bool GetStylisticSet5(global::Microsoft.UI.Xaml.DependencyObject element) => global::ABI.Microsoft.UI.Xaml.Documents.ITypographyStaticsMethods.GetStylisticSet5(_objRef_global__Microsoft_UI_Xaml_Documents_ITypographyStatics, element);

        public static void SetStylisticSet5(global::Microsoft.UI.Xaml.DependencyObject element, bool value) => global::ABI.Microsoft.UI.Xaml.Documents.ITypographyStaticsMethods.SetStylisticSet5(_objRef_global__Microsoft_UI_Xaml_Documents_ITypographyStatics, element, value);

        public static bool GetStylisticSet6(global::Microsoft.UI.Xaml.DependencyObject element) => global::ABI.Microsoft.UI.Xaml.Documents.ITypographyStaticsMethods.GetStylisticSet6(_objRef_global__Microsoft_UI_Xaml_Documents_ITypographyStatics, element);

        public static void SetStylisticSet6(global::Microsoft.UI.Xaml.DependencyObject element, bool value) => global::ABI.Microsoft.UI.Xaml.Documents.ITypographyStaticsMethods.SetStylisticSet6(_objRef_global__Microsoft_UI_Xaml_Documents_ITypographyStatics, element, value);

        public static bool GetStylisticSet7(global::Microsoft.UI.Xaml.DependencyObject element) => global::ABI.Microsoft.UI.Xaml.Documents.ITypographyStaticsMethods.GetStylisticSet7(_objRef_global__Microsoft_UI_Xaml_Documents_ITypographyStatics, element);

        public static void SetStylisticSet7(global::Microsoft.UI.Xaml.DependencyObject element, bool value) => global::ABI.Microsoft.UI.Xaml.Documents.ITypographyStaticsMethods.SetStylisticSet7(_objRef_global__Microsoft_UI_Xaml_Documents_ITypographyStatics, element, value);

        public static bool GetStylisticSet8(global::Microsoft.UI.Xaml.DependencyObject element) => global::ABI.Microsoft.UI.Xaml.Documents.ITypographyStaticsMethods.GetStylisticSet8(_objRef_global__Microsoft_UI_Xaml_Documents_ITypographyStatics, element);

        public static void SetStylisticSet8(global::Microsoft.UI.Xaml.DependencyObject element, bool value) => global::ABI.Microsoft.UI.Xaml.Documents.ITypographyStaticsMethods.SetStylisticSet8(_objRef_global__Microsoft_UI_Xaml_Documents_ITypographyStatics, element, value);

        public static bool GetStylisticSet9(global::Microsoft.UI.Xaml.DependencyObject element) => global::ABI.Microsoft.UI.Xaml.Documents.ITypographyStaticsMethods.GetStylisticSet9(_objRef_global__Microsoft_UI_Xaml_Documents_ITypographyStatics, element);

        public static void SetStylisticSet9(global::Microsoft.UI.Xaml.DependencyObject element, bool value) => global::ABI.Microsoft.UI.Xaml.Documents.ITypographyStaticsMethods.SetStylisticSet9(_objRef_global__Microsoft_UI_Xaml_Documents_ITypographyStatics, element, value);

        public static bool GetStylisticSet10(global::Microsoft.UI.Xaml.DependencyObject element) => global::ABI.Microsoft.UI.Xaml.Documents.ITypographyStaticsMethods.GetStylisticSet10(_objRef_global__Microsoft_UI_Xaml_Documents_ITypographyStatics, element);

        public static void SetStylisticSet10(global::Microsoft.UI.Xaml.DependencyObject element, bool value) => global::ABI.Microsoft.UI.Xaml.Documents.ITypographyStaticsMethods.SetStylisticSet10(_objRef_global__Microsoft_UI_Xaml_Documents_ITypographyStatics, element, value);

        public static bool GetStylisticSet11(global::Microsoft.UI.Xaml.DependencyObject element) => global::ABI.Microsoft.UI.Xaml.Documents.ITypographyStaticsMethods.GetStylisticSet11(_objRef_global__Microsoft_UI_Xaml_Documents_ITypographyStatics, element);

        public static void SetStylisticSet11(global::Microsoft.UI.Xaml.DependencyObject element, bool value) => global::ABI.Microsoft.UI.Xaml.Documents.ITypographyStaticsMethods.SetStylisticSet11(_objRef_global__Microsoft_UI_Xaml_Documents_ITypographyStatics, element, value);

        public static bool GetStylisticSet12(global::Microsoft.UI.Xaml.DependencyObject element) => global::ABI.Microsoft.UI.Xaml.Documents.ITypographyStaticsMethods.GetStylisticSet12(_objRef_global__Microsoft_UI_Xaml_Documents_ITypographyStatics, element);

        public static void SetStylisticSet12(global::Microsoft.UI.Xaml.DependencyObject element, bool value) => global::ABI.Microsoft.UI.Xaml.Documents.ITypographyStaticsMethods.SetStylisticSet12(_objRef_global__Microsoft_UI_Xaml_Documents_ITypographyStatics, element, value);

        public static bool GetStylisticSet13(global::Microsoft.UI.Xaml.DependencyObject element) => global::ABI.Microsoft.UI.Xaml.Documents.ITypographyStaticsMethods.GetStylisticSet13(_objRef_global__Microsoft_UI_Xaml_Documents_ITypographyStatics, element);

        public static void SetStylisticSet13(global::Microsoft.UI.Xaml.DependencyObject element, bool value) => global::ABI.Microsoft.UI.Xaml.Documents.ITypographyStaticsMethods.SetStylisticSet13(_objRef_global__Microsoft_UI_Xaml_Documents_ITypographyStatics, element, value);

        public static bool GetStylisticSet14(global::Microsoft.UI.Xaml.DependencyObject element) => global::ABI.Microsoft.UI.Xaml.Documents.ITypographyStaticsMethods.GetStylisticSet14(_objRef_global__Microsoft_UI_Xaml_Documents_ITypographyStatics, element);

        public static void SetStylisticSet14(global::Microsoft.UI.Xaml.DependencyObject element, bool value) => global::ABI.Microsoft.UI.Xaml.Documents.ITypographyStaticsMethods.SetStylisticSet14(_objRef_global__Microsoft_UI_Xaml_Documents_ITypographyStatics, element, value);

        public static bool GetStylisticSet15(global::Microsoft.UI.Xaml.DependencyObject element) => global::ABI.Microsoft.UI.Xaml.Documents.ITypographyStaticsMethods.GetStylisticSet15(_objRef_global__Microsoft_UI_Xaml_Documents_ITypographyStatics, element);

        public static void SetStylisticSet15(global::Microsoft.UI.Xaml.DependencyObject element, bool value) => global::ABI.Microsoft.UI.Xaml.Documents.ITypographyStaticsMethods.SetStylisticSet15(_objRef_global__Microsoft_UI_Xaml_Documents_ITypographyStatics, element, value);

        public static bool GetStylisticSet16(global::Microsoft.UI.Xaml.DependencyObject element) => global::ABI.Microsoft.UI.Xaml.Documents.ITypographyStaticsMethods.GetStylisticSet16(_objRef_global__Microsoft_UI_Xaml_Documents_ITypographyStatics, element);

        public static void SetStylisticSet16(global::Microsoft.UI.Xaml.DependencyObject element, bool value) => global::ABI.Microsoft.UI.Xaml.Documents.ITypographyStaticsMethods.SetStylisticSet16(_objRef_global__Microsoft_UI_Xaml_Documents_ITypographyStatics, element, value);

        public static bool GetStylisticSet17(global::Microsoft.UI.Xaml.DependencyObject element) => global::ABI.Microsoft.UI.Xaml.Documents.ITypographyStaticsMethods.GetStylisticSet17(_objRef_global__Microsoft_UI_Xaml_Documents_ITypographyStatics, element);

        public static void SetStylisticSet17(global::Microsoft.UI.Xaml.DependencyObject element, bool value) => global::ABI.Microsoft.UI.Xaml.Documents.ITypographyStaticsMethods.SetStylisticSet17(_objRef_global__Microsoft_UI_Xaml_Documents_ITypographyStatics, element, value);

        public static bool GetStylisticSet18(global::Microsoft.UI.Xaml.DependencyObject element) => global::ABI.Microsoft.UI.Xaml.Documents.ITypographyStaticsMethods.GetStylisticSet18(_objRef_global__Microsoft_UI_Xaml_Documents_ITypographyStatics, element);

        public static void SetStylisticSet18(global::Microsoft.UI.Xaml.DependencyObject element, bool value) => global::ABI.Microsoft.UI.Xaml.Documents.ITypographyStaticsMethods.SetStylisticSet18(_objRef_global__Microsoft_UI_Xaml_Documents_ITypographyStatics, element, value);

        public static bool GetStylisticSet19(global::Microsoft.UI.Xaml.DependencyObject element) => global::ABI.Microsoft.UI.Xaml.Documents.ITypographyStaticsMethods.GetStylisticSet19(_objRef_global__Microsoft_UI_Xaml_Documents_ITypographyStatics, element);

        public static void SetStylisticSet19(global::Microsoft.UI.Xaml.DependencyObject element, bool value) => global::ABI.Microsoft.UI.Xaml.Documents.ITypographyStaticsMethods.SetStylisticSet19(_objRef_global__Microsoft_UI_Xaml_Documents_ITypographyStatics, element, value);

        public static bool GetStylisticSet20(global::Microsoft.UI.Xaml.DependencyObject element) => global::ABI.Microsoft.UI.Xaml.Documents.ITypographyStaticsMethods.GetStylisticSet20(_objRef_global__Microsoft_UI_Xaml_Documents_ITypographyStatics, element);

        public static void SetStylisticSet20(global::Microsoft.UI.Xaml.DependencyObject element, bool value) => global::ABI.Microsoft.UI.Xaml.Documents.ITypographyStaticsMethods.SetStylisticSet20(_objRef_global__Microsoft_UI_Xaml_Documents_ITypographyStatics, element, value);

        public static global::Microsoft.UI.Xaml.FontCapitals GetCapitals(global::Microsoft.UI.Xaml.DependencyObject element) => global::ABI.Microsoft.UI.Xaml.Documents.ITypographyStaticsMethods.GetCapitals(_objRef_global__Microsoft_UI_Xaml_Documents_ITypographyStatics, element);

        public static void SetCapitals(global::Microsoft.UI.Xaml.DependencyObject element, global::Microsoft.UI.Xaml.FontCapitals value) => global::ABI.Microsoft.UI.Xaml.Documents.ITypographyStaticsMethods.SetCapitals(_objRef_global__Microsoft_UI_Xaml_Documents_ITypographyStatics, element, value);

        public static bool GetCapitalSpacing(global::Microsoft.UI.Xaml.DependencyObject element) => global::ABI.Microsoft.UI.Xaml.Documents.ITypographyStaticsMethods.GetCapitalSpacing(_objRef_global__Microsoft_UI_Xaml_Documents_ITypographyStatics, element);

        public static void SetCapitalSpacing(global::Microsoft.UI.Xaml.DependencyObject element, bool value) => global::ABI.Microsoft.UI.Xaml.Documents.ITypographyStaticsMethods.SetCapitalSpacing(_objRef_global__Microsoft_UI_Xaml_Documents_ITypographyStatics, element, value);

        public static bool GetKerning(global::Microsoft.UI.Xaml.DependencyObject element) => global::ABI.Microsoft.UI.Xaml.Documents.ITypographyStaticsMethods.GetKerning(_objRef_global__Microsoft_UI_Xaml_Documents_ITypographyStatics, element);

        public static void SetKerning(global::Microsoft.UI.Xaml.DependencyObject element, bool value) => global::ABI.Microsoft.UI.Xaml.Documents.ITypographyStaticsMethods.SetKerning(_objRef_global__Microsoft_UI_Xaml_Documents_ITypographyStatics, element, value);

        public static bool GetCaseSensitiveForms(global::Microsoft.UI.Xaml.DependencyObject element) => global::ABI.Microsoft.UI.Xaml.Documents.ITypographyStaticsMethods.GetCaseSensitiveForms(_objRef_global__Microsoft_UI_Xaml_Documents_ITypographyStatics, element);

        public static void SetCaseSensitiveForms(global::Microsoft.UI.Xaml.DependencyObject element, bool value) => global::ABI.Microsoft.UI.Xaml.Documents.ITypographyStaticsMethods.SetCaseSensitiveForms(_objRef_global__Microsoft_UI_Xaml_Documents_ITypographyStatics, element, value);

        public static bool GetHistoricalForms(global::Microsoft.UI.Xaml.DependencyObject element) => global::ABI.Microsoft.UI.Xaml.Documents.ITypographyStaticsMethods.GetHistoricalForms(_objRef_global__Microsoft_UI_Xaml_Documents_ITypographyStatics, element);

        public static void SetHistoricalForms(global::Microsoft.UI.Xaml.DependencyObject element, bool value) => global::ABI.Microsoft.UI.Xaml.Documents.ITypographyStaticsMethods.SetHistoricalForms(_objRef_global__Microsoft_UI_Xaml_Documents_ITypographyStatics, element, value);

        public static global::Microsoft.UI.Xaml.FontFraction GetFraction(global::Microsoft.UI.Xaml.DependencyObject element) => global::ABI.Microsoft.UI.Xaml.Documents.ITypographyStaticsMethods.GetFraction(_objRef_global__Microsoft_UI_Xaml_Documents_ITypographyStatics, element);

        public static void SetFraction(global::Microsoft.UI.Xaml.DependencyObject element, global::Microsoft.UI.Xaml.FontFraction value) => global::ABI.Microsoft.UI.Xaml.Documents.ITypographyStaticsMethods.SetFraction(_objRef_global__Microsoft_UI_Xaml_Documents_ITypographyStatics, element, value);

        public static global::Microsoft.UI.Xaml.FontNumeralStyle GetNumeralStyle(global::Microsoft.UI.Xaml.DependencyObject element) => global::ABI.Microsoft.UI.Xaml.Documents.ITypographyStaticsMethods.GetNumeralStyle(_objRef_global__Microsoft_UI_Xaml_Documents_ITypographyStatics, element);

        public static void SetNumeralStyle(global::Microsoft.UI.Xaml.DependencyObject element, global::Microsoft.UI.Xaml.FontNumeralStyle value) => global::ABI.Microsoft.UI.Xaml.Documents.ITypographyStaticsMethods.SetNumeralStyle(_objRef_global__Microsoft_UI_Xaml_Documents_ITypographyStatics, element, value);

        public static global::Microsoft.UI.Xaml.FontNumeralAlignment GetNumeralAlignment(global::Microsoft.UI.Xaml.DependencyObject element) => global::ABI.Microsoft.UI.Xaml.Documents.ITypographyStaticsMethods.GetNumeralAlignment(_objRef_global__Microsoft_UI_Xaml_Documents_ITypographyStatics, element);

        public static void SetNumeralAlignment(global::Microsoft.UI.Xaml.DependencyObject element, global::Microsoft.UI.Xaml.FontNumeralAlignment value) => global::ABI.Microsoft.UI.Xaml.Documents.ITypographyStaticsMethods.SetNumeralAlignment(_objRef_global__Microsoft_UI_Xaml_Documents_ITypographyStatics, element, value);

        public static bool GetSlashedZero(global::Microsoft.UI.Xaml.DependencyObject element) => global::ABI.Microsoft.UI.Xaml.Documents.ITypographyStaticsMethods.GetSlashedZero(_objRef_global__Microsoft_UI_Xaml_Documents_ITypographyStatics, element);

        public static void SetSlashedZero(global::Microsoft.UI.Xaml.DependencyObject element, bool value) => global::ABI.Microsoft.UI.Xaml.Documents.ITypographyStaticsMethods.SetSlashedZero(_objRef_global__Microsoft_UI_Xaml_Documents_ITypographyStatics, element, value);

        public static bool GetMathematicalGreek(global::Microsoft.UI.Xaml.DependencyObject element) => global::ABI.Microsoft.UI.Xaml.Documents.ITypographyStaticsMethods.GetMathematicalGreek(_objRef_global__Microsoft_UI_Xaml_Documents_ITypographyStatics, element);

        public static void SetMathematicalGreek(global::Microsoft.UI.Xaml.DependencyObject element, bool value) => global::ABI.Microsoft.UI.Xaml.Documents.ITypographyStaticsMethods.SetMathematicalGreek(_objRef_global__Microsoft_UI_Xaml_Documents_ITypographyStatics, element, value);

        public static global::Microsoft.UI.Xaml.FontVariants GetVariants(global::Microsoft.UI.Xaml.DependencyObject element) => global::ABI.Microsoft.UI.Xaml.Documents.ITypographyStaticsMethods.GetVariants(_objRef_global__Microsoft_UI_Xaml_Documents_ITypographyStatics, element);

        public static void SetVariants(global::Microsoft.UI.Xaml.DependencyObject element, global::Microsoft.UI.Xaml.FontVariants value) => global::ABI.Microsoft.UI.Xaml.Documents.ITypographyStaticsMethods.SetVariants(_objRef_global__Microsoft_UI_Xaml_Documents_ITypographyStatics, element, value);

        public static global::Microsoft.UI.Xaml.DependencyProperty AnnotationAlternatesProperty => global::ABI.Microsoft.UI.Xaml.Documents.ITypographyStaticsMethods.get_AnnotationAlternatesProperty(_objRef_global__Microsoft_UI_Xaml_Documents_ITypographyStatics);

        public static global::Microsoft.UI.Xaml.DependencyProperty CapitalSpacingProperty => global::ABI.Microsoft.UI.Xaml.Documents.ITypographyStaticsMethods.get_CapitalSpacingProperty(_objRef_global__Microsoft_UI_Xaml_Documents_ITypographyStatics);

        public static global::Microsoft.UI.Xaml.DependencyProperty CapitalsProperty => global::ABI.Microsoft.UI.Xaml.Documents.ITypographyStaticsMethods.get_CapitalsProperty(_objRef_global__Microsoft_UI_Xaml_Documents_ITypographyStatics);

        public static global::Microsoft.UI.Xaml.DependencyProperty CaseSensitiveFormsProperty => global::ABI.Microsoft.UI.Xaml.Documents.ITypographyStaticsMethods.get_CaseSensitiveFormsProperty(_objRef_global__Microsoft_UI_Xaml_Documents_ITypographyStatics);

        public static global::Microsoft.UI.Xaml.DependencyProperty ContextualAlternatesProperty => global::ABI.Microsoft.UI.Xaml.Documents.ITypographyStaticsMethods.get_ContextualAlternatesProperty(_objRef_global__Microsoft_UI_Xaml_Documents_ITypographyStatics);

        public static global::Microsoft.UI.Xaml.DependencyProperty ContextualLigaturesProperty => global::ABI.Microsoft.UI.Xaml.Documents.ITypographyStaticsMethods.get_ContextualLigaturesProperty(_objRef_global__Microsoft_UI_Xaml_Documents_ITypographyStatics);

        public static global::Microsoft.UI.Xaml.DependencyProperty ContextualSwashesProperty => global::ABI.Microsoft.UI.Xaml.Documents.ITypographyStaticsMethods.get_ContextualSwashesProperty(_objRef_global__Microsoft_UI_Xaml_Documents_ITypographyStatics);

        public static global::Microsoft.UI.Xaml.DependencyProperty DiscretionaryLigaturesProperty => global::ABI.Microsoft.UI.Xaml.Documents.ITypographyStaticsMethods.get_DiscretionaryLigaturesProperty(_objRef_global__Microsoft_UI_Xaml_Documents_ITypographyStatics);

        public static global::Microsoft.UI.Xaml.DependencyProperty EastAsianExpertFormsProperty => global::ABI.Microsoft.UI.Xaml.Documents.ITypographyStaticsMethods.get_EastAsianExpertFormsProperty(_objRef_global__Microsoft_UI_Xaml_Documents_ITypographyStatics);

        public static global::Microsoft.UI.Xaml.DependencyProperty EastAsianLanguageProperty => global::ABI.Microsoft.UI.Xaml.Documents.ITypographyStaticsMethods.get_EastAsianLanguageProperty(_objRef_global__Microsoft_UI_Xaml_Documents_ITypographyStatics);

        public static global::Microsoft.UI.Xaml.DependencyProperty EastAsianWidthsProperty => global::ABI.Microsoft.UI.Xaml.Documents.ITypographyStaticsMethods.get_EastAsianWidthsProperty(_objRef_global__Microsoft_UI_Xaml_Documents_ITypographyStatics);

        public static global::Microsoft.UI.Xaml.DependencyProperty FractionProperty => global::ABI.Microsoft.UI.Xaml.Documents.ITypographyStaticsMethods.get_FractionProperty(_objRef_global__Microsoft_UI_Xaml_Documents_ITypographyStatics);

        public static global::Microsoft.UI.Xaml.DependencyProperty HistoricalFormsProperty => global::ABI.Microsoft.UI.Xaml.Documents.ITypographyStaticsMethods.get_HistoricalFormsProperty(_objRef_global__Microsoft_UI_Xaml_Documents_ITypographyStatics);

        public static global::Microsoft.UI.Xaml.DependencyProperty HistoricalLigaturesProperty => global::ABI.Microsoft.UI.Xaml.Documents.ITypographyStaticsMethods.get_HistoricalLigaturesProperty(_objRef_global__Microsoft_UI_Xaml_Documents_ITypographyStatics);

        public static global::Microsoft.UI.Xaml.DependencyProperty KerningProperty => global::ABI.Microsoft.UI.Xaml.Documents.ITypographyStaticsMethods.get_KerningProperty(_objRef_global__Microsoft_UI_Xaml_Documents_ITypographyStatics);

        public static global::Microsoft.UI.Xaml.DependencyProperty MathematicalGreekProperty => global::ABI.Microsoft.UI.Xaml.Documents.ITypographyStaticsMethods.get_MathematicalGreekProperty(_objRef_global__Microsoft_UI_Xaml_Documents_ITypographyStatics);

        public static global::Microsoft.UI.Xaml.DependencyProperty NumeralAlignmentProperty => global::ABI.Microsoft.UI.Xaml.Documents.ITypographyStaticsMethods.get_NumeralAlignmentProperty(_objRef_global__Microsoft_UI_Xaml_Documents_ITypographyStatics);

        public static global::Microsoft.UI.Xaml.DependencyProperty NumeralStyleProperty => global::ABI.Microsoft.UI.Xaml.Documents.ITypographyStaticsMethods.get_NumeralStyleProperty(_objRef_global__Microsoft_UI_Xaml_Documents_ITypographyStatics);

        public static global::Microsoft.UI.Xaml.DependencyProperty SlashedZeroProperty => global::ABI.Microsoft.UI.Xaml.Documents.ITypographyStaticsMethods.get_SlashedZeroProperty(_objRef_global__Microsoft_UI_Xaml_Documents_ITypographyStatics);

        public static global::Microsoft.UI.Xaml.DependencyProperty StandardLigaturesProperty => global::ABI.Microsoft.UI.Xaml.Documents.ITypographyStaticsMethods.get_StandardLigaturesProperty(_objRef_global__Microsoft_UI_Xaml_Documents_ITypographyStatics);

        public static global::Microsoft.UI.Xaml.DependencyProperty StandardSwashesProperty => global::ABI.Microsoft.UI.Xaml.Documents.ITypographyStaticsMethods.get_StandardSwashesProperty(_objRef_global__Microsoft_UI_Xaml_Documents_ITypographyStatics);

        public static global::Microsoft.UI.Xaml.DependencyProperty StylisticAlternatesProperty => global::ABI.Microsoft.UI.Xaml.Documents.ITypographyStaticsMethods.get_StylisticAlternatesProperty(_objRef_global__Microsoft_UI_Xaml_Documents_ITypographyStatics);

        public static global::Microsoft.UI.Xaml.DependencyProperty StylisticSet10Property => global::ABI.Microsoft.UI.Xaml.Documents.ITypographyStaticsMethods.get_StylisticSet10Property(_objRef_global__Microsoft_UI_Xaml_Documents_ITypographyStatics);

        public static global::Microsoft.UI.Xaml.DependencyProperty StylisticSet11Property => global::ABI.Microsoft.UI.Xaml.Documents.ITypographyStaticsMethods.get_StylisticSet11Property(_objRef_global__Microsoft_UI_Xaml_Documents_ITypographyStatics);

        public static global::Microsoft.UI.Xaml.DependencyProperty StylisticSet12Property => global::ABI.Microsoft.UI.Xaml.Documents.ITypographyStaticsMethods.get_StylisticSet12Property(_objRef_global__Microsoft_UI_Xaml_Documents_ITypographyStatics);

        public static global::Microsoft.UI.Xaml.DependencyProperty StylisticSet13Property => global::ABI.Microsoft.UI.Xaml.Documents.ITypographyStaticsMethods.get_StylisticSet13Property(_objRef_global__Microsoft_UI_Xaml_Documents_ITypographyStatics);

        public static global::Microsoft.UI.Xaml.DependencyProperty StylisticSet14Property => global::ABI.Microsoft.UI.Xaml.Documents.ITypographyStaticsMethods.get_StylisticSet14Property(_objRef_global__Microsoft_UI_Xaml_Documents_ITypographyStatics);

        public static global::Microsoft.UI.Xaml.DependencyProperty StylisticSet15Property => global::ABI.Microsoft.UI.Xaml.Documents.ITypographyStaticsMethods.get_StylisticSet15Property(_objRef_global__Microsoft_UI_Xaml_Documents_ITypographyStatics);

        public static global::Microsoft.UI.Xaml.DependencyProperty StylisticSet16Property => global::ABI.Microsoft.UI.Xaml.Documents.ITypographyStaticsMethods.get_StylisticSet16Property(_objRef_global__Microsoft_UI_Xaml_Documents_ITypographyStatics);

        public static global::Microsoft.UI.Xaml.DependencyProperty StylisticSet17Property => global::ABI.Microsoft.UI.Xaml.Documents.ITypographyStaticsMethods.get_StylisticSet17Property(_objRef_global__Microsoft_UI_Xaml_Documents_ITypographyStatics);

        public static global::Microsoft.UI.Xaml.DependencyProperty StylisticSet18Property => global::ABI.Microsoft.UI.Xaml.Documents.ITypographyStaticsMethods.get_StylisticSet18Property(_objRef_global__Microsoft_UI_Xaml_Documents_ITypographyStatics);

        public static global::Microsoft.UI.Xaml.DependencyProperty StylisticSet19Property => global::ABI.Microsoft.UI.Xaml.Documents.ITypographyStaticsMethods.get_StylisticSet19Property(_objRef_global__Microsoft_UI_Xaml_Documents_ITypographyStatics);

        public static global::Microsoft.UI.Xaml.DependencyProperty StylisticSet1Property => global::ABI.Microsoft.UI.Xaml.Documents.ITypographyStaticsMethods.get_StylisticSet1Property(_objRef_global__Microsoft_UI_Xaml_Documents_ITypographyStatics);

        public static global::Microsoft.UI.Xaml.DependencyProperty StylisticSet20Property => global::ABI.Microsoft.UI.Xaml.Documents.ITypographyStaticsMethods.get_StylisticSet20Property(_objRef_global__Microsoft_UI_Xaml_Documents_ITypographyStatics);

        public static global::Microsoft.UI.Xaml.DependencyProperty StylisticSet2Property => global::ABI.Microsoft.UI.Xaml.Documents.ITypographyStaticsMethods.get_StylisticSet2Property(_objRef_global__Microsoft_UI_Xaml_Documents_ITypographyStatics);

        public static global::Microsoft.UI.Xaml.DependencyProperty StylisticSet3Property => global::ABI.Microsoft.UI.Xaml.Documents.ITypographyStaticsMethods.get_StylisticSet3Property(_objRef_global__Microsoft_UI_Xaml_Documents_ITypographyStatics);

        public static global::Microsoft.UI.Xaml.DependencyProperty StylisticSet4Property => global::ABI.Microsoft.UI.Xaml.Documents.ITypographyStaticsMethods.get_StylisticSet4Property(_objRef_global__Microsoft_UI_Xaml_Documents_ITypographyStatics);

        public static global::Microsoft.UI.Xaml.DependencyProperty StylisticSet5Property => global::ABI.Microsoft.UI.Xaml.Documents.ITypographyStaticsMethods.get_StylisticSet5Property(_objRef_global__Microsoft_UI_Xaml_Documents_ITypographyStatics);

        public static global::Microsoft.UI.Xaml.DependencyProperty StylisticSet6Property => global::ABI.Microsoft.UI.Xaml.Documents.ITypographyStaticsMethods.get_StylisticSet6Property(_objRef_global__Microsoft_UI_Xaml_Documents_ITypographyStatics);

        public static global::Microsoft.UI.Xaml.DependencyProperty StylisticSet7Property => global::ABI.Microsoft.UI.Xaml.Documents.ITypographyStaticsMethods.get_StylisticSet7Property(_objRef_global__Microsoft_UI_Xaml_Documents_ITypographyStatics);

        public static global::Microsoft.UI.Xaml.DependencyProperty StylisticSet8Property => global::ABI.Microsoft.UI.Xaml.Documents.ITypographyStaticsMethods.get_StylisticSet8Property(_objRef_global__Microsoft_UI_Xaml_Documents_ITypographyStatics);

        public static global::Microsoft.UI.Xaml.DependencyProperty StylisticSet9Property => global::ABI.Microsoft.UI.Xaml.Documents.ITypographyStaticsMethods.get_StylisticSet9Property(_objRef_global__Microsoft_UI_Xaml_Documents_ITypographyStatics);

        public static global::Microsoft.UI.Xaml.DependencyProperty VariantsProperty => global::ABI.Microsoft.UI.Xaml.Documents.ITypographyStaticsMethods.get_VariantsProperty(_objRef_global__Microsoft_UI_Xaml_Documents_ITypographyStatics);

        public static Typography FromAbi(IntPtr thisPtr)
        {
            if (thisPtr == IntPtr.Zero) return null;
            return MarshalInspectable<Typography>.FromAbi(thisPtr);
        }

        internal Typography(IObjectReference objRef)
        {
            _inner = objRef.As(global::ABI.Microsoft.UI.Xaml.Documents.ITypographyMethods.IID);

        }


        public static bool operator ==(Typography x, Typography y) => (x?.ThisPtr ?? IntPtr.Zero) == (y?.ThisPtr ?? IntPtr.Zero);
        public static bool operator !=(Typography x, Typography y) => !(x == y);
        public bool Equals(Typography other) => this == other;
        public override bool Equals(object obj) => obj is Typography that && this == that;
        public override int GetHashCode() => ThisPtr.GetHashCode();


        bool IWinRTObject.HasUnwrappableNativeObject => true;
        IObjectReference IWinRTObject.NativeObject => _inner;
        private volatile global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> _queryInterfaceCache;
        private global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> MakeQueryInterfaceCache()
        {
            global::System.Threading.Interlocked.CompareExchange(ref _queryInterfaceCache, new global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference>(), null); 
            return _queryInterfaceCache;
        }
        global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> IWinRTObject.QueryInterfaceCache => _queryInterfaceCache ?? MakeQueryInterfaceCache();
        private volatile global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> _additionalTypeData;
        private global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> MakeAdditionalTypeData()
        {
            global::System.Threading.Interlocked.CompareExchange(ref _additionalTypeData, new global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object>(), null); 
            return _additionalTypeData;
        }
        global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> IWinRTObject.AdditionalTypeData => _additionalTypeData ?? MakeAdditionalTypeData();

        private struct InterfaceTag<I>{};


        private bool IsOverridableInterface(Guid iid) => false;

        global::System.Runtime.InteropServices.CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(ref Guid iid, out IntPtr ppv)
        {
            ppv = IntPtr.Zero;
            if (IsOverridableInterface(iid) || global::WinRT.Interop.IID.IID_IInspectable == iid)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
            }

            if (((IWinRTObject)this).NativeObject.TryAs(iid, out ppv) >= 0)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.Handled;
            }

            return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
        }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")]
    [global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Documents.Underline))]
    [global::ABI.Microsoft.UI.Xaml.Documents.UnderlineRcwFactory]
    [global::WinRT.ProjectedRuntimeClass(typeof(IUnderline))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    public sealed class Underline : Span, global::System.Runtime.InteropServices.ICustomQueryInterface, IWinRTObject, IEquatable<Underline>
    {
        private IntPtr ThisPtr => _inner == null ? (((IWinRTObject)this).NativeObject).ThisPtr : _inner.ThisPtr;

        private readonly IObjectReference _inner = null;



        private IObjectReference _objRef_global__Microsoft_UI_Xaml_Documents_IUnderline => _inner;


        private static volatile IObjectReference ___objRef_global__Microsoft_UI_Xaml_Documents_Underline;
        private static IObjectReference _objRef_global__Microsoft_UI_Xaml_Documents_Underline
        {
            get
            { 
                var factory = ___objRef_global__Microsoft_UI_Xaml_Documents_Underline;
                if (factory != null && factory.IsInCurrentContext)
                {
                    return factory;
                }
                else
                {
                    return ___objRef_global__Microsoft_UI_Xaml_Documents_Underline = ActivationFactory.Get("Microsoft.UI.Xaml.Documents.Underline");
                }
            }
        }

        public Underline() :base(global::WinRT.DerivedComposed.Instance)
        {
            _inner = global::ABI.WinRT.Interop.IActivationFactoryMethods.ActivateInstanceUnsafe(_objRef_global__Microsoft_UI_Xaml_Documents_Underline, global::ABI.Microsoft.UI.Xaml.Documents.IUnderlineMethods.IID);
            ComWrappersSupport.RegisterObjectForInterface(this, ThisPtr);
            ComWrappersHelper.Init(_inner, false);

        }

        public static new Underline FromAbi(IntPtr thisPtr)
        {
            if (thisPtr == IntPtr.Zero) return null;
            return MarshalInspectable<Underline>.FromAbi(thisPtr);
        }

        internal Underline(IObjectReference objRef)
            : base(global::WinRT.DerivedComposed.Instance)

        {
            _inner = objRef.As(global::ABI.Microsoft.UI.Xaml.Documents.IUnderlineMethods.IID);

        }


        public static bool operator ==(Underline x, Underline y) => (x?.ThisPtr ?? IntPtr.Zero) == (y?.ThisPtr ?? IntPtr.Zero);
        public static bool operator !=(Underline x, Underline y) => !(x == y);
        public bool Equals(Underline other) => this == other;
        public override bool Equals(object obj) => obj is Underline that && this == that;
        public override int GetHashCode() => ThisPtr.GetHashCode();


        bool IWinRTObject.HasUnwrappableNativeObject => true;
        IObjectReference IWinRTObject.NativeObject => _inner;

        private struct InterfaceTag<I>{};


        protected override bool IsOverridableInterface(Guid iid) => base.IsOverridableInterface(iid);

        global::System.Runtime.InteropServices.CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(ref Guid iid, out IntPtr ppv)
        {
            ppv = IntPtr.Zero;
            if (IsOverridableInterface(iid) || global::WinRT.Interop.IID.IID_IInspectable == iid)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
            }

            if (((IWinRTObject)this).NativeObject.TryAs(iid, out ppv) >= 0)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.Handled;
            }

            return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
        }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")][global::WinRT.WinRTExposedType(typeof(global::WinRT.EnumTypeDetails<UnderlineStyle>))][global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    public enum UnderlineStyle : int
    {
        None = unchecked((int)0),
        Single = unchecked((int)0x1),
    }
}

#pragma warning disable CA1416
namespace ABI.Microsoft.UI.Xaml.Documents
{
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    public struct Block
    {

        public static IObjectReference CreateMarshaler(global::Microsoft.UI.Xaml.Documents.Block obj) => obj is null ? null : MarshalInspectable<global::Microsoft.UI.Xaml.Documents.Block>.CreateMarshaler<IUnknownVftbl>(obj, global::ABI.Microsoft.UI.Xaml.Documents.IBlockMethods.IID);
        public static ObjectReferenceValue CreateMarshaler2(global::Microsoft.UI.Xaml.Documents.Block obj) => MarshalInspectable<object>.CreateMarshaler2(obj, global::ABI.Microsoft.UI.Xaml.Documents.IBlockMethods.IID);
        public static IntPtr GetAbi(IObjectReference value) => value is null ? IntPtr.Zero : MarshalInterfaceHelper<object>.GetAbi(value);
        public static global::Microsoft.UI.Xaml.Documents.Block FromAbi(IntPtr thisPtr) => global::Microsoft.UI.Xaml.Documents.Block.FromAbi(thisPtr);
        public static IntPtr FromManaged(global::Microsoft.UI.Xaml.Documents.Block obj) => obj is null ? IntPtr.Zero : CreateMarshaler2(obj).Detach();
        public static unsafe MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Documents.Block>.MarshalerArray CreateMarshalerArray(global::Microsoft.UI.Xaml.Documents.Block[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Documents.Block>.CreateMarshalerArray2(array, (o) => CreateMarshaler2(o));
        public static (int length, IntPtr data) GetAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Documents.Block>.GetAbiArray(box);
        public static unsafe global::Microsoft.UI.Xaml.Documents.Block[] FromAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Documents.Block>.FromAbiArray(box, FromAbi);
        public static void CopyAbiArray(global::Microsoft.UI.Xaml.Documents.Block[] array, object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Documents.Block>.CopyAbiArray(array, box, FromAbi);
        public static (int length, IntPtr data) FromManagedArray(global::Microsoft.UI.Xaml.Documents.Block[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Documents.Block>.FromManagedArray(array, (o) => FromManaged(o));
        public static void DisposeMarshaler(IObjectReference value) => MarshalInspectable<object>.DisposeMarshaler(value);
        public static void DisposeMarshalerArray(MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Documents.Block>.MarshalerArray array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Documents.Block>.DisposeMarshalerArray(array);
        public static void DisposeAbi(IntPtr abi) => MarshalInspectable<object>.DisposeAbi(abi);
        public static unsafe void DisposeAbiArray(object box) => MarshalInspectable<object>.DisposeAbiArray(box);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    internal sealed class BlockRcwFactoryAttribute : global::WinRT.WinRTImplementationTypeRcwFactoryAttribute
    {
        public override object CreateInstance(global::WinRT.IInspectable inspectable)
            => new global::Microsoft.UI.Xaml.Documents.Block(inspectable.ObjRef);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    public struct BlockCollection
    {

        public static IObjectReference CreateMarshaler(global::Microsoft.UI.Xaml.Documents.BlockCollection obj) => obj is null ? null : MarshalInterface<global::System.Collections.Generic.IList<global::Microsoft.UI.Xaml.Documents.Block>>.CreateMarshaler(obj);
        public static ObjectReferenceValue CreateMarshaler2(global::Microsoft.UI.Xaml.Documents.BlockCollection obj) => MarshalInterface<global::System.Collections.Generic.IList<global::Microsoft.UI.Xaml.Documents.Block>>.CreateMarshaler2(obj, global::ABI.System.Collections.Generic.IListMethods<global::Microsoft.UI.Xaml.Documents.Block>.IID);
        public static IntPtr GetAbi(IObjectReference value) => value is null ? IntPtr.Zero : MarshalInterfaceHelper<object>.GetAbi(value);
        public static global::Microsoft.UI.Xaml.Documents.BlockCollection FromAbi(IntPtr thisPtr) => global::Microsoft.UI.Xaml.Documents.BlockCollection.FromAbi(thisPtr);
        public static IntPtr FromManaged(global::Microsoft.UI.Xaml.Documents.BlockCollection obj) => obj is null ? IntPtr.Zero : CreateMarshaler2(obj).Detach();
        public static unsafe MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Documents.BlockCollection>.MarshalerArray CreateMarshalerArray(global::Microsoft.UI.Xaml.Documents.BlockCollection[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Documents.BlockCollection>.CreateMarshalerArray2(array, (o) => CreateMarshaler2(o));
        public static (int length, IntPtr data) GetAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Documents.BlockCollection>.GetAbiArray(box);
        public static unsafe global::Microsoft.UI.Xaml.Documents.BlockCollection[] FromAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Documents.BlockCollection>.FromAbiArray(box, FromAbi);
        public static void CopyAbiArray(global::Microsoft.UI.Xaml.Documents.BlockCollection[] array, object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Documents.BlockCollection>.CopyAbiArray(array, box, FromAbi);
        public static (int length, IntPtr data) FromManagedArray(global::Microsoft.UI.Xaml.Documents.BlockCollection[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Documents.BlockCollection>.FromManagedArray(array, (o) => FromManaged(o));
        public static void DisposeMarshaler(IObjectReference value) => MarshalInspectable<object>.DisposeMarshaler(value);
        public static void DisposeMarshalerArray(MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Documents.BlockCollection>.MarshalerArray array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Documents.BlockCollection>.DisposeMarshalerArray(array);
        public static void DisposeAbi(IntPtr abi) => MarshalInspectable<object>.DisposeAbi(abi);
        public static unsafe void DisposeAbiArray(object box) => MarshalInspectable<object>.DisposeAbiArray(box);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    internal sealed class BlockCollectionRcwFactoryAttribute : global::WinRT.WinRTImplementationTypeRcwFactoryAttribute
    {
        public override object CreateInstance(global::WinRT.IInspectable inspectable)
            => new global::Microsoft.UI.Xaml.Documents.BlockCollection(inspectable.ObjRef);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    public struct Bold
    {

        public static IObjectReference CreateMarshaler(global::Microsoft.UI.Xaml.Documents.Bold obj) => obj is null ? null : MarshalInspectable<global::Microsoft.UI.Xaml.Documents.Bold>.CreateMarshaler<IUnknownVftbl>(obj, global::ABI.Microsoft.UI.Xaml.Documents.IBoldMethods.IID);
        public static ObjectReferenceValue CreateMarshaler2(global::Microsoft.UI.Xaml.Documents.Bold obj) => MarshalInspectable<object>.CreateMarshaler2(obj, global::ABI.Microsoft.UI.Xaml.Documents.IBoldMethods.IID);
        public static IntPtr GetAbi(IObjectReference value) => value is null ? IntPtr.Zero : MarshalInterfaceHelper<object>.GetAbi(value);
        public static global::Microsoft.UI.Xaml.Documents.Bold FromAbi(IntPtr thisPtr) => global::Microsoft.UI.Xaml.Documents.Bold.FromAbi(thisPtr);
        public static IntPtr FromManaged(global::Microsoft.UI.Xaml.Documents.Bold obj) => obj is null ? IntPtr.Zero : CreateMarshaler2(obj).Detach();
        public static unsafe MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Documents.Bold>.MarshalerArray CreateMarshalerArray(global::Microsoft.UI.Xaml.Documents.Bold[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Documents.Bold>.CreateMarshalerArray2(array, (o) => CreateMarshaler2(o));
        public static (int length, IntPtr data) GetAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Documents.Bold>.GetAbiArray(box);
        public static unsafe global::Microsoft.UI.Xaml.Documents.Bold[] FromAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Documents.Bold>.FromAbiArray(box, FromAbi);
        public static void CopyAbiArray(global::Microsoft.UI.Xaml.Documents.Bold[] array, object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Documents.Bold>.CopyAbiArray(array, box, FromAbi);
        public static (int length, IntPtr data) FromManagedArray(global::Microsoft.UI.Xaml.Documents.Bold[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Documents.Bold>.FromManagedArray(array, (o) => FromManaged(o));
        public static void DisposeMarshaler(IObjectReference value) => MarshalInspectable<object>.DisposeMarshaler(value);
        public static void DisposeMarshalerArray(MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Documents.Bold>.MarshalerArray array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Documents.Bold>.DisposeMarshalerArray(array);
        public static void DisposeAbi(IntPtr abi) => MarshalInspectable<object>.DisposeAbi(abi);
        public static unsafe void DisposeAbiArray(object box) => MarshalInspectable<object>.DisposeAbiArray(box);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    internal sealed class BoldRcwFactoryAttribute : global::WinRT.WinRTImplementationTypeRcwFactoryAttribute
    {
        public override object CreateInstance(global::WinRT.IInspectable inspectable)
            => new global::Microsoft.UI.Xaml.Documents.Bold(inspectable.ObjRef);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    public struct Glyphs
    {

        public static IObjectReference CreateMarshaler(global::Microsoft.UI.Xaml.Documents.Glyphs obj) => obj is null ? null : MarshalInspectable<global::Microsoft.UI.Xaml.Documents.Glyphs>.CreateMarshaler<IUnknownVftbl>(obj, global::ABI.Microsoft.UI.Xaml.Documents.IGlyphsMethods.IID);
        public static ObjectReferenceValue CreateMarshaler2(global::Microsoft.UI.Xaml.Documents.Glyphs obj) => MarshalInspectable<object>.CreateMarshaler2(obj, global::ABI.Microsoft.UI.Xaml.Documents.IGlyphsMethods.IID);
        public static IntPtr GetAbi(IObjectReference value) => value is null ? IntPtr.Zero : MarshalInterfaceHelper<object>.GetAbi(value);
        public static global::Microsoft.UI.Xaml.Documents.Glyphs FromAbi(IntPtr thisPtr) => global::Microsoft.UI.Xaml.Documents.Glyphs.FromAbi(thisPtr);
        public static IntPtr FromManaged(global::Microsoft.UI.Xaml.Documents.Glyphs obj) => obj is null ? IntPtr.Zero : CreateMarshaler2(obj).Detach();
        public static unsafe MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Documents.Glyphs>.MarshalerArray CreateMarshalerArray(global::Microsoft.UI.Xaml.Documents.Glyphs[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Documents.Glyphs>.CreateMarshalerArray2(array, (o) => CreateMarshaler2(o));
        public static (int length, IntPtr data) GetAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Documents.Glyphs>.GetAbiArray(box);
        public static unsafe global::Microsoft.UI.Xaml.Documents.Glyphs[] FromAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Documents.Glyphs>.FromAbiArray(box, FromAbi);
        public static void CopyAbiArray(global::Microsoft.UI.Xaml.Documents.Glyphs[] array, object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Documents.Glyphs>.CopyAbiArray(array, box, FromAbi);
        public static (int length, IntPtr data) FromManagedArray(global::Microsoft.UI.Xaml.Documents.Glyphs[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Documents.Glyphs>.FromManagedArray(array, (o) => FromManaged(o));
        public static void DisposeMarshaler(IObjectReference value) => MarshalInspectable<object>.DisposeMarshaler(value);
        public static void DisposeMarshalerArray(MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Documents.Glyphs>.MarshalerArray array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Documents.Glyphs>.DisposeMarshalerArray(array);
        public static void DisposeAbi(IntPtr abi) => MarshalInspectable<object>.DisposeAbi(abi);
        public static unsafe void DisposeAbiArray(object box) => MarshalInspectable<object>.DisposeAbiArray(box);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    internal sealed class GlyphsRcwFactoryAttribute : global::WinRT.WinRTImplementationTypeRcwFactoryAttribute
    {
        public override object CreateInstance(global::WinRT.IInspectable inspectable)
            => new global::Microsoft.UI.Xaml.Documents.Glyphs(inspectable.ObjRef);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    public struct Hyperlink
    {

        public static IObjectReference CreateMarshaler(global::Microsoft.UI.Xaml.Documents.Hyperlink obj) => obj is null ? null : MarshalInspectable<global::Microsoft.UI.Xaml.Documents.Hyperlink>.CreateMarshaler<IUnknownVftbl>(obj, global::ABI.Microsoft.UI.Xaml.Documents.IHyperlinkMethods.IID);
        public static ObjectReferenceValue CreateMarshaler2(global::Microsoft.UI.Xaml.Documents.Hyperlink obj) => MarshalInspectable<object>.CreateMarshaler2(obj, global::ABI.Microsoft.UI.Xaml.Documents.IHyperlinkMethods.IID);
        public static IntPtr GetAbi(IObjectReference value) => value is null ? IntPtr.Zero : MarshalInterfaceHelper<object>.GetAbi(value);
        public static global::Microsoft.UI.Xaml.Documents.Hyperlink FromAbi(IntPtr thisPtr) => global::Microsoft.UI.Xaml.Documents.Hyperlink.FromAbi(thisPtr);
        public static IntPtr FromManaged(global::Microsoft.UI.Xaml.Documents.Hyperlink obj) => obj is null ? IntPtr.Zero : CreateMarshaler2(obj).Detach();
        public static unsafe MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Documents.Hyperlink>.MarshalerArray CreateMarshalerArray(global::Microsoft.UI.Xaml.Documents.Hyperlink[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Documents.Hyperlink>.CreateMarshalerArray2(array, (o) => CreateMarshaler2(o));
        public static (int length, IntPtr data) GetAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Documents.Hyperlink>.GetAbiArray(box);
        public static unsafe global::Microsoft.UI.Xaml.Documents.Hyperlink[] FromAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Documents.Hyperlink>.FromAbiArray(box, FromAbi);
        public static void CopyAbiArray(global::Microsoft.UI.Xaml.Documents.Hyperlink[] array, object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Documents.Hyperlink>.CopyAbiArray(array, box, FromAbi);
        public static (int length, IntPtr data) FromManagedArray(global::Microsoft.UI.Xaml.Documents.Hyperlink[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Documents.Hyperlink>.FromManagedArray(array, (o) => FromManaged(o));
        public static void DisposeMarshaler(IObjectReference value) => MarshalInspectable<object>.DisposeMarshaler(value);
        public static void DisposeMarshalerArray(MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Documents.Hyperlink>.MarshalerArray array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Documents.Hyperlink>.DisposeMarshalerArray(array);
        public static void DisposeAbi(IntPtr abi) => MarshalInspectable<object>.DisposeAbi(abi);
        public static unsafe void DisposeAbiArray(object box) => MarshalInspectable<object>.DisposeAbiArray(box);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    internal sealed class HyperlinkRcwFactoryAttribute : global::WinRT.WinRTImplementationTypeRcwFactoryAttribute
    {
        public override object CreateInstance(global::WinRT.IInspectable inspectable)
            => new global::Microsoft.UI.Xaml.Documents.Hyperlink(inspectable.ObjRef);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    public struct HyperlinkClickEventArgs
    {

        public static IObjectReference CreateMarshaler(global::Microsoft.UI.Xaml.Documents.HyperlinkClickEventArgs obj) => obj is null ? null : MarshalInspectable<global::Microsoft.UI.Xaml.Documents.HyperlinkClickEventArgs>.CreateMarshaler<IUnknownVftbl>(obj, global::ABI.Microsoft.UI.Xaml.Documents.IHyperlinkClickEventArgsMethods.IID);
        public static ObjectReferenceValue CreateMarshaler2(global::Microsoft.UI.Xaml.Documents.HyperlinkClickEventArgs obj) => MarshalInspectable<object>.CreateMarshaler2(obj, global::ABI.Microsoft.UI.Xaml.Documents.IHyperlinkClickEventArgsMethods.IID);
        public static IntPtr GetAbi(IObjectReference value) => value is null ? IntPtr.Zero : MarshalInterfaceHelper<object>.GetAbi(value);
        public static global::Microsoft.UI.Xaml.Documents.HyperlinkClickEventArgs FromAbi(IntPtr thisPtr) => global::Microsoft.UI.Xaml.Documents.HyperlinkClickEventArgs.FromAbi(thisPtr);
        public static IntPtr FromManaged(global::Microsoft.UI.Xaml.Documents.HyperlinkClickEventArgs obj) => obj is null ? IntPtr.Zero : CreateMarshaler2(obj).Detach();
        public static unsafe MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Documents.HyperlinkClickEventArgs>.MarshalerArray CreateMarshalerArray(global::Microsoft.UI.Xaml.Documents.HyperlinkClickEventArgs[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Documents.HyperlinkClickEventArgs>.CreateMarshalerArray2(array, (o) => CreateMarshaler2(o));
        public static (int length, IntPtr data) GetAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Documents.HyperlinkClickEventArgs>.GetAbiArray(box);
        public static unsafe global::Microsoft.UI.Xaml.Documents.HyperlinkClickEventArgs[] FromAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Documents.HyperlinkClickEventArgs>.FromAbiArray(box, FromAbi);
        public static void CopyAbiArray(global::Microsoft.UI.Xaml.Documents.HyperlinkClickEventArgs[] array, object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Documents.HyperlinkClickEventArgs>.CopyAbiArray(array, box, FromAbi);
        public static (int length, IntPtr data) FromManagedArray(global::Microsoft.UI.Xaml.Documents.HyperlinkClickEventArgs[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Documents.HyperlinkClickEventArgs>.FromManagedArray(array, (o) => FromManaged(o));
        public static void DisposeMarshaler(IObjectReference value) => MarshalInspectable<object>.DisposeMarshaler(value);
        public static void DisposeMarshalerArray(MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Documents.HyperlinkClickEventArgs>.MarshalerArray array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Documents.HyperlinkClickEventArgs>.DisposeMarshalerArray(array);
        public static void DisposeAbi(IntPtr abi) => MarshalInspectable<object>.DisposeAbi(abi);
        public static unsafe void DisposeAbiArray(object box) => MarshalInspectable<object>.DisposeAbiArray(box);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    internal sealed class HyperlinkClickEventArgsRcwFactoryAttribute : global::WinRT.WinRTImplementationTypeRcwFactoryAttribute
    {
        public override object CreateInstance(global::WinRT.IInspectable inspectable)
            => new global::Microsoft.UI.Xaml.Documents.HyperlinkClickEventArgs(inspectable.ObjRef);
    }
    internal static class IBlockMethods
    {

        internal static unsafe global::Microsoft.UI.Xaml.TextAlignment get_HorizontalTextAlignment(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::Microsoft.UI.Xaml.TextAlignment __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::Microsoft.UI.Xaml.TextAlignment*, int>**)ThisPtr)[8](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }
        internal static unsafe void set_HorizontalTextAlignment(IObjectReference _obj, global::Microsoft.UI.Xaml.TextAlignment value)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::Microsoft.UI.Xaml.TextAlignment, int>**)ThisPtr)[9](ThisPtr, value));
            global::System.GC.KeepAlive(_obj);
        }

        internal static unsafe double get_LineHeight(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            double __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, double*, int>**)ThisPtr)[10](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }
        internal static unsafe void set_LineHeight(IObjectReference _obj, double value)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, double, int>**)ThisPtr)[11](ThisPtr, value));
            global::System.GC.KeepAlive(_obj);
        }

        internal static unsafe global::Microsoft.UI.Xaml.LineStackingStrategy get_LineStackingStrategy(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::Microsoft.UI.Xaml.LineStackingStrategy __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::Microsoft.UI.Xaml.LineStackingStrategy*, int>**)ThisPtr)[12](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }
        internal static unsafe void set_LineStackingStrategy(IObjectReference _obj, global::Microsoft.UI.Xaml.LineStackingStrategy value)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::Microsoft.UI.Xaml.LineStackingStrategy, int>**)ThisPtr)[13](ThisPtr, value));
            global::System.GC.KeepAlive(_obj);
        }

        internal static unsafe global::Microsoft.UI.Xaml.Thickness get_Margin(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::Microsoft.UI.Xaml.Thickness __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::Microsoft.UI.Xaml.Thickness*, int>**)ThisPtr)[14](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }
        internal static unsafe void set_Margin(IObjectReference _obj, global::Microsoft.UI.Xaml.Thickness value)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::Microsoft.UI.Xaml.Thickness, int>**)ThisPtr)[15](ThisPtr, value));
            global::System.GC.KeepAlive(_obj);
        }

        internal static unsafe global::Microsoft.UI.Xaml.TextAlignment get_TextAlignment(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::Microsoft.UI.Xaml.TextAlignment __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::Microsoft.UI.Xaml.TextAlignment*, int>**)ThisPtr)[6](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }
        internal static unsafe void set_TextAlignment(IObjectReference _obj, global::Microsoft.UI.Xaml.TextAlignment value)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::Microsoft.UI.Xaml.TextAlignment, int>**)ThisPtr)[7](ThisPtr, value));
            global::System.GC.KeepAlive(_obj);
        }



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0x7, 0xD5, 0x49, 0x81, 0x2F, 0x67, 0xD5, 0x5F, 0xA1, 0xA, 0x35, 0x13, 0x89, 0xBA, 0x96, 0x59 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("8149D507-672F-5FD5-A10A-351389BA9659")]
    internal interface IBlock : global::Microsoft.UI.Xaml.Documents.IBlock
    {
    }
    internal static class IBlockFactoryMethods
    {


        internal static unsafe global::Microsoft.UI.Xaml.Documents.Block CreateInstance(IObjectReference _obj, object baseInterface, out object innerInterface)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __baseInterface = default;
            IntPtr __innerInterface = default;
            IntPtr __retval = default;
            try
            {
                __baseInterface = MarshalInspectable<object>.CreateMarshaler2(baseInterface);
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, IntPtr*, IntPtr*, int>**)ThisPtr)[6](ThisPtr, MarshalInspectable<object>.GetAbi(__baseInterface), &__innerInterface, &__retval));
                global::System.GC.KeepAlive(_obj);
                innerInterface = MarshalInspectable<object>.FromAbi(__innerInterface);
                return global::ABI.Microsoft.UI.Xaml.Documents.Block.FromAbi(__retval);
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__baseInterface);
                MarshalInspectable<object>.DisposeAbi(__innerInterface);
                global::ABI.Microsoft.UI.Xaml.Documents.Block.DisposeAbi(__retval);
            }
        }


        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0x1C, 0x67, 0xBD, 0x21, 0xE2, 0x33, 0xEF, 0x56, 0xBE, 0x37, 0xA1, 0x28, 0xE8, 0x98, 0x45, 0x2C };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("21BD671C-33E2-56EF-BE37-A128E898452C")]
    internal interface IBlockFactory : global::Microsoft.UI.Xaml.Documents.IBlockFactory
    {
    }
    internal static class IBlockStaticsMethods
    {

        internal static unsafe global::Microsoft.UI.Xaml.DependencyProperty get_HorizontalTextAlignmentProperty(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[7](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Xaml.DependencyProperty.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.UI.Xaml.DependencyProperty.DisposeAbi(__retval);
            }
        }

        internal static unsafe global::Microsoft.UI.Xaml.DependencyProperty get_LineHeightProperty(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[8](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Xaml.DependencyProperty.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.UI.Xaml.DependencyProperty.DisposeAbi(__retval);
            }
        }

        internal static unsafe global::Microsoft.UI.Xaml.DependencyProperty get_LineStackingStrategyProperty(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[9](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Xaml.DependencyProperty.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.UI.Xaml.DependencyProperty.DisposeAbi(__retval);
            }
        }

        internal static unsafe global::Microsoft.UI.Xaml.DependencyProperty get_MarginProperty(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[10](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Xaml.DependencyProperty.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.UI.Xaml.DependencyProperty.DisposeAbi(__retval);
            }
        }

        internal static unsafe global::Microsoft.UI.Xaml.DependencyProperty get_TextAlignmentProperty(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[6](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Xaml.DependencyProperty.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.UI.Xaml.DependencyProperty.DisposeAbi(__retval);
            }
        }



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0xDF, 0xEE, 0xF, 0x83, 0xA6, 0x9A, 0xCD, 0x56, 0x98, 0x3E, 0x5, 0x55, 0x0, 0x17, 0x1B, 0x45 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("830FEEDF-9AA6-56CD-983E-055500171B45")]
    internal interface IBlockStatics : global::Microsoft.UI.Xaml.Documents.IBlockStatics
    {
    }
    internal static class IBoldMethods
    {



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0x5A, 0x5F, 0x1A, 0x24, 0x64, 0xC1, 0x7F, 0x59, 0xB0, 0xDB, 0xFA, 0xC7, 0x43, 0x12, 0x97, 0xF2 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("241A5F5A-C164-597F-B0DB-FAC7431297F2")]
    internal interface IBold : global::Microsoft.UI.Xaml.Documents.IBold
    {
    }
    internal static class IGlyphsMethods
    {

        internal static unsafe int get_ColorFontPaletteIndex(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            int __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, int*, int>**)ThisPtr)[24](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }
        internal static unsafe void set_ColorFontPaletteIndex(IObjectReference _obj, int value)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, int, int>**)ThisPtr)[25](ThisPtr, value));
            global::System.GC.KeepAlive(_obj);
        }

        internal static unsafe global::Microsoft.UI.Xaml.Media.Brush get_Fill(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[20](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Xaml.Media.Brush.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.UI.Xaml.Media.Brush.DisposeAbi(__retval);
            }
        }
        internal static unsafe void set_Fill(IObjectReference _obj, global::Microsoft.UI.Xaml.Media.Brush value)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __value = default;
            try
            {
                __value = global::ABI.Microsoft.UI.Xaml.Media.Brush.CreateMarshaler2(value);
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, int>**)ThisPtr)[21](ThisPtr, MarshalInspectable<object>.GetAbi(__value)));
                global::System.GC.KeepAlive(_obj);
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__value);
            }
        }

        internal static unsafe double get_FontRenderingEmSize(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            double __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, double*, int>**)ThisPtr)[14](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }
        internal static unsafe void set_FontRenderingEmSize(IObjectReference _obj, double value)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, double, int>**)ThisPtr)[15](ThisPtr, value));
            global::System.GC.KeepAlive(_obj);
        }

        internal static unsafe global::System.Uri get_FontUri(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[10](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.System.Uri.FromAbi(__retval);
            }
            finally
            {
                global::ABI.System.Uri.DisposeAbi(__retval);
            }
        }
        internal static unsafe void set_FontUri(IObjectReference _obj, global::System.Uri value)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __value = default;
            try
            {
                __value = global::ABI.System.Uri.CreateMarshaler2(value);
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, int>**)ThisPtr)[11](ThisPtr, MarshalInspectable<object>.GetAbi(__value)));
                global::System.GC.KeepAlive(_obj);
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__value);
            }
        }

        internal static unsafe string get_Indices(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[8](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return MarshalString.FromAbi(__retval);
            }
            finally
            {
                MarshalString.DisposeAbi(__retval);
            }
        }
        internal static unsafe void set_Indices(IObjectReference _obj, string value)
        {
            var ThisPtr = _obj.ThisPtr;

            MarshalString.Pinnable __value = new(value);
            fixed(void* ___value = __value)
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, int>**)ThisPtr)[9](ThisPtr, MarshalString.GetAbi(ref __value)));
                global::System.GC.KeepAlive(_obj);
            }
        }

        internal static unsafe bool get_IsColorFontEnabled(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            byte __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, byte*, int>**)ThisPtr)[22](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval != 0;
        }
        internal static unsafe void set_IsColorFontEnabled(IObjectReference _obj, bool value)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, byte, int>**)ThisPtr)[23](ThisPtr, (byte)(value ? 1 : 0)));
            global::System.GC.KeepAlive(_obj);
        }

        internal static unsafe double get_OriginX(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            double __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, double*, int>**)ThisPtr)[16](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }
        internal static unsafe void set_OriginX(IObjectReference _obj, double value)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, double, int>**)ThisPtr)[17](ThisPtr, value));
            global::System.GC.KeepAlive(_obj);
        }

        internal static unsafe double get_OriginY(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            double __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, double*, int>**)ThisPtr)[18](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }
        internal static unsafe void set_OriginY(IObjectReference _obj, double value)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, double, int>**)ThisPtr)[19](ThisPtr, value));
            global::System.GC.KeepAlive(_obj);
        }

        internal static unsafe global::Microsoft.UI.Xaml.Media.StyleSimulations get_StyleSimulations(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::Microsoft.UI.Xaml.Media.StyleSimulations __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::Microsoft.UI.Xaml.Media.StyleSimulations*, int>**)ThisPtr)[12](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }
        internal static unsafe void set_StyleSimulations(IObjectReference _obj, global::Microsoft.UI.Xaml.Media.StyleSimulations value)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::Microsoft.UI.Xaml.Media.StyleSimulations, int>**)ThisPtr)[13](ThisPtr, value));
            global::System.GC.KeepAlive(_obj);
        }

        internal static unsafe string get_UnicodeString(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[6](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return MarshalString.FromAbi(__retval);
            }
            finally
            {
                MarshalString.DisposeAbi(__retval);
            }
        }
        internal static unsafe void set_UnicodeString(IObjectReference _obj, string value)
        {
            var ThisPtr = _obj.ThisPtr;

            MarshalString.Pinnable __value = new(value);
            fixed(void* ___value = __value)
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, int>**)ThisPtr)[7](ThisPtr, MarshalString.GetAbi(ref __value)));
                global::System.GC.KeepAlive(_obj);
            }
        }



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0xFE, 0x8C, 0xBF, 0xF, 0xE7, 0x18, 0x45, 0x5E, 0x9F, 0xA3, 0xD2, 0xD0, 0x92, 0x79, 0x58, 0xF4 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("0FBF8CFE-18E7-5E45-9FA3-D2D0927958F4")]
    internal interface IGlyphs : global::Microsoft.UI.Xaml.Documents.IGlyphs
    {
    }
    internal static class IGlyphsStaticsMethods
    {

        internal static unsafe global::Microsoft.UI.Xaml.DependencyProperty get_ColorFontPaletteIndexProperty(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[15](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Xaml.DependencyProperty.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.UI.Xaml.DependencyProperty.DisposeAbi(__retval);
            }
        }

        internal static unsafe global::Microsoft.UI.Xaml.DependencyProperty get_FillProperty(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[13](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Xaml.DependencyProperty.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.UI.Xaml.DependencyProperty.DisposeAbi(__retval);
            }
        }

        internal static unsafe global::Microsoft.UI.Xaml.DependencyProperty get_FontRenderingEmSizeProperty(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[10](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Xaml.DependencyProperty.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.UI.Xaml.DependencyProperty.DisposeAbi(__retval);
            }
        }

        internal static unsafe global::Microsoft.UI.Xaml.DependencyProperty get_FontUriProperty(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[8](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Xaml.DependencyProperty.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.UI.Xaml.DependencyProperty.DisposeAbi(__retval);
            }
        }

        internal static unsafe global::Microsoft.UI.Xaml.DependencyProperty get_IndicesProperty(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[7](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Xaml.DependencyProperty.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.UI.Xaml.DependencyProperty.DisposeAbi(__retval);
            }
        }

        internal static unsafe global::Microsoft.UI.Xaml.DependencyProperty get_IsColorFontEnabledProperty(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[14](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Xaml.DependencyProperty.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.UI.Xaml.DependencyProperty.DisposeAbi(__retval);
            }
        }

        internal static unsafe global::Microsoft.UI.Xaml.DependencyProperty get_OriginXProperty(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[11](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Xaml.DependencyProperty.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.UI.Xaml.DependencyProperty.DisposeAbi(__retval);
            }
        }

        internal static unsafe global::Microsoft.UI.Xaml.DependencyProperty get_OriginYProperty(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[12](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Xaml.DependencyProperty.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.UI.Xaml.DependencyProperty.DisposeAbi(__retval);
            }
        }

        internal static unsafe global::Microsoft.UI.Xaml.DependencyProperty get_StyleSimulationsProperty(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[9](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Xaml.DependencyProperty.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.UI.Xaml.DependencyProperty.DisposeAbi(__retval);
            }
        }

        internal static unsafe global::Microsoft.UI.Xaml.DependencyProperty get_UnicodeStringProperty(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[6](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Xaml.DependencyProperty.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.UI.Xaml.DependencyProperty.DisposeAbi(__retval);
            }
        }



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0x1A, 0x24, 0x9E, 0x8D, 0xE, 0x3E, 0x0, 0x51, 0x8E, 0xDE, 0xE0, 0x8, 0x3, 0x4F, 0xF8, 0xAE };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("8D9E241A-3E0E-5100-8EDE-E008034FF8AE")]
    internal interface IGlyphsStatics : global::Microsoft.UI.Xaml.Documents.IGlyphsStatics
    {
    }
    internal static class IHyperlinkMethods
    {


        internal static unsafe bool Focus(IObjectReference _obj, global::Microsoft.UI.Xaml.FocusState value)
        {
            var ThisPtr = _obj.ThisPtr;

            byte __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::Microsoft.UI.Xaml.FocusState, byte*, int>**)ThisPtr)[39](ThisPtr, value, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval != 0;
        }
        internal static unsafe global::Microsoft.UI.Xaml.ElementSoundMode get_ElementSoundMode(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::Microsoft.UI.Xaml.ElementSoundMode __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::Microsoft.UI.Xaml.ElementSoundMode*, int>**)ThisPtr)[18](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }
        internal static unsafe void set_ElementSoundMode(IObjectReference _obj, global::Microsoft.UI.Xaml.ElementSoundMode value)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::Microsoft.UI.Xaml.ElementSoundMode, int>**)ThisPtr)[19](ThisPtr, value));
            global::System.GC.KeepAlive(_obj);
        }

        internal static unsafe global::Microsoft.UI.Xaml.FocusState get_FocusState(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::Microsoft.UI.Xaml.FocusState __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::Microsoft.UI.Xaml.FocusState*, int>**)ThisPtr)[20](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }

        internal static unsafe bool get_IsTabStop(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            byte __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, byte*, int>**)ThisPtr)[29](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval != 0;
        }
        internal static unsafe void set_IsTabStop(IObjectReference _obj, bool value)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, byte, int>**)ThisPtr)[30](ThisPtr, (byte)(value ? 1 : 0)));
            global::System.GC.KeepAlive(_obj);
        }

        internal static unsafe global::System.Uri get_NavigateUri(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[6](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.System.Uri.FromAbi(__retval);
            }
            finally
            {
                global::ABI.System.Uri.DisposeAbi(__retval);
            }
        }
        internal static unsafe void set_NavigateUri(IObjectReference _obj, global::System.Uri value)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __value = default;
            try
            {
                __value = global::ABI.System.Uri.CreateMarshaler2(value);
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, int>**)ThisPtr)[7](ThisPtr, MarshalInspectable<object>.GetAbi(__value)));
                global::System.GC.KeepAlive(_obj);
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__value);
            }
        }

        internal static unsafe int get_TabIndex(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            int __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, int*, int>**)ThisPtr)[31](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }
        internal static unsafe void set_TabIndex(IObjectReference _obj, int value)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, int, int>**)ThisPtr)[32](ThisPtr, value));
            global::System.GC.KeepAlive(_obj);
        }

        internal static unsafe global::Microsoft.UI.Xaml.Documents.UnderlineStyle get_UnderlineStyle(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::Microsoft.UI.Xaml.Documents.UnderlineStyle __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::Microsoft.UI.Xaml.Documents.UnderlineStyle*, int>**)ThisPtr)[8](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }
        internal static unsafe void set_UnderlineStyle(IObjectReference _obj, global::Microsoft.UI.Xaml.Documents.UnderlineStyle value)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::Microsoft.UI.Xaml.Documents.UnderlineStyle, int>**)ThisPtr)[9](ThisPtr, value));
            global::System.GC.KeepAlive(_obj);
        }

        internal static unsafe global::Microsoft.UI.Xaml.DependencyObject get_XYFocusDown(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[16](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Xaml.DependencyObject.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.UI.Xaml.DependencyObject.DisposeAbi(__retval);
            }
        }
        internal static unsafe void set_XYFocusDown(IObjectReference _obj, global::Microsoft.UI.Xaml.DependencyObject value)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __value = default;
            try
            {
                __value = global::ABI.Microsoft.UI.Xaml.DependencyObject.CreateMarshaler2(value);
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, int>**)ThisPtr)[17](ThisPtr, MarshalInspectable<object>.GetAbi(__value)));
                global::System.GC.KeepAlive(_obj);
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__value);
            }
        }

        internal static unsafe global::Microsoft.UI.Xaml.Input.XYFocusNavigationStrategy get_XYFocusDownNavigationStrategy(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::Microsoft.UI.Xaml.Input.XYFocusNavigationStrategy __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::Microsoft.UI.Xaml.Input.XYFocusNavigationStrategy*, int>**)ThisPtr)[23](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }
        internal static unsafe void set_XYFocusDownNavigationStrategy(IObjectReference _obj, global::Microsoft.UI.Xaml.Input.XYFocusNavigationStrategy value)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::Microsoft.UI.Xaml.Input.XYFocusNavigationStrategy, int>**)ThisPtr)[24](ThisPtr, value));
            global::System.GC.KeepAlive(_obj);
        }

        internal static unsafe global::Microsoft.UI.Xaml.DependencyObject get_XYFocusLeft(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[10](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Xaml.DependencyObject.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.UI.Xaml.DependencyObject.DisposeAbi(__retval);
            }
        }
        internal static unsafe void set_XYFocusLeft(IObjectReference _obj, global::Microsoft.UI.Xaml.DependencyObject value)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __value = default;
            try
            {
                __value = global::ABI.Microsoft.UI.Xaml.DependencyObject.CreateMarshaler2(value);
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, int>**)ThisPtr)[11](ThisPtr, MarshalInspectable<object>.GetAbi(__value)));
                global::System.GC.KeepAlive(_obj);
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__value);
            }
        }

        internal static unsafe global::Microsoft.UI.Xaml.Input.XYFocusNavigationStrategy get_XYFocusLeftNavigationStrategy(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::Microsoft.UI.Xaml.Input.XYFocusNavigationStrategy __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::Microsoft.UI.Xaml.Input.XYFocusNavigationStrategy*, int>**)ThisPtr)[25](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }
        internal static unsafe void set_XYFocusLeftNavigationStrategy(IObjectReference _obj, global::Microsoft.UI.Xaml.Input.XYFocusNavigationStrategy value)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::Microsoft.UI.Xaml.Input.XYFocusNavigationStrategy, int>**)ThisPtr)[26](ThisPtr, value));
            global::System.GC.KeepAlive(_obj);
        }

        internal static unsafe global::Microsoft.UI.Xaml.DependencyObject get_XYFocusRight(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[12](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Xaml.DependencyObject.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.UI.Xaml.DependencyObject.DisposeAbi(__retval);
            }
        }
        internal static unsafe void set_XYFocusRight(IObjectReference _obj, global::Microsoft.UI.Xaml.DependencyObject value)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __value = default;
            try
            {
                __value = global::ABI.Microsoft.UI.Xaml.DependencyObject.CreateMarshaler2(value);
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, int>**)ThisPtr)[13](ThisPtr, MarshalInspectable<object>.GetAbi(__value)));
                global::System.GC.KeepAlive(_obj);
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__value);
            }
        }

        internal static unsafe global::Microsoft.UI.Xaml.Input.XYFocusNavigationStrategy get_XYFocusRightNavigationStrategy(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::Microsoft.UI.Xaml.Input.XYFocusNavigationStrategy __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::Microsoft.UI.Xaml.Input.XYFocusNavigationStrategy*, int>**)ThisPtr)[27](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }
        internal static unsafe void set_XYFocusRightNavigationStrategy(IObjectReference _obj, global::Microsoft.UI.Xaml.Input.XYFocusNavigationStrategy value)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::Microsoft.UI.Xaml.Input.XYFocusNavigationStrategy, int>**)ThisPtr)[28](ThisPtr, value));
            global::System.GC.KeepAlive(_obj);
        }

        internal static unsafe global::Microsoft.UI.Xaml.DependencyObject get_XYFocusUp(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[14](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Xaml.DependencyObject.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.UI.Xaml.DependencyObject.DisposeAbi(__retval);
            }
        }
        internal static unsafe void set_XYFocusUp(IObjectReference _obj, global::Microsoft.UI.Xaml.DependencyObject value)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __value = default;
            try
            {
                __value = global::ABI.Microsoft.UI.Xaml.DependencyObject.CreateMarshaler2(value);
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, int>**)ThisPtr)[15](ThisPtr, MarshalInspectable<object>.GetAbi(__value)));
                global::System.GC.KeepAlive(_obj);
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__value);
            }
        }

        internal static unsafe global::Microsoft.UI.Xaml.Input.XYFocusNavigationStrategy get_XYFocusUpNavigationStrategy(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::Microsoft.UI.Xaml.Input.XYFocusNavigationStrategy __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::Microsoft.UI.Xaml.Input.XYFocusNavigationStrategy*, int>**)ThisPtr)[21](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }
        internal static unsafe void set_XYFocusUpNavigationStrategy(IObjectReference _obj, global::Microsoft.UI.Xaml.Input.XYFocusNavigationStrategy value)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::Microsoft.UI.Xaml.Input.XYFocusNavigationStrategy, int>**)ThisPtr)[22](ThisPtr, value));
            global::System.GC.KeepAlive(_obj);
        }


        private volatile static global::System.Runtime.CompilerServices.ConditionalWeakTable<object, global::ABI.WinRT.Interop.EventSource<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Documents.Hyperlink, global::Microsoft.UI.Xaml.Documents.HyperlinkClickEventArgs>>> _Click_;
        private static global::System.Runtime.CompilerServices.ConditionalWeakTable<object, global::ABI.WinRT.Interop.EventSource<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Documents.Hyperlink, global::Microsoft.UI.Xaml.Documents.HyperlinkClickEventArgs>>> MakeClickTable()
        {
            
            global::System.Threading.Interlocked.CompareExchange(ref _Click_, new(), null);
            return _Click_;
        }
        private static global::System.Runtime.CompilerServices.ConditionalWeakTable<object, global::ABI.WinRT.Interop.EventSource<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Documents.Hyperlink, global::Microsoft.UI.Xaml.Documents.HyperlinkClickEventArgs>>> _Click => _Click_ ?? MakeClickTable();



        internal static unsafe global::ABI.WinRT.Interop.EventSource<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Documents.Hyperlink, global::Microsoft.UI.Xaml.Documents.HyperlinkClickEventArgs>> Get_Click2(IObjectReference _obj, object _thisObj)
        {
            return _Click.GetValue(_thisObj, (key) =>
            {

                var ThisPtr = _obj.ThisPtr;

                return 
                new _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_UI_Xaml_Documents_Hyperlink__global__Microsoft_UI_Xaml_Documents_HyperlinkClickEventArgs_(_obj,
                (*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, global::WinRT.EventRegistrationToken*, int>**)ThisPtr)[33],
                (*(delegate* unmanaged[Stdcall]<IntPtr, global::WinRT.EventRegistrationToken, int>**)ThisPtr)[34],
                0);
            });
        }

        private volatile static global::System.Runtime.CompilerServices.ConditionalWeakTable<object, global::ABI.WinRT.Interop.EventSource<global::Microsoft.UI.Xaml.RoutedEventHandler>> _GotFocus_;
        private static global::System.Runtime.CompilerServices.ConditionalWeakTable<object, global::ABI.WinRT.Interop.EventSource<global::Microsoft.UI.Xaml.RoutedEventHandler>> MakeGotFocusTable()
        {
            
            global::System.Threading.Interlocked.CompareExchange(ref _GotFocus_, new(), null);
            return _GotFocus_;
        }
        private static global::System.Runtime.CompilerServices.ConditionalWeakTable<object, global::ABI.WinRT.Interop.EventSource<global::Microsoft.UI.Xaml.RoutedEventHandler>> _GotFocus => _GotFocus_ ?? MakeGotFocusTable();



        internal static unsafe global::ABI.WinRT.Interop.EventSource<global::Microsoft.UI.Xaml.RoutedEventHandler> Get_GotFocus2(IObjectReference _obj, object _thisObj)
        {
            return _GotFocus.GetValue(_thisObj, (key) =>
            {

                var ThisPtr = _obj.ThisPtr;

                return 
                new _EventSource_global__Microsoft_UI_Xaml_RoutedEventHandler(_obj,
                (*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, global::WinRT.EventRegistrationToken*, int>**)ThisPtr)[35],
                (*(delegate* unmanaged[Stdcall]<IntPtr, global::WinRT.EventRegistrationToken, int>**)ThisPtr)[36],
                1);
            });
        }

        private volatile static global::System.Runtime.CompilerServices.ConditionalWeakTable<object, global::ABI.WinRT.Interop.EventSource<global::Microsoft.UI.Xaml.RoutedEventHandler>> _LostFocus_;
        private static global::System.Runtime.CompilerServices.ConditionalWeakTable<object, global::ABI.WinRT.Interop.EventSource<global::Microsoft.UI.Xaml.RoutedEventHandler>> MakeLostFocusTable()
        {
            
            global::System.Threading.Interlocked.CompareExchange(ref _LostFocus_, new(), null);
            return _LostFocus_;
        }
        private static global::System.Runtime.CompilerServices.ConditionalWeakTable<object, global::ABI.WinRT.Interop.EventSource<global::Microsoft.UI.Xaml.RoutedEventHandler>> _LostFocus => _LostFocus_ ?? MakeLostFocusTable();



        internal static unsafe global::ABI.WinRT.Interop.EventSource<global::Microsoft.UI.Xaml.RoutedEventHandler> Get_LostFocus2(IObjectReference _obj, object _thisObj)
        {
            return _LostFocus.GetValue(_thisObj, (key) =>
            {

                var ThisPtr = _obj.ThisPtr;

                return 
                new _EventSource_global__Microsoft_UI_Xaml_RoutedEventHandler(_obj,
                (*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, global::WinRT.EventRegistrationToken*, int>**)ThisPtr)[37],
                (*(delegate* unmanaged[Stdcall]<IntPtr, global::WinRT.EventRegistrationToken, int>**)ThisPtr)[38],
                2);
            });
        }


        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0x16, 0xBD, 0x9, 0xAC, 0xFA, 0xCD, 0xC2, 0x54, 0x8D, 0x3, 0xA4, 0x74, 0x18, 0x15, 0x45, 0xB1 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("AC09BD16-CDFA-54C2-8D03-A474181545B1")]
    internal interface IHyperlink : global::Microsoft.UI.Xaml.Documents.IHyperlink
    {
    }
    internal static class IHyperlinkClickEventArgsMethods
    {



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0x52, 0x95, 0xF8, 0xF8, 0x3D, 0x87, 0xF5, 0x5E, 0x82, 0xBF, 0xC7, 0x9A, 0x95, 0x9, 0xB0, 0x7C };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("F8F89552-873D-5EF5-82BF-C79A9509B07C")]
    internal interface IHyperlinkClickEventArgs : global::Microsoft.UI.Xaml.Documents.IHyperlinkClickEventArgs
    {
    }
    internal static class IHyperlinkStaticsMethods
    {

        internal static unsafe global::Microsoft.UI.Xaml.DependencyProperty get_ElementSoundModeProperty(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[12](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Xaml.DependencyProperty.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.UI.Xaml.DependencyProperty.DisposeAbi(__retval);
            }
        }

        internal static unsafe global::Microsoft.UI.Xaml.DependencyProperty get_FocusStateProperty(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[13](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Xaml.DependencyProperty.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.UI.Xaml.DependencyProperty.DisposeAbi(__retval);
            }
        }

        internal static unsafe global::Microsoft.UI.Xaml.DependencyProperty get_IsTabStopProperty(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[18](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Xaml.DependencyProperty.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.UI.Xaml.DependencyProperty.DisposeAbi(__retval);
            }
        }

        internal static unsafe global::Microsoft.UI.Xaml.DependencyProperty get_NavigateUriProperty(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[6](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Xaml.DependencyProperty.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.UI.Xaml.DependencyProperty.DisposeAbi(__retval);
            }
        }

        internal static unsafe global::Microsoft.UI.Xaml.DependencyProperty get_TabIndexProperty(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[19](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Xaml.DependencyProperty.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.UI.Xaml.DependencyProperty.DisposeAbi(__retval);
            }
        }

        internal static unsafe global::Microsoft.UI.Xaml.DependencyProperty get_UnderlineStyleProperty(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[7](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Xaml.DependencyProperty.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.UI.Xaml.DependencyProperty.DisposeAbi(__retval);
            }
        }

        internal static unsafe global::Microsoft.UI.Xaml.DependencyProperty get_XYFocusDownNavigationStrategyProperty(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[15](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Xaml.DependencyProperty.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.UI.Xaml.DependencyProperty.DisposeAbi(__retval);
            }
        }

        internal static unsafe global::Microsoft.UI.Xaml.DependencyProperty get_XYFocusDownProperty(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[11](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Xaml.DependencyProperty.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.UI.Xaml.DependencyProperty.DisposeAbi(__retval);
            }
        }

        internal static unsafe global::Microsoft.UI.Xaml.DependencyProperty get_XYFocusLeftNavigationStrategyProperty(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[16](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Xaml.DependencyProperty.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.UI.Xaml.DependencyProperty.DisposeAbi(__retval);
            }
        }

        internal static unsafe global::Microsoft.UI.Xaml.DependencyProperty get_XYFocusLeftProperty(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[8](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Xaml.DependencyProperty.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.UI.Xaml.DependencyProperty.DisposeAbi(__retval);
            }
        }

        internal static unsafe global::Microsoft.UI.Xaml.DependencyProperty get_XYFocusRightNavigationStrategyProperty(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[17](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Xaml.DependencyProperty.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.UI.Xaml.DependencyProperty.DisposeAbi(__retval);
            }
        }

        internal static unsafe global::Microsoft.UI.Xaml.DependencyProperty get_XYFocusRightProperty(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[9](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Xaml.DependencyProperty.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.UI.Xaml.DependencyProperty.DisposeAbi(__retval);
            }
        }

        internal static unsafe global::Microsoft.UI.Xaml.DependencyProperty get_XYFocusUpNavigationStrategyProperty(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[14](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Xaml.DependencyProperty.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.UI.Xaml.DependencyProperty.DisposeAbi(__retval);
            }
        }

        internal static unsafe global::Microsoft.UI.Xaml.DependencyProperty get_XYFocusUpProperty(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[10](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Xaml.DependencyProperty.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.UI.Xaml.DependencyProperty.DisposeAbi(__retval);
            }
        }



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0xF4, 0x98, 0x35, 0xE1, 0xC7, 0x7B, 0xB9, 0x5A, 0x88, 0x5B, 0x70, 0xF3, 0x2F, 0x8C, 0x95, 0x31 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("E13598F4-7BC7-5AB9-885B-70F32F8C9531")]
    internal interface IHyperlinkStatics : global::Microsoft.UI.Xaml.Documents.IHyperlinkStatics
    {
    }
    internal static class IInlineMethods
    {



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0x7A, 0x42, 0x3D, 0x81, 0x80, 0x89, 0x79, 0x5A, 0xA8, 0xFA, 0xF2, 0x79, 0x19, 0xCF, 0xB2, 0x4F };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("813D427A-8980-5A79-A8FA-F27919CFB24F")]
    internal interface IInline : global::Microsoft.UI.Xaml.Documents.IInline
    {
    }
    internal static class IInlineFactoryMethods
    {


        internal static unsafe global::Microsoft.UI.Xaml.Documents.Inline CreateInstance(IObjectReference _obj, object baseInterface, out object innerInterface)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __baseInterface = default;
            IntPtr __innerInterface = default;
            IntPtr __retval = default;
            try
            {
                __baseInterface = MarshalInspectable<object>.CreateMarshaler2(baseInterface);
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, IntPtr*, IntPtr*, int>**)ThisPtr)[6](ThisPtr, MarshalInspectable<object>.GetAbi(__baseInterface), &__innerInterface, &__retval));
                global::System.GC.KeepAlive(_obj);
                innerInterface = MarshalInspectable<object>.FromAbi(__innerInterface);
                return global::ABI.Microsoft.UI.Xaml.Documents.Inline.FromAbi(__retval);
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__baseInterface);
                MarshalInspectable<object>.DisposeAbi(__innerInterface);
                global::ABI.Microsoft.UI.Xaml.Documents.Inline.DisposeAbi(__retval);
            }
        }


        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0x36, 0x3A, 0x25, 0xFD, 0x2B, 0xFA, 0x30, 0x5B, 0x89, 0xA8, 0x9F, 0x57, 0x78, 0x71, 0xEC, 0x7 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("FD253A36-FA2B-5B30-89A8-9F577871EC07")]
    internal interface IInlineFactory : global::Microsoft.UI.Xaml.Documents.IInlineFactory
    {
    }
    internal static class IInlineUIContainerMethods
    {

        internal static unsafe global::Microsoft.UI.Xaml.UIElement get_Child(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[6](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Xaml.UIElement.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.UI.Xaml.UIElement.DisposeAbi(__retval);
            }
        }
        internal static unsafe void set_Child(IObjectReference _obj, global::Microsoft.UI.Xaml.UIElement value)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __value = default;
            try
            {
                __value = global::ABI.Microsoft.UI.Xaml.UIElement.CreateMarshaler2(value);
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, int>**)ThisPtr)[7](ThisPtr, MarshalInspectable<object>.GetAbi(__value)));
                global::System.GC.KeepAlive(_obj);
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__value);
            }
        }



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0xF6, 0xBE, 0x29, 0xD5, 0x5A, 0xC0, 0xAD, 0x5B, 0x85, 0xE8, 0x64, 0x1, 0x27, 0xCF, 0x86, 0xF5 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("D529BEF6-C05A-5BAD-85E8-640127CF86F5")]
    internal interface IInlineUIContainer : global::Microsoft.UI.Xaml.Documents.IInlineUIContainer
    {
    }
    internal static class IItalicMethods
    {



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0xBD, 0xBE, 0x3C, 0xCA, 0x8D, 0x7A, 0x7A, 0x5D, 0x8F, 0xDF, 0x53, 0x8E, 0x8A, 0x68, 0xF, 0x6C };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("CA3CBEBD-7A8D-5D7A-8FDF-538E8A680F6C")]
    internal interface IItalic : global::Microsoft.UI.Xaml.Documents.IItalic
    {
    }
    internal static class ILineBreakMethods
    {



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0x99, 0x75, 0x30, 0x9, 0xC2, 0x7C, 0x54, 0x5F, 0xB1, 0x6, 0x72, 0x86, 0x20, 0xC1, 0x6F, 0x76 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("09307599-7CC2-5F54-B106-728620C16F76")]
    internal interface ILineBreak : global::Microsoft.UI.Xaml.Documents.ILineBreak
    {
    }
    internal static class IParagraphMethods
    {

        internal static unsafe global::Microsoft.UI.Xaml.Documents.InlineCollection get_Inlines(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[6](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Xaml.Documents.InlineCollection.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.UI.Xaml.Documents.InlineCollection.DisposeAbi(__retval);
            }
        }

        internal static unsafe double get_TextIndent(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            double __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, double*, int>**)ThisPtr)[7](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }
        internal static unsafe void set_TextIndent(IObjectReference _obj, double value)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, double, int>**)ThisPtr)[8](ThisPtr, value));
            global::System.GC.KeepAlive(_obj);
        }



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0x77, 0x4C, 0xD6, 0x9E, 0x9D, 0x32, 0x2F, 0x50, 0xA2, 0x57, 0xF5, 0x83, 0x98, 0xED, 0xAB, 0x51 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("9ED64C77-329D-502F-A257-F58398EDAB51")]
    internal interface IParagraph : global::Microsoft.UI.Xaml.Documents.IParagraph
    {
    }
    internal static class IParagraphStaticsMethods
    {

        internal static unsafe global::Microsoft.UI.Xaml.DependencyProperty get_TextIndentProperty(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[6](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Xaml.DependencyProperty.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.UI.Xaml.DependencyProperty.DisposeAbi(__retval);
            }
        }



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0xB1, 0x9A, 0xB8, 0x4E, 0xC8, 0x66, 0xC0, 0x5F, 0xAA, 0x5F, 0x48, 0xC8, 0x9, 0x2C, 0xEB, 0x5F };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("4EB89AB1-66C8-5FC0-AA5F-48C8092CEB5F")]
    internal interface IParagraphStatics : global::Microsoft.UI.Xaml.Documents.IParagraphStatics
    {
    }
    internal static class IRunMethods
    {

        internal static unsafe global::Microsoft.UI.Xaml.FlowDirection get_FlowDirection(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::Microsoft.UI.Xaml.FlowDirection __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::Microsoft.UI.Xaml.FlowDirection*, int>**)ThisPtr)[8](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }
        internal static unsafe void set_FlowDirection(IObjectReference _obj, global::Microsoft.UI.Xaml.FlowDirection value)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::Microsoft.UI.Xaml.FlowDirection, int>**)ThisPtr)[9](ThisPtr, value));
            global::System.GC.KeepAlive(_obj);
        }

        internal static unsafe string get_Text(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[6](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return MarshalString.FromAbi(__retval);
            }
            finally
            {
                MarshalString.DisposeAbi(__retval);
            }
        }
        internal static unsafe void set_Text(IObjectReference _obj, string value)
        {
            var ThisPtr = _obj.ThisPtr;

            MarshalString.Pinnable __value = new(value);
            fixed(void* ___value = __value)
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, int>**)ThisPtr)[7](ThisPtr, MarshalString.GetAbi(ref __value)));
                global::System.GC.KeepAlive(_obj);
            }
        }



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0x39, 0x52, 0x90, 0x1F, 0xCB, 0x37, 0xB, 0x59, 0x91, 0x32, 0x3F, 0xFB, 0x77, 0x41, 0x90, 0x6E };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("1F905239-37CB-590B-9132-3FFB7741906E")]
    internal interface IRun : global::Microsoft.UI.Xaml.Documents.IRun
    {
    }
    internal static class IRunStaticsMethods
    {

        internal static unsafe global::Microsoft.UI.Xaml.DependencyProperty get_FlowDirectionProperty(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[6](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Xaml.DependencyProperty.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.UI.Xaml.DependencyProperty.DisposeAbi(__retval);
            }
        }



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0x5B, 0x3C, 0x1B, 0x5, 0x0, 0x76, 0xA5, 0x51, 0x80, 0xC5, 0x93, 0xEB, 0x50, 0xFD, 0x68, 0x4F };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("051B3C5B-7600-51A5-80C5-93EB50FD684F")]
    internal interface IRunStatics : global::Microsoft.UI.Xaml.Documents.IRunStatics
    {
    }
    internal static class ISpanMethods
    {

        internal static unsafe global::Microsoft.UI.Xaml.Documents.InlineCollection get_Inlines(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[6](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Xaml.Documents.InlineCollection.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.UI.Xaml.Documents.InlineCollection.DisposeAbi(__retval);
            }
        }
        internal static unsafe void set_Inlines(IObjectReference _obj, global::Microsoft.UI.Xaml.Documents.InlineCollection value)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __value = default;
            try
            {
                __value = global::ABI.Microsoft.UI.Xaml.Documents.InlineCollection.CreateMarshaler2(value);
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, int>**)ThisPtr)[7](ThisPtr, MarshalInspectable<object>.GetAbi(__value)));
                global::System.GC.KeepAlive(_obj);
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__value);
            }
        }



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0x4D, 0x3D, 0xB9, 0x91, 0x28, 0x4E, 0xB9, 0x57, 0xBF, 0xFB, 0x35, 0x66, 0xC2, 0xA3, 0xC2, 0xA1 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("91B93D4D-4E28-57B9-BFFB-3566C2A3C2A1")]
    internal interface ISpan : global::Microsoft.UI.Xaml.Documents.ISpan
    {
    }
    internal static class ISpanFactoryMethods
    {


        internal static unsafe global::Microsoft.UI.Xaml.Documents.Span CreateInstance(IObjectReference _obj, object baseInterface, out object innerInterface)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __baseInterface = default;
            IntPtr __innerInterface = default;
            IntPtr __retval = default;
            try
            {
                __baseInterface = MarshalInspectable<object>.CreateMarshaler2(baseInterface);
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, IntPtr*, IntPtr*, int>**)ThisPtr)[6](ThisPtr, MarshalInspectable<object>.GetAbi(__baseInterface), &__innerInterface, &__retval));
                global::System.GC.KeepAlive(_obj);
                innerInterface = MarshalInspectable<object>.FromAbi(__innerInterface);
                return global::ABI.Microsoft.UI.Xaml.Documents.Span.FromAbi(__retval);
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__baseInterface);
                MarshalInspectable<object>.DisposeAbi(__innerInterface);
                global::ABI.Microsoft.UI.Xaml.Documents.Span.DisposeAbi(__retval);
            }
        }


        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0x16, 0x7C, 0xE8, 0xA6, 0x75, 0xC1, 0xC8, 0x55, 0xBB, 0xD3, 0xCE, 0x40, 0xF9, 0xD0, 0xA6, 0x80 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("A6E87C16-C175-55C8-BBD3-CE40F9D0A680")]
    internal interface ISpanFactory : global::Microsoft.UI.Xaml.Documents.ISpanFactory
    {
    }
    internal static class ITextElementMethods
    {


        internal static unsafe object FindName(IObjectReference _obj, string name)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                MarshalString.Pinnable __name = new(name);
                fixed(void* ___name = __name)
                {
                    global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, IntPtr*, int>**)ThisPtr)[55](ThisPtr, MarshalString.GetAbi(ref __name), &__retval));
                    global::System.GC.KeepAlive(_obj);
                    return MarshalInspectable<object>.FromAbi(__retval);
                }
            }
            finally
            {
                MarshalInspectable<object>.DisposeAbi(__retval);
            }
        }
        internal static unsafe string get_AccessKey(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[33](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return MarshalString.FromAbi(__retval);
            }
            finally
            {
                MarshalString.DisposeAbi(__retval);
            }
        }
        internal static unsafe void set_AccessKey(IObjectReference _obj, string value)
        {
            var ThisPtr = _obj.ThisPtr;

            MarshalString.Pinnable __value = new(value);
            fixed(void* ___value = __value)
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, int>**)ThisPtr)[34](ThisPtr, MarshalString.GetAbi(ref __value)));
                global::System.GC.KeepAlive(_obj);
            }
        }

        internal static unsafe global::Microsoft.UI.Xaml.DependencyObject get_AccessKeyScopeOwner(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[39](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Xaml.DependencyObject.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.UI.Xaml.DependencyObject.DisposeAbi(__retval);
            }
        }
        internal static unsafe void set_AccessKeyScopeOwner(IObjectReference _obj, global::Microsoft.UI.Xaml.DependencyObject value)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __value = default;
            try
            {
                __value = global::ABI.Microsoft.UI.Xaml.DependencyObject.CreateMarshaler2(value);
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, int>**)ThisPtr)[40](ThisPtr, MarshalInspectable<object>.GetAbi(__value)));
                global::System.GC.KeepAlive(_obj);
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__value);
            }
        }

        internal static unsafe bool get_AllowFocusOnInteraction(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            byte __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, byte*, int>**)ThisPtr)[31](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval != 0;
        }
        internal static unsafe void set_AllowFocusOnInteraction(IObjectReference _obj, bool value)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, byte, int>**)ThisPtr)[32](ThisPtr, (byte)(value ? 1 : 0)));
            global::System.GC.KeepAlive(_obj);
        }

        internal static unsafe int get_CharacterSpacing(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            int __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, int*, int>**)ThisPtr)[17](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }
        internal static unsafe void set_CharacterSpacing(IObjectReference _obj, int value)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, int, int>**)ThisPtr)[18](ThisPtr, value));
            global::System.GC.KeepAlive(_obj);
        }

        internal static unsafe global::Microsoft.UI.Xaml.Documents.TextPointer get_ContentEnd(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[28](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Xaml.Documents.TextPointer.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.UI.Xaml.Documents.TextPointer.DisposeAbi(__retval);
            }
        }

        internal static unsafe global::Microsoft.UI.Xaml.Documents.TextPointer get_ContentStart(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[27](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Xaml.Documents.TextPointer.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.UI.Xaml.Documents.TextPointer.DisposeAbi(__retval);
            }
        }

        internal static unsafe global::Microsoft.UI.Xaml.Documents.TextPointer get_ElementEnd(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[30](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Xaml.Documents.TextPointer.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.UI.Xaml.Documents.TextPointer.DisposeAbi(__retval);
            }
        }

        internal static unsafe global::Microsoft.UI.Xaml.Documents.TextPointer get_ElementStart(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[29](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Xaml.Documents.TextPointer.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.UI.Xaml.Documents.TextPointer.DisposeAbi(__retval);
            }
        }

        internal static unsafe bool get_ExitDisplayModeOnAccessKeyInvoked(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            byte __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, byte*, int>**)ThisPtr)[35](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval != 0;
        }
        internal static unsafe void set_ExitDisplayModeOnAccessKeyInvoked(IObjectReference _obj, bool value)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, byte, int>**)ThisPtr)[36](ThisPtr, (byte)(value ? 1 : 0)));
            global::System.GC.KeepAlive(_obj);
        }

        internal static unsafe global::Microsoft.UI.Xaml.Media.FontFamily get_FontFamily(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[9](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Xaml.Media.FontFamily.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.UI.Xaml.Media.FontFamily.DisposeAbi(__retval);
            }
        }
        internal static unsafe void set_FontFamily(IObjectReference _obj, global::Microsoft.UI.Xaml.Media.FontFamily value)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __value = default;
            try
            {
                __value = global::ABI.Microsoft.UI.Xaml.Media.FontFamily.CreateMarshaler2(value);
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, int>**)ThisPtr)[10](ThisPtr, MarshalInspectable<object>.GetAbi(__value)));
                global::System.GC.KeepAlive(_obj);
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__value);
            }
        }

        internal static unsafe double get_FontSize(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            double __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, double*, int>**)ThisPtr)[7](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }
        internal static unsafe void set_FontSize(IObjectReference _obj, double value)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, double, int>**)ThisPtr)[8](ThisPtr, value));
            global::System.GC.KeepAlive(_obj);
        }

        internal static unsafe global::Windows.UI.Text.FontStretch get_FontStretch(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::Windows.UI.Text.FontStretch __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::Windows.UI.Text.FontStretch*, int>**)ThisPtr)[15](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }
        internal static unsafe void set_FontStretch(IObjectReference _obj, global::Windows.UI.Text.FontStretch value)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::Windows.UI.Text.FontStretch, int>**)ThisPtr)[16](ThisPtr, value));
            global::System.GC.KeepAlive(_obj);
        }

        internal static unsafe global::Windows.UI.Text.FontStyle get_FontStyle(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::Windows.UI.Text.FontStyle __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::Windows.UI.Text.FontStyle*, int>**)ThisPtr)[13](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }
        internal static unsafe void set_FontStyle(IObjectReference _obj, global::Windows.UI.Text.FontStyle value)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::Windows.UI.Text.FontStyle, int>**)ThisPtr)[14](ThisPtr, value));
            global::System.GC.KeepAlive(_obj);
        }

        internal static unsafe global::Windows.UI.Text.FontWeight get_FontWeight(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::Windows.UI.Text.FontWeight __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::Windows.UI.Text.FontWeight*, int>**)ThisPtr)[11](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }
        internal static unsafe void set_FontWeight(IObjectReference _obj, global::Windows.UI.Text.FontWeight value)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::Windows.UI.Text.FontWeight, int>**)ThisPtr)[12](ThisPtr, value));
            global::System.GC.KeepAlive(_obj);
        }

        internal static unsafe global::Microsoft.UI.Xaml.Media.Brush get_Foreground(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[19](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Xaml.Media.Brush.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.UI.Xaml.Media.Brush.DisposeAbi(__retval);
            }
        }
        internal static unsafe void set_Foreground(IObjectReference _obj, global::Microsoft.UI.Xaml.Media.Brush value)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __value = default;
            try
            {
                __value = global::ABI.Microsoft.UI.Xaml.Media.Brush.CreateMarshaler2(value);
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, int>**)ThisPtr)[20](ThisPtr, MarshalInspectable<object>.GetAbi(__value)));
                global::System.GC.KeepAlive(_obj);
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__value);
            }
        }

        internal static unsafe bool get_IsAccessKeyScope(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            byte __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, byte*, int>**)ThisPtr)[37](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval != 0;
        }
        internal static unsafe void set_IsAccessKeyScope(IObjectReference _obj, bool value)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, byte, int>**)ThisPtr)[38](ThisPtr, (byte)(value ? 1 : 0)));
            global::System.GC.KeepAlive(_obj);
        }

        internal static unsafe bool get_IsTextScaleFactorEnabled(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            byte __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, byte*, int>**)ThisPtr)[23](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval != 0;
        }
        internal static unsafe void set_IsTextScaleFactorEnabled(IObjectReference _obj, bool value)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, byte, int>**)ThisPtr)[24](ThisPtr, (byte)(value ? 1 : 0)));
            global::System.GC.KeepAlive(_obj);
        }

        internal static unsafe double get_KeyTipHorizontalOffset(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            double __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, double*, int>**)ThisPtr)[43](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }
        internal static unsafe void set_KeyTipHorizontalOffset(IObjectReference _obj, double value)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, double, int>**)ThisPtr)[44](ThisPtr, value));
            global::System.GC.KeepAlive(_obj);
        }

        internal static unsafe global::Microsoft.UI.Xaml.Input.KeyTipPlacementMode get_KeyTipPlacementMode(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::Microsoft.UI.Xaml.Input.KeyTipPlacementMode __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::Microsoft.UI.Xaml.Input.KeyTipPlacementMode*, int>**)ThisPtr)[41](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }
        internal static unsafe void set_KeyTipPlacementMode(IObjectReference _obj, global::Microsoft.UI.Xaml.Input.KeyTipPlacementMode value)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::Microsoft.UI.Xaml.Input.KeyTipPlacementMode, int>**)ThisPtr)[42](ThisPtr, value));
            global::System.GC.KeepAlive(_obj);
        }

        internal static unsafe double get_KeyTipVerticalOffset(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            double __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, double*, int>**)ThisPtr)[45](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }
        internal static unsafe void set_KeyTipVerticalOffset(IObjectReference _obj, double value)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, double, int>**)ThisPtr)[46](ThisPtr, value));
            global::System.GC.KeepAlive(_obj);
        }

        internal static unsafe string get_Language(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[21](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return MarshalString.FromAbi(__retval);
            }
            finally
            {
                MarshalString.DisposeAbi(__retval);
            }
        }
        internal static unsafe void set_Language(IObjectReference _obj, string value)
        {
            var ThisPtr = _obj.ThisPtr;

            MarshalString.Pinnable __value = new(value);
            fixed(void* ___value = __value)
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, int>**)ThisPtr)[22](ThisPtr, MarshalString.GetAbi(ref __value)));
                global::System.GC.KeepAlive(_obj);
            }
        }

        internal static unsafe string get_Name(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[6](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return MarshalString.FromAbi(__retval);
            }
            finally
            {
                MarshalString.DisposeAbi(__retval);
            }
        }

        internal static unsafe global::Windows.UI.Text.TextDecorations get_TextDecorations(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::Windows.UI.Text.TextDecorations __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::Windows.UI.Text.TextDecorations*, int>**)ThisPtr)[25](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }
        internal static unsafe void set_TextDecorations(IObjectReference _obj, global::Windows.UI.Text.TextDecorations value)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::Windows.UI.Text.TextDecorations, int>**)ThisPtr)[26](ThisPtr, value));
            global::System.GC.KeepAlive(_obj);
        }

        internal static unsafe global::Microsoft.UI.Xaml.XamlRoot get_XamlRoot(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[47](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Xaml.XamlRoot.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.UI.Xaml.XamlRoot.DisposeAbi(__retval);
            }
        }
        internal static unsafe void set_XamlRoot(IObjectReference _obj, global::Microsoft.UI.Xaml.XamlRoot value)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __value = default;
            try
            {
                __value = global::ABI.Microsoft.UI.Xaml.XamlRoot.CreateMarshaler2(value);
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, int>**)ThisPtr)[48](ThisPtr, MarshalInspectable<object>.GetAbi(__value)));
                global::System.GC.KeepAlive(_obj);
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__value);
            }
        }


        private volatile static global::System.Runtime.CompilerServices.ConditionalWeakTable<object, global::ABI.WinRT.Interop.EventSource<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Documents.TextElement, global::Microsoft.UI.Xaml.Input.AccessKeyDisplayDismissedEventArgs>>> _AccessKeyDisplayDismissed_;
        private static global::System.Runtime.CompilerServices.ConditionalWeakTable<object, global::ABI.WinRT.Interop.EventSource<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Documents.TextElement, global::Microsoft.UI.Xaml.Input.AccessKeyDisplayDismissedEventArgs>>> MakeAccessKeyDisplayDismissedTable()
        {
            
            global::System.Threading.Interlocked.CompareExchange(ref _AccessKeyDisplayDismissed_, new(), null);
            return _AccessKeyDisplayDismissed_;
        }
        private static global::System.Runtime.CompilerServices.ConditionalWeakTable<object, global::ABI.WinRT.Interop.EventSource<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Documents.TextElement, global::Microsoft.UI.Xaml.Input.AccessKeyDisplayDismissedEventArgs>>> _AccessKeyDisplayDismissed => _AccessKeyDisplayDismissed_ ?? MakeAccessKeyDisplayDismissedTable();



        internal static unsafe global::ABI.WinRT.Interop.EventSource<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Documents.TextElement, global::Microsoft.UI.Xaml.Input.AccessKeyDisplayDismissedEventArgs>> Get_AccessKeyDisplayDismissed2(IObjectReference _obj, object _thisObj)
        {
            return _AccessKeyDisplayDismissed.GetValue(_thisObj, (key) =>
            {

                var ThisPtr = _obj.ThisPtr;

                return 
                new _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_UI_Xaml_Documents_TextElement__global__Microsoft_UI_Xaml_Input_AccessKeyDisplayDismissedEventArgs_(_obj,
                (*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, global::WinRT.EventRegistrationToken*, int>**)ThisPtr)[51],
                (*(delegate* unmanaged[Stdcall]<IntPtr, global::WinRT.EventRegistrationToken, int>**)ThisPtr)[52],
                0);
            });
        }

        private volatile static global::System.Runtime.CompilerServices.ConditionalWeakTable<object, global::ABI.WinRT.Interop.EventSource<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Documents.TextElement, global::Microsoft.UI.Xaml.Input.AccessKeyDisplayRequestedEventArgs>>> _AccessKeyDisplayRequested_;
        private static global::System.Runtime.CompilerServices.ConditionalWeakTable<object, global::ABI.WinRT.Interop.EventSource<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Documents.TextElement, global::Microsoft.UI.Xaml.Input.AccessKeyDisplayRequestedEventArgs>>> MakeAccessKeyDisplayRequestedTable()
        {
            
            global::System.Threading.Interlocked.CompareExchange(ref _AccessKeyDisplayRequested_, new(), null);
            return _AccessKeyDisplayRequested_;
        }
        private static global::System.Runtime.CompilerServices.ConditionalWeakTable<object, global::ABI.WinRT.Interop.EventSource<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Documents.TextElement, global::Microsoft.UI.Xaml.Input.AccessKeyDisplayRequestedEventArgs>>> _AccessKeyDisplayRequested => _AccessKeyDisplayRequested_ ?? MakeAccessKeyDisplayRequestedTable();



        internal static unsafe global::ABI.WinRT.Interop.EventSource<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Documents.TextElement, global::Microsoft.UI.Xaml.Input.AccessKeyDisplayRequestedEventArgs>> Get_AccessKeyDisplayRequested2(IObjectReference _obj, object _thisObj)
        {
            return _AccessKeyDisplayRequested.GetValue(_thisObj, (key) =>
            {

                var ThisPtr = _obj.ThisPtr;

                return 
                new _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_UI_Xaml_Documents_TextElement__global__Microsoft_UI_Xaml_Input_AccessKeyDisplayRequestedEventArgs_(_obj,
                (*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, global::WinRT.EventRegistrationToken*, int>**)ThisPtr)[49],
                (*(delegate* unmanaged[Stdcall]<IntPtr, global::WinRT.EventRegistrationToken, int>**)ThisPtr)[50],
                1);
            });
        }

        private volatile static global::System.Runtime.CompilerServices.ConditionalWeakTable<object, global::ABI.WinRT.Interop.EventSource<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Documents.TextElement, global::Microsoft.UI.Xaml.Input.AccessKeyInvokedEventArgs>>> _AccessKeyInvoked_;
        private static global::System.Runtime.CompilerServices.ConditionalWeakTable<object, global::ABI.WinRT.Interop.EventSource<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Documents.TextElement, global::Microsoft.UI.Xaml.Input.AccessKeyInvokedEventArgs>>> MakeAccessKeyInvokedTable()
        {
            
            global::System.Threading.Interlocked.CompareExchange(ref _AccessKeyInvoked_, new(), null);
            return _AccessKeyInvoked_;
        }
        private static global::System.Runtime.CompilerServices.ConditionalWeakTable<object, global::ABI.WinRT.Interop.EventSource<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Documents.TextElement, global::Microsoft.UI.Xaml.Input.AccessKeyInvokedEventArgs>>> _AccessKeyInvoked => _AccessKeyInvoked_ ?? MakeAccessKeyInvokedTable();



        internal static unsafe global::ABI.WinRT.Interop.EventSource<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Documents.TextElement, global::Microsoft.UI.Xaml.Input.AccessKeyInvokedEventArgs>> Get_AccessKeyInvoked2(IObjectReference _obj, object _thisObj)
        {
            return _AccessKeyInvoked.GetValue(_thisObj, (key) =>
            {

                var ThisPtr = _obj.ThisPtr;

                return 
                new _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_UI_Xaml_Documents_TextElement__global__Microsoft_UI_Xaml_Input_AccessKeyInvokedEventArgs_(_obj,
                (*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, global::WinRT.EventRegistrationToken*, int>**)ThisPtr)[53],
                (*(delegate* unmanaged[Stdcall]<IntPtr, global::WinRT.EventRegistrationToken, int>**)ThisPtr)[54],
                2);
            });
        }


        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0x22, 0xBA, 0x22, 0xA1, 0x3F, 0x83, 0x20, 0x52, 0xA4, 0x7E, 0x6C, 0xD5, 0x7, 0x53, 0x1A, 0xBE };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("A122BA22-833F-5220-A47E-6CD507531ABE")]
    internal interface ITextElement : global::Microsoft.UI.Xaml.Documents.ITextElement
    {
    }
    internal static class ITextElementFactoryMethods
    {



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0x95, 0xFB, 0x51, 0xDF, 0xE6, 0xA5, 0x16, 0x5B, 0x8E, 0x88, 0x9F, 0x7C, 0xBF, 0xA2, 0x34, 0xB1 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("DF51FB95-A5E6-5B16-8E88-9F7CBFA234B1")]
    internal interface ITextElementFactory : global::Microsoft.UI.Xaml.Documents.ITextElementFactory
    {
    }
    public static class ITextElementOverridesMethods
    {


        internal static unsafe void OnDisconnectVisualChildren(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, int>**)ThisPtr)[6](ThisPtr));
            global::System.GC.KeepAlive(_obj);
        }


        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0x80, 0x13, 0xB0, 0x41, 0x9F, 0xE4, 0xDA, 0x5F, 0x8C, 0x72, 0xAC, 0xC1, 0xAC, 0x1E, 0x91, 0xDF };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

        public static global::System.IntPtr AbiToProjectionVftablePtr => ITextElementOverrides.AbiToProjectionVftablePtr;

    }

    [Guid("41B01380-E49F-5FDA-8C72-ACC1AC1E91DF")]
    internal unsafe interface ITextElementOverrides : global::Microsoft.UI.Xaml.Documents.ITextElementOverrides
    {

        public static readonly IntPtr AbiToProjectionVftablePtr;
        static unsafe ITextElementOverrides()
        {
            AbiToProjectionVftablePtr = ComWrappersSupport.AllocateVtableMemory(typeof(ITextElementOverrides), sizeof(IInspectable.Vftbl) + sizeof(IntPtr) * 1);
            *(IInspectable.Vftbl*)AbiToProjectionVftablePtr = IInspectable.Vftbl.AbiToProjectionVftable;
            ((delegate* unmanaged[Stdcall]<IntPtr, int>*)AbiToProjectionVftablePtr)[6] = &Do_Abi_OnDisconnectVisualChildren_0;
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvStdcall) })]
        private static unsafe int Do_Abi_OnDisconnectVisualChildren_0(IntPtr thisPtr)
        {



            try
            {
                global::WinRT.ComWrappersSupport.FindObject<global::Microsoft.UI.Xaml.Documents.ITextElementOverrides>(thisPtr).OnDisconnectVisualChildren();

            }
            catch (Exception __exception__)
            {
                global::WinRT.ExceptionHelpers.SetErrorInfo(__exception__);
                return global::WinRT.ExceptionHelpers.GetHRForException(__exception__);
            }
            return 0;
        }
    }

    internal static class ITextElementStaticsMethods
    {

        internal static unsafe global::Microsoft.UI.Xaml.DependencyProperty get_AccessKeyProperty(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[17](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Xaml.DependencyProperty.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.UI.Xaml.DependencyProperty.DisposeAbi(__retval);
            }
        }

        internal static unsafe global::Microsoft.UI.Xaml.DependencyProperty get_AccessKeyScopeOwnerProperty(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[20](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Xaml.DependencyProperty.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.UI.Xaml.DependencyProperty.DisposeAbi(__retval);
            }
        }

        internal static unsafe global::Microsoft.UI.Xaml.DependencyProperty get_AllowFocusOnInteractionProperty(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[16](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Xaml.DependencyProperty.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.UI.Xaml.DependencyProperty.DisposeAbi(__retval);
            }
        }

        internal static unsafe global::Microsoft.UI.Xaml.DependencyProperty get_CharacterSpacingProperty(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[11](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Xaml.DependencyProperty.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.UI.Xaml.DependencyProperty.DisposeAbi(__retval);
            }
        }

        internal static unsafe global::Microsoft.UI.Xaml.DependencyProperty get_ExitDisplayModeOnAccessKeyInvokedProperty(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[18](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Xaml.DependencyProperty.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.UI.Xaml.DependencyProperty.DisposeAbi(__retval);
            }
        }

        internal static unsafe global::Microsoft.UI.Xaml.DependencyProperty get_FontFamilyProperty(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[7](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Xaml.DependencyProperty.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.UI.Xaml.DependencyProperty.DisposeAbi(__retval);
            }
        }

        internal static unsafe global::Microsoft.UI.Xaml.DependencyProperty get_FontSizeProperty(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[6](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Xaml.DependencyProperty.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.UI.Xaml.DependencyProperty.DisposeAbi(__retval);
            }
        }

        internal static unsafe global::Microsoft.UI.Xaml.DependencyProperty get_FontStretchProperty(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[10](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Xaml.DependencyProperty.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.UI.Xaml.DependencyProperty.DisposeAbi(__retval);
            }
        }

        internal static unsafe global::Microsoft.UI.Xaml.DependencyProperty get_FontStyleProperty(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[9](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Xaml.DependencyProperty.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.UI.Xaml.DependencyProperty.DisposeAbi(__retval);
            }
        }

        internal static unsafe global::Microsoft.UI.Xaml.DependencyProperty get_FontWeightProperty(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[8](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Xaml.DependencyProperty.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.UI.Xaml.DependencyProperty.DisposeAbi(__retval);
            }
        }

        internal static unsafe global::Microsoft.UI.Xaml.DependencyProperty get_ForegroundProperty(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[12](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Xaml.DependencyProperty.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.UI.Xaml.DependencyProperty.DisposeAbi(__retval);
            }
        }

        internal static unsafe global::Microsoft.UI.Xaml.DependencyProperty get_IsAccessKeyScopeProperty(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[19](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Xaml.DependencyProperty.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.UI.Xaml.DependencyProperty.DisposeAbi(__retval);
            }
        }

        internal static unsafe global::Microsoft.UI.Xaml.DependencyProperty get_IsTextScaleFactorEnabledProperty(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[14](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Xaml.DependencyProperty.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.UI.Xaml.DependencyProperty.DisposeAbi(__retval);
            }
        }

        internal static unsafe global::Microsoft.UI.Xaml.DependencyProperty get_KeyTipHorizontalOffsetProperty(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[22](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Xaml.DependencyProperty.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.UI.Xaml.DependencyProperty.DisposeAbi(__retval);
            }
        }

        internal static unsafe global::Microsoft.UI.Xaml.DependencyProperty get_KeyTipPlacementModeProperty(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[21](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Xaml.DependencyProperty.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.UI.Xaml.DependencyProperty.DisposeAbi(__retval);
            }
        }

        internal static unsafe global::Microsoft.UI.Xaml.DependencyProperty get_KeyTipVerticalOffsetProperty(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[23](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Xaml.DependencyProperty.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.UI.Xaml.DependencyProperty.DisposeAbi(__retval);
            }
        }

        internal static unsafe global::Microsoft.UI.Xaml.DependencyProperty get_LanguageProperty(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[13](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Xaml.DependencyProperty.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.UI.Xaml.DependencyProperty.DisposeAbi(__retval);
            }
        }

        internal static unsafe global::Microsoft.UI.Xaml.DependencyProperty get_TextDecorationsProperty(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[15](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Xaml.DependencyProperty.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.UI.Xaml.DependencyProperty.DisposeAbi(__retval);
            }
        }



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0x19, 0x59, 0xB5, 0xC9, 0xFE, 0xE1, 0xCD, 0x5A, 0xBA, 0xC7, 0xC9, 0xD7, 0xF4, 0x13, 0xB3, 0x5C };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("C9B55919-E1FE-5ACD-BAC7-C9D7F413B35C")]
    internal interface ITextElementStatics : global::Microsoft.UI.Xaml.Documents.ITextElementStatics
    {
    }
    internal static class ITextHighlighterMethods
    {

        internal static unsafe global::Microsoft.UI.Xaml.Media.Brush get_Background(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[9](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Xaml.Media.Brush.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.UI.Xaml.Media.Brush.DisposeAbi(__retval);
            }
        }
        internal static unsafe void set_Background(IObjectReference _obj, global::Microsoft.UI.Xaml.Media.Brush value)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __value = default;
            try
            {
                __value = global::ABI.Microsoft.UI.Xaml.Media.Brush.CreateMarshaler2(value);
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, int>**)ThisPtr)[10](ThisPtr, MarshalInspectable<object>.GetAbi(__value)));
                global::System.GC.KeepAlive(_obj);
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__value);
            }
        }

        internal static unsafe global::Microsoft.UI.Xaml.Media.Brush get_Foreground(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[7](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Xaml.Media.Brush.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.UI.Xaml.Media.Brush.DisposeAbi(__retval);
            }
        }
        internal static unsafe void set_Foreground(IObjectReference _obj, global::Microsoft.UI.Xaml.Media.Brush value)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __value = default;
            try
            {
                __value = global::ABI.Microsoft.UI.Xaml.Media.Brush.CreateMarshaler2(value);
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, int>**)ThisPtr)[8](ThisPtr, MarshalInspectable<object>.GetAbi(__value)));
                global::System.GC.KeepAlive(_obj);
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__value);
            }
        }

        internal static unsafe global::System.Collections.Generic.IList<global::Microsoft.UI.Xaml.Documents.TextRange> get_Ranges(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[6](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                _ = global::WinRT.GenericTypeInstantiations.Windows_Foundation_Collections_IVector_1_Microsoft_UI_Xaml_Documents_TextRange.EnsureInitialized();
                return MarshalInterface<global::System.Collections.Generic.IList<global::Microsoft.UI.Xaml.Documents.TextRange>>.FromAbi(__retval);
            }
            finally
            {
                MarshalInterface<global::System.Collections.Generic.IList<global::Microsoft.UI.Xaml.Documents.TextRange>>.DisposeAbi(__retval);
            }
        }



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0x61, 0xE8, 0x56, 0xB7, 0x2B, 0x1D, 0x6F, 0x5F, 0x81, 0xFD, 0xC5, 0x1A, 0x5B, 0xC0, 0x68, 0xFF };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("B756E861-1D2B-5F6F-81FD-C51A5BC068FF")]
    internal interface ITextHighlighter : global::Microsoft.UI.Xaml.Documents.ITextHighlighter
    {
    }
    internal static class ITextHighlighterBaseMethods
    {



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0xF0, 0xAA, 0x21, 0x5C, 0x17, 0x3A, 0x68, 0x54, 0x8A, 0xAC, 0xBE, 0x14, 0xDB, 0xE, 0xD8, 0xC1 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("5C21AAF0-3A17-5468-8AAC-BE14DB0ED8C1")]
    internal interface ITextHighlighterBase : global::Microsoft.UI.Xaml.Documents.ITextHighlighterBase
    {
    }
    internal static class ITextHighlighterBaseFactoryMethods
    {



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0x61, 0xE4, 0x91, 0xE0, 0xAB, 0x53, 0x9E, 0x59, 0xAA, 0xEA, 0x80, 0xA, 0xDC, 0x72, 0xDA, 0x4F };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("E091E461-53AB-599E-AAEA-800ADC72DA4F")]
    internal interface ITextHighlighterBaseFactory : global::Microsoft.UI.Xaml.Documents.ITextHighlighterBaseFactory
    {
    }
    internal static class ITextHighlighterFactoryMethods
    {


        internal static unsafe global::Microsoft.UI.Xaml.Documents.TextHighlighter CreateInstance(IObjectReference _obj, object baseInterface, out object innerInterface)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __baseInterface = default;
            IntPtr __innerInterface = default;
            IntPtr __retval = default;
            try
            {
                __baseInterface = MarshalInspectable<object>.CreateMarshaler2(baseInterface);
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, IntPtr*, IntPtr*, int>**)ThisPtr)[6](ThisPtr, MarshalInspectable<object>.GetAbi(__baseInterface), &__innerInterface, &__retval));
                global::System.GC.KeepAlive(_obj);
                innerInterface = MarshalInspectable<object>.FromAbi(__innerInterface);
                return global::ABI.Microsoft.UI.Xaml.Documents.TextHighlighter.FromAbi(__retval);
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__baseInterface);
                MarshalInspectable<object>.DisposeAbi(__innerInterface);
                global::ABI.Microsoft.UI.Xaml.Documents.TextHighlighter.DisposeAbi(__retval);
            }
        }


        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0x1F, 0x31, 0xC7, 0x69, 0x19, 0xC0, 0x93, 0x5B, 0xB5, 0x11, 0x81, 0x41, 0x85, 0x43, 0xBA, 0xB7 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("69C7311F-C019-5B93-B511-81418543BAB7")]
    internal interface ITextHighlighterFactory : global::Microsoft.UI.Xaml.Documents.ITextHighlighterFactory
    {
    }
    internal static class ITextHighlighterStaticsMethods
    {

        internal static unsafe global::Microsoft.UI.Xaml.DependencyProperty get_BackgroundProperty(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[7](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Xaml.DependencyProperty.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.UI.Xaml.DependencyProperty.DisposeAbi(__retval);
            }
        }

        internal static unsafe global::Microsoft.UI.Xaml.DependencyProperty get_ForegroundProperty(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[6](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Xaml.DependencyProperty.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.UI.Xaml.DependencyProperty.DisposeAbi(__retval);
            }
        }



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0x7A, 0x4, 0x75, 0x49, 0xAD, 0x87, 0xA2, 0x51, 0x97, 0x7C, 0xE7, 0x71, 0xDE, 0x4F, 0x40, 0x35 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("4975047A-87AD-51A2-977C-E771DE4F4035")]
    internal interface ITextHighlighterStatics : global::Microsoft.UI.Xaml.Documents.ITextHighlighterStatics
    {
    }
    internal static class ITextPointerMethods
    {


        internal static unsafe global::Windows.Foundation.Rect GetCharacterRect(IObjectReference _obj, global::Microsoft.UI.Xaml.Documents.LogicalDirection direction)
        {
            var ThisPtr = _obj.ThisPtr;

            global::Windows.Foundation.Rect __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::Microsoft.UI.Xaml.Documents.LogicalDirection, global::Windows.Foundation.Rect*, int>**)ThisPtr)[10](ThisPtr, direction, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }

        internal static unsafe global::Microsoft.UI.Xaml.Documents.TextPointer GetPositionAtOffset(IObjectReference _obj, int offset, global::Microsoft.UI.Xaml.Documents.LogicalDirection direction)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, int, global::Microsoft.UI.Xaml.Documents.LogicalDirection, IntPtr*, int>**)ThisPtr)[11](ThisPtr, offset, direction, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Xaml.Documents.TextPointer.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.UI.Xaml.Documents.TextPointer.DisposeAbi(__retval);
            }
        }
        internal static unsafe global::Microsoft.UI.Xaml.Documents.LogicalDirection get_LogicalDirection(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::Microsoft.UI.Xaml.Documents.LogicalDirection __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::Microsoft.UI.Xaml.Documents.LogicalDirection*, int>**)ThisPtr)[8](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }

        internal static unsafe int get_Offset(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            int __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, int*, int>**)ThisPtr)[9](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }

        internal static unsafe global::Microsoft.UI.Xaml.DependencyObject get_Parent(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[6](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Xaml.DependencyObject.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.UI.Xaml.DependencyObject.DisposeAbi(__retval);
            }
        }

        internal static unsafe global::Microsoft.UI.Xaml.FrameworkElement get_VisualParent(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[7](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Xaml.FrameworkElement.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.UI.Xaml.FrameworkElement.DisposeAbi(__retval);
            }
        }



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0x85, 0xB3, 0x2E, 0x84, 0x41, 0xEE, 0x30, 0x59, 0x97, 0x9B, 0x43, 0x8F, 0xA7, 0x52, 0x5A, 0x51 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("842EB385-EE41-5930-979B-438FA7525A51")]
    internal interface ITextPointer : global::Microsoft.UI.Xaml.Documents.ITextPointer
    {
    }
    internal static class ITypographyMethods
    {



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0xE3, 0xE2, 0x27, 0xFA, 0x5E, 0xBE, 0x21, 0x5D, 0x9A, 0x5E, 0x90, 0xCF, 0x10, 0x2A, 0xF8, 0x28 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("FA27E2E3-BE5E-5D21-9A5E-90CF102AF828")]
    internal interface ITypography : global::Microsoft.UI.Xaml.Documents.ITypography
    {
    }
    internal static class ITypographyStaticsMethods
    {


        internal static unsafe int GetAnnotationAlternates(IObjectReference _obj, global::Microsoft.UI.Xaml.DependencyObject element)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __element = default;
            int __retval = default;
            try
            {
                __element = global::ABI.Microsoft.UI.Xaml.DependencyObject.CreateMarshaler2(element);
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, int*, int>**)ThisPtr)[7](ThisPtr, MarshalInspectable<object>.GetAbi(__element), &__retval));
                global::System.GC.KeepAlive(_obj);
                return __retval;
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__element);
            }
        }

        internal static unsafe void SetAnnotationAlternates(IObjectReference _obj, global::Microsoft.UI.Xaml.DependencyObject element, int value)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __element = default;
            try
            {
                __element = global::ABI.Microsoft.UI.Xaml.DependencyObject.CreateMarshaler2(element);
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, int, int>**)ThisPtr)[8](ThisPtr, MarshalInspectable<object>.GetAbi(__element), value));
                global::System.GC.KeepAlive(_obj);
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__element);
            }
        }

        internal static unsafe bool GetEastAsianExpertForms(IObjectReference _obj, global::Microsoft.UI.Xaml.DependencyObject element)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __element = default;
            byte __retval = default;
            try
            {
                __element = global::ABI.Microsoft.UI.Xaml.DependencyObject.CreateMarshaler2(element);
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, byte*, int>**)ThisPtr)[10](ThisPtr, MarshalInspectable<object>.GetAbi(__element), &__retval));
                global::System.GC.KeepAlive(_obj);
                return __retval != 0;
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__element);
            }
        }

        internal static unsafe void SetEastAsianExpertForms(IObjectReference _obj, global::Microsoft.UI.Xaml.DependencyObject element, bool value)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __element = default;
            try
            {
                __element = global::ABI.Microsoft.UI.Xaml.DependencyObject.CreateMarshaler2(element);
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, byte, int>**)ThisPtr)[11](ThisPtr, MarshalInspectable<object>.GetAbi(__element), (byte)(value ? 1 : 0)));
                global::System.GC.KeepAlive(_obj);
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__element);
            }
        }

        internal static unsafe global::Microsoft.UI.Xaml.FontEastAsianLanguage GetEastAsianLanguage(IObjectReference _obj, global::Microsoft.UI.Xaml.DependencyObject element)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __element = default;
            global::Microsoft.UI.Xaml.FontEastAsianLanguage __retval = default;
            try
            {
                __element = global::ABI.Microsoft.UI.Xaml.DependencyObject.CreateMarshaler2(element);
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, global::Microsoft.UI.Xaml.FontEastAsianLanguage*, int>**)ThisPtr)[13](ThisPtr, MarshalInspectable<object>.GetAbi(__element), &__retval));
                global::System.GC.KeepAlive(_obj);
                return __retval;
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__element);
            }
        }

        internal static unsafe void SetEastAsianLanguage(IObjectReference _obj, global::Microsoft.UI.Xaml.DependencyObject element, global::Microsoft.UI.Xaml.FontEastAsianLanguage value)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __element = default;
            try
            {
                __element = global::ABI.Microsoft.UI.Xaml.DependencyObject.CreateMarshaler2(element);
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, global::Microsoft.UI.Xaml.FontEastAsianLanguage, int>**)ThisPtr)[14](ThisPtr, MarshalInspectable<object>.GetAbi(__element), value));
                global::System.GC.KeepAlive(_obj);
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__element);
            }
        }

        internal static unsafe global::Microsoft.UI.Xaml.FontEastAsianWidths GetEastAsianWidths(IObjectReference _obj, global::Microsoft.UI.Xaml.DependencyObject element)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __element = default;
            global::Microsoft.UI.Xaml.FontEastAsianWidths __retval = default;
            try
            {
                __element = global::ABI.Microsoft.UI.Xaml.DependencyObject.CreateMarshaler2(element);
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, global::Microsoft.UI.Xaml.FontEastAsianWidths*, int>**)ThisPtr)[16](ThisPtr, MarshalInspectable<object>.GetAbi(__element), &__retval));
                global::System.GC.KeepAlive(_obj);
                return __retval;
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__element);
            }
        }

        internal static unsafe void SetEastAsianWidths(IObjectReference _obj, global::Microsoft.UI.Xaml.DependencyObject element, global::Microsoft.UI.Xaml.FontEastAsianWidths value)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __element = default;
            try
            {
                __element = global::ABI.Microsoft.UI.Xaml.DependencyObject.CreateMarshaler2(element);
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, global::Microsoft.UI.Xaml.FontEastAsianWidths, int>**)ThisPtr)[17](ThisPtr, MarshalInspectable<object>.GetAbi(__element), value));
                global::System.GC.KeepAlive(_obj);
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__element);
            }
        }

        internal static unsafe bool GetStandardLigatures(IObjectReference _obj, global::Microsoft.UI.Xaml.DependencyObject element)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __element = default;
            byte __retval = default;
            try
            {
                __element = global::ABI.Microsoft.UI.Xaml.DependencyObject.CreateMarshaler2(element);
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, byte*, int>**)ThisPtr)[19](ThisPtr, MarshalInspectable<object>.GetAbi(__element), &__retval));
                global::System.GC.KeepAlive(_obj);
                return __retval != 0;
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__element);
            }
        }

        internal static unsafe void SetStandardLigatures(IObjectReference _obj, global::Microsoft.UI.Xaml.DependencyObject element, bool value)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __element = default;
            try
            {
                __element = global::ABI.Microsoft.UI.Xaml.DependencyObject.CreateMarshaler2(element);
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, byte, int>**)ThisPtr)[20](ThisPtr, MarshalInspectable<object>.GetAbi(__element), (byte)(value ? 1 : 0)));
                global::System.GC.KeepAlive(_obj);
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__element);
            }
        }

        internal static unsafe bool GetContextualLigatures(IObjectReference _obj, global::Microsoft.UI.Xaml.DependencyObject element)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __element = default;
            byte __retval = default;
            try
            {
                __element = global::ABI.Microsoft.UI.Xaml.DependencyObject.CreateMarshaler2(element);
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, byte*, int>**)ThisPtr)[22](ThisPtr, MarshalInspectable<object>.GetAbi(__element), &__retval));
                global::System.GC.KeepAlive(_obj);
                return __retval != 0;
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__element);
            }
        }

        internal static unsafe void SetContextualLigatures(IObjectReference _obj, global::Microsoft.UI.Xaml.DependencyObject element, bool value)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __element = default;
            try
            {
                __element = global::ABI.Microsoft.UI.Xaml.DependencyObject.CreateMarshaler2(element);
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, byte, int>**)ThisPtr)[23](ThisPtr, MarshalInspectable<object>.GetAbi(__element), (byte)(value ? 1 : 0)));
                global::System.GC.KeepAlive(_obj);
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__element);
            }
        }

        internal static unsafe bool GetDiscretionaryLigatures(IObjectReference _obj, global::Microsoft.UI.Xaml.DependencyObject element)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __element = default;
            byte __retval = default;
            try
            {
                __element = global::ABI.Microsoft.UI.Xaml.DependencyObject.CreateMarshaler2(element);
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, byte*, int>**)ThisPtr)[25](ThisPtr, MarshalInspectable<object>.GetAbi(__element), &__retval));
                global::System.GC.KeepAlive(_obj);
                return __retval != 0;
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__element);
            }
        }

        internal static unsafe void SetDiscretionaryLigatures(IObjectReference _obj, global::Microsoft.UI.Xaml.DependencyObject element, bool value)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __element = default;
            try
            {
                __element = global::ABI.Microsoft.UI.Xaml.DependencyObject.CreateMarshaler2(element);
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, byte, int>**)ThisPtr)[26](ThisPtr, MarshalInspectable<object>.GetAbi(__element), (byte)(value ? 1 : 0)));
                global::System.GC.KeepAlive(_obj);
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__element);
            }
        }

        internal static unsafe bool GetHistoricalLigatures(IObjectReference _obj, global::Microsoft.UI.Xaml.DependencyObject element)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __element = default;
            byte __retval = default;
            try
            {
                __element = global::ABI.Microsoft.UI.Xaml.DependencyObject.CreateMarshaler2(element);
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, byte*, int>**)ThisPtr)[28](ThisPtr, MarshalInspectable<object>.GetAbi(__element), &__retval));
                global::System.GC.KeepAlive(_obj);
                return __retval != 0;
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__element);
            }
        }

        internal static unsafe void SetHistoricalLigatures(IObjectReference _obj, global::Microsoft.UI.Xaml.DependencyObject element, bool value)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __element = default;
            try
            {
                __element = global::ABI.Microsoft.UI.Xaml.DependencyObject.CreateMarshaler2(element);
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, byte, int>**)ThisPtr)[29](ThisPtr, MarshalInspectable<object>.GetAbi(__element), (byte)(value ? 1 : 0)));
                global::System.GC.KeepAlive(_obj);
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__element);
            }
        }

        internal static unsafe int GetStandardSwashes(IObjectReference _obj, global::Microsoft.UI.Xaml.DependencyObject element)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __element = default;
            int __retval = default;
            try
            {
                __element = global::ABI.Microsoft.UI.Xaml.DependencyObject.CreateMarshaler2(element);
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, int*, int>**)ThisPtr)[31](ThisPtr, MarshalInspectable<object>.GetAbi(__element), &__retval));
                global::System.GC.KeepAlive(_obj);
                return __retval;
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__element);
            }
        }

        internal static unsafe void SetStandardSwashes(IObjectReference _obj, global::Microsoft.UI.Xaml.DependencyObject element, int value)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __element = default;
            try
            {
                __element = global::ABI.Microsoft.UI.Xaml.DependencyObject.CreateMarshaler2(element);
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, int, int>**)ThisPtr)[32](ThisPtr, MarshalInspectable<object>.GetAbi(__element), value));
                global::System.GC.KeepAlive(_obj);
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__element);
            }
        }

        internal static unsafe int GetContextualSwashes(IObjectReference _obj, global::Microsoft.UI.Xaml.DependencyObject element)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __element = default;
            int __retval = default;
            try
            {
                __element = global::ABI.Microsoft.UI.Xaml.DependencyObject.CreateMarshaler2(element);
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, int*, int>**)ThisPtr)[34](ThisPtr, MarshalInspectable<object>.GetAbi(__element), &__retval));
                global::System.GC.KeepAlive(_obj);
                return __retval;
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__element);
            }
        }

        internal static unsafe void SetContextualSwashes(IObjectReference _obj, global::Microsoft.UI.Xaml.DependencyObject element, int value)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __element = default;
            try
            {
                __element = global::ABI.Microsoft.UI.Xaml.DependencyObject.CreateMarshaler2(element);
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, int, int>**)ThisPtr)[35](ThisPtr, MarshalInspectable<object>.GetAbi(__element), value));
                global::System.GC.KeepAlive(_obj);
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__element);
            }
        }

        internal static unsafe bool GetContextualAlternates(IObjectReference _obj, global::Microsoft.UI.Xaml.DependencyObject element)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __element = default;
            byte __retval = default;
            try
            {
                __element = global::ABI.Microsoft.UI.Xaml.DependencyObject.CreateMarshaler2(element);
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, byte*, int>**)ThisPtr)[37](ThisPtr, MarshalInspectable<object>.GetAbi(__element), &__retval));
                global::System.GC.KeepAlive(_obj);
                return __retval != 0;
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__element);
            }
        }

        internal static unsafe void SetContextualAlternates(IObjectReference _obj, global::Microsoft.UI.Xaml.DependencyObject element, bool value)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __element = default;
            try
            {
                __element = global::ABI.Microsoft.UI.Xaml.DependencyObject.CreateMarshaler2(element);
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, byte, int>**)ThisPtr)[38](ThisPtr, MarshalInspectable<object>.GetAbi(__element), (byte)(value ? 1 : 0)));
                global::System.GC.KeepAlive(_obj);
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__element);
            }
        }

        internal static unsafe int GetStylisticAlternates(IObjectReference _obj, global::Microsoft.UI.Xaml.DependencyObject element)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __element = default;
            int __retval = default;
            try
            {
                __element = global::ABI.Microsoft.UI.Xaml.DependencyObject.CreateMarshaler2(element);
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, int*, int>**)ThisPtr)[40](ThisPtr, MarshalInspectable<object>.GetAbi(__element), &__retval));
                global::System.GC.KeepAlive(_obj);
                return __retval;
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__element);
            }
        }

        internal static unsafe void SetStylisticAlternates(IObjectReference _obj, global::Microsoft.UI.Xaml.DependencyObject element, int value)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __element = default;
            try
            {
                __element = global::ABI.Microsoft.UI.Xaml.DependencyObject.CreateMarshaler2(element);
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, int, int>**)ThisPtr)[41](ThisPtr, MarshalInspectable<object>.GetAbi(__element), value));
                global::System.GC.KeepAlive(_obj);
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__element);
            }
        }

        internal static unsafe bool GetStylisticSet1(IObjectReference _obj, global::Microsoft.UI.Xaml.DependencyObject element)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __element = default;
            byte __retval = default;
            try
            {
                __element = global::ABI.Microsoft.UI.Xaml.DependencyObject.CreateMarshaler2(element);
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, byte*, int>**)ThisPtr)[43](ThisPtr, MarshalInspectable<object>.GetAbi(__element), &__retval));
                global::System.GC.KeepAlive(_obj);
                return __retval != 0;
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__element);
            }
        }

        internal static unsafe void SetStylisticSet1(IObjectReference _obj, global::Microsoft.UI.Xaml.DependencyObject element, bool value)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __element = default;
            try
            {
                __element = global::ABI.Microsoft.UI.Xaml.DependencyObject.CreateMarshaler2(element);
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, byte, int>**)ThisPtr)[44](ThisPtr, MarshalInspectable<object>.GetAbi(__element), (byte)(value ? 1 : 0)));
                global::System.GC.KeepAlive(_obj);
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__element);
            }
        }

        internal static unsafe bool GetStylisticSet2(IObjectReference _obj, global::Microsoft.UI.Xaml.DependencyObject element)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __element = default;
            byte __retval = default;
            try
            {
                __element = global::ABI.Microsoft.UI.Xaml.DependencyObject.CreateMarshaler2(element);
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, byte*, int>**)ThisPtr)[46](ThisPtr, MarshalInspectable<object>.GetAbi(__element), &__retval));
                global::System.GC.KeepAlive(_obj);
                return __retval != 0;
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__element);
            }
        }

        internal static unsafe void SetStylisticSet2(IObjectReference _obj, global::Microsoft.UI.Xaml.DependencyObject element, bool value)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __element = default;
            try
            {
                __element = global::ABI.Microsoft.UI.Xaml.DependencyObject.CreateMarshaler2(element);
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, byte, int>**)ThisPtr)[47](ThisPtr, MarshalInspectable<object>.GetAbi(__element), (byte)(value ? 1 : 0)));
                global::System.GC.KeepAlive(_obj);
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__element);
            }
        }

        internal static unsafe bool GetStylisticSet3(IObjectReference _obj, global::Microsoft.UI.Xaml.DependencyObject element)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __element = default;
            byte __retval = default;
            try
            {
                __element = global::ABI.Microsoft.UI.Xaml.DependencyObject.CreateMarshaler2(element);
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, byte*, int>**)ThisPtr)[49](ThisPtr, MarshalInspectable<object>.GetAbi(__element), &__retval));
                global::System.GC.KeepAlive(_obj);
                return __retval != 0;
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__element);
            }
        }

        internal static unsafe void SetStylisticSet3(IObjectReference _obj, global::Microsoft.UI.Xaml.DependencyObject element, bool value)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __element = default;
            try
            {
                __element = global::ABI.Microsoft.UI.Xaml.DependencyObject.CreateMarshaler2(element);
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, byte, int>**)ThisPtr)[50](ThisPtr, MarshalInspectable<object>.GetAbi(__element), (byte)(value ? 1 : 0)));
                global::System.GC.KeepAlive(_obj);
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__element);
            }
        }

        internal static unsafe bool GetStylisticSet4(IObjectReference _obj, global::Microsoft.UI.Xaml.DependencyObject element)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __element = default;
            byte __retval = default;
            try
            {
                __element = global::ABI.Microsoft.UI.Xaml.DependencyObject.CreateMarshaler2(element);
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, byte*, int>**)ThisPtr)[52](ThisPtr, MarshalInspectable<object>.GetAbi(__element), &__retval));
                global::System.GC.KeepAlive(_obj);
                return __retval != 0;
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__element);
            }
        }

        internal static unsafe void SetStylisticSet4(IObjectReference _obj, global::Microsoft.UI.Xaml.DependencyObject element, bool value)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __element = default;
            try
            {
                __element = global::ABI.Microsoft.UI.Xaml.DependencyObject.CreateMarshaler2(element);
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, byte, int>**)ThisPtr)[53](ThisPtr, MarshalInspectable<object>.GetAbi(__element), (byte)(value ? 1 : 0)));
                global::System.GC.KeepAlive(_obj);
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__element);
            }
        }

        internal static unsafe bool GetStylisticSet5(IObjectReference _obj, global::Microsoft.UI.Xaml.DependencyObject element)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __element = default;
            byte __retval = default;
            try
            {
                __element = global::ABI.Microsoft.UI.Xaml.DependencyObject.CreateMarshaler2(element);
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, byte*, int>**)ThisPtr)[55](ThisPtr, MarshalInspectable<object>.GetAbi(__element), &__retval));
                global::System.GC.KeepAlive(_obj);
                return __retval != 0;
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__element);
            }
        }

        internal static unsafe void SetStylisticSet5(IObjectReference _obj, global::Microsoft.UI.Xaml.DependencyObject element, bool value)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __element = default;
            try
            {
                __element = global::ABI.Microsoft.UI.Xaml.DependencyObject.CreateMarshaler2(element);
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, byte, int>**)ThisPtr)[56](ThisPtr, MarshalInspectable<object>.GetAbi(__element), (byte)(value ? 1 : 0)));
                global::System.GC.KeepAlive(_obj);
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__element);
            }
        }

        internal static unsafe bool GetStylisticSet6(IObjectReference _obj, global::Microsoft.UI.Xaml.DependencyObject element)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __element = default;
            byte __retval = default;
            try
            {
                __element = global::ABI.Microsoft.UI.Xaml.DependencyObject.CreateMarshaler2(element);
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, byte*, int>**)ThisPtr)[58](ThisPtr, MarshalInspectable<object>.GetAbi(__element), &__retval));
                global::System.GC.KeepAlive(_obj);
                return __retval != 0;
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__element);
            }
        }

        internal static unsafe void SetStylisticSet6(IObjectReference _obj, global::Microsoft.UI.Xaml.DependencyObject element, bool value)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __element = default;
            try
            {
                __element = global::ABI.Microsoft.UI.Xaml.DependencyObject.CreateMarshaler2(element);
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, byte, int>**)ThisPtr)[59](ThisPtr, MarshalInspectable<object>.GetAbi(__element), (byte)(value ? 1 : 0)));
                global::System.GC.KeepAlive(_obj);
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__element);
            }
        }

        internal static unsafe bool GetStylisticSet7(IObjectReference _obj, global::Microsoft.UI.Xaml.DependencyObject element)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __element = default;
            byte __retval = default;
            try
            {
                __element = global::ABI.Microsoft.UI.Xaml.DependencyObject.CreateMarshaler2(element);
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, byte*, int>**)ThisPtr)[61](ThisPtr, MarshalInspectable<object>.GetAbi(__element), &__retval));
                global::System.GC.KeepAlive(_obj);
                return __retval != 0;
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__element);
            }
        }

        internal static unsafe void SetStylisticSet7(IObjectReference _obj, global::Microsoft.UI.Xaml.DependencyObject element, bool value)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __element = default;
            try
            {
                __element = global::ABI.Microsoft.UI.Xaml.DependencyObject.CreateMarshaler2(element);
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, byte, int>**)ThisPtr)[62](ThisPtr, MarshalInspectable<object>.GetAbi(__element), (byte)(value ? 1 : 0)));
                global::System.GC.KeepAlive(_obj);
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__element);
            }
        }

        internal static unsafe bool GetStylisticSet8(IObjectReference _obj, global::Microsoft.UI.Xaml.DependencyObject element)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __element = default;
            byte __retval = default;
            try
            {
                __element = global::ABI.Microsoft.UI.Xaml.DependencyObject.CreateMarshaler2(element);
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, byte*, int>**)ThisPtr)[64](ThisPtr, MarshalInspectable<object>.GetAbi(__element), &__retval));
                global::System.GC.KeepAlive(_obj);
                return __retval != 0;
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__element);
            }
        }

        internal static unsafe void SetStylisticSet8(IObjectReference _obj, global::Microsoft.UI.Xaml.DependencyObject element, bool value)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __element = default;
            try
            {
                __element = global::ABI.Microsoft.UI.Xaml.DependencyObject.CreateMarshaler2(element);
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, byte, int>**)ThisPtr)[65](ThisPtr, MarshalInspectable<object>.GetAbi(__element), (byte)(value ? 1 : 0)));
                global::System.GC.KeepAlive(_obj);
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__element);
            }
        }

        internal static unsafe bool GetStylisticSet9(IObjectReference _obj, global::Microsoft.UI.Xaml.DependencyObject element)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __element = default;
            byte __retval = default;
            try
            {
                __element = global::ABI.Microsoft.UI.Xaml.DependencyObject.CreateMarshaler2(element);
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, byte*, int>**)ThisPtr)[67](ThisPtr, MarshalInspectable<object>.GetAbi(__element), &__retval));
                global::System.GC.KeepAlive(_obj);
                return __retval != 0;
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__element);
            }
        }

        internal static unsafe void SetStylisticSet9(IObjectReference _obj, global::Microsoft.UI.Xaml.DependencyObject element, bool value)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __element = default;
            try
            {
                __element = global::ABI.Microsoft.UI.Xaml.DependencyObject.CreateMarshaler2(element);
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, byte, int>**)ThisPtr)[68](ThisPtr, MarshalInspectable<object>.GetAbi(__element), (byte)(value ? 1 : 0)));
                global::System.GC.KeepAlive(_obj);
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__element);
            }
        }

        internal static unsafe bool GetStylisticSet10(IObjectReference _obj, global::Microsoft.UI.Xaml.DependencyObject element)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __element = default;
            byte __retval = default;
            try
            {
                __element = global::ABI.Microsoft.UI.Xaml.DependencyObject.CreateMarshaler2(element);
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, byte*, int>**)ThisPtr)[70](ThisPtr, MarshalInspectable<object>.GetAbi(__element), &__retval));
                global::System.GC.KeepAlive(_obj);
                return __retval != 0;
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__element);
            }
        }

        internal static unsafe void SetStylisticSet10(IObjectReference _obj, global::Microsoft.UI.Xaml.DependencyObject element, bool value)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __element = default;
            try
            {
                __element = global::ABI.Microsoft.UI.Xaml.DependencyObject.CreateMarshaler2(element);
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, byte, int>**)ThisPtr)[71](ThisPtr, MarshalInspectable<object>.GetAbi(__element), (byte)(value ? 1 : 0)));
                global::System.GC.KeepAlive(_obj);
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__element);
            }
        }

        internal static unsafe bool GetStylisticSet11(IObjectReference _obj, global::Microsoft.UI.Xaml.DependencyObject element)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __element = default;
            byte __retval = default;
            try
            {
                __element = global::ABI.Microsoft.UI.Xaml.DependencyObject.CreateMarshaler2(element);
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, byte*, int>**)ThisPtr)[73](ThisPtr, MarshalInspectable<object>.GetAbi(__element), &__retval));
                global::System.GC.KeepAlive(_obj);
                return __retval != 0;
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__element);
            }
        }

        internal static unsafe void SetStylisticSet11(IObjectReference _obj, global::Microsoft.UI.Xaml.DependencyObject element, bool value)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __element = default;
            try
            {
                __element = global::ABI.Microsoft.UI.Xaml.DependencyObject.CreateMarshaler2(element);
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, byte, int>**)ThisPtr)[74](ThisPtr, MarshalInspectable<object>.GetAbi(__element), (byte)(value ? 1 : 0)));
                global::System.GC.KeepAlive(_obj);
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__element);
            }
        }

        internal static unsafe bool GetStylisticSet12(IObjectReference _obj, global::Microsoft.UI.Xaml.DependencyObject element)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __element = default;
            byte __retval = default;
            try
            {
                __element = global::ABI.Microsoft.UI.Xaml.DependencyObject.CreateMarshaler2(element);
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, byte*, int>**)ThisPtr)[76](ThisPtr, MarshalInspectable<object>.GetAbi(__element), &__retval));
                global::System.GC.KeepAlive(_obj);
                return __retval != 0;
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__element);
            }
        }

        internal static unsafe void SetStylisticSet12(IObjectReference _obj, global::Microsoft.UI.Xaml.DependencyObject element, bool value)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __element = default;
            try
            {
                __element = global::ABI.Microsoft.UI.Xaml.DependencyObject.CreateMarshaler2(element);
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, byte, int>**)ThisPtr)[77](ThisPtr, MarshalInspectable<object>.GetAbi(__element), (byte)(value ? 1 : 0)));
                global::System.GC.KeepAlive(_obj);
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__element);
            }
        }

        internal static unsafe bool GetStylisticSet13(IObjectReference _obj, global::Microsoft.UI.Xaml.DependencyObject element)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __element = default;
            byte __retval = default;
            try
            {
                __element = global::ABI.Microsoft.UI.Xaml.DependencyObject.CreateMarshaler2(element);
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, byte*, int>**)ThisPtr)[79](ThisPtr, MarshalInspectable<object>.GetAbi(__element), &__retval));
                global::System.GC.KeepAlive(_obj);
                return __retval != 0;
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__element);
            }
        }

        internal static unsafe void SetStylisticSet13(IObjectReference _obj, global::Microsoft.UI.Xaml.DependencyObject element, bool value)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __element = default;
            try
            {
                __element = global::ABI.Microsoft.UI.Xaml.DependencyObject.CreateMarshaler2(element);
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, byte, int>**)ThisPtr)[80](ThisPtr, MarshalInspectable<object>.GetAbi(__element), (byte)(value ? 1 : 0)));
                global::System.GC.KeepAlive(_obj);
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__element);
            }
        }

        internal static unsafe bool GetStylisticSet14(IObjectReference _obj, global::Microsoft.UI.Xaml.DependencyObject element)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __element = default;
            byte __retval = default;
            try
            {
                __element = global::ABI.Microsoft.UI.Xaml.DependencyObject.CreateMarshaler2(element);
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, byte*, int>**)ThisPtr)[82](ThisPtr, MarshalInspectable<object>.GetAbi(__element), &__retval));
                global::System.GC.KeepAlive(_obj);
                return __retval != 0;
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__element);
            }
        }

        internal static unsafe void SetStylisticSet14(IObjectReference _obj, global::Microsoft.UI.Xaml.DependencyObject element, bool value)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __element = default;
            try
            {
                __element = global::ABI.Microsoft.UI.Xaml.DependencyObject.CreateMarshaler2(element);
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, byte, int>**)ThisPtr)[83](ThisPtr, MarshalInspectable<object>.GetAbi(__element), (byte)(value ? 1 : 0)));
                global::System.GC.KeepAlive(_obj);
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__element);
            }
        }

        internal static unsafe bool GetStylisticSet15(IObjectReference _obj, global::Microsoft.UI.Xaml.DependencyObject element)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __element = default;
            byte __retval = default;
            try
            {
                __element = global::ABI.Microsoft.UI.Xaml.DependencyObject.CreateMarshaler2(element);
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, byte*, int>**)ThisPtr)[85](ThisPtr, MarshalInspectable<object>.GetAbi(__element), &__retval));
                global::System.GC.KeepAlive(_obj);
                return __retval != 0;
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__element);
            }
        }

        internal static unsafe void SetStylisticSet15(IObjectReference _obj, global::Microsoft.UI.Xaml.DependencyObject element, bool value)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __element = default;
            try
            {
                __element = global::ABI.Microsoft.UI.Xaml.DependencyObject.CreateMarshaler2(element);
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, byte, int>**)ThisPtr)[86](ThisPtr, MarshalInspectable<object>.GetAbi(__element), (byte)(value ? 1 : 0)));
                global::System.GC.KeepAlive(_obj);
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__element);
            }
        }

        internal static unsafe bool GetStylisticSet16(IObjectReference _obj, global::Microsoft.UI.Xaml.DependencyObject element)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __element = default;
            byte __retval = default;
            try
            {
                __element = global::ABI.Microsoft.UI.Xaml.DependencyObject.CreateMarshaler2(element);
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, byte*, int>**)ThisPtr)[88](ThisPtr, MarshalInspectable<object>.GetAbi(__element), &__retval));
                global::System.GC.KeepAlive(_obj);
                return __retval != 0;
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__element);
            }
        }

        internal static unsafe void SetStylisticSet16(IObjectReference _obj, global::Microsoft.UI.Xaml.DependencyObject element, bool value)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __element = default;
            try
            {
                __element = global::ABI.Microsoft.UI.Xaml.DependencyObject.CreateMarshaler2(element);
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, byte, int>**)ThisPtr)[89](ThisPtr, MarshalInspectable<object>.GetAbi(__element), (byte)(value ? 1 : 0)));
                global::System.GC.KeepAlive(_obj);
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__element);
            }
        }

        internal static unsafe bool GetStylisticSet17(IObjectReference _obj, global::Microsoft.UI.Xaml.DependencyObject element)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __element = default;
            byte __retval = default;
            try
            {
                __element = global::ABI.Microsoft.UI.Xaml.DependencyObject.CreateMarshaler2(element);
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, byte*, int>**)ThisPtr)[91](ThisPtr, MarshalInspectable<object>.GetAbi(__element), &__retval));
                global::System.GC.KeepAlive(_obj);
                return __retval != 0;
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__element);
            }
        }

        internal static unsafe void SetStylisticSet17(IObjectReference _obj, global::Microsoft.UI.Xaml.DependencyObject element, bool value)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __element = default;
            try
            {
                __element = global::ABI.Microsoft.UI.Xaml.DependencyObject.CreateMarshaler2(element);
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, byte, int>**)ThisPtr)[92](ThisPtr, MarshalInspectable<object>.GetAbi(__element), (byte)(value ? 1 : 0)));
                global::System.GC.KeepAlive(_obj);
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__element);
            }
        }

        internal static unsafe bool GetStylisticSet18(IObjectReference _obj, global::Microsoft.UI.Xaml.DependencyObject element)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __element = default;
            byte __retval = default;
            try
            {
                __element = global::ABI.Microsoft.UI.Xaml.DependencyObject.CreateMarshaler2(element);
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, byte*, int>**)ThisPtr)[94](ThisPtr, MarshalInspectable<object>.GetAbi(__element), &__retval));
                global::System.GC.KeepAlive(_obj);
                return __retval != 0;
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__element);
            }
        }

        internal static unsafe void SetStylisticSet18(IObjectReference _obj, global::Microsoft.UI.Xaml.DependencyObject element, bool value)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __element = default;
            try
            {
                __element = global::ABI.Microsoft.UI.Xaml.DependencyObject.CreateMarshaler2(element);
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, byte, int>**)ThisPtr)[95](ThisPtr, MarshalInspectable<object>.GetAbi(__element), (byte)(value ? 1 : 0)));
                global::System.GC.KeepAlive(_obj);
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__element);
            }
        }

        internal static unsafe bool GetStylisticSet19(IObjectReference _obj, global::Microsoft.UI.Xaml.DependencyObject element)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __element = default;
            byte __retval = default;
            try
            {
                __element = global::ABI.Microsoft.UI.Xaml.DependencyObject.CreateMarshaler2(element);
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, byte*, int>**)ThisPtr)[97](ThisPtr, MarshalInspectable<object>.GetAbi(__element), &__retval));
                global::System.GC.KeepAlive(_obj);
                return __retval != 0;
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__element);
            }
        }

        internal static unsafe void SetStylisticSet19(IObjectReference _obj, global::Microsoft.UI.Xaml.DependencyObject element, bool value)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __element = default;
            try
            {
                __element = global::ABI.Microsoft.UI.Xaml.DependencyObject.CreateMarshaler2(element);
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, byte, int>**)ThisPtr)[98](ThisPtr, MarshalInspectable<object>.GetAbi(__element), (byte)(value ? 1 : 0)));
                global::System.GC.KeepAlive(_obj);
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__element);
            }
        }

        internal static unsafe bool GetStylisticSet20(IObjectReference _obj, global::Microsoft.UI.Xaml.DependencyObject element)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __element = default;
            byte __retval = default;
            try
            {
                __element = global::ABI.Microsoft.UI.Xaml.DependencyObject.CreateMarshaler2(element);
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, byte*, int>**)ThisPtr)[100](ThisPtr, MarshalInspectable<object>.GetAbi(__element), &__retval));
                global::System.GC.KeepAlive(_obj);
                return __retval != 0;
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__element);
            }
        }

        internal static unsafe void SetStylisticSet20(IObjectReference _obj, global::Microsoft.UI.Xaml.DependencyObject element, bool value)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __element = default;
            try
            {
                __element = global::ABI.Microsoft.UI.Xaml.DependencyObject.CreateMarshaler2(element);
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, byte, int>**)ThisPtr)[101](ThisPtr, MarshalInspectable<object>.GetAbi(__element), (byte)(value ? 1 : 0)));
                global::System.GC.KeepAlive(_obj);
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__element);
            }
        }

        internal static unsafe global::Microsoft.UI.Xaml.FontCapitals GetCapitals(IObjectReference _obj, global::Microsoft.UI.Xaml.DependencyObject element)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __element = default;
            global::Microsoft.UI.Xaml.FontCapitals __retval = default;
            try
            {
                __element = global::ABI.Microsoft.UI.Xaml.DependencyObject.CreateMarshaler2(element);
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, global::Microsoft.UI.Xaml.FontCapitals*, int>**)ThisPtr)[103](ThisPtr, MarshalInspectable<object>.GetAbi(__element), &__retval));
                global::System.GC.KeepAlive(_obj);
                return __retval;
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__element);
            }
        }

        internal static unsafe void SetCapitals(IObjectReference _obj, global::Microsoft.UI.Xaml.DependencyObject element, global::Microsoft.UI.Xaml.FontCapitals value)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __element = default;
            try
            {
                __element = global::ABI.Microsoft.UI.Xaml.DependencyObject.CreateMarshaler2(element);
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, global::Microsoft.UI.Xaml.FontCapitals, int>**)ThisPtr)[104](ThisPtr, MarshalInspectable<object>.GetAbi(__element), value));
                global::System.GC.KeepAlive(_obj);
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__element);
            }
        }

        internal static unsafe bool GetCapitalSpacing(IObjectReference _obj, global::Microsoft.UI.Xaml.DependencyObject element)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __element = default;
            byte __retval = default;
            try
            {
                __element = global::ABI.Microsoft.UI.Xaml.DependencyObject.CreateMarshaler2(element);
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, byte*, int>**)ThisPtr)[106](ThisPtr, MarshalInspectable<object>.GetAbi(__element), &__retval));
                global::System.GC.KeepAlive(_obj);
                return __retval != 0;
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__element);
            }
        }

        internal static unsafe void SetCapitalSpacing(IObjectReference _obj, global::Microsoft.UI.Xaml.DependencyObject element, bool value)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __element = default;
            try
            {
                __element = global::ABI.Microsoft.UI.Xaml.DependencyObject.CreateMarshaler2(element);
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, byte, int>**)ThisPtr)[107](ThisPtr, MarshalInspectable<object>.GetAbi(__element), (byte)(value ? 1 : 0)));
                global::System.GC.KeepAlive(_obj);
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__element);
            }
        }

        internal static unsafe bool GetKerning(IObjectReference _obj, global::Microsoft.UI.Xaml.DependencyObject element)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __element = default;
            byte __retval = default;
            try
            {
                __element = global::ABI.Microsoft.UI.Xaml.DependencyObject.CreateMarshaler2(element);
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, byte*, int>**)ThisPtr)[109](ThisPtr, MarshalInspectable<object>.GetAbi(__element), &__retval));
                global::System.GC.KeepAlive(_obj);
                return __retval != 0;
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__element);
            }
        }

        internal static unsafe void SetKerning(IObjectReference _obj, global::Microsoft.UI.Xaml.DependencyObject element, bool value)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __element = default;
            try
            {
                __element = global::ABI.Microsoft.UI.Xaml.DependencyObject.CreateMarshaler2(element);
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, byte, int>**)ThisPtr)[110](ThisPtr, MarshalInspectable<object>.GetAbi(__element), (byte)(value ? 1 : 0)));
                global::System.GC.KeepAlive(_obj);
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__element);
            }
        }

        internal static unsafe bool GetCaseSensitiveForms(IObjectReference _obj, global::Microsoft.UI.Xaml.DependencyObject element)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __element = default;
            byte __retval = default;
            try
            {
                __element = global::ABI.Microsoft.UI.Xaml.DependencyObject.CreateMarshaler2(element);
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, byte*, int>**)ThisPtr)[112](ThisPtr, MarshalInspectable<object>.GetAbi(__element), &__retval));
                global::System.GC.KeepAlive(_obj);
                return __retval != 0;
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__element);
            }
        }

        internal static unsafe void SetCaseSensitiveForms(IObjectReference _obj, global::Microsoft.UI.Xaml.DependencyObject element, bool value)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __element = default;
            try
            {
                __element = global::ABI.Microsoft.UI.Xaml.DependencyObject.CreateMarshaler2(element);
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, byte, int>**)ThisPtr)[113](ThisPtr, MarshalInspectable<object>.GetAbi(__element), (byte)(value ? 1 : 0)));
                global::System.GC.KeepAlive(_obj);
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__element);
            }
        }

        internal static unsafe bool GetHistoricalForms(IObjectReference _obj, global::Microsoft.UI.Xaml.DependencyObject element)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __element = default;
            byte __retval = default;
            try
            {
                __element = global::ABI.Microsoft.UI.Xaml.DependencyObject.CreateMarshaler2(element);
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, byte*, int>**)ThisPtr)[115](ThisPtr, MarshalInspectable<object>.GetAbi(__element), &__retval));
                global::System.GC.KeepAlive(_obj);
                return __retval != 0;
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__element);
            }
        }

        internal static unsafe void SetHistoricalForms(IObjectReference _obj, global::Microsoft.UI.Xaml.DependencyObject element, bool value)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __element = default;
            try
            {
                __element = global::ABI.Microsoft.UI.Xaml.DependencyObject.CreateMarshaler2(element);
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, byte, int>**)ThisPtr)[116](ThisPtr, MarshalInspectable<object>.GetAbi(__element), (byte)(value ? 1 : 0)));
                global::System.GC.KeepAlive(_obj);
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__element);
            }
        }

        internal static unsafe global::Microsoft.UI.Xaml.FontFraction GetFraction(IObjectReference _obj, global::Microsoft.UI.Xaml.DependencyObject element)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __element = default;
            global::Microsoft.UI.Xaml.FontFraction __retval = default;
            try
            {
                __element = global::ABI.Microsoft.UI.Xaml.DependencyObject.CreateMarshaler2(element);
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, global::Microsoft.UI.Xaml.FontFraction*, int>**)ThisPtr)[118](ThisPtr, MarshalInspectable<object>.GetAbi(__element), &__retval));
                global::System.GC.KeepAlive(_obj);
                return __retval;
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__element);
            }
        }

        internal static unsafe void SetFraction(IObjectReference _obj, global::Microsoft.UI.Xaml.DependencyObject element, global::Microsoft.UI.Xaml.FontFraction value)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __element = default;
            try
            {
                __element = global::ABI.Microsoft.UI.Xaml.DependencyObject.CreateMarshaler2(element);
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, global::Microsoft.UI.Xaml.FontFraction, int>**)ThisPtr)[119](ThisPtr, MarshalInspectable<object>.GetAbi(__element), value));
                global::System.GC.KeepAlive(_obj);
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__element);
            }
        }

        internal static unsafe global::Microsoft.UI.Xaml.FontNumeralStyle GetNumeralStyle(IObjectReference _obj, global::Microsoft.UI.Xaml.DependencyObject element)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __element = default;
            global::Microsoft.UI.Xaml.FontNumeralStyle __retval = default;
            try
            {
                __element = global::ABI.Microsoft.UI.Xaml.DependencyObject.CreateMarshaler2(element);
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, global::Microsoft.UI.Xaml.FontNumeralStyle*, int>**)ThisPtr)[121](ThisPtr, MarshalInspectable<object>.GetAbi(__element), &__retval));
                global::System.GC.KeepAlive(_obj);
                return __retval;
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__element);
            }
        }

        internal static unsafe void SetNumeralStyle(IObjectReference _obj, global::Microsoft.UI.Xaml.DependencyObject element, global::Microsoft.UI.Xaml.FontNumeralStyle value)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __element = default;
            try
            {
                __element = global::ABI.Microsoft.UI.Xaml.DependencyObject.CreateMarshaler2(element);
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, global::Microsoft.UI.Xaml.FontNumeralStyle, int>**)ThisPtr)[122](ThisPtr, MarshalInspectable<object>.GetAbi(__element), value));
                global::System.GC.KeepAlive(_obj);
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__element);
            }
        }

        internal static unsafe global::Microsoft.UI.Xaml.FontNumeralAlignment GetNumeralAlignment(IObjectReference _obj, global::Microsoft.UI.Xaml.DependencyObject element)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __element = default;
            global::Microsoft.UI.Xaml.FontNumeralAlignment __retval = default;
            try
            {
                __element = global::ABI.Microsoft.UI.Xaml.DependencyObject.CreateMarshaler2(element);
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, global::Microsoft.UI.Xaml.FontNumeralAlignment*, int>**)ThisPtr)[124](ThisPtr, MarshalInspectable<object>.GetAbi(__element), &__retval));
                global::System.GC.KeepAlive(_obj);
                return __retval;
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__element);
            }
        }

        internal static unsafe void SetNumeralAlignment(IObjectReference _obj, global::Microsoft.UI.Xaml.DependencyObject element, global::Microsoft.UI.Xaml.FontNumeralAlignment value)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __element = default;
            try
            {
                __element = global::ABI.Microsoft.UI.Xaml.DependencyObject.CreateMarshaler2(element);
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, global::Microsoft.UI.Xaml.FontNumeralAlignment, int>**)ThisPtr)[125](ThisPtr, MarshalInspectable<object>.GetAbi(__element), value));
                global::System.GC.KeepAlive(_obj);
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__element);
            }
        }

        internal static unsafe bool GetSlashedZero(IObjectReference _obj, global::Microsoft.UI.Xaml.DependencyObject element)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __element = default;
            byte __retval = default;
            try
            {
                __element = global::ABI.Microsoft.UI.Xaml.DependencyObject.CreateMarshaler2(element);
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, byte*, int>**)ThisPtr)[127](ThisPtr, MarshalInspectable<object>.GetAbi(__element), &__retval));
                global::System.GC.KeepAlive(_obj);
                return __retval != 0;
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__element);
            }
        }

        internal static unsafe void SetSlashedZero(IObjectReference _obj, global::Microsoft.UI.Xaml.DependencyObject element, bool value)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __element = default;
            try
            {
                __element = global::ABI.Microsoft.UI.Xaml.DependencyObject.CreateMarshaler2(element);
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, byte, int>**)ThisPtr)[128](ThisPtr, MarshalInspectable<object>.GetAbi(__element), (byte)(value ? 1 : 0)));
                global::System.GC.KeepAlive(_obj);
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__element);
            }
        }

        internal static unsafe bool GetMathematicalGreek(IObjectReference _obj, global::Microsoft.UI.Xaml.DependencyObject element)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __element = default;
            byte __retval = default;
            try
            {
                __element = global::ABI.Microsoft.UI.Xaml.DependencyObject.CreateMarshaler2(element);
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, byte*, int>**)ThisPtr)[130](ThisPtr, MarshalInspectable<object>.GetAbi(__element), &__retval));
                global::System.GC.KeepAlive(_obj);
                return __retval != 0;
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__element);
            }
        }

        internal static unsafe void SetMathematicalGreek(IObjectReference _obj, global::Microsoft.UI.Xaml.DependencyObject element, bool value)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __element = default;
            try
            {
                __element = global::ABI.Microsoft.UI.Xaml.DependencyObject.CreateMarshaler2(element);
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, byte, int>**)ThisPtr)[131](ThisPtr, MarshalInspectable<object>.GetAbi(__element), (byte)(value ? 1 : 0)));
                global::System.GC.KeepAlive(_obj);
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__element);
            }
        }

        internal static unsafe global::Microsoft.UI.Xaml.FontVariants GetVariants(IObjectReference _obj, global::Microsoft.UI.Xaml.DependencyObject element)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __element = default;
            global::Microsoft.UI.Xaml.FontVariants __retval = default;
            try
            {
                __element = global::ABI.Microsoft.UI.Xaml.DependencyObject.CreateMarshaler2(element);
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, global::Microsoft.UI.Xaml.FontVariants*, int>**)ThisPtr)[133](ThisPtr, MarshalInspectable<object>.GetAbi(__element), &__retval));
                global::System.GC.KeepAlive(_obj);
                return __retval;
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__element);
            }
        }

        internal static unsafe void SetVariants(IObjectReference _obj, global::Microsoft.UI.Xaml.DependencyObject element, global::Microsoft.UI.Xaml.FontVariants value)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __element = default;
            try
            {
                __element = global::ABI.Microsoft.UI.Xaml.DependencyObject.CreateMarshaler2(element);
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, global::Microsoft.UI.Xaml.FontVariants, int>**)ThisPtr)[134](ThisPtr, MarshalInspectable<object>.GetAbi(__element), value));
                global::System.GC.KeepAlive(_obj);
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__element);
            }
        }
        internal static unsafe global::Microsoft.UI.Xaml.DependencyProperty get_AnnotationAlternatesProperty(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[6](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Xaml.DependencyProperty.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.UI.Xaml.DependencyProperty.DisposeAbi(__retval);
            }
        }

        internal static unsafe global::Microsoft.UI.Xaml.DependencyProperty get_CapitalSpacingProperty(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[105](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Xaml.DependencyProperty.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.UI.Xaml.DependencyProperty.DisposeAbi(__retval);
            }
        }

        internal static unsafe global::Microsoft.UI.Xaml.DependencyProperty get_CapitalsProperty(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[102](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Xaml.DependencyProperty.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.UI.Xaml.DependencyProperty.DisposeAbi(__retval);
            }
        }

        internal static unsafe global::Microsoft.UI.Xaml.DependencyProperty get_CaseSensitiveFormsProperty(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[111](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Xaml.DependencyProperty.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.UI.Xaml.DependencyProperty.DisposeAbi(__retval);
            }
        }

        internal static unsafe global::Microsoft.UI.Xaml.DependencyProperty get_ContextualAlternatesProperty(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[36](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Xaml.DependencyProperty.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.UI.Xaml.DependencyProperty.DisposeAbi(__retval);
            }
        }

        internal static unsafe global::Microsoft.UI.Xaml.DependencyProperty get_ContextualLigaturesProperty(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[21](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Xaml.DependencyProperty.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.UI.Xaml.DependencyProperty.DisposeAbi(__retval);
            }
        }

        internal static unsafe global::Microsoft.UI.Xaml.DependencyProperty get_ContextualSwashesProperty(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[33](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Xaml.DependencyProperty.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.UI.Xaml.DependencyProperty.DisposeAbi(__retval);
            }
        }

        internal static unsafe global::Microsoft.UI.Xaml.DependencyProperty get_DiscretionaryLigaturesProperty(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[24](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Xaml.DependencyProperty.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.UI.Xaml.DependencyProperty.DisposeAbi(__retval);
            }
        }

        internal static unsafe global::Microsoft.UI.Xaml.DependencyProperty get_EastAsianExpertFormsProperty(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[9](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Xaml.DependencyProperty.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.UI.Xaml.DependencyProperty.DisposeAbi(__retval);
            }
        }

        internal static unsafe global::Microsoft.UI.Xaml.DependencyProperty get_EastAsianLanguageProperty(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[12](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Xaml.DependencyProperty.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.UI.Xaml.DependencyProperty.DisposeAbi(__retval);
            }
        }

        internal static unsafe global::Microsoft.UI.Xaml.DependencyProperty get_EastAsianWidthsProperty(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[15](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Xaml.DependencyProperty.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.UI.Xaml.DependencyProperty.DisposeAbi(__retval);
            }
        }

        internal static unsafe global::Microsoft.UI.Xaml.DependencyProperty get_FractionProperty(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[117](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Xaml.DependencyProperty.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.UI.Xaml.DependencyProperty.DisposeAbi(__retval);
            }
        }

        internal static unsafe global::Microsoft.UI.Xaml.DependencyProperty get_HistoricalFormsProperty(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[114](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Xaml.DependencyProperty.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.UI.Xaml.DependencyProperty.DisposeAbi(__retval);
            }
        }

        internal static unsafe global::Microsoft.UI.Xaml.DependencyProperty get_HistoricalLigaturesProperty(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[27](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Xaml.DependencyProperty.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.UI.Xaml.DependencyProperty.DisposeAbi(__retval);
            }
        }

        internal static unsafe global::Microsoft.UI.Xaml.DependencyProperty get_KerningProperty(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[108](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Xaml.DependencyProperty.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.UI.Xaml.DependencyProperty.DisposeAbi(__retval);
            }
        }

        internal static unsafe global::Microsoft.UI.Xaml.DependencyProperty get_MathematicalGreekProperty(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[129](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Xaml.DependencyProperty.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.UI.Xaml.DependencyProperty.DisposeAbi(__retval);
            }
        }

        internal static unsafe global::Microsoft.UI.Xaml.DependencyProperty get_NumeralAlignmentProperty(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[123](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Xaml.DependencyProperty.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.UI.Xaml.DependencyProperty.DisposeAbi(__retval);
            }
        }

        internal static unsafe global::Microsoft.UI.Xaml.DependencyProperty get_NumeralStyleProperty(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[120](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Xaml.DependencyProperty.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.UI.Xaml.DependencyProperty.DisposeAbi(__retval);
            }
        }

        internal static unsafe global::Microsoft.UI.Xaml.DependencyProperty get_SlashedZeroProperty(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[126](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Xaml.DependencyProperty.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.UI.Xaml.DependencyProperty.DisposeAbi(__retval);
            }
        }

        internal static unsafe global::Microsoft.UI.Xaml.DependencyProperty get_StandardLigaturesProperty(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[18](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Xaml.DependencyProperty.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.UI.Xaml.DependencyProperty.DisposeAbi(__retval);
            }
        }

        internal static unsafe global::Microsoft.UI.Xaml.DependencyProperty get_StandardSwashesProperty(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[30](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Xaml.DependencyProperty.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.UI.Xaml.DependencyProperty.DisposeAbi(__retval);
            }
        }

        internal static unsafe global::Microsoft.UI.Xaml.DependencyProperty get_StylisticAlternatesProperty(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[39](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Xaml.DependencyProperty.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.UI.Xaml.DependencyProperty.DisposeAbi(__retval);
            }
        }

        internal static unsafe global::Microsoft.UI.Xaml.DependencyProperty get_StylisticSet10Property(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[69](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Xaml.DependencyProperty.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.UI.Xaml.DependencyProperty.DisposeAbi(__retval);
            }
        }

        internal static unsafe global::Microsoft.UI.Xaml.DependencyProperty get_StylisticSet11Property(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[72](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Xaml.DependencyProperty.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.UI.Xaml.DependencyProperty.DisposeAbi(__retval);
            }
        }

        internal static unsafe global::Microsoft.UI.Xaml.DependencyProperty get_StylisticSet12Property(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[75](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Xaml.DependencyProperty.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.UI.Xaml.DependencyProperty.DisposeAbi(__retval);
            }
        }

        internal static unsafe global::Microsoft.UI.Xaml.DependencyProperty get_StylisticSet13Property(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[78](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Xaml.DependencyProperty.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.UI.Xaml.DependencyProperty.DisposeAbi(__retval);
            }
        }

        internal static unsafe global::Microsoft.UI.Xaml.DependencyProperty get_StylisticSet14Property(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[81](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Xaml.DependencyProperty.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.UI.Xaml.DependencyProperty.DisposeAbi(__retval);
            }
        }

        internal static unsafe global::Microsoft.UI.Xaml.DependencyProperty get_StylisticSet15Property(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[84](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Xaml.DependencyProperty.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.UI.Xaml.DependencyProperty.DisposeAbi(__retval);
            }
        }

        internal static unsafe global::Microsoft.UI.Xaml.DependencyProperty get_StylisticSet16Property(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[87](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Xaml.DependencyProperty.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.UI.Xaml.DependencyProperty.DisposeAbi(__retval);
            }
        }

        internal static unsafe global::Microsoft.UI.Xaml.DependencyProperty get_StylisticSet17Property(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[90](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Xaml.DependencyProperty.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.UI.Xaml.DependencyProperty.DisposeAbi(__retval);
            }
        }

        internal static unsafe global::Microsoft.UI.Xaml.DependencyProperty get_StylisticSet18Property(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[93](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Xaml.DependencyProperty.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.UI.Xaml.DependencyProperty.DisposeAbi(__retval);
            }
        }

        internal static unsafe global::Microsoft.UI.Xaml.DependencyProperty get_StylisticSet19Property(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[96](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Xaml.DependencyProperty.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.UI.Xaml.DependencyProperty.DisposeAbi(__retval);
            }
        }

        internal static unsafe global::Microsoft.UI.Xaml.DependencyProperty get_StylisticSet1Property(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[42](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Xaml.DependencyProperty.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.UI.Xaml.DependencyProperty.DisposeAbi(__retval);
            }
        }

        internal static unsafe global::Microsoft.UI.Xaml.DependencyProperty get_StylisticSet20Property(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[99](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Xaml.DependencyProperty.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.UI.Xaml.DependencyProperty.DisposeAbi(__retval);
            }
        }

        internal static unsafe global::Microsoft.UI.Xaml.DependencyProperty get_StylisticSet2Property(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[45](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Xaml.DependencyProperty.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.UI.Xaml.DependencyProperty.DisposeAbi(__retval);
            }
        }

        internal static unsafe global::Microsoft.UI.Xaml.DependencyProperty get_StylisticSet3Property(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[48](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Xaml.DependencyProperty.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.UI.Xaml.DependencyProperty.DisposeAbi(__retval);
            }
        }

        internal static unsafe global::Microsoft.UI.Xaml.DependencyProperty get_StylisticSet4Property(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[51](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Xaml.DependencyProperty.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.UI.Xaml.DependencyProperty.DisposeAbi(__retval);
            }
        }

        internal static unsafe global::Microsoft.UI.Xaml.DependencyProperty get_StylisticSet5Property(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[54](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Xaml.DependencyProperty.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.UI.Xaml.DependencyProperty.DisposeAbi(__retval);
            }
        }

        internal static unsafe global::Microsoft.UI.Xaml.DependencyProperty get_StylisticSet6Property(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[57](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Xaml.DependencyProperty.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.UI.Xaml.DependencyProperty.DisposeAbi(__retval);
            }
        }

        internal static unsafe global::Microsoft.UI.Xaml.DependencyProperty get_StylisticSet7Property(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[60](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Xaml.DependencyProperty.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.UI.Xaml.DependencyProperty.DisposeAbi(__retval);
            }
        }

        internal static unsafe global::Microsoft.UI.Xaml.DependencyProperty get_StylisticSet8Property(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[63](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Xaml.DependencyProperty.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.UI.Xaml.DependencyProperty.DisposeAbi(__retval);
            }
        }

        internal static unsafe global::Microsoft.UI.Xaml.DependencyProperty get_StylisticSet9Property(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[66](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Xaml.DependencyProperty.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.UI.Xaml.DependencyProperty.DisposeAbi(__retval);
            }
        }

        internal static unsafe global::Microsoft.UI.Xaml.DependencyProperty get_VariantsProperty(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[132](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Xaml.DependencyProperty.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.UI.Xaml.DependencyProperty.DisposeAbi(__retval);
            }
        }



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0x35, 0x45, 0xFE, 0x55, 0x25, 0x21, 0x3A, 0x53, 0xAD, 0xA8, 0x27, 0xBE, 0x2B, 0x9E, 0x11, 0x93 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("55FE4535-2125-533A-ADA8-27BE2B9E1193")]
    internal interface ITypographyStatics : global::Microsoft.UI.Xaml.Documents.ITypographyStatics
    {
    }
    internal static class IUnderlineMethods
    {



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0x6E, 0xEC, 0xAA, 0x68, 0x71, 0xEA, 0xD2, 0x5E, 0xB8, 0x3E, 0x91, 0x68, 0x4B, 0x25, 0xEF, 0xB9 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("68AAEC6E-EA71-5ED2-B83E-91684B25EFB9")]
    internal interface IUnderline : global::Microsoft.UI.Xaml.Documents.IUnderline
    {
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    public struct Inline
    {

        public static IObjectReference CreateMarshaler(global::Microsoft.UI.Xaml.Documents.Inline obj) => obj is null ? null : MarshalInspectable<global::Microsoft.UI.Xaml.Documents.Inline>.CreateMarshaler<IUnknownVftbl>(obj, global::ABI.Microsoft.UI.Xaml.Documents.IInlineMethods.IID);
        public static ObjectReferenceValue CreateMarshaler2(global::Microsoft.UI.Xaml.Documents.Inline obj) => MarshalInspectable<object>.CreateMarshaler2(obj, global::ABI.Microsoft.UI.Xaml.Documents.IInlineMethods.IID);
        public static IntPtr GetAbi(IObjectReference value) => value is null ? IntPtr.Zero : MarshalInterfaceHelper<object>.GetAbi(value);
        public static global::Microsoft.UI.Xaml.Documents.Inline FromAbi(IntPtr thisPtr) => global::Microsoft.UI.Xaml.Documents.Inline.FromAbi(thisPtr);
        public static IntPtr FromManaged(global::Microsoft.UI.Xaml.Documents.Inline obj) => obj is null ? IntPtr.Zero : CreateMarshaler2(obj).Detach();
        public static unsafe MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Documents.Inline>.MarshalerArray CreateMarshalerArray(global::Microsoft.UI.Xaml.Documents.Inline[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Documents.Inline>.CreateMarshalerArray2(array, (o) => CreateMarshaler2(o));
        public static (int length, IntPtr data) GetAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Documents.Inline>.GetAbiArray(box);
        public static unsafe global::Microsoft.UI.Xaml.Documents.Inline[] FromAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Documents.Inline>.FromAbiArray(box, FromAbi);
        public static void CopyAbiArray(global::Microsoft.UI.Xaml.Documents.Inline[] array, object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Documents.Inline>.CopyAbiArray(array, box, FromAbi);
        public static (int length, IntPtr data) FromManagedArray(global::Microsoft.UI.Xaml.Documents.Inline[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Documents.Inline>.FromManagedArray(array, (o) => FromManaged(o));
        public static void DisposeMarshaler(IObjectReference value) => MarshalInspectable<object>.DisposeMarshaler(value);
        public static void DisposeMarshalerArray(MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Documents.Inline>.MarshalerArray array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Documents.Inline>.DisposeMarshalerArray(array);
        public static void DisposeAbi(IntPtr abi) => MarshalInspectable<object>.DisposeAbi(abi);
        public static unsafe void DisposeAbiArray(object box) => MarshalInspectable<object>.DisposeAbiArray(box);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    internal sealed class InlineRcwFactoryAttribute : global::WinRT.WinRTImplementationTypeRcwFactoryAttribute
    {
        public override object CreateInstance(global::WinRT.IInspectable inspectable)
            => new global::Microsoft.UI.Xaml.Documents.Inline(inspectable.ObjRef);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    public struct InlineCollection
    {

        public static IObjectReference CreateMarshaler(global::Microsoft.UI.Xaml.Documents.InlineCollection obj) => obj is null ? null : MarshalInterface<global::System.Collections.Generic.IList<global::Microsoft.UI.Xaml.Documents.Inline>>.CreateMarshaler(obj);
        public static ObjectReferenceValue CreateMarshaler2(global::Microsoft.UI.Xaml.Documents.InlineCollection obj) => MarshalInterface<global::System.Collections.Generic.IList<global::Microsoft.UI.Xaml.Documents.Inline>>.CreateMarshaler2(obj, global::ABI.System.Collections.Generic.IListMethods<global::Microsoft.UI.Xaml.Documents.Inline>.IID);
        public static IntPtr GetAbi(IObjectReference value) => value is null ? IntPtr.Zero : MarshalInterfaceHelper<object>.GetAbi(value);
        public static global::Microsoft.UI.Xaml.Documents.InlineCollection FromAbi(IntPtr thisPtr) => global::Microsoft.UI.Xaml.Documents.InlineCollection.FromAbi(thisPtr);
        public static IntPtr FromManaged(global::Microsoft.UI.Xaml.Documents.InlineCollection obj) => obj is null ? IntPtr.Zero : CreateMarshaler2(obj).Detach();
        public static unsafe MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Documents.InlineCollection>.MarshalerArray CreateMarshalerArray(global::Microsoft.UI.Xaml.Documents.InlineCollection[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Documents.InlineCollection>.CreateMarshalerArray2(array, (o) => CreateMarshaler2(o));
        public static (int length, IntPtr data) GetAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Documents.InlineCollection>.GetAbiArray(box);
        public static unsafe global::Microsoft.UI.Xaml.Documents.InlineCollection[] FromAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Documents.InlineCollection>.FromAbiArray(box, FromAbi);
        public static void CopyAbiArray(global::Microsoft.UI.Xaml.Documents.InlineCollection[] array, object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Documents.InlineCollection>.CopyAbiArray(array, box, FromAbi);
        public static (int length, IntPtr data) FromManagedArray(global::Microsoft.UI.Xaml.Documents.InlineCollection[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Documents.InlineCollection>.FromManagedArray(array, (o) => FromManaged(o));
        public static void DisposeMarshaler(IObjectReference value) => MarshalInspectable<object>.DisposeMarshaler(value);
        public static void DisposeMarshalerArray(MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Documents.InlineCollection>.MarshalerArray array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Documents.InlineCollection>.DisposeMarshalerArray(array);
        public static void DisposeAbi(IntPtr abi) => MarshalInspectable<object>.DisposeAbi(abi);
        public static unsafe void DisposeAbiArray(object box) => MarshalInspectable<object>.DisposeAbiArray(box);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    internal sealed class InlineCollectionRcwFactoryAttribute : global::WinRT.WinRTImplementationTypeRcwFactoryAttribute
    {
        public override object CreateInstance(global::WinRT.IInspectable inspectable)
            => new global::Microsoft.UI.Xaml.Documents.InlineCollection(inspectable.ObjRef);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    public struct InlineUIContainer
    {

        public static IObjectReference CreateMarshaler(global::Microsoft.UI.Xaml.Documents.InlineUIContainer obj) => obj is null ? null : MarshalInspectable<global::Microsoft.UI.Xaml.Documents.InlineUIContainer>.CreateMarshaler<IUnknownVftbl>(obj, global::ABI.Microsoft.UI.Xaml.Documents.IInlineUIContainerMethods.IID);
        public static ObjectReferenceValue CreateMarshaler2(global::Microsoft.UI.Xaml.Documents.InlineUIContainer obj) => MarshalInspectable<object>.CreateMarshaler2(obj, global::ABI.Microsoft.UI.Xaml.Documents.IInlineUIContainerMethods.IID);
        public static IntPtr GetAbi(IObjectReference value) => value is null ? IntPtr.Zero : MarshalInterfaceHelper<object>.GetAbi(value);
        public static global::Microsoft.UI.Xaml.Documents.InlineUIContainer FromAbi(IntPtr thisPtr) => global::Microsoft.UI.Xaml.Documents.InlineUIContainer.FromAbi(thisPtr);
        public static IntPtr FromManaged(global::Microsoft.UI.Xaml.Documents.InlineUIContainer obj) => obj is null ? IntPtr.Zero : CreateMarshaler2(obj).Detach();
        public static unsafe MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Documents.InlineUIContainer>.MarshalerArray CreateMarshalerArray(global::Microsoft.UI.Xaml.Documents.InlineUIContainer[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Documents.InlineUIContainer>.CreateMarshalerArray2(array, (o) => CreateMarshaler2(o));
        public static (int length, IntPtr data) GetAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Documents.InlineUIContainer>.GetAbiArray(box);
        public static unsafe global::Microsoft.UI.Xaml.Documents.InlineUIContainer[] FromAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Documents.InlineUIContainer>.FromAbiArray(box, FromAbi);
        public static void CopyAbiArray(global::Microsoft.UI.Xaml.Documents.InlineUIContainer[] array, object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Documents.InlineUIContainer>.CopyAbiArray(array, box, FromAbi);
        public static (int length, IntPtr data) FromManagedArray(global::Microsoft.UI.Xaml.Documents.InlineUIContainer[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Documents.InlineUIContainer>.FromManagedArray(array, (o) => FromManaged(o));
        public static void DisposeMarshaler(IObjectReference value) => MarshalInspectable<object>.DisposeMarshaler(value);
        public static void DisposeMarshalerArray(MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Documents.InlineUIContainer>.MarshalerArray array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Documents.InlineUIContainer>.DisposeMarshalerArray(array);
        public static void DisposeAbi(IntPtr abi) => MarshalInspectable<object>.DisposeAbi(abi);
        public static unsafe void DisposeAbiArray(object box) => MarshalInspectable<object>.DisposeAbiArray(box);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    internal sealed class InlineUIContainerRcwFactoryAttribute : global::WinRT.WinRTImplementationTypeRcwFactoryAttribute
    {
        public override object CreateInstance(global::WinRT.IInspectable inspectable)
            => new global::Microsoft.UI.Xaml.Documents.InlineUIContainer(inspectable.ObjRef);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    public struct Italic
    {

        public static IObjectReference CreateMarshaler(global::Microsoft.UI.Xaml.Documents.Italic obj) => obj is null ? null : MarshalInspectable<global::Microsoft.UI.Xaml.Documents.Italic>.CreateMarshaler<IUnknownVftbl>(obj, global::ABI.Microsoft.UI.Xaml.Documents.IItalicMethods.IID);
        public static ObjectReferenceValue CreateMarshaler2(global::Microsoft.UI.Xaml.Documents.Italic obj) => MarshalInspectable<object>.CreateMarshaler2(obj, global::ABI.Microsoft.UI.Xaml.Documents.IItalicMethods.IID);
        public static IntPtr GetAbi(IObjectReference value) => value is null ? IntPtr.Zero : MarshalInterfaceHelper<object>.GetAbi(value);
        public static global::Microsoft.UI.Xaml.Documents.Italic FromAbi(IntPtr thisPtr) => global::Microsoft.UI.Xaml.Documents.Italic.FromAbi(thisPtr);
        public static IntPtr FromManaged(global::Microsoft.UI.Xaml.Documents.Italic obj) => obj is null ? IntPtr.Zero : CreateMarshaler2(obj).Detach();
        public static unsafe MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Documents.Italic>.MarshalerArray CreateMarshalerArray(global::Microsoft.UI.Xaml.Documents.Italic[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Documents.Italic>.CreateMarshalerArray2(array, (o) => CreateMarshaler2(o));
        public static (int length, IntPtr data) GetAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Documents.Italic>.GetAbiArray(box);
        public static unsafe global::Microsoft.UI.Xaml.Documents.Italic[] FromAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Documents.Italic>.FromAbiArray(box, FromAbi);
        public static void CopyAbiArray(global::Microsoft.UI.Xaml.Documents.Italic[] array, object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Documents.Italic>.CopyAbiArray(array, box, FromAbi);
        public static (int length, IntPtr data) FromManagedArray(global::Microsoft.UI.Xaml.Documents.Italic[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Documents.Italic>.FromManagedArray(array, (o) => FromManaged(o));
        public static void DisposeMarshaler(IObjectReference value) => MarshalInspectable<object>.DisposeMarshaler(value);
        public static void DisposeMarshalerArray(MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Documents.Italic>.MarshalerArray array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Documents.Italic>.DisposeMarshalerArray(array);
        public static void DisposeAbi(IntPtr abi) => MarshalInspectable<object>.DisposeAbi(abi);
        public static unsafe void DisposeAbiArray(object box) => MarshalInspectable<object>.DisposeAbiArray(box);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    internal sealed class ItalicRcwFactoryAttribute : global::WinRT.WinRTImplementationTypeRcwFactoryAttribute
    {
        public override object CreateInstance(global::WinRT.IInspectable inspectable)
            => new global::Microsoft.UI.Xaml.Documents.Italic(inspectable.ObjRef);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    public struct LineBreak
    {

        public static IObjectReference CreateMarshaler(global::Microsoft.UI.Xaml.Documents.LineBreak obj) => obj is null ? null : MarshalInspectable<global::Microsoft.UI.Xaml.Documents.LineBreak>.CreateMarshaler<IUnknownVftbl>(obj, global::ABI.Microsoft.UI.Xaml.Documents.ILineBreakMethods.IID);
        public static ObjectReferenceValue CreateMarshaler2(global::Microsoft.UI.Xaml.Documents.LineBreak obj) => MarshalInspectable<object>.CreateMarshaler2(obj, global::ABI.Microsoft.UI.Xaml.Documents.ILineBreakMethods.IID);
        public static IntPtr GetAbi(IObjectReference value) => value is null ? IntPtr.Zero : MarshalInterfaceHelper<object>.GetAbi(value);
        public static global::Microsoft.UI.Xaml.Documents.LineBreak FromAbi(IntPtr thisPtr) => global::Microsoft.UI.Xaml.Documents.LineBreak.FromAbi(thisPtr);
        public static IntPtr FromManaged(global::Microsoft.UI.Xaml.Documents.LineBreak obj) => obj is null ? IntPtr.Zero : CreateMarshaler2(obj).Detach();
        public static unsafe MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Documents.LineBreak>.MarshalerArray CreateMarshalerArray(global::Microsoft.UI.Xaml.Documents.LineBreak[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Documents.LineBreak>.CreateMarshalerArray2(array, (o) => CreateMarshaler2(o));
        public static (int length, IntPtr data) GetAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Documents.LineBreak>.GetAbiArray(box);
        public static unsafe global::Microsoft.UI.Xaml.Documents.LineBreak[] FromAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Documents.LineBreak>.FromAbiArray(box, FromAbi);
        public static void CopyAbiArray(global::Microsoft.UI.Xaml.Documents.LineBreak[] array, object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Documents.LineBreak>.CopyAbiArray(array, box, FromAbi);
        public static (int length, IntPtr data) FromManagedArray(global::Microsoft.UI.Xaml.Documents.LineBreak[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Documents.LineBreak>.FromManagedArray(array, (o) => FromManaged(o));
        public static void DisposeMarshaler(IObjectReference value) => MarshalInspectable<object>.DisposeMarshaler(value);
        public static void DisposeMarshalerArray(MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Documents.LineBreak>.MarshalerArray array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Documents.LineBreak>.DisposeMarshalerArray(array);
        public static void DisposeAbi(IntPtr abi) => MarshalInspectable<object>.DisposeAbi(abi);
        public static unsafe void DisposeAbiArray(object box) => MarshalInspectable<object>.DisposeAbiArray(box);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    internal sealed class LineBreakRcwFactoryAttribute : global::WinRT.WinRTImplementationTypeRcwFactoryAttribute
    {
        public override object CreateInstance(global::WinRT.IInspectable inspectable)
            => new global::Microsoft.UI.Xaml.Documents.LineBreak(inspectable.ObjRef);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    public struct Paragraph
    {

        public static IObjectReference CreateMarshaler(global::Microsoft.UI.Xaml.Documents.Paragraph obj) => obj is null ? null : MarshalInspectable<global::Microsoft.UI.Xaml.Documents.Paragraph>.CreateMarshaler<IUnknownVftbl>(obj, global::ABI.Microsoft.UI.Xaml.Documents.IParagraphMethods.IID);
        public static ObjectReferenceValue CreateMarshaler2(global::Microsoft.UI.Xaml.Documents.Paragraph obj) => MarshalInspectable<object>.CreateMarshaler2(obj, global::ABI.Microsoft.UI.Xaml.Documents.IParagraphMethods.IID);
        public static IntPtr GetAbi(IObjectReference value) => value is null ? IntPtr.Zero : MarshalInterfaceHelper<object>.GetAbi(value);
        public static global::Microsoft.UI.Xaml.Documents.Paragraph FromAbi(IntPtr thisPtr) => global::Microsoft.UI.Xaml.Documents.Paragraph.FromAbi(thisPtr);
        public static IntPtr FromManaged(global::Microsoft.UI.Xaml.Documents.Paragraph obj) => obj is null ? IntPtr.Zero : CreateMarshaler2(obj).Detach();
        public static unsafe MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Documents.Paragraph>.MarshalerArray CreateMarshalerArray(global::Microsoft.UI.Xaml.Documents.Paragraph[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Documents.Paragraph>.CreateMarshalerArray2(array, (o) => CreateMarshaler2(o));
        public static (int length, IntPtr data) GetAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Documents.Paragraph>.GetAbiArray(box);
        public static unsafe global::Microsoft.UI.Xaml.Documents.Paragraph[] FromAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Documents.Paragraph>.FromAbiArray(box, FromAbi);
        public static void CopyAbiArray(global::Microsoft.UI.Xaml.Documents.Paragraph[] array, object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Documents.Paragraph>.CopyAbiArray(array, box, FromAbi);
        public static (int length, IntPtr data) FromManagedArray(global::Microsoft.UI.Xaml.Documents.Paragraph[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Documents.Paragraph>.FromManagedArray(array, (o) => FromManaged(o));
        public static void DisposeMarshaler(IObjectReference value) => MarshalInspectable<object>.DisposeMarshaler(value);
        public static void DisposeMarshalerArray(MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Documents.Paragraph>.MarshalerArray array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Documents.Paragraph>.DisposeMarshalerArray(array);
        public static void DisposeAbi(IntPtr abi) => MarshalInspectable<object>.DisposeAbi(abi);
        public static unsafe void DisposeAbiArray(object box) => MarshalInspectable<object>.DisposeAbiArray(box);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    internal sealed class ParagraphRcwFactoryAttribute : global::WinRT.WinRTImplementationTypeRcwFactoryAttribute
    {
        public override object CreateInstance(global::WinRT.IInspectable inspectable)
            => new global::Microsoft.UI.Xaml.Documents.Paragraph(inspectable.ObjRef);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    public struct Run
    {

        public static IObjectReference CreateMarshaler(global::Microsoft.UI.Xaml.Documents.Run obj) => obj is null ? null : MarshalInspectable<global::Microsoft.UI.Xaml.Documents.Run>.CreateMarshaler<IUnknownVftbl>(obj, global::ABI.Microsoft.UI.Xaml.Documents.IRunMethods.IID);
        public static ObjectReferenceValue CreateMarshaler2(global::Microsoft.UI.Xaml.Documents.Run obj) => MarshalInspectable<object>.CreateMarshaler2(obj, global::ABI.Microsoft.UI.Xaml.Documents.IRunMethods.IID);
        public static IntPtr GetAbi(IObjectReference value) => value is null ? IntPtr.Zero : MarshalInterfaceHelper<object>.GetAbi(value);
        public static global::Microsoft.UI.Xaml.Documents.Run FromAbi(IntPtr thisPtr) => global::Microsoft.UI.Xaml.Documents.Run.FromAbi(thisPtr);
        public static IntPtr FromManaged(global::Microsoft.UI.Xaml.Documents.Run obj) => obj is null ? IntPtr.Zero : CreateMarshaler2(obj).Detach();
        public static unsafe MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Documents.Run>.MarshalerArray CreateMarshalerArray(global::Microsoft.UI.Xaml.Documents.Run[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Documents.Run>.CreateMarshalerArray2(array, (o) => CreateMarshaler2(o));
        public static (int length, IntPtr data) GetAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Documents.Run>.GetAbiArray(box);
        public static unsafe global::Microsoft.UI.Xaml.Documents.Run[] FromAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Documents.Run>.FromAbiArray(box, FromAbi);
        public static void CopyAbiArray(global::Microsoft.UI.Xaml.Documents.Run[] array, object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Documents.Run>.CopyAbiArray(array, box, FromAbi);
        public static (int length, IntPtr data) FromManagedArray(global::Microsoft.UI.Xaml.Documents.Run[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Documents.Run>.FromManagedArray(array, (o) => FromManaged(o));
        public static void DisposeMarshaler(IObjectReference value) => MarshalInspectable<object>.DisposeMarshaler(value);
        public static void DisposeMarshalerArray(MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Documents.Run>.MarshalerArray array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Documents.Run>.DisposeMarshalerArray(array);
        public static void DisposeAbi(IntPtr abi) => MarshalInspectable<object>.DisposeAbi(abi);
        public static unsafe void DisposeAbiArray(object box) => MarshalInspectable<object>.DisposeAbiArray(box);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    internal sealed class RunRcwFactoryAttribute : global::WinRT.WinRTImplementationTypeRcwFactoryAttribute
    {
        public override object CreateInstance(global::WinRT.IInspectable inspectable)
            => new global::Microsoft.UI.Xaml.Documents.Run(inspectable.ObjRef);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    public struct Span
    {

        public static IObjectReference CreateMarshaler(global::Microsoft.UI.Xaml.Documents.Span obj) => obj is null ? null : MarshalInspectable<global::Microsoft.UI.Xaml.Documents.Span>.CreateMarshaler<IUnknownVftbl>(obj, global::ABI.Microsoft.UI.Xaml.Documents.ISpanMethods.IID);
        public static ObjectReferenceValue CreateMarshaler2(global::Microsoft.UI.Xaml.Documents.Span obj) => MarshalInspectable<object>.CreateMarshaler2(obj, global::ABI.Microsoft.UI.Xaml.Documents.ISpanMethods.IID);
        public static IntPtr GetAbi(IObjectReference value) => value is null ? IntPtr.Zero : MarshalInterfaceHelper<object>.GetAbi(value);
        public static global::Microsoft.UI.Xaml.Documents.Span FromAbi(IntPtr thisPtr) => global::Microsoft.UI.Xaml.Documents.Span.FromAbi(thisPtr);
        public static IntPtr FromManaged(global::Microsoft.UI.Xaml.Documents.Span obj) => obj is null ? IntPtr.Zero : CreateMarshaler2(obj).Detach();
        public static unsafe MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Documents.Span>.MarshalerArray CreateMarshalerArray(global::Microsoft.UI.Xaml.Documents.Span[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Documents.Span>.CreateMarshalerArray2(array, (o) => CreateMarshaler2(o));
        public static (int length, IntPtr data) GetAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Documents.Span>.GetAbiArray(box);
        public static unsafe global::Microsoft.UI.Xaml.Documents.Span[] FromAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Documents.Span>.FromAbiArray(box, FromAbi);
        public static void CopyAbiArray(global::Microsoft.UI.Xaml.Documents.Span[] array, object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Documents.Span>.CopyAbiArray(array, box, FromAbi);
        public static (int length, IntPtr data) FromManagedArray(global::Microsoft.UI.Xaml.Documents.Span[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Documents.Span>.FromManagedArray(array, (o) => FromManaged(o));
        public static void DisposeMarshaler(IObjectReference value) => MarshalInspectable<object>.DisposeMarshaler(value);
        public static void DisposeMarshalerArray(MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Documents.Span>.MarshalerArray array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Documents.Span>.DisposeMarshalerArray(array);
        public static void DisposeAbi(IntPtr abi) => MarshalInspectable<object>.DisposeAbi(abi);
        public static unsafe void DisposeAbiArray(object box) => MarshalInspectable<object>.DisposeAbiArray(box);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    internal sealed class SpanRcwFactoryAttribute : global::WinRT.WinRTImplementationTypeRcwFactoryAttribute
    {
        public override object CreateInstance(global::WinRT.IInspectable inspectable)
            => new global::Microsoft.UI.Xaml.Documents.Span(inspectable.ObjRef);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    public struct TextElement
    {

        public static IObjectReference CreateMarshaler(global::Microsoft.UI.Xaml.Documents.TextElement obj) => obj is null ? null : MarshalInspectable<global::Microsoft.UI.Xaml.Documents.TextElement>.CreateMarshaler<IUnknownVftbl>(obj, global::ABI.Microsoft.UI.Xaml.Documents.ITextElementMethods.IID);
        public static ObjectReferenceValue CreateMarshaler2(global::Microsoft.UI.Xaml.Documents.TextElement obj) => MarshalInspectable<object>.CreateMarshaler2(obj, global::ABI.Microsoft.UI.Xaml.Documents.ITextElementMethods.IID);
        public static IntPtr GetAbi(IObjectReference value) => value is null ? IntPtr.Zero : MarshalInterfaceHelper<object>.GetAbi(value);
        public static global::Microsoft.UI.Xaml.Documents.TextElement FromAbi(IntPtr thisPtr) => global::Microsoft.UI.Xaml.Documents.TextElement.FromAbi(thisPtr);
        public static IntPtr FromManaged(global::Microsoft.UI.Xaml.Documents.TextElement obj) => obj is null ? IntPtr.Zero : CreateMarshaler2(obj).Detach();
        public static unsafe MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Documents.TextElement>.MarshalerArray CreateMarshalerArray(global::Microsoft.UI.Xaml.Documents.TextElement[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Documents.TextElement>.CreateMarshalerArray2(array, (o) => CreateMarshaler2(o));
        public static (int length, IntPtr data) GetAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Documents.TextElement>.GetAbiArray(box);
        public static unsafe global::Microsoft.UI.Xaml.Documents.TextElement[] FromAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Documents.TextElement>.FromAbiArray(box, FromAbi);
        public static void CopyAbiArray(global::Microsoft.UI.Xaml.Documents.TextElement[] array, object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Documents.TextElement>.CopyAbiArray(array, box, FromAbi);
        public static (int length, IntPtr data) FromManagedArray(global::Microsoft.UI.Xaml.Documents.TextElement[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Documents.TextElement>.FromManagedArray(array, (o) => FromManaged(o));
        public static void DisposeMarshaler(IObjectReference value) => MarshalInspectable<object>.DisposeMarshaler(value);
        public static void DisposeMarshalerArray(MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Documents.TextElement>.MarshalerArray array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Documents.TextElement>.DisposeMarshalerArray(array);
        public static void DisposeAbi(IntPtr abi) => MarshalInspectable<object>.DisposeAbi(abi);
        public static unsafe void DisposeAbiArray(object box) => MarshalInspectable<object>.DisposeAbiArray(box);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    internal sealed class TextElementRcwFactoryAttribute : global::WinRT.WinRTImplementationTypeRcwFactoryAttribute
    {
        public override object CreateInstance(global::WinRT.IInspectable inspectable)
            => new global::Microsoft.UI.Xaml.Documents.TextElement(inspectable.ObjRef);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    public struct TextHighlighter
    {

        public static IObjectReference CreateMarshaler(global::Microsoft.UI.Xaml.Documents.TextHighlighter obj) => obj is null ? null : MarshalInspectable<global::Microsoft.UI.Xaml.Documents.TextHighlighter>.CreateMarshaler<IUnknownVftbl>(obj, global::ABI.Microsoft.UI.Xaml.Documents.ITextHighlighterMethods.IID);
        public static ObjectReferenceValue CreateMarshaler2(global::Microsoft.UI.Xaml.Documents.TextHighlighter obj) => MarshalInspectable<object>.CreateMarshaler2(obj, global::ABI.Microsoft.UI.Xaml.Documents.ITextHighlighterMethods.IID);
        public static IntPtr GetAbi(IObjectReference value) => value is null ? IntPtr.Zero : MarshalInterfaceHelper<object>.GetAbi(value);
        public static global::Microsoft.UI.Xaml.Documents.TextHighlighter FromAbi(IntPtr thisPtr) => global::Microsoft.UI.Xaml.Documents.TextHighlighter.FromAbi(thisPtr);
        public static IntPtr FromManaged(global::Microsoft.UI.Xaml.Documents.TextHighlighter obj) => obj is null ? IntPtr.Zero : CreateMarshaler2(obj).Detach();
        public static unsafe MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Documents.TextHighlighter>.MarshalerArray CreateMarshalerArray(global::Microsoft.UI.Xaml.Documents.TextHighlighter[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Documents.TextHighlighter>.CreateMarshalerArray2(array, (o) => CreateMarshaler2(o));
        public static (int length, IntPtr data) GetAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Documents.TextHighlighter>.GetAbiArray(box);
        public static unsafe global::Microsoft.UI.Xaml.Documents.TextHighlighter[] FromAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Documents.TextHighlighter>.FromAbiArray(box, FromAbi);
        public static void CopyAbiArray(global::Microsoft.UI.Xaml.Documents.TextHighlighter[] array, object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Documents.TextHighlighter>.CopyAbiArray(array, box, FromAbi);
        public static (int length, IntPtr data) FromManagedArray(global::Microsoft.UI.Xaml.Documents.TextHighlighter[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Documents.TextHighlighter>.FromManagedArray(array, (o) => FromManaged(o));
        public static void DisposeMarshaler(IObjectReference value) => MarshalInspectable<object>.DisposeMarshaler(value);
        public static void DisposeMarshalerArray(MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Documents.TextHighlighter>.MarshalerArray array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Documents.TextHighlighter>.DisposeMarshalerArray(array);
        public static void DisposeAbi(IntPtr abi) => MarshalInspectable<object>.DisposeAbi(abi);
        public static unsafe void DisposeAbiArray(object box) => MarshalInspectable<object>.DisposeAbiArray(box);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    internal sealed class TextHighlighterRcwFactoryAttribute : global::WinRT.WinRTImplementationTypeRcwFactoryAttribute
    {
        public override object CreateInstance(global::WinRT.IInspectable inspectable)
            => new global::Microsoft.UI.Xaml.Documents.TextHighlighter(inspectable.ObjRef);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    public struct TextHighlighterBase
    {

        public static IObjectReference CreateMarshaler(global::Microsoft.UI.Xaml.Documents.TextHighlighterBase obj) => obj is null ? null : MarshalInspectable<global::Microsoft.UI.Xaml.Documents.TextHighlighterBase>.CreateMarshaler<IUnknownVftbl>(obj, global::ABI.Microsoft.UI.Xaml.Documents.ITextHighlighterBaseMethods.IID);
        public static ObjectReferenceValue CreateMarshaler2(global::Microsoft.UI.Xaml.Documents.TextHighlighterBase obj) => MarshalInspectable<object>.CreateMarshaler2(obj, global::ABI.Microsoft.UI.Xaml.Documents.ITextHighlighterBaseMethods.IID);
        public static IntPtr GetAbi(IObjectReference value) => value is null ? IntPtr.Zero : MarshalInterfaceHelper<object>.GetAbi(value);
        public static global::Microsoft.UI.Xaml.Documents.TextHighlighterBase FromAbi(IntPtr thisPtr) => global::Microsoft.UI.Xaml.Documents.TextHighlighterBase.FromAbi(thisPtr);
        public static IntPtr FromManaged(global::Microsoft.UI.Xaml.Documents.TextHighlighterBase obj) => obj is null ? IntPtr.Zero : CreateMarshaler2(obj).Detach();
        public static unsafe MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Documents.TextHighlighterBase>.MarshalerArray CreateMarshalerArray(global::Microsoft.UI.Xaml.Documents.TextHighlighterBase[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Documents.TextHighlighterBase>.CreateMarshalerArray2(array, (o) => CreateMarshaler2(o));
        public static (int length, IntPtr data) GetAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Documents.TextHighlighterBase>.GetAbiArray(box);
        public static unsafe global::Microsoft.UI.Xaml.Documents.TextHighlighterBase[] FromAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Documents.TextHighlighterBase>.FromAbiArray(box, FromAbi);
        public static void CopyAbiArray(global::Microsoft.UI.Xaml.Documents.TextHighlighterBase[] array, object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Documents.TextHighlighterBase>.CopyAbiArray(array, box, FromAbi);
        public static (int length, IntPtr data) FromManagedArray(global::Microsoft.UI.Xaml.Documents.TextHighlighterBase[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Documents.TextHighlighterBase>.FromManagedArray(array, (o) => FromManaged(o));
        public static void DisposeMarshaler(IObjectReference value) => MarshalInspectable<object>.DisposeMarshaler(value);
        public static void DisposeMarshalerArray(MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Documents.TextHighlighterBase>.MarshalerArray array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Documents.TextHighlighterBase>.DisposeMarshalerArray(array);
        public static void DisposeAbi(IntPtr abi) => MarshalInspectable<object>.DisposeAbi(abi);
        public static unsafe void DisposeAbiArray(object box) => MarshalInspectable<object>.DisposeAbiArray(box);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    internal sealed class TextHighlighterBaseRcwFactoryAttribute : global::WinRT.WinRTImplementationTypeRcwFactoryAttribute
    {
        public override object CreateInstance(global::WinRT.IInspectable inspectable)
            => new global::Microsoft.UI.Xaml.Documents.TextHighlighterBase(inspectable.ObjRef);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    public struct TextPointer
    {

        public static IObjectReference CreateMarshaler(global::Microsoft.UI.Xaml.Documents.TextPointer obj) => obj is null ? null : MarshalInspectable<global::Microsoft.UI.Xaml.Documents.TextPointer>.CreateMarshaler<IUnknownVftbl>(obj, global::ABI.Microsoft.UI.Xaml.Documents.ITextPointerMethods.IID);
        public static ObjectReferenceValue CreateMarshaler2(global::Microsoft.UI.Xaml.Documents.TextPointer obj) => MarshalInspectable<object>.CreateMarshaler2(obj, global::ABI.Microsoft.UI.Xaml.Documents.ITextPointerMethods.IID);
        public static IntPtr GetAbi(IObjectReference value) => value is null ? IntPtr.Zero : MarshalInterfaceHelper<object>.GetAbi(value);
        public static global::Microsoft.UI.Xaml.Documents.TextPointer FromAbi(IntPtr thisPtr) => global::Microsoft.UI.Xaml.Documents.TextPointer.FromAbi(thisPtr);
        public static IntPtr FromManaged(global::Microsoft.UI.Xaml.Documents.TextPointer obj) => obj is null ? IntPtr.Zero : CreateMarshaler2(obj).Detach();
        public static unsafe MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Documents.TextPointer>.MarshalerArray CreateMarshalerArray(global::Microsoft.UI.Xaml.Documents.TextPointer[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Documents.TextPointer>.CreateMarshalerArray2(array, (o) => CreateMarshaler2(o));
        public static (int length, IntPtr data) GetAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Documents.TextPointer>.GetAbiArray(box);
        public static unsafe global::Microsoft.UI.Xaml.Documents.TextPointer[] FromAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Documents.TextPointer>.FromAbiArray(box, FromAbi);
        public static void CopyAbiArray(global::Microsoft.UI.Xaml.Documents.TextPointer[] array, object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Documents.TextPointer>.CopyAbiArray(array, box, FromAbi);
        public static (int length, IntPtr data) FromManagedArray(global::Microsoft.UI.Xaml.Documents.TextPointer[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Documents.TextPointer>.FromManagedArray(array, (o) => FromManaged(o));
        public static void DisposeMarshaler(IObjectReference value) => MarshalInspectable<object>.DisposeMarshaler(value);
        public static void DisposeMarshalerArray(MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Documents.TextPointer>.MarshalerArray array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Documents.TextPointer>.DisposeMarshalerArray(array);
        public static void DisposeAbi(IntPtr abi) => MarshalInspectable<object>.DisposeAbi(abi);
        public static unsafe void DisposeAbiArray(object box) => MarshalInspectable<object>.DisposeAbiArray(box);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    internal sealed class TextPointerRcwFactoryAttribute : global::WinRT.WinRTImplementationTypeRcwFactoryAttribute
    {
        public override object CreateInstance(global::WinRT.IInspectable inspectable)
            => new global::Microsoft.UI.Xaml.Documents.TextPointer(inspectable.ObjRef);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    public struct Typography
    {

        public static IObjectReference CreateMarshaler(global::Microsoft.UI.Xaml.Documents.Typography obj) => obj is null ? null : MarshalInspectable<global::Microsoft.UI.Xaml.Documents.Typography>.CreateMarshaler<IUnknownVftbl>(obj, global::ABI.Microsoft.UI.Xaml.Documents.ITypographyMethods.IID);
        public static ObjectReferenceValue CreateMarshaler2(global::Microsoft.UI.Xaml.Documents.Typography obj) => MarshalInspectable<object>.CreateMarshaler2(obj, global::ABI.Microsoft.UI.Xaml.Documents.ITypographyMethods.IID);
        public static IntPtr GetAbi(IObjectReference value) => value is null ? IntPtr.Zero : MarshalInterfaceHelper<object>.GetAbi(value);
        public static global::Microsoft.UI.Xaml.Documents.Typography FromAbi(IntPtr thisPtr) => global::Microsoft.UI.Xaml.Documents.Typography.FromAbi(thisPtr);
        public static IntPtr FromManaged(global::Microsoft.UI.Xaml.Documents.Typography obj) => obj is null ? IntPtr.Zero : CreateMarshaler2(obj).Detach();
        public static unsafe MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Documents.Typography>.MarshalerArray CreateMarshalerArray(global::Microsoft.UI.Xaml.Documents.Typography[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Documents.Typography>.CreateMarshalerArray2(array, (o) => CreateMarshaler2(o));
        public static (int length, IntPtr data) GetAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Documents.Typography>.GetAbiArray(box);
        public static unsafe global::Microsoft.UI.Xaml.Documents.Typography[] FromAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Documents.Typography>.FromAbiArray(box, FromAbi);
        public static void CopyAbiArray(global::Microsoft.UI.Xaml.Documents.Typography[] array, object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Documents.Typography>.CopyAbiArray(array, box, FromAbi);
        public static (int length, IntPtr data) FromManagedArray(global::Microsoft.UI.Xaml.Documents.Typography[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Documents.Typography>.FromManagedArray(array, (o) => FromManaged(o));
        public static void DisposeMarshaler(IObjectReference value) => MarshalInspectable<object>.DisposeMarshaler(value);
        public static void DisposeMarshalerArray(MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Documents.Typography>.MarshalerArray array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Documents.Typography>.DisposeMarshalerArray(array);
        public static void DisposeAbi(IntPtr abi) => MarshalInspectable<object>.DisposeAbi(abi);
        public static unsafe void DisposeAbiArray(object box) => MarshalInspectable<object>.DisposeAbiArray(box);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    internal sealed class TypographyRcwFactoryAttribute : global::WinRT.WinRTImplementationTypeRcwFactoryAttribute
    {
        public override object CreateInstance(global::WinRT.IInspectable inspectable)
            => new global::Microsoft.UI.Xaml.Documents.Typography(inspectable.ObjRef);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    public struct Underline
    {

        public static IObjectReference CreateMarshaler(global::Microsoft.UI.Xaml.Documents.Underline obj) => obj is null ? null : MarshalInspectable<global::Microsoft.UI.Xaml.Documents.Underline>.CreateMarshaler<IUnknownVftbl>(obj, global::ABI.Microsoft.UI.Xaml.Documents.IUnderlineMethods.IID);
        public static ObjectReferenceValue CreateMarshaler2(global::Microsoft.UI.Xaml.Documents.Underline obj) => MarshalInspectable<object>.CreateMarshaler2(obj, global::ABI.Microsoft.UI.Xaml.Documents.IUnderlineMethods.IID);
        public static IntPtr GetAbi(IObjectReference value) => value is null ? IntPtr.Zero : MarshalInterfaceHelper<object>.GetAbi(value);
        public static global::Microsoft.UI.Xaml.Documents.Underline FromAbi(IntPtr thisPtr) => global::Microsoft.UI.Xaml.Documents.Underline.FromAbi(thisPtr);
        public static IntPtr FromManaged(global::Microsoft.UI.Xaml.Documents.Underline obj) => obj is null ? IntPtr.Zero : CreateMarshaler2(obj).Detach();
        public static unsafe MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Documents.Underline>.MarshalerArray CreateMarshalerArray(global::Microsoft.UI.Xaml.Documents.Underline[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Documents.Underline>.CreateMarshalerArray2(array, (o) => CreateMarshaler2(o));
        public static (int length, IntPtr data) GetAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Documents.Underline>.GetAbiArray(box);
        public static unsafe global::Microsoft.UI.Xaml.Documents.Underline[] FromAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Documents.Underline>.FromAbiArray(box, FromAbi);
        public static void CopyAbiArray(global::Microsoft.UI.Xaml.Documents.Underline[] array, object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Documents.Underline>.CopyAbiArray(array, box, FromAbi);
        public static (int length, IntPtr data) FromManagedArray(global::Microsoft.UI.Xaml.Documents.Underline[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Documents.Underline>.FromManagedArray(array, (o) => FromManaged(o));
        public static void DisposeMarshaler(IObjectReference value) => MarshalInspectable<object>.DisposeMarshaler(value);
        public static void DisposeMarshalerArray(MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Documents.Underline>.MarshalerArray array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Documents.Underline>.DisposeMarshalerArray(array);
        public static void DisposeAbi(IntPtr abi) => MarshalInspectable<object>.DisposeAbi(abi);
        public static unsafe void DisposeAbiArray(object box) => MarshalInspectable<object>.DisposeAbiArray(box);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    internal sealed class UnderlineRcwFactoryAttribute : global::WinRT.WinRTImplementationTypeRcwFactoryAttribute
    {
        public override object CreateInstance(global::WinRT.IInspectable inspectable)
            => new global::Microsoft.UI.Xaml.Documents.Underline(inspectable.ObjRef);
    }
}
#pragma warning restore CA1416
