//------------------------------------------------------------------------------
// <auto-generated>
//     This file was generated by cswinrt.exe version 2.2.0.241111.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using System;
namespace WinRT
{

    internal sealed unsafe class _EventSource_global__Microsoft_UI_Xaml_Controls_Primitives_DragDeltaEventHandler : global::ABI.WinRT.Interop.EventSource<global::Microsoft.UI.Xaml.Controls.Primitives.DragDeltaEventHandler>
    {


        internal _EventSource_global__Microsoft_UI_Xaml_Controls_Primitives_DragDeltaEventHandler(IObjectReference obj,
        delegate* unmanaged[Stdcall]<System.IntPtr, System.IntPtr, WinRT.EventRegistrationToken*, int> addHandler,
        delegate* unmanaged[Stdcall]<System.IntPtr, WinRT.EventRegistrationToken, int> removeHandler, int index) : base(obj, addHandler, removeHandler, index)
        {

        }

        protected override ObjectReferenceValue CreateMarshaler(global::Microsoft.UI.Xaml.Controls.Primitives.DragDeltaEventHandler handler) =>
        global::ABI.Microsoft.UI.Xaml.Controls.Primitives.DragDeltaEventHandler.CreateMarshaler2(handler);

        protected override global::ABI.WinRT.Interop.EventSourceState<global::Microsoft.UI.Xaml.Controls.Primitives.DragDeltaEventHandler> CreateEventSourceState() =>
        new EventState(ObjectReference.ThisPtr, Index);

        [global::WinRT.WinRTExposedType]
        private sealed class EventState : global::ABI.WinRT.Interop.EventSourceState<global::Microsoft.UI.Xaml.Controls.Primitives.DragDeltaEventHandler>
        {
            public EventState(System.IntPtr obj, int index)
            : base(obj, index)
            {
            }

            protected override global::Microsoft.UI.Xaml.Controls.Primitives.DragDeltaEventHandler GetEventInvoke()
            {
                return (object sender, global::Microsoft.UI.Xaml.Controls.Primitives.DragDeltaEventArgs e) =>
                {
                    var targetDelegate = TargetDelegate;
                    if (targetDelegate is null)
                    {
                        return ;
                    }
                    targetDelegate.Invoke(sender, e);
                };
            }
        }
    }

    internal sealed unsafe class _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_UI_Input_GestureRecognizer__global__Microsoft_UI_Input_CrossSlidingEventArgs_ : global::ABI.WinRT.Interop.EventSource<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Input.GestureRecognizer, global::Microsoft.UI.Input.CrossSlidingEventArgs>>
    {
        private static readonly bool initialized = global::WinRT.GenericTypeInstantiations.Windows_Foundation_TypedEventHandler_2_Microsoft_UI_Input_GestureRecognizer__Microsoft_UI_Input_CrossSlidingEventArgs.EnsureInitialized();

        internal _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_UI_Input_GestureRecognizer__global__Microsoft_UI_Input_CrossSlidingEventArgs_(IObjectReference obj,
        delegate* unmanaged[Stdcall]<System.IntPtr, System.IntPtr, WinRT.EventRegistrationToken*, int> addHandler,
        delegate* unmanaged[Stdcall]<System.IntPtr, WinRT.EventRegistrationToken, int> removeHandler, int index) : base(obj, addHandler, removeHandler, index)
        {
            _ = initialized;
        }

        protected override ObjectReferenceValue CreateMarshaler(global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Input.GestureRecognizer, global::Microsoft.UI.Input.CrossSlidingEventArgs> handler) =>
        global::ABI.Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Input.GestureRecognizer, global::Microsoft.UI.Input.CrossSlidingEventArgs>.CreateMarshaler2(handler);

        protected override global::ABI.WinRT.Interop.EventSourceState<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Input.GestureRecognizer, global::Microsoft.UI.Input.CrossSlidingEventArgs>> CreateEventSourceState() =>
        new EventState(ObjectReference.ThisPtr, Index);

        [global::WinRT.WinRTExposedType]
        private sealed class EventState : global::ABI.WinRT.Interop.EventSourceState<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Input.GestureRecognizer, global::Microsoft.UI.Input.CrossSlidingEventArgs>>
        {
            public EventState(System.IntPtr obj, int index)
            : base(obj, index)
            {
            }

            protected override global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Input.GestureRecognizer, global::Microsoft.UI.Input.CrossSlidingEventArgs> GetEventInvoke()
            {
                return (global::Microsoft.UI.Input.GestureRecognizer sender, global::Microsoft.UI.Input.CrossSlidingEventArgs args) =>
                {
                    var targetDelegate = TargetDelegate;
                    if (targetDelegate is null)
                    {
                        return ;
                    }
                    targetDelegate.Invoke(sender, args);
                };
            }
        }
    }

    internal sealed unsafe class _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_UI_Content_ContentIslandEnvironment__global__Microsoft_UI_Content_ContentEnvironmentSettingChangedEventArgs_ : global::ABI.WinRT.Interop.EventSource<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Content.ContentIslandEnvironment, global::Microsoft.UI.Content.ContentEnvironmentSettingChangedEventArgs>>
    {
        private static readonly bool initialized = global::WinRT.GenericTypeInstantiations.Windows_Foundation_TypedEventHandler_2_Microsoft_UI_Content_ContentIslandEnvironment__Microsoft_UI_Content_ContentEnvironmentSettingChangedEventArgs.EnsureInitialized();

        internal _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_UI_Content_ContentIslandEnvironment__global__Microsoft_UI_Content_ContentEnvironmentSettingChangedEventArgs_(IObjectReference obj,
        delegate* unmanaged[Stdcall]<System.IntPtr, System.IntPtr, WinRT.EventRegistrationToken*, int> addHandler,
        delegate* unmanaged[Stdcall]<System.IntPtr, WinRT.EventRegistrationToken, int> removeHandler, int index) : base(obj, addHandler, removeHandler, index)
        {
            _ = initialized;
        }

        protected override ObjectReferenceValue CreateMarshaler(global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Content.ContentIslandEnvironment, global::Microsoft.UI.Content.ContentEnvironmentSettingChangedEventArgs> handler) =>
        global::ABI.Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Content.ContentIslandEnvironment, global::Microsoft.UI.Content.ContentEnvironmentSettingChangedEventArgs>.CreateMarshaler2(handler);

        protected override global::ABI.WinRT.Interop.EventSourceState<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Content.ContentIslandEnvironment, global::Microsoft.UI.Content.ContentEnvironmentSettingChangedEventArgs>> CreateEventSourceState() =>
        new EventState(ObjectReference.ThisPtr, Index);

        [global::WinRT.WinRTExposedType]
        private sealed class EventState : global::ABI.WinRT.Interop.EventSourceState<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Content.ContentIslandEnvironment, global::Microsoft.UI.Content.ContentEnvironmentSettingChangedEventArgs>>
        {
            public EventState(System.IntPtr obj, int index)
            : base(obj, index)
            {
            }

            protected override global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Content.ContentIslandEnvironment, global::Microsoft.UI.Content.ContentEnvironmentSettingChangedEventArgs> GetEventInvoke()
            {
                return (global::Microsoft.UI.Content.ContentIslandEnvironment sender, global::Microsoft.UI.Content.ContentEnvironmentSettingChangedEventArgs args) =>
                {
                    var targetDelegate = TargetDelegate;
                    if (targetDelegate is null)
                    {
                        return ;
                    }
                    targetDelegate.Invoke(sender, args);
                };
            }
        }
    }

    internal sealed unsafe class _EventSource_global__Microsoft_UI_Xaml_BindingFailedEventHandler : global::ABI.WinRT.Interop.EventSource<global::Microsoft.UI.Xaml.BindingFailedEventHandler>
    {


        internal _EventSource_global__Microsoft_UI_Xaml_BindingFailedEventHandler(IObjectReference obj,
        delegate* unmanaged[Stdcall]<System.IntPtr, System.IntPtr, WinRT.EventRegistrationToken*, int> addHandler,
        delegate* unmanaged[Stdcall]<System.IntPtr, WinRT.EventRegistrationToken, int> removeHandler, int index) : base(obj, addHandler, removeHandler, index)
        {

        }

        protected override ObjectReferenceValue CreateMarshaler(global::Microsoft.UI.Xaml.BindingFailedEventHandler handler) =>
        global::ABI.Microsoft.UI.Xaml.BindingFailedEventHandler.CreateMarshaler2(handler);

        protected override global::ABI.WinRT.Interop.EventSourceState<global::Microsoft.UI.Xaml.BindingFailedEventHandler> CreateEventSourceState() =>
        new EventState(ObjectReference.ThisPtr, Index);

        [global::WinRT.WinRTExposedType]
        private sealed class EventState : global::ABI.WinRT.Interop.EventSourceState<global::Microsoft.UI.Xaml.BindingFailedEventHandler>
        {
            public EventState(System.IntPtr obj, int index)
            : base(obj, index)
            {
            }

            protected override global::Microsoft.UI.Xaml.BindingFailedEventHandler GetEventInvoke()
            {
                return (object sender, global::Microsoft.UI.Xaml.BindingFailedEventArgs e) =>
                {
                    var targetDelegate = TargetDelegate;
                    if (targetDelegate is null)
                    {
                        return ;
                    }
                    targetDelegate.Invoke(sender, e);
                };
            }
        }
    }

    internal sealed unsafe class _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_UI_Xaml_Documents_TextElement__global__Microsoft_UI_Xaml_Input_AccessKeyDisplayDismissedEventArgs_ : global::ABI.WinRT.Interop.EventSource<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Documents.TextElement, global::Microsoft.UI.Xaml.Input.AccessKeyDisplayDismissedEventArgs>>
    {
        private static readonly bool initialized = global::WinRT.GenericTypeInstantiations.Windows_Foundation_TypedEventHandler_2_Microsoft_UI_Xaml_Documents_TextElement__Microsoft_UI_Xaml_Input_AccessKeyDisplayDismissedEventArgs.EnsureInitialized();

        internal _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_UI_Xaml_Documents_TextElement__global__Microsoft_UI_Xaml_Input_AccessKeyDisplayDismissedEventArgs_(IObjectReference obj,
        delegate* unmanaged[Stdcall]<System.IntPtr, System.IntPtr, WinRT.EventRegistrationToken*, int> addHandler,
        delegate* unmanaged[Stdcall]<System.IntPtr, WinRT.EventRegistrationToken, int> removeHandler, int index) : base(obj, addHandler, removeHandler, index)
        {
            _ = initialized;
        }

        protected override ObjectReferenceValue CreateMarshaler(global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Documents.TextElement, global::Microsoft.UI.Xaml.Input.AccessKeyDisplayDismissedEventArgs> handler) =>
        global::ABI.Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Documents.TextElement, global::Microsoft.UI.Xaml.Input.AccessKeyDisplayDismissedEventArgs>.CreateMarshaler2(handler);

        protected override global::ABI.WinRT.Interop.EventSourceState<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Documents.TextElement, global::Microsoft.UI.Xaml.Input.AccessKeyDisplayDismissedEventArgs>> CreateEventSourceState() =>
        new EventState(ObjectReference.ThisPtr, Index);

        [global::WinRT.WinRTExposedType]
        private sealed class EventState : global::ABI.WinRT.Interop.EventSourceState<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Documents.TextElement, global::Microsoft.UI.Xaml.Input.AccessKeyDisplayDismissedEventArgs>>
        {
            public EventState(System.IntPtr obj, int index)
            : base(obj, index)
            {
            }

            protected override global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Documents.TextElement, global::Microsoft.UI.Xaml.Input.AccessKeyDisplayDismissedEventArgs> GetEventInvoke()
            {
                return (global::Microsoft.UI.Xaml.Documents.TextElement sender, global::Microsoft.UI.Xaml.Input.AccessKeyDisplayDismissedEventArgs args) =>
                {
                    var targetDelegate = TargetDelegate;
                    if (targetDelegate is null)
                    {
                        return ;
                    }
                    targetDelegate.Invoke(sender, args);
                };
            }
        }
    }

    internal sealed unsafe class _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_UI_Xaml_Controls_Primitives_IScrollController__object_ : global::ABI.WinRT.Interop.EventSource<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.Primitives.IScrollController, object>>
    {
        private static readonly bool initialized = global::WinRT.GenericTypeInstantiations.Windows_Foundation_TypedEventHandler_2_Microsoft_UI_Xaml_Controls_Primitives_IScrollController__object.EnsureInitialized();

        internal _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_UI_Xaml_Controls_Primitives_IScrollController__object_(IObjectReference obj,
        delegate* unmanaged[Stdcall]<System.IntPtr, System.IntPtr, WinRT.EventRegistrationToken*, int> addHandler,
        delegate* unmanaged[Stdcall]<System.IntPtr, WinRT.EventRegistrationToken, int> removeHandler, int index) : base(obj, addHandler, removeHandler, index)
        {
            _ = initialized;
        }

        protected override ObjectReferenceValue CreateMarshaler(global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.Primitives.IScrollController, object> handler) =>
        global::ABI.Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.Primitives.IScrollController, object>.CreateMarshaler2(handler);

        protected override global::ABI.WinRT.Interop.EventSourceState<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.Primitives.IScrollController, object>> CreateEventSourceState() =>
        new EventState(ObjectReference.ThisPtr, Index);

        [global::WinRT.WinRTExposedType]
        private sealed class EventState : global::ABI.WinRT.Interop.EventSourceState<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.Primitives.IScrollController, object>>
        {
            public EventState(System.IntPtr obj, int index)
            : base(obj, index)
            {
            }

            protected override global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.Primitives.IScrollController, object> GetEventInvoke()
            {
                return (global::Microsoft.UI.Xaml.Controls.Primitives.IScrollController sender, object args) =>
                {
                    var targetDelegate = TargetDelegate;
                    if (targetDelegate is null)
                    {
                        return ;
                    }
                    targetDelegate.Invoke(sender, args);
                };
            }
        }
    }

    internal sealed unsafe class _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_UI_Xaml_Controls_TabView__global__Microsoft_UI_Xaml_Controls_TabViewTabDragStartingEventArgs_ : global::ABI.WinRT.Interop.EventSource<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.TabView, global::Microsoft.UI.Xaml.Controls.TabViewTabDragStartingEventArgs>>
    {
        private static readonly bool initialized = global::WinRT.GenericTypeInstantiations.Windows_Foundation_TypedEventHandler_2_Microsoft_UI_Xaml_Controls_TabView__Microsoft_UI_Xaml_Controls_TabViewTabDragStartingEventArgs.EnsureInitialized();

        internal _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_UI_Xaml_Controls_TabView__global__Microsoft_UI_Xaml_Controls_TabViewTabDragStartingEventArgs_(IObjectReference obj,
        delegate* unmanaged[Stdcall]<System.IntPtr, System.IntPtr, WinRT.EventRegistrationToken*, int> addHandler,
        delegate* unmanaged[Stdcall]<System.IntPtr, WinRT.EventRegistrationToken, int> removeHandler, int index) : base(obj, addHandler, removeHandler, index)
        {
            _ = initialized;
        }

        protected override ObjectReferenceValue CreateMarshaler(global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.TabView, global::Microsoft.UI.Xaml.Controls.TabViewTabDragStartingEventArgs> handler) =>
        global::ABI.Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.TabView, global::Microsoft.UI.Xaml.Controls.TabViewTabDragStartingEventArgs>.CreateMarshaler2(handler);

        protected override global::ABI.WinRT.Interop.EventSourceState<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.TabView, global::Microsoft.UI.Xaml.Controls.TabViewTabDragStartingEventArgs>> CreateEventSourceState() =>
        new EventState(ObjectReference.ThisPtr, Index);

        [global::WinRT.WinRTExposedType]
        private sealed class EventState : global::ABI.WinRT.Interop.EventSourceState<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.TabView, global::Microsoft.UI.Xaml.Controls.TabViewTabDragStartingEventArgs>>
        {
            public EventState(System.IntPtr obj, int index)
            : base(obj, index)
            {
            }

            protected override global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.TabView, global::Microsoft.UI.Xaml.Controls.TabViewTabDragStartingEventArgs> GetEventInvoke()
            {
                return (global::Microsoft.UI.Xaml.Controls.TabView sender, global::Microsoft.UI.Xaml.Controls.TabViewTabDragStartingEventArgs args) =>
                {
                    var targetDelegate = TargetDelegate;
                    if (targetDelegate is null)
                    {
                        return ;
                    }
                    targetDelegate.Invoke(sender, args);
                };
            }
        }
    }

    internal sealed unsafe class _EventSource_global__Windows_Foundation_TypedEventHandler_object__global__Microsoft_UI_Composition_CompositionBatchCompletedEventArgs_ : global::ABI.WinRT.Interop.EventSource<global::Windows.Foundation.TypedEventHandler<object, global::Microsoft.UI.Composition.CompositionBatchCompletedEventArgs>>
    {
        private static readonly bool initialized = global::WinRT.GenericTypeInstantiations.Windows_Foundation_TypedEventHandler_2_object__Microsoft_UI_Composition_CompositionBatchCompletedEventArgs.EnsureInitialized();

        internal _EventSource_global__Windows_Foundation_TypedEventHandler_object__global__Microsoft_UI_Composition_CompositionBatchCompletedEventArgs_(IObjectReference obj,
        delegate* unmanaged[Stdcall]<System.IntPtr, System.IntPtr, WinRT.EventRegistrationToken*, int> addHandler,
        delegate* unmanaged[Stdcall]<System.IntPtr, WinRT.EventRegistrationToken, int> removeHandler, int index) : base(obj, addHandler, removeHandler, index)
        {
            _ = initialized;
        }

        protected override ObjectReferenceValue CreateMarshaler(global::Windows.Foundation.TypedEventHandler<object, global::Microsoft.UI.Composition.CompositionBatchCompletedEventArgs> handler) =>
        global::ABI.Windows.Foundation.TypedEventHandler<object, global::Microsoft.UI.Composition.CompositionBatchCompletedEventArgs>.CreateMarshaler2(handler);

        protected override global::ABI.WinRT.Interop.EventSourceState<global::Windows.Foundation.TypedEventHandler<object, global::Microsoft.UI.Composition.CompositionBatchCompletedEventArgs>> CreateEventSourceState() =>
        new EventState(ObjectReference.ThisPtr, Index);

        [global::WinRT.WinRTExposedType]
        private sealed class EventState : global::ABI.WinRT.Interop.EventSourceState<global::Windows.Foundation.TypedEventHandler<object, global::Microsoft.UI.Composition.CompositionBatchCompletedEventArgs>>
        {
            public EventState(System.IntPtr obj, int index)
            : base(obj, index)
            {
            }

            protected override global::Windows.Foundation.TypedEventHandler<object, global::Microsoft.UI.Composition.CompositionBatchCompletedEventArgs> GetEventInvoke()
            {
                return (object sender, global::Microsoft.UI.Composition.CompositionBatchCompletedEventArgs args) =>
                {
                    var targetDelegate = TargetDelegate;
                    if (targetDelegate is null)
                    {
                        return ;
                    }
                    targetDelegate.Invoke(sender, args);
                };
            }
        }
    }

    internal sealed unsafe class _EventSource_global__Microsoft_UI_Xaml_Data_CurrentChangingEventHandler : global::ABI.WinRT.Interop.EventSource<global::Microsoft.UI.Xaml.Data.CurrentChangingEventHandler>
    {


        internal _EventSource_global__Microsoft_UI_Xaml_Data_CurrentChangingEventHandler(IObjectReference obj,
        delegate* unmanaged[Stdcall]<System.IntPtr, System.IntPtr, WinRT.EventRegistrationToken*, int> addHandler,
        delegate* unmanaged[Stdcall]<System.IntPtr, WinRT.EventRegistrationToken, int> removeHandler, int index) : base(obj, addHandler, removeHandler, index)
        {

        }

        protected override ObjectReferenceValue CreateMarshaler(global::Microsoft.UI.Xaml.Data.CurrentChangingEventHandler handler) =>
        global::ABI.Microsoft.UI.Xaml.Data.CurrentChangingEventHandler.CreateMarshaler2(handler);

        protected override global::ABI.WinRT.Interop.EventSourceState<global::Microsoft.UI.Xaml.Data.CurrentChangingEventHandler> CreateEventSourceState() =>
        new EventState(ObjectReference.ThisPtr, Index);

        [global::WinRT.WinRTExposedType]
        private sealed class EventState : global::ABI.WinRT.Interop.EventSourceState<global::Microsoft.UI.Xaml.Data.CurrentChangingEventHandler>
        {
            public EventState(System.IntPtr obj, int index)
            : base(obj, index)
            {
            }

            protected override global::Microsoft.UI.Xaml.Data.CurrentChangingEventHandler GetEventInvoke()
            {
                return (object sender, global::Microsoft.UI.Xaml.Data.CurrentChangingEventArgs e) =>
                {
                    var targetDelegate = TargetDelegate;
                    if (targetDelegate is null)
                    {
                        return ;
                    }
                    targetDelegate.Invoke(sender, e);
                };
            }
        }
    }

    internal sealed unsafe class _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_UI_Xaml_Controls_RichEditBox__global__Microsoft_UI_Xaml_Controls_CandidateWindowBoundsChangedEventArgs_ : global::ABI.WinRT.Interop.EventSource<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.RichEditBox, global::Microsoft.UI.Xaml.Controls.CandidateWindowBoundsChangedEventArgs>>
    {
        private static readonly bool initialized = global::WinRT.GenericTypeInstantiations.Windows_Foundation_TypedEventHandler_2_Microsoft_UI_Xaml_Controls_RichEditBox__Microsoft_UI_Xaml_Controls_CandidateWindowBoundsChangedEventArgs.EnsureInitialized();

        internal _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_UI_Xaml_Controls_RichEditBox__global__Microsoft_UI_Xaml_Controls_CandidateWindowBoundsChangedEventArgs_(IObjectReference obj,
        delegate* unmanaged[Stdcall]<System.IntPtr, System.IntPtr, WinRT.EventRegistrationToken*, int> addHandler,
        delegate* unmanaged[Stdcall]<System.IntPtr, WinRT.EventRegistrationToken, int> removeHandler, int index) : base(obj, addHandler, removeHandler, index)
        {
            _ = initialized;
        }

        protected override ObjectReferenceValue CreateMarshaler(global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.RichEditBox, global::Microsoft.UI.Xaml.Controls.CandidateWindowBoundsChangedEventArgs> handler) =>
        global::ABI.Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.RichEditBox, global::Microsoft.UI.Xaml.Controls.CandidateWindowBoundsChangedEventArgs>.CreateMarshaler2(handler);

        protected override global::ABI.WinRT.Interop.EventSourceState<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.RichEditBox, global::Microsoft.UI.Xaml.Controls.CandidateWindowBoundsChangedEventArgs>> CreateEventSourceState() =>
        new EventState(ObjectReference.ThisPtr, Index);

        [global::WinRT.WinRTExposedType]
        private sealed class EventState : global::ABI.WinRT.Interop.EventSourceState<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.RichEditBox, global::Microsoft.UI.Xaml.Controls.CandidateWindowBoundsChangedEventArgs>>
        {
            public EventState(System.IntPtr obj, int index)
            : base(obj, index)
            {
            }

            protected override global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.RichEditBox, global::Microsoft.UI.Xaml.Controls.CandidateWindowBoundsChangedEventArgs> GetEventInvoke()
            {
                return (global::Microsoft.UI.Xaml.Controls.RichEditBox sender, global::Microsoft.UI.Xaml.Controls.CandidateWindowBoundsChangedEventArgs args) =>
                {
                    var targetDelegate = TargetDelegate;
                    if (targetDelegate is null)
                    {
                        return ;
                    }
                    targetDelegate.Invoke(sender, args);
                };
            }
        }
    }

    internal sealed unsafe class _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_UI_Xaml_Media_Imaging_SvgImageSource__global__Microsoft_UI_Xaml_Media_Imaging_SvgImageSourceFailedEventArgs_ : global::ABI.WinRT.Interop.EventSource<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Media.Imaging.SvgImageSource, global::Microsoft.UI.Xaml.Media.Imaging.SvgImageSourceFailedEventArgs>>
    {
        private static readonly bool initialized = global::WinRT.GenericTypeInstantiations.Windows_Foundation_TypedEventHandler_2_Microsoft_UI_Xaml_Media_Imaging_SvgImageSource__Microsoft_UI_Xaml_Media_Imaging_SvgImageSourceFailedEventArgs.EnsureInitialized();

        internal _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_UI_Xaml_Media_Imaging_SvgImageSource__global__Microsoft_UI_Xaml_Media_Imaging_SvgImageSourceFailedEventArgs_(IObjectReference obj,
        delegate* unmanaged[Stdcall]<System.IntPtr, System.IntPtr, WinRT.EventRegistrationToken*, int> addHandler,
        delegate* unmanaged[Stdcall]<System.IntPtr, WinRT.EventRegistrationToken, int> removeHandler, int index) : base(obj, addHandler, removeHandler, index)
        {
            _ = initialized;
        }

        protected override ObjectReferenceValue CreateMarshaler(global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Media.Imaging.SvgImageSource, global::Microsoft.UI.Xaml.Media.Imaging.SvgImageSourceFailedEventArgs> handler) =>
        global::ABI.Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Media.Imaging.SvgImageSource, global::Microsoft.UI.Xaml.Media.Imaging.SvgImageSourceFailedEventArgs>.CreateMarshaler2(handler);

        protected override global::ABI.WinRT.Interop.EventSourceState<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Media.Imaging.SvgImageSource, global::Microsoft.UI.Xaml.Media.Imaging.SvgImageSourceFailedEventArgs>> CreateEventSourceState() =>
        new EventState(ObjectReference.ThisPtr, Index);

        [global::WinRT.WinRTExposedType]
        private sealed class EventState : global::ABI.WinRT.Interop.EventSourceState<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Media.Imaging.SvgImageSource, global::Microsoft.UI.Xaml.Media.Imaging.SvgImageSourceFailedEventArgs>>
        {
            public EventState(System.IntPtr obj, int index)
            : base(obj, index)
            {
            }

            protected override global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Media.Imaging.SvgImageSource, global::Microsoft.UI.Xaml.Media.Imaging.SvgImageSourceFailedEventArgs> GetEventInvoke()
            {
                return (global::Microsoft.UI.Xaml.Media.Imaging.SvgImageSource sender, global::Microsoft.UI.Xaml.Media.Imaging.SvgImageSourceFailedEventArgs args) =>
                {
                    var targetDelegate = TargetDelegate;
                    if (targetDelegate is null)
                    {
                        return ;
                    }
                    targetDelegate.Invoke(sender, args);
                };
            }
        }
    }

    internal sealed unsafe class _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_UI_Xaml_Controls_SelectionModel__global__Microsoft_UI_Xaml_Controls_SelectionModelChildrenRequestedEventArgs_ : global::ABI.WinRT.Interop.EventSource<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.SelectionModel, global::Microsoft.UI.Xaml.Controls.SelectionModelChildrenRequestedEventArgs>>
    {
        private static readonly bool initialized = global::WinRT.GenericTypeInstantiations.Windows_Foundation_TypedEventHandler_2_Microsoft_UI_Xaml_Controls_SelectionModel__Microsoft_UI_Xaml_Controls_SelectionModelChildrenRequestedEventArgs.EnsureInitialized();

        internal _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_UI_Xaml_Controls_SelectionModel__global__Microsoft_UI_Xaml_Controls_SelectionModelChildrenRequestedEventArgs_(IObjectReference obj,
        delegate* unmanaged[Stdcall]<System.IntPtr, System.IntPtr, WinRT.EventRegistrationToken*, int> addHandler,
        delegate* unmanaged[Stdcall]<System.IntPtr, WinRT.EventRegistrationToken, int> removeHandler, int index) : base(obj, addHandler, removeHandler, index)
        {
            _ = initialized;
        }

        protected override ObjectReferenceValue CreateMarshaler(global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.SelectionModel, global::Microsoft.UI.Xaml.Controls.SelectionModelChildrenRequestedEventArgs> handler) =>
        global::ABI.Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.SelectionModel, global::Microsoft.UI.Xaml.Controls.SelectionModelChildrenRequestedEventArgs>.CreateMarshaler2(handler);

        protected override global::ABI.WinRT.Interop.EventSourceState<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.SelectionModel, global::Microsoft.UI.Xaml.Controls.SelectionModelChildrenRequestedEventArgs>> CreateEventSourceState() =>
        new EventState(ObjectReference.ThisPtr, Index);

        [global::WinRT.WinRTExposedType]
        private sealed class EventState : global::ABI.WinRT.Interop.EventSourceState<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.SelectionModel, global::Microsoft.UI.Xaml.Controls.SelectionModelChildrenRequestedEventArgs>>
        {
            public EventState(System.IntPtr obj, int index)
            : base(obj, index)
            {
            }

            protected override global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.SelectionModel, global::Microsoft.UI.Xaml.Controls.SelectionModelChildrenRequestedEventArgs> GetEventInvoke()
            {
                return (global::Microsoft.UI.Xaml.Controls.SelectionModel sender, global::Microsoft.UI.Xaml.Controls.SelectionModelChildrenRequestedEventArgs args) =>
                {
                    var targetDelegate = TargetDelegate;
                    if (targetDelegate is null)
                    {
                        return ;
                    }
                    targetDelegate.Invoke(sender, args);
                };
            }
        }
    }

    internal sealed unsafe class _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_UI_Xaml_Controls_LinedFlowLayout__object_ : global::ABI.WinRT.Interop.EventSource<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.LinedFlowLayout, object>>
    {
        private static readonly bool initialized = global::WinRT.GenericTypeInstantiations.Windows_Foundation_TypedEventHandler_2_Microsoft_UI_Xaml_Controls_LinedFlowLayout__object.EnsureInitialized();

        internal _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_UI_Xaml_Controls_LinedFlowLayout__object_(IObjectReference obj,
        delegate* unmanaged[Stdcall]<System.IntPtr, System.IntPtr, WinRT.EventRegistrationToken*, int> addHandler,
        delegate* unmanaged[Stdcall]<System.IntPtr, WinRT.EventRegistrationToken, int> removeHandler, int index) : base(obj, addHandler, removeHandler, index)
        {
            _ = initialized;
        }

        protected override ObjectReferenceValue CreateMarshaler(global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.LinedFlowLayout, object> handler) =>
        global::ABI.Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.LinedFlowLayout, object>.CreateMarshaler2(handler);

        protected override global::ABI.WinRT.Interop.EventSourceState<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.LinedFlowLayout, object>> CreateEventSourceState() =>
        new EventState(ObjectReference.ThisPtr, Index);

        [global::WinRT.WinRTExposedType]
        private sealed class EventState : global::ABI.WinRT.Interop.EventSourceState<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.LinedFlowLayout, object>>
        {
            public EventState(System.IntPtr obj, int index)
            : base(obj, index)
            {
            }

            protected override global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.LinedFlowLayout, object> GetEventInvoke()
            {
                return (global::Microsoft.UI.Xaml.Controls.LinedFlowLayout sender, object args) =>
                {
                    var targetDelegate = TargetDelegate;
                    if (targetDelegate is null)
                    {
                        return ;
                    }
                    targetDelegate.Invoke(sender, args);
                };
            }
        }
    }

    internal sealed unsafe class _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_Web_WebView2_Core_CoreWebView2Frame__global__Microsoft_Web_WebView2_Core_CoreWebView2WebMessageReceivedEventArgs_ : global::ABI.WinRT.Interop.EventSource<global::Windows.Foundation.TypedEventHandler<global::Microsoft.Web.WebView2.Core.CoreWebView2Frame, global::Microsoft.Web.WebView2.Core.CoreWebView2WebMessageReceivedEventArgs>>
    {
        private static readonly bool initialized = global::WinRT.GenericTypeInstantiations.Windows_Foundation_TypedEventHandler_2_Microsoft_Web_WebView2_Core_CoreWebView2Frame__Microsoft_Web_WebView2_Core_CoreWebView2WebMessageReceivedEventArgs.EnsureInitialized();

        internal _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_Web_WebView2_Core_CoreWebView2Frame__global__Microsoft_Web_WebView2_Core_CoreWebView2WebMessageReceivedEventArgs_(IObjectReference obj,
        delegate* unmanaged[Stdcall]<System.IntPtr, System.IntPtr, WinRT.EventRegistrationToken*, int> addHandler,
        delegate* unmanaged[Stdcall]<System.IntPtr, WinRT.EventRegistrationToken, int> removeHandler, int index) : base(obj, addHandler, removeHandler, index)
        {
            _ = initialized;
        }

        protected override ObjectReferenceValue CreateMarshaler(global::Windows.Foundation.TypedEventHandler<global::Microsoft.Web.WebView2.Core.CoreWebView2Frame, global::Microsoft.Web.WebView2.Core.CoreWebView2WebMessageReceivedEventArgs> handler) =>
        global::ABI.Windows.Foundation.TypedEventHandler<global::Microsoft.Web.WebView2.Core.CoreWebView2Frame, global::Microsoft.Web.WebView2.Core.CoreWebView2WebMessageReceivedEventArgs>.CreateMarshaler2(handler);

        protected override global::ABI.WinRT.Interop.EventSourceState<global::Windows.Foundation.TypedEventHandler<global::Microsoft.Web.WebView2.Core.CoreWebView2Frame, global::Microsoft.Web.WebView2.Core.CoreWebView2WebMessageReceivedEventArgs>> CreateEventSourceState() =>
        new EventState(ObjectReference.ThisPtr, Index);

        [global::WinRT.WinRTExposedType]
        private sealed class EventState : global::ABI.WinRT.Interop.EventSourceState<global::Windows.Foundation.TypedEventHandler<global::Microsoft.Web.WebView2.Core.CoreWebView2Frame, global::Microsoft.Web.WebView2.Core.CoreWebView2WebMessageReceivedEventArgs>>
        {
            public EventState(System.IntPtr obj, int index)
            : base(obj, index)
            {
            }

            protected override global::Windows.Foundation.TypedEventHandler<global::Microsoft.Web.WebView2.Core.CoreWebView2Frame, global::Microsoft.Web.WebView2.Core.CoreWebView2WebMessageReceivedEventArgs> GetEventInvoke()
            {
                return (global::Microsoft.Web.WebView2.Core.CoreWebView2Frame sender, global::Microsoft.Web.WebView2.Core.CoreWebView2WebMessageReceivedEventArgs args) =>
                {
                    var targetDelegate = TargetDelegate;
                    if (targetDelegate is null)
                    {
                        return ;
                    }
                    targetDelegate.Invoke(sender, args);
                };
            }
        }
    }

    internal sealed unsafe class _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_UI_Input_InputFocusNavigationHost__global__Microsoft_UI_Input_FocusNavigationRequestEventArgs_ : global::ABI.WinRT.Interop.EventSource<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Input.InputFocusNavigationHost, global::Microsoft.UI.Input.FocusNavigationRequestEventArgs>>
    {
        private static readonly bool initialized = global::WinRT.GenericTypeInstantiations.Windows_Foundation_TypedEventHandler_2_Microsoft_UI_Input_InputFocusNavigationHost__Microsoft_UI_Input_FocusNavigationRequestEventArgs.EnsureInitialized();

        internal _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_UI_Input_InputFocusNavigationHost__global__Microsoft_UI_Input_FocusNavigationRequestEventArgs_(IObjectReference obj,
        delegate* unmanaged[Stdcall]<System.IntPtr, System.IntPtr, WinRT.EventRegistrationToken*, int> addHandler,
        delegate* unmanaged[Stdcall]<System.IntPtr, WinRT.EventRegistrationToken, int> removeHandler, int index) : base(obj, addHandler, removeHandler, index)
        {
            _ = initialized;
        }

        protected override ObjectReferenceValue CreateMarshaler(global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Input.InputFocusNavigationHost, global::Microsoft.UI.Input.FocusNavigationRequestEventArgs> handler) =>
        global::ABI.Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Input.InputFocusNavigationHost, global::Microsoft.UI.Input.FocusNavigationRequestEventArgs>.CreateMarshaler2(handler);

        protected override global::ABI.WinRT.Interop.EventSourceState<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Input.InputFocusNavigationHost, global::Microsoft.UI.Input.FocusNavigationRequestEventArgs>> CreateEventSourceState() =>
        new EventState(ObjectReference.ThisPtr, Index);

        [global::WinRT.WinRTExposedType]
        private sealed class EventState : global::ABI.WinRT.Interop.EventSourceState<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Input.InputFocusNavigationHost, global::Microsoft.UI.Input.FocusNavigationRequestEventArgs>>
        {
            public EventState(System.IntPtr obj, int index)
            : base(obj, index)
            {
            }

            protected override global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Input.InputFocusNavigationHost, global::Microsoft.UI.Input.FocusNavigationRequestEventArgs> GetEventInvoke()
            {
                return (global::Microsoft.UI.Input.InputFocusNavigationHost sender, global::Microsoft.UI.Input.FocusNavigationRequestEventArgs args) =>
                {
                    var targetDelegate = TargetDelegate;
                    if (targetDelegate is null)
                    {
                        return ;
                    }
                    targetDelegate.Invoke(sender, args);
                };
            }
        }
    }

    internal sealed unsafe class _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_UI_Xaml_Controls_Primitives_ScrollPresenter__global__Microsoft_UI_Xaml_Controls_ScrollingBringingIntoViewEventArgs_ : global::ABI.WinRT.Interop.EventSource<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.Primitives.ScrollPresenter, global::Microsoft.UI.Xaml.Controls.ScrollingBringingIntoViewEventArgs>>
    {
        private static readonly bool initialized = global::WinRT.GenericTypeInstantiations.Windows_Foundation_TypedEventHandler_2_Microsoft_UI_Xaml_Controls_Primitives_ScrollPresenter__Microsoft_UI_Xaml_Controls_ScrollingBringingIntoViewEventArgs.EnsureInitialized();

        internal _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_UI_Xaml_Controls_Primitives_ScrollPresenter__global__Microsoft_UI_Xaml_Controls_ScrollingBringingIntoViewEventArgs_(IObjectReference obj,
        delegate* unmanaged[Stdcall]<System.IntPtr, System.IntPtr, WinRT.EventRegistrationToken*, int> addHandler,
        delegate* unmanaged[Stdcall]<System.IntPtr, WinRT.EventRegistrationToken, int> removeHandler, int index) : base(obj, addHandler, removeHandler, index)
        {
            _ = initialized;
        }

        protected override ObjectReferenceValue CreateMarshaler(global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.Primitives.ScrollPresenter, global::Microsoft.UI.Xaml.Controls.ScrollingBringingIntoViewEventArgs> handler) =>
        global::ABI.Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.Primitives.ScrollPresenter, global::Microsoft.UI.Xaml.Controls.ScrollingBringingIntoViewEventArgs>.CreateMarshaler2(handler);

        protected override global::ABI.WinRT.Interop.EventSourceState<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.Primitives.ScrollPresenter, global::Microsoft.UI.Xaml.Controls.ScrollingBringingIntoViewEventArgs>> CreateEventSourceState() =>
        new EventState(ObjectReference.ThisPtr, Index);

        [global::WinRT.WinRTExposedType]
        private sealed class EventState : global::ABI.WinRT.Interop.EventSourceState<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.Primitives.ScrollPresenter, global::Microsoft.UI.Xaml.Controls.ScrollingBringingIntoViewEventArgs>>
        {
            public EventState(System.IntPtr obj, int index)
            : base(obj, index)
            {
            }

            protected override global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.Primitives.ScrollPresenter, global::Microsoft.UI.Xaml.Controls.ScrollingBringingIntoViewEventArgs> GetEventInvoke()
            {
                return (global::Microsoft.UI.Xaml.Controls.Primitives.ScrollPresenter sender, global::Microsoft.UI.Xaml.Controls.ScrollingBringingIntoViewEventArgs args) =>
                {
                    var targetDelegate = TargetDelegate;
                    if (targetDelegate is null)
                    {
                        return ;
                    }
                    targetDelegate.Invoke(sender, args);
                };
            }
        }
    }

    internal sealed unsafe class _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_UI_Xaml_Media_LoadedImageSurface__global__Microsoft_UI_Xaml_Media_LoadedImageSourceLoadCompletedEventArgs_ : global::ABI.WinRT.Interop.EventSource<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Media.LoadedImageSurface, global::Microsoft.UI.Xaml.Media.LoadedImageSourceLoadCompletedEventArgs>>
    {
        private static readonly bool initialized = global::WinRT.GenericTypeInstantiations.Windows_Foundation_TypedEventHandler_2_Microsoft_UI_Xaml_Media_LoadedImageSurface__Microsoft_UI_Xaml_Media_LoadedImageSourceLoadCompletedEventArgs.EnsureInitialized();

        internal _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_UI_Xaml_Media_LoadedImageSurface__global__Microsoft_UI_Xaml_Media_LoadedImageSourceLoadCompletedEventArgs_(IObjectReference obj,
        delegate* unmanaged[Stdcall]<System.IntPtr, System.IntPtr, WinRT.EventRegistrationToken*, int> addHandler,
        delegate* unmanaged[Stdcall]<System.IntPtr, WinRT.EventRegistrationToken, int> removeHandler, int index) : base(obj, addHandler, removeHandler, index)
        {
            _ = initialized;
        }

        protected override ObjectReferenceValue CreateMarshaler(global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Media.LoadedImageSurface, global::Microsoft.UI.Xaml.Media.LoadedImageSourceLoadCompletedEventArgs> handler) =>
        global::ABI.Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Media.LoadedImageSurface, global::Microsoft.UI.Xaml.Media.LoadedImageSourceLoadCompletedEventArgs>.CreateMarshaler2(handler);

        protected override global::ABI.WinRT.Interop.EventSourceState<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Media.LoadedImageSurface, global::Microsoft.UI.Xaml.Media.LoadedImageSourceLoadCompletedEventArgs>> CreateEventSourceState() =>
        new EventState(ObjectReference.ThisPtr, Index);

        [global::WinRT.WinRTExposedType]
        private sealed class EventState : global::ABI.WinRT.Interop.EventSourceState<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Media.LoadedImageSurface, global::Microsoft.UI.Xaml.Media.LoadedImageSourceLoadCompletedEventArgs>>
        {
            public EventState(System.IntPtr obj, int index)
            : base(obj, index)
            {
            }

            protected override global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Media.LoadedImageSurface, global::Microsoft.UI.Xaml.Media.LoadedImageSourceLoadCompletedEventArgs> GetEventInvoke()
            {
                return (global::Microsoft.UI.Xaml.Media.LoadedImageSurface sender, global::Microsoft.UI.Xaml.Media.LoadedImageSourceLoadCompletedEventArgs args) =>
                {
                    var targetDelegate = TargetDelegate;
                    if (targetDelegate is null)
                    {
                        return ;
                    }
                    targetDelegate.Invoke(sender, args);
                };
            }
        }
    }

    internal sealed unsafe class _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_UI_Xaml_Controls_TreeView__global__Microsoft_UI_Xaml_Controls_TreeViewCollapsedEventArgs_ : global::ABI.WinRT.Interop.EventSource<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.TreeView, global::Microsoft.UI.Xaml.Controls.TreeViewCollapsedEventArgs>>
    {
        private static readonly bool initialized = global::WinRT.GenericTypeInstantiations.Windows_Foundation_TypedEventHandler_2_Microsoft_UI_Xaml_Controls_TreeView__Microsoft_UI_Xaml_Controls_TreeViewCollapsedEventArgs.EnsureInitialized();

        internal _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_UI_Xaml_Controls_TreeView__global__Microsoft_UI_Xaml_Controls_TreeViewCollapsedEventArgs_(IObjectReference obj,
        delegate* unmanaged[Stdcall]<System.IntPtr, System.IntPtr, WinRT.EventRegistrationToken*, int> addHandler,
        delegate* unmanaged[Stdcall]<System.IntPtr, WinRT.EventRegistrationToken, int> removeHandler, int index) : base(obj, addHandler, removeHandler, index)
        {
            _ = initialized;
        }

        protected override ObjectReferenceValue CreateMarshaler(global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.TreeView, global::Microsoft.UI.Xaml.Controls.TreeViewCollapsedEventArgs> handler) =>
        global::ABI.Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.TreeView, global::Microsoft.UI.Xaml.Controls.TreeViewCollapsedEventArgs>.CreateMarshaler2(handler);

        protected override global::ABI.WinRT.Interop.EventSourceState<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.TreeView, global::Microsoft.UI.Xaml.Controls.TreeViewCollapsedEventArgs>> CreateEventSourceState() =>
        new EventState(ObjectReference.ThisPtr, Index);

        [global::WinRT.WinRTExposedType]
        private sealed class EventState : global::ABI.WinRT.Interop.EventSourceState<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.TreeView, global::Microsoft.UI.Xaml.Controls.TreeViewCollapsedEventArgs>>
        {
            public EventState(System.IntPtr obj, int index)
            : base(obj, index)
            {
            }

            protected override global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.TreeView, global::Microsoft.UI.Xaml.Controls.TreeViewCollapsedEventArgs> GetEventInvoke()
            {
                return (global::Microsoft.UI.Xaml.Controls.TreeView sender, global::Microsoft.UI.Xaml.Controls.TreeViewCollapsedEventArgs args) =>
                {
                    var targetDelegate = TargetDelegate;
                    if (targetDelegate is null)
                    {
                        return ;
                    }
                    targetDelegate.Invoke(sender, args);
                };
            }
        }
    }

    internal sealed unsafe class _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_UI_Xaml_Controls_NavigationView__global__Microsoft_UI_Xaml_Controls_NavigationViewItemExpandingEventArgs_ : global::ABI.WinRT.Interop.EventSource<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.NavigationView, global::Microsoft.UI.Xaml.Controls.NavigationViewItemExpandingEventArgs>>
    {
        private static readonly bool initialized = global::WinRT.GenericTypeInstantiations.Windows_Foundation_TypedEventHandler_2_Microsoft_UI_Xaml_Controls_NavigationView__Microsoft_UI_Xaml_Controls_NavigationViewItemExpandingEventArgs.EnsureInitialized();

        internal _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_UI_Xaml_Controls_NavigationView__global__Microsoft_UI_Xaml_Controls_NavigationViewItemExpandingEventArgs_(IObjectReference obj,
        delegate* unmanaged[Stdcall]<System.IntPtr, System.IntPtr, WinRT.EventRegistrationToken*, int> addHandler,
        delegate* unmanaged[Stdcall]<System.IntPtr, WinRT.EventRegistrationToken, int> removeHandler, int index) : base(obj, addHandler, removeHandler, index)
        {
            _ = initialized;
        }

        protected override ObjectReferenceValue CreateMarshaler(global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.NavigationView, global::Microsoft.UI.Xaml.Controls.NavigationViewItemExpandingEventArgs> handler) =>
        global::ABI.Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.NavigationView, global::Microsoft.UI.Xaml.Controls.NavigationViewItemExpandingEventArgs>.CreateMarshaler2(handler);

        protected override global::ABI.WinRT.Interop.EventSourceState<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.NavigationView, global::Microsoft.UI.Xaml.Controls.NavigationViewItemExpandingEventArgs>> CreateEventSourceState() =>
        new EventState(ObjectReference.ThisPtr, Index);

        [global::WinRT.WinRTExposedType]
        private sealed class EventState : global::ABI.WinRT.Interop.EventSourceState<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.NavigationView, global::Microsoft.UI.Xaml.Controls.NavigationViewItemExpandingEventArgs>>
        {
            public EventState(System.IntPtr obj, int index)
            : base(obj, index)
            {
            }

            protected override global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.NavigationView, global::Microsoft.UI.Xaml.Controls.NavigationViewItemExpandingEventArgs> GetEventInvoke()
            {
                return (global::Microsoft.UI.Xaml.Controls.NavigationView sender, global::Microsoft.UI.Xaml.Controls.NavigationViewItemExpandingEventArgs args) =>
                {
                    var targetDelegate = TargetDelegate;
                    if (targetDelegate is null)
                    {
                        return ;
                    }
                    targetDelegate.Invoke(sender, args);
                };
            }
        }
    }

    internal sealed unsafe class _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_UI_Xaml_Controls_ListViewBase__global__Microsoft_UI_Xaml_Controls_ContainerContentChangingEventArgs_ : global::ABI.WinRT.Interop.EventSource<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.ListViewBase, global::Microsoft.UI.Xaml.Controls.ContainerContentChangingEventArgs>>
    {
        private static readonly bool initialized = global::WinRT.GenericTypeInstantiations.Windows_Foundation_TypedEventHandler_2_Microsoft_UI_Xaml_Controls_ListViewBase__Microsoft_UI_Xaml_Controls_ContainerContentChangingEventArgs.EnsureInitialized();

        internal _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_UI_Xaml_Controls_ListViewBase__global__Microsoft_UI_Xaml_Controls_ContainerContentChangingEventArgs_(IObjectReference obj,
        delegate* unmanaged[Stdcall]<System.IntPtr, System.IntPtr, WinRT.EventRegistrationToken*, int> addHandler,
        delegate* unmanaged[Stdcall]<System.IntPtr, WinRT.EventRegistrationToken, int> removeHandler, int index) : base(obj, addHandler, removeHandler, index)
        {
            _ = initialized;
        }

        protected override ObjectReferenceValue CreateMarshaler(global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.ListViewBase, global::Microsoft.UI.Xaml.Controls.ContainerContentChangingEventArgs> handler) =>
        global::ABI.Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.ListViewBase, global::Microsoft.UI.Xaml.Controls.ContainerContentChangingEventArgs>.CreateMarshaler2(handler);

        protected override global::ABI.WinRT.Interop.EventSourceState<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.ListViewBase, global::Microsoft.UI.Xaml.Controls.ContainerContentChangingEventArgs>> CreateEventSourceState() =>
        new EventState(ObjectReference.ThisPtr, Index);

        [global::WinRT.WinRTExposedType]
        private sealed class EventState : global::ABI.WinRT.Interop.EventSourceState<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.ListViewBase, global::Microsoft.UI.Xaml.Controls.ContainerContentChangingEventArgs>>
        {
            public EventState(System.IntPtr obj, int index)
            : base(obj, index)
            {
            }

            protected override global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.ListViewBase, global::Microsoft.UI.Xaml.Controls.ContainerContentChangingEventArgs> GetEventInvoke()
            {
                return (global::Microsoft.UI.Xaml.Controls.ListViewBase sender, global::Microsoft.UI.Xaml.Controls.ContainerContentChangingEventArgs args) =>
                {
                    var targetDelegate = TargetDelegate;
                    if (targetDelegate is null)
                    {
                        return ;
                    }
                    targetDelegate.Invoke(sender, args);
                };
            }
        }
    }

    internal sealed unsafe class _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_Web_WebView2_Core_CoreWebView2Frame__global__Microsoft_Web_WebView2_Core_CoreWebView2NavigationStartingEventArgs_ : global::ABI.WinRT.Interop.EventSource<global::Windows.Foundation.TypedEventHandler<global::Microsoft.Web.WebView2.Core.CoreWebView2Frame, global::Microsoft.Web.WebView2.Core.CoreWebView2NavigationStartingEventArgs>>
    {
        private static readonly bool initialized = global::WinRT.GenericTypeInstantiations.Windows_Foundation_TypedEventHandler_2_Microsoft_Web_WebView2_Core_CoreWebView2Frame__Microsoft_Web_WebView2_Core_CoreWebView2NavigationStartingEventArgs.EnsureInitialized();

        internal _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_Web_WebView2_Core_CoreWebView2Frame__global__Microsoft_Web_WebView2_Core_CoreWebView2NavigationStartingEventArgs_(IObjectReference obj,
        delegate* unmanaged[Stdcall]<System.IntPtr, System.IntPtr, WinRT.EventRegistrationToken*, int> addHandler,
        delegate* unmanaged[Stdcall]<System.IntPtr, WinRT.EventRegistrationToken, int> removeHandler, int index) : base(obj, addHandler, removeHandler, index)
        {
            _ = initialized;
        }

        protected override ObjectReferenceValue CreateMarshaler(global::Windows.Foundation.TypedEventHandler<global::Microsoft.Web.WebView2.Core.CoreWebView2Frame, global::Microsoft.Web.WebView2.Core.CoreWebView2NavigationStartingEventArgs> handler) =>
        global::ABI.Windows.Foundation.TypedEventHandler<global::Microsoft.Web.WebView2.Core.CoreWebView2Frame, global::Microsoft.Web.WebView2.Core.CoreWebView2NavigationStartingEventArgs>.CreateMarshaler2(handler);

        protected override global::ABI.WinRT.Interop.EventSourceState<global::Windows.Foundation.TypedEventHandler<global::Microsoft.Web.WebView2.Core.CoreWebView2Frame, global::Microsoft.Web.WebView2.Core.CoreWebView2NavigationStartingEventArgs>> CreateEventSourceState() =>
        new EventState(ObjectReference.ThisPtr, Index);

        [global::WinRT.WinRTExposedType]
        private sealed class EventState : global::ABI.WinRT.Interop.EventSourceState<global::Windows.Foundation.TypedEventHandler<global::Microsoft.Web.WebView2.Core.CoreWebView2Frame, global::Microsoft.Web.WebView2.Core.CoreWebView2NavigationStartingEventArgs>>
        {
            public EventState(System.IntPtr obj, int index)
            : base(obj, index)
            {
            }

            protected override global::Windows.Foundation.TypedEventHandler<global::Microsoft.Web.WebView2.Core.CoreWebView2Frame, global::Microsoft.Web.WebView2.Core.CoreWebView2NavigationStartingEventArgs> GetEventInvoke()
            {
                return (global::Microsoft.Web.WebView2.Core.CoreWebView2Frame sender, global::Microsoft.Web.WebView2.Core.CoreWebView2NavigationStartingEventArgs args) =>
                {
                    var targetDelegate = TargetDelegate;
                    if (targetDelegate is null)
                    {
                        return ;
                    }
                    targetDelegate.Invoke(sender, args);
                };
            }
        }
    }

    internal sealed unsafe class _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_Web_WebView2_Core_CoreWebView2__global__Microsoft_Web_WebView2_Core_CoreWebView2ScriptDialogOpeningEventArgs_ : global::ABI.WinRT.Interop.EventSource<global::Windows.Foundation.TypedEventHandler<global::Microsoft.Web.WebView2.Core.CoreWebView2, global::Microsoft.Web.WebView2.Core.CoreWebView2ScriptDialogOpeningEventArgs>>
    {
        private static readonly bool initialized = global::WinRT.GenericTypeInstantiations.Windows_Foundation_TypedEventHandler_2_Microsoft_Web_WebView2_Core_CoreWebView2__Microsoft_Web_WebView2_Core_CoreWebView2ScriptDialogOpeningEventArgs.EnsureInitialized();

        internal _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_Web_WebView2_Core_CoreWebView2__global__Microsoft_Web_WebView2_Core_CoreWebView2ScriptDialogOpeningEventArgs_(IObjectReference obj,
        delegate* unmanaged[Stdcall]<System.IntPtr, System.IntPtr, WinRT.EventRegistrationToken*, int> addHandler,
        delegate* unmanaged[Stdcall]<System.IntPtr, WinRT.EventRegistrationToken, int> removeHandler, int index) : base(obj, addHandler, removeHandler, index)
        {
            _ = initialized;
        }

        protected override ObjectReferenceValue CreateMarshaler(global::Windows.Foundation.TypedEventHandler<global::Microsoft.Web.WebView2.Core.CoreWebView2, global::Microsoft.Web.WebView2.Core.CoreWebView2ScriptDialogOpeningEventArgs> handler) =>
        global::ABI.Windows.Foundation.TypedEventHandler<global::Microsoft.Web.WebView2.Core.CoreWebView2, global::Microsoft.Web.WebView2.Core.CoreWebView2ScriptDialogOpeningEventArgs>.CreateMarshaler2(handler);

        protected override global::ABI.WinRT.Interop.EventSourceState<global::Windows.Foundation.TypedEventHandler<global::Microsoft.Web.WebView2.Core.CoreWebView2, global::Microsoft.Web.WebView2.Core.CoreWebView2ScriptDialogOpeningEventArgs>> CreateEventSourceState() =>
        new EventState(ObjectReference.ThisPtr, Index);

        [global::WinRT.WinRTExposedType]
        private sealed class EventState : global::ABI.WinRT.Interop.EventSourceState<global::Windows.Foundation.TypedEventHandler<global::Microsoft.Web.WebView2.Core.CoreWebView2, global::Microsoft.Web.WebView2.Core.CoreWebView2ScriptDialogOpeningEventArgs>>
        {
            public EventState(System.IntPtr obj, int index)
            : base(obj, index)
            {
            }

            protected override global::Windows.Foundation.TypedEventHandler<global::Microsoft.Web.WebView2.Core.CoreWebView2, global::Microsoft.Web.WebView2.Core.CoreWebView2ScriptDialogOpeningEventArgs> GetEventInvoke()
            {
                return (global::Microsoft.Web.WebView2.Core.CoreWebView2 sender, global::Microsoft.Web.WebView2.Core.CoreWebView2ScriptDialogOpeningEventArgs args) =>
                {
                    var targetDelegate = TargetDelegate;
                    if (targetDelegate is null)
                    {
                        return ;
                    }
                    targetDelegate.Invoke(sender, args);
                };
            }
        }
    }

    internal sealed unsafe class _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_UI_Xaml_Controls_ListViewBase__global__Microsoft_UI_Xaml_Controls_ChoosingGroupHeaderContainerEventArgs_ : global::ABI.WinRT.Interop.EventSource<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.ListViewBase, global::Microsoft.UI.Xaml.Controls.ChoosingGroupHeaderContainerEventArgs>>
    {
        private static readonly bool initialized = global::WinRT.GenericTypeInstantiations.Windows_Foundation_TypedEventHandler_2_Microsoft_UI_Xaml_Controls_ListViewBase__Microsoft_UI_Xaml_Controls_ChoosingGroupHeaderContainerEventArgs.EnsureInitialized();

        internal _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_UI_Xaml_Controls_ListViewBase__global__Microsoft_UI_Xaml_Controls_ChoosingGroupHeaderContainerEventArgs_(IObjectReference obj,
        delegate* unmanaged[Stdcall]<System.IntPtr, System.IntPtr, WinRT.EventRegistrationToken*, int> addHandler,
        delegate* unmanaged[Stdcall]<System.IntPtr, WinRT.EventRegistrationToken, int> removeHandler, int index) : base(obj, addHandler, removeHandler, index)
        {
            _ = initialized;
        }

        protected override ObjectReferenceValue CreateMarshaler(global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.ListViewBase, global::Microsoft.UI.Xaml.Controls.ChoosingGroupHeaderContainerEventArgs> handler) =>
        global::ABI.Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.ListViewBase, global::Microsoft.UI.Xaml.Controls.ChoosingGroupHeaderContainerEventArgs>.CreateMarshaler2(handler);

        protected override global::ABI.WinRT.Interop.EventSourceState<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.ListViewBase, global::Microsoft.UI.Xaml.Controls.ChoosingGroupHeaderContainerEventArgs>> CreateEventSourceState() =>
        new EventState(ObjectReference.ThisPtr, Index);

        [global::WinRT.WinRTExposedType]
        private sealed class EventState : global::ABI.WinRT.Interop.EventSourceState<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.ListViewBase, global::Microsoft.UI.Xaml.Controls.ChoosingGroupHeaderContainerEventArgs>>
        {
            public EventState(System.IntPtr obj, int index)
            : base(obj, index)
            {
            }

            protected override global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.ListViewBase, global::Microsoft.UI.Xaml.Controls.ChoosingGroupHeaderContainerEventArgs> GetEventInvoke()
            {
                return (global::Microsoft.UI.Xaml.Controls.ListViewBase sender, global::Microsoft.UI.Xaml.Controls.ChoosingGroupHeaderContainerEventArgs args) =>
                {
                    var targetDelegate = TargetDelegate;
                    if (targetDelegate is null)
                    {
                        return ;
                    }
                    targetDelegate.Invoke(sender, args);
                };
            }
        }
    }

    internal sealed unsafe class _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_UI_Xaml_Controls_ItemsView__global__Microsoft_UI_Xaml_Controls_ItemsViewItemInvokedEventArgs_ : global::ABI.WinRT.Interop.EventSource<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.ItemsView, global::Microsoft.UI.Xaml.Controls.ItemsViewItemInvokedEventArgs>>
    {
        private static readonly bool initialized = global::WinRT.GenericTypeInstantiations.Windows_Foundation_TypedEventHandler_2_Microsoft_UI_Xaml_Controls_ItemsView__Microsoft_UI_Xaml_Controls_ItemsViewItemInvokedEventArgs.EnsureInitialized();

        internal _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_UI_Xaml_Controls_ItemsView__global__Microsoft_UI_Xaml_Controls_ItemsViewItemInvokedEventArgs_(IObjectReference obj,
        delegate* unmanaged[Stdcall]<System.IntPtr, System.IntPtr, WinRT.EventRegistrationToken*, int> addHandler,
        delegate* unmanaged[Stdcall]<System.IntPtr, WinRT.EventRegistrationToken, int> removeHandler, int index) : base(obj, addHandler, removeHandler, index)
        {
            _ = initialized;
        }

        protected override ObjectReferenceValue CreateMarshaler(global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.ItemsView, global::Microsoft.UI.Xaml.Controls.ItemsViewItemInvokedEventArgs> handler) =>
        global::ABI.Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.ItemsView, global::Microsoft.UI.Xaml.Controls.ItemsViewItemInvokedEventArgs>.CreateMarshaler2(handler);

        protected override global::ABI.WinRT.Interop.EventSourceState<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.ItemsView, global::Microsoft.UI.Xaml.Controls.ItemsViewItemInvokedEventArgs>> CreateEventSourceState() =>
        new EventState(ObjectReference.ThisPtr, Index);

        [global::WinRT.WinRTExposedType]
        private sealed class EventState : global::ABI.WinRT.Interop.EventSourceState<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.ItemsView, global::Microsoft.UI.Xaml.Controls.ItemsViewItemInvokedEventArgs>>
        {
            public EventState(System.IntPtr obj, int index)
            : base(obj, index)
            {
            }

            protected override global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.ItemsView, global::Microsoft.UI.Xaml.Controls.ItemsViewItemInvokedEventArgs> GetEventInvoke()
            {
                return (global::Microsoft.UI.Xaml.Controls.ItemsView sender, global::Microsoft.UI.Xaml.Controls.ItemsViewItemInvokedEventArgs args) =>
                {
                    var targetDelegate = TargetDelegate;
                    if (targetDelegate is null)
                    {
                        return ;
                    }
                    targetDelegate.Invoke(sender, args);
                };
            }
        }
    }

    internal sealed unsafe class _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_UI_Xaml_Controls_Layout__object_ : global::ABI.WinRT.Interop.EventSource<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.Layout, object>>
    {
        private static readonly bool initialized = global::WinRT.GenericTypeInstantiations.Windows_Foundation_TypedEventHandler_2_Microsoft_UI_Xaml_Controls_Layout__object.EnsureInitialized();

        internal _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_UI_Xaml_Controls_Layout__object_(IObjectReference obj,
        delegate* unmanaged[Stdcall]<System.IntPtr, System.IntPtr, WinRT.EventRegistrationToken*, int> addHandler,
        delegate* unmanaged[Stdcall]<System.IntPtr, WinRT.EventRegistrationToken, int> removeHandler, int index) : base(obj, addHandler, removeHandler, index)
        {
            _ = initialized;
        }

        protected override ObjectReferenceValue CreateMarshaler(global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.Layout, object> handler) =>
        global::ABI.Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.Layout, object>.CreateMarshaler2(handler);

        protected override global::ABI.WinRT.Interop.EventSourceState<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.Layout, object>> CreateEventSourceState() =>
        new EventState(ObjectReference.ThisPtr, Index);

        [global::WinRT.WinRTExposedType]
        private sealed class EventState : global::ABI.WinRT.Interop.EventSourceState<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.Layout, object>>
        {
            public EventState(System.IntPtr obj, int index)
            : base(obj, index)
            {
            }

            protected override global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.Layout, object> GetEventInvoke()
            {
                return (global::Microsoft.UI.Xaml.Controls.Layout sender, object args) =>
                {
                    var targetDelegate = TargetDelegate;
                    if (targetDelegate is null)
                    {
                        return ;
                    }
                    targetDelegate.Invoke(sender, args);
                };
            }
        }
    }

    internal sealed unsafe class _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_UI_Xaml_Controls_TreeView__global__Microsoft_UI_Xaml_Controls_TreeViewItemInvokedEventArgs_ : global::ABI.WinRT.Interop.EventSource<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.TreeView, global::Microsoft.UI.Xaml.Controls.TreeViewItemInvokedEventArgs>>
    {
        private static readonly bool initialized = global::WinRT.GenericTypeInstantiations.Windows_Foundation_TypedEventHandler_2_Microsoft_UI_Xaml_Controls_TreeView__Microsoft_UI_Xaml_Controls_TreeViewItemInvokedEventArgs.EnsureInitialized();

        internal _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_UI_Xaml_Controls_TreeView__global__Microsoft_UI_Xaml_Controls_TreeViewItemInvokedEventArgs_(IObjectReference obj,
        delegate* unmanaged[Stdcall]<System.IntPtr, System.IntPtr, WinRT.EventRegistrationToken*, int> addHandler,
        delegate* unmanaged[Stdcall]<System.IntPtr, WinRT.EventRegistrationToken, int> removeHandler, int index) : base(obj, addHandler, removeHandler, index)
        {
            _ = initialized;
        }

        protected override ObjectReferenceValue CreateMarshaler(global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.TreeView, global::Microsoft.UI.Xaml.Controls.TreeViewItemInvokedEventArgs> handler) =>
        global::ABI.Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.TreeView, global::Microsoft.UI.Xaml.Controls.TreeViewItemInvokedEventArgs>.CreateMarshaler2(handler);

        protected override global::ABI.WinRT.Interop.EventSourceState<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.TreeView, global::Microsoft.UI.Xaml.Controls.TreeViewItemInvokedEventArgs>> CreateEventSourceState() =>
        new EventState(ObjectReference.ThisPtr, Index);

        [global::WinRT.WinRTExposedType]
        private sealed class EventState : global::ABI.WinRT.Interop.EventSourceState<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.TreeView, global::Microsoft.UI.Xaml.Controls.TreeViewItemInvokedEventArgs>>
        {
            public EventState(System.IntPtr obj, int index)
            : base(obj, index)
            {
            }

            protected override global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.TreeView, global::Microsoft.UI.Xaml.Controls.TreeViewItemInvokedEventArgs> GetEventInvoke()
            {
                return (global::Microsoft.UI.Xaml.Controls.TreeView sender, global::Microsoft.UI.Xaml.Controls.TreeViewItemInvokedEventArgs args) =>
                {
                    var targetDelegate = TargetDelegate;
                    if (targetDelegate is null)
                    {
                        return ;
                    }
                    targetDelegate.Invoke(sender, args);
                };
            }
        }
    }

    internal sealed unsafe class _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_UI_Xaml_Controls_ContentDialog__global__Microsoft_UI_Xaml_Controls_ContentDialogOpenedEventArgs_ : global::ABI.WinRT.Interop.EventSource<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.ContentDialog, global::Microsoft.UI.Xaml.Controls.ContentDialogOpenedEventArgs>>
    {
        private static readonly bool initialized = global::WinRT.GenericTypeInstantiations.Windows_Foundation_TypedEventHandler_2_Microsoft_UI_Xaml_Controls_ContentDialog__Microsoft_UI_Xaml_Controls_ContentDialogOpenedEventArgs.EnsureInitialized();

        internal _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_UI_Xaml_Controls_ContentDialog__global__Microsoft_UI_Xaml_Controls_ContentDialogOpenedEventArgs_(IObjectReference obj,
        delegate* unmanaged[Stdcall]<System.IntPtr, System.IntPtr, WinRT.EventRegistrationToken*, int> addHandler,
        delegate* unmanaged[Stdcall]<System.IntPtr, WinRT.EventRegistrationToken, int> removeHandler, int index) : base(obj, addHandler, removeHandler, index)
        {
            _ = initialized;
        }

        protected override ObjectReferenceValue CreateMarshaler(global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.ContentDialog, global::Microsoft.UI.Xaml.Controls.ContentDialogOpenedEventArgs> handler) =>
        global::ABI.Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.ContentDialog, global::Microsoft.UI.Xaml.Controls.ContentDialogOpenedEventArgs>.CreateMarshaler2(handler);

        protected override global::ABI.WinRT.Interop.EventSourceState<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.ContentDialog, global::Microsoft.UI.Xaml.Controls.ContentDialogOpenedEventArgs>> CreateEventSourceState() =>
        new EventState(ObjectReference.ThisPtr, Index);

        [global::WinRT.WinRTExposedType]
        private sealed class EventState : global::ABI.WinRT.Interop.EventSourceState<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.ContentDialog, global::Microsoft.UI.Xaml.Controls.ContentDialogOpenedEventArgs>>
        {
            public EventState(System.IntPtr obj, int index)
            : base(obj, index)
            {
            }

            protected override global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.ContentDialog, global::Microsoft.UI.Xaml.Controls.ContentDialogOpenedEventArgs> GetEventInvoke()
            {
                return (global::Microsoft.UI.Xaml.Controls.ContentDialog sender, global::Microsoft.UI.Xaml.Controls.ContentDialogOpenedEventArgs args) =>
                {
                    var targetDelegate = TargetDelegate;
                    if (targetDelegate is null)
                    {
                        return ;
                    }
                    targetDelegate.Invoke(sender, args);
                };
            }
        }
    }

    internal sealed unsafe class _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_UI_Xaml_Controls_AnnotatedScrollBar__global__Microsoft_UI_Xaml_Controls_AnnotatedScrollBarDetailLabelRequestedEventArgs_ : global::ABI.WinRT.Interop.EventSource<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.AnnotatedScrollBar, global::Microsoft.UI.Xaml.Controls.AnnotatedScrollBarDetailLabelRequestedEventArgs>>
    {
        private static readonly bool initialized = global::WinRT.GenericTypeInstantiations.Windows_Foundation_TypedEventHandler_2_Microsoft_UI_Xaml_Controls_AnnotatedScrollBar__Microsoft_UI_Xaml_Controls_AnnotatedScrollBarDetailLabelRequestedEventArgs.EnsureInitialized();

        internal _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_UI_Xaml_Controls_AnnotatedScrollBar__global__Microsoft_UI_Xaml_Controls_AnnotatedScrollBarDetailLabelRequestedEventArgs_(IObjectReference obj,
        delegate* unmanaged[Stdcall]<System.IntPtr, System.IntPtr, WinRT.EventRegistrationToken*, int> addHandler,
        delegate* unmanaged[Stdcall]<System.IntPtr, WinRT.EventRegistrationToken, int> removeHandler, int index) : base(obj, addHandler, removeHandler, index)
        {
            _ = initialized;
        }

        protected override ObjectReferenceValue CreateMarshaler(global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.AnnotatedScrollBar, global::Microsoft.UI.Xaml.Controls.AnnotatedScrollBarDetailLabelRequestedEventArgs> handler) =>
        global::ABI.Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.AnnotatedScrollBar, global::Microsoft.UI.Xaml.Controls.AnnotatedScrollBarDetailLabelRequestedEventArgs>.CreateMarshaler2(handler);

        protected override global::ABI.WinRT.Interop.EventSourceState<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.AnnotatedScrollBar, global::Microsoft.UI.Xaml.Controls.AnnotatedScrollBarDetailLabelRequestedEventArgs>> CreateEventSourceState() =>
        new EventState(ObjectReference.ThisPtr, Index);

        [global::WinRT.WinRTExposedType]
        private sealed class EventState : global::ABI.WinRT.Interop.EventSourceState<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.AnnotatedScrollBar, global::Microsoft.UI.Xaml.Controls.AnnotatedScrollBarDetailLabelRequestedEventArgs>>
        {
            public EventState(System.IntPtr obj, int index)
            : base(obj, index)
            {
            }

            protected override global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.AnnotatedScrollBar, global::Microsoft.UI.Xaml.Controls.AnnotatedScrollBarDetailLabelRequestedEventArgs> GetEventInvoke()
            {
                return (global::Microsoft.UI.Xaml.Controls.AnnotatedScrollBar sender, global::Microsoft.UI.Xaml.Controls.AnnotatedScrollBarDetailLabelRequestedEventArgs args) =>
                {
                    var targetDelegate = TargetDelegate;
                    if (targetDelegate is null)
                    {
                        return ;
                    }
                    targetDelegate.Invoke(sender, args);
                };
            }
        }
    }

    internal sealed unsafe class _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_UI_Xaml_Controls_DatePickerFlyout__global__Microsoft_UI_Xaml_Controls_DatePickedEventArgs_ : global::ABI.WinRT.Interop.EventSource<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.DatePickerFlyout, global::Microsoft.UI.Xaml.Controls.DatePickedEventArgs>>
    {
        private static readonly bool initialized = global::WinRT.GenericTypeInstantiations.Windows_Foundation_TypedEventHandler_2_Microsoft_UI_Xaml_Controls_DatePickerFlyout__Microsoft_UI_Xaml_Controls_DatePickedEventArgs.EnsureInitialized();

        internal _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_UI_Xaml_Controls_DatePickerFlyout__global__Microsoft_UI_Xaml_Controls_DatePickedEventArgs_(IObjectReference obj,
        delegate* unmanaged[Stdcall]<System.IntPtr, System.IntPtr, WinRT.EventRegistrationToken*, int> addHandler,
        delegate* unmanaged[Stdcall]<System.IntPtr, WinRT.EventRegistrationToken, int> removeHandler, int index) : base(obj, addHandler, removeHandler, index)
        {
            _ = initialized;
        }

        protected override ObjectReferenceValue CreateMarshaler(global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.DatePickerFlyout, global::Microsoft.UI.Xaml.Controls.DatePickedEventArgs> handler) =>
        global::ABI.Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.DatePickerFlyout, global::Microsoft.UI.Xaml.Controls.DatePickedEventArgs>.CreateMarshaler2(handler);

        protected override global::ABI.WinRT.Interop.EventSourceState<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.DatePickerFlyout, global::Microsoft.UI.Xaml.Controls.DatePickedEventArgs>> CreateEventSourceState() =>
        new EventState(ObjectReference.ThisPtr, Index);

        [global::WinRT.WinRTExposedType]
        private sealed class EventState : global::ABI.WinRT.Interop.EventSourceState<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.DatePickerFlyout, global::Microsoft.UI.Xaml.Controls.DatePickedEventArgs>>
        {
            public EventState(System.IntPtr obj, int index)
            : base(obj, index)
            {
            }

            protected override global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.DatePickerFlyout, global::Microsoft.UI.Xaml.Controls.DatePickedEventArgs> GetEventInvoke()
            {
                return (global::Microsoft.UI.Xaml.Controls.DatePickerFlyout sender, global::Microsoft.UI.Xaml.Controls.DatePickedEventArgs args) =>
                {
                    var targetDelegate = TargetDelegate;
                    if (targetDelegate is null)
                    {
                        return ;
                    }
                    targetDelegate.Invoke(sender, args);
                };
            }
        }
    }

    internal sealed unsafe class _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_UI_Xaml_Controls_TextBox__global__Microsoft_UI_Xaml_Controls_TextControlCuttingToClipboardEventArgs_ : global::ABI.WinRT.Interop.EventSource<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.TextBox, global::Microsoft.UI.Xaml.Controls.TextControlCuttingToClipboardEventArgs>>
    {
        private static readonly bool initialized = global::WinRT.GenericTypeInstantiations.Windows_Foundation_TypedEventHandler_2_Microsoft_UI_Xaml_Controls_TextBox__Microsoft_UI_Xaml_Controls_TextControlCuttingToClipboardEventArgs.EnsureInitialized();

        internal _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_UI_Xaml_Controls_TextBox__global__Microsoft_UI_Xaml_Controls_TextControlCuttingToClipboardEventArgs_(IObjectReference obj,
        delegate* unmanaged[Stdcall]<System.IntPtr, System.IntPtr, WinRT.EventRegistrationToken*, int> addHandler,
        delegate* unmanaged[Stdcall]<System.IntPtr, WinRT.EventRegistrationToken, int> removeHandler, int index) : base(obj, addHandler, removeHandler, index)
        {
            _ = initialized;
        }

        protected override ObjectReferenceValue CreateMarshaler(global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.TextBox, global::Microsoft.UI.Xaml.Controls.TextControlCuttingToClipboardEventArgs> handler) =>
        global::ABI.Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.TextBox, global::Microsoft.UI.Xaml.Controls.TextControlCuttingToClipboardEventArgs>.CreateMarshaler2(handler);

        protected override global::ABI.WinRT.Interop.EventSourceState<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.TextBox, global::Microsoft.UI.Xaml.Controls.TextControlCuttingToClipboardEventArgs>> CreateEventSourceState() =>
        new EventState(ObjectReference.ThisPtr, Index);

        [global::WinRT.WinRTExposedType]
        private sealed class EventState : global::ABI.WinRT.Interop.EventSourceState<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.TextBox, global::Microsoft.UI.Xaml.Controls.TextControlCuttingToClipboardEventArgs>>
        {
            public EventState(System.IntPtr obj, int index)
            : base(obj, index)
            {
            }

            protected override global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.TextBox, global::Microsoft.UI.Xaml.Controls.TextControlCuttingToClipboardEventArgs> GetEventInvoke()
            {
                return (global::Microsoft.UI.Xaml.Controls.TextBox sender, global::Microsoft.UI.Xaml.Controls.TextControlCuttingToClipboardEventArgs args) =>
                {
                    var targetDelegate = TargetDelegate;
                    if (targetDelegate is null)
                    {
                        return ;
                    }
                    targetDelegate.Invoke(sender, args);
                };
            }
        }
    }

    internal sealed unsafe class _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_UI_Xaml_Controls_AnnotatedScrollBar__global__Microsoft_UI_Xaml_Controls_AnnotatedScrollBarScrollingEventArgs_ : global::ABI.WinRT.Interop.EventSource<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.AnnotatedScrollBar, global::Microsoft.UI.Xaml.Controls.AnnotatedScrollBarScrollingEventArgs>>
    {
        private static readonly bool initialized = global::WinRT.GenericTypeInstantiations.Windows_Foundation_TypedEventHandler_2_Microsoft_UI_Xaml_Controls_AnnotatedScrollBar__Microsoft_UI_Xaml_Controls_AnnotatedScrollBarScrollingEventArgs.EnsureInitialized();

        internal _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_UI_Xaml_Controls_AnnotatedScrollBar__global__Microsoft_UI_Xaml_Controls_AnnotatedScrollBarScrollingEventArgs_(IObjectReference obj,
        delegate* unmanaged[Stdcall]<System.IntPtr, System.IntPtr, WinRT.EventRegistrationToken*, int> addHandler,
        delegate* unmanaged[Stdcall]<System.IntPtr, WinRT.EventRegistrationToken, int> removeHandler, int index) : base(obj, addHandler, removeHandler, index)
        {
            _ = initialized;
        }

        protected override ObjectReferenceValue CreateMarshaler(global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.AnnotatedScrollBar, global::Microsoft.UI.Xaml.Controls.AnnotatedScrollBarScrollingEventArgs> handler) =>
        global::ABI.Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.AnnotatedScrollBar, global::Microsoft.UI.Xaml.Controls.AnnotatedScrollBarScrollingEventArgs>.CreateMarshaler2(handler);

        protected override global::ABI.WinRT.Interop.EventSourceState<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.AnnotatedScrollBar, global::Microsoft.UI.Xaml.Controls.AnnotatedScrollBarScrollingEventArgs>> CreateEventSourceState() =>
        new EventState(ObjectReference.ThisPtr, Index);

        [global::WinRT.WinRTExposedType]
        private sealed class EventState : global::ABI.WinRT.Interop.EventSourceState<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.AnnotatedScrollBar, global::Microsoft.UI.Xaml.Controls.AnnotatedScrollBarScrollingEventArgs>>
        {
            public EventState(System.IntPtr obj, int index)
            : base(obj, index)
            {
            }

            protected override global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.AnnotatedScrollBar, global::Microsoft.UI.Xaml.Controls.AnnotatedScrollBarScrollingEventArgs> GetEventInvoke()
            {
                return (global::Microsoft.UI.Xaml.Controls.AnnotatedScrollBar sender, global::Microsoft.UI.Xaml.Controls.AnnotatedScrollBarScrollingEventArgs args) =>
                {
                    var targetDelegate = TargetDelegate;
                    if (targetDelegate is null)
                    {
                        return ;
                    }
                    targetDelegate.Invoke(sender, args);
                };
            }
        }
    }

    internal sealed unsafe class _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_UI_Xaml_Controls_WebView2__global__Microsoft_Web_WebView2_Core_CoreWebView2NavigationStartingEventArgs_ : global::ABI.WinRT.Interop.EventSource<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.WebView2, global::Microsoft.Web.WebView2.Core.CoreWebView2NavigationStartingEventArgs>>
    {
        private static readonly bool initialized = global::WinRT.GenericTypeInstantiations.Windows_Foundation_TypedEventHandler_2_Microsoft_UI_Xaml_Controls_WebView2__Microsoft_Web_WebView2_Core_CoreWebView2NavigationStartingEventArgs.EnsureInitialized();

        internal _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_UI_Xaml_Controls_WebView2__global__Microsoft_Web_WebView2_Core_CoreWebView2NavigationStartingEventArgs_(IObjectReference obj,
        delegate* unmanaged[Stdcall]<System.IntPtr, System.IntPtr, WinRT.EventRegistrationToken*, int> addHandler,
        delegate* unmanaged[Stdcall]<System.IntPtr, WinRT.EventRegistrationToken, int> removeHandler, int index) : base(obj, addHandler, removeHandler, index)
        {
            _ = initialized;
        }

        protected override ObjectReferenceValue CreateMarshaler(global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.WebView2, global::Microsoft.Web.WebView2.Core.CoreWebView2NavigationStartingEventArgs> handler) =>
        global::ABI.Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.WebView2, global::Microsoft.Web.WebView2.Core.CoreWebView2NavigationStartingEventArgs>.CreateMarshaler2(handler);

        protected override global::ABI.WinRT.Interop.EventSourceState<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.WebView2, global::Microsoft.Web.WebView2.Core.CoreWebView2NavigationStartingEventArgs>> CreateEventSourceState() =>
        new EventState(ObjectReference.ThisPtr, Index);

        [global::WinRT.WinRTExposedType]
        private sealed class EventState : global::ABI.WinRT.Interop.EventSourceState<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.WebView2, global::Microsoft.Web.WebView2.Core.CoreWebView2NavigationStartingEventArgs>>
        {
            public EventState(System.IntPtr obj, int index)
            : base(obj, index)
            {
            }

            protected override global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.WebView2, global::Microsoft.Web.WebView2.Core.CoreWebView2NavigationStartingEventArgs> GetEventInvoke()
            {
                return (global::Microsoft.UI.Xaml.Controls.WebView2 sender, global::Microsoft.Web.WebView2.Core.CoreWebView2NavigationStartingEventArgs args) =>
                {
                    var targetDelegate = TargetDelegate;
                    if (targetDelegate is null)
                    {
                        return ;
                    }
                    targetDelegate.Invoke(sender, args);
                };
            }
        }
    }

    internal sealed unsafe class _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_UI_Xaml_Controls_Expander__global__Microsoft_UI_Xaml_Controls_ExpanderCollapsedEventArgs_ : global::ABI.WinRT.Interop.EventSource<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.Expander, global::Microsoft.UI.Xaml.Controls.ExpanderCollapsedEventArgs>>
    {
        private static readonly bool initialized = global::WinRT.GenericTypeInstantiations.Windows_Foundation_TypedEventHandler_2_Microsoft_UI_Xaml_Controls_Expander__Microsoft_UI_Xaml_Controls_ExpanderCollapsedEventArgs.EnsureInitialized();

        internal _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_UI_Xaml_Controls_Expander__global__Microsoft_UI_Xaml_Controls_ExpanderCollapsedEventArgs_(IObjectReference obj,
        delegate* unmanaged[Stdcall]<System.IntPtr, System.IntPtr, WinRT.EventRegistrationToken*, int> addHandler,
        delegate* unmanaged[Stdcall]<System.IntPtr, WinRT.EventRegistrationToken, int> removeHandler, int index) : base(obj, addHandler, removeHandler, index)
        {
            _ = initialized;
        }

        protected override ObjectReferenceValue CreateMarshaler(global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.Expander, global::Microsoft.UI.Xaml.Controls.ExpanderCollapsedEventArgs> handler) =>
        global::ABI.Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.Expander, global::Microsoft.UI.Xaml.Controls.ExpanderCollapsedEventArgs>.CreateMarshaler2(handler);

        protected override global::ABI.WinRT.Interop.EventSourceState<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.Expander, global::Microsoft.UI.Xaml.Controls.ExpanderCollapsedEventArgs>> CreateEventSourceState() =>
        new EventState(ObjectReference.ThisPtr, Index);

        [global::WinRT.WinRTExposedType]
        private sealed class EventState : global::ABI.WinRT.Interop.EventSourceState<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.Expander, global::Microsoft.UI.Xaml.Controls.ExpanderCollapsedEventArgs>>
        {
            public EventState(System.IntPtr obj, int index)
            : base(obj, index)
            {
            }

            protected override global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.Expander, global::Microsoft.UI.Xaml.Controls.ExpanderCollapsedEventArgs> GetEventInvoke()
            {
                return (global::Microsoft.UI.Xaml.Controls.Expander sender, global::Microsoft.UI.Xaml.Controls.ExpanderCollapsedEventArgs args) =>
                {
                    var targetDelegate = TargetDelegate;
                    if (targetDelegate is null)
                    {
                        return ;
                    }
                    targetDelegate.Invoke(sender, args);
                };
            }
        }
    }

    internal sealed unsafe class _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_UI_Input_GestureRecognizer__global__Microsoft_UI_Input_TappedEventArgs_ : global::ABI.WinRT.Interop.EventSource<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Input.GestureRecognizer, global::Microsoft.UI.Input.TappedEventArgs>>
    {
        private static readonly bool initialized = global::WinRT.GenericTypeInstantiations.Windows_Foundation_TypedEventHandler_2_Microsoft_UI_Input_GestureRecognizer__Microsoft_UI_Input_TappedEventArgs.EnsureInitialized();

        internal _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_UI_Input_GestureRecognizer__global__Microsoft_UI_Input_TappedEventArgs_(IObjectReference obj,
        delegate* unmanaged[Stdcall]<System.IntPtr, System.IntPtr, WinRT.EventRegistrationToken*, int> addHandler,
        delegate* unmanaged[Stdcall]<System.IntPtr, WinRT.EventRegistrationToken, int> removeHandler, int index) : base(obj, addHandler, removeHandler, index)
        {
            _ = initialized;
        }

        protected override ObjectReferenceValue CreateMarshaler(global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Input.GestureRecognizer, global::Microsoft.UI.Input.TappedEventArgs> handler) =>
        global::ABI.Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Input.GestureRecognizer, global::Microsoft.UI.Input.TappedEventArgs>.CreateMarshaler2(handler);

        protected override global::ABI.WinRT.Interop.EventSourceState<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Input.GestureRecognizer, global::Microsoft.UI.Input.TappedEventArgs>> CreateEventSourceState() =>
        new EventState(ObjectReference.ThisPtr, Index);

        [global::WinRT.WinRTExposedType]
        private sealed class EventState : global::ABI.WinRT.Interop.EventSourceState<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Input.GestureRecognizer, global::Microsoft.UI.Input.TappedEventArgs>>
        {
            public EventState(System.IntPtr obj, int index)
            : base(obj, index)
            {
            }

            protected override global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Input.GestureRecognizer, global::Microsoft.UI.Input.TappedEventArgs> GetEventInvoke()
            {
                return (global::Microsoft.UI.Input.GestureRecognizer sender, global::Microsoft.UI.Input.TappedEventArgs args) =>
                {
                    var targetDelegate = TargetDelegate;
                    if (targetDelegate is null)
                    {
                        return ;
                    }
                    targetDelegate.Invoke(sender, args);
                };
            }
        }
    }

    internal sealed unsafe class _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_UI_Xaml_Controls_NavigationView__global__Microsoft_UI_Xaml_Controls_NavigationViewItemInvokedEventArgs_ : global::ABI.WinRT.Interop.EventSource<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.NavigationView, global::Microsoft.UI.Xaml.Controls.NavigationViewItemInvokedEventArgs>>
    {
        private static readonly bool initialized = global::WinRT.GenericTypeInstantiations.Windows_Foundation_TypedEventHandler_2_Microsoft_UI_Xaml_Controls_NavigationView__Microsoft_UI_Xaml_Controls_NavigationViewItemInvokedEventArgs.EnsureInitialized();

        internal _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_UI_Xaml_Controls_NavigationView__global__Microsoft_UI_Xaml_Controls_NavigationViewItemInvokedEventArgs_(IObjectReference obj,
        delegate* unmanaged[Stdcall]<System.IntPtr, System.IntPtr, WinRT.EventRegistrationToken*, int> addHandler,
        delegate* unmanaged[Stdcall]<System.IntPtr, WinRT.EventRegistrationToken, int> removeHandler, int index) : base(obj, addHandler, removeHandler, index)
        {
            _ = initialized;
        }

        protected override ObjectReferenceValue CreateMarshaler(global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.NavigationView, global::Microsoft.UI.Xaml.Controls.NavigationViewItemInvokedEventArgs> handler) =>
        global::ABI.Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.NavigationView, global::Microsoft.UI.Xaml.Controls.NavigationViewItemInvokedEventArgs>.CreateMarshaler2(handler);

        protected override global::ABI.WinRT.Interop.EventSourceState<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.NavigationView, global::Microsoft.UI.Xaml.Controls.NavigationViewItemInvokedEventArgs>> CreateEventSourceState() =>
        new EventState(ObjectReference.ThisPtr, Index);

        [global::WinRT.WinRTExposedType]
        private sealed class EventState : global::ABI.WinRT.Interop.EventSourceState<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.NavigationView, global::Microsoft.UI.Xaml.Controls.NavigationViewItemInvokedEventArgs>>
        {
            public EventState(System.IntPtr obj, int index)
            : base(obj, index)
            {
            }

            protected override global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.NavigationView, global::Microsoft.UI.Xaml.Controls.NavigationViewItemInvokedEventArgs> GetEventInvoke()
            {
                return (global::Microsoft.UI.Xaml.Controls.NavigationView sender, global::Microsoft.UI.Xaml.Controls.NavigationViewItemInvokedEventArgs args) =>
                {
                    var targetDelegate = TargetDelegate;
                    if (targetDelegate is null)
                    {
                        return ;
                    }
                    targetDelegate.Invoke(sender, args);
                };
            }
        }
    }

    internal sealed unsafe class _EventSource_global__Microsoft_UI_Xaml_Input_ManipulationStartedEventHandler : global::ABI.WinRT.Interop.EventSource<global::Microsoft.UI.Xaml.Input.ManipulationStartedEventHandler>
    {


        internal _EventSource_global__Microsoft_UI_Xaml_Input_ManipulationStartedEventHandler(IObjectReference obj,
        delegate* unmanaged[Stdcall]<System.IntPtr, System.IntPtr, WinRT.EventRegistrationToken*, int> addHandler,
        delegate* unmanaged[Stdcall]<System.IntPtr, WinRT.EventRegistrationToken, int> removeHandler, int index) : base(obj, addHandler, removeHandler, index)
        {

        }

        protected override ObjectReferenceValue CreateMarshaler(global::Microsoft.UI.Xaml.Input.ManipulationStartedEventHandler handler) =>
        global::ABI.Microsoft.UI.Xaml.Input.ManipulationStartedEventHandler.CreateMarshaler2(handler);

        protected override global::ABI.WinRT.Interop.EventSourceState<global::Microsoft.UI.Xaml.Input.ManipulationStartedEventHandler> CreateEventSourceState() =>
        new EventState(ObjectReference.ThisPtr, Index);

        [global::WinRT.WinRTExposedType]
        private sealed class EventState : global::ABI.WinRT.Interop.EventSourceState<global::Microsoft.UI.Xaml.Input.ManipulationStartedEventHandler>
        {
            public EventState(System.IntPtr obj, int index)
            : base(obj, index)
            {
            }

            protected override global::Microsoft.UI.Xaml.Input.ManipulationStartedEventHandler GetEventInvoke()
            {
                return (object sender, global::Microsoft.UI.Xaml.Input.ManipulationStartedRoutedEventArgs e) =>
                {
                    var targetDelegate = TargetDelegate;
                    if (targetDelegate is null)
                    {
                        return ;
                    }
                    targetDelegate.Invoke(sender, e);
                };
            }
        }
    }

    internal sealed unsafe class _EventSource_global__Windows_Foundation_TypedEventHandler_object__global__Microsoft_UI_Xaml_WindowSizeChangedEventArgs_ : global::ABI.WinRT.Interop.EventSource<global::Windows.Foundation.TypedEventHandler<object, global::Microsoft.UI.Xaml.WindowSizeChangedEventArgs>>
    {
        private static readonly bool initialized = global::WinRT.GenericTypeInstantiations.Windows_Foundation_TypedEventHandler_2_object__Microsoft_UI_Xaml_WindowSizeChangedEventArgs.EnsureInitialized();

        internal _EventSource_global__Windows_Foundation_TypedEventHandler_object__global__Microsoft_UI_Xaml_WindowSizeChangedEventArgs_(IObjectReference obj,
        delegate* unmanaged[Stdcall]<System.IntPtr, System.IntPtr, WinRT.EventRegistrationToken*, int> addHandler,
        delegate* unmanaged[Stdcall]<System.IntPtr, WinRT.EventRegistrationToken, int> removeHandler, int index) : base(obj, addHandler, removeHandler, index)
        {
            _ = initialized;
        }

        protected override ObjectReferenceValue CreateMarshaler(global::Windows.Foundation.TypedEventHandler<object, global::Microsoft.UI.Xaml.WindowSizeChangedEventArgs> handler) =>
        global::ABI.Windows.Foundation.TypedEventHandler<object, global::Microsoft.UI.Xaml.WindowSizeChangedEventArgs>.CreateMarshaler2(handler);

        protected override global::ABI.WinRT.Interop.EventSourceState<global::Windows.Foundation.TypedEventHandler<object, global::Microsoft.UI.Xaml.WindowSizeChangedEventArgs>> CreateEventSourceState() =>
        new EventState(ObjectReference.ThisPtr, Index);

        [global::WinRT.WinRTExposedType]
        private sealed class EventState : global::ABI.WinRT.Interop.EventSourceState<global::Windows.Foundation.TypedEventHandler<object, global::Microsoft.UI.Xaml.WindowSizeChangedEventArgs>>
        {
            public EventState(System.IntPtr obj, int index)
            : base(obj, index)
            {
            }

            protected override global::Windows.Foundation.TypedEventHandler<object, global::Microsoft.UI.Xaml.WindowSizeChangedEventArgs> GetEventInvoke()
            {
                return (object sender, global::Microsoft.UI.Xaml.WindowSizeChangedEventArgs args) =>
                {
                    var targetDelegate = TargetDelegate;
                    if (targetDelegate is null)
                    {
                        return ;
                    }
                    targetDelegate.Invoke(sender, args);
                };
            }
        }
    }

    internal sealed unsafe class _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_UI_Xaml_Controls_WebView2__global__Microsoft_Web_WebView2_Core_CoreWebView2WebMessageReceivedEventArgs_ : global::ABI.WinRT.Interop.EventSource<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.WebView2, global::Microsoft.Web.WebView2.Core.CoreWebView2WebMessageReceivedEventArgs>>
    {
        private static readonly bool initialized = global::WinRT.GenericTypeInstantiations.Windows_Foundation_TypedEventHandler_2_Microsoft_UI_Xaml_Controls_WebView2__Microsoft_Web_WebView2_Core_CoreWebView2WebMessageReceivedEventArgs.EnsureInitialized();

        internal _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_UI_Xaml_Controls_WebView2__global__Microsoft_Web_WebView2_Core_CoreWebView2WebMessageReceivedEventArgs_(IObjectReference obj,
        delegate* unmanaged[Stdcall]<System.IntPtr, System.IntPtr, WinRT.EventRegistrationToken*, int> addHandler,
        delegate* unmanaged[Stdcall]<System.IntPtr, WinRT.EventRegistrationToken, int> removeHandler, int index) : base(obj, addHandler, removeHandler, index)
        {
            _ = initialized;
        }

        protected override ObjectReferenceValue CreateMarshaler(global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.WebView2, global::Microsoft.Web.WebView2.Core.CoreWebView2WebMessageReceivedEventArgs> handler) =>
        global::ABI.Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.WebView2, global::Microsoft.Web.WebView2.Core.CoreWebView2WebMessageReceivedEventArgs>.CreateMarshaler2(handler);

        protected override global::ABI.WinRT.Interop.EventSourceState<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.WebView2, global::Microsoft.Web.WebView2.Core.CoreWebView2WebMessageReceivedEventArgs>> CreateEventSourceState() =>
        new EventState(ObjectReference.ThisPtr, Index);

        [global::WinRT.WinRTExposedType]
        private sealed class EventState : global::ABI.WinRT.Interop.EventSourceState<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.WebView2, global::Microsoft.Web.WebView2.Core.CoreWebView2WebMessageReceivedEventArgs>>
        {
            public EventState(System.IntPtr obj, int index)
            : base(obj, index)
            {
            }

            protected override global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.WebView2, global::Microsoft.Web.WebView2.Core.CoreWebView2WebMessageReceivedEventArgs> GetEventInvoke()
            {
                return (global::Microsoft.UI.Xaml.Controls.WebView2 sender, global::Microsoft.Web.WebView2.Core.CoreWebView2WebMessageReceivedEventArgs args) =>
                {
                    var targetDelegate = TargetDelegate;
                    if (targetDelegate is null)
                    {
                        return ;
                    }
                    targetDelegate.Invoke(sender, args);
                };
            }
        }
    }

    internal sealed unsafe class _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_UI_Xaml_Controls_ScrollView__global__Microsoft_UI_Xaml_Controls_ScrollingScrollCompletedEventArgs_ : global::ABI.WinRT.Interop.EventSource<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.ScrollView, global::Microsoft.UI.Xaml.Controls.ScrollingScrollCompletedEventArgs>>
    {
        private static readonly bool initialized = global::WinRT.GenericTypeInstantiations.Windows_Foundation_TypedEventHandler_2_Microsoft_UI_Xaml_Controls_ScrollView__Microsoft_UI_Xaml_Controls_ScrollingScrollCompletedEventArgs.EnsureInitialized();

        internal _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_UI_Xaml_Controls_ScrollView__global__Microsoft_UI_Xaml_Controls_ScrollingScrollCompletedEventArgs_(IObjectReference obj,
        delegate* unmanaged[Stdcall]<System.IntPtr, System.IntPtr, WinRT.EventRegistrationToken*, int> addHandler,
        delegate* unmanaged[Stdcall]<System.IntPtr, WinRT.EventRegistrationToken, int> removeHandler, int index) : base(obj, addHandler, removeHandler, index)
        {
            _ = initialized;
        }

        protected override ObjectReferenceValue CreateMarshaler(global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.ScrollView, global::Microsoft.UI.Xaml.Controls.ScrollingScrollCompletedEventArgs> handler) =>
        global::ABI.Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.ScrollView, global::Microsoft.UI.Xaml.Controls.ScrollingScrollCompletedEventArgs>.CreateMarshaler2(handler);

        protected override global::ABI.WinRT.Interop.EventSourceState<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.ScrollView, global::Microsoft.UI.Xaml.Controls.ScrollingScrollCompletedEventArgs>> CreateEventSourceState() =>
        new EventState(ObjectReference.ThisPtr, Index);

        [global::WinRT.WinRTExposedType]
        private sealed class EventState : global::ABI.WinRT.Interop.EventSourceState<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.ScrollView, global::Microsoft.UI.Xaml.Controls.ScrollingScrollCompletedEventArgs>>
        {
            public EventState(System.IntPtr obj, int index)
            : base(obj, index)
            {
            }

            protected override global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.ScrollView, global::Microsoft.UI.Xaml.Controls.ScrollingScrollCompletedEventArgs> GetEventInvoke()
            {
                return (global::Microsoft.UI.Xaml.Controls.ScrollView sender, global::Microsoft.UI.Xaml.Controls.ScrollingScrollCompletedEventArgs args) =>
                {
                    var targetDelegate = TargetDelegate;
                    if (targetDelegate is null)
                    {
                        return ;
                    }
                    targetDelegate.Invoke(sender, args);
                };
            }
        }
    }

    internal sealed unsafe class _EventSource_global__Microsoft_UI_Xaml_Controls_ContextMenuOpeningEventHandler : global::ABI.WinRT.Interop.EventSource<global::Microsoft.UI.Xaml.Controls.ContextMenuOpeningEventHandler>
    {


        internal _EventSource_global__Microsoft_UI_Xaml_Controls_ContextMenuOpeningEventHandler(IObjectReference obj,
        delegate* unmanaged[Stdcall]<System.IntPtr, System.IntPtr, WinRT.EventRegistrationToken*, int> addHandler,
        delegate* unmanaged[Stdcall]<System.IntPtr, WinRT.EventRegistrationToken, int> removeHandler, int index) : base(obj, addHandler, removeHandler, index)
        {

        }

        protected override ObjectReferenceValue CreateMarshaler(global::Microsoft.UI.Xaml.Controls.ContextMenuOpeningEventHandler handler) =>
        global::ABI.Microsoft.UI.Xaml.Controls.ContextMenuOpeningEventHandler.CreateMarshaler2(handler);

        protected override global::ABI.WinRT.Interop.EventSourceState<global::Microsoft.UI.Xaml.Controls.ContextMenuOpeningEventHandler> CreateEventSourceState() =>
        new EventState(ObjectReference.ThisPtr, Index);

        [global::WinRT.WinRTExposedType]
        private sealed class EventState : global::ABI.WinRT.Interop.EventSourceState<global::Microsoft.UI.Xaml.Controls.ContextMenuOpeningEventHandler>
        {
            public EventState(System.IntPtr obj, int index)
            : base(obj, index)
            {
            }

            protected override global::Microsoft.UI.Xaml.Controls.ContextMenuOpeningEventHandler GetEventInvoke()
            {
                return (object sender, global::Microsoft.UI.Xaml.Controls.ContextMenuEventArgs e) =>
                {
                    var targetDelegate = TargetDelegate;
                    if (targetDelegate is null)
                    {
                        return ;
                    }
                    targetDelegate.Invoke(sender, e);
                };
            }
        }
    }

    internal sealed unsafe class _EventSource_global__Microsoft_UI_Xaml_DependencyPropertyChangedEventHandler : global::ABI.WinRT.Interop.EventSource<global::Microsoft.UI.Xaml.DependencyPropertyChangedEventHandler>
    {


        internal _EventSource_global__Microsoft_UI_Xaml_DependencyPropertyChangedEventHandler(IObjectReference obj,
        delegate* unmanaged[Stdcall]<System.IntPtr, System.IntPtr, WinRT.EventRegistrationToken*, int> addHandler,
        delegate* unmanaged[Stdcall]<System.IntPtr, WinRT.EventRegistrationToken, int> removeHandler, int index) : base(obj, addHandler, removeHandler, index)
        {

        }

        protected override ObjectReferenceValue CreateMarshaler(global::Microsoft.UI.Xaml.DependencyPropertyChangedEventHandler handler) =>
        global::ABI.Microsoft.UI.Xaml.DependencyPropertyChangedEventHandler.CreateMarshaler2(handler);

        protected override global::ABI.WinRT.Interop.EventSourceState<global::Microsoft.UI.Xaml.DependencyPropertyChangedEventHandler> CreateEventSourceState() =>
        new EventState(ObjectReference.ThisPtr, Index);

        [global::WinRT.WinRTExposedType]
        private sealed class EventState : global::ABI.WinRT.Interop.EventSourceState<global::Microsoft.UI.Xaml.DependencyPropertyChangedEventHandler>
        {
            public EventState(System.IntPtr obj, int index)
            : base(obj, index)
            {
            }

            protected override global::Microsoft.UI.Xaml.DependencyPropertyChangedEventHandler GetEventInvoke()
            {
                return (object sender, global::Microsoft.UI.Xaml.DependencyPropertyChangedEventArgs e) =>
                {
                    var targetDelegate = TargetDelegate;
                    if (targetDelegate is null)
                    {
                        return ;
                    }
                    targetDelegate.Invoke(sender, e);
                };
            }
        }
    }

    internal sealed unsafe class _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_UI_Input_InputNonClientPointerSource__global__Microsoft_UI_Input_NonClientPointerEventArgs_ : global::ABI.WinRT.Interop.EventSource<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Input.InputNonClientPointerSource, global::Microsoft.UI.Input.NonClientPointerEventArgs>>
    {
        private static readonly bool initialized = global::WinRT.GenericTypeInstantiations.Windows_Foundation_TypedEventHandler_2_Microsoft_UI_Input_InputNonClientPointerSource__Microsoft_UI_Input_NonClientPointerEventArgs.EnsureInitialized();

        internal _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_UI_Input_InputNonClientPointerSource__global__Microsoft_UI_Input_NonClientPointerEventArgs_(IObjectReference obj,
        delegate* unmanaged[Stdcall]<System.IntPtr, System.IntPtr, WinRT.EventRegistrationToken*, int> addHandler,
        delegate* unmanaged[Stdcall]<System.IntPtr, WinRT.EventRegistrationToken, int> removeHandler, int index) : base(obj, addHandler, removeHandler, index)
        {
            _ = initialized;
        }

        protected override ObjectReferenceValue CreateMarshaler(global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Input.InputNonClientPointerSource, global::Microsoft.UI.Input.NonClientPointerEventArgs> handler) =>
        global::ABI.Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Input.InputNonClientPointerSource, global::Microsoft.UI.Input.NonClientPointerEventArgs>.CreateMarshaler2(handler);

        protected override global::ABI.WinRT.Interop.EventSourceState<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Input.InputNonClientPointerSource, global::Microsoft.UI.Input.NonClientPointerEventArgs>> CreateEventSourceState() =>
        new EventState(ObjectReference.ThisPtr, Index);

        [global::WinRT.WinRTExposedType]
        private sealed class EventState : global::ABI.WinRT.Interop.EventSourceState<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Input.InputNonClientPointerSource, global::Microsoft.UI.Input.NonClientPointerEventArgs>>
        {
            public EventState(System.IntPtr obj, int index)
            : base(obj, index)
            {
            }

            protected override global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Input.InputNonClientPointerSource, global::Microsoft.UI.Input.NonClientPointerEventArgs> GetEventInvoke()
            {
                return (global::Microsoft.UI.Input.InputNonClientPointerSource sender, global::Microsoft.UI.Input.NonClientPointerEventArgs args) =>
                {
                    var targetDelegate = TargetDelegate;
                    if (targetDelegate is null)
                    {
                        return ;
                    }
                    targetDelegate.Invoke(sender, args);
                };
            }
        }
    }

    internal sealed unsafe class _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_UI_Xaml_Controls_RichTextBlockOverflow__global__Microsoft_UI_Xaml_Controls_IsTextTrimmedChangedEventArgs_ : global::ABI.WinRT.Interop.EventSource<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.RichTextBlockOverflow, global::Microsoft.UI.Xaml.Controls.IsTextTrimmedChangedEventArgs>>
    {
        private static readonly bool initialized = global::WinRT.GenericTypeInstantiations.Windows_Foundation_TypedEventHandler_2_Microsoft_UI_Xaml_Controls_RichTextBlockOverflow__Microsoft_UI_Xaml_Controls_IsTextTrimmedChangedEventArgs.EnsureInitialized();

        internal _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_UI_Xaml_Controls_RichTextBlockOverflow__global__Microsoft_UI_Xaml_Controls_IsTextTrimmedChangedEventArgs_(IObjectReference obj,
        delegate* unmanaged[Stdcall]<System.IntPtr, System.IntPtr, WinRT.EventRegistrationToken*, int> addHandler,
        delegate* unmanaged[Stdcall]<System.IntPtr, WinRT.EventRegistrationToken, int> removeHandler, int index) : base(obj, addHandler, removeHandler, index)
        {
            _ = initialized;
        }

        protected override ObjectReferenceValue CreateMarshaler(global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.RichTextBlockOverflow, global::Microsoft.UI.Xaml.Controls.IsTextTrimmedChangedEventArgs> handler) =>
        global::ABI.Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.RichTextBlockOverflow, global::Microsoft.UI.Xaml.Controls.IsTextTrimmedChangedEventArgs>.CreateMarshaler2(handler);

        protected override global::ABI.WinRT.Interop.EventSourceState<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.RichTextBlockOverflow, global::Microsoft.UI.Xaml.Controls.IsTextTrimmedChangedEventArgs>> CreateEventSourceState() =>
        new EventState(ObjectReference.ThisPtr, Index);

        [global::WinRT.WinRTExposedType]
        private sealed class EventState : global::ABI.WinRT.Interop.EventSourceState<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.RichTextBlockOverflow, global::Microsoft.UI.Xaml.Controls.IsTextTrimmedChangedEventArgs>>
        {
            public EventState(System.IntPtr obj, int index)
            : base(obj, index)
            {
            }

            protected override global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.RichTextBlockOverflow, global::Microsoft.UI.Xaml.Controls.IsTextTrimmedChangedEventArgs> GetEventInvoke()
            {
                return (global::Microsoft.UI.Xaml.Controls.RichTextBlockOverflow sender, global::Microsoft.UI.Xaml.Controls.IsTextTrimmedChangedEventArgs args) =>
                {
                    var targetDelegate = TargetDelegate;
                    if (targetDelegate is null)
                    {
                        return ;
                    }
                    targetDelegate.Invoke(sender, args);
                };
            }
        }
    }

    internal sealed unsafe class _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_UI_Xaml_Controls_NavigationView__global__Microsoft_UI_Xaml_Controls_NavigationViewBackRequestedEventArgs_ : global::ABI.WinRT.Interop.EventSource<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.NavigationView, global::Microsoft.UI.Xaml.Controls.NavigationViewBackRequestedEventArgs>>
    {
        private static readonly bool initialized = global::WinRT.GenericTypeInstantiations.Windows_Foundation_TypedEventHandler_2_Microsoft_UI_Xaml_Controls_NavigationView__Microsoft_UI_Xaml_Controls_NavigationViewBackRequestedEventArgs.EnsureInitialized();

        internal _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_UI_Xaml_Controls_NavigationView__global__Microsoft_UI_Xaml_Controls_NavigationViewBackRequestedEventArgs_(IObjectReference obj,
        delegate* unmanaged[Stdcall]<System.IntPtr, System.IntPtr, WinRT.EventRegistrationToken*, int> addHandler,
        delegate* unmanaged[Stdcall]<System.IntPtr, WinRT.EventRegistrationToken, int> removeHandler, int index) : base(obj, addHandler, removeHandler, index)
        {
            _ = initialized;
        }

        protected override ObjectReferenceValue CreateMarshaler(global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.NavigationView, global::Microsoft.UI.Xaml.Controls.NavigationViewBackRequestedEventArgs> handler) =>
        global::ABI.Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.NavigationView, global::Microsoft.UI.Xaml.Controls.NavigationViewBackRequestedEventArgs>.CreateMarshaler2(handler);

        protected override global::ABI.WinRT.Interop.EventSourceState<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.NavigationView, global::Microsoft.UI.Xaml.Controls.NavigationViewBackRequestedEventArgs>> CreateEventSourceState() =>
        new EventState(ObjectReference.ThisPtr, Index);

        [global::WinRT.WinRTExposedType]
        private sealed class EventState : global::ABI.WinRT.Interop.EventSourceState<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.NavigationView, global::Microsoft.UI.Xaml.Controls.NavigationViewBackRequestedEventArgs>>
        {
            public EventState(System.IntPtr obj, int index)
            : base(obj, index)
            {
            }

            protected override global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.NavigationView, global::Microsoft.UI.Xaml.Controls.NavigationViewBackRequestedEventArgs> GetEventInvoke()
            {
                return (global::Microsoft.UI.Xaml.Controls.NavigationView sender, global::Microsoft.UI.Xaml.Controls.NavigationViewBackRequestedEventArgs args) =>
                {
                    var targetDelegate = TargetDelegate;
                    if (targetDelegate is null)
                    {
                        return ;
                    }
                    targetDelegate.Invoke(sender, args);
                };
            }
        }
    }

    internal sealed unsafe class _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_UI_Xaml_Controls_NavigationView__global__Microsoft_UI_Xaml_Controls_NavigationViewPaneClosingEventArgs_ : global::ABI.WinRT.Interop.EventSource<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.NavigationView, global::Microsoft.UI.Xaml.Controls.NavigationViewPaneClosingEventArgs>>
    {
        private static readonly bool initialized = global::WinRT.GenericTypeInstantiations.Windows_Foundation_TypedEventHandler_2_Microsoft_UI_Xaml_Controls_NavigationView__Microsoft_UI_Xaml_Controls_NavigationViewPaneClosingEventArgs.EnsureInitialized();

        internal _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_UI_Xaml_Controls_NavigationView__global__Microsoft_UI_Xaml_Controls_NavigationViewPaneClosingEventArgs_(IObjectReference obj,
        delegate* unmanaged[Stdcall]<System.IntPtr, System.IntPtr, WinRT.EventRegistrationToken*, int> addHandler,
        delegate* unmanaged[Stdcall]<System.IntPtr, WinRT.EventRegistrationToken, int> removeHandler, int index) : base(obj, addHandler, removeHandler, index)
        {
            _ = initialized;
        }

        protected override ObjectReferenceValue CreateMarshaler(global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.NavigationView, global::Microsoft.UI.Xaml.Controls.NavigationViewPaneClosingEventArgs> handler) =>
        global::ABI.Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.NavigationView, global::Microsoft.UI.Xaml.Controls.NavigationViewPaneClosingEventArgs>.CreateMarshaler2(handler);

        protected override global::ABI.WinRT.Interop.EventSourceState<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.NavigationView, global::Microsoft.UI.Xaml.Controls.NavigationViewPaneClosingEventArgs>> CreateEventSourceState() =>
        new EventState(ObjectReference.ThisPtr, Index);

        [global::WinRT.WinRTExposedType]
        private sealed class EventState : global::ABI.WinRT.Interop.EventSourceState<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.NavigationView, global::Microsoft.UI.Xaml.Controls.NavigationViewPaneClosingEventArgs>>
        {
            public EventState(System.IntPtr obj, int index)
            : base(obj, index)
            {
            }

            protected override global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.NavigationView, global::Microsoft.UI.Xaml.Controls.NavigationViewPaneClosingEventArgs> GetEventInvoke()
            {
                return (global::Microsoft.UI.Xaml.Controls.NavigationView sender, global::Microsoft.UI.Xaml.Controls.NavigationViewPaneClosingEventArgs args) =>
                {
                    var targetDelegate = TargetDelegate;
                    if (targetDelegate is null)
                    {
                        return ;
                    }
                    targetDelegate.Invoke(sender, args);
                };
            }
        }
    }

    internal sealed unsafe class _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_UI_Composition_CompositionCapabilities__object_ : global::ABI.WinRT.Interop.EventSource<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Composition.CompositionCapabilities, object>>
    {
        private static readonly bool initialized = global::WinRT.GenericTypeInstantiations.Windows_Foundation_TypedEventHandler_2_Microsoft_UI_Composition_CompositionCapabilities__object.EnsureInitialized();

        internal _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_UI_Composition_CompositionCapabilities__object_(IObjectReference obj,
        delegate* unmanaged[Stdcall]<System.IntPtr, System.IntPtr, WinRT.EventRegistrationToken*, int> addHandler,
        delegate* unmanaged[Stdcall]<System.IntPtr, WinRT.EventRegistrationToken, int> removeHandler, int index) : base(obj, addHandler, removeHandler, index)
        {
            _ = initialized;
        }

        protected override ObjectReferenceValue CreateMarshaler(global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Composition.CompositionCapabilities, object> handler) =>
        global::ABI.Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Composition.CompositionCapabilities, object>.CreateMarshaler2(handler);

        protected override global::ABI.WinRT.Interop.EventSourceState<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Composition.CompositionCapabilities, object>> CreateEventSourceState() =>
        new EventState(ObjectReference.ThisPtr, Index);

        [global::WinRT.WinRTExposedType]
        private sealed class EventState : global::ABI.WinRT.Interop.EventSourceState<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Composition.CompositionCapabilities, object>>
        {
            public EventState(System.IntPtr obj, int index)
            : base(obj, index)
            {
            }

            protected override global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Composition.CompositionCapabilities, object> GetEventInvoke()
            {
                return (global::Microsoft.UI.Composition.CompositionCapabilities sender, object args) =>
                {
                    var targetDelegate = TargetDelegate;
                    if (targetDelegate is null)
                    {
                        return ;
                    }
                    targetDelegate.Invoke(sender, args);
                };
            }
        }
    }

    internal sealed unsafe class _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_UI_Xaml_UIElement__global__Microsoft_UI_Xaml_Input_AccessKeyDisplayRequestedEventArgs_ : global::ABI.WinRT.Interop.EventSource<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.UIElement, global::Microsoft.UI.Xaml.Input.AccessKeyDisplayRequestedEventArgs>>
    {
        private static readonly bool initialized = global::WinRT.GenericTypeInstantiations.Windows_Foundation_TypedEventHandler_2_Microsoft_UI_Xaml_UIElement__Microsoft_UI_Xaml_Input_AccessKeyDisplayRequestedEventArgs.EnsureInitialized();

        internal _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_UI_Xaml_UIElement__global__Microsoft_UI_Xaml_Input_AccessKeyDisplayRequestedEventArgs_(IObjectReference obj,
        delegate* unmanaged[Stdcall]<System.IntPtr, System.IntPtr, WinRT.EventRegistrationToken*, int> addHandler,
        delegate* unmanaged[Stdcall]<System.IntPtr, WinRT.EventRegistrationToken, int> removeHandler, int index) : base(obj, addHandler, removeHandler, index)
        {
            _ = initialized;
        }

        protected override ObjectReferenceValue CreateMarshaler(global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.UIElement, global::Microsoft.UI.Xaml.Input.AccessKeyDisplayRequestedEventArgs> handler) =>
        global::ABI.Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.UIElement, global::Microsoft.UI.Xaml.Input.AccessKeyDisplayRequestedEventArgs>.CreateMarshaler2(handler);

        protected override global::ABI.WinRT.Interop.EventSourceState<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.UIElement, global::Microsoft.UI.Xaml.Input.AccessKeyDisplayRequestedEventArgs>> CreateEventSourceState() =>
        new EventState(ObjectReference.ThisPtr, Index);

        [global::WinRT.WinRTExposedType]
        private sealed class EventState : global::ABI.WinRT.Interop.EventSourceState<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.UIElement, global::Microsoft.UI.Xaml.Input.AccessKeyDisplayRequestedEventArgs>>
        {
            public EventState(System.IntPtr obj, int index)
            : base(obj, index)
            {
            }

            protected override global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.UIElement, global::Microsoft.UI.Xaml.Input.AccessKeyDisplayRequestedEventArgs> GetEventInvoke()
            {
                return (global::Microsoft.UI.Xaml.UIElement sender, global::Microsoft.UI.Xaml.Input.AccessKeyDisplayRequestedEventArgs args) =>
                {
                    var targetDelegate = TargetDelegate;
                    if (targetDelegate is null)
                    {
                        return ;
                    }
                    targetDelegate.Invoke(sender, args);
                };
            }
        }
    }

    internal sealed unsafe class _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_UI_Input_InputNonClientPointerSource__global__Microsoft_UI_Input_ExitedMoveSizeEventArgs_ : global::ABI.WinRT.Interop.EventSource<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Input.InputNonClientPointerSource, global::Microsoft.UI.Input.ExitedMoveSizeEventArgs>>
    {
        private static readonly bool initialized = global::WinRT.GenericTypeInstantiations.Windows_Foundation_TypedEventHandler_2_Microsoft_UI_Input_InputNonClientPointerSource__Microsoft_UI_Input_ExitedMoveSizeEventArgs.EnsureInitialized();

        internal _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_UI_Input_InputNonClientPointerSource__global__Microsoft_UI_Input_ExitedMoveSizeEventArgs_(IObjectReference obj,
        delegate* unmanaged[Stdcall]<System.IntPtr, System.IntPtr, WinRT.EventRegistrationToken*, int> addHandler,
        delegate* unmanaged[Stdcall]<System.IntPtr, WinRT.EventRegistrationToken, int> removeHandler, int index) : base(obj, addHandler, removeHandler, index)
        {
            _ = initialized;
        }

        protected override ObjectReferenceValue CreateMarshaler(global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Input.InputNonClientPointerSource, global::Microsoft.UI.Input.ExitedMoveSizeEventArgs> handler) =>
        global::ABI.Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Input.InputNonClientPointerSource, global::Microsoft.UI.Input.ExitedMoveSizeEventArgs>.CreateMarshaler2(handler);

        protected override global::ABI.WinRT.Interop.EventSourceState<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Input.InputNonClientPointerSource, global::Microsoft.UI.Input.ExitedMoveSizeEventArgs>> CreateEventSourceState() =>
        new EventState(ObjectReference.ThisPtr, Index);

        [global::WinRT.WinRTExposedType]
        private sealed class EventState : global::ABI.WinRT.Interop.EventSourceState<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Input.InputNonClientPointerSource, global::Microsoft.UI.Input.ExitedMoveSizeEventArgs>>
        {
            public EventState(System.IntPtr obj, int index)
            : base(obj, index)
            {
            }

            protected override global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Input.InputNonClientPointerSource, global::Microsoft.UI.Input.ExitedMoveSizeEventArgs> GetEventInvoke()
            {
                return (global::Microsoft.UI.Input.InputNonClientPointerSource sender, global::Microsoft.UI.Input.ExitedMoveSizeEventArgs args) =>
                {
                    var targetDelegate = TargetDelegate;
                    if (targetDelegate is null)
                    {
                        return ;
                    }
                    targetDelegate.Invoke(sender, args);
                };
            }
        }
    }

    internal sealed unsafe class _EventSource_global__Microsoft_UI_Xaml_Input_TappedEventHandler : global::ABI.WinRT.Interop.EventSource<global::Microsoft.UI.Xaml.Input.TappedEventHandler>
    {


        internal _EventSource_global__Microsoft_UI_Xaml_Input_TappedEventHandler(IObjectReference obj,
        delegate* unmanaged[Stdcall]<System.IntPtr, System.IntPtr, WinRT.EventRegistrationToken*, int> addHandler,
        delegate* unmanaged[Stdcall]<System.IntPtr, WinRT.EventRegistrationToken, int> removeHandler, int index) : base(obj, addHandler, removeHandler, index)
        {

        }

        protected override ObjectReferenceValue CreateMarshaler(global::Microsoft.UI.Xaml.Input.TappedEventHandler handler) =>
        global::ABI.Microsoft.UI.Xaml.Input.TappedEventHandler.CreateMarshaler2(handler);

        protected override global::ABI.WinRT.Interop.EventSourceState<global::Microsoft.UI.Xaml.Input.TappedEventHandler> CreateEventSourceState() =>
        new EventState(ObjectReference.ThisPtr, Index);

        [global::WinRT.WinRTExposedType]
        private sealed class EventState : global::ABI.WinRT.Interop.EventSourceState<global::Microsoft.UI.Xaml.Input.TappedEventHandler>
        {
            public EventState(System.IntPtr obj, int index)
            : base(obj, index)
            {
            }

            protected override global::Microsoft.UI.Xaml.Input.TappedEventHandler GetEventInvoke()
            {
                return (object sender, global::Microsoft.UI.Xaml.Input.TappedRoutedEventArgs e) =>
                {
                    var targetDelegate = TargetDelegate;
                    if (targetDelegate is null)
                    {
                        return ;
                    }
                    targetDelegate.Invoke(sender, e);
                };
            }
        }
    }

    internal sealed unsafe class _EventSource_global__Microsoft_UI_Xaml_Controls_Primitives_ItemsChangedEventHandler : global::ABI.WinRT.Interop.EventSource<global::Microsoft.UI.Xaml.Controls.Primitives.ItemsChangedEventHandler>
    {


        internal _EventSource_global__Microsoft_UI_Xaml_Controls_Primitives_ItemsChangedEventHandler(IObjectReference obj,
        delegate* unmanaged[Stdcall]<System.IntPtr, System.IntPtr, WinRT.EventRegistrationToken*, int> addHandler,
        delegate* unmanaged[Stdcall]<System.IntPtr, WinRT.EventRegistrationToken, int> removeHandler, int index) : base(obj, addHandler, removeHandler, index)
        {

        }

        protected override ObjectReferenceValue CreateMarshaler(global::Microsoft.UI.Xaml.Controls.Primitives.ItemsChangedEventHandler handler) =>
        global::ABI.Microsoft.UI.Xaml.Controls.Primitives.ItemsChangedEventHandler.CreateMarshaler2(handler);

        protected override global::ABI.WinRT.Interop.EventSourceState<global::Microsoft.UI.Xaml.Controls.Primitives.ItemsChangedEventHandler> CreateEventSourceState() =>
        new EventState(ObjectReference.ThisPtr, Index);

        [global::WinRT.WinRTExposedType]
        private sealed class EventState : global::ABI.WinRT.Interop.EventSourceState<global::Microsoft.UI.Xaml.Controls.Primitives.ItemsChangedEventHandler>
        {
            public EventState(System.IntPtr obj, int index)
            : base(obj, index)
            {
            }

            protected override global::Microsoft.UI.Xaml.Controls.Primitives.ItemsChangedEventHandler GetEventInvoke()
            {
                return (object sender, global::Microsoft.UI.Xaml.Controls.Primitives.ItemsChangedEventArgs e) =>
                {
                    var targetDelegate = TargetDelegate;
                    if (targetDelegate is null)
                    {
                        return ;
                    }
                    targetDelegate.Invoke(sender, e);
                };
            }
        }
    }

    internal sealed unsafe class _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_UI_Xaml_Controls_Primitives_ScrollPresenter__global__Microsoft_UI_Xaml_Controls_ScrollingZoomAnimationStartingEventArgs_ : global::ABI.WinRT.Interop.EventSource<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.Primitives.ScrollPresenter, global::Microsoft.UI.Xaml.Controls.ScrollingZoomAnimationStartingEventArgs>>
    {
        private static readonly bool initialized = global::WinRT.GenericTypeInstantiations.Windows_Foundation_TypedEventHandler_2_Microsoft_UI_Xaml_Controls_Primitives_ScrollPresenter__Microsoft_UI_Xaml_Controls_ScrollingZoomAnimationStartingEventArgs.EnsureInitialized();

        internal _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_UI_Xaml_Controls_Primitives_ScrollPresenter__global__Microsoft_UI_Xaml_Controls_ScrollingZoomAnimationStartingEventArgs_(IObjectReference obj,
        delegate* unmanaged[Stdcall]<System.IntPtr, System.IntPtr, WinRT.EventRegistrationToken*, int> addHandler,
        delegate* unmanaged[Stdcall]<System.IntPtr, WinRT.EventRegistrationToken, int> removeHandler, int index) : base(obj, addHandler, removeHandler, index)
        {
            _ = initialized;
        }

        protected override ObjectReferenceValue CreateMarshaler(global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.Primitives.ScrollPresenter, global::Microsoft.UI.Xaml.Controls.ScrollingZoomAnimationStartingEventArgs> handler) =>
        global::ABI.Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.Primitives.ScrollPresenter, global::Microsoft.UI.Xaml.Controls.ScrollingZoomAnimationStartingEventArgs>.CreateMarshaler2(handler);

        protected override global::ABI.WinRT.Interop.EventSourceState<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.Primitives.ScrollPresenter, global::Microsoft.UI.Xaml.Controls.ScrollingZoomAnimationStartingEventArgs>> CreateEventSourceState() =>
        new EventState(ObjectReference.ThisPtr, Index);

        [global::WinRT.WinRTExposedType]
        private sealed class EventState : global::ABI.WinRT.Interop.EventSourceState<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.Primitives.ScrollPresenter, global::Microsoft.UI.Xaml.Controls.ScrollingZoomAnimationStartingEventArgs>>
        {
            public EventState(System.IntPtr obj, int index)
            : base(obj, index)
            {
            }

            protected override global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.Primitives.ScrollPresenter, global::Microsoft.UI.Xaml.Controls.ScrollingZoomAnimationStartingEventArgs> GetEventInvoke()
            {
                return (global::Microsoft.UI.Xaml.Controls.Primitives.ScrollPresenter sender, global::Microsoft.UI.Xaml.Controls.ScrollingZoomAnimationStartingEventArgs args) =>
                {
                    var targetDelegate = TargetDelegate;
                    if (targetDelegate is null)
                    {
                        return ;
                    }
                    targetDelegate.Invoke(sender, args);
                };
            }
        }
    }

    internal sealed unsafe class _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_Web_WebView2_Core_CoreWebView2__global__Microsoft_Web_WebView2_Core_CoreWebView2DevToolsProtocolEventReceivedEventArgs_ : global::ABI.WinRT.Interop.EventSource<global::Windows.Foundation.TypedEventHandler<global::Microsoft.Web.WebView2.Core.CoreWebView2, global::Microsoft.Web.WebView2.Core.CoreWebView2DevToolsProtocolEventReceivedEventArgs>>
    {
        private static readonly bool initialized = global::WinRT.GenericTypeInstantiations.Windows_Foundation_TypedEventHandler_2_Microsoft_Web_WebView2_Core_CoreWebView2__Microsoft_Web_WebView2_Core_CoreWebView2DevToolsProtocolEventReceivedEventArgs.EnsureInitialized();

        internal _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_Web_WebView2_Core_CoreWebView2__global__Microsoft_Web_WebView2_Core_CoreWebView2DevToolsProtocolEventReceivedEventArgs_(IObjectReference obj,
        delegate* unmanaged[Stdcall]<System.IntPtr, System.IntPtr, WinRT.EventRegistrationToken*, int> addHandler,
        delegate* unmanaged[Stdcall]<System.IntPtr, WinRT.EventRegistrationToken, int> removeHandler, int index) : base(obj, addHandler, removeHandler, index)
        {
            _ = initialized;
        }

        protected override ObjectReferenceValue CreateMarshaler(global::Windows.Foundation.TypedEventHandler<global::Microsoft.Web.WebView2.Core.CoreWebView2, global::Microsoft.Web.WebView2.Core.CoreWebView2DevToolsProtocolEventReceivedEventArgs> handler) =>
        global::ABI.Windows.Foundation.TypedEventHandler<global::Microsoft.Web.WebView2.Core.CoreWebView2, global::Microsoft.Web.WebView2.Core.CoreWebView2DevToolsProtocolEventReceivedEventArgs>.CreateMarshaler2(handler);

        protected override global::ABI.WinRT.Interop.EventSourceState<global::Windows.Foundation.TypedEventHandler<global::Microsoft.Web.WebView2.Core.CoreWebView2, global::Microsoft.Web.WebView2.Core.CoreWebView2DevToolsProtocolEventReceivedEventArgs>> CreateEventSourceState() =>
        new EventState(ObjectReference.ThisPtr, Index);

        [global::WinRT.WinRTExposedType]
        private sealed class EventState : global::ABI.WinRT.Interop.EventSourceState<global::Windows.Foundation.TypedEventHandler<global::Microsoft.Web.WebView2.Core.CoreWebView2, global::Microsoft.Web.WebView2.Core.CoreWebView2DevToolsProtocolEventReceivedEventArgs>>
        {
            public EventState(System.IntPtr obj, int index)
            : base(obj, index)
            {
            }

            protected override global::Windows.Foundation.TypedEventHandler<global::Microsoft.Web.WebView2.Core.CoreWebView2, global::Microsoft.Web.WebView2.Core.CoreWebView2DevToolsProtocolEventReceivedEventArgs> GetEventInvoke()
            {
                return (global::Microsoft.Web.WebView2.Core.CoreWebView2 sender, global::Microsoft.Web.WebView2.Core.CoreWebView2DevToolsProtocolEventReceivedEventArgs args) =>
                {
                    var targetDelegate = TargetDelegate;
                    if (targetDelegate is null)
                    {
                        return ;
                    }
                    targetDelegate.Invoke(sender, args);
                };
            }
        }
    }

    internal sealed unsafe class _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_UI_Xaml_Controls_SwapChainPanel__object_ : global::ABI.WinRT.Interop.EventSource<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.SwapChainPanel, object>>
    {
        private static readonly bool initialized = global::WinRT.GenericTypeInstantiations.Windows_Foundation_TypedEventHandler_2_Microsoft_UI_Xaml_Controls_SwapChainPanel__object.EnsureInitialized();

        internal _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_UI_Xaml_Controls_SwapChainPanel__object_(IObjectReference obj,
        delegate* unmanaged[Stdcall]<System.IntPtr, System.IntPtr, WinRT.EventRegistrationToken*, int> addHandler,
        delegate* unmanaged[Stdcall]<System.IntPtr, WinRT.EventRegistrationToken, int> removeHandler, int index) : base(obj, addHandler, removeHandler, index)
        {
            _ = initialized;
        }

        protected override ObjectReferenceValue CreateMarshaler(global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.SwapChainPanel, object> handler) =>
        global::ABI.Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.SwapChainPanel, object>.CreateMarshaler2(handler);

        protected override global::ABI.WinRT.Interop.EventSourceState<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.SwapChainPanel, object>> CreateEventSourceState() =>
        new EventState(ObjectReference.ThisPtr, Index);

        [global::WinRT.WinRTExposedType]
        private sealed class EventState : global::ABI.WinRT.Interop.EventSourceState<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.SwapChainPanel, object>>
        {
            public EventState(System.IntPtr obj, int index)
            : base(obj, index)
            {
            }

            protected override global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.SwapChainPanel, object> GetEventInvoke()
            {
                return (global::Microsoft.UI.Xaml.Controls.SwapChainPanel sender, object args) =>
                {
                    var targetDelegate = TargetDelegate;
                    if (targetDelegate is null)
                    {
                        return ;
                    }
                    targetDelegate.Invoke(sender, args);
                };
            }
        }
    }

    internal sealed unsafe class _EventSource_global__Windows_Foundation_TypedEventHandler_object__global__Microsoft_UI_Xaml_WindowActivatedEventArgs_ : global::ABI.WinRT.Interop.EventSource<global::Windows.Foundation.TypedEventHandler<object, global::Microsoft.UI.Xaml.WindowActivatedEventArgs>>
    {
        private static readonly bool initialized = global::WinRT.GenericTypeInstantiations.Windows_Foundation_TypedEventHandler_2_object__Microsoft_UI_Xaml_WindowActivatedEventArgs.EnsureInitialized();

        internal _EventSource_global__Windows_Foundation_TypedEventHandler_object__global__Microsoft_UI_Xaml_WindowActivatedEventArgs_(IObjectReference obj,
        delegate* unmanaged[Stdcall]<System.IntPtr, System.IntPtr, WinRT.EventRegistrationToken*, int> addHandler,
        delegate* unmanaged[Stdcall]<System.IntPtr, WinRT.EventRegistrationToken, int> removeHandler, int index) : base(obj, addHandler, removeHandler, index)
        {
            _ = initialized;
        }

        protected override ObjectReferenceValue CreateMarshaler(global::Windows.Foundation.TypedEventHandler<object, global::Microsoft.UI.Xaml.WindowActivatedEventArgs> handler) =>
        global::ABI.Windows.Foundation.TypedEventHandler<object, global::Microsoft.UI.Xaml.WindowActivatedEventArgs>.CreateMarshaler2(handler);

        protected override global::ABI.WinRT.Interop.EventSourceState<global::Windows.Foundation.TypedEventHandler<object, global::Microsoft.UI.Xaml.WindowActivatedEventArgs>> CreateEventSourceState() =>
        new EventState(ObjectReference.ThisPtr, Index);

        [global::WinRT.WinRTExposedType]
        private sealed class EventState : global::ABI.WinRT.Interop.EventSourceState<global::Windows.Foundation.TypedEventHandler<object, global::Microsoft.UI.Xaml.WindowActivatedEventArgs>>
        {
            public EventState(System.IntPtr obj, int index)
            : base(obj, index)
            {
            }

            protected override global::Windows.Foundation.TypedEventHandler<object, global::Microsoft.UI.Xaml.WindowActivatedEventArgs> GetEventInvoke()
            {
                return (object sender, global::Microsoft.UI.Xaml.WindowActivatedEventArgs args) =>
                {
                    var targetDelegate = TargetDelegate;
                    if (targetDelegate is null)
                    {
                        return ;
                    }
                    targetDelegate.Invoke(sender, args);
                };
            }
        }
    }

    internal sealed unsafe class _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_UI_Xaml_Controls_TextBox__global__Microsoft_UI_Xaml_Controls_TextCompositionEndedEventArgs_ : global::ABI.WinRT.Interop.EventSource<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.TextBox, global::Microsoft.UI.Xaml.Controls.TextCompositionEndedEventArgs>>
    {
        private static readonly bool initialized = global::WinRT.GenericTypeInstantiations.Windows_Foundation_TypedEventHandler_2_Microsoft_UI_Xaml_Controls_TextBox__Microsoft_UI_Xaml_Controls_TextCompositionEndedEventArgs.EnsureInitialized();

        internal _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_UI_Xaml_Controls_TextBox__global__Microsoft_UI_Xaml_Controls_TextCompositionEndedEventArgs_(IObjectReference obj,
        delegate* unmanaged[Stdcall]<System.IntPtr, System.IntPtr, WinRT.EventRegistrationToken*, int> addHandler,
        delegate* unmanaged[Stdcall]<System.IntPtr, WinRT.EventRegistrationToken, int> removeHandler, int index) : base(obj, addHandler, removeHandler, index)
        {
            _ = initialized;
        }

        protected override ObjectReferenceValue CreateMarshaler(global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.TextBox, global::Microsoft.UI.Xaml.Controls.TextCompositionEndedEventArgs> handler) =>
        global::ABI.Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.TextBox, global::Microsoft.UI.Xaml.Controls.TextCompositionEndedEventArgs>.CreateMarshaler2(handler);

        protected override global::ABI.WinRT.Interop.EventSourceState<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.TextBox, global::Microsoft.UI.Xaml.Controls.TextCompositionEndedEventArgs>> CreateEventSourceState() =>
        new EventState(ObjectReference.ThisPtr, Index);

        [global::WinRT.WinRTExposedType]
        private sealed class EventState : global::ABI.WinRT.Interop.EventSourceState<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.TextBox, global::Microsoft.UI.Xaml.Controls.TextCompositionEndedEventArgs>>
        {
            public EventState(System.IntPtr obj, int index)
            : base(obj, index)
            {
            }

            protected override global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.TextBox, global::Microsoft.UI.Xaml.Controls.TextCompositionEndedEventArgs> GetEventInvoke()
            {
                return (global::Microsoft.UI.Xaml.Controls.TextBox sender, global::Microsoft.UI.Xaml.Controls.TextCompositionEndedEventArgs args) =>
                {
                    var targetDelegate = TargetDelegate;
                    if (targetDelegate is null)
                    {
                        return ;
                    }
                    targetDelegate.Invoke(sender, args);
                };
            }
        }
    }

    internal sealed unsafe class _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_UI_Input_GestureRecognizer__global__Microsoft_UI_Input_ManipulationUpdatedEventArgs_ : global::ABI.WinRT.Interop.EventSource<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Input.GestureRecognizer, global::Microsoft.UI.Input.ManipulationUpdatedEventArgs>>
    {
        private static readonly bool initialized = global::WinRT.GenericTypeInstantiations.Windows_Foundation_TypedEventHandler_2_Microsoft_UI_Input_GestureRecognizer__Microsoft_UI_Input_ManipulationUpdatedEventArgs.EnsureInitialized();

        internal _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_UI_Input_GestureRecognizer__global__Microsoft_UI_Input_ManipulationUpdatedEventArgs_(IObjectReference obj,
        delegate* unmanaged[Stdcall]<System.IntPtr, System.IntPtr, WinRT.EventRegistrationToken*, int> addHandler,
        delegate* unmanaged[Stdcall]<System.IntPtr, WinRT.EventRegistrationToken, int> removeHandler, int index) : base(obj, addHandler, removeHandler, index)
        {
            _ = initialized;
        }

        protected override ObjectReferenceValue CreateMarshaler(global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Input.GestureRecognizer, global::Microsoft.UI.Input.ManipulationUpdatedEventArgs> handler) =>
        global::ABI.Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Input.GestureRecognizer, global::Microsoft.UI.Input.ManipulationUpdatedEventArgs>.CreateMarshaler2(handler);

        protected override global::ABI.WinRT.Interop.EventSourceState<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Input.GestureRecognizer, global::Microsoft.UI.Input.ManipulationUpdatedEventArgs>> CreateEventSourceState() =>
        new EventState(ObjectReference.ThisPtr, Index);

        [global::WinRT.WinRTExposedType]
        private sealed class EventState : global::ABI.WinRT.Interop.EventSourceState<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Input.GestureRecognizer, global::Microsoft.UI.Input.ManipulationUpdatedEventArgs>>
        {
            public EventState(System.IntPtr obj, int index)
            : base(obj, index)
            {
            }

            protected override global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Input.GestureRecognizer, global::Microsoft.UI.Input.ManipulationUpdatedEventArgs> GetEventInvoke()
            {
                return (global::Microsoft.UI.Input.GestureRecognizer sender, global::Microsoft.UI.Input.ManipulationUpdatedEventArgs args) =>
                {
                    var targetDelegate = TargetDelegate;
                    if (targetDelegate is null)
                    {
                        return ;
                    }
                    targetDelegate.Invoke(sender, args);
                };
            }
        }
    }

    internal sealed unsafe class _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_UI_Xaml_Controls_TextBox__global__Microsoft_UI_Xaml_Controls_TextCompositionChangedEventArgs_ : global::ABI.WinRT.Interop.EventSource<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.TextBox, global::Microsoft.UI.Xaml.Controls.TextCompositionChangedEventArgs>>
    {
        private static readonly bool initialized = global::WinRT.GenericTypeInstantiations.Windows_Foundation_TypedEventHandler_2_Microsoft_UI_Xaml_Controls_TextBox__Microsoft_UI_Xaml_Controls_TextCompositionChangedEventArgs.EnsureInitialized();

        internal _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_UI_Xaml_Controls_TextBox__global__Microsoft_UI_Xaml_Controls_TextCompositionChangedEventArgs_(IObjectReference obj,
        delegate* unmanaged[Stdcall]<System.IntPtr, System.IntPtr, WinRT.EventRegistrationToken*, int> addHandler,
        delegate* unmanaged[Stdcall]<System.IntPtr, WinRT.EventRegistrationToken, int> removeHandler, int index) : base(obj, addHandler, removeHandler, index)
        {
            _ = initialized;
        }

        protected override ObjectReferenceValue CreateMarshaler(global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.TextBox, global::Microsoft.UI.Xaml.Controls.TextCompositionChangedEventArgs> handler) =>
        global::ABI.Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.TextBox, global::Microsoft.UI.Xaml.Controls.TextCompositionChangedEventArgs>.CreateMarshaler2(handler);

        protected override global::ABI.WinRT.Interop.EventSourceState<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.TextBox, global::Microsoft.UI.Xaml.Controls.TextCompositionChangedEventArgs>> CreateEventSourceState() =>
        new EventState(ObjectReference.ThisPtr, Index);

        [global::WinRT.WinRTExposedType]
        private sealed class EventState : global::ABI.WinRT.Interop.EventSourceState<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.TextBox, global::Microsoft.UI.Xaml.Controls.TextCompositionChangedEventArgs>>
        {
            public EventState(System.IntPtr obj, int index)
            : base(obj, index)
            {
            }

            protected override global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.TextBox, global::Microsoft.UI.Xaml.Controls.TextCompositionChangedEventArgs> GetEventInvoke()
            {
                return (global::Microsoft.UI.Xaml.Controls.TextBox sender, global::Microsoft.UI.Xaml.Controls.TextCompositionChangedEventArgs args) =>
                {
                    var targetDelegate = TargetDelegate;
                    if (targetDelegate is null)
                    {
                        return ;
                    }
                    targetDelegate.Invoke(sender, args);
                };
            }
        }
    }

    internal sealed unsafe class _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_UI_Xaml_Media_Imaging_SvgImageSource__global__Microsoft_UI_Xaml_Media_Imaging_SvgImageSourceOpenedEventArgs_ : global::ABI.WinRT.Interop.EventSource<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Media.Imaging.SvgImageSource, global::Microsoft.UI.Xaml.Media.Imaging.SvgImageSourceOpenedEventArgs>>
    {
        private static readonly bool initialized = global::WinRT.GenericTypeInstantiations.Windows_Foundation_TypedEventHandler_2_Microsoft_UI_Xaml_Media_Imaging_SvgImageSource__Microsoft_UI_Xaml_Media_Imaging_SvgImageSourceOpenedEventArgs.EnsureInitialized();

        internal _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_UI_Xaml_Media_Imaging_SvgImageSource__global__Microsoft_UI_Xaml_Media_Imaging_SvgImageSourceOpenedEventArgs_(IObjectReference obj,
        delegate* unmanaged[Stdcall]<System.IntPtr, System.IntPtr, WinRT.EventRegistrationToken*, int> addHandler,
        delegate* unmanaged[Stdcall]<System.IntPtr, WinRT.EventRegistrationToken, int> removeHandler, int index) : base(obj, addHandler, removeHandler, index)
        {
            _ = initialized;
        }

        protected override ObjectReferenceValue CreateMarshaler(global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Media.Imaging.SvgImageSource, global::Microsoft.UI.Xaml.Media.Imaging.SvgImageSourceOpenedEventArgs> handler) =>
        global::ABI.Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Media.Imaging.SvgImageSource, global::Microsoft.UI.Xaml.Media.Imaging.SvgImageSourceOpenedEventArgs>.CreateMarshaler2(handler);

        protected override global::ABI.WinRT.Interop.EventSourceState<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Media.Imaging.SvgImageSource, global::Microsoft.UI.Xaml.Media.Imaging.SvgImageSourceOpenedEventArgs>> CreateEventSourceState() =>
        new EventState(ObjectReference.ThisPtr, Index);

        [global::WinRT.WinRTExposedType]
        private sealed class EventState : global::ABI.WinRT.Interop.EventSourceState<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Media.Imaging.SvgImageSource, global::Microsoft.UI.Xaml.Media.Imaging.SvgImageSourceOpenedEventArgs>>
        {
            public EventState(System.IntPtr obj, int index)
            : base(obj, index)
            {
            }

            protected override global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Media.Imaging.SvgImageSource, global::Microsoft.UI.Xaml.Media.Imaging.SvgImageSourceOpenedEventArgs> GetEventInvoke()
            {
                return (global::Microsoft.UI.Xaml.Media.Imaging.SvgImageSource sender, global::Microsoft.UI.Xaml.Media.Imaging.SvgImageSourceOpenedEventArgs args) =>
                {
                    var targetDelegate = TargetDelegate;
                    if (targetDelegate is null)
                    {
                        return ;
                    }
                    targetDelegate.Invoke(sender, args);
                };
            }
        }
    }

    internal sealed unsafe class _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_UI_Xaml_Controls_WebView2__global__Microsoft_Web_WebView2_Core_CoreWebView2ProcessFailedEventArgs_ : global::ABI.WinRT.Interop.EventSource<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.WebView2, global::Microsoft.Web.WebView2.Core.CoreWebView2ProcessFailedEventArgs>>
    {
        private static readonly bool initialized = global::WinRT.GenericTypeInstantiations.Windows_Foundation_TypedEventHandler_2_Microsoft_UI_Xaml_Controls_WebView2__Microsoft_Web_WebView2_Core_CoreWebView2ProcessFailedEventArgs.EnsureInitialized();

        internal _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_UI_Xaml_Controls_WebView2__global__Microsoft_Web_WebView2_Core_CoreWebView2ProcessFailedEventArgs_(IObjectReference obj,
        delegate* unmanaged[Stdcall]<System.IntPtr, System.IntPtr, WinRT.EventRegistrationToken*, int> addHandler,
        delegate* unmanaged[Stdcall]<System.IntPtr, WinRT.EventRegistrationToken, int> removeHandler, int index) : base(obj, addHandler, removeHandler, index)
        {
            _ = initialized;
        }

        protected override ObjectReferenceValue CreateMarshaler(global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.WebView2, global::Microsoft.Web.WebView2.Core.CoreWebView2ProcessFailedEventArgs> handler) =>
        global::ABI.Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.WebView2, global::Microsoft.Web.WebView2.Core.CoreWebView2ProcessFailedEventArgs>.CreateMarshaler2(handler);

        protected override global::ABI.WinRT.Interop.EventSourceState<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.WebView2, global::Microsoft.Web.WebView2.Core.CoreWebView2ProcessFailedEventArgs>> CreateEventSourceState() =>
        new EventState(ObjectReference.ThisPtr, Index);

        [global::WinRT.WinRTExposedType]
        private sealed class EventState : global::ABI.WinRT.Interop.EventSourceState<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.WebView2, global::Microsoft.Web.WebView2.Core.CoreWebView2ProcessFailedEventArgs>>
        {
            public EventState(System.IntPtr obj, int index)
            : base(obj, index)
            {
            }

            protected override global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.WebView2, global::Microsoft.Web.WebView2.Core.CoreWebView2ProcessFailedEventArgs> GetEventInvoke()
            {
                return (global::Microsoft.UI.Xaml.Controls.WebView2 sender, global::Microsoft.Web.WebView2.Core.CoreWebView2ProcessFailedEventArgs args) =>
                {
                    var targetDelegate = TargetDelegate;
                    if (targetDelegate is null)
                    {
                        return ;
                    }
                    targetDelegate.Invoke(sender, args);
                };
            }
        }
    }

    internal sealed unsafe class _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_UI_Xaml_Controls_ListViewBase__global__Microsoft_UI_Xaml_Controls_DragItemsCompletedEventArgs_ : global::ABI.WinRT.Interop.EventSource<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.ListViewBase, global::Microsoft.UI.Xaml.Controls.DragItemsCompletedEventArgs>>
    {
        private static readonly bool initialized = global::WinRT.GenericTypeInstantiations.Windows_Foundation_TypedEventHandler_2_Microsoft_UI_Xaml_Controls_ListViewBase__Microsoft_UI_Xaml_Controls_DragItemsCompletedEventArgs.EnsureInitialized();

        internal _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_UI_Xaml_Controls_ListViewBase__global__Microsoft_UI_Xaml_Controls_DragItemsCompletedEventArgs_(IObjectReference obj,
        delegate* unmanaged[Stdcall]<System.IntPtr, System.IntPtr, WinRT.EventRegistrationToken*, int> addHandler,
        delegate* unmanaged[Stdcall]<System.IntPtr, WinRT.EventRegistrationToken, int> removeHandler, int index) : base(obj, addHandler, removeHandler, index)
        {
            _ = initialized;
        }

        protected override ObjectReferenceValue CreateMarshaler(global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.ListViewBase, global::Microsoft.UI.Xaml.Controls.DragItemsCompletedEventArgs> handler) =>
        global::ABI.Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.ListViewBase, global::Microsoft.UI.Xaml.Controls.DragItemsCompletedEventArgs>.CreateMarshaler2(handler);

        protected override global::ABI.WinRT.Interop.EventSourceState<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.ListViewBase, global::Microsoft.UI.Xaml.Controls.DragItemsCompletedEventArgs>> CreateEventSourceState() =>
        new EventState(ObjectReference.ThisPtr, Index);

        [global::WinRT.WinRTExposedType]
        private sealed class EventState : global::ABI.WinRT.Interop.EventSourceState<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.ListViewBase, global::Microsoft.UI.Xaml.Controls.DragItemsCompletedEventArgs>>
        {
            public EventState(System.IntPtr obj, int index)
            : base(obj, index)
            {
            }

            protected override global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.ListViewBase, global::Microsoft.UI.Xaml.Controls.DragItemsCompletedEventArgs> GetEventInvoke()
            {
                return (global::Microsoft.UI.Xaml.Controls.ListViewBase sender, global::Microsoft.UI.Xaml.Controls.DragItemsCompletedEventArgs args) =>
                {
                    var targetDelegate = TargetDelegate;
                    if (targetDelegate is null)
                    {
                        return ;
                    }
                    targetDelegate.Invoke(sender, args);
                };
            }
        }
    }

    internal sealed unsafe class _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_UI_Xaml_Controls_RichEditBox__global__Microsoft_UI_Xaml_Controls_RichEditBoxSelectionChangingEventArgs_ : global::ABI.WinRT.Interop.EventSource<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.RichEditBox, global::Microsoft.UI.Xaml.Controls.RichEditBoxSelectionChangingEventArgs>>
    {
        private static readonly bool initialized = global::WinRT.GenericTypeInstantiations.Windows_Foundation_TypedEventHandler_2_Microsoft_UI_Xaml_Controls_RichEditBox__Microsoft_UI_Xaml_Controls_RichEditBoxSelectionChangingEventArgs.EnsureInitialized();

        internal _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_UI_Xaml_Controls_RichEditBox__global__Microsoft_UI_Xaml_Controls_RichEditBoxSelectionChangingEventArgs_(IObjectReference obj,
        delegate* unmanaged[Stdcall]<System.IntPtr, System.IntPtr, WinRT.EventRegistrationToken*, int> addHandler,
        delegate* unmanaged[Stdcall]<System.IntPtr, WinRT.EventRegistrationToken, int> removeHandler, int index) : base(obj, addHandler, removeHandler, index)
        {
            _ = initialized;
        }

        protected override ObjectReferenceValue CreateMarshaler(global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.RichEditBox, global::Microsoft.UI.Xaml.Controls.RichEditBoxSelectionChangingEventArgs> handler) =>
        global::ABI.Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.RichEditBox, global::Microsoft.UI.Xaml.Controls.RichEditBoxSelectionChangingEventArgs>.CreateMarshaler2(handler);

        protected override global::ABI.WinRT.Interop.EventSourceState<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.RichEditBox, global::Microsoft.UI.Xaml.Controls.RichEditBoxSelectionChangingEventArgs>> CreateEventSourceState() =>
        new EventState(ObjectReference.ThisPtr, Index);

        [global::WinRT.WinRTExposedType]
        private sealed class EventState : global::ABI.WinRT.Interop.EventSourceState<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.RichEditBox, global::Microsoft.UI.Xaml.Controls.RichEditBoxSelectionChangingEventArgs>>
        {
            public EventState(System.IntPtr obj, int index)
            : base(obj, index)
            {
            }

            protected override global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.RichEditBox, global::Microsoft.UI.Xaml.Controls.RichEditBoxSelectionChangingEventArgs> GetEventInvoke()
            {
                return (global::Microsoft.UI.Xaml.Controls.RichEditBox sender, global::Microsoft.UI.Xaml.Controls.RichEditBoxSelectionChangingEventArgs args) =>
                {
                    var targetDelegate = TargetDelegate;
                    if (targetDelegate is null)
                    {
                        return ;
                    }
                    targetDelegate.Invoke(sender, args);
                };
            }
        }
    }

    internal sealed unsafe class _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_UI_Xaml_Controls_ItemsRepeater__global__Microsoft_UI_Xaml_Controls_ItemsRepeaterElementPreparedEventArgs_ : global::ABI.WinRT.Interop.EventSource<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.ItemsRepeater, global::Microsoft.UI.Xaml.Controls.ItemsRepeaterElementPreparedEventArgs>>
    {
        private static readonly bool initialized = global::WinRT.GenericTypeInstantiations.Windows_Foundation_TypedEventHandler_2_Microsoft_UI_Xaml_Controls_ItemsRepeater__Microsoft_UI_Xaml_Controls_ItemsRepeaterElementPreparedEventArgs.EnsureInitialized();

        internal _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_UI_Xaml_Controls_ItemsRepeater__global__Microsoft_UI_Xaml_Controls_ItemsRepeaterElementPreparedEventArgs_(IObjectReference obj,
        delegate* unmanaged[Stdcall]<System.IntPtr, System.IntPtr, WinRT.EventRegistrationToken*, int> addHandler,
        delegate* unmanaged[Stdcall]<System.IntPtr, WinRT.EventRegistrationToken, int> removeHandler, int index) : base(obj, addHandler, removeHandler, index)
        {
            _ = initialized;
        }

        protected override ObjectReferenceValue CreateMarshaler(global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.ItemsRepeater, global::Microsoft.UI.Xaml.Controls.ItemsRepeaterElementPreparedEventArgs> handler) =>
        global::ABI.Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.ItemsRepeater, global::Microsoft.UI.Xaml.Controls.ItemsRepeaterElementPreparedEventArgs>.CreateMarshaler2(handler);

        protected override global::ABI.WinRT.Interop.EventSourceState<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.ItemsRepeater, global::Microsoft.UI.Xaml.Controls.ItemsRepeaterElementPreparedEventArgs>> CreateEventSourceState() =>
        new EventState(ObjectReference.ThisPtr, Index);

        [global::WinRT.WinRTExposedType]
        private sealed class EventState : global::ABI.WinRT.Interop.EventSourceState<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.ItemsRepeater, global::Microsoft.UI.Xaml.Controls.ItemsRepeaterElementPreparedEventArgs>>
        {
            public EventState(System.IntPtr obj, int index)
            : base(obj, index)
            {
            }

            protected override global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.ItemsRepeater, global::Microsoft.UI.Xaml.Controls.ItemsRepeaterElementPreparedEventArgs> GetEventInvoke()
            {
                return (global::Microsoft.UI.Xaml.Controls.ItemsRepeater sender, global::Microsoft.UI.Xaml.Controls.ItemsRepeaterElementPreparedEventArgs args) =>
                {
                    var targetDelegate = TargetDelegate;
                    if (targetDelegate is null)
                    {
                        return ;
                    }
                    targetDelegate.Invoke(sender, args);
                };
            }
        }
    }

    internal sealed unsafe class _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_UI_Input_GestureRecognizer__global__Microsoft_UI_Input_RightTappedEventArgs_ : global::ABI.WinRT.Interop.EventSource<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Input.GestureRecognizer, global::Microsoft.UI.Input.RightTappedEventArgs>>
    {
        private static readonly bool initialized = global::WinRT.GenericTypeInstantiations.Windows_Foundation_TypedEventHandler_2_Microsoft_UI_Input_GestureRecognizer__Microsoft_UI_Input_RightTappedEventArgs.EnsureInitialized();

        internal _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_UI_Input_GestureRecognizer__global__Microsoft_UI_Input_RightTappedEventArgs_(IObjectReference obj,
        delegate* unmanaged[Stdcall]<System.IntPtr, System.IntPtr, WinRT.EventRegistrationToken*, int> addHandler,
        delegate* unmanaged[Stdcall]<System.IntPtr, WinRT.EventRegistrationToken, int> removeHandler, int index) : base(obj, addHandler, removeHandler, index)
        {
            _ = initialized;
        }

        protected override ObjectReferenceValue CreateMarshaler(global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Input.GestureRecognizer, global::Microsoft.UI.Input.RightTappedEventArgs> handler) =>
        global::ABI.Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Input.GestureRecognizer, global::Microsoft.UI.Input.RightTappedEventArgs>.CreateMarshaler2(handler);

        protected override global::ABI.WinRT.Interop.EventSourceState<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Input.GestureRecognizer, global::Microsoft.UI.Input.RightTappedEventArgs>> CreateEventSourceState() =>
        new EventState(ObjectReference.ThisPtr, Index);

        [global::WinRT.WinRTExposedType]
        private sealed class EventState : global::ABI.WinRT.Interop.EventSourceState<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Input.GestureRecognizer, global::Microsoft.UI.Input.RightTappedEventArgs>>
        {
            public EventState(System.IntPtr obj, int index)
            : base(obj, index)
            {
            }

            protected override global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Input.GestureRecognizer, global::Microsoft.UI.Input.RightTappedEventArgs> GetEventInvoke()
            {
                return (global::Microsoft.UI.Input.GestureRecognizer sender, global::Microsoft.UI.Input.RightTappedEventArgs args) =>
                {
                    var targetDelegate = TargetDelegate;
                    if (targetDelegate is null)
                    {
                        return ;
                    }
                    targetDelegate.Invoke(sender, args);
                };
            }
        }
    }

    internal sealed unsafe class _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_UI_Xaml_FrameworkElement__global__Microsoft_UI_Xaml_EffectiveViewportChangedEventArgs_ : global::ABI.WinRT.Interop.EventSource<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.FrameworkElement, global::Microsoft.UI.Xaml.EffectiveViewportChangedEventArgs>>
    {
        private static readonly bool initialized = global::WinRT.GenericTypeInstantiations.Windows_Foundation_TypedEventHandler_2_Microsoft_UI_Xaml_FrameworkElement__Microsoft_UI_Xaml_EffectiveViewportChangedEventArgs.EnsureInitialized();

        internal _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_UI_Xaml_FrameworkElement__global__Microsoft_UI_Xaml_EffectiveViewportChangedEventArgs_(IObjectReference obj,
        delegate* unmanaged[Stdcall]<System.IntPtr, System.IntPtr, WinRT.EventRegistrationToken*, int> addHandler,
        delegate* unmanaged[Stdcall]<System.IntPtr, WinRT.EventRegistrationToken, int> removeHandler, int index) : base(obj, addHandler, removeHandler, index)
        {
            _ = initialized;
        }

        protected override ObjectReferenceValue CreateMarshaler(global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.FrameworkElement, global::Microsoft.UI.Xaml.EffectiveViewportChangedEventArgs> handler) =>
        global::ABI.Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.FrameworkElement, global::Microsoft.UI.Xaml.EffectiveViewportChangedEventArgs>.CreateMarshaler2(handler);

        protected override global::ABI.WinRT.Interop.EventSourceState<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.FrameworkElement, global::Microsoft.UI.Xaml.EffectiveViewportChangedEventArgs>> CreateEventSourceState() =>
        new EventState(ObjectReference.ThisPtr, Index);

        [global::WinRT.WinRTExposedType]
        private sealed class EventState : global::ABI.WinRT.Interop.EventSourceState<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.FrameworkElement, global::Microsoft.UI.Xaml.EffectiveViewportChangedEventArgs>>
        {
            public EventState(System.IntPtr obj, int index)
            : base(obj, index)
            {
            }

            protected override global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.FrameworkElement, global::Microsoft.UI.Xaml.EffectiveViewportChangedEventArgs> GetEventInvoke()
            {
                return (global::Microsoft.UI.Xaml.FrameworkElement sender, global::Microsoft.UI.Xaml.EffectiveViewportChangedEventArgs args) =>
                {
                    var targetDelegate = TargetDelegate;
                    if (targetDelegate is null)
                    {
                        return ;
                    }
                    targetDelegate.Invoke(sender, args);
                };
            }
        }
    }

    internal sealed unsafe class _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_UI_Xaml_Controls_SplitView__global__Microsoft_UI_Xaml_Controls_SplitViewPaneClosingEventArgs_ : global::ABI.WinRT.Interop.EventSource<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.SplitView, global::Microsoft.UI.Xaml.Controls.SplitViewPaneClosingEventArgs>>
    {
        private static readonly bool initialized = global::WinRT.GenericTypeInstantiations.Windows_Foundation_TypedEventHandler_2_Microsoft_UI_Xaml_Controls_SplitView__Microsoft_UI_Xaml_Controls_SplitViewPaneClosingEventArgs.EnsureInitialized();

        internal _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_UI_Xaml_Controls_SplitView__global__Microsoft_UI_Xaml_Controls_SplitViewPaneClosingEventArgs_(IObjectReference obj,
        delegate* unmanaged[Stdcall]<System.IntPtr, System.IntPtr, WinRT.EventRegistrationToken*, int> addHandler,
        delegate* unmanaged[Stdcall]<System.IntPtr, WinRT.EventRegistrationToken, int> removeHandler, int index) : base(obj, addHandler, removeHandler, index)
        {
            _ = initialized;
        }

        protected override ObjectReferenceValue CreateMarshaler(global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.SplitView, global::Microsoft.UI.Xaml.Controls.SplitViewPaneClosingEventArgs> handler) =>
        global::ABI.Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.SplitView, global::Microsoft.UI.Xaml.Controls.SplitViewPaneClosingEventArgs>.CreateMarshaler2(handler);

        protected override global::ABI.WinRT.Interop.EventSourceState<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.SplitView, global::Microsoft.UI.Xaml.Controls.SplitViewPaneClosingEventArgs>> CreateEventSourceState() =>
        new EventState(ObjectReference.ThisPtr, Index);

        [global::WinRT.WinRTExposedType]
        private sealed class EventState : global::ABI.WinRT.Interop.EventSourceState<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.SplitView, global::Microsoft.UI.Xaml.Controls.SplitViewPaneClosingEventArgs>>
        {
            public EventState(System.IntPtr obj, int index)
            : base(obj, index)
            {
            }

            protected override global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.SplitView, global::Microsoft.UI.Xaml.Controls.SplitViewPaneClosingEventArgs> GetEventInvoke()
            {
                return (global::Microsoft.UI.Xaml.Controls.SplitView sender, global::Microsoft.UI.Xaml.Controls.SplitViewPaneClosingEventArgs args) =>
                {
                    var targetDelegate = TargetDelegate;
                    if (targetDelegate is null)
                    {
                        return ;
                    }
                    targetDelegate.Invoke(sender, args);
                };
            }
        }
    }

    internal sealed unsafe class _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_UI_Xaml_Controls_TextBox__global__Microsoft_UI_Xaml_Controls_TextBoxSelectionChangingEventArgs_ : global::ABI.WinRT.Interop.EventSource<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.TextBox, global::Microsoft.UI.Xaml.Controls.TextBoxSelectionChangingEventArgs>>
    {
        private static readonly bool initialized = global::WinRT.GenericTypeInstantiations.Windows_Foundation_TypedEventHandler_2_Microsoft_UI_Xaml_Controls_TextBox__Microsoft_UI_Xaml_Controls_TextBoxSelectionChangingEventArgs.EnsureInitialized();

        internal _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_UI_Xaml_Controls_TextBox__global__Microsoft_UI_Xaml_Controls_TextBoxSelectionChangingEventArgs_(IObjectReference obj,
        delegate* unmanaged[Stdcall]<System.IntPtr, System.IntPtr, WinRT.EventRegistrationToken*, int> addHandler,
        delegate* unmanaged[Stdcall]<System.IntPtr, WinRT.EventRegistrationToken, int> removeHandler, int index) : base(obj, addHandler, removeHandler, index)
        {
            _ = initialized;
        }

        protected override ObjectReferenceValue CreateMarshaler(global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.TextBox, global::Microsoft.UI.Xaml.Controls.TextBoxSelectionChangingEventArgs> handler) =>
        global::ABI.Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.TextBox, global::Microsoft.UI.Xaml.Controls.TextBoxSelectionChangingEventArgs>.CreateMarshaler2(handler);

        protected override global::ABI.WinRT.Interop.EventSourceState<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.TextBox, global::Microsoft.UI.Xaml.Controls.TextBoxSelectionChangingEventArgs>> CreateEventSourceState() =>
        new EventState(ObjectReference.ThisPtr, Index);

        [global::WinRT.WinRTExposedType]
        private sealed class EventState : global::ABI.WinRT.Interop.EventSourceState<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.TextBox, global::Microsoft.UI.Xaml.Controls.TextBoxSelectionChangingEventArgs>>
        {
            public EventState(System.IntPtr obj, int index)
            : base(obj, index)
            {
            }

            protected override global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.TextBox, global::Microsoft.UI.Xaml.Controls.TextBoxSelectionChangingEventArgs> GetEventInvoke()
            {
                return (global::Microsoft.UI.Xaml.Controls.TextBox sender, global::Microsoft.UI.Xaml.Controls.TextBoxSelectionChangingEventArgs args) =>
                {
                    var targetDelegate = TargetDelegate;
                    if (targetDelegate is null)
                    {
                        return ;
                    }
                    targetDelegate.Invoke(sender, args);
                };
            }
        }
    }

    internal sealed unsafe class _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_Web_WebView2_Core_CoreWebView2Controller__global__Microsoft_Web_WebView2_Core_CoreWebView2MoveFocusRequestedEventArgs_ : global::ABI.WinRT.Interop.EventSource<global::Windows.Foundation.TypedEventHandler<global::Microsoft.Web.WebView2.Core.CoreWebView2Controller, global::Microsoft.Web.WebView2.Core.CoreWebView2MoveFocusRequestedEventArgs>>
    {
        private static readonly bool initialized = global::WinRT.GenericTypeInstantiations.Windows_Foundation_TypedEventHandler_2_Microsoft_Web_WebView2_Core_CoreWebView2Controller__Microsoft_Web_WebView2_Core_CoreWebView2MoveFocusRequestedEventArgs.EnsureInitialized();

        internal _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_Web_WebView2_Core_CoreWebView2Controller__global__Microsoft_Web_WebView2_Core_CoreWebView2MoveFocusRequestedEventArgs_(IObjectReference obj,
        delegate* unmanaged[Stdcall]<System.IntPtr, System.IntPtr, WinRT.EventRegistrationToken*, int> addHandler,
        delegate* unmanaged[Stdcall]<System.IntPtr, WinRT.EventRegistrationToken, int> removeHandler, int index) : base(obj, addHandler, removeHandler, index)
        {
            _ = initialized;
        }

        protected override ObjectReferenceValue CreateMarshaler(global::Windows.Foundation.TypedEventHandler<global::Microsoft.Web.WebView2.Core.CoreWebView2Controller, global::Microsoft.Web.WebView2.Core.CoreWebView2MoveFocusRequestedEventArgs> handler) =>
        global::ABI.Windows.Foundation.TypedEventHandler<global::Microsoft.Web.WebView2.Core.CoreWebView2Controller, global::Microsoft.Web.WebView2.Core.CoreWebView2MoveFocusRequestedEventArgs>.CreateMarshaler2(handler);

        protected override global::ABI.WinRT.Interop.EventSourceState<global::Windows.Foundation.TypedEventHandler<global::Microsoft.Web.WebView2.Core.CoreWebView2Controller, global::Microsoft.Web.WebView2.Core.CoreWebView2MoveFocusRequestedEventArgs>> CreateEventSourceState() =>
        new EventState(ObjectReference.ThisPtr, Index);

        [global::WinRT.WinRTExposedType]
        private sealed class EventState : global::ABI.WinRT.Interop.EventSourceState<global::Windows.Foundation.TypedEventHandler<global::Microsoft.Web.WebView2.Core.CoreWebView2Controller, global::Microsoft.Web.WebView2.Core.CoreWebView2MoveFocusRequestedEventArgs>>
        {
            public EventState(System.IntPtr obj, int index)
            : base(obj, index)
            {
            }

            protected override global::Windows.Foundation.TypedEventHandler<global::Microsoft.Web.WebView2.Core.CoreWebView2Controller, global::Microsoft.Web.WebView2.Core.CoreWebView2MoveFocusRequestedEventArgs> GetEventInvoke()
            {
                return (global::Microsoft.Web.WebView2.Core.CoreWebView2Controller sender, global::Microsoft.Web.WebView2.Core.CoreWebView2MoveFocusRequestedEventArgs args) =>
                {
                    var targetDelegate = TargetDelegate;
                    if (targetDelegate is null)
                    {
                        return ;
                    }
                    targetDelegate.Invoke(sender, args);
                };
            }
        }
    }

    internal sealed unsafe class _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_UI_Xaml_UIElement__global__Microsoft_UI_Xaml_BringIntoViewRequestedEventArgs_ : global::ABI.WinRT.Interop.EventSource<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.UIElement, global::Microsoft.UI.Xaml.BringIntoViewRequestedEventArgs>>
    {
        private static readonly bool initialized = global::WinRT.GenericTypeInstantiations.Windows_Foundation_TypedEventHandler_2_Microsoft_UI_Xaml_UIElement__Microsoft_UI_Xaml_BringIntoViewRequestedEventArgs.EnsureInitialized();

        internal _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_UI_Xaml_UIElement__global__Microsoft_UI_Xaml_BringIntoViewRequestedEventArgs_(IObjectReference obj,
        delegate* unmanaged[Stdcall]<System.IntPtr, System.IntPtr, WinRT.EventRegistrationToken*, int> addHandler,
        delegate* unmanaged[Stdcall]<System.IntPtr, WinRT.EventRegistrationToken, int> removeHandler, int index) : base(obj, addHandler, removeHandler, index)
        {
            _ = initialized;
        }

        protected override ObjectReferenceValue CreateMarshaler(global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.UIElement, global::Microsoft.UI.Xaml.BringIntoViewRequestedEventArgs> handler) =>
        global::ABI.Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.UIElement, global::Microsoft.UI.Xaml.BringIntoViewRequestedEventArgs>.CreateMarshaler2(handler);

        protected override global::ABI.WinRT.Interop.EventSourceState<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.UIElement, global::Microsoft.UI.Xaml.BringIntoViewRequestedEventArgs>> CreateEventSourceState() =>
        new EventState(ObjectReference.ThisPtr, Index);

        [global::WinRT.WinRTExposedType]
        private sealed class EventState : global::ABI.WinRT.Interop.EventSourceState<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.UIElement, global::Microsoft.UI.Xaml.BringIntoViewRequestedEventArgs>>
        {
            public EventState(System.IntPtr obj, int index)
            : base(obj, index)
            {
            }

            protected override global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.UIElement, global::Microsoft.UI.Xaml.BringIntoViewRequestedEventArgs> GetEventInvoke()
            {
                return (global::Microsoft.UI.Xaml.UIElement sender, global::Microsoft.UI.Xaml.BringIntoViewRequestedEventArgs args) =>
                {
                    var targetDelegate = TargetDelegate;
                    if (targetDelegate is null)
                    {
                        return ;
                    }
                    targetDelegate.Invoke(sender, args);
                };
            }
        }
    }

    internal sealed unsafe class _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_UI_Xaml_UIElement__global__Microsoft_UI_Xaml_Input_ProcessKeyboardAcceleratorEventArgs_ : global::ABI.WinRT.Interop.EventSource<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.UIElement, global::Microsoft.UI.Xaml.Input.ProcessKeyboardAcceleratorEventArgs>>
    {
        private static readonly bool initialized = global::WinRT.GenericTypeInstantiations.Windows_Foundation_TypedEventHandler_2_Microsoft_UI_Xaml_UIElement__Microsoft_UI_Xaml_Input_ProcessKeyboardAcceleratorEventArgs.EnsureInitialized();

        internal _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_UI_Xaml_UIElement__global__Microsoft_UI_Xaml_Input_ProcessKeyboardAcceleratorEventArgs_(IObjectReference obj,
        delegate* unmanaged[Stdcall]<System.IntPtr, System.IntPtr, WinRT.EventRegistrationToken*, int> addHandler,
        delegate* unmanaged[Stdcall]<System.IntPtr, WinRT.EventRegistrationToken, int> removeHandler, int index) : base(obj, addHandler, removeHandler, index)
        {
            _ = initialized;
        }

        protected override ObjectReferenceValue CreateMarshaler(global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.UIElement, global::Microsoft.UI.Xaml.Input.ProcessKeyboardAcceleratorEventArgs> handler) =>
        global::ABI.Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.UIElement, global::Microsoft.UI.Xaml.Input.ProcessKeyboardAcceleratorEventArgs>.CreateMarshaler2(handler);

        protected override global::ABI.WinRT.Interop.EventSourceState<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.UIElement, global::Microsoft.UI.Xaml.Input.ProcessKeyboardAcceleratorEventArgs>> CreateEventSourceState() =>
        new EventState(ObjectReference.ThisPtr, Index);

        [global::WinRT.WinRTExposedType]
        private sealed class EventState : global::ABI.WinRT.Interop.EventSourceState<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.UIElement, global::Microsoft.UI.Xaml.Input.ProcessKeyboardAcceleratorEventArgs>>
        {
            public EventState(System.IntPtr obj, int index)
            : base(obj, index)
            {
            }

            protected override global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.UIElement, global::Microsoft.UI.Xaml.Input.ProcessKeyboardAcceleratorEventArgs> GetEventInvoke()
            {
                return (global::Microsoft.UI.Xaml.UIElement sender, global::Microsoft.UI.Xaml.Input.ProcessKeyboardAcceleratorEventArgs args) =>
                {
                    var targetDelegate = TargetDelegate;
                    if (targetDelegate is null)
                    {
                        return ;
                    }
                    targetDelegate.Invoke(sender, args);
                };
            }
        }
    }

    internal sealed unsafe class _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_UI_Xaml_UIElement__global__Microsoft_UI_Xaml_Input_CharacterReceivedRoutedEventArgs_ : global::ABI.WinRT.Interop.EventSource<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.UIElement, global::Microsoft.UI.Xaml.Input.CharacterReceivedRoutedEventArgs>>
    {
        private static readonly bool initialized = global::WinRT.GenericTypeInstantiations.Windows_Foundation_TypedEventHandler_2_Microsoft_UI_Xaml_UIElement__Microsoft_UI_Xaml_Input_CharacterReceivedRoutedEventArgs.EnsureInitialized();

        internal _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_UI_Xaml_UIElement__global__Microsoft_UI_Xaml_Input_CharacterReceivedRoutedEventArgs_(IObjectReference obj,
        delegate* unmanaged[Stdcall]<System.IntPtr, System.IntPtr, WinRT.EventRegistrationToken*, int> addHandler,
        delegate* unmanaged[Stdcall]<System.IntPtr, WinRT.EventRegistrationToken, int> removeHandler, int index) : base(obj, addHandler, removeHandler, index)
        {
            _ = initialized;
        }

        protected override ObjectReferenceValue CreateMarshaler(global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.UIElement, global::Microsoft.UI.Xaml.Input.CharacterReceivedRoutedEventArgs> handler) =>
        global::ABI.Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.UIElement, global::Microsoft.UI.Xaml.Input.CharacterReceivedRoutedEventArgs>.CreateMarshaler2(handler);

        protected override global::ABI.WinRT.Interop.EventSourceState<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.UIElement, global::Microsoft.UI.Xaml.Input.CharacterReceivedRoutedEventArgs>> CreateEventSourceState() =>
        new EventState(ObjectReference.ThisPtr, Index);

        [global::WinRT.WinRTExposedType]
        private sealed class EventState : global::ABI.WinRT.Interop.EventSourceState<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.UIElement, global::Microsoft.UI.Xaml.Input.CharacterReceivedRoutedEventArgs>>
        {
            public EventState(System.IntPtr obj, int index)
            : base(obj, index)
            {
            }

            protected override global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.UIElement, global::Microsoft.UI.Xaml.Input.CharacterReceivedRoutedEventArgs> GetEventInvoke()
            {
                return (global::Microsoft.UI.Xaml.UIElement sender, global::Microsoft.UI.Xaml.Input.CharacterReceivedRoutedEventArgs args) =>
                {
                    var targetDelegate = TargetDelegate;
                    if (targetDelegate is null)
                    {
                        return ;
                    }
                    targetDelegate.Invoke(sender, args);
                };
            }
        }
    }

    internal sealed unsafe class _EventSource_global__Microsoft_UI_Xaml_UnhandledExceptionEventHandler : global::ABI.WinRT.Interop.EventSource<global::Microsoft.UI.Xaml.UnhandledExceptionEventHandler>
    {


        internal _EventSource_global__Microsoft_UI_Xaml_UnhandledExceptionEventHandler(IObjectReference obj,
        delegate* unmanaged[Stdcall]<System.IntPtr, System.IntPtr, WinRT.EventRegistrationToken*, int> addHandler,
        delegate* unmanaged[Stdcall]<System.IntPtr, WinRT.EventRegistrationToken, int> removeHandler, int index) : base(obj, addHandler, removeHandler, index)
        {

        }

        protected override ObjectReferenceValue CreateMarshaler(global::Microsoft.UI.Xaml.UnhandledExceptionEventHandler handler) =>
        global::ABI.Microsoft.UI.Xaml.UnhandledExceptionEventHandler.CreateMarshaler2(handler);

        protected override global::ABI.WinRT.Interop.EventSourceState<global::Microsoft.UI.Xaml.UnhandledExceptionEventHandler> CreateEventSourceState() =>
        new EventState(ObjectReference.ThisPtr, Index);

        [global::WinRT.WinRTExposedType]
        private sealed class EventState : global::ABI.WinRT.Interop.EventSourceState<global::Microsoft.UI.Xaml.UnhandledExceptionEventHandler>
        {
            public EventState(System.IntPtr obj, int index)
            : base(obj, index)
            {
            }

            protected override global::Microsoft.UI.Xaml.UnhandledExceptionEventHandler GetEventInvoke()
            {
                return (object sender, global::Microsoft.UI.Xaml.UnhandledExceptionEventArgs e) =>
                {
                    var targetDelegate = TargetDelegate;
                    if (targetDelegate is null)
                    {
                        return ;
                    }
                    targetDelegate.Invoke(sender, e);
                };
            }
        }
    }

    internal sealed unsafe class _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_UI_Xaml_Controls_RefreshContainer__global__Microsoft_UI_Xaml_Controls_RefreshRequestedEventArgs_ : global::ABI.WinRT.Interop.EventSource<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.RefreshContainer, global::Microsoft.UI.Xaml.Controls.RefreshRequestedEventArgs>>
    {
        private static readonly bool initialized = global::WinRT.GenericTypeInstantiations.Windows_Foundation_TypedEventHandler_2_Microsoft_UI_Xaml_Controls_RefreshContainer__Microsoft_UI_Xaml_Controls_RefreshRequestedEventArgs.EnsureInitialized();

        internal _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_UI_Xaml_Controls_RefreshContainer__global__Microsoft_UI_Xaml_Controls_RefreshRequestedEventArgs_(IObjectReference obj,
        delegate* unmanaged[Stdcall]<System.IntPtr, System.IntPtr, WinRT.EventRegistrationToken*, int> addHandler,
        delegate* unmanaged[Stdcall]<System.IntPtr, WinRT.EventRegistrationToken, int> removeHandler, int index) : base(obj, addHandler, removeHandler, index)
        {
            _ = initialized;
        }

        protected override ObjectReferenceValue CreateMarshaler(global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.RefreshContainer, global::Microsoft.UI.Xaml.Controls.RefreshRequestedEventArgs> handler) =>
        global::ABI.Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.RefreshContainer, global::Microsoft.UI.Xaml.Controls.RefreshRequestedEventArgs>.CreateMarshaler2(handler);

        protected override global::ABI.WinRT.Interop.EventSourceState<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.RefreshContainer, global::Microsoft.UI.Xaml.Controls.RefreshRequestedEventArgs>> CreateEventSourceState() =>
        new EventState(ObjectReference.ThisPtr, Index);

        [global::WinRT.WinRTExposedType]
        private sealed class EventState : global::ABI.WinRT.Interop.EventSourceState<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.RefreshContainer, global::Microsoft.UI.Xaml.Controls.RefreshRequestedEventArgs>>
        {
            public EventState(System.IntPtr obj, int index)
            : base(obj, index)
            {
            }

            protected override global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.RefreshContainer, global::Microsoft.UI.Xaml.Controls.RefreshRequestedEventArgs> GetEventInvoke()
            {
                return (global::Microsoft.UI.Xaml.Controls.RefreshContainer sender, global::Microsoft.UI.Xaml.Controls.RefreshRequestedEventArgs args) =>
                {
                    var targetDelegate = TargetDelegate;
                    if (targetDelegate is null)
                    {
                        return ;
                    }
                    targetDelegate.Invoke(sender, args);
                };
            }
        }
    }

    internal sealed unsafe class _EventSource_global__Microsoft_UI_Xaml_Input_ManipulationCompletedEventHandler : global::ABI.WinRT.Interop.EventSource<global::Microsoft.UI.Xaml.Input.ManipulationCompletedEventHandler>
    {


        internal _EventSource_global__Microsoft_UI_Xaml_Input_ManipulationCompletedEventHandler(IObjectReference obj,
        delegate* unmanaged[Stdcall]<System.IntPtr, System.IntPtr, WinRT.EventRegistrationToken*, int> addHandler,
        delegate* unmanaged[Stdcall]<System.IntPtr, WinRT.EventRegistrationToken, int> removeHandler, int index) : base(obj, addHandler, removeHandler, index)
        {

        }

        protected override ObjectReferenceValue CreateMarshaler(global::Microsoft.UI.Xaml.Input.ManipulationCompletedEventHandler handler) =>
        global::ABI.Microsoft.UI.Xaml.Input.ManipulationCompletedEventHandler.CreateMarshaler2(handler);

        protected override global::ABI.WinRT.Interop.EventSourceState<global::Microsoft.UI.Xaml.Input.ManipulationCompletedEventHandler> CreateEventSourceState() =>
        new EventState(ObjectReference.ThisPtr, Index);

        [global::WinRT.WinRTExposedType]
        private sealed class EventState : global::ABI.WinRT.Interop.EventSourceState<global::Microsoft.UI.Xaml.Input.ManipulationCompletedEventHandler>
        {
            public EventState(System.IntPtr obj, int index)
            : base(obj, index)
            {
            }

            protected override global::Microsoft.UI.Xaml.Input.ManipulationCompletedEventHandler GetEventInvoke()
            {
                return (object sender, global::Microsoft.UI.Xaml.Input.ManipulationCompletedRoutedEventArgs e) =>
                {
                    var targetDelegate = TargetDelegate;
                    if (targetDelegate is null)
                    {
                        return ;
                    }
                    targetDelegate.Invoke(sender, e);
                };
            }
        }
    }

    internal sealed unsafe class _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_UI_Dispatching_DispatcherQueue__object_ : global::ABI.WinRT.Interop.EventSource<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Dispatching.DispatcherQueue, object>>
    {
        private static readonly bool initialized = global::WinRT.GenericTypeInstantiations.Windows_Foundation_TypedEventHandler_2_Microsoft_UI_Dispatching_DispatcherQueue__object.EnsureInitialized();

        internal _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_UI_Dispatching_DispatcherQueue__object_(IObjectReference obj,
        delegate* unmanaged[Stdcall]<System.IntPtr, System.IntPtr, WinRT.EventRegistrationToken*, int> addHandler,
        delegate* unmanaged[Stdcall]<System.IntPtr, WinRT.EventRegistrationToken, int> removeHandler, int index) : base(obj, addHandler, removeHandler, index)
        {
            _ = initialized;
        }

        protected override ObjectReferenceValue CreateMarshaler(global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Dispatching.DispatcherQueue, object> handler) =>
        global::ABI.Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Dispatching.DispatcherQueue, object>.CreateMarshaler2(handler);

        protected override global::ABI.WinRT.Interop.EventSourceState<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Dispatching.DispatcherQueue, object>> CreateEventSourceState() =>
        new EventState(ObjectReference.ThisPtr, Index);

        [global::WinRT.WinRTExposedType]
        private sealed class EventState : global::ABI.WinRT.Interop.EventSourceState<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Dispatching.DispatcherQueue, object>>
        {
            public EventState(System.IntPtr obj, int index)
            : base(obj, index)
            {
            }

            protected override global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Dispatching.DispatcherQueue, object> GetEventInvoke()
            {
                return (global::Microsoft.UI.Dispatching.DispatcherQueue sender, object args) =>
                {
                    var targetDelegate = TargetDelegate;
                    if (targetDelegate is null)
                    {
                        return ;
                    }
                    targetDelegate.Invoke(sender, args);
                };
            }
        }
    }

    internal sealed unsafe class _EventSource_global__Microsoft_UI_Xaml_Printing_AddPagesEventHandler : global::ABI.WinRT.Interop.EventSource<global::Microsoft.UI.Xaml.Printing.AddPagesEventHandler>
    {


        internal _EventSource_global__Microsoft_UI_Xaml_Printing_AddPagesEventHandler(IObjectReference obj,
        delegate* unmanaged[Stdcall]<System.IntPtr, System.IntPtr, WinRT.EventRegistrationToken*, int> addHandler,
        delegate* unmanaged[Stdcall]<System.IntPtr, WinRT.EventRegistrationToken, int> removeHandler, int index) : base(obj, addHandler, removeHandler, index)
        {

        }

        protected override ObjectReferenceValue CreateMarshaler(global::Microsoft.UI.Xaml.Printing.AddPagesEventHandler handler) =>
        global::ABI.Microsoft.UI.Xaml.Printing.AddPagesEventHandler.CreateMarshaler2(handler);

        protected override global::ABI.WinRT.Interop.EventSourceState<global::Microsoft.UI.Xaml.Printing.AddPagesEventHandler> CreateEventSourceState() =>
        new EventState(ObjectReference.ThisPtr, Index);

        [global::WinRT.WinRTExposedType]
        private sealed class EventState : global::ABI.WinRT.Interop.EventSourceState<global::Microsoft.UI.Xaml.Printing.AddPagesEventHandler>
        {
            public EventState(System.IntPtr obj, int index)
            : base(obj, index)
            {
            }

            protected override global::Microsoft.UI.Xaml.Printing.AddPagesEventHandler GetEventInvoke()
            {
                return (object sender, global::Microsoft.UI.Xaml.Printing.AddPagesEventArgs e) =>
                {
                    var targetDelegate = TargetDelegate;
                    if (targetDelegate is null)
                    {
                        return ;
                    }
                    targetDelegate.Invoke(sender, e);
                };
            }
        }
    }

    internal sealed unsafe class _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_UI_Xaml_FrameworkElement__global__Microsoft_UI_Xaml_DataContextChangedEventArgs_ : global::ABI.WinRT.Interop.EventSource<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.FrameworkElement, global::Microsoft.UI.Xaml.DataContextChangedEventArgs>>
    {
        private static readonly bool initialized = global::WinRT.GenericTypeInstantiations.Windows_Foundation_TypedEventHandler_2_Microsoft_UI_Xaml_FrameworkElement__Microsoft_UI_Xaml_DataContextChangedEventArgs.EnsureInitialized();

        internal _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_UI_Xaml_FrameworkElement__global__Microsoft_UI_Xaml_DataContextChangedEventArgs_(IObjectReference obj,
        delegate* unmanaged[Stdcall]<System.IntPtr, System.IntPtr, WinRT.EventRegistrationToken*, int> addHandler,
        delegate* unmanaged[Stdcall]<System.IntPtr, WinRT.EventRegistrationToken, int> removeHandler, int index) : base(obj, addHandler, removeHandler, index)
        {
            _ = initialized;
        }

        protected override ObjectReferenceValue CreateMarshaler(global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.FrameworkElement, global::Microsoft.UI.Xaml.DataContextChangedEventArgs> handler) =>
        global::ABI.Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.FrameworkElement, global::Microsoft.UI.Xaml.DataContextChangedEventArgs>.CreateMarshaler2(handler);

        protected override global::ABI.WinRT.Interop.EventSourceState<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.FrameworkElement, global::Microsoft.UI.Xaml.DataContextChangedEventArgs>> CreateEventSourceState() =>
        new EventState(ObjectReference.ThisPtr, Index);

        [global::WinRT.WinRTExposedType]
        private sealed class EventState : global::ABI.WinRT.Interop.EventSourceState<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.FrameworkElement, global::Microsoft.UI.Xaml.DataContextChangedEventArgs>>
        {
            public EventState(System.IntPtr obj, int index)
            : base(obj, index)
            {
            }

            protected override global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.FrameworkElement, global::Microsoft.UI.Xaml.DataContextChangedEventArgs> GetEventInvoke()
            {
                return (global::Microsoft.UI.Xaml.FrameworkElement sender, global::Microsoft.UI.Xaml.DataContextChangedEventArgs args) =>
                {
                    var targetDelegate = TargetDelegate;
                    if (targetDelegate is null)
                    {
                        return ;
                    }
                    targetDelegate.Invoke(sender, args);
                };
            }
        }
    }

    internal sealed unsafe class _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_UI_Xaml_Controls_PipsPager__global__Microsoft_UI_Xaml_Controls_PipsPagerSelectedIndexChangedEventArgs_ : global::ABI.WinRT.Interop.EventSource<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.PipsPager, global::Microsoft.UI.Xaml.Controls.PipsPagerSelectedIndexChangedEventArgs>>
    {
        private static readonly bool initialized = global::WinRT.GenericTypeInstantiations.Windows_Foundation_TypedEventHandler_2_Microsoft_UI_Xaml_Controls_PipsPager__Microsoft_UI_Xaml_Controls_PipsPagerSelectedIndexChangedEventArgs.EnsureInitialized();

        internal _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_UI_Xaml_Controls_PipsPager__global__Microsoft_UI_Xaml_Controls_PipsPagerSelectedIndexChangedEventArgs_(IObjectReference obj,
        delegate* unmanaged[Stdcall]<System.IntPtr, System.IntPtr, WinRT.EventRegistrationToken*, int> addHandler,
        delegate* unmanaged[Stdcall]<System.IntPtr, WinRT.EventRegistrationToken, int> removeHandler, int index) : base(obj, addHandler, removeHandler, index)
        {
            _ = initialized;
        }

        protected override ObjectReferenceValue CreateMarshaler(global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.PipsPager, global::Microsoft.UI.Xaml.Controls.PipsPagerSelectedIndexChangedEventArgs> handler) =>
        global::ABI.Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.PipsPager, global::Microsoft.UI.Xaml.Controls.PipsPagerSelectedIndexChangedEventArgs>.CreateMarshaler2(handler);

        protected override global::ABI.WinRT.Interop.EventSourceState<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.PipsPager, global::Microsoft.UI.Xaml.Controls.PipsPagerSelectedIndexChangedEventArgs>> CreateEventSourceState() =>
        new EventState(ObjectReference.ThisPtr, Index);

        [global::WinRT.WinRTExposedType]
        private sealed class EventState : global::ABI.WinRT.Interop.EventSourceState<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.PipsPager, global::Microsoft.UI.Xaml.Controls.PipsPagerSelectedIndexChangedEventArgs>>
        {
            public EventState(System.IntPtr obj, int index)
            : base(obj, index)
            {
            }

            protected override global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.PipsPager, global::Microsoft.UI.Xaml.Controls.PipsPagerSelectedIndexChangedEventArgs> GetEventInvoke()
            {
                return (global::Microsoft.UI.Xaml.Controls.PipsPager sender, global::Microsoft.UI.Xaml.Controls.PipsPagerSelectedIndexChangedEventArgs args) =>
                {
                    var targetDelegate = TargetDelegate;
                    if (targetDelegate is null)
                    {
                        return ;
                    }
                    targetDelegate.Invoke(sender, args);
                };
            }
        }
    }

    internal sealed unsafe class _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_UI_Xaml_Controls_TeachingTip__object_ : global::ABI.WinRT.Interop.EventSource<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.TeachingTip, object>>
    {
        private static readonly bool initialized = global::WinRT.GenericTypeInstantiations.Windows_Foundation_TypedEventHandler_2_Microsoft_UI_Xaml_Controls_TeachingTip__object.EnsureInitialized();

        internal _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_UI_Xaml_Controls_TeachingTip__object_(IObjectReference obj,
        delegate* unmanaged[Stdcall]<System.IntPtr, System.IntPtr, WinRT.EventRegistrationToken*, int> addHandler,
        delegate* unmanaged[Stdcall]<System.IntPtr, WinRT.EventRegistrationToken, int> removeHandler, int index) : base(obj, addHandler, removeHandler, index)
        {
            _ = initialized;
        }

        protected override ObjectReferenceValue CreateMarshaler(global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.TeachingTip, object> handler) =>
        global::ABI.Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.TeachingTip, object>.CreateMarshaler2(handler);

        protected override global::ABI.WinRT.Interop.EventSourceState<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.TeachingTip, object>> CreateEventSourceState() =>
        new EventState(ObjectReference.ThisPtr, Index);

        [global::WinRT.WinRTExposedType]
        private sealed class EventState : global::ABI.WinRT.Interop.EventSourceState<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.TeachingTip, object>>
        {
            public EventState(System.IntPtr obj, int index)
            : base(obj, index)
            {
            }

            protected override global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.TeachingTip, object> GetEventInvoke()
            {
                return (global::Microsoft.UI.Xaml.Controls.TeachingTip sender, object args) =>
                {
                    var targetDelegate = TargetDelegate;
                    if (targetDelegate is null)
                    {
                        return ;
                    }
                    targetDelegate.Invoke(sender, args);
                };
            }
        }
    }

    internal sealed unsafe class _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_UI_Xaml_Controls_TextBlock__global__Microsoft_UI_Xaml_Controls_IsTextTrimmedChangedEventArgs_ : global::ABI.WinRT.Interop.EventSource<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.TextBlock, global::Microsoft.UI.Xaml.Controls.IsTextTrimmedChangedEventArgs>>
    {
        private static readonly bool initialized = global::WinRT.GenericTypeInstantiations.Windows_Foundation_TypedEventHandler_2_Microsoft_UI_Xaml_Controls_TextBlock__Microsoft_UI_Xaml_Controls_IsTextTrimmedChangedEventArgs.EnsureInitialized();

        internal _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_UI_Xaml_Controls_TextBlock__global__Microsoft_UI_Xaml_Controls_IsTextTrimmedChangedEventArgs_(IObjectReference obj,
        delegate* unmanaged[Stdcall]<System.IntPtr, System.IntPtr, WinRT.EventRegistrationToken*, int> addHandler,
        delegate* unmanaged[Stdcall]<System.IntPtr, WinRT.EventRegistrationToken, int> removeHandler, int index) : base(obj, addHandler, removeHandler, index)
        {
            _ = initialized;
        }

        protected override ObjectReferenceValue CreateMarshaler(global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.TextBlock, global::Microsoft.UI.Xaml.Controls.IsTextTrimmedChangedEventArgs> handler) =>
        global::ABI.Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.TextBlock, global::Microsoft.UI.Xaml.Controls.IsTextTrimmedChangedEventArgs>.CreateMarshaler2(handler);

        protected override global::ABI.WinRT.Interop.EventSourceState<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.TextBlock, global::Microsoft.UI.Xaml.Controls.IsTextTrimmedChangedEventArgs>> CreateEventSourceState() =>
        new EventState(ObjectReference.ThisPtr, Index);

        [global::WinRT.WinRTExposedType]
        private sealed class EventState : global::ABI.WinRT.Interop.EventSourceState<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.TextBlock, global::Microsoft.UI.Xaml.Controls.IsTextTrimmedChangedEventArgs>>
        {
            public EventState(System.IntPtr obj, int index)
            : base(obj, index)
            {
            }

            protected override global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.TextBlock, global::Microsoft.UI.Xaml.Controls.IsTextTrimmedChangedEventArgs> GetEventInvoke()
            {
                return (global::Microsoft.UI.Xaml.Controls.TextBlock sender, global::Microsoft.UI.Xaml.Controls.IsTextTrimmedChangedEventArgs args) =>
                {
                    var targetDelegate = TargetDelegate;
                    if (targetDelegate is null)
                    {
                        return ;
                    }
                    targetDelegate.Invoke(sender, args);
                };
            }
        }
    }

    internal sealed unsafe class _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_UI_Input_InputFocusController__global__Microsoft_UI_Input_FocusNavigationRequestEventArgs_ : global::ABI.WinRT.Interop.EventSource<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Input.InputFocusController, global::Microsoft.UI.Input.FocusNavigationRequestEventArgs>>
    {
        private static readonly bool initialized = global::WinRT.GenericTypeInstantiations.Windows_Foundation_TypedEventHandler_2_Microsoft_UI_Input_InputFocusController__Microsoft_UI_Input_FocusNavigationRequestEventArgs.EnsureInitialized();

        internal _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_UI_Input_InputFocusController__global__Microsoft_UI_Input_FocusNavigationRequestEventArgs_(IObjectReference obj,
        delegate* unmanaged[Stdcall]<System.IntPtr, System.IntPtr, WinRT.EventRegistrationToken*, int> addHandler,
        delegate* unmanaged[Stdcall]<System.IntPtr, WinRT.EventRegistrationToken, int> removeHandler, int index) : base(obj, addHandler, removeHandler, index)
        {
            _ = initialized;
        }

        protected override ObjectReferenceValue CreateMarshaler(global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Input.InputFocusController, global::Microsoft.UI.Input.FocusNavigationRequestEventArgs> handler) =>
        global::ABI.Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Input.InputFocusController, global::Microsoft.UI.Input.FocusNavigationRequestEventArgs>.CreateMarshaler2(handler);

        protected override global::ABI.WinRT.Interop.EventSourceState<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Input.InputFocusController, global::Microsoft.UI.Input.FocusNavigationRequestEventArgs>> CreateEventSourceState() =>
        new EventState(ObjectReference.ThisPtr, Index);

        [global::WinRT.WinRTExposedType]
        private sealed class EventState : global::ABI.WinRT.Interop.EventSourceState<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Input.InputFocusController, global::Microsoft.UI.Input.FocusNavigationRequestEventArgs>>
        {
            public EventState(System.IntPtr obj, int index)
            : base(obj, index)
            {
            }

            protected override global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Input.InputFocusController, global::Microsoft.UI.Input.FocusNavigationRequestEventArgs> GetEventInvoke()
            {
                return (global::Microsoft.UI.Input.InputFocusController sender, global::Microsoft.UI.Input.FocusNavigationRequestEventArgs args) =>
                {
                    var targetDelegate = TargetDelegate;
                    if (targetDelegate is null)
                    {
                        return ;
                    }
                    targetDelegate.Invoke(sender, args);
                };
            }
        }
    }

    internal sealed unsafe class _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_UI_Xaml_FrameworkElement__object_ : global::ABI.WinRT.Interop.EventSource<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.FrameworkElement, object>>
    {
        private static readonly bool initialized = global::WinRT.GenericTypeInstantiations.Windows_Foundation_TypedEventHandler_2_Microsoft_UI_Xaml_FrameworkElement__object.EnsureInitialized();

        internal _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_UI_Xaml_FrameworkElement__object_(IObjectReference obj,
        delegate* unmanaged[Stdcall]<System.IntPtr, System.IntPtr, WinRT.EventRegistrationToken*, int> addHandler,
        delegate* unmanaged[Stdcall]<System.IntPtr, WinRT.EventRegistrationToken, int> removeHandler, int index) : base(obj, addHandler, removeHandler, index)
        {
            _ = initialized;
        }

        protected override ObjectReferenceValue CreateMarshaler(global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.FrameworkElement, object> handler) =>
        global::ABI.Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.FrameworkElement, object>.CreateMarshaler2(handler);

        protected override global::ABI.WinRT.Interop.EventSourceState<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.FrameworkElement, object>> CreateEventSourceState() =>
        new EventState(ObjectReference.ThisPtr, Index);

        [global::WinRT.WinRTExposedType]
        private sealed class EventState : global::ABI.WinRT.Interop.EventSourceState<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.FrameworkElement, object>>
        {
            public EventState(System.IntPtr obj, int index)
            : base(obj, index)
            {
            }

            protected override global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.FrameworkElement, object> GetEventInvoke()
            {
                return (global::Microsoft.UI.Xaml.FrameworkElement sender, object args) =>
                {
                    var targetDelegate = TargetDelegate;
                    if (targetDelegate is null)
                    {
                        return ;
                    }
                    targetDelegate.Invoke(sender, args);
                };
            }
        }
    }

    internal sealed unsafe class _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_UI_Xaml_Controls_Primitives_ScrollPresenter__global__Microsoft_UI_Xaml_Controls_ScrollingAnchorRequestedEventArgs_ : global::ABI.WinRT.Interop.EventSource<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.Primitives.ScrollPresenter, global::Microsoft.UI.Xaml.Controls.ScrollingAnchorRequestedEventArgs>>
    {
        private static readonly bool initialized = global::WinRT.GenericTypeInstantiations.Windows_Foundation_TypedEventHandler_2_Microsoft_UI_Xaml_Controls_Primitives_ScrollPresenter__Microsoft_UI_Xaml_Controls_ScrollingAnchorRequestedEventArgs.EnsureInitialized();

        internal _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_UI_Xaml_Controls_Primitives_ScrollPresenter__global__Microsoft_UI_Xaml_Controls_ScrollingAnchorRequestedEventArgs_(IObjectReference obj,
        delegate* unmanaged[Stdcall]<System.IntPtr, System.IntPtr, WinRT.EventRegistrationToken*, int> addHandler,
        delegate* unmanaged[Stdcall]<System.IntPtr, WinRT.EventRegistrationToken, int> removeHandler, int index) : base(obj, addHandler, removeHandler, index)
        {
            _ = initialized;
        }

        protected override ObjectReferenceValue CreateMarshaler(global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.Primitives.ScrollPresenter, global::Microsoft.UI.Xaml.Controls.ScrollingAnchorRequestedEventArgs> handler) =>
        global::ABI.Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.Primitives.ScrollPresenter, global::Microsoft.UI.Xaml.Controls.ScrollingAnchorRequestedEventArgs>.CreateMarshaler2(handler);

        protected override global::ABI.WinRT.Interop.EventSourceState<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.Primitives.ScrollPresenter, global::Microsoft.UI.Xaml.Controls.ScrollingAnchorRequestedEventArgs>> CreateEventSourceState() =>
        new EventState(ObjectReference.ThisPtr, Index);

        [global::WinRT.WinRTExposedType]
        private sealed class EventState : global::ABI.WinRT.Interop.EventSourceState<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.Primitives.ScrollPresenter, global::Microsoft.UI.Xaml.Controls.ScrollingAnchorRequestedEventArgs>>
        {
            public EventState(System.IntPtr obj, int index)
            : base(obj, index)
            {
            }

            protected override global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.Primitives.ScrollPresenter, global::Microsoft.UI.Xaml.Controls.ScrollingAnchorRequestedEventArgs> GetEventInvoke()
            {
                return (global::Microsoft.UI.Xaml.Controls.Primitives.ScrollPresenter sender, global::Microsoft.UI.Xaml.Controls.ScrollingAnchorRequestedEventArgs args) =>
                {
                    var targetDelegate = TargetDelegate;
                    if (targetDelegate is null)
                    {
                        return ;
                    }
                    targetDelegate.Invoke(sender, args);
                };
            }
        }
    }

    internal sealed unsafe class _EventSource_global__Microsoft_UI_Xaml_Printing_PaginateEventHandler : global::ABI.WinRT.Interop.EventSource<global::Microsoft.UI.Xaml.Printing.PaginateEventHandler>
    {


        internal _EventSource_global__Microsoft_UI_Xaml_Printing_PaginateEventHandler(IObjectReference obj,
        delegate* unmanaged[Stdcall]<System.IntPtr, System.IntPtr, WinRT.EventRegistrationToken*, int> addHandler,
        delegate* unmanaged[Stdcall]<System.IntPtr, WinRT.EventRegistrationToken, int> removeHandler, int index) : base(obj, addHandler, removeHandler, index)
        {

        }

        protected override ObjectReferenceValue CreateMarshaler(global::Microsoft.UI.Xaml.Printing.PaginateEventHandler handler) =>
        global::ABI.Microsoft.UI.Xaml.Printing.PaginateEventHandler.CreateMarshaler2(handler);

        protected override global::ABI.WinRT.Interop.EventSourceState<global::Microsoft.UI.Xaml.Printing.PaginateEventHandler> CreateEventSourceState() =>
        new EventState(ObjectReference.ThisPtr, Index);

        [global::WinRT.WinRTExposedType]
        private sealed class EventState : global::ABI.WinRT.Interop.EventSourceState<global::Microsoft.UI.Xaml.Printing.PaginateEventHandler>
        {
            public EventState(System.IntPtr obj, int index)
            : base(obj, index)
            {
            }

            protected override global::Microsoft.UI.Xaml.Printing.PaginateEventHandler GetEventInvoke()
            {
                return (object sender, global::Microsoft.UI.Xaml.Printing.PaginateEventArgs e) =>
                {
                    var targetDelegate = TargetDelegate;
                    if (targetDelegate is null)
                    {
                        return ;
                    }
                    targetDelegate.Invoke(sender, e);
                };
            }
        }
    }

    internal sealed unsafe class _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_UI_Input_InputNonClientPointerSource__global__Microsoft_UI_Input_WindowRectChangingEventArgs_ : global::ABI.WinRT.Interop.EventSource<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Input.InputNonClientPointerSource, global::Microsoft.UI.Input.WindowRectChangingEventArgs>>
    {
        private static readonly bool initialized = global::WinRT.GenericTypeInstantiations.Windows_Foundation_TypedEventHandler_2_Microsoft_UI_Input_InputNonClientPointerSource__Microsoft_UI_Input_WindowRectChangingEventArgs.EnsureInitialized();

        internal _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_UI_Input_InputNonClientPointerSource__global__Microsoft_UI_Input_WindowRectChangingEventArgs_(IObjectReference obj,
        delegate* unmanaged[Stdcall]<System.IntPtr, System.IntPtr, WinRT.EventRegistrationToken*, int> addHandler,
        delegate* unmanaged[Stdcall]<System.IntPtr, WinRT.EventRegistrationToken, int> removeHandler, int index) : base(obj, addHandler, removeHandler, index)
        {
            _ = initialized;
        }

        protected override ObjectReferenceValue CreateMarshaler(global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Input.InputNonClientPointerSource, global::Microsoft.UI.Input.WindowRectChangingEventArgs> handler) =>
        global::ABI.Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Input.InputNonClientPointerSource, global::Microsoft.UI.Input.WindowRectChangingEventArgs>.CreateMarshaler2(handler);

        protected override global::ABI.WinRT.Interop.EventSourceState<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Input.InputNonClientPointerSource, global::Microsoft.UI.Input.WindowRectChangingEventArgs>> CreateEventSourceState() =>
        new EventState(ObjectReference.ThisPtr, Index);

        [global::WinRT.WinRTExposedType]
        private sealed class EventState : global::ABI.WinRT.Interop.EventSourceState<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Input.InputNonClientPointerSource, global::Microsoft.UI.Input.WindowRectChangingEventArgs>>
        {
            public EventState(System.IntPtr obj, int index)
            : base(obj, index)
            {
            }

            protected override global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Input.InputNonClientPointerSource, global::Microsoft.UI.Input.WindowRectChangingEventArgs> GetEventInvoke()
            {
                return (global::Microsoft.UI.Input.InputNonClientPointerSource sender, global::Microsoft.UI.Input.WindowRectChangingEventArgs args) =>
                {
                    var targetDelegate = TargetDelegate;
                    if (targetDelegate is null)
                    {
                        return ;
                    }
                    targetDelegate.Invoke(sender, args);
                };
            }
        }
    }

    internal sealed unsafe class _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_UI_Xaml_Controls_Primitives_ScrollPresenter__global__Microsoft_UI_Xaml_Controls_ScrollingZoomStartingEventArgs_ : global::ABI.WinRT.Interop.EventSource<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.Primitives.ScrollPresenter, global::Microsoft.UI.Xaml.Controls.ScrollingZoomStartingEventArgs>>
    {
        private static readonly bool initialized = global::WinRT.GenericTypeInstantiations.Windows_Foundation_TypedEventHandler_2_Microsoft_UI_Xaml_Controls_Primitives_ScrollPresenter__Microsoft_UI_Xaml_Controls_ScrollingZoomStartingEventArgs.EnsureInitialized();

        internal _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_UI_Xaml_Controls_Primitives_ScrollPresenter__global__Microsoft_UI_Xaml_Controls_ScrollingZoomStartingEventArgs_(IObjectReference obj,
        delegate* unmanaged[Stdcall]<System.IntPtr, System.IntPtr, WinRT.EventRegistrationToken*, int> addHandler,
        delegate* unmanaged[Stdcall]<System.IntPtr, WinRT.EventRegistrationToken, int> removeHandler, int index) : base(obj, addHandler, removeHandler, index)
        {
            _ = initialized;
        }

        protected override ObjectReferenceValue CreateMarshaler(global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.Primitives.ScrollPresenter, global::Microsoft.UI.Xaml.Controls.ScrollingZoomStartingEventArgs> handler) =>
        global::ABI.Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.Primitives.ScrollPresenter, global::Microsoft.UI.Xaml.Controls.ScrollingZoomStartingEventArgs>.CreateMarshaler2(handler);

        protected override global::ABI.WinRT.Interop.EventSourceState<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.Primitives.ScrollPresenter, global::Microsoft.UI.Xaml.Controls.ScrollingZoomStartingEventArgs>> CreateEventSourceState() =>
        new EventState(ObjectReference.ThisPtr, Index);

        [global::WinRT.WinRTExposedType]
        private sealed class EventState : global::ABI.WinRT.Interop.EventSourceState<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.Primitives.ScrollPresenter, global::Microsoft.UI.Xaml.Controls.ScrollingZoomStartingEventArgs>>
        {
            public EventState(System.IntPtr obj, int index)
            : base(obj, index)
            {
            }

            protected override global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.Primitives.ScrollPresenter, global::Microsoft.UI.Xaml.Controls.ScrollingZoomStartingEventArgs> GetEventInvoke()
            {
                return (global::Microsoft.UI.Xaml.Controls.Primitives.ScrollPresenter sender, global::Microsoft.UI.Xaml.Controls.ScrollingZoomStartingEventArgs args) =>
                {
                    var targetDelegate = TargetDelegate;
                    if (targetDelegate is null)
                    {
                        return ;
                    }
                    targetDelegate.Invoke(sender, args);
                };
            }
        }
    }

    internal sealed unsafe class _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_Web_WebView2_Core_CoreWebView2__global__Microsoft_Web_WebView2_Core_CoreWebView2PermissionRequestedEventArgs_ : global::ABI.WinRT.Interop.EventSource<global::Windows.Foundation.TypedEventHandler<global::Microsoft.Web.WebView2.Core.CoreWebView2, global::Microsoft.Web.WebView2.Core.CoreWebView2PermissionRequestedEventArgs>>
    {
        private static readonly bool initialized = global::WinRT.GenericTypeInstantiations.Windows_Foundation_TypedEventHandler_2_Microsoft_Web_WebView2_Core_CoreWebView2__Microsoft_Web_WebView2_Core_CoreWebView2PermissionRequestedEventArgs.EnsureInitialized();

        internal _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_Web_WebView2_Core_CoreWebView2__global__Microsoft_Web_WebView2_Core_CoreWebView2PermissionRequestedEventArgs_(IObjectReference obj,
        delegate* unmanaged[Stdcall]<System.IntPtr, System.IntPtr, WinRT.EventRegistrationToken*, int> addHandler,
        delegate* unmanaged[Stdcall]<System.IntPtr, WinRT.EventRegistrationToken, int> removeHandler, int index) : base(obj, addHandler, removeHandler, index)
        {
            _ = initialized;
        }

        protected override ObjectReferenceValue CreateMarshaler(global::Windows.Foundation.TypedEventHandler<global::Microsoft.Web.WebView2.Core.CoreWebView2, global::Microsoft.Web.WebView2.Core.CoreWebView2PermissionRequestedEventArgs> handler) =>
        global::ABI.Windows.Foundation.TypedEventHandler<global::Microsoft.Web.WebView2.Core.CoreWebView2, global::Microsoft.Web.WebView2.Core.CoreWebView2PermissionRequestedEventArgs>.CreateMarshaler2(handler);

        protected override global::ABI.WinRT.Interop.EventSourceState<global::Windows.Foundation.TypedEventHandler<global::Microsoft.Web.WebView2.Core.CoreWebView2, global::Microsoft.Web.WebView2.Core.CoreWebView2PermissionRequestedEventArgs>> CreateEventSourceState() =>
        new EventState(ObjectReference.ThisPtr, Index);

        [global::WinRT.WinRTExposedType]
        private sealed class EventState : global::ABI.WinRT.Interop.EventSourceState<global::Windows.Foundation.TypedEventHandler<global::Microsoft.Web.WebView2.Core.CoreWebView2, global::Microsoft.Web.WebView2.Core.CoreWebView2PermissionRequestedEventArgs>>
        {
            public EventState(System.IntPtr obj, int index)
            : base(obj, index)
            {
            }

            protected override global::Windows.Foundation.TypedEventHandler<global::Microsoft.Web.WebView2.Core.CoreWebView2, global::Microsoft.Web.WebView2.Core.CoreWebView2PermissionRequestedEventArgs> GetEventInvoke()
            {
                return (global::Microsoft.Web.WebView2.Core.CoreWebView2 sender, global::Microsoft.Web.WebView2.Core.CoreWebView2PermissionRequestedEventArgs args) =>
                {
                    var targetDelegate = TargetDelegate;
                    if (targetDelegate is null)
                    {
                        return ;
                    }
                    targetDelegate.Invoke(sender, args);
                };
            }
        }
    }

    internal sealed unsafe class _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_UI_Xaml_UIElement__global__Microsoft_UI_Xaml_Input_AccessKeyInvokedEventArgs_ : global::ABI.WinRT.Interop.EventSource<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.UIElement, global::Microsoft.UI.Xaml.Input.AccessKeyInvokedEventArgs>>
    {
        private static readonly bool initialized = global::WinRT.GenericTypeInstantiations.Windows_Foundation_TypedEventHandler_2_Microsoft_UI_Xaml_UIElement__Microsoft_UI_Xaml_Input_AccessKeyInvokedEventArgs.EnsureInitialized();

        internal _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_UI_Xaml_UIElement__global__Microsoft_UI_Xaml_Input_AccessKeyInvokedEventArgs_(IObjectReference obj,
        delegate* unmanaged[Stdcall]<System.IntPtr, System.IntPtr, WinRT.EventRegistrationToken*, int> addHandler,
        delegate* unmanaged[Stdcall]<System.IntPtr, WinRT.EventRegistrationToken, int> removeHandler, int index) : base(obj, addHandler, removeHandler, index)
        {
            _ = initialized;
        }

        protected override ObjectReferenceValue CreateMarshaler(global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.UIElement, global::Microsoft.UI.Xaml.Input.AccessKeyInvokedEventArgs> handler) =>
        global::ABI.Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.UIElement, global::Microsoft.UI.Xaml.Input.AccessKeyInvokedEventArgs>.CreateMarshaler2(handler);

        protected override global::ABI.WinRT.Interop.EventSourceState<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.UIElement, global::Microsoft.UI.Xaml.Input.AccessKeyInvokedEventArgs>> CreateEventSourceState() =>
        new EventState(ObjectReference.ThisPtr, Index);

        [global::WinRT.WinRTExposedType]
        private sealed class EventState : global::ABI.WinRT.Interop.EventSourceState<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.UIElement, global::Microsoft.UI.Xaml.Input.AccessKeyInvokedEventArgs>>
        {
            public EventState(System.IntPtr obj, int index)
            : base(obj, index)
            {
            }

            protected override global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.UIElement, global::Microsoft.UI.Xaml.Input.AccessKeyInvokedEventArgs> GetEventInvoke()
            {
                return (global::Microsoft.UI.Xaml.UIElement sender, global::Microsoft.UI.Xaml.Input.AccessKeyInvokedEventArgs args) =>
                {
                    var targetDelegate = TargetDelegate;
                    if (targetDelegate is null)
                    {
                        return ;
                    }
                    targetDelegate.Invoke(sender, args);
                };
            }
        }
    }

    internal sealed unsafe class _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_UI_Xaml_Controls_RichEditBox__global__Microsoft_UI_Xaml_Controls_TextCompositionStartedEventArgs_ : global::ABI.WinRT.Interop.EventSource<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.RichEditBox, global::Microsoft.UI.Xaml.Controls.TextCompositionStartedEventArgs>>
    {
        private static readonly bool initialized = global::WinRT.GenericTypeInstantiations.Windows_Foundation_TypedEventHandler_2_Microsoft_UI_Xaml_Controls_RichEditBox__Microsoft_UI_Xaml_Controls_TextCompositionStartedEventArgs.EnsureInitialized();

        internal _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_UI_Xaml_Controls_RichEditBox__global__Microsoft_UI_Xaml_Controls_TextCompositionStartedEventArgs_(IObjectReference obj,
        delegate* unmanaged[Stdcall]<System.IntPtr, System.IntPtr, WinRT.EventRegistrationToken*, int> addHandler,
        delegate* unmanaged[Stdcall]<System.IntPtr, WinRT.EventRegistrationToken, int> removeHandler, int index) : base(obj, addHandler, removeHandler, index)
        {
            _ = initialized;
        }

        protected override ObjectReferenceValue CreateMarshaler(global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.RichEditBox, global::Microsoft.UI.Xaml.Controls.TextCompositionStartedEventArgs> handler) =>
        global::ABI.Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.RichEditBox, global::Microsoft.UI.Xaml.Controls.TextCompositionStartedEventArgs>.CreateMarshaler2(handler);

        protected override global::ABI.WinRT.Interop.EventSourceState<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.RichEditBox, global::Microsoft.UI.Xaml.Controls.TextCompositionStartedEventArgs>> CreateEventSourceState() =>
        new EventState(ObjectReference.ThisPtr, Index);

        [global::WinRT.WinRTExposedType]
        private sealed class EventState : global::ABI.WinRT.Interop.EventSourceState<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.RichEditBox, global::Microsoft.UI.Xaml.Controls.TextCompositionStartedEventArgs>>
        {
            public EventState(System.IntPtr obj, int index)
            : base(obj, index)
            {
            }

            protected override global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.RichEditBox, global::Microsoft.UI.Xaml.Controls.TextCompositionStartedEventArgs> GetEventInvoke()
            {
                return (global::Microsoft.UI.Xaml.Controls.RichEditBox sender, global::Microsoft.UI.Xaml.Controls.TextCompositionStartedEventArgs args) =>
                {
                    var targetDelegate = TargetDelegate;
                    if (targetDelegate is null)
                    {
                        return ;
                    }
                    targetDelegate.Invoke(sender, args);
                };
            }
        }
    }

    internal sealed unsafe class _EventSource_global__Windows_Foundation_TypedEventHandler_object__global__Microsoft_UI_Xaml_ResourceManagerRequestedEventArgs_ : global::ABI.WinRT.Interop.EventSource<global::Windows.Foundation.TypedEventHandler<object, global::Microsoft.UI.Xaml.ResourceManagerRequestedEventArgs>>
    {
        private static readonly bool initialized = global::WinRT.GenericTypeInstantiations.Windows_Foundation_TypedEventHandler_2_object__Microsoft_UI_Xaml_ResourceManagerRequestedEventArgs.EnsureInitialized();

        internal _EventSource_global__Windows_Foundation_TypedEventHandler_object__global__Microsoft_UI_Xaml_ResourceManagerRequestedEventArgs_(IObjectReference obj,
        delegate* unmanaged[Stdcall]<System.IntPtr, System.IntPtr, WinRT.EventRegistrationToken*, int> addHandler,
        delegate* unmanaged[Stdcall]<System.IntPtr, WinRT.EventRegistrationToken, int> removeHandler, int index) : base(obj, addHandler, removeHandler, index)
        {
            _ = initialized;
        }

        protected override ObjectReferenceValue CreateMarshaler(global::Windows.Foundation.TypedEventHandler<object, global::Microsoft.UI.Xaml.ResourceManagerRequestedEventArgs> handler) =>
        global::ABI.Windows.Foundation.TypedEventHandler<object, global::Microsoft.UI.Xaml.ResourceManagerRequestedEventArgs>.CreateMarshaler2(handler);

        protected override global::ABI.WinRT.Interop.EventSourceState<global::Windows.Foundation.TypedEventHandler<object, global::Microsoft.UI.Xaml.ResourceManagerRequestedEventArgs>> CreateEventSourceState() =>
        new EventState(ObjectReference.ThisPtr, Index);

        [global::WinRT.WinRTExposedType]
        private sealed class EventState : global::ABI.WinRT.Interop.EventSourceState<global::Windows.Foundation.TypedEventHandler<object, global::Microsoft.UI.Xaml.ResourceManagerRequestedEventArgs>>
        {
            public EventState(System.IntPtr obj, int index)
            : base(obj, index)
            {
            }

            protected override global::Windows.Foundation.TypedEventHandler<object, global::Microsoft.UI.Xaml.ResourceManagerRequestedEventArgs> GetEventInvoke()
            {
                return (object sender, global::Microsoft.UI.Xaml.ResourceManagerRequestedEventArgs args) =>
                {
                    var targetDelegate = TargetDelegate;
                    if (targetDelegate is null)
                    {
                        return ;
                    }
                    targetDelegate.Invoke(sender, args);
                };
            }
        }
    }

    internal sealed unsafe class _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_UI_Xaml_Controls_ScrollView__object_ : global::ABI.WinRT.Interop.EventSource<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.ScrollView, object>>
    {
        private static readonly bool initialized = global::WinRT.GenericTypeInstantiations.Windows_Foundation_TypedEventHandler_2_Microsoft_UI_Xaml_Controls_ScrollView__object.EnsureInitialized();

        internal _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_UI_Xaml_Controls_ScrollView__object_(IObjectReference obj,
        delegate* unmanaged[Stdcall]<System.IntPtr, System.IntPtr, WinRT.EventRegistrationToken*, int> addHandler,
        delegate* unmanaged[Stdcall]<System.IntPtr, WinRT.EventRegistrationToken, int> removeHandler, int index) : base(obj, addHandler, removeHandler, index)
        {
            _ = initialized;
        }

        protected override ObjectReferenceValue CreateMarshaler(global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.ScrollView, object> handler) =>
        global::ABI.Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.ScrollView, object>.CreateMarshaler2(handler);

        protected override global::ABI.WinRT.Interop.EventSourceState<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.ScrollView, object>> CreateEventSourceState() =>
        new EventState(ObjectReference.ThisPtr, Index);

        [global::WinRT.WinRTExposedType]
        private sealed class EventState : global::ABI.WinRT.Interop.EventSourceState<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.ScrollView, object>>
        {
            public EventState(System.IntPtr obj, int index)
            : base(obj, index)
            {
            }

            protected override global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.ScrollView, object> GetEventInvoke()
            {
                return (global::Microsoft.UI.Xaml.Controls.ScrollView sender, object args) =>
                {
                    var targetDelegate = TargetDelegate;
                    if (targetDelegate is null)
                    {
                        return ;
                    }
                    targetDelegate.Invoke(sender, args);
                };
            }
        }
    }

    internal sealed unsafe class _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_UI_Xaml_Controls_Primitives_IScrollControllerPanningInfo__global__Microsoft_UI_Xaml_Controls_Primitives_ScrollControllerPanRequestedEventArgs_ : global::ABI.WinRT.Interop.EventSource<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.Primitives.IScrollControllerPanningInfo, global::Microsoft.UI.Xaml.Controls.Primitives.ScrollControllerPanRequestedEventArgs>>
    {
        private static readonly bool initialized = global::WinRT.GenericTypeInstantiations.Windows_Foundation_TypedEventHandler_2_Microsoft_UI_Xaml_Controls_Primitives_IScrollControllerPanningInfo__Microsoft_UI_Xaml_Controls_Primitives_ScrollControllerPanRequestedEventArgs.EnsureInitialized();

        internal _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_UI_Xaml_Controls_Primitives_IScrollControllerPanningInfo__global__Microsoft_UI_Xaml_Controls_Primitives_ScrollControllerPanRequestedEventArgs_(IObjectReference obj,
        delegate* unmanaged[Stdcall]<System.IntPtr, System.IntPtr, WinRT.EventRegistrationToken*, int> addHandler,
        delegate* unmanaged[Stdcall]<System.IntPtr, WinRT.EventRegistrationToken, int> removeHandler, int index) : base(obj, addHandler, removeHandler, index)
        {
            _ = initialized;
        }

        protected override ObjectReferenceValue CreateMarshaler(global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.Primitives.IScrollControllerPanningInfo, global::Microsoft.UI.Xaml.Controls.Primitives.ScrollControllerPanRequestedEventArgs> handler) =>
        global::ABI.Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.Primitives.IScrollControllerPanningInfo, global::Microsoft.UI.Xaml.Controls.Primitives.ScrollControllerPanRequestedEventArgs>.CreateMarshaler2(handler);

        protected override global::ABI.WinRT.Interop.EventSourceState<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.Primitives.IScrollControllerPanningInfo, global::Microsoft.UI.Xaml.Controls.Primitives.ScrollControllerPanRequestedEventArgs>> CreateEventSourceState() =>
        new EventState(ObjectReference.ThisPtr, Index);

        [global::WinRT.WinRTExposedType]
        private sealed class EventState : global::ABI.WinRT.Interop.EventSourceState<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.Primitives.IScrollControllerPanningInfo, global::Microsoft.UI.Xaml.Controls.Primitives.ScrollControllerPanRequestedEventArgs>>
        {
            public EventState(System.IntPtr obj, int index)
            : base(obj, index)
            {
            }

            protected override global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.Primitives.IScrollControllerPanningInfo, global::Microsoft.UI.Xaml.Controls.Primitives.ScrollControllerPanRequestedEventArgs> GetEventInvoke()
            {
                return (global::Microsoft.UI.Xaml.Controls.Primitives.IScrollControllerPanningInfo sender, global::Microsoft.UI.Xaml.Controls.Primitives.ScrollControllerPanRequestedEventArgs args) =>
                {
                    var targetDelegate = TargetDelegate;
                    if (targetDelegate is null)
                    {
                        return ;
                    }
                    targetDelegate.Invoke(sender, args);
                };
            }
        }
    }

    internal sealed unsafe class _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_UI_Input_GestureRecognizer__global__Microsoft_UI_Input_ManipulationStartedEventArgs_ : global::ABI.WinRT.Interop.EventSource<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Input.GestureRecognizer, global::Microsoft.UI.Input.ManipulationStartedEventArgs>>
    {
        private static readonly bool initialized = global::WinRT.GenericTypeInstantiations.Windows_Foundation_TypedEventHandler_2_Microsoft_UI_Input_GestureRecognizer__Microsoft_UI_Input_ManipulationStartedEventArgs.EnsureInitialized();

        internal _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_UI_Input_GestureRecognizer__global__Microsoft_UI_Input_ManipulationStartedEventArgs_(IObjectReference obj,
        delegate* unmanaged[Stdcall]<System.IntPtr, System.IntPtr, WinRT.EventRegistrationToken*, int> addHandler,
        delegate* unmanaged[Stdcall]<System.IntPtr, WinRT.EventRegistrationToken, int> removeHandler, int index) : base(obj, addHandler, removeHandler, index)
        {
            _ = initialized;
        }

        protected override ObjectReferenceValue CreateMarshaler(global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Input.GestureRecognizer, global::Microsoft.UI.Input.ManipulationStartedEventArgs> handler) =>
        global::ABI.Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Input.GestureRecognizer, global::Microsoft.UI.Input.ManipulationStartedEventArgs>.CreateMarshaler2(handler);

        protected override global::ABI.WinRT.Interop.EventSourceState<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Input.GestureRecognizer, global::Microsoft.UI.Input.ManipulationStartedEventArgs>> CreateEventSourceState() =>
        new EventState(ObjectReference.ThisPtr, Index);

        [global::WinRT.WinRTExposedType]
        private sealed class EventState : global::ABI.WinRT.Interop.EventSourceState<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Input.GestureRecognizer, global::Microsoft.UI.Input.ManipulationStartedEventArgs>>
        {
            public EventState(System.IntPtr obj, int index)
            : base(obj, index)
            {
            }

            protected override global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Input.GestureRecognizer, global::Microsoft.UI.Input.ManipulationStartedEventArgs> GetEventInvoke()
            {
                return (global::Microsoft.UI.Input.GestureRecognizer sender, global::Microsoft.UI.Input.ManipulationStartedEventArgs args) =>
                {
                    var targetDelegate = TargetDelegate;
                    if (targetDelegate is null)
                    {
                        return ;
                    }
                    targetDelegate.Invoke(sender, args);
                };
            }
        }
    }

    internal sealed unsafe class _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_UI_Xaml_Controls_Primitives_ColorSpectrum__global__Microsoft_UI_Xaml_Controls_ColorChangedEventArgs_ : global::ABI.WinRT.Interop.EventSource<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.Primitives.ColorSpectrum, global::Microsoft.UI.Xaml.Controls.ColorChangedEventArgs>>
    {
        private static readonly bool initialized = global::WinRT.GenericTypeInstantiations.Windows_Foundation_TypedEventHandler_2_Microsoft_UI_Xaml_Controls_Primitives_ColorSpectrum__Microsoft_UI_Xaml_Controls_ColorChangedEventArgs.EnsureInitialized();

        internal _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_UI_Xaml_Controls_Primitives_ColorSpectrum__global__Microsoft_UI_Xaml_Controls_ColorChangedEventArgs_(IObjectReference obj,
        delegate* unmanaged[Stdcall]<System.IntPtr, System.IntPtr, WinRT.EventRegistrationToken*, int> addHandler,
        delegate* unmanaged[Stdcall]<System.IntPtr, WinRT.EventRegistrationToken, int> removeHandler, int index) : base(obj, addHandler, removeHandler, index)
        {
            _ = initialized;
        }

        protected override ObjectReferenceValue CreateMarshaler(global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.Primitives.ColorSpectrum, global::Microsoft.UI.Xaml.Controls.ColorChangedEventArgs> handler) =>
        global::ABI.Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.Primitives.ColorSpectrum, global::Microsoft.UI.Xaml.Controls.ColorChangedEventArgs>.CreateMarshaler2(handler);

        protected override global::ABI.WinRT.Interop.EventSourceState<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.Primitives.ColorSpectrum, global::Microsoft.UI.Xaml.Controls.ColorChangedEventArgs>> CreateEventSourceState() =>
        new EventState(ObjectReference.ThisPtr, Index);

        [global::WinRT.WinRTExposedType]
        private sealed class EventState : global::ABI.WinRT.Interop.EventSourceState<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.Primitives.ColorSpectrum, global::Microsoft.UI.Xaml.Controls.ColorChangedEventArgs>>
        {
            public EventState(System.IntPtr obj, int index)
            : base(obj, index)
            {
            }

            protected override global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.Primitives.ColorSpectrum, global::Microsoft.UI.Xaml.Controls.ColorChangedEventArgs> GetEventInvoke()
            {
                return (global::Microsoft.UI.Xaml.Controls.Primitives.ColorSpectrum sender, global::Microsoft.UI.Xaml.Controls.ColorChangedEventArgs args) =>
                {
                    var targetDelegate = TargetDelegate;
                    if (targetDelegate is null)
                    {
                        return ;
                    }
                    targetDelegate.Invoke(sender, args);
                };
            }
        }
    }

    internal sealed unsafe class _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_Web_WebView2_Core_CoreWebView2__global__Microsoft_Web_WebView2_Core_CoreWebView2NavigationCompletedEventArgs_ : global::ABI.WinRT.Interop.EventSource<global::Windows.Foundation.TypedEventHandler<global::Microsoft.Web.WebView2.Core.CoreWebView2, global::Microsoft.Web.WebView2.Core.CoreWebView2NavigationCompletedEventArgs>>
    {
        private static readonly bool initialized = global::WinRT.GenericTypeInstantiations.Windows_Foundation_TypedEventHandler_2_Microsoft_Web_WebView2_Core_CoreWebView2__Microsoft_Web_WebView2_Core_CoreWebView2NavigationCompletedEventArgs.EnsureInitialized();

        internal _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_Web_WebView2_Core_CoreWebView2__global__Microsoft_Web_WebView2_Core_CoreWebView2NavigationCompletedEventArgs_(IObjectReference obj,
        delegate* unmanaged[Stdcall]<System.IntPtr, System.IntPtr, WinRT.EventRegistrationToken*, int> addHandler,
        delegate* unmanaged[Stdcall]<System.IntPtr, WinRT.EventRegistrationToken, int> removeHandler, int index) : base(obj, addHandler, removeHandler, index)
        {
            _ = initialized;
        }

        protected override ObjectReferenceValue CreateMarshaler(global::Windows.Foundation.TypedEventHandler<global::Microsoft.Web.WebView2.Core.CoreWebView2, global::Microsoft.Web.WebView2.Core.CoreWebView2NavigationCompletedEventArgs> handler) =>
        global::ABI.Windows.Foundation.TypedEventHandler<global::Microsoft.Web.WebView2.Core.CoreWebView2, global::Microsoft.Web.WebView2.Core.CoreWebView2NavigationCompletedEventArgs>.CreateMarshaler2(handler);

        protected override global::ABI.WinRT.Interop.EventSourceState<global::Windows.Foundation.TypedEventHandler<global::Microsoft.Web.WebView2.Core.CoreWebView2, global::Microsoft.Web.WebView2.Core.CoreWebView2NavigationCompletedEventArgs>> CreateEventSourceState() =>
        new EventState(ObjectReference.ThisPtr, Index);

        [global::WinRT.WinRTExposedType]
        private sealed class EventState : global::ABI.WinRT.Interop.EventSourceState<global::Windows.Foundation.TypedEventHandler<global::Microsoft.Web.WebView2.Core.CoreWebView2, global::Microsoft.Web.WebView2.Core.CoreWebView2NavigationCompletedEventArgs>>
        {
            public EventState(System.IntPtr obj, int index)
            : base(obj, index)
            {
            }

            protected override global::Windows.Foundation.TypedEventHandler<global::Microsoft.Web.WebView2.Core.CoreWebView2, global::Microsoft.Web.WebView2.Core.CoreWebView2NavigationCompletedEventArgs> GetEventInvoke()
            {
                return (global::Microsoft.Web.WebView2.Core.CoreWebView2 sender, global::Microsoft.Web.WebView2.Core.CoreWebView2NavigationCompletedEventArgs args) =>
                {
                    var targetDelegate = TargetDelegate;
                    if (targetDelegate is null)
                    {
                        return ;
                    }
                    targetDelegate.Invoke(sender, args);
                };
            }
        }
    }

    internal sealed unsafe class _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_UI_Xaml_Controls_ToggleSplitButton__global__Microsoft_UI_Xaml_Controls_ToggleSplitButtonIsCheckedChangedEventArgs_ : global::ABI.WinRT.Interop.EventSource<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.ToggleSplitButton, global::Microsoft.UI.Xaml.Controls.ToggleSplitButtonIsCheckedChangedEventArgs>>
    {
        private static readonly bool initialized = global::WinRT.GenericTypeInstantiations.Windows_Foundation_TypedEventHandler_2_Microsoft_UI_Xaml_Controls_ToggleSplitButton__Microsoft_UI_Xaml_Controls_ToggleSplitButtonIsCheckedChangedEventArgs.EnsureInitialized();

        internal _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_UI_Xaml_Controls_ToggleSplitButton__global__Microsoft_UI_Xaml_Controls_ToggleSplitButtonIsCheckedChangedEventArgs_(IObjectReference obj,
        delegate* unmanaged[Stdcall]<System.IntPtr, System.IntPtr, WinRT.EventRegistrationToken*, int> addHandler,
        delegate* unmanaged[Stdcall]<System.IntPtr, WinRT.EventRegistrationToken, int> removeHandler, int index) : base(obj, addHandler, removeHandler, index)
        {
            _ = initialized;
        }

        protected override ObjectReferenceValue CreateMarshaler(global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.ToggleSplitButton, global::Microsoft.UI.Xaml.Controls.ToggleSplitButtonIsCheckedChangedEventArgs> handler) =>
        global::ABI.Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.ToggleSplitButton, global::Microsoft.UI.Xaml.Controls.ToggleSplitButtonIsCheckedChangedEventArgs>.CreateMarshaler2(handler);

        protected override global::ABI.WinRT.Interop.EventSourceState<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.ToggleSplitButton, global::Microsoft.UI.Xaml.Controls.ToggleSplitButtonIsCheckedChangedEventArgs>> CreateEventSourceState() =>
        new EventState(ObjectReference.ThisPtr, Index);

        [global::WinRT.WinRTExposedType]
        private sealed class EventState : global::ABI.WinRT.Interop.EventSourceState<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.ToggleSplitButton, global::Microsoft.UI.Xaml.Controls.ToggleSplitButtonIsCheckedChangedEventArgs>>
        {
            public EventState(System.IntPtr obj, int index)
            : base(obj, index)
            {
            }

            protected override global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.ToggleSplitButton, global::Microsoft.UI.Xaml.Controls.ToggleSplitButtonIsCheckedChangedEventArgs> GetEventInvoke()
            {
                return (global::Microsoft.UI.Xaml.Controls.ToggleSplitButton sender, global::Microsoft.UI.Xaml.Controls.ToggleSplitButtonIsCheckedChangedEventArgs args) =>
                {
                    var targetDelegate = TargetDelegate;
                    if (targetDelegate is null)
                    {
                        return ;
                    }
                    targetDelegate.Invoke(sender, args);
                };
            }
        }
    }

    internal sealed unsafe class _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_UI_Xaml_Controls_ItemsRepeater__global__Microsoft_UI_Xaml_Controls_ItemsRepeaterElementClearingEventArgs_ : global::ABI.WinRT.Interop.EventSource<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.ItemsRepeater, global::Microsoft.UI.Xaml.Controls.ItemsRepeaterElementClearingEventArgs>>
    {
        private static readonly bool initialized = global::WinRT.GenericTypeInstantiations.Windows_Foundation_TypedEventHandler_2_Microsoft_UI_Xaml_Controls_ItemsRepeater__Microsoft_UI_Xaml_Controls_ItemsRepeaterElementClearingEventArgs.EnsureInitialized();

        internal _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_UI_Xaml_Controls_ItemsRepeater__global__Microsoft_UI_Xaml_Controls_ItemsRepeaterElementClearingEventArgs_(IObjectReference obj,
        delegate* unmanaged[Stdcall]<System.IntPtr, System.IntPtr, WinRT.EventRegistrationToken*, int> addHandler,
        delegate* unmanaged[Stdcall]<System.IntPtr, WinRT.EventRegistrationToken, int> removeHandler, int index) : base(obj, addHandler, removeHandler, index)
        {
            _ = initialized;
        }

        protected override ObjectReferenceValue CreateMarshaler(global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.ItemsRepeater, global::Microsoft.UI.Xaml.Controls.ItemsRepeaterElementClearingEventArgs> handler) =>
        global::ABI.Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.ItemsRepeater, global::Microsoft.UI.Xaml.Controls.ItemsRepeaterElementClearingEventArgs>.CreateMarshaler2(handler);

        protected override global::ABI.WinRT.Interop.EventSourceState<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.ItemsRepeater, global::Microsoft.UI.Xaml.Controls.ItemsRepeaterElementClearingEventArgs>> CreateEventSourceState() =>
        new EventState(ObjectReference.ThisPtr, Index);

        [global::WinRT.WinRTExposedType]
        private sealed class EventState : global::ABI.WinRT.Interop.EventSourceState<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.ItemsRepeater, global::Microsoft.UI.Xaml.Controls.ItemsRepeaterElementClearingEventArgs>>
        {
            public EventState(System.IntPtr obj, int index)
            : base(obj, index)
            {
            }

            protected override global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.ItemsRepeater, global::Microsoft.UI.Xaml.Controls.ItemsRepeaterElementClearingEventArgs> GetEventInvoke()
            {
                return (global::Microsoft.UI.Xaml.Controls.ItemsRepeater sender, global::Microsoft.UI.Xaml.Controls.ItemsRepeaterElementClearingEventArgs args) =>
                {
                    var targetDelegate = TargetDelegate;
                    if (targetDelegate is null)
                    {
                        return ;
                    }
                    targetDelegate.Invoke(sender, args);
                };
            }
        }
    }

    internal sealed unsafe class _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_UI_Xaml_UIElement__global__Microsoft_UI_Xaml_Input_ContextRequestedEventArgs_ : global::ABI.WinRT.Interop.EventSource<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.UIElement, global::Microsoft.UI.Xaml.Input.ContextRequestedEventArgs>>
    {
        private static readonly bool initialized = global::WinRT.GenericTypeInstantiations.Windows_Foundation_TypedEventHandler_2_Microsoft_UI_Xaml_UIElement__Microsoft_UI_Xaml_Input_ContextRequestedEventArgs.EnsureInitialized();

        internal _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_UI_Xaml_UIElement__global__Microsoft_UI_Xaml_Input_ContextRequestedEventArgs_(IObjectReference obj,
        delegate* unmanaged[Stdcall]<System.IntPtr, System.IntPtr, WinRT.EventRegistrationToken*, int> addHandler,
        delegate* unmanaged[Stdcall]<System.IntPtr, WinRT.EventRegistrationToken, int> removeHandler, int index) : base(obj, addHandler, removeHandler, index)
        {
            _ = initialized;
        }

        protected override ObjectReferenceValue CreateMarshaler(global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.UIElement, global::Microsoft.UI.Xaml.Input.ContextRequestedEventArgs> handler) =>
        global::ABI.Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.UIElement, global::Microsoft.UI.Xaml.Input.ContextRequestedEventArgs>.CreateMarshaler2(handler);

        protected override global::ABI.WinRT.Interop.EventSourceState<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.UIElement, global::Microsoft.UI.Xaml.Input.ContextRequestedEventArgs>> CreateEventSourceState() =>
        new EventState(ObjectReference.ThisPtr, Index);

        [global::WinRT.WinRTExposedType]
        private sealed class EventState : global::ABI.WinRT.Interop.EventSourceState<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.UIElement, global::Microsoft.UI.Xaml.Input.ContextRequestedEventArgs>>
        {
            public EventState(System.IntPtr obj, int index)
            : base(obj, index)
            {
            }

            protected override global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.UIElement, global::Microsoft.UI.Xaml.Input.ContextRequestedEventArgs> GetEventInvoke()
            {
                return (global::Microsoft.UI.Xaml.UIElement sender, global::Microsoft.UI.Xaml.Input.ContextRequestedEventArgs args) =>
                {
                    var targetDelegate = TargetDelegate;
                    if (targetDelegate is null)
                    {
                        return ;
                    }
                    targetDelegate.Invoke(sender, args);
                };
            }
        }
    }

    internal sealed unsafe class _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_UI_Xaml_Controls_TabView__global__Windows_Foundation_Collections_IVectorChangedEventArgs_ : global::ABI.WinRT.Interop.EventSource<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.TabView, global::Windows.Foundation.Collections.IVectorChangedEventArgs>>
    {
        private static readonly bool initialized = global::WinRT.GenericTypeInstantiations.Windows_Foundation_TypedEventHandler_2_Microsoft_UI_Xaml_Controls_TabView__Windows_Foundation_Collections_IVectorChangedEventArgs.EnsureInitialized();

        internal _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_UI_Xaml_Controls_TabView__global__Windows_Foundation_Collections_IVectorChangedEventArgs_(IObjectReference obj,
        delegate* unmanaged[Stdcall]<System.IntPtr, System.IntPtr, WinRT.EventRegistrationToken*, int> addHandler,
        delegate* unmanaged[Stdcall]<System.IntPtr, WinRT.EventRegistrationToken, int> removeHandler, int index) : base(obj, addHandler, removeHandler, index)
        {
            _ = initialized;
        }

        protected override ObjectReferenceValue CreateMarshaler(global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.TabView, global::Windows.Foundation.Collections.IVectorChangedEventArgs> handler) =>
        global::ABI.Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.TabView, global::Windows.Foundation.Collections.IVectorChangedEventArgs>.CreateMarshaler2(handler);

        protected override global::ABI.WinRT.Interop.EventSourceState<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.TabView, global::Windows.Foundation.Collections.IVectorChangedEventArgs>> CreateEventSourceState() =>
        new EventState(ObjectReference.ThisPtr, Index);

        [global::WinRT.WinRTExposedType]
        private sealed class EventState : global::ABI.WinRT.Interop.EventSourceState<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.TabView, global::Windows.Foundation.Collections.IVectorChangedEventArgs>>
        {
            public EventState(System.IntPtr obj, int index)
            : base(obj, index)
            {
            }

            protected override global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.TabView, global::Windows.Foundation.Collections.IVectorChangedEventArgs> GetEventInvoke()
            {
                return (global::Microsoft.UI.Xaml.Controls.TabView sender, global::Windows.Foundation.Collections.IVectorChangedEventArgs args) =>
                {
                    var targetDelegate = TargetDelegate;
                    if (targetDelegate is null)
                    {
                        return ;
                    }
                    targetDelegate.Invoke(sender, args);
                };
            }
        }
    }

    internal sealed unsafe class _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_UI_Xaml_Controls_TreeView__global__Microsoft_UI_Xaml_Controls_TreeViewDragItemsCompletedEventArgs_ : global::ABI.WinRT.Interop.EventSource<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.TreeView, global::Microsoft.UI.Xaml.Controls.TreeViewDragItemsCompletedEventArgs>>
    {
        private static readonly bool initialized = global::WinRT.GenericTypeInstantiations.Windows_Foundation_TypedEventHandler_2_Microsoft_UI_Xaml_Controls_TreeView__Microsoft_UI_Xaml_Controls_TreeViewDragItemsCompletedEventArgs.EnsureInitialized();

        internal _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_UI_Xaml_Controls_TreeView__global__Microsoft_UI_Xaml_Controls_TreeViewDragItemsCompletedEventArgs_(IObjectReference obj,
        delegate* unmanaged[Stdcall]<System.IntPtr, System.IntPtr, WinRT.EventRegistrationToken*, int> addHandler,
        delegate* unmanaged[Stdcall]<System.IntPtr, WinRT.EventRegistrationToken, int> removeHandler, int index) : base(obj, addHandler, removeHandler, index)
        {
            _ = initialized;
        }

        protected override ObjectReferenceValue CreateMarshaler(global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.TreeView, global::Microsoft.UI.Xaml.Controls.TreeViewDragItemsCompletedEventArgs> handler) =>
        global::ABI.Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.TreeView, global::Microsoft.UI.Xaml.Controls.TreeViewDragItemsCompletedEventArgs>.CreateMarshaler2(handler);

        protected override global::ABI.WinRT.Interop.EventSourceState<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.TreeView, global::Microsoft.UI.Xaml.Controls.TreeViewDragItemsCompletedEventArgs>> CreateEventSourceState() =>
        new EventState(ObjectReference.ThisPtr, Index);

        [global::WinRT.WinRTExposedType]
        private sealed class EventState : global::ABI.WinRT.Interop.EventSourceState<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.TreeView, global::Microsoft.UI.Xaml.Controls.TreeViewDragItemsCompletedEventArgs>>
        {
            public EventState(System.IntPtr obj, int index)
            : base(obj, index)
            {
            }

            protected override global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.TreeView, global::Microsoft.UI.Xaml.Controls.TreeViewDragItemsCompletedEventArgs> GetEventInvoke()
            {
                return (global::Microsoft.UI.Xaml.Controls.TreeView sender, global::Microsoft.UI.Xaml.Controls.TreeViewDragItemsCompletedEventArgs args) =>
                {
                    var targetDelegate = TargetDelegate;
                    if (targetDelegate is null)
                    {
                        return ;
                    }
                    targetDelegate.Invoke(sender, args);
                };
            }
        }
    }

    internal sealed unsafe class _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_UI_Xaml_Controls_MapControl__global__Microsoft_UI_Xaml_Controls_MapElementClickEventArgs_ : global::ABI.WinRT.Interop.EventSource<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.MapControl, global::Microsoft.UI.Xaml.Controls.MapElementClickEventArgs>>
    {
        private static readonly bool initialized = global::WinRT.GenericTypeInstantiations.Windows_Foundation_TypedEventHandler_2_Microsoft_UI_Xaml_Controls_MapControl__Microsoft_UI_Xaml_Controls_MapElementClickEventArgs.EnsureInitialized();

        internal _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_UI_Xaml_Controls_MapControl__global__Microsoft_UI_Xaml_Controls_MapElementClickEventArgs_(IObjectReference obj,
        delegate* unmanaged[Stdcall]<System.IntPtr, System.IntPtr, WinRT.EventRegistrationToken*, int> addHandler,
        delegate* unmanaged[Stdcall]<System.IntPtr, WinRT.EventRegistrationToken, int> removeHandler, int index) : base(obj, addHandler, removeHandler, index)
        {
            _ = initialized;
        }

        protected override ObjectReferenceValue CreateMarshaler(global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.MapControl, global::Microsoft.UI.Xaml.Controls.MapElementClickEventArgs> handler) =>
        global::ABI.Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.MapControl, global::Microsoft.UI.Xaml.Controls.MapElementClickEventArgs>.CreateMarshaler2(handler);

        protected override global::ABI.WinRT.Interop.EventSourceState<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.MapControl, global::Microsoft.UI.Xaml.Controls.MapElementClickEventArgs>> CreateEventSourceState() =>
        new EventState(ObjectReference.ThisPtr, Index);

        [global::WinRT.WinRTExposedType]
        private sealed class EventState : global::ABI.WinRT.Interop.EventSourceState<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.MapControl, global::Microsoft.UI.Xaml.Controls.MapElementClickEventArgs>>
        {
            public EventState(System.IntPtr obj, int index)
            : base(obj, index)
            {
            }

            protected override global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.MapControl, global::Microsoft.UI.Xaml.Controls.MapElementClickEventArgs> GetEventInvoke()
            {
                return (global::Microsoft.UI.Xaml.Controls.MapControl sender, global::Microsoft.UI.Xaml.Controls.MapElementClickEventArgs args) =>
                {
                    var targetDelegate = TargetDelegate;
                    if (targetDelegate is null)
                    {
                        return ;
                    }
                    targetDelegate.Invoke(sender, args);
                };
            }
        }
    }

    internal sealed unsafe class _EventSource_global__Microsoft_UI_Xaml_Printing_GetPreviewPageEventHandler : global::ABI.WinRT.Interop.EventSource<global::Microsoft.UI.Xaml.Printing.GetPreviewPageEventHandler>
    {


        internal _EventSource_global__Microsoft_UI_Xaml_Printing_GetPreviewPageEventHandler(IObjectReference obj,
        delegate* unmanaged[Stdcall]<System.IntPtr, System.IntPtr, WinRT.EventRegistrationToken*, int> addHandler,
        delegate* unmanaged[Stdcall]<System.IntPtr, WinRT.EventRegistrationToken, int> removeHandler, int index) : base(obj, addHandler, removeHandler, index)
        {

        }

        protected override ObjectReferenceValue CreateMarshaler(global::Microsoft.UI.Xaml.Printing.GetPreviewPageEventHandler handler) =>
        global::ABI.Microsoft.UI.Xaml.Printing.GetPreviewPageEventHandler.CreateMarshaler2(handler);

        protected override global::ABI.WinRT.Interop.EventSourceState<global::Microsoft.UI.Xaml.Printing.GetPreviewPageEventHandler> CreateEventSourceState() =>
        new EventState(ObjectReference.ThisPtr, Index);

        [global::WinRT.WinRTExposedType]
        private sealed class EventState : global::ABI.WinRT.Interop.EventSourceState<global::Microsoft.UI.Xaml.Printing.GetPreviewPageEventHandler>
        {
            public EventState(System.IntPtr obj, int index)
            : base(obj, index)
            {
            }

            protected override global::Microsoft.UI.Xaml.Printing.GetPreviewPageEventHandler GetEventInvoke()
            {
                return (object sender, global::Microsoft.UI.Xaml.Printing.GetPreviewPageEventArgs e) =>
                {
                    var targetDelegate = TargetDelegate;
                    if (targetDelegate is null)
                    {
                        return ;
                    }
                    targetDelegate.Invoke(sender, e);
                };
            }
        }
    }

    internal sealed unsafe class _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_UI_Input_InputKeyboardSource__global__Microsoft_UI_Input_ContextMenuKeyEventArgs_ : global::ABI.WinRT.Interop.EventSource<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Input.InputKeyboardSource, global::Microsoft.UI.Input.ContextMenuKeyEventArgs>>
    {
        private static readonly bool initialized = global::WinRT.GenericTypeInstantiations.Windows_Foundation_TypedEventHandler_2_Microsoft_UI_Input_InputKeyboardSource__Microsoft_UI_Input_ContextMenuKeyEventArgs.EnsureInitialized();

        internal _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_UI_Input_InputKeyboardSource__global__Microsoft_UI_Input_ContextMenuKeyEventArgs_(IObjectReference obj,
        delegate* unmanaged[Stdcall]<System.IntPtr, System.IntPtr, WinRT.EventRegistrationToken*, int> addHandler,
        delegate* unmanaged[Stdcall]<System.IntPtr, WinRT.EventRegistrationToken, int> removeHandler, int index) : base(obj, addHandler, removeHandler, index)
        {
            _ = initialized;
        }

        protected override ObjectReferenceValue CreateMarshaler(global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Input.InputKeyboardSource, global::Microsoft.UI.Input.ContextMenuKeyEventArgs> handler) =>
        global::ABI.Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Input.InputKeyboardSource, global::Microsoft.UI.Input.ContextMenuKeyEventArgs>.CreateMarshaler2(handler);

        protected override global::ABI.WinRT.Interop.EventSourceState<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Input.InputKeyboardSource, global::Microsoft.UI.Input.ContextMenuKeyEventArgs>> CreateEventSourceState() =>
        new EventState(ObjectReference.ThisPtr, Index);

        [global::WinRT.WinRTExposedType]
        private sealed class EventState : global::ABI.WinRT.Interop.EventSourceState<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Input.InputKeyboardSource, global::Microsoft.UI.Input.ContextMenuKeyEventArgs>>
        {
            public EventState(System.IntPtr obj, int index)
            : base(obj, index)
            {
            }

            protected override global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Input.InputKeyboardSource, global::Microsoft.UI.Input.ContextMenuKeyEventArgs> GetEventInvoke()
            {
                return (global::Microsoft.UI.Input.InputKeyboardSource sender, global::Microsoft.UI.Input.ContextMenuKeyEventArgs args) =>
                {
                    var targetDelegate = TargetDelegate;
                    if (targetDelegate is null)
                    {
                        return ;
                    }
                    targetDelegate.Invoke(sender, args);
                };
            }
        }
    }

    internal sealed unsafe class _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_Web_WebView2_Core_CoreWebView2Frame__global__Microsoft_Web_WebView2_Core_CoreWebView2ScreenCaptureStartingEventArgs_ : global::ABI.WinRT.Interop.EventSource<global::Windows.Foundation.TypedEventHandler<global::Microsoft.Web.WebView2.Core.CoreWebView2Frame, global::Microsoft.Web.WebView2.Core.CoreWebView2ScreenCaptureStartingEventArgs>>
    {
        private static readonly bool initialized = global::WinRT.GenericTypeInstantiations.Windows_Foundation_TypedEventHandler_2_Microsoft_Web_WebView2_Core_CoreWebView2Frame__Microsoft_Web_WebView2_Core_CoreWebView2ScreenCaptureStartingEventArgs.EnsureInitialized();

        internal _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_Web_WebView2_Core_CoreWebView2Frame__global__Microsoft_Web_WebView2_Core_CoreWebView2ScreenCaptureStartingEventArgs_(IObjectReference obj,
        delegate* unmanaged[Stdcall]<System.IntPtr, System.IntPtr, WinRT.EventRegistrationToken*, int> addHandler,
        delegate* unmanaged[Stdcall]<System.IntPtr, WinRT.EventRegistrationToken, int> removeHandler, int index) : base(obj, addHandler, removeHandler, index)
        {
            _ = initialized;
        }

        protected override ObjectReferenceValue CreateMarshaler(global::Windows.Foundation.TypedEventHandler<global::Microsoft.Web.WebView2.Core.CoreWebView2Frame, global::Microsoft.Web.WebView2.Core.CoreWebView2ScreenCaptureStartingEventArgs> handler) =>
        global::ABI.Windows.Foundation.TypedEventHandler<global::Microsoft.Web.WebView2.Core.CoreWebView2Frame, global::Microsoft.Web.WebView2.Core.CoreWebView2ScreenCaptureStartingEventArgs>.CreateMarshaler2(handler);

        protected override global::ABI.WinRT.Interop.EventSourceState<global::Windows.Foundation.TypedEventHandler<global::Microsoft.Web.WebView2.Core.CoreWebView2Frame, global::Microsoft.Web.WebView2.Core.CoreWebView2ScreenCaptureStartingEventArgs>> CreateEventSourceState() =>
        new EventState(ObjectReference.ThisPtr, Index);

        [global::WinRT.WinRTExposedType]
        private sealed class EventState : global::ABI.WinRT.Interop.EventSourceState<global::Windows.Foundation.TypedEventHandler<global::Microsoft.Web.WebView2.Core.CoreWebView2Frame, global::Microsoft.Web.WebView2.Core.CoreWebView2ScreenCaptureStartingEventArgs>>
        {
            public EventState(System.IntPtr obj, int index)
            : base(obj, index)
            {
            }

            protected override global::Windows.Foundation.TypedEventHandler<global::Microsoft.Web.WebView2.Core.CoreWebView2Frame, global::Microsoft.Web.WebView2.Core.CoreWebView2ScreenCaptureStartingEventArgs> GetEventInvoke()
            {
                return (global::Microsoft.Web.WebView2.Core.CoreWebView2Frame sender, global::Microsoft.Web.WebView2.Core.CoreWebView2ScreenCaptureStartingEventArgs args) =>
                {
                    var targetDelegate = TargetDelegate;
                    if (targetDelegate is null)
                    {
                        return ;
                    }
                    targetDelegate.Invoke(sender, args);
                };
            }
        }
    }

    internal sealed unsafe class _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_UI_Xaml_Controls_ListPickerFlyout__global__Microsoft_UI_Xaml_Controls_ItemsPickedEventArgs_ : global::ABI.WinRT.Interop.EventSource<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.ListPickerFlyout, global::Microsoft.UI.Xaml.Controls.ItemsPickedEventArgs>>
    {
        private static readonly bool initialized = global::WinRT.GenericTypeInstantiations.Windows_Foundation_TypedEventHandler_2_Microsoft_UI_Xaml_Controls_ListPickerFlyout__Microsoft_UI_Xaml_Controls_ItemsPickedEventArgs.EnsureInitialized();

        internal _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_UI_Xaml_Controls_ListPickerFlyout__global__Microsoft_UI_Xaml_Controls_ItemsPickedEventArgs_(IObjectReference obj,
        delegate* unmanaged[Stdcall]<System.IntPtr, System.IntPtr, WinRT.EventRegistrationToken*, int> addHandler,
        delegate* unmanaged[Stdcall]<System.IntPtr, WinRT.EventRegistrationToken, int> removeHandler, int index) : base(obj, addHandler, removeHandler, index)
        {
            _ = initialized;
        }

        protected override ObjectReferenceValue CreateMarshaler(global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.ListPickerFlyout, global::Microsoft.UI.Xaml.Controls.ItemsPickedEventArgs> handler) =>
        global::ABI.Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.ListPickerFlyout, global::Microsoft.UI.Xaml.Controls.ItemsPickedEventArgs>.CreateMarshaler2(handler);

        protected override global::ABI.WinRT.Interop.EventSourceState<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.ListPickerFlyout, global::Microsoft.UI.Xaml.Controls.ItemsPickedEventArgs>> CreateEventSourceState() =>
        new EventState(ObjectReference.ThisPtr, Index);

        [global::WinRT.WinRTExposedType]
        private sealed class EventState : global::ABI.WinRT.Interop.EventSourceState<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.ListPickerFlyout, global::Microsoft.UI.Xaml.Controls.ItemsPickedEventArgs>>
        {
            public EventState(System.IntPtr obj, int index)
            : base(obj, index)
            {
            }

            protected override global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.ListPickerFlyout, global::Microsoft.UI.Xaml.Controls.ItemsPickedEventArgs> GetEventInvoke()
            {
                return (global::Microsoft.UI.Xaml.Controls.ListPickerFlyout sender, global::Microsoft.UI.Xaml.Controls.ItemsPickedEventArgs args) =>
                {
                    var targetDelegate = TargetDelegate;
                    if (targetDelegate is null)
                    {
                        return ;
                    }
                    targetDelegate.Invoke(sender, args);
                };
            }
        }
    }

    internal sealed unsafe class _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_UI_Xaml_Controls_ScrollView__global__Microsoft_UI_Xaml_Controls_ScrollingZoomCompletedEventArgs_ : global::ABI.WinRT.Interop.EventSource<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.ScrollView, global::Microsoft.UI.Xaml.Controls.ScrollingZoomCompletedEventArgs>>
    {
        private static readonly bool initialized = global::WinRT.GenericTypeInstantiations.Windows_Foundation_TypedEventHandler_2_Microsoft_UI_Xaml_Controls_ScrollView__Microsoft_UI_Xaml_Controls_ScrollingZoomCompletedEventArgs.EnsureInitialized();

        internal _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_UI_Xaml_Controls_ScrollView__global__Microsoft_UI_Xaml_Controls_ScrollingZoomCompletedEventArgs_(IObjectReference obj,
        delegate* unmanaged[Stdcall]<System.IntPtr, System.IntPtr, WinRT.EventRegistrationToken*, int> addHandler,
        delegate* unmanaged[Stdcall]<System.IntPtr, WinRT.EventRegistrationToken, int> removeHandler, int index) : base(obj, addHandler, removeHandler, index)
        {
            _ = initialized;
        }

        protected override ObjectReferenceValue CreateMarshaler(global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.ScrollView, global::Microsoft.UI.Xaml.Controls.ScrollingZoomCompletedEventArgs> handler) =>
        global::ABI.Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.ScrollView, global::Microsoft.UI.Xaml.Controls.ScrollingZoomCompletedEventArgs>.CreateMarshaler2(handler);

        protected override global::ABI.WinRT.Interop.EventSourceState<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.ScrollView, global::Microsoft.UI.Xaml.Controls.ScrollingZoomCompletedEventArgs>> CreateEventSourceState() =>
        new EventState(ObjectReference.ThisPtr, Index);

        [global::WinRT.WinRTExposedType]
        private sealed class EventState : global::ABI.WinRT.Interop.EventSourceState<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.ScrollView, global::Microsoft.UI.Xaml.Controls.ScrollingZoomCompletedEventArgs>>
        {
            public EventState(System.IntPtr obj, int index)
            : base(obj, index)
            {
            }

            protected override global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.ScrollView, global::Microsoft.UI.Xaml.Controls.ScrollingZoomCompletedEventArgs> GetEventInvoke()
            {
                return (global::Microsoft.UI.Xaml.Controls.ScrollView sender, global::Microsoft.UI.Xaml.Controls.ScrollingZoomCompletedEventArgs args) =>
                {
                    var targetDelegate = TargetDelegate;
                    if (targetDelegate is null)
                    {
                        return ;
                    }
                    targetDelegate.Invoke(sender, args);
                };
            }
        }
    }

    internal sealed unsafe class _EventSource_global__Microsoft_UI_Xaml_DragEventHandler : global::ABI.WinRT.Interop.EventSource<global::Microsoft.UI.Xaml.DragEventHandler>
    {


        internal _EventSource_global__Microsoft_UI_Xaml_DragEventHandler(IObjectReference obj,
        delegate* unmanaged[Stdcall]<System.IntPtr, System.IntPtr, WinRT.EventRegistrationToken*, int> addHandler,
        delegate* unmanaged[Stdcall]<System.IntPtr, WinRT.EventRegistrationToken, int> removeHandler, int index) : base(obj, addHandler, removeHandler, index)
        {

        }

        protected override ObjectReferenceValue CreateMarshaler(global::Microsoft.UI.Xaml.DragEventHandler handler) =>
        global::ABI.Microsoft.UI.Xaml.DragEventHandler.CreateMarshaler2(handler);

        protected override global::ABI.WinRT.Interop.EventSourceState<global::Microsoft.UI.Xaml.DragEventHandler> CreateEventSourceState() =>
        new EventState(ObjectReference.ThisPtr, Index);

        [global::WinRT.WinRTExposedType]
        private sealed class EventState : global::ABI.WinRT.Interop.EventSourceState<global::Microsoft.UI.Xaml.DragEventHandler>
        {
            public EventState(System.IntPtr obj, int index)
            : base(obj, index)
            {
            }

            protected override global::Microsoft.UI.Xaml.DragEventHandler GetEventInvoke()
            {
                return (object sender, global::Microsoft.UI.Xaml.DragEventArgs e) =>
                {
                    var targetDelegate = TargetDelegate;
                    if (targetDelegate is null)
                    {
                        return ;
                    }
                    targetDelegate.Invoke(sender, e);
                };
            }
        }
    }

    internal sealed unsafe class _EventSource_global__Microsoft_UI_Xaml_Controls_SemanticZoomViewChangedEventHandler : global::ABI.WinRT.Interop.EventSource<global::Microsoft.UI.Xaml.Controls.SemanticZoomViewChangedEventHandler>
    {


        internal _EventSource_global__Microsoft_UI_Xaml_Controls_SemanticZoomViewChangedEventHandler(IObjectReference obj,
        delegate* unmanaged[Stdcall]<System.IntPtr, System.IntPtr, WinRT.EventRegistrationToken*, int> addHandler,
        delegate* unmanaged[Stdcall]<System.IntPtr, WinRT.EventRegistrationToken, int> removeHandler, int index) : base(obj, addHandler, removeHandler, index)
        {

        }

        protected override ObjectReferenceValue CreateMarshaler(global::Microsoft.UI.Xaml.Controls.SemanticZoomViewChangedEventHandler handler) =>
        global::ABI.Microsoft.UI.Xaml.Controls.SemanticZoomViewChangedEventHandler.CreateMarshaler2(handler);

        protected override global::ABI.WinRT.Interop.EventSourceState<global::Microsoft.UI.Xaml.Controls.SemanticZoomViewChangedEventHandler> CreateEventSourceState() =>
        new EventState(ObjectReference.ThisPtr, Index);

        [global::WinRT.WinRTExposedType]
        private sealed class EventState : global::ABI.WinRT.Interop.EventSourceState<global::Microsoft.UI.Xaml.Controls.SemanticZoomViewChangedEventHandler>
        {
            public EventState(System.IntPtr obj, int index)
            : base(obj, index)
            {
            }

            protected override global::Microsoft.UI.Xaml.Controls.SemanticZoomViewChangedEventHandler GetEventInvoke()
            {
                return (object sender, global::Microsoft.UI.Xaml.Controls.SemanticZoomViewChangedEventArgs e) =>
                {
                    var targetDelegate = TargetDelegate;
                    if (targetDelegate is null)
                    {
                        return ;
                    }
                    targetDelegate.Invoke(sender, e);
                };
            }
        }
    }

    internal sealed unsafe class _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_UI_Xaml_Controls_Primitives_IScrollController__global__Microsoft_UI_Xaml_Controls_Primitives_ScrollControllerScrollByRequestedEventArgs_ : global::ABI.WinRT.Interop.EventSource<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.Primitives.IScrollController, global::Microsoft.UI.Xaml.Controls.Primitives.ScrollControllerScrollByRequestedEventArgs>>
    {
        private static readonly bool initialized = global::WinRT.GenericTypeInstantiations.Windows_Foundation_TypedEventHandler_2_Microsoft_UI_Xaml_Controls_Primitives_IScrollController__Microsoft_UI_Xaml_Controls_Primitives_ScrollControllerScrollByRequestedEventArgs.EnsureInitialized();

        internal _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_UI_Xaml_Controls_Primitives_IScrollController__global__Microsoft_UI_Xaml_Controls_Primitives_ScrollControllerScrollByRequestedEventArgs_(IObjectReference obj,
        delegate* unmanaged[Stdcall]<System.IntPtr, System.IntPtr, WinRT.EventRegistrationToken*, int> addHandler,
        delegate* unmanaged[Stdcall]<System.IntPtr, WinRT.EventRegistrationToken, int> removeHandler, int index) : base(obj, addHandler, removeHandler, index)
        {
            _ = initialized;
        }

        protected override ObjectReferenceValue CreateMarshaler(global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.Primitives.IScrollController, global::Microsoft.UI.Xaml.Controls.Primitives.ScrollControllerScrollByRequestedEventArgs> handler) =>
        global::ABI.Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.Primitives.IScrollController, global::Microsoft.UI.Xaml.Controls.Primitives.ScrollControllerScrollByRequestedEventArgs>.CreateMarshaler2(handler);

        protected override global::ABI.WinRT.Interop.EventSourceState<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.Primitives.IScrollController, global::Microsoft.UI.Xaml.Controls.Primitives.ScrollControllerScrollByRequestedEventArgs>> CreateEventSourceState() =>
        new EventState(ObjectReference.ThisPtr, Index);

        [global::WinRT.WinRTExposedType]
        private sealed class EventState : global::ABI.WinRT.Interop.EventSourceState<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.Primitives.IScrollController, global::Microsoft.UI.Xaml.Controls.Primitives.ScrollControllerScrollByRequestedEventArgs>>
        {
            public EventState(System.IntPtr obj, int index)
            : base(obj, index)
            {
            }

            protected override global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.Primitives.IScrollController, global::Microsoft.UI.Xaml.Controls.Primitives.ScrollControllerScrollByRequestedEventArgs> GetEventInvoke()
            {
                return (global::Microsoft.UI.Xaml.Controls.Primitives.IScrollController sender, global::Microsoft.UI.Xaml.Controls.Primitives.ScrollControllerScrollByRequestedEventArgs args) =>
                {
                    var targetDelegate = TargetDelegate;
                    if (targetDelegate is null)
                    {
                        return ;
                    }
                    targetDelegate.Invoke(sender, args);
                };
            }
        }
    }

    internal sealed unsafe class _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_UI_Xaml_Controls_TabView__global__Microsoft_UI_Xaml_Controls_TabViewTabCloseRequestedEventArgs_ : global::ABI.WinRT.Interop.EventSource<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.TabView, global::Microsoft.UI.Xaml.Controls.TabViewTabCloseRequestedEventArgs>>
    {
        private static readonly bool initialized = global::WinRT.GenericTypeInstantiations.Windows_Foundation_TypedEventHandler_2_Microsoft_UI_Xaml_Controls_TabView__Microsoft_UI_Xaml_Controls_TabViewTabCloseRequestedEventArgs.EnsureInitialized();

        internal _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_UI_Xaml_Controls_TabView__global__Microsoft_UI_Xaml_Controls_TabViewTabCloseRequestedEventArgs_(IObjectReference obj,
        delegate* unmanaged[Stdcall]<System.IntPtr, System.IntPtr, WinRT.EventRegistrationToken*, int> addHandler,
        delegate* unmanaged[Stdcall]<System.IntPtr, WinRT.EventRegistrationToken, int> removeHandler, int index) : base(obj, addHandler, removeHandler, index)
        {
            _ = initialized;
        }

        protected override ObjectReferenceValue CreateMarshaler(global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.TabView, global::Microsoft.UI.Xaml.Controls.TabViewTabCloseRequestedEventArgs> handler) =>
        global::ABI.Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.TabView, global::Microsoft.UI.Xaml.Controls.TabViewTabCloseRequestedEventArgs>.CreateMarshaler2(handler);

        protected override global::ABI.WinRT.Interop.EventSourceState<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.TabView, global::Microsoft.UI.Xaml.Controls.TabViewTabCloseRequestedEventArgs>> CreateEventSourceState() =>
        new EventState(ObjectReference.ThisPtr, Index);

        [global::WinRT.WinRTExposedType]
        private sealed class EventState : global::ABI.WinRT.Interop.EventSourceState<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.TabView, global::Microsoft.UI.Xaml.Controls.TabViewTabCloseRequestedEventArgs>>
        {
            public EventState(System.IntPtr obj, int index)
            : base(obj, index)
            {
            }

            protected override global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.TabView, global::Microsoft.UI.Xaml.Controls.TabViewTabCloseRequestedEventArgs> GetEventInvoke()
            {
                return (global::Microsoft.UI.Xaml.Controls.TabView sender, global::Microsoft.UI.Xaml.Controls.TabViewTabCloseRequestedEventArgs args) =>
                {
                    var targetDelegate = TargetDelegate;
                    if (targetDelegate is null)
                    {
                        return ;
                    }
                    targetDelegate.Invoke(sender, args);
                };
            }
        }
    }

    internal sealed unsafe class _EventSource_global__Microsoft_UI_Xaml_ExceptionRoutedEventHandler : global::ABI.WinRT.Interop.EventSource<global::Microsoft.UI.Xaml.ExceptionRoutedEventHandler>
    {


        internal _EventSource_global__Microsoft_UI_Xaml_ExceptionRoutedEventHandler(IObjectReference obj,
        delegate* unmanaged[Stdcall]<System.IntPtr, System.IntPtr, WinRT.EventRegistrationToken*, int> addHandler,
        delegate* unmanaged[Stdcall]<System.IntPtr, WinRT.EventRegistrationToken, int> removeHandler, int index) : base(obj, addHandler, removeHandler, index)
        {

        }

        protected override ObjectReferenceValue CreateMarshaler(global::Microsoft.UI.Xaml.ExceptionRoutedEventHandler handler) =>
        global::ABI.Microsoft.UI.Xaml.ExceptionRoutedEventHandler.CreateMarshaler2(handler);

        protected override global::ABI.WinRT.Interop.EventSourceState<global::Microsoft.UI.Xaml.ExceptionRoutedEventHandler> CreateEventSourceState() =>
        new EventState(ObjectReference.ThisPtr, Index);

        [global::WinRT.WinRTExposedType]
        private sealed class EventState : global::ABI.WinRT.Interop.EventSourceState<global::Microsoft.UI.Xaml.ExceptionRoutedEventHandler>
        {
            public EventState(System.IntPtr obj, int index)
            : base(obj, index)
            {
            }

            protected override global::Microsoft.UI.Xaml.ExceptionRoutedEventHandler GetEventInvoke()
            {
                return (object sender, global::Microsoft.UI.Xaml.ExceptionRoutedEventArgs e) =>
                {
                    var targetDelegate = TargetDelegate;
                    if (targetDelegate is null)
                    {
                        return ;
                    }
                    targetDelegate.Invoke(sender, e);
                };
            }
        }
    }

    internal sealed unsafe class _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_Web_WebView2_Core_CoreWebView2Environment__global__Microsoft_Web_WebView2_Core_CoreWebView2BrowserProcessExitedEventArgs_ : global::ABI.WinRT.Interop.EventSource<global::Windows.Foundation.TypedEventHandler<global::Microsoft.Web.WebView2.Core.CoreWebView2Environment, global::Microsoft.Web.WebView2.Core.CoreWebView2BrowserProcessExitedEventArgs>>
    {
        private static readonly bool initialized = global::WinRT.GenericTypeInstantiations.Windows_Foundation_TypedEventHandler_2_Microsoft_Web_WebView2_Core_CoreWebView2Environment__Microsoft_Web_WebView2_Core_CoreWebView2BrowserProcessExitedEventArgs.EnsureInitialized();

        internal _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_Web_WebView2_Core_CoreWebView2Environment__global__Microsoft_Web_WebView2_Core_CoreWebView2BrowserProcessExitedEventArgs_(IObjectReference obj,
        delegate* unmanaged[Stdcall]<System.IntPtr, System.IntPtr, WinRT.EventRegistrationToken*, int> addHandler,
        delegate* unmanaged[Stdcall]<System.IntPtr, WinRT.EventRegistrationToken, int> removeHandler, int index) : base(obj, addHandler, removeHandler, index)
        {
            _ = initialized;
        }

        protected override ObjectReferenceValue CreateMarshaler(global::Windows.Foundation.TypedEventHandler<global::Microsoft.Web.WebView2.Core.CoreWebView2Environment, global::Microsoft.Web.WebView2.Core.CoreWebView2BrowserProcessExitedEventArgs> handler) =>
        global::ABI.Windows.Foundation.TypedEventHandler<global::Microsoft.Web.WebView2.Core.CoreWebView2Environment, global::Microsoft.Web.WebView2.Core.CoreWebView2BrowserProcessExitedEventArgs>.CreateMarshaler2(handler);

        protected override global::ABI.WinRT.Interop.EventSourceState<global::Windows.Foundation.TypedEventHandler<global::Microsoft.Web.WebView2.Core.CoreWebView2Environment, global::Microsoft.Web.WebView2.Core.CoreWebView2BrowserProcessExitedEventArgs>> CreateEventSourceState() =>
        new EventState(ObjectReference.ThisPtr, Index);

        [global::WinRT.WinRTExposedType]
        private sealed class EventState : global::ABI.WinRT.Interop.EventSourceState<global::Windows.Foundation.TypedEventHandler<global::Microsoft.Web.WebView2.Core.CoreWebView2Environment, global::Microsoft.Web.WebView2.Core.CoreWebView2BrowserProcessExitedEventArgs>>
        {
            public EventState(System.IntPtr obj, int index)
            : base(obj, index)
            {
            }

            protected override global::Windows.Foundation.TypedEventHandler<global::Microsoft.Web.WebView2.Core.CoreWebView2Environment, global::Microsoft.Web.WebView2.Core.CoreWebView2BrowserProcessExitedEventArgs> GetEventInvoke()
            {
                return (global::Microsoft.Web.WebView2.Core.CoreWebView2Environment sender, global::Microsoft.Web.WebView2.Core.CoreWebView2BrowserProcessExitedEventArgs args) =>
                {
                    var targetDelegate = TargetDelegate;
                    if (targetDelegate is null)
                    {
                        return ;
                    }
                    targetDelegate.Invoke(sender, args);
                };
            }
        }
    }

    internal sealed unsafe class _EventSource_global__Microsoft_UI_Xaml_Input_RightTappedEventHandler : global::ABI.WinRT.Interop.EventSource<global::Microsoft.UI.Xaml.Input.RightTappedEventHandler>
    {


        internal _EventSource_global__Microsoft_UI_Xaml_Input_RightTappedEventHandler(IObjectReference obj,
        delegate* unmanaged[Stdcall]<System.IntPtr, System.IntPtr, WinRT.EventRegistrationToken*, int> addHandler,
        delegate* unmanaged[Stdcall]<System.IntPtr, WinRT.EventRegistrationToken, int> removeHandler, int index) : base(obj, addHandler, removeHandler, index)
        {

        }

        protected override ObjectReferenceValue CreateMarshaler(global::Microsoft.UI.Xaml.Input.RightTappedEventHandler handler) =>
        global::ABI.Microsoft.UI.Xaml.Input.RightTappedEventHandler.CreateMarshaler2(handler);

        protected override global::ABI.WinRT.Interop.EventSourceState<global::Microsoft.UI.Xaml.Input.RightTappedEventHandler> CreateEventSourceState() =>
        new EventState(ObjectReference.ThisPtr, Index);

        [global::WinRT.WinRTExposedType]
        private sealed class EventState : global::ABI.WinRT.Interop.EventSourceState<global::Microsoft.UI.Xaml.Input.RightTappedEventHandler>
        {
            public EventState(System.IntPtr obj, int index)
            : base(obj, index)
            {
            }

            protected override global::Microsoft.UI.Xaml.Input.RightTappedEventHandler GetEventInvoke()
            {
                return (object sender, global::Microsoft.UI.Xaml.Input.RightTappedRoutedEventArgs e) =>
                {
                    var targetDelegate = TargetDelegate;
                    if (targetDelegate is null)
                    {
                        return ;
                    }
                    targetDelegate.Invoke(sender, e);
                };
            }
        }
    }

    internal sealed unsafe class _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_UI_Input_InputNonClientPointerSource__global__Microsoft_UI_Input_EnteredMoveSizeEventArgs_ : global::ABI.WinRT.Interop.EventSource<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Input.InputNonClientPointerSource, global::Microsoft.UI.Input.EnteredMoveSizeEventArgs>>
    {
        private static readonly bool initialized = global::WinRT.GenericTypeInstantiations.Windows_Foundation_TypedEventHandler_2_Microsoft_UI_Input_InputNonClientPointerSource__Microsoft_UI_Input_EnteredMoveSizeEventArgs.EnsureInitialized();

        internal _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_UI_Input_InputNonClientPointerSource__global__Microsoft_UI_Input_EnteredMoveSizeEventArgs_(IObjectReference obj,
        delegate* unmanaged[Stdcall]<System.IntPtr, System.IntPtr, WinRT.EventRegistrationToken*, int> addHandler,
        delegate* unmanaged[Stdcall]<System.IntPtr, WinRT.EventRegistrationToken, int> removeHandler, int index) : base(obj, addHandler, removeHandler, index)
        {
            _ = initialized;
        }

        protected override ObjectReferenceValue CreateMarshaler(global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Input.InputNonClientPointerSource, global::Microsoft.UI.Input.EnteredMoveSizeEventArgs> handler) =>
        global::ABI.Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Input.InputNonClientPointerSource, global::Microsoft.UI.Input.EnteredMoveSizeEventArgs>.CreateMarshaler2(handler);

        protected override global::ABI.WinRT.Interop.EventSourceState<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Input.InputNonClientPointerSource, global::Microsoft.UI.Input.EnteredMoveSizeEventArgs>> CreateEventSourceState() =>
        new EventState(ObjectReference.ThisPtr, Index);

        [global::WinRT.WinRTExposedType]
        private sealed class EventState : global::ABI.WinRT.Interop.EventSourceState<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Input.InputNonClientPointerSource, global::Microsoft.UI.Input.EnteredMoveSizeEventArgs>>
        {
            public EventState(System.IntPtr obj, int index)
            : base(obj, index)
            {
            }

            protected override global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Input.InputNonClientPointerSource, global::Microsoft.UI.Input.EnteredMoveSizeEventArgs> GetEventInvoke()
            {
                return (global::Microsoft.UI.Input.InputNonClientPointerSource sender, global::Microsoft.UI.Input.EnteredMoveSizeEventArgs args) =>
                {
                    var targetDelegate = TargetDelegate;
                    if (targetDelegate is null)
                    {
                        return ;
                    }
                    targetDelegate.Invoke(sender, args);
                };
            }
        }
    }

    internal sealed unsafe class _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_UI_Xaml_Hosting_DesktopWindowXamlSource__global__Microsoft_UI_Xaml_Hosting_DesktopWindowXamlSourceTakeFocusRequestedEventArgs_ : global::ABI.WinRT.Interop.EventSource<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Hosting.DesktopWindowXamlSource, global::Microsoft.UI.Xaml.Hosting.DesktopWindowXamlSourceTakeFocusRequestedEventArgs>>
    {
        private static readonly bool initialized = global::WinRT.GenericTypeInstantiations.Windows_Foundation_TypedEventHandler_2_Microsoft_UI_Xaml_Hosting_DesktopWindowXamlSource__Microsoft_UI_Xaml_Hosting_DesktopWindowXamlSourceTakeFocusRequestedEventArgs.EnsureInitialized();

        internal _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_UI_Xaml_Hosting_DesktopWindowXamlSource__global__Microsoft_UI_Xaml_Hosting_DesktopWindowXamlSourceTakeFocusRequestedEventArgs_(IObjectReference obj,
        delegate* unmanaged[Stdcall]<System.IntPtr, System.IntPtr, WinRT.EventRegistrationToken*, int> addHandler,
        delegate* unmanaged[Stdcall]<System.IntPtr, WinRT.EventRegistrationToken, int> removeHandler, int index) : base(obj, addHandler, removeHandler, index)
        {
            _ = initialized;
        }

        protected override ObjectReferenceValue CreateMarshaler(global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Hosting.DesktopWindowXamlSource, global::Microsoft.UI.Xaml.Hosting.DesktopWindowXamlSourceTakeFocusRequestedEventArgs> handler) =>
        global::ABI.Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Hosting.DesktopWindowXamlSource, global::Microsoft.UI.Xaml.Hosting.DesktopWindowXamlSourceTakeFocusRequestedEventArgs>.CreateMarshaler2(handler);

        protected override global::ABI.WinRT.Interop.EventSourceState<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Hosting.DesktopWindowXamlSource, global::Microsoft.UI.Xaml.Hosting.DesktopWindowXamlSourceTakeFocusRequestedEventArgs>> CreateEventSourceState() =>
        new EventState(ObjectReference.ThisPtr, Index);

        [global::WinRT.WinRTExposedType]
        private sealed class EventState : global::ABI.WinRT.Interop.EventSourceState<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Hosting.DesktopWindowXamlSource, global::Microsoft.UI.Xaml.Hosting.DesktopWindowXamlSourceTakeFocusRequestedEventArgs>>
        {
            public EventState(System.IntPtr obj, int index)
            : base(obj, index)
            {
            }

            protected override global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Hosting.DesktopWindowXamlSource, global::Microsoft.UI.Xaml.Hosting.DesktopWindowXamlSourceTakeFocusRequestedEventArgs> GetEventInvoke()
            {
                return (global::Microsoft.UI.Xaml.Hosting.DesktopWindowXamlSource sender, global::Microsoft.UI.Xaml.Hosting.DesktopWindowXamlSourceTakeFocusRequestedEventArgs args) =>
                {
                    var targetDelegate = TargetDelegate;
                    if (targetDelegate is null)
                    {
                        return ;
                    }
                    targetDelegate.Invoke(sender, args);
                };
            }
        }
    }

    internal sealed unsafe class _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_UI_Composition_Core_CompositorController__object_ : global::ABI.WinRT.Interop.EventSource<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Composition.Core.CompositorController, object>>
    {
        private static readonly bool initialized = global::WinRT.GenericTypeInstantiations.Windows_Foundation_TypedEventHandler_2_Microsoft_UI_Composition_Core_CompositorController__object.EnsureInitialized();

        internal _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_UI_Composition_Core_CompositorController__object_(IObjectReference obj,
        delegate* unmanaged[Stdcall]<System.IntPtr, System.IntPtr, WinRT.EventRegistrationToken*, int> addHandler,
        delegate* unmanaged[Stdcall]<System.IntPtr, WinRT.EventRegistrationToken, int> removeHandler, int index) : base(obj, addHandler, removeHandler, index)
        {
            _ = initialized;
        }

        protected override ObjectReferenceValue CreateMarshaler(global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Composition.Core.CompositorController, object> handler) =>
        global::ABI.Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Composition.Core.CompositorController, object>.CreateMarshaler2(handler);

        protected override global::ABI.WinRT.Interop.EventSourceState<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Composition.Core.CompositorController, object>> CreateEventSourceState() =>
        new EventState(ObjectReference.ThisPtr, Index);

        [global::WinRT.WinRTExposedType]
        private sealed class EventState : global::ABI.WinRT.Interop.EventSourceState<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Composition.Core.CompositorController, object>>
        {
            public EventState(System.IntPtr obj, int index)
            : base(obj, index)
            {
            }

            protected override global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Composition.Core.CompositorController, object> GetEventInvoke()
            {
                return (global::Microsoft.UI.Composition.Core.CompositorController sender, object args) =>
                {
                    var targetDelegate = TargetDelegate;
                    if (targetDelegate is null)
                    {
                        return ;
                    }
                    targetDelegate.Invoke(sender, args);
                };
            }
        }
    }

    internal sealed unsafe class _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_Web_WebView2_Core_CoreWebView2__global__Microsoft_Web_WebView2_Core_CoreWebView2ContentLoadingEventArgs_ : global::ABI.WinRT.Interop.EventSource<global::Windows.Foundation.TypedEventHandler<global::Microsoft.Web.WebView2.Core.CoreWebView2, global::Microsoft.Web.WebView2.Core.CoreWebView2ContentLoadingEventArgs>>
    {
        private static readonly bool initialized = global::WinRT.GenericTypeInstantiations.Windows_Foundation_TypedEventHandler_2_Microsoft_Web_WebView2_Core_CoreWebView2__Microsoft_Web_WebView2_Core_CoreWebView2ContentLoadingEventArgs.EnsureInitialized();

        internal _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_Web_WebView2_Core_CoreWebView2__global__Microsoft_Web_WebView2_Core_CoreWebView2ContentLoadingEventArgs_(IObjectReference obj,
        delegate* unmanaged[Stdcall]<System.IntPtr, System.IntPtr, WinRT.EventRegistrationToken*, int> addHandler,
        delegate* unmanaged[Stdcall]<System.IntPtr, WinRT.EventRegistrationToken, int> removeHandler, int index) : base(obj, addHandler, removeHandler, index)
        {
            _ = initialized;
        }

        protected override ObjectReferenceValue CreateMarshaler(global::Windows.Foundation.TypedEventHandler<global::Microsoft.Web.WebView2.Core.CoreWebView2, global::Microsoft.Web.WebView2.Core.CoreWebView2ContentLoadingEventArgs> handler) =>
        global::ABI.Windows.Foundation.TypedEventHandler<global::Microsoft.Web.WebView2.Core.CoreWebView2, global::Microsoft.Web.WebView2.Core.CoreWebView2ContentLoadingEventArgs>.CreateMarshaler2(handler);

        protected override global::ABI.WinRT.Interop.EventSourceState<global::Windows.Foundation.TypedEventHandler<global::Microsoft.Web.WebView2.Core.CoreWebView2, global::Microsoft.Web.WebView2.Core.CoreWebView2ContentLoadingEventArgs>> CreateEventSourceState() =>
        new EventState(ObjectReference.ThisPtr, Index);

        [global::WinRT.WinRTExposedType]
        private sealed class EventState : global::ABI.WinRT.Interop.EventSourceState<global::Windows.Foundation.TypedEventHandler<global::Microsoft.Web.WebView2.Core.CoreWebView2, global::Microsoft.Web.WebView2.Core.CoreWebView2ContentLoadingEventArgs>>
        {
            public EventState(System.IntPtr obj, int index)
            : base(obj, index)
            {
            }

            protected override global::Windows.Foundation.TypedEventHandler<global::Microsoft.Web.WebView2.Core.CoreWebView2, global::Microsoft.Web.WebView2.Core.CoreWebView2ContentLoadingEventArgs> GetEventInvoke()
            {
                return (global::Microsoft.Web.WebView2.Core.CoreWebView2 sender, global::Microsoft.Web.WebView2.Core.CoreWebView2ContentLoadingEventArgs args) =>
                {
                    var targetDelegate = TargetDelegate;
                    if (targetDelegate is null)
                    {
                        return ;
                    }
                    targetDelegate.Invoke(sender, args);
                };
            }
        }
    }

    internal sealed unsafe class _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_UI_Content_ContentSite__global__Microsoft_UI_Content_ContentSiteRequestedStateChangedEventArgs_ : global::ABI.WinRT.Interop.EventSource<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Content.ContentSite, global::Microsoft.UI.Content.ContentSiteRequestedStateChangedEventArgs>>
    {
        private static readonly bool initialized = global::WinRT.GenericTypeInstantiations.Windows_Foundation_TypedEventHandler_2_Microsoft_UI_Content_ContentSite__Microsoft_UI_Content_ContentSiteRequestedStateChangedEventArgs.EnsureInitialized();

        internal _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_UI_Content_ContentSite__global__Microsoft_UI_Content_ContentSiteRequestedStateChangedEventArgs_(IObjectReference obj,
        delegate* unmanaged[Stdcall]<System.IntPtr, System.IntPtr, WinRT.EventRegistrationToken*, int> addHandler,
        delegate* unmanaged[Stdcall]<System.IntPtr, WinRT.EventRegistrationToken, int> removeHandler, int index) : base(obj, addHandler, removeHandler, index)
        {
            _ = initialized;
        }

        protected override ObjectReferenceValue CreateMarshaler(global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Content.ContentSite, global::Microsoft.UI.Content.ContentSiteRequestedStateChangedEventArgs> handler) =>
        global::ABI.Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Content.ContentSite, global::Microsoft.UI.Content.ContentSiteRequestedStateChangedEventArgs>.CreateMarshaler2(handler);

        protected override global::ABI.WinRT.Interop.EventSourceState<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Content.ContentSite, global::Microsoft.UI.Content.ContentSiteRequestedStateChangedEventArgs>> CreateEventSourceState() =>
        new EventState(ObjectReference.ThisPtr, Index);

        [global::WinRT.WinRTExposedType]
        private sealed class EventState : global::ABI.WinRT.Interop.EventSourceState<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Content.ContentSite, global::Microsoft.UI.Content.ContentSiteRequestedStateChangedEventArgs>>
        {
            public EventState(System.IntPtr obj, int index)
            : base(obj, index)
            {
            }

            protected override global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Content.ContentSite, global::Microsoft.UI.Content.ContentSiteRequestedStateChangedEventArgs> GetEventInvoke()
            {
                return (global::Microsoft.UI.Content.ContentSite sender, global::Microsoft.UI.Content.ContentSiteRequestedStateChangedEventArgs args) =>
                {
                    var targetDelegate = TargetDelegate;
                    if (targetDelegate is null)
                    {
                        return ;
                    }
                    targetDelegate.Invoke(sender, args);
                };
            }
        }
    }

    internal sealed unsafe class _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_Web_WebView2_Core_CoreWebView2Controller__object_ : global::ABI.WinRT.Interop.EventSource<global::Windows.Foundation.TypedEventHandler<global::Microsoft.Web.WebView2.Core.CoreWebView2Controller, object>>
    {
        private static readonly bool initialized = global::WinRT.GenericTypeInstantiations.Windows_Foundation_TypedEventHandler_2_Microsoft_Web_WebView2_Core_CoreWebView2Controller__object.EnsureInitialized();

        internal _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_Web_WebView2_Core_CoreWebView2Controller__object_(IObjectReference obj,
        delegate* unmanaged[Stdcall]<System.IntPtr, System.IntPtr, WinRT.EventRegistrationToken*, int> addHandler,
        delegate* unmanaged[Stdcall]<System.IntPtr, WinRT.EventRegistrationToken, int> removeHandler, int index) : base(obj, addHandler, removeHandler, index)
        {
            _ = initialized;
        }

        protected override ObjectReferenceValue CreateMarshaler(global::Windows.Foundation.TypedEventHandler<global::Microsoft.Web.WebView2.Core.CoreWebView2Controller, object> handler) =>
        global::ABI.Windows.Foundation.TypedEventHandler<global::Microsoft.Web.WebView2.Core.CoreWebView2Controller, object>.CreateMarshaler2(handler);

        protected override global::ABI.WinRT.Interop.EventSourceState<global::Windows.Foundation.TypedEventHandler<global::Microsoft.Web.WebView2.Core.CoreWebView2Controller, object>> CreateEventSourceState() =>
        new EventState(ObjectReference.ThisPtr, Index);

        [global::WinRT.WinRTExposedType]
        private sealed class EventState : global::ABI.WinRT.Interop.EventSourceState<global::Windows.Foundation.TypedEventHandler<global::Microsoft.Web.WebView2.Core.CoreWebView2Controller, object>>
        {
            public EventState(System.IntPtr obj, int index)
            : base(obj, index)
            {
            }

            protected override global::Windows.Foundation.TypedEventHandler<global::Microsoft.Web.WebView2.Core.CoreWebView2Controller, object> GetEventInvoke()
            {
                return (global::Microsoft.Web.WebView2.Core.CoreWebView2Controller sender, object args) =>
                {
                    var targetDelegate = TargetDelegate;
                    if (targetDelegate is null)
                    {
                        return ;
                    }
                    targetDelegate.Invoke(sender, args);
                };
            }
        }
    }

    internal sealed unsafe class _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_UI_Content_ContentIslandEnvironment__object_ : global::ABI.WinRT.Interop.EventSource<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Content.ContentIslandEnvironment, object>>
    {
        private static readonly bool initialized = global::WinRT.GenericTypeInstantiations.Windows_Foundation_TypedEventHandler_2_Microsoft_UI_Content_ContentIslandEnvironment__object.EnsureInitialized();

        internal _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_UI_Content_ContentIslandEnvironment__object_(IObjectReference obj,
        delegate* unmanaged[Stdcall]<System.IntPtr, System.IntPtr, WinRT.EventRegistrationToken*, int> addHandler,
        delegate* unmanaged[Stdcall]<System.IntPtr, WinRT.EventRegistrationToken, int> removeHandler, int index) : base(obj, addHandler, removeHandler, index)
        {
            _ = initialized;
        }

        protected override ObjectReferenceValue CreateMarshaler(global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Content.ContentIslandEnvironment, object> handler) =>
        global::ABI.Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Content.ContentIslandEnvironment, object>.CreateMarshaler2(handler);

        protected override global::ABI.WinRT.Interop.EventSourceState<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Content.ContentIslandEnvironment, object>> CreateEventSourceState() =>
        new EventState(ObjectReference.ThisPtr, Index);

        [global::WinRT.WinRTExposedType]
        private sealed class EventState : global::ABI.WinRT.Interop.EventSourceState<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Content.ContentIslandEnvironment, object>>
        {
            public EventState(System.IntPtr obj, int index)
            : base(obj, index)
            {
            }

            protected override global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Content.ContentIslandEnvironment, object> GetEventInvoke()
            {
                return (global::Microsoft.UI.Content.ContentIslandEnvironment sender, object args) =>
                {
                    var targetDelegate = TargetDelegate;
                    if (targetDelegate is null)
                    {
                        return ;
                    }
                    targetDelegate.Invoke(sender, args);
                };
            }
        }
    }

    internal sealed unsafe class _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_UI_Content_IContentSiteBridgeEndpointConnectionPrivate__global__Microsoft_UI_Content_EndpointConnectionEventArgs_ : global::ABI.WinRT.Interop.EventSource<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Content.IContentSiteBridgeEndpointConnectionPrivate, global::Microsoft.UI.Content.EndpointConnectionEventArgs>>
    {
        private static readonly bool initialized = global::WinRT.GenericTypeInstantiations.Windows_Foundation_TypedEventHandler_2_Microsoft_UI_Content_IContentSiteBridgeEndpointConnectionPrivate__Microsoft_UI_Content_EndpointConnectionEventArgs.EnsureInitialized();

        internal _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_UI_Content_IContentSiteBridgeEndpointConnectionPrivate__global__Microsoft_UI_Content_EndpointConnectionEventArgs_(IObjectReference obj,
        delegate* unmanaged[Stdcall]<System.IntPtr, System.IntPtr, WinRT.EventRegistrationToken*, int> addHandler,
        delegate* unmanaged[Stdcall]<System.IntPtr, WinRT.EventRegistrationToken, int> removeHandler, int index) : base(obj, addHandler, removeHandler, index)
        {
            _ = initialized;
        }

        protected override ObjectReferenceValue CreateMarshaler(global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Content.IContentSiteBridgeEndpointConnectionPrivate, global::Microsoft.UI.Content.EndpointConnectionEventArgs> handler) =>
        global::ABI.Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Content.IContentSiteBridgeEndpointConnectionPrivate, global::Microsoft.UI.Content.EndpointConnectionEventArgs>.CreateMarshaler2(handler);

        protected override global::ABI.WinRT.Interop.EventSourceState<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Content.IContentSiteBridgeEndpointConnectionPrivate, global::Microsoft.UI.Content.EndpointConnectionEventArgs>> CreateEventSourceState() =>
        new EventState(ObjectReference.ThisPtr, Index);

        [global::WinRT.WinRTExposedType]
        private sealed class EventState : global::ABI.WinRT.Interop.EventSourceState<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Content.IContentSiteBridgeEndpointConnectionPrivate, global::Microsoft.UI.Content.EndpointConnectionEventArgs>>
        {
            public EventState(System.IntPtr obj, int index)
            : base(obj, index)
            {
            }

            protected override global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Content.IContentSiteBridgeEndpointConnectionPrivate, global::Microsoft.UI.Content.EndpointConnectionEventArgs> GetEventInvoke()
            {
                return (global::Microsoft.UI.Content.IContentSiteBridgeEndpointConnectionPrivate sender, global::Microsoft.UI.Content.EndpointConnectionEventArgs args) =>
                {
                    var targetDelegate = TargetDelegate;
                    if (targetDelegate is null)
                    {
                        return ;
                    }
                    targetDelegate.Invoke(sender, args);
                };
            }
        }
    }

    internal sealed unsafe class _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_UI_Composition_SystemBackdrops_ISystemBackdropControllerWithTargets__object_ : global::ABI.WinRT.Interop.EventSource<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Composition.SystemBackdrops.ISystemBackdropControllerWithTargets, object>>
    {
        private static readonly bool initialized = global::WinRT.GenericTypeInstantiations.Windows_Foundation_TypedEventHandler_2_Microsoft_UI_Composition_SystemBackdrops_ISystemBackdropControllerWithTargets__object.EnsureInitialized();

        internal _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_UI_Composition_SystemBackdrops_ISystemBackdropControllerWithTargets__object_(IObjectReference obj,
        delegate* unmanaged[Stdcall]<System.IntPtr, System.IntPtr, WinRT.EventRegistrationToken*, int> addHandler,
        delegate* unmanaged[Stdcall]<System.IntPtr, WinRT.EventRegistrationToken, int> removeHandler, int index) : base(obj, addHandler, removeHandler, index)
        {
            _ = initialized;
        }

        protected override ObjectReferenceValue CreateMarshaler(global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Composition.SystemBackdrops.ISystemBackdropControllerWithTargets, object> handler) =>
        global::ABI.Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Composition.SystemBackdrops.ISystemBackdropControllerWithTargets, object>.CreateMarshaler2(handler);

        protected override global::ABI.WinRT.Interop.EventSourceState<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Composition.SystemBackdrops.ISystemBackdropControllerWithTargets, object>> CreateEventSourceState() =>
        new EventState(ObjectReference.ThisPtr, Index);

        [global::WinRT.WinRTExposedType]
        private sealed class EventState : global::ABI.WinRT.Interop.EventSourceState<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Composition.SystemBackdrops.ISystemBackdropControllerWithTargets, object>>
        {
            public EventState(System.IntPtr obj, int index)
            : base(obj, index)
            {
            }

            protected override global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Composition.SystemBackdrops.ISystemBackdropControllerWithTargets, object> GetEventInvoke()
            {
                return (global::Microsoft.UI.Composition.SystemBackdrops.ISystemBackdropControllerWithTargets sender, object args) =>
                {
                    var targetDelegate = TargetDelegate;
                    if (targetDelegate is null)
                    {
                        return ;
                    }
                    targetDelegate.Invoke(sender, args);
                };
            }
        }
    }

    internal sealed unsafe class _EventSource_global__Microsoft_UI_Xaml_Navigation_NavigatingCancelEventHandler : global::ABI.WinRT.Interop.EventSource<global::Microsoft.UI.Xaml.Navigation.NavigatingCancelEventHandler>
    {


        internal _EventSource_global__Microsoft_UI_Xaml_Navigation_NavigatingCancelEventHandler(IObjectReference obj,
        delegate* unmanaged[Stdcall]<System.IntPtr, System.IntPtr, WinRT.EventRegistrationToken*, int> addHandler,
        delegate* unmanaged[Stdcall]<System.IntPtr, WinRT.EventRegistrationToken, int> removeHandler, int index) : base(obj, addHandler, removeHandler, index)
        {

        }

        protected override ObjectReferenceValue CreateMarshaler(global::Microsoft.UI.Xaml.Navigation.NavigatingCancelEventHandler handler) =>
        global::ABI.Microsoft.UI.Xaml.Navigation.NavigatingCancelEventHandler.CreateMarshaler2(handler);

        protected override global::ABI.WinRT.Interop.EventSourceState<global::Microsoft.UI.Xaml.Navigation.NavigatingCancelEventHandler> CreateEventSourceState() =>
        new EventState(ObjectReference.ThisPtr, Index);

        [global::WinRT.WinRTExposedType]
        private sealed class EventState : global::ABI.WinRT.Interop.EventSourceState<global::Microsoft.UI.Xaml.Navigation.NavigatingCancelEventHandler>
        {
            public EventState(System.IntPtr obj, int index)
            : base(obj, index)
            {
            }

            protected override global::Microsoft.UI.Xaml.Navigation.NavigatingCancelEventHandler GetEventInvoke()
            {
                return (object sender, global::Microsoft.UI.Xaml.Navigation.NavigatingCancelEventArgs e) =>
                {
                    var targetDelegate = TargetDelegate;
                    if (targetDelegate is null)
                    {
                        return ;
                    }
                    targetDelegate.Invoke(sender, e);
                };
            }
        }
    }

    internal sealed unsafe class _EventSource_global__System_ComponentModel_PropertyChangedEventHandler : global::ABI.WinRT.Interop.EventSource<global::System.ComponentModel.PropertyChangedEventHandler>
    {


        internal _EventSource_global__System_ComponentModel_PropertyChangedEventHandler(IObjectReference obj,
        delegate* unmanaged[Stdcall]<System.IntPtr, System.IntPtr, WinRT.EventRegistrationToken*, int> addHandler,
        delegate* unmanaged[Stdcall]<System.IntPtr, WinRT.EventRegistrationToken, int> removeHandler, int index) : base(obj, addHandler, removeHandler, index)
        {

        }

        protected override ObjectReferenceValue CreateMarshaler(global::System.ComponentModel.PropertyChangedEventHandler handler) =>
        global::ABI.System.ComponentModel.PropertyChangedEventHandler.CreateMarshaler2(handler);

        protected override global::ABI.WinRT.Interop.EventSourceState<global::System.ComponentModel.PropertyChangedEventHandler> CreateEventSourceState() =>
        new EventState(ObjectReference.ThisPtr, Index);

        [global::WinRT.WinRTExposedType]
        private sealed class EventState : global::ABI.WinRT.Interop.EventSourceState<global::System.ComponentModel.PropertyChangedEventHandler>
        {
            public EventState(System.IntPtr obj, int index)
            : base(obj, index)
            {
            }

            protected override global::System.ComponentModel.PropertyChangedEventHandler GetEventInvoke()
            {
                return (object sender, global::System.ComponentModel.PropertyChangedEventArgs e) =>
                {
                    var targetDelegate = TargetDelegate;
                    if (targetDelegate is null)
                    {
                        return ;
                    }
                    targetDelegate.Invoke(sender, e);
                };
            }
        }
    }

    internal sealed unsafe class _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_UI_Windowing_DisplayAreaWatcher__global__Microsoft_UI_Windowing_DisplayArea_ : global::ABI.WinRT.Interop.EventSource<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Windowing.DisplayAreaWatcher, global::Microsoft.UI.Windowing.DisplayArea>>
    {
        private static readonly bool initialized = global::WinRT.GenericTypeInstantiations.Windows_Foundation_TypedEventHandler_2_Microsoft_UI_Windowing_DisplayAreaWatcher__Microsoft_UI_Windowing_DisplayArea.EnsureInitialized();

        internal _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_UI_Windowing_DisplayAreaWatcher__global__Microsoft_UI_Windowing_DisplayArea_(IObjectReference obj,
        delegate* unmanaged[Stdcall]<System.IntPtr, System.IntPtr, WinRT.EventRegistrationToken*, int> addHandler,
        delegate* unmanaged[Stdcall]<System.IntPtr, WinRT.EventRegistrationToken, int> removeHandler, int index) : base(obj, addHandler, removeHandler, index)
        {
            _ = initialized;
        }

        protected override ObjectReferenceValue CreateMarshaler(global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Windowing.DisplayAreaWatcher, global::Microsoft.UI.Windowing.DisplayArea> handler) =>
        global::ABI.Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Windowing.DisplayAreaWatcher, global::Microsoft.UI.Windowing.DisplayArea>.CreateMarshaler2(handler);

        protected override global::ABI.WinRT.Interop.EventSourceState<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Windowing.DisplayAreaWatcher, global::Microsoft.UI.Windowing.DisplayArea>> CreateEventSourceState() =>
        new EventState(ObjectReference.ThisPtr, Index);

        [global::WinRT.WinRTExposedType]
        private sealed class EventState : global::ABI.WinRT.Interop.EventSourceState<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Windowing.DisplayAreaWatcher, global::Microsoft.UI.Windowing.DisplayArea>>
        {
            public EventState(System.IntPtr obj, int index)
            : base(obj, index)
            {
            }

            protected override global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Windowing.DisplayAreaWatcher, global::Microsoft.UI.Windowing.DisplayArea> GetEventInvoke()
            {
                return (global::Microsoft.UI.Windowing.DisplayAreaWatcher sender, global::Microsoft.UI.Windowing.DisplayArea args) =>
                {
                    var targetDelegate = TargetDelegate;
                    if (targetDelegate is null)
                    {
                        return ;
                    }
                    targetDelegate.Invoke(sender, args);
                };
            }
        }
    }

    internal sealed unsafe class _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_UI_Xaml_Controls_TabView__global__Microsoft_UI_Xaml_Controls_TabViewExternalTornOutTabsDroppingEventArgs_ : global::ABI.WinRT.Interop.EventSource<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.TabView, global::Microsoft.UI.Xaml.Controls.TabViewExternalTornOutTabsDroppingEventArgs>>
    {
        private static readonly bool initialized = global::WinRT.GenericTypeInstantiations.Windows_Foundation_TypedEventHandler_2_Microsoft_UI_Xaml_Controls_TabView__Microsoft_UI_Xaml_Controls_TabViewExternalTornOutTabsDroppingEventArgs.EnsureInitialized();

        internal _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_UI_Xaml_Controls_TabView__global__Microsoft_UI_Xaml_Controls_TabViewExternalTornOutTabsDroppingEventArgs_(IObjectReference obj,
        delegate* unmanaged[Stdcall]<System.IntPtr, System.IntPtr, WinRT.EventRegistrationToken*, int> addHandler,
        delegate* unmanaged[Stdcall]<System.IntPtr, WinRT.EventRegistrationToken, int> removeHandler, int index) : base(obj, addHandler, removeHandler, index)
        {
            _ = initialized;
        }

        protected override ObjectReferenceValue CreateMarshaler(global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.TabView, global::Microsoft.UI.Xaml.Controls.TabViewExternalTornOutTabsDroppingEventArgs> handler) =>
        global::ABI.Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.TabView, global::Microsoft.UI.Xaml.Controls.TabViewExternalTornOutTabsDroppingEventArgs>.CreateMarshaler2(handler);

        protected override global::ABI.WinRT.Interop.EventSourceState<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.TabView, global::Microsoft.UI.Xaml.Controls.TabViewExternalTornOutTabsDroppingEventArgs>> CreateEventSourceState() =>
        new EventState(ObjectReference.ThisPtr, Index);

        [global::WinRT.WinRTExposedType]
        private sealed class EventState : global::ABI.WinRT.Interop.EventSourceState<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.TabView, global::Microsoft.UI.Xaml.Controls.TabViewExternalTornOutTabsDroppingEventArgs>>
        {
            public EventState(System.IntPtr obj, int index)
            : base(obj, index)
            {
            }

            protected override global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.TabView, global::Microsoft.UI.Xaml.Controls.TabViewExternalTornOutTabsDroppingEventArgs> GetEventInvoke()
            {
                return (global::Microsoft.UI.Xaml.Controls.TabView sender, global::Microsoft.UI.Xaml.Controls.TabViewExternalTornOutTabsDroppingEventArgs args) =>
                {
                    var targetDelegate = TargetDelegate;
                    if (targetDelegate is null)
                    {
                        return ;
                    }
                    targetDelegate.Invoke(sender, args);
                };
            }
        }
    }

    internal sealed unsafe class _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_UI_Input_InputNonClientPointerSource__global__Microsoft_UI_Input_NonClientRegionsChangedEventArgs_ : global::ABI.WinRT.Interop.EventSource<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Input.InputNonClientPointerSource, global::Microsoft.UI.Input.NonClientRegionsChangedEventArgs>>
    {
        private static readonly bool initialized = global::WinRT.GenericTypeInstantiations.Windows_Foundation_TypedEventHandler_2_Microsoft_UI_Input_InputNonClientPointerSource__Microsoft_UI_Input_NonClientRegionsChangedEventArgs.EnsureInitialized();

        internal _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_UI_Input_InputNonClientPointerSource__global__Microsoft_UI_Input_NonClientRegionsChangedEventArgs_(IObjectReference obj,
        delegate* unmanaged[Stdcall]<System.IntPtr, System.IntPtr, WinRT.EventRegistrationToken*, int> addHandler,
        delegate* unmanaged[Stdcall]<System.IntPtr, WinRT.EventRegistrationToken, int> removeHandler, int index) : base(obj, addHandler, removeHandler, index)
        {
            _ = initialized;
        }

        protected override ObjectReferenceValue CreateMarshaler(global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Input.InputNonClientPointerSource, global::Microsoft.UI.Input.NonClientRegionsChangedEventArgs> handler) =>
        global::ABI.Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Input.InputNonClientPointerSource, global::Microsoft.UI.Input.NonClientRegionsChangedEventArgs>.CreateMarshaler2(handler);

        protected override global::ABI.WinRT.Interop.EventSourceState<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Input.InputNonClientPointerSource, global::Microsoft.UI.Input.NonClientRegionsChangedEventArgs>> CreateEventSourceState() =>
        new EventState(ObjectReference.ThisPtr, Index);

        [global::WinRT.WinRTExposedType]
        private sealed class EventState : global::ABI.WinRT.Interop.EventSourceState<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Input.InputNonClientPointerSource, global::Microsoft.UI.Input.NonClientRegionsChangedEventArgs>>
        {
            public EventState(System.IntPtr obj, int index)
            : base(obj, index)
            {
            }

            protected override global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Input.InputNonClientPointerSource, global::Microsoft.UI.Input.NonClientRegionsChangedEventArgs> GetEventInvoke()
            {
                return (global::Microsoft.UI.Input.InputNonClientPointerSource sender, global::Microsoft.UI.Input.NonClientRegionsChangedEventArgs args) =>
                {
                    var targetDelegate = TargetDelegate;
                    if (targetDelegate is null)
                    {
                        return ;
                    }
                    targetDelegate.Invoke(sender, args);
                };
            }
        }
    }

    internal sealed unsafe class _EventSource_global__System_Collections_Specialized_NotifyCollectionChangedEventHandler : global::ABI.WinRT.Interop.EventSource<global::System.Collections.Specialized.NotifyCollectionChangedEventHandler>
    {


        internal _EventSource_global__System_Collections_Specialized_NotifyCollectionChangedEventHandler(IObjectReference obj,
        delegate* unmanaged[Stdcall]<System.IntPtr, System.IntPtr, WinRT.EventRegistrationToken*, int> addHandler,
        delegate* unmanaged[Stdcall]<System.IntPtr, WinRT.EventRegistrationToken, int> removeHandler, int index) : base(obj, addHandler, removeHandler, index)
        {

        }

        protected override ObjectReferenceValue CreateMarshaler(global::System.Collections.Specialized.NotifyCollectionChangedEventHandler handler) =>
        global::ABI.System.Collections.Specialized.NotifyCollectionChangedEventHandler.CreateMarshaler2(handler);

        protected override global::ABI.WinRT.Interop.EventSourceState<global::System.Collections.Specialized.NotifyCollectionChangedEventHandler> CreateEventSourceState() =>
        new EventState(ObjectReference.ThisPtr, Index);

        [global::WinRT.WinRTExposedType]
        private sealed class EventState : global::ABI.WinRT.Interop.EventSourceState<global::System.Collections.Specialized.NotifyCollectionChangedEventHandler>
        {
            public EventState(System.IntPtr obj, int index)
            : base(obj, index)
            {
            }

            protected override global::System.Collections.Specialized.NotifyCollectionChangedEventHandler GetEventInvoke()
            {
                return (object sender, global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e) =>
                {
                    var targetDelegate = TargetDelegate;
                    if (targetDelegate is null)
                    {
                        return ;
                    }
                    targetDelegate.Invoke(sender, e);
                };
            }
        }
    }

    internal sealed unsafe class _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_Web_WebView2_Core_CoreWebView2CompositionController__object_ : global::ABI.WinRT.Interop.EventSource<global::Windows.Foundation.TypedEventHandler<global::Microsoft.Web.WebView2.Core.CoreWebView2CompositionController, object>>
    {
        private static readonly bool initialized = global::WinRT.GenericTypeInstantiations.Windows_Foundation_TypedEventHandler_2_Microsoft_Web_WebView2_Core_CoreWebView2CompositionController__object.EnsureInitialized();

        internal _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_Web_WebView2_Core_CoreWebView2CompositionController__object_(IObjectReference obj,
        delegate* unmanaged[Stdcall]<System.IntPtr, System.IntPtr, WinRT.EventRegistrationToken*, int> addHandler,
        delegate* unmanaged[Stdcall]<System.IntPtr, WinRT.EventRegistrationToken, int> removeHandler, int index) : base(obj, addHandler, removeHandler, index)
        {
            _ = initialized;
        }

        protected override ObjectReferenceValue CreateMarshaler(global::Windows.Foundation.TypedEventHandler<global::Microsoft.Web.WebView2.Core.CoreWebView2CompositionController, object> handler) =>
        global::ABI.Windows.Foundation.TypedEventHandler<global::Microsoft.Web.WebView2.Core.CoreWebView2CompositionController, object>.CreateMarshaler2(handler);

        protected override global::ABI.WinRT.Interop.EventSourceState<global::Windows.Foundation.TypedEventHandler<global::Microsoft.Web.WebView2.Core.CoreWebView2CompositionController, object>> CreateEventSourceState() =>
        new EventState(ObjectReference.ThisPtr, Index);

        [global::WinRT.WinRTExposedType]
        private sealed class EventState : global::ABI.WinRT.Interop.EventSourceState<global::Windows.Foundation.TypedEventHandler<global::Microsoft.Web.WebView2.Core.CoreWebView2CompositionController, object>>
        {
            public EventState(System.IntPtr obj, int index)
            : base(obj, index)
            {
            }

            protected override global::Windows.Foundation.TypedEventHandler<global::Microsoft.Web.WebView2.Core.CoreWebView2CompositionController, object> GetEventInvoke()
            {
                return (global::Microsoft.Web.WebView2.Core.CoreWebView2CompositionController sender, object args) =>
                {
                    var targetDelegate = TargetDelegate;
                    if (targetDelegate is null)
                    {
                        return ;
                    }
                    targetDelegate.Invoke(sender, args);
                };
            }
        }
    }

    internal sealed unsafe class _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_UI_Xaml_Controls_TimePickerFlyout__global__Microsoft_UI_Xaml_Controls_TimePickedEventArgs_ : global::ABI.WinRT.Interop.EventSource<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.TimePickerFlyout, global::Microsoft.UI.Xaml.Controls.TimePickedEventArgs>>
    {
        private static readonly bool initialized = global::WinRT.GenericTypeInstantiations.Windows_Foundation_TypedEventHandler_2_Microsoft_UI_Xaml_Controls_TimePickerFlyout__Microsoft_UI_Xaml_Controls_TimePickedEventArgs.EnsureInitialized();

        internal _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_UI_Xaml_Controls_TimePickerFlyout__global__Microsoft_UI_Xaml_Controls_TimePickedEventArgs_(IObjectReference obj,
        delegate* unmanaged[Stdcall]<System.IntPtr, System.IntPtr, WinRT.EventRegistrationToken*, int> addHandler,
        delegate* unmanaged[Stdcall]<System.IntPtr, WinRT.EventRegistrationToken, int> removeHandler, int index) : base(obj, addHandler, removeHandler, index)
        {
            _ = initialized;
        }

        protected override ObjectReferenceValue CreateMarshaler(global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.TimePickerFlyout, global::Microsoft.UI.Xaml.Controls.TimePickedEventArgs> handler) =>
        global::ABI.Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.TimePickerFlyout, global::Microsoft.UI.Xaml.Controls.TimePickedEventArgs>.CreateMarshaler2(handler);

        protected override global::ABI.WinRT.Interop.EventSourceState<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.TimePickerFlyout, global::Microsoft.UI.Xaml.Controls.TimePickedEventArgs>> CreateEventSourceState() =>
        new EventState(ObjectReference.ThisPtr, Index);

        [global::WinRT.WinRTExposedType]
        private sealed class EventState : global::ABI.WinRT.Interop.EventSourceState<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.TimePickerFlyout, global::Microsoft.UI.Xaml.Controls.TimePickedEventArgs>>
        {
            public EventState(System.IntPtr obj, int index)
            : base(obj, index)
            {
            }

            protected override global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.TimePickerFlyout, global::Microsoft.UI.Xaml.Controls.TimePickedEventArgs> GetEventInvoke()
            {
                return (global::Microsoft.UI.Xaml.Controls.TimePickerFlyout sender, global::Microsoft.UI.Xaml.Controls.TimePickedEventArgs args) =>
                {
                    var targetDelegate = TargetDelegate;
                    if (targetDelegate is null)
                    {
                        return ;
                    }
                    targetDelegate.Invoke(sender, args);
                };
            }
        }
    }

    internal sealed unsafe class _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_UI_Xaml_Controls_NavigationView__global__Microsoft_UI_Xaml_Controls_NavigationViewDisplayModeChangedEventArgs_ : global::ABI.WinRT.Interop.EventSource<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.NavigationView, global::Microsoft.UI.Xaml.Controls.NavigationViewDisplayModeChangedEventArgs>>
    {
        private static readonly bool initialized = global::WinRT.GenericTypeInstantiations.Windows_Foundation_TypedEventHandler_2_Microsoft_UI_Xaml_Controls_NavigationView__Microsoft_UI_Xaml_Controls_NavigationViewDisplayModeChangedEventArgs.EnsureInitialized();

        internal _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_UI_Xaml_Controls_NavigationView__global__Microsoft_UI_Xaml_Controls_NavigationViewDisplayModeChangedEventArgs_(IObjectReference obj,
        delegate* unmanaged[Stdcall]<System.IntPtr, System.IntPtr, WinRT.EventRegistrationToken*, int> addHandler,
        delegate* unmanaged[Stdcall]<System.IntPtr, WinRT.EventRegistrationToken, int> removeHandler, int index) : base(obj, addHandler, removeHandler, index)
        {
            _ = initialized;
        }

        protected override ObjectReferenceValue CreateMarshaler(global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.NavigationView, global::Microsoft.UI.Xaml.Controls.NavigationViewDisplayModeChangedEventArgs> handler) =>
        global::ABI.Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.NavigationView, global::Microsoft.UI.Xaml.Controls.NavigationViewDisplayModeChangedEventArgs>.CreateMarshaler2(handler);

        protected override global::ABI.WinRT.Interop.EventSourceState<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.NavigationView, global::Microsoft.UI.Xaml.Controls.NavigationViewDisplayModeChangedEventArgs>> CreateEventSourceState() =>
        new EventState(ObjectReference.ThisPtr, Index);

        [global::WinRT.WinRTExposedType]
        private sealed class EventState : global::ABI.WinRT.Interop.EventSourceState<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.NavigationView, global::Microsoft.UI.Xaml.Controls.NavigationViewDisplayModeChangedEventArgs>>
        {
            public EventState(System.IntPtr obj, int index)
            : base(obj, index)
            {
            }

            protected override global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.NavigationView, global::Microsoft.UI.Xaml.Controls.NavigationViewDisplayModeChangedEventArgs> GetEventInvoke()
            {
                return (global::Microsoft.UI.Xaml.Controls.NavigationView sender, global::Microsoft.UI.Xaml.Controls.NavigationViewDisplayModeChangedEventArgs args) =>
                {
                    var targetDelegate = TargetDelegate;
                    if (targetDelegate is null)
                    {
                        return ;
                    }
                    targetDelegate.Invoke(sender, args);
                };
            }
        }
    }

    internal sealed unsafe class _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_UI_Xaml_Controls_PagerControl__global__Microsoft_UI_Xaml_Controls_PagerControlSelectedIndexChangedEventArgs_ : global::ABI.WinRT.Interop.EventSource<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.PagerControl, global::Microsoft.UI.Xaml.Controls.PagerControlSelectedIndexChangedEventArgs>>
    {
        private static readonly bool initialized = global::WinRT.GenericTypeInstantiations.Windows_Foundation_TypedEventHandler_2_Microsoft_UI_Xaml_Controls_PagerControl__Microsoft_UI_Xaml_Controls_PagerControlSelectedIndexChangedEventArgs.EnsureInitialized();

        internal _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_UI_Xaml_Controls_PagerControl__global__Microsoft_UI_Xaml_Controls_PagerControlSelectedIndexChangedEventArgs_(IObjectReference obj,
        delegate* unmanaged[Stdcall]<System.IntPtr, System.IntPtr, WinRT.EventRegistrationToken*, int> addHandler,
        delegate* unmanaged[Stdcall]<System.IntPtr, WinRT.EventRegistrationToken, int> removeHandler, int index) : base(obj, addHandler, removeHandler, index)
        {
            _ = initialized;
        }

        protected override ObjectReferenceValue CreateMarshaler(global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.PagerControl, global::Microsoft.UI.Xaml.Controls.PagerControlSelectedIndexChangedEventArgs> handler) =>
        global::ABI.Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.PagerControl, global::Microsoft.UI.Xaml.Controls.PagerControlSelectedIndexChangedEventArgs>.CreateMarshaler2(handler);

        protected override global::ABI.WinRT.Interop.EventSourceState<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.PagerControl, global::Microsoft.UI.Xaml.Controls.PagerControlSelectedIndexChangedEventArgs>> CreateEventSourceState() =>
        new EventState(ObjectReference.ThisPtr, Index);

        [global::WinRT.WinRTExposedType]
        private sealed class EventState : global::ABI.WinRT.Interop.EventSourceState<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.PagerControl, global::Microsoft.UI.Xaml.Controls.PagerControlSelectedIndexChangedEventArgs>>
        {
            public EventState(System.IntPtr obj, int index)
            : base(obj, index)
            {
            }

            protected override global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.PagerControl, global::Microsoft.UI.Xaml.Controls.PagerControlSelectedIndexChangedEventArgs> GetEventInvoke()
            {
                return (global::Microsoft.UI.Xaml.Controls.PagerControl sender, global::Microsoft.UI.Xaml.Controls.PagerControlSelectedIndexChangedEventArgs args) =>
                {
                    var targetDelegate = TargetDelegate;
                    if (targetDelegate is null)
                    {
                        return ;
                    }
                    targetDelegate.Invoke(sender, args);
                };
            }
        }
    }

    internal sealed unsafe class _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_UI_Xaml_Controls_TabView__object_ : global::ABI.WinRT.Interop.EventSource<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.TabView, object>>
    {
        private static readonly bool initialized = global::WinRT.GenericTypeInstantiations.Windows_Foundation_TypedEventHandler_2_Microsoft_UI_Xaml_Controls_TabView__object.EnsureInitialized();

        internal _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_UI_Xaml_Controls_TabView__object_(IObjectReference obj,
        delegate* unmanaged[Stdcall]<System.IntPtr, System.IntPtr, WinRT.EventRegistrationToken*, int> addHandler,
        delegate* unmanaged[Stdcall]<System.IntPtr, WinRT.EventRegistrationToken, int> removeHandler, int index) : base(obj, addHandler, removeHandler, index)
        {
            _ = initialized;
        }

        protected override ObjectReferenceValue CreateMarshaler(global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.TabView, object> handler) =>
        global::ABI.Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.TabView, object>.CreateMarshaler2(handler);

        protected override global::ABI.WinRT.Interop.EventSourceState<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.TabView, object>> CreateEventSourceState() =>
        new EventState(ObjectReference.ThisPtr, Index);

        [global::WinRT.WinRTExposedType]
        private sealed class EventState : global::ABI.WinRT.Interop.EventSourceState<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.TabView, object>>
        {
            public EventState(System.IntPtr obj, int index)
            : base(obj, index)
            {
            }

            protected override global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.TabView, object> GetEventInvoke()
            {
                return (global::Microsoft.UI.Xaml.Controls.TabView sender, object args) =>
                {
                    var targetDelegate = TargetDelegate;
                    if (targetDelegate is null)
                    {
                        return ;
                    }
                    targetDelegate.Invoke(sender, args);
                };
            }
        }
    }

    internal sealed unsafe class _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_UI_Xaml_Controls_TeachingTip__global__Microsoft_UI_Xaml_Controls_TeachingTipClosingEventArgs_ : global::ABI.WinRT.Interop.EventSource<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.TeachingTip, global::Microsoft.UI.Xaml.Controls.TeachingTipClosingEventArgs>>
    {
        private static readonly bool initialized = global::WinRT.GenericTypeInstantiations.Windows_Foundation_TypedEventHandler_2_Microsoft_UI_Xaml_Controls_TeachingTip__Microsoft_UI_Xaml_Controls_TeachingTipClosingEventArgs.EnsureInitialized();

        internal _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_UI_Xaml_Controls_TeachingTip__global__Microsoft_UI_Xaml_Controls_TeachingTipClosingEventArgs_(IObjectReference obj,
        delegate* unmanaged[Stdcall]<System.IntPtr, System.IntPtr, WinRT.EventRegistrationToken*, int> addHandler,
        delegate* unmanaged[Stdcall]<System.IntPtr, WinRT.EventRegistrationToken, int> removeHandler, int index) : base(obj, addHandler, removeHandler, index)
        {
            _ = initialized;
        }

        protected override ObjectReferenceValue CreateMarshaler(global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.TeachingTip, global::Microsoft.UI.Xaml.Controls.TeachingTipClosingEventArgs> handler) =>
        global::ABI.Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.TeachingTip, global::Microsoft.UI.Xaml.Controls.TeachingTipClosingEventArgs>.CreateMarshaler2(handler);

        protected override global::ABI.WinRT.Interop.EventSourceState<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.TeachingTip, global::Microsoft.UI.Xaml.Controls.TeachingTipClosingEventArgs>> CreateEventSourceState() =>
        new EventState(ObjectReference.ThisPtr, Index);

        [global::WinRT.WinRTExposedType]
        private sealed class EventState : global::ABI.WinRT.Interop.EventSourceState<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.TeachingTip, global::Microsoft.UI.Xaml.Controls.TeachingTipClosingEventArgs>>
        {
            public EventState(System.IntPtr obj, int index)
            : base(obj, index)
            {
            }

            protected override global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.TeachingTip, global::Microsoft.UI.Xaml.Controls.TeachingTipClosingEventArgs> GetEventInvoke()
            {
                return (global::Microsoft.UI.Xaml.Controls.TeachingTip sender, global::Microsoft.UI.Xaml.Controls.TeachingTipClosingEventArgs args) =>
                {
                    var targetDelegate = TargetDelegate;
                    if (targetDelegate is null)
                    {
                        return ;
                    }
                    targetDelegate.Invoke(sender, args);
                };
            }
        }
    }

    internal sealed unsafe class _EventSource_global__Microsoft_UI_Xaml_Controls_DragItemsStartingEventHandler : global::ABI.WinRT.Interop.EventSource<global::Microsoft.UI.Xaml.Controls.DragItemsStartingEventHandler>
    {


        internal _EventSource_global__Microsoft_UI_Xaml_Controls_DragItemsStartingEventHandler(IObjectReference obj,
        delegate* unmanaged[Stdcall]<System.IntPtr, System.IntPtr, WinRT.EventRegistrationToken*, int> addHandler,
        delegate* unmanaged[Stdcall]<System.IntPtr, WinRT.EventRegistrationToken, int> removeHandler, int index) : base(obj, addHandler, removeHandler, index)
        {

        }

        protected override ObjectReferenceValue CreateMarshaler(global::Microsoft.UI.Xaml.Controls.DragItemsStartingEventHandler handler) =>
        global::ABI.Microsoft.UI.Xaml.Controls.DragItemsStartingEventHandler.CreateMarshaler2(handler);

        protected override global::ABI.WinRT.Interop.EventSourceState<global::Microsoft.UI.Xaml.Controls.DragItemsStartingEventHandler> CreateEventSourceState() =>
        new EventState(ObjectReference.ThisPtr, Index);

        [global::WinRT.WinRTExposedType]
        private sealed class EventState : global::ABI.WinRT.Interop.EventSourceState<global::Microsoft.UI.Xaml.Controls.DragItemsStartingEventHandler>
        {
            public EventState(System.IntPtr obj, int index)
            : base(obj, index)
            {
            }

            protected override global::Microsoft.UI.Xaml.Controls.DragItemsStartingEventHandler GetEventInvoke()
            {
                return (object sender, global::Microsoft.UI.Xaml.Controls.DragItemsStartingEventArgs e) =>
                {
                    var targetDelegate = TargetDelegate;
                    if (targetDelegate is null)
                    {
                        return ;
                    }
                    targetDelegate.Invoke(sender, e);
                };
            }
        }
    }

    internal sealed unsafe class _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_UI_Xaml_Controls_TabView__global__Microsoft_UI_Xaml_Controls_TabViewTabTearOutRequestedEventArgs_ : global::ABI.WinRT.Interop.EventSource<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.TabView, global::Microsoft.UI.Xaml.Controls.TabViewTabTearOutRequestedEventArgs>>
    {
        private static readonly bool initialized = global::WinRT.GenericTypeInstantiations.Windows_Foundation_TypedEventHandler_2_Microsoft_UI_Xaml_Controls_TabView__Microsoft_UI_Xaml_Controls_TabViewTabTearOutRequestedEventArgs.EnsureInitialized();

        internal _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_UI_Xaml_Controls_TabView__global__Microsoft_UI_Xaml_Controls_TabViewTabTearOutRequestedEventArgs_(IObjectReference obj,
        delegate* unmanaged[Stdcall]<System.IntPtr, System.IntPtr, WinRT.EventRegistrationToken*, int> addHandler,
        delegate* unmanaged[Stdcall]<System.IntPtr, WinRT.EventRegistrationToken, int> removeHandler, int index) : base(obj, addHandler, removeHandler, index)
        {
            _ = initialized;
        }

        protected override ObjectReferenceValue CreateMarshaler(global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.TabView, global::Microsoft.UI.Xaml.Controls.TabViewTabTearOutRequestedEventArgs> handler) =>
        global::ABI.Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.TabView, global::Microsoft.UI.Xaml.Controls.TabViewTabTearOutRequestedEventArgs>.CreateMarshaler2(handler);

        protected override global::ABI.WinRT.Interop.EventSourceState<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.TabView, global::Microsoft.UI.Xaml.Controls.TabViewTabTearOutRequestedEventArgs>> CreateEventSourceState() =>
        new EventState(ObjectReference.ThisPtr, Index);

        [global::WinRT.WinRTExposedType]
        private sealed class EventState : global::ABI.WinRT.Interop.EventSourceState<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.TabView, global::Microsoft.UI.Xaml.Controls.TabViewTabTearOutRequestedEventArgs>>
        {
            public EventState(System.IntPtr obj, int index)
            : base(obj, index)
            {
            }

            protected override global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.TabView, global::Microsoft.UI.Xaml.Controls.TabViewTabTearOutRequestedEventArgs> GetEventInvoke()
            {
                return (global::Microsoft.UI.Xaml.Controls.TabView sender, global::Microsoft.UI.Xaml.Controls.TabViewTabTearOutRequestedEventArgs args) =>
                {
                    var targetDelegate = TargetDelegate;
                    if (targetDelegate is null)
                    {
                        return ;
                    }
                    targetDelegate.Invoke(sender, args);
                };
            }
        }
    }

    internal sealed unsafe class _EventSource_global__Windows_ApplicationModel_Background_BackgroundTaskCanceledEventHandler : global::ABI.WinRT.Interop.EventSource<global::Windows.ApplicationModel.Background.BackgroundTaskCanceledEventHandler>
    {


        internal _EventSource_global__Windows_ApplicationModel_Background_BackgroundTaskCanceledEventHandler(IObjectReference obj,
        delegate* unmanaged[Stdcall]<System.IntPtr, System.IntPtr, WinRT.EventRegistrationToken*, int> addHandler,
        delegate* unmanaged[Stdcall]<System.IntPtr, WinRT.EventRegistrationToken, int> removeHandler, int index) : base(obj, addHandler, removeHandler, index)
        {

        }

        protected override ObjectReferenceValue CreateMarshaler(global::Windows.ApplicationModel.Background.BackgroundTaskCanceledEventHandler handler) =>
        global::ABI.Windows.ApplicationModel.Background.BackgroundTaskCanceledEventHandler.CreateMarshaler2(handler);

        protected override global::ABI.WinRT.Interop.EventSourceState<global::Windows.ApplicationModel.Background.BackgroundTaskCanceledEventHandler> CreateEventSourceState() =>
        new EventState(ObjectReference.ThisPtr, Index);

        [global::WinRT.WinRTExposedType]
        private sealed class EventState : global::ABI.WinRT.Interop.EventSourceState<global::Windows.ApplicationModel.Background.BackgroundTaskCanceledEventHandler>
        {
            public EventState(System.IntPtr obj, int index)
            : base(obj, index)
            {
            }

            protected override global::Windows.ApplicationModel.Background.BackgroundTaskCanceledEventHandler GetEventInvoke()
            {
                return (global::Windows.ApplicationModel.Background.IBackgroundTaskInstance sender, global::Windows.ApplicationModel.Background.BackgroundTaskCancellationReason reason) =>
                {
                    var targetDelegate = TargetDelegate;
                    if (targetDelegate is null)
                    {
                        return ;
                    }
                    targetDelegate.Invoke(sender, reason);
                };
            }
        }
    }

    internal sealed unsafe class _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_UI_Xaml_Controls_NumberBox__global__Microsoft_UI_Xaml_Controls_NumberBoxValueChangedEventArgs_ : global::ABI.WinRT.Interop.EventSource<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.NumberBox, global::Microsoft.UI.Xaml.Controls.NumberBoxValueChangedEventArgs>>
    {
        private static readonly bool initialized = global::WinRT.GenericTypeInstantiations.Windows_Foundation_TypedEventHandler_2_Microsoft_UI_Xaml_Controls_NumberBox__Microsoft_UI_Xaml_Controls_NumberBoxValueChangedEventArgs.EnsureInitialized();

        internal _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_UI_Xaml_Controls_NumberBox__global__Microsoft_UI_Xaml_Controls_NumberBoxValueChangedEventArgs_(IObjectReference obj,
        delegate* unmanaged[Stdcall]<System.IntPtr, System.IntPtr, WinRT.EventRegistrationToken*, int> addHandler,
        delegate* unmanaged[Stdcall]<System.IntPtr, WinRT.EventRegistrationToken, int> removeHandler, int index) : base(obj, addHandler, removeHandler, index)
        {
            _ = initialized;
        }

        protected override ObjectReferenceValue CreateMarshaler(global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.NumberBox, global::Microsoft.UI.Xaml.Controls.NumberBoxValueChangedEventArgs> handler) =>
        global::ABI.Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.NumberBox, global::Microsoft.UI.Xaml.Controls.NumberBoxValueChangedEventArgs>.CreateMarshaler2(handler);

        protected override global::ABI.WinRT.Interop.EventSourceState<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.NumberBox, global::Microsoft.UI.Xaml.Controls.NumberBoxValueChangedEventArgs>> CreateEventSourceState() =>
        new EventState(ObjectReference.ThisPtr, Index);

        [global::WinRT.WinRTExposedType]
        private sealed class EventState : global::ABI.WinRT.Interop.EventSourceState<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.NumberBox, global::Microsoft.UI.Xaml.Controls.NumberBoxValueChangedEventArgs>>
        {
            public EventState(System.IntPtr obj, int index)
            : base(obj, index)
            {
            }

            protected override global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.NumberBox, global::Microsoft.UI.Xaml.Controls.NumberBoxValueChangedEventArgs> GetEventInvoke()
            {
                return (global::Microsoft.UI.Xaml.Controls.NumberBox sender, global::Microsoft.UI.Xaml.Controls.NumberBoxValueChangedEventArgs args) =>
                {
                    var targetDelegate = TargetDelegate;
                    if (targetDelegate is null)
                    {
                        return ;
                    }
                    targetDelegate.Invoke(sender, args);
                };
            }
        }
    }

    internal sealed unsafe class _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_UI_Xaml_Controls_IDynamicAnimatedVisualSource__object_ : global::ABI.WinRT.Interop.EventSource<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.IDynamicAnimatedVisualSource, object>>
    {
        private static readonly bool initialized = global::WinRT.GenericTypeInstantiations.Windows_Foundation_TypedEventHandler_2_Microsoft_UI_Xaml_Controls_IDynamicAnimatedVisualSource__object.EnsureInitialized();

        internal _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_UI_Xaml_Controls_IDynamicAnimatedVisualSource__object_(IObjectReference obj,
        delegate* unmanaged[Stdcall]<System.IntPtr, System.IntPtr, WinRT.EventRegistrationToken*, int> addHandler,
        delegate* unmanaged[Stdcall]<System.IntPtr, WinRT.EventRegistrationToken, int> removeHandler, int index) : base(obj, addHandler, removeHandler, index)
        {
            _ = initialized;
        }

        protected override ObjectReferenceValue CreateMarshaler(global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.IDynamicAnimatedVisualSource, object> handler) =>
        global::ABI.Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.IDynamicAnimatedVisualSource, object>.CreateMarshaler2(handler);

        protected override global::ABI.WinRT.Interop.EventSourceState<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.IDynamicAnimatedVisualSource, object>> CreateEventSourceState() =>
        new EventState(ObjectReference.ThisPtr, Index);

        [global::WinRT.WinRTExposedType]
        private sealed class EventState : global::ABI.WinRT.Interop.EventSourceState<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.IDynamicAnimatedVisualSource, object>>
        {
            public EventState(System.IntPtr obj, int index)
            : base(obj, index)
            {
            }

            protected override global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.IDynamicAnimatedVisualSource, object> GetEventInvoke()
            {
                return (global::Microsoft.UI.Xaml.Controls.IDynamicAnimatedVisualSource sender, object args) =>
                {
                    var targetDelegate = TargetDelegate;
                    if (targetDelegate is null)
                    {
                        return ;
                    }
                    targetDelegate.Invoke(sender, args);
                };
            }
        }
    }

    internal sealed unsafe class _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_UI_Xaml_Controls_InfoBar__global__Microsoft_UI_Xaml_Controls_InfoBarClosingEventArgs_ : global::ABI.WinRT.Interop.EventSource<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.InfoBar, global::Microsoft.UI.Xaml.Controls.InfoBarClosingEventArgs>>
    {
        private static readonly bool initialized = global::WinRT.GenericTypeInstantiations.Windows_Foundation_TypedEventHandler_2_Microsoft_UI_Xaml_Controls_InfoBar__Microsoft_UI_Xaml_Controls_InfoBarClosingEventArgs.EnsureInitialized();

        internal _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_UI_Xaml_Controls_InfoBar__global__Microsoft_UI_Xaml_Controls_InfoBarClosingEventArgs_(IObjectReference obj,
        delegate* unmanaged[Stdcall]<System.IntPtr, System.IntPtr, WinRT.EventRegistrationToken*, int> addHandler,
        delegate* unmanaged[Stdcall]<System.IntPtr, WinRT.EventRegistrationToken, int> removeHandler, int index) : base(obj, addHandler, removeHandler, index)
        {
            _ = initialized;
        }

        protected override ObjectReferenceValue CreateMarshaler(global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.InfoBar, global::Microsoft.UI.Xaml.Controls.InfoBarClosingEventArgs> handler) =>
        global::ABI.Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.InfoBar, global::Microsoft.UI.Xaml.Controls.InfoBarClosingEventArgs>.CreateMarshaler2(handler);

        protected override global::ABI.WinRT.Interop.EventSourceState<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.InfoBar, global::Microsoft.UI.Xaml.Controls.InfoBarClosingEventArgs>> CreateEventSourceState() =>
        new EventState(ObjectReference.ThisPtr, Index);

        [global::WinRT.WinRTExposedType]
        private sealed class EventState : global::ABI.WinRT.Interop.EventSourceState<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.InfoBar, global::Microsoft.UI.Xaml.Controls.InfoBarClosingEventArgs>>
        {
            public EventState(System.IntPtr obj, int index)
            : base(obj, index)
            {
            }

            protected override global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.InfoBar, global::Microsoft.UI.Xaml.Controls.InfoBarClosingEventArgs> GetEventInvoke()
            {
                return (global::Microsoft.UI.Xaml.Controls.InfoBar sender, global::Microsoft.UI.Xaml.Controls.InfoBarClosingEventArgs args) =>
                {
                    var targetDelegate = TargetDelegate;
                    if (targetDelegate is null)
                    {
                        return ;
                    }
                    targetDelegate.Invoke(sender, args);
                };
            }
        }
    }

    internal sealed unsafe class _EventSource_global__Windows_Foundation_TypedEventHandler_object__object_ : global::ABI.WinRT.Interop.EventSource<global::Windows.Foundation.TypedEventHandler<object, object>>
    {
        private static readonly bool initialized = global::WinRT.GenericTypeInstantiations.Windows_Foundation_TypedEventHandler_2_object__object.EnsureInitialized();

        internal _EventSource_global__Windows_Foundation_TypedEventHandler_object__object_(IObjectReference obj,
        delegate* unmanaged[Stdcall]<System.IntPtr, System.IntPtr, WinRT.EventRegistrationToken*, int> addHandler,
        delegate* unmanaged[Stdcall]<System.IntPtr, WinRT.EventRegistrationToken, int> removeHandler, int index) : base(obj, addHandler, removeHandler, index)
        {
            _ = initialized;
        }

        protected override ObjectReferenceValue CreateMarshaler(global::Windows.Foundation.TypedEventHandler<object, object> handler) =>
        global::ABI.Windows.Foundation.TypedEventHandler<object, object>.CreateMarshaler2(handler);

        protected override global::ABI.WinRT.Interop.EventSourceState<global::Windows.Foundation.TypedEventHandler<object, object>> CreateEventSourceState() =>
        new EventState(ObjectReference.ThisPtr, Index);

        [global::WinRT.WinRTExposedType]
        private sealed class EventState : global::ABI.WinRT.Interop.EventSourceState<global::Windows.Foundation.TypedEventHandler<object, object>>
        {
            public EventState(System.IntPtr obj, int index)
            : base(obj, index)
            {
            }

            protected override global::Windows.Foundation.TypedEventHandler<object, object> GetEventInvoke()
            {
                return (object sender, object args) =>
                {
                    var targetDelegate = TargetDelegate;
                    if (targetDelegate is null)
                    {
                        return ;
                    }
                    targetDelegate.Invoke(sender, args);
                };
            }
        }
    }

    internal sealed unsafe class _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_UI_Content_ContentIsland__global__Microsoft_UI_Content_ContentIslandStateChangedEventArgs_ : global::ABI.WinRT.Interop.EventSource<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Content.ContentIsland, global::Microsoft.UI.Content.ContentIslandStateChangedEventArgs>>
    {
        private static readonly bool initialized = global::WinRT.GenericTypeInstantiations.Windows_Foundation_TypedEventHandler_2_Microsoft_UI_Content_ContentIsland__Microsoft_UI_Content_ContentIslandStateChangedEventArgs.EnsureInitialized();

        internal _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_UI_Content_ContentIsland__global__Microsoft_UI_Content_ContentIslandStateChangedEventArgs_(IObjectReference obj,
        delegate* unmanaged[Stdcall]<System.IntPtr, System.IntPtr, WinRT.EventRegistrationToken*, int> addHandler,
        delegate* unmanaged[Stdcall]<System.IntPtr, WinRT.EventRegistrationToken, int> removeHandler, int index) : base(obj, addHandler, removeHandler, index)
        {
            _ = initialized;
        }

        protected override ObjectReferenceValue CreateMarshaler(global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Content.ContentIsland, global::Microsoft.UI.Content.ContentIslandStateChangedEventArgs> handler) =>
        global::ABI.Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Content.ContentIsland, global::Microsoft.UI.Content.ContentIslandStateChangedEventArgs>.CreateMarshaler2(handler);

        protected override global::ABI.WinRT.Interop.EventSourceState<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Content.ContentIsland, global::Microsoft.UI.Content.ContentIslandStateChangedEventArgs>> CreateEventSourceState() =>
        new EventState(ObjectReference.ThisPtr, Index);

        [global::WinRT.WinRTExposedType]
        private sealed class EventState : global::ABI.WinRT.Interop.EventSourceState<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Content.ContentIsland, global::Microsoft.UI.Content.ContentIslandStateChangedEventArgs>>
        {
            public EventState(System.IntPtr obj, int index)
            : base(obj, index)
            {
            }

            protected override global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Content.ContentIsland, global::Microsoft.UI.Content.ContentIslandStateChangedEventArgs> GetEventInvoke()
            {
                return (global::Microsoft.UI.Content.ContentIsland sender, global::Microsoft.UI.Content.ContentIslandStateChangedEventArgs args) =>
                {
                    var targetDelegate = TargetDelegate;
                    if (targetDelegate is null)
                    {
                        return ;
                    }
                    targetDelegate.Invoke(sender, args);
                };
            }
        }
    }

    internal sealed unsafe class _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_UI_Xaml_Controls_TabView__global__Microsoft_UI_Xaml_Controls_TabViewTabTearOutWindowRequestedEventArgs_ : global::ABI.WinRT.Interop.EventSource<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.TabView, global::Microsoft.UI.Xaml.Controls.TabViewTabTearOutWindowRequestedEventArgs>>
    {
        private static readonly bool initialized = global::WinRT.GenericTypeInstantiations.Windows_Foundation_TypedEventHandler_2_Microsoft_UI_Xaml_Controls_TabView__Microsoft_UI_Xaml_Controls_TabViewTabTearOutWindowRequestedEventArgs.EnsureInitialized();

        internal _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_UI_Xaml_Controls_TabView__global__Microsoft_UI_Xaml_Controls_TabViewTabTearOutWindowRequestedEventArgs_(IObjectReference obj,
        delegate* unmanaged[Stdcall]<System.IntPtr, System.IntPtr, WinRT.EventRegistrationToken*, int> addHandler,
        delegate* unmanaged[Stdcall]<System.IntPtr, WinRT.EventRegistrationToken, int> removeHandler, int index) : base(obj, addHandler, removeHandler, index)
        {
            _ = initialized;
        }

        protected override ObjectReferenceValue CreateMarshaler(global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.TabView, global::Microsoft.UI.Xaml.Controls.TabViewTabTearOutWindowRequestedEventArgs> handler) =>
        global::ABI.Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.TabView, global::Microsoft.UI.Xaml.Controls.TabViewTabTearOutWindowRequestedEventArgs>.CreateMarshaler2(handler);

        protected override global::ABI.WinRT.Interop.EventSourceState<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.TabView, global::Microsoft.UI.Xaml.Controls.TabViewTabTearOutWindowRequestedEventArgs>> CreateEventSourceState() =>
        new EventState(ObjectReference.ThisPtr, Index);

        [global::WinRT.WinRTExposedType]
        private sealed class EventState : global::ABI.WinRT.Interop.EventSourceState<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.TabView, global::Microsoft.UI.Xaml.Controls.TabViewTabTearOutWindowRequestedEventArgs>>
        {
            public EventState(System.IntPtr obj, int index)
            : base(obj, index)
            {
            }

            protected override global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.TabView, global::Microsoft.UI.Xaml.Controls.TabViewTabTearOutWindowRequestedEventArgs> GetEventInvoke()
            {
                return (global::Microsoft.UI.Xaml.Controls.TabView sender, global::Microsoft.UI.Xaml.Controls.TabViewTabTearOutWindowRequestedEventArgs args) =>
                {
                    var targetDelegate = TargetDelegate;
                    if (targetDelegate is null)
                    {
                        return ;
                    }
                    targetDelegate.Invoke(sender, args);
                };
            }
        }
    }

    internal sealed unsafe class _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_UI_Xaml_Controls_ContentDialog__global__Microsoft_UI_Xaml_Controls_ContentDialogClosingEventArgs_ : global::ABI.WinRT.Interop.EventSource<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.ContentDialog, global::Microsoft.UI.Xaml.Controls.ContentDialogClosingEventArgs>>
    {
        private static readonly bool initialized = global::WinRT.GenericTypeInstantiations.Windows_Foundation_TypedEventHandler_2_Microsoft_UI_Xaml_Controls_ContentDialog__Microsoft_UI_Xaml_Controls_ContentDialogClosingEventArgs.EnsureInitialized();

        internal _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_UI_Xaml_Controls_ContentDialog__global__Microsoft_UI_Xaml_Controls_ContentDialogClosingEventArgs_(IObjectReference obj,
        delegate* unmanaged[Stdcall]<System.IntPtr, System.IntPtr, WinRT.EventRegistrationToken*, int> addHandler,
        delegate* unmanaged[Stdcall]<System.IntPtr, WinRT.EventRegistrationToken, int> removeHandler, int index) : base(obj, addHandler, removeHandler, index)
        {
            _ = initialized;
        }

        protected override ObjectReferenceValue CreateMarshaler(global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.ContentDialog, global::Microsoft.UI.Xaml.Controls.ContentDialogClosingEventArgs> handler) =>
        global::ABI.Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.ContentDialog, global::Microsoft.UI.Xaml.Controls.ContentDialogClosingEventArgs>.CreateMarshaler2(handler);

        protected override global::ABI.WinRT.Interop.EventSourceState<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.ContentDialog, global::Microsoft.UI.Xaml.Controls.ContentDialogClosingEventArgs>> CreateEventSourceState() =>
        new EventState(ObjectReference.ThisPtr, Index);

        [global::WinRT.WinRTExposedType]
        private sealed class EventState : global::ABI.WinRT.Interop.EventSourceState<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.ContentDialog, global::Microsoft.UI.Xaml.Controls.ContentDialogClosingEventArgs>>
        {
            public EventState(System.IntPtr obj, int index)
            : base(obj, index)
            {
            }

            protected override global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.ContentDialog, global::Microsoft.UI.Xaml.Controls.ContentDialogClosingEventArgs> GetEventInvoke()
            {
                return (global::Microsoft.UI.Xaml.Controls.ContentDialog sender, global::Microsoft.UI.Xaml.Controls.ContentDialogClosingEventArgs args) =>
                {
                    var targetDelegate = TargetDelegate;
                    if (targetDelegate is null)
                    {
                        return ;
                    }
                    targetDelegate.Invoke(sender, args);
                };
            }
        }
    }

    internal sealed unsafe class _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_UI_Windowing_AppWindow__global__Microsoft_UI_Windowing_AppWindowClosingEventArgs_ : global::ABI.WinRT.Interop.EventSource<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Windowing.AppWindow, global::Microsoft.UI.Windowing.AppWindowClosingEventArgs>>
    {
        private static readonly bool initialized = global::WinRT.GenericTypeInstantiations.Windows_Foundation_TypedEventHandler_2_Microsoft_UI_Windowing_AppWindow__Microsoft_UI_Windowing_AppWindowClosingEventArgs.EnsureInitialized();

        internal _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_UI_Windowing_AppWindow__global__Microsoft_UI_Windowing_AppWindowClosingEventArgs_(IObjectReference obj,
        delegate* unmanaged[Stdcall]<System.IntPtr, System.IntPtr, WinRT.EventRegistrationToken*, int> addHandler,
        delegate* unmanaged[Stdcall]<System.IntPtr, WinRT.EventRegistrationToken, int> removeHandler, int index) : base(obj, addHandler, removeHandler, index)
        {
            _ = initialized;
        }

        protected override ObjectReferenceValue CreateMarshaler(global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Windowing.AppWindow, global::Microsoft.UI.Windowing.AppWindowClosingEventArgs> handler) =>
        global::ABI.Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Windowing.AppWindow, global::Microsoft.UI.Windowing.AppWindowClosingEventArgs>.CreateMarshaler2(handler);

        protected override global::ABI.WinRT.Interop.EventSourceState<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Windowing.AppWindow, global::Microsoft.UI.Windowing.AppWindowClosingEventArgs>> CreateEventSourceState() =>
        new EventState(ObjectReference.ThisPtr, Index);

        [global::WinRT.WinRTExposedType]
        private sealed class EventState : global::ABI.WinRT.Interop.EventSourceState<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Windowing.AppWindow, global::Microsoft.UI.Windowing.AppWindowClosingEventArgs>>
        {
            public EventState(System.IntPtr obj, int index)
            : base(obj, index)
            {
            }

            protected override global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Windowing.AppWindow, global::Microsoft.UI.Windowing.AppWindowClosingEventArgs> GetEventInvoke()
            {
                return (global::Microsoft.UI.Windowing.AppWindow sender, global::Microsoft.UI.Windowing.AppWindowClosingEventArgs args) =>
                {
                    var targetDelegate = TargetDelegate;
                    if (targetDelegate is null)
                    {
                        return ;
                    }
                    targetDelegate.Invoke(sender, args);
                };
            }
        }
    }

    internal sealed unsafe class _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_UI_Xaml_Controls_TextBox__global__Microsoft_UI_Xaml_Controls_TextBoxBeforeTextChangingEventArgs_ : global::ABI.WinRT.Interop.EventSource<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.TextBox, global::Microsoft.UI.Xaml.Controls.TextBoxBeforeTextChangingEventArgs>>
    {
        private static readonly bool initialized = global::WinRT.GenericTypeInstantiations.Windows_Foundation_TypedEventHandler_2_Microsoft_UI_Xaml_Controls_TextBox__Microsoft_UI_Xaml_Controls_TextBoxBeforeTextChangingEventArgs.EnsureInitialized();

        internal _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_UI_Xaml_Controls_TextBox__global__Microsoft_UI_Xaml_Controls_TextBoxBeforeTextChangingEventArgs_(IObjectReference obj,
        delegate* unmanaged[Stdcall]<System.IntPtr, System.IntPtr, WinRT.EventRegistrationToken*, int> addHandler,
        delegate* unmanaged[Stdcall]<System.IntPtr, WinRT.EventRegistrationToken, int> removeHandler, int index) : base(obj, addHandler, removeHandler, index)
        {
            _ = initialized;
        }

        protected override ObjectReferenceValue CreateMarshaler(global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.TextBox, global::Microsoft.UI.Xaml.Controls.TextBoxBeforeTextChangingEventArgs> handler) =>
        global::ABI.Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.TextBox, global::Microsoft.UI.Xaml.Controls.TextBoxBeforeTextChangingEventArgs>.CreateMarshaler2(handler);

        protected override global::ABI.WinRT.Interop.EventSourceState<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.TextBox, global::Microsoft.UI.Xaml.Controls.TextBoxBeforeTextChangingEventArgs>> CreateEventSourceState() =>
        new EventState(ObjectReference.ThisPtr, Index);

        [global::WinRT.WinRTExposedType]
        private sealed class EventState : global::ABI.WinRT.Interop.EventSourceState<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.TextBox, global::Microsoft.UI.Xaml.Controls.TextBoxBeforeTextChangingEventArgs>>
        {
            public EventState(System.IntPtr obj, int index)
            : base(obj, index)
            {
            }

            protected override global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.TextBox, global::Microsoft.UI.Xaml.Controls.TextBoxBeforeTextChangingEventArgs> GetEventInvoke()
            {
                return (global::Microsoft.UI.Xaml.Controls.TextBox sender, global::Microsoft.UI.Xaml.Controls.TextBoxBeforeTextChangingEventArgs args) =>
                {
                    var targetDelegate = TargetDelegate;
                    if (targetDelegate is null)
                    {
                        return ;
                    }
                    targetDelegate.Invoke(sender, args);
                };
            }
        }
    }

    internal sealed unsafe class _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_UI_Xaml_Controls_AutoSuggestBox__global__Microsoft_UI_Xaml_Controls_AutoSuggestBoxQuerySubmittedEventArgs_ : global::ABI.WinRT.Interop.EventSource<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.AutoSuggestBox, global::Microsoft.UI.Xaml.Controls.AutoSuggestBoxQuerySubmittedEventArgs>>
    {
        private static readonly bool initialized = global::WinRT.GenericTypeInstantiations.Windows_Foundation_TypedEventHandler_2_Microsoft_UI_Xaml_Controls_AutoSuggestBox__Microsoft_UI_Xaml_Controls_AutoSuggestBoxQuerySubmittedEventArgs.EnsureInitialized();

        internal _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_UI_Xaml_Controls_AutoSuggestBox__global__Microsoft_UI_Xaml_Controls_AutoSuggestBoxQuerySubmittedEventArgs_(IObjectReference obj,
        delegate* unmanaged[Stdcall]<System.IntPtr, System.IntPtr, WinRT.EventRegistrationToken*, int> addHandler,
        delegate* unmanaged[Stdcall]<System.IntPtr, WinRT.EventRegistrationToken, int> removeHandler, int index) : base(obj, addHandler, removeHandler, index)
        {
            _ = initialized;
        }

        protected override ObjectReferenceValue CreateMarshaler(global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.AutoSuggestBox, global::Microsoft.UI.Xaml.Controls.AutoSuggestBoxQuerySubmittedEventArgs> handler) =>
        global::ABI.Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.AutoSuggestBox, global::Microsoft.UI.Xaml.Controls.AutoSuggestBoxQuerySubmittedEventArgs>.CreateMarshaler2(handler);

        protected override global::ABI.WinRT.Interop.EventSourceState<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.AutoSuggestBox, global::Microsoft.UI.Xaml.Controls.AutoSuggestBoxQuerySubmittedEventArgs>> CreateEventSourceState() =>
        new EventState(ObjectReference.ThisPtr, Index);

        [global::WinRT.WinRTExposedType]
        private sealed class EventState : global::ABI.WinRT.Interop.EventSourceState<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.AutoSuggestBox, global::Microsoft.UI.Xaml.Controls.AutoSuggestBoxQuerySubmittedEventArgs>>
        {
            public EventState(System.IntPtr obj, int index)
            : base(obj, index)
            {
            }

            protected override global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.AutoSuggestBox, global::Microsoft.UI.Xaml.Controls.AutoSuggestBoxQuerySubmittedEventArgs> GetEventInvoke()
            {
                return (global::Microsoft.UI.Xaml.Controls.AutoSuggestBox sender, global::Microsoft.UI.Xaml.Controls.AutoSuggestBoxQuerySubmittedEventArgs args) =>
                {
                    var targetDelegate = TargetDelegate;
                    if (targetDelegate is null)
                    {
                        return ;
                    }
                    targetDelegate.Invoke(sender, args);
                };
            }
        }
    }

    internal sealed unsafe class _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_UI_Xaml_UIElement__global__Microsoft_UI_Xaml_RoutedEventArgs_ : global::ABI.WinRT.Interop.EventSource<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.UIElement, global::Microsoft.UI.Xaml.RoutedEventArgs>>
    {
        private static readonly bool initialized = global::WinRT.GenericTypeInstantiations.Windows_Foundation_TypedEventHandler_2_Microsoft_UI_Xaml_UIElement__Microsoft_UI_Xaml_RoutedEventArgs.EnsureInitialized();

        internal _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_UI_Xaml_UIElement__global__Microsoft_UI_Xaml_RoutedEventArgs_(IObjectReference obj,
        delegate* unmanaged[Stdcall]<System.IntPtr, System.IntPtr, WinRT.EventRegistrationToken*, int> addHandler,
        delegate* unmanaged[Stdcall]<System.IntPtr, WinRT.EventRegistrationToken, int> removeHandler, int index) : base(obj, addHandler, removeHandler, index)
        {
            _ = initialized;
        }

        protected override ObjectReferenceValue CreateMarshaler(global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.UIElement, global::Microsoft.UI.Xaml.RoutedEventArgs> handler) =>
        global::ABI.Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.UIElement, global::Microsoft.UI.Xaml.RoutedEventArgs>.CreateMarshaler2(handler);

        protected override global::ABI.WinRT.Interop.EventSourceState<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.UIElement, global::Microsoft.UI.Xaml.RoutedEventArgs>> CreateEventSourceState() =>
        new EventState(ObjectReference.ThisPtr, Index);

        [global::WinRT.WinRTExposedType]
        private sealed class EventState : global::ABI.WinRT.Interop.EventSourceState<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.UIElement, global::Microsoft.UI.Xaml.RoutedEventArgs>>
        {
            public EventState(System.IntPtr obj, int index)
            : base(obj, index)
            {
            }

            protected override global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.UIElement, global::Microsoft.UI.Xaml.RoutedEventArgs> GetEventInvoke()
            {
                return (global::Microsoft.UI.Xaml.UIElement sender, global::Microsoft.UI.Xaml.RoutedEventArgs args) =>
                {
                    var targetDelegate = TargetDelegate;
                    if (targetDelegate is null)
                    {
                        return ;
                    }
                    targetDelegate.Invoke(sender, args);
                };
            }
        }
    }

    internal sealed unsafe class _EventSource_global__Microsoft_UI_Xaml_Controls_CleanUpVirtualizedItemEventHandler : global::ABI.WinRT.Interop.EventSource<global::Microsoft.UI.Xaml.Controls.CleanUpVirtualizedItemEventHandler>
    {


        internal _EventSource_global__Microsoft_UI_Xaml_Controls_CleanUpVirtualizedItemEventHandler(IObjectReference obj,
        delegate* unmanaged[Stdcall]<System.IntPtr, System.IntPtr, WinRT.EventRegistrationToken*, int> addHandler,
        delegate* unmanaged[Stdcall]<System.IntPtr, WinRT.EventRegistrationToken, int> removeHandler, int index) : base(obj, addHandler, removeHandler, index)
        {

        }

        protected override ObjectReferenceValue CreateMarshaler(global::Microsoft.UI.Xaml.Controls.CleanUpVirtualizedItemEventHandler handler) =>
        global::ABI.Microsoft.UI.Xaml.Controls.CleanUpVirtualizedItemEventHandler.CreateMarshaler2(handler);

        protected override global::ABI.WinRT.Interop.EventSourceState<global::Microsoft.UI.Xaml.Controls.CleanUpVirtualizedItemEventHandler> CreateEventSourceState() =>
        new EventState(ObjectReference.ThisPtr, Index);

        [global::WinRT.WinRTExposedType]
        private sealed class EventState : global::ABI.WinRT.Interop.EventSourceState<global::Microsoft.UI.Xaml.Controls.CleanUpVirtualizedItemEventHandler>
        {
            public EventState(System.IntPtr obj, int index)
            : base(obj, index)
            {
            }

            protected override global::Microsoft.UI.Xaml.Controls.CleanUpVirtualizedItemEventHandler GetEventInvoke()
            {
                return (object sender, global::Microsoft.UI.Xaml.Controls.CleanUpVirtualizedItemEventArgs e) =>
                {
                    var targetDelegate = TargetDelegate;
                    if (targetDelegate is null)
                    {
                        return ;
                    }
                    targetDelegate.Invoke(sender, e);
                };
            }
        }
    }

    internal sealed unsafe class _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_UI_Xaml_Controls_RichTextBlock__global__Microsoft_UI_Xaml_Controls_IsTextTrimmedChangedEventArgs_ : global::ABI.WinRT.Interop.EventSource<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.RichTextBlock, global::Microsoft.UI.Xaml.Controls.IsTextTrimmedChangedEventArgs>>
    {
        private static readonly bool initialized = global::WinRT.GenericTypeInstantiations.Windows_Foundation_TypedEventHandler_2_Microsoft_UI_Xaml_Controls_RichTextBlock__Microsoft_UI_Xaml_Controls_IsTextTrimmedChangedEventArgs.EnsureInitialized();

        internal _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_UI_Xaml_Controls_RichTextBlock__global__Microsoft_UI_Xaml_Controls_IsTextTrimmedChangedEventArgs_(IObjectReference obj,
        delegate* unmanaged[Stdcall]<System.IntPtr, System.IntPtr, WinRT.EventRegistrationToken*, int> addHandler,
        delegate* unmanaged[Stdcall]<System.IntPtr, WinRT.EventRegistrationToken, int> removeHandler, int index) : base(obj, addHandler, removeHandler, index)
        {
            _ = initialized;
        }

        protected override ObjectReferenceValue CreateMarshaler(global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.RichTextBlock, global::Microsoft.UI.Xaml.Controls.IsTextTrimmedChangedEventArgs> handler) =>
        global::ABI.Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.RichTextBlock, global::Microsoft.UI.Xaml.Controls.IsTextTrimmedChangedEventArgs>.CreateMarshaler2(handler);

        protected override global::ABI.WinRT.Interop.EventSourceState<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.RichTextBlock, global::Microsoft.UI.Xaml.Controls.IsTextTrimmedChangedEventArgs>> CreateEventSourceState() =>
        new EventState(ObjectReference.ThisPtr, Index);

        [global::WinRT.WinRTExposedType]
        private sealed class EventState : global::ABI.WinRT.Interop.EventSourceState<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.RichTextBlock, global::Microsoft.UI.Xaml.Controls.IsTextTrimmedChangedEventArgs>>
        {
            public EventState(System.IntPtr obj, int index)
            : base(obj, index)
            {
            }

            protected override global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.RichTextBlock, global::Microsoft.UI.Xaml.Controls.IsTextTrimmedChangedEventArgs> GetEventInvoke()
            {
                return (global::Microsoft.UI.Xaml.Controls.RichTextBlock sender, global::Microsoft.UI.Xaml.Controls.IsTextTrimmedChangedEventArgs args) =>
                {
                    var targetDelegate = TargetDelegate;
                    if (targetDelegate is null)
                    {
                        return ;
                    }
                    targetDelegate.Invoke(sender, args);
                };
            }
        }
    }

    internal sealed unsafe class _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_Web_WebView2_Core_CoreWebView2Frame__global__Microsoft_Web_WebView2_Core_CoreWebView2DOMContentLoadedEventArgs_ : global::ABI.WinRT.Interop.EventSource<global::Windows.Foundation.TypedEventHandler<global::Microsoft.Web.WebView2.Core.CoreWebView2Frame, global::Microsoft.Web.WebView2.Core.CoreWebView2DOMContentLoadedEventArgs>>
    {
        private static readonly bool initialized = global::WinRT.GenericTypeInstantiations.Windows_Foundation_TypedEventHandler_2_Microsoft_Web_WebView2_Core_CoreWebView2Frame__Microsoft_Web_WebView2_Core_CoreWebView2DOMContentLoadedEventArgs.EnsureInitialized();

        internal _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_Web_WebView2_Core_CoreWebView2Frame__global__Microsoft_Web_WebView2_Core_CoreWebView2DOMContentLoadedEventArgs_(IObjectReference obj,
        delegate* unmanaged[Stdcall]<System.IntPtr, System.IntPtr, WinRT.EventRegistrationToken*, int> addHandler,
        delegate* unmanaged[Stdcall]<System.IntPtr, WinRT.EventRegistrationToken, int> removeHandler, int index) : base(obj, addHandler, removeHandler, index)
        {
            _ = initialized;
        }

        protected override ObjectReferenceValue CreateMarshaler(global::Windows.Foundation.TypedEventHandler<global::Microsoft.Web.WebView2.Core.CoreWebView2Frame, global::Microsoft.Web.WebView2.Core.CoreWebView2DOMContentLoadedEventArgs> handler) =>
        global::ABI.Windows.Foundation.TypedEventHandler<global::Microsoft.Web.WebView2.Core.CoreWebView2Frame, global::Microsoft.Web.WebView2.Core.CoreWebView2DOMContentLoadedEventArgs>.CreateMarshaler2(handler);

        protected override global::ABI.WinRT.Interop.EventSourceState<global::Windows.Foundation.TypedEventHandler<global::Microsoft.Web.WebView2.Core.CoreWebView2Frame, global::Microsoft.Web.WebView2.Core.CoreWebView2DOMContentLoadedEventArgs>> CreateEventSourceState() =>
        new EventState(ObjectReference.ThisPtr, Index);

        [global::WinRT.WinRTExposedType]
        private sealed class EventState : global::ABI.WinRT.Interop.EventSourceState<global::Windows.Foundation.TypedEventHandler<global::Microsoft.Web.WebView2.Core.CoreWebView2Frame, global::Microsoft.Web.WebView2.Core.CoreWebView2DOMContentLoadedEventArgs>>
        {
            public EventState(System.IntPtr obj, int index)
            : base(obj, index)
            {
            }

            protected override global::Windows.Foundation.TypedEventHandler<global::Microsoft.Web.WebView2.Core.CoreWebView2Frame, global::Microsoft.Web.WebView2.Core.CoreWebView2DOMContentLoadedEventArgs> GetEventInvoke()
            {
                return (global::Microsoft.Web.WebView2.Core.CoreWebView2Frame sender, global::Microsoft.Web.WebView2.Core.CoreWebView2DOMContentLoadedEventArgs args) =>
                {
                    var targetDelegate = TargetDelegate;
                    if (targetDelegate is null)
                    {
                        return ;
                    }
                    targetDelegate.Invoke(sender, args);
                };
            }
        }
    }

    internal sealed unsafe class _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_UI_Xaml_Controls_RatingControl__object_ : global::ABI.WinRT.Interop.EventSource<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.RatingControl, object>>
    {
        private static readonly bool initialized = global::WinRT.GenericTypeInstantiations.Windows_Foundation_TypedEventHandler_2_Microsoft_UI_Xaml_Controls_RatingControl__object.EnsureInitialized();

        internal _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_UI_Xaml_Controls_RatingControl__object_(IObjectReference obj,
        delegate* unmanaged[Stdcall]<System.IntPtr, System.IntPtr, WinRT.EventRegistrationToken*, int> addHandler,
        delegate* unmanaged[Stdcall]<System.IntPtr, WinRT.EventRegistrationToken, int> removeHandler, int index) : base(obj, addHandler, removeHandler, index)
        {
            _ = initialized;
        }

        protected override ObjectReferenceValue CreateMarshaler(global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.RatingControl, object> handler) =>
        global::ABI.Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.RatingControl, object>.CreateMarshaler2(handler);

        protected override global::ABI.WinRT.Interop.EventSourceState<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.RatingControl, object>> CreateEventSourceState() =>
        new EventState(ObjectReference.ThisPtr, Index);

        [global::WinRT.WinRTExposedType]
        private sealed class EventState : global::ABI.WinRT.Interop.EventSourceState<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.RatingControl, object>>
        {
            public EventState(System.IntPtr obj, int index)
            : base(obj, index)
            {
            }

            protected override global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.RatingControl, object> GetEventInvoke()
            {
                return (global::Microsoft.UI.Xaml.Controls.RatingControl sender, object args) =>
                {
                    var targetDelegate = TargetDelegate;
                    if (targetDelegate is null)
                    {
                        return ;
                    }
                    targetDelegate.Invoke(sender, args);
                };
            }
        }
    }

    internal sealed unsafe class _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_UI_Input_DragDrop_DragDropManager__global__Microsoft_UI_Input_DragDrop_DropOperationTargetRequestedEventArgs_ : global::ABI.WinRT.Interop.EventSource<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Input.DragDrop.DragDropManager, global::Microsoft.UI.Input.DragDrop.DropOperationTargetRequestedEventArgs>>
    {
        private static readonly bool initialized = global::WinRT.GenericTypeInstantiations.Windows_Foundation_TypedEventHandler_2_Microsoft_UI_Input_DragDrop_DragDropManager__Microsoft_UI_Input_DragDrop_DropOperationTargetRequestedEventArgs.EnsureInitialized();

        internal _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_UI_Input_DragDrop_DragDropManager__global__Microsoft_UI_Input_DragDrop_DropOperationTargetRequestedEventArgs_(IObjectReference obj,
        delegate* unmanaged[Stdcall]<System.IntPtr, System.IntPtr, WinRT.EventRegistrationToken*, int> addHandler,
        delegate* unmanaged[Stdcall]<System.IntPtr, WinRT.EventRegistrationToken, int> removeHandler, int index) : base(obj, addHandler, removeHandler, index)
        {
            _ = initialized;
        }

        protected override ObjectReferenceValue CreateMarshaler(global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Input.DragDrop.DragDropManager, global::Microsoft.UI.Input.DragDrop.DropOperationTargetRequestedEventArgs> handler) =>
        global::ABI.Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Input.DragDrop.DragDropManager, global::Microsoft.UI.Input.DragDrop.DropOperationTargetRequestedEventArgs>.CreateMarshaler2(handler);

        protected override global::ABI.WinRT.Interop.EventSourceState<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Input.DragDrop.DragDropManager, global::Microsoft.UI.Input.DragDrop.DropOperationTargetRequestedEventArgs>> CreateEventSourceState() =>
        new EventState(ObjectReference.ThisPtr, Index);

        [global::WinRT.WinRTExposedType]
        private sealed class EventState : global::ABI.WinRT.Interop.EventSourceState<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Input.DragDrop.DragDropManager, global::Microsoft.UI.Input.DragDrop.DropOperationTargetRequestedEventArgs>>
        {
            public EventState(System.IntPtr obj, int index)
            : base(obj, index)
            {
            }

            protected override global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Input.DragDrop.DragDropManager, global::Microsoft.UI.Input.DragDrop.DropOperationTargetRequestedEventArgs> GetEventInvoke()
            {
                return (global::Microsoft.UI.Input.DragDrop.DragDropManager sender, global::Microsoft.UI.Input.DragDrop.DropOperationTargetRequestedEventArgs args) =>
                {
                    var targetDelegate = TargetDelegate;
                    if (targetDelegate is null)
                    {
                        return ;
                    }
                    targetDelegate.Invoke(sender, args);
                };
            }
        }
    }

    internal sealed unsafe class _EventSource_global__Microsoft_UI_Xaml_Controls_SectionsInViewChangedEventHandler : global::ABI.WinRT.Interop.EventSource<global::Microsoft.UI.Xaml.Controls.SectionsInViewChangedEventHandler>
    {


        internal _EventSource_global__Microsoft_UI_Xaml_Controls_SectionsInViewChangedEventHandler(IObjectReference obj,
        delegate* unmanaged[Stdcall]<System.IntPtr, System.IntPtr, WinRT.EventRegistrationToken*, int> addHandler,
        delegate* unmanaged[Stdcall]<System.IntPtr, WinRT.EventRegistrationToken, int> removeHandler, int index) : base(obj, addHandler, removeHandler, index)
        {

        }

        protected override ObjectReferenceValue CreateMarshaler(global::Microsoft.UI.Xaml.Controls.SectionsInViewChangedEventHandler handler) =>
        global::ABI.Microsoft.UI.Xaml.Controls.SectionsInViewChangedEventHandler.CreateMarshaler2(handler);

        protected override global::ABI.WinRT.Interop.EventSourceState<global::Microsoft.UI.Xaml.Controls.SectionsInViewChangedEventHandler> CreateEventSourceState() =>
        new EventState(ObjectReference.ThisPtr, Index);

        [global::WinRT.WinRTExposedType]
        private sealed class EventState : global::ABI.WinRT.Interop.EventSourceState<global::Microsoft.UI.Xaml.Controls.SectionsInViewChangedEventHandler>
        {
            public EventState(System.IntPtr obj, int index)
            : base(obj, index)
            {
            }

            protected override global::Microsoft.UI.Xaml.Controls.SectionsInViewChangedEventHandler GetEventInvoke()
            {
                return (object sender, global::Microsoft.UI.Xaml.Controls.SectionsInViewChangedEventArgs e) =>
                {
                    var targetDelegate = TargetDelegate;
                    if (targetDelegate is null)
                    {
                        return ;
                    }
                    targetDelegate.Invoke(sender, e);
                };
            }
        }
    }

    internal sealed unsafe class _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_UI_Input_GestureRecognizer__global__Microsoft_UI_Input_ManipulationCompletedEventArgs_ : global::ABI.WinRT.Interop.EventSource<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Input.GestureRecognizer, global::Microsoft.UI.Input.ManipulationCompletedEventArgs>>
    {
        private static readonly bool initialized = global::WinRT.GenericTypeInstantiations.Windows_Foundation_TypedEventHandler_2_Microsoft_UI_Input_GestureRecognizer__Microsoft_UI_Input_ManipulationCompletedEventArgs.EnsureInitialized();

        internal _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_UI_Input_GestureRecognizer__global__Microsoft_UI_Input_ManipulationCompletedEventArgs_(IObjectReference obj,
        delegate* unmanaged[Stdcall]<System.IntPtr, System.IntPtr, WinRT.EventRegistrationToken*, int> addHandler,
        delegate* unmanaged[Stdcall]<System.IntPtr, WinRT.EventRegistrationToken, int> removeHandler, int index) : base(obj, addHandler, removeHandler, index)
        {
            _ = initialized;
        }

        protected override ObjectReferenceValue CreateMarshaler(global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Input.GestureRecognizer, global::Microsoft.UI.Input.ManipulationCompletedEventArgs> handler) =>
        global::ABI.Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Input.GestureRecognizer, global::Microsoft.UI.Input.ManipulationCompletedEventArgs>.CreateMarshaler2(handler);

        protected override global::ABI.WinRT.Interop.EventSourceState<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Input.GestureRecognizer, global::Microsoft.UI.Input.ManipulationCompletedEventArgs>> CreateEventSourceState() =>
        new EventState(ObjectReference.ThisPtr, Index);

        [global::WinRT.WinRTExposedType]
        private sealed class EventState : global::ABI.WinRT.Interop.EventSourceState<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Input.GestureRecognizer, global::Microsoft.UI.Input.ManipulationCompletedEventArgs>>
        {
            public EventState(System.IntPtr obj, int index)
            : base(obj, index)
            {
            }

            protected override global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Input.GestureRecognizer, global::Microsoft.UI.Input.ManipulationCompletedEventArgs> GetEventInvoke()
            {
                return (global::Microsoft.UI.Input.GestureRecognizer sender, global::Microsoft.UI.Input.ManipulationCompletedEventArgs args) =>
                {
                    var targetDelegate = TargetDelegate;
                    if (targetDelegate is null)
                    {
                        return ;
                    }
                    targetDelegate.Invoke(sender, args);
                };
            }
        }
    }

    internal sealed unsafe class _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_UI_Xaml_Controls_Primitives_ScrollPresenter__global__Microsoft_UI_Xaml_Controls_ScrollingScrollAnimationStartingEventArgs_ : global::ABI.WinRT.Interop.EventSource<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.Primitives.ScrollPresenter, global::Microsoft.UI.Xaml.Controls.ScrollingScrollAnimationStartingEventArgs>>
    {
        private static readonly bool initialized = global::WinRT.GenericTypeInstantiations.Windows_Foundation_TypedEventHandler_2_Microsoft_UI_Xaml_Controls_Primitives_ScrollPresenter__Microsoft_UI_Xaml_Controls_ScrollingScrollAnimationStartingEventArgs.EnsureInitialized();

        internal _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_UI_Xaml_Controls_Primitives_ScrollPresenter__global__Microsoft_UI_Xaml_Controls_ScrollingScrollAnimationStartingEventArgs_(IObjectReference obj,
        delegate* unmanaged[Stdcall]<System.IntPtr, System.IntPtr, WinRT.EventRegistrationToken*, int> addHandler,
        delegate* unmanaged[Stdcall]<System.IntPtr, WinRT.EventRegistrationToken, int> removeHandler, int index) : base(obj, addHandler, removeHandler, index)
        {
            _ = initialized;
        }

        protected override ObjectReferenceValue CreateMarshaler(global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.Primitives.ScrollPresenter, global::Microsoft.UI.Xaml.Controls.ScrollingScrollAnimationStartingEventArgs> handler) =>
        global::ABI.Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.Primitives.ScrollPresenter, global::Microsoft.UI.Xaml.Controls.ScrollingScrollAnimationStartingEventArgs>.CreateMarshaler2(handler);

        protected override global::ABI.WinRT.Interop.EventSourceState<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.Primitives.ScrollPresenter, global::Microsoft.UI.Xaml.Controls.ScrollingScrollAnimationStartingEventArgs>> CreateEventSourceState() =>
        new EventState(ObjectReference.ThisPtr, Index);

        [global::WinRT.WinRTExposedType]
        private sealed class EventState : global::ABI.WinRT.Interop.EventSourceState<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.Primitives.ScrollPresenter, global::Microsoft.UI.Xaml.Controls.ScrollingScrollAnimationStartingEventArgs>>
        {
            public EventState(System.IntPtr obj, int index)
            : base(obj, index)
            {
            }

            protected override global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.Primitives.ScrollPresenter, global::Microsoft.UI.Xaml.Controls.ScrollingScrollAnimationStartingEventArgs> GetEventInvoke()
            {
                return (global::Microsoft.UI.Xaml.Controls.Primitives.ScrollPresenter sender, global::Microsoft.UI.Xaml.Controls.ScrollingScrollAnimationStartingEventArgs args) =>
                {
                    var targetDelegate = TargetDelegate;
                    if (targetDelegate is null)
                    {
                        return ;
                    }
                    targetDelegate.Invoke(sender, args);
                };
            }
        }
    }

    internal sealed unsafe class _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_UI_Input_InputKeyboardSource__global__Microsoft_UI_Input_KeyEventArgs_ : global::ABI.WinRT.Interop.EventSource<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Input.InputKeyboardSource, global::Microsoft.UI.Input.KeyEventArgs>>
    {
        private static readonly bool initialized = global::WinRT.GenericTypeInstantiations.Windows_Foundation_TypedEventHandler_2_Microsoft_UI_Input_InputKeyboardSource__Microsoft_UI_Input_KeyEventArgs.EnsureInitialized();

        internal _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_UI_Input_InputKeyboardSource__global__Microsoft_UI_Input_KeyEventArgs_(IObjectReference obj,
        delegate* unmanaged[Stdcall]<System.IntPtr, System.IntPtr, WinRT.EventRegistrationToken*, int> addHandler,
        delegate* unmanaged[Stdcall]<System.IntPtr, WinRT.EventRegistrationToken, int> removeHandler, int index) : base(obj, addHandler, removeHandler, index)
        {
            _ = initialized;
        }

        protected override ObjectReferenceValue CreateMarshaler(global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Input.InputKeyboardSource, global::Microsoft.UI.Input.KeyEventArgs> handler) =>
        global::ABI.Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Input.InputKeyboardSource, global::Microsoft.UI.Input.KeyEventArgs>.CreateMarshaler2(handler);

        protected override global::ABI.WinRT.Interop.EventSourceState<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Input.InputKeyboardSource, global::Microsoft.UI.Input.KeyEventArgs>> CreateEventSourceState() =>
        new EventState(ObjectReference.ThisPtr, Index);

        [global::WinRT.WinRTExposedType]
        private sealed class EventState : global::ABI.WinRT.Interop.EventSourceState<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Input.InputKeyboardSource, global::Microsoft.UI.Input.KeyEventArgs>>
        {
            public EventState(System.IntPtr obj, int index)
            : base(obj, index)
            {
            }

            protected override global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Input.InputKeyboardSource, global::Microsoft.UI.Input.KeyEventArgs> GetEventInvoke()
            {
                return (global::Microsoft.UI.Input.InputKeyboardSource sender, global::Microsoft.UI.Input.KeyEventArgs args) =>
                {
                    var targetDelegate = TargetDelegate;
                    if (targetDelegate is null)
                    {
                        return ;
                    }
                    targetDelegate.Invoke(sender, args);
                };
            }
        }
    }

    internal sealed unsafe class _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_UI_Xaml_Controls_RichEditBox__global__Microsoft_UI_Xaml_Controls_TextControlCopyingToClipboardEventArgs_ : global::ABI.WinRT.Interop.EventSource<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.RichEditBox, global::Microsoft.UI.Xaml.Controls.TextControlCopyingToClipboardEventArgs>>
    {
        private static readonly bool initialized = global::WinRT.GenericTypeInstantiations.Windows_Foundation_TypedEventHandler_2_Microsoft_UI_Xaml_Controls_RichEditBox__Microsoft_UI_Xaml_Controls_TextControlCopyingToClipboardEventArgs.EnsureInitialized();

        internal _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_UI_Xaml_Controls_RichEditBox__global__Microsoft_UI_Xaml_Controls_TextControlCopyingToClipboardEventArgs_(IObjectReference obj,
        delegate* unmanaged[Stdcall]<System.IntPtr, System.IntPtr, WinRT.EventRegistrationToken*, int> addHandler,
        delegate* unmanaged[Stdcall]<System.IntPtr, WinRT.EventRegistrationToken, int> removeHandler, int index) : base(obj, addHandler, removeHandler, index)
        {
            _ = initialized;
        }

        protected override ObjectReferenceValue CreateMarshaler(global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.RichEditBox, global::Microsoft.UI.Xaml.Controls.TextControlCopyingToClipboardEventArgs> handler) =>
        global::ABI.Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.RichEditBox, global::Microsoft.UI.Xaml.Controls.TextControlCopyingToClipboardEventArgs>.CreateMarshaler2(handler);

        protected override global::ABI.WinRT.Interop.EventSourceState<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.RichEditBox, global::Microsoft.UI.Xaml.Controls.TextControlCopyingToClipboardEventArgs>> CreateEventSourceState() =>
        new EventState(ObjectReference.ThisPtr, Index);

        [global::WinRT.WinRTExposedType]
        private sealed class EventState : global::ABI.WinRT.Interop.EventSourceState<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.RichEditBox, global::Microsoft.UI.Xaml.Controls.TextControlCopyingToClipboardEventArgs>>
        {
            public EventState(System.IntPtr obj, int index)
            : base(obj, index)
            {
            }

            protected override global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.RichEditBox, global::Microsoft.UI.Xaml.Controls.TextControlCopyingToClipboardEventArgs> GetEventInvoke()
            {
                return (global::Microsoft.UI.Xaml.Controls.RichEditBox sender, global::Microsoft.UI.Xaml.Controls.TextControlCopyingToClipboardEventArgs args) =>
                {
                    var targetDelegate = TargetDelegate;
                    if (targetDelegate is null)
                    {
                        return ;
                    }
                    targetDelegate.Invoke(sender, args);
                };
            }
        }
    }

    internal sealed unsafe class _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_UI_Xaml_Controls_WebView2__global__Microsoft_UI_Xaml_Controls_CoreWebView2InitializedEventArgs_ : global::ABI.WinRT.Interop.EventSource<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.WebView2, global::Microsoft.UI.Xaml.Controls.CoreWebView2InitializedEventArgs>>
    {
        private static readonly bool initialized = global::WinRT.GenericTypeInstantiations.Windows_Foundation_TypedEventHandler_2_Microsoft_UI_Xaml_Controls_WebView2__Microsoft_UI_Xaml_Controls_CoreWebView2InitializedEventArgs.EnsureInitialized();

        internal _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_UI_Xaml_Controls_WebView2__global__Microsoft_UI_Xaml_Controls_CoreWebView2InitializedEventArgs_(IObjectReference obj,
        delegate* unmanaged[Stdcall]<System.IntPtr, System.IntPtr, WinRT.EventRegistrationToken*, int> addHandler,
        delegate* unmanaged[Stdcall]<System.IntPtr, WinRT.EventRegistrationToken, int> removeHandler, int index) : base(obj, addHandler, removeHandler, index)
        {
            _ = initialized;
        }

        protected override ObjectReferenceValue CreateMarshaler(global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.WebView2, global::Microsoft.UI.Xaml.Controls.CoreWebView2InitializedEventArgs> handler) =>
        global::ABI.Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.WebView2, global::Microsoft.UI.Xaml.Controls.CoreWebView2InitializedEventArgs>.CreateMarshaler2(handler);

        protected override global::ABI.WinRT.Interop.EventSourceState<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.WebView2, global::Microsoft.UI.Xaml.Controls.CoreWebView2InitializedEventArgs>> CreateEventSourceState() =>
        new EventState(ObjectReference.ThisPtr, Index);

        [global::WinRT.WinRTExposedType]
        private sealed class EventState : global::ABI.WinRT.Interop.EventSourceState<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.WebView2, global::Microsoft.UI.Xaml.Controls.CoreWebView2InitializedEventArgs>>
        {
            public EventState(System.IntPtr obj, int index)
            : base(obj, index)
            {
            }

            protected override global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.WebView2, global::Microsoft.UI.Xaml.Controls.CoreWebView2InitializedEventArgs> GetEventInvoke()
            {
                return (global::Microsoft.UI.Xaml.Controls.WebView2 sender, global::Microsoft.UI.Xaml.Controls.CoreWebView2InitializedEventArgs args) =>
                {
                    var targetDelegate = TargetDelegate;
                    if (targetDelegate is null)
                    {
                        return ;
                    }
                    targetDelegate.Invoke(sender, args);
                };
            }
        }
    }

    internal sealed unsafe class _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_UI_Xaml_Controls_Primitives_IScrollController__global__Microsoft_UI_Xaml_Controls_Primitives_ScrollControllerScrollToRequestedEventArgs_ : global::ABI.WinRT.Interop.EventSource<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.Primitives.IScrollController, global::Microsoft.UI.Xaml.Controls.Primitives.ScrollControllerScrollToRequestedEventArgs>>
    {
        private static readonly bool initialized = global::WinRT.GenericTypeInstantiations.Windows_Foundation_TypedEventHandler_2_Microsoft_UI_Xaml_Controls_Primitives_IScrollController__Microsoft_UI_Xaml_Controls_Primitives_ScrollControllerScrollToRequestedEventArgs.EnsureInitialized();

        internal _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_UI_Xaml_Controls_Primitives_IScrollController__global__Microsoft_UI_Xaml_Controls_Primitives_ScrollControllerScrollToRequestedEventArgs_(IObjectReference obj,
        delegate* unmanaged[Stdcall]<System.IntPtr, System.IntPtr, WinRT.EventRegistrationToken*, int> addHandler,
        delegate* unmanaged[Stdcall]<System.IntPtr, WinRT.EventRegistrationToken, int> removeHandler, int index) : base(obj, addHandler, removeHandler, index)
        {
            _ = initialized;
        }

        protected override ObjectReferenceValue CreateMarshaler(global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.Primitives.IScrollController, global::Microsoft.UI.Xaml.Controls.Primitives.ScrollControllerScrollToRequestedEventArgs> handler) =>
        global::ABI.Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.Primitives.IScrollController, global::Microsoft.UI.Xaml.Controls.Primitives.ScrollControllerScrollToRequestedEventArgs>.CreateMarshaler2(handler);

        protected override global::ABI.WinRT.Interop.EventSourceState<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.Primitives.IScrollController, global::Microsoft.UI.Xaml.Controls.Primitives.ScrollControllerScrollToRequestedEventArgs>> CreateEventSourceState() =>
        new EventState(ObjectReference.ThisPtr, Index);

        [global::WinRT.WinRTExposedType]
        private sealed class EventState : global::ABI.WinRT.Interop.EventSourceState<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.Primitives.IScrollController, global::Microsoft.UI.Xaml.Controls.Primitives.ScrollControllerScrollToRequestedEventArgs>>
        {
            public EventState(System.IntPtr obj, int index)
            : base(obj, index)
            {
            }

            protected override global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.Primitives.IScrollController, global::Microsoft.UI.Xaml.Controls.Primitives.ScrollControllerScrollToRequestedEventArgs> GetEventInvoke()
            {
                return (global::Microsoft.UI.Xaml.Controls.Primitives.IScrollController sender, global::Microsoft.UI.Xaml.Controls.Primitives.ScrollControllerScrollToRequestedEventArgs args) =>
                {
                    var targetDelegate = TargetDelegate;
                    if (targetDelegate is null)
                    {
                        return ;
                    }
                    targetDelegate.Invoke(sender, args);
                };
            }
        }
    }

    internal sealed unsafe class _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_Web_WebView2_Core_CoreWebView2__global__Microsoft_Web_WebView2_Core_CoreWebView2FrameCreatedEventArgs_ : global::ABI.WinRT.Interop.EventSource<global::Windows.Foundation.TypedEventHandler<global::Microsoft.Web.WebView2.Core.CoreWebView2, global::Microsoft.Web.WebView2.Core.CoreWebView2FrameCreatedEventArgs>>
    {
        private static readonly bool initialized = global::WinRT.GenericTypeInstantiations.Windows_Foundation_TypedEventHandler_2_Microsoft_Web_WebView2_Core_CoreWebView2__Microsoft_Web_WebView2_Core_CoreWebView2FrameCreatedEventArgs.EnsureInitialized();

        internal _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_Web_WebView2_Core_CoreWebView2__global__Microsoft_Web_WebView2_Core_CoreWebView2FrameCreatedEventArgs_(IObjectReference obj,
        delegate* unmanaged[Stdcall]<System.IntPtr, System.IntPtr, WinRT.EventRegistrationToken*, int> addHandler,
        delegate* unmanaged[Stdcall]<System.IntPtr, WinRT.EventRegistrationToken, int> removeHandler, int index) : base(obj, addHandler, removeHandler, index)
        {
            _ = initialized;
        }

        protected override ObjectReferenceValue CreateMarshaler(global::Windows.Foundation.TypedEventHandler<global::Microsoft.Web.WebView2.Core.CoreWebView2, global::Microsoft.Web.WebView2.Core.CoreWebView2FrameCreatedEventArgs> handler) =>
        global::ABI.Windows.Foundation.TypedEventHandler<global::Microsoft.Web.WebView2.Core.CoreWebView2, global::Microsoft.Web.WebView2.Core.CoreWebView2FrameCreatedEventArgs>.CreateMarshaler2(handler);

        protected override global::ABI.WinRT.Interop.EventSourceState<global::Windows.Foundation.TypedEventHandler<global::Microsoft.Web.WebView2.Core.CoreWebView2, global::Microsoft.Web.WebView2.Core.CoreWebView2FrameCreatedEventArgs>> CreateEventSourceState() =>
        new EventState(ObjectReference.ThisPtr, Index);

        [global::WinRT.WinRTExposedType]
        private sealed class EventState : global::ABI.WinRT.Interop.EventSourceState<global::Windows.Foundation.TypedEventHandler<global::Microsoft.Web.WebView2.Core.CoreWebView2, global::Microsoft.Web.WebView2.Core.CoreWebView2FrameCreatedEventArgs>>
        {
            public EventState(System.IntPtr obj, int index)
            : base(obj, index)
            {
            }

            protected override global::Windows.Foundation.TypedEventHandler<global::Microsoft.Web.WebView2.Core.CoreWebView2, global::Microsoft.Web.WebView2.Core.CoreWebView2FrameCreatedEventArgs> GetEventInvoke()
            {
                return (global::Microsoft.Web.WebView2.Core.CoreWebView2 sender, global::Microsoft.Web.WebView2.Core.CoreWebView2FrameCreatedEventArgs args) =>
                {
                    var targetDelegate = TargetDelegate;
                    if (targetDelegate is null)
                    {
                        return ;
                    }
                    targetDelegate.Invoke(sender, args);
                };
            }
        }
    }

    internal sealed unsafe class _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_UI_Xaml_Controls_AutoSuggestBox__global__Microsoft_UI_Xaml_Controls_AutoSuggestBoxTextChangedEventArgs_ : global::ABI.WinRT.Interop.EventSource<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.AutoSuggestBox, global::Microsoft.UI.Xaml.Controls.AutoSuggestBoxTextChangedEventArgs>>
    {
        private static readonly bool initialized = global::WinRT.GenericTypeInstantiations.Windows_Foundation_TypedEventHandler_2_Microsoft_UI_Xaml_Controls_AutoSuggestBox__Microsoft_UI_Xaml_Controls_AutoSuggestBoxTextChangedEventArgs.EnsureInitialized();

        internal _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_UI_Xaml_Controls_AutoSuggestBox__global__Microsoft_UI_Xaml_Controls_AutoSuggestBoxTextChangedEventArgs_(IObjectReference obj,
        delegate* unmanaged[Stdcall]<System.IntPtr, System.IntPtr, WinRT.EventRegistrationToken*, int> addHandler,
        delegate* unmanaged[Stdcall]<System.IntPtr, WinRT.EventRegistrationToken, int> removeHandler, int index) : base(obj, addHandler, removeHandler, index)
        {
            _ = initialized;
        }

        protected override ObjectReferenceValue CreateMarshaler(global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.AutoSuggestBox, global::Microsoft.UI.Xaml.Controls.AutoSuggestBoxTextChangedEventArgs> handler) =>
        global::ABI.Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.AutoSuggestBox, global::Microsoft.UI.Xaml.Controls.AutoSuggestBoxTextChangedEventArgs>.CreateMarshaler2(handler);

        protected override global::ABI.WinRT.Interop.EventSourceState<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.AutoSuggestBox, global::Microsoft.UI.Xaml.Controls.AutoSuggestBoxTextChangedEventArgs>> CreateEventSourceState() =>
        new EventState(ObjectReference.ThisPtr, Index);

        [global::WinRT.WinRTExposedType]
        private sealed class EventState : global::ABI.WinRT.Interop.EventSourceState<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.AutoSuggestBox, global::Microsoft.UI.Xaml.Controls.AutoSuggestBoxTextChangedEventArgs>>
        {
            public EventState(System.IntPtr obj, int index)
            : base(obj, index)
            {
            }

            protected override global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.AutoSuggestBox, global::Microsoft.UI.Xaml.Controls.AutoSuggestBoxTextChangedEventArgs> GetEventInvoke()
            {
                return (global::Microsoft.UI.Xaml.Controls.AutoSuggestBox sender, global::Microsoft.UI.Xaml.Controls.AutoSuggestBoxTextChangedEventArgs args) =>
                {
                    var targetDelegate = TargetDelegate;
                    if (targetDelegate is null)
                    {
                        return ;
                    }
                    targetDelegate.Invoke(sender, args);
                };
            }
        }
    }

    internal sealed unsafe class _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_UI_Xaml_Controls_Primitives_FlyoutBase__global__Microsoft_UI_Xaml_Controls_Primitives_FlyoutBaseClosingEventArgs_ : global::ABI.WinRT.Interop.EventSource<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.Primitives.FlyoutBase, global::Microsoft.UI.Xaml.Controls.Primitives.FlyoutBaseClosingEventArgs>>
    {
        private static readonly bool initialized = global::WinRT.GenericTypeInstantiations.Windows_Foundation_TypedEventHandler_2_Microsoft_UI_Xaml_Controls_Primitives_FlyoutBase__Microsoft_UI_Xaml_Controls_Primitives_FlyoutBaseClosingEventArgs.EnsureInitialized();

        internal _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_UI_Xaml_Controls_Primitives_FlyoutBase__global__Microsoft_UI_Xaml_Controls_Primitives_FlyoutBaseClosingEventArgs_(IObjectReference obj,
        delegate* unmanaged[Stdcall]<System.IntPtr, System.IntPtr, WinRT.EventRegistrationToken*, int> addHandler,
        delegate* unmanaged[Stdcall]<System.IntPtr, WinRT.EventRegistrationToken, int> removeHandler, int index) : base(obj, addHandler, removeHandler, index)
        {
            _ = initialized;
        }

        protected override ObjectReferenceValue CreateMarshaler(global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.Primitives.FlyoutBase, global::Microsoft.UI.Xaml.Controls.Primitives.FlyoutBaseClosingEventArgs> handler) =>
        global::ABI.Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.Primitives.FlyoutBase, global::Microsoft.UI.Xaml.Controls.Primitives.FlyoutBaseClosingEventArgs>.CreateMarshaler2(handler);

        protected override global::ABI.WinRT.Interop.EventSourceState<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.Primitives.FlyoutBase, global::Microsoft.UI.Xaml.Controls.Primitives.FlyoutBaseClosingEventArgs>> CreateEventSourceState() =>
        new EventState(ObjectReference.ThisPtr, Index);

        [global::WinRT.WinRTExposedType]
        private sealed class EventState : global::ABI.WinRT.Interop.EventSourceState<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.Primitives.FlyoutBase, global::Microsoft.UI.Xaml.Controls.Primitives.FlyoutBaseClosingEventArgs>>
        {
            public EventState(System.IntPtr obj, int index)
            : base(obj, index)
            {
            }

            protected override global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.Primitives.FlyoutBase, global::Microsoft.UI.Xaml.Controls.Primitives.FlyoutBaseClosingEventArgs> GetEventInvoke()
            {
                return (global::Microsoft.UI.Xaml.Controls.Primitives.FlyoutBase sender, global::Microsoft.UI.Xaml.Controls.Primitives.FlyoutBaseClosingEventArgs args) =>
                {
                    var targetDelegate = TargetDelegate;
                    if (targetDelegate is null)
                    {
                        return ;
                    }
                    targetDelegate.Invoke(sender, args);
                };
            }
        }
    }

    internal sealed unsafe class _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_UI_Xaml_Controls_RefreshVisualizer__global__Microsoft_UI_Xaml_Controls_RefreshStateChangedEventArgs_ : global::ABI.WinRT.Interop.EventSource<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.RefreshVisualizer, global::Microsoft.UI.Xaml.Controls.RefreshStateChangedEventArgs>>
    {
        private static readonly bool initialized = global::WinRT.GenericTypeInstantiations.Windows_Foundation_TypedEventHandler_2_Microsoft_UI_Xaml_Controls_RefreshVisualizer__Microsoft_UI_Xaml_Controls_RefreshStateChangedEventArgs.EnsureInitialized();

        internal _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_UI_Xaml_Controls_RefreshVisualizer__global__Microsoft_UI_Xaml_Controls_RefreshStateChangedEventArgs_(IObjectReference obj,
        delegate* unmanaged[Stdcall]<System.IntPtr, System.IntPtr, WinRT.EventRegistrationToken*, int> addHandler,
        delegate* unmanaged[Stdcall]<System.IntPtr, WinRT.EventRegistrationToken, int> removeHandler, int index) : base(obj, addHandler, removeHandler, index)
        {
            _ = initialized;
        }

        protected override ObjectReferenceValue CreateMarshaler(global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.RefreshVisualizer, global::Microsoft.UI.Xaml.Controls.RefreshStateChangedEventArgs> handler) =>
        global::ABI.Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.RefreshVisualizer, global::Microsoft.UI.Xaml.Controls.RefreshStateChangedEventArgs>.CreateMarshaler2(handler);

        protected override global::ABI.WinRT.Interop.EventSourceState<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.RefreshVisualizer, global::Microsoft.UI.Xaml.Controls.RefreshStateChangedEventArgs>> CreateEventSourceState() =>
        new EventState(ObjectReference.ThisPtr, Index);

        [global::WinRT.WinRTExposedType]
        private sealed class EventState : global::ABI.WinRT.Interop.EventSourceState<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.RefreshVisualizer, global::Microsoft.UI.Xaml.Controls.RefreshStateChangedEventArgs>>
        {
            public EventState(System.IntPtr obj, int index)
            : base(obj, index)
            {
            }

            protected override global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.RefreshVisualizer, global::Microsoft.UI.Xaml.Controls.RefreshStateChangedEventArgs> GetEventInvoke()
            {
                return (global::Microsoft.UI.Xaml.Controls.RefreshVisualizer sender, global::Microsoft.UI.Xaml.Controls.RefreshStateChangedEventArgs args) =>
                {
                    var targetDelegate = TargetDelegate;
                    if (targetDelegate is null)
                    {
                        return ;
                    }
                    targetDelegate.Invoke(sender, args);
                };
            }
        }
    }

    internal sealed unsafe class _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_Web_WebView2_Core_CoreWebView2__object_ : global::ABI.WinRT.Interop.EventSource<global::Windows.Foundation.TypedEventHandler<global::Microsoft.Web.WebView2.Core.CoreWebView2, object>>
    {
        private static readonly bool initialized = global::WinRT.GenericTypeInstantiations.Windows_Foundation_TypedEventHandler_2_Microsoft_Web_WebView2_Core_CoreWebView2__object.EnsureInitialized();

        internal _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_Web_WebView2_Core_CoreWebView2__object_(IObjectReference obj,
        delegate* unmanaged[Stdcall]<System.IntPtr, System.IntPtr, WinRT.EventRegistrationToken*, int> addHandler,
        delegate* unmanaged[Stdcall]<System.IntPtr, WinRT.EventRegistrationToken, int> removeHandler, int index) : base(obj, addHandler, removeHandler, index)
        {
            _ = initialized;
        }

        protected override ObjectReferenceValue CreateMarshaler(global::Windows.Foundation.TypedEventHandler<global::Microsoft.Web.WebView2.Core.CoreWebView2, object> handler) =>
        global::ABI.Windows.Foundation.TypedEventHandler<global::Microsoft.Web.WebView2.Core.CoreWebView2, object>.CreateMarshaler2(handler);

        protected override global::ABI.WinRT.Interop.EventSourceState<global::Windows.Foundation.TypedEventHandler<global::Microsoft.Web.WebView2.Core.CoreWebView2, object>> CreateEventSourceState() =>
        new EventState(ObjectReference.ThisPtr, Index);

        [global::WinRT.WinRTExposedType]
        private sealed class EventState : global::ABI.WinRT.Interop.EventSourceState<global::Windows.Foundation.TypedEventHandler<global::Microsoft.Web.WebView2.Core.CoreWebView2, object>>
        {
            public EventState(System.IntPtr obj, int index)
            : base(obj, index)
            {
            }

            protected override global::Windows.Foundation.TypedEventHandler<global::Microsoft.Web.WebView2.Core.CoreWebView2, object> GetEventInvoke()
            {
                return (global::Microsoft.Web.WebView2.Core.CoreWebView2 sender, object args) =>
                {
                    var targetDelegate = TargetDelegate;
                    if (targetDelegate is null)
                    {
                        return ;
                    }
                    targetDelegate.Invoke(sender, args);
                };
            }
        }
    }

    internal sealed unsafe class _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_Web_WebView2_Core_CoreWebView2__global__Microsoft_Web_WebView2_Core_CoreWebView2SaveFileSecurityCheckStartingEventArgs_ : global::ABI.WinRT.Interop.EventSource<global::Windows.Foundation.TypedEventHandler<global::Microsoft.Web.WebView2.Core.CoreWebView2, global::Microsoft.Web.WebView2.Core.CoreWebView2SaveFileSecurityCheckStartingEventArgs>>
    {
        private static readonly bool initialized = global::WinRT.GenericTypeInstantiations.Windows_Foundation_TypedEventHandler_2_Microsoft_Web_WebView2_Core_CoreWebView2__Microsoft_Web_WebView2_Core_CoreWebView2SaveFileSecurityCheckStartingEventArgs.EnsureInitialized();

        internal _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_Web_WebView2_Core_CoreWebView2__global__Microsoft_Web_WebView2_Core_CoreWebView2SaveFileSecurityCheckStartingEventArgs_(IObjectReference obj,
        delegate* unmanaged[Stdcall]<System.IntPtr, System.IntPtr, WinRT.EventRegistrationToken*, int> addHandler,
        delegate* unmanaged[Stdcall]<System.IntPtr, WinRT.EventRegistrationToken, int> removeHandler, int index) : base(obj, addHandler, removeHandler, index)
        {
            _ = initialized;
        }

        protected override ObjectReferenceValue CreateMarshaler(global::Windows.Foundation.TypedEventHandler<global::Microsoft.Web.WebView2.Core.CoreWebView2, global::Microsoft.Web.WebView2.Core.CoreWebView2SaveFileSecurityCheckStartingEventArgs> handler) =>
        global::ABI.Windows.Foundation.TypedEventHandler<global::Microsoft.Web.WebView2.Core.CoreWebView2, global::Microsoft.Web.WebView2.Core.CoreWebView2SaveFileSecurityCheckStartingEventArgs>.CreateMarshaler2(handler);

        protected override global::ABI.WinRT.Interop.EventSourceState<global::Windows.Foundation.TypedEventHandler<global::Microsoft.Web.WebView2.Core.CoreWebView2, global::Microsoft.Web.WebView2.Core.CoreWebView2SaveFileSecurityCheckStartingEventArgs>> CreateEventSourceState() =>
        new EventState(ObjectReference.ThisPtr, Index);

        [global::WinRT.WinRTExposedType]
        private sealed class EventState : global::ABI.WinRT.Interop.EventSourceState<global::Windows.Foundation.TypedEventHandler<global::Microsoft.Web.WebView2.Core.CoreWebView2, global::Microsoft.Web.WebView2.Core.CoreWebView2SaveFileSecurityCheckStartingEventArgs>>
        {
            public EventState(System.IntPtr obj, int index)
            : base(obj, index)
            {
            }

            protected override global::Windows.Foundation.TypedEventHandler<global::Microsoft.Web.WebView2.Core.CoreWebView2, global::Microsoft.Web.WebView2.Core.CoreWebView2SaveFileSecurityCheckStartingEventArgs> GetEventInvoke()
            {
                return (global::Microsoft.Web.WebView2.Core.CoreWebView2 sender, global::Microsoft.Web.WebView2.Core.CoreWebView2SaveFileSecurityCheckStartingEventArgs args) =>
                {
                    var targetDelegate = TargetDelegate;
                    if (targetDelegate is null)
                    {
                        return ;
                    }
                    targetDelegate.Invoke(sender, args);
                };
            }
        }
    }

    internal sealed unsafe class _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_Web_WebView2_Core_CoreWebView2__global__Microsoft_Web_WebView2_Core_CoreWebView2SourceChangedEventArgs_ : global::ABI.WinRT.Interop.EventSource<global::Windows.Foundation.TypedEventHandler<global::Microsoft.Web.WebView2.Core.CoreWebView2, global::Microsoft.Web.WebView2.Core.CoreWebView2SourceChangedEventArgs>>
    {
        private static readonly bool initialized = global::WinRT.GenericTypeInstantiations.Windows_Foundation_TypedEventHandler_2_Microsoft_Web_WebView2_Core_CoreWebView2__Microsoft_Web_WebView2_Core_CoreWebView2SourceChangedEventArgs.EnsureInitialized();

        internal _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_Web_WebView2_Core_CoreWebView2__global__Microsoft_Web_WebView2_Core_CoreWebView2SourceChangedEventArgs_(IObjectReference obj,
        delegate* unmanaged[Stdcall]<System.IntPtr, System.IntPtr, WinRT.EventRegistrationToken*, int> addHandler,
        delegate* unmanaged[Stdcall]<System.IntPtr, WinRT.EventRegistrationToken, int> removeHandler, int index) : base(obj, addHandler, removeHandler, index)
        {
            _ = initialized;
        }

        protected override ObjectReferenceValue CreateMarshaler(global::Windows.Foundation.TypedEventHandler<global::Microsoft.Web.WebView2.Core.CoreWebView2, global::Microsoft.Web.WebView2.Core.CoreWebView2SourceChangedEventArgs> handler) =>
        global::ABI.Windows.Foundation.TypedEventHandler<global::Microsoft.Web.WebView2.Core.CoreWebView2, global::Microsoft.Web.WebView2.Core.CoreWebView2SourceChangedEventArgs>.CreateMarshaler2(handler);

        protected override global::ABI.WinRT.Interop.EventSourceState<global::Windows.Foundation.TypedEventHandler<global::Microsoft.Web.WebView2.Core.CoreWebView2, global::Microsoft.Web.WebView2.Core.CoreWebView2SourceChangedEventArgs>> CreateEventSourceState() =>
        new EventState(ObjectReference.ThisPtr, Index);

        [global::WinRT.WinRTExposedType]
        private sealed class EventState : global::ABI.WinRT.Interop.EventSourceState<global::Windows.Foundation.TypedEventHandler<global::Microsoft.Web.WebView2.Core.CoreWebView2, global::Microsoft.Web.WebView2.Core.CoreWebView2SourceChangedEventArgs>>
        {
            public EventState(System.IntPtr obj, int index)
            : base(obj, index)
            {
            }

            protected override global::Windows.Foundation.TypedEventHandler<global::Microsoft.Web.WebView2.Core.CoreWebView2, global::Microsoft.Web.WebView2.Core.CoreWebView2SourceChangedEventArgs> GetEventInvoke()
            {
                return (global::Microsoft.Web.WebView2.Core.CoreWebView2 sender, global::Microsoft.Web.WebView2.Core.CoreWebView2SourceChangedEventArgs args) =>
                {
                    var targetDelegate = TargetDelegate;
                    if (targetDelegate is null)
                    {
                        return ;
                    }
                    targetDelegate.Invoke(sender, args);
                };
            }
        }
    }

    internal sealed unsafe class _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_UI_Composition_CompositionGraphicsDevice__global__Microsoft_UI_Composition_RenderingDeviceReplacedEventArgs_ : global::ABI.WinRT.Interop.EventSource<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Composition.CompositionGraphicsDevice, global::Microsoft.UI.Composition.RenderingDeviceReplacedEventArgs>>
    {
        private static readonly bool initialized = global::WinRT.GenericTypeInstantiations.Windows_Foundation_TypedEventHandler_2_Microsoft_UI_Composition_CompositionGraphicsDevice__Microsoft_UI_Composition_RenderingDeviceReplacedEventArgs.EnsureInitialized();

        internal _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_UI_Composition_CompositionGraphicsDevice__global__Microsoft_UI_Composition_RenderingDeviceReplacedEventArgs_(IObjectReference obj,
        delegate* unmanaged[Stdcall]<System.IntPtr, System.IntPtr, WinRT.EventRegistrationToken*, int> addHandler,
        delegate* unmanaged[Stdcall]<System.IntPtr, WinRT.EventRegistrationToken, int> removeHandler, int index) : base(obj, addHandler, removeHandler, index)
        {
            _ = initialized;
        }

        protected override ObjectReferenceValue CreateMarshaler(global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Composition.CompositionGraphicsDevice, global::Microsoft.UI.Composition.RenderingDeviceReplacedEventArgs> handler) =>
        global::ABI.Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Composition.CompositionGraphicsDevice, global::Microsoft.UI.Composition.RenderingDeviceReplacedEventArgs>.CreateMarshaler2(handler);

        protected override global::ABI.WinRT.Interop.EventSourceState<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Composition.CompositionGraphicsDevice, global::Microsoft.UI.Composition.RenderingDeviceReplacedEventArgs>> CreateEventSourceState() =>
        new EventState(ObjectReference.ThisPtr, Index);

        [global::WinRT.WinRTExposedType]
        private sealed class EventState : global::ABI.WinRT.Interop.EventSourceState<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Composition.CompositionGraphicsDevice, global::Microsoft.UI.Composition.RenderingDeviceReplacedEventArgs>>
        {
            public EventState(System.IntPtr obj, int index)
            : base(obj, index)
            {
            }

            protected override global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Composition.CompositionGraphicsDevice, global::Microsoft.UI.Composition.RenderingDeviceReplacedEventArgs> GetEventInvoke()
            {
                return (global::Microsoft.UI.Composition.CompositionGraphicsDevice sender, global::Microsoft.UI.Composition.RenderingDeviceReplacedEventArgs args) =>
                {
                    var targetDelegate = TargetDelegate;
                    if (targetDelegate is null)
                    {
                        return ;
                    }
                    targetDelegate.Invoke(sender, args);
                };
            }
        }
    }

    internal sealed unsafe class _EventSource_global__Microsoft_UI_Xaml_Controls_SelectionChangedEventHandler : global::ABI.WinRT.Interop.EventSource<global::Microsoft.UI.Xaml.Controls.SelectionChangedEventHandler>
    {


        internal _EventSource_global__Microsoft_UI_Xaml_Controls_SelectionChangedEventHandler(IObjectReference obj,
        delegate* unmanaged[Stdcall]<System.IntPtr, System.IntPtr, WinRT.EventRegistrationToken*, int> addHandler,
        delegate* unmanaged[Stdcall]<System.IntPtr, WinRT.EventRegistrationToken, int> removeHandler, int index) : base(obj, addHandler, removeHandler, index)
        {

        }

        protected override ObjectReferenceValue CreateMarshaler(global::Microsoft.UI.Xaml.Controls.SelectionChangedEventHandler handler) =>
        global::ABI.Microsoft.UI.Xaml.Controls.SelectionChangedEventHandler.CreateMarshaler2(handler);

        protected override global::ABI.WinRT.Interop.EventSourceState<global::Microsoft.UI.Xaml.Controls.SelectionChangedEventHandler> CreateEventSourceState() =>
        new EventState(ObjectReference.ThisPtr, Index);

        [global::WinRT.WinRTExposedType]
        private sealed class EventState : global::ABI.WinRT.Interop.EventSourceState<global::Microsoft.UI.Xaml.Controls.SelectionChangedEventHandler>
        {
            public EventState(System.IntPtr obj, int index)
            : base(obj, index)
            {
            }

            protected override global::Microsoft.UI.Xaml.Controls.SelectionChangedEventHandler GetEventInvoke()
            {
                return (object sender, global::Microsoft.UI.Xaml.Controls.SelectionChangedEventArgs e) =>
                {
                    var targetDelegate = TargetDelegate;
                    if (targetDelegate is null)
                    {
                        return ;
                    }
                    targetDelegate.Invoke(sender, e);
                };
            }
        }
    }

    internal sealed unsafe class _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_UI_Xaml_Controls_Primitives_ScrollPresenter__global__Microsoft_UI_Xaml_Controls_ScrollingScrollStartingEventArgs_ : global::ABI.WinRT.Interop.EventSource<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.Primitives.ScrollPresenter, global::Microsoft.UI.Xaml.Controls.ScrollingScrollStartingEventArgs>>
    {
        private static readonly bool initialized = global::WinRT.GenericTypeInstantiations.Windows_Foundation_TypedEventHandler_2_Microsoft_UI_Xaml_Controls_Primitives_ScrollPresenter__Microsoft_UI_Xaml_Controls_ScrollingScrollStartingEventArgs.EnsureInitialized();

        internal _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_UI_Xaml_Controls_Primitives_ScrollPresenter__global__Microsoft_UI_Xaml_Controls_ScrollingScrollStartingEventArgs_(IObjectReference obj,
        delegate* unmanaged[Stdcall]<System.IntPtr, System.IntPtr, WinRT.EventRegistrationToken*, int> addHandler,
        delegate* unmanaged[Stdcall]<System.IntPtr, WinRT.EventRegistrationToken, int> removeHandler, int index) : base(obj, addHandler, removeHandler, index)
        {
            _ = initialized;
        }

        protected override ObjectReferenceValue CreateMarshaler(global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.Primitives.ScrollPresenter, global::Microsoft.UI.Xaml.Controls.ScrollingScrollStartingEventArgs> handler) =>
        global::ABI.Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.Primitives.ScrollPresenter, global::Microsoft.UI.Xaml.Controls.ScrollingScrollStartingEventArgs>.CreateMarshaler2(handler);

        protected override global::ABI.WinRT.Interop.EventSourceState<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.Primitives.ScrollPresenter, global::Microsoft.UI.Xaml.Controls.ScrollingScrollStartingEventArgs>> CreateEventSourceState() =>
        new EventState(ObjectReference.ThisPtr, Index);

        [global::WinRT.WinRTExposedType]
        private sealed class EventState : global::ABI.WinRT.Interop.EventSourceState<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.Primitives.ScrollPresenter, global::Microsoft.UI.Xaml.Controls.ScrollingScrollStartingEventArgs>>
        {
            public EventState(System.IntPtr obj, int index)
            : base(obj, index)
            {
            }

            protected override global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.Primitives.ScrollPresenter, global::Microsoft.UI.Xaml.Controls.ScrollingScrollStartingEventArgs> GetEventInvoke()
            {
                return (global::Microsoft.UI.Xaml.Controls.Primitives.ScrollPresenter sender, global::Microsoft.UI.Xaml.Controls.ScrollingScrollStartingEventArgs args) =>
                {
                    var targetDelegate = TargetDelegate;
                    if (targetDelegate is null)
                    {
                        return ;
                    }
                    targetDelegate.Invoke(sender, args);
                };
            }
        }
    }

    internal sealed unsafe class _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_UI_Input_InputPointerSource__global__Microsoft_UI_Input_PointerEventArgs_ : global::ABI.WinRT.Interop.EventSource<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Input.InputPointerSource, global::Microsoft.UI.Input.PointerEventArgs>>
    {
        private static readonly bool initialized = global::WinRT.GenericTypeInstantiations.Windows_Foundation_TypedEventHandler_2_Microsoft_UI_Input_InputPointerSource__Microsoft_UI_Input_PointerEventArgs.EnsureInitialized();

        internal _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_UI_Input_InputPointerSource__global__Microsoft_UI_Input_PointerEventArgs_(IObjectReference obj,
        delegate* unmanaged[Stdcall]<System.IntPtr, System.IntPtr, WinRT.EventRegistrationToken*, int> addHandler,
        delegate* unmanaged[Stdcall]<System.IntPtr, WinRT.EventRegistrationToken, int> removeHandler, int index) : base(obj, addHandler, removeHandler, index)
        {
            _ = initialized;
        }

        protected override ObjectReferenceValue CreateMarshaler(global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Input.InputPointerSource, global::Microsoft.UI.Input.PointerEventArgs> handler) =>
        global::ABI.Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Input.InputPointerSource, global::Microsoft.UI.Input.PointerEventArgs>.CreateMarshaler2(handler);

        protected override global::ABI.WinRT.Interop.EventSourceState<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Input.InputPointerSource, global::Microsoft.UI.Input.PointerEventArgs>> CreateEventSourceState() =>
        new EventState(ObjectReference.ThisPtr, Index);

        [global::WinRT.WinRTExposedType]
        private sealed class EventState : global::ABI.WinRT.Interop.EventSourceState<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Input.InputPointerSource, global::Microsoft.UI.Input.PointerEventArgs>>
        {
            public EventState(System.IntPtr obj, int index)
            : base(obj, index)
            {
            }

            protected override global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Input.InputPointerSource, global::Microsoft.UI.Input.PointerEventArgs> GetEventInvoke()
            {
                return (global::Microsoft.UI.Input.InputPointerSource sender, global::Microsoft.UI.Input.PointerEventArgs args) =>
                {
                    var targetDelegate = TargetDelegate;
                    if (targetDelegate is null)
                    {
                        return ;
                    }
                    targetDelegate.Invoke(sender, args);
                };
            }
        }
    }

    internal sealed unsafe class _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_Web_WebView2_Core_CoreWebView2__global__Microsoft_Web_WebView2_Core_CoreWebView2LaunchingExternalUriSchemeEventArgs_ : global::ABI.WinRT.Interop.EventSource<global::Windows.Foundation.TypedEventHandler<global::Microsoft.Web.WebView2.Core.CoreWebView2, global::Microsoft.Web.WebView2.Core.CoreWebView2LaunchingExternalUriSchemeEventArgs>>
    {
        private static readonly bool initialized = global::WinRT.GenericTypeInstantiations.Windows_Foundation_TypedEventHandler_2_Microsoft_Web_WebView2_Core_CoreWebView2__Microsoft_Web_WebView2_Core_CoreWebView2LaunchingExternalUriSchemeEventArgs.EnsureInitialized();

        internal _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_Web_WebView2_Core_CoreWebView2__global__Microsoft_Web_WebView2_Core_CoreWebView2LaunchingExternalUriSchemeEventArgs_(IObjectReference obj,
        delegate* unmanaged[Stdcall]<System.IntPtr, System.IntPtr, WinRT.EventRegistrationToken*, int> addHandler,
        delegate* unmanaged[Stdcall]<System.IntPtr, WinRT.EventRegistrationToken, int> removeHandler, int index) : base(obj, addHandler, removeHandler, index)
        {
            _ = initialized;
        }

        protected override ObjectReferenceValue CreateMarshaler(global::Windows.Foundation.TypedEventHandler<global::Microsoft.Web.WebView2.Core.CoreWebView2, global::Microsoft.Web.WebView2.Core.CoreWebView2LaunchingExternalUriSchemeEventArgs> handler) =>
        global::ABI.Windows.Foundation.TypedEventHandler<global::Microsoft.Web.WebView2.Core.CoreWebView2, global::Microsoft.Web.WebView2.Core.CoreWebView2LaunchingExternalUriSchemeEventArgs>.CreateMarshaler2(handler);

        protected override global::ABI.WinRT.Interop.EventSourceState<global::Windows.Foundation.TypedEventHandler<global::Microsoft.Web.WebView2.Core.CoreWebView2, global::Microsoft.Web.WebView2.Core.CoreWebView2LaunchingExternalUriSchemeEventArgs>> CreateEventSourceState() =>
        new EventState(ObjectReference.ThisPtr, Index);

        [global::WinRT.WinRTExposedType]
        private sealed class EventState : global::ABI.WinRT.Interop.EventSourceState<global::Windows.Foundation.TypedEventHandler<global::Microsoft.Web.WebView2.Core.CoreWebView2, global::Microsoft.Web.WebView2.Core.CoreWebView2LaunchingExternalUriSchemeEventArgs>>
        {
            public EventState(System.IntPtr obj, int index)
            : base(obj, index)
            {
            }

            protected override global::Windows.Foundation.TypedEventHandler<global::Microsoft.Web.WebView2.Core.CoreWebView2, global::Microsoft.Web.WebView2.Core.CoreWebView2LaunchingExternalUriSchemeEventArgs> GetEventInvoke()
            {
                return (global::Microsoft.Web.WebView2.Core.CoreWebView2 sender, global::Microsoft.Web.WebView2.Core.CoreWebView2LaunchingExternalUriSchemeEventArgs args) =>
                {
                    var targetDelegate = TargetDelegate;
                    if (targetDelegate is null)
                    {
                        return ;
                    }
                    targetDelegate.Invoke(sender, args);
                };
            }
        }
    }

    internal sealed unsafe class _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_UI_Xaml_Controls_Pivot__global__Microsoft_UI_Xaml_Controls_PivotItemEventArgs_ : global::ABI.WinRT.Interop.EventSource<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.Pivot, global::Microsoft.UI.Xaml.Controls.PivotItemEventArgs>>
    {
        private static readonly bool initialized = global::WinRT.GenericTypeInstantiations.Windows_Foundation_TypedEventHandler_2_Microsoft_UI_Xaml_Controls_Pivot__Microsoft_UI_Xaml_Controls_PivotItemEventArgs.EnsureInitialized();

        internal _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_UI_Xaml_Controls_Pivot__global__Microsoft_UI_Xaml_Controls_PivotItemEventArgs_(IObjectReference obj,
        delegate* unmanaged[Stdcall]<System.IntPtr, System.IntPtr, WinRT.EventRegistrationToken*, int> addHandler,
        delegate* unmanaged[Stdcall]<System.IntPtr, WinRT.EventRegistrationToken, int> removeHandler, int index) : base(obj, addHandler, removeHandler, index)
        {
            _ = initialized;
        }

        protected override ObjectReferenceValue CreateMarshaler(global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.Pivot, global::Microsoft.UI.Xaml.Controls.PivotItemEventArgs> handler) =>
        global::ABI.Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.Pivot, global::Microsoft.UI.Xaml.Controls.PivotItemEventArgs>.CreateMarshaler2(handler);

        protected override global::ABI.WinRT.Interop.EventSourceState<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.Pivot, global::Microsoft.UI.Xaml.Controls.PivotItemEventArgs>> CreateEventSourceState() =>
        new EventState(ObjectReference.ThisPtr, Index);

        [global::WinRT.WinRTExposedType]
        private sealed class EventState : global::ABI.WinRT.Interop.EventSourceState<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.Pivot, global::Microsoft.UI.Xaml.Controls.PivotItemEventArgs>>
        {
            public EventState(System.IntPtr obj, int index)
            : base(obj, index)
            {
            }

            protected override global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.Pivot, global::Microsoft.UI.Xaml.Controls.PivotItemEventArgs> GetEventInvoke()
            {
                return (global::Microsoft.UI.Xaml.Controls.Pivot sender, global::Microsoft.UI.Xaml.Controls.PivotItemEventArgs args) =>
                {
                    var targetDelegate = TargetDelegate;
                    if (targetDelegate is null)
                    {
                        return ;
                    }
                    targetDelegate.Invoke(sender, args);
                };
            }
        }
    }

    internal sealed unsafe class _EventSource_global__Microsoft_UI_Xaml_Controls_HubSectionHeaderClickEventHandler : global::ABI.WinRT.Interop.EventSource<global::Microsoft.UI.Xaml.Controls.HubSectionHeaderClickEventHandler>
    {


        internal _EventSource_global__Microsoft_UI_Xaml_Controls_HubSectionHeaderClickEventHandler(IObjectReference obj,
        delegate* unmanaged[Stdcall]<System.IntPtr, System.IntPtr, WinRT.EventRegistrationToken*, int> addHandler,
        delegate* unmanaged[Stdcall]<System.IntPtr, WinRT.EventRegistrationToken, int> removeHandler, int index) : base(obj, addHandler, removeHandler, index)
        {

        }

        protected override ObjectReferenceValue CreateMarshaler(global::Microsoft.UI.Xaml.Controls.HubSectionHeaderClickEventHandler handler) =>
        global::ABI.Microsoft.UI.Xaml.Controls.HubSectionHeaderClickEventHandler.CreateMarshaler2(handler);

        protected override global::ABI.WinRT.Interop.EventSourceState<global::Microsoft.UI.Xaml.Controls.HubSectionHeaderClickEventHandler> CreateEventSourceState() =>
        new EventState(ObjectReference.ThisPtr, Index);

        [global::WinRT.WinRTExposedType]
        private sealed class EventState : global::ABI.WinRT.Interop.EventSourceState<global::Microsoft.UI.Xaml.Controls.HubSectionHeaderClickEventHandler>
        {
            public EventState(System.IntPtr obj, int index)
            : base(obj, index)
            {
            }

            protected override global::Microsoft.UI.Xaml.Controls.HubSectionHeaderClickEventHandler GetEventInvoke()
            {
                return (object sender, global::Microsoft.UI.Xaml.Controls.HubSectionHeaderClickEventArgs e) =>
                {
                    var targetDelegate = TargetDelegate;
                    if (targetDelegate is null)
                    {
                        return ;
                    }
                    targetDelegate.Invoke(sender, e);
                };
            }
        }
    }

    internal sealed unsafe class _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_UI_Xaml_Controls_ScrollView__global__Microsoft_UI_Xaml_Controls_ScrollingZoomAnimationStartingEventArgs_ : global::ABI.WinRT.Interop.EventSource<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.ScrollView, global::Microsoft.UI.Xaml.Controls.ScrollingZoomAnimationStartingEventArgs>>
    {
        private static readonly bool initialized = global::WinRT.GenericTypeInstantiations.Windows_Foundation_TypedEventHandler_2_Microsoft_UI_Xaml_Controls_ScrollView__Microsoft_UI_Xaml_Controls_ScrollingZoomAnimationStartingEventArgs.EnsureInitialized();

        internal _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_UI_Xaml_Controls_ScrollView__global__Microsoft_UI_Xaml_Controls_ScrollingZoomAnimationStartingEventArgs_(IObjectReference obj,
        delegate* unmanaged[Stdcall]<System.IntPtr, System.IntPtr, WinRT.EventRegistrationToken*, int> addHandler,
        delegate* unmanaged[Stdcall]<System.IntPtr, WinRT.EventRegistrationToken, int> removeHandler, int index) : base(obj, addHandler, removeHandler, index)
        {
            _ = initialized;
        }

        protected override ObjectReferenceValue CreateMarshaler(global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.ScrollView, global::Microsoft.UI.Xaml.Controls.ScrollingZoomAnimationStartingEventArgs> handler) =>
        global::ABI.Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.ScrollView, global::Microsoft.UI.Xaml.Controls.ScrollingZoomAnimationStartingEventArgs>.CreateMarshaler2(handler);

        protected override global::ABI.WinRT.Interop.EventSourceState<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.ScrollView, global::Microsoft.UI.Xaml.Controls.ScrollingZoomAnimationStartingEventArgs>> CreateEventSourceState() =>
        new EventState(ObjectReference.ThisPtr, Index);

        [global::WinRT.WinRTExposedType]
        private sealed class EventState : global::ABI.WinRT.Interop.EventSourceState<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.ScrollView, global::Microsoft.UI.Xaml.Controls.ScrollingZoomAnimationStartingEventArgs>>
        {
            public EventState(System.IntPtr obj, int index)
            : base(obj, index)
            {
            }

            protected override global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.ScrollView, global::Microsoft.UI.Xaml.Controls.ScrollingZoomAnimationStartingEventArgs> GetEventInvoke()
            {
                return (global::Microsoft.UI.Xaml.Controls.ScrollView sender, global::Microsoft.UI.Xaml.Controls.ScrollingZoomAnimationStartingEventArgs args) =>
                {
                    var targetDelegate = TargetDelegate;
                    if (targetDelegate is null)
                    {
                        return ;
                    }
                    targetDelegate.Invoke(sender, args);
                };
            }
        }
    }

    internal sealed unsafe class _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_Web_WebView2_Core_CoreWebView2__global__Microsoft_Web_WebView2_Core_CoreWebView2ContextMenuRequestedEventArgs_ : global::ABI.WinRT.Interop.EventSource<global::Windows.Foundation.TypedEventHandler<global::Microsoft.Web.WebView2.Core.CoreWebView2, global::Microsoft.Web.WebView2.Core.CoreWebView2ContextMenuRequestedEventArgs>>
    {
        private static readonly bool initialized = global::WinRT.GenericTypeInstantiations.Windows_Foundation_TypedEventHandler_2_Microsoft_Web_WebView2_Core_CoreWebView2__Microsoft_Web_WebView2_Core_CoreWebView2ContextMenuRequestedEventArgs.EnsureInitialized();

        internal _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_Web_WebView2_Core_CoreWebView2__global__Microsoft_Web_WebView2_Core_CoreWebView2ContextMenuRequestedEventArgs_(IObjectReference obj,
        delegate* unmanaged[Stdcall]<System.IntPtr, System.IntPtr, WinRT.EventRegistrationToken*, int> addHandler,
        delegate* unmanaged[Stdcall]<System.IntPtr, WinRT.EventRegistrationToken, int> removeHandler, int index) : base(obj, addHandler, removeHandler, index)
        {
            _ = initialized;
        }

        protected override ObjectReferenceValue CreateMarshaler(global::Windows.Foundation.TypedEventHandler<global::Microsoft.Web.WebView2.Core.CoreWebView2, global::Microsoft.Web.WebView2.Core.CoreWebView2ContextMenuRequestedEventArgs> handler) =>
        global::ABI.Windows.Foundation.TypedEventHandler<global::Microsoft.Web.WebView2.Core.CoreWebView2, global::Microsoft.Web.WebView2.Core.CoreWebView2ContextMenuRequestedEventArgs>.CreateMarshaler2(handler);

        protected override global::ABI.WinRT.Interop.EventSourceState<global::Windows.Foundation.TypedEventHandler<global::Microsoft.Web.WebView2.Core.CoreWebView2, global::Microsoft.Web.WebView2.Core.CoreWebView2ContextMenuRequestedEventArgs>> CreateEventSourceState() =>
        new EventState(ObjectReference.ThisPtr, Index);

        [global::WinRT.WinRTExposedType]
        private sealed class EventState : global::ABI.WinRT.Interop.EventSourceState<global::Windows.Foundation.TypedEventHandler<global::Microsoft.Web.WebView2.Core.CoreWebView2, global::Microsoft.Web.WebView2.Core.CoreWebView2ContextMenuRequestedEventArgs>>
        {
            public EventState(System.IntPtr obj, int index)
            : base(obj, index)
            {
            }

            protected override global::Windows.Foundation.TypedEventHandler<global::Microsoft.Web.WebView2.Core.CoreWebView2, global::Microsoft.Web.WebView2.Core.CoreWebView2ContextMenuRequestedEventArgs> GetEventInvoke()
            {
                return (global::Microsoft.Web.WebView2.Core.CoreWebView2 sender, global::Microsoft.Web.WebView2.Core.CoreWebView2ContextMenuRequestedEventArgs args) =>
                {
                    var targetDelegate = TargetDelegate;
                    if (targetDelegate is null)
                    {
                        return ;
                    }
                    targetDelegate.Invoke(sender, args);
                };
            }
        }
    }

    internal sealed unsafe class _EventSource_global__Microsoft_UI_Xaml_Controls_TextChangedEventHandler : global::ABI.WinRT.Interop.EventSource<global::Microsoft.UI.Xaml.Controls.TextChangedEventHandler>
    {


        internal _EventSource_global__Microsoft_UI_Xaml_Controls_TextChangedEventHandler(IObjectReference obj,
        delegate* unmanaged[Stdcall]<System.IntPtr, System.IntPtr, WinRT.EventRegistrationToken*, int> addHandler,
        delegate* unmanaged[Stdcall]<System.IntPtr, WinRT.EventRegistrationToken, int> removeHandler, int index) : base(obj, addHandler, removeHandler, index)
        {

        }

        protected override ObjectReferenceValue CreateMarshaler(global::Microsoft.UI.Xaml.Controls.TextChangedEventHandler handler) =>
        global::ABI.Microsoft.UI.Xaml.Controls.TextChangedEventHandler.CreateMarshaler2(handler);

        protected override global::ABI.WinRT.Interop.EventSourceState<global::Microsoft.UI.Xaml.Controls.TextChangedEventHandler> CreateEventSourceState() =>
        new EventState(ObjectReference.ThisPtr, Index);

        [global::WinRT.WinRTExposedType]
        private sealed class EventState : global::ABI.WinRT.Interop.EventSourceState<global::Microsoft.UI.Xaml.Controls.TextChangedEventHandler>
        {
            public EventState(System.IntPtr obj, int index)
            : base(obj, index)
            {
            }

            protected override global::Microsoft.UI.Xaml.Controls.TextChangedEventHandler GetEventInvoke()
            {
                return (object sender, global::Microsoft.UI.Xaml.Controls.TextChangedEventArgs e) =>
                {
                    var targetDelegate = TargetDelegate;
                    if (targetDelegate is null)
                    {
                        return ;
                    }
                    targetDelegate.Invoke(sender, e);
                };
            }
        }
    }

    internal sealed unsafe class _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_UI_Input_InputNonClientPointerSource__global__Microsoft_UI_Input_NonClientCaptionTappedEventArgs_ : global::ABI.WinRT.Interop.EventSource<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Input.InputNonClientPointerSource, global::Microsoft.UI.Input.NonClientCaptionTappedEventArgs>>
    {
        private static readonly bool initialized = global::WinRT.GenericTypeInstantiations.Windows_Foundation_TypedEventHandler_2_Microsoft_UI_Input_InputNonClientPointerSource__Microsoft_UI_Input_NonClientCaptionTappedEventArgs.EnsureInitialized();

        internal _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_UI_Input_InputNonClientPointerSource__global__Microsoft_UI_Input_NonClientCaptionTappedEventArgs_(IObjectReference obj,
        delegate* unmanaged[Stdcall]<System.IntPtr, System.IntPtr, WinRT.EventRegistrationToken*, int> addHandler,
        delegate* unmanaged[Stdcall]<System.IntPtr, WinRT.EventRegistrationToken, int> removeHandler, int index) : base(obj, addHandler, removeHandler, index)
        {
            _ = initialized;
        }

        protected override ObjectReferenceValue CreateMarshaler(global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Input.InputNonClientPointerSource, global::Microsoft.UI.Input.NonClientCaptionTappedEventArgs> handler) =>
        global::ABI.Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Input.InputNonClientPointerSource, global::Microsoft.UI.Input.NonClientCaptionTappedEventArgs>.CreateMarshaler2(handler);

        protected override global::ABI.WinRT.Interop.EventSourceState<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Input.InputNonClientPointerSource, global::Microsoft.UI.Input.NonClientCaptionTappedEventArgs>> CreateEventSourceState() =>
        new EventState(ObjectReference.ThisPtr, Index);

        [global::WinRT.WinRTExposedType]
        private sealed class EventState : global::ABI.WinRT.Interop.EventSourceState<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Input.InputNonClientPointerSource, global::Microsoft.UI.Input.NonClientCaptionTappedEventArgs>>
        {
            public EventState(System.IntPtr obj, int index)
            : base(obj, index)
            {
            }

            protected override global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Input.InputNonClientPointerSource, global::Microsoft.UI.Input.NonClientCaptionTappedEventArgs> GetEventInvoke()
            {
                return (global::Microsoft.UI.Input.InputNonClientPointerSource sender, global::Microsoft.UI.Input.NonClientCaptionTappedEventArgs args) =>
                {
                    var targetDelegate = TargetDelegate;
                    if (targetDelegate is null)
                    {
                        return ;
                    }
                    targetDelegate.Invoke(sender, args);
                };
            }
        }
    }

    internal sealed unsafe class _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_UI_Xaml_Controls_TextBox__global__Microsoft_UI_Xaml_Controls_TextControlCopyingToClipboardEventArgs_ : global::ABI.WinRT.Interop.EventSource<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.TextBox, global::Microsoft.UI.Xaml.Controls.TextControlCopyingToClipboardEventArgs>>
    {
        private static readonly bool initialized = global::WinRT.GenericTypeInstantiations.Windows_Foundation_TypedEventHandler_2_Microsoft_UI_Xaml_Controls_TextBox__Microsoft_UI_Xaml_Controls_TextControlCopyingToClipboardEventArgs.EnsureInitialized();

        internal _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_UI_Xaml_Controls_TextBox__global__Microsoft_UI_Xaml_Controls_TextControlCopyingToClipboardEventArgs_(IObjectReference obj,
        delegate* unmanaged[Stdcall]<System.IntPtr, System.IntPtr, WinRT.EventRegistrationToken*, int> addHandler,
        delegate* unmanaged[Stdcall]<System.IntPtr, WinRT.EventRegistrationToken, int> removeHandler, int index) : base(obj, addHandler, removeHandler, index)
        {
            _ = initialized;
        }

        protected override ObjectReferenceValue CreateMarshaler(global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.TextBox, global::Microsoft.UI.Xaml.Controls.TextControlCopyingToClipboardEventArgs> handler) =>
        global::ABI.Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.TextBox, global::Microsoft.UI.Xaml.Controls.TextControlCopyingToClipboardEventArgs>.CreateMarshaler2(handler);

        protected override global::ABI.WinRT.Interop.EventSourceState<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.TextBox, global::Microsoft.UI.Xaml.Controls.TextControlCopyingToClipboardEventArgs>> CreateEventSourceState() =>
        new EventState(ObjectReference.ThisPtr, Index);

        [global::WinRT.WinRTExposedType]
        private sealed class EventState : global::ABI.WinRT.Interop.EventSourceState<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.TextBox, global::Microsoft.UI.Xaml.Controls.TextControlCopyingToClipboardEventArgs>>
        {
            public EventState(System.IntPtr obj, int index)
            : base(obj, index)
            {
            }

            protected override global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.TextBox, global::Microsoft.UI.Xaml.Controls.TextControlCopyingToClipboardEventArgs> GetEventInvoke()
            {
                return (global::Microsoft.UI.Xaml.Controls.TextBox sender, global::Microsoft.UI.Xaml.Controls.TextControlCopyingToClipboardEventArgs args) =>
                {
                    var targetDelegate = TargetDelegate;
                    if (targetDelegate is null)
                    {
                        return ;
                    }
                    targetDelegate.Invoke(sender, args);
                };
            }
        }
    }

    internal sealed unsafe class _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_UI_Xaml_Controls_PickerFlyout__global__Microsoft_UI_Xaml_Controls_PickerConfirmedEventArgs_ : global::ABI.WinRT.Interop.EventSource<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.PickerFlyout, global::Microsoft.UI.Xaml.Controls.PickerConfirmedEventArgs>>
    {
        private static readonly bool initialized = global::WinRT.GenericTypeInstantiations.Windows_Foundation_TypedEventHandler_2_Microsoft_UI_Xaml_Controls_PickerFlyout__Microsoft_UI_Xaml_Controls_PickerConfirmedEventArgs.EnsureInitialized();

        internal _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_UI_Xaml_Controls_PickerFlyout__global__Microsoft_UI_Xaml_Controls_PickerConfirmedEventArgs_(IObjectReference obj,
        delegate* unmanaged[Stdcall]<System.IntPtr, System.IntPtr, WinRT.EventRegistrationToken*, int> addHandler,
        delegate* unmanaged[Stdcall]<System.IntPtr, WinRT.EventRegistrationToken, int> removeHandler, int index) : base(obj, addHandler, removeHandler, index)
        {
            _ = initialized;
        }

        protected override ObjectReferenceValue CreateMarshaler(global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.PickerFlyout, global::Microsoft.UI.Xaml.Controls.PickerConfirmedEventArgs> handler) =>
        global::ABI.Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.PickerFlyout, global::Microsoft.UI.Xaml.Controls.PickerConfirmedEventArgs>.CreateMarshaler2(handler);

        protected override global::ABI.WinRT.Interop.EventSourceState<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.PickerFlyout, global::Microsoft.UI.Xaml.Controls.PickerConfirmedEventArgs>> CreateEventSourceState() =>
        new EventState(ObjectReference.ThisPtr, Index);

        [global::WinRT.WinRTExposedType]
        private sealed class EventState : global::ABI.WinRT.Interop.EventSourceState<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.PickerFlyout, global::Microsoft.UI.Xaml.Controls.PickerConfirmedEventArgs>>
        {
            public EventState(System.IntPtr obj, int index)
            : base(obj, index)
            {
            }

            protected override global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.PickerFlyout, global::Microsoft.UI.Xaml.Controls.PickerConfirmedEventArgs> GetEventInvoke()
            {
                return (global::Microsoft.UI.Xaml.Controls.PickerFlyout sender, global::Microsoft.UI.Xaml.Controls.PickerConfirmedEventArgs args) =>
                {
                    var targetDelegate = TargetDelegate;
                    if (targetDelegate is null)
                    {
                        return ;
                    }
                    targetDelegate.Invoke(sender, args);
                };
            }
        }
    }

    internal sealed unsafe class _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_UI_Xaml_Controls_ItemsRepeater__global__Microsoft_UI_Xaml_Controls_ItemsRepeaterElementIndexChangedEventArgs_ : global::ABI.WinRT.Interop.EventSource<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.ItemsRepeater, global::Microsoft.UI.Xaml.Controls.ItemsRepeaterElementIndexChangedEventArgs>>
    {
        private static readonly bool initialized = global::WinRT.GenericTypeInstantiations.Windows_Foundation_TypedEventHandler_2_Microsoft_UI_Xaml_Controls_ItemsRepeater__Microsoft_UI_Xaml_Controls_ItemsRepeaterElementIndexChangedEventArgs.EnsureInitialized();

        internal _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_UI_Xaml_Controls_ItemsRepeater__global__Microsoft_UI_Xaml_Controls_ItemsRepeaterElementIndexChangedEventArgs_(IObjectReference obj,
        delegate* unmanaged[Stdcall]<System.IntPtr, System.IntPtr, WinRT.EventRegistrationToken*, int> addHandler,
        delegate* unmanaged[Stdcall]<System.IntPtr, WinRT.EventRegistrationToken, int> removeHandler, int index) : base(obj, addHandler, removeHandler, index)
        {
            _ = initialized;
        }

        protected override ObjectReferenceValue CreateMarshaler(global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.ItemsRepeater, global::Microsoft.UI.Xaml.Controls.ItemsRepeaterElementIndexChangedEventArgs> handler) =>
        global::ABI.Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.ItemsRepeater, global::Microsoft.UI.Xaml.Controls.ItemsRepeaterElementIndexChangedEventArgs>.CreateMarshaler2(handler);

        protected override global::ABI.WinRT.Interop.EventSourceState<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.ItemsRepeater, global::Microsoft.UI.Xaml.Controls.ItemsRepeaterElementIndexChangedEventArgs>> CreateEventSourceState() =>
        new EventState(ObjectReference.ThisPtr, Index);

        [global::WinRT.WinRTExposedType]
        private sealed class EventState : global::ABI.WinRT.Interop.EventSourceState<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.ItemsRepeater, global::Microsoft.UI.Xaml.Controls.ItemsRepeaterElementIndexChangedEventArgs>>
        {
            public EventState(System.IntPtr obj, int index)
            : base(obj, index)
            {
            }

            protected override global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.ItemsRepeater, global::Microsoft.UI.Xaml.Controls.ItemsRepeaterElementIndexChangedEventArgs> GetEventInvoke()
            {
                return (global::Microsoft.UI.Xaml.Controls.ItemsRepeater sender, global::Microsoft.UI.Xaml.Controls.ItemsRepeaterElementIndexChangedEventArgs args) =>
                {
                    var targetDelegate = TargetDelegate;
                    if (targetDelegate is null)
                    {
                        return ;
                    }
                    targetDelegate.Invoke(sender, args);
                };
            }
        }
    }

    internal sealed unsafe class _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_UI_Xaml_Controls_InfoBar__global__Microsoft_UI_Xaml_Controls_InfoBarClosedEventArgs_ : global::ABI.WinRT.Interop.EventSource<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.InfoBar, global::Microsoft.UI.Xaml.Controls.InfoBarClosedEventArgs>>
    {
        private static readonly bool initialized = global::WinRT.GenericTypeInstantiations.Windows_Foundation_TypedEventHandler_2_Microsoft_UI_Xaml_Controls_InfoBar__Microsoft_UI_Xaml_Controls_InfoBarClosedEventArgs.EnsureInitialized();

        internal _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_UI_Xaml_Controls_InfoBar__global__Microsoft_UI_Xaml_Controls_InfoBarClosedEventArgs_(IObjectReference obj,
        delegate* unmanaged[Stdcall]<System.IntPtr, System.IntPtr, WinRT.EventRegistrationToken*, int> addHandler,
        delegate* unmanaged[Stdcall]<System.IntPtr, WinRT.EventRegistrationToken, int> removeHandler, int index) : base(obj, addHandler, removeHandler, index)
        {
            _ = initialized;
        }

        protected override ObjectReferenceValue CreateMarshaler(global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.InfoBar, global::Microsoft.UI.Xaml.Controls.InfoBarClosedEventArgs> handler) =>
        global::ABI.Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.InfoBar, global::Microsoft.UI.Xaml.Controls.InfoBarClosedEventArgs>.CreateMarshaler2(handler);

        protected override global::ABI.WinRT.Interop.EventSourceState<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.InfoBar, global::Microsoft.UI.Xaml.Controls.InfoBarClosedEventArgs>> CreateEventSourceState() =>
        new EventState(ObjectReference.ThisPtr, Index);

        [global::WinRT.WinRTExposedType]
        private sealed class EventState : global::ABI.WinRT.Interop.EventSourceState<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.InfoBar, global::Microsoft.UI.Xaml.Controls.InfoBarClosedEventArgs>>
        {
            public EventState(System.IntPtr obj, int index)
            : base(obj, index)
            {
            }

            protected override global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.InfoBar, global::Microsoft.UI.Xaml.Controls.InfoBarClosedEventArgs> GetEventInvoke()
            {
                return (global::Microsoft.UI.Xaml.Controls.InfoBar sender, global::Microsoft.UI.Xaml.Controls.InfoBarClosedEventArgs args) =>
                {
                    var targetDelegate = TargetDelegate;
                    if (targetDelegate is null)
                    {
                        return ;
                    }
                    targetDelegate.Invoke(sender, args);
                };
            }
        }
    }

    internal sealed unsafe class _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_UI_Xaml_Controls_Expander__global__Microsoft_UI_Xaml_Controls_ExpanderExpandingEventArgs_ : global::ABI.WinRT.Interop.EventSource<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.Expander, global::Microsoft.UI.Xaml.Controls.ExpanderExpandingEventArgs>>
    {
        private static readonly bool initialized = global::WinRT.GenericTypeInstantiations.Windows_Foundation_TypedEventHandler_2_Microsoft_UI_Xaml_Controls_Expander__Microsoft_UI_Xaml_Controls_ExpanderExpandingEventArgs.EnsureInitialized();

        internal _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_UI_Xaml_Controls_Expander__global__Microsoft_UI_Xaml_Controls_ExpanderExpandingEventArgs_(IObjectReference obj,
        delegate* unmanaged[Stdcall]<System.IntPtr, System.IntPtr, WinRT.EventRegistrationToken*, int> addHandler,
        delegate* unmanaged[Stdcall]<System.IntPtr, WinRT.EventRegistrationToken, int> removeHandler, int index) : base(obj, addHandler, removeHandler, index)
        {
            _ = initialized;
        }

        protected override ObjectReferenceValue CreateMarshaler(global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.Expander, global::Microsoft.UI.Xaml.Controls.ExpanderExpandingEventArgs> handler) =>
        global::ABI.Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.Expander, global::Microsoft.UI.Xaml.Controls.ExpanderExpandingEventArgs>.CreateMarshaler2(handler);

        protected override global::ABI.WinRT.Interop.EventSourceState<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.Expander, global::Microsoft.UI.Xaml.Controls.ExpanderExpandingEventArgs>> CreateEventSourceState() =>
        new EventState(ObjectReference.ThisPtr, Index);

        [global::WinRT.WinRTExposedType]
        private sealed class EventState : global::ABI.WinRT.Interop.EventSourceState<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.Expander, global::Microsoft.UI.Xaml.Controls.ExpanderExpandingEventArgs>>
        {
            public EventState(System.IntPtr obj, int index)
            : base(obj, index)
            {
            }

            protected override global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.Expander, global::Microsoft.UI.Xaml.Controls.ExpanderExpandingEventArgs> GetEventInvoke()
            {
                return (global::Microsoft.UI.Xaml.Controls.Expander sender, global::Microsoft.UI.Xaml.Controls.ExpanderExpandingEventArgs args) =>
                {
                    var targetDelegate = TargetDelegate;
                    if (targetDelegate is null)
                    {
                        return ;
                    }
                    targetDelegate.Invoke(sender, args);
                };
            }
        }
    }

    internal sealed unsafe class _EventSource_global__Microsoft_UI_ClosableNotifierHandler : global::ABI.WinRT.Interop.EventSource<global::Microsoft.UI.ClosableNotifierHandler>
    {


        internal _EventSource_global__Microsoft_UI_ClosableNotifierHandler(IObjectReference obj,
        delegate* unmanaged[Stdcall]<System.IntPtr, System.IntPtr, WinRT.EventRegistrationToken*, int> addHandler,
        delegate* unmanaged[Stdcall]<System.IntPtr, WinRT.EventRegistrationToken, int> removeHandler, int index) : base(obj, addHandler, removeHandler, index)
        {

        }

        protected override ObjectReferenceValue CreateMarshaler(global::Microsoft.UI.ClosableNotifierHandler handler) =>
        global::ABI.Microsoft.UI.ClosableNotifierHandler.CreateMarshaler2(handler);

        protected override global::ABI.WinRT.Interop.EventSourceState<global::Microsoft.UI.ClosableNotifierHandler> CreateEventSourceState() =>
        new EventState(ObjectReference.ThisPtr, Index);

        [global::WinRT.WinRTExposedType]
        private sealed class EventState : global::ABI.WinRT.Interop.EventSourceState<global::Microsoft.UI.ClosableNotifierHandler>
        {
            public EventState(System.IntPtr obj, int index)
            : base(obj, index)
            {
            }

            protected override global::Microsoft.UI.ClosableNotifierHandler GetEventInvoke()
            {
                return () =>
                {
                    var targetDelegate = TargetDelegate;
                    if (targetDelegate is null)
                    {
                        return ;
                    }
                    targetDelegate.Invoke();
                };
            }
        }
    }

    internal sealed unsafe class _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_UI_Content_IContentSiteAutomation__global__Microsoft_UI_Content_ContentSiteAutomationProviderRequestedEventArgs_ : global::ABI.WinRT.Interop.EventSource<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Content.IContentSiteAutomation, global::Microsoft.UI.Content.ContentSiteAutomationProviderRequestedEventArgs>>
    {
        private static readonly bool initialized = global::WinRT.GenericTypeInstantiations.Windows_Foundation_TypedEventHandler_2_Microsoft_UI_Content_IContentSiteAutomation__Microsoft_UI_Content_ContentSiteAutomationProviderRequestedEventArgs.EnsureInitialized();

        internal _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_UI_Content_IContentSiteAutomation__global__Microsoft_UI_Content_ContentSiteAutomationProviderRequestedEventArgs_(IObjectReference obj,
        delegate* unmanaged[Stdcall]<System.IntPtr, System.IntPtr, WinRT.EventRegistrationToken*, int> addHandler,
        delegate* unmanaged[Stdcall]<System.IntPtr, WinRT.EventRegistrationToken, int> removeHandler, int index) : base(obj, addHandler, removeHandler, index)
        {
            _ = initialized;
        }

        protected override ObjectReferenceValue CreateMarshaler(global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Content.IContentSiteAutomation, global::Microsoft.UI.Content.ContentSiteAutomationProviderRequestedEventArgs> handler) =>
        global::ABI.Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Content.IContentSiteAutomation, global::Microsoft.UI.Content.ContentSiteAutomationProviderRequestedEventArgs>.CreateMarshaler2(handler);

        protected override global::ABI.WinRT.Interop.EventSourceState<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Content.IContentSiteAutomation, global::Microsoft.UI.Content.ContentSiteAutomationProviderRequestedEventArgs>> CreateEventSourceState() =>
        new EventState(ObjectReference.ThisPtr, Index);

        [global::WinRT.WinRTExposedType]
        private sealed class EventState : global::ABI.WinRT.Interop.EventSourceState<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Content.IContentSiteAutomation, global::Microsoft.UI.Content.ContentSiteAutomationProviderRequestedEventArgs>>
        {
            public EventState(System.IntPtr obj, int index)
            : base(obj, index)
            {
            }

            protected override global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Content.IContentSiteAutomation, global::Microsoft.UI.Content.ContentSiteAutomationProviderRequestedEventArgs> GetEventInvoke()
            {
                return (global::Microsoft.UI.Content.IContentSiteAutomation sender, global::Microsoft.UI.Content.ContentSiteAutomationProviderRequestedEventArgs args) =>
                {
                    var targetDelegate = TargetDelegate;
                    if (targetDelegate is null)
                    {
                        return ;
                    }
                    targetDelegate.Invoke(sender, args);
                };
            }
        }
    }

    internal sealed unsafe class _EventSource_global__Windows_Foundation_Collections_VectorChangedEventHandler_global__Microsoft_UI_Xaml_DependencyObject_ : global::ABI.WinRT.Interop.EventSource<global::Windows.Foundation.Collections.VectorChangedEventHandler<global::Microsoft.UI.Xaml.DependencyObject>>
    {
        private static readonly bool initialized = global::WinRT.GenericTypeInstantiations.Windows_Foundation_Collections_VectorChangedEventHandler_1_Microsoft_UI_Xaml_DependencyObject.EnsureInitialized();

        internal _EventSource_global__Windows_Foundation_Collections_VectorChangedEventHandler_global__Microsoft_UI_Xaml_DependencyObject_(IObjectReference obj,
        delegate* unmanaged[Stdcall]<System.IntPtr, System.IntPtr, WinRT.EventRegistrationToken*, int> addHandler,
        delegate* unmanaged[Stdcall]<System.IntPtr, WinRT.EventRegistrationToken, int> removeHandler, int index) : base(obj, addHandler, removeHandler, index)
        {
            _ = initialized;
        }

        protected override ObjectReferenceValue CreateMarshaler(global::Windows.Foundation.Collections.VectorChangedEventHandler<global::Microsoft.UI.Xaml.DependencyObject> handler) =>
        global::ABI.Windows.Foundation.Collections.VectorChangedEventHandler<global::Microsoft.UI.Xaml.DependencyObject>.CreateMarshaler2(handler);

        protected override global::ABI.WinRT.Interop.EventSourceState<global::Windows.Foundation.Collections.VectorChangedEventHandler<global::Microsoft.UI.Xaml.DependencyObject>> CreateEventSourceState() =>
        new EventState(ObjectReference.ThisPtr, Index);

        [global::WinRT.WinRTExposedType]
        private sealed class EventState : global::ABI.WinRT.Interop.EventSourceState<global::Windows.Foundation.Collections.VectorChangedEventHandler<global::Microsoft.UI.Xaml.DependencyObject>>
        {
            public EventState(System.IntPtr obj, int index)
            : base(obj, index)
            {
            }

            protected override global::Windows.Foundation.Collections.VectorChangedEventHandler<global::Microsoft.UI.Xaml.DependencyObject> GetEventInvoke()
            {
                return (global::Windows.Foundation.Collections.IObservableVector<global::Microsoft.UI.Xaml.DependencyObject> sender, global::Windows.Foundation.Collections.IVectorChangedEventArgs @event) =>
                {
                    var targetDelegate = TargetDelegate;
                    if (targetDelegate is null)
                    {
                        return ;
                    }
                    targetDelegate.Invoke(sender, @event);
                };
            }
        }
    }

    internal sealed unsafe class _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_UI_Xaml_Controls_DatePicker__global__Microsoft_UI_Xaml_Controls_DatePickerSelectedValueChangedEventArgs_ : global::ABI.WinRT.Interop.EventSource<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.DatePicker, global::Microsoft.UI.Xaml.Controls.DatePickerSelectedValueChangedEventArgs>>
    {
        private static readonly bool initialized = global::WinRT.GenericTypeInstantiations.Windows_Foundation_TypedEventHandler_2_Microsoft_UI_Xaml_Controls_DatePicker__Microsoft_UI_Xaml_Controls_DatePickerSelectedValueChangedEventArgs.EnsureInitialized();

        internal _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_UI_Xaml_Controls_DatePicker__global__Microsoft_UI_Xaml_Controls_DatePickerSelectedValueChangedEventArgs_(IObjectReference obj,
        delegate* unmanaged[Stdcall]<System.IntPtr, System.IntPtr, WinRT.EventRegistrationToken*, int> addHandler,
        delegate* unmanaged[Stdcall]<System.IntPtr, WinRT.EventRegistrationToken, int> removeHandler, int index) : base(obj, addHandler, removeHandler, index)
        {
            _ = initialized;
        }

        protected override ObjectReferenceValue CreateMarshaler(global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.DatePicker, global::Microsoft.UI.Xaml.Controls.DatePickerSelectedValueChangedEventArgs> handler) =>
        global::ABI.Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.DatePicker, global::Microsoft.UI.Xaml.Controls.DatePickerSelectedValueChangedEventArgs>.CreateMarshaler2(handler);

        protected override global::ABI.WinRT.Interop.EventSourceState<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.DatePicker, global::Microsoft.UI.Xaml.Controls.DatePickerSelectedValueChangedEventArgs>> CreateEventSourceState() =>
        new EventState(ObjectReference.ThisPtr, Index);

        [global::WinRT.WinRTExposedType]
        private sealed class EventState : global::ABI.WinRT.Interop.EventSourceState<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.DatePicker, global::Microsoft.UI.Xaml.Controls.DatePickerSelectedValueChangedEventArgs>>
        {
            public EventState(System.IntPtr obj, int index)
            : base(obj, index)
            {
            }

            protected override global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.DatePicker, global::Microsoft.UI.Xaml.Controls.DatePickerSelectedValueChangedEventArgs> GetEventInvoke()
            {
                return (global::Microsoft.UI.Xaml.Controls.DatePicker sender, global::Microsoft.UI.Xaml.Controls.DatePickerSelectedValueChangedEventArgs args) =>
                {
                    var targetDelegate = TargetDelegate;
                    if (targetDelegate is null)
                    {
                        return ;
                    }
                    targetDelegate.Invoke(sender, args);
                };
            }
        }
    }

    internal sealed unsafe class _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_Web_WebView2_Core_CoreWebView2__global__Microsoft_Web_WebView2_Core_CoreWebView2DOMContentLoadedEventArgs_ : global::ABI.WinRT.Interop.EventSource<global::Windows.Foundation.TypedEventHandler<global::Microsoft.Web.WebView2.Core.CoreWebView2, global::Microsoft.Web.WebView2.Core.CoreWebView2DOMContentLoadedEventArgs>>
    {
        private static readonly bool initialized = global::WinRT.GenericTypeInstantiations.Windows_Foundation_TypedEventHandler_2_Microsoft_Web_WebView2_Core_CoreWebView2__Microsoft_Web_WebView2_Core_CoreWebView2DOMContentLoadedEventArgs.EnsureInitialized();

        internal _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_Web_WebView2_Core_CoreWebView2__global__Microsoft_Web_WebView2_Core_CoreWebView2DOMContentLoadedEventArgs_(IObjectReference obj,
        delegate* unmanaged[Stdcall]<System.IntPtr, System.IntPtr, WinRT.EventRegistrationToken*, int> addHandler,
        delegate* unmanaged[Stdcall]<System.IntPtr, WinRT.EventRegistrationToken, int> removeHandler, int index) : base(obj, addHandler, removeHandler, index)
        {
            _ = initialized;
        }

        protected override ObjectReferenceValue CreateMarshaler(global::Windows.Foundation.TypedEventHandler<global::Microsoft.Web.WebView2.Core.CoreWebView2, global::Microsoft.Web.WebView2.Core.CoreWebView2DOMContentLoadedEventArgs> handler) =>
        global::ABI.Windows.Foundation.TypedEventHandler<global::Microsoft.Web.WebView2.Core.CoreWebView2, global::Microsoft.Web.WebView2.Core.CoreWebView2DOMContentLoadedEventArgs>.CreateMarshaler2(handler);

        protected override global::ABI.WinRT.Interop.EventSourceState<global::Windows.Foundation.TypedEventHandler<global::Microsoft.Web.WebView2.Core.CoreWebView2, global::Microsoft.Web.WebView2.Core.CoreWebView2DOMContentLoadedEventArgs>> CreateEventSourceState() =>
        new EventState(ObjectReference.ThisPtr, Index);

        [global::WinRT.WinRTExposedType]
        private sealed class EventState : global::ABI.WinRT.Interop.EventSourceState<global::Windows.Foundation.TypedEventHandler<global::Microsoft.Web.WebView2.Core.CoreWebView2, global::Microsoft.Web.WebView2.Core.CoreWebView2DOMContentLoadedEventArgs>>
        {
            public EventState(System.IntPtr obj, int index)
            : base(obj, index)
            {
            }

            protected override global::Windows.Foundation.TypedEventHandler<global::Microsoft.Web.WebView2.Core.CoreWebView2, global::Microsoft.Web.WebView2.Core.CoreWebView2DOMContentLoadedEventArgs> GetEventInvoke()
            {
                return (global::Microsoft.Web.WebView2.Core.CoreWebView2 sender, global::Microsoft.Web.WebView2.Core.CoreWebView2DOMContentLoadedEventArgs args) =>
                {
                    var targetDelegate = TargetDelegate;
                    if (targetDelegate is null)
                    {
                        return ;
                    }
                    targetDelegate.Invoke(sender, args);
                };
            }
        }
    }

    internal sealed unsafe class _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_UI_Xaml_UIElement__global__Microsoft_UI_Xaml_Input_AccessKeyDisplayDismissedEventArgs_ : global::ABI.WinRT.Interop.EventSource<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.UIElement, global::Microsoft.UI.Xaml.Input.AccessKeyDisplayDismissedEventArgs>>
    {
        private static readonly bool initialized = global::WinRT.GenericTypeInstantiations.Windows_Foundation_TypedEventHandler_2_Microsoft_UI_Xaml_UIElement__Microsoft_UI_Xaml_Input_AccessKeyDisplayDismissedEventArgs.EnsureInitialized();

        internal _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_UI_Xaml_UIElement__global__Microsoft_UI_Xaml_Input_AccessKeyDisplayDismissedEventArgs_(IObjectReference obj,
        delegate* unmanaged[Stdcall]<System.IntPtr, System.IntPtr, WinRT.EventRegistrationToken*, int> addHandler,
        delegate* unmanaged[Stdcall]<System.IntPtr, WinRT.EventRegistrationToken, int> removeHandler, int index) : base(obj, addHandler, removeHandler, index)
        {
            _ = initialized;
        }

        protected override ObjectReferenceValue CreateMarshaler(global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.UIElement, global::Microsoft.UI.Xaml.Input.AccessKeyDisplayDismissedEventArgs> handler) =>
        global::ABI.Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.UIElement, global::Microsoft.UI.Xaml.Input.AccessKeyDisplayDismissedEventArgs>.CreateMarshaler2(handler);

        protected override global::ABI.WinRT.Interop.EventSourceState<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.UIElement, global::Microsoft.UI.Xaml.Input.AccessKeyDisplayDismissedEventArgs>> CreateEventSourceState() =>
        new EventState(ObjectReference.ThisPtr, Index);

        [global::WinRT.WinRTExposedType]
        private sealed class EventState : global::ABI.WinRT.Interop.EventSourceState<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.UIElement, global::Microsoft.UI.Xaml.Input.AccessKeyDisplayDismissedEventArgs>>
        {
            public EventState(System.IntPtr obj, int index)
            : base(obj, index)
            {
            }

            protected override global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.UIElement, global::Microsoft.UI.Xaml.Input.AccessKeyDisplayDismissedEventArgs> GetEventInvoke()
            {
                return (global::Microsoft.UI.Xaml.UIElement sender, global::Microsoft.UI.Xaml.Input.AccessKeyDisplayDismissedEventArgs args) =>
                {
                    var targetDelegate = TargetDelegate;
                    if (targetDelegate is null)
                    {
                        return ;
                    }
                    targetDelegate.Invoke(sender, args);
                };
            }
        }
    }

    internal sealed unsafe class _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_UI_Xaml_Controls_ContentDialog__global__Microsoft_UI_Xaml_Controls_ContentDialogClosedEventArgs_ : global::ABI.WinRT.Interop.EventSource<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.ContentDialog, global::Microsoft.UI.Xaml.Controls.ContentDialogClosedEventArgs>>
    {
        private static readonly bool initialized = global::WinRT.GenericTypeInstantiations.Windows_Foundation_TypedEventHandler_2_Microsoft_UI_Xaml_Controls_ContentDialog__Microsoft_UI_Xaml_Controls_ContentDialogClosedEventArgs.EnsureInitialized();

        internal _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_UI_Xaml_Controls_ContentDialog__global__Microsoft_UI_Xaml_Controls_ContentDialogClosedEventArgs_(IObjectReference obj,
        delegate* unmanaged[Stdcall]<System.IntPtr, System.IntPtr, WinRT.EventRegistrationToken*, int> addHandler,
        delegate* unmanaged[Stdcall]<System.IntPtr, WinRT.EventRegistrationToken, int> removeHandler, int index) : base(obj, addHandler, removeHandler, index)
        {
            _ = initialized;
        }

        protected override ObjectReferenceValue CreateMarshaler(global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.ContentDialog, global::Microsoft.UI.Xaml.Controls.ContentDialogClosedEventArgs> handler) =>
        global::ABI.Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.ContentDialog, global::Microsoft.UI.Xaml.Controls.ContentDialogClosedEventArgs>.CreateMarshaler2(handler);

        protected override global::ABI.WinRT.Interop.EventSourceState<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.ContentDialog, global::Microsoft.UI.Xaml.Controls.ContentDialogClosedEventArgs>> CreateEventSourceState() =>
        new EventState(ObjectReference.ThisPtr, Index);

        [global::WinRT.WinRTExposedType]
        private sealed class EventState : global::ABI.WinRT.Interop.EventSourceState<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.ContentDialog, global::Microsoft.UI.Xaml.Controls.ContentDialogClosedEventArgs>>
        {
            public EventState(System.IntPtr obj, int index)
            : base(obj, index)
            {
            }

            protected override global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.ContentDialog, global::Microsoft.UI.Xaml.Controls.ContentDialogClosedEventArgs> GetEventInvoke()
            {
                return (global::Microsoft.UI.Xaml.Controls.ContentDialog sender, global::Microsoft.UI.Xaml.Controls.ContentDialogClosedEventArgs args) =>
                {
                    var targetDelegate = TargetDelegate;
                    if (targetDelegate is null)
                    {
                        return ;
                    }
                    targetDelegate.Invoke(sender, args);
                };
            }
        }
    }

    internal sealed unsafe class _EventSource_global__Microsoft_UI_Xaml_Media_Imaging_DownloadProgressEventHandler : global::ABI.WinRT.Interop.EventSource<global::Microsoft.UI.Xaml.Media.Imaging.DownloadProgressEventHandler>
    {


        internal _EventSource_global__Microsoft_UI_Xaml_Media_Imaging_DownloadProgressEventHandler(IObjectReference obj,
        delegate* unmanaged[Stdcall]<System.IntPtr, System.IntPtr, WinRT.EventRegistrationToken*, int> addHandler,
        delegate* unmanaged[Stdcall]<System.IntPtr, WinRT.EventRegistrationToken, int> removeHandler, int index) : base(obj, addHandler, removeHandler, index)
        {

        }

        protected override ObjectReferenceValue CreateMarshaler(global::Microsoft.UI.Xaml.Media.Imaging.DownloadProgressEventHandler handler) =>
        global::ABI.Microsoft.UI.Xaml.Media.Imaging.DownloadProgressEventHandler.CreateMarshaler2(handler);

        protected override global::ABI.WinRT.Interop.EventSourceState<global::Microsoft.UI.Xaml.Media.Imaging.DownloadProgressEventHandler> CreateEventSourceState() =>
        new EventState(ObjectReference.ThisPtr, Index);

        [global::WinRT.WinRTExposedType]
        private sealed class EventState : global::ABI.WinRT.Interop.EventSourceState<global::Microsoft.UI.Xaml.Media.Imaging.DownloadProgressEventHandler>
        {
            public EventState(System.IntPtr obj, int index)
            : base(obj, index)
            {
            }

            protected override global::Microsoft.UI.Xaml.Media.Imaging.DownloadProgressEventHandler GetEventInvoke()
            {
                return (object sender, global::Microsoft.UI.Xaml.Media.Imaging.DownloadProgressEventArgs e) =>
                {
                    var targetDelegate = TargetDelegate;
                    if (targetDelegate is null)
                    {
                        return ;
                    }
                    targetDelegate.Invoke(sender, e);
                };
            }
        }
    }

    internal sealed unsafe class _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_Web_WebView2_Core_CoreWebView2__global__Microsoft_Web_WebView2_Core_CoreWebView2DownloadStartingEventArgs_ : global::ABI.WinRT.Interop.EventSource<global::Windows.Foundation.TypedEventHandler<global::Microsoft.Web.WebView2.Core.CoreWebView2, global::Microsoft.Web.WebView2.Core.CoreWebView2DownloadStartingEventArgs>>
    {
        private static readonly bool initialized = global::WinRT.GenericTypeInstantiations.Windows_Foundation_TypedEventHandler_2_Microsoft_Web_WebView2_Core_CoreWebView2__Microsoft_Web_WebView2_Core_CoreWebView2DownloadStartingEventArgs.EnsureInitialized();

        internal _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_Web_WebView2_Core_CoreWebView2__global__Microsoft_Web_WebView2_Core_CoreWebView2DownloadStartingEventArgs_(IObjectReference obj,
        delegate* unmanaged[Stdcall]<System.IntPtr, System.IntPtr, WinRT.EventRegistrationToken*, int> addHandler,
        delegate* unmanaged[Stdcall]<System.IntPtr, WinRT.EventRegistrationToken, int> removeHandler, int index) : base(obj, addHandler, removeHandler, index)
        {
            _ = initialized;
        }

        protected override ObjectReferenceValue CreateMarshaler(global::Windows.Foundation.TypedEventHandler<global::Microsoft.Web.WebView2.Core.CoreWebView2, global::Microsoft.Web.WebView2.Core.CoreWebView2DownloadStartingEventArgs> handler) =>
        global::ABI.Windows.Foundation.TypedEventHandler<global::Microsoft.Web.WebView2.Core.CoreWebView2, global::Microsoft.Web.WebView2.Core.CoreWebView2DownloadStartingEventArgs>.CreateMarshaler2(handler);

        protected override global::ABI.WinRT.Interop.EventSourceState<global::Windows.Foundation.TypedEventHandler<global::Microsoft.Web.WebView2.Core.CoreWebView2, global::Microsoft.Web.WebView2.Core.CoreWebView2DownloadStartingEventArgs>> CreateEventSourceState() =>
        new EventState(ObjectReference.ThisPtr, Index);

        [global::WinRT.WinRTExposedType]
        private sealed class EventState : global::ABI.WinRT.Interop.EventSourceState<global::Windows.Foundation.TypedEventHandler<global::Microsoft.Web.WebView2.Core.CoreWebView2, global::Microsoft.Web.WebView2.Core.CoreWebView2DownloadStartingEventArgs>>
        {
            public EventState(System.IntPtr obj, int index)
            : base(obj, index)
            {
            }

            protected override global::Windows.Foundation.TypedEventHandler<global::Microsoft.Web.WebView2.Core.CoreWebView2, global::Microsoft.Web.WebView2.Core.CoreWebView2DownloadStartingEventArgs> GetEventInvoke()
            {
                return (global::Microsoft.Web.WebView2.Core.CoreWebView2 sender, global::Microsoft.Web.WebView2.Core.CoreWebView2DownloadStartingEventArgs args) =>
                {
                    var targetDelegate = TargetDelegate;
                    if (targetDelegate is null)
                    {
                        return ;
                    }
                    targetDelegate.Invoke(sender, args);
                };
            }
        }
    }

    internal sealed unsafe class _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_UI_Input_InputKeyboardSource__global__Microsoft_UI_Input_CharacterReceivedEventArgs_ : global::ABI.WinRT.Interop.EventSource<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Input.InputKeyboardSource, global::Microsoft.UI.Input.CharacterReceivedEventArgs>>
    {
        private static readonly bool initialized = global::WinRT.GenericTypeInstantiations.Windows_Foundation_TypedEventHandler_2_Microsoft_UI_Input_InputKeyboardSource__Microsoft_UI_Input_CharacterReceivedEventArgs.EnsureInitialized();

        internal _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_UI_Input_InputKeyboardSource__global__Microsoft_UI_Input_CharacterReceivedEventArgs_(IObjectReference obj,
        delegate* unmanaged[Stdcall]<System.IntPtr, System.IntPtr, WinRT.EventRegistrationToken*, int> addHandler,
        delegate* unmanaged[Stdcall]<System.IntPtr, WinRT.EventRegistrationToken, int> removeHandler, int index) : base(obj, addHandler, removeHandler, index)
        {
            _ = initialized;
        }

        protected override ObjectReferenceValue CreateMarshaler(global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Input.InputKeyboardSource, global::Microsoft.UI.Input.CharacterReceivedEventArgs> handler) =>
        global::ABI.Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Input.InputKeyboardSource, global::Microsoft.UI.Input.CharacterReceivedEventArgs>.CreateMarshaler2(handler);

        protected override global::ABI.WinRT.Interop.EventSourceState<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Input.InputKeyboardSource, global::Microsoft.UI.Input.CharacterReceivedEventArgs>> CreateEventSourceState() =>
        new EventState(ObjectReference.ThisPtr, Index);

        [global::WinRT.WinRTExposedType]
        private sealed class EventState : global::ABI.WinRT.Interop.EventSourceState<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Input.InputKeyboardSource, global::Microsoft.UI.Input.CharacterReceivedEventArgs>>
        {
            public EventState(System.IntPtr obj, int index)
            : base(obj, index)
            {
            }

            protected override global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Input.InputKeyboardSource, global::Microsoft.UI.Input.CharacterReceivedEventArgs> GetEventInvoke()
            {
                return (global::Microsoft.UI.Input.InputKeyboardSource sender, global::Microsoft.UI.Input.CharacterReceivedEventArgs args) =>
                {
                    var targetDelegate = TargetDelegate;
                    if (targetDelegate is null)
                    {
                        return ;
                    }
                    targetDelegate.Invoke(sender, args);
                };
            }
        }
    }

    internal sealed unsafe class _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_UI_Xaml_Controls_MediaTransportControls__global__Microsoft_UI_Xaml_Media_MediaTransportControlsThumbnailRequestedEventArgs_ : global::ABI.WinRT.Interop.EventSource<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.MediaTransportControls, global::Microsoft.UI.Xaml.Media.MediaTransportControlsThumbnailRequestedEventArgs>>
    {
        private static readonly bool initialized = global::WinRT.GenericTypeInstantiations.Windows_Foundation_TypedEventHandler_2_Microsoft_UI_Xaml_Controls_MediaTransportControls__Microsoft_UI_Xaml_Media_MediaTransportControlsThumbnailRequestedEventArgs.EnsureInitialized();

        internal _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_UI_Xaml_Controls_MediaTransportControls__global__Microsoft_UI_Xaml_Media_MediaTransportControlsThumbnailRequestedEventArgs_(IObjectReference obj,
        delegate* unmanaged[Stdcall]<System.IntPtr, System.IntPtr, WinRT.EventRegistrationToken*, int> addHandler,
        delegate* unmanaged[Stdcall]<System.IntPtr, WinRT.EventRegistrationToken, int> removeHandler, int index) : base(obj, addHandler, removeHandler, index)
        {
            _ = initialized;
        }

        protected override ObjectReferenceValue CreateMarshaler(global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.MediaTransportControls, global::Microsoft.UI.Xaml.Media.MediaTransportControlsThumbnailRequestedEventArgs> handler) =>
        global::ABI.Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.MediaTransportControls, global::Microsoft.UI.Xaml.Media.MediaTransportControlsThumbnailRequestedEventArgs>.CreateMarshaler2(handler);

        protected override global::ABI.WinRT.Interop.EventSourceState<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.MediaTransportControls, global::Microsoft.UI.Xaml.Media.MediaTransportControlsThumbnailRequestedEventArgs>> CreateEventSourceState() =>
        new EventState(ObjectReference.ThisPtr, Index);

        [global::WinRT.WinRTExposedType]
        private sealed class EventState : global::ABI.WinRT.Interop.EventSourceState<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.MediaTransportControls, global::Microsoft.UI.Xaml.Media.MediaTransportControlsThumbnailRequestedEventArgs>>
        {
            public EventState(System.IntPtr obj, int index)
            : base(obj, index)
            {
            }

            protected override global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.MediaTransportControls, global::Microsoft.UI.Xaml.Media.MediaTransportControlsThumbnailRequestedEventArgs> GetEventInvoke()
            {
                return (global::Microsoft.UI.Xaml.Controls.MediaTransportControls sender, global::Microsoft.UI.Xaml.Media.MediaTransportControlsThumbnailRequestedEventArgs args) =>
                {
                    var targetDelegate = TargetDelegate;
                    if (targetDelegate is null)
                    {
                        return ;
                    }
                    targetDelegate.Invoke(sender, args);
                };
            }
        }
    }

    internal sealed unsafe class _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_UI_Xaml_Controls_BreadcrumbBar__global__Microsoft_UI_Xaml_Controls_BreadcrumbBarItemClickedEventArgs_ : global::ABI.WinRT.Interop.EventSource<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.BreadcrumbBar, global::Microsoft.UI.Xaml.Controls.BreadcrumbBarItemClickedEventArgs>>
    {
        private static readonly bool initialized = global::WinRT.GenericTypeInstantiations.Windows_Foundation_TypedEventHandler_2_Microsoft_UI_Xaml_Controls_BreadcrumbBar__Microsoft_UI_Xaml_Controls_BreadcrumbBarItemClickedEventArgs.EnsureInitialized();

        internal _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_UI_Xaml_Controls_BreadcrumbBar__global__Microsoft_UI_Xaml_Controls_BreadcrumbBarItemClickedEventArgs_(IObjectReference obj,
        delegate* unmanaged[Stdcall]<System.IntPtr, System.IntPtr, WinRT.EventRegistrationToken*, int> addHandler,
        delegate* unmanaged[Stdcall]<System.IntPtr, WinRT.EventRegistrationToken, int> removeHandler, int index) : base(obj, addHandler, removeHandler, index)
        {
            _ = initialized;
        }

        protected override ObjectReferenceValue CreateMarshaler(global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.BreadcrumbBar, global::Microsoft.UI.Xaml.Controls.BreadcrumbBarItemClickedEventArgs> handler) =>
        global::ABI.Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.BreadcrumbBar, global::Microsoft.UI.Xaml.Controls.BreadcrumbBarItemClickedEventArgs>.CreateMarshaler2(handler);

        protected override global::ABI.WinRT.Interop.EventSourceState<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.BreadcrumbBar, global::Microsoft.UI.Xaml.Controls.BreadcrumbBarItemClickedEventArgs>> CreateEventSourceState() =>
        new EventState(ObjectReference.ThisPtr, Index);

        [global::WinRT.WinRTExposedType]
        private sealed class EventState : global::ABI.WinRT.Interop.EventSourceState<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.BreadcrumbBar, global::Microsoft.UI.Xaml.Controls.BreadcrumbBarItemClickedEventArgs>>
        {
            public EventState(System.IntPtr obj, int index)
            : base(obj, index)
            {
            }

            protected override global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.BreadcrumbBar, global::Microsoft.UI.Xaml.Controls.BreadcrumbBarItemClickedEventArgs> GetEventInvoke()
            {
                return (global::Microsoft.UI.Xaml.Controls.BreadcrumbBar sender, global::Microsoft.UI.Xaml.Controls.BreadcrumbBarItemClickedEventArgs args) =>
                {
                    var targetDelegate = TargetDelegate;
                    if (targetDelegate is null)
                    {
                        return ;
                    }
                    targetDelegate.Invoke(sender, args);
                };
            }
        }
    }

    internal sealed unsafe class _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_UI_Xaml_Controls_AutoSuggestBox__global__Microsoft_UI_Xaml_Controls_AutoSuggestBoxSuggestionChosenEventArgs_ : global::ABI.WinRT.Interop.EventSource<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.AutoSuggestBox, global::Microsoft.UI.Xaml.Controls.AutoSuggestBoxSuggestionChosenEventArgs>>
    {
        private static readonly bool initialized = global::WinRT.GenericTypeInstantiations.Windows_Foundation_TypedEventHandler_2_Microsoft_UI_Xaml_Controls_AutoSuggestBox__Microsoft_UI_Xaml_Controls_AutoSuggestBoxSuggestionChosenEventArgs.EnsureInitialized();

        internal _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_UI_Xaml_Controls_AutoSuggestBox__global__Microsoft_UI_Xaml_Controls_AutoSuggestBoxSuggestionChosenEventArgs_(IObjectReference obj,
        delegate* unmanaged[Stdcall]<System.IntPtr, System.IntPtr, WinRT.EventRegistrationToken*, int> addHandler,
        delegate* unmanaged[Stdcall]<System.IntPtr, WinRT.EventRegistrationToken, int> removeHandler, int index) : base(obj, addHandler, removeHandler, index)
        {
            _ = initialized;
        }

        protected override ObjectReferenceValue CreateMarshaler(global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.AutoSuggestBox, global::Microsoft.UI.Xaml.Controls.AutoSuggestBoxSuggestionChosenEventArgs> handler) =>
        global::ABI.Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.AutoSuggestBox, global::Microsoft.UI.Xaml.Controls.AutoSuggestBoxSuggestionChosenEventArgs>.CreateMarshaler2(handler);

        protected override global::ABI.WinRT.Interop.EventSourceState<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.AutoSuggestBox, global::Microsoft.UI.Xaml.Controls.AutoSuggestBoxSuggestionChosenEventArgs>> CreateEventSourceState() =>
        new EventState(ObjectReference.ThisPtr, Index);

        [global::WinRT.WinRTExposedType]
        private sealed class EventState : global::ABI.WinRT.Interop.EventSourceState<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.AutoSuggestBox, global::Microsoft.UI.Xaml.Controls.AutoSuggestBoxSuggestionChosenEventArgs>>
        {
            public EventState(System.IntPtr obj, int index)
            : base(obj, index)
            {
            }

            protected override global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.AutoSuggestBox, global::Microsoft.UI.Xaml.Controls.AutoSuggestBoxSuggestionChosenEventArgs> GetEventInvoke()
            {
                return (global::Microsoft.UI.Xaml.Controls.AutoSuggestBox sender, global::Microsoft.UI.Xaml.Controls.AutoSuggestBoxSuggestionChosenEventArgs args) =>
                {
                    var targetDelegate = TargetDelegate;
                    if (targetDelegate is null)
                    {
                        return ;
                    }
                    targetDelegate.Invoke(sender, args);
                };
            }
        }
    }

    internal sealed unsafe class _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_UI_Xaml_Controls_NavigationView__global__Microsoft_UI_Xaml_Controls_NavigationViewItemCollapsedEventArgs_ : global::ABI.WinRT.Interop.EventSource<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.NavigationView, global::Microsoft.UI.Xaml.Controls.NavigationViewItemCollapsedEventArgs>>
    {
        private static readonly bool initialized = global::WinRT.GenericTypeInstantiations.Windows_Foundation_TypedEventHandler_2_Microsoft_UI_Xaml_Controls_NavigationView__Microsoft_UI_Xaml_Controls_NavigationViewItemCollapsedEventArgs.EnsureInitialized();

        internal _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_UI_Xaml_Controls_NavigationView__global__Microsoft_UI_Xaml_Controls_NavigationViewItemCollapsedEventArgs_(IObjectReference obj,
        delegate* unmanaged[Stdcall]<System.IntPtr, System.IntPtr, WinRT.EventRegistrationToken*, int> addHandler,
        delegate* unmanaged[Stdcall]<System.IntPtr, WinRT.EventRegistrationToken, int> removeHandler, int index) : base(obj, addHandler, removeHandler, index)
        {
            _ = initialized;
        }

        protected override ObjectReferenceValue CreateMarshaler(global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.NavigationView, global::Microsoft.UI.Xaml.Controls.NavigationViewItemCollapsedEventArgs> handler) =>
        global::ABI.Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.NavigationView, global::Microsoft.UI.Xaml.Controls.NavigationViewItemCollapsedEventArgs>.CreateMarshaler2(handler);

        protected override global::ABI.WinRT.Interop.EventSourceState<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.NavigationView, global::Microsoft.UI.Xaml.Controls.NavigationViewItemCollapsedEventArgs>> CreateEventSourceState() =>
        new EventState(ObjectReference.ThisPtr, Index);

        [global::WinRT.WinRTExposedType]
        private sealed class EventState : global::ABI.WinRT.Interop.EventSourceState<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.NavigationView, global::Microsoft.UI.Xaml.Controls.NavigationViewItemCollapsedEventArgs>>
        {
            public EventState(System.IntPtr obj, int index)
            : base(obj, index)
            {
            }

            protected override global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.NavigationView, global::Microsoft.UI.Xaml.Controls.NavigationViewItemCollapsedEventArgs> GetEventInvoke()
            {
                return (global::Microsoft.UI.Xaml.Controls.NavigationView sender, global::Microsoft.UI.Xaml.Controls.NavigationViewItemCollapsedEventArgs args) =>
                {
                    var targetDelegate = TargetDelegate;
                    if (targetDelegate is null)
                    {
                        return ;
                    }
                    targetDelegate.Invoke(sender, args);
                };
            }
        }
    }

    internal sealed unsafe class _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_UI_Xaml_Controls_TreeView__global__Microsoft_UI_Xaml_Controls_TreeViewExpandingEventArgs_ : global::ABI.WinRT.Interop.EventSource<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.TreeView, global::Microsoft.UI.Xaml.Controls.TreeViewExpandingEventArgs>>
    {
        private static readonly bool initialized = global::WinRT.GenericTypeInstantiations.Windows_Foundation_TypedEventHandler_2_Microsoft_UI_Xaml_Controls_TreeView__Microsoft_UI_Xaml_Controls_TreeViewExpandingEventArgs.EnsureInitialized();

        internal _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_UI_Xaml_Controls_TreeView__global__Microsoft_UI_Xaml_Controls_TreeViewExpandingEventArgs_(IObjectReference obj,
        delegate* unmanaged[Stdcall]<System.IntPtr, System.IntPtr, WinRT.EventRegistrationToken*, int> addHandler,
        delegate* unmanaged[Stdcall]<System.IntPtr, WinRT.EventRegistrationToken, int> removeHandler, int index) : base(obj, addHandler, removeHandler, index)
        {
            _ = initialized;
        }

        protected override ObjectReferenceValue CreateMarshaler(global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.TreeView, global::Microsoft.UI.Xaml.Controls.TreeViewExpandingEventArgs> handler) =>
        global::ABI.Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.TreeView, global::Microsoft.UI.Xaml.Controls.TreeViewExpandingEventArgs>.CreateMarshaler2(handler);

        protected override global::ABI.WinRT.Interop.EventSourceState<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.TreeView, global::Microsoft.UI.Xaml.Controls.TreeViewExpandingEventArgs>> CreateEventSourceState() =>
        new EventState(ObjectReference.ThisPtr, Index);

        [global::WinRT.WinRTExposedType]
        private sealed class EventState : global::ABI.WinRT.Interop.EventSourceState<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.TreeView, global::Microsoft.UI.Xaml.Controls.TreeViewExpandingEventArgs>>
        {
            public EventState(System.IntPtr obj, int index)
            : base(obj, index)
            {
            }

            protected override global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.TreeView, global::Microsoft.UI.Xaml.Controls.TreeViewExpandingEventArgs> GetEventInvoke()
            {
                return (global::Microsoft.UI.Xaml.Controls.TreeView sender, global::Microsoft.UI.Xaml.Controls.TreeViewExpandingEventArgs args) =>
                {
                    var targetDelegate = TargetDelegate;
                    if (targetDelegate is null)
                    {
                        return ;
                    }
                    targetDelegate.Invoke(sender, args);
                };
            }
        }
    }

    internal sealed unsafe class _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_Web_WebView2_Core_CoreWebView2Frame__global__Microsoft_Web_WebView2_Core_CoreWebView2ContentLoadingEventArgs_ : global::ABI.WinRT.Interop.EventSource<global::Windows.Foundation.TypedEventHandler<global::Microsoft.Web.WebView2.Core.CoreWebView2Frame, global::Microsoft.Web.WebView2.Core.CoreWebView2ContentLoadingEventArgs>>
    {
        private static readonly bool initialized = global::WinRT.GenericTypeInstantiations.Windows_Foundation_TypedEventHandler_2_Microsoft_Web_WebView2_Core_CoreWebView2Frame__Microsoft_Web_WebView2_Core_CoreWebView2ContentLoadingEventArgs.EnsureInitialized();

        internal _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_Web_WebView2_Core_CoreWebView2Frame__global__Microsoft_Web_WebView2_Core_CoreWebView2ContentLoadingEventArgs_(IObjectReference obj,
        delegate* unmanaged[Stdcall]<System.IntPtr, System.IntPtr, WinRT.EventRegistrationToken*, int> addHandler,
        delegate* unmanaged[Stdcall]<System.IntPtr, WinRT.EventRegistrationToken, int> removeHandler, int index) : base(obj, addHandler, removeHandler, index)
        {
            _ = initialized;
        }

        protected override ObjectReferenceValue CreateMarshaler(global::Windows.Foundation.TypedEventHandler<global::Microsoft.Web.WebView2.Core.CoreWebView2Frame, global::Microsoft.Web.WebView2.Core.CoreWebView2ContentLoadingEventArgs> handler) =>
        global::ABI.Windows.Foundation.TypedEventHandler<global::Microsoft.Web.WebView2.Core.CoreWebView2Frame, global::Microsoft.Web.WebView2.Core.CoreWebView2ContentLoadingEventArgs>.CreateMarshaler2(handler);

        protected override global::ABI.WinRT.Interop.EventSourceState<global::Windows.Foundation.TypedEventHandler<global::Microsoft.Web.WebView2.Core.CoreWebView2Frame, global::Microsoft.Web.WebView2.Core.CoreWebView2ContentLoadingEventArgs>> CreateEventSourceState() =>
        new EventState(ObjectReference.ThisPtr, Index);

        [global::WinRT.WinRTExposedType]
        private sealed class EventState : global::ABI.WinRT.Interop.EventSourceState<global::Windows.Foundation.TypedEventHandler<global::Microsoft.Web.WebView2.Core.CoreWebView2Frame, global::Microsoft.Web.WebView2.Core.CoreWebView2ContentLoadingEventArgs>>
        {
            public EventState(System.IntPtr obj, int index)
            : base(obj, index)
            {
            }

            protected override global::Windows.Foundation.TypedEventHandler<global::Microsoft.Web.WebView2.Core.CoreWebView2Frame, global::Microsoft.Web.WebView2.Core.CoreWebView2ContentLoadingEventArgs> GetEventInvoke()
            {
                return (global::Microsoft.Web.WebView2.Core.CoreWebView2Frame sender, global::Microsoft.Web.WebView2.Core.CoreWebView2ContentLoadingEventArgs args) =>
                {
                    var targetDelegate = TargetDelegate;
                    if (targetDelegate is null)
                    {
                        return ;
                    }
                    targetDelegate.Invoke(sender, args);
                };
            }
        }
    }

    internal sealed unsafe class _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_UI_Xaml_Controls_ScrollView__global__Microsoft_UI_Xaml_Controls_ScrollingAnchorRequestedEventArgs_ : global::ABI.WinRT.Interop.EventSource<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.ScrollView, global::Microsoft.UI.Xaml.Controls.ScrollingAnchorRequestedEventArgs>>
    {
        private static readonly bool initialized = global::WinRT.GenericTypeInstantiations.Windows_Foundation_TypedEventHandler_2_Microsoft_UI_Xaml_Controls_ScrollView__Microsoft_UI_Xaml_Controls_ScrollingAnchorRequestedEventArgs.EnsureInitialized();

        internal _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_UI_Xaml_Controls_ScrollView__global__Microsoft_UI_Xaml_Controls_ScrollingAnchorRequestedEventArgs_(IObjectReference obj,
        delegate* unmanaged[Stdcall]<System.IntPtr, System.IntPtr, WinRT.EventRegistrationToken*, int> addHandler,
        delegate* unmanaged[Stdcall]<System.IntPtr, WinRT.EventRegistrationToken, int> removeHandler, int index) : base(obj, addHandler, removeHandler, index)
        {
            _ = initialized;
        }

        protected override ObjectReferenceValue CreateMarshaler(global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.ScrollView, global::Microsoft.UI.Xaml.Controls.ScrollingAnchorRequestedEventArgs> handler) =>
        global::ABI.Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.ScrollView, global::Microsoft.UI.Xaml.Controls.ScrollingAnchorRequestedEventArgs>.CreateMarshaler2(handler);

        protected override global::ABI.WinRT.Interop.EventSourceState<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.ScrollView, global::Microsoft.UI.Xaml.Controls.ScrollingAnchorRequestedEventArgs>> CreateEventSourceState() =>
        new EventState(ObjectReference.ThisPtr, Index);

        [global::WinRT.WinRTExposedType]
        private sealed class EventState : global::ABI.WinRT.Interop.EventSourceState<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.ScrollView, global::Microsoft.UI.Xaml.Controls.ScrollingAnchorRequestedEventArgs>>
        {
            public EventState(System.IntPtr obj, int index)
            : base(obj, index)
            {
            }

            protected override global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.ScrollView, global::Microsoft.UI.Xaml.Controls.ScrollingAnchorRequestedEventArgs> GetEventInvoke()
            {
                return (global::Microsoft.UI.Xaml.Controls.ScrollView sender, global::Microsoft.UI.Xaml.Controls.ScrollingAnchorRequestedEventArgs args) =>
                {
                    var targetDelegate = TargetDelegate;
                    if (targetDelegate is null)
                    {
                        return ;
                    }
                    targetDelegate.Invoke(sender, args);
                };
            }
        }
    }

    internal sealed unsafe class _EventSource_global__Microsoft_UI_Xaml_Input_HoldingEventHandler : global::ABI.WinRT.Interop.EventSource<global::Microsoft.UI.Xaml.Input.HoldingEventHandler>
    {


        internal _EventSource_global__Microsoft_UI_Xaml_Input_HoldingEventHandler(IObjectReference obj,
        delegate* unmanaged[Stdcall]<System.IntPtr, System.IntPtr, WinRT.EventRegistrationToken*, int> addHandler,
        delegate* unmanaged[Stdcall]<System.IntPtr, WinRT.EventRegistrationToken, int> removeHandler, int index) : base(obj, addHandler, removeHandler, index)
        {

        }

        protected override ObjectReferenceValue CreateMarshaler(global::Microsoft.UI.Xaml.Input.HoldingEventHandler handler) =>
        global::ABI.Microsoft.UI.Xaml.Input.HoldingEventHandler.CreateMarshaler2(handler);

        protected override global::ABI.WinRT.Interop.EventSourceState<global::Microsoft.UI.Xaml.Input.HoldingEventHandler> CreateEventSourceState() =>
        new EventState(ObjectReference.ThisPtr, Index);

        [global::WinRT.WinRTExposedType]
        private sealed class EventState : global::ABI.WinRT.Interop.EventSourceState<global::Microsoft.UI.Xaml.Input.HoldingEventHandler>
        {
            public EventState(System.IntPtr obj, int index)
            : base(obj, index)
            {
            }

            protected override global::Microsoft.UI.Xaml.Input.HoldingEventHandler GetEventInvoke()
            {
                return (object sender, global::Microsoft.UI.Xaml.Input.HoldingRoutedEventArgs e) =>
                {
                    var targetDelegate = TargetDelegate;
                    if (targetDelegate is null)
                    {
                        return ;
                    }
                    targetDelegate.Invoke(sender, e);
                };
            }
        }
    }

    internal sealed unsafe class _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_UI_Xaml_Controls_Primitives_IScrollControllerPanningInfo__object_ : global::ABI.WinRT.Interop.EventSource<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.Primitives.IScrollControllerPanningInfo, object>>
    {
        private static readonly bool initialized = global::WinRT.GenericTypeInstantiations.Windows_Foundation_TypedEventHandler_2_Microsoft_UI_Xaml_Controls_Primitives_IScrollControllerPanningInfo__object.EnsureInitialized();

        internal _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_UI_Xaml_Controls_Primitives_IScrollControllerPanningInfo__object_(IObjectReference obj,
        delegate* unmanaged[Stdcall]<System.IntPtr, System.IntPtr, WinRT.EventRegistrationToken*, int> addHandler,
        delegate* unmanaged[Stdcall]<System.IntPtr, WinRT.EventRegistrationToken, int> removeHandler, int index) : base(obj, addHandler, removeHandler, index)
        {
            _ = initialized;
        }

        protected override ObjectReferenceValue CreateMarshaler(global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.Primitives.IScrollControllerPanningInfo, object> handler) =>
        global::ABI.Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.Primitives.IScrollControllerPanningInfo, object>.CreateMarshaler2(handler);

        protected override global::ABI.WinRT.Interop.EventSourceState<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.Primitives.IScrollControllerPanningInfo, object>> CreateEventSourceState() =>
        new EventState(ObjectReference.ThisPtr, Index);

        [global::WinRT.WinRTExposedType]
        private sealed class EventState : global::ABI.WinRT.Interop.EventSourceState<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.Primitives.IScrollControllerPanningInfo, object>>
        {
            public EventState(System.IntPtr obj, int index)
            : base(obj, index)
            {
            }

            protected override global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.Primitives.IScrollControllerPanningInfo, object> GetEventInvoke()
            {
                return (global::Microsoft.UI.Xaml.Controls.Primitives.IScrollControllerPanningInfo sender, object args) =>
                {
                    var targetDelegate = TargetDelegate;
                    if (targetDelegate is null)
                    {
                        return ;
                    }
                    targetDelegate.Invoke(sender, args);
                };
            }
        }
    }

    internal sealed unsafe class _EventSource_global__Microsoft_UI_Xaml_Navigation_NavigatedEventHandler : global::ABI.WinRT.Interop.EventSource<global::Microsoft.UI.Xaml.Navigation.NavigatedEventHandler>
    {


        internal _EventSource_global__Microsoft_UI_Xaml_Navigation_NavigatedEventHandler(IObjectReference obj,
        delegate* unmanaged[Stdcall]<System.IntPtr, System.IntPtr, WinRT.EventRegistrationToken*, int> addHandler,
        delegate* unmanaged[Stdcall]<System.IntPtr, WinRT.EventRegistrationToken, int> removeHandler, int index) : base(obj, addHandler, removeHandler, index)
        {

        }

        protected override ObjectReferenceValue CreateMarshaler(global::Microsoft.UI.Xaml.Navigation.NavigatedEventHandler handler) =>
        global::ABI.Microsoft.UI.Xaml.Navigation.NavigatedEventHandler.CreateMarshaler2(handler);

        protected override global::ABI.WinRT.Interop.EventSourceState<global::Microsoft.UI.Xaml.Navigation.NavigatedEventHandler> CreateEventSourceState() =>
        new EventState(ObjectReference.ThisPtr, Index);

        [global::WinRT.WinRTExposedType]
        private sealed class EventState : global::ABI.WinRT.Interop.EventSourceState<global::Microsoft.UI.Xaml.Navigation.NavigatedEventHandler>
        {
            public EventState(System.IntPtr obj, int index)
            : base(obj, index)
            {
            }

            protected override global::Microsoft.UI.Xaml.Navigation.NavigatedEventHandler GetEventInvoke()
            {
                return (object sender, global::Microsoft.UI.Xaml.Navigation.NavigationEventArgs e) =>
                {
                    var targetDelegate = TargetDelegate;
                    if (targetDelegate is null)
                    {
                        return ;
                    }
                    targetDelegate.Invoke(sender, e);
                };
            }
        }
    }

    internal sealed unsafe class _EventSource_global__Windows_Foundation_Collections_VectorChangedEventHandler_object_ : global::ABI.WinRT.Interop.EventSource<global::Windows.Foundation.Collections.VectorChangedEventHandler<object>>
    {
        private static readonly bool initialized = global::WinRT.GenericTypeInstantiations.Windows_Foundation_Collections_VectorChangedEventHandler_1_object.EnsureInitialized();

        internal _EventSource_global__Windows_Foundation_Collections_VectorChangedEventHandler_object_(IObjectReference obj,
        delegate* unmanaged[Stdcall]<System.IntPtr, System.IntPtr, WinRT.EventRegistrationToken*, int> addHandler,
        delegate* unmanaged[Stdcall]<System.IntPtr, WinRT.EventRegistrationToken, int> removeHandler, int index) : base(obj, addHandler, removeHandler, index)
        {
            _ = initialized;
        }

        protected override ObjectReferenceValue CreateMarshaler(global::Windows.Foundation.Collections.VectorChangedEventHandler<object> handler) =>
        global::ABI.Windows.Foundation.Collections.VectorChangedEventHandler<object>.CreateMarshaler2(handler);

        protected override global::ABI.WinRT.Interop.EventSourceState<global::Windows.Foundation.Collections.VectorChangedEventHandler<object>> CreateEventSourceState() =>
        new EventState(ObjectReference.ThisPtr, Index);

        [global::WinRT.WinRTExposedType]
        private sealed class EventState : global::ABI.WinRT.Interop.EventSourceState<global::Windows.Foundation.Collections.VectorChangedEventHandler<object>>
        {
            public EventState(System.IntPtr obj, int index)
            : base(obj, index)
            {
            }

            protected override global::Windows.Foundation.Collections.VectorChangedEventHandler<object> GetEventInvoke()
            {
                return (global::Windows.Foundation.Collections.IObservableVector<object> sender, global::Windows.Foundation.Collections.IVectorChangedEventArgs @event) =>
                {
                    var targetDelegate = TargetDelegate;
                    if (targetDelegate is null)
                    {
                        return ;
                    }
                    targetDelegate.Invoke(sender, @event);
                };
            }
        }
    }

    internal sealed unsafe class _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_UI_Xaml_Controls_ComboBox__global__Microsoft_UI_Xaml_Controls_ComboBoxTextSubmittedEventArgs_ : global::ABI.WinRT.Interop.EventSource<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.ComboBox, global::Microsoft.UI.Xaml.Controls.ComboBoxTextSubmittedEventArgs>>
    {
        private static readonly bool initialized = global::WinRT.GenericTypeInstantiations.Windows_Foundation_TypedEventHandler_2_Microsoft_UI_Xaml_Controls_ComboBox__Microsoft_UI_Xaml_Controls_ComboBoxTextSubmittedEventArgs.EnsureInitialized();

        internal _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_UI_Xaml_Controls_ComboBox__global__Microsoft_UI_Xaml_Controls_ComboBoxTextSubmittedEventArgs_(IObjectReference obj,
        delegate* unmanaged[Stdcall]<System.IntPtr, System.IntPtr, WinRT.EventRegistrationToken*, int> addHandler,
        delegate* unmanaged[Stdcall]<System.IntPtr, WinRT.EventRegistrationToken, int> removeHandler, int index) : base(obj, addHandler, removeHandler, index)
        {
            _ = initialized;
        }

        protected override ObjectReferenceValue CreateMarshaler(global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.ComboBox, global::Microsoft.UI.Xaml.Controls.ComboBoxTextSubmittedEventArgs> handler) =>
        global::ABI.Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.ComboBox, global::Microsoft.UI.Xaml.Controls.ComboBoxTextSubmittedEventArgs>.CreateMarshaler2(handler);

        protected override global::ABI.WinRT.Interop.EventSourceState<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.ComboBox, global::Microsoft.UI.Xaml.Controls.ComboBoxTextSubmittedEventArgs>> CreateEventSourceState() =>
        new EventState(ObjectReference.ThisPtr, Index);

        [global::WinRT.WinRTExposedType]
        private sealed class EventState : global::ABI.WinRT.Interop.EventSourceState<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.ComboBox, global::Microsoft.UI.Xaml.Controls.ComboBoxTextSubmittedEventArgs>>
        {
            public EventState(System.IntPtr obj, int index)
            : base(obj, index)
            {
            }

            protected override global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.ComboBox, global::Microsoft.UI.Xaml.Controls.ComboBoxTextSubmittedEventArgs> GetEventInvoke()
            {
                return (global::Microsoft.UI.Xaml.Controls.ComboBox sender, global::Microsoft.UI.Xaml.Controls.ComboBoxTextSubmittedEventArgs args) =>
                {
                    var targetDelegate = TargetDelegate;
                    if (targetDelegate is null)
                    {
                        return ;
                    }
                    targetDelegate.Invoke(sender, args);
                };
            }
        }
    }

    internal sealed unsafe class _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_Web_WebView2_Core_CoreWebView2__global__Microsoft_Web_WebView2_Core_CoreWebView2ProcessFailedEventArgs_ : global::ABI.WinRT.Interop.EventSource<global::Windows.Foundation.TypedEventHandler<global::Microsoft.Web.WebView2.Core.CoreWebView2, global::Microsoft.Web.WebView2.Core.CoreWebView2ProcessFailedEventArgs>>
    {
        private static readonly bool initialized = global::WinRT.GenericTypeInstantiations.Windows_Foundation_TypedEventHandler_2_Microsoft_Web_WebView2_Core_CoreWebView2__Microsoft_Web_WebView2_Core_CoreWebView2ProcessFailedEventArgs.EnsureInitialized();

        internal _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_Web_WebView2_Core_CoreWebView2__global__Microsoft_Web_WebView2_Core_CoreWebView2ProcessFailedEventArgs_(IObjectReference obj,
        delegate* unmanaged[Stdcall]<System.IntPtr, System.IntPtr, WinRT.EventRegistrationToken*, int> addHandler,
        delegate* unmanaged[Stdcall]<System.IntPtr, WinRT.EventRegistrationToken, int> removeHandler, int index) : base(obj, addHandler, removeHandler, index)
        {
            _ = initialized;
        }

        protected override ObjectReferenceValue CreateMarshaler(global::Windows.Foundation.TypedEventHandler<global::Microsoft.Web.WebView2.Core.CoreWebView2, global::Microsoft.Web.WebView2.Core.CoreWebView2ProcessFailedEventArgs> handler) =>
        global::ABI.Windows.Foundation.TypedEventHandler<global::Microsoft.Web.WebView2.Core.CoreWebView2, global::Microsoft.Web.WebView2.Core.CoreWebView2ProcessFailedEventArgs>.CreateMarshaler2(handler);

        protected override global::ABI.WinRT.Interop.EventSourceState<global::Windows.Foundation.TypedEventHandler<global::Microsoft.Web.WebView2.Core.CoreWebView2, global::Microsoft.Web.WebView2.Core.CoreWebView2ProcessFailedEventArgs>> CreateEventSourceState() =>
        new EventState(ObjectReference.ThisPtr, Index);

        [global::WinRT.WinRTExposedType]
        private sealed class EventState : global::ABI.WinRT.Interop.EventSourceState<global::Windows.Foundation.TypedEventHandler<global::Microsoft.Web.WebView2.Core.CoreWebView2, global::Microsoft.Web.WebView2.Core.CoreWebView2ProcessFailedEventArgs>>
        {
            public EventState(System.IntPtr obj, int index)
            : base(obj, index)
            {
            }

            protected override global::Windows.Foundation.TypedEventHandler<global::Microsoft.Web.WebView2.Core.CoreWebView2, global::Microsoft.Web.WebView2.Core.CoreWebView2ProcessFailedEventArgs> GetEventInvoke()
            {
                return (global::Microsoft.Web.WebView2.Core.CoreWebView2 sender, global::Microsoft.Web.WebView2.Core.CoreWebView2ProcessFailedEventArgs args) =>
                {
                    var targetDelegate = TargetDelegate;
                    if (targetDelegate is null)
                    {
                        return ;
                    }
                    targetDelegate.Invoke(sender, args);
                };
            }
        }
    }

    internal sealed unsafe class _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_UI_Input_GestureRecognizer__global__Microsoft_UI_Input_ManipulationInertiaStartingEventArgs_ : global::ABI.WinRT.Interop.EventSource<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Input.GestureRecognizer, global::Microsoft.UI.Input.ManipulationInertiaStartingEventArgs>>
    {
        private static readonly bool initialized = global::WinRT.GenericTypeInstantiations.Windows_Foundation_TypedEventHandler_2_Microsoft_UI_Input_GestureRecognizer__Microsoft_UI_Input_ManipulationInertiaStartingEventArgs.EnsureInitialized();

        internal _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_UI_Input_GestureRecognizer__global__Microsoft_UI_Input_ManipulationInertiaStartingEventArgs_(IObjectReference obj,
        delegate* unmanaged[Stdcall]<System.IntPtr, System.IntPtr, WinRT.EventRegistrationToken*, int> addHandler,
        delegate* unmanaged[Stdcall]<System.IntPtr, WinRT.EventRegistrationToken, int> removeHandler, int index) : base(obj, addHandler, removeHandler, index)
        {
            _ = initialized;
        }

        protected override ObjectReferenceValue CreateMarshaler(global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Input.GestureRecognizer, global::Microsoft.UI.Input.ManipulationInertiaStartingEventArgs> handler) =>
        global::ABI.Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Input.GestureRecognizer, global::Microsoft.UI.Input.ManipulationInertiaStartingEventArgs>.CreateMarshaler2(handler);

        protected override global::ABI.WinRT.Interop.EventSourceState<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Input.GestureRecognizer, global::Microsoft.UI.Input.ManipulationInertiaStartingEventArgs>> CreateEventSourceState() =>
        new EventState(ObjectReference.ThisPtr, Index);

        [global::WinRT.WinRTExposedType]
        private sealed class EventState : global::ABI.WinRT.Interop.EventSourceState<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Input.GestureRecognizer, global::Microsoft.UI.Input.ManipulationInertiaStartingEventArgs>>
        {
            public EventState(System.IntPtr obj, int index)
            : base(obj, index)
            {
            }

            protected override global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Input.GestureRecognizer, global::Microsoft.UI.Input.ManipulationInertiaStartingEventArgs> GetEventInvoke()
            {
                return (global::Microsoft.UI.Input.GestureRecognizer sender, global::Microsoft.UI.Input.ManipulationInertiaStartingEventArgs args) =>
                {
                    var targetDelegate = TargetDelegate;
                    if (targetDelegate is null)
                    {
                        return ;
                    }
                    targetDelegate.Invoke(sender, args);
                };
            }
        }
    }

    internal sealed unsafe class _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_UI_Xaml_Controls_TextBox__global__Microsoft_UI_Xaml_Controls_CandidateWindowBoundsChangedEventArgs_ : global::ABI.WinRT.Interop.EventSource<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.TextBox, global::Microsoft.UI.Xaml.Controls.CandidateWindowBoundsChangedEventArgs>>
    {
        private static readonly bool initialized = global::WinRT.GenericTypeInstantiations.Windows_Foundation_TypedEventHandler_2_Microsoft_UI_Xaml_Controls_TextBox__Microsoft_UI_Xaml_Controls_CandidateWindowBoundsChangedEventArgs.EnsureInitialized();

        internal _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_UI_Xaml_Controls_TextBox__global__Microsoft_UI_Xaml_Controls_CandidateWindowBoundsChangedEventArgs_(IObjectReference obj,
        delegate* unmanaged[Stdcall]<System.IntPtr, System.IntPtr, WinRT.EventRegistrationToken*, int> addHandler,
        delegate* unmanaged[Stdcall]<System.IntPtr, WinRT.EventRegistrationToken, int> removeHandler, int index) : base(obj, addHandler, removeHandler, index)
        {
            _ = initialized;
        }

        protected override ObjectReferenceValue CreateMarshaler(global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.TextBox, global::Microsoft.UI.Xaml.Controls.CandidateWindowBoundsChangedEventArgs> handler) =>
        global::ABI.Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.TextBox, global::Microsoft.UI.Xaml.Controls.CandidateWindowBoundsChangedEventArgs>.CreateMarshaler2(handler);

        protected override global::ABI.WinRT.Interop.EventSourceState<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.TextBox, global::Microsoft.UI.Xaml.Controls.CandidateWindowBoundsChangedEventArgs>> CreateEventSourceState() =>
        new EventState(ObjectReference.ThisPtr, Index);

        [global::WinRT.WinRTExposedType]
        private sealed class EventState : global::ABI.WinRT.Interop.EventSourceState<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.TextBox, global::Microsoft.UI.Xaml.Controls.CandidateWindowBoundsChangedEventArgs>>
        {
            public EventState(System.IntPtr obj, int index)
            : base(obj, index)
            {
            }

            protected override global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.TextBox, global::Microsoft.UI.Xaml.Controls.CandidateWindowBoundsChangedEventArgs> GetEventInvoke()
            {
                return (global::Microsoft.UI.Xaml.Controls.TextBox sender, global::Microsoft.UI.Xaml.Controls.CandidateWindowBoundsChangedEventArgs args) =>
                {
                    var targetDelegate = TargetDelegate;
                    if (targetDelegate is null)
                    {
                        return ;
                    }
                    targetDelegate.Invoke(sender, args);
                };
            }
        }
    }

    internal sealed unsafe class _EventSource_global__Microsoft_UI_Xaml_Controls_ItemClickEventHandler : global::ABI.WinRT.Interop.EventSource<global::Microsoft.UI.Xaml.Controls.ItemClickEventHandler>
    {


        internal _EventSource_global__Microsoft_UI_Xaml_Controls_ItemClickEventHandler(IObjectReference obj,
        delegate* unmanaged[Stdcall]<System.IntPtr, System.IntPtr, WinRT.EventRegistrationToken*, int> addHandler,
        delegate* unmanaged[Stdcall]<System.IntPtr, WinRT.EventRegistrationToken, int> removeHandler, int index) : base(obj, addHandler, removeHandler, index)
        {

        }

        protected override ObjectReferenceValue CreateMarshaler(global::Microsoft.UI.Xaml.Controls.ItemClickEventHandler handler) =>
        global::ABI.Microsoft.UI.Xaml.Controls.ItemClickEventHandler.CreateMarshaler2(handler);

        protected override global::ABI.WinRT.Interop.EventSourceState<global::Microsoft.UI.Xaml.Controls.ItemClickEventHandler> CreateEventSourceState() =>
        new EventState(ObjectReference.ThisPtr, Index);

        [global::WinRT.WinRTExposedType]
        private sealed class EventState : global::ABI.WinRT.Interop.EventSourceState<global::Microsoft.UI.Xaml.Controls.ItemClickEventHandler>
        {
            public EventState(System.IntPtr obj, int index)
            : base(obj, index)
            {
            }

            protected override global::Microsoft.UI.Xaml.Controls.ItemClickEventHandler GetEventInvoke()
            {
                return (object sender, global::Microsoft.UI.Xaml.Controls.ItemClickEventArgs e) =>
                {
                    var targetDelegate = TargetDelegate;
                    if (targetDelegate is null)
                    {
                        return ;
                    }
                    targetDelegate.Invoke(sender, e);
                };
            }
        }
    }

    internal sealed unsafe class _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_UI_Xaml_Controls_TextBox__global__Microsoft_UI_Xaml_Controls_TextCompositionStartedEventArgs_ : global::ABI.WinRT.Interop.EventSource<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.TextBox, global::Microsoft.UI.Xaml.Controls.TextCompositionStartedEventArgs>>
    {
        private static readonly bool initialized = global::WinRT.GenericTypeInstantiations.Windows_Foundation_TypedEventHandler_2_Microsoft_UI_Xaml_Controls_TextBox__Microsoft_UI_Xaml_Controls_TextCompositionStartedEventArgs.EnsureInitialized();

        internal _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_UI_Xaml_Controls_TextBox__global__Microsoft_UI_Xaml_Controls_TextCompositionStartedEventArgs_(IObjectReference obj,
        delegate* unmanaged[Stdcall]<System.IntPtr, System.IntPtr, WinRT.EventRegistrationToken*, int> addHandler,
        delegate* unmanaged[Stdcall]<System.IntPtr, WinRT.EventRegistrationToken, int> removeHandler, int index) : base(obj, addHandler, removeHandler, index)
        {
            _ = initialized;
        }

        protected override ObjectReferenceValue CreateMarshaler(global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.TextBox, global::Microsoft.UI.Xaml.Controls.TextCompositionStartedEventArgs> handler) =>
        global::ABI.Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.TextBox, global::Microsoft.UI.Xaml.Controls.TextCompositionStartedEventArgs>.CreateMarshaler2(handler);

        protected override global::ABI.WinRT.Interop.EventSourceState<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.TextBox, global::Microsoft.UI.Xaml.Controls.TextCompositionStartedEventArgs>> CreateEventSourceState() =>
        new EventState(ObjectReference.ThisPtr, Index);

        [global::WinRT.WinRTExposedType]
        private sealed class EventState : global::ABI.WinRT.Interop.EventSourceState<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.TextBox, global::Microsoft.UI.Xaml.Controls.TextCompositionStartedEventArgs>>
        {
            public EventState(System.IntPtr obj, int index)
            : base(obj, index)
            {
            }

            protected override global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.TextBox, global::Microsoft.UI.Xaml.Controls.TextCompositionStartedEventArgs> GetEventInvoke()
            {
                return (global::Microsoft.UI.Xaml.Controls.TextBox sender, global::Microsoft.UI.Xaml.Controls.TextCompositionStartedEventArgs args) =>
                {
                    var targetDelegate = TargetDelegate;
                    if (targetDelegate is null)
                    {
                        return ;
                    }
                    targetDelegate.Invoke(sender, args);
                };
            }
        }
    }

    internal sealed unsafe class _EventSource_global__Microsoft_UI_Xaml_Input_DoubleTappedEventHandler : global::ABI.WinRT.Interop.EventSource<global::Microsoft.UI.Xaml.Input.DoubleTappedEventHandler>
    {


        internal _EventSource_global__Microsoft_UI_Xaml_Input_DoubleTappedEventHandler(IObjectReference obj,
        delegate* unmanaged[Stdcall]<System.IntPtr, System.IntPtr, WinRT.EventRegistrationToken*, int> addHandler,
        delegate* unmanaged[Stdcall]<System.IntPtr, WinRT.EventRegistrationToken, int> removeHandler, int index) : base(obj, addHandler, removeHandler, index)
        {

        }

        protected override ObjectReferenceValue CreateMarshaler(global::Microsoft.UI.Xaml.Input.DoubleTappedEventHandler handler) =>
        global::ABI.Microsoft.UI.Xaml.Input.DoubleTappedEventHandler.CreateMarshaler2(handler);

        protected override global::ABI.WinRT.Interop.EventSourceState<global::Microsoft.UI.Xaml.Input.DoubleTappedEventHandler> CreateEventSourceState() =>
        new EventState(ObjectReference.ThisPtr, Index);

        [global::WinRT.WinRTExposedType]
        private sealed class EventState : global::ABI.WinRT.Interop.EventSourceState<global::Microsoft.UI.Xaml.Input.DoubleTappedEventHandler>
        {
            public EventState(System.IntPtr obj, int index)
            : base(obj, index)
            {
            }

            protected override global::Microsoft.UI.Xaml.Input.DoubleTappedEventHandler GetEventInvoke()
            {
                return (object sender, global::Microsoft.UI.Xaml.Input.DoubleTappedRoutedEventArgs e) =>
                {
                    var targetDelegate = TargetDelegate;
                    if (targetDelegate is null)
                    {
                        return ;
                    }
                    targetDelegate.Invoke(sender, e);
                };
            }
        }
    }

    internal sealed unsafe class _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_UI_Xaml_Controls_TextBox__global__Microsoft_UI_Xaml_Controls_TextBoxTextChangingEventArgs_ : global::ABI.WinRT.Interop.EventSource<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.TextBox, global::Microsoft.UI.Xaml.Controls.TextBoxTextChangingEventArgs>>
    {
        private static readonly bool initialized = global::WinRT.GenericTypeInstantiations.Windows_Foundation_TypedEventHandler_2_Microsoft_UI_Xaml_Controls_TextBox__Microsoft_UI_Xaml_Controls_TextBoxTextChangingEventArgs.EnsureInitialized();

        internal _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_UI_Xaml_Controls_TextBox__global__Microsoft_UI_Xaml_Controls_TextBoxTextChangingEventArgs_(IObjectReference obj,
        delegate* unmanaged[Stdcall]<System.IntPtr, System.IntPtr, WinRT.EventRegistrationToken*, int> addHandler,
        delegate* unmanaged[Stdcall]<System.IntPtr, WinRT.EventRegistrationToken, int> removeHandler, int index) : base(obj, addHandler, removeHandler, index)
        {
            _ = initialized;
        }

        protected override ObjectReferenceValue CreateMarshaler(global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.TextBox, global::Microsoft.UI.Xaml.Controls.TextBoxTextChangingEventArgs> handler) =>
        global::ABI.Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.TextBox, global::Microsoft.UI.Xaml.Controls.TextBoxTextChangingEventArgs>.CreateMarshaler2(handler);

        protected override global::ABI.WinRT.Interop.EventSourceState<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.TextBox, global::Microsoft.UI.Xaml.Controls.TextBoxTextChangingEventArgs>> CreateEventSourceState() =>
        new EventState(ObjectReference.ThisPtr, Index);

        [global::WinRT.WinRTExposedType]
        private sealed class EventState : global::ABI.WinRT.Interop.EventSourceState<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.TextBox, global::Microsoft.UI.Xaml.Controls.TextBoxTextChangingEventArgs>>
        {
            public EventState(System.IntPtr obj, int index)
            : base(obj, index)
            {
            }

            protected override global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.TextBox, global::Microsoft.UI.Xaml.Controls.TextBoxTextChangingEventArgs> GetEventInvoke()
            {
                return (global::Microsoft.UI.Xaml.Controls.TextBox sender, global::Microsoft.UI.Xaml.Controls.TextBoxTextChangingEventArgs args) =>
                {
                    var targetDelegate = TargetDelegate;
                    if (targetDelegate is null)
                    {
                        return ;
                    }
                    targetDelegate.Invoke(sender, args);
                };
            }
        }
    }

    internal sealed unsafe class _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_UI_Xaml_Controls_ContentDialog__global__Microsoft_UI_Xaml_Controls_ContentDialogButtonClickEventArgs_ : global::ABI.WinRT.Interop.EventSource<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.ContentDialog, global::Microsoft.UI.Xaml.Controls.ContentDialogButtonClickEventArgs>>
    {
        private static readonly bool initialized = global::WinRT.GenericTypeInstantiations.Windows_Foundation_TypedEventHandler_2_Microsoft_UI_Xaml_Controls_ContentDialog__Microsoft_UI_Xaml_Controls_ContentDialogButtonClickEventArgs.EnsureInitialized();

        internal _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_UI_Xaml_Controls_ContentDialog__global__Microsoft_UI_Xaml_Controls_ContentDialogButtonClickEventArgs_(IObjectReference obj,
        delegate* unmanaged[Stdcall]<System.IntPtr, System.IntPtr, WinRT.EventRegistrationToken*, int> addHandler,
        delegate* unmanaged[Stdcall]<System.IntPtr, WinRT.EventRegistrationToken, int> removeHandler, int index) : base(obj, addHandler, removeHandler, index)
        {
            _ = initialized;
        }

        protected override ObjectReferenceValue CreateMarshaler(global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.ContentDialog, global::Microsoft.UI.Xaml.Controls.ContentDialogButtonClickEventArgs> handler) =>
        global::ABI.Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.ContentDialog, global::Microsoft.UI.Xaml.Controls.ContentDialogButtonClickEventArgs>.CreateMarshaler2(handler);

        protected override global::ABI.WinRT.Interop.EventSourceState<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.ContentDialog, global::Microsoft.UI.Xaml.Controls.ContentDialogButtonClickEventArgs>> CreateEventSourceState() =>
        new EventState(ObjectReference.ThisPtr, Index);

        [global::WinRT.WinRTExposedType]
        private sealed class EventState : global::ABI.WinRT.Interop.EventSourceState<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.ContentDialog, global::Microsoft.UI.Xaml.Controls.ContentDialogButtonClickEventArgs>>
        {
            public EventState(System.IntPtr obj, int index)
            : base(obj, index)
            {
            }

            protected override global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.ContentDialog, global::Microsoft.UI.Xaml.Controls.ContentDialogButtonClickEventArgs> GetEventInvoke()
            {
                return (global::Microsoft.UI.Xaml.Controls.ContentDialog sender, global::Microsoft.UI.Xaml.Controls.ContentDialogButtonClickEventArgs args) =>
                {
                    var targetDelegate = TargetDelegate;
                    if (targetDelegate is null)
                    {
                        return ;
                    }
                    targetDelegate.Invoke(sender, args);
                };
            }
        }
    }

    internal sealed unsafe class _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_UI_Xaml_Controls_RichEditBox__global__Microsoft_UI_Xaml_Controls_TextCompositionChangedEventArgs_ : global::ABI.WinRT.Interop.EventSource<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.RichEditBox, global::Microsoft.UI.Xaml.Controls.TextCompositionChangedEventArgs>>
    {
        private static readonly bool initialized = global::WinRT.GenericTypeInstantiations.Windows_Foundation_TypedEventHandler_2_Microsoft_UI_Xaml_Controls_RichEditBox__Microsoft_UI_Xaml_Controls_TextCompositionChangedEventArgs.EnsureInitialized();

        internal _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_UI_Xaml_Controls_RichEditBox__global__Microsoft_UI_Xaml_Controls_TextCompositionChangedEventArgs_(IObjectReference obj,
        delegate* unmanaged[Stdcall]<System.IntPtr, System.IntPtr, WinRT.EventRegistrationToken*, int> addHandler,
        delegate* unmanaged[Stdcall]<System.IntPtr, WinRT.EventRegistrationToken, int> removeHandler, int index) : base(obj, addHandler, removeHandler, index)
        {
            _ = initialized;
        }

        protected override ObjectReferenceValue CreateMarshaler(global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.RichEditBox, global::Microsoft.UI.Xaml.Controls.TextCompositionChangedEventArgs> handler) =>
        global::ABI.Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.RichEditBox, global::Microsoft.UI.Xaml.Controls.TextCompositionChangedEventArgs>.CreateMarshaler2(handler);

        protected override global::ABI.WinRT.Interop.EventSourceState<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.RichEditBox, global::Microsoft.UI.Xaml.Controls.TextCompositionChangedEventArgs>> CreateEventSourceState() =>
        new EventState(ObjectReference.ThisPtr, Index);

        [global::WinRT.WinRTExposedType]
        private sealed class EventState : global::ABI.WinRT.Interop.EventSourceState<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.RichEditBox, global::Microsoft.UI.Xaml.Controls.TextCompositionChangedEventArgs>>
        {
            public EventState(System.IntPtr obj, int index)
            : base(obj, index)
            {
            }

            protected override global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.RichEditBox, global::Microsoft.UI.Xaml.Controls.TextCompositionChangedEventArgs> GetEventInvoke()
            {
                return (global::Microsoft.UI.Xaml.Controls.RichEditBox sender, global::Microsoft.UI.Xaml.Controls.TextCompositionChangedEventArgs args) =>
                {
                    var targetDelegate = TargetDelegate;
                    if (targetDelegate is null)
                    {
                        return ;
                    }
                    targetDelegate.Invoke(sender, args);
                };
            }
        }
    }

    internal sealed unsafe class _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_UI_Xaml_Controls_SwipeItem__global__Microsoft_UI_Xaml_Controls_SwipeItemInvokedEventArgs_ : global::ABI.WinRT.Interop.EventSource<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.SwipeItem, global::Microsoft.UI.Xaml.Controls.SwipeItemInvokedEventArgs>>
    {
        private static readonly bool initialized = global::WinRT.GenericTypeInstantiations.Windows_Foundation_TypedEventHandler_2_Microsoft_UI_Xaml_Controls_SwipeItem__Microsoft_UI_Xaml_Controls_SwipeItemInvokedEventArgs.EnsureInitialized();

        internal _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_UI_Xaml_Controls_SwipeItem__global__Microsoft_UI_Xaml_Controls_SwipeItemInvokedEventArgs_(IObjectReference obj,
        delegate* unmanaged[Stdcall]<System.IntPtr, System.IntPtr, WinRT.EventRegistrationToken*, int> addHandler,
        delegate* unmanaged[Stdcall]<System.IntPtr, WinRT.EventRegistrationToken, int> removeHandler, int index) : base(obj, addHandler, removeHandler, index)
        {
            _ = initialized;
        }

        protected override ObjectReferenceValue CreateMarshaler(global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.SwipeItem, global::Microsoft.UI.Xaml.Controls.SwipeItemInvokedEventArgs> handler) =>
        global::ABI.Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.SwipeItem, global::Microsoft.UI.Xaml.Controls.SwipeItemInvokedEventArgs>.CreateMarshaler2(handler);

        protected override global::ABI.WinRT.Interop.EventSourceState<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.SwipeItem, global::Microsoft.UI.Xaml.Controls.SwipeItemInvokedEventArgs>> CreateEventSourceState() =>
        new EventState(ObjectReference.ThisPtr, Index);

        [global::WinRT.WinRTExposedType]
        private sealed class EventState : global::ABI.WinRT.Interop.EventSourceState<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.SwipeItem, global::Microsoft.UI.Xaml.Controls.SwipeItemInvokedEventArgs>>
        {
            public EventState(System.IntPtr obj, int index)
            : base(obj, index)
            {
            }

            protected override global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.SwipeItem, global::Microsoft.UI.Xaml.Controls.SwipeItemInvokedEventArgs> GetEventInvoke()
            {
                return (global::Microsoft.UI.Xaml.Controls.SwipeItem sender, global::Microsoft.UI.Xaml.Controls.SwipeItemInvokedEventArgs args) =>
                {
                    var targetDelegate = TargetDelegate;
                    if (targetDelegate is null)
                    {
                        return ;
                    }
                    targetDelegate.Invoke(sender, args);
                };
            }
        }
    }

    internal sealed unsafe class _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_UI_Dispatching_DispatcherQueueTimer__object_ : global::ABI.WinRT.Interop.EventSource<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Dispatching.DispatcherQueueTimer, object>>
    {
        private static readonly bool initialized = global::WinRT.GenericTypeInstantiations.Windows_Foundation_TypedEventHandler_2_Microsoft_UI_Dispatching_DispatcherQueueTimer__object.EnsureInitialized();

        internal _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_UI_Dispatching_DispatcherQueueTimer__object_(IObjectReference obj,
        delegate* unmanaged[Stdcall]<System.IntPtr, System.IntPtr, WinRT.EventRegistrationToken*, int> addHandler,
        delegate* unmanaged[Stdcall]<System.IntPtr, WinRT.EventRegistrationToken, int> removeHandler, int index) : base(obj, addHandler, removeHandler, index)
        {
            _ = initialized;
        }

        protected override ObjectReferenceValue CreateMarshaler(global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Dispatching.DispatcherQueueTimer, object> handler) =>
        global::ABI.Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Dispatching.DispatcherQueueTimer, object>.CreateMarshaler2(handler);

        protected override global::ABI.WinRT.Interop.EventSourceState<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Dispatching.DispatcherQueueTimer, object>> CreateEventSourceState() =>
        new EventState(ObjectReference.ThisPtr, Index);

        [global::WinRT.WinRTExposedType]
        private sealed class EventState : global::ABI.WinRT.Interop.EventSourceState<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Dispatching.DispatcherQueueTimer, object>>
        {
            public EventState(System.IntPtr obj, int index)
            : base(obj, index)
            {
            }

            protected override global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Dispatching.DispatcherQueueTimer, object> GetEventInvoke()
            {
                return (global::Microsoft.UI.Dispatching.DispatcherQueueTimer sender, object args) =>
                {
                    var targetDelegate = TargetDelegate;
                    if (targetDelegate is null)
                    {
                        return ;
                    }
                    targetDelegate.Invoke(sender, args);
                };
            }
        }
    }

    internal sealed unsafe class _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_UI_Xaml_Controls_Primitives_ScrollPresenter__global__Microsoft_UI_Xaml_Controls_ScrollingScrollCompletedEventArgs_ : global::ABI.WinRT.Interop.EventSource<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.Primitives.ScrollPresenter, global::Microsoft.UI.Xaml.Controls.ScrollingScrollCompletedEventArgs>>
    {
        private static readonly bool initialized = global::WinRT.GenericTypeInstantiations.Windows_Foundation_TypedEventHandler_2_Microsoft_UI_Xaml_Controls_Primitives_ScrollPresenter__Microsoft_UI_Xaml_Controls_ScrollingScrollCompletedEventArgs.EnsureInitialized();

        internal _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_UI_Xaml_Controls_Primitives_ScrollPresenter__global__Microsoft_UI_Xaml_Controls_ScrollingScrollCompletedEventArgs_(IObjectReference obj,
        delegate* unmanaged[Stdcall]<System.IntPtr, System.IntPtr, WinRT.EventRegistrationToken*, int> addHandler,
        delegate* unmanaged[Stdcall]<System.IntPtr, WinRT.EventRegistrationToken, int> removeHandler, int index) : base(obj, addHandler, removeHandler, index)
        {
            _ = initialized;
        }

        protected override ObjectReferenceValue CreateMarshaler(global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.Primitives.ScrollPresenter, global::Microsoft.UI.Xaml.Controls.ScrollingScrollCompletedEventArgs> handler) =>
        global::ABI.Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.Primitives.ScrollPresenter, global::Microsoft.UI.Xaml.Controls.ScrollingScrollCompletedEventArgs>.CreateMarshaler2(handler);

        protected override global::ABI.WinRT.Interop.EventSourceState<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.Primitives.ScrollPresenter, global::Microsoft.UI.Xaml.Controls.ScrollingScrollCompletedEventArgs>> CreateEventSourceState() =>
        new EventState(ObjectReference.ThisPtr, Index);

        [global::WinRT.WinRTExposedType]
        private sealed class EventState : global::ABI.WinRT.Interop.EventSourceState<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.Primitives.ScrollPresenter, global::Microsoft.UI.Xaml.Controls.ScrollingScrollCompletedEventArgs>>
        {
            public EventState(System.IntPtr obj, int index)
            : base(obj, index)
            {
            }

            protected override global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.Primitives.ScrollPresenter, global::Microsoft.UI.Xaml.Controls.ScrollingScrollCompletedEventArgs> GetEventInvoke()
            {
                return (global::Microsoft.UI.Xaml.Controls.Primitives.ScrollPresenter sender, global::Microsoft.UI.Xaml.Controls.ScrollingScrollCompletedEventArgs args) =>
                {
                    var targetDelegate = TargetDelegate;
                    if (targetDelegate is null)
                    {
                        return ;
                    }
                    targetDelegate.Invoke(sender, args);
                };
            }
        }
    }

    internal sealed unsafe class _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_UI_Xaml_Controls_RefreshVisualizer__global__Microsoft_UI_Xaml_Controls_RefreshRequestedEventArgs_ : global::ABI.WinRT.Interop.EventSource<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.RefreshVisualizer, global::Microsoft.UI.Xaml.Controls.RefreshRequestedEventArgs>>
    {
        private static readonly bool initialized = global::WinRT.GenericTypeInstantiations.Windows_Foundation_TypedEventHandler_2_Microsoft_UI_Xaml_Controls_RefreshVisualizer__Microsoft_UI_Xaml_Controls_RefreshRequestedEventArgs.EnsureInitialized();

        internal _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_UI_Xaml_Controls_RefreshVisualizer__global__Microsoft_UI_Xaml_Controls_RefreshRequestedEventArgs_(IObjectReference obj,
        delegate* unmanaged[Stdcall]<System.IntPtr, System.IntPtr, WinRT.EventRegistrationToken*, int> addHandler,
        delegate* unmanaged[Stdcall]<System.IntPtr, WinRT.EventRegistrationToken, int> removeHandler, int index) : base(obj, addHandler, removeHandler, index)
        {
            _ = initialized;
        }

        protected override ObjectReferenceValue CreateMarshaler(global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.RefreshVisualizer, global::Microsoft.UI.Xaml.Controls.RefreshRequestedEventArgs> handler) =>
        global::ABI.Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.RefreshVisualizer, global::Microsoft.UI.Xaml.Controls.RefreshRequestedEventArgs>.CreateMarshaler2(handler);

        protected override global::ABI.WinRT.Interop.EventSourceState<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.RefreshVisualizer, global::Microsoft.UI.Xaml.Controls.RefreshRequestedEventArgs>> CreateEventSourceState() =>
        new EventState(ObjectReference.ThisPtr, Index);

        [global::WinRT.WinRTExposedType]
        private sealed class EventState : global::ABI.WinRT.Interop.EventSourceState<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.RefreshVisualizer, global::Microsoft.UI.Xaml.Controls.RefreshRequestedEventArgs>>
        {
            public EventState(System.IntPtr obj, int index)
            : base(obj, index)
            {
            }

            protected override global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.RefreshVisualizer, global::Microsoft.UI.Xaml.Controls.RefreshRequestedEventArgs> GetEventInvoke()
            {
                return (global::Microsoft.UI.Xaml.Controls.RefreshVisualizer sender, global::Microsoft.UI.Xaml.Controls.RefreshRequestedEventArgs args) =>
                {
                    var targetDelegate = TargetDelegate;
                    if (targetDelegate is null)
                    {
                        return ;
                    }
                    targetDelegate.Invoke(sender, args);
                };
            }
        }
    }

    internal sealed unsafe class _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_Web_WebView2_Core_CoreWebView2Frame__global__Microsoft_Web_WebView2_Core_CoreWebView2PermissionRequestedEventArgs_ : global::ABI.WinRT.Interop.EventSource<global::Windows.Foundation.TypedEventHandler<global::Microsoft.Web.WebView2.Core.CoreWebView2Frame, global::Microsoft.Web.WebView2.Core.CoreWebView2PermissionRequestedEventArgs>>
    {
        private static readonly bool initialized = global::WinRT.GenericTypeInstantiations.Windows_Foundation_TypedEventHandler_2_Microsoft_Web_WebView2_Core_CoreWebView2Frame__Microsoft_Web_WebView2_Core_CoreWebView2PermissionRequestedEventArgs.EnsureInitialized();

        internal _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_Web_WebView2_Core_CoreWebView2Frame__global__Microsoft_Web_WebView2_Core_CoreWebView2PermissionRequestedEventArgs_(IObjectReference obj,
        delegate* unmanaged[Stdcall]<System.IntPtr, System.IntPtr, WinRT.EventRegistrationToken*, int> addHandler,
        delegate* unmanaged[Stdcall]<System.IntPtr, WinRT.EventRegistrationToken, int> removeHandler, int index) : base(obj, addHandler, removeHandler, index)
        {
            _ = initialized;
        }

        protected override ObjectReferenceValue CreateMarshaler(global::Windows.Foundation.TypedEventHandler<global::Microsoft.Web.WebView2.Core.CoreWebView2Frame, global::Microsoft.Web.WebView2.Core.CoreWebView2PermissionRequestedEventArgs> handler) =>
        global::ABI.Windows.Foundation.TypedEventHandler<global::Microsoft.Web.WebView2.Core.CoreWebView2Frame, global::Microsoft.Web.WebView2.Core.CoreWebView2PermissionRequestedEventArgs>.CreateMarshaler2(handler);

        protected override global::ABI.WinRT.Interop.EventSourceState<global::Windows.Foundation.TypedEventHandler<global::Microsoft.Web.WebView2.Core.CoreWebView2Frame, global::Microsoft.Web.WebView2.Core.CoreWebView2PermissionRequestedEventArgs>> CreateEventSourceState() =>
        new EventState(ObjectReference.ThisPtr, Index);

        [global::WinRT.WinRTExposedType]
        private sealed class EventState : global::ABI.WinRT.Interop.EventSourceState<global::Windows.Foundation.TypedEventHandler<global::Microsoft.Web.WebView2.Core.CoreWebView2Frame, global::Microsoft.Web.WebView2.Core.CoreWebView2PermissionRequestedEventArgs>>
        {
            public EventState(System.IntPtr obj, int index)
            : base(obj, index)
            {
            }

            protected override global::Windows.Foundation.TypedEventHandler<global::Microsoft.Web.WebView2.Core.CoreWebView2Frame, global::Microsoft.Web.WebView2.Core.CoreWebView2PermissionRequestedEventArgs> GetEventInvoke()
            {
                return (global::Microsoft.Web.WebView2.Core.CoreWebView2Frame sender, global::Microsoft.Web.WebView2.Core.CoreWebView2PermissionRequestedEventArgs args) =>
                {
                    var targetDelegate = TargetDelegate;
                    if (targetDelegate is null)
                    {
                        return ;
                    }
                    targetDelegate.Invoke(sender, args);
                };
            }
        }
    }

    internal sealed unsafe class _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_Web_WebView2_Core_CoreWebView2ContextMenuItem__object_ : global::ABI.WinRT.Interop.EventSource<global::Windows.Foundation.TypedEventHandler<global::Microsoft.Web.WebView2.Core.CoreWebView2ContextMenuItem, object>>
    {
        private static readonly bool initialized = global::WinRT.GenericTypeInstantiations.Windows_Foundation_TypedEventHandler_2_Microsoft_Web_WebView2_Core_CoreWebView2ContextMenuItem__object.EnsureInitialized();

        internal _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_Web_WebView2_Core_CoreWebView2ContextMenuItem__object_(IObjectReference obj,
        delegate* unmanaged[Stdcall]<System.IntPtr, System.IntPtr, WinRT.EventRegistrationToken*, int> addHandler,
        delegate* unmanaged[Stdcall]<System.IntPtr, WinRT.EventRegistrationToken, int> removeHandler, int index) : base(obj, addHandler, removeHandler, index)
        {
            _ = initialized;
        }

        protected override ObjectReferenceValue CreateMarshaler(global::Windows.Foundation.TypedEventHandler<global::Microsoft.Web.WebView2.Core.CoreWebView2ContextMenuItem, object> handler) =>
        global::ABI.Windows.Foundation.TypedEventHandler<global::Microsoft.Web.WebView2.Core.CoreWebView2ContextMenuItem, object>.CreateMarshaler2(handler);

        protected override global::ABI.WinRT.Interop.EventSourceState<global::Windows.Foundation.TypedEventHandler<global::Microsoft.Web.WebView2.Core.CoreWebView2ContextMenuItem, object>> CreateEventSourceState() =>
        new EventState(ObjectReference.ThisPtr, Index);

        [global::WinRT.WinRTExposedType]
        private sealed class EventState : global::ABI.WinRT.Interop.EventSourceState<global::Windows.Foundation.TypedEventHandler<global::Microsoft.Web.WebView2.Core.CoreWebView2ContextMenuItem, object>>
        {
            public EventState(System.IntPtr obj, int index)
            : base(obj, index)
            {
            }

            protected override global::Windows.Foundation.TypedEventHandler<global::Microsoft.Web.WebView2.Core.CoreWebView2ContextMenuItem, object> GetEventInvoke()
            {
                return (global::Microsoft.Web.WebView2.Core.CoreWebView2ContextMenuItem sender, object args) =>
                {
                    var targetDelegate = TargetDelegate;
                    if (targetDelegate is null)
                    {
                        return ;
                    }
                    targetDelegate.Invoke(sender, args);
                };
            }
        }
    }

    internal sealed unsafe class _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_UI_Xaml_Controls_LinedFlowLayout__global__Microsoft_UI_Xaml_Controls_LinedFlowLayoutItemsInfoRequestedEventArgs_ : global::ABI.WinRT.Interop.EventSource<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.LinedFlowLayout, global::Microsoft.UI.Xaml.Controls.LinedFlowLayoutItemsInfoRequestedEventArgs>>
    {
        private static readonly bool initialized = global::WinRT.GenericTypeInstantiations.Windows_Foundation_TypedEventHandler_2_Microsoft_UI_Xaml_Controls_LinedFlowLayout__Microsoft_UI_Xaml_Controls_LinedFlowLayoutItemsInfoRequestedEventArgs.EnsureInitialized();

        internal _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_UI_Xaml_Controls_LinedFlowLayout__global__Microsoft_UI_Xaml_Controls_LinedFlowLayoutItemsInfoRequestedEventArgs_(IObjectReference obj,
        delegate* unmanaged[Stdcall]<System.IntPtr, System.IntPtr, WinRT.EventRegistrationToken*, int> addHandler,
        delegate* unmanaged[Stdcall]<System.IntPtr, WinRT.EventRegistrationToken, int> removeHandler, int index) : base(obj, addHandler, removeHandler, index)
        {
            _ = initialized;
        }

        protected override ObjectReferenceValue CreateMarshaler(global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.LinedFlowLayout, global::Microsoft.UI.Xaml.Controls.LinedFlowLayoutItemsInfoRequestedEventArgs> handler) =>
        global::ABI.Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.LinedFlowLayout, global::Microsoft.UI.Xaml.Controls.LinedFlowLayoutItemsInfoRequestedEventArgs>.CreateMarshaler2(handler);

        protected override global::ABI.WinRT.Interop.EventSourceState<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.LinedFlowLayout, global::Microsoft.UI.Xaml.Controls.LinedFlowLayoutItemsInfoRequestedEventArgs>> CreateEventSourceState() =>
        new EventState(ObjectReference.ThisPtr, Index);

        [global::WinRT.WinRTExposedType]
        private sealed class EventState : global::ABI.WinRT.Interop.EventSourceState<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.LinedFlowLayout, global::Microsoft.UI.Xaml.Controls.LinedFlowLayoutItemsInfoRequestedEventArgs>>
        {
            public EventState(System.IntPtr obj, int index)
            : base(obj, index)
            {
            }

            protected override global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.LinedFlowLayout, global::Microsoft.UI.Xaml.Controls.LinedFlowLayoutItemsInfoRequestedEventArgs> GetEventInvoke()
            {
                return (global::Microsoft.UI.Xaml.Controls.LinedFlowLayout sender, global::Microsoft.UI.Xaml.Controls.LinedFlowLayoutItemsInfoRequestedEventArgs args) =>
                {
                    var targetDelegate = TargetDelegate;
                    if (targetDelegate is null)
                    {
                        return ;
                    }
                    targetDelegate.Invoke(sender, args);
                };
            }
        }
    }

    internal sealed unsafe class _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_UI_Xaml_Controls_ScrollView__global__Microsoft_UI_Xaml_Controls_ScrollingScrollStartingEventArgs_ : global::ABI.WinRT.Interop.EventSource<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.ScrollView, global::Microsoft.UI.Xaml.Controls.ScrollingScrollStartingEventArgs>>
    {
        private static readonly bool initialized = global::WinRT.GenericTypeInstantiations.Windows_Foundation_TypedEventHandler_2_Microsoft_UI_Xaml_Controls_ScrollView__Microsoft_UI_Xaml_Controls_ScrollingScrollStartingEventArgs.EnsureInitialized();

        internal _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_UI_Xaml_Controls_ScrollView__global__Microsoft_UI_Xaml_Controls_ScrollingScrollStartingEventArgs_(IObjectReference obj,
        delegate* unmanaged[Stdcall]<System.IntPtr, System.IntPtr, WinRT.EventRegistrationToken*, int> addHandler,
        delegate* unmanaged[Stdcall]<System.IntPtr, WinRT.EventRegistrationToken, int> removeHandler, int index) : base(obj, addHandler, removeHandler, index)
        {
            _ = initialized;
        }

        protected override ObjectReferenceValue CreateMarshaler(global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.ScrollView, global::Microsoft.UI.Xaml.Controls.ScrollingScrollStartingEventArgs> handler) =>
        global::ABI.Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.ScrollView, global::Microsoft.UI.Xaml.Controls.ScrollingScrollStartingEventArgs>.CreateMarshaler2(handler);

        protected override global::ABI.WinRT.Interop.EventSourceState<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.ScrollView, global::Microsoft.UI.Xaml.Controls.ScrollingScrollStartingEventArgs>> CreateEventSourceState() =>
        new EventState(ObjectReference.ThisPtr, Index);

        [global::WinRT.WinRTExposedType]
        private sealed class EventState : global::ABI.WinRT.Interop.EventSourceState<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.ScrollView, global::Microsoft.UI.Xaml.Controls.ScrollingScrollStartingEventArgs>>
        {
            public EventState(System.IntPtr obj, int index)
            : base(obj, index)
            {
            }

            protected override global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.ScrollView, global::Microsoft.UI.Xaml.Controls.ScrollingScrollStartingEventArgs> GetEventInvoke()
            {
                return (global::Microsoft.UI.Xaml.Controls.ScrollView sender, global::Microsoft.UI.Xaml.Controls.ScrollingScrollStartingEventArgs args) =>
                {
                    var targetDelegate = TargetDelegate;
                    if (targetDelegate is null)
                    {
                        return ;
                    }
                    targetDelegate.Invoke(sender, args);
                };
            }
        }
    }

    internal sealed unsafe class _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_Web_WebView2_Core_CoreWebView2CompositionController__global__Microsoft_Web_WebView2_Core_CoreWebView2NonClientRegionChangedEventArgs_ : global::ABI.WinRT.Interop.EventSource<global::Windows.Foundation.TypedEventHandler<global::Microsoft.Web.WebView2.Core.CoreWebView2CompositionController, global::Microsoft.Web.WebView2.Core.CoreWebView2NonClientRegionChangedEventArgs>>
    {
        private static readonly bool initialized = global::WinRT.GenericTypeInstantiations.Windows_Foundation_TypedEventHandler_2_Microsoft_Web_WebView2_Core_CoreWebView2CompositionController__Microsoft_Web_WebView2_Core_CoreWebView2NonClientRegionChangedEventArgs.EnsureInitialized();

        internal _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_Web_WebView2_Core_CoreWebView2CompositionController__global__Microsoft_Web_WebView2_Core_CoreWebView2NonClientRegionChangedEventArgs_(IObjectReference obj,
        delegate* unmanaged[Stdcall]<System.IntPtr, System.IntPtr, WinRT.EventRegistrationToken*, int> addHandler,
        delegate* unmanaged[Stdcall]<System.IntPtr, WinRT.EventRegistrationToken, int> removeHandler, int index) : base(obj, addHandler, removeHandler, index)
        {
            _ = initialized;
        }

        protected override ObjectReferenceValue CreateMarshaler(global::Windows.Foundation.TypedEventHandler<global::Microsoft.Web.WebView2.Core.CoreWebView2CompositionController, global::Microsoft.Web.WebView2.Core.CoreWebView2NonClientRegionChangedEventArgs> handler) =>
        global::ABI.Windows.Foundation.TypedEventHandler<global::Microsoft.Web.WebView2.Core.CoreWebView2CompositionController, global::Microsoft.Web.WebView2.Core.CoreWebView2NonClientRegionChangedEventArgs>.CreateMarshaler2(handler);

        protected override global::ABI.WinRT.Interop.EventSourceState<global::Windows.Foundation.TypedEventHandler<global::Microsoft.Web.WebView2.Core.CoreWebView2CompositionController, global::Microsoft.Web.WebView2.Core.CoreWebView2NonClientRegionChangedEventArgs>> CreateEventSourceState() =>
        new EventState(ObjectReference.ThisPtr, Index);

        [global::WinRT.WinRTExposedType]
        private sealed class EventState : global::ABI.WinRT.Interop.EventSourceState<global::Windows.Foundation.TypedEventHandler<global::Microsoft.Web.WebView2.Core.CoreWebView2CompositionController, global::Microsoft.Web.WebView2.Core.CoreWebView2NonClientRegionChangedEventArgs>>
        {
            public EventState(System.IntPtr obj, int index)
            : base(obj, index)
            {
            }

            protected override global::Windows.Foundation.TypedEventHandler<global::Microsoft.Web.WebView2.Core.CoreWebView2CompositionController, global::Microsoft.Web.WebView2.Core.CoreWebView2NonClientRegionChangedEventArgs> GetEventInvoke()
            {
                return (global::Microsoft.Web.WebView2.Core.CoreWebView2CompositionController sender, global::Microsoft.Web.WebView2.Core.CoreWebView2NonClientRegionChangedEventArgs args) =>
                {
                    var targetDelegate = TargetDelegate;
                    if (targetDelegate is null)
                    {
                        return ;
                    }
                    targetDelegate.Invoke(sender, args);
                };
            }
        }
    }

    internal sealed unsafe class _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_UI_Xaml_UIElement__global__Microsoft_UI_Xaml_Input_LosingFocusEventArgs_ : global::ABI.WinRT.Interop.EventSource<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.UIElement, global::Microsoft.UI.Xaml.Input.LosingFocusEventArgs>>
    {
        private static readonly bool initialized = global::WinRT.GenericTypeInstantiations.Windows_Foundation_TypedEventHandler_2_Microsoft_UI_Xaml_UIElement__Microsoft_UI_Xaml_Input_LosingFocusEventArgs.EnsureInitialized();

        internal _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_UI_Xaml_UIElement__global__Microsoft_UI_Xaml_Input_LosingFocusEventArgs_(IObjectReference obj,
        delegate* unmanaged[Stdcall]<System.IntPtr, System.IntPtr, WinRT.EventRegistrationToken*, int> addHandler,
        delegate* unmanaged[Stdcall]<System.IntPtr, WinRT.EventRegistrationToken, int> removeHandler, int index) : base(obj, addHandler, removeHandler, index)
        {
            _ = initialized;
        }

        protected override ObjectReferenceValue CreateMarshaler(global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.UIElement, global::Microsoft.UI.Xaml.Input.LosingFocusEventArgs> handler) =>
        global::ABI.Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.UIElement, global::Microsoft.UI.Xaml.Input.LosingFocusEventArgs>.CreateMarshaler2(handler);

        protected override global::ABI.WinRT.Interop.EventSourceState<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.UIElement, global::Microsoft.UI.Xaml.Input.LosingFocusEventArgs>> CreateEventSourceState() =>
        new EventState(ObjectReference.ThisPtr, Index);

        [global::WinRT.WinRTExposedType]
        private sealed class EventState : global::ABI.WinRT.Interop.EventSourceState<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.UIElement, global::Microsoft.UI.Xaml.Input.LosingFocusEventArgs>>
        {
            public EventState(System.IntPtr obj, int index)
            : base(obj, index)
            {
            }

            protected override global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.UIElement, global::Microsoft.UI.Xaml.Input.LosingFocusEventArgs> GetEventInvoke()
            {
                return (global::Microsoft.UI.Xaml.UIElement sender, global::Microsoft.UI.Xaml.Input.LosingFocusEventArgs args) =>
                {
                    var targetDelegate = TargetDelegate;
                    if (targetDelegate is null)
                    {
                        return ;
                    }
                    targetDelegate.Invoke(sender, args);
                };
            }
        }
    }

    internal sealed unsafe class _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_Graphics_Display_DisplayInformation__object_ : global::ABI.WinRT.Interop.EventSource<global::Windows.Foundation.TypedEventHandler<global::Microsoft.Graphics.Display.DisplayInformation, object>>
    {
        private static readonly bool initialized = global::WinRT.GenericTypeInstantiations.Windows_Foundation_TypedEventHandler_2_Microsoft_Graphics_Display_DisplayInformation__object.EnsureInitialized();

        internal _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_Graphics_Display_DisplayInformation__object_(IObjectReference obj,
        delegate* unmanaged[Stdcall]<System.IntPtr, System.IntPtr, WinRT.EventRegistrationToken*, int> addHandler,
        delegate* unmanaged[Stdcall]<System.IntPtr, WinRT.EventRegistrationToken, int> removeHandler, int index) : base(obj, addHandler, removeHandler, index)
        {
            _ = initialized;
        }

        protected override ObjectReferenceValue CreateMarshaler(global::Windows.Foundation.TypedEventHandler<global::Microsoft.Graphics.Display.DisplayInformation, object> handler) =>
        global::ABI.Windows.Foundation.TypedEventHandler<global::Microsoft.Graphics.Display.DisplayInformation, object>.CreateMarshaler2(handler);

        protected override global::ABI.WinRT.Interop.EventSourceState<global::Windows.Foundation.TypedEventHandler<global::Microsoft.Graphics.Display.DisplayInformation, object>> CreateEventSourceState() =>
        new EventState(ObjectReference.ThisPtr, Index);

        [global::WinRT.WinRTExposedType]
        private sealed class EventState : global::ABI.WinRT.Interop.EventSourceState<global::Windows.Foundation.TypedEventHandler<global::Microsoft.Graphics.Display.DisplayInformation, object>>
        {
            public EventState(System.IntPtr obj, int index)
            : base(obj, index)
            {
            }

            protected override global::Windows.Foundation.TypedEventHandler<global::Microsoft.Graphics.Display.DisplayInformation, object> GetEventInvoke()
            {
                return (global::Microsoft.Graphics.Display.DisplayInformation sender, object args) =>
                {
                    var targetDelegate = TargetDelegate;
                    if (targetDelegate is null)
                    {
                        return ;
                    }
                    targetDelegate.Invoke(sender, args);
                };
            }
        }
    }

    internal sealed unsafe class _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_UI_Xaml_Controls_SplitButton__global__Microsoft_UI_Xaml_Controls_SplitButtonClickEventArgs_ : global::ABI.WinRT.Interop.EventSource<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.SplitButton, global::Microsoft.UI.Xaml.Controls.SplitButtonClickEventArgs>>
    {
        private static readonly bool initialized = global::WinRT.GenericTypeInstantiations.Windows_Foundation_TypedEventHandler_2_Microsoft_UI_Xaml_Controls_SplitButton__Microsoft_UI_Xaml_Controls_SplitButtonClickEventArgs.EnsureInitialized();

        internal _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_UI_Xaml_Controls_SplitButton__global__Microsoft_UI_Xaml_Controls_SplitButtonClickEventArgs_(IObjectReference obj,
        delegate* unmanaged[Stdcall]<System.IntPtr, System.IntPtr, WinRT.EventRegistrationToken*, int> addHandler,
        delegate* unmanaged[Stdcall]<System.IntPtr, WinRT.EventRegistrationToken, int> removeHandler, int index) : base(obj, addHandler, removeHandler, index)
        {
            _ = initialized;
        }

        protected override ObjectReferenceValue CreateMarshaler(global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.SplitButton, global::Microsoft.UI.Xaml.Controls.SplitButtonClickEventArgs> handler) =>
        global::ABI.Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.SplitButton, global::Microsoft.UI.Xaml.Controls.SplitButtonClickEventArgs>.CreateMarshaler2(handler);

        protected override global::ABI.WinRT.Interop.EventSourceState<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.SplitButton, global::Microsoft.UI.Xaml.Controls.SplitButtonClickEventArgs>> CreateEventSourceState() =>
        new EventState(ObjectReference.ThisPtr, Index);

        [global::WinRT.WinRTExposedType]
        private sealed class EventState : global::ABI.WinRT.Interop.EventSourceState<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.SplitButton, global::Microsoft.UI.Xaml.Controls.SplitButtonClickEventArgs>>
        {
            public EventState(System.IntPtr obj, int index)
            : base(obj, index)
            {
            }

            protected override global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.SplitButton, global::Microsoft.UI.Xaml.Controls.SplitButtonClickEventArgs> GetEventInvoke()
            {
                return (global::Microsoft.UI.Xaml.Controls.SplitButton sender, global::Microsoft.UI.Xaml.Controls.SplitButtonClickEventArgs args) =>
                {
                    var targetDelegate = TargetDelegate;
                    if (targetDelegate is null)
                    {
                        return ;
                    }
                    targetDelegate.Invoke(sender, args);
                };
            }
        }
    }

    internal sealed unsafe class _EventSource_global__Microsoft_UI_Xaml_Input_KeyEventHandler : global::ABI.WinRT.Interop.EventSource<global::Microsoft.UI.Xaml.Input.KeyEventHandler>
    {


        internal _EventSource_global__Microsoft_UI_Xaml_Input_KeyEventHandler(IObjectReference obj,
        delegate* unmanaged[Stdcall]<System.IntPtr, System.IntPtr, WinRT.EventRegistrationToken*, int> addHandler,
        delegate* unmanaged[Stdcall]<System.IntPtr, WinRT.EventRegistrationToken, int> removeHandler, int index) : base(obj, addHandler, removeHandler, index)
        {

        }

        protected override ObjectReferenceValue CreateMarshaler(global::Microsoft.UI.Xaml.Input.KeyEventHandler handler) =>
        global::ABI.Microsoft.UI.Xaml.Input.KeyEventHandler.CreateMarshaler2(handler);

        protected override global::ABI.WinRT.Interop.EventSourceState<global::Microsoft.UI.Xaml.Input.KeyEventHandler> CreateEventSourceState() =>
        new EventState(ObjectReference.ThisPtr, Index);

        [global::WinRT.WinRTExposedType]
        private sealed class EventState : global::ABI.WinRT.Interop.EventSourceState<global::Microsoft.UI.Xaml.Input.KeyEventHandler>
        {
            public EventState(System.IntPtr obj, int index)
            : base(obj, index)
            {
            }

            protected override global::Microsoft.UI.Xaml.Input.KeyEventHandler GetEventInvoke()
            {
                return (object sender, global::Microsoft.UI.Xaml.Input.KeyRoutedEventArgs e) =>
                {
                    var targetDelegate = TargetDelegate;
                    if (targetDelegate is null)
                    {
                        return ;
                    }
                    targetDelegate.Invoke(sender, e);
                };
            }
        }
    }

    internal sealed unsafe class _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_UI_Input_InputActivationListener__global__Microsoft_UI_Input_InputActivationListenerActivationChangedEventArgs_ : global::ABI.WinRT.Interop.EventSource<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Input.InputActivationListener, global::Microsoft.UI.Input.InputActivationListenerActivationChangedEventArgs>>
    {
        private static readonly bool initialized = global::WinRT.GenericTypeInstantiations.Windows_Foundation_TypedEventHandler_2_Microsoft_UI_Input_InputActivationListener__Microsoft_UI_Input_InputActivationListenerActivationChangedEventArgs.EnsureInitialized();

        internal _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_UI_Input_InputActivationListener__global__Microsoft_UI_Input_InputActivationListenerActivationChangedEventArgs_(IObjectReference obj,
        delegate* unmanaged[Stdcall]<System.IntPtr, System.IntPtr, WinRT.EventRegistrationToken*, int> addHandler,
        delegate* unmanaged[Stdcall]<System.IntPtr, WinRT.EventRegistrationToken, int> removeHandler, int index) : base(obj, addHandler, removeHandler, index)
        {
            _ = initialized;
        }

        protected override ObjectReferenceValue CreateMarshaler(global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Input.InputActivationListener, global::Microsoft.UI.Input.InputActivationListenerActivationChangedEventArgs> handler) =>
        global::ABI.Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Input.InputActivationListener, global::Microsoft.UI.Input.InputActivationListenerActivationChangedEventArgs>.CreateMarshaler2(handler);

        protected override global::ABI.WinRT.Interop.EventSourceState<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Input.InputActivationListener, global::Microsoft.UI.Input.InputActivationListenerActivationChangedEventArgs>> CreateEventSourceState() =>
        new EventState(ObjectReference.ThisPtr, Index);

        [global::WinRT.WinRTExposedType]
        private sealed class EventState : global::ABI.WinRT.Interop.EventSourceState<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Input.InputActivationListener, global::Microsoft.UI.Input.InputActivationListenerActivationChangedEventArgs>>
        {
            public EventState(System.IntPtr obj, int index)
            : base(obj, index)
            {
            }

            protected override global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Input.InputActivationListener, global::Microsoft.UI.Input.InputActivationListenerActivationChangedEventArgs> GetEventInvoke()
            {
                return (global::Microsoft.UI.Input.InputActivationListener sender, global::Microsoft.UI.Input.InputActivationListenerActivationChangedEventArgs args) =>
                {
                    var targetDelegate = TargetDelegate;
                    if (targetDelegate is null)
                    {
                        return ;
                    }
                    targetDelegate.Invoke(sender, args);
                };
            }
        }
    }

    internal sealed unsafe class _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_UI_Xaml_XamlRoot__global__Microsoft_UI_Xaml_XamlRootChangedEventArgs_ : global::ABI.WinRT.Interop.EventSource<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.XamlRoot, global::Microsoft.UI.Xaml.XamlRootChangedEventArgs>>
    {
        private static readonly bool initialized = global::WinRT.GenericTypeInstantiations.Windows_Foundation_TypedEventHandler_2_Microsoft_UI_Xaml_XamlRoot__Microsoft_UI_Xaml_XamlRootChangedEventArgs.EnsureInitialized();

        internal _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_UI_Xaml_XamlRoot__global__Microsoft_UI_Xaml_XamlRootChangedEventArgs_(IObjectReference obj,
        delegate* unmanaged[Stdcall]<System.IntPtr, System.IntPtr, WinRT.EventRegistrationToken*, int> addHandler,
        delegate* unmanaged[Stdcall]<System.IntPtr, WinRT.EventRegistrationToken, int> removeHandler, int index) : base(obj, addHandler, removeHandler, index)
        {
            _ = initialized;
        }

        protected override ObjectReferenceValue CreateMarshaler(global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.XamlRoot, global::Microsoft.UI.Xaml.XamlRootChangedEventArgs> handler) =>
        global::ABI.Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.XamlRoot, global::Microsoft.UI.Xaml.XamlRootChangedEventArgs>.CreateMarshaler2(handler);

        protected override global::ABI.WinRT.Interop.EventSourceState<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.XamlRoot, global::Microsoft.UI.Xaml.XamlRootChangedEventArgs>> CreateEventSourceState() =>
        new EventState(ObjectReference.ThisPtr, Index);

        [global::WinRT.WinRTExposedType]
        private sealed class EventState : global::ABI.WinRT.Interop.EventSourceState<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.XamlRoot, global::Microsoft.UI.Xaml.XamlRootChangedEventArgs>>
        {
            public EventState(System.IntPtr obj, int index)
            : base(obj, index)
            {
            }

            protected override global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.XamlRoot, global::Microsoft.UI.Xaml.XamlRootChangedEventArgs> GetEventInvoke()
            {
                return (global::Microsoft.UI.Xaml.XamlRoot sender, global::Microsoft.UI.Xaml.XamlRootChangedEventArgs args) =>
                {
                    var targetDelegate = TargetDelegate;
                    if (targetDelegate is null)
                    {
                        return ;
                    }
                    targetDelegate.Invoke(sender, args);
                };
            }
        }
    }

    internal sealed unsafe class _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_UI_Xaml_Controls_ItemContainer__global__Microsoft_UI_Xaml_Controls_ItemContainerInvokedEventArgs_ : global::ABI.WinRT.Interop.EventSource<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.ItemContainer, global::Microsoft.UI.Xaml.Controls.ItemContainerInvokedEventArgs>>
    {
        private static readonly bool initialized = global::WinRT.GenericTypeInstantiations.Windows_Foundation_TypedEventHandler_2_Microsoft_UI_Xaml_Controls_ItemContainer__Microsoft_UI_Xaml_Controls_ItemContainerInvokedEventArgs.EnsureInitialized();

        internal _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_UI_Xaml_Controls_ItemContainer__global__Microsoft_UI_Xaml_Controls_ItemContainerInvokedEventArgs_(IObjectReference obj,
        delegate* unmanaged[Stdcall]<System.IntPtr, System.IntPtr, WinRT.EventRegistrationToken*, int> addHandler,
        delegate* unmanaged[Stdcall]<System.IntPtr, WinRT.EventRegistrationToken, int> removeHandler, int index) : base(obj, addHandler, removeHandler, index)
        {
            _ = initialized;
        }

        protected override ObjectReferenceValue CreateMarshaler(global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.ItemContainer, global::Microsoft.UI.Xaml.Controls.ItemContainerInvokedEventArgs> handler) =>
        global::ABI.Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.ItemContainer, global::Microsoft.UI.Xaml.Controls.ItemContainerInvokedEventArgs>.CreateMarshaler2(handler);

        protected override global::ABI.WinRT.Interop.EventSourceState<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.ItemContainer, global::Microsoft.UI.Xaml.Controls.ItemContainerInvokedEventArgs>> CreateEventSourceState() =>
        new EventState(ObjectReference.ThisPtr, Index);

        [global::WinRT.WinRTExposedType]
        private sealed class EventState : global::ABI.WinRT.Interop.EventSourceState<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.ItemContainer, global::Microsoft.UI.Xaml.Controls.ItemContainerInvokedEventArgs>>
        {
            public EventState(System.IntPtr obj, int index)
            : base(obj, index)
            {
            }

            protected override global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.ItemContainer, global::Microsoft.UI.Xaml.Controls.ItemContainerInvokedEventArgs> GetEventInvoke()
            {
                return (global::Microsoft.UI.Xaml.Controls.ItemContainer sender, global::Microsoft.UI.Xaml.Controls.ItemContainerInvokedEventArgs args) =>
                {
                    var targetDelegate = TargetDelegate;
                    if (targetDelegate is null)
                    {
                        return ;
                    }
                    targetDelegate.Invoke(sender, args);
                };
            }
        }
    }

    internal sealed unsafe class _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_UI_Windowing_AppWindow__global__Microsoft_UI_Windowing_AppWindowChangedEventArgs_ : global::ABI.WinRT.Interop.EventSource<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Windowing.AppWindow, global::Microsoft.UI.Windowing.AppWindowChangedEventArgs>>
    {
        private static readonly bool initialized = global::WinRT.GenericTypeInstantiations.Windows_Foundation_TypedEventHandler_2_Microsoft_UI_Windowing_AppWindow__Microsoft_UI_Windowing_AppWindowChangedEventArgs.EnsureInitialized();

        internal _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_UI_Windowing_AppWindow__global__Microsoft_UI_Windowing_AppWindowChangedEventArgs_(IObjectReference obj,
        delegate* unmanaged[Stdcall]<System.IntPtr, System.IntPtr, WinRT.EventRegistrationToken*, int> addHandler,
        delegate* unmanaged[Stdcall]<System.IntPtr, WinRT.EventRegistrationToken, int> removeHandler, int index) : base(obj, addHandler, removeHandler, index)
        {
            _ = initialized;
        }

        protected override ObjectReferenceValue CreateMarshaler(global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Windowing.AppWindow, global::Microsoft.UI.Windowing.AppWindowChangedEventArgs> handler) =>
        global::ABI.Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Windowing.AppWindow, global::Microsoft.UI.Windowing.AppWindowChangedEventArgs>.CreateMarshaler2(handler);

        protected override global::ABI.WinRT.Interop.EventSourceState<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Windowing.AppWindow, global::Microsoft.UI.Windowing.AppWindowChangedEventArgs>> CreateEventSourceState() =>
        new EventState(ObjectReference.ThisPtr, Index);

        [global::WinRT.WinRTExposedType]
        private sealed class EventState : global::ABI.WinRT.Interop.EventSourceState<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Windowing.AppWindow, global::Microsoft.UI.Windowing.AppWindowChangedEventArgs>>
        {
            public EventState(System.IntPtr obj, int index)
            : base(obj, index)
            {
            }

            protected override global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Windowing.AppWindow, global::Microsoft.UI.Windowing.AppWindowChangedEventArgs> GetEventInvoke()
            {
                return (global::Microsoft.UI.Windowing.AppWindow sender, global::Microsoft.UI.Windowing.AppWindowChangedEventArgs args) =>
                {
                    var targetDelegate = TargetDelegate;
                    if (targetDelegate is null)
                    {
                        return ;
                    }
                    targetDelegate.Invoke(sender, args);
                };
            }
        }
    }

    internal sealed unsafe class _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_Web_WebView2_Core_CoreWebView2Controller__global__Microsoft_Web_WebView2_Core_CoreWebView2AcceleratorKeyPressedEventArgs_ : global::ABI.WinRT.Interop.EventSource<global::Windows.Foundation.TypedEventHandler<global::Microsoft.Web.WebView2.Core.CoreWebView2Controller, global::Microsoft.Web.WebView2.Core.CoreWebView2AcceleratorKeyPressedEventArgs>>
    {
        private static readonly bool initialized = global::WinRT.GenericTypeInstantiations.Windows_Foundation_TypedEventHandler_2_Microsoft_Web_WebView2_Core_CoreWebView2Controller__Microsoft_Web_WebView2_Core_CoreWebView2AcceleratorKeyPressedEventArgs.EnsureInitialized();

        internal _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_Web_WebView2_Core_CoreWebView2Controller__global__Microsoft_Web_WebView2_Core_CoreWebView2AcceleratorKeyPressedEventArgs_(IObjectReference obj,
        delegate* unmanaged[Stdcall]<System.IntPtr, System.IntPtr, WinRT.EventRegistrationToken*, int> addHandler,
        delegate* unmanaged[Stdcall]<System.IntPtr, WinRT.EventRegistrationToken, int> removeHandler, int index) : base(obj, addHandler, removeHandler, index)
        {
            _ = initialized;
        }

        protected override ObjectReferenceValue CreateMarshaler(global::Windows.Foundation.TypedEventHandler<global::Microsoft.Web.WebView2.Core.CoreWebView2Controller, global::Microsoft.Web.WebView2.Core.CoreWebView2AcceleratorKeyPressedEventArgs> handler) =>
        global::ABI.Windows.Foundation.TypedEventHandler<global::Microsoft.Web.WebView2.Core.CoreWebView2Controller, global::Microsoft.Web.WebView2.Core.CoreWebView2AcceleratorKeyPressedEventArgs>.CreateMarshaler2(handler);

        protected override global::ABI.WinRT.Interop.EventSourceState<global::Windows.Foundation.TypedEventHandler<global::Microsoft.Web.WebView2.Core.CoreWebView2Controller, global::Microsoft.Web.WebView2.Core.CoreWebView2AcceleratorKeyPressedEventArgs>> CreateEventSourceState() =>
        new EventState(ObjectReference.ThisPtr, Index);

        [global::WinRT.WinRTExposedType]
        private sealed class EventState : global::ABI.WinRT.Interop.EventSourceState<global::Windows.Foundation.TypedEventHandler<global::Microsoft.Web.WebView2.Core.CoreWebView2Controller, global::Microsoft.Web.WebView2.Core.CoreWebView2AcceleratorKeyPressedEventArgs>>
        {
            public EventState(System.IntPtr obj, int index)
            : base(obj, index)
            {
            }

            protected override global::Windows.Foundation.TypedEventHandler<global::Microsoft.Web.WebView2.Core.CoreWebView2Controller, global::Microsoft.Web.WebView2.Core.CoreWebView2AcceleratorKeyPressedEventArgs> GetEventInvoke()
            {
                return (global::Microsoft.Web.WebView2.Core.CoreWebView2Controller sender, global::Microsoft.Web.WebView2.Core.CoreWebView2AcceleratorKeyPressedEventArgs args) =>
                {
                    var targetDelegate = TargetDelegate;
                    if (targetDelegate is null)
                    {
                        return ;
                    }
                    targetDelegate.Invoke(sender, args);
                };
            }
        }
    }

    internal sealed unsafe class _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_Windows_AppNotifications_AppNotificationManager__global__Microsoft_Windows_AppNotifications_AppNotificationActivatedEventArgs_ : global::ABI.WinRT.Interop.EventSource<global::Windows.Foundation.TypedEventHandler<global::Microsoft.Windows.AppNotifications.AppNotificationManager, global::Microsoft.Windows.AppNotifications.AppNotificationActivatedEventArgs>>
    {
        private static readonly bool initialized = global::WinRT.GenericTypeInstantiations.Windows_Foundation_TypedEventHandler_2_Microsoft_Windows_AppNotifications_AppNotificationManager__Microsoft_Windows_AppNotifications_AppNotificationActivatedEventArgs.EnsureInitialized();

        internal _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_Windows_AppNotifications_AppNotificationManager__global__Microsoft_Windows_AppNotifications_AppNotificationActivatedEventArgs_(IObjectReference obj,
        delegate* unmanaged[Stdcall]<System.IntPtr, System.IntPtr, WinRT.EventRegistrationToken*, int> addHandler,
        delegate* unmanaged[Stdcall]<System.IntPtr, WinRT.EventRegistrationToken, int> removeHandler, int index) : base(obj, addHandler, removeHandler, index)
        {
            _ = initialized;
        }

        protected override ObjectReferenceValue CreateMarshaler(global::Windows.Foundation.TypedEventHandler<global::Microsoft.Windows.AppNotifications.AppNotificationManager, global::Microsoft.Windows.AppNotifications.AppNotificationActivatedEventArgs> handler) =>
        global::ABI.Windows.Foundation.TypedEventHandler<global::Microsoft.Windows.AppNotifications.AppNotificationManager, global::Microsoft.Windows.AppNotifications.AppNotificationActivatedEventArgs>.CreateMarshaler2(handler);

        protected override global::ABI.WinRT.Interop.EventSourceState<global::Windows.Foundation.TypedEventHandler<global::Microsoft.Windows.AppNotifications.AppNotificationManager, global::Microsoft.Windows.AppNotifications.AppNotificationActivatedEventArgs>> CreateEventSourceState() =>
        new EventState(ObjectReference.ThisPtr, Index);

        [global::WinRT.WinRTExposedType]
        private sealed class EventState : global::ABI.WinRT.Interop.EventSourceState<global::Windows.Foundation.TypedEventHandler<global::Microsoft.Windows.AppNotifications.AppNotificationManager, global::Microsoft.Windows.AppNotifications.AppNotificationActivatedEventArgs>>
        {
            public EventState(System.IntPtr obj, int index)
            : base(obj, index)
            {
            }

            protected override global::Windows.Foundation.TypedEventHandler<global::Microsoft.Windows.AppNotifications.AppNotificationManager, global::Microsoft.Windows.AppNotifications.AppNotificationActivatedEventArgs> GetEventInvoke()
            {
                return (global::Microsoft.Windows.AppNotifications.AppNotificationManager sender, global::Microsoft.Windows.AppNotifications.AppNotificationActivatedEventArgs args) =>
                {
                    var targetDelegate = TargetDelegate;
                    if (targetDelegate is null)
                    {
                        return ;
                    }
                    targetDelegate.Invoke(sender, args);
                };
            }
        }
    }

    internal sealed unsafe class _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_UI_Xaml_UIElement__global__Microsoft_UI_Xaml_Input_NoFocusCandidateFoundEventArgs_ : global::ABI.WinRT.Interop.EventSource<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.UIElement, global::Microsoft.UI.Xaml.Input.NoFocusCandidateFoundEventArgs>>
    {
        private static readonly bool initialized = global::WinRT.GenericTypeInstantiations.Windows_Foundation_TypedEventHandler_2_Microsoft_UI_Xaml_UIElement__Microsoft_UI_Xaml_Input_NoFocusCandidateFoundEventArgs.EnsureInitialized();

        internal _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_UI_Xaml_UIElement__global__Microsoft_UI_Xaml_Input_NoFocusCandidateFoundEventArgs_(IObjectReference obj,
        delegate* unmanaged[Stdcall]<System.IntPtr, System.IntPtr, WinRT.EventRegistrationToken*, int> addHandler,
        delegate* unmanaged[Stdcall]<System.IntPtr, WinRT.EventRegistrationToken, int> removeHandler, int index) : base(obj, addHandler, removeHandler, index)
        {
            _ = initialized;
        }

        protected override ObjectReferenceValue CreateMarshaler(global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.UIElement, global::Microsoft.UI.Xaml.Input.NoFocusCandidateFoundEventArgs> handler) =>
        global::ABI.Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.UIElement, global::Microsoft.UI.Xaml.Input.NoFocusCandidateFoundEventArgs>.CreateMarshaler2(handler);

        protected override global::ABI.WinRT.Interop.EventSourceState<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.UIElement, global::Microsoft.UI.Xaml.Input.NoFocusCandidateFoundEventArgs>> CreateEventSourceState() =>
        new EventState(ObjectReference.ThisPtr, Index);

        [global::WinRT.WinRTExposedType]
        private sealed class EventState : global::ABI.WinRT.Interop.EventSourceState<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.UIElement, global::Microsoft.UI.Xaml.Input.NoFocusCandidateFoundEventArgs>>
        {
            public EventState(System.IntPtr obj, int index)
            : base(obj, index)
            {
            }

            protected override global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.UIElement, global::Microsoft.UI.Xaml.Input.NoFocusCandidateFoundEventArgs> GetEventInvoke()
            {
                return (global::Microsoft.UI.Xaml.UIElement sender, global::Microsoft.UI.Xaml.Input.NoFocusCandidateFoundEventArgs args) =>
                {
                    var targetDelegate = TargetDelegate;
                    if (targetDelegate is null)
                    {
                        return ;
                    }
                    targetDelegate.Invoke(sender, args);
                };
            }
        }
    }

    internal sealed unsafe class _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_UI_Xaml_Controls_RichEditBox__global__Microsoft_UI_Xaml_Controls_TextCompositionEndedEventArgs_ : global::ABI.WinRT.Interop.EventSource<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.RichEditBox, global::Microsoft.UI.Xaml.Controls.TextCompositionEndedEventArgs>>
    {
        private static readonly bool initialized = global::WinRT.GenericTypeInstantiations.Windows_Foundation_TypedEventHandler_2_Microsoft_UI_Xaml_Controls_RichEditBox__Microsoft_UI_Xaml_Controls_TextCompositionEndedEventArgs.EnsureInitialized();

        internal _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_UI_Xaml_Controls_RichEditBox__global__Microsoft_UI_Xaml_Controls_TextCompositionEndedEventArgs_(IObjectReference obj,
        delegate* unmanaged[Stdcall]<System.IntPtr, System.IntPtr, WinRT.EventRegistrationToken*, int> addHandler,
        delegate* unmanaged[Stdcall]<System.IntPtr, WinRT.EventRegistrationToken, int> removeHandler, int index) : base(obj, addHandler, removeHandler, index)
        {
            _ = initialized;
        }

        protected override ObjectReferenceValue CreateMarshaler(global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.RichEditBox, global::Microsoft.UI.Xaml.Controls.TextCompositionEndedEventArgs> handler) =>
        global::ABI.Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.RichEditBox, global::Microsoft.UI.Xaml.Controls.TextCompositionEndedEventArgs>.CreateMarshaler2(handler);

        protected override global::ABI.WinRT.Interop.EventSourceState<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.RichEditBox, global::Microsoft.UI.Xaml.Controls.TextCompositionEndedEventArgs>> CreateEventSourceState() =>
        new EventState(ObjectReference.ThisPtr, Index);

        [global::WinRT.WinRTExposedType]
        private sealed class EventState : global::ABI.WinRT.Interop.EventSourceState<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.RichEditBox, global::Microsoft.UI.Xaml.Controls.TextCompositionEndedEventArgs>>
        {
            public EventState(System.IntPtr obj, int index)
            : base(obj, index)
            {
            }

            protected override global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.RichEditBox, global::Microsoft.UI.Xaml.Controls.TextCompositionEndedEventArgs> GetEventInvoke()
            {
                return (global::Microsoft.UI.Xaml.Controls.RichEditBox sender, global::Microsoft.UI.Xaml.Controls.TextCompositionEndedEventArgs args) =>
                {
                    var targetDelegate = TargetDelegate;
                    if (targetDelegate is null)
                    {
                        return ;
                    }
                    targetDelegate.Invoke(sender, args);
                };
            }
        }
    }

    internal sealed unsafe class _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_UI_Xaml_Controls_TeachingTip__global__Microsoft_UI_Xaml_Controls_TeachingTipClosedEventArgs_ : global::ABI.WinRT.Interop.EventSource<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.TeachingTip, global::Microsoft.UI.Xaml.Controls.TeachingTipClosedEventArgs>>
    {
        private static readonly bool initialized = global::WinRT.GenericTypeInstantiations.Windows_Foundation_TypedEventHandler_2_Microsoft_UI_Xaml_Controls_TeachingTip__Microsoft_UI_Xaml_Controls_TeachingTipClosedEventArgs.EnsureInitialized();

        internal _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_UI_Xaml_Controls_TeachingTip__global__Microsoft_UI_Xaml_Controls_TeachingTipClosedEventArgs_(IObjectReference obj,
        delegate* unmanaged[Stdcall]<System.IntPtr, System.IntPtr, WinRT.EventRegistrationToken*, int> addHandler,
        delegate* unmanaged[Stdcall]<System.IntPtr, WinRT.EventRegistrationToken, int> removeHandler, int index) : base(obj, addHandler, removeHandler, index)
        {
            _ = initialized;
        }

        protected override ObjectReferenceValue CreateMarshaler(global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.TeachingTip, global::Microsoft.UI.Xaml.Controls.TeachingTipClosedEventArgs> handler) =>
        global::ABI.Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.TeachingTip, global::Microsoft.UI.Xaml.Controls.TeachingTipClosedEventArgs>.CreateMarshaler2(handler);

        protected override global::ABI.WinRT.Interop.EventSourceState<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.TeachingTip, global::Microsoft.UI.Xaml.Controls.TeachingTipClosedEventArgs>> CreateEventSourceState() =>
        new EventState(ObjectReference.ThisPtr, Index);

        [global::WinRT.WinRTExposedType]
        private sealed class EventState : global::ABI.WinRT.Interop.EventSourceState<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.TeachingTip, global::Microsoft.UI.Xaml.Controls.TeachingTipClosedEventArgs>>
        {
            public EventState(System.IntPtr obj, int index)
            : base(obj, index)
            {
            }

            protected override global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.TeachingTip, global::Microsoft.UI.Xaml.Controls.TeachingTipClosedEventArgs> GetEventInvoke()
            {
                return (global::Microsoft.UI.Xaml.Controls.TeachingTip sender, global::Microsoft.UI.Xaml.Controls.TeachingTipClosedEventArgs args) =>
                {
                    var targetDelegate = TargetDelegate;
                    if (targetDelegate is null)
                    {
                        return ;
                    }
                    targetDelegate.Invoke(sender, args);
                };
            }
        }
    }

    internal sealed unsafe class _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_Web_WebView2_Core_CoreWebView2__global__Microsoft_Web_WebView2_Core_CoreWebView2NotificationReceivedEventArgs_ : global::ABI.WinRT.Interop.EventSource<global::Windows.Foundation.TypedEventHandler<global::Microsoft.Web.WebView2.Core.CoreWebView2, global::Microsoft.Web.WebView2.Core.CoreWebView2NotificationReceivedEventArgs>>
    {
        private static readonly bool initialized = global::WinRT.GenericTypeInstantiations.Windows_Foundation_TypedEventHandler_2_Microsoft_Web_WebView2_Core_CoreWebView2__Microsoft_Web_WebView2_Core_CoreWebView2NotificationReceivedEventArgs.EnsureInitialized();

        internal _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_Web_WebView2_Core_CoreWebView2__global__Microsoft_Web_WebView2_Core_CoreWebView2NotificationReceivedEventArgs_(IObjectReference obj,
        delegate* unmanaged[Stdcall]<System.IntPtr, System.IntPtr, WinRT.EventRegistrationToken*, int> addHandler,
        delegate* unmanaged[Stdcall]<System.IntPtr, WinRT.EventRegistrationToken, int> removeHandler, int index) : base(obj, addHandler, removeHandler, index)
        {
            _ = initialized;
        }

        protected override ObjectReferenceValue CreateMarshaler(global::Windows.Foundation.TypedEventHandler<global::Microsoft.Web.WebView2.Core.CoreWebView2, global::Microsoft.Web.WebView2.Core.CoreWebView2NotificationReceivedEventArgs> handler) =>
        global::ABI.Windows.Foundation.TypedEventHandler<global::Microsoft.Web.WebView2.Core.CoreWebView2, global::Microsoft.Web.WebView2.Core.CoreWebView2NotificationReceivedEventArgs>.CreateMarshaler2(handler);

        protected override global::ABI.WinRT.Interop.EventSourceState<global::Windows.Foundation.TypedEventHandler<global::Microsoft.Web.WebView2.Core.CoreWebView2, global::Microsoft.Web.WebView2.Core.CoreWebView2NotificationReceivedEventArgs>> CreateEventSourceState() =>
        new EventState(ObjectReference.ThisPtr, Index);

        [global::WinRT.WinRTExposedType]
        private sealed class EventState : global::ABI.WinRT.Interop.EventSourceState<global::Windows.Foundation.TypedEventHandler<global::Microsoft.Web.WebView2.Core.CoreWebView2, global::Microsoft.Web.WebView2.Core.CoreWebView2NotificationReceivedEventArgs>>
        {
            public EventState(System.IntPtr obj, int index)
            : base(obj, index)
            {
            }

            protected override global::Windows.Foundation.TypedEventHandler<global::Microsoft.Web.WebView2.Core.CoreWebView2, global::Microsoft.Web.WebView2.Core.CoreWebView2NotificationReceivedEventArgs> GetEventInvoke()
            {
                return (global::Microsoft.Web.WebView2.Core.CoreWebView2 sender, global::Microsoft.Web.WebView2.Core.CoreWebView2NotificationReceivedEventArgs args) =>
                {
                    var targetDelegate = TargetDelegate;
                    if (targetDelegate is null)
                    {
                        return ;
                    }
                    targetDelegate.Invoke(sender, args);
                };
            }
        }
    }

    internal sealed unsafe class _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_UI_Xaml_Controls_Control__global__Microsoft_UI_Xaml_Controls_FocusDisengagedEventArgs_ : global::ABI.WinRT.Interop.EventSource<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.Control, global::Microsoft.UI.Xaml.Controls.FocusDisengagedEventArgs>>
    {
        private static readonly bool initialized = global::WinRT.GenericTypeInstantiations.Windows_Foundation_TypedEventHandler_2_Microsoft_UI_Xaml_Controls_Control__Microsoft_UI_Xaml_Controls_FocusDisengagedEventArgs.EnsureInitialized();

        internal _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_UI_Xaml_Controls_Control__global__Microsoft_UI_Xaml_Controls_FocusDisengagedEventArgs_(IObjectReference obj,
        delegate* unmanaged[Stdcall]<System.IntPtr, System.IntPtr, WinRT.EventRegistrationToken*, int> addHandler,
        delegate* unmanaged[Stdcall]<System.IntPtr, WinRT.EventRegistrationToken, int> removeHandler, int index) : base(obj, addHandler, removeHandler, index)
        {
            _ = initialized;
        }

        protected override ObjectReferenceValue CreateMarshaler(global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.Control, global::Microsoft.UI.Xaml.Controls.FocusDisengagedEventArgs> handler) =>
        global::ABI.Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.Control, global::Microsoft.UI.Xaml.Controls.FocusDisengagedEventArgs>.CreateMarshaler2(handler);

        protected override global::ABI.WinRT.Interop.EventSourceState<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.Control, global::Microsoft.UI.Xaml.Controls.FocusDisengagedEventArgs>> CreateEventSourceState() =>
        new EventState(ObjectReference.ThisPtr, Index);

        [global::WinRT.WinRTExposedType]
        private sealed class EventState : global::ABI.WinRT.Interop.EventSourceState<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.Control, global::Microsoft.UI.Xaml.Controls.FocusDisengagedEventArgs>>
        {
            public EventState(System.IntPtr obj, int index)
            : base(obj, index)
            {
            }

            protected override global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.Control, global::Microsoft.UI.Xaml.Controls.FocusDisengagedEventArgs> GetEventInvoke()
            {
                return (global::Microsoft.UI.Xaml.Controls.Control sender, global::Microsoft.UI.Xaml.Controls.FocusDisengagedEventArgs args) =>
                {
                    var targetDelegate = TargetDelegate;
                    if (targetDelegate is null)
                    {
                        return ;
                    }
                    targetDelegate.Invoke(sender, args);
                };
            }
        }
    }

    internal sealed unsafe class _EventSource_global__Microsoft_UI_Xaml_Controls_Primitives_ScrollEventHandler : global::ABI.WinRT.Interop.EventSource<global::Microsoft.UI.Xaml.Controls.Primitives.ScrollEventHandler>
    {


        internal _EventSource_global__Microsoft_UI_Xaml_Controls_Primitives_ScrollEventHandler(IObjectReference obj,
        delegate* unmanaged[Stdcall]<System.IntPtr, System.IntPtr, WinRT.EventRegistrationToken*, int> addHandler,
        delegate* unmanaged[Stdcall]<System.IntPtr, WinRT.EventRegistrationToken, int> removeHandler, int index) : base(obj, addHandler, removeHandler, index)
        {

        }

        protected override ObjectReferenceValue CreateMarshaler(global::Microsoft.UI.Xaml.Controls.Primitives.ScrollEventHandler handler) =>
        global::ABI.Microsoft.UI.Xaml.Controls.Primitives.ScrollEventHandler.CreateMarshaler2(handler);

        protected override global::ABI.WinRT.Interop.EventSourceState<global::Microsoft.UI.Xaml.Controls.Primitives.ScrollEventHandler> CreateEventSourceState() =>
        new EventState(ObjectReference.ThisPtr, Index);

        [global::WinRT.WinRTExposedType]
        private sealed class EventState : global::ABI.WinRT.Interop.EventSourceState<global::Microsoft.UI.Xaml.Controls.Primitives.ScrollEventHandler>
        {
            public EventState(System.IntPtr obj, int index)
            : base(obj, index)
            {
            }

            protected override global::Microsoft.UI.Xaml.Controls.Primitives.ScrollEventHandler GetEventInvoke()
            {
                return (object sender, global::Microsoft.UI.Xaml.Controls.Primitives.ScrollEventArgs e) =>
                {
                    var targetDelegate = TargetDelegate;
                    if (targetDelegate is null)
                    {
                        return ;
                    }
                    targetDelegate.Invoke(sender, e);
                };
            }
        }
    }

    internal sealed unsafe class _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_UI_Xaml_Controls_MapElementsLayer__global__Microsoft_UI_Xaml_Controls_MapElementClickEventArgs_ : global::ABI.WinRT.Interop.EventSource<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.MapElementsLayer, global::Microsoft.UI.Xaml.Controls.MapElementClickEventArgs>>
    {
        private static readonly bool initialized = global::WinRT.GenericTypeInstantiations.Windows_Foundation_TypedEventHandler_2_Microsoft_UI_Xaml_Controls_MapElementsLayer__Microsoft_UI_Xaml_Controls_MapElementClickEventArgs.EnsureInitialized();

        internal _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_UI_Xaml_Controls_MapElementsLayer__global__Microsoft_UI_Xaml_Controls_MapElementClickEventArgs_(IObjectReference obj,
        delegate* unmanaged[Stdcall]<System.IntPtr, System.IntPtr, WinRT.EventRegistrationToken*, int> addHandler,
        delegate* unmanaged[Stdcall]<System.IntPtr, WinRT.EventRegistrationToken, int> removeHandler, int index) : base(obj, addHandler, removeHandler, index)
        {
            _ = initialized;
        }

        protected override ObjectReferenceValue CreateMarshaler(global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.MapElementsLayer, global::Microsoft.UI.Xaml.Controls.MapElementClickEventArgs> handler) =>
        global::ABI.Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.MapElementsLayer, global::Microsoft.UI.Xaml.Controls.MapElementClickEventArgs>.CreateMarshaler2(handler);

        protected override global::ABI.WinRT.Interop.EventSourceState<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.MapElementsLayer, global::Microsoft.UI.Xaml.Controls.MapElementClickEventArgs>> CreateEventSourceState() =>
        new EventState(ObjectReference.ThisPtr, Index);

        [global::WinRT.WinRTExposedType]
        private sealed class EventState : global::ABI.WinRT.Interop.EventSourceState<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.MapElementsLayer, global::Microsoft.UI.Xaml.Controls.MapElementClickEventArgs>>
        {
            public EventState(System.IntPtr obj, int index)
            : base(obj, index)
            {
            }

            protected override global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.MapElementsLayer, global::Microsoft.UI.Xaml.Controls.MapElementClickEventArgs> GetEventInvoke()
            {
                return (global::Microsoft.UI.Xaml.Controls.MapElementsLayer sender, global::Microsoft.UI.Xaml.Controls.MapElementClickEventArgs args) =>
                {
                    var targetDelegate = TargetDelegate;
                    if (targetDelegate is null)
                    {
                        return ;
                    }
                    targetDelegate.Invoke(sender, args);
                };
            }
        }
    }

    internal sealed unsafe class _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_UI_Xaml_Documents_TextElement__global__Microsoft_UI_Xaml_Input_AccessKeyDisplayRequestedEventArgs_ : global::ABI.WinRT.Interop.EventSource<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Documents.TextElement, global::Microsoft.UI.Xaml.Input.AccessKeyDisplayRequestedEventArgs>>
    {
        private static readonly bool initialized = global::WinRT.GenericTypeInstantiations.Windows_Foundation_TypedEventHandler_2_Microsoft_UI_Xaml_Documents_TextElement__Microsoft_UI_Xaml_Input_AccessKeyDisplayRequestedEventArgs.EnsureInitialized();

        internal _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_UI_Xaml_Documents_TextElement__global__Microsoft_UI_Xaml_Input_AccessKeyDisplayRequestedEventArgs_(IObjectReference obj,
        delegate* unmanaged[Stdcall]<System.IntPtr, System.IntPtr, WinRT.EventRegistrationToken*, int> addHandler,
        delegate* unmanaged[Stdcall]<System.IntPtr, WinRT.EventRegistrationToken, int> removeHandler, int index) : base(obj, addHandler, removeHandler, index)
        {
            _ = initialized;
        }

        protected override ObjectReferenceValue CreateMarshaler(global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Documents.TextElement, global::Microsoft.UI.Xaml.Input.AccessKeyDisplayRequestedEventArgs> handler) =>
        global::ABI.Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Documents.TextElement, global::Microsoft.UI.Xaml.Input.AccessKeyDisplayRequestedEventArgs>.CreateMarshaler2(handler);

        protected override global::ABI.WinRT.Interop.EventSourceState<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Documents.TextElement, global::Microsoft.UI.Xaml.Input.AccessKeyDisplayRequestedEventArgs>> CreateEventSourceState() =>
        new EventState(ObjectReference.ThisPtr, Index);

        [global::WinRT.WinRTExposedType]
        private sealed class EventState : global::ABI.WinRT.Interop.EventSourceState<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Documents.TextElement, global::Microsoft.UI.Xaml.Input.AccessKeyDisplayRequestedEventArgs>>
        {
            public EventState(System.IntPtr obj, int index)
            : base(obj, index)
            {
            }

            protected override global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Documents.TextElement, global::Microsoft.UI.Xaml.Input.AccessKeyDisplayRequestedEventArgs> GetEventInvoke()
            {
                return (global::Microsoft.UI.Xaml.Documents.TextElement sender, global::Microsoft.UI.Xaml.Input.AccessKeyDisplayRequestedEventArgs args) =>
                {
                    var targetDelegate = TargetDelegate;
                    if (targetDelegate is null)
                    {
                        return ;
                    }
                    targetDelegate.Invoke(sender, args);
                };
            }
        }
    }

    internal sealed unsafe class _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_UI_Xaml_Controls_TabView__global__Microsoft_UI_Xaml_Controls_TabViewExternalTornOutTabsDroppedEventArgs_ : global::ABI.WinRT.Interop.EventSource<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.TabView, global::Microsoft.UI.Xaml.Controls.TabViewExternalTornOutTabsDroppedEventArgs>>
    {
        private static readonly bool initialized = global::WinRT.GenericTypeInstantiations.Windows_Foundation_TypedEventHandler_2_Microsoft_UI_Xaml_Controls_TabView__Microsoft_UI_Xaml_Controls_TabViewExternalTornOutTabsDroppedEventArgs.EnsureInitialized();

        internal _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_UI_Xaml_Controls_TabView__global__Microsoft_UI_Xaml_Controls_TabViewExternalTornOutTabsDroppedEventArgs_(IObjectReference obj,
        delegate* unmanaged[Stdcall]<System.IntPtr, System.IntPtr, WinRT.EventRegistrationToken*, int> addHandler,
        delegate* unmanaged[Stdcall]<System.IntPtr, WinRT.EventRegistrationToken, int> removeHandler, int index) : base(obj, addHandler, removeHandler, index)
        {
            _ = initialized;
        }

        protected override ObjectReferenceValue CreateMarshaler(global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.TabView, global::Microsoft.UI.Xaml.Controls.TabViewExternalTornOutTabsDroppedEventArgs> handler) =>
        global::ABI.Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.TabView, global::Microsoft.UI.Xaml.Controls.TabViewExternalTornOutTabsDroppedEventArgs>.CreateMarshaler2(handler);

        protected override global::ABI.WinRT.Interop.EventSourceState<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.TabView, global::Microsoft.UI.Xaml.Controls.TabViewExternalTornOutTabsDroppedEventArgs>> CreateEventSourceState() =>
        new EventState(ObjectReference.ThisPtr, Index);

        [global::WinRT.WinRTExposedType]
        private sealed class EventState : global::ABI.WinRT.Interop.EventSourceState<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.TabView, global::Microsoft.UI.Xaml.Controls.TabViewExternalTornOutTabsDroppedEventArgs>>
        {
            public EventState(System.IntPtr obj, int index)
            : base(obj, index)
            {
            }

            protected override global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.TabView, global::Microsoft.UI.Xaml.Controls.TabViewExternalTornOutTabsDroppedEventArgs> GetEventInvoke()
            {
                return (global::Microsoft.UI.Xaml.Controls.TabView sender, global::Microsoft.UI.Xaml.Controls.TabViewExternalTornOutTabsDroppedEventArgs args) =>
                {
                    var targetDelegate = TargetDelegate;
                    if (targetDelegate is null)
                    {
                        return ;
                    }
                    targetDelegate.Invoke(sender, args);
                };
            }
        }
    }

    internal sealed unsafe class _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_UI_Xaml_Controls_RichEditBox__global__Microsoft_UI_Xaml_Controls_RichEditBoxTextChangingEventArgs_ : global::ABI.WinRT.Interop.EventSource<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.RichEditBox, global::Microsoft.UI.Xaml.Controls.RichEditBoxTextChangingEventArgs>>
    {
        private static readonly bool initialized = global::WinRT.GenericTypeInstantiations.Windows_Foundation_TypedEventHandler_2_Microsoft_UI_Xaml_Controls_RichEditBox__Microsoft_UI_Xaml_Controls_RichEditBoxTextChangingEventArgs.EnsureInitialized();

        internal _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_UI_Xaml_Controls_RichEditBox__global__Microsoft_UI_Xaml_Controls_RichEditBoxTextChangingEventArgs_(IObjectReference obj,
        delegate* unmanaged[Stdcall]<System.IntPtr, System.IntPtr, WinRT.EventRegistrationToken*, int> addHandler,
        delegate* unmanaged[Stdcall]<System.IntPtr, WinRT.EventRegistrationToken, int> removeHandler, int index) : base(obj, addHandler, removeHandler, index)
        {
            _ = initialized;
        }

        protected override ObjectReferenceValue CreateMarshaler(global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.RichEditBox, global::Microsoft.UI.Xaml.Controls.RichEditBoxTextChangingEventArgs> handler) =>
        global::ABI.Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.RichEditBox, global::Microsoft.UI.Xaml.Controls.RichEditBoxTextChangingEventArgs>.CreateMarshaler2(handler);

        protected override global::ABI.WinRT.Interop.EventSourceState<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.RichEditBox, global::Microsoft.UI.Xaml.Controls.RichEditBoxTextChangingEventArgs>> CreateEventSourceState() =>
        new EventState(ObjectReference.ThisPtr, Index);

        [global::WinRT.WinRTExposedType]
        private sealed class EventState : global::ABI.WinRT.Interop.EventSourceState<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.RichEditBox, global::Microsoft.UI.Xaml.Controls.RichEditBoxTextChangingEventArgs>>
        {
            public EventState(System.IntPtr obj, int index)
            : base(obj, index)
            {
            }

            protected override global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.RichEditBox, global::Microsoft.UI.Xaml.Controls.RichEditBoxTextChangingEventArgs> GetEventInvoke()
            {
                return (global::Microsoft.UI.Xaml.Controls.RichEditBox sender, global::Microsoft.UI.Xaml.Controls.RichEditBoxTextChangingEventArgs args) =>
                {
                    var targetDelegate = TargetDelegate;
                    if (targetDelegate is null)
                    {
                        return ;
                    }
                    targetDelegate.Invoke(sender, args);
                };
            }
        }
    }

    internal sealed unsafe class _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_UI_Xaml_Controls_NavigationView__object_ : global::ABI.WinRT.Interop.EventSource<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.NavigationView, object>>
    {
        private static readonly bool initialized = global::WinRT.GenericTypeInstantiations.Windows_Foundation_TypedEventHandler_2_Microsoft_UI_Xaml_Controls_NavigationView__object.EnsureInitialized();

        internal _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_UI_Xaml_Controls_NavigationView__object_(IObjectReference obj,
        delegate* unmanaged[Stdcall]<System.IntPtr, System.IntPtr, WinRT.EventRegistrationToken*, int> addHandler,
        delegate* unmanaged[Stdcall]<System.IntPtr, WinRT.EventRegistrationToken, int> removeHandler, int index) : base(obj, addHandler, removeHandler, index)
        {
            _ = initialized;
        }

        protected override ObjectReferenceValue CreateMarshaler(global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.NavigationView, object> handler) =>
        global::ABI.Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.NavigationView, object>.CreateMarshaler2(handler);

        protected override global::ABI.WinRT.Interop.EventSourceState<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.NavigationView, object>> CreateEventSourceState() =>
        new EventState(ObjectReference.ThisPtr, Index);

        [global::WinRT.WinRTExposedType]
        private sealed class EventState : global::ABI.WinRT.Interop.EventSourceState<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.NavigationView, object>>
        {
            public EventState(System.IntPtr obj, int index)
            : base(obj, index)
            {
            }

            protected override global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.NavigationView, object> GetEventInvoke()
            {
                return (global::Microsoft.UI.Xaml.Controls.NavigationView sender, object args) =>
                {
                    var targetDelegate = TargetDelegate;
                    if (targetDelegate is null)
                    {
                        return ;
                    }
                    targetDelegate.Invoke(sender, args);
                };
            }
        }
    }

    internal sealed unsafe class _EventSource_global__Microsoft_UI_Xaml_Input_ManipulationDeltaEventHandler : global::ABI.WinRT.Interop.EventSource<global::Microsoft.UI.Xaml.Input.ManipulationDeltaEventHandler>
    {


        internal _EventSource_global__Microsoft_UI_Xaml_Input_ManipulationDeltaEventHandler(IObjectReference obj,
        delegate* unmanaged[Stdcall]<System.IntPtr, System.IntPtr, WinRT.EventRegistrationToken*, int> addHandler,
        delegate* unmanaged[Stdcall]<System.IntPtr, WinRT.EventRegistrationToken, int> removeHandler, int index) : base(obj, addHandler, removeHandler, index)
        {

        }

        protected override ObjectReferenceValue CreateMarshaler(global::Microsoft.UI.Xaml.Input.ManipulationDeltaEventHandler handler) =>
        global::ABI.Microsoft.UI.Xaml.Input.ManipulationDeltaEventHandler.CreateMarshaler2(handler);

        protected override global::ABI.WinRT.Interop.EventSourceState<global::Microsoft.UI.Xaml.Input.ManipulationDeltaEventHandler> CreateEventSourceState() =>
        new EventState(ObjectReference.ThisPtr, Index);

        [global::WinRT.WinRTExposedType]
        private sealed class EventState : global::ABI.WinRT.Interop.EventSourceState<global::Microsoft.UI.Xaml.Input.ManipulationDeltaEventHandler>
        {
            public EventState(System.IntPtr obj, int index)
            : base(obj, index)
            {
            }

            protected override global::Microsoft.UI.Xaml.Input.ManipulationDeltaEventHandler GetEventInvoke()
            {
                return (object sender, global::Microsoft.UI.Xaml.Input.ManipulationDeltaRoutedEventArgs e) =>
                {
                    var targetDelegate = TargetDelegate;
                    if (targetDelegate is null)
                    {
                        return ;
                    }
                    targetDelegate.Invoke(sender, e);
                };
            }
        }
    }

    internal sealed unsafe class _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_UI_Xaml_Input_XamlUICommand__global__Microsoft_UI_Xaml_Input_CanExecuteRequestedEventArgs_ : global::ABI.WinRT.Interop.EventSource<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Input.XamlUICommand, global::Microsoft.UI.Xaml.Input.CanExecuteRequestedEventArgs>>
    {
        private static readonly bool initialized = global::WinRT.GenericTypeInstantiations.Windows_Foundation_TypedEventHandler_2_Microsoft_UI_Xaml_Input_XamlUICommand__Microsoft_UI_Xaml_Input_CanExecuteRequestedEventArgs.EnsureInitialized();

        internal _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_UI_Xaml_Input_XamlUICommand__global__Microsoft_UI_Xaml_Input_CanExecuteRequestedEventArgs_(IObjectReference obj,
        delegate* unmanaged[Stdcall]<System.IntPtr, System.IntPtr, WinRT.EventRegistrationToken*, int> addHandler,
        delegate* unmanaged[Stdcall]<System.IntPtr, WinRT.EventRegistrationToken, int> removeHandler, int index) : base(obj, addHandler, removeHandler, index)
        {
            _ = initialized;
        }

        protected override ObjectReferenceValue CreateMarshaler(global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Input.XamlUICommand, global::Microsoft.UI.Xaml.Input.CanExecuteRequestedEventArgs> handler) =>
        global::ABI.Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Input.XamlUICommand, global::Microsoft.UI.Xaml.Input.CanExecuteRequestedEventArgs>.CreateMarshaler2(handler);

        protected override global::ABI.WinRT.Interop.EventSourceState<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Input.XamlUICommand, global::Microsoft.UI.Xaml.Input.CanExecuteRequestedEventArgs>> CreateEventSourceState() =>
        new EventState(ObjectReference.ThisPtr, Index);

        [global::WinRT.WinRTExposedType]
        private sealed class EventState : global::ABI.WinRT.Interop.EventSourceState<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Input.XamlUICommand, global::Microsoft.UI.Xaml.Input.CanExecuteRequestedEventArgs>>
        {
            public EventState(System.IntPtr obj, int index)
            : base(obj, index)
            {
            }

            protected override global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Input.XamlUICommand, global::Microsoft.UI.Xaml.Input.CanExecuteRequestedEventArgs> GetEventInvoke()
            {
                return (global::Microsoft.UI.Xaml.Input.XamlUICommand sender, global::Microsoft.UI.Xaml.Input.CanExecuteRequestedEventArgs args) =>
                {
                    var targetDelegate = TargetDelegate;
                    if (targetDelegate is null)
                    {
                        return ;
                    }
                    targetDelegate.Invoke(sender, args);
                };
            }
        }
    }

    internal sealed unsafe class _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_Web_WebView2_Core_CoreWebView2__global__Microsoft_Web_WebView2_Core_CoreWebView2NavigationStartingEventArgs_ : global::ABI.WinRT.Interop.EventSource<global::Windows.Foundation.TypedEventHandler<global::Microsoft.Web.WebView2.Core.CoreWebView2, global::Microsoft.Web.WebView2.Core.CoreWebView2NavigationStartingEventArgs>>
    {
        private static readonly bool initialized = global::WinRT.GenericTypeInstantiations.Windows_Foundation_TypedEventHandler_2_Microsoft_Web_WebView2_Core_CoreWebView2__Microsoft_Web_WebView2_Core_CoreWebView2NavigationStartingEventArgs.EnsureInitialized();

        internal _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_Web_WebView2_Core_CoreWebView2__global__Microsoft_Web_WebView2_Core_CoreWebView2NavigationStartingEventArgs_(IObjectReference obj,
        delegate* unmanaged[Stdcall]<System.IntPtr, System.IntPtr, WinRT.EventRegistrationToken*, int> addHandler,
        delegate* unmanaged[Stdcall]<System.IntPtr, WinRT.EventRegistrationToken, int> removeHandler, int index) : base(obj, addHandler, removeHandler, index)
        {
            _ = initialized;
        }

        protected override ObjectReferenceValue CreateMarshaler(global::Windows.Foundation.TypedEventHandler<global::Microsoft.Web.WebView2.Core.CoreWebView2, global::Microsoft.Web.WebView2.Core.CoreWebView2NavigationStartingEventArgs> handler) =>
        global::ABI.Windows.Foundation.TypedEventHandler<global::Microsoft.Web.WebView2.Core.CoreWebView2, global::Microsoft.Web.WebView2.Core.CoreWebView2NavigationStartingEventArgs>.CreateMarshaler2(handler);

        protected override global::ABI.WinRT.Interop.EventSourceState<global::Windows.Foundation.TypedEventHandler<global::Microsoft.Web.WebView2.Core.CoreWebView2, global::Microsoft.Web.WebView2.Core.CoreWebView2NavigationStartingEventArgs>> CreateEventSourceState() =>
        new EventState(ObjectReference.ThisPtr, Index);

        [global::WinRT.WinRTExposedType]
        private sealed class EventState : global::ABI.WinRT.Interop.EventSourceState<global::Windows.Foundation.TypedEventHandler<global::Microsoft.Web.WebView2.Core.CoreWebView2, global::Microsoft.Web.WebView2.Core.CoreWebView2NavigationStartingEventArgs>>
        {
            public EventState(System.IntPtr obj, int index)
            : base(obj, index)
            {
            }

            protected override global::Windows.Foundation.TypedEventHandler<global::Microsoft.Web.WebView2.Core.CoreWebView2, global::Microsoft.Web.WebView2.Core.CoreWebView2NavigationStartingEventArgs> GetEventInvoke()
            {
                return (global::Microsoft.Web.WebView2.Core.CoreWebView2 sender, global::Microsoft.Web.WebView2.Core.CoreWebView2NavigationStartingEventArgs args) =>
                {
                    var targetDelegate = TargetDelegate;
                    if (targetDelegate is null)
                    {
                        return ;
                    }
                    targetDelegate.Invoke(sender, args);
                };
            }
        }
    }

    internal sealed unsafe class _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_UI_Input_GestureRecognizer__global__Microsoft_UI_Input_DraggingEventArgs_ : global::ABI.WinRT.Interop.EventSource<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Input.GestureRecognizer, global::Microsoft.UI.Input.DraggingEventArgs>>
    {
        private static readonly bool initialized = global::WinRT.GenericTypeInstantiations.Windows_Foundation_TypedEventHandler_2_Microsoft_UI_Input_GestureRecognizer__Microsoft_UI_Input_DraggingEventArgs.EnsureInitialized();

        internal _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_UI_Input_GestureRecognizer__global__Microsoft_UI_Input_DraggingEventArgs_(IObjectReference obj,
        delegate* unmanaged[Stdcall]<System.IntPtr, System.IntPtr, WinRT.EventRegistrationToken*, int> addHandler,
        delegate* unmanaged[Stdcall]<System.IntPtr, WinRT.EventRegistrationToken, int> removeHandler, int index) : base(obj, addHandler, removeHandler, index)
        {
            _ = initialized;
        }

        protected override ObjectReferenceValue CreateMarshaler(global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Input.GestureRecognizer, global::Microsoft.UI.Input.DraggingEventArgs> handler) =>
        global::ABI.Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Input.GestureRecognizer, global::Microsoft.UI.Input.DraggingEventArgs>.CreateMarshaler2(handler);

        protected override global::ABI.WinRT.Interop.EventSourceState<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Input.GestureRecognizer, global::Microsoft.UI.Input.DraggingEventArgs>> CreateEventSourceState() =>
        new EventState(ObjectReference.ThisPtr, Index);

        [global::WinRT.WinRTExposedType]
        private sealed class EventState : global::ABI.WinRT.Interop.EventSourceState<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Input.GestureRecognizer, global::Microsoft.UI.Input.DraggingEventArgs>>
        {
            public EventState(System.IntPtr obj, int index)
            : base(obj, index)
            {
            }

            protected override global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Input.GestureRecognizer, global::Microsoft.UI.Input.DraggingEventArgs> GetEventInvoke()
            {
                return (global::Microsoft.UI.Input.GestureRecognizer sender, global::Microsoft.UI.Input.DraggingEventArgs args) =>
                {
                    var targetDelegate = TargetDelegate;
                    if (targetDelegate is null)
                    {
                        return ;
                    }
                    targetDelegate.Invoke(sender, args);
                };
            }
        }
    }

    internal sealed unsafe class _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_UI_Xaml_Controls_CommandBar__global__Microsoft_UI_Xaml_Controls_DynamicOverflowItemsChangingEventArgs_ : global::ABI.WinRT.Interop.EventSource<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.CommandBar, global::Microsoft.UI.Xaml.Controls.DynamicOverflowItemsChangingEventArgs>>
    {
        private static readonly bool initialized = global::WinRT.GenericTypeInstantiations.Windows_Foundation_TypedEventHandler_2_Microsoft_UI_Xaml_Controls_CommandBar__Microsoft_UI_Xaml_Controls_DynamicOverflowItemsChangingEventArgs.EnsureInitialized();

        internal _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_UI_Xaml_Controls_CommandBar__global__Microsoft_UI_Xaml_Controls_DynamicOverflowItemsChangingEventArgs_(IObjectReference obj,
        delegate* unmanaged[Stdcall]<System.IntPtr, System.IntPtr, WinRT.EventRegistrationToken*, int> addHandler,
        delegate* unmanaged[Stdcall]<System.IntPtr, WinRT.EventRegistrationToken, int> removeHandler, int index) : base(obj, addHandler, removeHandler, index)
        {
            _ = initialized;
        }

        protected override ObjectReferenceValue CreateMarshaler(global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.CommandBar, global::Microsoft.UI.Xaml.Controls.DynamicOverflowItemsChangingEventArgs> handler) =>
        global::ABI.Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.CommandBar, global::Microsoft.UI.Xaml.Controls.DynamicOverflowItemsChangingEventArgs>.CreateMarshaler2(handler);

        protected override global::ABI.WinRT.Interop.EventSourceState<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.CommandBar, global::Microsoft.UI.Xaml.Controls.DynamicOverflowItemsChangingEventArgs>> CreateEventSourceState() =>
        new EventState(ObjectReference.ThisPtr, Index);

        [global::WinRT.WinRTExposedType]
        private sealed class EventState : global::ABI.WinRT.Interop.EventSourceState<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.CommandBar, global::Microsoft.UI.Xaml.Controls.DynamicOverflowItemsChangingEventArgs>>
        {
            public EventState(System.IntPtr obj, int index)
            : base(obj, index)
            {
            }

            protected override global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.CommandBar, global::Microsoft.UI.Xaml.Controls.DynamicOverflowItemsChangingEventArgs> GetEventInvoke()
            {
                return (global::Microsoft.UI.Xaml.Controls.CommandBar sender, global::Microsoft.UI.Xaml.Controls.DynamicOverflowItemsChangingEventArgs args) =>
                {
                    var targetDelegate = TargetDelegate;
                    if (targetDelegate is null)
                    {
                        return ;
                    }
                    targetDelegate.Invoke(sender, args);
                };
            }
        }
    }

    internal sealed unsafe class _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_UI_Xaml_Controls_PasswordBox__global__Microsoft_UI_Xaml_Controls_PasswordBoxPasswordChangingEventArgs_ : global::ABI.WinRT.Interop.EventSource<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.PasswordBox, global::Microsoft.UI.Xaml.Controls.PasswordBoxPasswordChangingEventArgs>>
    {
        private static readonly bool initialized = global::WinRT.GenericTypeInstantiations.Windows_Foundation_TypedEventHandler_2_Microsoft_UI_Xaml_Controls_PasswordBox__Microsoft_UI_Xaml_Controls_PasswordBoxPasswordChangingEventArgs.EnsureInitialized();

        internal _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_UI_Xaml_Controls_PasswordBox__global__Microsoft_UI_Xaml_Controls_PasswordBoxPasswordChangingEventArgs_(IObjectReference obj,
        delegate* unmanaged[Stdcall]<System.IntPtr, System.IntPtr, WinRT.EventRegistrationToken*, int> addHandler,
        delegate* unmanaged[Stdcall]<System.IntPtr, WinRT.EventRegistrationToken, int> removeHandler, int index) : base(obj, addHandler, removeHandler, index)
        {
            _ = initialized;
        }

        protected override ObjectReferenceValue CreateMarshaler(global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.PasswordBox, global::Microsoft.UI.Xaml.Controls.PasswordBoxPasswordChangingEventArgs> handler) =>
        global::ABI.Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.PasswordBox, global::Microsoft.UI.Xaml.Controls.PasswordBoxPasswordChangingEventArgs>.CreateMarshaler2(handler);

        protected override global::ABI.WinRT.Interop.EventSourceState<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.PasswordBox, global::Microsoft.UI.Xaml.Controls.PasswordBoxPasswordChangingEventArgs>> CreateEventSourceState() =>
        new EventState(ObjectReference.ThisPtr, Index);

        [global::WinRT.WinRTExposedType]
        private sealed class EventState : global::ABI.WinRT.Interop.EventSourceState<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.PasswordBox, global::Microsoft.UI.Xaml.Controls.PasswordBoxPasswordChangingEventArgs>>
        {
            public EventState(System.IntPtr obj, int index)
            : base(obj, index)
            {
            }

            protected override global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.PasswordBox, global::Microsoft.UI.Xaml.Controls.PasswordBoxPasswordChangingEventArgs> GetEventInvoke()
            {
                return (global::Microsoft.UI.Xaml.Controls.PasswordBox sender, global::Microsoft.UI.Xaml.Controls.PasswordBoxPasswordChangingEventArgs args) =>
                {
                    var targetDelegate = TargetDelegate;
                    if (targetDelegate is null)
                    {
                        return ;
                    }
                    targetDelegate.Invoke(sender, args);
                };
            }
        }
    }

    internal sealed unsafe class _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_UI_Input_InputNonClientPointerSource__global__Microsoft_UI_Input_EnteringMoveSizeEventArgs_ : global::ABI.WinRT.Interop.EventSource<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Input.InputNonClientPointerSource, global::Microsoft.UI.Input.EnteringMoveSizeEventArgs>>
    {
        private static readonly bool initialized = global::WinRT.GenericTypeInstantiations.Windows_Foundation_TypedEventHandler_2_Microsoft_UI_Input_InputNonClientPointerSource__Microsoft_UI_Input_EnteringMoveSizeEventArgs.EnsureInitialized();

        internal _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_UI_Input_InputNonClientPointerSource__global__Microsoft_UI_Input_EnteringMoveSizeEventArgs_(IObjectReference obj,
        delegate* unmanaged[Stdcall]<System.IntPtr, System.IntPtr, WinRT.EventRegistrationToken*, int> addHandler,
        delegate* unmanaged[Stdcall]<System.IntPtr, WinRT.EventRegistrationToken, int> removeHandler, int index) : base(obj, addHandler, removeHandler, index)
        {
            _ = initialized;
        }

        protected override ObjectReferenceValue CreateMarshaler(global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Input.InputNonClientPointerSource, global::Microsoft.UI.Input.EnteringMoveSizeEventArgs> handler) =>
        global::ABI.Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Input.InputNonClientPointerSource, global::Microsoft.UI.Input.EnteringMoveSizeEventArgs>.CreateMarshaler2(handler);

        protected override global::ABI.WinRT.Interop.EventSourceState<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Input.InputNonClientPointerSource, global::Microsoft.UI.Input.EnteringMoveSizeEventArgs>> CreateEventSourceState() =>
        new EventState(ObjectReference.ThisPtr, Index);

        [global::WinRT.WinRTExposedType]
        private sealed class EventState : global::ABI.WinRT.Interop.EventSourceState<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Input.InputNonClientPointerSource, global::Microsoft.UI.Input.EnteringMoveSizeEventArgs>>
        {
            public EventState(System.IntPtr obj, int index)
            : base(obj, index)
            {
            }

            protected override global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Input.InputNonClientPointerSource, global::Microsoft.UI.Input.EnteringMoveSizeEventArgs> GetEventInvoke()
            {
                return (global::Microsoft.UI.Input.InputNonClientPointerSource sender, global::Microsoft.UI.Input.EnteringMoveSizeEventArgs args) =>
                {
                    var targetDelegate = TargetDelegate;
                    if (targetDelegate is null)
                    {
                        return ;
                    }
                    targetDelegate.Invoke(sender, args);
                };
            }
        }
    }

    internal sealed unsafe class _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_Web_WebView2_Core_CoreWebView2Frame__global__Microsoft_Web_WebView2_Core_CoreWebView2NavigationCompletedEventArgs_ : global::ABI.WinRT.Interop.EventSource<global::Windows.Foundation.TypedEventHandler<global::Microsoft.Web.WebView2.Core.CoreWebView2Frame, global::Microsoft.Web.WebView2.Core.CoreWebView2NavigationCompletedEventArgs>>
    {
        private static readonly bool initialized = global::WinRT.GenericTypeInstantiations.Windows_Foundation_TypedEventHandler_2_Microsoft_Web_WebView2_Core_CoreWebView2Frame__Microsoft_Web_WebView2_Core_CoreWebView2NavigationCompletedEventArgs.EnsureInitialized();

        internal _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_Web_WebView2_Core_CoreWebView2Frame__global__Microsoft_Web_WebView2_Core_CoreWebView2NavigationCompletedEventArgs_(IObjectReference obj,
        delegate* unmanaged[Stdcall]<System.IntPtr, System.IntPtr, WinRT.EventRegistrationToken*, int> addHandler,
        delegate* unmanaged[Stdcall]<System.IntPtr, WinRT.EventRegistrationToken, int> removeHandler, int index) : base(obj, addHandler, removeHandler, index)
        {
            _ = initialized;
        }

        protected override ObjectReferenceValue CreateMarshaler(global::Windows.Foundation.TypedEventHandler<global::Microsoft.Web.WebView2.Core.CoreWebView2Frame, global::Microsoft.Web.WebView2.Core.CoreWebView2NavigationCompletedEventArgs> handler) =>
        global::ABI.Windows.Foundation.TypedEventHandler<global::Microsoft.Web.WebView2.Core.CoreWebView2Frame, global::Microsoft.Web.WebView2.Core.CoreWebView2NavigationCompletedEventArgs>.CreateMarshaler2(handler);

        protected override global::ABI.WinRT.Interop.EventSourceState<global::Windows.Foundation.TypedEventHandler<global::Microsoft.Web.WebView2.Core.CoreWebView2Frame, global::Microsoft.Web.WebView2.Core.CoreWebView2NavigationCompletedEventArgs>> CreateEventSourceState() =>
        new EventState(ObjectReference.ThisPtr, Index);

        [global::WinRT.WinRTExposedType]
        private sealed class EventState : global::ABI.WinRT.Interop.EventSourceState<global::Windows.Foundation.TypedEventHandler<global::Microsoft.Web.WebView2.Core.CoreWebView2Frame, global::Microsoft.Web.WebView2.Core.CoreWebView2NavigationCompletedEventArgs>>
        {
            public EventState(System.IntPtr obj, int index)
            : base(obj, index)
            {
            }

            protected override global::Windows.Foundation.TypedEventHandler<global::Microsoft.Web.WebView2.Core.CoreWebView2Frame, global::Microsoft.Web.WebView2.Core.CoreWebView2NavigationCompletedEventArgs> GetEventInvoke()
            {
                return (global::Microsoft.Web.WebView2.Core.CoreWebView2Frame sender, global::Microsoft.Web.WebView2.Core.CoreWebView2NavigationCompletedEventArgs args) =>
                {
                    var targetDelegate = TargetDelegate;
                    if (targetDelegate is null)
                    {
                        return ;
                    }
                    targetDelegate.Invoke(sender, args);
                };
            }
        }
    }

    internal sealed unsafe class _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_UI_Input_InputPointerSource__global__Microsoft_UI_Input_TouchHitTestingEventArgs_ : global::ABI.WinRT.Interop.EventSource<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Input.InputPointerSource, global::Microsoft.UI.Input.TouchHitTestingEventArgs>>
    {
        private static readonly bool initialized = global::WinRT.GenericTypeInstantiations.Windows_Foundation_TypedEventHandler_2_Microsoft_UI_Input_InputPointerSource__Microsoft_UI_Input_TouchHitTestingEventArgs.EnsureInitialized();

        internal _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_UI_Input_InputPointerSource__global__Microsoft_UI_Input_TouchHitTestingEventArgs_(IObjectReference obj,
        delegate* unmanaged[Stdcall]<System.IntPtr, System.IntPtr, WinRT.EventRegistrationToken*, int> addHandler,
        delegate* unmanaged[Stdcall]<System.IntPtr, WinRT.EventRegistrationToken, int> removeHandler, int index) : base(obj, addHandler, removeHandler, index)
        {
            _ = initialized;
        }

        protected override ObjectReferenceValue CreateMarshaler(global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Input.InputPointerSource, global::Microsoft.UI.Input.TouchHitTestingEventArgs> handler) =>
        global::ABI.Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Input.InputPointerSource, global::Microsoft.UI.Input.TouchHitTestingEventArgs>.CreateMarshaler2(handler);

        protected override global::ABI.WinRT.Interop.EventSourceState<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Input.InputPointerSource, global::Microsoft.UI.Input.TouchHitTestingEventArgs>> CreateEventSourceState() =>
        new EventState(ObjectReference.ThisPtr, Index);

        [global::WinRT.WinRTExposedType]
        private sealed class EventState : global::ABI.WinRT.Interop.EventSourceState<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Input.InputPointerSource, global::Microsoft.UI.Input.TouchHitTestingEventArgs>>
        {
            public EventState(System.IntPtr obj, int index)
            : base(obj, index)
            {
            }

            protected override global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Input.InputPointerSource, global::Microsoft.UI.Input.TouchHitTestingEventArgs> GetEventInvoke()
            {
                return (global::Microsoft.UI.Input.InputPointerSource sender, global::Microsoft.UI.Input.TouchHitTestingEventArgs args) =>
                {
                    var targetDelegate = TargetDelegate;
                    if (targetDelegate is null)
                    {
                        return ;
                    }
                    targetDelegate.Invoke(sender, args);
                };
            }
        }
    }

    internal sealed unsafe class _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_UI_Xaml_Controls_SelectionModel__global__Microsoft_UI_Xaml_Controls_SelectionModelSelectionChangedEventArgs_ : global::ABI.WinRT.Interop.EventSource<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.SelectionModel, global::Microsoft.UI.Xaml.Controls.SelectionModelSelectionChangedEventArgs>>
    {
        private static readonly bool initialized = global::WinRT.GenericTypeInstantiations.Windows_Foundation_TypedEventHandler_2_Microsoft_UI_Xaml_Controls_SelectionModel__Microsoft_UI_Xaml_Controls_SelectionModelSelectionChangedEventArgs.EnsureInitialized();

        internal _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_UI_Xaml_Controls_SelectionModel__global__Microsoft_UI_Xaml_Controls_SelectionModelSelectionChangedEventArgs_(IObjectReference obj,
        delegate* unmanaged[Stdcall]<System.IntPtr, System.IntPtr, WinRT.EventRegistrationToken*, int> addHandler,
        delegate* unmanaged[Stdcall]<System.IntPtr, WinRT.EventRegistrationToken, int> removeHandler, int index) : base(obj, addHandler, removeHandler, index)
        {
            _ = initialized;
        }

        protected override ObjectReferenceValue CreateMarshaler(global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.SelectionModel, global::Microsoft.UI.Xaml.Controls.SelectionModelSelectionChangedEventArgs> handler) =>
        global::ABI.Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.SelectionModel, global::Microsoft.UI.Xaml.Controls.SelectionModelSelectionChangedEventArgs>.CreateMarshaler2(handler);

        protected override global::ABI.WinRT.Interop.EventSourceState<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.SelectionModel, global::Microsoft.UI.Xaml.Controls.SelectionModelSelectionChangedEventArgs>> CreateEventSourceState() =>
        new EventState(ObjectReference.ThisPtr, Index);

        [global::WinRT.WinRTExposedType]
        private sealed class EventState : global::ABI.WinRT.Interop.EventSourceState<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.SelectionModel, global::Microsoft.UI.Xaml.Controls.SelectionModelSelectionChangedEventArgs>>
        {
            public EventState(System.IntPtr obj, int index)
            : base(obj, index)
            {
            }

            protected override global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.SelectionModel, global::Microsoft.UI.Xaml.Controls.SelectionModelSelectionChangedEventArgs> GetEventInvoke()
            {
                return (global::Microsoft.UI.Xaml.Controls.SelectionModel sender, global::Microsoft.UI.Xaml.Controls.SelectionModelSelectionChangedEventArgs args) =>
                {
                    var targetDelegate = TargetDelegate;
                    if (targetDelegate is null)
                    {
                        return ;
                    }
                    targetDelegate.Invoke(sender, args);
                };
            }
        }
    }

    internal sealed unsafe class _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_Web_WebView2_Core_CoreWebView2__global__Microsoft_Web_WebView2_Core_CoreWebView2WebResourceResponseReceivedEventArgs_ : global::ABI.WinRT.Interop.EventSource<global::Windows.Foundation.TypedEventHandler<global::Microsoft.Web.WebView2.Core.CoreWebView2, global::Microsoft.Web.WebView2.Core.CoreWebView2WebResourceResponseReceivedEventArgs>>
    {
        private static readonly bool initialized = global::WinRT.GenericTypeInstantiations.Windows_Foundation_TypedEventHandler_2_Microsoft_Web_WebView2_Core_CoreWebView2__Microsoft_Web_WebView2_Core_CoreWebView2WebResourceResponseReceivedEventArgs.EnsureInitialized();

        internal _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_Web_WebView2_Core_CoreWebView2__global__Microsoft_Web_WebView2_Core_CoreWebView2WebResourceResponseReceivedEventArgs_(IObjectReference obj,
        delegate* unmanaged[Stdcall]<System.IntPtr, System.IntPtr, WinRT.EventRegistrationToken*, int> addHandler,
        delegate* unmanaged[Stdcall]<System.IntPtr, WinRT.EventRegistrationToken, int> removeHandler, int index) : base(obj, addHandler, removeHandler, index)
        {
            _ = initialized;
        }

        protected override ObjectReferenceValue CreateMarshaler(global::Windows.Foundation.TypedEventHandler<global::Microsoft.Web.WebView2.Core.CoreWebView2, global::Microsoft.Web.WebView2.Core.CoreWebView2WebResourceResponseReceivedEventArgs> handler) =>
        global::ABI.Windows.Foundation.TypedEventHandler<global::Microsoft.Web.WebView2.Core.CoreWebView2, global::Microsoft.Web.WebView2.Core.CoreWebView2WebResourceResponseReceivedEventArgs>.CreateMarshaler2(handler);

        protected override global::ABI.WinRT.Interop.EventSourceState<global::Windows.Foundation.TypedEventHandler<global::Microsoft.Web.WebView2.Core.CoreWebView2, global::Microsoft.Web.WebView2.Core.CoreWebView2WebResourceResponseReceivedEventArgs>> CreateEventSourceState() =>
        new EventState(ObjectReference.ThisPtr, Index);

        [global::WinRT.WinRTExposedType]
        private sealed class EventState : global::ABI.WinRT.Interop.EventSourceState<global::Windows.Foundation.TypedEventHandler<global::Microsoft.Web.WebView2.Core.CoreWebView2, global::Microsoft.Web.WebView2.Core.CoreWebView2WebResourceResponseReceivedEventArgs>>
        {
            public EventState(System.IntPtr obj, int index)
            : base(obj, index)
            {
            }

            protected override global::Windows.Foundation.TypedEventHandler<global::Microsoft.Web.WebView2.Core.CoreWebView2, global::Microsoft.Web.WebView2.Core.CoreWebView2WebResourceResponseReceivedEventArgs> GetEventInvoke()
            {
                return (global::Microsoft.Web.WebView2.Core.CoreWebView2 sender, global::Microsoft.Web.WebView2.Core.CoreWebView2WebResourceResponseReceivedEventArgs args) =>
                {
                    var targetDelegate = TargetDelegate;
                    if (targetDelegate is null)
                    {
                        return ;
                    }
                    targetDelegate.Invoke(sender, args);
                };
            }
        }
    }

    internal sealed unsafe class _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_UI_Xaml_Controls_TreeView__global__Microsoft_UI_Xaml_Controls_TreeViewDragItemsStartingEventArgs_ : global::ABI.WinRT.Interop.EventSource<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.TreeView, global::Microsoft.UI.Xaml.Controls.TreeViewDragItemsStartingEventArgs>>
    {
        private static readonly bool initialized = global::WinRT.GenericTypeInstantiations.Windows_Foundation_TypedEventHandler_2_Microsoft_UI_Xaml_Controls_TreeView__Microsoft_UI_Xaml_Controls_TreeViewDragItemsStartingEventArgs.EnsureInitialized();

        internal _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_UI_Xaml_Controls_TreeView__global__Microsoft_UI_Xaml_Controls_TreeViewDragItemsStartingEventArgs_(IObjectReference obj,
        delegate* unmanaged[Stdcall]<System.IntPtr, System.IntPtr, WinRT.EventRegistrationToken*, int> addHandler,
        delegate* unmanaged[Stdcall]<System.IntPtr, WinRT.EventRegistrationToken, int> removeHandler, int index) : base(obj, addHandler, removeHandler, index)
        {
            _ = initialized;
        }

        protected override ObjectReferenceValue CreateMarshaler(global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.TreeView, global::Microsoft.UI.Xaml.Controls.TreeViewDragItemsStartingEventArgs> handler) =>
        global::ABI.Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.TreeView, global::Microsoft.UI.Xaml.Controls.TreeViewDragItemsStartingEventArgs>.CreateMarshaler2(handler);

        protected override global::ABI.WinRT.Interop.EventSourceState<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.TreeView, global::Microsoft.UI.Xaml.Controls.TreeViewDragItemsStartingEventArgs>> CreateEventSourceState() =>
        new EventState(ObjectReference.ThisPtr, Index);

        [global::WinRT.WinRTExposedType]
        private sealed class EventState : global::ABI.WinRT.Interop.EventSourceState<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.TreeView, global::Microsoft.UI.Xaml.Controls.TreeViewDragItemsStartingEventArgs>>
        {
            public EventState(System.IntPtr obj, int index)
            : base(obj, index)
            {
            }

            protected override global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.TreeView, global::Microsoft.UI.Xaml.Controls.TreeViewDragItemsStartingEventArgs> GetEventInvoke()
            {
                return (global::Microsoft.UI.Xaml.Controls.TreeView sender, global::Microsoft.UI.Xaml.Controls.TreeViewDragItemsStartingEventArgs args) =>
                {
                    var targetDelegate = TargetDelegate;
                    if (targetDelegate is null)
                    {
                        return ;
                    }
                    targetDelegate.Invoke(sender, args);
                };
            }
        }
    }

    internal sealed unsafe class _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_UI_Content_IContentSiteBridgeEndpointConnectionPrivate__global__Microsoft_UI_Content_EndpointRequestedStateChangedEventArgs_ : global::ABI.WinRT.Interop.EventSource<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Content.IContentSiteBridgeEndpointConnectionPrivate, global::Microsoft.UI.Content.EndpointRequestedStateChangedEventArgs>>
    {
        private static readonly bool initialized = global::WinRT.GenericTypeInstantiations.Windows_Foundation_TypedEventHandler_2_Microsoft_UI_Content_IContentSiteBridgeEndpointConnectionPrivate__Microsoft_UI_Content_EndpointRequestedStateChangedEventArgs.EnsureInitialized();

        internal _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_UI_Content_IContentSiteBridgeEndpointConnectionPrivate__global__Microsoft_UI_Content_EndpointRequestedStateChangedEventArgs_(IObjectReference obj,
        delegate* unmanaged[Stdcall]<System.IntPtr, System.IntPtr, WinRT.EventRegistrationToken*, int> addHandler,
        delegate* unmanaged[Stdcall]<System.IntPtr, WinRT.EventRegistrationToken, int> removeHandler, int index) : base(obj, addHandler, removeHandler, index)
        {
            _ = initialized;
        }

        protected override ObjectReferenceValue CreateMarshaler(global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Content.IContentSiteBridgeEndpointConnectionPrivate, global::Microsoft.UI.Content.EndpointRequestedStateChangedEventArgs> handler) =>
        global::ABI.Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Content.IContentSiteBridgeEndpointConnectionPrivate, global::Microsoft.UI.Content.EndpointRequestedStateChangedEventArgs>.CreateMarshaler2(handler);

        protected override global::ABI.WinRT.Interop.EventSourceState<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Content.IContentSiteBridgeEndpointConnectionPrivate, global::Microsoft.UI.Content.EndpointRequestedStateChangedEventArgs>> CreateEventSourceState() =>
        new EventState(ObjectReference.ThisPtr, Index);

        [global::WinRT.WinRTExposedType]
        private sealed class EventState : global::ABI.WinRT.Interop.EventSourceState<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Content.IContentSiteBridgeEndpointConnectionPrivate, global::Microsoft.UI.Content.EndpointRequestedStateChangedEventArgs>>
        {
            public EventState(System.IntPtr obj, int index)
            : base(obj, index)
            {
            }

            protected override global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Content.IContentSiteBridgeEndpointConnectionPrivate, global::Microsoft.UI.Content.EndpointRequestedStateChangedEventArgs> GetEventInvoke()
            {
                return (global::Microsoft.UI.Content.IContentSiteBridgeEndpointConnectionPrivate sender, global::Microsoft.UI.Content.EndpointRequestedStateChangedEventArgs args) =>
                {
                    var targetDelegate = TargetDelegate;
                    if (targetDelegate is null)
                    {
                        return ;
                    }
                    targetDelegate.Invoke(sender, args);
                };
            }
        }
    }

    internal sealed unsafe class _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_Web_WebView2_Core_CoreWebView2__global__Microsoft_Web_WebView2_Core_CoreWebView2BasicAuthenticationRequestedEventArgs_ : global::ABI.WinRT.Interop.EventSource<global::Windows.Foundation.TypedEventHandler<global::Microsoft.Web.WebView2.Core.CoreWebView2, global::Microsoft.Web.WebView2.Core.CoreWebView2BasicAuthenticationRequestedEventArgs>>
    {
        private static readonly bool initialized = global::WinRT.GenericTypeInstantiations.Windows_Foundation_TypedEventHandler_2_Microsoft_Web_WebView2_Core_CoreWebView2__Microsoft_Web_WebView2_Core_CoreWebView2BasicAuthenticationRequestedEventArgs.EnsureInitialized();

        internal _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_Web_WebView2_Core_CoreWebView2__global__Microsoft_Web_WebView2_Core_CoreWebView2BasicAuthenticationRequestedEventArgs_(IObjectReference obj,
        delegate* unmanaged[Stdcall]<System.IntPtr, System.IntPtr, WinRT.EventRegistrationToken*, int> addHandler,
        delegate* unmanaged[Stdcall]<System.IntPtr, WinRT.EventRegistrationToken, int> removeHandler, int index) : base(obj, addHandler, removeHandler, index)
        {
            _ = initialized;
        }

        protected override ObjectReferenceValue CreateMarshaler(global::Windows.Foundation.TypedEventHandler<global::Microsoft.Web.WebView2.Core.CoreWebView2, global::Microsoft.Web.WebView2.Core.CoreWebView2BasicAuthenticationRequestedEventArgs> handler) =>
        global::ABI.Windows.Foundation.TypedEventHandler<global::Microsoft.Web.WebView2.Core.CoreWebView2, global::Microsoft.Web.WebView2.Core.CoreWebView2BasicAuthenticationRequestedEventArgs>.CreateMarshaler2(handler);

        protected override global::ABI.WinRT.Interop.EventSourceState<global::Windows.Foundation.TypedEventHandler<global::Microsoft.Web.WebView2.Core.CoreWebView2, global::Microsoft.Web.WebView2.Core.CoreWebView2BasicAuthenticationRequestedEventArgs>> CreateEventSourceState() =>
        new EventState(ObjectReference.ThisPtr, Index);

        [global::WinRT.WinRTExposedType]
        private sealed class EventState : global::ABI.WinRT.Interop.EventSourceState<global::Windows.Foundation.TypedEventHandler<global::Microsoft.Web.WebView2.Core.CoreWebView2, global::Microsoft.Web.WebView2.Core.CoreWebView2BasicAuthenticationRequestedEventArgs>>
        {
            public EventState(System.IntPtr obj, int index)
            : base(obj, index)
            {
            }

            protected override global::Windows.Foundation.TypedEventHandler<global::Microsoft.Web.WebView2.Core.CoreWebView2, global::Microsoft.Web.WebView2.Core.CoreWebView2BasicAuthenticationRequestedEventArgs> GetEventInvoke()
            {
                return (global::Microsoft.Web.WebView2.Core.CoreWebView2 sender, global::Microsoft.Web.WebView2.Core.CoreWebView2BasicAuthenticationRequestedEventArgs args) =>
                {
                    var targetDelegate = TargetDelegate;
                    if (targetDelegate is null)
                    {
                        return ;
                    }
                    targetDelegate.Invoke(sender, args);
                };
            }
        }
    }

    internal sealed unsafe class _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_Windows_ApplicationModel_Resources_ResourceManager__global__Microsoft_Windows_ApplicationModel_Resources_ResourceNotFoundEventArgs_ : global::ABI.WinRT.Interop.EventSource<global::Windows.Foundation.TypedEventHandler<global::Microsoft.Windows.ApplicationModel.Resources.ResourceManager, global::Microsoft.Windows.ApplicationModel.Resources.ResourceNotFoundEventArgs>>
    {
        private static readonly bool initialized = global::WinRT.GenericTypeInstantiations.Windows_Foundation_TypedEventHandler_2_Microsoft_Windows_ApplicationModel_Resources_ResourceManager__Microsoft_Windows_ApplicationModel_Resources_ResourceNotFoundEventArgs.EnsureInitialized();

        internal _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_Windows_ApplicationModel_Resources_ResourceManager__global__Microsoft_Windows_ApplicationModel_Resources_ResourceNotFoundEventArgs_(IObjectReference obj,
        delegate* unmanaged[Stdcall]<System.IntPtr, System.IntPtr, WinRT.EventRegistrationToken*, int> addHandler,
        delegate* unmanaged[Stdcall]<System.IntPtr, WinRT.EventRegistrationToken, int> removeHandler, int index) : base(obj, addHandler, removeHandler, index)
        {
            _ = initialized;
        }

        protected override ObjectReferenceValue CreateMarshaler(global::Windows.Foundation.TypedEventHandler<global::Microsoft.Windows.ApplicationModel.Resources.ResourceManager, global::Microsoft.Windows.ApplicationModel.Resources.ResourceNotFoundEventArgs> handler) =>
        global::ABI.Windows.Foundation.TypedEventHandler<global::Microsoft.Windows.ApplicationModel.Resources.ResourceManager, global::Microsoft.Windows.ApplicationModel.Resources.ResourceNotFoundEventArgs>.CreateMarshaler2(handler);

        protected override global::ABI.WinRT.Interop.EventSourceState<global::Windows.Foundation.TypedEventHandler<global::Microsoft.Windows.ApplicationModel.Resources.ResourceManager, global::Microsoft.Windows.ApplicationModel.Resources.ResourceNotFoundEventArgs>> CreateEventSourceState() =>
        new EventState(ObjectReference.ThisPtr, Index);

        [global::WinRT.WinRTExposedType]
        private sealed class EventState : global::ABI.WinRT.Interop.EventSourceState<global::Windows.Foundation.TypedEventHandler<global::Microsoft.Windows.ApplicationModel.Resources.ResourceManager, global::Microsoft.Windows.ApplicationModel.Resources.ResourceNotFoundEventArgs>>
        {
            public EventState(System.IntPtr obj, int index)
            : base(obj, index)
            {
            }

            protected override global::Windows.Foundation.TypedEventHandler<global::Microsoft.Windows.ApplicationModel.Resources.ResourceManager, global::Microsoft.Windows.ApplicationModel.Resources.ResourceNotFoundEventArgs> GetEventInvoke()
            {
                return (global::Microsoft.Windows.ApplicationModel.Resources.ResourceManager sender, global::Microsoft.Windows.ApplicationModel.Resources.ResourceNotFoundEventArgs args) =>
                {
                    var targetDelegate = TargetDelegate;
                    if (targetDelegate is null)
                    {
                        return ;
                    }
                    targetDelegate.Invoke(sender, args);
                };
            }
        }
    }

    internal sealed unsafe class _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_Web_WebView2_Core_CoreWebView2DownloadOperation__object_ : global::ABI.WinRT.Interop.EventSource<global::Windows.Foundation.TypedEventHandler<global::Microsoft.Web.WebView2.Core.CoreWebView2DownloadOperation, object>>
    {
        private static readonly bool initialized = global::WinRT.GenericTypeInstantiations.Windows_Foundation_TypedEventHandler_2_Microsoft_Web_WebView2_Core_CoreWebView2DownloadOperation__object.EnsureInitialized();

        internal _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_Web_WebView2_Core_CoreWebView2DownloadOperation__object_(IObjectReference obj,
        delegate* unmanaged[Stdcall]<System.IntPtr, System.IntPtr, WinRT.EventRegistrationToken*, int> addHandler,
        delegate* unmanaged[Stdcall]<System.IntPtr, WinRT.EventRegistrationToken, int> removeHandler, int index) : base(obj, addHandler, removeHandler, index)
        {
            _ = initialized;
        }

        protected override ObjectReferenceValue CreateMarshaler(global::Windows.Foundation.TypedEventHandler<global::Microsoft.Web.WebView2.Core.CoreWebView2DownloadOperation, object> handler) =>
        global::ABI.Windows.Foundation.TypedEventHandler<global::Microsoft.Web.WebView2.Core.CoreWebView2DownloadOperation, object>.CreateMarshaler2(handler);

        protected override global::ABI.WinRT.Interop.EventSourceState<global::Windows.Foundation.TypedEventHandler<global::Microsoft.Web.WebView2.Core.CoreWebView2DownloadOperation, object>> CreateEventSourceState() =>
        new EventState(ObjectReference.ThisPtr, Index);

        [global::WinRT.WinRTExposedType]
        private sealed class EventState : global::ABI.WinRT.Interop.EventSourceState<global::Windows.Foundation.TypedEventHandler<global::Microsoft.Web.WebView2.Core.CoreWebView2DownloadOperation, object>>
        {
            public EventState(System.IntPtr obj, int index)
            : base(obj, index)
            {
            }

            protected override global::Windows.Foundation.TypedEventHandler<global::Microsoft.Web.WebView2.Core.CoreWebView2DownloadOperation, object> GetEventInvoke()
            {
                return (global::Microsoft.Web.WebView2.Core.CoreWebView2DownloadOperation sender, object args) =>
                {
                    var targetDelegate = TargetDelegate;
                    if (targetDelegate is null)
                    {
                        return ;
                    }
                    targetDelegate.Invoke(sender, args);
                };
            }
        }
    }

    internal sealed unsafe class _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_UI_Xaml_Controls_ScrollView__global__Microsoft_UI_Xaml_Controls_ScrollingBringingIntoViewEventArgs_ : global::ABI.WinRT.Interop.EventSource<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.ScrollView, global::Microsoft.UI.Xaml.Controls.ScrollingBringingIntoViewEventArgs>>
    {
        private static readonly bool initialized = global::WinRT.GenericTypeInstantiations.Windows_Foundation_TypedEventHandler_2_Microsoft_UI_Xaml_Controls_ScrollView__Microsoft_UI_Xaml_Controls_ScrollingBringingIntoViewEventArgs.EnsureInitialized();

        internal _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_UI_Xaml_Controls_ScrollView__global__Microsoft_UI_Xaml_Controls_ScrollingBringingIntoViewEventArgs_(IObjectReference obj,
        delegate* unmanaged[Stdcall]<System.IntPtr, System.IntPtr, WinRT.EventRegistrationToken*, int> addHandler,
        delegate* unmanaged[Stdcall]<System.IntPtr, WinRT.EventRegistrationToken, int> removeHandler, int index) : base(obj, addHandler, removeHandler, index)
        {
            _ = initialized;
        }

        protected override ObjectReferenceValue CreateMarshaler(global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.ScrollView, global::Microsoft.UI.Xaml.Controls.ScrollingBringingIntoViewEventArgs> handler) =>
        global::ABI.Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.ScrollView, global::Microsoft.UI.Xaml.Controls.ScrollingBringingIntoViewEventArgs>.CreateMarshaler2(handler);

        protected override global::ABI.WinRT.Interop.EventSourceState<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.ScrollView, global::Microsoft.UI.Xaml.Controls.ScrollingBringingIntoViewEventArgs>> CreateEventSourceState() =>
        new EventState(ObjectReference.ThisPtr, Index);

        [global::WinRT.WinRTExposedType]
        private sealed class EventState : global::ABI.WinRT.Interop.EventSourceState<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.ScrollView, global::Microsoft.UI.Xaml.Controls.ScrollingBringingIntoViewEventArgs>>
        {
            public EventState(System.IntPtr obj, int index)
            : base(obj, index)
            {
            }

            protected override global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.ScrollView, global::Microsoft.UI.Xaml.Controls.ScrollingBringingIntoViewEventArgs> GetEventInvoke()
            {
                return (global::Microsoft.UI.Xaml.Controls.ScrollView sender, global::Microsoft.UI.Xaml.Controls.ScrollingBringingIntoViewEventArgs args) =>
                {
                    var targetDelegate = TargetDelegate;
                    if (targetDelegate is null)
                    {
                        return ;
                    }
                    targetDelegate.Invoke(sender, args);
                };
            }
        }
    }

    internal sealed unsafe class _EventSource_global__Microsoft_UI_Xaml_Controls_Primitives_RangeBaseValueChangedEventHandler : global::ABI.WinRT.Interop.EventSource<global::Microsoft.UI.Xaml.Controls.Primitives.RangeBaseValueChangedEventHandler>
    {


        internal _EventSource_global__Microsoft_UI_Xaml_Controls_Primitives_RangeBaseValueChangedEventHandler(IObjectReference obj,
        delegate* unmanaged[Stdcall]<System.IntPtr, System.IntPtr, WinRT.EventRegistrationToken*, int> addHandler,
        delegate* unmanaged[Stdcall]<System.IntPtr, WinRT.EventRegistrationToken, int> removeHandler, int index) : base(obj, addHandler, removeHandler, index)
        {

        }

        protected override ObjectReferenceValue CreateMarshaler(global::Microsoft.UI.Xaml.Controls.Primitives.RangeBaseValueChangedEventHandler handler) =>
        global::ABI.Microsoft.UI.Xaml.Controls.Primitives.RangeBaseValueChangedEventHandler.CreateMarshaler2(handler);

        protected override global::ABI.WinRT.Interop.EventSourceState<global::Microsoft.UI.Xaml.Controls.Primitives.RangeBaseValueChangedEventHandler> CreateEventSourceState() =>
        new EventState(ObjectReference.ThisPtr, Index);

        [global::WinRT.WinRTExposedType]
        private sealed class EventState : global::ABI.WinRT.Interop.EventSourceState<global::Microsoft.UI.Xaml.Controls.Primitives.RangeBaseValueChangedEventHandler>
        {
            public EventState(System.IntPtr obj, int index)
            : base(obj, index)
            {
            }

            protected override global::Microsoft.UI.Xaml.Controls.Primitives.RangeBaseValueChangedEventHandler GetEventInvoke()
            {
                return (object sender, global::Microsoft.UI.Xaml.Controls.Primitives.RangeBaseValueChangedEventArgs e) =>
                {
                    var targetDelegate = TargetDelegate;
                    if (targetDelegate is null)
                    {
                        return ;
                    }
                    targetDelegate.Invoke(sender, e);
                };
            }
        }
    }

    internal sealed unsafe class _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_UI_Xaml_Controls_ItemCollectionTransitionProvider__global__Microsoft_UI_Xaml_Controls_ItemCollectionTransitionCompletedEventArgs_ : global::ABI.WinRT.Interop.EventSource<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.ItemCollectionTransitionProvider, global::Microsoft.UI.Xaml.Controls.ItemCollectionTransitionCompletedEventArgs>>
    {
        private static readonly bool initialized = global::WinRT.GenericTypeInstantiations.Windows_Foundation_TypedEventHandler_2_Microsoft_UI_Xaml_Controls_ItemCollectionTransitionProvider__Microsoft_UI_Xaml_Controls_ItemCollectionTransitionCompletedEventArgs.EnsureInitialized();

        internal _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_UI_Xaml_Controls_ItemCollectionTransitionProvider__global__Microsoft_UI_Xaml_Controls_ItemCollectionTransitionCompletedEventArgs_(IObjectReference obj,
        delegate* unmanaged[Stdcall]<System.IntPtr, System.IntPtr, WinRT.EventRegistrationToken*, int> addHandler,
        delegate* unmanaged[Stdcall]<System.IntPtr, WinRT.EventRegistrationToken, int> removeHandler, int index) : base(obj, addHandler, removeHandler, index)
        {
            _ = initialized;
        }

        protected override ObjectReferenceValue CreateMarshaler(global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.ItemCollectionTransitionProvider, global::Microsoft.UI.Xaml.Controls.ItemCollectionTransitionCompletedEventArgs> handler) =>
        global::ABI.Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.ItemCollectionTransitionProvider, global::Microsoft.UI.Xaml.Controls.ItemCollectionTransitionCompletedEventArgs>.CreateMarshaler2(handler);

        protected override global::ABI.WinRT.Interop.EventSourceState<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.ItemCollectionTransitionProvider, global::Microsoft.UI.Xaml.Controls.ItemCollectionTransitionCompletedEventArgs>> CreateEventSourceState() =>
        new EventState(ObjectReference.ThisPtr, Index);

        [global::WinRT.WinRTExposedType]
        private sealed class EventState : global::ABI.WinRT.Interop.EventSourceState<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.ItemCollectionTransitionProvider, global::Microsoft.UI.Xaml.Controls.ItemCollectionTransitionCompletedEventArgs>>
        {
            public EventState(System.IntPtr obj, int index)
            : base(obj, index)
            {
            }

            protected override global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.ItemCollectionTransitionProvider, global::Microsoft.UI.Xaml.Controls.ItemCollectionTransitionCompletedEventArgs> GetEventInvoke()
            {
                return (global::Microsoft.UI.Xaml.Controls.ItemCollectionTransitionProvider sender, global::Microsoft.UI.Xaml.Controls.ItemCollectionTransitionCompletedEventArgs args) =>
                {
                    var targetDelegate = TargetDelegate;
                    if (targetDelegate is null)
                    {
                        return ;
                    }
                    targetDelegate.Invoke(sender, args);
                };
            }
        }
    }

    internal sealed unsafe class _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_UI_Xaml_Controls_RichEditBox__global__Microsoft_UI_Xaml_Controls_TextControlCuttingToClipboardEventArgs_ : global::ABI.WinRT.Interop.EventSource<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.RichEditBox, global::Microsoft.UI.Xaml.Controls.TextControlCuttingToClipboardEventArgs>>
    {
        private static readonly bool initialized = global::WinRT.GenericTypeInstantiations.Windows_Foundation_TypedEventHandler_2_Microsoft_UI_Xaml_Controls_RichEditBox__Microsoft_UI_Xaml_Controls_TextControlCuttingToClipboardEventArgs.EnsureInitialized();

        internal _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_UI_Xaml_Controls_RichEditBox__global__Microsoft_UI_Xaml_Controls_TextControlCuttingToClipboardEventArgs_(IObjectReference obj,
        delegate* unmanaged[Stdcall]<System.IntPtr, System.IntPtr, WinRT.EventRegistrationToken*, int> addHandler,
        delegate* unmanaged[Stdcall]<System.IntPtr, WinRT.EventRegistrationToken, int> removeHandler, int index) : base(obj, addHandler, removeHandler, index)
        {
            _ = initialized;
        }

        protected override ObjectReferenceValue CreateMarshaler(global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.RichEditBox, global::Microsoft.UI.Xaml.Controls.TextControlCuttingToClipboardEventArgs> handler) =>
        global::ABI.Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.RichEditBox, global::Microsoft.UI.Xaml.Controls.TextControlCuttingToClipboardEventArgs>.CreateMarshaler2(handler);

        protected override global::ABI.WinRT.Interop.EventSourceState<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.RichEditBox, global::Microsoft.UI.Xaml.Controls.TextControlCuttingToClipboardEventArgs>> CreateEventSourceState() =>
        new EventState(ObjectReference.ThisPtr, Index);

        [global::WinRT.WinRTExposedType]
        private sealed class EventState : global::ABI.WinRT.Interop.EventSourceState<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.RichEditBox, global::Microsoft.UI.Xaml.Controls.TextControlCuttingToClipboardEventArgs>>
        {
            public EventState(System.IntPtr obj, int index)
            : base(obj, index)
            {
            }

            protected override global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.RichEditBox, global::Microsoft.UI.Xaml.Controls.TextControlCuttingToClipboardEventArgs> GetEventInvoke()
            {
                return (global::Microsoft.UI.Xaml.Controls.RichEditBox sender, global::Microsoft.UI.Xaml.Controls.TextControlCuttingToClipboardEventArgs args) =>
                {
                    var targetDelegate = TargetDelegate;
                    if (targetDelegate is null)
                    {
                        return ;
                    }
                    targetDelegate.Invoke(sender, args);
                };
            }
        }
    }

    internal sealed unsafe class _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_UI_Xaml_Controls_ScrollView__global__Microsoft_UI_Xaml_Controls_ScrollingZoomStartingEventArgs_ : global::ABI.WinRT.Interop.EventSource<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.ScrollView, global::Microsoft.UI.Xaml.Controls.ScrollingZoomStartingEventArgs>>
    {
        private static readonly bool initialized = global::WinRT.GenericTypeInstantiations.Windows_Foundation_TypedEventHandler_2_Microsoft_UI_Xaml_Controls_ScrollView__Microsoft_UI_Xaml_Controls_ScrollingZoomStartingEventArgs.EnsureInitialized();

        internal _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_UI_Xaml_Controls_ScrollView__global__Microsoft_UI_Xaml_Controls_ScrollingZoomStartingEventArgs_(IObjectReference obj,
        delegate* unmanaged[Stdcall]<System.IntPtr, System.IntPtr, WinRT.EventRegistrationToken*, int> addHandler,
        delegate* unmanaged[Stdcall]<System.IntPtr, WinRT.EventRegistrationToken, int> removeHandler, int index) : base(obj, addHandler, removeHandler, index)
        {
            _ = initialized;
        }

        protected override ObjectReferenceValue CreateMarshaler(global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.ScrollView, global::Microsoft.UI.Xaml.Controls.ScrollingZoomStartingEventArgs> handler) =>
        global::ABI.Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.ScrollView, global::Microsoft.UI.Xaml.Controls.ScrollingZoomStartingEventArgs>.CreateMarshaler2(handler);

        protected override global::ABI.WinRT.Interop.EventSourceState<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.ScrollView, global::Microsoft.UI.Xaml.Controls.ScrollingZoomStartingEventArgs>> CreateEventSourceState() =>
        new EventState(ObjectReference.ThisPtr, Index);

        [global::WinRT.WinRTExposedType]
        private sealed class EventState : global::ABI.WinRT.Interop.EventSourceState<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.ScrollView, global::Microsoft.UI.Xaml.Controls.ScrollingZoomStartingEventArgs>>
        {
            public EventState(System.IntPtr obj, int index)
            : base(obj, index)
            {
            }

            protected override global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.ScrollView, global::Microsoft.UI.Xaml.Controls.ScrollingZoomStartingEventArgs> GetEventInvoke()
            {
                return (global::Microsoft.UI.Xaml.Controls.ScrollView sender, global::Microsoft.UI.Xaml.Controls.ScrollingZoomStartingEventArgs args) =>
                {
                    var targetDelegate = TargetDelegate;
                    if (targetDelegate is null)
                    {
                        return ;
                    }
                    targetDelegate.Invoke(sender, args);
                };
            }
        }
    }

    internal sealed unsafe class _EventSource_global__Microsoft_UI_Xaml_Controls_Primitives_DragCompletedEventHandler : global::ABI.WinRT.Interop.EventSource<global::Microsoft.UI.Xaml.Controls.Primitives.DragCompletedEventHandler>
    {


        internal _EventSource_global__Microsoft_UI_Xaml_Controls_Primitives_DragCompletedEventHandler(IObjectReference obj,
        delegate* unmanaged[Stdcall]<System.IntPtr, System.IntPtr, WinRT.EventRegistrationToken*, int> addHandler,
        delegate* unmanaged[Stdcall]<System.IntPtr, WinRT.EventRegistrationToken, int> removeHandler, int index) : base(obj, addHandler, removeHandler, index)
        {

        }

        protected override ObjectReferenceValue CreateMarshaler(global::Microsoft.UI.Xaml.Controls.Primitives.DragCompletedEventHandler handler) =>
        global::ABI.Microsoft.UI.Xaml.Controls.Primitives.DragCompletedEventHandler.CreateMarshaler2(handler);

        protected override global::ABI.WinRT.Interop.EventSourceState<global::Microsoft.UI.Xaml.Controls.Primitives.DragCompletedEventHandler> CreateEventSourceState() =>
        new EventState(ObjectReference.ThisPtr, Index);

        [global::WinRT.WinRTExposedType]
        private sealed class EventState : global::ABI.WinRT.Interop.EventSourceState<global::Microsoft.UI.Xaml.Controls.Primitives.DragCompletedEventHandler>
        {
            public EventState(System.IntPtr obj, int index)
            : base(obj, index)
            {
            }

            protected override global::Microsoft.UI.Xaml.Controls.Primitives.DragCompletedEventHandler GetEventInvoke()
            {
                return (object sender, global::Microsoft.UI.Xaml.Controls.Primitives.DragCompletedEventArgs e) =>
                {
                    var targetDelegate = TargetDelegate;
                    if (targetDelegate is null)
                    {
                        return ;
                    }
                    targetDelegate.Invoke(sender, e);
                };
            }
        }
    }

    internal sealed unsafe class _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_UI_Xaml_Controls_TabView__global__Microsoft_UI_Xaml_Controls_TabViewTabDragCompletedEventArgs_ : global::ABI.WinRT.Interop.EventSource<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.TabView, global::Microsoft.UI.Xaml.Controls.TabViewTabDragCompletedEventArgs>>
    {
        private static readonly bool initialized = global::WinRT.GenericTypeInstantiations.Windows_Foundation_TypedEventHandler_2_Microsoft_UI_Xaml_Controls_TabView__Microsoft_UI_Xaml_Controls_TabViewTabDragCompletedEventArgs.EnsureInitialized();

        internal _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_UI_Xaml_Controls_TabView__global__Microsoft_UI_Xaml_Controls_TabViewTabDragCompletedEventArgs_(IObjectReference obj,
        delegate* unmanaged[Stdcall]<System.IntPtr, System.IntPtr, WinRT.EventRegistrationToken*, int> addHandler,
        delegate* unmanaged[Stdcall]<System.IntPtr, WinRT.EventRegistrationToken, int> removeHandler, int index) : base(obj, addHandler, removeHandler, index)
        {
            _ = initialized;
        }

        protected override ObjectReferenceValue CreateMarshaler(global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.TabView, global::Microsoft.UI.Xaml.Controls.TabViewTabDragCompletedEventArgs> handler) =>
        global::ABI.Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.TabView, global::Microsoft.UI.Xaml.Controls.TabViewTabDragCompletedEventArgs>.CreateMarshaler2(handler);

        protected override global::ABI.WinRT.Interop.EventSourceState<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.TabView, global::Microsoft.UI.Xaml.Controls.TabViewTabDragCompletedEventArgs>> CreateEventSourceState() =>
        new EventState(ObjectReference.ThisPtr, Index);

        [global::WinRT.WinRTExposedType]
        private sealed class EventState : global::ABI.WinRT.Interop.EventSourceState<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.TabView, global::Microsoft.UI.Xaml.Controls.TabViewTabDragCompletedEventArgs>>
        {
            public EventState(System.IntPtr obj, int index)
            : base(obj, index)
            {
            }

            protected override global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.TabView, global::Microsoft.UI.Xaml.Controls.TabViewTabDragCompletedEventArgs> GetEventInvoke()
            {
                return (global::Microsoft.UI.Xaml.Controls.TabView sender, global::Microsoft.UI.Xaml.Controls.TabViewTabDragCompletedEventArgs args) =>
                {
                    var targetDelegate = TargetDelegate;
                    if (targetDelegate is null)
                    {
                        return ;
                    }
                    targetDelegate.Invoke(sender, args);
                };
            }
        }
    }

    internal sealed unsafe class _EventSource_global__Windows_Foundation_TypedEventHandler_object__global__Microsoft_UI_Xaml_WindowEventArgs_ : global::ABI.WinRT.Interop.EventSource<global::Windows.Foundation.TypedEventHandler<object, global::Microsoft.UI.Xaml.WindowEventArgs>>
    {
        private static readonly bool initialized = global::WinRT.GenericTypeInstantiations.Windows_Foundation_TypedEventHandler_2_object__Microsoft_UI_Xaml_WindowEventArgs.EnsureInitialized();

        internal _EventSource_global__Windows_Foundation_TypedEventHandler_object__global__Microsoft_UI_Xaml_WindowEventArgs_(IObjectReference obj,
        delegate* unmanaged[Stdcall]<System.IntPtr, System.IntPtr, WinRT.EventRegistrationToken*, int> addHandler,
        delegate* unmanaged[Stdcall]<System.IntPtr, WinRT.EventRegistrationToken, int> removeHandler, int index) : base(obj, addHandler, removeHandler, index)
        {
            _ = initialized;
        }

        protected override ObjectReferenceValue CreateMarshaler(global::Windows.Foundation.TypedEventHandler<object, global::Microsoft.UI.Xaml.WindowEventArgs> handler) =>
        global::ABI.Windows.Foundation.TypedEventHandler<object, global::Microsoft.UI.Xaml.WindowEventArgs>.CreateMarshaler2(handler);

        protected override global::ABI.WinRT.Interop.EventSourceState<global::Windows.Foundation.TypedEventHandler<object, global::Microsoft.UI.Xaml.WindowEventArgs>> CreateEventSourceState() =>
        new EventState(ObjectReference.ThisPtr, Index);

        [global::WinRT.WinRTExposedType]
        private sealed class EventState : global::ABI.WinRT.Interop.EventSourceState<global::Windows.Foundation.TypedEventHandler<object, global::Microsoft.UI.Xaml.WindowEventArgs>>
        {
            public EventState(System.IntPtr obj, int index)
            : base(obj, index)
            {
            }

            protected override global::Windows.Foundation.TypedEventHandler<object, global::Microsoft.UI.Xaml.WindowEventArgs> GetEventInvoke()
            {
                return (object sender, global::Microsoft.UI.Xaml.WindowEventArgs args) =>
                {
                    var targetDelegate = TargetDelegate;
                    if (targetDelegate is null)
                    {
                        return ;
                    }
                    targetDelegate.Invoke(sender, args);
                };
            }
        }
    }

    internal sealed unsafe class _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_UI_Xaml_UIElement__global__Microsoft_UI_Xaml_DragStartingEventArgs_ : global::ABI.WinRT.Interop.EventSource<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.UIElement, global::Microsoft.UI.Xaml.DragStartingEventArgs>>
    {
        private static readonly bool initialized = global::WinRT.GenericTypeInstantiations.Windows_Foundation_TypedEventHandler_2_Microsoft_UI_Xaml_UIElement__Microsoft_UI_Xaml_DragStartingEventArgs.EnsureInitialized();

        internal _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_UI_Xaml_UIElement__global__Microsoft_UI_Xaml_DragStartingEventArgs_(IObjectReference obj,
        delegate* unmanaged[Stdcall]<System.IntPtr, System.IntPtr, WinRT.EventRegistrationToken*, int> addHandler,
        delegate* unmanaged[Stdcall]<System.IntPtr, WinRT.EventRegistrationToken, int> removeHandler, int index) : base(obj, addHandler, removeHandler, index)
        {
            _ = initialized;
        }

        protected override ObjectReferenceValue CreateMarshaler(global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.UIElement, global::Microsoft.UI.Xaml.DragStartingEventArgs> handler) =>
        global::ABI.Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.UIElement, global::Microsoft.UI.Xaml.DragStartingEventArgs>.CreateMarshaler2(handler);

        protected override global::ABI.WinRT.Interop.EventSourceState<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.UIElement, global::Microsoft.UI.Xaml.DragStartingEventArgs>> CreateEventSourceState() =>
        new EventState(ObjectReference.ThisPtr, Index);

        [global::WinRT.WinRTExposedType]
        private sealed class EventState : global::ABI.WinRT.Interop.EventSourceState<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.UIElement, global::Microsoft.UI.Xaml.DragStartingEventArgs>>
        {
            public EventState(System.IntPtr obj, int index)
            : base(obj, index)
            {
            }

            protected override global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.UIElement, global::Microsoft.UI.Xaml.DragStartingEventArgs> GetEventInvoke()
            {
                return (global::Microsoft.UI.Xaml.UIElement sender, global::Microsoft.UI.Xaml.DragStartingEventArgs args) =>
                {
                    var targetDelegate = TargetDelegate;
                    if (targetDelegate is null)
                    {
                        return ;
                    }
                    targetDelegate.Invoke(sender, args);
                };
            }
        }
    }

    internal sealed unsafe class _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_UI_Xaml_Controls_TimePicker__global__Microsoft_UI_Xaml_Controls_TimePickerSelectedValueChangedEventArgs_ : global::ABI.WinRT.Interop.EventSource<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.TimePicker, global::Microsoft.UI.Xaml.Controls.TimePickerSelectedValueChangedEventArgs>>
    {
        private static readonly bool initialized = global::WinRT.GenericTypeInstantiations.Windows_Foundation_TypedEventHandler_2_Microsoft_UI_Xaml_Controls_TimePicker__Microsoft_UI_Xaml_Controls_TimePickerSelectedValueChangedEventArgs.EnsureInitialized();

        internal _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_UI_Xaml_Controls_TimePicker__global__Microsoft_UI_Xaml_Controls_TimePickerSelectedValueChangedEventArgs_(IObjectReference obj,
        delegate* unmanaged[Stdcall]<System.IntPtr, System.IntPtr, WinRT.EventRegistrationToken*, int> addHandler,
        delegate* unmanaged[Stdcall]<System.IntPtr, WinRT.EventRegistrationToken, int> removeHandler, int index) : base(obj, addHandler, removeHandler, index)
        {
            _ = initialized;
        }

        protected override ObjectReferenceValue CreateMarshaler(global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.TimePicker, global::Microsoft.UI.Xaml.Controls.TimePickerSelectedValueChangedEventArgs> handler) =>
        global::ABI.Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.TimePicker, global::Microsoft.UI.Xaml.Controls.TimePickerSelectedValueChangedEventArgs>.CreateMarshaler2(handler);

        protected override global::ABI.WinRT.Interop.EventSourceState<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.TimePicker, global::Microsoft.UI.Xaml.Controls.TimePickerSelectedValueChangedEventArgs>> CreateEventSourceState() =>
        new EventState(ObjectReference.ThisPtr, Index);

        [global::WinRT.WinRTExposedType]
        private sealed class EventState : global::ABI.WinRT.Interop.EventSourceState<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.TimePicker, global::Microsoft.UI.Xaml.Controls.TimePickerSelectedValueChangedEventArgs>>
        {
            public EventState(System.IntPtr obj, int index)
            : base(obj, index)
            {
            }

            protected override global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.TimePicker, global::Microsoft.UI.Xaml.Controls.TimePickerSelectedValueChangedEventArgs> GetEventInvoke()
            {
                return (global::Microsoft.UI.Xaml.Controls.TimePicker sender, global::Microsoft.UI.Xaml.Controls.TimePickerSelectedValueChangedEventArgs args) =>
                {
                    var targetDelegate = TargetDelegate;
                    if (targetDelegate is null)
                    {
                        return ;
                    }
                    targetDelegate.Invoke(sender, args);
                };
            }
        }
    }

    internal sealed unsafe class _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_UI_Input_InputFocusController__global__Microsoft_UI_Input_FocusChangedEventArgs_ : global::ABI.WinRT.Interop.EventSource<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Input.InputFocusController, global::Microsoft.UI.Input.FocusChangedEventArgs>>
    {
        private static readonly bool initialized = global::WinRT.GenericTypeInstantiations.Windows_Foundation_TypedEventHandler_2_Microsoft_UI_Input_InputFocusController__Microsoft_UI_Input_FocusChangedEventArgs.EnsureInitialized();

        internal _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_UI_Input_InputFocusController__global__Microsoft_UI_Input_FocusChangedEventArgs_(IObjectReference obj,
        delegate* unmanaged[Stdcall]<System.IntPtr, System.IntPtr, WinRT.EventRegistrationToken*, int> addHandler,
        delegate* unmanaged[Stdcall]<System.IntPtr, WinRT.EventRegistrationToken, int> removeHandler, int index) : base(obj, addHandler, removeHandler, index)
        {
            _ = initialized;
        }

        protected override ObjectReferenceValue CreateMarshaler(global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Input.InputFocusController, global::Microsoft.UI.Input.FocusChangedEventArgs> handler) =>
        global::ABI.Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Input.InputFocusController, global::Microsoft.UI.Input.FocusChangedEventArgs>.CreateMarshaler2(handler);

        protected override global::ABI.WinRT.Interop.EventSourceState<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Input.InputFocusController, global::Microsoft.UI.Input.FocusChangedEventArgs>> CreateEventSourceState() =>
        new EventState(ObjectReference.ThisPtr, Index);

        [global::WinRT.WinRTExposedType]
        private sealed class EventState : global::ABI.WinRT.Interop.EventSourceState<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Input.InputFocusController, global::Microsoft.UI.Input.FocusChangedEventArgs>>
        {
            public EventState(System.IntPtr obj, int index)
            : base(obj, index)
            {
            }

            protected override global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Input.InputFocusController, global::Microsoft.UI.Input.FocusChangedEventArgs> GetEventInvoke()
            {
                return (global::Microsoft.UI.Input.InputFocusController sender, global::Microsoft.UI.Input.FocusChangedEventArgs args) =>
                {
                    var targetDelegate = TargetDelegate;
                    if (targetDelegate is null)
                    {
                        return ;
                    }
                    targetDelegate.Invoke(sender, args);
                };
            }
        }
    }

    internal sealed unsafe class _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_UI_Xaml_Controls_TreeView__global__Microsoft_UI_Xaml_Controls_TreeViewSelectionChangedEventArgs_ : global::ABI.WinRT.Interop.EventSource<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.TreeView, global::Microsoft.UI.Xaml.Controls.TreeViewSelectionChangedEventArgs>>
    {
        private static readonly bool initialized = global::WinRT.GenericTypeInstantiations.Windows_Foundation_TypedEventHandler_2_Microsoft_UI_Xaml_Controls_TreeView__Microsoft_UI_Xaml_Controls_TreeViewSelectionChangedEventArgs.EnsureInitialized();

        internal _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_UI_Xaml_Controls_TreeView__global__Microsoft_UI_Xaml_Controls_TreeViewSelectionChangedEventArgs_(IObjectReference obj,
        delegate* unmanaged[Stdcall]<System.IntPtr, System.IntPtr, WinRT.EventRegistrationToken*, int> addHandler,
        delegate* unmanaged[Stdcall]<System.IntPtr, WinRT.EventRegistrationToken, int> removeHandler, int index) : base(obj, addHandler, removeHandler, index)
        {
            _ = initialized;
        }

        protected override ObjectReferenceValue CreateMarshaler(global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.TreeView, global::Microsoft.UI.Xaml.Controls.TreeViewSelectionChangedEventArgs> handler) =>
        global::ABI.Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.TreeView, global::Microsoft.UI.Xaml.Controls.TreeViewSelectionChangedEventArgs>.CreateMarshaler2(handler);

        protected override global::ABI.WinRT.Interop.EventSourceState<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.TreeView, global::Microsoft.UI.Xaml.Controls.TreeViewSelectionChangedEventArgs>> CreateEventSourceState() =>
        new EventState(ObjectReference.ThisPtr, Index);

        [global::WinRT.WinRTExposedType]
        private sealed class EventState : global::ABI.WinRT.Interop.EventSourceState<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.TreeView, global::Microsoft.UI.Xaml.Controls.TreeViewSelectionChangedEventArgs>>
        {
            public EventState(System.IntPtr obj, int index)
            : base(obj, index)
            {
            }

            protected override global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.TreeView, global::Microsoft.UI.Xaml.Controls.TreeViewSelectionChangedEventArgs> GetEventInvoke()
            {
                return (global::Microsoft.UI.Xaml.Controls.TreeView sender, global::Microsoft.UI.Xaml.Controls.TreeViewSelectionChangedEventArgs args) =>
                {
                    var targetDelegate = TargetDelegate;
                    if (targetDelegate is null)
                    {
                        return ;
                    }
                    targetDelegate.Invoke(sender, args);
                };
            }
        }
    }

    internal sealed unsafe class _EventSource_global__Microsoft_UI_Xaml_Navigation_NavigationStoppedEventHandler : global::ABI.WinRT.Interop.EventSource<global::Microsoft.UI.Xaml.Navigation.NavigationStoppedEventHandler>
    {


        internal _EventSource_global__Microsoft_UI_Xaml_Navigation_NavigationStoppedEventHandler(IObjectReference obj,
        delegate* unmanaged[Stdcall]<System.IntPtr, System.IntPtr, WinRT.EventRegistrationToken*, int> addHandler,
        delegate* unmanaged[Stdcall]<System.IntPtr, WinRT.EventRegistrationToken, int> removeHandler, int index) : base(obj, addHandler, removeHandler, index)
        {

        }

        protected override ObjectReferenceValue CreateMarshaler(global::Microsoft.UI.Xaml.Navigation.NavigationStoppedEventHandler handler) =>
        global::ABI.Microsoft.UI.Xaml.Navigation.NavigationStoppedEventHandler.CreateMarshaler2(handler);

        protected override global::ABI.WinRT.Interop.EventSourceState<global::Microsoft.UI.Xaml.Navigation.NavigationStoppedEventHandler> CreateEventSourceState() =>
        new EventState(ObjectReference.ThisPtr, Index);

        [global::WinRT.WinRTExposedType]
        private sealed class EventState : global::ABI.WinRT.Interop.EventSourceState<global::Microsoft.UI.Xaml.Navigation.NavigationStoppedEventHandler>
        {
            public EventState(System.IntPtr obj, int index)
            : base(obj, index)
            {
            }

            protected override global::Microsoft.UI.Xaml.Navigation.NavigationStoppedEventHandler GetEventInvoke()
            {
                return (object sender, global::Microsoft.UI.Xaml.Navigation.NavigationEventArgs e) =>
                {
                    var targetDelegate = TargetDelegate;
                    if (targetDelegate is null)
                    {
                        return ;
                    }
                    targetDelegate.Invoke(sender, e);
                };
            }
        }
    }

    internal sealed unsafe class _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_UI_Input_InputNonClientPointerSource__global__Microsoft_UI_Input_WindowRectChangedEventArgs_ : global::ABI.WinRT.Interop.EventSource<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Input.InputNonClientPointerSource, global::Microsoft.UI.Input.WindowRectChangedEventArgs>>
    {
        private static readonly bool initialized = global::WinRT.GenericTypeInstantiations.Windows_Foundation_TypedEventHandler_2_Microsoft_UI_Input_InputNonClientPointerSource__Microsoft_UI_Input_WindowRectChangedEventArgs.EnsureInitialized();

        internal _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_UI_Input_InputNonClientPointerSource__global__Microsoft_UI_Input_WindowRectChangedEventArgs_(IObjectReference obj,
        delegate* unmanaged[Stdcall]<System.IntPtr, System.IntPtr, WinRT.EventRegistrationToken*, int> addHandler,
        delegate* unmanaged[Stdcall]<System.IntPtr, WinRT.EventRegistrationToken, int> removeHandler, int index) : base(obj, addHandler, removeHandler, index)
        {
            _ = initialized;
        }

        protected override ObjectReferenceValue CreateMarshaler(global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Input.InputNonClientPointerSource, global::Microsoft.UI.Input.WindowRectChangedEventArgs> handler) =>
        global::ABI.Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Input.InputNonClientPointerSource, global::Microsoft.UI.Input.WindowRectChangedEventArgs>.CreateMarshaler2(handler);

        protected override global::ABI.WinRT.Interop.EventSourceState<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Input.InputNonClientPointerSource, global::Microsoft.UI.Input.WindowRectChangedEventArgs>> CreateEventSourceState() =>
        new EventState(ObjectReference.ThisPtr, Index);

        [global::WinRT.WinRTExposedType]
        private sealed class EventState : global::ABI.WinRT.Interop.EventSourceState<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Input.InputNonClientPointerSource, global::Microsoft.UI.Input.WindowRectChangedEventArgs>>
        {
            public EventState(System.IntPtr obj, int index)
            : base(obj, index)
            {
            }

            protected override global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Input.InputNonClientPointerSource, global::Microsoft.UI.Input.WindowRectChangedEventArgs> GetEventInvoke()
            {
                return (global::Microsoft.UI.Input.InputNonClientPointerSource sender, global::Microsoft.UI.Input.WindowRectChangedEventArgs args) =>
                {
                    var targetDelegate = TargetDelegate;
                    if (targetDelegate is null)
                    {
                        return ;
                    }
                    targetDelegate.Invoke(sender, args);
                };
            }
        }
    }

    internal sealed unsafe class _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_UI_Xaml_Controls_ItemsView__global__Microsoft_UI_Xaml_Controls_ItemsViewSelectionChangedEventArgs_ : global::ABI.WinRT.Interop.EventSource<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.ItemsView, global::Microsoft.UI.Xaml.Controls.ItemsViewSelectionChangedEventArgs>>
    {
        private static readonly bool initialized = global::WinRT.GenericTypeInstantiations.Windows_Foundation_TypedEventHandler_2_Microsoft_UI_Xaml_Controls_ItemsView__Microsoft_UI_Xaml_Controls_ItemsViewSelectionChangedEventArgs.EnsureInitialized();

        internal _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_UI_Xaml_Controls_ItemsView__global__Microsoft_UI_Xaml_Controls_ItemsViewSelectionChangedEventArgs_(IObjectReference obj,
        delegate* unmanaged[Stdcall]<System.IntPtr, System.IntPtr, WinRT.EventRegistrationToken*, int> addHandler,
        delegate* unmanaged[Stdcall]<System.IntPtr, WinRT.EventRegistrationToken, int> removeHandler, int index) : base(obj, addHandler, removeHandler, index)
        {
            _ = initialized;
        }

        protected override ObjectReferenceValue CreateMarshaler(global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.ItemsView, global::Microsoft.UI.Xaml.Controls.ItemsViewSelectionChangedEventArgs> handler) =>
        global::ABI.Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.ItemsView, global::Microsoft.UI.Xaml.Controls.ItemsViewSelectionChangedEventArgs>.CreateMarshaler2(handler);

        protected override global::ABI.WinRT.Interop.EventSourceState<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.ItemsView, global::Microsoft.UI.Xaml.Controls.ItemsViewSelectionChangedEventArgs>> CreateEventSourceState() =>
        new EventState(ObjectReference.ThisPtr, Index);

        [global::WinRT.WinRTExposedType]
        private sealed class EventState : global::ABI.WinRT.Interop.EventSourceState<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.ItemsView, global::Microsoft.UI.Xaml.Controls.ItemsViewSelectionChangedEventArgs>>
        {
            public EventState(System.IntPtr obj, int index)
            : base(obj, index)
            {
            }

            protected override global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.ItemsView, global::Microsoft.UI.Xaml.Controls.ItemsViewSelectionChangedEventArgs> GetEventInvoke()
            {
                return (global::Microsoft.UI.Xaml.Controls.ItemsView sender, global::Microsoft.UI.Xaml.Controls.ItemsViewSelectionChangedEventArgs args) =>
                {
                    var targetDelegate = TargetDelegate;
                    if (targetDelegate is null)
                    {
                        return ;
                    }
                    targetDelegate.Invoke(sender, args);
                };
            }
        }
    }

    internal sealed unsafe class _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_Web_WebView2_Core_CoreWebView2Profile__object_ : global::ABI.WinRT.Interop.EventSource<global::Windows.Foundation.TypedEventHandler<global::Microsoft.Web.WebView2.Core.CoreWebView2Profile, object>>
    {
        private static readonly bool initialized = global::WinRT.GenericTypeInstantiations.Windows_Foundation_TypedEventHandler_2_Microsoft_Web_WebView2_Core_CoreWebView2Profile__object.EnsureInitialized();

        internal _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_Web_WebView2_Core_CoreWebView2Profile__object_(IObjectReference obj,
        delegate* unmanaged[Stdcall]<System.IntPtr, System.IntPtr, WinRT.EventRegistrationToken*, int> addHandler,
        delegate* unmanaged[Stdcall]<System.IntPtr, WinRT.EventRegistrationToken, int> removeHandler, int index) : base(obj, addHandler, removeHandler, index)
        {
            _ = initialized;
        }

        protected override ObjectReferenceValue CreateMarshaler(global::Windows.Foundation.TypedEventHandler<global::Microsoft.Web.WebView2.Core.CoreWebView2Profile, object> handler) =>
        global::ABI.Windows.Foundation.TypedEventHandler<global::Microsoft.Web.WebView2.Core.CoreWebView2Profile, object>.CreateMarshaler2(handler);

        protected override global::ABI.WinRT.Interop.EventSourceState<global::Windows.Foundation.TypedEventHandler<global::Microsoft.Web.WebView2.Core.CoreWebView2Profile, object>> CreateEventSourceState() =>
        new EventState(ObjectReference.ThisPtr, Index);

        [global::WinRT.WinRTExposedType]
        private sealed class EventState : global::ABI.WinRT.Interop.EventSourceState<global::Windows.Foundation.TypedEventHandler<global::Microsoft.Web.WebView2.Core.CoreWebView2Profile, object>>
        {
            public EventState(System.IntPtr obj, int index)
            : base(obj, index)
            {
            }

            protected override global::Windows.Foundation.TypedEventHandler<global::Microsoft.Web.WebView2.Core.CoreWebView2Profile, object> GetEventInvoke()
            {
                return (global::Microsoft.Web.WebView2.Core.CoreWebView2Profile sender, object args) =>
                {
                    var targetDelegate = TargetDelegate;
                    if (targetDelegate is null)
                    {
                        return ;
                    }
                    targetDelegate.Invoke(sender, args);
                };
            }
        }
    }

    internal sealed unsafe class _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_UI_Xaml_Controls_TwoPaneView__object_ : global::ABI.WinRT.Interop.EventSource<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.TwoPaneView, object>>
    {
        private static readonly bool initialized = global::WinRT.GenericTypeInstantiations.Windows_Foundation_TypedEventHandler_2_Microsoft_UI_Xaml_Controls_TwoPaneView__object.EnsureInitialized();

        internal _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_UI_Xaml_Controls_TwoPaneView__object_(IObjectReference obj,
        delegate* unmanaged[Stdcall]<System.IntPtr, System.IntPtr, WinRT.EventRegistrationToken*, int> addHandler,
        delegate* unmanaged[Stdcall]<System.IntPtr, WinRT.EventRegistrationToken, int> removeHandler, int index) : base(obj, addHandler, removeHandler, index)
        {
            _ = initialized;
        }

        protected override ObjectReferenceValue CreateMarshaler(global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.TwoPaneView, object> handler) =>
        global::ABI.Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.TwoPaneView, object>.CreateMarshaler2(handler);

        protected override global::ABI.WinRT.Interop.EventSourceState<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.TwoPaneView, object>> CreateEventSourceState() =>
        new EventState(ObjectReference.ThisPtr, Index);

        [global::WinRT.WinRTExposedType]
        private sealed class EventState : global::ABI.WinRT.Interop.EventSourceState<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.TwoPaneView, object>>
        {
            public EventState(System.IntPtr obj, int index)
            : base(obj, index)
            {
            }

            protected override global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.TwoPaneView, object> GetEventInvoke()
            {
                return (global::Microsoft.UI.Xaml.Controls.TwoPaneView sender, object args) =>
                {
                    var targetDelegate = TargetDelegate;
                    if (targetDelegate is null)
                    {
                        return ;
                    }
                    targetDelegate.Invoke(sender, args);
                };
            }
        }
    }

    internal sealed unsafe class _EventSource_global__Microsoft_UI_Xaml_Interop_BindableVectorChangedEventHandler : global::ABI.WinRT.Interop.EventSource<global::Microsoft.UI.Xaml.Interop.BindableVectorChangedEventHandler>
    {


        internal _EventSource_global__Microsoft_UI_Xaml_Interop_BindableVectorChangedEventHandler(IObjectReference obj,
        delegate* unmanaged[Stdcall]<System.IntPtr, System.IntPtr, WinRT.EventRegistrationToken*, int> addHandler,
        delegate* unmanaged[Stdcall]<System.IntPtr, WinRT.EventRegistrationToken, int> removeHandler, int index) : base(obj, addHandler, removeHandler, index)
        {

        }

        protected override ObjectReferenceValue CreateMarshaler(global::Microsoft.UI.Xaml.Interop.BindableVectorChangedEventHandler handler) =>
        global::ABI.Microsoft.UI.Xaml.Interop.BindableVectorChangedEventHandler.CreateMarshaler2(handler);

        protected override global::ABI.WinRT.Interop.EventSourceState<global::Microsoft.UI.Xaml.Interop.BindableVectorChangedEventHandler> CreateEventSourceState() =>
        new EventState(ObjectReference.ThisPtr, Index);

        [global::WinRT.WinRTExposedType]
        private sealed class EventState : global::ABI.WinRT.Interop.EventSourceState<global::Microsoft.UI.Xaml.Interop.BindableVectorChangedEventHandler>
        {
            public EventState(System.IntPtr obj, int index)
            : base(obj, index)
            {
            }

            protected override global::Microsoft.UI.Xaml.Interop.BindableVectorChangedEventHandler GetEventInvoke()
            {
                return (global::Microsoft.UI.Xaml.Interop.IBindableObservableVector vector, object e) =>
                {
                    var targetDelegate = TargetDelegate;
                    if (targetDelegate is null)
                    {
                        return ;
                    }
                    targetDelegate.Invoke(vector, e);
                };
            }
        }
    }

    internal sealed unsafe class _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_UI_Xaml_Controls_NavigationView__global__Microsoft_UI_Xaml_Controls_NavigationViewSelectionChangedEventArgs_ : global::ABI.WinRT.Interop.EventSource<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.NavigationView, global::Microsoft.UI.Xaml.Controls.NavigationViewSelectionChangedEventArgs>>
    {
        private static readonly bool initialized = global::WinRT.GenericTypeInstantiations.Windows_Foundation_TypedEventHandler_2_Microsoft_UI_Xaml_Controls_NavigationView__Microsoft_UI_Xaml_Controls_NavigationViewSelectionChangedEventArgs.EnsureInitialized();

        internal _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_UI_Xaml_Controls_NavigationView__global__Microsoft_UI_Xaml_Controls_NavigationViewSelectionChangedEventArgs_(IObjectReference obj,
        delegate* unmanaged[Stdcall]<System.IntPtr, System.IntPtr, WinRT.EventRegistrationToken*, int> addHandler,
        delegate* unmanaged[Stdcall]<System.IntPtr, WinRT.EventRegistrationToken, int> removeHandler, int index) : base(obj, addHandler, removeHandler, index)
        {
            _ = initialized;
        }

        protected override ObjectReferenceValue CreateMarshaler(global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.NavigationView, global::Microsoft.UI.Xaml.Controls.NavigationViewSelectionChangedEventArgs> handler) =>
        global::ABI.Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.NavigationView, global::Microsoft.UI.Xaml.Controls.NavigationViewSelectionChangedEventArgs>.CreateMarshaler2(handler);

        protected override global::ABI.WinRT.Interop.EventSourceState<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.NavigationView, global::Microsoft.UI.Xaml.Controls.NavigationViewSelectionChangedEventArgs>> CreateEventSourceState() =>
        new EventState(ObjectReference.ThisPtr, Index);

        [global::WinRT.WinRTExposedType]
        private sealed class EventState : global::ABI.WinRT.Interop.EventSourceState<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.NavigationView, global::Microsoft.UI.Xaml.Controls.NavigationViewSelectionChangedEventArgs>>
        {
            public EventState(System.IntPtr obj, int index)
            : base(obj, index)
            {
            }

            protected override global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.NavigationView, global::Microsoft.UI.Xaml.Controls.NavigationViewSelectionChangedEventArgs> GetEventInvoke()
            {
                return (global::Microsoft.UI.Xaml.Controls.NavigationView sender, global::Microsoft.UI.Xaml.Controls.NavigationViewSelectionChangedEventArgs args) =>
                {
                    var targetDelegate = TargetDelegate;
                    if (targetDelegate is null)
                    {
                        return ;
                    }
                    targetDelegate.Invoke(sender, args);
                };
            }
        }
    }

    internal sealed unsafe class _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_UI_Xaml_Documents_Hyperlink__global__Microsoft_UI_Xaml_Documents_HyperlinkClickEventArgs_ : global::ABI.WinRT.Interop.EventSource<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Documents.Hyperlink, global::Microsoft.UI.Xaml.Documents.HyperlinkClickEventArgs>>
    {
        private static readonly bool initialized = global::WinRT.GenericTypeInstantiations.Windows_Foundation_TypedEventHandler_2_Microsoft_UI_Xaml_Documents_Hyperlink__Microsoft_UI_Xaml_Documents_HyperlinkClickEventArgs.EnsureInitialized();

        internal _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_UI_Xaml_Documents_Hyperlink__global__Microsoft_UI_Xaml_Documents_HyperlinkClickEventArgs_(IObjectReference obj,
        delegate* unmanaged[Stdcall]<System.IntPtr, System.IntPtr, WinRT.EventRegistrationToken*, int> addHandler,
        delegate* unmanaged[Stdcall]<System.IntPtr, WinRT.EventRegistrationToken, int> removeHandler, int index) : base(obj, addHandler, removeHandler, index)
        {
            _ = initialized;
        }

        protected override ObjectReferenceValue CreateMarshaler(global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Documents.Hyperlink, global::Microsoft.UI.Xaml.Documents.HyperlinkClickEventArgs> handler) =>
        global::ABI.Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Documents.Hyperlink, global::Microsoft.UI.Xaml.Documents.HyperlinkClickEventArgs>.CreateMarshaler2(handler);

        protected override global::ABI.WinRT.Interop.EventSourceState<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Documents.Hyperlink, global::Microsoft.UI.Xaml.Documents.HyperlinkClickEventArgs>> CreateEventSourceState() =>
        new EventState(ObjectReference.ThisPtr, Index);

        [global::WinRT.WinRTExposedType]
        private sealed class EventState : global::ABI.WinRT.Interop.EventSourceState<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Documents.Hyperlink, global::Microsoft.UI.Xaml.Documents.HyperlinkClickEventArgs>>
        {
            public EventState(System.IntPtr obj, int index)
            : base(obj, index)
            {
            }

            protected override global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Documents.Hyperlink, global::Microsoft.UI.Xaml.Documents.HyperlinkClickEventArgs> GetEventInvoke()
            {
                return (global::Microsoft.UI.Xaml.Documents.Hyperlink sender, global::Microsoft.UI.Xaml.Documents.HyperlinkClickEventArgs args) =>
                {
                    var targetDelegate = TargetDelegate;
                    if (targetDelegate is null)
                    {
                        return ;
                    }
                    targetDelegate.Invoke(sender, args);
                };
            }
        }
    }

    internal sealed unsafe class _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_UI_Xaml_Controls_ListViewBase__global__Microsoft_UI_Xaml_Controls_ChoosingItemContainerEventArgs_ : global::ABI.WinRT.Interop.EventSource<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.ListViewBase, global::Microsoft.UI.Xaml.Controls.ChoosingItemContainerEventArgs>>
    {
        private static readonly bool initialized = global::WinRT.GenericTypeInstantiations.Windows_Foundation_TypedEventHandler_2_Microsoft_UI_Xaml_Controls_ListViewBase__Microsoft_UI_Xaml_Controls_ChoosingItemContainerEventArgs.EnsureInitialized();

        internal _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_UI_Xaml_Controls_ListViewBase__global__Microsoft_UI_Xaml_Controls_ChoosingItemContainerEventArgs_(IObjectReference obj,
        delegate* unmanaged[Stdcall]<System.IntPtr, System.IntPtr, WinRT.EventRegistrationToken*, int> addHandler,
        delegate* unmanaged[Stdcall]<System.IntPtr, WinRT.EventRegistrationToken, int> removeHandler, int index) : base(obj, addHandler, removeHandler, index)
        {
            _ = initialized;
        }

        protected override ObjectReferenceValue CreateMarshaler(global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.ListViewBase, global::Microsoft.UI.Xaml.Controls.ChoosingItemContainerEventArgs> handler) =>
        global::ABI.Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.ListViewBase, global::Microsoft.UI.Xaml.Controls.ChoosingItemContainerEventArgs>.CreateMarshaler2(handler);

        protected override global::ABI.WinRT.Interop.EventSourceState<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.ListViewBase, global::Microsoft.UI.Xaml.Controls.ChoosingItemContainerEventArgs>> CreateEventSourceState() =>
        new EventState(ObjectReference.ThisPtr, Index);

        [global::WinRT.WinRTExposedType]
        private sealed class EventState : global::ABI.WinRT.Interop.EventSourceState<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.ListViewBase, global::Microsoft.UI.Xaml.Controls.ChoosingItemContainerEventArgs>>
        {
            public EventState(System.IntPtr obj, int index)
            : base(obj, index)
            {
            }

            protected override global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.ListViewBase, global::Microsoft.UI.Xaml.Controls.ChoosingItemContainerEventArgs> GetEventInvoke()
            {
                return (global::Microsoft.UI.Xaml.Controls.ListViewBase sender, global::Microsoft.UI.Xaml.Controls.ChoosingItemContainerEventArgs args) =>
                {
                    var targetDelegate = TargetDelegate;
                    if (targetDelegate is null)
                    {
                        return ;
                    }
                    targetDelegate.Invoke(sender, args);
                };
            }
        }
    }

    internal sealed unsafe class _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_UI_Xaml_Hosting_DesktopWindowXamlSource__global__Microsoft_UI_Xaml_Hosting_DesktopWindowXamlSourceGotFocusEventArgs_ : global::ABI.WinRT.Interop.EventSource<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Hosting.DesktopWindowXamlSource, global::Microsoft.UI.Xaml.Hosting.DesktopWindowXamlSourceGotFocusEventArgs>>
    {
        private static readonly bool initialized = global::WinRT.GenericTypeInstantiations.Windows_Foundation_TypedEventHandler_2_Microsoft_UI_Xaml_Hosting_DesktopWindowXamlSource__Microsoft_UI_Xaml_Hosting_DesktopWindowXamlSourceGotFocusEventArgs.EnsureInitialized();

        internal _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_UI_Xaml_Hosting_DesktopWindowXamlSource__global__Microsoft_UI_Xaml_Hosting_DesktopWindowXamlSourceGotFocusEventArgs_(IObjectReference obj,
        delegate* unmanaged[Stdcall]<System.IntPtr, System.IntPtr, WinRT.EventRegistrationToken*, int> addHandler,
        delegate* unmanaged[Stdcall]<System.IntPtr, WinRT.EventRegistrationToken, int> removeHandler, int index) : base(obj, addHandler, removeHandler, index)
        {
            _ = initialized;
        }

        protected override ObjectReferenceValue CreateMarshaler(global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Hosting.DesktopWindowXamlSource, global::Microsoft.UI.Xaml.Hosting.DesktopWindowXamlSourceGotFocusEventArgs> handler) =>
        global::ABI.Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Hosting.DesktopWindowXamlSource, global::Microsoft.UI.Xaml.Hosting.DesktopWindowXamlSourceGotFocusEventArgs>.CreateMarshaler2(handler);

        protected override global::ABI.WinRT.Interop.EventSourceState<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Hosting.DesktopWindowXamlSource, global::Microsoft.UI.Xaml.Hosting.DesktopWindowXamlSourceGotFocusEventArgs>> CreateEventSourceState() =>
        new EventState(ObjectReference.ThisPtr, Index);

        [global::WinRT.WinRTExposedType]
        private sealed class EventState : global::ABI.WinRT.Interop.EventSourceState<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Hosting.DesktopWindowXamlSource, global::Microsoft.UI.Xaml.Hosting.DesktopWindowXamlSourceGotFocusEventArgs>>
        {
            public EventState(System.IntPtr obj, int index)
            : base(obj, index)
            {
            }

            protected override global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Hosting.DesktopWindowXamlSource, global::Microsoft.UI.Xaml.Hosting.DesktopWindowXamlSourceGotFocusEventArgs> GetEventInvoke()
            {
                return (global::Microsoft.UI.Xaml.Hosting.DesktopWindowXamlSource sender, global::Microsoft.UI.Xaml.Hosting.DesktopWindowXamlSourceGotFocusEventArgs args) =>
                {
                    var targetDelegate = TargetDelegate;
                    if (targetDelegate is null)
                    {
                        return ;
                    }
                    targetDelegate.Invoke(sender, args);
                };
            }
        }
    }

    internal sealed unsafe class _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_Web_WebView2_Core_CoreWebView2__global__Microsoft_Web_WebView2_Core_CoreWebView2NewWindowRequestedEventArgs_ : global::ABI.WinRT.Interop.EventSource<global::Windows.Foundation.TypedEventHandler<global::Microsoft.Web.WebView2.Core.CoreWebView2, global::Microsoft.Web.WebView2.Core.CoreWebView2NewWindowRequestedEventArgs>>
    {
        private static readonly bool initialized = global::WinRT.GenericTypeInstantiations.Windows_Foundation_TypedEventHandler_2_Microsoft_Web_WebView2_Core_CoreWebView2__Microsoft_Web_WebView2_Core_CoreWebView2NewWindowRequestedEventArgs.EnsureInitialized();

        internal _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_Web_WebView2_Core_CoreWebView2__global__Microsoft_Web_WebView2_Core_CoreWebView2NewWindowRequestedEventArgs_(IObjectReference obj,
        delegate* unmanaged[Stdcall]<System.IntPtr, System.IntPtr, WinRT.EventRegistrationToken*, int> addHandler,
        delegate* unmanaged[Stdcall]<System.IntPtr, WinRT.EventRegistrationToken, int> removeHandler, int index) : base(obj, addHandler, removeHandler, index)
        {
            _ = initialized;
        }

        protected override ObjectReferenceValue CreateMarshaler(global::Windows.Foundation.TypedEventHandler<global::Microsoft.Web.WebView2.Core.CoreWebView2, global::Microsoft.Web.WebView2.Core.CoreWebView2NewWindowRequestedEventArgs> handler) =>
        global::ABI.Windows.Foundation.TypedEventHandler<global::Microsoft.Web.WebView2.Core.CoreWebView2, global::Microsoft.Web.WebView2.Core.CoreWebView2NewWindowRequestedEventArgs>.CreateMarshaler2(handler);

        protected override global::ABI.WinRT.Interop.EventSourceState<global::Windows.Foundation.TypedEventHandler<global::Microsoft.Web.WebView2.Core.CoreWebView2, global::Microsoft.Web.WebView2.Core.CoreWebView2NewWindowRequestedEventArgs>> CreateEventSourceState() =>
        new EventState(ObjectReference.ThisPtr, Index);

        [global::WinRT.WinRTExposedType]
        private sealed class EventState : global::ABI.WinRT.Interop.EventSourceState<global::Windows.Foundation.TypedEventHandler<global::Microsoft.Web.WebView2.Core.CoreWebView2, global::Microsoft.Web.WebView2.Core.CoreWebView2NewWindowRequestedEventArgs>>
        {
            public EventState(System.IntPtr obj, int index)
            : base(obj, index)
            {
            }

            protected override global::Windows.Foundation.TypedEventHandler<global::Microsoft.Web.WebView2.Core.CoreWebView2, global::Microsoft.Web.WebView2.Core.CoreWebView2NewWindowRequestedEventArgs> GetEventInvoke()
            {
                return (global::Microsoft.Web.WebView2.Core.CoreWebView2 sender, global::Microsoft.Web.WebView2.Core.CoreWebView2NewWindowRequestedEventArgs args) =>
                {
                    var targetDelegate = TargetDelegate;
                    if (targetDelegate is null)
                    {
                        return ;
                    }
                    targetDelegate.Invoke(sender, args);
                };
            }
        }
    }

    internal sealed unsafe class _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_Web_WebView2_Core_CoreWebView2Environment__object_ : global::ABI.WinRT.Interop.EventSource<global::Windows.Foundation.TypedEventHandler<global::Microsoft.Web.WebView2.Core.CoreWebView2Environment, object>>
    {
        private static readonly bool initialized = global::WinRT.GenericTypeInstantiations.Windows_Foundation_TypedEventHandler_2_Microsoft_Web_WebView2_Core_CoreWebView2Environment__object.EnsureInitialized();

        internal _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_Web_WebView2_Core_CoreWebView2Environment__object_(IObjectReference obj,
        delegate* unmanaged[Stdcall]<System.IntPtr, System.IntPtr, WinRT.EventRegistrationToken*, int> addHandler,
        delegate* unmanaged[Stdcall]<System.IntPtr, WinRT.EventRegistrationToken, int> removeHandler, int index) : base(obj, addHandler, removeHandler, index)
        {
            _ = initialized;
        }

        protected override ObjectReferenceValue CreateMarshaler(global::Windows.Foundation.TypedEventHandler<global::Microsoft.Web.WebView2.Core.CoreWebView2Environment, object> handler) =>
        global::ABI.Windows.Foundation.TypedEventHandler<global::Microsoft.Web.WebView2.Core.CoreWebView2Environment, object>.CreateMarshaler2(handler);

        protected override global::ABI.WinRT.Interop.EventSourceState<global::Windows.Foundation.TypedEventHandler<global::Microsoft.Web.WebView2.Core.CoreWebView2Environment, object>> CreateEventSourceState() =>
        new EventState(ObjectReference.ThisPtr, Index);

        [global::WinRT.WinRTExposedType]
        private sealed class EventState : global::ABI.WinRT.Interop.EventSourceState<global::Windows.Foundation.TypedEventHandler<global::Microsoft.Web.WebView2.Core.CoreWebView2Environment, object>>
        {
            public EventState(System.IntPtr obj, int index)
            : base(obj, index)
            {
            }

            protected override global::Windows.Foundation.TypedEventHandler<global::Microsoft.Web.WebView2.Core.CoreWebView2Environment, object> GetEventInvoke()
            {
                return (global::Microsoft.Web.WebView2.Core.CoreWebView2Environment sender, object args) =>
                {
                    var targetDelegate = TargetDelegate;
                    if (targetDelegate is null)
                    {
                        return ;
                    }
                    targetDelegate.Invoke(sender, args);
                };
            }
        }
    }

    internal sealed unsafe class _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_UI_Xaml_Controls_WebView2__global__Microsoft_Web_WebView2_Core_CoreWebView2NavigationCompletedEventArgs_ : global::ABI.WinRT.Interop.EventSource<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.WebView2, global::Microsoft.Web.WebView2.Core.CoreWebView2NavigationCompletedEventArgs>>
    {
        private static readonly bool initialized = global::WinRT.GenericTypeInstantiations.Windows_Foundation_TypedEventHandler_2_Microsoft_UI_Xaml_Controls_WebView2__Microsoft_Web_WebView2_Core_CoreWebView2NavigationCompletedEventArgs.EnsureInitialized();

        internal _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_UI_Xaml_Controls_WebView2__global__Microsoft_Web_WebView2_Core_CoreWebView2NavigationCompletedEventArgs_(IObjectReference obj,
        delegate* unmanaged[Stdcall]<System.IntPtr, System.IntPtr, WinRT.EventRegistrationToken*, int> addHandler,
        delegate* unmanaged[Stdcall]<System.IntPtr, WinRT.EventRegistrationToken, int> removeHandler, int index) : base(obj, addHandler, removeHandler, index)
        {
            _ = initialized;
        }

        protected override ObjectReferenceValue CreateMarshaler(global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.WebView2, global::Microsoft.Web.WebView2.Core.CoreWebView2NavigationCompletedEventArgs> handler) =>
        global::ABI.Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.WebView2, global::Microsoft.Web.WebView2.Core.CoreWebView2NavigationCompletedEventArgs>.CreateMarshaler2(handler);

        protected override global::ABI.WinRT.Interop.EventSourceState<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.WebView2, global::Microsoft.Web.WebView2.Core.CoreWebView2NavigationCompletedEventArgs>> CreateEventSourceState() =>
        new EventState(ObjectReference.ThisPtr, Index);

        [global::WinRT.WinRTExposedType]
        private sealed class EventState : global::ABI.WinRT.Interop.EventSourceState<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.WebView2, global::Microsoft.Web.WebView2.Core.CoreWebView2NavigationCompletedEventArgs>>
        {
            public EventState(System.IntPtr obj, int index)
            : base(obj, index)
            {
            }

            protected override global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.WebView2, global::Microsoft.Web.WebView2.Core.CoreWebView2NavigationCompletedEventArgs> GetEventInvoke()
            {
                return (global::Microsoft.UI.Xaml.Controls.WebView2 sender, global::Microsoft.Web.WebView2.Core.CoreWebView2NavigationCompletedEventArgs args) =>
                {
                    var targetDelegate = TargetDelegate;
                    if (targetDelegate is null)
                    {
                        return ;
                    }
                    targetDelegate.Invoke(sender, args);
                };
            }
        }
    }

    internal sealed unsafe class _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_UI_Xaml_Controls_InfoBar__object_ : global::ABI.WinRT.Interop.EventSource<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.InfoBar, object>>
    {
        private static readonly bool initialized = global::WinRT.GenericTypeInstantiations.Windows_Foundation_TypedEventHandler_2_Microsoft_UI_Xaml_Controls_InfoBar__object.EnsureInitialized();

        internal _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_UI_Xaml_Controls_InfoBar__object_(IObjectReference obj,
        delegate* unmanaged[Stdcall]<System.IntPtr, System.IntPtr, WinRT.EventRegistrationToken*, int> addHandler,
        delegate* unmanaged[Stdcall]<System.IntPtr, WinRT.EventRegistrationToken, int> removeHandler, int index) : base(obj, addHandler, removeHandler, index)
        {
            _ = initialized;
        }

        protected override ObjectReferenceValue CreateMarshaler(global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.InfoBar, object> handler) =>
        global::ABI.Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.InfoBar, object>.CreateMarshaler2(handler);

        protected override global::ABI.WinRT.Interop.EventSourceState<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.InfoBar, object>> CreateEventSourceState() =>
        new EventState(ObjectReference.ThisPtr, Index);

        [global::WinRT.WinRTExposedType]
        private sealed class EventState : global::ABI.WinRT.Interop.EventSourceState<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.InfoBar, object>>
        {
            public EventState(System.IntPtr obj, int index)
            : base(obj, index)
            {
            }

            protected override global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.InfoBar, object> GetEventInvoke()
            {
                return (global::Microsoft.UI.Xaml.Controls.InfoBar sender, object args) =>
                {
                    var targetDelegate = TargetDelegate;
                    if (targetDelegate is null)
                    {
                        return ;
                    }
                    targetDelegate.Invoke(sender, args);
                };
            }
        }
    }

    internal sealed unsafe class _EventSource_global__Microsoft_UI_Xaml_RoutedEventHandler : global::ABI.WinRT.Interop.EventSource<global::Microsoft.UI.Xaml.RoutedEventHandler>
    {


        internal _EventSource_global__Microsoft_UI_Xaml_RoutedEventHandler(IObjectReference obj,
        delegate* unmanaged[Stdcall]<System.IntPtr, System.IntPtr, WinRT.EventRegistrationToken*, int> addHandler,
        delegate* unmanaged[Stdcall]<System.IntPtr, WinRT.EventRegistrationToken, int> removeHandler, int index) : base(obj, addHandler, removeHandler, index)
        {

        }

        protected override ObjectReferenceValue CreateMarshaler(global::Microsoft.UI.Xaml.RoutedEventHandler handler) =>
        global::ABI.Microsoft.UI.Xaml.RoutedEventHandler.CreateMarshaler2(handler);

        protected override global::ABI.WinRT.Interop.EventSourceState<global::Microsoft.UI.Xaml.RoutedEventHandler> CreateEventSourceState() =>
        new EventState(ObjectReference.ThisPtr, Index);

        [global::WinRT.WinRTExposedType]
        private sealed class EventState : global::ABI.WinRT.Interop.EventSourceState<global::Microsoft.UI.Xaml.RoutedEventHandler>
        {
            public EventState(System.IntPtr obj, int index)
            : base(obj, index)
            {
            }

            protected override global::Microsoft.UI.Xaml.RoutedEventHandler GetEventInvoke()
            {
                return (object sender, global::Microsoft.UI.Xaml.RoutedEventArgs e) =>
                {
                    var targetDelegate = TargetDelegate;
                    if (targetDelegate is null)
                    {
                        return ;
                    }
                    targetDelegate.Invoke(sender, e);
                };
            }
        }
    }

    internal sealed unsafe class _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_UI_Xaml_Controls_ScrollView__global__Microsoft_UI_Xaml_Controls_ScrollingScrollAnimationStartingEventArgs_ : global::ABI.WinRT.Interop.EventSource<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.ScrollView, global::Microsoft.UI.Xaml.Controls.ScrollingScrollAnimationStartingEventArgs>>
    {
        private static readonly bool initialized = global::WinRT.GenericTypeInstantiations.Windows_Foundation_TypedEventHandler_2_Microsoft_UI_Xaml_Controls_ScrollView__Microsoft_UI_Xaml_Controls_ScrollingScrollAnimationStartingEventArgs.EnsureInitialized();

        internal _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_UI_Xaml_Controls_ScrollView__global__Microsoft_UI_Xaml_Controls_ScrollingScrollAnimationStartingEventArgs_(IObjectReference obj,
        delegate* unmanaged[Stdcall]<System.IntPtr, System.IntPtr, WinRT.EventRegistrationToken*, int> addHandler,
        delegate* unmanaged[Stdcall]<System.IntPtr, WinRT.EventRegistrationToken, int> removeHandler, int index) : base(obj, addHandler, removeHandler, index)
        {
            _ = initialized;
        }

        protected override ObjectReferenceValue CreateMarshaler(global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.ScrollView, global::Microsoft.UI.Xaml.Controls.ScrollingScrollAnimationStartingEventArgs> handler) =>
        global::ABI.Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.ScrollView, global::Microsoft.UI.Xaml.Controls.ScrollingScrollAnimationStartingEventArgs>.CreateMarshaler2(handler);

        protected override global::ABI.WinRT.Interop.EventSourceState<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.ScrollView, global::Microsoft.UI.Xaml.Controls.ScrollingScrollAnimationStartingEventArgs>> CreateEventSourceState() =>
        new EventState(ObjectReference.ThisPtr, Index);

        [global::WinRT.WinRTExposedType]
        private sealed class EventState : global::ABI.WinRT.Interop.EventSourceState<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.ScrollView, global::Microsoft.UI.Xaml.Controls.ScrollingScrollAnimationStartingEventArgs>>
        {
            public EventState(System.IntPtr obj, int index)
            : base(obj, index)
            {
            }

            protected override global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.ScrollView, global::Microsoft.UI.Xaml.Controls.ScrollingScrollAnimationStartingEventArgs> GetEventInvoke()
            {
                return (global::Microsoft.UI.Xaml.Controls.ScrollView sender, global::Microsoft.UI.Xaml.Controls.ScrollingScrollAnimationStartingEventArgs args) =>
                {
                    var targetDelegate = TargetDelegate;
                    if (targetDelegate is null)
                    {
                        return ;
                    }
                    targetDelegate.Invoke(sender, args);
                };
            }
        }
    }

    internal sealed unsafe class _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_UI_Content_ContentIslandEnvironment__global__Microsoft_UI_Content_ContentEnvironmentStateChangedEventArgs_ : global::ABI.WinRT.Interop.EventSource<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Content.ContentIslandEnvironment, global::Microsoft.UI.Content.ContentEnvironmentStateChangedEventArgs>>
    {
        private static readonly bool initialized = global::WinRT.GenericTypeInstantiations.Windows_Foundation_TypedEventHandler_2_Microsoft_UI_Content_ContentIslandEnvironment__Microsoft_UI_Content_ContentEnvironmentStateChangedEventArgs.EnsureInitialized();

        internal _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_UI_Content_ContentIslandEnvironment__global__Microsoft_UI_Content_ContentEnvironmentStateChangedEventArgs_(IObjectReference obj,
        delegate* unmanaged[Stdcall]<System.IntPtr, System.IntPtr, WinRT.EventRegistrationToken*, int> addHandler,
        delegate* unmanaged[Stdcall]<System.IntPtr, WinRT.EventRegistrationToken, int> removeHandler, int index) : base(obj, addHandler, removeHandler, index)
        {
            _ = initialized;
        }

        protected override ObjectReferenceValue CreateMarshaler(global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Content.ContentIslandEnvironment, global::Microsoft.UI.Content.ContentEnvironmentStateChangedEventArgs> handler) =>
        global::ABI.Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Content.ContentIslandEnvironment, global::Microsoft.UI.Content.ContentEnvironmentStateChangedEventArgs>.CreateMarshaler2(handler);

        protected override global::ABI.WinRT.Interop.EventSourceState<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Content.ContentIslandEnvironment, global::Microsoft.UI.Content.ContentEnvironmentStateChangedEventArgs>> CreateEventSourceState() =>
        new EventState(ObjectReference.ThisPtr, Index);

        [global::WinRT.WinRTExposedType]
        private sealed class EventState : global::ABI.WinRT.Interop.EventSourceState<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Content.ContentIslandEnvironment, global::Microsoft.UI.Content.ContentEnvironmentStateChangedEventArgs>>
        {
            public EventState(System.IntPtr obj, int index)
            : base(obj, index)
            {
            }

            protected override global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Content.ContentIslandEnvironment, global::Microsoft.UI.Content.ContentEnvironmentStateChangedEventArgs> GetEventInvoke()
            {
                return (global::Microsoft.UI.Content.ContentIslandEnvironment sender, global::Microsoft.UI.Content.ContentEnvironmentStateChangedEventArgs args) =>
                {
                    var targetDelegate = TargetDelegate;
                    if (targetDelegate is null)
                    {
                        return ;
                    }
                    targetDelegate.Invoke(sender, args);
                };
            }
        }
    }

    internal sealed unsafe class _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_UI_Xaml_Controls_CalendarDatePicker__global__Microsoft_UI_Xaml_Controls_CalendarDatePickerDateChangedEventArgs_ : global::ABI.WinRT.Interop.EventSource<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.CalendarDatePicker, global::Microsoft.UI.Xaml.Controls.CalendarDatePickerDateChangedEventArgs>>
    {
        private static readonly bool initialized = global::WinRT.GenericTypeInstantiations.Windows_Foundation_TypedEventHandler_2_Microsoft_UI_Xaml_Controls_CalendarDatePicker__Microsoft_UI_Xaml_Controls_CalendarDatePickerDateChangedEventArgs.EnsureInitialized();

        internal _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_UI_Xaml_Controls_CalendarDatePicker__global__Microsoft_UI_Xaml_Controls_CalendarDatePickerDateChangedEventArgs_(IObjectReference obj,
        delegate* unmanaged[Stdcall]<System.IntPtr, System.IntPtr, WinRT.EventRegistrationToken*, int> addHandler,
        delegate* unmanaged[Stdcall]<System.IntPtr, WinRT.EventRegistrationToken, int> removeHandler, int index) : base(obj, addHandler, removeHandler, index)
        {
            _ = initialized;
        }

        protected override ObjectReferenceValue CreateMarshaler(global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.CalendarDatePicker, global::Microsoft.UI.Xaml.Controls.CalendarDatePickerDateChangedEventArgs> handler) =>
        global::ABI.Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.CalendarDatePicker, global::Microsoft.UI.Xaml.Controls.CalendarDatePickerDateChangedEventArgs>.CreateMarshaler2(handler);

        protected override global::ABI.WinRT.Interop.EventSourceState<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.CalendarDatePicker, global::Microsoft.UI.Xaml.Controls.CalendarDatePickerDateChangedEventArgs>> CreateEventSourceState() =>
        new EventState(ObjectReference.ThisPtr, Index);

        [global::WinRT.WinRTExposedType]
        private sealed class EventState : global::ABI.WinRT.Interop.EventSourceState<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.CalendarDatePicker, global::Microsoft.UI.Xaml.Controls.CalendarDatePickerDateChangedEventArgs>>
        {
            public EventState(System.IntPtr obj, int index)
            : base(obj, index)
            {
            }

            protected override global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.CalendarDatePicker, global::Microsoft.UI.Xaml.Controls.CalendarDatePickerDateChangedEventArgs> GetEventInvoke()
            {
                return (global::Microsoft.UI.Xaml.Controls.CalendarDatePicker sender, global::Microsoft.UI.Xaml.Controls.CalendarDatePickerDateChangedEventArgs args) =>
                {
                    var targetDelegate = TargetDelegate;
                    if (targetDelegate is null)
                    {
                        return ;
                    }
                    targetDelegate.Invoke(sender, args);
                };
            }
        }
    }

    internal sealed unsafe class _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_Web_WebView2_Core_CoreWebView2Notification__object_ : global::ABI.WinRT.Interop.EventSource<global::Windows.Foundation.TypedEventHandler<global::Microsoft.Web.WebView2.Core.CoreWebView2Notification, object>>
    {
        private static readonly bool initialized = global::WinRT.GenericTypeInstantiations.Windows_Foundation_TypedEventHandler_2_Microsoft_Web_WebView2_Core_CoreWebView2Notification__object.EnsureInitialized();

        internal _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_Web_WebView2_Core_CoreWebView2Notification__object_(IObjectReference obj,
        delegate* unmanaged[Stdcall]<System.IntPtr, System.IntPtr, WinRT.EventRegistrationToken*, int> addHandler,
        delegate* unmanaged[Stdcall]<System.IntPtr, WinRT.EventRegistrationToken, int> removeHandler, int index) : base(obj, addHandler, removeHandler, index)
        {
            _ = initialized;
        }

        protected override ObjectReferenceValue CreateMarshaler(global::Windows.Foundation.TypedEventHandler<global::Microsoft.Web.WebView2.Core.CoreWebView2Notification, object> handler) =>
        global::ABI.Windows.Foundation.TypedEventHandler<global::Microsoft.Web.WebView2.Core.CoreWebView2Notification, object>.CreateMarshaler2(handler);

        protected override global::ABI.WinRT.Interop.EventSourceState<global::Windows.Foundation.TypedEventHandler<global::Microsoft.Web.WebView2.Core.CoreWebView2Notification, object>> CreateEventSourceState() =>
        new EventState(ObjectReference.ThisPtr, Index);

        [global::WinRT.WinRTExposedType]
        private sealed class EventState : global::ABI.WinRT.Interop.EventSourceState<global::Windows.Foundation.TypedEventHandler<global::Microsoft.Web.WebView2.Core.CoreWebView2Notification, object>>
        {
            public EventState(System.IntPtr obj, int index)
            : base(obj, index)
            {
            }

            protected override global::Windows.Foundation.TypedEventHandler<global::Microsoft.Web.WebView2.Core.CoreWebView2Notification, object> GetEventInvoke()
            {
                return (global::Microsoft.Web.WebView2.Core.CoreWebView2Notification sender, object args) =>
                {
                    var targetDelegate = TargetDelegate;
                    if (targetDelegate is null)
                    {
                        return ;
                    }
                    targetDelegate.Invoke(sender, args);
                };
            }
        }
    }

    internal sealed unsafe class _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_UI_Xaml_Controls_Primitives_IScrollController__global__Microsoft_UI_Xaml_Controls_Primitives_ScrollControllerAddScrollVelocityRequestedEventArgs_ : global::ABI.WinRT.Interop.EventSource<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.Primitives.IScrollController, global::Microsoft.UI.Xaml.Controls.Primitives.ScrollControllerAddScrollVelocityRequestedEventArgs>>
    {
        private static readonly bool initialized = global::WinRT.GenericTypeInstantiations.Windows_Foundation_TypedEventHandler_2_Microsoft_UI_Xaml_Controls_Primitives_IScrollController__Microsoft_UI_Xaml_Controls_Primitives_ScrollControllerAddScrollVelocityRequestedEventArgs.EnsureInitialized();

        internal _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_UI_Xaml_Controls_Primitives_IScrollController__global__Microsoft_UI_Xaml_Controls_Primitives_ScrollControllerAddScrollVelocityRequestedEventArgs_(IObjectReference obj,
        delegate* unmanaged[Stdcall]<System.IntPtr, System.IntPtr, WinRT.EventRegistrationToken*, int> addHandler,
        delegate* unmanaged[Stdcall]<System.IntPtr, WinRT.EventRegistrationToken, int> removeHandler, int index) : base(obj, addHandler, removeHandler, index)
        {
            _ = initialized;
        }

        protected override ObjectReferenceValue CreateMarshaler(global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.Primitives.IScrollController, global::Microsoft.UI.Xaml.Controls.Primitives.ScrollControllerAddScrollVelocityRequestedEventArgs> handler) =>
        global::ABI.Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.Primitives.IScrollController, global::Microsoft.UI.Xaml.Controls.Primitives.ScrollControllerAddScrollVelocityRequestedEventArgs>.CreateMarshaler2(handler);

        protected override global::ABI.WinRT.Interop.EventSourceState<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.Primitives.IScrollController, global::Microsoft.UI.Xaml.Controls.Primitives.ScrollControllerAddScrollVelocityRequestedEventArgs>> CreateEventSourceState() =>
        new EventState(ObjectReference.ThisPtr, Index);

        [global::WinRT.WinRTExposedType]
        private sealed class EventState : global::ABI.WinRT.Interop.EventSourceState<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.Primitives.IScrollController, global::Microsoft.UI.Xaml.Controls.Primitives.ScrollControllerAddScrollVelocityRequestedEventArgs>>
        {
            public EventState(System.IntPtr obj, int index)
            : base(obj, index)
            {
            }

            protected override global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.Primitives.IScrollController, global::Microsoft.UI.Xaml.Controls.Primitives.ScrollControllerAddScrollVelocityRequestedEventArgs> GetEventInvoke()
            {
                return (global::Microsoft.UI.Xaml.Controls.Primitives.IScrollController sender, global::Microsoft.UI.Xaml.Controls.Primitives.ScrollControllerAddScrollVelocityRequestedEventArgs args) =>
                {
                    var targetDelegate = TargetDelegate;
                    if (targetDelegate is null)
                    {
                        return ;
                    }
                    targetDelegate.Invoke(sender, args);
                };
            }
        }
    }

    internal sealed unsafe class _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_UI_Xaml_Controls_Control__global__Microsoft_UI_Xaml_Controls_FocusEngagedEventArgs_ : global::ABI.WinRT.Interop.EventSource<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.Control, global::Microsoft.UI.Xaml.Controls.FocusEngagedEventArgs>>
    {
        private static readonly bool initialized = global::WinRT.GenericTypeInstantiations.Windows_Foundation_TypedEventHandler_2_Microsoft_UI_Xaml_Controls_Control__Microsoft_UI_Xaml_Controls_FocusEngagedEventArgs.EnsureInitialized();

        internal _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_UI_Xaml_Controls_Control__global__Microsoft_UI_Xaml_Controls_FocusEngagedEventArgs_(IObjectReference obj,
        delegate* unmanaged[Stdcall]<System.IntPtr, System.IntPtr, WinRT.EventRegistrationToken*, int> addHandler,
        delegate* unmanaged[Stdcall]<System.IntPtr, WinRT.EventRegistrationToken, int> removeHandler, int index) : base(obj, addHandler, removeHandler, index)
        {
            _ = initialized;
        }

        protected override ObjectReferenceValue CreateMarshaler(global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.Control, global::Microsoft.UI.Xaml.Controls.FocusEngagedEventArgs> handler) =>
        global::ABI.Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.Control, global::Microsoft.UI.Xaml.Controls.FocusEngagedEventArgs>.CreateMarshaler2(handler);

        protected override global::ABI.WinRT.Interop.EventSourceState<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.Control, global::Microsoft.UI.Xaml.Controls.FocusEngagedEventArgs>> CreateEventSourceState() =>
        new EventState(ObjectReference.ThisPtr, Index);

        [global::WinRT.WinRTExposedType]
        private sealed class EventState : global::ABI.WinRT.Interop.EventSourceState<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.Control, global::Microsoft.UI.Xaml.Controls.FocusEngagedEventArgs>>
        {
            public EventState(System.IntPtr obj, int index)
            : base(obj, index)
            {
            }

            protected override global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.Control, global::Microsoft.UI.Xaml.Controls.FocusEngagedEventArgs> GetEventInvoke()
            {
                return (global::Microsoft.UI.Xaml.Controls.Control sender, global::Microsoft.UI.Xaml.Controls.FocusEngagedEventArgs args) =>
                {
                    var targetDelegate = TargetDelegate;
                    if (targetDelegate is null)
                    {
                        return ;
                    }
                    targetDelegate.Invoke(sender, args);
                };
            }
        }
    }

    internal sealed unsafe class _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_UI_Xaml_Controls_CalendarView__global__Microsoft_UI_Xaml_Controls_CalendarViewDayItemChangingEventArgs_ : global::ABI.WinRT.Interop.EventSource<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.CalendarView, global::Microsoft.UI.Xaml.Controls.CalendarViewDayItemChangingEventArgs>>
    {
        private static readonly bool initialized = global::WinRT.GenericTypeInstantiations.Windows_Foundation_TypedEventHandler_2_Microsoft_UI_Xaml_Controls_CalendarView__Microsoft_UI_Xaml_Controls_CalendarViewDayItemChangingEventArgs.EnsureInitialized();

        internal _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_UI_Xaml_Controls_CalendarView__global__Microsoft_UI_Xaml_Controls_CalendarViewDayItemChangingEventArgs_(IObjectReference obj,
        delegate* unmanaged[Stdcall]<System.IntPtr, System.IntPtr, WinRT.EventRegistrationToken*, int> addHandler,
        delegate* unmanaged[Stdcall]<System.IntPtr, WinRT.EventRegistrationToken, int> removeHandler, int index) : base(obj, addHandler, removeHandler, index)
        {
            _ = initialized;
        }

        protected override ObjectReferenceValue CreateMarshaler(global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.CalendarView, global::Microsoft.UI.Xaml.Controls.CalendarViewDayItemChangingEventArgs> handler) =>
        global::ABI.Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.CalendarView, global::Microsoft.UI.Xaml.Controls.CalendarViewDayItemChangingEventArgs>.CreateMarshaler2(handler);

        protected override global::ABI.WinRT.Interop.EventSourceState<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.CalendarView, global::Microsoft.UI.Xaml.Controls.CalendarViewDayItemChangingEventArgs>> CreateEventSourceState() =>
        new EventState(ObjectReference.ThisPtr, Index);

        [global::WinRT.WinRTExposedType]
        private sealed class EventState : global::ABI.WinRT.Interop.EventSourceState<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.CalendarView, global::Microsoft.UI.Xaml.Controls.CalendarViewDayItemChangingEventArgs>>
        {
            public EventState(System.IntPtr obj, int index)
            : base(obj, index)
            {
            }

            protected override global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.CalendarView, global::Microsoft.UI.Xaml.Controls.CalendarViewDayItemChangingEventArgs> GetEventInvoke()
            {
                return (global::Microsoft.UI.Xaml.Controls.CalendarView sender, global::Microsoft.UI.Xaml.Controls.CalendarViewDayItemChangingEventArgs args) =>
                {
                    var targetDelegate = TargetDelegate;
                    if (targetDelegate is null)
                    {
                        return ;
                    }
                    targetDelegate.Invoke(sender, args);
                };
            }
        }
    }

    internal sealed unsafe class _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_UI_Windowing_DisplayAreaWatcher__object_ : global::ABI.WinRT.Interop.EventSource<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Windowing.DisplayAreaWatcher, object>>
    {
        private static readonly bool initialized = global::WinRT.GenericTypeInstantiations.Windows_Foundation_TypedEventHandler_2_Microsoft_UI_Windowing_DisplayAreaWatcher__object.EnsureInitialized();

        internal _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_UI_Windowing_DisplayAreaWatcher__object_(IObjectReference obj,
        delegate* unmanaged[Stdcall]<System.IntPtr, System.IntPtr, WinRT.EventRegistrationToken*, int> addHandler,
        delegate* unmanaged[Stdcall]<System.IntPtr, WinRT.EventRegistrationToken, int> removeHandler, int index) : base(obj, addHandler, removeHandler, index)
        {
            _ = initialized;
        }

        protected override ObjectReferenceValue CreateMarshaler(global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Windowing.DisplayAreaWatcher, object> handler) =>
        global::ABI.Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Windowing.DisplayAreaWatcher, object>.CreateMarshaler2(handler);

        protected override global::ABI.WinRT.Interop.EventSourceState<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Windowing.DisplayAreaWatcher, object>> CreateEventSourceState() =>
        new EventState(ObjectReference.ThisPtr, Index);

        [global::WinRT.WinRTExposedType]
        private sealed class EventState : global::ABI.WinRT.Interop.EventSourceState<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Windowing.DisplayAreaWatcher, object>>
        {
            public EventState(System.IntPtr obj, int index)
            : base(obj, index)
            {
            }

            protected override global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Windowing.DisplayAreaWatcher, object> GetEventInvoke()
            {
                return (global::Microsoft.UI.Windowing.DisplayAreaWatcher sender, object args) =>
                {
                    var targetDelegate = TargetDelegate;
                    if (targetDelegate is null)
                    {
                        return ;
                    }
                    targetDelegate.Invoke(sender, args);
                };
            }
        }
    }

    internal sealed unsafe class _EventSource_global__Microsoft_UI_Xaml_Controls_CalendarViewDayItemChangingEventHandler : global::ABI.WinRT.Interop.EventSource<global::Microsoft.UI.Xaml.Controls.CalendarViewDayItemChangingEventHandler>
    {


        internal _EventSource_global__Microsoft_UI_Xaml_Controls_CalendarViewDayItemChangingEventHandler(IObjectReference obj,
        delegate* unmanaged[Stdcall]<System.IntPtr, System.IntPtr, WinRT.EventRegistrationToken*, int> addHandler,
        delegate* unmanaged[Stdcall]<System.IntPtr, WinRT.EventRegistrationToken, int> removeHandler, int index) : base(obj, addHandler, removeHandler, index)
        {

        }

        protected override ObjectReferenceValue CreateMarshaler(global::Microsoft.UI.Xaml.Controls.CalendarViewDayItemChangingEventHandler handler) =>
        global::ABI.Microsoft.UI.Xaml.Controls.CalendarViewDayItemChangingEventHandler.CreateMarshaler2(handler);

        protected override global::ABI.WinRT.Interop.EventSourceState<global::Microsoft.UI.Xaml.Controls.CalendarViewDayItemChangingEventHandler> CreateEventSourceState() =>
        new EventState(ObjectReference.ThisPtr, Index);

        [global::WinRT.WinRTExposedType]
        private sealed class EventState : global::ABI.WinRT.Interop.EventSourceState<global::Microsoft.UI.Xaml.Controls.CalendarViewDayItemChangingEventHandler>
        {
            public EventState(System.IntPtr obj, int index)
            : base(obj, index)
            {
            }

            protected override global::Microsoft.UI.Xaml.Controls.CalendarViewDayItemChangingEventHandler GetEventInvoke()
            {
                return (global::Microsoft.UI.Xaml.Controls.CalendarView sender, global::Microsoft.UI.Xaml.Controls.CalendarViewDayItemChangingEventArgs e) =>
                {
                    var targetDelegate = TargetDelegate;
                    if (targetDelegate is null)
                    {
                        return ;
                    }
                    targetDelegate.Invoke(sender, e);
                };
            }
        }
    }

    internal sealed unsafe class _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_UI_Input_GestureRecognizer__global__Microsoft_UI_Input_HoldingEventArgs_ : global::ABI.WinRT.Interop.EventSource<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Input.GestureRecognizer, global::Microsoft.UI.Input.HoldingEventArgs>>
    {
        private static readonly bool initialized = global::WinRT.GenericTypeInstantiations.Windows_Foundation_TypedEventHandler_2_Microsoft_UI_Input_GestureRecognizer__Microsoft_UI_Input_HoldingEventArgs.EnsureInitialized();

        internal _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_UI_Input_GestureRecognizer__global__Microsoft_UI_Input_HoldingEventArgs_(IObjectReference obj,
        delegate* unmanaged[Stdcall]<System.IntPtr, System.IntPtr, WinRT.EventRegistrationToken*, int> addHandler,
        delegate* unmanaged[Stdcall]<System.IntPtr, WinRT.EventRegistrationToken, int> removeHandler, int index) : base(obj, addHandler, removeHandler, index)
        {
            _ = initialized;
        }

        protected override ObjectReferenceValue CreateMarshaler(global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Input.GestureRecognizer, global::Microsoft.UI.Input.HoldingEventArgs> handler) =>
        global::ABI.Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Input.GestureRecognizer, global::Microsoft.UI.Input.HoldingEventArgs>.CreateMarshaler2(handler);

        protected override global::ABI.WinRT.Interop.EventSourceState<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Input.GestureRecognizer, global::Microsoft.UI.Input.HoldingEventArgs>> CreateEventSourceState() =>
        new EventState(ObjectReference.ThisPtr, Index);

        [global::WinRT.WinRTExposedType]
        private sealed class EventState : global::ABI.WinRT.Interop.EventSourceState<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Input.GestureRecognizer, global::Microsoft.UI.Input.HoldingEventArgs>>
        {
            public EventState(System.IntPtr obj, int index)
            : base(obj, index)
            {
            }

            protected override global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Input.GestureRecognizer, global::Microsoft.UI.Input.HoldingEventArgs> GetEventInvoke()
            {
                return (global::Microsoft.UI.Input.GestureRecognizer sender, global::Microsoft.UI.Input.HoldingEventArgs args) =>
                {
                    var targetDelegate = TargetDelegate;
                    if (targetDelegate is null)
                    {
                        return ;
                    }
                    targetDelegate.Invoke(sender, args);
                };
            }
        }
    }

    internal sealed unsafe class _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_UI_Xaml_UIElement__global__Microsoft_UI_Xaml_Input_GettingFocusEventArgs_ : global::ABI.WinRT.Interop.EventSource<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.UIElement, global::Microsoft.UI.Xaml.Input.GettingFocusEventArgs>>
    {
        private static readonly bool initialized = global::WinRT.GenericTypeInstantiations.Windows_Foundation_TypedEventHandler_2_Microsoft_UI_Xaml_UIElement__Microsoft_UI_Xaml_Input_GettingFocusEventArgs.EnsureInitialized();

        internal _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_UI_Xaml_UIElement__global__Microsoft_UI_Xaml_Input_GettingFocusEventArgs_(IObjectReference obj,
        delegate* unmanaged[Stdcall]<System.IntPtr, System.IntPtr, WinRT.EventRegistrationToken*, int> addHandler,
        delegate* unmanaged[Stdcall]<System.IntPtr, WinRT.EventRegistrationToken, int> removeHandler, int index) : base(obj, addHandler, removeHandler, index)
        {
            _ = initialized;
        }

        protected override ObjectReferenceValue CreateMarshaler(global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.UIElement, global::Microsoft.UI.Xaml.Input.GettingFocusEventArgs> handler) =>
        global::ABI.Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.UIElement, global::Microsoft.UI.Xaml.Input.GettingFocusEventArgs>.CreateMarshaler2(handler);

        protected override global::ABI.WinRT.Interop.EventSourceState<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.UIElement, global::Microsoft.UI.Xaml.Input.GettingFocusEventArgs>> CreateEventSourceState() =>
        new EventState(ObjectReference.ThisPtr, Index);

        [global::WinRT.WinRTExposedType]
        private sealed class EventState : global::ABI.WinRT.Interop.EventSourceState<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.UIElement, global::Microsoft.UI.Xaml.Input.GettingFocusEventArgs>>
        {
            public EventState(System.IntPtr obj, int index)
            : base(obj, index)
            {
            }

            protected override global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.UIElement, global::Microsoft.UI.Xaml.Input.GettingFocusEventArgs> GetEventInvoke()
            {
                return (global::Microsoft.UI.Xaml.UIElement sender, global::Microsoft.UI.Xaml.Input.GettingFocusEventArgs args) =>
                {
                    var targetDelegate = TargetDelegate;
                    if (targetDelegate is null)
                    {
                        return ;
                    }
                    targetDelegate.Invoke(sender, args);
                };
            }
        }
    }

    internal sealed unsafe class _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_Web_WebView2_Core_CoreWebView2__global__Microsoft_Web_WebView2_Core_CoreWebView2WebResourceRequestedEventArgs_ : global::ABI.WinRT.Interop.EventSource<global::Windows.Foundation.TypedEventHandler<global::Microsoft.Web.WebView2.Core.CoreWebView2, global::Microsoft.Web.WebView2.Core.CoreWebView2WebResourceRequestedEventArgs>>
    {
        private static readonly bool initialized = global::WinRT.GenericTypeInstantiations.Windows_Foundation_TypedEventHandler_2_Microsoft_Web_WebView2_Core_CoreWebView2__Microsoft_Web_WebView2_Core_CoreWebView2WebResourceRequestedEventArgs.EnsureInitialized();

        internal _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_Web_WebView2_Core_CoreWebView2__global__Microsoft_Web_WebView2_Core_CoreWebView2WebResourceRequestedEventArgs_(IObjectReference obj,
        delegate* unmanaged[Stdcall]<System.IntPtr, System.IntPtr, WinRT.EventRegistrationToken*, int> addHandler,
        delegate* unmanaged[Stdcall]<System.IntPtr, WinRT.EventRegistrationToken, int> removeHandler, int index) : base(obj, addHandler, removeHandler, index)
        {
            _ = initialized;
        }

        protected override ObjectReferenceValue CreateMarshaler(global::Windows.Foundation.TypedEventHandler<global::Microsoft.Web.WebView2.Core.CoreWebView2, global::Microsoft.Web.WebView2.Core.CoreWebView2WebResourceRequestedEventArgs> handler) =>
        global::ABI.Windows.Foundation.TypedEventHandler<global::Microsoft.Web.WebView2.Core.CoreWebView2, global::Microsoft.Web.WebView2.Core.CoreWebView2WebResourceRequestedEventArgs>.CreateMarshaler2(handler);

        protected override global::ABI.WinRT.Interop.EventSourceState<global::Windows.Foundation.TypedEventHandler<global::Microsoft.Web.WebView2.Core.CoreWebView2, global::Microsoft.Web.WebView2.Core.CoreWebView2WebResourceRequestedEventArgs>> CreateEventSourceState() =>
        new EventState(ObjectReference.ThisPtr, Index);

        [global::WinRT.WinRTExposedType]
        private sealed class EventState : global::ABI.WinRT.Interop.EventSourceState<global::Windows.Foundation.TypedEventHandler<global::Microsoft.Web.WebView2.Core.CoreWebView2, global::Microsoft.Web.WebView2.Core.CoreWebView2WebResourceRequestedEventArgs>>
        {
            public EventState(System.IntPtr obj, int index)
            : base(obj, index)
            {
            }

            protected override global::Windows.Foundation.TypedEventHandler<global::Microsoft.Web.WebView2.Core.CoreWebView2, global::Microsoft.Web.WebView2.Core.CoreWebView2WebResourceRequestedEventArgs> GetEventInvoke()
            {
                return (global::Microsoft.Web.WebView2.Core.CoreWebView2 sender, global::Microsoft.Web.WebView2.Core.CoreWebView2WebResourceRequestedEventArgs args) =>
                {
                    var targetDelegate = TargetDelegate;
                    if (targetDelegate is null)
                    {
                        return ;
                    }
                    targetDelegate.Invoke(sender, args);
                };
            }
        }
    }

    internal sealed unsafe class _EventSource_global__Microsoft_UI_Xaml_Navigation_NavigationFailedEventHandler : global::ABI.WinRT.Interop.EventSource<global::Microsoft.UI.Xaml.Navigation.NavigationFailedEventHandler>
    {


        internal _EventSource_global__Microsoft_UI_Xaml_Navigation_NavigationFailedEventHandler(IObjectReference obj,
        delegate* unmanaged[Stdcall]<System.IntPtr, System.IntPtr, WinRT.EventRegistrationToken*, int> addHandler,
        delegate* unmanaged[Stdcall]<System.IntPtr, WinRT.EventRegistrationToken, int> removeHandler, int index) : base(obj, addHandler, removeHandler, index)
        {

        }

        protected override ObjectReferenceValue CreateMarshaler(global::Microsoft.UI.Xaml.Navigation.NavigationFailedEventHandler handler) =>
        global::ABI.Microsoft.UI.Xaml.Navigation.NavigationFailedEventHandler.CreateMarshaler2(handler);

        protected override global::ABI.WinRT.Interop.EventSourceState<global::Microsoft.UI.Xaml.Navigation.NavigationFailedEventHandler> CreateEventSourceState() =>
        new EventState(ObjectReference.ThisPtr, Index);

        [global::WinRT.WinRTExposedType]
        private sealed class EventState : global::ABI.WinRT.Interop.EventSourceState<global::Microsoft.UI.Xaml.Navigation.NavigationFailedEventHandler>
        {
            public EventState(System.IntPtr obj, int index)
            : base(obj, index)
            {
            }

            protected override global::Microsoft.UI.Xaml.Navigation.NavigationFailedEventHandler GetEventInvoke()
            {
                return (object sender, global::Microsoft.UI.Xaml.Navigation.NavigationFailedEventArgs e) =>
                {
                    var targetDelegate = TargetDelegate;
                    if (targetDelegate is null)
                    {
                        return ;
                    }
                    targetDelegate.Invoke(sender, e);
                };
            }
        }
    }

    internal sealed unsafe class _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_Web_WebView2_Core_CoreWebView2__global__Microsoft_Web_WebView2_Core_CoreWebView2ScreenCaptureStartingEventArgs_ : global::ABI.WinRT.Interop.EventSource<global::Windows.Foundation.TypedEventHandler<global::Microsoft.Web.WebView2.Core.CoreWebView2, global::Microsoft.Web.WebView2.Core.CoreWebView2ScreenCaptureStartingEventArgs>>
    {
        private static readonly bool initialized = global::WinRT.GenericTypeInstantiations.Windows_Foundation_TypedEventHandler_2_Microsoft_Web_WebView2_Core_CoreWebView2__Microsoft_Web_WebView2_Core_CoreWebView2ScreenCaptureStartingEventArgs.EnsureInitialized();

        internal _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_Web_WebView2_Core_CoreWebView2__global__Microsoft_Web_WebView2_Core_CoreWebView2ScreenCaptureStartingEventArgs_(IObjectReference obj,
        delegate* unmanaged[Stdcall]<System.IntPtr, System.IntPtr, WinRT.EventRegistrationToken*, int> addHandler,
        delegate* unmanaged[Stdcall]<System.IntPtr, WinRT.EventRegistrationToken, int> removeHandler, int index) : base(obj, addHandler, removeHandler, index)
        {
            _ = initialized;
        }

        protected override ObjectReferenceValue CreateMarshaler(global::Windows.Foundation.TypedEventHandler<global::Microsoft.Web.WebView2.Core.CoreWebView2, global::Microsoft.Web.WebView2.Core.CoreWebView2ScreenCaptureStartingEventArgs> handler) =>
        global::ABI.Windows.Foundation.TypedEventHandler<global::Microsoft.Web.WebView2.Core.CoreWebView2, global::Microsoft.Web.WebView2.Core.CoreWebView2ScreenCaptureStartingEventArgs>.CreateMarshaler2(handler);

        protected override global::ABI.WinRT.Interop.EventSourceState<global::Windows.Foundation.TypedEventHandler<global::Microsoft.Web.WebView2.Core.CoreWebView2, global::Microsoft.Web.WebView2.Core.CoreWebView2ScreenCaptureStartingEventArgs>> CreateEventSourceState() =>
        new EventState(ObjectReference.ThisPtr, Index);

        [global::WinRT.WinRTExposedType]
        private sealed class EventState : global::ABI.WinRT.Interop.EventSourceState<global::Windows.Foundation.TypedEventHandler<global::Microsoft.Web.WebView2.Core.CoreWebView2, global::Microsoft.Web.WebView2.Core.CoreWebView2ScreenCaptureStartingEventArgs>>
        {
            public EventState(System.IntPtr obj, int index)
            : base(obj, index)
            {
            }

            protected override global::Windows.Foundation.TypedEventHandler<global::Microsoft.Web.WebView2.Core.CoreWebView2, global::Microsoft.Web.WebView2.Core.CoreWebView2ScreenCaptureStartingEventArgs> GetEventInvoke()
            {
                return (global::Microsoft.Web.WebView2.Core.CoreWebView2 sender, global::Microsoft.Web.WebView2.Core.CoreWebView2ScreenCaptureStartingEventArgs args) =>
                {
                    var targetDelegate = TargetDelegate;
                    if (targetDelegate is null)
                    {
                        return ;
                    }
                    targetDelegate.Invoke(sender, args);
                };
            }
        }
    }

    internal sealed unsafe class _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_Windows_PushNotifications_PushNotificationManager__global__Microsoft_Windows_PushNotifications_PushNotificationReceivedEventArgs_ : global::ABI.WinRT.Interop.EventSource<global::Windows.Foundation.TypedEventHandler<global::Microsoft.Windows.PushNotifications.PushNotificationManager, global::Microsoft.Windows.PushNotifications.PushNotificationReceivedEventArgs>>
    {
        private static readonly bool initialized = global::WinRT.GenericTypeInstantiations.Windows_Foundation_TypedEventHandler_2_Microsoft_Windows_PushNotifications_PushNotificationManager__Microsoft_Windows_PushNotifications_PushNotificationReceivedEventArgs.EnsureInitialized();

        internal _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_Windows_PushNotifications_PushNotificationManager__global__Microsoft_Windows_PushNotifications_PushNotificationReceivedEventArgs_(IObjectReference obj,
        delegate* unmanaged[Stdcall]<System.IntPtr, System.IntPtr, WinRT.EventRegistrationToken*, int> addHandler,
        delegate* unmanaged[Stdcall]<System.IntPtr, WinRT.EventRegistrationToken, int> removeHandler, int index) : base(obj, addHandler, removeHandler, index)
        {
            _ = initialized;
        }

        protected override ObjectReferenceValue CreateMarshaler(global::Windows.Foundation.TypedEventHandler<global::Microsoft.Windows.PushNotifications.PushNotificationManager, global::Microsoft.Windows.PushNotifications.PushNotificationReceivedEventArgs> handler) =>
        global::ABI.Windows.Foundation.TypedEventHandler<global::Microsoft.Windows.PushNotifications.PushNotificationManager, global::Microsoft.Windows.PushNotifications.PushNotificationReceivedEventArgs>.CreateMarshaler2(handler);

        protected override global::ABI.WinRT.Interop.EventSourceState<global::Windows.Foundation.TypedEventHandler<global::Microsoft.Windows.PushNotifications.PushNotificationManager, global::Microsoft.Windows.PushNotifications.PushNotificationReceivedEventArgs>> CreateEventSourceState() =>
        new EventState(ObjectReference.ThisPtr, Index);

        [global::WinRT.WinRTExposedType]
        private sealed class EventState : global::ABI.WinRT.Interop.EventSourceState<global::Windows.Foundation.TypedEventHandler<global::Microsoft.Windows.PushNotifications.PushNotificationManager, global::Microsoft.Windows.PushNotifications.PushNotificationReceivedEventArgs>>
        {
            public EventState(System.IntPtr obj, int index)
            : base(obj, index)
            {
            }

            protected override global::Windows.Foundation.TypedEventHandler<global::Microsoft.Windows.PushNotifications.PushNotificationManager, global::Microsoft.Windows.PushNotifications.PushNotificationReceivedEventArgs> GetEventInvoke()
            {
                return (global::Microsoft.Windows.PushNotifications.PushNotificationManager sender, global::Microsoft.Windows.PushNotifications.PushNotificationReceivedEventArgs args) =>
                {
                    var targetDelegate = TargetDelegate;
                    if (targetDelegate is null)
                    {
                        return ;
                    }
                    targetDelegate.Invoke(sender, args);
                };
            }
        }
    }

    internal sealed unsafe class _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_UI_Xaml_Controls_CalendarView__global__Microsoft_UI_Xaml_Controls_CalendarViewSelectedDatesChangedEventArgs_ : global::ABI.WinRT.Interop.EventSource<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.CalendarView, global::Microsoft.UI.Xaml.Controls.CalendarViewSelectedDatesChangedEventArgs>>
    {
        private static readonly bool initialized = global::WinRT.GenericTypeInstantiations.Windows_Foundation_TypedEventHandler_2_Microsoft_UI_Xaml_Controls_CalendarView__Microsoft_UI_Xaml_Controls_CalendarViewSelectedDatesChangedEventArgs.EnsureInitialized();

        internal _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_UI_Xaml_Controls_CalendarView__global__Microsoft_UI_Xaml_Controls_CalendarViewSelectedDatesChangedEventArgs_(IObjectReference obj,
        delegate* unmanaged[Stdcall]<System.IntPtr, System.IntPtr, WinRT.EventRegistrationToken*, int> addHandler,
        delegate* unmanaged[Stdcall]<System.IntPtr, WinRT.EventRegistrationToken, int> removeHandler, int index) : base(obj, addHandler, removeHandler, index)
        {
            _ = initialized;
        }

        protected override ObjectReferenceValue CreateMarshaler(global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.CalendarView, global::Microsoft.UI.Xaml.Controls.CalendarViewSelectedDatesChangedEventArgs> handler) =>
        global::ABI.Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.CalendarView, global::Microsoft.UI.Xaml.Controls.CalendarViewSelectedDatesChangedEventArgs>.CreateMarshaler2(handler);

        protected override global::ABI.WinRT.Interop.EventSourceState<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.CalendarView, global::Microsoft.UI.Xaml.Controls.CalendarViewSelectedDatesChangedEventArgs>> CreateEventSourceState() =>
        new EventState(ObjectReference.ThisPtr, Index);

        [global::WinRT.WinRTExposedType]
        private sealed class EventState : global::ABI.WinRT.Interop.EventSourceState<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.CalendarView, global::Microsoft.UI.Xaml.Controls.CalendarViewSelectedDatesChangedEventArgs>>
        {
            public EventState(System.IntPtr obj, int index)
            : base(obj, index)
            {
            }

            protected override global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.CalendarView, global::Microsoft.UI.Xaml.Controls.CalendarViewSelectedDatesChangedEventArgs> GetEventInvoke()
            {
                return (global::Microsoft.UI.Xaml.Controls.CalendarView sender, global::Microsoft.UI.Xaml.Controls.CalendarViewSelectedDatesChangedEventArgs args) =>
                {
                    var targetDelegate = TargetDelegate;
                    if (targetDelegate is null)
                    {
                        return ;
                    }
                    targetDelegate.Invoke(sender, args);
                };
            }
        }
    }

    internal sealed unsafe class _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_UI_Xaml_Controls_SplitView__object_ : global::ABI.WinRT.Interop.EventSource<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.SplitView, object>>
    {
        private static readonly bool initialized = global::WinRT.GenericTypeInstantiations.Windows_Foundation_TypedEventHandler_2_Microsoft_UI_Xaml_Controls_SplitView__object.EnsureInitialized();

        internal _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_UI_Xaml_Controls_SplitView__object_(IObjectReference obj,
        delegate* unmanaged[Stdcall]<System.IntPtr, System.IntPtr, WinRT.EventRegistrationToken*, int> addHandler,
        delegate* unmanaged[Stdcall]<System.IntPtr, WinRT.EventRegistrationToken, int> removeHandler, int index) : base(obj, addHandler, removeHandler, index)
        {
            _ = initialized;
        }

        protected override ObjectReferenceValue CreateMarshaler(global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.SplitView, object> handler) =>
        global::ABI.Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.SplitView, object>.CreateMarshaler2(handler);

        protected override global::ABI.WinRT.Interop.EventSourceState<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.SplitView, object>> CreateEventSourceState() =>
        new EventState(ObjectReference.ThisPtr, Index);

        [global::WinRT.WinRTExposedType]
        private sealed class EventState : global::ABI.WinRT.Interop.EventSourceState<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.SplitView, object>>
        {
            public EventState(System.IntPtr obj, int index)
            : base(obj, index)
            {
            }

            protected override global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.SplitView, object> GetEventInvoke()
            {
                return (global::Microsoft.UI.Xaml.Controls.SplitView sender, object args) =>
                {
                    var targetDelegate = TargetDelegate;
                    if (targetDelegate is null)
                    {
                        return ;
                    }
                    targetDelegate.Invoke(sender, args);
                };
            }
        }
    }

    internal sealed unsafe class _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_UI_Xaml_Controls_RecyclingElementFactory__global__Microsoft_UI_Xaml_Controls_SelectTemplateEventArgs_ : global::ABI.WinRT.Interop.EventSource<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.RecyclingElementFactory, global::Microsoft.UI.Xaml.Controls.SelectTemplateEventArgs>>
    {
        private static readonly bool initialized = global::WinRT.GenericTypeInstantiations.Windows_Foundation_TypedEventHandler_2_Microsoft_UI_Xaml_Controls_RecyclingElementFactory__Microsoft_UI_Xaml_Controls_SelectTemplateEventArgs.EnsureInitialized();

        internal _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_UI_Xaml_Controls_RecyclingElementFactory__global__Microsoft_UI_Xaml_Controls_SelectTemplateEventArgs_(IObjectReference obj,
        delegate* unmanaged[Stdcall]<System.IntPtr, System.IntPtr, WinRT.EventRegistrationToken*, int> addHandler,
        delegate* unmanaged[Stdcall]<System.IntPtr, WinRT.EventRegistrationToken, int> removeHandler, int index) : base(obj, addHandler, removeHandler, index)
        {
            _ = initialized;
        }

        protected override ObjectReferenceValue CreateMarshaler(global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.RecyclingElementFactory, global::Microsoft.UI.Xaml.Controls.SelectTemplateEventArgs> handler) =>
        global::ABI.Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.RecyclingElementFactory, global::Microsoft.UI.Xaml.Controls.SelectTemplateEventArgs>.CreateMarshaler2(handler);

        protected override global::ABI.WinRT.Interop.EventSourceState<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.RecyclingElementFactory, global::Microsoft.UI.Xaml.Controls.SelectTemplateEventArgs>> CreateEventSourceState() =>
        new EventState(ObjectReference.ThisPtr, Index);

        [global::WinRT.WinRTExposedType]
        private sealed class EventState : global::ABI.WinRT.Interop.EventSourceState<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.RecyclingElementFactory, global::Microsoft.UI.Xaml.Controls.SelectTemplateEventArgs>>
        {
            public EventState(System.IntPtr obj, int index)
            : base(obj, index)
            {
            }

            protected override global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.RecyclingElementFactory, global::Microsoft.UI.Xaml.Controls.SelectTemplateEventArgs> GetEventInvoke()
            {
                return (global::Microsoft.UI.Xaml.Controls.RecyclingElementFactory sender, global::Microsoft.UI.Xaml.Controls.SelectTemplateEventArgs args) =>
                {
                    var targetDelegate = TargetDelegate;
                    if (targetDelegate is null)
                    {
                        return ;
                    }
                    targetDelegate.Invoke(sender, args);
                };
            }
        }
    }

    internal sealed unsafe class _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_UI_Xaml_Controls_TabViewItem__global__Microsoft_UI_Xaml_Controls_TabViewTabCloseRequestedEventArgs_ : global::ABI.WinRT.Interop.EventSource<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.TabViewItem, global::Microsoft.UI.Xaml.Controls.TabViewTabCloseRequestedEventArgs>>
    {
        private static readonly bool initialized = global::WinRT.GenericTypeInstantiations.Windows_Foundation_TypedEventHandler_2_Microsoft_UI_Xaml_Controls_TabViewItem__Microsoft_UI_Xaml_Controls_TabViewTabCloseRequestedEventArgs.EnsureInitialized();

        internal _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_UI_Xaml_Controls_TabViewItem__global__Microsoft_UI_Xaml_Controls_TabViewTabCloseRequestedEventArgs_(IObjectReference obj,
        delegate* unmanaged[Stdcall]<System.IntPtr, System.IntPtr, WinRT.EventRegistrationToken*, int> addHandler,
        delegate* unmanaged[Stdcall]<System.IntPtr, WinRT.EventRegistrationToken, int> removeHandler, int index) : base(obj, addHandler, removeHandler, index)
        {
            _ = initialized;
        }

        protected override ObjectReferenceValue CreateMarshaler(global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.TabViewItem, global::Microsoft.UI.Xaml.Controls.TabViewTabCloseRequestedEventArgs> handler) =>
        global::ABI.Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.TabViewItem, global::Microsoft.UI.Xaml.Controls.TabViewTabCloseRequestedEventArgs>.CreateMarshaler2(handler);

        protected override global::ABI.WinRT.Interop.EventSourceState<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.TabViewItem, global::Microsoft.UI.Xaml.Controls.TabViewTabCloseRequestedEventArgs>> CreateEventSourceState() =>
        new EventState(ObjectReference.ThisPtr, Index);

        [global::WinRT.WinRTExposedType]
        private sealed class EventState : global::ABI.WinRT.Interop.EventSourceState<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.TabViewItem, global::Microsoft.UI.Xaml.Controls.TabViewTabCloseRequestedEventArgs>>
        {
            public EventState(System.IntPtr obj, int index)
            : base(obj, index)
            {
            }

            protected override global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.TabViewItem, global::Microsoft.UI.Xaml.Controls.TabViewTabCloseRequestedEventArgs> GetEventInvoke()
            {
                return (global::Microsoft.UI.Xaml.Controls.TabViewItem sender, global::Microsoft.UI.Xaml.Controls.TabViewTabCloseRequestedEventArgs args) =>
                {
                    var targetDelegate = TargetDelegate;
                    if (targetDelegate is null)
                    {
                        return ;
                    }
                    targetDelegate.Invoke(sender, args);
                };
            }
        }
    }

    internal sealed unsafe class _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_UI_Content_ContentIsland__global__Microsoft_UI_Content_ContentIslandAutomationProviderRequestedEventArgs_ : global::ABI.WinRT.Interop.EventSource<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Content.ContentIsland, global::Microsoft.UI.Content.ContentIslandAutomationProviderRequestedEventArgs>>
    {
        private static readonly bool initialized = global::WinRT.GenericTypeInstantiations.Windows_Foundation_TypedEventHandler_2_Microsoft_UI_Content_ContentIsland__Microsoft_UI_Content_ContentIslandAutomationProviderRequestedEventArgs.EnsureInitialized();

        internal _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_UI_Content_ContentIsland__global__Microsoft_UI_Content_ContentIslandAutomationProviderRequestedEventArgs_(IObjectReference obj,
        delegate* unmanaged[Stdcall]<System.IntPtr, System.IntPtr, WinRT.EventRegistrationToken*, int> addHandler,
        delegate* unmanaged[Stdcall]<System.IntPtr, WinRT.EventRegistrationToken, int> removeHandler, int index) : base(obj, addHandler, removeHandler, index)
        {
            _ = initialized;
        }

        protected override ObjectReferenceValue CreateMarshaler(global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Content.ContentIsland, global::Microsoft.UI.Content.ContentIslandAutomationProviderRequestedEventArgs> handler) =>
        global::ABI.Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Content.ContentIsland, global::Microsoft.UI.Content.ContentIslandAutomationProviderRequestedEventArgs>.CreateMarshaler2(handler);

        protected override global::ABI.WinRT.Interop.EventSourceState<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Content.ContentIsland, global::Microsoft.UI.Content.ContentIslandAutomationProviderRequestedEventArgs>> CreateEventSourceState() =>
        new EventState(ObjectReference.ThisPtr, Index);

        [global::WinRT.WinRTExposedType]
        private sealed class EventState : global::ABI.WinRT.Interop.EventSourceState<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Content.ContentIsland, global::Microsoft.UI.Content.ContentIslandAutomationProviderRequestedEventArgs>>
        {
            public EventState(System.IntPtr obj, int index)
            : base(obj, index)
            {
            }

            protected override global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Content.ContentIsland, global::Microsoft.UI.Content.ContentIslandAutomationProviderRequestedEventArgs> GetEventInvoke()
            {
                return (global::Microsoft.UI.Content.ContentIsland sender, global::Microsoft.UI.Content.ContentIslandAutomationProviderRequestedEventArgs args) =>
                {
                    var targetDelegate = TargetDelegate;
                    if (targetDelegate is null)
                    {
                        return ;
                    }
                    targetDelegate.Invoke(sender, args);
                };
            }
        }
    }

    internal sealed unsafe class _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_UI_Xaml_Documents_TextElement__global__Microsoft_UI_Xaml_Input_AccessKeyInvokedEventArgs_ : global::ABI.WinRT.Interop.EventSource<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Documents.TextElement, global::Microsoft.UI.Xaml.Input.AccessKeyInvokedEventArgs>>
    {
        private static readonly bool initialized = global::WinRT.GenericTypeInstantiations.Windows_Foundation_TypedEventHandler_2_Microsoft_UI_Xaml_Documents_TextElement__Microsoft_UI_Xaml_Input_AccessKeyInvokedEventArgs.EnsureInitialized();

        internal _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_UI_Xaml_Documents_TextElement__global__Microsoft_UI_Xaml_Input_AccessKeyInvokedEventArgs_(IObjectReference obj,
        delegate* unmanaged[Stdcall]<System.IntPtr, System.IntPtr, WinRT.EventRegistrationToken*, int> addHandler,
        delegate* unmanaged[Stdcall]<System.IntPtr, WinRT.EventRegistrationToken, int> removeHandler, int index) : base(obj, addHandler, removeHandler, index)
        {
            _ = initialized;
        }

        protected override ObjectReferenceValue CreateMarshaler(global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Documents.TextElement, global::Microsoft.UI.Xaml.Input.AccessKeyInvokedEventArgs> handler) =>
        global::ABI.Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Documents.TextElement, global::Microsoft.UI.Xaml.Input.AccessKeyInvokedEventArgs>.CreateMarshaler2(handler);

        protected override global::ABI.WinRT.Interop.EventSourceState<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Documents.TextElement, global::Microsoft.UI.Xaml.Input.AccessKeyInvokedEventArgs>> CreateEventSourceState() =>
        new EventState(ObjectReference.ThisPtr, Index);

        [global::WinRT.WinRTExposedType]
        private sealed class EventState : global::ABI.WinRT.Interop.EventSourceState<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Documents.TextElement, global::Microsoft.UI.Xaml.Input.AccessKeyInvokedEventArgs>>
        {
            public EventState(System.IntPtr obj, int index)
            : base(obj, index)
            {
            }

            protected override global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Documents.TextElement, global::Microsoft.UI.Xaml.Input.AccessKeyInvokedEventArgs> GetEventInvoke()
            {
                return (global::Microsoft.UI.Xaml.Documents.TextElement sender, global::Microsoft.UI.Xaml.Input.AccessKeyInvokedEventArgs args) =>
                {
                    var targetDelegate = TargetDelegate;
                    if (targetDelegate is null)
                    {
                        return ;
                    }
                    targetDelegate.Invoke(sender, args);
                };
            }
        }
    }

    internal sealed unsafe class _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_Web_WebView2_Core_CoreWebView2__global__Microsoft_Web_WebView2_Core_CoreWebView2SaveAsUIShowingEventArgs_ : global::ABI.WinRT.Interop.EventSource<global::Windows.Foundation.TypedEventHandler<global::Microsoft.Web.WebView2.Core.CoreWebView2, global::Microsoft.Web.WebView2.Core.CoreWebView2SaveAsUIShowingEventArgs>>
    {
        private static readonly bool initialized = global::WinRT.GenericTypeInstantiations.Windows_Foundation_TypedEventHandler_2_Microsoft_Web_WebView2_Core_CoreWebView2__Microsoft_Web_WebView2_Core_CoreWebView2SaveAsUIShowingEventArgs.EnsureInitialized();

        internal _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_Web_WebView2_Core_CoreWebView2__global__Microsoft_Web_WebView2_Core_CoreWebView2SaveAsUIShowingEventArgs_(IObjectReference obj,
        delegate* unmanaged[Stdcall]<System.IntPtr, System.IntPtr, WinRT.EventRegistrationToken*, int> addHandler,
        delegate* unmanaged[Stdcall]<System.IntPtr, WinRT.EventRegistrationToken, int> removeHandler, int index) : base(obj, addHandler, removeHandler, index)
        {
            _ = initialized;
        }

        protected override ObjectReferenceValue CreateMarshaler(global::Windows.Foundation.TypedEventHandler<global::Microsoft.Web.WebView2.Core.CoreWebView2, global::Microsoft.Web.WebView2.Core.CoreWebView2SaveAsUIShowingEventArgs> handler) =>
        global::ABI.Windows.Foundation.TypedEventHandler<global::Microsoft.Web.WebView2.Core.CoreWebView2, global::Microsoft.Web.WebView2.Core.CoreWebView2SaveAsUIShowingEventArgs>.CreateMarshaler2(handler);

        protected override global::ABI.WinRT.Interop.EventSourceState<global::Windows.Foundation.TypedEventHandler<global::Microsoft.Web.WebView2.Core.CoreWebView2, global::Microsoft.Web.WebView2.Core.CoreWebView2SaveAsUIShowingEventArgs>> CreateEventSourceState() =>
        new EventState(ObjectReference.ThisPtr, Index);

        [global::WinRT.WinRTExposedType]
        private sealed class EventState : global::ABI.WinRT.Interop.EventSourceState<global::Windows.Foundation.TypedEventHandler<global::Microsoft.Web.WebView2.Core.CoreWebView2, global::Microsoft.Web.WebView2.Core.CoreWebView2SaveAsUIShowingEventArgs>>
        {
            public EventState(System.IntPtr obj, int index)
            : base(obj, index)
            {
            }

            protected override global::Windows.Foundation.TypedEventHandler<global::Microsoft.Web.WebView2.Core.CoreWebView2, global::Microsoft.Web.WebView2.Core.CoreWebView2SaveAsUIShowingEventArgs> GetEventInvoke()
            {
                return (global::Microsoft.Web.WebView2.Core.CoreWebView2 sender, global::Microsoft.Web.WebView2.Core.CoreWebView2SaveAsUIShowingEventArgs args) =>
                {
                    var targetDelegate = TargetDelegate;
                    if (targetDelegate is null)
                    {
                        return ;
                    }
                    targetDelegate.Invoke(sender, args);
                };
            }
        }
    }

    internal sealed unsafe class _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_UI_Xaml_Media_Animation_ConnectedAnimation__object_ : global::ABI.WinRT.Interop.EventSource<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Media.Animation.ConnectedAnimation, object>>
    {
        private static readonly bool initialized = global::WinRT.GenericTypeInstantiations.Windows_Foundation_TypedEventHandler_2_Microsoft_UI_Xaml_Media_Animation_ConnectedAnimation__object.EnsureInitialized();

        internal _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_UI_Xaml_Media_Animation_ConnectedAnimation__object_(IObjectReference obj,
        delegate* unmanaged[Stdcall]<System.IntPtr, System.IntPtr, WinRT.EventRegistrationToken*, int> addHandler,
        delegate* unmanaged[Stdcall]<System.IntPtr, WinRT.EventRegistrationToken, int> removeHandler, int index) : base(obj, addHandler, removeHandler, index)
        {
            _ = initialized;
        }

        protected override ObjectReferenceValue CreateMarshaler(global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Media.Animation.ConnectedAnimation, object> handler) =>
        global::ABI.Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Media.Animation.ConnectedAnimation, object>.CreateMarshaler2(handler);

        protected override global::ABI.WinRT.Interop.EventSourceState<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Media.Animation.ConnectedAnimation, object>> CreateEventSourceState() =>
        new EventState(ObjectReference.ThisPtr, Index);

        [global::WinRT.WinRTExposedType]
        private sealed class EventState : global::ABI.WinRT.Interop.EventSourceState<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Media.Animation.ConnectedAnimation, object>>
        {
            public EventState(System.IntPtr obj, int index)
            : base(obj, index)
            {
            }

            protected override global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Media.Animation.ConnectedAnimation, object> GetEventInvoke()
            {
                return (global::Microsoft.UI.Xaml.Media.Animation.ConnectedAnimation sender, object args) =>
                {
                    var targetDelegate = TargetDelegate;
                    if (targetDelegate is null)
                    {
                        return ;
                    }
                    targetDelegate.Invoke(sender, args);
                };
            }
        }
    }

    internal sealed unsafe class _EventSource_global__Windows_Foundation_TypedEventHandler_object__global__Microsoft_UI_Xaml_WindowVisibilityChangedEventArgs_ : global::ABI.WinRT.Interop.EventSource<global::Windows.Foundation.TypedEventHandler<object, global::Microsoft.UI.Xaml.WindowVisibilityChangedEventArgs>>
    {
        private static readonly bool initialized = global::WinRT.GenericTypeInstantiations.Windows_Foundation_TypedEventHandler_2_object__Microsoft_UI_Xaml_WindowVisibilityChangedEventArgs.EnsureInitialized();

        internal _EventSource_global__Windows_Foundation_TypedEventHandler_object__global__Microsoft_UI_Xaml_WindowVisibilityChangedEventArgs_(IObjectReference obj,
        delegate* unmanaged[Stdcall]<System.IntPtr, System.IntPtr, WinRT.EventRegistrationToken*, int> addHandler,
        delegate* unmanaged[Stdcall]<System.IntPtr, WinRT.EventRegistrationToken, int> removeHandler, int index) : base(obj, addHandler, removeHandler, index)
        {
            _ = initialized;
        }

        protected override ObjectReferenceValue CreateMarshaler(global::Windows.Foundation.TypedEventHandler<object, global::Microsoft.UI.Xaml.WindowVisibilityChangedEventArgs> handler) =>
        global::ABI.Windows.Foundation.TypedEventHandler<object, global::Microsoft.UI.Xaml.WindowVisibilityChangedEventArgs>.CreateMarshaler2(handler);

        protected override global::ABI.WinRT.Interop.EventSourceState<global::Windows.Foundation.TypedEventHandler<object, global::Microsoft.UI.Xaml.WindowVisibilityChangedEventArgs>> CreateEventSourceState() =>
        new EventState(ObjectReference.ThisPtr, Index);

        [global::WinRT.WinRTExposedType]
        private sealed class EventState : global::ABI.WinRT.Interop.EventSourceState<global::Windows.Foundation.TypedEventHandler<object, global::Microsoft.UI.Xaml.WindowVisibilityChangedEventArgs>>
        {
            public EventState(System.IntPtr obj, int index)
            : base(obj, index)
            {
            }

            protected override global::Windows.Foundation.TypedEventHandler<object, global::Microsoft.UI.Xaml.WindowVisibilityChangedEventArgs> GetEventInvoke()
            {
                return (object sender, global::Microsoft.UI.Xaml.WindowVisibilityChangedEventArgs args) =>
                {
                    var targetDelegate = TargetDelegate;
                    if (targetDelegate is null)
                    {
                        return ;
                    }
                    targetDelegate.Invoke(sender, args);
                };
            }
        }
    }

    internal sealed unsafe class _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_UI_Xaml_Controls_SelectorBar__global__Microsoft_UI_Xaml_Controls_SelectorBarSelectionChangedEventArgs_ : global::ABI.WinRT.Interop.EventSource<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.SelectorBar, global::Microsoft.UI.Xaml.Controls.SelectorBarSelectionChangedEventArgs>>
    {
        private static readonly bool initialized = global::WinRT.GenericTypeInstantiations.Windows_Foundation_TypedEventHandler_2_Microsoft_UI_Xaml_Controls_SelectorBar__Microsoft_UI_Xaml_Controls_SelectorBarSelectionChangedEventArgs.EnsureInitialized();

        internal _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_UI_Xaml_Controls_SelectorBar__global__Microsoft_UI_Xaml_Controls_SelectorBarSelectionChangedEventArgs_(IObjectReference obj,
        delegate* unmanaged[Stdcall]<System.IntPtr, System.IntPtr, WinRT.EventRegistrationToken*, int> addHandler,
        delegate* unmanaged[Stdcall]<System.IntPtr, WinRT.EventRegistrationToken, int> removeHandler, int index) : base(obj, addHandler, removeHandler, index)
        {
            _ = initialized;
        }

        protected override ObjectReferenceValue CreateMarshaler(global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.SelectorBar, global::Microsoft.UI.Xaml.Controls.SelectorBarSelectionChangedEventArgs> handler) =>
        global::ABI.Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.SelectorBar, global::Microsoft.UI.Xaml.Controls.SelectorBarSelectionChangedEventArgs>.CreateMarshaler2(handler);

        protected override global::ABI.WinRT.Interop.EventSourceState<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.SelectorBar, global::Microsoft.UI.Xaml.Controls.SelectorBarSelectionChangedEventArgs>> CreateEventSourceState() =>
        new EventState(ObjectReference.ThisPtr, Index);

        [global::WinRT.WinRTExposedType]
        private sealed class EventState : global::ABI.WinRT.Interop.EventSourceState<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.SelectorBar, global::Microsoft.UI.Xaml.Controls.SelectorBarSelectionChangedEventArgs>>
        {
            public EventState(System.IntPtr obj, int index)
            : base(obj, index)
            {
            }

            protected override global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.SelectorBar, global::Microsoft.UI.Xaml.Controls.SelectorBarSelectionChangedEventArgs> GetEventInvoke()
            {
                return (global::Microsoft.UI.Xaml.Controls.SelectorBar sender, global::Microsoft.UI.Xaml.Controls.SelectorBarSelectionChangedEventArgs args) =>
                {
                    var targetDelegate = TargetDelegate;
                    if (targetDelegate is null)
                    {
                        return ;
                    }
                    targetDelegate.Invoke(sender, args);
                };
            }
        }
    }

    internal sealed unsafe class _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_UI_Dispatching_DispatcherQueue__global__Microsoft_UI_Dispatching_DispatcherQueueShutdownStartingEventArgs_ : global::ABI.WinRT.Interop.EventSource<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Dispatching.DispatcherQueue, global::Microsoft.UI.Dispatching.DispatcherQueueShutdownStartingEventArgs>>
    {
        private static readonly bool initialized = global::WinRT.GenericTypeInstantiations.Windows_Foundation_TypedEventHandler_2_Microsoft_UI_Dispatching_DispatcherQueue__Microsoft_UI_Dispatching_DispatcherQueueShutdownStartingEventArgs.EnsureInitialized();

        internal _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_UI_Dispatching_DispatcherQueue__global__Microsoft_UI_Dispatching_DispatcherQueueShutdownStartingEventArgs_(IObjectReference obj,
        delegate* unmanaged[Stdcall]<System.IntPtr, System.IntPtr, WinRT.EventRegistrationToken*, int> addHandler,
        delegate* unmanaged[Stdcall]<System.IntPtr, WinRT.EventRegistrationToken, int> removeHandler, int index) : base(obj, addHandler, removeHandler, index)
        {
            _ = initialized;
        }

        protected override ObjectReferenceValue CreateMarshaler(global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Dispatching.DispatcherQueue, global::Microsoft.UI.Dispatching.DispatcherQueueShutdownStartingEventArgs> handler) =>
        global::ABI.Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Dispatching.DispatcherQueue, global::Microsoft.UI.Dispatching.DispatcherQueueShutdownStartingEventArgs>.CreateMarshaler2(handler);

        protected override global::ABI.WinRT.Interop.EventSourceState<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Dispatching.DispatcherQueue, global::Microsoft.UI.Dispatching.DispatcherQueueShutdownStartingEventArgs>> CreateEventSourceState() =>
        new EventState(ObjectReference.ThisPtr, Index);

        [global::WinRT.WinRTExposedType]
        private sealed class EventState : global::ABI.WinRT.Interop.EventSourceState<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Dispatching.DispatcherQueue, global::Microsoft.UI.Dispatching.DispatcherQueueShutdownStartingEventArgs>>
        {
            public EventState(System.IntPtr obj, int index)
            : base(obj, index)
            {
            }

            protected override global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Dispatching.DispatcherQueue, global::Microsoft.UI.Dispatching.DispatcherQueueShutdownStartingEventArgs> GetEventInvoke()
            {
                return (global::Microsoft.UI.Dispatching.DispatcherQueue sender, global::Microsoft.UI.Dispatching.DispatcherQueueShutdownStartingEventArgs args) =>
                {
                    var targetDelegate = TargetDelegate;
                    if (targetDelegate is null)
                    {
                        return ;
                    }
                    targetDelegate.Invoke(sender, args);
                };
            }
        }
    }

    internal sealed unsafe class _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_UI_Xaml_Input_KeyboardAccelerator__global__Microsoft_UI_Xaml_Input_KeyboardAcceleratorInvokedEventArgs_ : global::ABI.WinRT.Interop.EventSource<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Input.KeyboardAccelerator, global::Microsoft.UI.Xaml.Input.KeyboardAcceleratorInvokedEventArgs>>
    {
        private static readonly bool initialized = global::WinRT.GenericTypeInstantiations.Windows_Foundation_TypedEventHandler_2_Microsoft_UI_Xaml_Input_KeyboardAccelerator__Microsoft_UI_Xaml_Input_KeyboardAcceleratorInvokedEventArgs.EnsureInitialized();

        internal _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_UI_Xaml_Input_KeyboardAccelerator__global__Microsoft_UI_Xaml_Input_KeyboardAcceleratorInvokedEventArgs_(IObjectReference obj,
        delegate* unmanaged[Stdcall]<System.IntPtr, System.IntPtr, WinRT.EventRegistrationToken*, int> addHandler,
        delegate* unmanaged[Stdcall]<System.IntPtr, WinRT.EventRegistrationToken, int> removeHandler, int index) : base(obj, addHandler, removeHandler, index)
        {
            _ = initialized;
        }

        protected override ObjectReferenceValue CreateMarshaler(global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Input.KeyboardAccelerator, global::Microsoft.UI.Xaml.Input.KeyboardAcceleratorInvokedEventArgs> handler) =>
        global::ABI.Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Input.KeyboardAccelerator, global::Microsoft.UI.Xaml.Input.KeyboardAcceleratorInvokedEventArgs>.CreateMarshaler2(handler);

        protected override global::ABI.WinRT.Interop.EventSourceState<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Input.KeyboardAccelerator, global::Microsoft.UI.Xaml.Input.KeyboardAcceleratorInvokedEventArgs>> CreateEventSourceState() =>
        new EventState(ObjectReference.ThisPtr, Index);

        [global::WinRT.WinRTExposedType]
        private sealed class EventState : global::ABI.WinRT.Interop.EventSourceState<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Input.KeyboardAccelerator, global::Microsoft.UI.Xaml.Input.KeyboardAcceleratorInvokedEventArgs>>
        {
            public EventState(System.IntPtr obj, int index)
            : base(obj, index)
            {
            }

            protected override global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Input.KeyboardAccelerator, global::Microsoft.UI.Xaml.Input.KeyboardAcceleratorInvokedEventArgs> GetEventInvoke()
            {
                return (global::Microsoft.UI.Xaml.Input.KeyboardAccelerator sender, global::Microsoft.UI.Xaml.Input.KeyboardAcceleratorInvokedEventArgs args) =>
                {
                    var targetDelegate = TargetDelegate;
                    if (targetDelegate is null)
                    {
                        return ;
                    }
                    targetDelegate.Invoke(sender, args);
                };
            }
        }
    }

    internal sealed unsafe class _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_Web_WebView2_Core_CoreWebView2Frame__object_ : global::ABI.WinRT.Interop.EventSource<global::Windows.Foundation.TypedEventHandler<global::Microsoft.Web.WebView2.Core.CoreWebView2Frame, object>>
    {
        private static readonly bool initialized = global::WinRT.GenericTypeInstantiations.Windows_Foundation_TypedEventHandler_2_Microsoft_Web_WebView2_Core_CoreWebView2Frame__object.EnsureInitialized();

        internal _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_Web_WebView2_Core_CoreWebView2Frame__object_(IObjectReference obj,
        delegate* unmanaged[Stdcall]<System.IntPtr, System.IntPtr, WinRT.EventRegistrationToken*, int> addHandler,
        delegate* unmanaged[Stdcall]<System.IntPtr, WinRT.EventRegistrationToken, int> removeHandler, int index) : base(obj, addHandler, removeHandler, index)
        {
            _ = initialized;
        }

        protected override ObjectReferenceValue CreateMarshaler(global::Windows.Foundation.TypedEventHandler<global::Microsoft.Web.WebView2.Core.CoreWebView2Frame, object> handler) =>
        global::ABI.Windows.Foundation.TypedEventHandler<global::Microsoft.Web.WebView2.Core.CoreWebView2Frame, object>.CreateMarshaler2(handler);

        protected override global::ABI.WinRT.Interop.EventSourceState<global::Windows.Foundation.TypedEventHandler<global::Microsoft.Web.WebView2.Core.CoreWebView2Frame, object>> CreateEventSourceState() =>
        new EventState(ObjectReference.ThisPtr, Index);

        [global::WinRT.WinRTExposedType]
        private sealed class EventState : global::ABI.WinRT.Interop.EventSourceState<global::Windows.Foundation.TypedEventHandler<global::Microsoft.Web.WebView2.Core.CoreWebView2Frame, object>>
        {
            public EventState(System.IntPtr obj, int index)
            : base(obj, index)
            {
            }

            protected override global::Windows.Foundation.TypedEventHandler<global::Microsoft.Web.WebView2.Core.CoreWebView2Frame, object> GetEventInvoke()
            {
                return (global::Microsoft.Web.WebView2.Core.CoreWebView2Frame sender, object args) =>
                {
                    var targetDelegate = TargetDelegate;
                    if (targetDelegate is null)
                    {
                        return ;
                    }
                    targetDelegate.Invoke(sender, args);
                };
            }
        }
    }

    internal sealed unsafe class _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_UI_System_ThemeSettings__object_ : global::ABI.WinRT.Interop.EventSource<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.System.ThemeSettings, object>>
    {
        private static readonly bool initialized = global::WinRT.GenericTypeInstantiations.Windows_Foundation_TypedEventHandler_2_Microsoft_UI_System_ThemeSettings__object.EnsureInitialized();

        internal _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_UI_System_ThemeSettings__object_(IObjectReference obj,
        delegate* unmanaged[Stdcall]<System.IntPtr, System.IntPtr, WinRT.EventRegistrationToken*, int> addHandler,
        delegate* unmanaged[Stdcall]<System.IntPtr, WinRT.EventRegistrationToken, int> removeHandler, int index) : base(obj, addHandler, removeHandler, index)
        {
            _ = initialized;
        }

        protected override ObjectReferenceValue CreateMarshaler(global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.System.ThemeSettings, object> handler) =>
        global::ABI.Windows.Foundation.TypedEventHandler<global::Microsoft.UI.System.ThemeSettings, object>.CreateMarshaler2(handler);

        protected override global::ABI.WinRT.Interop.EventSourceState<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.System.ThemeSettings, object>> CreateEventSourceState() =>
        new EventState(ObjectReference.ThisPtr, Index);

        [global::WinRT.WinRTExposedType]
        private sealed class EventState : global::ABI.WinRT.Interop.EventSourceState<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.System.ThemeSettings, object>>
        {
            public EventState(System.IntPtr obj, int index)
            : base(obj, index)
            {
            }

            protected override global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.System.ThemeSettings, object> GetEventInvoke()
            {
                return (global::Microsoft.UI.System.ThemeSettings sender, object args) =>
                {
                    var targetDelegate = TargetDelegate;
                    if (targetDelegate is null)
                    {
                        return ;
                    }
                    targetDelegate.Invoke(sender, args);
                };
            }
        }
    }

    internal sealed unsafe class _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_UI_Xaml_Hosting_WindowsXamlManager__global__Microsoft_UI_Xaml_Hosting_XamlShutdownCompletedOnThreadEventArgs_ : global::ABI.WinRT.Interop.EventSource<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Hosting.WindowsXamlManager, global::Microsoft.UI.Xaml.Hosting.XamlShutdownCompletedOnThreadEventArgs>>
    {
        private static readonly bool initialized = global::WinRT.GenericTypeInstantiations.Windows_Foundation_TypedEventHandler_2_Microsoft_UI_Xaml_Hosting_WindowsXamlManager__Microsoft_UI_Xaml_Hosting_XamlShutdownCompletedOnThreadEventArgs.EnsureInitialized();

        internal _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_UI_Xaml_Hosting_WindowsXamlManager__global__Microsoft_UI_Xaml_Hosting_XamlShutdownCompletedOnThreadEventArgs_(IObjectReference obj,
        delegate* unmanaged[Stdcall]<System.IntPtr, System.IntPtr, WinRT.EventRegistrationToken*, int> addHandler,
        delegate* unmanaged[Stdcall]<System.IntPtr, WinRT.EventRegistrationToken, int> removeHandler, int index) : base(obj, addHandler, removeHandler, index)
        {
            _ = initialized;
        }

        protected override ObjectReferenceValue CreateMarshaler(global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Hosting.WindowsXamlManager, global::Microsoft.UI.Xaml.Hosting.XamlShutdownCompletedOnThreadEventArgs> handler) =>
        global::ABI.Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Hosting.WindowsXamlManager, global::Microsoft.UI.Xaml.Hosting.XamlShutdownCompletedOnThreadEventArgs>.CreateMarshaler2(handler);

        protected override global::ABI.WinRT.Interop.EventSourceState<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Hosting.WindowsXamlManager, global::Microsoft.UI.Xaml.Hosting.XamlShutdownCompletedOnThreadEventArgs>> CreateEventSourceState() =>
        new EventState(ObjectReference.ThisPtr, Index);

        [global::WinRT.WinRTExposedType]
        private sealed class EventState : global::ABI.WinRT.Interop.EventSourceState<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Hosting.WindowsXamlManager, global::Microsoft.UI.Xaml.Hosting.XamlShutdownCompletedOnThreadEventArgs>>
        {
            public EventState(System.IntPtr obj, int index)
            : base(obj, index)
            {
            }

            protected override global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Hosting.WindowsXamlManager, global::Microsoft.UI.Xaml.Hosting.XamlShutdownCompletedOnThreadEventArgs> GetEventInvoke()
            {
                return (global::Microsoft.UI.Xaml.Hosting.WindowsXamlManager sender, global::Microsoft.UI.Xaml.Hosting.XamlShutdownCompletedOnThreadEventArgs args) =>
                {
                    var targetDelegate = TargetDelegate;
                    if (targetDelegate is null)
                    {
                        return ;
                    }
                    targetDelegate.Invoke(sender, args);
                };
            }
        }
    }

    internal sealed unsafe class _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_Web_WebView2_Core_CoreWebView2__global__Microsoft_Web_WebView2_Core_CoreWebView2ClientCertificateRequestedEventArgs_ : global::ABI.WinRT.Interop.EventSource<global::Windows.Foundation.TypedEventHandler<global::Microsoft.Web.WebView2.Core.CoreWebView2, global::Microsoft.Web.WebView2.Core.CoreWebView2ClientCertificateRequestedEventArgs>>
    {
        private static readonly bool initialized = global::WinRT.GenericTypeInstantiations.Windows_Foundation_TypedEventHandler_2_Microsoft_Web_WebView2_Core_CoreWebView2__Microsoft_Web_WebView2_Core_CoreWebView2ClientCertificateRequestedEventArgs.EnsureInitialized();

        internal _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_Web_WebView2_Core_CoreWebView2__global__Microsoft_Web_WebView2_Core_CoreWebView2ClientCertificateRequestedEventArgs_(IObjectReference obj,
        delegate* unmanaged[Stdcall]<System.IntPtr, System.IntPtr, WinRT.EventRegistrationToken*, int> addHandler,
        delegate* unmanaged[Stdcall]<System.IntPtr, WinRT.EventRegistrationToken, int> removeHandler, int index) : base(obj, addHandler, removeHandler, index)
        {
            _ = initialized;
        }

        protected override ObjectReferenceValue CreateMarshaler(global::Windows.Foundation.TypedEventHandler<global::Microsoft.Web.WebView2.Core.CoreWebView2, global::Microsoft.Web.WebView2.Core.CoreWebView2ClientCertificateRequestedEventArgs> handler) =>
        global::ABI.Windows.Foundation.TypedEventHandler<global::Microsoft.Web.WebView2.Core.CoreWebView2, global::Microsoft.Web.WebView2.Core.CoreWebView2ClientCertificateRequestedEventArgs>.CreateMarshaler2(handler);

        protected override global::ABI.WinRT.Interop.EventSourceState<global::Windows.Foundation.TypedEventHandler<global::Microsoft.Web.WebView2.Core.CoreWebView2, global::Microsoft.Web.WebView2.Core.CoreWebView2ClientCertificateRequestedEventArgs>> CreateEventSourceState() =>
        new EventState(ObjectReference.ThisPtr, Index);

        [global::WinRT.WinRTExposedType]
        private sealed class EventState : global::ABI.WinRT.Interop.EventSourceState<global::Windows.Foundation.TypedEventHandler<global::Microsoft.Web.WebView2.Core.CoreWebView2, global::Microsoft.Web.WebView2.Core.CoreWebView2ClientCertificateRequestedEventArgs>>
        {
            public EventState(System.IntPtr obj, int index)
            : base(obj, index)
            {
            }

            protected override global::Windows.Foundation.TypedEventHandler<global::Microsoft.Web.WebView2.Core.CoreWebView2, global::Microsoft.Web.WebView2.Core.CoreWebView2ClientCertificateRequestedEventArgs> GetEventInvoke()
            {
                return (global::Microsoft.Web.WebView2.Core.CoreWebView2 sender, global::Microsoft.Web.WebView2.Core.CoreWebView2ClientCertificateRequestedEventArgs args) =>
                {
                    var targetDelegate = TargetDelegate;
                    if (targetDelegate is null)
                    {
                        return ;
                    }
                    targetDelegate.Invoke(sender, args);
                };
            }
        }
    }

    internal sealed unsafe class _EventSource_global__Microsoft_UI_Xaml_Input_ManipulationStartingEventHandler : global::ABI.WinRT.Interop.EventSource<global::Microsoft.UI.Xaml.Input.ManipulationStartingEventHandler>
    {


        internal _EventSource_global__Microsoft_UI_Xaml_Input_ManipulationStartingEventHandler(IObjectReference obj,
        delegate* unmanaged[Stdcall]<System.IntPtr, System.IntPtr, WinRT.EventRegistrationToken*, int> addHandler,
        delegate* unmanaged[Stdcall]<System.IntPtr, WinRT.EventRegistrationToken, int> removeHandler, int index) : base(obj, addHandler, removeHandler, index)
        {

        }

        protected override ObjectReferenceValue CreateMarshaler(global::Microsoft.UI.Xaml.Input.ManipulationStartingEventHandler handler) =>
        global::ABI.Microsoft.UI.Xaml.Input.ManipulationStartingEventHandler.CreateMarshaler2(handler);

        protected override global::ABI.WinRT.Interop.EventSourceState<global::Microsoft.UI.Xaml.Input.ManipulationStartingEventHandler> CreateEventSourceState() =>
        new EventState(ObjectReference.ThisPtr, Index);

        [global::WinRT.WinRTExposedType]
        private sealed class EventState : global::ABI.WinRT.Interop.EventSourceState<global::Microsoft.UI.Xaml.Input.ManipulationStartingEventHandler>
        {
            public EventState(System.IntPtr obj, int index)
            : base(obj, index)
            {
            }

            protected override global::Microsoft.UI.Xaml.Input.ManipulationStartingEventHandler GetEventInvoke()
            {
                return (object sender, global::Microsoft.UI.Xaml.Input.ManipulationStartingRoutedEventArgs e) =>
                {
                    var targetDelegate = TargetDelegate;
                    if (targetDelegate is null)
                    {
                        return ;
                    }
                    targetDelegate.Invoke(sender, e);
                };
            }
        }
    }

    internal sealed unsafe class _EventSource_global__Microsoft_UI_Xaml_Controls_Primitives_DragStartedEventHandler : global::ABI.WinRT.Interop.EventSource<global::Microsoft.UI.Xaml.Controls.Primitives.DragStartedEventHandler>
    {


        internal _EventSource_global__Microsoft_UI_Xaml_Controls_Primitives_DragStartedEventHandler(IObjectReference obj,
        delegate* unmanaged[Stdcall]<System.IntPtr, System.IntPtr, WinRT.EventRegistrationToken*, int> addHandler,
        delegate* unmanaged[Stdcall]<System.IntPtr, WinRT.EventRegistrationToken, int> removeHandler, int index) : base(obj, addHandler, removeHandler, index)
        {

        }

        protected override ObjectReferenceValue CreateMarshaler(global::Microsoft.UI.Xaml.Controls.Primitives.DragStartedEventHandler handler) =>
        global::ABI.Microsoft.UI.Xaml.Controls.Primitives.DragStartedEventHandler.CreateMarshaler2(handler);

        protected override global::ABI.WinRT.Interop.EventSourceState<global::Microsoft.UI.Xaml.Controls.Primitives.DragStartedEventHandler> CreateEventSourceState() =>
        new EventState(ObjectReference.ThisPtr, Index);

        [global::WinRT.WinRTExposedType]
        private sealed class EventState : global::ABI.WinRT.Interop.EventSourceState<global::Microsoft.UI.Xaml.Controls.Primitives.DragStartedEventHandler>
        {
            public EventState(System.IntPtr obj, int index)
            : base(obj, index)
            {
            }

            protected override global::Microsoft.UI.Xaml.Controls.Primitives.DragStartedEventHandler GetEventInvoke()
            {
                return (object sender, global::Microsoft.UI.Xaml.Controls.Primitives.DragStartedEventArgs e) =>
                {
                    var targetDelegate = TargetDelegate;
                    if (targetDelegate is null)
                    {
                        return ;
                    }
                    targetDelegate.Invoke(sender, e);
                };
            }
        }
    }

    internal sealed unsafe class _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_Web_WebView2_Core_CoreWebView2__global__Microsoft_Web_WebView2_Core_CoreWebView2ServerCertificateErrorDetectedEventArgs_ : global::ABI.WinRT.Interop.EventSource<global::Windows.Foundation.TypedEventHandler<global::Microsoft.Web.WebView2.Core.CoreWebView2, global::Microsoft.Web.WebView2.Core.CoreWebView2ServerCertificateErrorDetectedEventArgs>>
    {
        private static readonly bool initialized = global::WinRT.GenericTypeInstantiations.Windows_Foundation_TypedEventHandler_2_Microsoft_Web_WebView2_Core_CoreWebView2__Microsoft_Web_WebView2_Core_CoreWebView2ServerCertificateErrorDetectedEventArgs.EnsureInitialized();

        internal _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_Web_WebView2_Core_CoreWebView2__global__Microsoft_Web_WebView2_Core_CoreWebView2ServerCertificateErrorDetectedEventArgs_(IObjectReference obj,
        delegate* unmanaged[Stdcall]<System.IntPtr, System.IntPtr, WinRT.EventRegistrationToken*, int> addHandler,
        delegate* unmanaged[Stdcall]<System.IntPtr, WinRT.EventRegistrationToken, int> removeHandler, int index) : base(obj, addHandler, removeHandler, index)
        {
            _ = initialized;
        }

        protected override ObjectReferenceValue CreateMarshaler(global::Windows.Foundation.TypedEventHandler<global::Microsoft.Web.WebView2.Core.CoreWebView2, global::Microsoft.Web.WebView2.Core.CoreWebView2ServerCertificateErrorDetectedEventArgs> handler) =>
        global::ABI.Windows.Foundation.TypedEventHandler<global::Microsoft.Web.WebView2.Core.CoreWebView2, global::Microsoft.Web.WebView2.Core.CoreWebView2ServerCertificateErrorDetectedEventArgs>.CreateMarshaler2(handler);

        protected override global::ABI.WinRT.Interop.EventSourceState<global::Windows.Foundation.TypedEventHandler<global::Microsoft.Web.WebView2.Core.CoreWebView2, global::Microsoft.Web.WebView2.Core.CoreWebView2ServerCertificateErrorDetectedEventArgs>> CreateEventSourceState() =>
        new EventState(ObjectReference.ThisPtr, Index);

        [global::WinRT.WinRTExposedType]
        private sealed class EventState : global::ABI.WinRT.Interop.EventSourceState<global::Windows.Foundation.TypedEventHandler<global::Microsoft.Web.WebView2.Core.CoreWebView2, global::Microsoft.Web.WebView2.Core.CoreWebView2ServerCertificateErrorDetectedEventArgs>>
        {
            public EventState(System.IntPtr obj, int index)
            : base(obj, index)
            {
            }

            protected override global::Windows.Foundation.TypedEventHandler<global::Microsoft.Web.WebView2.Core.CoreWebView2, global::Microsoft.Web.WebView2.Core.CoreWebView2ServerCertificateErrorDetectedEventArgs> GetEventInvoke()
            {
                return (global::Microsoft.Web.WebView2.Core.CoreWebView2 sender, global::Microsoft.Web.WebView2.Core.CoreWebView2ServerCertificateErrorDetectedEventArgs args) =>
                {
                    var targetDelegate = TargetDelegate;
                    if (targetDelegate is null)
                    {
                        return ;
                    }
                    targetDelegate.Invoke(sender, args);
                };
            }
        }
    }

    internal sealed unsafe class _EventSource_global__Microsoft_UI_Xaml_Input_ManipulationInertiaStartingEventHandler : global::ABI.WinRT.Interop.EventSource<global::Microsoft.UI.Xaml.Input.ManipulationInertiaStartingEventHandler>
    {


        internal _EventSource_global__Microsoft_UI_Xaml_Input_ManipulationInertiaStartingEventHandler(IObjectReference obj,
        delegate* unmanaged[Stdcall]<System.IntPtr, System.IntPtr, WinRT.EventRegistrationToken*, int> addHandler,
        delegate* unmanaged[Stdcall]<System.IntPtr, WinRT.EventRegistrationToken, int> removeHandler, int index) : base(obj, addHandler, removeHandler, index)
        {

        }

        protected override ObjectReferenceValue CreateMarshaler(global::Microsoft.UI.Xaml.Input.ManipulationInertiaStartingEventHandler handler) =>
        global::ABI.Microsoft.UI.Xaml.Input.ManipulationInertiaStartingEventHandler.CreateMarshaler2(handler);

        protected override global::ABI.WinRT.Interop.EventSourceState<global::Microsoft.UI.Xaml.Input.ManipulationInertiaStartingEventHandler> CreateEventSourceState() =>
        new EventState(ObjectReference.ThisPtr, Index);

        [global::WinRT.WinRTExposedType]
        private sealed class EventState : global::ABI.WinRT.Interop.EventSourceState<global::Microsoft.UI.Xaml.Input.ManipulationInertiaStartingEventHandler>
        {
            public EventState(System.IntPtr obj, int index)
            : base(obj, index)
            {
            }

            protected override global::Microsoft.UI.Xaml.Input.ManipulationInertiaStartingEventHandler GetEventInvoke()
            {
                return (object sender, global::Microsoft.UI.Xaml.Input.ManipulationInertiaStartingRoutedEventArgs e) =>
                {
                    var targetDelegate = TargetDelegate;
                    if (targetDelegate is null)
                    {
                        return ;
                    }
                    targetDelegate.Invoke(sender, e);
                };
            }
        }
    }

    internal sealed unsafe class _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_UI_Xaml_Controls_MapControl__global__Microsoft_UI_Xaml_Controls_MapControlMapServiceErrorOccurredEventArgs_ : global::ABI.WinRT.Interop.EventSource<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.MapControl, global::Microsoft.UI.Xaml.Controls.MapControlMapServiceErrorOccurredEventArgs>>
    {
        private static readonly bool initialized = global::WinRT.GenericTypeInstantiations.Windows_Foundation_TypedEventHandler_2_Microsoft_UI_Xaml_Controls_MapControl__Microsoft_UI_Xaml_Controls_MapControlMapServiceErrorOccurredEventArgs.EnsureInitialized();

        internal _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_UI_Xaml_Controls_MapControl__global__Microsoft_UI_Xaml_Controls_MapControlMapServiceErrorOccurredEventArgs_(IObjectReference obj,
        delegate* unmanaged[Stdcall]<System.IntPtr, System.IntPtr, WinRT.EventRegistrationToken*, int> addHandler,
        delegate* unmanaged[Stdcall]<System.IntPtr, WinRT.EventRegistrationToken, int> removeHandler, int index) : base(obj, addHandler, removeHandler, index)
        {
            _ = initialized;
        }

        protected override ObjectReferenceValue CreateMarshaler(global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.MapControl, global::Microsoft.UI.Xaml.Controls.MapControlMapServiceErrorOccurredEventArgs> handler) =>
        global::ABI.Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.MapControl, global::Microsoft.UI.Xaml.Controls.MapControlMapServiceErrorOccurredEventArgs>.CreateMarshaler2(handler);

        protected override global::ABI.WinRT.Interop.EventSourceState<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.MapControl, global::Microsoft.UI.Xaml.Controls.MapControlMapServiceErrorOccurredEventArgs>> CreateEventSourceState() =>
        new EventState(ObjectReference.ThisPtr, Index);

        [global::WinRT.WinRTExposedType]
        private sealed class EventState : global::ABI.WinRT.Interop.EventSourceState<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.MapControl, global::Microsoft.UI.Xaml.Controls.MapControlMapServiceErrorOccurredEventArgs>>
        {
            public EventState(System.IntPtr obj, int index)
            : base(obj, index)
            {
            }

            protected override global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.MapControl, global::Microsoft.UI.Xaml.Controls.MapControlMapServiceErrorOccurredEventArgs> GetEventInvoke()
            {
                return (global::Microsoft.UI.Xaml.Controls.MapControl sender, global::Microsoft.UI.Xaml.Controls.MapControlMapServiceErrorOccurredEventArgs args) =>
                {
                    var targetDelegate = TargetDelegate;
                    if (targetDelegate is null)
                    {
                        return ;
                    }
                    targetDelegate.Invoke(sender, args);
                };
            }
        }
    }

    internal sealed unsafe class _EventSource_global__Microsoft_UI_Xaml_VisualStateChangedEventHandler : global::ABI.WinRT.Interop.EventSource<global::Microsoft.UI.Xaml.VisualStateChangedEventHandler>
    {


        internal _EventSource_global__Microsoft_UI_Xaml_VisualStateChangedEventHandler(IObjectReference obj,
        delegate* unmanaged[Stdcall]<System.IntPtr, System.IntPtr, WinRT.EventRegistrationToken*, int> addHandler,
        delegate* unmanaged[Stdcall]<System.IntPtr, WinRT.EventRegistrationToken, int> removeHandler, int index) : base(obj, addHandler, removeHandler, index)
        {

        }

        protected override ObjectReferenceValue CreateMarshaler(global::Microsoft.UI.Xaml.VisualStateChangedEventHandler handler) =>
        global::ABI.Microsoft.UI.Xaml.VisualStateChangedEventHandler.CreateMarshaler2(handler);

        protected override global::ABI.WinRT.Interop.EventSourceState<global::Microsoft.UI.Xaml.VisualStateChangedEventHandler> CreateEventSourceState() =>
        new EventState(ObjectReference.ThisPtr, Index);

        [global::WinRT.WinRTExposedType]
        private sealed class EventState : global::ABI.WinRT.Interop.EventSourceState<global::Microsoft.UI.Xaml.VisualStateChangedEventHandler>
        {
            public EventState(System.IntPtr obj, int index)
            : base(obj, index)
            {
            }

            protected override global::Microsoft.UI.Xaml.VisualStateChangedEventHandler GetEventInvoke()
            {
                return (object sender, global::Microsoft.UI.Xaml.VisualStateChangedEventArgs e) =>
                {
                    var targetDelegate = TargetDelegate;
                    if (targetDelegate is null)
                    {
                        return ;
                    }
                    targetDelegate.Invoke(sender, e);
                };
            }
        }
    }

    internal sealed unsafe class _EventSource_global__Microsoft_UI_Xaml_Controls_TextControlPasteEventHandler : global::ABI.WinRT.Interop.EventSource<global::Microsoft.UI.Xaml.Controls.TextControlPasteEventHandler>
    {


        internal _EventSource_global__Microsoft_UI_Xaml_Controls_TextControlPasteEventHandler(IObjectReference obj,
        delegate* unmanaged[Stdcall]<System.IntPtr, System.IntPtr, WinRT.EventRegistrationToken*, int> addHandler,
        delegate* unmanaged[Stdcall]<System.IntPtr, WinRT.EventRegistrationToken, int> removeHandler, int index) : base(obj, addHandler, removeHandler, index)
        {

        }

        protected override ObjectReferenceValue CreateMarshaler(global::Microsoft.UI.Xaml.Controls.TextControlPasteEventHandler handler) =>
        global::ABI.Microsoft.UI.Xaml.Controls.TextControlPasteEventHandler.CreateMarshaler2(handler);

        protected override global::ABI.WinRT.Interop.EventSourceState<global::Microsoft.UI.Xaml.Controls.TextControlPasteEventHandler> CreateEventSourceState() =>
        new EventState(ObjectReference.ThisPtr, Index);

        [global::WinRT.WinRTExposedType]
        private sealed class EventState : global::ABI.WinRT.Interop.EventSourceState<global::Microsoft.UI.Xaml.Controls.TextControlPasteEventHandler>
        {
            public EventState(System.IntPtr obj, int index)
            : base(obj, index)
            {
            }

            protected override global::Microsoft.UI.Xaml.Controls.TextControlPasteEventHandler GetEventInvoke()
            {
                return (object sender, global::Microsoft.UI.Xaml.Controls.TextControlPasteEventArgs e) =>
                {
                    var targetDelegate = TargetDelegate;
                    if (targetDelegate is null)
                    {
                        return ;
                    }
                    targetDelegate.Invoke(sender, e);
                };
            }
        }
    }

    internal sealed unsafe class _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_UI_Xaml_DebugSettings__global__Microsoft_UI_Xaml_XamlResourceReferenceFailedEventArgs_ : global::ABI.WinRT.Interop.EventSource<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.DebugSettings, global::Microsoft.UI.Xaml.XamlResourceReferenceFailedEventArgs>>
    {
        private static readonly bool initialized = global::WinRT.GenericTypeInstantiations.Windows_Foundation_TypedEventHandler_2_Microsoft_UI_Xaml_DebugSettings__Microsoft_UI_Xaml_XamlResourceReferenceFailedEventArgs.EnsureInitialized();

        internal _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_UI_Xaml_DebugSettings__global__Microsoft_UI_Xaml_XamlResourceReferenceFailedEventArgs_(IObjectReference obj,
        delegate* unmanaged[Stdcall]<System.IntPtr, System.IntPtr, WinRT.EventRegistrationToken*, int> addHandler,
        delegate* unmanaged[Stdcall]<System.IntPtr, WinRT.EventRegistrationToken, int> removeHandler, int index) : base(obj, addHandler, removeHandler, index)
        {
            _ = initialized;
        }

        protected override ObjectReferenceValue CreateMarshaler(global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.DebugSettings, global::Microsoft.UI.Xaml.XamlResourceReferenceFailedEventArgs> handler) =>
        global::ABI.Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.DebugSettings, global::Microsoft.UI.Xaml.XamlResourceReferenceFailedEventArgs>.CreateMarshaler2(handler);

        protected override global::ABI.WinRT.Interop.EventSourceState<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.DebugSettings, global::Microsoft.UI.Xaml.XamlResourceReferenceFailedEventArgs>> CreateEventSourceState() =>
        new EventState(ObjectReference.ThisPtr, Index);

        [global::WinRT.WinRTExposedType]
        private sealed class EventState : global::ABI.WinRT.Interop.EventSourceState<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.DebugSettings, global::Microsoft.UI.Xaml.XamlResourceReferenceFailedEventArgs>>
        {
            public EventState(System.IntPtr obj, int index)
            : base(obj, index)
            {
            }

            protected override global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.DebugSettings, global::Microsoft.UI.Xaml.XamlResourceReferenceFailedEventArgs> GetEventInvoke()
            {
                return (global::Microsoft.UI.Xaml.DebugSettings sender, global::Microsoft.UI.Xaml.XamlResourceReferenceFailedEventArgs args) =>
                {
                    var targetDelegate = TargetDelegate;
                    if (targetDelegate is null)
                    {
                        return ;
                    }
                    targetDelegate.Invoke(sender, args);
                };
            }
        }
    }

    internal sealed unsafe class _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_UI_Xaml_Controls_Primitives_ScrollPresenter__object_ : global::ABI.WinRT.Interop.EventSource<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.Primitives.ScrollPresenter, object>>
    {
        private static readonly bool initialized = global::WinRT.GenericTypeInstantiations.Windows_Foundation_TypedEventHandler_2_Microsoft_UI_Xaml_Controls_Primitives_ScrollPresenter__object.EnsureInitialized();

        internal _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_UI_Xaml_Controls_Primitives_ScrollPresenter__object_(IObjectReference obj,
        delegate* unmanaged[Stdcall]<System.IntPtr, System.IntPtr, WinRT.EventRegistrationToken*, int> addHandler,
        delegate* unmanaged[Stdcall]<System.IntPtr, WinRT.EventRegistrationToken, int> removeHandler, int index) : base(obj, addHandler, removeHandler, index)
        {
            _ = initialized;
        }

        protected override ObjectReferenceValue CreateMarshaler(global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.Primitives.ScrollPresenter, object> handler) =>
        global::ABI.Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.Primitives.ScrollPresenter, object>.CreateMarshaler2(handler);

        protected override global::ABI.WinRT.Interop.EventSourceState<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.Primitives.ScrollPresenter, object>> CreateEventSourceState() =>
        new EventState(ObjectReference.ThisPtr, Index);

        [global::WinRT.WinRTExposedType]
        private sealed class EventState : global::ABI.WinRT.Interop.EventSourceState<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.Primitives.ScrollPresenter, object>>
        {
            public EventState(System.IntPtr obj, int index)
            : base(obj, index)
            {
            }

            protected override global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.Primitives.ScrollPresenter, object> GetEventInvoke()
            {
                return (global::Microsoft.UI.Xaml.Controls.Primitives.ScrollPresenter sender, object args) =>
                {
                    var targetDelegate = TargetDelegate;
                    if (targetDelegate is null)
                    {
                        return ;
                    }
                    targetDelegate.Invoke(sender, args);
                };
            }
        }
    }

    internal sealed unsafe class _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_UI_Xaml_Controls_Primitives_ScrollPresenter__global__Microsoft_UI_Xaml_Controls_ScrollingZoomCompletedEventArgs_ : global::ABI.WinRT.Interop.EventSource<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.Primitives.ScrollPresenter, global::Microsoft.UI.Xaml.Controls.ScrollingZoomCompletedEventArgs>>
    {
        private static readonly bool initialized = global::WinRT.GenericTypeInstantiations.Windows_Foundation_TypedEventHandler_2_Microsoft_UI_Xaml_Controls_Primitives_ScrollPresenter__Microsoft_UI_Xaml_Controls_ScrollingZoomCompletedEventArgs.EnsureInitialized();

        internal _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_UI_Xaml_Controls_Primitives_ScrollPresenter__global__Microsoft_UI_Xaml_Controls_ScrollingZoomCompletedEventArgs_(IObjectReference obj,
        delegate* unmanaged[Stdcall]<System.IntPtr, System.IntPtr, WinRT.EventRegistrationToken*, int> addHandler,
        delegate* unmanaged[Stdcall]<System.IntPtr, WinRT.EventRegistrationToken, int> removeHandler, int index) : base(obj, addHandler, removeHandler, index)
        {
            _ = initialized;
        }

        protected override ObjectReferenceValue CreateMarshaler(global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.Primitives.ScrollPresenter, global::Microsoft.UI.Xaml.Controls.ScrollingZoomCompletedEventArgs> handler) =>
        global::ABI.Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.Primitives.ScrollPresenter, global::Microsoft.UI.Xaml.Controls.ScrollingZoomCompletedEventArgs>.CreateMarshaler2(handler);

        protected override global::ABI.WinRT.Interop.EventSourceState<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.Primitives.ScrollPresenter, global::Microsoft.UI.Xaml.Controls.ScrollingZoomCompletedEventArgs>> CreateEventSourceState() =>
        new EventState(ObjectReference.ThisPtr, Index);

        [global::WinRT.WinRTExposedType]
        private sealed class EventState : global::ABI.WinRT.Interop.EventSourceState<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.Primitives.ScrollPresenter, global::Microsoft.UI.Xaml.Controls.ScrollingZoomCompletedEventArgs>>
        {
            public EventState(System.IntPtr obj, int index)
            : base(obj, index)
            {
            }

            protected override global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.Primitives.ScrollPresenter, global::Microsoft.UI.Xaml.Controls.ScrollingZoomCompletedEventArgs> GetEventInvoke()
            {
                return (global::Microsoft.UI.Xaml.Controls.Primitives.ScrollPresenter sender, global::Microsoft.UI.Xaml.Controls.ScrollingZoomCompletedEventArgs args) =>
                {
                    var targetDelegate = TargetDelegate;
                    if (targetDelegate is null)
                    {
                        return ;
                    }
                    targetDelegate.Invoke(sender, args);
                };
            }
        }
    }

    internal sealed unsafe class _EventSource_global__Microsoft_UI_Xaml_SizeChangedEventHandler : global::ABI.WinRT.Interop.EventSource<global::Microsoft.UI.Xaml.SizeChangedEventHandler>
    {


        internal _EventSource_global__Microsoft_UI_Xaml_SizeChangedEventHandler(IObjectReference obj,
        delegate* unmanaged[Stdcall]<System.IntPtr, System.IntPtr, WinRT.EventRegistrationToken*, int> addHandler,
        delegate* unmanaged[Stdcall]<System.IntPtr, WinRT.EventRegistrationToken, int> removeHandler, int index) : base(obj, addHandler, removeHandler, index)
        {

        }

        protected override ObjectReferenceValue CreateMarshaler(global::Microsoft.UI.Xaml.SizeChangedEventHandler handler) =>
        global::ABI.Microsoft.UI.Xaml.SizeChangedEventHandler.CreateMarshaler2(handler);

        protected override global::ABI.WinRT.Interop.EventSourceState<global::Microsoft.UI.Xaml.SizeChangedEventHandler> CreateEventSourceState() =>
        new EventState(ObjectReference.ThisPtr, Index);

        [global::WinRT.WinRTExposedType]
        private sealed class EventState : global::ABI.WinRT.Interop.EventSourceState<global::Microsoft.UI.Xaml.SizeChangedEventHandler>
        {
            public EventState(System.IntPtr obj, int index)
            : base(obj, index)
            {
            }

            protected override global::Microsoft.UI.Xaml.SizeChangedEventHandler GetEventInvoke()
            {
                return (object sender, global::Microsoft.UI.Xaml.SizeChangedEventArgs e) =>
                {
                    var targetDelegate = TargetDelegate;
                    if (targetDelegate is null)
                    {
                        return ;
                    }
                    targetDelegate.Invoke(sender, e);
                };
            }
        }
    }

    internal sealed unsafe class _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_UI_Xaml_Input_XamlUICommand__global__Microsoft_UI_Xaml_Input_ExecuteRequestedEventArgs_ : global::ABI.WinRT.Interop.EventSource<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Input.XamlUICommand, global::Microsoft.UI.Xaml.Input.ExecuteRequestedEventArgs>>
    {
        private static readonly bool initialized = global::WinRT.GenericTypeInstantiations.Windows_Foundation_TypedEventHandler_2_Microsoft_UI_Xaml_Input_XamlUICommand__Microsoft_UI_Xaml_Input_ExecuteRequestedEventArgs.EnsureInitialized();

        internal _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_UI_Xaml_Input_XamlUICommand__global__Microsoft_UI_Xaml_Input_ExecuteRequestedEventArgs_(IObjectReference obj,
        delegate* unmanaged[Stdcall]<System.IntPtr, System.IntPtr, WinRT.EventRegistrationToken*, int> addHandler,
        delegate* unmanaged[Stdcall]<System.IntPtr, WinRT.EventRegistrationToken, int> removeHandler, int index) : base(obj, addHandler, removeHandler, index)
        {
            _ = initialized;
        }

        protected override ObjectReferenceValue CreateMarshaler(global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Input.XamlUICommand, global::Microsoft.UI.Xaml.Input.ExecuteRequestedEventArgs> handler) =>
        global::ABI.Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Input.XamlUICommand, global::Microsoft.UI.Xaml.Input.ExecuteRequestedEventArgs>.CreateMarshaler2(handler);

        protected override global::ABI.WinRT.Interop.EventSourceState<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Input.XamlUICommand, global::Microsoft.UI.Xaml.Input.ExecuteRequestedEventArgs>> CreateEventSourceState() =>
        new EventState(ObjectReference.ThisPtr, Index);

        [global::WinRT.WinRTExposedType]
        private sealed class EventState : global::ABI.WinRT.Interop.EventSourceState<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Input.XamlUICommand, global::Microsoft.UI.Xaml.Input.ExecuteRequestedEventArgs>>
        {
            public EventState(System.IntPtr obj, int index)
            : base(obj, index)
            {
            }

            protected override global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Input.XamlUICommand, global::Microsoft.UI.Xaml.Input.ExecuteRequestedEventArgs> GetEventInvoke()
            {
                return (global::Microsoft.UI.Xaml.Input.XamlUICommand sender, global::Microsoft.UI.Xaml.Input.ExecuteRequestedEventArgs args) =>
                {
                    var targetDelegate = TargetDelegate;
                    if (targetDelegate is null)
                    {
                        return ;
                    }
                    targetDelegate.Invoke(sender, args);
                };
            }
        }
    }

    internal sealed unsafe class _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_UI_Windowing_AppWindow__object_ : global::ABI.WinRT.Interop.EventSource<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Windowing.AppWindow, object>>
    {
        private static readonly bool initialized = global::WinRT.GenericTypeInstantiations.Windows_Foundation_TypedEventHandler_2_Microsoft_UI_Windowing_AppWindow__object.EnsureInitialized();

        internal _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_UI_Windowing_AppWindow__object_(IObjectReference obj,
        delegate* unmanaged[Stdcall]<System.IntPtr, System.IntPtr, WinRT.EventRegistrationToken*, int> addHandler,
        delegate* unmanaged[Stdcall]<System.IntPtr, WinRT.EventRegistrationToken, int> removeHandler, int index) : base(obj, addHandler, removeHandler, index)
        {
            _ = initialized;
        }

        protected override ObjectReferenceValue CreateMarshaler(global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Windowing.AppWindow, object> handler) =>
        global::ABI.Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Windowing.AppWindow, object>.CreateMarshaler2(handler);

        protected override global::ABI.WinRT.Interop.EventSourceState<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Windowing.AppWindow, object>> CreateEventSourceState() =>
        new EventState(ObjectReference.ThisPtr, Index);

        [global::WinRT.WinRTExposedType]
        private sealed class EventState : global::ABI.WinRT.Interop.EventSourceState<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Windowing.AppWindow, object>>
        {
            public EventState(System.IntPtr obj, int index)
            : base(obj, index)
            {
            }

            protected override global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Windowing.AppWindow, object> GetEventInvoke()
            {
                return (global::Microsoft.UI.Windowing.AppWindow sender, object args) =>
                {
                    var targetDelegate = TargetDelegate;
                    if (targetDelegate is null)
                    {
                        return ;
                    }
                    targetDelegate.Invoke(sender, args);
                };
            }
        }
    }

    internal sealed unsafe class _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_UI_Xaml_Controls_ColorPicker__global__Microsoft_UI_Xaml_Controls_ColorChangedEventArgs_ : global::ABI.WinRT.Interop.EventSource<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.ColorPicker, global::Microsoft.UI.Xaml.Controls.ColorChangedEventArgs>>
    {
        private static readonly bool initialized = global::WinRT.GenericTypeInstantiations.Windows_Foundation_TypedEventHandler_2_Microsoft_UI_Xaml_Controls_ColorPicker__Microsoft_UI_Xaml_Controls_ColorChangedEventArgs.EnsureInitialized();

        internal _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_UI_Xaml_Controls_ColorPicker__global__Microsoft_UI_Xaml_Controls_ColorChangedEventArgs_(IObjectReference obj,
        delegate* unmanaged[Stdcall]<System.IntPtr, System.IntPtr, WinRT.EventRegistrationToken*, int> addHandler,
        delegate* unmanaged[Stdcall]<System.IntPtr, WinRT.EventRegistrationToken, int> removeHandler, int index) : base(obj, addHandler, removeHandler, index)
        {
            _ = initialized;
        }

        protected override ObjectReferenceValue CreateMarshaler(global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.ColorPicker, global::Microsoft.UI.Xaml.Controls.ColorChangedEventArgs> handler) =>
        global::ABI.Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.ColorPicker, global::Microsoft.UI.Xaml.Controls.ColorChangedEventArgs>.CreateMarshaler2(handler);

        protected override global::ABI.WinRT.Interop.EventSourceState<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.ColorPicker, global::Microsoft.UI.Xaml.Controls.ColorChangedEventArgs>> CreateEventSourceState() =>
        new EventState(ObjectReference.ThisPtr, Index);

        [global::WinRT.WinRTExposedType]
        private sealed class EventState : global::ABI.WinRT.Interop.EventSourceState<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.ColorPicker, global::Microsoft.UI.Xaml.Controls.ColorChangedEventArgs>>
        {
            public EventState(System.IntPtr obj, int index)
            : base(obj, index)
            {
            }

            protected override global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.ColorPicker, global::Microsoft.UI.Xaml.Controls.ColorChangedEventArgs> GetEventInvoke()
            {
                return (global::Microsoft.UI.Xaml.Controls.ColorPicker sender, global::Microsoft.UI.Xaml.Controls.ColorChangedEventArgs args) =>
                {
                    var targetDelegate = TargetDelegate;
                    if (targetDelegate is null)
                    {
                        return ;
                    }
                    targetDelegate.Invoke(sender, args);
                };
            }
        }
    }

    internal sealed unsafe class _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_UI_Xaml_UIElement__global__Microsoft_UI_Xaml_DropCompletedEventArgs_ : global::ABI.WinRT.Interop.EventSource<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.UIElement, global::Microsoft.UI.Xaml.DropCompletedEventArgs>>
    {
        private static readonly bool initialized = global::WinRT.GenericTypeInstantiations.Windows_Foundation_TypedEventHandler_2_Microsoft_UI_Xaml_UIElement__Microsoft_UI_Xaml_DropCompletedEventArgs.EnsureInitialized();

        internal _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_UI_Xaml_UIElement__global__Microsoft_UI_Xaml_DropCompletedEventArgs_(IObjectReference obj,
        delegate* unmanaged[Stdcall]<System.IntPtr, System.IntPtr, WinRT.EventRegistrationToken*, int> addHandler,
        delegate* unmanaged[Stdcall]<System.IntPtr, WinRT.EventRegistrationToken, int> removeHandler, int index) : base(obj, addHandler, removeHandler, index)
        {
            _ = initialized;
        }

        protected override ObjectReferenceValue CreateMarshaler(global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.UIElement, global::Microsoft.UI.Xaml.DropCompletedEventArgs> handler) =>
        global::ABI.Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.UIElement, global::Microsoft.UI.Xaml.DropCompletedEventArgs>.CreateMarshaler2(handler);

        protected override global::ABI.WinRT.Interop.EventSourceState<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.UIElement, global::Microsoft.UI.Xaml.DropCompletedEventArgs>> CreateEventSourceState() =>
        new EventState(ObjectReference.ThisPtr, Index);

        [global::WinRT.WinRTExposedType]
        private sealed class EventState : global::ABI.WinRT.Interop.EventSourceState<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.UIElement, global::Microsoft.UI.Xaml.DropCompletedEventArgs>>
        {
            public EventState(System.IntPtr obj, int index)
            : base(obj, index)
            {
            }

            protected override global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.UIElement, global::Microsoft.UI.Xaml.DropCompletedEventArgs> GetEventInvoke()
            {
                return (global::Microsoft.UI.Xaml.UIElement sender, global::Microsoft.UI.Xaml.DropCompletedEventArgs args) =>
                {
                    var targetDelegate = TargetDelegate;
                    if (targetDelegate is null)
                    {
                        return ;
                    }
                    targetDelegate.Invoke(sender, args);
                };
            }
        }
    }

    internal sealed unsafe class _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_UI_Xaml_Controls_ScrollViewer__global__Microsoft_UI_Xaml_Controls_AnchorRequestedEventArgs_ : global::ABI.WinRT.Interop.EventSource<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.ScrollViewer, global::Microsoft.UI.Xaml.Controls.AnchorRequestedEventArgs>>
    {
        private static readonly bool initialized = global::WinRT.GenericTypeInstantiations.Windows_Foundation_TypedEventHandler_2_Microsoft_UI_Xaml_Controls_ScrollViewer__Microsoft_UI_Xaml_Controls_AnchorRequestedEventArgs.EnsureInitialized();

        internal _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_UI_Xaml_Controls_ScrollViewer__global__Microsoft_UI_Xaml_Controls_AnchorRequestedEventArgs_(IObjectReference obj,
        delegate* unmanaged[Stdcall]<System.IntPtr, System.IntPtr, WinRT.EventRegistrationToken*, int> addHandler,
        delegate* unmanaged[Stdcall]<System.IntPtr, WinRT.EventRegistrationToken, int> removeHandler, int index) : base(obj, addHandler, removeHandler, index)
        {
            _ = initialized;
        }

        protected override ObjectReferenceValue CreateMarshaler(global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.ScrollViewer, global::Microsoft.UI.Xaml.Controls.AnchorRequestedEventArgs> handler) =>
        global::ABI.Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.ScrollViewer, global::Microsoft.UI.Xaml.Controls.AnchorRequestedEventArgs>.CreateMarshaler2(handler);

        protected override global::ABI.WinRT.Interop.EventSourceState<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.ScrollViewer, global::Microsoft.UI.Xaml.Controls.AnchorRequestedEventArgs>> CreateEventSourceState() =>
        new EventState(ObjectReference.ThisPtr, Index);

        [global::WinRT.WinRTExposedType]
        private sealed class EventState : global::ABI.WinRT.Interop.EventSourceState<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.ScrollViewer, global::Microsoft.UI.Xaml.Controls.AnchorRequestedEventArgs>>
        {
            public EventState(System.IntPtr obj, int index)
            : base(obj, index)
            {
            }

            protected override global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.ScrollViewer, global::Microsoft.UI.Xaml.Controls.AnchorRequestedEventArgs> GetEventInvoke()
            {
                return (global::Microsoft.UI.Xaml.Controls.ScrollViewer sender, global::Microsoft.UI.Xaml.Controls.AnchorRequestedEventArgs args) =>
                {
                    var targetDelegate = TargetDelegate;
                    if (targetDelegate is null)
                    {
                        return ;
                    }
                    targetDelegate.Invoke(sender, args);
                };
            }
        }
    }

    internal sealed unsafe class _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_UI_Xaml_Controls_TabView__global__Microsoft_UI_Xaml_Controls_TabViewTabDroppedOutsideEventArgs_ : global::ABI.WinRT.Interop.EventSource<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.TabView, global::Microsoft.UI.Xaml.Controls.TabViewTabDroppedOutsideEventArgs>>
    {
        private static readonly bool initialized = global::WinRT.GenericTypeInstantiations.Windows_Foundation_TypedEventHandler_2_Microsoft_UI_Xaml_Controls_TabView__Microsoft_UI_Xaml_Controls_TabViewTabDroppedOutsideEventArgs.EnsureInitialized();

        internal _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_UI_Xaml_Controls_TabView__global__Microsoft_UI_Xaml_Controls_TabViewTabDroppedOutsideEventArgs_(IObjectReference obj,
        delegate* unmanaged[Stdcall]<System.IntPtr, System.IntPtr, WinRT.EventRegistrationToken*, int> addHandler,
        delegate* unmanaged[Stdcall]<System.IntPtr, WinRT.EventRegistrationToken, int> removeHandler, int index) : base(obj, addHandler, removeHandler, index)
        {
            _ = initialized;
        }

        protected override ObjectReferenceValue CreateMarshaler(global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.TabView, global::Microsoft.UI.Xaml.Controls.TabViewTabDroppedOutsideEventArgs> handler) =>
        global::ABI.Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.TabView, global::Microsoft.UI.Xaml.Controls.TabViewTabDroppedOutsideEventArgs>.CreateMarshaler2(handler);

        protected override global::ABI.WinRT.Interop.EventSourceState<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.TabView, global::Microsoft.UI.Xaml.Controls.TabViewTabDroppedOutsideEventArgs>> CreateEventSourceState() =>
        new EventState(ObjectReference.ThisPtr, Index);

        [global::WinRT.WinRTExposedType]
        private sealed class EventState : global::ABI.WinRT.Interop.EventSourceState<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.TabView, global::Microsoft.UI.Xaml.Controls.TabViewTabDroppedOutsideEventArgs>>
        {
            public EventState(System.IntPtr obj, int index)
            : base(obj, index)
            {
            }

            protected override global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.TabView, global::Microsoft.UI.Xaml.Controls.TabViewTabDroppedOutsideEventArgs> GetEventInvoke()
            {
                return (global::Microsoft.UI.Xaml.Controls.TabView sender, global::Microsoft.UI.Xaml.Controls.TabViewTabDroppedOutsideEventArgs args) =>
                {
                    var targetDelegate = TargetDelegate;
                    if (targetDelegate is null)
                    {
                        return ;
                    }
                    targetDelegate.Invoke(sender, args);
                };
            }
        }
    }

    internal sealed unsafe class _EventSource_global__Microsoft_UI_Xaml_Input_PointerEventHandler : global::ABI.WinRT.Interop.EventSource<global::Microsoft.UI.Xaml.Input.PointerEventHandler>
    {


        internal _EventSource_global__Microsoft_UI_Xaml_Input_PointerEventHandler(IObjectReference obj,
        delegate* unmanaged[Stdcall]<System.IntPtr, System.IntPtr, WinRT.EventRegistrationToken*, int> addHandler,
        delegate* unmanaged[Stdcall]<System.IntPtr, WinRT.EventRegistrationToken, int> removeHandler, int index) : base(obj, addHandler, removeHandler, index)
        {

        }

        protected override ObjectReferenceValue CreateMarshaler(global::Microsoft.UI.Xaml.Input.PointerEventHandler handler) =>
        global::ABI.Microsoft.UI.Xaml.Input.PointerEventHandler.CreateMarshaler2(handler);

        protected override global::ABI.WinRT.Interop.EventSourceState<global::Microsoft.UI.Xaml.Input.PointerEventHandler> CreateEventSourceState() =>
        new EventState(ObjectReference.ThisPtr, Index);

        [global::WinRT.WinRTExposedType]
        private sealed class EventState : global::ABI.WinRT.Interop.EventSourceState<global::Microsoft.UI.Xaml.Input.PointerEventHandler>
        {
            public EventState(System.IntPtr obj, int index)
            : base(obj, index)
            {
            }

            protected override global::Microsoft.UI.Xaml.Input.PointerEventHandler GetEventInvoke()
            {
                return (object sender, global::Microsoft.UI.Xaml.Input.PointerRoutedEventArgs e) =>
                {
                    var targetDelegate = TargetDelegate;
                    if (targetDelegate is null)
                    {
                        return ;
                    }
                    targetDelegate.Invoke(sender, e);
                };
            }
        }
    }

    internal sealed unsafe class _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_UI_Input_InputLightDismissAction__global__Microsoft_UI_Input_InputLightDismissEventArgs_ : global::ABI.WinRT.Interop.EventSource<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Input.InputLightDismissAction, global::Microsoft.UI.Input.InputLightDismissEventArgs>>
    {
        private static readonly bool initialized = global::WinRT.GenericTypeInstantiations.Windows_Foundation_TypedEventHandler_2_Microsoft_UI_Input_InputLightDismissAction__Microsoft_UI_Input_InputLightDismissEventArgs.EnsureInitialized();

        internal _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_UI_Input_InputLightDismissAction__global__Microsoft_UI_Input_InputLightDismissEventArgs_(IObjectReference obj,
        delegate* unmanaged[Stdcall]<System.IntPtr, System.IntPtr, WinRT.EventRegistrationToken*, int> addHandler,
        delegate* unmanaged[Stdcall]<System.IntPtr, WinRT.EventRegistrationToken, int> removeHandler, int index) : base(obj, addHandler, removeHandler, index)
        {
            _ = initialized;
        }

        protected override ObjectReferenceValue CreateMarshaler(global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Input.InputLightDismissAction, global::Microsoft.UI.Input.InputLightDismissEventArgs> handler) =>
        global::ABI.Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Input.InputLightDismissAction, global::Microsoft.UI.Input.InputLightDismissEventArgs>.CreateMarshaler2(handler);

        protected override global::ABI.WinRT.Interop.EventSourceState<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Input.InputLightDismissAction, global::Microsoft.UI.Input.InputLightDismissEventArgs>> CreateEventSourceState() =>
        new EventState(ObjectReference.ThisPtr, Index);

        [global::WinRT.WinRTExposedType]
        private sealed class EventState : global::ABI.WinRT.Interop.EventSourceState<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Input.InputLightDismissAction, global::Microsoft.UI.Input.InputLightDismissEventArgs>>
        {
            public EventState(System.IntPtr obj, int index)
            : base(obj, index)
            {
            }

            protected override global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Input.InputLightDismissAction, global::Microsoft.UI.Input.InputLightDismissEventArgs> GetEventInvoke()
            {
                return (global::Microsoft.UI.Input.InputLightDismissAction sender, global::Microsoft.UI.Input.InputLightDismissEventArgs args) =>
                {
                    var targetDelegate = TargetDelegate;
                    if (targetDelegate is null)
                    {
                        return ;
                    }
                    targetDelegate.Invoke(sender, args);
                };
            }
        }
    }

    internal sealed unsafe class _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_Web_WebView2_Core_CoreWebView2__global__Microsoft_Web_WebView2_Core_CoreWebView2WebMessageReceivedEventArgs_ : global::ABI.WinRT.Interop.EventSource<global::Windows.Foundation.TypedEventHandler<global::Microsoft.Web.WebView2.Core.CoreWebView2, global::Microsoft.Web.WebView2.Core.CoreWebView2WebMessageReceivedEventArgs>>
    {
        private static readonly bool initialized = global::WinRT.GenericTypeInstantiations.Windows_Foundation_TypedEventHandler_2_Microsoft_Web_WebView2_Core_CoreWebView2__Microsoft_Web_WebView2_Core_CoreWebView2WebMessageReceivedEventArgs.EnsureInitialized();

        internal _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_Web_WebView2_Core_CoreWebView2__global__Microsoft_Web_WebView2_Core_CoreWebView2WebMessageReceivedEventArgs_(IObjectReference obj,
        delegate* unmanaged[Stdcall]<System.IntPtr, System.IntPtr, WinRT.EventRegistrationToken*, int> addHandler,
        delegate* unmanaged[Stdcall]<System.IntPtr, WinRT.EventRegistrationToken, int> removeHandler, int index) : base(obj, addHandler, removeHandler, index)
        {
            _ = initialized;
        }

        protected override ObjectReferenceValue CreateMarshaler(global::Windows.Foundation.TypedEventHandler<global::Microsoft.Web.WebView2.Core.CoreWebView2, global::Microsoft.Web.WebView2.Core.CoreWebView2WebMessageReceivedEventArgs> handler) =>
        global::ABI.Windows.Foundation.TypedEventHandler<global::Microsoft.Web.WebView2.Core.CoreWebView2, global::Microsoft.Web.WebView2.Core.CoreWebView2WebMessageReceivedEventArgs>.CreateMarshaler2(handler);

        protected override global::ABI.WinRT.Interop.EventSourceState<global::Windows.Foundation.TypedEventHandler<global::Microsoft.Web.WebView2.Core.CoreWebView2, global::Microsoft.Web.WebView2.Core.CoreWebView2WebMessageReceivedEventArgs>> CreateEventSourceState() =>
        new EventState(ObjectReference.ThisPtr, Index);

        [global::WinRT.WinRTExposedType]
        private sealed class EventState : global::ABI.WinRT.Interop.EventSourceState<global::Windows.Foundation.TypedEventHandler<global::Microsoft.Web.WebView2.Core.CoreWebView2, global::Microsoft.Web.WebView2.Core.CoreWebView2WebMessageReceivedEventArgs>>
        {
            public EventState(System.IntPtr obj, int index)
            : base(obj, index)
            {
            }

            protected override global::Windows.Foundation.TypedEventHandler<global::Microsoft.Web.WebView2.Core.CoreWebView2, global::Microsoft.Web.WebView2.Core.CoreWebView2WebMessageReceivedEventArgs> GetEventInvoke()
            {
                return (global::Microsoft.Web.WebView2.Core.CoreWebView2 sender, global::Microsoft.Web.WebView2.Core.CoreWebView2WebMessageReceivedEventArgs args) =>
                {
                    var targetDelegate = TargetDelegate;
                    if (targetDelegate is null)
                    {
                        return ;
                    }
                    targetDelegate.Invoke(sender, args);
                };
            }
        }
    }

    internal sealed unsafe class _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_UI_Xaml_Controls_TitleBar__object_ : global::ABI.WinRT.Interop.EventSource<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.TitleBar, object>>
    {
        private static readonly bool initialized = global::WinRT.GenericTypeInstantiations.Windows_Foundation_TypedEventHandler_2_Microsoft_UI_Xaml_Controls_TitleBar__object.EnsureInitialized();

        internal _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_UI_Xaml_Controls_TitleBar__object_(IObjectReference obj,
        delegate* unmanaged[Stdcall]<System.IntPtr, System.IntPtr, WinRT.EventRegistrationToken*, int> addHandler,
        delegate* unmanaged[Stdcall]<System.IntPtr, WinRT.EventRegistrationToken, int> removeHandler, int index) : base(obj, addHandler, removeHandler, index)
        {
            _ = initialized;
        }

        protected override ObjectReferenceValue CreateMarshaler(global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.TitleBar, object> handler) =>
        global::ABI.Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.TitleBar, object>.CreateMarshaler2(handler);

        protected override global::ABI.WinRT.Interop.EventSourceState<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.TitleBar, object>> CreateEventSourceState() =>
        new EventState(ObjectReference.ThisPtr, Index);

        [global::WinRT.WinRTExposedType]
        private sealed class EventState : global::ABI.WinRT.Interop.EventSourceState<global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.TitleBar, object>>
        {
            public EventState(System.IntPtr obj, int index)
            : base(obj, index)
            {
            }

            protected override global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.TitleBar, object> GetEventInvoke()
            {
                return (global::Microsoft.UI.Xaml.Controls.TitleBar sender, object args) =>
                {
                    var targetDelegate = TargetDelegate;
                    if (targetDelegate is null)
                    {
                        return ;
                    }
                    targetDelegate.Invoke(sender, args);
                };
            }
        }
    }

}