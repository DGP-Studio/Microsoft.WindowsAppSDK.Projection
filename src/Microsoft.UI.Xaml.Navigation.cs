//------------------------------------------------------------------------------
// <auto-generated>
//     This file was generated by cswinrt.exe version 2.2.0.241111.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Diagnostics;
using System.Diagnostics.CodeAnalysis;
using System.Linq.Expressions;
using System.Reflection;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;
using WinRT;
using WinRT.Interop;


#pragma warning disable 0169 // warning CS0169: The field '...' is never used
#pragma warning disable 0649 // warning CS0169: Field '...' is never assigned to
#pragma warning disable CA2207, CA1063, CA1033, CA1001, CA2213

namespace Microsoft.UI.Xaml.Navigation
{
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")]
    [global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Navigation.FrameNavigationOptions))]
    [global::ABI.Microsoft.UI.Xaml.Navigation.FrameNavigationOptionsRcwFactory]
    [global::WinRT.ProjectedRuntimeClass(typeof(IFrameNavigationOptions))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    public class FrameNavigationOptions : global::System.Runtime.InteropServices.ICustomQueryInterface, IWinRTObject, IEquatable<FrameNavigationOptions>
    {
        private IntPtr ThisPtr => _inner == null ? (((IWinRTObject)this).NativeObject).ThisPtr : _inner.ThisPtr;

        private readonly IObjectReference _inner = null;




        private volatile IObjectReference ___objRef_global__Microsoft_UI_Xaml_Navigation_IFrameNavigationOptions;
        private IObjectReference Make___objRef_global__Microsoft_UI_Xaml_Navigation_IFrameNavigationOptions()
        {
            global::System.Threading.Interlocked.CompareExchange(ref ___objRef_global__Microsoft_UI_Xaml_Navigation_IFrameNavigationOptions, ((IWinRTObject)this).NativeObject.As<IUnknownVftbl>(global::ABI.Microsoft.UI.Xaml.Navigation.IFrameNavigationOptionsMethods.IID), null);
            return ___objRef_global__Microsoft_UI_Xaml_Navigation_IFrameNavigationOptions;
        }
        private IObjectReference _objRef_global__Microsoft_UI_Xaml_Navigation_IFrameNavigationOptions => ___objRef_global__Microsoft_UI_Xaml_Navigation_IFrameNavigationOptions ?? Make___objRef_global__Microsoft_UI_Xaml_Navigation_IFrameNavigationOptions();



        private static class _IFrameNavigationOptionsFactoryMethods
        {
            public static unsafe IntPtr CreateInstance(IObjectReference _obj, object baseInterface, out IntPtr innerInterface)
            {
                var ThisPtr = _obj.ThisPtr;

                ObjectReferenceValue __baseInterface = default;
                IntPtr __innerInterface = default;
                IntPtr __retval = default;
                try
                {
                    __baseInterface = MarshalInspectable<object>.CreateMarshaler2(baseInterface);
                    global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, IntPtr*, IntPtr*, int>**)ThisPtr)[6](ThisPtr, MarshalInspectable<object>.GetAbi(__baseInterface), &__innerInterface, &__retval));
                    global::System.GC.KeepAlive(_obj);
                    innerInterface = __innerInterface;
                    return __retval;
                }
                finally
                {
                    MarshalInspectable<object>.DisposeMarshaler(__baseInterface);
                }
            }
        }

        private static volatile IObjectReference ___objRef_global__Microsoft_UI_Xaml_Navigation_IFrameNavigationOptionsFactory;
        private static IObjectReference _objRef_global__Microsoft_UI_Xaml_Navigation_IFrameNavigationOptionsFactory
        {
            get
            { 
                var factory = ___objRef_global__Microsoft_UI_Xaml_Navigation_IFrameNavigationOptionsFactory;
                if (factory != null && factory.IsInCurrentContext)
                {
                    return factory;
                }
                else
                {
                    return ___objRef_global__Microsoft_UI_Xaml_Navigation_IFrameNavigationOptionsFactory = ActivationFactory.Get("Microsoft.UI.Xaml.Navigation.FrameNavigationOptions", global::ABI.Microsoft.UI.Xaml.Navigation.IFrameNavigationOptionsFactoryMethods.IID);
                }
            }
        }

        public FrameNavigationOptions()
        {
            bool isAggregation = this.GetType() != typeof(FrameNavigationOptions);
            object baseInspectable = isAggregation ? this : null;
            IntPtr composed = _IFrameNavigationOptionsFactoryMethods.CreateInstance(_objRef_global__Microsoft_UI_Xaml_Navigation_IFrameNavigationOptionsFactory,  baseInspectable, out IntPtr inner);
            try
            {
                ComWrappersHelper.Init(isAggregation, this, composed, inner, global::ABI.Microsoft.UI.Xaml.Navigation.IFrameNavigationOptionsMethods.IID, out _inner);

            }
            finally
            {
                Marshal.Release(inner);   
            }
        }

        public static FrameNavigationOptions FromAbi(IntPtr thisPtr)
        {
            if (thisPtr == IntPtr.Zero) return null;
            return MarshalInspectable<FrameNavigationOptions>.FromAbi(thisPtr);
        }

        protected internal FrameNavigationOptions(IObjectReference objRef)
        {
            _inner = objRef.As(global::ABI.Microsoft.UI.Xaml.Navigation.IFrameNavigationOptionsMethods.IID);

        }


        public static bool operator ==(FrameNavigationOptions x, FrameNavigationOptions y) => (x?.ThisPtr ?? IntPtr.Zero) == (y?.ThisPtr ?? IntPtr.Zero);
        public static bool operator !=(FrameNavigationOptions x, FrameNavigationOptions y) => !(x == y);
        public bool Equals(FrameNavigationOptions other) => this == other;
        public override bool Equals(object obj) => obj is FrameNavigationOptions that && this == that;
        public override int GetHashCode() => ThisPtr.GetHashCode();


        protected FrameNavigationOptions(global::WinRT.DerivedComposed _)
        {

        }
        bool IWinRTObject.HasUnwrappableNativeObject => this.GetType() == typeof(FrameNavigationOptions);
        IObjectReference IWinRTObject.NativeObject => _inner;
        private volatile global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> _queryInterfaceCache;
        private global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> MakeQueryInterfaceCache()
        {
            global::System.Threading.Interlocked.CompareExchange(ref _queryInterfaceCache, new global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference>(), null); 
            return _queryInterfaceCache;
        }
        global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> IWinRTObject.QueryInterfaceCache => _queryInterfaceCache ?? MakeQueryInterfaceCache();
        private volatile global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> _additionalTypeData;
        private global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> MakeAdditionalTypeData()
        {
            global::System.Threading.Interlocked.CompareExchange(ref _additionalTypeData, new global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object>(), null); 
            return _additionalTypeData;
        }
        global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> IWinRTObject.AdditionalTypeData => _additionalTypeData ?? MakeAdditionalTypeData();

        private struct InterfaceTag<I>{};


        public bool IsNavigationStackEnabled
        {
            get => global::ABI.Microsoft.UI.Xaml.Navigation.IFrameNavigationOptionsMethods.get_IsNavigationStackEnabled(_objRef_global__Microsoft_UI_Xaml_Navigation_IFrameNavigationOptions);
            set => global::ABI.Microsoft.UI.Xaml.Navigation.IFrameNavigationOptionsMethods.set_IsNavigationStackEnabled(_objRef_global__Microsoft_UI_Xaml_Navigation_IFrameNavigationOptions, value);
        }

        public global::Microsoft.UI.Xaml.Media.Animation.NavigationTransitionInfo TransitionInfoOverride
        {
            get => global::ABI.Microsoft.UI.Xaml.Navigation.IFrameNavigationOptionsMethods.get_TransitionInfoOverride(_objRef_global__Microsoft_UI_Xaml_Navigation_IFrameNavigationOptions);
            set => global::ABI.Microsoft.UI.Xaml.Navigation.IFrameNavigationOptionsMethods.set_TransitionInfoOverride(_objRef_global__Microsoft_UI_Xaml_Navigation_IFrameNavigationOptions, value);
        }

        protected virtual bool IsOverridableInterface(Guid iid) => false;

        global::System.Runtime.InteropServices.CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(ref Guid iid, out IntPtr ppv)
        {
            ppv = IntPtr.Zero;
            if (IsOverridableInterface(iid) || global::WinRT.Interop.IID.IID_IInspectable == iid)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
            }

            if (((IWinRTObject)this).NativeObject.TryAs(iid, out ppv) >= 0)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.Handled;
            }

            return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
        }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")][Guid("390DE593-14CF-5312-AF99-6CD8D59EC5D5")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Navigation.IFrameNavigationOptions))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    internal interface IFrameNavigationOptions
    {
        bool IsNavigationStackEnabled { get; set; }
        global::Microsoft.UI.Xaml.Media.Animation.NavigationTransitionInfo TransitionInfoOverride { get; set; }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")][Guid("DDF3F748-7127-5CEE-9F79-AC281A234632")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Navigation.IFrameNavigationOptionsFactory))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    internal interface IFrameNavigationOptionsFactory
    {
        FrameNavigationOptions CreateInstance(object baseInterface, out object innerInterface);
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")][Guid("172FDE12-E06F-5DF6-930E-5FACF7B3FBE7")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Navigation.INavigatingCancelEventArgs))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    internal interface INavigatingCancelEventArgs
    {
        bool Cancel { get; set; }
        NavigationMode NavigationMode { get; }
        global::Microsoft.UI.Xaml.Media.Animation.NavigationTransitionInfo NavigationTransitionInfo { get; }
        object Parameter { get; }
        global::System.Type SourcePageType { get; }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")][Guid("876B70B4-2923-5785-9CEA-2E44AA0761BD")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Navigation.INavigationEventArgs))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    internal interface INavigationEventArgs
    {
        object Content { get; }
        NavigationMode NavigationMode { get; }
        global::Microsoft.UI.Xaml.Media.Animation.NavigationTransitionInfo NavigationTransitionInfo { get; }
        object Parameter { get; }
        global::System.Type SourcePageType { get; }
        global::System.Uri Uri { get; set; }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")][Guid("F808F9A0-130C-5974-87F8-4433271A35A9")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Navigation.INavigationFailedEventArgs))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    internal interface INavigationFailedEventArgs
    {
        global::System.Exception Exception { get; }
        bool Handled { get; set; }
        global::System.Type SourcePageType { get; }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")][Guid("D591F56E-4262-5C91-9D79-29165CD82100")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Navigation.IPageStackEntry))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    internal interface IPageStackEntry
    {
        global::Microsoft.UI.Xaml.Media.Animation.NavigationTransitionInfo NavigationTransitionInfo { get; }
        object Parameter { get; }
        global::System.Type SourcePageType { get; }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")][Guid("7E5A9469-6108-5E92-A499-5EE9F065A68A")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Navigation.IPageStackEntryFactory))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    internal interface IPageStackEntryFactory
    {
        PageStackEntry CreateInstance(global::System.Type sourcePageType, object parameter, global::Microsoft.UI.Xaml.Media.Animation.NavigationTransitionInfo navigationTransitionInfo);
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")][Guid("2F1D4CB7-923B-59BB-BFC4-750933F28385")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Navigation.IPageStackEntryStatics))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    internal interface IPageStackEntryStatics
    {
        global::Microsoft.UI.Xaml.DependencyProperty SourcePageTypeProperty { get; }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Navigation.NavigatedEventHandler))][global::WinRT.WinRTExposedType(typeof(global::ABI.Microsoft.UI.Xaml.Navigation.NavigatedEventHandlerWinRTTypeDetails))][global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    public delegate void NavigatedEventHandler(object sender, NavigationEventArgs e);
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")]
    [global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Navigation.NavigatingCancelEventArgs))]
    [global::ABI.Microsoft.UI.Xaml.Navigation.NavigatingCancelEventArgsRcwFactory]
    [global::WinRT.ProjectedRuntimeClass(typeof(INavigatingCancelEventArgs))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    public sealed class NavigatingCancelEventArgs : global::System.Runtime.InteropServices.ICustomQueryInterface, IWinRTObject, IEquatable<NavigatingCancelEventArgs>
    {
        private IntPtr ThisPtr => _inner == null ? (((IWinRTObject)this).NativeObject).ThisPtr : _inner.ThisPtr;

        private readonly IObjectReference _inner = null;



        private IObjectReference _objRef_global__Microsoft_UI_Xaml_Navigation_INavigatingCancelEventArgs => _inner;


        public static NavigatingCancelEventArgs FromAbi(IntPtr thisPtr)
        {
            if (thisPtr == IntPtr.Zero) return null;
            return MarshalInspectable<NavigatingCancelEventArgs>.FromAbi(thisPtr);
        }

        internal NavigatingCancelEventArgs(IObjectReference objRef)
        {
            _inner = objRef.As(global::ABI.Microsoft.UI.Xaml.Navigation.INavigatingCancelEventArgsMethods.IID);

        }


        public static bool operator ==(NavigatingCancelEventArgs x, NavigatingCancelEventArgs y) => (x?.ThisPtr ?? IntPtr.Zero) == (y?.ThisPtr ?? IntPtr.Zero);
        public static bool operator !=(NavigatingCancelEventArgs x, NavigatingCancelEventArgs y) => !(x == y);
        public bool Equals(NavigatingCancelEventArgs other) => this == other;
        public override bool Equals(object obj) => obj is NavigatingCancelEventArgs that && this == that;
        public override int GetHashCode() => ThisPtr.GetHashCode();


        bool IWinRTObject.HasUnwrappableNativeObject => true;
        IObjectReference IWinRTObject.NativeObject => _inner;
        private volatile global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> _queryInterfaceCache;
        private global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> MakeQueryInterfaceCache()
        {
            global::System.Threading.Interlocked.CompareExchange(ref _queryInterfaceCache, new global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference>(), null); 
            return _queryInterfaceCache;
        }
        global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> IWinRTObject.QueryInterfaceCache => _queryInterfaceCache ?? MakeQueryInterfaceCache();
        private volatile global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> _additionalTypeData;
        private global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> MakeAdditionalTypeData()
        {
            global::System.Threading.Interlocked.CompareExchange(ref _additionalTypeData, new global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object>(), null); 
            return _additionalTypeData;
        }
        global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> IWinRTObject.AdditionalTypeData => _additionalTypeData ?? MakeAdditionalTypeData();

        private struct InterfaceTag<I>{};


        public bool Cancel
        {
            get => global::ABI.Microsoft.UI.Xaml.Navigation.INavigatingCancelEventArgsMethods.get_Cancel(_objRef_global__Microsoft_UI_Xaml_Navigation_INavigatingCancelEventArgs);
            set => global::ABI.Microsoft.UI.Xaml.Navigation.INavigatingCancelEventArgsMethods.set_Cancel(_objRef_global__Microsoft_UI_Xaml_Navigation_INavigatingCancelEventArgs, value);
        }

        public NavigationMode NavigationMode => global::ABI.Microsoft.UI.Xaml.Navigation.INavigatingCancelEventArgsMethods.get_NavigationMode(_objRef_global__Microsoft_UI_Xaml_Navigation_INavigatingCancelEventArgs);

        public global::Microsoft.UI.Xaml.Media.Animation.NavigationTransitionInfo NavigationTransitionInfo => global::ABI.Microsoft.UI.Xaml.Navigation.INavigatingCancelEventArgsMethods.get_NavigationTransitionInfo(_objRef_global__Microsoft_UI_Xaml_Navigation_INavigatingCancelEventArgs);

        public object Parameter => global::ABI.Microsoft.UI.Xaml.Navigation.INavigatingCancelEventArgsMethods.get_Parameter(_objRef_global__Microsoft_UI_Xaml_Navigation_INavigatingCancelEventArgs);

        public global::System.Type SourcePageType => global::ABI.Microsoft.UI.Xaml.Navigation.INavigatingCancelEventArgsMethods.get_SourcePageType(_objRef_global__Microsoft_UI_Xaml_Navigation_INavigatingCancelEventArgs);

        private bool IsOverridableInterface(Guid iid) => false;

        global::System.Runtime.InteropServices.CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(ref Guid iid, out IntPtr ppv)
        {
            ppv = IntPtr.Zero;
            if (IsOverridableInterface(iid) || global::WinRT.Interop.IID.IID_IInspectable == iid)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
            }

            if (((IWinRTObject)this).NativeObject.TryAs(iid, out ppv) >= 0)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.Handled;
            }

            return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
        }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Navigation.NavigatingCancelEventHandler))][global::WinRT.WinRTExposedType(typeof(global::ABI.Microsoft.UI.Xaml.Navigation.NavigatingCancelEventHandlerWinRTTypeDetails))][global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    public delegate void NavigatingCancelEventHandler(object sender, NavigatingCancelEventArgs e);
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")][global::WinRT.WinRTExposedType(typeof(global::WinRT.EnumTypeDetails<NavigationCacheMode>))][global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    public enum NavigationCacheMode : int
    {
        Disabled = unchecked((int)0),
        Required = unchecked((int)0x1),
        Enabled = unchecked((int)0x2),
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")]
    [global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Navigation.NavigationEventArgs))]
    [global::ABI.Microsoft.UI.Xaml.Navigation.NavigationEventArgsRcwFactory]
    [global::WinRT.ProjectedRuntimeClass(typeof(INavigationEventArgs))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    public sealed class NavigationEventArgs : global::System.Runtime.InteropServices.ICustomQueryInterface, IWinRTObject, IEquatable<NavigationEventArgs>
    {
        private IntPtr ThisPtr => _inner == null ? (((IWinRTObject)this).NativeObject).ThisPtr : _inner.ThisPtr;

        private readonly IObjectReference _inner = null;



        private IObjectReference _objRef_global__Microsoft_UI_Xaml_Navigation_INavigationEventArgs => _inner;


        public static NavigationEventArgs FromAbi(IntPtr thisPtr)
        {
            if (thisPtr == IntPtr.Zero) return null;
            return MarshalInspectable<NavigationEventArgs>.FromAbi(thisPtr);
        }

        internal NavigationEventArgs(IObjectReference objRef)
        {
            _inner = objRef.As(global::ABI.Microsoft.UI.Xaml.Navigation.INavigationEventArgsMethods.IID);

        }


        public static bool operator ==(NavigationEventArgs x, NavigationEventArgs y) => (x?.ThisPtr ?? IntPtr.Zero) == (y?.ThisPtr ?? IntPtr.Zero);
        public static bool operator !=(NavigationEventArgs x, NavigationEventArgs y) => !(x == y);
        public bool Equals(NavigationEventArgs other) => this == other;
        public override bool Equals(object obj) => obj is NavigationEventArgs that && this == that;
        public override int GetHashCode() => ThisPtr.GetHashCode();


        bool IWinRTObject.HasUnwrappableNativeObject => true;
        IObjectReference IWinRTObject.NativeObject => _inner;
        private volatile global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> _queryInterfaceCache;
        private global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> MakeQueryInterfaceCache()
        {
            global::System.Threading.Interlocked.CompareExchange(ref _queryInterfaceCache, new global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference>(), null); 
            return _queryInterfaceCache;
        }
        global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> IWinRTObject.QueryInterfaceCache => _queryInterfaceCache ?? MakeQueryInterfaceCache();
        private volatile global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> _additionalTypeData;
        private global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> MakeAdditionalTypeData()
        {
            global::System.Threading.Interlocked.CompareExchange(ref _additionalTypeData, new global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object>(), null); 
            return _additionalTypeData;
        }
        global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> IWinRTObject.AdditionalTypeData => _additionalTypeData ?? MakeAdditionalTypeData();

        private struct InterfaceTag<I>{};


        public object Content => global::ABI.Microsoft.UI.Xaml.Navigation.INavigationEventArgsMethods.get_Content(_objRef_global__Microsoft_UI_Xaml_Navigation_INavigationEventArgs);

        public NavigationMode NavigationMode => global::ABI.Microsoft.UI.Xaml.Navigation.INavigationEventArgsMethods.get_NavigationMode(_objRef_global__Microsoft_UI_Xaml_Navigation_INavigationEventArgs);

        public global::Microsoft.UI.Xaml.Media.Animation.NavigationTransitionInfo NavigationTransitionInfo => global::ABI.Microsoft.UI.Xaml.Navigation.INavigationEventArgsMethods.get_NavigationTransitionInfo(_objRef_global__Microsoft_UI_Xaml_Navigation_INavigationEventArgs);

        public object Parameter => global::ABI.Microsoft.UI.Xaml.Navigation.INavigationEventArgsMethods.get_Parameter(_objRef_global__Microsoft_UI_Xaml_Navigation_INavigationEventArgs);

        public global::System.Type SourcePageType => global::ABI.Microsoft.UI.Xaml.Navigation.INavigationEventArgsMethods.get_SourcePageType(_objRef_global__Microsoft_UI_Xaml_Navigation_INavigationEventArgs);

        public global::System.Uri Uri
        {
            get => global::ABI.Microsoft.UI.Xaml.Navigation.INavigationEventArgsMethods.get_Uri(_objRef_global__Microsoft_UI_Xaml_Navigation_INavigationEventArgs);
            set => global::ABI.Microsoft.UI.Xaml.Navigation.INavigationEventArgsMethods.set_Uri(_objRef_global__Microsoft_UI_Xaml_Navigation_INavigationEventArgs, value);
        }

        private bool IsOverridableInterface(Guid iid) => false;

        global::System.Runtime.InteropServices.CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(ref Guid iid, out IntPtr ppv)
        {
            ppv = IntPtr.Zero;
            if (IsOverridableInterface(iid) || global::WinRT.Interop.IID.IID_IInspectable == iid)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
            }

            if (((IWinRTObject)this).NativeObject.TryAs(iid, out ppv) >= 0)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.Handled;
            }

            return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
        }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")]
    [global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Navigation.NavigationFailedEventArgs))]
    [global::ABI.Microsoft.UI.Xaml.Navigation.NavigationFailedEventArgsRcwFactory]
    [global::WinRT.ProjectedRuntimeClass(typeof(INavigationFailedEventArgs))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    public sealed class NavigationFailedEventArgs : global::System.Runtime.InteropServices.ICustomQueryInterface, IWinRTObject, IEquatable<NavigationFailedEventArgs>
    {
        private IntPtr ThisPtr => _inner == null ? (((IWinRTObject)this).NativeObject).ThisPtr : _inner.ThisPtr;

        private readonly IObjectReference _inner = null;



        private IObjectReference _objRef_global__Microsoft_UI_Xaml_Navigation_INavigationFailedEventArgs => _inner;


        public static NavigationFailedEventArgs FromAbi(IntPtr thisPtr)
        {
            if (thisPtr == IntPtr.Zero) return null;
            return MarshalInspectable<NavigationFailedEventArgs>.FromAbi(thisPtr);
        }

        internal NavigationFailedEventArgs(IObjectReference objRef)
        {
            _inner = objRef.As(global::ABI.Microsoft.UI.Xaml.Navigation.INavigationFailedEventArgsMethods.IID);

        }


        public static bool operator ==(NavigationFailedEventArgs x, NavigationFailedEventArgs y) => (x?.ThisPtr ?? IntPtr.Zero) == (y?.ThisPtr ?? IntPtr.Zero);
        public static bool operator !=(NavigationFailedEventArgs x, NavigationFailedEventArgs y) => !(x == y);
        public bool Equals(NavigationFailedEventArgs other) => this == other;
        public override bool Equals(object obj) => obj is NavigationFailedEventArgs that && this == that;
        public override int GetHashCode() => ThisPtr.GetHashCode();


        bool IWinRTObject.HasUnwrappableNativeObject => true;
        IObjectReference IWinRTObject.NativeObject => _inner;
        private volatile global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> _queryInterfaceCache;
        private global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> MakeQueryInterfaceCache()
        {
            global::System.Threading.Interlocked.CompareExchange(ref _queryInterfaceCache, new global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference>(), null); 
            return _queryInterfaceCache;
        }
        global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> IWinRTObject.QueryInterfaceCache => _queryInterfaceCache ?? MakeQueryInterfaceCache();
        private volatile global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> _additionalTypeData;
        private global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> MakeAdditionalTypeData()
        {
            global::System.Threading.Interlocked.CompareExchange(ref _additionalTypeData, new global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object>(), null); 
            return _additionalTypeData;
        }
        global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> IWinRTObject.AdditionalTypeData => _additionalTypeData ?? MakeAdditionalTypeData();

        private struct InterfaceTag<I>{};


        public global::System.Exception Exception => global::ABI.Microsoft.UI.Xaml.Navigation.INavigationFailedEventArgsMethods.get_Exception(_objRef_global__Microsoft_UI_Xaml_Navigation_INavigationFailedEventArgs);

        public bool Handled
        {
            get => global::ABI.Microsoft.UI.Xaml.Navigation.INavigationFailedEventArgsMethods.get_Handled(_objRef_global__Microsoft_UI_Xaml_Navigation_INavigationFailedEventArgs);
            set => global::ABI.Microsoft.UI.Xaml.Navigation.INavigationFailedEventArgsMethods.set_Handled(_objRef_global__Microsoft_UI_Xaml_Navigation_INavigationFailedEventArgs, value);
        }

        public global::System.Type SourcePageType => global::ABI.Microsoft.UI.Xaml.Navigation.INavigationFailedEventArgsMethods.get_SourcePageType(_objRef_global__Microsoft_UI_Xaml_Navigation_INavigationFailedEventArgs);

        private bool IsOverridableInterface(Guid iid) => false;

        global::System.Runtime.InteropServices.CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(ref Guid iid, out IntPtr ppv)
        {
            ppv = IntPtr.Zero;
            if (IsOverridableInterface(iid) || global::WinRT.Interop.IID.IID_IInspectable == iid)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
            }

            if (((IWinRTObject)this).NativeObject.TryAs(iid, out ppv) >= 0)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.Handled;
            }

            return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
        }
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Navigation.NavigationFailedEventHandler))][global::WinRT.WinRTExposedType(typeof(global::ABI.Microsoft.UI.Xaml.Navigation.NavigationFailedEventHandlerWinRTTypeDetails))][global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    public delegate void NavigationFailedEventHandler(object sender, NavigationFailedEventArgs e);
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")][global::WinRT.WinRTExposedType(typeof(global::WinRT.EnumTypeDetails<NavigationMode>))][global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    public enum NavigationMode : int
    {
        New = unchecked((int)0),
        Back = unchecked((int)0x1),
        Forward = unchecked((int)0x2),
        Refresh = unchecked((int)0x3),
    }
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Navigation.NavigationStoppedEventHandler))][global::WinRT.WinRTExposedType(typeof(global::ABI.Microsoft.UI.Xaml.Navigation.NavigationStoppedEventHandlerWinRTTypeDetails))][global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    public delegate void NavigationStoppedEventHandler(object sender, NavigationEventArgs e);
    [global::WinRT.WindowsRuntimeType("Microsoft.UI.Xaml")]
    [global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Microsoft.UI.Xaml.Navigation.PageStackEntry))]
    [global::ABI.Microsoft.UI.Xaml.Navigation.PageStackEntryRcwFactory]
    [global::WinRT.ProjectedRuntimeClass(typeof(IPageStackEntry))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Microsoft.UI.Xaml.WinUIContract), 65536u)]
    public sealed class PageStackEntry : global::Microsoft.UI.Xaml.DependencyObject, global::System.Runtime.InteropServices.ICustomQueryInterface, IWinRTObject, IEquatable<PageStackEntry>
    {
        private IntPtr ThisPtr => _inner == null ? (((IWinRTObject)this).NativeObject).ThisPtr : _inner.ThisPtr;

        private readonly IObjectReference _inner = null;



        private IObjectReference _objRef_global__Microsoft_UI_Xaml_Navigation_IPageStackEntry => _inner;


        private static class _IPageStackEntryFactoryMethods
        {
            public static unsafe IntPtr CreateInstance(IObjectReference _obj, global::System.Type sourcePageType, object parameter, global::Microsoft.UI.Xaml.Media.Animation.NavigationTransitionInfo navigationTransitionInfo)
            {
                var ThisPtr = _obj.ThisPtr;

                ObjectReferenceValue __parameter = default;
                ObjectReferenceValue __navigationTransitionInfo = default;
                IntPtr __retval = default;
                try
                {
                    __parameter = MarshalInspectable<object>.CreateMarshaler2(parameter);
                    __navigationTransitionInfo = global::ABI.Microsoft.UI.Xaml.Media.Animation.NavigationTransitionInfo.CreateMarshaler2(navigationTransitionInfo);
                    global::ABI.System.Type.Pinnable __sourcePageType = new(sourcePageType);
                    fixed(void* ___sourcePageType = __sourcePageType)
                    {
                        global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::ABI.System.Type, IntPtr, IntPtr, IntPtr*, int>**)ThisPtr)[6](ThisPtr, global::ABI.System.Type.GetAbi(ref __sourcePageType), MarshalInspectable<object>.GetAbi(__parameter), MarshalInspectable<object>.GetAbi(__navigationTransitionInfo), &__retval));
                        global::System.GC.KeepAlive(_obj);
                        return __retval;
                    }
                }
                finally
                {
                    MarshalInspectable<object>.DisposeMarshaler(__parameter);
                    MarshalInspectable<object>.DisposeMarshaler(__navigationTransitionInfo);
                }
            }
        }

        private static volatile IObjectReference ___objRef_global__Microsoft_UI_Xaml_Navigation_IPageStackEntryFactory;
        private static IObjectReference _objRef_global__Microsoft_UI_Xaml_Navigation_IPageStackEntryFactory
        {
            get
            { 
                var factory = ___objRef_global__Microsoft_UI_Xaml_Navigation_IPageStackEntryFactory;
                if (factory != null && factory.IsInCurrentContext)
                {
                    return factory;
                }
                else
                {
                    return ___objRef_global__Microsoft_UI_Xaml_Navigation_IPageStackEntryFactory = ActivationFactory.Get("Microsoft.UI.Xaml.Navigation.PageStackEntry", global::ABI.Microsoft.UI.Xaml.Navigation.IPageStackEntryFactoryMethods.IID);
                }
            }
        }

        public PageStackEntry(global::System.Type sourcePageType, object parameter, global::Microsoft.UI.Xaml.Media.Animation.NavigationTransitionInfo navigationTransitionInfo) :base(global::WinRT.DerivedComposed.Instance)
        { 
        IntPtr ptr = (_IPageStackEntryFactoryMethods.CreateInstance(_objRef_global__Microsoft_UI_Xaml_Navigation_IPageStackEntryFactory, sourcePageType, parameter, navigationTransitionInfo)); 
        try 
        { 
        _inner = ComWrappersSupport.GetObjectReferenceForInterface(ptr, global::ABI.Microsoft.UI.Xaml.Navigation.IPageStackEntryMethods.IID, false); 

        } 
        finally 
        { 
        MarshalInspectable<object>.DisposeAbi(ptr); 
        }

        ComWrappersSupport.RegisterObjectForInterface(this, ThisPtr);
        ComWrappersHelper.Init(_inner, false);
        }

        public static I As<I>() => ActivationFactory.Get("Microsoft.UI.Xaml.Navigation.PageStackEntry").AsInterface<I>();

        private static volatile IObjectReference ___objRef_global__Microsoft_UI_Xaml_Navigation_IPageStackEntryStatics;
        private static IObjectReference _objRef_global__Microsoft_UI_Xaml_Navigation_IPageStackEntryStatics
        {
            get
            { 
                var factory = ___objRef_global__Microsoft_UI_Xaml_Navigation_IPageStackEntryStatics;
                if (factory != null && factory.IsInCurrentContext)
                {
                    return factory;
                }
                else
                {
                    return ___objRef_global__Microsoft_UI_Xaml_Navigation_IPageStackEntryStatics = ActivationFactory.Get("Microsoft.UI.Xaml.Navigation.PageStackEntry", global::ABI.Microsoft.UI.Xaml.Navigation.IPageStackEntryStaticsMethods.IID);
                }
            }
        }

        public static global::Microsoft.UI.Xaml.DependencyProperty SourcePageTypeProperty => global::ABI.Microsoft.UI.Xaml.Navigation.IPageStackEntryStaticsMethods.get_SourcePageTypeProperty(_objRef_global__Microsoft_UI_Xaml_Navigation_IPageStackEntryStatics);

        public static new PageStackEntry FromAbi(IntPtr thisPtr)
        {
            if (thisPtr == IntPtr.Zero) return null;
            return MarshalInspectable<PageStackEntry>.FromAbi(thisPtr);
        }

        internal PageStackEntry(IObjectReference objRef)
            : base(global::WinRT.DerivedComposed.Instance)

        {
            _inner = objRef.As(global::ABI.Microsoft.UI.Xaml.Navigation.IPageStackEntryMethods.IID);

        }


        public static bool operator ==(PageStackEntry x, PageStackEntry y) => (x?.ThisPtr ?? IntPtr.Zero) == (y?.ThisPtr ?? IntPtr.Zero);
        public static bool operator !=(PageStackEntry x, PageStackEntry y) => !(x == y);
        public bool Equals(PageStackEntry other) => this == other;
        public override bool Equals(object obj) => obj is PageStackEntry that && this == that;
        public override int GetHashCode() => ThisPtr.GetHashCode();


        bool IWinRTObject.HasUnwrappableNativeObject => true;
        IObjectReference IWinRTObject.NativeObject => _inner;

        private struct InterfaceTag<I>{};


        public global::Microsoft.UI.Xaml.Media.Animation.NavigationTransitionInfo NavigationTransitionInfo => global::ABI.Microsoft.UI.Xaml.Navigation.IPageStackEntryMethods.get_NavigationTransitionInfo(_objRef_global__Microsoft_UI_Xaml_Navigation_IPageStackEntry);

        public object Parameter => global::ABI.Microsoft.UI.Xaml.Navigation.IPageStackEntryMethods.get_Parameter(_objRef_global__Microsoft_UI_Xaml_Navigation_IPageStackEntry);

        public global::System.Type SourcePageType => global::ABI.Microsoft.UI.Xaml.Navigation.IPageStackEntryMethods.get_SourcePageType(_objRef_global__Microsoft_UI_Xaml_Navigation_IPageStackEntry);

        protected override bool IsOverridableInterface(Guid iid) => base.IsOverridableInterface(iid);

        global::System.Runtime.InteropServices.CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(ref Guid iid, out IntPtr ppv)
        {
            ppv = IntPtr.Zero;
            if (IsOverridableInterface(iid) || global::WinRT.Interop.IID.IID_IInspectable == iid)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
            }

            if (((IWinRTObject)this).NativeObject.TryAs(iid, out ppv) >= 0)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.Handled;
            }

            return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
        }
    }
}

#pragma warning disable CA1416
namespace ABI.Microsoft.UI.Xaml.Navigation
{
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    public struct FrameNavigationOptions
    {

        public static IObjectReference CreateMarshaler(global::Microsoft.UI.Xaml.Navigation.FrameNavigationOptions obj) => obj is null ? null : MarshalInspectable<global::Microsoft.UI.Xaml.Navigation.FrameNavigationOptions>.CreateMarshaler<IUnknownVftbl>(obj, global::ABI.Microsoft.UI.Xaml.Navigation.IFrameNavigationOptionsMethods.IID);
        public static ObjectReferenceValue CreateMarshaler2(global::Microsoft.UI.Xaml.Navigation.FrameNavigationOptions obj) => MarshalInspectable<object>.CreateMarshaler2(obj, global::ABI.Microsoft.UI.Xaml.Navigation.IFrameNavigationOptionsMethods.IID);
        public static IntPtr GetAbi(IObjectReference value) => value is null ? IntPtr.Zero : MarshalInterfaceHelper<object>.GetAbi(value);
        public static global::Microsoft.UI.Xaml.Navigation.FrameNavigationOptions FromAbi(IntPtr thisPtr) => global::Microsoft.UI.Xaml.Navigation.FrameNavigationOptions.FromAbi(thisPtr);
        public static IntPtr FromManaged(global::Microsoft.UI.Xaml.Navigation.FrameNavigationOptions obj) => obj is null ? IntPtr.Zero : CreateMarshaler2(obj).Detach();
        public static unsafe MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Navigation.FrameNavigationOptions>.MarshalerArray CreateMarshalerArray(global::Microsoft.UI.Xaml.Navigation.FrameNavigationOptions[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Navigation.FrameNavigationOptions>.CreateMarshalerArray2(array, (o) => CreateMarshaler2(o));
        public static (int length, IntPtr data) GetAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Navigation.FrameNavigationOptions>.GetAbiArray(box);
        public static unsafe global::Microsoft.UI.Xaml.Navigation.FrameNavigationOptions[] FromAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Navigation.FrameNavigationOptions>.FromAbiArray(box, FromAbi);
        public static void CopyAbiArray(global::Microsoft.UI.Xaml.Navigation.FrameNavigationOptions[] array, object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Navigation.FrameNavigationOptions>.CopyAbiArray(array, box, FromAbi);
        public static (int length, IntPtr data) FromManagedArray(global::Microsoft.UI.Xaml.Navigation.FrameNavigationOptions[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Navigation.FrameNavigationOptions>.FromManagedArray(array, (o) => FromManaged(o));
        public static void DisposeMarshaler(IObjectReference value) => MarshalInspectable<object>.DisposeMarshaler(value);
        public static void DisposeMarshalerArray(MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Navigation.FrameNavigationOptions>.MarshalerArray array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Navigation.FrameNavigationOptions>.DisposeMarshalerArray(array);
        public static void DisposeAbi(IntPtr abi) => MarshalInspectable<object>.DisposeAbi(abi);
        public static unsafe void DisposeAbiArray(object box) => MarshalInspectable<object>.DisposeAbiArray(box);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    internal sealed class FrameNavigationOptionsRcwFactoryAttribute : global::WinRT.WinRTImplementationTypeRcwFactoryAttribute
    {
        public override object CreateInstance(global::WinRT.IInspectable inspectable)
            => new global::Microsoft.UI.Xaml.Navigation.FrameNavigationOptions(inspectable.ObjRef);
    }
    internal static class IFrameNavigationOptionsMethods
    {

        internal static unsafe bool get_IsNavigationStackEnabled(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            byte __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, byte*, int>**)ThisPtr)[6](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval != 0;
        }
        internal static unsafe void set_IsNavigationStackEnabled(IObjectReference _obj, bool value)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, byte, int>**)ThisPtr)[7](ThisPtr, (byte)(value ? 1 : 0)));
            global::System.GC.KeepAlive(_obj);
        }

        internal static unsafe global::Microsoft.UI.Xaml.Media.Animation.NavigationTransitionInfo get_TransitionInfoOverride(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[8](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Xaml.Media.Animation.NavigationTransitionInfo.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.UI.Xaml.Media.Animation.NavigationTransitionInfo.DisposeAbi(__retval);
            }
        }
        internal static unsafe void set_TransitionInfoOverride(IObjectReference _obj, global::Microsoft.UI.Xaml.Media.Animation.NavigationTransitionInfo value)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __value = default;
            try
            {
                __value = global::ABI.Microsoft.UI.Xaml.Media.Animation.NavigationTransitionInfo.CreateMarshaler2(value);
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, int>**)ThisPtr)[9](ThisPtr, MarshalInspectable<object>.GetAbi(__value)));
                global::System.GC.KeepAlive(_obj);
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__value);
            }
        }



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0x93, 0xE5, 0xD, 0x39, 0xCF, 0x14, 0x12, 0x53, 0xAF, 0x99, 0x6C, 0xD8, 0xD5, 0x9E, 0xC5, 0xD5 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("390DE593-14CF-5312-AF99-6CD8D59EC5D5")]
    internal interface IFrameNavigationOptions : global::Microsoft.UI.Xaml.Navigation.IFrameNavigationOptions
    {
    }
    internal static class IFrameNavigationOptionsFactoryMethods
    {


        internal static unsafe global::Microsoft.UI.Xaml.Navigation.FrameNavigationOptions CreateInstance(IObjectReference _obj, object baseInterface, out object innerInterface)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __baseInterface = default;
            IntPtr __innerInterface = default;
            IntPtr __retval = default;
            try
            {
                __baseInterface = MarshalInspectable<object>.CreateMarshaler2(baseInterface);
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, IntPtr*, IntPtr*, int>**)ThisPtr)[6](ThisPtr, MarshalInspectable<object>.GetAbi(__baseInterface), &__innerInterface, &__retval));
                global::System.GC.KeepAlive(_obj);
                innerInterface = MarshalInspectable<object>.FromAbi(__innerInterface);
                return global::ABI.Microsoft.UI.Xaml.Navigation.FrameNavigationOptions.FromAbi(__retval);
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__baseInterface);
                MarshalInspectable<object>.DisposeAbi(__innerInterface);
                global::ABI.Microsoft.UI.Xaml.Navigation.FrameNavigationOptions.DisposeAbi(__retval);
            }
        }


        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0x48, 0xF7, 0xF3, 0xDD, 0x27, 0x71, 0xEE, 0x5C, 0x9F, 0x79, 0xAC, 0x28, 0x1A, 0x23, 0x46, 0x32 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("DDF3F748-7127-5CEE-9F79-AC281A234632")]
    internal interface IFrameNavigationOptionsFactory : global::Microsoft.UI.Xaml.Navigation.IFrameNavigationOptionsFactory
    {
    }
    internal static class INavigatingCancelEventArgsMethods
    {

        internal static unsafe bool get_Cancel(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            byte __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, byte*, int>**)ThisPtr)[6](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval != 0;
        }
        internal static unsafe void set_Cancel(IObjectReference _obj, bool value)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, byte, int>**)ThisPtr)[7](ThisPtr, (byte)(value ? 1 : 0)));
            global::System.GC.KeepAlive(_obj);
        }

        internal static unsafe global::Microsoft.UI.Xaml.Navigation.NavigationMode get_NavigationMode(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::Microsoft.UI.Xaml.Navigation.NavigationMode __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::Microsoft.UI.Xaml.Navigation.NavigationMode*, int>**)ThisPtr)[8](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }

        internal static unsafe global::Microsoft.UI.Xaml.Media.Animation.NavigationTransitionInfo get_NavigationTransitionInfo(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[11](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Xaml.Media.Animation.NavigationTransitionInfo.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.UI.Xaml.Media.Animation.NavigationTransitionInfo.DisposeAbi(__retval);
            }
        }

        internal static unsafe object get_Parameter(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[10](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return MarshalInspectable<object>.FromAbi(__retval);
            }
            finally
            {
                MarshalInspectable<object>.DisposeAbi(__retval);
            }
        }

        internal static unsafe global::System.Type get_SourcePageType(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::ABI.System.Type __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::ABI.System.Type*, int>**)ThisPtr)[9](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.System.Type.FromAbi(__retval);
            }
            finally
            {
                global::ABI.System.Type.DisposeAbi(__retval);
            }
        }



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0x12, 0xDE, 0x2F, 0x17, 0x6F, 0xE0, 0xF6, 0x5D, 0x93, 0xE, 0x5F, 0xAC, 0xF7, 0xB3, 0xFB, 0xE7 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("172FDE12-E06F-5DF6-930E-5FACF7B3FBE7")]
    internal interface INavigatingCancelEventArgs : global::Microsoft.UI.Xaml.Navigation.INavigatingCancelEventArgs
    {
    }
    internal static class INavigationEventArgsMethods
    {

        internal static unsafe object get_Content(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[6](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return MarshalInspectable<object>.FromAbi(__retval);
            }
            finally
            {
                MarshalInspectable<object>.DisposeAbi(__retval);
            }
        }

        internal static unsafe global::Microsoft.UI.Xaml.Navigation.NavigationMode get_NavigationMode(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::Microsoft.UI.Xaml.Navigation.NavigationMode __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::Microsoft.UI.Xaml.Navigation.NavigationMode*, int>**)ThisPtr)[10](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }

        internal static unsafe global::Microsoft.UI.Xaml.Media.Animation.NavigationTransitionInfo get_NavigationTransitionInfo(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[8](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Xaml.Media.Animation.NavigationTransitionInfo.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.UI.Xaml.Media.Animation.NavigationTransitionInfo.DisposeAbi(__retval);
            }
        }

        internal static unsafe object get_Parameter(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[7](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return MarshalInspectable<object>.FromAbi(__retval);
            }
            finally
            {
                MarshalInspectable<object>.DisposeAbi(__retval);
            }
        }

        internal static unsafe global::System.Type get_SourcePageType(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::ABI.System.Type __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::ABI.System.Type*, int>**)ThisPtr)[9](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.System.Type.FromAbi(__retval);
            }
            finally
            {
                global::ABI.System.Type.DisposeAbi(__retval);
            }
        }

        internal static unsafe global::System.Uri get_Uri(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[11](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.System.Uri.FromAbi(__retval);
            }
            finally
            {
                global::ABI.System.Uri.DisposeAbi(__retval);
            }
        }
        internal static unsafe void set_Uri(IObjectReference _obj, global::System.Uri value)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __value = default;
            try
            {
                __value = global::ABI.System.Uri.CreateMarshaler2(value);
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, int>**)ThisPtr)[12](ThisPtr, MarshalInspectable<object>.GetAbi(__value)));
                global::System.GC.KeepAlive(_obj);
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__value);
            }
        }



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0xB4, 0x70, 0x6B, 0x87, 0x23, 0x29, 0x85, 0x57, 0x9C, 0xEA, 0x2E, 0x44, 0xAA, 0x7, 0x61, 0xBD };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("876B70B4-2923-5785-9CEA-2E44AA0761BD")]
    internal interface INavigationEventArgs : global::Microsoft.UI.Xaml.Navigation.INavigationEventArgs
    {
    }
    internal static class INavigationFailedEventArgsMethods
    {

        internal static unsafe global::System.Exception get_Exception(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::ABI.System.Exception __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::ABI.System.Exception*, int>**)ThisPtr)[6](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.System.Exception.FromAbi(__retval);
            }
            finally
            {
                global::ABI.System.Exception.DisposeAbi(__retval);
            }
        }

        internal static unsafe bool get_Handled(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            byte __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, byte*, int>**)ThisPtr)[7](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval != 0;
        }
        internal static unsafe void set_Handled(IObjectReference _obj, bool value)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, byte, int>**)ThisPtr)[8](ThisPtr, (byte)(value ? 1 : 0)));
            global::System.GC.KeepAlive(_obj);
        }

        internal static unsafe global::System.Type get_SourcePageType(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::ABI.System.Type __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::ABI.System.Type*, int>**)ThisPtr)[9](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.System.Type.FromAbi(__retval);
            }
            finally
            {
                global::ABI.System.Type.DisposeAbi(__retval);
            }
        }



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0xA0, 0xF9, 0x8, 0xF8, 0xC, 0x13, 0x74, 0x59, 0x87, 0xF8, 0x44, 0x33, 0x27, 0x1A, 0x35, 0xA9 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("F808F9A0-130C-5974-87F8-4433271A35A9")]
    internal interface INavigationFailedEventArgs : global::Microsoft.UI.Xaml.Navigation.INavigationFailedEventArgs
    {
    }
    internal static class IPageStackEntryMethods
    {

        internal static unsafe global::Microsoft.UI.Xaml.Media.Animation.NavigationTransitionInfo get_NavigationTransitionInfo(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[8](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Xaml.Media.Animation.NavigationTransitionInfo.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.UI.Xaml.Media.Animation.NavigationTransitionInfo.DisposeAbi(__retval);
            }
        }

        internal static unsafe object get_Parameter(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[7](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return MarshalInspectable<object>.FromAbi(__retval);
            }
            finally
            {
                MarshalInspectable<object>.DisposeAbi(__retval);
            }
        }

        internal static unsafe global::System.Type get_SourcePageType(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::ABI.System.Type __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::ABI.System.Type*, int>**)ThisPtr)[6](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.System.Type.FromAbi(__retval);
            }
            finally
            {
                global::ABI.System.Type.DisposeAbi(__retval);
            }
        }



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0x6E, 0xF5, 0x91, 0xD5, 0x62, 0x42, 0x91, 0x5C, 0x9D, 0x79, 0x29, 0x16, 0x5C, 0xD8, 0x21, 0x0 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("D591F56E-4262-5C91-9D79-29165CD82100")]
    internal interface IPageStackEntry : global::Microsoft.UI.Xaml.Navigation.IPageStackEntry
    {
    }
    internal static class IPageStackEntryFactoryMethods
    {


        internal static unsafe global::Microsoft.UI.Xaml.Navigation.PageStackEntry CreateInstance(IObjectReference _obj, global::System.Type sourcePageType, object parameter, global::Microsoft.UI.Xaml.Media.Animation.NavigationTransitionInfo navigationTransitionInfo)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __parameter = default;
            ObjectReferenceValue __navigationTransitionInfo = default;
            IntPtr __retval = default;
            try
            {
                __parameter = MarshalInspectable<object>.CreateMarshaler2(parameter);
                __navigationTransitionInfo = global::ABI.Microsoft.UI.Xaml.Media.Animation.NavigationTransitionInfo.CreateMarshaler2(navigationTransitionInfo);
                global::ABI.System.Type.Pinnable __sourcePageType = new(sourcePageType);
                fixed(void* ___sourcePageType = __sourcePageType)
                {
                    global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::ABI.System.Type, IntPtr, IntPtr, IntPtr*, int>**)ThisPtr)[6](ThisPtr, global::ABI.System.Type.GetAbi(ref __sourcePageType), MarshalInspectable<object>.GetAbi(__parameter), MarshalInspectable<object>.GetAbi(__navigationTransitionInfo), &__retval));
                    global::System.GC.KeepAlive(_obj);
                    return global::ABI.Microsoft.UI.Xaml.Navigation.PageStackEntry.FromAbi(__retval);
                }
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__parameter);
                MarshalInspectable<object>.DisposeMarshaler(__navigationTransitionInfo);
                global::ABI.Microsoft.UI.Xaml.Navigation.PageStackEntry.DisposeAbi(__retval);
            }
        }


        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0x69, 0x94, 0x5A, 0x7E, 0x8, 0x61, 0x92, 0x5E, 0xA4, 0x99, 0x5E, 0xE9, 0xF0, 0x65, 0xA6, 0x8A };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("7E5A9469-6108-5E92-A499-5EE9F065A68A")]
    internal interface IPageStackEntryFactory : global::Microsoft.UI.Xaml.Navigation.IPageStackEntryFactory
    {
    }
    internal static class IPageStackEntryStaticsMethods
    {

        internal static unsafe global::Microsoft.UI.Xaml.DependencyProperty get_SourcePageTypeProperty(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[6](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Microsoft.UI.Xaml.DependencyProperty.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Microsoft.UI.Xaml.DependencyProperty.DisposeAbi(__retval);
            }
        }



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0xB7, 0x4C, 0x1D, 0x2F, 0x3B, 0x92, 0xBB, 0x59, 0xBF, 0xC4, 0x75, 0x9, 0x33, 0xF2, 0x83, 0x85 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("2F1D4CB7-923B-59BB-BFC4-750933F28385")]
    internal interface IPageStackEntryStatics : global::Microsoft.UI.Xaml.Navigation.IPageStackEntryStatics
    {
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    [Guid("8631B517-6D8E-58EE-82FE-D4034D1BD7C1")]
    public static class NavigatedEventHandler
    {
        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0x17, 0xB5, 0x31, 0x86, 0x8E, 0x6D, 0xEE, 0x58, 0x82, 0xFE, 0xD4, 0x3, 0x4D, 0x1B, 0xD7, 0xC1 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }



        public static readonly IntPtr AbiToProjectionVftablePtr;

        static unsafe NavigatedEventHandler()
        {

            AbiToProjectionVftablePtr = ComWrappersSupport.AllocateVtableMemory(typeof(NavigatedEventHandler), sizeof(IntPtr) * 4);
            *(global::WinRT.Interop.IUnknownVftbl*)AbiToProjectionVftablePtr = global::WinRT.Interop.IUnknownVftbl.AbiToProjectionVftbl;
            ((delegate* unmanaged[Stdcall]<IntPtr, IntPtr, IntPtr, int>*)AbiToProjectionVftablePtr)[3] = &Do_Abi_Invoke;
            global::WinRT.ComWrappersSupport.RegisterDelegateFactory(typeof(global::Microsoft.UI.Xaml.Navigation.NavigatedEventHandler), CreateRcw);
        }

        public static unsafe IObjectReference CreateMarshaler(global::Microsoft.UI.Xaml.Navigation.NavigatedEventHandler managedDelegate) => 
        managedDelegate is null ? null : MarshalDelegate.CreateMarshaler(managedDelegate, IID);

        public static unsafe ObjectReferenceValue CreateMarshaler2(global::Microsoft.UI.Xaml.Navigation.NavigatedEventHandler managedDelegate) => 
        MarshalDelegate.CreateMarshaler2(managedDelegate, IID);

        public static IntPtr GetAbi(IObjectReference value) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Navigation.NavigatedEventHandler>.GetAbi(value);

        public static unsafe global::Microsoft.UI.Xaml.Navigation.NavigatedEventHandler FromAbi(IntPtr nativeDelegate)
        {
            return MarshalDelegate.FromAbi<global::Microsoft.UI.Xaml.Navigation.NavigatedEventHandler>(nativeDelegate);
        }

        public static global::Microsoft.UI.Xaml.Navigation.NavigatedEventHandler CreateRcw(IntPtr ptr)
        {
            return new global::Microsoft.UI.Xaml.Navigation.NavigatedEventHandler(new NativeDelegateWrapper(ComWrappersSupport.GetObjectReferenceForInterface<IUnknownVftbl>(ptr, IID)).Invoke);
        }

        #if !NET
        [global::WinRT.ObjectReferenceWrapper(nameof(_nativeDelegate))]
        private sealed class NativeDelegateWrapper
        #else
        private sealed class NativeDelegateWrapper : IWinRTObject
        #endif
        {
            private readonly ObjectReference<global::WinRT.Interop.IUnknownVftbl> _nativeDelegate;

            public NativeDelegateWrapper(ObjectReference<global::WinRT.Interop.IUnknownVftbl> nativeDelegate)
            {
                _nativeDelegate = nativeDelegate;
            }

            #if NET
            IObjectReference IWinRTObject.NativeObject => _nativeDelegate;
            bool IWinRTObject.HasUnwrappableNativeObject => true;
            private volatile global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> _queryInterfaceCache;
            private global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> MakeQueryInterfaceCache()
            {
                global::System.Threading.Interlocked.CompareExchange(ref _queryInterfaceCache, new global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference>(), null); 
                return _queryInterfaceCache;
            }
            global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> IWinRTObject.QueryInterfaceCache => _queryInterfaceCache ?? MakeQueryInterfaceCache();
            private volatile global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> _additionalTypeData;
            private global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> MakeAdditionalTypeData()
            {
                global::System.Threading.Interlocked.CompareExchange(ref _additionalTypeData, new global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object>(), null); 
                return _additionalTypeData;
            }
            global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> IWinRTObject.AdditionalTypeData => _additionalTypeData ?? MakeAdditionalTypeData();
            #endif

            public unsafe void Invoke(object sender, global::Microsoft.UI.Xaml.Navigation.NavigationEventArgs e)
            {{
                IntPtr ThisPtr = _nativeDelegate.ThisPtr;
                var abiInvoke = (delegate* unmanaged[Stdcall]<IntPtr, IntPtr, IntPtr, int>)(*(void***)_nativeDelegate.ThisPtr)[3];
                ObjectReferenceValue __sender = default;
                ObjectReferenceValue __e = default;
                try
                {
                    __sender = MarshalInspectable<object>.CreateMarshaler2(sender);
                    __e = global::ABI.Microsoft.UI.Xaml.Navigation.NavigationEventArgs.CreateMarshaler2(e);
                    global::WinRT.ExceptionHelpers.ThrowExceptionForHR(abiInvoke(ThisPtr, MarshalInspectable<object>.GetAbi(__sender), MarshalInspectable<object>.GetAbi(__e)));
                    global::System.GC.KeepAlive(_nativeDelegate);
                }
                finally
                {
                    MarshalInspectable<object>.DisposeMarshaler(__sender);
                    MarshalInspectable<object>.DisposeMarshaler(__e);
                }
            }
            }
        }

        public static IntPtr FromManaged(global::Microsoft.UI.Xaml.Navigation.NavigatedEventHandler managedDelegate) => CreateMarshaler2(managedDelegate).Detach();

        public static void DisposeMarshaler(IObjectReference value) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Navigation.NavigatedEventHandler>.DisposeMarshaler(value);

        public static void DisposeAbi(IntPtr abi) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Navigation.NavigatedEventHandler>.DisposeAbi(abi);

        public static unsafe MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Navigation.NavigatedEventHandler>.MarshalerArray CreateMarshalerArray(global::Microsoft.UI.Xaml.Navigation.NavigatedEventHandler[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Navigation.NavigatedEventHandler>.CreateMarshalerArray2(array, (o) => CreateMarshaler2(o));
        public static (int length, IntPtr data) GetAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Navigation.NavigatedEventHandler>.GetAbiArray(box);
        public static unsafe global::Microsoft.UI.Xaml.Navigation.NavigatedEventHandler[] FromAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Navigation.NavigatedEventHandler>.FromAbiArray(box, FromAbi);
        public static void CopyAbiArray(global::Microsoft.UI.Xaml.Navigation.NavigatedEventHandler[] array, object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Navigation.NavigatedEventHandler>.CopyAbiArray(array, box, FromAbi);
        public static (int length, IntPtr data) FromManagedArray(global::Microsoft.UI.Xaml.Navigation.NavigatedEventHandler[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Navigation.NavigatedEventHandler>.FromManagedArray(array, (o) => FromManaged(o));
        public static void DisposeMarshalerArray(MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Navigation.NavigatedEventHandler>.MarshalerArray array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Navigation.NavigatedEventHandler>.DisposeMarshalerArray(array);
        public static unsafe void DisposeAbiArray(object box) => MarshalInspectable<object>.DisposeAbiArray(box);


        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvStdcall) })]
        private static unsafe int Do_Abi_Invoke(IntPtr thisPtr, IntPtr sender, IntPtr e)
        {



            try
            {

                global::WinRT.ComWrappersSupport.FindObject<global::Microsoft.UI.Xaml.Navigation.NavigatedEventHandler>(thisPtr).Invoke(MarshalInspectable<object>.FromAbi(sender), global::ABI.Microsoft.UI.Xaml.Navigation.NavigationEventArgs.FromAbi(e))
                ;

            }
            catch (Exception __exception__)
            {
                global::WinRT.ExceptionHelpers.SetErrorInfo(__exception__);
                return global::WinRT.ExceptionHelpers.GetHRForException(__exception__);
            }
            return 0;
        }
    }


    internal sealed class NavigatedEventHandlerWinRTTypeDetails : global::WinRT.DelegateTypeDetails<global::Microsoft.UI.Xaml.Navigation.NavigatedEventHandler>
    {
        public override ComWrappers.ComInterfaceEntry GetDelegateInterface()
        {
            return new global::System.Runtime.InteropServices.ComWrappers.ComInterfaceEntry
            {
                IID = NavigatedEventHandler.IID,
                Vtable = NavigatedEventHandler.AbiToProjectionVftablePtr
            };
        }
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    public struct NavigatingCancelEventArgs
    {

        public static IObjectReference CreateMarshaler(global::Microsoft.UI.Xaml.Navigation.NavigatingCancelEventArgs obj) => obj is null ? null : MarshalInspectable<global::Microsoft.UI.Xaml.Navigation.NavigatingCancelEventArgs>.CreateMarshaler<IUnknownVftbl>(obj, global::ABI.Microsoft.UI.Xaml.Navigation.INavigatingCancelEventArgsMethods.IID);
        public static ObjectReferenceValue CreateMarshaler2(global::Microsoft.UI.Xaml.Navigation.NavigatingCancelEventArgs obj) => MarshalInspectable<object>.CreateMarshaler2(obj, global::ABI.Microsoft.UI.Xaml.Navigation.INavigatingCancelEventArgsMethods.IID);
        public static IntPtr GetAbi(IObjectReference value) => value is null ? IntPtr.Zero : MarshalInterfaceHelper<object>.GetAbi(value);
        public static global::Microsoft.UI.Xaml.Navigation.NavigatingCancelEventArgs FromAbi(IntPtr thisPtr) => global::Microsoft.UI.Xaml.Navigation.NavigatingCancelEventArgs.FromAbi(thisPtr);
        public static IntPtr FromManaged(global::Microsoft.UI.Xaml.Navigation.NavigatingCancelEventArgs obj) => obj is null ? IntPtr.Zero : CreateMarshaler2(obj).Detach();
        public static unsafe MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Navigation.NavigatingCancelEventArgs>.MarshalerArray CreateMarshalerArray(global::Microsoft.UI.Xaml.Navigation.NavigatingCancelEventArgs[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Navigation.NavigatingCancelEventArgs>.CreateMarshalerArray2(array, (o) => CreateMarshaler2(o));
        public static (int length, IntPtr data) GetAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Navigation.NavigatingCancelEventArgs>.GetAbiArray(box);
        public static unsafe global::Microsoft.UI.Xaml.Navigation.NavigatingCancelEventArgs[] FromAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Navigation.NavigatingCancelEventArgs>.FromAbiArray(box, FromAbi);
        public static void CopyAbiArray(global::Microsoft.UI.Xaml.Navigation.NavigatingCancelEventArgs[] array, object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Navigation.NavigatingCancelEventArgs>.CopyAbiArray(array, box, FromAbi);
        public static (int length, IntPtr data) FromManagedArray(global::Microsoft.UI.Xaml.Navigation.NavigatingCancelEventArgs[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Navigation.NavigatingCancelEventArgs>.FromManagedArray(array, (o) => FromManaged(o));
        public static void DisposeMarshaler(IObjectReference value) => MarshalInspectable<object>.DisposeMarshaler(value);
        public static void DisposeMarshalerArray(MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Navigation.NavigatingCancelEventArgs>.MarshalerArray array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Navigation.NavigatingCancelEventArgs>.DisposeMarshalerArray(array);
        public static void DisposeAbi(IntPtr abi) => MarshalInspectable<object>.DisposeAbi(abi);
        public static unsafe void DisposeAbiArray(object box) => MarshalInspectable<object>.DisposeAbiArray(box);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    internal sealed class NavigatingCancelEventArgsRcwFactoryAttribute : global::WinRT.WinRTImplementationTypeRcwFactoryAttribute
    {
        public override object CreateInstance(global::WinRT.IInspectable inspectable)
            => new global::Microsoft.UI.Xaml.Navigation.NavigatingCancelEventArgs(inspectable.ObjRef);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    [Guid("FCAE1401-EC94-565F-9F48-7C4B6272B3B1")]
    public static class NavigatingCancelEventHandler
    {
        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0x1, 0x14, 0xAE, 0xFC, 0x94, 0xEC, 0x5F, 0x56, 0x9F, 0x48, 0x7C, 0x4B, 0x62, 0x72, 0xB3, 0xB1 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }



        public static readonly IntPtr AbiToProjectionVftablePtr;

        static unsafe NavigatingCancelEventHandler()
        {

            AbiToProjectionVftablePtr = ComWrappersSupport.AllocateVtableMemory(typeof(NavigatingCancelEventHandler), sizeof(IntPtr) * 4);
            *(global::WinRT.Interop.IUnknownVftbl*)AbiToProjectionVftablePtr = global::WinRT.Interop.IUnknownVftbl.AbiToProjectionVftbl;
            ((delegate* unmanaged[Stdcall]<IntPtr, IntPtr, IntPtr, int>*)AbiToProjectionVftablePtr)[3] = &Do_Abi_Invoke;
            global::WinRT.ComWrappersSupport.RegisterDelegateFactory(typeof(global::Microsoft.UI.Xaml.Navigation.NavigatingCancelEventHandler), CreateRcw);
        }

        public static unsafe IObjectReference CreateMarshaler(global::Microsoft.UI.Xaml.Navigation.NavigatingCancelEventHandler managedDelegate) => 
        managedDelegate is null ? null : MarshalDelegate.CreateMarshaler(managedDelegate, IID);

        public static unsafe ObjectReferenceValue CreateMarshaler2(global::Microsoft.UI.Xaml.Navigation.NavigatingCancelEventHandler managedDelegate) => 
        MarshalDelegate.CreateMarshaler2(managedDelegate, IID);

        public static IntPtr GetAbi(IObjectReference value) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Navigation.NavigatingCancelEventHandler>.GetAbi(value);

        public static unsafe global::Microsoft.UI.Xaml.Navigation.NavigatingCancelEventHandler FromAbi(IntPtr nativeDelegate)
        {
            return MarshalDelegate.FromAbi<global::Microsoft.UI.Xaml.Navigation.NavigatingCancelEventHandler>(nativeDelegate);
        }

        public static global::Microsoft.UI.Xaml.Navigation.NavigatingCancelEventHandler CreateRcw(IntPtr ptr)
        {
            return new global::Microsoft.UI.Xaml.Navigation.NavigatingCancelEventHandler(new NativeDelegateWrapper(ComWrappersSupport.GetObjectReferenceForInterface<IUnknownVftbl>(ptr, IID)).Invoke);
        }

        #if !NET
        [global::WinRT.ObjectReferenceWrapper(nameof(_nativeDelegate))]
        private sealed class NativeDelegateWrapper
        #else
        private sealed class NativeDelegateWrapper : IWinRTObject
        #endif
        {
            private readonly ObjectReference<global::WinRT.Interop.IUnknownVftbl> _nativeDelegate;

            public NativeDelegateWrapper(ObjectReference<global::WinRT.Interop.IUnknownVftbl> nativeDelegate)
            {
                _nativeDelegate = nativeDelegate;
            }

            #if NET
            IObjectReference IWinRTObject.NativeObject => _nativeDelegate;
            bool IWinRTObject.HasUnwrappableNativeObject => true;
            private volatile global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> _queryInterfaceCache;
            private global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> MakeQueryInterfaceCache()
            {
                global::System.Threading.Interlocked.CompareExchange(ref _queryInterfaceCache, new global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference>(), null); 
                return _queryInterfaceCache;
            }
            global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> IWinRTObject.QueryInterfaceCache => _queryInterfaceCache ?? MakeQueryInterfaceCache();
            private volatile global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> _additionalTypeData;
            private global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> MakeAdditionalTypeData()
            {
                global::System.Threading.Interlocked.CompareExchange(ref _additionalTypeData, new global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object>(), null); 
                return _additionalTypeData;
            }
            global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> IWinRTObject.AdditionalTypeData => _additionalTypeData ?? MakeAdditionalTypeData();
            #endif

            public unsafe void Invoke(object sender, global::Microsoft.UI.Xaml.Navigation.NavigatingCancelEventArgs e)
            {{
                IntPtr ThisPtr = _nativeDelegate.ThisPtr;
                var abiInvoke = (delegate* unmanaged[Stdcall]<IntPtr, IntPtr, IntPtr, int>)(*(void***)_nativeDelegate.ThisPtr)[3];
                ObjectReferenceValue __sender = default;
                ObjectReferenceValue __e = default;
                try
                {
                    __sender = MarshalInspectable<object>.CreateMarshaler2(sender);
                    __e = global::ABI.Microsoft.UI.Xaml.Navigation.NavigatingCancelEventArgs.CreateMarshaler2(e);
                    global::WinRT.ExceptionHelpers.ThrowExceptionForHR(abiInvoke(ThisPtr, MarshalInspectable<object>.GetAbi(__sender), MarshalInspectable<object>.GetAbi(__e)));
                    global::System.GC.KeepAlive(_nativeDelegate);
                }
                finally
                {
                    MarshalInspectable<object>.DisposeMarshaler(__sender);
                    MarshalInspectable<object>.DisposeMarshaler(__e);
                }
            }
            }
        }

        public static IntPtr FromManaged(global::Microsoft.UI.Xaml.Navigation.NavigatingCancelEventHandler managedDelegate) => CreateMarshaler2(managedDelegate).Detach();

        public static void DisposeMarshaler(IObjectReference value) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Navigation.NavigatingCancelEventHandler>.DisposeMarshaler(value);

        public static void DisposeAbi(IntPtr abi) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Navigation.NavigatingCancelEventHandler>.DisposeAbi(abi);

        public static unsafe MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Navigation.NavigatingCancelEventHandler>.MarshalerArray CreateMarshalerArray(global::Microsoft.UI.Xaml.Navigation.NavigatingCancelEventHandler[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Navigation.NavigatingCancelEventHandler>.CreateMarshalerArray2(array, (o) => CreateMarshaler2(o));
        public static (int length, IntPtr data) GetAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Navigation.NavigatingCancelEventHandler>.GetAbiArray(box);
        public static unsafe global::Microsoft.UI.Xaml.Navigation.NavigatingCancelEventHandler[] FromAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Navigation.NavigatingCancelEventHandler>.FromAbiArray(box, FromAbi);
        public static void CopyAbiArray(global::Microsoft.UI.Xaml.Navigation.NavigatingCancelEventHandler[] array, object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Navigation.NavigatingCancelEventHandler>.CopyAbiArray(array, box, FromAbi);
        public static (int length, IntPtr data) FromManagedArray(global::Microsoft.UI.Xaml.Navigation.NavigatingCancelEventHandler[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Navigation.NavigatingCancelEventHandler>.FromManagedArray(array, (o) => FromManaged(o));
        public static void DisposeMarshalerArray(MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Navigation.NavigatingCancelEventHandler>.MarshalerArray array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Navigation.NavigatingCancelEventHandler>.DisposeMarshalerArray(array);
        public static unsafe void DisposeAbiArray(object box) => MarshalInspectable<object>.DisposeAbiArray(box);


        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvStdcall) })]
        private static unsafe int Do_Abi_Invoke(IntPtr thisPtr, IntPtr sender, IntPtr e)
        {



            try
            {

                global::WinRT.ComWrappersSupport.FindObject<global::Microsoft.UI.Xaml.Navigation.NavigatingCancelEventHandler>(thisPtr).Invoke(MarshalInspectable<object>.FromAbi(sender), global::ABI.Microsoft.UI.Xaml.Navigation.NavigatingCancelEventArgs.FromAbi(e))
                ;

            }
            catch (Exception __exception__)
            {
                global::WinRT.ExceptionHelpers.SetErrorInfo(__exception__);
                return global::WinRT.ExceptionHelpers.GetHRForException(__exception__);
            }
            return 0;
        }
    }


    internal sealed class NavigatingCancelEventHandlerWinRTTypeDetails : global::WinRT.DelegateTypeDetails<global::Microsoft.UI.Xaml.Navigation.NavigatingCancelEventHandler>
    {
        public override ComWrappers.ComInterfaceEntry GetDelegateInterface()
        {
            return new global::System.Runtime.InteropServices.ComWrappers.ComInterfaceEntry
            {
                IID = NavigatingCancelEventHandler.IID,
                Vtable = NavigatingCancelEventHandler.AbiToProjectionVftablePtr
            };
        }
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    public struct NavigationEventArgs
    {

        public static IObjectReference CreateMarshaler(global::Microsoft.UI.Xaml.Navigation.NavigationEventArgs obj) => obj is null ? null : MarshalInspectable<global::Microsoft.UI.Xaml.Navigation.NavigationEventArgs>.CreateMarshaler<IUnknownVftbl>(obj, global::ABI.Microsoft.UI.Xaml.Navigation.INavigationEventArgsMethods.IID);
        public static ObjectReferenceValue CreateMarshaler2(global::Microsoft.UI.Xaml.Navigation.NavigationEventArgs obj) => MarshalInspectable<object>.CreateMarshaler2(obj, global::ABI.Microsoft.UI.Xaml.Navigation.INavigationEventArgsMethods.IID);
        public static IntPtr GetAbi(IObjectReference value) => value is null ? IntPtr.Zero : MarshalInterfaceHelper<object>.GetAbi(value);
        public static global::Microsoft.UI.Xaml.Navigation.NavigationEventArgs FromAbi(IntPtr thisPtr) => global::Microsoft.UI.Xaml.Navigation.NavigationEventArgs.FromAbi(thisPtr);
        public static IntPtr FromManaged(global::Microsoft.UI.Xaml.Navigation.NavigationEventArgs obj) => obj is null ? IntPtr.Zero : CreateMarshaler2(obj).Detach();
        public static unsafe MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Navigation.NavigationEventArgs>.MarshalerArray CreateMarshalerArray(global::Microsoft.UI.Xaml.Navigation.NavigationEventArgs[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Navigation.NavigationEventArgs>.CreateMarshalerArray2(array, (o) => CreateMarshaler2(o));
        public static (int length, IntPtr data) GetAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Navigation.NavigationEventArgs>.GetAbiArray(box);
        public static unsafe global::Microsoft.UI.Xaml.Navigation.NavigationEventArgs[] FromAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Navigation.NavigationEventArgs>.FromAbiArray(box, FromAbi);
        public static void CopyAbiArray(global::Microsoft.UI.Xaml.Navigation.NavigationEventArgs[] array, object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Navigation.NavigationEventArgs>.CopyAbiArray(array, box, FromAbi);
        public static (int length, IntPtr data) FromManagedArray(global::Microsoft.UI.Xaml.Navigation.NavigationEventArgs[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Navigation.NavigationEventArgs>.FromManagedArray(array, (o) => FromManaged(o));
        public static void DisposeMarshaler(IObjectReference value) => MarshalInspectable<object>.DisposeMarshaler(value);
        public static void DisposeMarshalerArray(MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Navigation.NavigationEventArgs>.MarshalerArray array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Navigation.NavigationEventArgs>.DisposeMarshalerArray(array);
        public static void DisposeAbi(IntPtr abi) => MarshalInspectable<object>.DisposeAbi(abi);
        public static unsafe void DisposeAbiArray(object box) => MarshalInspectable<object>.DisposeAbiArray(box);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    internal sealed class NavigationEventArgsRcwFactoryAttribute : global::WinRT.WinRTImplementationTypeRcwFactoryAttribute
    {
        public override object CreateInstance(global::WinRT.IInspectable inspectable)
            => new global::Microsoft.UI.Xaml.Navigation.NavigationEventArgs(inspectable.ObjRef);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    public struct NavigationFailedEventArgs
    {

        public static IObjectReference CreateMarshaler(global::Microsoft.UI.Xaml.Navigation.NavigationFailedEventArgs obj) => obj is null ? null : MarshalInspectable<global::Microsoft.UI.Xaml.Navigation.NavigationFailedEventArgs>.CreateMarshaler<IUnknownVftbl>(obj, global::ABI.Microsoft.UI.Xaml.Navigation.INavigationFailedEventArgsMethods.IID);
        public static ObjectReferenceValue CreateMarshaler2(global::Microsoft.UI.Xaml.Navigation.NavigationFailedEventArgs obj) => MarshalInspectable<object>.CreateMarshaler2(obj, global::ABI.Microsoft.UI.Xaml.Navigation.INavigationFailedEventArgsMethods.IID);
        public static IntPtr GetAbi(IObjectReference value) => value is null ? IntPtr.Zero : MarshalInterfaceHelper<object>.GetAbi(value);
        public static global::Microsoft.UI.Xaml.Navigation.NavigationFailedEventArgs FromAbi(IntPtr thisPtr) => global::Microsoft.UI.Xaml.Navigation.NavigationFailedEventArgs.FromAbi(thisPtr);
        public static IntPtr FromManaged(global::Microsoft.UI.Xaml.Navigation.NavigationFailedEventArgs obj) => obj is null ? IntPtr.Zero : CreateMarshaler2(obj).Detach();
        public static unsafe MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Navigation.NavigationFailedEventArgs>.MarshalerArray CreateMarshalerArray(global::Microsoft.UI.Xaml.Navigation.NavigationFailedEventArgs[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Navigation.NavigationFailedEventArgs>.CreateMarshalerArray2(array, (o) => CreateMarshaler2(o));
        public static (int length, IntPtr data) GetAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Navigation.NavigationFailedEventArgs>.GetAbiArray(box);
        public static unsafe global::Microsoft.UI.Xaml.Navigation.NavigationFailedEventArgs[] FromAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Navigation.NavigationFailedEventArgs>.FromAbiArray(box, FromAbi);
        public static void CopyAbiArray(global::Microsoft.UI.Xaml.Navigation.NavigationFailedEventArgs[] array, object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Navigation.NavigationFailedEventArgs>.CopyAbiArray(array, box, FromAbi);
        public static (int length, IntPtr data) FromManagedArray(global::Microsoft.UI.Xaml.Navigation.NavigationFailedEventArgs[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Navigation.NavigationFailedEventArgs>.FromManagedArray(array, (o) => FromManaged(o));
        public static void DisposeMarshaler(IObjectReference value) => MarshalInspectable<object>.DisposeMarshaler(value);
        public static void DisposeMarshalerArray(MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Navigation.NavigationFailedEventArgs>.MarshalerArray array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Navigation.NavigationFailedEventArgs>.DisposeMarshalerArray(array);
        public static void DisposeAbi(IntPtr abi) => MarshalInspectable<object>.DisposeAbi(abi);
        public static unsafe void DisposeAbiArray(object box) => MarshalInspectable<object>.DisposeAbiArray(box);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    internal sealed class NavigationFailedEventArgsRcwFactoryAttribute : global::WinRT.WinRTImplementationTypeRcwFactoryAttribute
    {
        public override object CreateInstance(global::WinRT.IInspectable inspectable)
            => new global::Microsoft.UI.Xaml.Navigation.NavigationFailedEventArgs(inspectable.ObjRef);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    [Guid("97CA2B56-D6EB-5FD2-A675-A339640EEDBA")]
    public static class NavigationFailedEventHandler
    {
        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0x56, 0x2B, 0xCA, 0x97, 0xEB, 0xD6, 0xD2, 0x5F, 0xA6, 0x75, 0xA3, 0x39, 0x64, 0xE, 0xED, 0xBA };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }



        public static readonly IntPtr AbiToProjectionVftablePtr;

        static unsafe NavigationFailedEventHandler()
        {

            AbiToProjectionVftablePtr = ComWrappersSupport.AllocateVtableMemory(typeof(NavigationFailedEventHandler), sizeof(IntPtr) * 4);
            *(global::WinRT.Interop.IUnknownVftbl*)AbiToProjectionVftablePtr = global::WinRT.Interop.IUnknownVftbl.AbiToProjectionVftbl;
            ((delegate* unmanaged[Stdcall]<IntPtr, IntPtr, IntPtr, int>*)AbiToProjectionVftablePtr)[3] = &Do_Abi_Invoke;
            global::WinRT.ComWrappersSupport.RegisterDelegateFactory(typeof(global::Microsoft.UI.Xaml.Navigation.NavigationFailedEventHandler), CreateRcw);
        }

        public static unsafe IObjectReference CreateMarshaler(global::Microsoft.UI.Xaml.Navigation.NavigationFailedEventHandler managedDelegate) => 
        managedDelegate is null ? null : MarshalDelegate.CreateMarshaler(managedDelegate, IID);

        public static unsafe ObjectReferenceValue CreateMarshaler2(global::Microsoft.UI.Xaml.Navigation.NavigationFailedEventHandler managedDelegate) => 
        MarshalDelegate.CreateMarshaler2(managedDelegate, IID);

        public static IntPtr GetAbi(IObjectReference value) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Navigation.NavigationFailedEventHandler>.GetAbi(value);

        public static unsafe global::Microsoft.UI.Xaml.Navigation.NavigationFailedEventHandler FromAbi(IntPtr nativeDelegate)
        {
            return MarshalDelegate.FromAbi<global::Microsoft.UI.Xaml.Navigation.NavigationFailedEventHandler>(nativeDelegate);
        }

        public static global::Microsoft.UI.Xaml.Navigation.NavigationFailedEventHandler CreateRcw(IntPtr ptr)
        {
            return new global::Microsoft.UI.Xaml.Navigation.NavigationFailedEventHandler(new NativeDelegateWrapper(ComWrappersSupport.GetObjectReferenceForInterface<IUnknownVftbl>(ptr, IID)).Invoke);
        }

        #if !NET
        [global::WinRT.ObjectReferenceWrapper(nameof(_nativeDelegate))]
        private sealed class NativeDelegateWrapper
        #else
        private sealed class NativeDelegateWrapper : IWinRTObject
        #endif
        {
            private readonly ObjectReference<global::WinRT.Interop.IUnknownVftbl> _nativeDelegate;

            public NativeDelegateWrapper(ObjectReference<global::WinRT.Interop.IUnknownVftbl> nativeDelegate)
            {
                _nativeDelegate = nativeDelegate;
            }

            #if NET
            IObjectReference IWinRTObject.NativeObject => _nativeDelegate;
            bool IWinRTObject.HasUnwrappableNativeObject => true;
            private volatile global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> _queryInterfaceCache;
            private global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> MakeQueryInterfaceCache()
            {
                global::System.Threading.Interlocked.CompareExchange(ref _queryInterfaceCache, new global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference>(), null); 
                return _queryInterfaceCache;
            }
            global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> IWinRTObject.QueryInterfaceCache => _queryInterfaceCache ?? MakeQueryInterfaceCache();
            private volatile global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> _additionalTypeData;
            private global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> MakeAdditionalTypeData()
            {
                global::System.Threading.Interlocked.CompareExchange(ref _additionalTypeData, new global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object>(), null); 
                return _additionalTypeData;
            }
            global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> IWinRTObject.AdditionalTypeData => _additionalTypeData ?? MakeAdditionalTypeData();
            #endif

            public unsafe void Invoke(object sender, global::Microsoft.UI.Xaml.Navigation.NavigationFailedEventArgs e)
            {{
                IntPtr ThisPtr = _nativeDelegate.ThisPtr;
                var abiInvoke = (delegate* unmanaged[Stdcall]<IntPtr, IntPtr, IntPtr, int>)(*(void***)_nativeDelegate.ThisPtr)[3];
                ObjectReferenceValue __sender = default;
                ObjectReferenceValue __e = default;
                try
                {
                    __sender = MarshalInspectable<object>.CreateMarshaler2(sender);
                    __e = global::ABI.Microsoft.UI.Xaml.Navigation.NavigationFailedEventArgs.CreateMarshaler2(e);
                    global::WinRT.ExceptionHelpers.ThrowExceptionForHR(abiInvoke(ThisPtr, MarshalInspectable<object>.GetAbi(__sender), MarshalInspectable<object>.GetAbi(__e)));
                    global::System.GC.KeepAlive(_nativeDelegate);
                }
                finally
                {
                    MarshalInspectable<object>.DisposeMarshaler(__sender);
                    MarshalInspectable<object>.DisposeMarshaler(__e);
                }
            }
            }
        }

        public static IntPtr FromManaged(global::Microsoft.UI.Xaml.Navigation.NavigationFailedEventHandler managedDelegate) => CreateMarshaler2(managedDelegate).Detach();

        public static void DisposeMarshaler(IObjectReference value) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Navigation.NavigationFailedEventHandler>.DisposeMarshaler(value);

        public static void DisposeAbi(IntPtr abi) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Navigation.NavigationFailedEventHandler>.DisposeAbi(abi);

        public static unsafe MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Navigation.NavigationFailedEventHandler>.MarshalerArray CreateMarshalerArray(global::Microsoft.UI.Xaml.Navigation.NavigationFailedEventHandler[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Navigation.NavigationFailedEventHandler>.CreateMarshalerArray2(array, (o) => CreateMarshaler2(o));
        public static (int length, IntPtr data) GetAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Navigation.NavigationFailedEventHandler>.GetAbiArray(box);
        public static unsafe global::Microsoft.UI.Xaml.Navigation.NavigationFailedEventHandler[] FromAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Navigation.NavigationFailedEventHandler>.FromAbiArray(box, FromAbi);
        public static void CopyAbiArray(global::Microsoft.UI.Xaml.Navigation.NavigationFailedEventHandler[] array, object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Navigation.NavigationFailedEventHandler>.CopyAbiArray(array, box, FromAbi);
        public static (int length, IntPtr data) FromManagedArray(global::Microsoft.UI.Xaml.Navigation.NavigationFailedEventHandler[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Navigation.NavigationFailedEventHandler>.FromManagedArray(array, (o) => FromManaged(o));
        public static void DisposeMarshalerArray(MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Navigation.NavigationFailedEventHandler>.MarshalerArray array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Navigation.NavigationFailedEventHandler>.DisposeMarshalerArray(array);
        public static unsafe void DisposeAbiArray(object box) => MarshalInspectable<object>.DisposeAbiArray(box);


        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvStdcall) })]
        private static unsafe int Do_Abi_Invoke(IntPtr thisPtr, IntPtr sender, IntPtr e)
        {



            try
            {

                global::WinRT.ComWrappersSupport.FindObject<global::Microsoft.UI.Xaml.Navigation.NavigationFailedEventHandler>(thisPtr).Invoke(MarshalInspectable<object>.FromAbi(sender), global::ABI.Microsoft.UI.Xaml.Navigation.NavigationFailedEventArgs.FromAbi(e))
                ;

            }
            catch (Exception __exception__)
            {
                global::WinRT.ExceptionHelpers.SetErrorInfo(__exception__);
                return global::WinRT.ExceptionHelpers.GetHRForException(__exception__);
            }
            return 0;
        }
    }


    internal sealed class NavigationFailedEventHandlerWinRTTypeDetails : global::WinRT.DelegateTypeDetails<global::Microsoft.UI.Xaml.Navigation.NavigationFailedEventHandler>
    {
        public override ComWrappers.ComInterfaceEntry GetDelegateInterface()
        {
            return new global::System.Runtime.InteropServices.ComWrappers.ComInterfaceEntry
            {
                IID = NavigationFailedEventHandler.IID,
                Vtable = NavigationFailedEventHandler.AbiToProjectionVftablePtr
            };
        }
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    [Guid("B9E796A6-7FFE-5A63-AEF4-CBC331663B66")]
    public static class NavigationStoppedEventHandler
    {
        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0xA6, 0x96, 0xE7, 0xB9, 0xFE, 0x7F, 0x63, 0x5A, 0xAE, 0xF4, 0xCB, 0xC3, 0x31, 0x66, 0x3B, 0x66 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }



        public static readonly IntPtr AbiToProjectionVftablePtr;

        static unsafe NavigationStoppedEventHandler()
        {

            AbiToProjectionVftablePtr = ComWrappersSupport.AllocateVtableMemory(typeof(NavigationStoppedEventHandler), sizeof(IntPtr) * 4);
            *(global::WinRT.Interop.IUnknownVftbl*)AbiToProjectionVftablePtr = global::WinRT.Interop.IUnknownVftbl.AbiToProjectionVftbl;
            ((delegate* unmanaged[Stdcall]<IntPtr, IntPtr, IntPtr, int>*)AbiToProjectionVftablePtr)[3] = &Do_Abi_Invoke;
            global::WinRT.ComWrappersSupport.RegisterDelegateFactory(typeof(global::Microsoft.UI.Xaml.Navigation.NavigationStoppedEventHandler), CreateRcw);
        }

        public static unsafe IObjectReference CreateMarshaler(global::Microsoft.UI.Xaml.Navigation.NavigationStoppedEventHandler managedDelegate) => 
        managedDelegate is null ? null : MarshalDelegate.CreateMarshaler(managedDelegate, IID);

        public static unsafe ObjectReferenceValue CreateMarshaler2(global::Microsoft.UI.Xaml.Navigation.NavigationStoppedEventHandler managedDelegate) => 
        MarshalDelegate.CreateMarshaler2(managedDelegate, IID);

        public static IntPtr GetAbi(IObjectReference value) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Navigation.NavigationStoppedEventHandler>.GetAbi(value);

        public static unsafe global::Microsoft.UI.Xaml.Navigation.NavigationStoppedEventHandler FromAbi(IntPtr nativeDelegate)
        {
            return MarshalDelegate.FromAbi<global::Microsoft.UI.Xaml.Navigation.NavigationStoppedEventHandler>(nativeDelegate);
        }

        public static global::Microsoft.UI.Xaml.Navigation.NavigationStoppedEventHandler CreateRcw(IntPtr ptr)
        {
            return new global::Microsoft.UI.Xaml.Navigation.NavigationStoppedEventHandler(new NativeDelegateWrapper(ComWrappersSupport.GetObjectReferenceForInterface<IUnknownVftbl>(ptr, IID)).Invoke);
        }

        #if !NET
        [global::WinRT.ObjectReferenceWrapper(nameof(_nativeDelegate))]
        private sealed class NativeDelegateWrapper
        #else
        private sealed class NativeDelegateWrapper : IWinRTObject
        #endif
        {
            private readonly ObjectReference<global::WinRT.Interop.IUnknownVftbl> _nativeDelegate;

            public NativeDelegateWrapper(ObjectReference<global::WinRT.Interop.IUnknownVftbl> nativeDelegate)
            {
                _nativeDelegate = nativeDelegate;
            }

            #if NET
            IObjectReference IWinRTObject.NativeObject => _nativeDelegate;
            bool IWinRTObject.HasUnwrappableNativeObject => true;
            private volatile global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> _queryInterfaceCache;
            private global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> MakeQueryInterfaceCache()
            {
                global::System.Threading.Interlocked.CompareExchange(ref _queryInterfaceCache, new global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference>(), null); 
                return _queryInterfaceCache;
            }
            global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> IWinRTObject.QueryInterfaceCache => _queryInterfaceCache ?? MakeQueryInterfaceCache();
            private volatile global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> _additionalTypeData;
            private global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> MakeAdditionalTypeData()
            {
                global::System.Threading.Interlocked.CompareExchange(ref _additionalTypeData, new global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object>(), null); 
                return _additionalTypeData;
            }
            global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> IWinRTObject.AdditionalTypeData => _additionalTypeData ?? MakeAdditionalTypeData();
            #endif

            public unsafe void Invoke(object sender, global::Microsoft.UI.Xaml.Navigation.NavigationEventArgs e)
            {{
                IntPtr ThisPtr = _nativeDelegate.ThisPtr;
                var abiInvoke = (delegate* unmanaged[Stdcall]<IntPtr, IntPtr, IntPtr, int>)(*(void***)_nativeDelegate.ThisPtr)[3];
                ObjectReferenceValue __sender = default;
                ObjectReferenceValue __e = default;
                try
                {
                    __sender = MarshalInspectable<object>.CreateMarshaler2(sender);
                    __e = global::ABI.Microsoft.UI.Xaml.Navigation.NavigationEventArgs.CreateMarshaler2(e);
                    global::WinRT.ExceptionHelpers.ThrowExceptionForHR(abiInvoke(ThisPtr, MarshalInspectable<object>.GetAbi(__sender), MarshalInspectable<object>.GetAbi(__e)));
                    global::System.GC.KeepAlive(_nativeDelegate);
                }
                finally
                {
                    MarshalInspectable<object>.DisposeMarshaler(__sender);
                    MarshalInspectable<object>.DisposeMarshaler(__e);
                }
            }
            }
        }

        public static IntPtr FromManaged(global::Microsoft.UI.Xaml.Navigation.NavigationStoppedEventHandler managedDelegate) => CreateMarshaler2(managedDelegate).Detach();

        public static void DisposeMarshaler(IObjectReference value) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Navigation.NavigationStoppedEventHandler>.DisposeMarshaler(value);

        public static void DisposeAbi(IntPtr abi) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Navigation.NavigationStoppedEventHandler>.DisposeAbi(abi);

        public static unsafe MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Navigation.NavigationStoppedEventHandler>.MarshalerArray CreateMarshalerArray(global::Microsoft.UI.Xaml.Navigation.NavigationStoppedEventHandler[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Navigation.NavigationStoppedEventHandler>.CreateMarshalerArray2(array, (o) => CreateMarshaler2(o));
        public static (int length, IntPtr data) GetAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Navigation.NavigationStoppedEventHandler>.GetAbiArray(box);
        public static unsafe global::Microsoft.UI.Xaml.Navigation.NavigationStoppedEventHandler[] FromAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Navigation.NavigationStoppedEventHandler>.FromAbiArray(box, FromAbi);
        public static void CopyAbiArray(global::Microsoft.UI.Xaml.Navigation.NavigationStoppedEventHandler[] array, object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Navigation.NavigationStoppedEventHandler>.CopyAbiArray(array, box, FromAbi);
        public static (int length, IntPtr data) FromManagedArray(global::Microsoft.UI.Xaml.Navigation.NavigationStoppedEventHandler[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Navigation.NavigationStoppedEventHandler>.FromManagedArray(array, (o) => FromManaged(o));
        public static void DisposeMarshalerArray(MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Navigation.NavigationStoppedEventHandler>.MarshalerArray array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Navigation.NavigationStoppedEventHandler>.DisposeMarshalerArray(array);
        public static unsafe void DisposeAbiArray(object box) => MarshalInspectable<object>.DisposeAbiArray(box);


        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvStdcall) })]
        private static unsafe int Do_Abi_Invoke(IntPtr thisPtr, IntPtr sender, IntPtr e)
        {



            try
            {

                global::WinRT.ComWrappersSupport.FindObject<global::Microsoft.UI.Xaml.Navigation.NavigationStoppedEventHandler>(thisPtr).Invoke(MarshalInspectable<object>.FromAbi(sender), global::ABI.Microsoft.UI.Xaml.Navigation.NavigationEventArgs.FromAbi(e))
                ;

            }
            catch (Exception __exception__)
            {
                global::WinRT.ExceptionHelpers.SetErrorInfo(__exception__);
                return global::WinRT.ExceptionHelpers.GetHRForException(__exception__);
            }
            return 0;
        }
    }


    internal sealed class NavigationStoppedEventHandlerWinRTTypeDetails : global::WinRT.DelegateTypeDetails<global::Microsoft.UI.Xaml.Navigation.NavigationStoppedEventHandler>
    {
        public override ComWrappers.ComInterfaceEntry GetDelegateInterface()
        {
            return new global::System.Runtime.InteropServices.ComWrappers.ComInterfaceEntry
            {
                IID = NavigationStoppedEventHandler.IID,
                Vtable = NavigationStoppedEventHandler.AbiToProjectionVftablePtr
            };
        }
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    public struct PageStackEntry
    {

        public static IObjectReference CreateMarshaler(global::Microsoft.UI.Xaml.Navigation.PageStackEntry obj) => obj is null ? null : MarshalInspectable<global::Microsoft.UI.Xaml.Navigation.PageStackEntry>.CreateMarshaler<IUnknownVftbl>(obj, global::ABI.Microsoft.UI.Xaml.Navigation.IPageStackEntryMethods.IID);
        public static ObjectReferenceValue CreateMarshaler2(global::Microsoft.UI.Xaml.Navigation.PageStackEntry obj) => MarshalInspectable<object>.CreateMarshaler2(obj, global::ABI.Microsoft.UI.Xaml.Navigation.IPageStackEntryMethods.IID);
        public static IntPtr GetAbi(IObjectReference value) => value is null ? IntPtr.Zero : MarshalInterfaceHelper<object>.GetAbi(value);
        public static global::Microsoft.UI.Xaml.Navigation.PageStackEntry FromAbi(IntPtr thisPtr) => global::Microsoft.UI.Xaml.Navigation.PageStackEntry.FromAbi(thisPtr);
        public static IntPtr FromManaged(global::Microsoft.UI.Xaml.Navigation.PageStackEntry obj) => obj is null ? IntPtr.Zero : CreateMarshaler2(obj).Detach();
        public static unsafe MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Navigation.PageStackEntry>.MarshalerArray CreateMarshalerArray(global::Microsoft.UI.Xaml.Navigation.PageStackEntry[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Navigation.PageStackEntry>.CreateMarshalerArray2(array, (o) => CreateMarshaler2(o));
        public static (int length, IntPtr data) GetAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Navigation.PageStackEntry>.GetAbiArray(box);
        public static unsafe global::Microsoft.UI.Xaml.Navigation.PageStackEntry[] FromAbiArray(object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Navigation.PageStackEntry>.FromAbiArray(box, FromAbi);
        public static void CopyAbiArray(global::Microsoft.UI.Xaml.Navigation.PageStackEntry[] array, object box) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Navigation.PageStackEntry>.CopyAbiArray(array, box, FromAbi);
        public static (int length, IntPtr data) FromManagedArray(global::Microsoft.UI.Xaml.Navigation.PageStackEntry[] array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Navigation.PageStackEntry>.FromManagedArray(array, (o) => FromManaged(o));
        public static void DisposeMarshaler(IObjectReference value) => MarshalInspectable<object>.DisposeMarshaler(value);
        public static void DisposeMarshalerArray(MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Navigation.PageStackEntry>.MarshalerArray array) => MarshalInterfaceHelper<global::Microsoft.UI.Xaml.Navigation.PageStackEntry>.DisposeMarshalerArray(array);
        public static void DisposeAbi(IntPtr abi) => MarshalInspectable<object>.DisposeAbi(abi);
        public static unsafe void DisposeAbiArray(object box) => MarshalInspectable<object>.DisposeAbiArray(box);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    internal sealed class PageStackEntryRcwFactoryAttribute : global::WinRT.WinRTImplementationTypeRcwFactoryAttribute
    {
        public override object CreateInstance(global::WinRT.IInspectable inspectable)
            => new global::Microsoft.UI.Xaml.Navigation.PageStackEntry(inspectable.ObjRef);
    }
}
#pragma warning restore CA1416
